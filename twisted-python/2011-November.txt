From sweetnivi88 at gmail.com  Tue Nov  1 07:34:32 2011
From: sweetnivi88 at gmail.com (nivedita datta)
Date: Tue, 1 Nov 2011 17:04:32 +0530
Subject: [Twisted-Python] Limitations & future extension of twisted
Message-ID: <CA+XLstu0MRo1Zd9uiG9+A_tupcgfLJ1gNG=jx8AoS05TDfcQxQ@mail.gmail.com>

Hi all,

I have to give a talk on twisted. Can anyone let me know about the
limitations of twisted which can later be improved. Also let me know about
the possible future extensions in twisted.

Regards,
Nivedita Datta
Student, IISc Bangalore
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111101/e7abfffc/attachment-0001.htm 

From p.mayers at imperial.ac.uk  Tue Nov  1 07:41:52 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 11:41:52 +0000
Subject: [Twisted-Python] Limitations & future extension of twisted
In-Reply-To: <CA+XLstu0MRo1Zd9uiG9+A_tupcgfLJ1gNG=jx8AoS05TDfcQxQ@mail.gmail.com>
References: <CA+XLstu0MRo1Zd9uiG9+A_tupcgfLJ1gNG=jx8AoS05TDfcQxQ@mail.gmail.com>
Message-ID: <4EAFDB00.6050205@imperial.ac.uk>

On 01/11/11 11:34, nivedita datta wrote:
> Hi all,
>
> I have to give a talk on twisted. Can anyone let me know about the
> limitations of twisted which can later be improved. Also let me know
> about the possible future extensions in twisted.

Well, the big one we face: does not currently support IPv6 (although 
work is ongoing)


From solipsis at pitrou.net  Tue Nov  1 08:20:48 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Tue, 1 Nov 2011 13:20:48 +0100
Subject: [Twisted-Python] Python 3 progress: Twisted Core, Twisted Names
Message-ID: <20111101132048.4af63ef2@pitrou.net>


Hello,

Just a heads up about the continuing experiment in porting Twisted to
Python 3.  The port has reached the point where most of Twisted Core
and Twisted Names is now working.  The exceptions are: twisted.cred,
twisted.protocols.sip, twisted.python.hook.  This is validated by
running the corresponding test suites.  Details about the successful
tests are on the project page (*).

I have also validated that merging upstream changes (from Twisted's
trunk) is relatively painless. The merges produced few conflicts and
few regressions (test failures), which were easy to fix.

(*) Project page: https://bitbucket.org/pitrou/t3k/, as always.

Regards

Antoine.




From exarkun at twistedmatrix.com  Tue Nov  1 10:38:38 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 01 Nov 2011 14:38:38 -0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test suite
Message-ID: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>

Hello,

I'd like for us to decide that we will introduce no new unit tests into 
Twisted's test suite which use the global reactor.

These tests require extra complexity in trial - to support the Deferred, 
to check for left over event sources (incompletely implemented), and to 
clean up left over event sources (incompletely implemented).

The tests themselves are also complicated by the need to clean up those 
event sources.

The tests only exercise functionality against one reactor at a time 
which leads to additional challenges for buildbot.

If a test is for reactor functionality with multiple implementations, 
the ReactorBuilder-style tests are better.  If a test is for 
implementation details of a particular reactor, I think the necessary 
parts of that reactor should just be invoked directly - on a new 
instance.  For anything that's not a test for reactor functionality, no 
reactor should be involved at all (protocol implementations, etc).

I've mentioned these ideas to various people at various times, but they 
don't seem to be catching on, so I'd like to hear why and come to some 
conclusion about how we're going to write tests in the future.

Jean-Paul


From _ at lvh.cc  Tue Nov  1 10:49:27 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 1 Nov 2011 15:49:27 +0100
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
Message-ID: <F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>

+1.

Agree completely, did not realize this was still a point of contention.


From radix at twistedmatrix.com  Tue Nov  1 11:28:14 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 1 Nov 2011 11:28:14 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
Message-ID: <CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>

On Tue, Nov 1, 2011 at 10:49 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> +1.
>
> Agree completely, did not realize this was still a point of contention.
>
>

I think the only point of contention would be if you're trying to modify an
existing piece of code that uses the global reactor, and you need to write
tests for your changes (which are unrelated to the reactor usage itself),
it'd add a lot of overhead to getting your change in.

I whole-heartedly agree with the sentiment, though. We need to get rid of
the global reactor.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111101/fdc353f4/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Nov  1 12:14:29 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 16:14:29 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
Message-ID: <4EB01AE5.5060606@imperial.ac.uk>

On 01/11/11 15:28, Christopher Armstrong wrote:

> I whole-heartedly agree with the sentiment, though. We need to get rid
> of the global reactor.

Why?

I find the "pass reactor as 1st argument to everything" API pattern 
messy. I'm sure there's a good reason. What is it?


From jml at mumak.net  Tue Nov  1 12:18:16 2011
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 1 Nov 2011 12:18:16 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB01AE5.5060606@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
Message-ID: <CAHZ8tnZTWby4ay9OonHih6PJy=mU6AzqSXt86g-8dPOj4DCDDg@mail.gmail.com>

On Tue, Nov 1, 2011 at 12:14 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 01/11/11 15:28, Christopher Armstrong wrote:
>
>> I whole-heartedly agree with the sentiment, though. We need to get rid
>> of the global reactor.
>
> Why?
>
> I find the "pass reactor as 1st argument to everything" API pattern
> messy. I'm sure there's a good reason. What is it?

An insufficiently advanced sense of taste? :P

jml


From p.mayers at imperial.ac.uk  Tue Nov  1 12:45:31 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 16:45:31 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <CAHZ8tnZTWby4ay9OonHih6PJy=mU6AzqSXt86g-8dPOj4DCDDg@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>
	<CAHZ8tnZTWby4ay9OonHih6PJy=mU6AzqSXt86g-8dPOj4DCDDg@mail.gmail.com>
Message-ID: <4EB0222B.2060200@imperial.ac.uk>

On 01/11/11 16:18, Jonathan Lange wrote:
> On Tue, Nov 1, 2011 at 12:14 PM, Phil Mayers<p.mayers at imperial.ac.uk>  wrote:
>> On 01/11/11 15:28, Christopher Armstrong wrote:
>>
>>> I whole-heartedly agree with the sentiment, though. We need to get rid
>>> of the global reactor.
>>
>> Why?
>>
>> I find the "pass reactor as 1st argument to everything" API pattern
>> messy. I'm sure there's a good reason. What is it?
>
> An insufficiently advanced sense of taste? :P

Well, it's a good job I've got you guys here to educate me. On some 
mailing lists, you'd just get a flip reply.


From itamar at itamarst.org  Tue Nov  1 12:58:37 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 1 Nov 2011 12:58:37 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <4EB01AE5.5060606@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
Message-ID: <1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>

> I find the "pass reactor as 1st argument to everything" API pattern
> messy. I'm sure there's a good reason. What is it?

1. Supporting multiple reactors.

2. Unit testing: if you have an explicit object, you can replace it more
easily with a fake.



From p.mayers at imperial.ac.uk  Tue Nov  1 13:06:10 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 17:06:10 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>
	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>
Message-ID: <4EB02702.7060401@imperial.ac.uk>

On 01/11/11 16:58, Itamar Turner-Trauring wrote:
>> I find the "pass reactor as 1st argument to everything" API pattern
>> messy. I'm sure there's a good reason. What is it?
>
> 1. Supporting multiple reactors.

Interesting. I had assumed that was a "never on the cards" option. Would 
it be possible to "nest" the reactors, or would they have to run in 
separate threads? Or is this speculative?

>
> 2. Unit testing: if you have an explicit object, you can replace it more
> easily with a fake.

Ok. I realise it's a bit late in the day at this point, but I do wonder 
if something like:

def method(arg, reactor=DefaultReactor):
   ...

...with DefaultReactor being some kind of lazy singleton or weak 
reference might not have been a more friendly pattern to API users.

As it is, I might bind a keystroke to "reactor, " ;o)


From mostawesomedude at gmail.com  Tue Nov  1 13:23:05 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Tue, 1 Nov 2011 10:23:05 -0700
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB02702.7060401@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>
	<4EB02702.7060401@imperial.ac.uk>
Message-ID: <CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>

On Tue, Nov 1, 2011 at 10:06 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 01/11/11 16:58, Itamar Turner-Trauring wrote:
>>> I find the "pass reactor as 1st argument to everything" API pattern
>>> messy. I'm sure there's a good reason. What is it?
>>
>> 1. Supporting multiple reactors.
>
> Interesting. I had assumed that was a "never on the cards" option. Would
> it be possible to "nest" the reactors, or would they have to run in
> separate threads? Or is this speculative?
>
>>
>> 2. Unit testing: if you have an explicit object, you can replace it more
>> easily with a fake.
>
> Ok. I realise it's a bit late in the day at this point, but I do wonder
> if something like:
>
> def method(arg, reactor=DefaultReactor):
> ? ...
>
> ...with DefaultReactor being some kind of lazy singleton or weak
> reference might not have been a more friendly pattern to API users.
>
> As it is, I might bind a keystroke to "reactor, " ;o)

Singletons are an anti-pattern. Because the reactor is a singleton:

* We can't have multiple reactors instantiated
* We can't restart reactors
* We can't isolate certain reactor-dependent unit tests
* We have to install reactors, which requires careful ordering of imports

In Bravo, Exocet is used to set up a pseudo-sandbox. If reactor were
not a singleton, I could isolate people's usage of Twisted calls, and
force them to proxy everything. Instead, I have to grant them access
to the reactor, because it's shared global state. Is this horribly
important? No, but it does prohibit more effective sandboxing and
isolation.

Exocet needs to keep a list of modules which are so fucked that they
must be allowed to touch sys.modules to work correctly. There are two
things in that list: os.path and twisted.internet.reactor. Also, the
reactor only works if it's imported before Exocet. While Exocet's not
exactly a bastion of sanity, this doesn't speak well of the magic that
the reactor goes through in order to advertise itself globally.

Those are my reasons. They're not superb reasons from a
getting-shit-done point of view, but from a reducing-cyclopean-horrors
point of view, I think they're worth considering.

~ C.

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>


From p.mayers at imperial.ac.uk  Tue Nov  1 13:27:51 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 17:27:51 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>
	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>
Message-ID: <4EB02C17.7040301@imperial.ac.uk>

On 01/11/11 17:23, Corbin Simpson wrote:

> Singletons are an anti-pattern. Because the reactor is a singleton:

Note "some kind of".

I don't care how it's done, but I would have liked the common use case 
(single reactor) to require no extra typing. But I think that ship has 
sailed.


From glyph at twistedmatrix.com  Tue Nov  1 14:48:02 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 1 Nov 2011 14:48:02 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB01AE5.5060606@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
Message-ID: <EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>

On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:

> On 01/11/11 15:28, Christopher Armstrong wrote:
> 
>> I whole-heartedly agree with the sentiment, though. We need to get rid
>> of the global reactor.
> 
> Why?

Sometimes you want a different reactor.  The most common reason is unit testing, although if we could successfully eliminate the global reactor everywhere, there are other things that we might be able to do: slowing down or speeding up time from a protocol's perspective (by replacing IReactorTime), grouping related objects together in reactors that can be shut down together (so that reactor.stop() doesn't actually end the process); or, similarly, suspending a group of related objects (removeReader()/removeWriter() on everything) so that they can be inspected for debugging purposes, without suspending the thing doing the inspecting (a manhole python prompt).

> I find the "pass reactor as 1st argument to everything" API pattern 
> messy. I'm sure there's a good reason. What is it?

This pattern is a solution to the problem, but I agree that it is possibly not the optimal solution.  It sort of points in a direction where every possible module that might be imported becomes an argument to your function.  After all, there are plenty of other modules which have to be mocked for testing, why not just make everyone's __init__ method take sys.modules as an argument too, and never import anything?  In more complex systems this can definitely turn into a bit of a mess.

Nevertheless, "real reactor as default argument" is not a huge improvement either, because it typically breaks one level out.  If you have 'a(reactor=defaultReactor)' and then 'b()' needs to call 'a', half the time 'b' will forget to supply a reactor argument and call 'a()' passing nothing, because that appears to be the suggested API.   Any code that calls 'b()' then needs to deal with the fact that the global reactor is going to get used, even if it has a cleanly encapsulated parameter of its own.  With sufficient discipline, of course, this approach is equivalent.

So despite its imperfections, I don't have a solution better than "pass the reactor to everything" yet.  It seems to be better than the alternatives in almost every case.  The one place it's not better is when writing brief example scripts, but I suspect this is only the case because examples have to expose the semantic conflict between the way you actually get the reactor (import the singleton) and the way that you want to deal with the reactor (as a parameter).  If we had a sensible top-level way of getting the reactor I think examples which didn't use the global would read much more cleanly.

If you can think of a better solution that addresses all of these concerns simultaneously somehow, please share, I'd love to hear it :-).

-glyph



From jml at mumak.net  Tue Nov  1 15:51:10 2011
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 1 Nov 2011 15:51:10 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB0222B.2060200@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<CAHZ8tnZTWby4ay9OonHih6PJy=mU6AzqSXt86g-8dPOj4DCDDg@mail.gmail.com>
	<4EB0222B.2060200@imperial.ac.uk>
Message-ID: <CAHZ8tnb4ASBCSDcfXAF5mKJ+28nTNDr2rvq7LkvuzMWRtWF_AA@mail.gmail.com>

On Tue, Nov 1, 2011 at 12:45 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 01/11/11 16:18, Jonathan Lange wrote:
>> On Tue, Nov 1, 2011 at 12:14 PM, Phil Mayers<p.mayers at imperial.ac.uk> ?wrote:
>>> On 01/11/11 15:28, Christopher Armstrong wrote:
>>>
>>>> I whole-heartedly agree with the sentiment, though. We need to get rid
>>>> of the global reactor.
>>>
>>> Why?
>>>
>>> I find the "pass reactor as 1st argument to everything" API pattern
>>> messy. I'm sure there's a good reason. What is it?
>>
>> An insufficiently advanced sense of taste? :P
>
> Well, it's a good job I've got you guys here to educate me. On some
> mailing lists, you'd just get a flip reply.
>

Sorry, I thought you were asking us to come up with good reasons for
why you find it messy.

jml


From tretiy3 at gmail.com  Tue Nov  1 15:57:17 2011
From: tretiy3 at gmail.com (Alexey Ganzha)
Date: Tue, 01 Nov 2011 22:57:17 +0300
Subject: [Twisted-Python] any chat (comet) application for twisted web
In-Reply-To: <4EB02C17.7040301@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>
	<4EB02C17.7040301@imperial.ac.uk>
Message-ID: <4EB04F1D.6060404@gmail.com>

Hello everebody.
May be somebody knows open source chat app for twisted web?
Possible not the complete app, but just skeleton. Possible some 
snippets, pieces...
Will appreciate any suggestions.
Thanks.


From p.mayers at imperial.ac.uk  Tue Nov  1 16:15:19 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 20:15:19 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <CAHZ8tnb4ASBCSDcfXAF5mKJ+28nTNDr2rvq7LkvuzMWRtWF_AA@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<CAHZ8tnZTWby4ay9OonHih6PJy=mU6AzqSXt86g-8dPOj4DCDDg@mail.gmail.com>	<4EB0222B.2060200@imperial.ac.uk>
	<CAHZ8tnb4ASBCSDcfXAF5mKJ+28nTNDr2rvq7LkvuzMWRtWF_AA@mail.gmail.com>
Message-ID: <4EB05357.4030701@imperial.ac.uk>

On 11/01/2011 07:51 PM, Jonathan Lange wrote:

> Sorry, I thought you were asking us to come up with good reasons for
> why you find it messy.

Drat; upon re-reading my question, that meaning does suggest itself, 
doesn't it? Oh well, never mind. I blame email...


From p.mayers at imperial.ac.uk  Tue Nov  1 16:36:31 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 20:36:31 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
Message-ID: <4EB0584F.5020106@imperial.ac.uk>

On 11/01/2011 06:48 PM, Glyph wrote:

> Nevertheless, "real reactor as default argument" is not a huge
> improvement either, because it typically breaks one level out.  If
> you have 'a(reactor=defaultReactor)' and then 'b()' needs to call
> 'a', half the time 'b' will forget to supply a reactor argument and
> call 'a()' passing nothing, because that appears to be the suggested

Darn. I hadn't thought of that.

You could always walk back up the call stack looking for the 
implemenation of IReactorXXX that you want... what? Stop looking at me 
like that!

I kid of course... the right answer is to make everything a method on 
the reactor! No wait...

> So despite its imperfections, I don't have a solution better than
> "pass the reactor to everything" yet.  It seems to be better than the
> alternatives in almost every case.  The one place it's not better is
> when writing brief example scripts, but I suspect this is only the

Well, not only brief example scripts; brief actual scripts. One of the 
nice things about Twisted is that, with a bit of familiarity, you can 
knock up some really fast & powerful event-based network clients for 
ad-hoc jobs.

One example, we use a tiny script wrapping DeferredSemaphore and 
t.p.utils.getProcessOutput to parallelise SSH scanning, because 
ssh-keyscan is (ahem) poorly implemented.

Maybe I knock up more of these short 20-liners than is common? And 
typing "reactor, " a lot in them seems a bit, well... retrograde.

But you're right. Default "reactor=X" parameters will just get passed 
wrong, dammit...

> If you can think of a better solution that addresses all of these
> concerns simultaneously somehow, please share, I'd love to hear it
> :-).

Hmpf. I suspect you've covered most of the ground. If anything springs 
to mind I'll be sure to speak up!

Cheers,
Phil


From anton at iki.fi  Tue Nov  1 17:29:31 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Tue, 1 Nov 2011 23:29:31 +0200
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
Message-ID: <CADa-veR=n6ZDahome672k4vmy9p3WAk9qZt8n6LGRCCNbDK35w@mail.gmail.com>

On Tue, Nov 1, 2011 at 20:48, Glyph <glyph at twistedmatrix.com> wrote:
> On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:
>> I find the "pass reactor as 1st argument to everything" API pattern
>> messy. I'm sure there's a good reason. What is it?
>
> This pattern is a solution to the problem, but I agree that it is possibly not the optimal solution. ?It sort of points in a direction where every possible module that might be imported becomes an argument to your function. ?After all, there are plenty of other modules which have to be mocked for testing, why not just make everyone's __init__ method take sys.modules as an argument too, and never import anything? ?In more complex systems this can definitely turn into a bit of a mess.

I've often wondered whether there is a *real* use of the reactor
argument other than unit testing. I haven't had other uses for it, and
haven't seen (or perhaps not understood) real application code making
use of it. Now, I've sometimes made an argument for unit testing,
other than the obvious quality assurance, that unit tested code will
be more reusable and have better interfaces as it already is used for
at least two things: the real application and the unit test. However,
if accommodating unit testing requires sacrificing the natural
interface, then that kind of takes the edge off that argument.

Thanks to everybody for the discussion and input. Very informative!

-- Anton


From radix at twistedmatrix.com  Tue Nov  1 17:37:24 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 1 Nov 2011 17:37:24 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <CADa-veR=n6ZDahome672k4vmy9p3WAk9qZt8n6LGRCCNbDK35w@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<CADa-veR=n6ZDahome672k4vmy9p3WAk9qZt8n6LGRCCNbDK35w@mail.gmail.com>
Message-ID: <CAPkRfUQKNb3Y6XbYi-Jc-bJpAL7Me4UvA9FK_sJNZkPUuQBtgg@mail.gmail.com>

On Tue, Nov 1, 2011 at 5:29 PM, Anton Gyllenberg <anton at iki.fi> wrote:

> On Tue, Nov 1, 2011 at 20:48, Glyph <glyph at twistedmatrix.com> wrote:
> > On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:
> >> I find the "pass reactor as 1st argument to everything" API pattern
> >> messy. I'm sure there's a good reason. What is it?
> >
> > This pattern is a solution to the problem, but I agree that it is
> possibly not the optimal solution.  It sort of points in a direction where
> every possible module that might be imported becomes an argument to your
> function.  After all, there are plenty of other modules which have to be
> mocked for testing, why not just make everyone's __init__ method take
> sys.modules as an argument too, and never import anything?  In more complex
> systems this can definitely turn into a bit of a mess.
>
> I've often wondered whether there is a *real* use of the reactor
> argument other than unit testing. I haven't had other uses for it, and
> haven't seen (or perhaps not understood) real application code making
> use of it. Now, I've sometimes made an argument for unit testing,
> other than the obvious quality assurance, that unit tested code will
> be more reusable and have better interfaces as it already is used for
> at least two things: the real application and the unit test. However,
> if accommodating unit testing requires sacrificing the natural
> interface, then that kind of takes the edge off that argument.
>
> Thanks to everybody for the discussion and input. Very informative!
>
>
Here's the thing: not only does removing the global reactor make *our* unit
tests a lot nicer, it makes the unit tests of our users much easier to
write, since they will want to use our APIs in their unit tests in a way
that doesn't require ugly global hacking. I don't know how many times I
have raged at some crappy library whose code is incompatible with consumer
unit testing. Having testable interfaces is a really valuable feature we
can provide to our users.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111101/c31b5c79/attachment.htm 

From exarkun at twistedmatrix.com  Tue Nov  1 17:46:51 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 01 Nov 2011 21:46:51 -0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted
	test	suite
In-Reply-To: <CAPkRfUQKNb3Y6XbYi-Jc-bJpAL7Me4UvA9FK_sJNZkPUuQBtgg@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<CADa-veR=n6ZDahome672k4vmy9p3WAk9qZt8n6LGRCCNbDK35w@mail.gmail.com>
	<CAPkRfUQKNb3Y6XbYi-Jc-bJpAL7Me4UvA9FK_sJNZkPUuQBtgg@mail.gmail.com>
Message-ID: <20111101214651.17986.595085197.divmod.xquotient.182@localhost.localdomain>

On 09:37 pm, radix at twistedmatrix.com wrote:
>On Tue, Nov 1, 2011 at 5:29 PM, Anton Gyllenberg <anton at iki.fi> wrote:
>>On Tue, Nov 1, 2011 at 20:48, Glyph <glyph at twistedmatrix.com> wrote:
>> > On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:
>> >> I find the "pass reactor as 1st argument to everything" API pattern
>> >> messy. I'm sure there's a good reason. What is it?
>> >
>> > This pattern is a solution to the problem, but I agree that it is
>>possibly not the optimal solution.  It sort of points in a direction 
>>where
>>every possible module that might be imported becomes an argument to 
>>your
>>function.  After all, there are plenty of other modules which have to 
>>be
>>mocked for testing, why not just make everyone's __init__ method take
>>sys.modules as an argument too, and never import anything?  In more 
>>complex
>>systems this can definitely turn into a bit of a mess.
>>
>>I've often wondered whether there is a *real* use of the reactor
>>argument other than unit testing. I haven't had other uses for it, and
>>haven't seen (or perhaps not understood) real application code making
>>use of it. Now, I've sometimes made an argument for unit testing,
>>other than the obvious quality assurance, that unit tested code will
>>be more reusable and have better interfaces as it already is used for
>>at least two things: the real application and the unit test. However,
>>if accommodating unit testing requires sacrificing the natural
>>interface, then that kind of takes the edge off that argument.
>>
>>Thanks to everybody for the discussion and input. Very informative!
>Here's the thing: not only does removing the global reactor make *our* 
>unit
>tests a lot nicer, it makes the unit tests of our users much easier to
>write, since they will want to use our APIs in their unit tests in a 
>way
>that doesn't require ugly global hacking. I don't know how many times I
>have raged at some crappy library whose code is incompatible with 
>consumer
>unit testing. Having testable interfaces is a really valuable feature 
>we
>can provide to our users.

To emphasize, having testable interfaces is a *really* *really* valuable 
feature we can provide to our users.  If you're a Twisted user and 
you're not taking advantage of it, you're missing out on a lot.

Jean-Paul


From glyph at twistedmatrix.com  Tue Nov  1 18:24:07 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 1 Nov 2011 18:24:07 -0400
Subject: [Twisted-Python] any chat (comet) application for twisted web
In-Reply-To: <4EB04F1D.6060404@gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>
	<4EB02C17.7040301@imperial.ac.uk> <4EB04F1D.6060404@gmail.com>
Message-ID: <ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>


On Nov 1, 2011, at 3:57 PM, Alexey Ganzha wrote:

> Hello everebody.
> May be somebody knows open source chat app for twisted web?
> Possible not the complete app, but just skeleton. Possible some 
> snippets, pieces...
> Will appreciate any suggestions.

There is a tutorial on how to build the a chat server using Nevow here:

<http://divmodsphinx.funsize.net/nevow/chattutorial/index.html#the-chat-tutorial-series>

-glyph

From tretiy3 at gmail.com  Tue Nov  1 18:42:49 2011
From: tretiy3 at gmail.com (Alexey Ganzha)
Date: Wed, 02 Nov 2011 01:42:49 +0300
Subject: [Twisted-Python] any chat (comet) application for twisted web
In-Reply-To: <ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>	<4EB02C17.7040301@imperial.ac.uk>
	<4EB04F1D.6060404@gmail.com>
	<ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>
Message-ID: <4EB075E9.4040706@gmail.com>

Thank You very much!

On 11/02/2011 01:24 AM, Glyph wrote:
> On Nov 1, 2011, at 3:57 PM, Alexey Ganzha wrote:
>
>> Hello everebody.
>> May be somebody knows open source chat app for twisted web?
>> Possible not the complete app, but just skeleton. Possible some
>> snippets, pieces...
>> Will appreciate any suggestions.
> There is a tutorial on how to build the a chat server using Nevow here:
>
> <http://divmodsphinx.funsize.net/nevow/chattutorial/index.html#the-chat-tutorial-series>
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Tue Nov  1 19:49:34 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 1 Nov 2011 19:49:34 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
Message-ID: <1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>


On Nov 1, 2011, at 10:38 AM, exarkun at twistedmatrix.com wrote:

> Hello,
> 
> I'd like for us to decide that we will introduce no new unit tests into 
> Twisted's test suite which use the global reactor.

+1.

Let's add this to the coding standard.  It doesn't look to me like anyone's objecting.

I think it might be worth considering a grandfather clause.  If we have an outstanding patch or branch which is otherwise close to being merged, whose only problem is real-reactor tests, I think it might not be worth it to block its landing at this point.  Instead, we could file a new ticket to fix its tests separately.

I don't know of any such outstanding tickets though, so hopefully this is a baseless concern.  And I'm happy to be overruled on this point, as well, if you feel strongly about it :).

> These tests require extra complexity in trial - to support the Deferred, 
> to check for left over event sources (incompletely implemented), and to 
> clean up left over event sources (incompletely implemented).

It might be useful to have a switch in trial that reports tests which return a Deferred, to make it easy to spot violators of this policy within Twisted.

I hope you're not suggesting getting rid of the feature _entirely_ from trial, though.  The first step to doing so would be to provide a totally comprehensive, complete, documented, maintained test fake for every interface supplied by every reactor... and then some.  I know that there are hundreds of tests for applications which _use_ Twisted that I've written which would be mind-bendingly difficult to rewrite using even a fake reactor.

For one simple example, on more than one occasion I've had a high-level abstraction wrapping a proprietary C program with spawnProcess and I wanted to test high-level logic that dealt with its results in specific cases; I could of course try to test everything using fakes, but it was actually harder to write the fakes than to set up the state for the real system, and the tests were significantly higher-value as regression tests with the real components integrated.

(In some cases it's a proprietary C extension module which needs to be run via deferToThread.)

That said, there are some caveats: none of these considerations should ever apply to Twisted itself; if they do seem to apply, then it's probably time to split that code out into a separate project.

Conversely, third-party projects should be able to implicitly rely on the reactor working as expected, and therefore don't have any concerns about testing the reactor itself.

If we could publicly expose the ReactorBuilder testing facility, and make it build only a single reactor by default, then it might be possible to test code like I described by spinning up a new reactor for each thing... but in some cases, there's an expensive subprocess that I really want multiple tests to share.  Would it be possible to move the associated file descriptors between reactors?  (On a related note, I wonder, how am I ever going to get those tests to work in disttrial...)

To summarize my own position about Trial, Deferreds, and real-reactor testing in general:

Whenever it's a reasonable amount of effort, tests should always be written against in-memory data structures and avoid doing real I/O, including any real asynchrony, since tests like that are easier to maintain and debug.
Within Twisted itself, it should always be a reasonable amount of effort to write tests the "right" way.  Any code which seems to require a real-asynchronous testing approach is either out of scope for Twisted or has other architectural problems which need to be addressed before landing it.
Some applications which use Twisted will need to interact with other systems as part of their unit tests, and they should be able to use the reactor to do that.  We should provide as many facilities to help people avoid writing tests like this as possible, but there are circumstances where we couldn't possibly provide enough, so we should continue to support trial's use as an integration testing tool.
We don't currently provide enough facilities to make it easy to avoid the reactor in all the cases where you should avoid it, and we should really improve proto_helpers et. al. so that it's easier to find in-memory implementations of stuff.

> The tests themselves are also complicated by the need to clean up those 
> event sources.

Amen.  Even today, the only document I'm aware of which actually covers this in its entirety is <http://blackjml.livejournal.com/23029.html>.  I think _maybe_ the trial tutorial actually covers all the steps but I'll need to read it very carefully to see if I can spot anything that it doesn't address :).

> The tests only exercise functionality against one reactor at a time 
> which leads to additional challenges for buildbot.

AMEN.  If we made all tests ReactorBuilder tests, would we be able to kill all the alternate-reactor (i.e. -r whatever) buildbots?  It seems like that would speed up build results quite a bit.

> If a test is for reactor functionality with multiple implementations, 
> the ReactorBuilder-style tests are better.  If a test is for 
> implementation details of a particular reactor, I think the necessary 
> parts of that reactor should just be invoked directly - on a new 
> instance.  For anything that's not a test for reactor functionality, no 
> reactor should be involved at all (protocol implementations, etc).

As I said above, we have a few gaps in this area which we need to work on filling.  For example, I recently wrote some tests where I wanted an IReactorCore provider but was dismayed to discover that Twisted doesn't provide an in-memory implementor of that interface anywhere, despite the fact that all I needed to call was addSystemEventTrigger/fireSystemEventTrigger, two APIs which just manipulate lists in memory even in their "real" implementations.  I was bad open-source citizen and did not immediately file a bug!  However, writing this email made me do so <http://twistedmatrix.com/trac/ticket/5353>.

While the code that I was writing wasn't for Twisted itself, I do feel like this may be an area where the prevalence of bad examples comes from the fact that we don't give our users a lot of options for nice, isolated testing.  It's definitely easier to just use the real reactor, despite its myriad issues, than to spend a week implementing comprehensive, testable versions of the ~40-odd interfaces in twisted.internet.interfaces.  But that means that all tx* projects tend to test things in the worse style, which means that most new patch contributors are likely to be cribbing from bad examples when writing a patch for Twisted.

So I filed another ticket for another frequent sticking point for me: <http://twistedmatrix.com/trac/ticket/5354>.  Hopefully if we can make more such things popular it will more widely disseminate the skills necessary to write tests in a more self-contained style.

> I've mentioned these ideas to various people at various times, but they 
> don't seem to be catching on, so I'd like to hear why and come to some 
> conclusion about how we're going to write tests in the future.

The new Trial tutorial provides a great resource that we were lacking for a long time, so we should make reference to its section on using StringTransport and Clock frequently and with enthusiasm.  

We a similar document for ReactorBuilder though.

I think we may want to also write up a companion wiki page that is more the rhetorical rather than pedagogic side of this problem, collecting our explanations of why you really want to use in-memory stuff instead of "real" reactors.  New contributors sometimes say that they don't feel like the code is "really" being tested unless they're testing against the real implementation of something, and it may not be immediately obvious that testing against a not-real implementation is desirable in many cases.  Much of it can just be copy/pasted from this thread :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111101/77a541a4/attachment-0001.htm 

From glyph at twistedmatrix.com  Tue Nov  1 19:58:33 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 1 Nov 2011 19:58:33 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB0584F.5020106@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<4EB0584F.5020106@imperial.ac.uk>
Message-ID: <4CDB0B53-9A2B-41A1-9D3E-5BEB927EBC60@twistedmatrix.com>


On Nov 1, 2011, at 4:36 PM, Phil Mayers wrote:

> One example, we use a tiny script wrapping DeferredSemaphore and 
> t.p.utils.getProcessOutput to parallelise SSH scanning, because 
> ssh-keyscan is (ahem) poorly implemented.
> 
> Maybe I knock up more of these short 20-liners than is common? And 
> typing "reactor, " a lot in them seems a bit, well... retrograde.

Hopefully you only need to pass it in at the top level to a few things, not everywhere to everything :).

For example, with something like twisted.web.client.Agent, you pass the reactor once and then you have an object you can call methods on, you don't need to keep repeating it.  If getProcessOutput were a method of a more helpful object, perhaps you'd be able to type 'reactor' a bit less.

Another possible eventual improvement here is that Twisted include a script-running tool which creates the reactor for you and passes it, either to a specified function or as a magic global in a script.  Then you should just pass 'reactor' to the top-level stuff in your script.  Sort of like 'twistd' but for one-off things where you don't want to go to the trouble to build a plugin or even a Service.

As a bonus, such a tool could call 'reactor.run()' for you automatically, eliminating some newbie confusion about when it's appropriate to do that.  (And ideally, 'reactor.stop' when some appropriate Deferred is fired, but that gets into more thinking than I want to do about this right now...)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111101/043a6bde/attachment.htm 

From tim at commsecure.com.au  Tue Nov  1 22:20:17 2011
From: tim at commsecure.com.au (Tim Allen)
Date: Wed, 2 Nov 2011 13:20:17 +1100
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
Message-ID: <20111102022016.GA5838@ws35.commsecure.com.au>

On Tue, Nov 01, 2011 at 02:48:02PM -0400, Glyph wrote:
> If you can think of a better solution that addresses all of these
> concerns simultaneously somehow, please share, I'd love to hear it
> :-).

I'm not sure if it addresses all your concerns, but
twisted.python.context will let you set a particular value for things
you call and all their descendants (unless one of them sets a new value
in the context). I can imagine interleaving code that passes a reactor
parameter explicitly and code that grabs a reactor from the current
context without much hassle.

Tim.


From glyph at twistedmatrix.com  Tue Nov  1 23:18:12 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 1 Nov 2011 23:18:12 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <20111102022016.GA5838@ws35.commsecure.com.au>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<20111102022016.GA5838@ws35.commsecure.com.au>
Message-ID: <7214F82C-8EEC-469D-B289-5BD5C3871196@twistedmatrix.com>


On Nov 1, 2011, at 10:20 PM, Tim Allen wrote:

> On Tue, Nov 01, 2011 at 02:48:02PM -0400, Glyph wrote:
>> If you can think of a better solution that addresses all of these
>> concerns simultaneously somehow, please share, I'd love to hear it
>> :-).
> 
> I'm not sure if it addresses all your concerns, but
> twisted.python.context will let you set a particular value for things
> you call and all their descendants (unless one of them sets a new value
> in the context). I can imagine interleaving code that passes a reactor
> parameter explicitly and code that grabs a reactor from the current
> context without much hassle.

I invented twisted.python.context for this very reason!

But... I find the idea of encouraging its widespread use disconcerting.

There are a couple of issues (and if you search the web for "emacs lisp dynamic scope" you will find a whole bunch of them) but the main problem is this:

When you do context.get(something) and something isn't there... what do you do?  Whose fault is it?

As a parallel example, when a function gets called with the wrong argument, it's quite easy to figure out where the problem is: you just look at the caller, and the caller almost certainly knows who they are.  The caller somehow has to know about the signature of the callee and if they get it wrong it's an immediate and obvious runtime error.

But when code has a relationship to its caller's caller's caller's caller's caller, and there may be any amount of indirection in there (callbacks registered on Deferreds, for example) how do you find the place that really should have been the one to pass the result?  How do you know at the time you invoke something, all the context that it may require?

The immediate place I can think of where this would cause issues is with GUI callbacks.  Right now Twisted goes out of its way to make sure that you can '.connect("clicked", ...)' on a GTK widget and use any old python callback you want.  If we made the reactor context-driven, then that would work... mostly.  If Twisted's callbacks were run with the reactor present, then the GUI's callbacks might not have the reactor available to them because they lack some setup.

Of course you can probably fix that problem, but there are other places where it will crop up again; the standard idiom is to call a bunch of functions to set up event handlers, then call reactor.run().  But what if the reactor isn't available to those functions before it's run?

Et cetera, et cetera.

If you can think of a solid, robust way to specify contracts that describe what context is expected, by whom, and how it can be filled at the right time without surprising consequences, I'd love to hear it, but I won't hold my breath :).

-glyph



From dynamicgl at gmail.com  Wed Nov  2 03:10:33 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Wed, 2 Nov 2011 15:10:33 +0800
Subject: [Twisted-Python] Limitations & future extension of twisted
In-Reply-To: <4EAFDB00.6050205@imperial.ac.uk>
References: <CA+XLstu0MRo1Zd9uiG9+A_tupcgfLJ1gNG=jx8AoS05TDfcQxQ@mail.gmail.com>
	<4EAFDB00.6050205@imperial.ac.uk>
Message-ID: <CABkOF6SwhR=DEVh2rL4XP2jpkxC_b5GZQJgAXONZTLixG3M8gQ@mail.gmail.com>

Hi all

  I want to know which version of twisted will be supposed to support
IPv6...

Thanks

On Tue, Nov 1, 2011 at 7:41 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 01/11/11 11:34, nivedita datta wrote:
> > Hi all,
> >
> > I have to give a talk on twisted. Can anyone let me know about the
> > limitations of twisted which can later be improved. Also let me know
> > about the possible future extensions in twisted.
>
> Well, the big one we face: does not currently support IPv6 (although
> work is ongoing)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111102/2b8a6a8c/attachment.htm 

From p.mayers at imperial.ac.uk  Wed Nov  2 03:55:32 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 07:55:32 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>
Message-ID: <4EB0F774.30601@imperial.ac.uk>

On 11/01/2011 11:49 PM, Glyph wrote:

> of "real" reactors. New contributors sometimes say that they don't feel
> like the code is "really" being tested unless they're testing against
> the real implementation of something, and it may not be immediately
> obvious that testing against a not-real implementation is desirable in
> many cases. Much of it can just be copy/pasted from this thread :).

Without commenting on everything else in the thread - this realisation 
was something I came to late, and I feel it would have helped enormously 
if it had come earlier. So, +1 on convincing people to go for in-memory 
/ simulated transport/clock/etc.

But I'll note that most people I've seen crib from existing test code 
during the early phases of TDD, tutorials or not - and if most test code 
in Twisted uses the real reactor...


From p.mayers at imperial.ac.uk  Wed Nov  2 03:57:17 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 07:57:17 +0000
Subject: [Twisted-Python] Limitations & future extension of twisted
In-Reply-To: <CABkOF6SwhR=DEVh2rL4XP2jpkxC_b5GZQJgAXONZTLixG3M8gQ@mail.gmail.com>
References: <CA+XLstu0MRo1Zd9uiG9+A_tupcgfLJ1gNG=jx8AoS05TDfcQxQ@mail.gmail.com>	<4EAFDB00.6050205@imperial.ac.uk>
	<CABkOF6SwhR=DEVh2rL4XP2jpkxC_b5GZQJgAXONZTLixG3M8gQ@mail.gmail.com>
Message-ID: <4EB0F7DD.7070901@imperial.ac.uk>

On 11/02/2011 07:10 AM, gelin yan wrote:
> Hi all
>
> I want to know which version of twisted will be supposed to support IPv6...

http://twistedmatrix.com/trac/wiki/IPv6


From p.mayers at imperial.ac.uk  Wed Nov  2 04:05:32 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 08:05:32 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <4EB0F774.30601@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>
	<4EB0F774.30601@imperial.ac.uk>
Message-ID: <4EB0F9CC.2050801@imperial.ac.uk>

On 11/02/2011 07:55 AM, Phil Mayers wrote:

> Without commenting on everything else in the thread

s/thread/message/

Dammit...


From spam at herox.net  Wed Nov  2 05:34:27 2011
From: spam at herox.net (=?ISO-8859-15?Q?Marcel_G=E4digk?=)
Date: Wed, 02 Nov 2011 10:34:27 +0100
Subject: [Twisted-Python] Slow PB imports
Message-ID: <4EB10EA3.3030603@herox.net>

Hi,

i using the Perspective Broker and i have problems with the speed of 
importing the modules.
It takes 15 - 17 seconds for importing the Reactor and the 
PBServerFactory (or other pb imports).
If i import the reactor or the pb imports alone it takes in avg. 2-3 
seconds.

def ImportIt():
     from twisted.internet import reactor
     from twisted.spread.pb import PBServerFactory

import timeit
t = timeit.Timer(setup='from __main__ import ImportIt', stmt='ImportIt()')
print t.timeit()

How can i improve this?

I running win7 32bit SP1 on a 2,93 Ghz Core 2 Duo with python 2.7.1 and 
twisted 11.0

cheers

Marcel



From umit at oztosun.net  Wed Nov  2 06:40:56 2011
From: umit at oztosun.net (Umit Oztosun)
Date: Wed, 2 Nov 2011 12:40:56 +0200
Subject: [Twisted-Python] Interleaving long running loops
Message-ID: <CAKV7NN8F4OcyHPAA5D475069JzN23kka2ORd3P6vFii9pu38sg@mail.gmail.com>

Hello,

I have been developing a medium/large scale application using twisted
and very happy about it. It is composed of two parts, an application
server and a PyQt based client. Perspective broker is used for all
communication between client and server. Server mainly talks with a
database, formats results and sends to clients (roughly).

Most formatting is done in simple for loops (there are many different
kinds of operations which a client can choose):

@defer.inlineCallbacks
def operation():
    dbQueryResult = yield runSomeSQL()
    for item in dbQueryResult:
        process(item)

Again, most of the time these are light operations which complete in
sub-seconds. However, rarely, results may be so large that it takes
several seconds to process, and during this period all other server
processing stops (i.e. accepting new client connections).

I've written a utility function, deferredSleep(), which I call
occasionally to avoid blocking:

def deferredSleep(seconds=0.01):
    d = defer.Deferred()
    reactor.callLater(seconds, d.callback, None)
    return d

And I use it like below to avoid blocking for very large result sets:

@defer.inlineCallbacks
def operation():
    dbQueryResult = yield runSomeSQL()
    for i, item in enumerate(dbQueryResult):
        if i % 1000 == 0:
            # Breathe after a thousand iterations
            yield deferredSleep(0.01)
        process(item)

So my question is, is this an acceptable solution? And is there a more
generic way, i.e.

for item in magicalIterator(dbQueryResult):
    process(item)

I have lots of similar loops all over the place and a more generic
solution would be great. I am also aware of deferToThread but I am
trying to avoid using threads.

Regards,
--
Umit


From p.mayers at imperial.ac.uk  Wed Nov  2 07:06:45 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 11:06:45 +0000
Subject: [Twisted-Python] Interleaving long running loops
In-Reply-To: <CAKV7NN8F4OcyHPAA5D475069JzN23kka2ORd3P6vFii9pu38sg@mail.gmail.com>
References: <CAKV7NN8F4OcyHPAA5D475069JzN23kka2ORd3P6vFii9pu38sg@mail.gmail.com>
Message-ID: <4EB12445.10900@imperial.ac.uk>

On 02/11/11 10:40, Umit Oztosun wrote:

> I have lots of similar loops all over the place and a more generic
> solution would be great. I am also aware of deferToThread but I am
> trying to avoid using threads.

Well, deferToThread gives you all kinds of problems re: talking to the 
reactor from threads, so avoid.

You could try it as a cooperator

from twisted.internet import task

@defer.inlineCallbacks
def operation():
   result = yield somesql()
   # n.b. generator expression!
   work = (process(item) for item in result)
   yield task.coiterate(work)


From p.mayers at imperial.ac.uk  Wed Nov  2 07:24:11 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 11:24:11 +0000
Subject: [Twisted-Python] t.i.task.Cooperator & inlineCallbacks mashup
Message-ID: <4EB1285B.9010302@imperial.ac.uk>

I only just noticed today that if a generator passed to a 
CooperativeTask does:

   result = yield some_deferred()

...it doesn't work, because CooperativeTask doesn't .send() the result 
of the deferred bacn into the generator.

Is this intentional? If not, would that behaviour be desirable? It seems 
like it would be a useful pattern to me.


From tobias.oberstein at tavendo.de  Wed Nov  2 07:38:34 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 2 Nov 2011 04:38:34 -0700
Subject: [Twisted-Python] twistd/tac : when does logging start?
Message-ID: <634914A010D0B943A035D226786325D42D0B0D8BE6@EXVMBX020-12.exch020.serverdata.net>

I've got a Twisted application started via a tac file.

Within the tac, I also initialize a database and create a db pool for use with adbapi.

Now it seems that log messages from the network services are logged, but not from the initial DB setup stuff.

When exactly does Twistd start the logging? How can I make it start logging from the very beginning?

I've looked at the docs:

"Before startLogging is called, log messages will be discarded and errors will be written to stderr."

"If you are using twistd to run your daemon, it will take care of calling startLogging for you, ..."

but that doesn't help me.

Any hints are welcome


From luke-lists at hybrid-logic.co.uk  Wed Nov  2 07:48:01 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Wed, 02 Nov 2011 11:48:01 +0000
Subject: [Twisted-Python] twistd/tac : when does logging start?
In-Reply-To: <634914A010D0B943A035D226786325D42D0B0D8BE6@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0B0D8BE6@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <1320234481.27033.4.camel@pow>

On Wed, 2011-11-02 at 04:38 -0700, Tobias Oberstein wrote:
> I've got a Twisted application started via a tac file.
> 
> Within the tac, I also initialize a database and create a db pool for use with adbapi.
> 
> Now it seems that log messages from the network services are logged, but not from the initial DB setup stuff.
> 
> When exactly does Twistd start the logging? How can I make it start logging from the very beginning?
> 
> I've looked at the docs:
> 
> "Before startLogging is called, log messages will be discarded and errors will be written to stderr."
> 
> "If you are using twistd to run your daemon, it will take care of calling startLogging for you, ..."
> 
> but that doesn't help me.
> 
> Any hints are welcome
> 

Hi Tobias,

You need to do your intialisation (database connections, etc) in a
startService method of your application, rather than (as you're probably
doing) in the __init__ method.

Hope this helps.

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Mobile: +447791750420 (UK) / +1-415-449-1165 (US)




From tobias.oberstein at tavendo.de  Wed Nov  2 08:14:43 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 2 Nov 2011 05:14:43 -0700
Subject: [Twisted-Python] twistd/tac : when does logging start?
In-Reply-To: <1320234481.27033.4.camel@pow>
References: <634914A010D0B943A035D226786325D42D0B0D8BE6@EXVMBX020-12.exch020.serverdata.net>
	<1320234481.27033.4.camel@pow>
Message-ID: <634914A010D0B943A035D226786325D42D0B0D8BF1@EXVMBX020-12.exch020.serverdata.net>

> Hi Tobias,
> 
> You need to do your intialisation (database connections, etc) in a startService
> method of your application, rather than (as you're probably
> doing) in the __init__ method.
> 
> Hope this helps.

Hi Luke,

yeah, that helps;)

Thanks!


From itamar at itamarst.org  Wed Nov  2 08:36:10 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 02 Nov 2011 12:36:10 +0000
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <4EB10EA3.3030603@herox.net>
References: <4EB10EA3.3030603@herox.net>
Message-ID: <1320237370.2042.90.camel@blake>

On Wed, 2011-11-02 at 10:34 +0100, Marcel G?digk wrote:
> Hi,
> 
> i using the Perspective Broker and i have problems with the speed of 
> importing the modules.
> It takes 15 - 17 seconds for importing the Reactor and the 
> PBServerFactory (or other pb imports).
> If i import the reactor or the pb imports alone it takes in avg. 2-3 
> seconds.

The example script you gave takes me 3.3 seconds to run, on a similar
machine on Linux. So switching operating systems may be one solution :)
If not:

0. Is Twisted on a network filesystem? That may be the problem.

1. Make sure you have .pyc in your installed Twisted directories. If you
don't, you import all of Twisted with a user that has permissions to
create them in those folders.

2. Maybe try a packaging Twisted in an .egg file.



From itamar at itamarst.org  Wed Nov  2 08:39:17 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 02 Nov 2011 08:39:17 -0400
Subject: [Twisted-Python] t.i.task.Cooperator & inlineCallbacks mashup
In-Reply-To: <4EB1285B.9010302@imperial.ac.uk>
References: <4EB1285B.9010302@imperial.ac.uk>
Message-ID: <1320237557.2042.91.camel@blake>

On Wed, 2011-11-02 at 11:24 +0000, Phil Mayers wrote:
> I only just noticed today that if a generator passed to a 
> CooperativeTask does:
> 
>    result = yield some_deferred()
> 
> ...it doesn't work, because CooperativeTask doesn't .send() the result 
> of the deferred bacn into the generator.
> 
> Is this intentional? If not, would that behaviour be desirable? It seems 
> like it would be a useful pattern to me.

Could you give an example snippet? I don't really understand the
question, sorry.



From itamar at itamarst.org  Wed Nov  2 08:44:28 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 02 Nov 2011 12:44:28 +0000
Subject: [Twisted-Python] Prhaps 11.1rc2 should include #4669?
Message-ID: <1320237868.2042.93.camel@blake>

It seems like keeping IOCP from being broken on win64 is worth
integrating.




From exarkun at twistedmatrix.com  Wed Nov  2 09:01:12 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 02 Nov 2011 13:01:12 -0000
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <1320237370.2042.90.camel@blake>
References: <4EB10EA3.3030603@herox.net>
	<1320237370.2042.90.camel@blake>
Message-ID: <20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>

On 12:36 pm, itamar at itamarst.org wrote:
>
>2. Maybe try a packaging Twisted in an .egg file.

This isn't a great idea, since Twisted doesn't support being installed 
as a zipfile (which is what I guess you meant, since a .egg directory 
wouldn't be any different from the standard installation in terms of 
import performance).

Jean-Paul


From exarkun at twistedmatrix.com  Wed Nov  2 09:08:42 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 02 Nov 2011 13:08:42 -0000
Subject: [Twisted-Python] t.i.task.Cooperator & inlineCallbacks mashup
In-Reply-To: <4EB1285B.9010302@imperial.ac.uk>
References: <4EB1285B.9010302@imperial.ac.uk>
Message-ID: <20111102130842.17986.1299270262.divmod.xquotient.193@localhost.localdomain>

On 11:24 am, p.mayers at imperial.ac.uk wrote:
>I only just noticed today that if a generator passed to a
>CooperativeTask does:
>
>   result = yield some_deferred()
>
>...it doesn't work, because CooperativeTask doesn't .send() the result
>of the deferred bacn into the generator.
>
>Is this intentional?

Yes.  Cooperator is for iterators, not generators, making send unusable 
in the general case.  Cooperator also isn't a replacement for 
inlineCallbacks.

You can build a wrapper for a generator that works together with 
Cooperator and sends results back in.  If it ends up being useful, it 
might be something to add to Twisted.

Jean-Paul
>If not, would that behaviour be desirable? It seems
>like it would be a useful pattern to me.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From itamar at itamarst.org  Wed Nov  2 09:10:13 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 02 Nov 2011 09:10:13 -0400
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>
References: <4EB10EA3.3030603@herox.net> <1320237370.2042.90.camel@blake>
	<20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>
Message-ID: <1320239413.2042.97.camel@blake>

On Wed, 2011-11-02 at 13:01 +0000, exarkun at twistedmatrix.com wrote:

> This isn't a great idea, since Twisted doesn't support being installed 
> as a zipfile (which is what I guess you meant, since a .egg directory 
> wouldn't be any different from the standard installation in terms of 
> import performance).

Oh right, plugins don't work or something?



From spam at herox.net  Wed Nov  2 09:25:28 2011
From: spam at herox.net (=?ISO-8859-1?Q?Marcel_G=E4digk?=)
Date: Wed, 02 Nov 2011 14:25:28 +0100
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <1320239413.2042.97.camel@blake>
References: <4EB10EA3.3030603@herox.net> <1320237370.2042.90.camel@blake>
	<20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>
	<1320239413.2042.97.camel@blake>
Message-ID: <4EB144C8.2020306@herox.net>

I deleted all *.pyc files from the twisted Folder. After the *.pyc 
generation python imports pb and reactor in around 5 seconds.

Thx for your help.


From solipsis at pitrou.net  Wed Nov  2 09:24:10 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 2 Nov 2011 14:24:10 +0100
Subject: [Twisted-Python] Slow PB imports
References: <4EB10EA3.3030603@herox.net>
Message-ID: <20111102142410.506e6f90@pitrou.net>

On Wed, 02 Nov 2011 10:34:27 +0100
Marcel G?digk <spam at herox.net> wrote:
> i using the Perspective Broker and i have problems with the speed of 
> importing the modules.
> It takes 15 - 17 seconds for importing the Reactor and the 
> PBServerFactory (or other pb imports).
> If i import the reactor or the pb imports alone it takes in avg. 2-3 
> seconds.
> 
> def ImportIt():
>      from twisted.internet import reactor
>      from twisted.spread.pb import PBServerFactory
> 
> import timeit
> t = timeit.Timer(setup='from __main__ import ImportIt', stmt='ImportIt()')
> print t.timeit()

Er, have read the timeit docs?
The timeit() method will execute the given code *one million times* by
default:

timeit(self, number=1000000) unbound timeit.Timer method
    Time 'number' executions of the main statement.
    
    To be precise, this executes the setup statement once, and
    then returns the time it takes to execute the main statement
    a number of times, as a float measured in seconds.  The
    argument is the number of times through the loop, defaulting
    to one million.  The main statement, the setup statement and
    the timer function to be used are passed to the constructor.

You might want to rewrite your script without timeit and simply use the
"time" command. Or call `t.timeit(1)` instead.


Antoine.




From p.mayers at imperial.ac.uk  Wed Nov  2 09:57:23 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 13:57:23 +0000
Subject: [Twisted-Python] t.i.task.Cooperator & inlineCallbacks mashup
In-Reply-To: <20111102130842.17986.1299270262.divmod.xquotient.193@localhost.localdomain>
References: <4EB1285B.9010302@imperial.ac.uk>
	<20111102130842.17986.1299270262.divmod.xquotient.193@localhost.localdomain>
Message-ID: <4EB14C43.40201@imperial.ac.uk>

On 02/11/11 13:08, exarkun at twistedmatrix.com wrote:

> Yes.  Cooperator is for iterators, not generators, making send unusable

Ah of course.

> in the general case.  Cooperator also isn't a replacement for
> inlineCallbacks.

That was essentially my question ;o)


From p.mayers at imperial.ac.uk  Wed Nov  2 10:01:19 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 14:01:19 +0000
Subject: [Twisted-Python] t.i.task.Cooperator & inlineCallbacks mashup
In-Reply-To: <1320237557.2042.91.camel@blake>
References: <4EB1285B.9010302@imperial.ac.uk> <1320237557.2042.91.camel@blake>
Message-ID: <4EB14D2F.10706@imperial.ac.uk>

On 02/11/11 12:39, Itamar Turner-Trauring wrote:
> On Wed, 2011-11-02 at 11:24 +0000, Phil Mayers wrote:
>> I only just noticed today that if a generator passed to a
>> CooperativeTask does:
>>
>>     result = yield some_deferred()
>>
>> ...it doesn't work, because CooperativeTask doesn't .send() the result
>> of the deferred bacn into the generator.
>>
>> Is this intentional? If not, would that behaviour be desirable? It seems
>> like it would be a useful pattern to me.
>
> Could you give an example snippet? I don't really understand the
> question, sorry.

I meant this:

from twisted.internet import task, reactor, defer

def dowork(n):
     d = defer.Deferred()
     result = 'waited %i' % (n,)
     reactor.callLater(n, d.callback, result)
     return d

def work():
     for i in (1,2,3):
         rv = yield dowork(i)
         print rv

task.coiterate(work())
reactor.run()

...prints:

None
None
None

rather than

waited 1
waited 2
waited 3

i.e. the iterator that is yielding deferreds doesn't "see" the results 
emerge from the "yield" in the same way inlineCallbacks do.

Obviously it's pretty trivial to get at the results:

   holder = {}
   def cb(r):
     holder['result'] = r
     return r
   yield dowork(i).addCallback(cb)
   print holder['result']

But the essential point I was missing is that Cooperator is for general 
purpose iterators, not just generators.


From tretiy3 at gmail.com  Wed Nov  2 14:34:17 2011
From: tretiy3 at gmail.com (Alexey Ganzha)
Date: Wed, 02 Nov 2011 21:34:17 +0300
Subject: [Twisted-Python] any chat (comet) application for twisted web
In-Reply-To: <ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>	<4EB02C17.7040301@imperial.ac.uk>
	<4EB04F1D.6060404@gmail.com>
	<ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>
Message-ID: <4EB18D29.1020202@gmail.com>

Hi!
Thanks again, Glyph for the link.
It took me less an hour to embed chat app in existent site (except that 
nevow is hosted on lanuchpad now, instead of divmod.org).
It is ready to use, just according to the tutorial. Just add some js and 
css to chatthing package to skin athena app.

One problem - i had to use it as a separate app. My own app is a raw 
twisted.web.
I saw OldResourceAdapter in Nevows code. Possible it need to write my 
own NewResourceAdapter for twisted.web :)

Any suggestions everybody? May be somebody had already implemented that 
(embed Nevow as a t.w.Resource)?

Thanks again for Your help, guys.
Twisted is beautiful.

On 11/02/2011 01:24 AM, Glyph wrote:
> On Nov 1, 2011, at 3:57 PM, Alexey Ganzha wrote:
>
>> Hello everebody.
>> May be somebody knows open source chat app for twisted web?
>> Possible not the complete app, but just skeleton. Possible some
>> snippets, pieces...
>> Will appreciate any suggestions.
> There is a tutorial on how to build the a chat server using Nevow here:
>
> <http://divmodsphinx.funsize.net/nevow/chattutorial/index.html#the-chat-tutorial-series>
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Wed Nov  2 18:34:40 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 2 Nov 2011 18:34:40 -0400
Subject: [Twisted-Python] any chat (comet) application for twisted web
In-Reply-To: <4EB18D29.1020202@gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>	<4EB02C17.7040301@imperial.ac.uk>
	<4EB04F1D.6060404@gmail.com>
	<ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>
	<4EB18D29.1020202@gmail.com>
Message-ID: <BB057640-FEC1-439C-BB90-9CBD23FC1E9E@twistedmatrix.com>



On Nov 2, 2011, at 2:34 PM, Alexey Ganzha wrote:

> Hi!
> Thanks again, Glyph for the link.
> It took me less an hour to embed chat app in existent site (except that 
> nevow is hosted on lanuchpad now, instead of divmod.org).
> It is ready to use, just according to the tutorial. Just add some js and 
> css to chatthing package to skin athena app.

Glad to hear it!

> One problem - i had to use it as a separate app. My own app is a raw 
> twisted.web.
> I saw OldResourceAdapter in Nevows code. Possible it need to write my 
> own NewResourceAdapter for twisted.web :)
> 
> Any suggestions everybody? May be somebody had already implemented that 
> (embed Nevow as a t.w.Resource)?

I don't know if anyone's done it at the API level - there are some limitations in twisted web that might make it problematic.  But, you can always easily set up a reverse proxy so that your nevow server can live in the same URL structure as the rest of your Twisted app!

> Thanks again for Your help, guys.
> Twisted is beautiful.

Thanks for saying so :).

-glyph

From glyph at twistedmatrix.com  Wed Nov  2 18:51:07 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 2 Nov 2011 18:51:07 -0400
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <1320239413.2042.97.camel@blake>
References: <4EB10EA3.3030603@herox.net> <1320237370.2042.90.camel@blake>
	<20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>
	<1320239413.2042.97.camel@blake>
Message-ID: <0AB015A7-9A60-49CF-8EE8-743FCF0232CA@twistedmatrix.com>


On Nov 2, 2011, at 9:10 AM, Itamar Turner-Trauring wrote:

> On Wed, 2011-11-02 at 13:01 +0000, exarkun at twistedmatrix.com wrote:
> 
>> This isn't a great idea, since Twisted doesn't support being installed 
>> as a zipfile (which is what I guess you meant, since a .egg directory 
>> wouldn't be any different from the standard installation in terms of 
>> import performance).
> 
> Oh right, plugins don't work or something?

Actually, you can pre-generate a dropin.cache for your zip file, and the plugin system will work fine out of a zip file, since about 5 years ago: <http://twistedmatrix.com/trac/changeset/19305>.

Basically, portions of Twisted can work just fine out of a zip file, and it might be adequate for many applications.  But (A) we don't have a buildbot anywhere that tests things in a zipfile configuration, and (B) there are many, many modules within Twisted, especially within tests, which expect that they can look at __file__ and assume it's a path on the filesystem.  So big chunks of it definitely won't work.

I'd love to fix this, but it is just _super_ low priority for me right now; I kinda hope that someone else will show up with another embedded system running Twisted and do some work in this area, since the last time I genuinely cared about zip files was when I was putting Twisted on a tiny flash card to install in buses :).

-glyph



From glyph at twistedmatrix.com  Wed Nov  2 18:54:42 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 2 Nov 2011 18:54:42 -0400
Subject: [Twisted-Python] Prhaps 11.1rc2 should include #4669?
In-Reply-To: <1320237868.2042.93.camel@blake>
References: <1320237868.2042.93.camel@blake>
Message-ID: <42AF37AD-D321-4813-B4ED-9986327FBAB6@twistedmatrix.com>


On Nov 2, 2011, at 8:44 AM, Itamar Turner-Trauring wrote:

> It seems like keeping IOCP from being broken on win64 is worth
> integrating.

Did it work on win64 in 11.0?

If so, then this is a regression and needs to be fixed.

If not, I'd say this is just a good motivation to get done with 11.1 and get the ball rolling on an 11.2 ASAP! :)

-glyph



From glyph at twistedmatrix.com  Wed Nov  2 18:56:09 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 2 Nov 2011 18:56:09 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB0F774.30601@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>
	<4EB0F774.30601@imperial.ac.uk>
Message-ID: <6E0DFDED-002C-4BFC-9977-5FCF281F7944@twistedmatrix.com>


On Nov 2, 2011, at 3:55 AM, Phil Mayers wrote:

> But I'll note that most people I've seen crib from existing test code 
> during the early phases of TDD, tutorials or not - and if most test code 
> in Twisted uses the real reactor...

Thanks for volunteering to fix some of our existing tests, then!  There's been a real shortage of labor for that ;-).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111102/cc69ae3b/attachment.htm 

From itamar at itamarst.org  Wed Nov  2 21:35:04 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 02 Nov 2011 21:35:04 -0400
Subject: [Twisted-Python] Prhaps 11.1rc2 should include #4669?
In-Reply-To: <42AF37AD-D321-4813-B4ED-9986327FBAB6@twistedmatrix.com>
References: <1320237868.2042.93.camel@blake>
	<42AF37AD-D321-4813-B4ED-9986327FBAB6@twistedmatrix.com>
Message-ID: <1320284104.2042.98.camel@blake>

On Wed, 2011-11-02 at 18:54 -0400, Glyph Lefkowitz wrote:
> On Nov 2, 2011, at 8:44 AM, Itamar Turner-Trauring wrote:
> 
> > It seems like keeping IOCP from being broken on win64 is worth
> > integrating.
> 
> Did it work on win64 in 11.0?
> 
> If so, then this is a regression and needs to be fixed.
> 
> If not, I'd say this is just a good motivation to get done with 11.1 and get the ball rolling on an 11.2 ASAP! :)

Thomas was talking about merging 11.1rc2 to current trunk...



From kevin.horn at gmail.com  Wed Nov  2 22:01:28 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 2 Nov 2011 21:01:28 -0500
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <0AB015A7-9A60-49CF-8EE8-743FCF0232CA@twistedmatrix.com>
References: <4EB10EA3.3030603@herox.net> <1320237370.2042.90.camel@blake>
	<20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>
	<1320239413.2042.97.camel@blake>
	<0AB015A7-9A60-49CF-8EE8-743FCF0232CA@twistedmatrix.com>
Message-ID: <CA+U=zK3wsjFeM6VK62e8nRW6_K6uhZ4sE9NzsRfJ33tg3oDzUg@mail.gmail.com>

On Wed, Nov 2, 2011 at 5:51 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> I'd love to fix this
>
> -glyph
>
>
Is there a ticket?  Maybe there should be...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111102/9d86d12e/attachment.htm 

From glyph at twistedmatrix.com  Wed Nov  2 22:23:25 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 2 Nov 2011 22:23:25 -0400
Subject: [Twisted-Python] Prhaps 11.1rc2 should include #4669?
In-Reply-To: <1320284104.2042.98.camel@blake>
References: <1320237868.2042.93.camel@blake>
	<42AF37AD-D321-4813-B4ED-9986327FBAB6@twistedmatrix.com>
	<1320284104.2042.98.camel@blake>
Message-ID: <3EFCA824-A65A-4EC2-9467-551F26D6D81E@twistedmatrix.com>


On Nov 2, 2011, at 9:35 PM, Itamar Turner-Trauring wrote:

> On Wed, 2011-11-02 at 18:54 -0400, Glyph Lefkowitz wrote:
>> On Nov 2, 2011, at 8:44 AM, Itamar Turner-Trauring wrote:
>> 
>>> It seems like keeping IOCP from being broken on win64 is worth
>>> integrating.
>> 
>> Did it work on win64 in 11.0?
>> 
>> If so, then this is a regression and needs to be fixed.
>> 
>> If not, I'd say this is just a good motivation to get done with 11.1 and get the ball rolling on an 11.2 ASAP! :)
> 
> Thomas was talking about merging 11.1rc2 to current trunk...

Hrm.  Looking at trunk, I guess we might be in a situation where we have to cherry-pick to get the regressions.

Here's what's happened since 11.1rc1, if anyone wants to object on the basis of a risky change:

<http://twistedmatrix.com/trac/log/trunk?action=stop_on_copy&mode=stop_on_copy&rev=33057&stop_rev=32950&limit=100>

My impressions is that some of these are frighteningly subtle, but those are mostly bugfixes in equally highly subtle (but wrong) win32 code; given the relatively improved state of the buildbots I don't have any concerns.  So I don't object, and anyway.

Ultimately, Thomas gets to make the call as the release manager anyway, though :).

-glyph

From p.mayers at imperial.ac.uk  Thu Nov  3 05:14:17 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 03 Nov 2011 09:14:17 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <6E0DFDED-002C-4BFC-9977-5FCF281F7944@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>	<4EB0F774.30601@imperial.ac.uk>
	<6E0DFDED-002C-4BFC-9977-5FCF281F7944@twistedmatrix.com>
Message-ID: <4EB25B69.1080607@imperial.ac.uk>

On 11/02/2011 10:56 PM, Glyph Lefkowitz wrote:
>
> On Nov 2, 2011, at 3:55 AM, Phil Mayers wrote:
>
>> But I'll note that most people I've seen crib from existing test code
>> during the early phases of TDD, tutorials or not - and if most test code
>> in Twisted uses the real reactor...
>
> Thanks for volunteering to fix some of our existing tests, then! There's
> been a real shortage of labor for that ;-).

Is there a ticket/list/trac report for "make this test be like X"?


From exarkun at twistedmatrix.com  Thu Nov  3 08:40:14 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 03 Nov 2011 12:40:14 -0000
Subject: [Twisted-Python] Docs HTML suggestion/request for moving
	between	versions.
In-Reply-To: <4EA8274E.9070704@imperial.ac.uk>
References: <4EA8274E.9070704@imperial.ac.uk>
Message-ID: <20111103124014.17986.1462827444.divmod.xquotient.272@localhost.localdomain>

On 26 Oct, 03:29 pm, p.mayers at imperial.ac.uk wrote:
>Lately, I've taken to finding Twisted docs by writing:
>
>twisted.internet.task.Cooperator
>
>...into the Chrome bar'o'magic and hitting return to get the Google 
>hit.
>This is great, except that the resultant Google hits almost always 
>point
>me to the 8.2.0 HTML docs. 2nd hit is (currently) 11.0 docs.
>
>Obviously it's tricky to force Google to put "current" at the top! But
>could we maybe have a little <select> dropdown in the top-right that
>shows the version, and lets you pick a new one and have the page 
>reload?
>
>It strikes me that this would be useful in general, for flicking back
>and forward between two versions of the docs page for a given 
>method/API.

I've updated http://twistedmatrix.com/documents/8.0.0/api/ - compare it 
to the old http://twistedmatrix.com/documents/old-8.0.0/api/ for 
problems, please.  If it looks good, I can update all the other versions 
of the API documentation as well.

If you have style suggestions, please submit them as merge proposals to 
<lp:~twisted-dev/pydoctor/twisted-templates-2>.

Thanks,
Jean-Paul


From p.mayers at imperial.ac.uk  Thu Nov  3 09:04:09 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 03 Nov 2011 13:04:09 +0000
Subject: [Twisted-Python] Docs HTML suggestion/request for
 moving	between versions.
In-Reply-To: <20111103124014.17986.1462827444.divmod.xquotient.272@localhost.localdomain>
References: <4EA8274E.9070704@imperial.ac.uk>
	<20111103124014.17986.1462827444.divmod.xquotient.272@localhost.localdomain>
Message-ID: <4EB29149.4020309@imperial.ac.uk>

On 03/11/11 12:40, exarkun at twistedmatrix.com wrote:

> I've updated http://twistedmatrix.com/documents/8.0.0/api/ - compare it

Cool, that looks good, thanks!


From therve at free.fr  Thu Nov  3 10:03:09 2011
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Thu, 03 Nov 2011 10:03:09 -0400
Subject: [Twisted-Python] Second pre-release of Twisted 11.1.0
Message-ID: <4EB29F1D.900@free.fr>

 From the sunny land of Orlando, I'm pleased to announce the second 
pre-release of Twisted 11.1.

You can find the tarballs here:

     http://people.canonical.com/~therve/Twisted/11.1.0pre2/

Among the 17 bugs fixed since the last pre-release, a fix in the new TLS 
code in connection lost management, and an error fixed with IOCP under 
64bits Windows.

Please give it all the testing you can!

-- 
Thomas


From glyph at twistedmatrix.com  Thu Nov  3 12:10:10 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 3 Nov 2011 12:10:10 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB25B69.1080607@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>	<4EB0F774.30601@imperial.ac.uk>
	<6E0DFDED-002C-4BFC-9977-5FCF281F7944@twistedmatrix.com>
	<4EB25B69.1080607@imperial.ac.uk>
Message-ID: <25FDB00C-54ED-4B97-8554-F37D8C35DA81@twistedmatrix.com>


On Nov 3, 2011, at 5:14 AM, Phil Mayers wrote:

> On 11/02/2011 10:56 PM, Glyph Lefkowitz wrote:
>> 
>> On Nov 2, 2011, at 3:55 AM, Phil Mayers wrote:
>> 
>>> But I'll note that most people I've seen crib from existing test code
>>> during the early phases of TDD, tutorials or not - and if most test code
>>> in Twisted uses the real reactor...
>> 
>> Thanks for volunteering to fix some of our existing tests, then! There's
>> been a real shortage of labor for that ;-).
> 
> Is there a ticket/list/trac report for "make this test be like X"?

No, unfortunately.  A big part of the work here is finding and cataloguing the work that needs to be done.

From tobias.oberstein at tavendo.de  Thu Nov  3 13:33:24 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 3 Nov 2011 10:33:24 -0700
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY and
	RealDictCursor
Message-ID: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>

I am using Twisted adbapi, psycopg2 and PostgreSQL which works really great.

Now, there are 2 features I'd like to use in this context, which I've been
using before without Twisted.

I'm missing those.

Would be glad for any hints ..

If there is work to do to make those features happen, and it's doable for
non-Twisted-gods, then I'd also be willing to invest time/effort ...

Thanks,
Tobias



LISTEN/NOTIFY
============

Is a Postgres>=9 feature which allows one to asynchronously notify a database client
from _within_ the database (i.e. from pgPLSQL).

http://www.postgresql.org/docs/9.1/static/sql-notify.html
http://initd.org/psycopg/docs/advanced.html#asynchronous-notifications

On the Python side, it'll do a select() on the TCP underlying the connection to Postgres.

adbapi assumes DBAPI, and above is a non-standard extension.

Now, what would be a sensible approach to use that with Twisted?

Own thread?
How do I integrate that into a standard Twisted application service hierarchy?
Or somehow extend adbapi?


psycopg2.extras.RealDictCursor
========================

We have a convention that all database access must be exclusively via
stored procedures with all IN and all OUT parameters named.

Outside the context of Twisted, we use that in conjunction with

# Real Dict Cursor (returns a Dict which can be referenced via named bracket access, or offset)

dict_cursor = db.cursor(cursor_factory = psycopg2.extras.RealDictCursor)
dict_cursor.execute("SELECT first_name, last_name, email FROM user.get_user(%s)", (user_id,))
my_row = dict_cursor.fetchone()

=>

{'first_name': 'John', 'last_name': 'Doe', 'email': 'john at doe.com'}

Is there a way to do something like this when using

self.dbpool.runInteraction

or otherwise?

Setting the "cursor factory" to be used?

On the other hand, the txn given to the fun provided with runInteraction already is somehow dressed up, right?



From tobias.oberstein at tavendo.de  Thu Nov  3 14:58:48 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 3 Nov 2011 11:58:48 -0700
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY
	and	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>

after actually looking at the adbapi.py code, it's quite accessible, so I guess doing

> dict_cursor = db.cursor(cursor_factory = psycopg2.extras.RealDictCursor)

would entail forwarding the desired cursor factory to here

https://github.com/powdahound/twisted/blob/master/twisted/enterprise/adbapi.py#L106

I'll get that done.

btw: are there plans to get Twisted master repo from svn to git?

==

so whats left is the LISTEN/NOTIFY stuff .. any ideas?
 


From glyph at twistedmatrix.com  Thu Nov  3 15:21:21 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 3 Nov 2011 15:21:21 -0400
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY and
	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>

On Nov 3, 2011, at 2:58 PM, Tobias Oberstein wrote:

> btw: are there plans to get Twisted master repo from svn to git?

No; the eventual plan is to move to bzr.  This is happening very slowly though :).

By the way, the official Twisted git mirror _should_ be at <https://github.com/twisted/twisted>.  It looks like nobody's updating that, though.  Since people seem to keep using powdahound's mirror, perhaps we should just ask powdahound to do the updating?




From exarkun at twistedmatrix.com  Thu Nov  3 15:40:54 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 03 Nov 2011 19:40:54 -0000
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY
	and	RealDictCursor
In-Reply-To: <8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
Message-ID: <20111103194054.17986.1085903964.divmod.xquotient.285@localhost.localdomain>

On 07:21 pm, glyph at twistedmatrix.com wrote:
>On Nov 3, 2011, at 2:58 PM, Tobias Oberstein wrote:
>>btw: are there plans to get Twisted master repo from svn to git?
>
>No; the eventual plan is to move to bzr.  This is happening very slowly 
>though :).
>
>By the way, the official Twisted git mirror _should_ be at 
><https://github.com/twisted/twisted>.  It looks like nobody's updating 
>that, though.  Since people seem to keep using powdahound's mirror, 
>perhaps we should just ask powdahound to do the updating?

I wonder why it's so much harder to update one repository on github than 
it is to update another.

Jean-Paul


From tobias.oberstein at tavendo.de  Thu Nov  3 15:54:08 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 3 Nov 2011 12:54:08 -0700
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY
	and	RealDictCursor
In-Reply-To: <8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CDED5@EXVMBX020-12.exch020.serverdata.net>

> > btw: are there plans to get Twisted master repo from svn to git?
> 
> No; the eventual plan is to move to bzr.  This is happening very slowly though
> :).
> 
> By the way, the official Twisted git mirror _should_ be at
> <https://github.com/twisted/twisted>.  It looks like nobody's updating that,
> though.  Since people seem to keep using powdahound's mirror, perhaps we
> should just ask powdahound to do the updating?

the readme at

https://github.com/powdahound/twisted

says: "Automatically updated every 15 minutes".

so that could be some script pulling svn and pushing to github.

@Garret: is that right? are you hosting and cron'jobbing that? 




From mostawesomedude at gmail.com  Thu Nov  3 16:54:04 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Thu, 3 Nov 2011 13:54:04 -0700
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY and
	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDED5@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CDED5@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CALiqSLdAVjqNSM3VL8avqNKv2hLEujtX9g5c0c+=QoTbkoDACw@mail.gmail.com>

I should point out that git-svn isn't happy about Twisted's repo, so the
git mirror is non-trivial to maintain. Last time I tried, I got quite a few
curious errors.

Sending from a mobile, pardon my terseness. ~ C.
On Nov 3, 2011 12:56 PM, "Tobias Oberstein" <tobias.oberstein at tavendo.de>
wrote:

> > > btw: are there plans to get Twisted master repo from svn to git?
> >
> > No; the eventual plan is to move to bzr.  This is happening very slowly
> though
> > :).
> >
> > By the way, the official Twisted git mirror _should_ be at
> > <https://github.com/twisted/twisted>.  It looks like nobody's updating
> that,
> > though.  Since people seem to keep using powdahound's mirror, perhaps we
> > should just ask powdahound to do the updating?
>
> the readme at
>
> https://github.com/powdahound/twisted
>
> says: "Automatically updated every 15 minutes".
>
> so that could be some script pulling svn and pushing to github.
>
> @Garret: is that right? are you hosting and cron'jobbing that?
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111103/0828356a/attachment.htm 

From tobias.oberstein at tavendo.de  Thu Nov  3 18:18:03 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 3 Nov 2011 15:18:03 -0700
Subject: [Twisted-Python] adbapi / Postgres :
	LISTEN/NOTIFY	and	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CDFBC@EXVMBX020-12.exch020.serverdata.net>

Ok, should anyone else need this, here is working code:

 
class PostgresListenService(twisted.application.service.Service):
   """
   PostgreSQL LISTEN/NOTIFY as Twisted service.
   
   http://initd.org/psycopg/docs/advanced.html#asynchronous-notifications
   """

   def __init__(self, dsn, channel, timeout = 1):
      self.dsn = dsn
      self.channel = channel
      self.timeout = 1

   def notify(self, channel, payload):
      log.msg("NOTIFY on channel %s with payload %s, delivered on thread %s" % (channel, payload, thread.get_ident()))

   def run(self):
      log.msg("LISTEN on channel %s, running on thread %s" % (self.channel, thread.get_ident()))
      conn = psycopg2.connect(self.dsn)
      conn.set_isolation_level(psycopg2.extensions.ISOLATION_LEVEL_AUTOCOMMIT)
      curs = conn.cursor()
      curs.execute("LISTEN %s;" % self.channel)
      while not self.stopped:
         if select.select([conn], [], [], self.timeout) == ([], [], []):
            pass
         else:
            conn.poll()
            while conn.notifies:
               notify = conn.notifies.pop()
               reactor.callFromThread(self.notify, notify.channel, notify.payload)

   def startService(self):
      self.stopped = False
      reactor.callInThread(self.run)
      Service.startService(self)

   def stopService(self):
      self.stopped = True
      Service.stopService(self)



From glyph at twistedmatrix.com  Thu Nov  3 18:54:11 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 3 Nov 2011 18:54:11 -0400
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY	and
	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDFBC@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDFBC@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <47D7E0D3-60F7-4650-8768-B46A061DD254@twistedmatrix.com>

On Nov 3, 2011, at 6:18 PM, Tobias Oberstein wrote:

>      while not self.stopped:
>         if select.select([conn], [], [], self.timeout) == ([], [], []):
>            pass

Please note that on high-volume servers, this is problematic, as 'conn' may be higher than the maximum file descriptor pollable by select().  So if you've tuned everything to be smart, use a high-volume reactor like epoll, and set all your ulimits correctly, you will still get tracebacks out of this code depending on random accidents of ordering.

This part of the logic might therefore be better implemented as a IReadDescriptor/IWriteDescriptor provider (i.e. a subclass of FileDescriptor), assuming you can ask your postgres binding to give you non-blocking reads and writes.  You're certainly not the first person to make this mistake though, <http://divillo.com/> gives the same advice :).

Also this would probably make a better patch for txpostgres <https://launchpad.net/txpostgres> than for Twisted itself, since support depends on specific database bindings.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111103/aa3cbe87/attachment-0001.htm 

From ivan at ludios.org  Thu Nov  3 18:54:58 2011
From: ivan at ludios.org (Ivan Kozik)
Date: Thu, 3 Nov 2011 22:54:58 +0000
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY and
	RealDictCursor
In-Reply-To: <CALiqSLdAVjqNSM3VL8avqNKv2hLEujtX9g5c0c+=QoTbkoDACw@mail.gmail.com>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CDED5@EXVMBX020-12.exch020.serverdata.net>
	<CALiqSLdAVjqNSM3VL8avqNKv2hLEujtX9g5c0c+=QoTbkoDACw@mail.gmail.com>
Message-ID: <CAKyntiJVhO3zoo-bHjmBpoS+fa9m=zfjAONfSFDgwTwwBDWs4g@mail.gmail.com>

On Thu, Nov 3, 2011 at 20:54, Corbin Simpson <mostawesomedude at gmail.com> wrote:
> I should point out that git-svn isn't happy about Twisted's repo, so the git
> mirror is non-trivial to maintain. Last time I tried, I got quite a few
> curious errors.

I keep a tarball of a git-svn clone of Twisted at
https://ludios.org/mirror/ and update it several times a year.  Anyone
can grab it and update their copy with:

git svn fetch
git checkout trunk

OR

git svn rebase


On Windows, first edit .git/config and set `filemode = false` to avoid
problems with executable bits.

Ivan


From tobias.oberstein at tavendo.de  Thu Nov  3 19:40:04 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 3 Nov 2011 16:40:04 -0700
Subject: [Twisted-Python] adbapi / Postgres :
	LISTEN/NOTIFY	and	RealDictCursor
In-Reply-To: <47D7E0D3-60F7-4650-8768-B46A061DD254@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDFBC@EXVMBX020-12.exch020.serverdata.net>
	<47D7E0D3-60F7-4650-8768-B46A061DD254@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CDFCF@EXVMBX020-12.exch020.serverdata.net>

Hello Glyph,

thank's a lot for this advice! I thought I would have done right, and Twisted-style .. but the select FD trap wasn't on my radar.


The https://github.com/wulczer/txpostgres is very interesting. Guess I need to learn about interfaces.IReadWriteDescriptor
first to grasp it.

Regarding the broader picture: I cannot say I understand what you say completely.

" maximum file descriptor pollable by select()"

Is this *nix in general?

Does that only apply to select.select?

Or also: select.poll(), select.epoll(), select.kqueue() ?

How would implementing an IReadDescriptor circumvent the problem? By not using select(), but poll/epoll/kqeue?

In any case: we're running FreeBSD, so epoll() is out.

Is there even a kqueue-based Twisted reactor?

Sorry if helping me spawns new questions,

Thanks!
Tobias


for reference (don't know if it applies here):
psycopg since v2.2 has
http://initd.org/psycopg/docs/advanced.html#asynchronous-support


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph
Gesendet: Donnerstag, 3. November 2011 23:54
An: Twisted general discussion
Betreff: Re: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY and RealDictCursor

On Nov 3, 2011, at 6:18 PM, Tobias Oberstein wrote:


     while not self.stopped:
        if select.select([conn], [], [], self.timeout) == ([], [], []):
           pass


Please note that on high-volume servers, this is problematic, as 'conn' may be higher than the maximum file descriptor pollable by select().  So if you've tuned everything to be smart, use a high-volume reactor like epoll, and set all your ulimits correctly, you will still get tracebacks out of this code depending on random accidents of ordering.

This part of the logic might therefore be better implemented as a IReadDescriptor/IWriteDescriptor provider (i.e. a subclass of FileDescriptor), assuming you can ask your postgres binding to give you non-blocking reads and writes.  You're certainly not the first person to make this mistake though, <http://divillo.com/> gives the same advice :).

Also this would probably make a better patch for txpostgres <https://launchpad.net/txpostgres> than for Twisted itself, since support depends on specific database bindings.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111103/7cb53792/attachment.htm 

From glyph at twistedmatrix.com  Thu Nov  3 22:47:02 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 3 Nov 2011 22:47:02 -0400
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY	and
	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDFCF@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDFBC@EXVMBX020-12.exch020.serverdata.net>
	<47D7E0D3-60F7-4650-8768-B46A061DD254@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CDFCF@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <9C152DE3-C60C-4C2F-9B38-CC0D644FC8B0@twistedmatrix.com>


On Nov 3, 2011, at 7:40 PM, Tobias Oberstein wrote:

> Regarding the broader picture: I cannot say I understand what you say completely.
> 
> "maximum file descriptor pollable by select()"
> 
> Is this *nix in general?
> 
> Does that only apply to select.select?

Yep, only to select.select.  Search around for FD_SETSIZE for more information.

> Or also: select.poll(), select.epoll(), select.kqueue() ?

But those may not be available consistently, so you shouldn't hard-code it to use one of those either :).

> How would implementing an IReadDescriptor circumvent the problem? By not using select(), but poll/epoll/kqeue?

It circumvents the problem by allowing whatever mechanism Twisted is using for multiplexing, rather than always using select().  So you still have to select a reactor that actually supports more than  FD_SETSIZE sockets.

> In any case: we're running FreeBSD, so epoll() is out.
> 
> Is there even a kqueue-based Twisted reactor?

Yes... ish.  More detail here: <http://twistedmatrix.com/trac/ticket/1918>.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111103/18366c1c/attachment.htm 

From tobias.oberstein at tavendo.de  Fri Nov  4 10:11:11 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 4 Nov 2011 07:11:11 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>

> Is there even a kqueue-based Twisted reactor?
> 
> Yes... ish. ?More detail here: <http://twistedmatrix.com/trac/ticket/1918>.

Hi Glyph,

first, thanks as always!

The pykqueue 1.3 and 2.0 referenced in that ticket seem to be no longer
maintained.

On the other hand, Python has built-in support for kqueue since Python 2.6
in the select module.

I have adjusted the Twisted kqreactor to select.kqueue and made a package:

https://github.com/oberstet/txkqreactor

I have tested that reactor successfully with Autobahn WebSockets on FreeBSD 8.2
(running as a VirtualBox x86 VM). When I'm home later, I can check out Mac.

Doing the Autobahn tests helped me finding the only non-canonical change required

https://github.com/oberstet/txkqreactor/commit/27302b4f643cd3967289ff11d811309a0b05f630

Is there any regression/test/stresstest I could run to verify the stuff actually works?

The Autobahn WS tests do quite some stuff, but they do not test concurrency and
high connections numbers ..

Cheers,
Tobias


From exarkun at twistedmatrix.com  Fri Nov  4 10:39:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 04 Nov 2011 14:39:56 -0000
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20111104143956.17986.406115027.divmod.xquotient.313@localhost.localdomain>

On 02:11 pm, tobias.oberstein at tavendo.de wrote:
>>Is there even a kqueue-based Twisted reactor?
>>
>>Yes... ish. ?More detail here: 
>><http://twistedmatrix.com/trac/ticket/1918>.
>
>Hi Glyph,
>
>first, thanks as always!
>
>The pykqueue 1.3 and 2.0 referenced in that ticket seem to be no longer
>maintained.
>
>On the other hand, Python has built-in support for kqueue since Python 
>2.6
>in the select module.
>
>I have adjusted the Twisted kqreactor to select.kqueue and made a 
>package:
>
>https://github.com/oberstet/txkqreactor
>
>I have tested that reactor successfully with Autobahn WebSockets on 
>FreeBSD 8.2
>(running as a VirtualBox x86 VM). When I'm home later, I can check out 
>Mac.
>
>Doing the Autobahn tests helped me finding the only non-canonical 
>change required
>
>https://github.com/oberstet/txkqreactor/commit/27302b4f643cd3967289ff11d811309a0b05f630
>
>Is there any regression/test/stresstest I could run to verify the stuff 
>actually works?

You can run the Twisted test suite:

    trial --reactor kqueue twisted

(assuming you've hooked up the name "kqueue" to your new version of the 
kqueue reactor).

This is what needs to work in order for the new reactor to be added to 
Twisted itself (ie, for us to resolve #1918).

Jean-Paul
>The Autobahn WS tests do quite some stuff, but they do not test 
>concurrency and
>high connections numbers ..
>
>Cheers,
>Tobias
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From tobias.oberstein at tavendo.de  Fri Nov  4 11:54:36 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 4 Nov 2011 08:54:36 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <20111104143956.17986.406115027.divmod.xquotient.313@localhost.localdomain>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<20111104143956.17986.406115027.divmod.xquotient.313@localhost.localdomain>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE1CA@EXVMBX020-12.exch020.serverdata.net>

> >Is there any regression/test/stresstest I could run to verify the stuff
> >actually works?
> 
> You can run the Twisted test suite:
> 
>     trial --reactor kqueue twisted
> 
> (assuming you've hooked up the name "kqueue" to your new version of the
> kqueue reactor).
> 
> This is what needs to work in order for the new reactor to be added to
> Twisted itself (ie, for us to resolve #1918).

Hello Jean-Paul,

I've ran the new one on a Python 2.7.1/Twisted 11.0 (stock) by patching

twisted_reactor.py

#kqueue = Reactor(
#    'kqueue', 'twisted.internet.kqreactor', 'kqueue(2)-based reactor.')
kqueue = Reactor(
    'kqueue', 'txkqreactor.kqreactor', 'NEW kqueue(2)-based reactor.')

and running both that, and the select() reactor.

Uploaded all logs to the ticket.

The diff between both:

http://twistedmatrix.com/trac/attachment/ticket/1918/select_vs_new_kqueue_diff.log

Summary:

< Ran 6515 tests in 102.948s
---
> Ran 6515 tests in 343.371s
9292c9354
< FAILED (skips=977, expectedFailures=11, failures=1, errors=7, successes=5519)
---
> FAILED (skips=977, expectedFailures=11, failures=2, errors=13, successes=5516)

< = select
> = new kqueue

Is that good, bad or ugly?



From kevin.horn at gmail.com  Fri Nov  4 12:49:03 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 4 Nov 2011 11:49:03 -0500
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>

On Fri, Nov 4, 2011 at 9:11 AM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> > Is there even a kqueue-based Twisted reactor?
> >
> > Yes... ish.  More detail here: <
> http://twistedmatrix.com/trac/ticket/1918>.
>
> Hi Glyph,
>
> first, thanks as always!
>
> The pykqueue 1.3 and 2.0 referenced in that ticket seem to be no longer
> maintained.
>
> On the other hand, Python has built-in support for kqueue since Python 2.6
> in the select module.
>
> I have adjusted the Twisted kqreactor to select.kqueue and made a package:
>
> https://github.com/oberstet/txkqreactor
>
> I have tested that reactor successfully with Autobahn WebSockets on
> FreeBSD 8.2
> (running as a VirtualBox x86 VM). When I'm home later, I can check out Mac.
>
> Doing the Autobahn tests helped me finding the only non-canonical change
> required
>
>
> https://github.com/oberstet/txkqreactor/commit/27302b4f643cd3967289ff11d811309a0b05f630
>
> Is there any regression/test/stresstest I could run to verify the stuff
> actually works?
>
> The Autobahn WS tests do quite some stuff, but they do not test
> concurrency and
> high connections numbers ..
>
> Cheers,
> Tobias
>
>
This is awesome, BUT...

...would probably have to be distributed outside of Twisted proper (at
least for the moment), as Twisted supports versions of Python < 2.6, where
select.kqueue would not exist.

(Maybe this is your plan, but I'm just pointing it out.)

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111104/4a44c848/attachment.htm 

From itamar at itamarst.org  Fri Nov  4 12:54:31 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 4 Nov 2011 12:54:31 -0400
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
Message-ID: <727c45fff3d8f44faec0621070f8e50d.squirrel@webmail.zoteca.com>

> This is awesome, BUT...
>
> ...would probably have to be distributed outside of Twisted proper (at
> least for the moment), as Twisted supports versions of Python < 2.6, where
> select.kqueue would not exist.
>
> (Maybe this is your plan, but I'm just pointing it out.)

We've said e.g. Windows only supports Python 2.5 or later even when
everything else supports Python 2.4. And we have inlineCallbacks which
only runs on Python 2.5 or later. Saying "kqueue reactor only works on
Python 2.6 and later" seems fine to me.

-Itamar



From exarkun at twistedmatrix.com  Fri Nov  4 13:00:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 04 Nov 2011 17:00:24 -0000
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
Message-ID: <20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>

On 04:49 pm, kevin.horn at gmail.com wrote:
>On Fri, Nov 4, 2011 at 9:11 AM, Tobias Oberstein <
>tobias.oberstein at tavendo.de> wrote:
>> > Is there even a kqueue-based Twisted reactor?
>> >
>> > Yes... ish.  More detail here: <
>>http://twistedmatrix.com/trac/ticket/1918>.
>>
>>Hi Glyph,
>>
>>first, thanks as always!
>>
>>The pykqueue 1.3 and 2.0 referenced in that ticket seem to be no 
>>longer
>>maintained.
>>
>>On the other hand, Python has built-in support for kqueue since Python 
>>2.6
>>in the select module.
>>
>>I have adjusted the Twisted kqreactor to select.kqueue and made a 
>>package:
>>
>>https://github.com/oberstet/txkqreactor
>>
>>I have tested that reactor successfully with Autobahn WebSockets on
>>FreeBSD 8.2
>>(running as a VirtualBox x86 VM). When I'm home later, I can check out 
>>Mac.
>>
>>Doing the Autobahn tests helped me finding the only non-canonical 
>>change
>>required
>>
>>
>>https://github.com/oberstet/txkqreactor/commit/27302b4f643cd3967289ff11d811309a0b05f630
>>
>>Is there any regression/test/stresstest I could run to verify the 
>>stuff
>>actually works?
>>
>>The Autobahn WS tests do quite some stuff, but they do not test
>>concurrency and
>>high connections numbers ..
>>
>>Cheers,
>>Tobias
>This is awesome, BUT...
>
>...would probably have to be distributed outside of Twisted proper (at
>least for the moment), as Twisted supports versions of Python < 2.6, 
>where
>select.kqueue would not exist.
>
>(Maybe this is your plan, but I'm just pointing it out.)

It would be fine for Twisted to offer this feature only on Python 2.6 
and newer.

Jean-Paul


From tobias.oberstein at tavendo.de  Fri Nov  4 13:11:38 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 4 Nov 2011 10:11:38 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>

> >This is awesome, BUT...
> >
> >...would probably have to be distributed outside of Twisted proper (at
> >least for the moment), as Twisted supports versions of Python < 2.6,
> >where select.kqueue would not exist.
> >
> >(Maybe this is your plan, but I'm just pointing it out.)
> 
> It would be fine for Twisted to offer this feature only on Python 2.6 and
> newer.

Would be great of course to have it in Twisted.

In the meantime, I've packaged it up

http://pypi.python.org/pypi/txkqreactor

Caveat: as attached to the ticket, there are some errs when running trial
which don't happen with select reactor.

Whether those are significant I can't tell .. if there is anything I can do to
clarify (like i.e. running on non-virtualized hardware FreeBSD) let me know.





From glyph at twistedmatrix.com  Sat Nov  5 02:07:04 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 5 Nov 2011 02:07:04 -0400
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>


On Nov 4, 2011, at 1:11 PM, Tobias Oberstein wrote:

>>> This is awesome, BUT...
>>> 
>>> ...would probably have to be distributed outside of Twisted proper (at
>>> least for the moment), as Twisted supports versions of Python < 2.6,
>>> where select.kqueue would not exist.
>>> 
>>> (Maybe this is your plan, but I'm just pointing it out.)
>> 
>> It would be fine for Twisted to offer this feature only on Python 2.6 and
>> newer.
> 
> Would be great of course to have it in Twisted.

Yes :).

> In the meantime, I've packaged it up
> 
> http://pypi.python.org/pypi/txkqreactor

Thanks, but we should really try to integrate it ASAP. :)

> Caveat: as attached to the ticket, there are some errs when running trial
> which don't happen with select reactor.

Do you think you could start fixing some of those errors?  Do they make sense to you?  If you're interested in moving this ticket forward, I'm sure that folks on this mailing list (me included) would love to provide you some guidance.

> Whether those are significant I can't tell ..

If they're failing tests, they're significant :).  In order for stuff to be added to Twisted, the full test suite needs to run.

> if there is anything I can do to clarify (like i.e. running on non-virtualized hardware FreeBSD) let me know.

Have you run the tests on OS X as well?

-glyph



From tobias.oberstein at tavendo.de  Sat Nov  5 07:48:52 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 5 Nov 2011 04:48:52 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>

> > if there is anything I can do to clarify (like i.e. running on non-virtualized
> hardware FreeBSD) let me know.
> 
> Have you run the tests on OS X as well?

I'll do that.

> > Caveat: as attached to the ticket, there are some errs when running
> > trial which don't happen with select reactor.
> 
> Do you think you could start fixing some of those errors?  Do they make

I've looked at the logs in more detail, the error _diff_ between select/kqueue
yields:

twisted.test.test_tcp.HalfCloseBuggyApplicationTests.test_readNotificationRaises
twisted.test.test_tcp.HalfCloseTestCase.testCloseWriteCloser
twisted.test.test_tcp.HalfCloseTestCase.testWriteCloseNotification

which all seem to be testing TCP Half-Close.

I've looked at the case code .. guess I can grasp that after reading some background.

But I have no clue where to start "fixing" / looking for why this works with
the select reactor vs kqueue.

> sense to you?  If you're interested in moving this ticket forward, I'm sure that
> folks on this mailing list (me included) would love to provide you some
> guidance.
> 

Ok, will see what I can do.

Need some advice/hints though.

Generally, there are a couple of skipped tests missing modules (i.e. pycrypto)
which I could install. Should I do that, or are those not necessary?
Note, that there are packages I could, but would not like to install: GTK etc.

Then, whats the difference between FAIL and ERROR?

Then, there are a couple of tests which are skipped because

xxx_KQueueReactor
No module named kqsyscall

The kqsyscall should now be select.kqueue/kevent .. so I guess those
test cases needed to be adapted as well, right?

Then, baseline. I've run the trial using select reactor in the expectation of
finding all tests passed.

This is not the case, there are a couple of failed ones. Those are also failed
with the kqueue reactor, so I need to know whether I need to inspect those
or those are problems unrelated to the reactor, but of general (platform?) nature.

[1]
twisted.internet.test.test_posixprocess
  FileDescriptorTests
    test_expectedFDs ...                                                 [FAIL]

[2]
twisted.internet.test.test_process
  PTYProcessTestsBuilder_PollReactor
    test_openFileDescriptors ...                                        [ERROR]
  PTYProcessTestsBuilder_SelectReactor
    test_openFileDescriptors ...                                        [ERROR]
  ProcessTestsBuilder_PollReactor
    test_openFileDescriptors ...                                        [ERROR]
  ProcessTestsBuilder_SelectReactor
    test_openFileDescriptors ...                                        [ERROR]

[3]
twisted.python.test.test_components
  RegistrationTestCase
    test_duplicateAdapterForInterfaceAllowed ...                        [ERROR]
    test_registerAdapterForInterface ...                                [ERROR]
    test_subclassAdapterRegistrationForInterface ...                    [ERROR]

Now, [2] could be a consequence of [3], since they all fail because of

exceptions.ValueError: an adapter (<function <lambda> at 0x2c0dc41c>) was already registered.

See:

twisted.internet.test.test_process.PTYProcessTestsBuilder_PollReactor.test_openFileDescriptors
twisted.internet.test.test_process.PTYProcessTestsBuilder_SelectReactor.test_openFileDescriptors
twisted.internet.test.test_process.ProcessTestsBuilder_PollReactor.test_openFileDescriptors
twisted.internet.test.test_process.ProcessTestsBuilder_SelectReactor.test_openFileDescriptors
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 351, in test_duplicateAdapterForInterfaceAllowed
    return self._duplicateAdapterForClassOrInterfaceAllowed(TheOriginal)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 312, in _duplicateAdapterForClassOrInterfaceAllowed
    components.registerAdapter(firstAdapter, original, TheInterface)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/components.py", line 93, in registerAdapter
    raise ValueError("an adapter (%s) was already registered." % (factory, ))
exceptions.ValueError: an adapter (<function <lambda> at 0x2c0dc41c>) was already registered.

twisted.python.test.test_components.RegistrationTestCase.test_duplicateAdapterForInterfaceAllowed
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 268, in test_registerAdapterForInterface
    return self._registerAdapterForClassOrInterface(TheOriginal)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 245, in _registerAdapterForClassOrInterface
    components.registerAdapter(adapter, original, TheInterface)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/components.py", line 93, in registerAdapter
    raise ValueError("an adapter (%s) was already registered." % (factory, ))
exceptions.ValueError: an adapter (<function <lambda> at 0x2c0dc41c>) was already registered.

twisted.python.test.test_components.RegistrationTestCase.test_registerAdapterForInterface
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 423, in test_subclassAdapterRegistrationForInterface
    return self._subclassAdapterRegistrationForClassOrInterface(TheOriginal)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 396, in _subclassAdapterRegistrationForClassOrInterface
    components.registerAdapter(firstAdapter, original, TheInterface)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/components.py", line 93, in registerAdapter
    raise ValueError("an adapter (%s) was already registered." % (factory, ))
exceptions.ValueError: an adapter (<function <lambda> at 0x2c0dc41c>) was already registered.

twisted.python.test.test_components.RegistrationTestCase.test_subclassAdapterRegistrationForInterface

=======

And [1]:

twisted.internet.test.test_posixprocess.FileDescriptorTests.test_expectedFDs
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/_baseprocess.py", line 60, in maybeCallProcessEnded
    proto.processEnded(Failure(reason))
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/test/test_process.py", line 289, in processEnded
    checkOutput("".join(self.output))
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/test/test_process.py", line 276, in checkOutput
    self.assertEquals('[0, 1, 2, 3]', output)
twisted.trial.unittest.FailTest: not equal:
a = '[0, 1, 2, 3]'
b = 'xrange(256)'


**********************************************

Now, for the kqeue reactor, the following _additional_ errors appear:

twisted.test.test_tcp
  HalfCloseBuggyApplicationTests
    test_readNotificationRaises ...                                      [FAIL]
  HalfCloseTestCase
    testCloseWriteCloser ...                                               [ERROR]
    testWriteCloseNotification ...                                      [ERROR]


twisted.test.test_tcp.HalfCloseBuggyApplicationTests.test_readNotificationRaises
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/_baseprocess.py", line 60, in maybeCallProcessEnded
    proto.processEnded(Failure(reason))
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/test/test_process.py", line 289, in processEnded
    checkOutput("".join(self.output))
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/test/test_process.py", line 276, in checkOutput
    self.assertEquals('[0, 1, 2, 3]', output)
twisted.trial.unittest.FailTest: not equal:
a = '[0, 1, 2, 3]'
b = 'xrange(256)'

===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError: <twisted.test.test_tcp.HalfCloseTestCase testMethod=testCloseWriteCloser> (testCloseWriteCloser) still running at 120.0 secs

twisted.test.test_tcp.HalfCloseTestCase.testCloseWriteCloser
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.trial.util.DirtyReactorAggregateError: Reactor was unclean.
DelayedCalls: (set twisted.internet.base.DelayedCall.debug = True to debug)
<DelayedCall 0x29c0462c [-6.91413879395e-05s] called=0 cancelled=0 LoopingCall<0>(check, *(), **{})()>

twisted.test.test_tcp.HalfCloseTestCase.testCloseWriteCloser
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.trial.util.DirtyReactorAggregateError: Reactor was unclean.
Selectables:
<<class 'twisted.internet.tcp.Port'> of twisted.test.test_tcp.MyHCFactory on 53746>

twisted.test.test_tcp.HalfCloseTestCase.testCloseWriteCloser
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError: <twisted.test.test_tcp.HalfCloseTestCase testMethod=testWriteCloseNotification> (testWriteCloseNotification) still running at 120.0 secs

twisted.test.test_tcp.HalfCloseTestCase.testWriteCloseNotification
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/test/test_tcp.py", line 1602, in tearDown
    self.assertEquals(self.client.closed, 0)
twisted.trial.unittest.FailTest: not equal:
a = 1
b = 0


twisted.test.test_tcp.HalfCloseTestCase.testWriteCloseNotification
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.trial.util.DirtyReactorAggregateError: Reactor was unclean.
DelayedCalls: (set twisted.internet.base.DelayedCall.debug = True to debug)
<DelayedCall 0x2bf7f4ac [-6.29425048828e-05s] called=0 cancelled=0 LoopingCall<0>(check, *(), **{})()>

twisted.test.test_tcp.HalfCloseTestCase.testWriteCloseNotification





From tobias.oberstein at tavendo.de  Sat Nov  5 08:01:40 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 5 Nov 2011 05:01:40 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <727c45fff3d8f44faec0621070f8e50d.squirrel@webmail.zoteca.com>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<727c45fff3d8f44faec0621070f8e50d.squirrel@webmail.zoteca.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE427@EXVMBX020-12.exch020.serverdata.net>

> We've said e.g. Windows only supports Python 2.5 or later even when
> everything else supports Python 2.4. And we have inlineCallbacks which only
> runs on Python 2.5 or later. Saying "kqueue reactor only works on Python 2.6
> and later" seems fine to me.

For completeness: there seem to be 2 packages providing the select.kqueue/epoll
interface backported for Python 2.3-2.5:

http://pypi.python.org/pypi/select26/0.1a3
http://pypi.python.org/pypi/select_backport/0.2

However, both seem to be based on Python svn at some point in time, and not
actively maintained.


From itamar at itamarst.org  Sat Nov  5 08:12:36 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 05 Nov 2011 08:12:36 -0400
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <1320495156.2042.100.camel@blake>

On Sat, 2011-11-05 at 04:48 -0700, Tobias Oberstein wrote:
> Then, whats the difference between FAIL and ERROR?

Fail means an assertion failed. Error means an unexpected exception was
throwhn.

> Then, there are a couple of tests which are skipped because
> 
> xxx_KQueueReactor
> No module named kqsyscall
> 
> The kqsyscall should now be select.kqueue/kevent .. so I guess those
> test cases needed to be adapted as well, right?

Yes.

> Then, baseline. I've run the trial using select reactor in the expectation of
> finding all tests passed.
> 
> This is not the case, there are a couple of failed ones. Those are also failed
> with the kqueue reactor, so I need to know whether I need to inspect those
> or those are problems unrelated to the reactor, but of general (platform?) nature.

Are you using Twisted 11? Many of these issues are, if I'm not mistaken,
fixed in trunk (though perhaps not all). So trunk is probably a better
baseline to work off of.



From tobias.oberstein at tavendo.de  Sat Nov  5 14:46:03 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 5 Nov 2011 11:46:03 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <1320495156.2042.100.camel@blake>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
	<1320495156.2042.100.camel@blake>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE449@EXVMBX020-12.exch020.serverdata.net>

> > Then, baseline. I've run the trial using select reactor in the
> > expectation of finding all tests passed.
> >
> > This is not the case, there are a couple of failed ones. Those are
> > also failed with the kqueue reactor, so I need to know whether I need
> > to inspect those or those are problems unrelated to the reactor, but of
> general (platform?) nature.
> 
> Are you using Twisted 11? Many of these issues are, if I'm not mistaken,
> fixed in trunk (though perhaps not all). So trunk is probably a better baseline
> to work off of.

Ok, I'm using trunk now.

1)
The errors in

twisted.python.test.test_components

are gone.

2)
The errors in

twisted.internet.test.test_posixprocess
twisted.internet.test.test_process

are still there ... and they show up for select, poll and kqueue reactors.

They all somehow relate to "open FDs":

twisted.internet.test.test_posixprocess
  FileDescriptorTests
    test_expectedFDs ...                                                 [FAIL]

twisted.internet.test.test_process
  PTYProcessTestsBuilder_KQueueReactor
    test_openFileDescriptors ...                                        [ERROR]
  PTYProcessTestsBuilder_PollReactor
    test_openFileDescriptors ...                                        [ERROR]
  PTYProcessTestsBuilder_SelectReactor
    test_openFileDescriptors ...                                        [ERROR]
ProcessTestsBuilder_SelectReactor
    test_openFileDescriptors ...                                        [ERROR]

This might more a FreeBSD related thing. ?

3)
I think I've nailed down the Half-Close stuff.

4)
These are kqueue specific. Need to investigate further.

twisted.internet.test.test_fdset
  ReactorFDSetTestsBuilder_KQueueReactor
    test_lostFileDescriptor ...                                         [ERROR]
    test_removedFromReactor ...                                          [FAIL]

The first one comes up, since

removeReader()

is called for a FD which is gone,  and leads to a socket exception from fd = reader.fileno()

5)
These are kqueue specific. Need to investigate further.

twisted.conch.test.test_conch

The fail on the kqeue control call .. see below.

Any ideas what could be the reason?


[autobahn at autobahnhub ~/temp]$ trial -r select twisted.conch.test.test_conch
twisted.conch.test.test_conch
  CmdLineClientTestCase
    test_exec ...                                                          [OK]
    test_localToRemoteForwarding ...                                       [OK]
    test_remoteToLocalForwarding ...                                       [OK]
  OpenSSHClientForwardingTestCase
    test_exec ...                                                          [OK]
    test_localToRemoteForwarding ...                                       [OK]
    test_remoteToLocalForwarding ...                                       [OK]
  OpenSSHClientRekeyTestCase
    test_clientRekey ...                                                   [OK]
  StdioInteractingSessionTests
    test_eofReceived ...                                                   [OK]

-------------------------------------------------------------------------------
Ran 8 tests in 4.707s

PASSED (successes=8)
[autobahn at autobahnhub ~/temp]$ trial -r kqueue twisted.conch.test.test_conch
twisted.conch.test.test_conch
  CmdLineClientTestCase
    test_exec ...                                                          [OK]
    test_localToRemoteForwarding ...                                    [ERROR]
                                   [ERROR]
    test_remoteToLocalForwarding ...                                       [OK]
  OpenSSHClientForwardingTestCase
    test_exec ...                                                          [OK]
    test_localToRemoteForwarding ...                                    [ERROR]
                                   [ERROR]
    test_remoteToLocalForwarding ...                                       [OK]
  OpenSSHClientRekeyTestCase
    test_clientRekey ...                                                   [OK]
  StdioInteractingSessionTests
    test_eofReceived ...                                                   [OK]

===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError: <twisted.conch.test.test_conch.CmdLineClientTestCase testMethod=test_localToRemoteForwarding> (test_localToRemoteForwarding) still running at 120.0 secs

twisted.conch.test.test_conch.CmdLineClientTestCase.test_localToRemoteForwarding
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/log.py", line 84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/log.py", line 69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/context.py", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/context.py", line 81, in callWithContext
    return func(*args,**kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 225, in _doWriteOrRead
    self._disconnectSelectable(selectable, why, inRead)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/posixbase.py", line 260, in _disconnectSelectable
    selectable.readConnectionLost(f)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/tcp.py", line 257, in readConnectionLost
    self.connectionLost(reason)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/tcp.py", line 433, in connectionLost
    Connection.connectionLost(self, reason)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/tcp.py", line 277, in connectionLost
    protocol.connectionLost(reason)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/conch/test/test_conch.py", line 242, in connectionLost
    self.protocol.forwardingPortDisconnected(self.buffer)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/conch/test/test_conch.py", line 190, in forwardingPortDisconnected
    self.transport.write('\x03')
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/process.py", line 862, in write
    self.pipes[0].write(data)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/process.py", line 174, in write
    abstract.FileDescriptor.write(self, data)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/abstract.py", line 310, in write
    self.startWriting()
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/abstract.py", line 400, in startWriting
    self.reactor.addWriter(self)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 94, in addWriter
    self._updateRegistration(fd, KQ_FILTER_WRITE, KQ_EV_ADD)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 74, in _updateRegistration
    self._kq.control([kevent(*args)], 0, 0)
exceptions.OSError: [Errno 32] Broken pipe

twisted.conch.test.test_conch.CmdLineClientTestCase.test_localToRemoteForwarding
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError: <twisted.conch.test.test_conch.OpenSSHClientForwardingTestCase testMethod=test_localToRemoteForwarding> (test_localToRemoteForwarding) still running at 120.0 secs

twisted.conch.test.test_conch.OpenSSHClientForwardingTestCase.test_localToRemoteForwarding
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/log.py", line 84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/log.py", line 69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/context.py", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/context.py", line 81, in callWithContext
    return func(*args,**kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 225, in _doWriteOrRead
    self._disconnectSelectable(selectable, why, inRead)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/posixbase.py", line 262, in _disconnectSelectable
    self.removeWriter(selectable)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 140, in removeWriter
    self._updateRegistration(fd, KQ_FILTER_WRITE, KQ_EV_DELETE)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 74, in _updateRegistration
    self._kq.control([kevent(*args)], 0, 0)
exceptions.OSError: [Errno 2] No such file or directory

twisted.conch.test.test_conch.OpenSSHClientForwardingTestCase.test_localToRemoteForwarding
-------------------------------------------------------------------------------
Ran 8 tests in 243.797s

FAILED (errors=4, successes=6)
[autobahn at autobahnhub ~/temp]$


From exarkun at twistedmatrix.com  Sun Nov  6 00:05:26 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Nov 2011 04:05:26 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1320552326.72.156475450@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111106/fd3d3505/attachment-0001.htm 

From exarkun at twistedmatrix.com  Sun Nov  6 09:37:15 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Nov 2011 14:37:15 -0000
Subject: [Twisted-Python] Docs HTML suggestion/request for moving
	between	versions.
In-Reply-To: <4EB29149.4020309@imperial.ac.uk>
References: <4EA8274E.9070704@imperial.ac.uk>
	<20111103124014.17986.1462827444.divmod.xquotient.272@localhost.localdomain>
	<4EB29149.4020309@imperial.ac.uk>
Message-ID: <20111106143715.17986.1876597934.divmod.xquotient.335@localhost.localdomain>

On 3 Nov, 01:04 pm, p.mayers at imperial.ac.uk wrote:
>On 03/11/11 12:40, exarkun at twistedmatrix.com wrote:
>>I've updated http://twistedmatrix.com/documents/8.0.0/api/ - compare 
>>it
>
>Cool, that looks good, thanks!

Thanks for the review.  Since I didn't hear anything else, I went ahead 
and switched over all versions of the documentation to have this 
feature.

Jean-Paul


From jonathan+twisted at jsphere.com  Sun Nov  6 12:51:15 2011
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Sun, 6 Nov 2011 19:51:15 +0200
Subject: [Twisted-Python] Website visual improvements
Message-ID: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>

Hello,

I recently volunteered to make some visual improvements to the Twisted Trac
website. I received a lot of good feedback and suggestions from the IRC
channel, most of which I took to heart and fine-tuned the changes. I think
everyone is generally happy with the changes, I'm happy with the changes
and I'd like help with moving things forward to eventually deploy these
changes.

The branch is currently up for review on Launchpad[1], the merge proposal
contains links to some[2] static[3] pages demonstrating the style changes.
(It is worth noting that there are some quirks that are as a result of
"File -> Save As" in Firefox, I wouldn't worry about these.)

I am willing to help with the final deployment of the site changes as well
as integrating the new styling with:
* the Sphinx documentation and documentation tools;
* the Lore documentation (which I see thijs recently did some work on) if
that is necessary;
* and the pydoctor API documentation.

-- 
Jonathan


[1] <
https://code.launchpad.net/~jjacobs/twisted-website/visual-design-update/+merge/80468<https://code.launchpad.net/%7Ejjacobs/twisted-website/visual-design-update/+merge/80468>
>
[2] <https://dl.dropbox.com/u/4030134/Twisted/Twisted.htm>
[3] <https://dl.dropbox.com/u/4030134/Twisted/5047.htm>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111106/ab89c2b9/attachment.htm 

From tom at recursivedream.com  Sun Nov  6 13:53:24 2011
From: tom at recursivedream.com (Tom Davis)
Date: Sun, 6 Nov 2011 13:53:24 -0500
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
Message-ID: <29139477-832F-4B93-B913-42F6FA7F171F@recursivedream.com>



On Nov 6, 2011, at 12:51 PM, Jonathan Jacobs <jonathan+twisted at jsphere.com> wrote:

> Hello,
> 
> I recently volunteered to make some visual improvements to the Twisted Trac website. I received a lot of good feedback and suggestions from the IRC channel, most of which I took to heart and fine-tuned the changes. I think everyone is generally happy with the changes, I'm happy with the changes and I'd like help with moving things forward to eventually deploy these changes.
> 
> The branch is currently up for review on Launchpad[1], the merge proposal contains links to some[2] static[3] pages demonstrating the style changes. (It is worth noting that there are some quirks that are as a result of "File -> Save As" in Firefox, I wouldn't worry about these.)
> 
> I am willing to help with the final deployment of the site changes as well as integrating the new styling with:
> * the Sphinx documentation and documentation tools;
> * the Lore documentation (which I see thijs recently did some work on) if that is necessary;
> * and the pydoctor API documentation.
> 

Wow Jonathan, these changes look great! 

> -- 
> Jonathan
> 
> 
> [1] <https://code.launchpad.net/~jjacobs/twisted-website/visual-design-update/+merge/80468>
> [2] <https://dl.dropbox.com/u/4030134/Twisted/Twisted.htm>
> [3] <https://dl.dropbox.com/u/4030134/Twisted/5047.htm>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111106/891a7da4/attachment.htm 

From glyph at twistedmatrix.com  Sun Nov  6 16:12:58 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 6 Nov 2011 15:12:58 -0600
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE449@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
	<1320495156.2042.100.camel@blake>
	<634914A010D0B943A035D226786325D42D0C0CE449@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <68BB485F-5883-4A49-A17B-5AA212F6737B@twistedmatrix.com>


On Nov 5, 2011, at 1:46 PM, Tobias Oberstein wrote:

>>> Then, baseline. I've run the trial using select reactor in the
>>> expectation of finding all tests passed.
>>> 
>>> This is not the case, there are a couple of failed ones. Those are
>>> also failed with the kqueue reactor, so I need to know whether I need
>>> to inspect those or those are problems unrelated to the reactor, but of
>> general (platform?) nature.
>> 
>> Are you using Twisted 11? Many of these issues are, if I'm not mistaken,
>> fixed in trunk (though perhaps not all). So trunk is probably a better baseline
>> to work off of.
> 
> Ok, I'm using trunk now.
> 
> 1)
> The errors in
> 
> twisted.python.test.test_components
> 
> are gone.
> 
> 2)
> The errors in
> 
> twisted.internet.test.test_posixprocess
> twisted.internet.test.test_process
> 
> are still there ... and they show up for select, poll and kqueue reactors.
> 
> They all somehow relate to "open FDs":
> 
> twisted.internet.test.test_posixprocess
>  FileDescriptorTests
>    test_expectedFDs ...                                                 [FAIL]
> 
> twisted.internet.test.test_process
>  PTYProcessTestsBuilder_KQueueReactor
>    test_openFileDescriptors ...                                        [ERROR]
>  PTYProcessTestsBuilder_PollReactor
>    test_openFileDescriptors ...                                        [ERROR]
>  PTYProcessTestsBuilder_SelectReactor
>    test_openFileDescriptors ...                                        [ERROR]
> ProcessTestsBuilder_SelectReactor
>    test_openFileDescriptors ...                                        [ERROR]
> 
> This might more a FreeBSD related thing. ?

Yes.

These tests should pass; I am guessing this has something to do with the still-open ticket <http://tm.tl/4747>.  Maybe have a look at fixing that?

You might be able to work around it on your system this by mounting fdescfs at /dev/fd.  (This really ought to be the default, please bother someone in FreeBSD-land to make it so. :)).

It would be useful to include tracebacks with the errors.  "trial --rterrors" is useful, as it includes the tracebacks  especially if you are experiencing hanging with the tests.

> 3)
> I think I've nailed down the Half-Close stuff.

Awesome.  Do you have a link to a changeset for that?  (Did I miss it earlier in the thread?)

> 4)
> These are kqueue specific. Need to investigate further.

These are the ones to focus on for <http://tm.tl/1918>, then :).

> twisted.internet.test.test_fdset
>  ReactorFDSetTestsBuilder_KQueueReactor
>    test_lostFileDescriptor ...                                         [ERROR]
>    test_removedFromReactor ...                                          [FAIL]
> 
> The first one comes up, since
> 
> removeReader()
> 
> is called for a FD which is gone,  and leads to a socket exception from fd = reader.fileno()

It sounds like you've narrowed this down pretty far!  Good work.

> 5)
> These are kqueue specific. Need to investigate further.
> 
> twisted.conch.test.test_conch
> 
> The fail on the kqeue control call .. see below.
> 
> Any ideas what could be the reason?

I would suggest fixing the issues you outlined in point 4 first.  It's really unfortunate that reactor issues are being caught by conch tests.  The reactor tests should be comprehensive enough to catch everything in the reactor.

This may just be a side-effect of the other errors you're tracking down, so see if you can fix those, and then loop back to these.  If they disappear, then great.  If not, then we should have a test that specifically tests this functionality and doesn't rely on weird and difficult to diagnose errors in conch to find them.

Thanks again for working on this!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111106/e79ac761/attachment.htm 

From jon at multani.info  Sun Nov  6 23:11:01 2011
From: jon at multani.info (Jonathan Ballet)
Date: Mon, 07 Nov 2011 13:11:01 +0900
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <29139477-832F-4B93-B913-42F6FA7F171F@recursivedream.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<29139477-832F-4B93-B913-42F6FA7F171F@recursivedream.com>
Message-ID: <8e51798d4dc5924bfb74f30e37d32cbc@mail.webfaction.com>

On Sun, 6 Nov 2011 13:53:24 -0500, Tom Davis wrote:
> On Nov 6, 2011, at 12:51 PM, Jonathan Jacobs  wrote:
>
>> Hello,
>>
>> I recently volunteered to make some visual improvements to the
>> Twisted Trac website. I received a lot of good feedback and
>> suggestions from the IRC channel, most of which I took to heart and
>> fine-tuned the changes. I think everyone is generally happy with the
>> changes, I'm happy with the changes and I'd like help with moving
>> things forward to eventually deploy these changes.
>>
>> The branch is currently up for review on Launchpad[1], the merge
>> proposal contains links to some[2] static[3] pages demonstrating the
>> style changes. (It is worth noting that there are some quirks that
>> are as a result of "File -> Save As" in Firefox, I wouldn't worry
>> about these.)
>>
>> I am willing to help with the final deployment of the site changes
>> as well as integrating the new styling with:
>> * the Sphinx documentation and documentation tools;
>> * the Lore documentation (which I see thijs recently did some work
>> on) if that is necessary;
>> * and the pydoctor API documentation.
>
> Wow Jonathan, these changes look great!

Indeed, this looks great!
On https://dl.dropbox.com/u/4030134/Twisted/5047.htm, the status 
"Enhancement", "Fixed", "Closed" are not really vertically centered in 
their boxes, is it one of the Firefox quirks you were speaking about?

Great job!

  Jonathan


From einar.twisted at norsk-esport.no  Mon Nov  7 04:01:54 2011
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Mon, 7 Nov 2011 10:01:54 +0100
Subject: [Twisted-Python] FTP Proxy
Message-ID: <CAKXDhcWYaB83p85kdGQCKphxM7Ys+LAKz2c95PaNTikKn0bLHg@mail.gmail.com>

Hi,

I need to develop a customised FTP proxy for one of our systems, and
would like to consider Twisted for this project.

The t.p.ftp module seems to have the server and the client more or
less ready to use, so I think I am good to start, but just wanted to
check with you guys if there are any gotchas that I should be aware
of. The system is intended to work as follows:

- Users authenticate directly with the proxy, not the backend-server,
using a Drupal site for authentication (either through some sort of
API-call or by accessing the database directly - to be decided)
- The client-part of the proxy connects with a master-user/password to
one or more backend FTP-servers running in passive mode behind
firewalls.
- The master-user has access to the union of all file and directory
sets that each individual user has access to.
- The root folder presented to the user should contain either all the
available hosts, or a virtualised overview of all main directories on
all the hosts that the user may access.
- Any file access or directory listing will be filtered against an ACL
to allow only certain files and directories to be accessed by the
user.

Is there anything I should be aware of that may be a showstopper or
otherwise overly complicate this project by using t.p.ftp, or am I
good to go?

Will producers/consumers be an appropriate way of transferring data
between the client-part and the server-part of the proxy, and is
t.p.pcp something I should look into?

Any suggestions, especially mentions of/links to similar projects,
would be most helpful and appreciated.

Cheers,
Einar S. Ids?


From jonathan+twisted at jsphere.com  Mon Nov  7 05:00:06 2011
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Mon, 7 Nov 2011 12:00:06 +0200
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <8e51798d4dc5924bfb74f30e37d32cbc@mail.webfaction.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<29139477-832F-4B93-B913-42F6FA7F171F@recursivedream.com>
	<8e51798d4dc5924bfb74f30e37d32cbc@mail.webfaction.com>
Message-ID: <CAM187SGgrN4f3PX9gDTOhEXT3BLAj-Z9zLCD-SWcpXcdbcjJ6Q@mail.gmail.com>

On Mon, Nov 7, 2011 at 06:11, Jonathan Ballet <jon at multani.info> wrote:
> On https://dl.dropbox.com/u/4030134/Twisted/5047.htm, the status
> "Enhancement", "Fixed", "Closed" are not really vertically centered in
> their boxes, is it one of the Firefox quirks you were speaking about?

No, that was actually an issue. Thanks for pointing it out!


From tom.sheffler at gmail.com  Mon Nov  7 08:27:00 2011
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Mon, 7 Nov 2011 05:27:00 -0800
Subject: [Twisted-Python] TDD: How to test that a Timeout Exception occurs
	within the timeout period
Message-ID: <CAMBtMcuqDGf0=AmA8pAV8=fO6y+L7-jCyhFWkzEnNsrdku1XBg@mail.gmail.com>

I am investigating timeout properties of the FTP server module.  I
have written the following trial test, that when functioning properly
will throw a PortConnectionError with a "DTPFactory timeout"

I would like to use something like

   self.failUnlessRaises()

but the test is also constructed using defer.deferredGenerator, and it
doesn't seem possible to apply the test for an exception to a
Generator-based test.  This is a useful type of test to be able to
write: to assert that an exceptional condition *will* occur within a
timeout period.  Failure is if the exceptional condition is *never*
raised.  Suggestions for attacking these types of properties is welcome.

FYI: Here is my test, along with the trial directive that if it runs
for 60 seconds it is a failure.  But first, here is the ERROR
traceback that a "successful" run of this test produces.

===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.protocols.ftp.PortConnectionError: DTPFactory timeout

test_ftp_timeouts.TimeoutsFTPServerTestCase.test_FtpControlChannelTimesOut
-------------------------------------------------------------------------------


    def test_FtpControlChannelTimesOut(self):
        """Test that after the FTP timeout, the control channel closes
itself."""

        # Set the timeout to something small, but greater than DTPTimeout
        self.serverProtocol.timeOut = 15

        # Login
        wfd = defer.waitForDeferred(self._anonymousLogin())
        yield wfd
        wfd.getResult()
        log.msg("Login Anonymous")

        # Wait for N seconds, protocol timeOut not fired yet
        wait1 = defer.waitForDeferred(self.mywait(2))
        yield wait1

        # Should get here and not fail
        log.msg("FTP is ok here")

        # Issue a PASV command, and extract the host and port from the response
        pasvCmd = defer.waitForDeferred(self.client.queueStringCommand('PASV'))
        yield pasvCmd
        responseLines = pasvCmd.getResult()
        log.msg("PASV responseLines", responseLines)
        host, port = ftp.decodeHostPort(responseLines[-1][4:])

        # Wait for N seconds, protocol timeOut will fire
        wait2 = defer.waitForDeferred(self.mywait(20))
        yield wait2
        log.msg("FTP should have timed out and left reactor clean")


    test_FtpControlChannelTimesOut =
defer.deferredGenerator(test_FtpControlChannelTimesOut)
    # test_FtpControlChannelTimesOut.skip = "skipping"
    test_FtpControlChannelTimesOut.timeout = 60 # is a real error if
it takes this long


From exarkun at twistedmatrix.com  Mon Nov  7 08:35:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 07 Nov 2011 13:35:24 -0000
Subject: [Twisted-Python] FTP Proxy
In-Reply-To: <CAKXDhcWYaB83p85kdGQCKphxM7Ys+LAKz2c95PaNTikKn0bLHg@mail.gmail.com>
References: <CAKXDhcWYaB83p85kdGQCKphxM7Ys+LAKz2c95PaNTikKn0bLHg@mail.gmail.com>
Message-ID: <20111107133524.17986.704404351.divmod.xquotient.344@localhost.localdomain>

On 09:01 am, einar.twisted at norsk-esport.no wrote:
>Hi,
>
>I need to develop a customised FTP proxy for one of our systems, and
>would like to consider Twisted for this project.
>
>The t.p.ftp module seems to have the server and the client more or
>less ready to use, so I think I am good to start, but just wanted to
>check with you guys if there are any gotchas that I should be aware
>of. The system is intended to work as follows:
>
>- Users authenticate directly with the proxy, not the backend-server,
>using a Drupal site for authentication (either through some sort of
>API-call or by accessing the database directly - to be decided)
>- The client-part of the proxy connects with a master-user/password to
>one or more backend FTP-servers running in passive mode behind
>firewalls.
>- The master-user has access to the union of all file and directory
>sets that each individual user has access to.
>- The root folder presented to the user should contain either all the
>available hosts, or a virtualised overview of all main directories on
>all the hosts that the user may access.
>- Any file access or directory listing will be filtered against an ACL
>to allow only certain files and directories to be accessed by the
>user.
>
>Is there anything I should be aware of that may be a showstopper or
>otherwise overly complicate this project by using t.p.ftp, or am I
>good to go?
>
>Will producers/consumers be an appropriate way of transferring data
>between the client-part and the server-part of the proxy, and is
>t.p.pcp something I should look into?

twisted.protocols.pcp isn't that useful.  You can probably build what 
you need without it.

Jean-Paul
>Any suggestions, especially mentions of/links to similar projects,
>would be most helpful and appreciated.
>
>Cheers,
>Einar S. Ids9
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Mon Nov  7 08:46:12 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 07 Nov 2011 13:46:12 -0000
Subject: [Twisted-Python] TDD: How to test that a Timeout Exception
	occurs	within the timeout period
In-Reply-To: <CAMBtMcuqDGf0=AmA8pAV8=fO6y+L7-jCyhFWkzEnNsrdku1XBg@mail.gmail.com>
References: <CAMBtMcuqDGf0=AmA8pAV8=fO6y+L7-jCyhFWkzEnNsrdku1XBg@mail.gmail.com>
Message-ID: <20111107134612.17986.934927007.divmod.xquotient.359@localhost.localdomain>

On 01:27 pm, tom.sheffler at gmail.com wrote:
>I am investigating timeout properties of the FTP server module.  I
>have written the following trial test, that when functioning properly
>will throw a PortConnectionError with a "DTPFactory timeout"
>
>I would like to use something like
>
>   self.failUnlessRaises()

Unrelated to the real intent of your question: adjust this desire, you 
should want to use self.assertRaises() instead.
>but the test is also constructed using defer.deferredGenerator, and it
>doesn't seem possible to apply the test for an exception to a
>Generator-based test.

This is somewhat true-ish.  There is another trial method that helps out 
with this case: assertFailure.  The new trial documentation written by 
Thomas Herv? addresses this use case a bit:

http://buildbot.twistedmatrix.com/builds/sphinx- 
html/499-16046/projects/core/howto/trial.html#testing-scheduling

However, it's not clear to me that you actually have a Deferred that is 
going to fire with a Failure.  It sounds like maybe you have an error 
that will get logged and no other indication that what you were waiting 
for has happened?  If so, you might want to aim for a Deferred that 
fires when the important thing has happened.

Jean-Paul
>This is a useful type of test to be able to
>write: to assert that an exceptional condition *will* occur within a
>timeout period.  Failure is if the exceptional condition is *never*
>raised.  Suggestions for attacking these types of properties is 
>welcome.
>
>FYI: Here is my test, along with the trial directive that if it runs
>for 60 seconds it is a failure.  But first, here is the ERROR
>traceback that a "successful" run of this test produces.
>
>===============================================================================
>[ERROR]
>Traceback (most recent call last):
>Failure: twisted.protocols.ftp.PortConnectionError: DTPFactory timeout
>
>test_ftp_timeouts.TimeoutsFTPServerTestCase.test_FtpControlChannelTimesOut
>-------------------------------------------------------------------------------
>
>
>    def test_FtpControlChannelTimesOut(self):
>        """Test that after the FTP timeout, the control channel closes
>itself."""
>
>        # Set the timeout to something small, but greater than 
>DTPTimeout
>        self.serverProtocol.timeOut = 15
>
>        # Login
>        wfd = defer.waitForDeferred(self._anonymousLogin())
>        yield wfd
>        wfd.getResult()
>        log.msg("Login Anonymous")
>
>        # Wait for N seconds, protocol timeOut not fired yet
>        wait1 = defer.waitForDeferred(self.mywait(2))
>        yield wait1
>
>        # Should get here and not fail
>        log.msg("FTP is ok here")
>
>        # Issue a PASV command, and extract the host and port from the 
>response
>        pasvCmd = 
>defer.waitForDeferred(self.client.queueStringCommand('PASV'))
>        yield pasvCmd
>        responseLines = pasvCmd.getResult()
>        log.msg("PASV responseLines", responseLines)
>        host, port = ftp.decodeHostPort(responseLines[-1][4:])
>
>        # Wait for N seconds, protocol timeOut will fire
>        wait2 = defer.waitForDeferred(self.mywait(20))
>        yield wait2
>        log.msg("FTP should have timed out and left reactor clean")
>
>
>    test_FtpControlChannelTimesOut =
>defer.deferredGenerator(test_FtpControlChannelTimesOut)
>    # test_FtpControlChannelTimesOut.skip = "skipping"
>    test_FtpControlChannelTimesOut.timeout = 60 # is a real error if
>it takes this long
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From techtonik at gmail.com  Mon Nov  7 09:13:42 2011
From: techtonik at gmail.com (anatoly techtonik)
Date: Mon, 7 Nov 2011 16:13:42 +0200
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
Message-ID: <CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>

On Sun, Nov 6, 2011 at 8:51 PM, Jonathan Jacobs
<jonathan+twisted at jsphere.com> wrote:
> Hello,
> I recently volunteered to make some visual improvements to the Twisted Trac
> website. I received a lot of good feedback and suggestions from the IRC
> channel, most of which I took to heart and fine-tuned the changes.?I think
> everyone is generally happy with the changes, I'm happy with the changes and
> I'd like help with moving things forward to eventually deploy these changes.
> The branch is currently up for review on Launchpad[1], the merge proposal
> contains links to some[2] static[3] pages demonstrating the style changes.
> (It is worth noting that there are some quirks that are as a result of "File
> -> Save As" in Firefox, I wouldn't worry about these.)

Cool. I've uploaded screenshots to see how it looks on my FF7 below. I
like it. Well, with the exception of linefeeds in download links and
some stuff that is strictly subjective. For example, blue cloud looks
completely out of the way on the main page - I don't know if it is
thanks to the dark background or to its form. I also prefer right-side
panels over left-side. On issue page red and blue tones are also
looking strange to me. What is awesome are comment numbers. A pity
these are not clickable.

Anyway, good work! =)

old - http://i42.tinypic.com/29dify0.jpg
new - http://i44.tinypic.com/xpv78k.png


> [1]
> <https://code.launchpad.net/~jjacobs/twisted-website/visual-design-update/+merge/80468>
> [2] <https://dl.dropbox.com/u/4030134/Twisted/Twisted.htm>
> [3] <https://dl.dropbox.com/u/4030134/Twisted/5047.htm>
--
anatoly t.


From jonathan+twisted at jsphere.com  Mon Nov  7 09:28:19 2011
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Mon, 7 Nov 2011 16:28:19 +0200
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
Message-ID: <CAM187SFUWM6uS70Hn=36JBovEAwMnaiiR-QMacrkE5Ks_UjZ_Q@mail.gmail.com>

On Mon, Nov 7, 2011 at 16:13, anatoly techtonik <techtonik at gmail.com> wrote:
> What is awesome are comment numbers. A pity
> these are not clickable.

The alterations to the Trac templates will make these clickable, I was
just too lazy to manually edit all the HTML for the demonstration page
(the fifth comment is clickable, as an example.)

> Anyway, good work! =)

Thanks!


From jstpierre at mecheye.net  Mon Nov  7 09:31:39 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 7 Nov 2011 09:31:39 -0500
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
Message-ID: <CAA0H+QRiw9L1TcxgLPLrMCbk=fS0BN3vC51rjbaYA8v1LF2=Jg@mail.gmail.com>

On Mon, Nov 7, 2011 at 9:13 AM, anatoly techtonik <techtonik at gmail.com> wrote:
> On Sun, Nov 6, 2011 at 8:51 PM, Jonathan Jacobs
> <jonathan+twisted at jsphere.com> wrote:
>> Hello,
>> I recently volunteered to make some visual improvements to the Twisted Trac
>> website. I received a lot of good feedback and suggestions from the IRC
>> channel, most of which I took to heart and fine-tuned the changes.?I think
>> everyone is generally happy with the changes, I'm happy with the changes and
>> I'd like help with moving things forward to eventually deploy these changes.
>> The branch is currently up for review on Launchpad[1], the merge proposal
>> contains links to some[2] static[3] pages demonstrating the style changes.
>> (It is worth noting that there are some quirks that are as a result of "File
>> -> Save As" in Firefox, I wouldn't worry about these.)
>
> Cool. I've uploaded screenshots to see how it looks on my FF7 below. I
> like it. Well, with the exception of linefeeds in download links and
> some stuff that is strictly subjective. For example, blue cloud looks
> completely out of the way on the main page - I don't know if it is
> thanks to the dark background or to its form. I also prefer right-side
> panels over left-side. On issue page red and blue tones are also
> looking strange to me. What is awesome are comment numbers. A pity
> these are not clickable.
>
> Anyway, good work! =)
>
> old - http://i42.tinypic.com/29dify0.jpg
> new - http://i44.tinypic.com/xpv78k.png

Yes, the cloud's arrow looks a little too green. Making it more
green-yellow like the original download arrow might be better.

See "Chameleon" in the Tango pallete:

http://webcvs.freedesktop.org/tango/tango-art-tools/palettes/Tango-Palette.png?view=co

>> [1]
>> <https://code.launchpad.net/~jjacobs/twisted-website/visual-design-update/+merge/80468>
>> [2] <https://dl.dropbox.com/u/4030134/Twisted/Twisted.htm>
>> [3] <https://dl.dropbox.com/u/4030134/Twisted/5047.htm>
> --
> anatoly t.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
? Jasper


From jonathan+twisted at jsphere.com  Mon Nov  7 09:53:26 2011
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Mon, 7 Nov 2011 16:53:26 +0200
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAA0H+QRiw9L1TcxgLPLrMCbk=fS0BN3vC51rjbaYA8v1LF2=Jg@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
	<CAA0H+QRiw9L1TcxgLPLrMCbk=fS0BN3vC51rjbaYA8v1LF2=Jg@mail.gmail.com>
Message-ID: <CAM187SFM5vM3PZbR7WeEf=_RA37E5HCEvw0qF-r-phANuU3hjg@mail.gmail.com>

On Mon, Nov 7, 2011 at 16:31, Jasper St. Pierre <jstpierre at mecheye.net> wrote:
> Yes, the cloud's arrow looks a little too green. Making it more
> green-yellow like the original download arrow might be better.

For what it's worth the colour of the arrow in Anatoly's screenshot
looks far greener than the way the image appears on my screen, it's
probably not worth only trusting screenshots (with who knows what
colour profile transformations applied) when making colour
comparisons.

The actual colour is much closer to the "Chameleon" colour from the
Tango palette than the colour from Anatoly's image.


From jstpierre at mecheye.net  Mon Nov  7 10:03:41 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 7 Nov 2011 10:03:41 -0500
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAM187SFM5vM3PZbR7WeEf=_RA37E5HCEvw0qF-r-phANuU3hjg@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
	<CAA0H+QRiw9L1TcxgLPLrMCbk=fS0BN3vC51rjbaYA8v1LF2=Jg@mail.gmail.com>
	<CAM187SFM5vM3PZbR7WeEf=_RA37E5HCEvw0qF-r-phANuU3hjg@mail.gmail.com>
Message-ID: <CAA0H+QTDttJNjeX+ar3jxexvoRSiiUQYp-A5b6xTMmWEXsg+Yw@mail.gmail.com>

On Mon, Nov 7, 2011 at 9:53 AM, Jonathan Jacobs
<jonathan+twisted at jsphere.com> wrote:
> On Mon, Nov 7, 2011 at 16:31, Jasper St. Pierre <jstpierre at mecheye.net> wrote:
>> Yes, the cloud's arrow looks a little too green. Making it more
>> green-yellow like the original download arrow might be better.
>
> For what it's worth the colour of the arrow in Anatoly's screenshot
> looks far greener than the way the image appears on my screen, it's
> probably not worth only trusting screenshots (with who knows what
> colour profile transformations applied) when making colour
> comparisons.
>
> The actual colour is much closer to the "Chameleon" colour from the
> Tango palette than the colour from Anatoly's image.

It's that way on my FF7 as well. Welcome to color spaces.

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
? Jasper


From jonathan+twisted at jsphere.com  Mon Nov  7 10:41:47 2011
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Mon, 7 Nov 2011 17:41:47 +0200
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAA0H+QTDttJNjeX+ar3jxexvoRSiiUQYp-A5b6xTMmWEXsg+Yw@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
	<CAA0H+QRiw9L1TcxgLPLrMCbk=fS0BN3vC51rjbaYA8v1LF2=Jg@mail.gmail.com>
	<CAM187SFM5vM3PZbR7WeEf=_RA37E5HCEvw0qF-r-phANuU3hjg@mail.gmail.com>
	<CAA0H+QTDttJNjeX+ar3jxexvoRSiiUQYp-A5b6xTMmWEXsg+Yw@mail.gmail.com>
Message-ID: <CAM187SEhezkbPOCySGBg+cRpM3kvn=0xVYw__aCMm7WOggX5PA@mail.gmail.com>

On Mon, Nov 7, 2011 at 17:03, Jasper St. Pierre <jstpierre at mecheye.net> wrote:
> It's that way on my FF7 as well. Welcome to color spaces.

Looks like I inadvertently saved it with the wrong embedded colour
profile. Oops.


From jml at mumak.net  Mon Nov  7 13:06:59 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 7 Nov 2011 18:06:59 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
Message-ID: <CAHZ8tnYMyid9rSm7JLXsp9c1OOi5YRjjMdYEQTAP4A-yVfVcYQ@mail.gmail.com>

On Tue, Nov 1, 2011 at 6:48 PM, Glyph <glyph at twistedmatrix.com> wrote:
> On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:
>
>> On 01/11/11 15:28, Christopher Armstrong wrote:
>>
>>> I whole-heartedly agree with the sentiment, though. We need to get rid
>>> of the global reactor.
>>
>> Why?
>
> Sometimes you want a different reactor. ?The most common reason is unit testing, although if we could successfully eliminate the global reactor everywhere, there are other things that we might be able to do: slowing down or speeding up time from a protocol's perspective (by replacing IReactorTime), grouping related objects together in reactors that can be shut down together (so that reactor.stop() doesn't actually end the process); or, similarly, suspending a group of related objects (removeReader()/removeWriter() on everything) so that they can be inspected for debugging purposes, without suspending the thing doing the inspecting (a manhole python prompt).
>
>> I find the "pass reactor as 1st argument to everything" API pattern
>> messy. I'm sure there's a good reason. What is it?
>
> This pattern is a solution to the problem, but I agree that it is possibly not the optimal solution. ?It sort of points in a direction where every possible module that might be imported becomes an argument to your function. ?After all, there are plenty of other modules which have to be mocked for testing, why not just make everyone's __init__ method take sys.modules as an argument too, and never import anything? ?In more complex systems this can definitely turn into a bit of a mess.
>
> Nevertheless, "real reactor as default argument" is not a huge improvement either, because it typically breaks one level out. ?If you have 'a(reactor=defaultReactor)' and then 'b()' needs to call 'a', half the time 'b' will forget to supply a reactor argument and call 'a()' passing nothing, because that appears to be the suggested API. ? Any code that calls 'b()' then needs to deal with the fact that the global reactor is going to get used, even if it has a cleanly encapsulated parameter of its own. ?With sufficient discipline, of course, this approach is equivalent.
...
> If you can think of a better solution that addresses all of these concerns simultaneously somehow, please share, I'd love to hear it :-).

reactor = getUtility(IReactor)?

jml


From tobias.oberstein at tavendo.de  Mon Nov  7 13:20:36 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 7 Nov 2011 10:20:36 -0800
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <68BB485F-5883-4A49-A17B-5AA212F6737B@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
	<1320495156.2042.100.camel@blake>
	<634914A010D0B943A035D226786325D42D0C0CE449@EXVMBX020-12.exch020.serverdata.net>
	<68BB485F-5883-4A49-A17B-5AA212F6737B@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE64E@EXVMBX020-12.exch020.serverdata.net>

Ok, I've prepared

http://twistedmatrix.com/trac/attachment/ticket/1918/kqueue.patch

which passes all tests (FreeBSD 8.3 p3 i386 / Python 2.7.1) but the ones related to open FDs (which are unrelated to the reactor stuff).

This works for me for FreeBSD .. I've tried on MacOSX .. there seem to be PTY issues there. Well.

I've also updated the

http://pypi.python.org/pypi/txkqreactor/0.2

for anyone who wants to try before this gets eventually merged into Twisted.


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph Lefkowitz
Gesendet: Sonntag, 6. November 2011 22:13
An: Twisted general discussion
Betreff: Re: [Twisted-Python] kqueue reactor / ticket #1918


On Nov 5, 2011, at 1:46 PM, Tobias Oberstein wrote:


Then, baseline. I've run the trial using select reactor in the
expectation of finding all tests passed.

This is not the case, there are a couple of failed ones. Those are
also failed with the kqueue reactor, so I need to know whether I need
to inspect those or those are problems unrelated to the reactor, but of
general (platform?) nature.

Are you using Twisted 11? Many of these issues are, if I'm not mistaken,
fixed in trunk (though perhaps not all). So trunk is probably a better baseline
to work off of.

Ok, I'm using trunk now.

1)
The errors in

twisted.python.test.test_components

are gone.

2)
The errors in

twisted.internet.test.test_posixprocess
twisted.internet.test.test_process

are still there ... and they show up for select, poll and kqueue reactors.

They all somehow relate to "open FDs":

twisted.internet.test.test_posixprocess
 FileDescriptorTests
   test_expectedFDs ...                                                 [FAIL]

twisted.internet.test.test_process
 PTYProcessTestsBuilder_KQueueReactor
   test_openFileDescriptors ...                                        [ERROR]
 PTYProcessTestsBuilder_PollReactor
   test_openFileDescriptors ...                                        [ERROR]
 PTYProcessTestsBuilder_SelectReactor
   test_openFileDescriptors ...                                        [ERROR]
ProcessTestsBuilder_SelectReactor
   test_openFileDescriptors ...                                        [ERROR]

This might more a FreeBSD related thing. ?

Yes.

These tests should pass; I am guessing this has something to do with the still-open ticket <http://tm.tl/4747>.  Maybe have a look at fixing that?

You might be able to work around it on your system this by mounting fdescfs at /dev/fd.  (This really ought to be the default, please bother someone in FreeBSD-land to make it so. :)).

It would be useful to include tracebacks with the errors.  "trial --rterrors" is useful, as it includes the tracebacks  especially if you are experiencing hanging with the tests.


3)
I think I've nailed down the Half-Close stuff.

Awesome.  Do you have a link to a changeset for that?  (Did I miss it earlier in the thread?)


4)
These are kqueue specific. Need to investigate further.

These are the ones to focus on for <http://tm.tl/1918>, then :).


twisted.internet.test.test_fdset
 ReactorFDSetTestsBuilder_KQueueReactor
   test_lostFileDescriptor ...                                         [ERROR]
   test_removedFromReactor ...                                          [FAIL]

The first one comes up, since

removeReader()

is called for a FD which is gone,  and leads to a socket exception from fd = reader.fileno()

It sounds like you've narrowed this down pretty far!  Good work.


5)
These are kqueue specific. Need to investigate further.

twisted.conch.test.test_conch

The fail on the kqeue control call .. see below.

Any ideas what could be the reason?

I would suggest fixing the issues you outlined in point 4 first.  It's really unfortunate that reactor issues are being caught by conch tests.  The reactor tests should be comprehensive enough to catch everything in the reactor.

This may just be a side-effect of the other errors you're tracking down, so see if you can fix those, and then loop back to these.  If they disappear, then great.  If not, then we should have a test that specifically tests this functionality and doesn't rely on weird and difficult to diagnose errors in conch to find them.

Thanks again for working on this!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111107/2d0df622/attachment.htm 

From exarkun at twistedmatrix.com  Mon Nov  7 13:25:36 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 07 Nov 2011 18:25:36 -0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted
	test	suite
In-Reply-To: <CAHZ8tnYMyid9rSm7JLXsp9c1OOi5YRjjMdYEQTAP4A-yVfVcYQ@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<CAHZ8tnYMyid9rSm7JLXsp9c1OOi5YRjjMdYEQTAP4A-yVfVcYQ@mail.gmail.com>
Message-ID: <20111107182536.20412.1601697382.divmod.xquotient.1@localhost.localdomain>

On 06:06 pm, jml at mumak.net wrote:
>On Tue, Nov 1, 2011 at 6:48 PM, Glyph <glyph at twistedmatrix.com> wrote:
>>On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:
>>>On 01/11/11 15:28, Christopher Armstrong wrote:
>>>>I whole-heartedly agree with the sentiment, though. We need to get 
>>>>rid
>>>>of the global reactor.
>>>
>>>Why?
>>
>>Sometimes you want a different reactor. ?The most common reason is 
>>unit testing, although if we could successfully eliminate the global 
>>reactor everywhere, there are other things that we might be able to 
>>do: slowing down or speeding up time from a protocol's perspective (by 
>>replacing IReactorTime), grouping related objects together in reactors 
>>that can be shut down together (so that reactor.stop() doesn't 
>>actually end the process); or, similarly, suspending a group of 
>>related objects (removeReader()/removeWriter() on everything) so that 
>>they can be inspected for debugging purposes, without suspending the 
>>thing doing the inspecting (a manhole python prompt).
>>>I find the "pass reactor as 1st argument to everything" API pattern
>>>messy. I'm sure there's a good reason. What is it?
>>
>>This pattern is a solution to the problem, but I agree that it is 
>>possibly not the optimal solution. ?It sort of points in a direction 
>>where every possible module that might be imported becomes an argument 
>>to your function. ?After all, there are plenty of other modules which 
>>have to be mocked for testing, why not just make everyone's __init__ 
>>method take sys.modules as an argument too, and never import anything? 
>>In more complex systems this can definitely turn into a bit of a mess.
>>
>>Nevertheless, "real reactor as default argument" is not a huge 
>>improvement either, because it typically breaks one level out. ?If you 
>>have 'a(reactor=defaultReactor)' and then 'b()' needs to call 'a', 
>>half the time 'b' will forget to supply a reactor argument and call 
>>'a()' passing nothing, because that appears to be the suggested API. 
>>Any code that calls 'b()' then needs to deal with the fact that the 
>>global reactor is going to get used, even if it has a cleanly 
>>encapsulated parameter of its own. ?With sufficient discipline, of 
>>course, this approach is equivalent.
>...
>>If you can think of a better solution that addresses all of these 
>>concerns simultaneously somehow, please share, I'd love to hear it 
>>:-).
>
>reactor = getUtility(IReactor)?

That's not really a solution.  It's the barest glimpse of a large system 
which might be applied as a solution.  Do you want to expand it?

Jean-Paul


From mostawesomedude at gmail.com  Mon Nov  7 17:33:29 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Mon, 7 Nov 2011 14:33:29 -0800
Subject: [Twisted-Python] [ANN] txWS 0.6.2
Message-ID: <CALiqSLf2=hQV=Za+9-EjRvNmK-zW9ibw2VOU376KbPNO7_cTUQ@mail.gmail.com>

Hi,

I figured I should announce this, so: txWS 0.6.2 has been made
available. You can grab it from PyPI
(http://pypi.python.org/pypi/txWS) or from source on Github
(https://github.com/MostAwesomeDude/txWS).

txWS is a small, single-module library for augmenting Twisted with
WebSockets support. Unlike other approaches, txWS has a minimalist
philosophy and only provides enough WebSockets machinery to wrap
server factories. Notably, txWS does not provide a WebSockets client;
we believe that it is harmful to the ecosystem of the Internet to do
so. (Additionally, I'm only paid for the server-side stuff.)

Feedback (i.e. criticism, insults) is welcome; this library has seen
exactly zero usage outside OSUOSL and we hope to continue to
contribute to the Twisted world.

~ C.
Oregon State University Open Source Lab

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>


From glyph at twistedmatrix.com  Tue Nov  8 00:44:44 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 7 Nov 2011 21:44:44 -0800
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <20111107182536.20412.1601697382.divmod.xquotient.1@localhost.localdomain>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<CAHZ8tnYMyid9rSm7JLXsp9c1OOi5YRjjMdYEQTAP4A-yVfVcYQ@mail.gmail.com>
	<20111107182536.20412.1601697382.divmod.xquotient.1@localhost.localdomain>
Message-ID: <5AE3EBC8-AB2B-4730-9CF7-03CE8A557391@twistedmatrix.com>


On Nov 7, 2011, at 10:25 AM, exarkun at twistedmatrix.com wrote:

>> reactor = getUtility(IReactor)?
> 
> That's not really a solution.  It's the barest glimpse of a large system which might be applied as a solution.  Do you want to expand it?

I'd like to echo this request for exposition.  My understanding is that 'getUtility' is just a baroque way to access a global variable, with most of the disadvantages of said globalness intact.  What does it provide that our existing import strategy doesn't?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111107/e825027d/attachment.htm 

From jml at mumak.net  Tue Nov  8 06:33:33 2011
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 8 Nov 2011 11:33:33 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <5AE3EBC8-AB2B-4730-9CF7-03CE8A557391@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<CAHZ8tnYMyid9rSm7JLXsp9c1OOi5YRjjMdYEQTAP4A-yVfVcYQ@mail.gmail.com>
	<20111107182536.20412.1601697382.divmod.xquotient.1@localhost.localdomain>
	<5AE3EBC8-AB2B-4730-9CF7-03CE8A557391@twistedmatrix.com>
Message-ID: <CAHZ8tnY4VgxHkJCSJiBW4bdR=0OUVQSSUBSmipL0LDip_EjYLg@mail.gmail.com>

On Tue, Nov 8, 2011 at 5:44 AM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
>> On Nov 7, 2011, at 10:25 AM, exarkun at twistedmatrix.com wrote:
>>
>>> reactor = getUtility(IReactor)?
>
>> That's not really a solution. ?It's the barest glimpse of a large system
>> which might be applied as a solution. ?Do you want to expand it?
>
> I'd like to echo this request for exposition. ?My understanding is that
> 'getUtility' is just a baroque way to access a global variable, with most of
> the disadvantages of said globalness intact. ?What does it provide that our
> existing import strategy doesn't?

An extra layer of abstraction and XML-based configuration ? what's not to love?

It could allow for a clearer expression of dependency. Something that
only uses IReactorTime would only get the utility for that. This would
in turn make it easier to swap out only parts for testing, or to do
things like "speed up or slow down time from a protocol's
perspective".

However, you're right. Ultimately, it's a process-wide configuration
setting. That means that setting it is a slightly politer form of
monkey patching and that it's not fine-grained enough to do the other
things you suggested (e.g. "suspending a group of related objects").

jml


From dsturmfels at gmail.com  Tue Nov  8 06:59:45 2011
From: dsturmfels at gmail.com (dsturmfels at gmail.com)
Date: Tue, 8 Nov 2011 22:59:45 +1100
Subject: [Twisted-Python] Rts/Cts Serial port flow control in twisted
Message-ID: <CAAR7Vgq-71OJucSCFY5VsaykHBQMhRPgYAL5BtM616hV1Uzuwg@mail.gmail.com>

Hi,
Has anyone had much experience with serial flow control in twisted?

I've been using a twisted serial port in my gtk+ software for quite a while
now, and I can get xonxoff flow control to work, but for some reason,
rtscts flow control isn't working (or I may be using it wrong).

I'm connecting the software, via a usb-serial cable, to a Datalogic barcode
scanner cradle.
I've been able to replicate this problem with pyserial as well.

Without flow control on, I can for example, send a particular serial string
to the cradle, and the cradle replies instantly with it's software version
(as a string).
If I scan a barcode, this also instantly shows up in twisted/pyserial/etc
(as a string).

With xonxoff flow control on in both the software and cradle, the serial
connection works exactly the same as having no flow control on.

With rtscts flow control on in both the software and cradle however, the
cradle doesn't reply instantly with it's software version when the correct
string is sent.
However, a scanned barcode shows up instantly in the twisted/pyserial
software, and if you've previously requested the cradle software version,
the software version string only shows up directly after receiving a
barcode string.

Am I doing something wrong, or does anyone know what might be going on here?

Thanks,

Darcy.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111108/f1134232/attachment.htm 

From exarkun at twistedmatrix.com  Tue Nov  8 09:57:37 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 08 Nov 2011 14:57:37 -0000
Subject: [Twisted-Python] Rts/Cts Serial port flow control in twisted
In-Reply-To: <CAAR7Vgq-71OJucSCFY5VsaykHBQMhRPgYAL5BtM616hV1Uzuwg@mail.gmail.com>
References: <CAAR7Vgq-71OJucSCFY5VsaykHBQMhRPgYAL5BtM616hV1Uzuwg@mail.gmail.com>
Message-ID: <20111108145737.20412.971335401.divmod.xquotient.12@localhost.localdomain>

On 11:59 am, dsturmfels at gmail.com wrote:
>Hi,
>Has anyone had much experience with serial flow control in twisted?

I don't. :)  It sounds like this may not really have much to do with 
Twisted, though.
>I've been using a twisted serial port in my gtk+ software for quite a 
>while
>now, and I can get xonxoff flow control to work, but for some reason,
>rtscts flow control isn't working (or I may be using it wrong).
>
>I'm connecting the software, via a usb-serial cable, to a Datalogic 
>barcode
>scanner cradle.
>I've been able to replicate this problem with pyserial as well.

As you perhaps already know, Twisted's serial port support is 
implemented in terms of pyserial - and the layer Twisted adds is very 
thin.  So the problem you experience with pyserial is probably exactly 
the same as the problem you experience with Twisted, since the latter is 
actually the same code as the former.
>
>Without flow control on, I can for example, send a particular serial 
>string
>to the cradle, and the cradle replies instantly with it's software 
>version
>(as a string).
>If I scan a barcode, this also instantly shows up in 
>twisted/pyserial/etc
>(as a string).
>
>With xonxoff flow control on in both the software and cradle, the 
>serial
>connection works exactly the same as having no flow control on.
>
>With rtscts flow control on in both the software and cradle however, 
>the
>cradle doesn't reply instantly with it's software version when the 
>correct
>string is sent.
>However, a scanned barcode shows up instantly in the twisted/pyserial
>software, and if you've previously requested the cradle software 
>version,
>the software version string only shows up directly after receiving a
>barcode string.
>
>Am I doing something wrong, or does anyone know what might be going on 
>here?

Do you know that the device supports RTS/CTS?  Do you know that the USB 
driver for the device supports it?  Do you know that the USB driver 
support for it is bug free? :)

Sorry I can't add anything more helpful.  I think you want to be looking 
for the problem at a pretty low level, though.  Perhaps even at the 
level of measuring voltage on the RTS pin...

Jean-Paul


From JOHN at egh.com  Tue Nov  8 10:53:10 2011
From: JOHN at egh.com (John Santos)
Date: Tue, 8 Nov 2011 11:53:10 -0400
Subject: [Twisted-Python] Rts/Cts Serial port flow control in twisted
In-Reply-To: <20111108145737.20412.971335401.divmod.xquotient.12@localhost.localdomain>
Message-ID: <1111108115014.16719A-100000@Ives.egh.com>

On Tue, 8 Nov 2011 exarkun at twistedmatrix.com wrote:

> On 11:59 am, dsturmfels at gmail.com wrote:
> >Hi,
> >Has anyone had much experience with serial flow control in twisted?
> 
> I don't. :)  It sounds like this may not really have much to do with 
> Twisted, though.
> >I've been using a twisted serial port in my gtk+ software for quite a 
> >while
> >now, and I can get xonxoff flow control to work, but for some reason,
> >rtscts flow control isn't working (or I may be using it wrong).
> >
> >I'm connecting the software, via a usb-serial cable, to a Datalogic 
> >barcode
> >scanner cradle.
> >I've been able to replicate this problem with pyserial as well.
> 
> As you perhaps already know, Twisted's serial port support is 
> implemented in terms of pyserial - and the layer Twisted adds is very 
> thin.  So the problem you experience with pyserial is probably exactly 
> the same as the problem you experience with Twisted, since the latter is 
> actually the same code as the former.
> >
> >Without flow control on, I can for example, send a particular serial 
> >string
> >to the cradle, and the cradle replies instantly with it's software 
> >version
> >(as a string).
> >If I scan a barcode, this also instantly shows up in 
> >twisted/pyserial/etc
> >(as a string).
> >
> >With xonxoff flow control on in both the software and cradle, the 
> >serial
> >connection works exactly the same as having no flow control on.
> >
> >With rtscts flow control on in both the software and cradle however, 
> >the
> >cradle doesn't reply instantly with it's software version when the 
> >correct
> >string is sent.
> >However, a scanned barcode shows up instantly in the twisted/pyserial
> >software, and if you've previously requested the cradle software 
> >version,
> >the software version string only shows up directly after receiving a
> >barcode string.
> >
> >Am I doing something wrong, or does anyone know what might be going on 
> >here?
> 
> Do you know that the device supports RTS/CTS?  Do you know that the USB 
> driver for the device supports it?  Do you know that the USB driver 
> support for it is bug free? :)

You also need to know that the serial cable(s) include the necessary 
leads, and that the null modem (or whatever) properly crosses them over.

An RS-232 break-out box (if they are still available) would be very
helpful here.

> 
> Sorry I can't add anything more helpful.  I think you want to be looking 
> for the problem at a pretty low level, though.  Perhaps even at the 
> level of measuring voltage on the RTS pin...
> 
> Jean-Paul
> 
> 

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539



From exarkun at twistedmatrix.com  Tue Nov  8 20:11:07 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Nov 2011 01:11:07 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4E15B499.2030206@imperial.ac.uk>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
Message-ID: <20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>

On 7 Jul, 01:28 pm, p.mayers at imperial.ac.uk wrote:
>On 06/07/11 20:44, exarkun at twistedmatrix.com wrote:
>>Thanks for volunteering.  It seems like the git mirror is well in 
>>hand.
>
>If so, can someone update this:
>
>http://twistedmatrix.com/trac/wiki/GitMirror

Apparently not.  It seems the other volunteers to deal with the git 
mirror haven't been able to dedicate the time necessary to this.

Anyone new want to step up?

Jean-Paul


From glyph at twistedmatrix.com  Tue Nov  8 20:43:09 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Nov 2011 17:43:09 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
Message-ID: <4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>


On Nov 8, 2011, at 5:11 PM, exarkun at twistedmatrix.com wrote:

> On 7 Jul, 01:28 pm, p.mayers at imperial.ac.uk wrote:
>> On 06/07/11 20:44, exarkun at twistedmatrix.com wrote:
>>> Thanks for volunteering.  It seems like the git mirror is well in 
>>> hand.
>> 
>> If so, can someone update this:
>> 
>> http://twistedmatrix.com/trac/wiki/GitMirror
> 
> Apparently not.  It seems the other volunteers to deal with the git 
> mirror haven't been able to dedicate the time necessary to this.
> 
> Anyone new want to step up?

I should stress that the most pressing problem here is not necessarily to provide a comprehensive, elaborate, automatic mirroring setup, but rather to provide canonical, correct, convenient instructions to people who are submitting tickets for review, and who want to use git for development.  Ideally these instructions would not end up knocking over our version control server, either :).  Right now, patches from git users show up in a variety of states of confusion and disarray: they're either based on an incredibly ancient version of trunk, or they're on a non-master branch of some repository and they don't say that, or they include 'a/' and 'b/' prefixes (i.e. they're -p1 patches when they should be -p0 according to the submission standard).

This is increasingly frustrating for me as a reviewer.  I've got git installed; I don't even mind running a git command or two in the process of doing a review.  But I would really like to get our submission standards straight so that the patches and branches that show up for review are something I (and others) can sensibly apply.

-glyph



From glyph at twistedmatrix.com  Tue Nov  8 20:59:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Nov 2011 17:59:56 -0800
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE64E@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
	<1320495156.2042.100.camel@blake>
	<634914A010D0B943A035D226786325D42D0C0CE449@EXVMBX020-12.exch020.serverdata.net>
	<68BB485F-5883-4A49-A17B-5AA212F6737B@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE64E@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <ACB20B42-FB43-4188-A340-388B388E5108@twistedmatrix.com>


On Nov 7, 2011, at 10:20 AM, Tobias Oberstein wrote:

> Ok, I've prepared
>  
> http://twistedmatrix.com/trac/attachment/ticket/1918/kqueue.patch
>  
> which passes all tests (FreeBSD 8.3 p3 i386 / Python 2.7.1) but the ones related to open FDs (which are unrelated to the reactor stuff).
>  
> This works for me for FreeBSD .. I've tried on MacOSX .. there seem to be PTY issues there. Well.
>  
> I've also updated the
>  
> http://pypi.python.org/pypi/txkqreactor/0.2
>  
> for anyone who wants to try before this gets eventually merged into Twisted.
> 

I've reviewed it, although looking at this email now I realize I missed the 'kqueue.patch' and instead reviewed just the reactor and not the test change.  Your patch is totally formatted correctly so please ignore the comments to the contrary on the ticket!  And the test change looks like it might fix the failure that I mention in the review, so if you just deal with a few of those nitpicky issues and resubmit with the patch attachment and the 'review' a little closer to each other, I think this may be ready to land in Twisted soon.

If you want to maintain txkqreactor for older users of Twisted, you might want to provide a reactor plugin in your package so that users can do 'twistd --reactor txkq'.

Thanks again, it's great to see progress on this ancient ticket :).

-glyph





-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111108/fff5e05e/attachment.htm 

From dave at krondo.com  Tue Nov  8 21:30:52 2011
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 8 Nov 2011 18:30:52 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
Message-ID: <CAPRbp05HLObedKnyuF9CWgP1Poo8-9gkHnMStxQS7=o+pfKTvQ@mail.gmail.com>

2011/11/8 Glyph Lefkowitz <glyph at twistedmatrix.com>

>
> On Nov 8, 2011, at 5:11 PM, exarkun at twistedmatrix.com wrote:
>
> > On 7 Jul, 01:28 pm, p.mayers at imperial.ac.uk wrote:
> >> On 06/07/11 20:44, exarkun at twistedmatrix.com wrote:
> >>> Thanks for volunteering.  It seems like the git mirror is well in
> >>> hand.
> >>
> >> If so, can someone update this:
> >>
> >> http://twistedmatrix.com/trac/wiki/GitMirror
> >
> > Apparently not.  It seems the other volunteers to deal with the git
> > mirror haven't been able to dedicate the time necessary to this.
> >
> > Anyone new want to step up?
>
> I should stress that the most pressing problem here is not necessarily to
> provide a comprehensive, elaborate, automatic mirroring setup, but rather
> to provide canonical, correct, convenient instructions to people who are
> submitting tickets for review, and who want to use git for development.
>  Ideally these instructions would not end up knocking over our version
> control server, either :).  Right now, patches from git users show up in a
> variety of states of confusion and disarray: they're either based on an
> incredibly ancient version of trunk, or they're on a non-master branch of
> some repository and they don't say that, or they include 'a/' and 'b/'
> prefixes (i.e. they're -p1 patches when they should be -p0 according to the
> submission standard).
>
> This is increasingly frustrating for me as a reviewer.  I've got git
> installed; I don't even mind running a git command or two in the process of
> doing a review.  But I would really like to get our submission standards
> straight so that the patches and branches that show up for review are
> something I (and others) can sensibly apply.


I am about to go out of town, but when I get back (December) I will have a
go at this
if no one else has done so already.

Every time in the past when I have attempted to make a git clone of the
Twisted repository,
git has complained that the Twisted svn repo is corrupt in some way. If
there is already a
reliable bzr mirror of Twisted, it might be easier to base the git repo on
that instead. Does
that seem feasible?

dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111108/c0200e77/attachment.htm 

From screwtape at froup.com  Tue Nov  8 22:39:57 2011
From: screwtape at froup.com (Tim Allen)
Date: Wed, 9 Nov 2011 14:39:57 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
Message-ID: <20111109033957.GB9962@boombah.thristian.org>

On Tue, Nov 08, 2011 at 05:43:09PM -0800, Glyph Lefkowitz wrote:
> > On 7 Jul, 01:28 pm, p.mayers at imperial.ac.uk wrote:
> >> http://twistedmatrix.com/trac/wiki/GitMirror
> 
> I should stress that the most pressing problem here is not necessarily
> to provide a comprehensive, elaborate, automatic mirroring setup, but
> rather to provide canonical, correct, convenient instructions to
> people who are submitting tickets for review, and who want to use git
> for development.  Ideally these instructions would not end up knocking
> over our version control server, either :).

As far as I know (having written most of the documentation in the linked
wiki page, and from a brief skim through the git-svn manpage) it's
impossible to make a "shallow" clone with git-svn (something like an
ordinary "svn checkout", or "git clone --depth N"), so anyone who wants
to contribute to Twisted via git needs to clone the repository from
scratch (potentially overloading the SVN server, although nobody seemed
to notice or complain when I was doing my git-svn clone), or just copy
a tarball of somebody's comprehensive, elaborate, automatic mirroring
setup.

I'm not sure why I didn't document how to properly clone the Twisted SVN
repo with git-svn; I don't recall it being too hard (with the exception
of some old, closed branches with '+' in the name which I just blew
away), but it did take long enough that I didn't really want to
experiment and risk overloading the SVN server. 

With access to the SVN server over a local network, or with a lot of
patience, it shouldn't take much messing about to figure out canonical
"make a clone" and "update your clone" instructions.

> Right now, patches from git users show up in a variety of states of
> confusion and disarray: they're either based on an incredibly ancient
> version of trunk, or they're on a non-master branch of some repository
> and they don't say that,

I'm not sure why that would be, except that possibly they found
a tarball of somebody else's git-svn clone and forgot to update it, or
they're confused about the best way to get cloned from some unofficial,
no-longer updated mirror. Fixing this probably depends on having the
canonical, correct, convenient instructions and advertising them widely.

> or they include 'a/' and 'b/' prefixes (i.e.  they're -p1 patches when
> they should be -p0 according to the submission standard).

Git doesn't provide any way to generate patches without the fixed,
standard prefixes. As I understand it, this is to prevent ambiguities
when filenames contain spaces. So, you're probably stuck with it. :/


From glyph at twistedmatrix.com  Wed Nov  9 01:46:49 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Nov 2011 22:46:49 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAPRbp05HLObedKnyuF9CWgP1Poo8-9gkHnMStxQS7=o+pfKTvQ@mail.gmail.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<CAPRbp05HLObedKnyuF9CWgP1Poo8-9gkHnMStxQS7=o+pfKTvQ@mail.gmail.com>
Message-ID: <6DD44862-DA53-4945-9793-F45BD925E0E6@twistedmatrix.com>


On Nov 8, 2011, at 6:30 PM, Dave Peticolas wrote:

> I am about to go out of town, but when I get back (December) I will have a go at this
> if no one else has done so already.

Great, glad to hear it.  I hope we won't have to wait that long though ;).

> Every time in the past when I have attempted to make a git clone of the Twisted repository,
> git has complained that the Twisted svn repo is corrupt in some way.

It's a good thing that git has such lucid, well-documented error messages, or that message might confuse some people.  *cough*

> If there is already a reliable bzr mirror of Twisted, it might be easier to base the git repo on that instead. Does that seem feasible?

The reliable bzr mirror is available at <http://svn.twistedmatrix.com/bzr/Twisted/>.  I don't know much about bzr / git conversion beyond the existence of <https://launchpad.net/bzr-git>.  Does it work?  Is it any good?  The fact that it says right in the description that it doesn't support 'push' suggests to me that you can't get revisions from bzr to git, but hopefully I'm wrong about that.

-glyph




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111108/ea34ec17/attachment.htm 

From ivan at ludios.org  Wed Nov  9 02:06:49 2011
From: ivan at ludios.org (Ivan Kozik)
Date: Wed, 9 Nov 2011 07:06:49 +0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109033957.GB9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
Message-ID: <CAKyntiLoRk7H43x29Ds3e6+Gw5EhJQj4vnmgPx5rcpX+wdS6oQ@mail.gmail.com>

On Wed, Nov 9, 2011 at 03:39, Tim Allen <screwtape at froup.com> wrote:
> On Tue, Nov 08, 2011 at 05:43:09PM -0800, Glyph Lefkowitz wrote:
>> or they include 'a/' and 'b/' prefixes (i.e. ?they're -p1 patches when
>> they should be -p0 according to the submission standard).
>
> Git doesn't provide any way to generate patches without the fixed,
> standard prefixes. As I understand it, this is to prevent ambiguities
> when filenames contain spaces. So, you're probably stuck with it. :/

I thought so too, but Glyph found this today:

git diff --src-prefix="./" --dst-prefix="./"


Ivan


From glyph at twistedmatrix.com  Wed Nov  9 03:50:23 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Nov 2011 00:50:23 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109033957.GB9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
Message-ID: <43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>


On Nov 8, 2011, at 7:39 PM, Tim Allen wrote:

> On Tue, Nov 08, 2011 at 05:43:09PM -0800, Glyph Lefkowitz wrote:
>>> On 7 Jul, 01:28 pm, p.mayers at imperial.ac.uk wrote:
>>>> http://twistedmatrix.com/trac/wiki/GitMirror
>> 
>> I should stress that the most pressing problem here is not necessarily
>> to provide a comprehensive, elaborate, automatic mirroring setup, but
>> rather to provide canonical, correct, convenient instructions to
>> people who are submitting tickets for review, and who want to use git
>> for development.  Ideally these instructions would not end up knocking
>> over our version control server, either :).
> 
> As far as I know (having written most of the documentation in the linked
> wiki page, and from a brief skim through the git-svn manpage) it's
> impossible to make a "shallow" clone with git-svn (something like an
> ordinary "svn checkout", or "git clone --depth N"), so anyone who wants
> to contribute to Twisted via git needs to clone the repository from
> scratch (potentially overloading the SVN server, although nobody seemed
> to notice or complain when I was doing my git-svn clone), or just copy
> a tarball of somebody's comprehensive, elaborate, automatic mirroring
> setup.

This is the part I don't understand.  Why doesn't 'git clone' work right in the face of svn metadata?  Is it possible to make it work right?  bzr-svn has some metadata it caches about the svn repository which doesn't stick around in the bzr repo or branch, but (from the performance of using it, at least) it doesn't need to stop the world and grab all of that data for most operations.

> I'm not sure why I didn't document how to properly clone the Twisted SVN
> repo with git-svn; I don't recall it being too hard (with the exception
> of some old, closed branches with '+' in the name which I just blew
> away), but it did take long enough that I didn't really want to
> experiment and risk overloading the SVN server. 

It would be better (for most users) to point to a canonical way to get access to a git-svn clone than to document how to make one, if making one takes 24 hours :).  But please do write this down so that at least the Twisted admins have some concept of how to re-create the git mirror or how to fix the issue if it occurs in the future.

> With access to the SVN server over a local network, or with a lot of
> patience, it shouldn't take much messing about to figure out canonical
> "make a clone" and "update your clone" instructions.

If we had an officially maintained mirror (pushed to github, I hope), I assume that non-committer users would not need to do SVN operations.  That's the main audience I'm interested in right now. There are a couple of committers who might be interested in doing development with git, but I'm confident they can figure that out for themselves :).

>> Right now, patches from git users show up in a variety of states of
>> confusion and disarray: they're either based on an incredibly ancient
>> version of trunk, or they're on a non-master branch of some repository
>> and they don't say that,
> 
> I'm not sure why that would be, except that possibly they found
> a tarball of somebody else's git-svn clone and forgot to update it, or
> they're confused about the best way to get cloned from some unofficial,
> no-longer updated mirror. Fixing this probably depends on having the
> canonical, correct, convenient instructions and advertising them widely.

You edited GitMirror before, you can do it again :).

>> or they include 'a/' and 'b/' prefixes (i.e.  they're -p1 patches when
>> they should be -p0 according to the submission standard).
> 
> Git doesn't provide any way to generate patches without the fixed,
> standard prefixes. As I understand it, this is to prevent ambiguities
> when filenames contain spaces. So, you're probably stuck with it. :/


I finally figured this out.  It is fixable.  The correct options to pass are:

git diff --src-prefix=./ --dst-prefix=./

Maybe it's possible to put this into a configuration file somewhere so that users don't need to type all of that every time?  Please put this on the GitMirror page as well.

-glyph



From screwtape at froup.com  Wed Nov  9 07:49:40 2011
From: screwtape at froup.com (Tim Allen)
Date: Wed, 9 Nov 2011 23:49:40 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
Message-ID: <20111109124940.GC9962@boombah.thristian.org>

On Wed, Nov 09, 2011 at 12:50:23AM -0800, Glyph Lefkowitz wrote:
> On Nov 8, 2011, at 7:39 PM, Tim Allen wrote:
> > As far as I know (having written most of the documentation in the linked
> > wiki page, and from a brief skim through the git-svn manpage) it's
> > impossible to make a "shallow" clone with git-svn (something like an
> > ordinary "svn checkout", or "git clone --depth N"), so anyone who wants
> > to contribute to Twisted via git needs to clone the repository from
> > scratch (potentially overloading the SVN server, although nobody seemed
> > to notice or complain when I was doing my git-svn clone), or just copy
> > a tarball of somebody's comprehensive, elaborate, automatic mirroring
> > setup.
> 
> This is the part I don't understand.  Why doesn't 'git clone' work
> right in the face of svn metadata?

Git has a ".git" directory in each repository, and expects certain files
to be present within it. If there's more stuff that it doesn't know
about, it just ignores it. git-svn keeps its metadata in other files
that git-clone doesn't know or care about, and hence they don't get
cloned.

I guess there's an argument for not cloning them - just because person
X has particular access rights to an SVN server doesn't mean that person
Y should have them just because they cloned a repository from X.

> bzr-svn has some metadata it caches about the svn repository which
> doesn't stick around in the bzr repo or branch, but (from the
> performance of using it, at least) it doesn't need to stop the world
> and grab all of that data for most operations.

In a git-svn-cloned repository, ordinary git operations are as speedy as
you'd expect. "git svn fetch" is slow because (I think) it has to
separately request each changed file from each SVN revision, and I think
there's some other operations that are slow because they involve talking
to the SVN server (like 'tell me what SVN properties are attached to
this file').

> It would be better (for most users) to point to a canonical way to get
> access to a git-svn clone than to document how to make one, if making
> one takes 24 hours :).

Don't worry, it doesn't take 24 hours! It's *much* longer than that! ;)

(as the wiki page states, in early 2010 and from the other side of the
world it took about a week; I don't have a feel for how it changes over
time)

> > I'm not sure why that would be, except that possibly they found
> > a tarball of somebody else's git-svn clone and forgot to update it, or
> > they're confused about the best way to get cloned from some unofficial,
> > no-longer updated mirror. Fixing this probably depends on having the
> > canonical, correct, convenient instructions and advertising them widely.
> 
> You edited GitMirror before, you can do it again :).

I'm editing it to include what we've discussed here, as well as a few
other things that I researched this afternoon and put into a reply that
my MUA ate before it was sent. 

I believe the next step should be that somebody with the required
permissions should connect to a machine on the same physical network as
the SVN server and run:

    time git svn clone --stdlayout --prefix="svn/" \
	    svn+ssh://svn.twistedmatrix.com/svn/Twisted

...then check the load on the SVN server and see if it's going to be an
issue to let the clone complete. If the clone completes successfully,
then (a) we know about how long it takes, and (b) we have a "seed"
repository we can potentially put up for people to download. I'd be
happy to download it, check it, and write up some documentation about
how people should update it. If it doesn't complete successfully, we
should have some helpful error messages, adjust the clone command line
and try again.


From exarkun at twistedmatrix.com  Wed Nov  9 08:22:19 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Nov 2011 13:22:19 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109124940.GC9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
Message-ID: <20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>

On 12:49 pm, screwtape at froup.com wrote:
>[snip]
>
>I believe the next step should be that somebody with the required
>permissions should connect to a machine on the same physical network as
>the SVN server and run:
>
>    time git svn clone --stdlayout --prefix="svn/" \
>             svn+ssh://svn.twistedmatrix.com/svn/Twisted
>
>...then check the load on the SVN server and see if it's going to be an
>issue to let the clone complete. If the clone completes successfully,
>then (a) we know about how long it takes, and (b) we have a "seed"
>repository we can potentially put up for people to download. I'd be
>happy to download it, check it, and write up some documentation about
>how people should update it. If it doesn't complete successfully, we
>should have some helpful error messages, adjust the clone command line
>and try again.

Why do we need to do this again?  There's already 
<http://svn.twistedmatrix.com/git/Twisted>, 
<http://svn.twistedmatrix.com/git/Twisted2.git>, and 
<http://svn.twistedmatrix.com/git/Twisted3.git>.

Jean-Paul


From kevin.horn at gmail.com  Wed Nov  9 08:38:31 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 9 Nov 2011 07:38:31 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
Message-ID: <CA+U=zK2ZCaD2m3+5BwCOk6+4ZbQ6dyg4xU2jfiYNzZrHcx_G5w@mail.gmail.com>

While we're on the topic of version control, I thought I'd mention that I
tried to create a mercurial mirror of the SVN repo using hgsubversion a
couple of weeks ago.  It ran fine until it eventually hung on a particular
commit and just refused to go any further.  I had planned to ask the
hgsubversion people about this but got distracted by other things.

I still intend to follow up at some point.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111109/0b6a4d3e/attachment.htm 

From solipsis at pitrou.net  Wed Nov  9 08:54:37 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 9 Nov 2011 14:54:37 +0100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<CA+U=zK2ZCaD2m3+5BwCOk6+4ZbQ6dyg4xU2jfiYNzZrHcx_G5w@mail.gmail.com>
Message-ID: <20111109145437.0b51fad8@pitrou.net>

On Wed, 9 Nov 2011 07:38:31 -0600
Kevin Horn <kevin.horn at gmail.com> wrote:
> While we're on the topic of version control, I thought I'd mention that I
> tried to create a mercurial mirror of the SVN repo using hgsubversion a
> couple of weeks ago.  It ran fine until it eventually hung on a particular
> commit and just refused to go any further.  I had planned to ask the
> hgsubversion people about this but got distracted by other things.

I'm not using hgsubversion but I have a simple mirror of SVN trunk (and
only that) here: http://hg.pitrou.net/public/twisted/trunk/

Or you can also use https://bitbucket.org/pitrou/t3k/, which implicitly
contains the above-mentioned truk.

Regards

Antoine.




From screwtape at froup.com  Wed Nov  9 09:18:19 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 10 Nov 2011 01:18:19 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
Message-ID: <20111109141819.GD9962@boombah.thristian.org>

On Wed, Nov 09, 2011 at 01:22:19PM -0000, exarkun at twistedmatrix.com wrote:
> Why do we need to do this again?  There's already 
> <http://svn.twistedmatrix.com/git/Twisted>, 
> <http://svn.twistedmatrix.com/git/Twisted2.git>, and 
> <http://svn.twistedmatrix.com/git/Twisted3.git>.

The wiki mentions the first one a couple of times, although strictly
speaking you need to add "/.git" to the end to get a URL you can clone
from. Apart from being out-of-date, it seems to be missing a lot of
branches (there's only 56, and it stopped updating in 2011-03; my
personal git-svn hasn't been updated since 2010-09 and has 2062
branches), it hasn't correctly imported the branches under "releases",
and the only tags are "last_vfs_and_web2" and "releases".

I guess it's not strictly necessary to have tags or releases imported if
the goal is to let people develop patches against trunk, but the fact
that branches are missing worries me - if a Twisted committer adds your
patch to a branch, you want to be confident that the new branch will
actually show up when you update your repository.

As for the other two, this is the first I've heard of them. Is there any
documentation about how they differ, are there records of how these
repositories were created and/or updated that I could add to the
GitMirror wiki-page?


From tom at recursivedream.com  Wed Nov  9 09:30:57 2011
From: tom at recursivedream.com (Tom Davis)
Date: Wed, 09 Nov 2011 09:30:57 -0500
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109124940.GC9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
Message-ID: <4EBA8EA1.4090805@recursivedream.com>

On 11/09/2011 07:49 AM, Tim Allen wrote:
> On Wed, Nov 09, 2011 at 12:50:23AM -0800, Glyph Lefkowitz wrote:
>> On Nov 8, 2011, at 7:39 PM, Tim Allen wrote:
>>> As far as I know (having written most of the documentation in the linked
>>> wiki page, and from a brief skim through the git-svn manpage) it's
>>> impossible to make a "shallow" clone with git-svn (something like an
>>> ordinary "svn checkout", or "git clone --depth N"), so anyone who wants
>>> to contribute to Twisted via git needs to clone the repository from
>>> scratch (potentially overloading the SVN server, although nobody seemed
>>> to notice or complain when I was doing my git-svn clone), or just copy
>>> a tarball of somebody's comprehensive, elaborate, automatic mirroring
>>> setup.
>>
>> This is the part I don't understand.  Why doesn't 'git clone' work
>> right in the face of svn metadata?
>
> Git has a ".git" directory in each repository, and expects certain files
> to be present within it. If there's more stuff that it doesn't know
> about, it just ignores it. git-svn keeps its metadata in other files
> that git-clone doesn't know or care about, and hence they don't get
> cloned.
>
> I guess there's an argument for not cloning them - just because person
> X has particular access rights to an SVN server doesn't mean that person
> Y should have them just because they cloned a repository from X.
>
>> bzr-svn has some metadata it caches about the svn repository which
>> doesn't stick around in the bzr repo or branch, but (from the
>> performance of using it, at least) it doesn't need to stop the world
>> and grab all of that data for most operations.
>
> In a git-svn-cloned repository, ordinary git operations are as speedy as
> you'd expect. "git svn fetch" is slow because (I think) it has to
> separately request each changed file from each SVN revision, and I think
> there's some other operations that are slow because they involve talking
> to the SVN server (like 'tell me what SVN properties are attached to
> this file').
>
>> It would be better (for most users) to point to a canonical way to get
>> access to a git-svn clone than to document how to make one, if making
>> one takes 24 hours :).
>
> Don't worry, it doesn't take 24 hours! It's *much* longer than that! ;)
>
> (as the wiki page states, in early 2010 and from the other side of the
> world it took about a week; I don't have a feel for how it changes over
> time)

It's worth noting that you aren't *required* to clone all eight trillion 
Twisted revisions in order to get a working clone. Doing `git svn clone 
-rN:HEAD <url>` where `N` is some revision number will only clone from 
that revision. Obviously you will not have the entire history of the 
repository at this point, but I highly doubt that would be a meaningful 
loss for the majority of use cases.

I mean, yeah, it'd be nice to have a full git clone, but if you just 
prefer to use git for development and want to submit patches to Twisted 
it's hardly an insurmountable task compared to the other requirements 
for successfully working a ticket to completion.

>
>>> I'm not sure why that would be, except that possibly they found
>>> a tarball of somebody else's git-svn clone and forgot to update it, or
>>> they're confused about the best way to get cloned from some unofficial,
>>> no-longer updated mirror. Fixing this probably depends on having the
>>> canonical, correct, convenient instructions and advertising them widely.
>>
>> You edited GitMirror before, you can do it again :).
>
> I'm editing it to include what we've discussed here, as well as a few
> other things that I researched this afternoon and put into a reply that
> my MUA ate before it was sent.
>
> I believe the next step should be that somebody with the required
> permissions should connect to a machine on the same physical network as
> the SVN server and run:
>
>      time git svn clone --stdlayout --prefix="svn/" \
> 	    svn+ssh://svn.twistedmatrix.com/svn/Twisted
>
> ...then check the load on the SVN server and see if it's going to be an
> issue to let the clone complete. If the clone completes successfully,
> then (a) we know about how long it takes, and (b) we have a "seed"
> repository we can potentially put up for people to download. I'd be
> happy to download it, check it, and write up some documentation about
> how people should update it. If it doesn't complete successfully, we
> should have some helpful error messages, adjust the clone command line
> and try again.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Wed Nov  9 09:49:50 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Nov 2011 14:49:50 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109141819.GD9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<20111109141819.GD9962@boombah.thristian.org>
Message-ID: <20111109144950.20412.1420554947.divmod.xquotient.32@localhost.localdomain>

On 02:18 pm, screwtape at froup.com wrote:
>On Wed, Nov 09, 2011 at 01:22:19PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>Why do we need to do this again?  There's already
>><http://svn.twistedmatrix.com/git/Twisted>,
>><http://svn.twistedmatrix.com/git/Twisted2.git>, and
>><http://svn.twistedmatrix.com/git/Twisted3.git>.
>
>The wiki mentions the first one a couple of times, although strictly
>speaking you need to add "/.git" to the end to get a URL you can clone
>from. Apart from being out-of-date, it seems to be missing a lot of
>branches (there's only 56, and it stopped updating in 2011-03; my
>personal git-svn hasn't been updated since 2010-09 and has 2062
>branches), it hasn't correctly imported the branches under "releases",
>and the only tags are "last_vfs_and_web2" and "releases".

It's out of date because no one who knows how to keep it updated has 
taken the necessary steps for that to happen.

Are there other problems with it which can only be fixed by starting 
over?

The point I am trying to convey is that performing some one-off import 
operation has been done before, repeatedly.  What's going to be 
different this time that causes the clone to stay up to date?
>I guess it's not strictly necessary to have tags or releases imported 
>if
>the goal is to let people develop patches against trunk, but the fact
>that branches are missing worries me - if a Twisted committer adds your
>patch to a branch, you want to be confident that the new branch will
>actually show up when you update your repository.

Indeed.  Is this something that's addressed by the git command in your 
earlier email?
>
>As for the other two, this is the first I've heard of them. Is there 
>any
>documentation about how they differ, are there records of how these
>repositories were created and/or updated that I could add to the
>GitMirror wiki-page?

I have no idea where they came from or how they differ.

Jean-Paul


From exarkun at twistedmatrix.com  Wed Nov  9 10:51:19 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Nov 2011 15:51:19 -0000
Subject: [Twisted-Python] Boston Twisted Sprint: November Edition
In-Reply-To: <CAKJpRM3+uXFd2a7SR-nDWv-STWU6aDPbuQ7LSaeacobORq9RKA@mail.gmail.com>
References: <CAKJpRM3+uXFd2a7SR-nDWv-STWU6aDPbuQ7LSaeacobORq9RKA@mail.gmail.com>
Message-ID: <20111109155119.20412.158665846.divmod.xquotient.34@localhost.localdomain>

On 25 Oct, 02:59 pm, tenth at twistedmatrix.com wrote:
>In an attempt to get back into the habit of holding Monthly sprints 
>planned
>somewhat more in advance, I'm pleased to announce that we'll be hosting
>another Twisted Sprint at the Smarterer offices on Sunday, November 
>13th,
>from about 1:00 to 9:00 PM.
>
>If you'd like to attend but aren't on the contact list, let me know! 
>We
>prefer that sprinters RSVP for food planning purposes (and to receive 
>more
>detailed instructions about getting into the building, which is locked 
>down
>on weekends).
>
>Thanks,

Hello everybody,

Just a reminder that the sprint is coming up.

Jean-Paul


From exarkun at twistedmatrix.com  Wed Nov  9 13:34:34 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Nov 2011 18:34:34 -0000
Subject: [Twisted-Python] Second pre-release of Twisted 11.1.0
In-Reply-To: <4EB29F1D.900@free.fr>
References: <4EB29F1D.900@free.fr>
Message-ID: <20111109183434.20412.1392450266.divmod.xquotient.35@localhost.localdomain>

On 3 Nov, 02:03 pm, therve at free.fr wrote:
> From the sunny land of Orlando, I'm pleased to announce the second
>pre-release of Twisted 11.1.
>
>You can find the tarballs here:
>
>     http://people.canonical.com/~therve/Twisted/11.1.0pre2/
>
>Among the 17 bugs fixed since the last pre-release, a fix in the new 
>TLS
>code in connection lost management, and an error fixed with IOCP under
>64bits Windows.
>
>Please give it all the testing you can!

Doing well on my 32 bit Ubuntu Lucid mail server for several days now.

Jean-Paul


From jeff at ocjtech.us  Wed Nov  9 14:39:44 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 9 Nov 2011 13:39:44 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109124940.GC9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
Message-ID: <CAD-DQxRccx0U+7Z0y-KV8mAWKAjQm7AkGJy1=LKJWHKCbo=zBQ@mail.gmail.com>

On Wed, Nov 9, 2011 at 6:49 AM, Tim Allen <screwtape at froup.com> wrote:
>
> I believe the next step should be that somebody with the required
> permissions should connect to a machine on the same physical network as
> the SVN server and run:
>
> ? ?time git svn clone --stdlayout --prefix="svn/" \
> ? ? ? ? ? ?svn+ssh://svn.twistedmatrix.com/svn/Twisted

Which will fail spectacularly because the Twisted SVN repository does
not use the standard layout that git-svn is expecting.  In particular
the branches/releases and tags/releases directory will really mess
things up.

-- 
Jeff Ollie


From jeff at ocjtech.us  Wed Nov  9 14:41:00 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 9 Nov 2011 13:41:00 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
Message-ID: <CAD-DQxQNW6cm9KB2ujZchkM2_EZPvA5FJdFHbP7i=JBFsTeO-g@mail.gmail.com>

On Wed, Nov 9, 2011 at 7:22 AM,  <exarkun at twistedmatrix.com> wrote:
>
> Why do we need to do this again? ?There's already
> <http://svn.twistedmatrix.com/git/Twisted>,

Last updated in March 2011.

> <http://svn.twistedmatrix.com/git/Twisted2.git>, and

Last updated in 2004

> <http://svn.twistedmatrix.com/git/Twisted3.git>.

Last updated in July 2011.

They all appear to be flawed in that the tags/releases and
branches/releases directories were imported improperly.

-- 
Jeff Ollie


From glyph at twistedmatrix.com  Wed Nov  9 14:42:34 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Nov 2011 11:42:34 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAD-DQxQNW6cm9KB2ujZchkM2_EZPvA5FJdFHbP7i=JBFsTeO-g@mail.gmail.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<CAD-DQxQNW6cm9KB2ujZchkM2_EZPvA5FJdFHbP7i=JBFsTeO-g@mail.gmail.com>
Message-ID: <ABF002AF-5234-4A15-880F-EC470A60CBA3@twistedmatrix.com>


On Nov 9, 2011, at 11:41 AM, Jeffrey Ollie wrote:

> On Wed, Nov 9, 2011 at 7:22 AM,  <exarkun at twistedmatrix.com> wrote:
>> 
>> Why do we need to do this again?  There's already
>> <http://svn.twistedmatrix.com/git/Twisted>,
> 
> Last updated in March 2011.
> 
>> <http://svn.twistedmatrix.com/git/Twisted2.git>, and
> 
> Last updated in 2004
> 
>> <http://svn.twistedmatrix.com/git/Twisted3.git>.
> 
> Last updated in July 2011.
> 
> They all appear to be flawed in that the tags/releases and
> branches/releases directories were imported improperly.

The question is: will the suggested re-import actually import those directories properly?  The command-line in the previous email doesn't suggest that to me; I would imagine it would at least have to have the word "releases" in there somewhere, since that's not part of the SVN layout.

-glyph



From jeff at ocjtech.us  Wed Nov  9 14:47:10 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 9 Nov 2011 13:47:10 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <ABF002AF-5234-4A15-880F-EC470A60CBA3@twistedmatrix.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<CAD-DQxQNW6cm9KB2ujZchkM2_EZPvA5FJdFHbP7i=JBFsTeO-g@mail.gmail.com>
	<ABF002AF-5234-4A15-880F-EC470A60CBA3@twistedmatrix.com>
Message-ID: <CAD-DQxQ9=_eE_0qXeTC28satdMRvH08xNLM2N63wEP2Ka+Z-Wg@mail.gmail.com>

On Wed, Nov 9, 2011 at 1:42 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Nov 9, 2011, at 11:41 AM, Jeffrey Ollie wrote:
>
>> On Wed, Nov 9, 2011 at 7:22 AM, ?<exarkun at twistedmatrix.com> wrote:
>>>
>>> Why do we need to do this again? ?There's already
>>> <http://svn.twistedmatrix.com/git/Twisted>,
>>
>> Last updated in March 2011.
>>
>>> <http://svn.twistedmatrix.com/git/Twisted2.git>, and
>>
>> Last updated in 2004
>>
>>> <http://svn.twistedmatrix.com/git/Twisted3.git>.
>>
>> Last updated in July 2011.
>>
>> They all appear to be flawed in that the tags/releases and
>> branches/releases directories were imported improperly.
>
> The question is: will the suggested re-import actually import those directories properly? ?The command-line in the previous email doesn't suggest that to me; I would imagine it would at least have to have the word "releases" in there somewhere, since that's not part of the SVN layout.

No, the suggested re-import won't work - it'll have the same flaws.
I'm working on adapting some scripts that I use to maintain my git
mirror of the Asterisk SVN repository which has some of the same
problems.

-- 
Jeff Ollie


From glyph at twistedmatrix.com  Wed Nov  9 14:49:49 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Nov 2011 11:49:49 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAD-DQxQ9=_eE_0qXeTC28satdMRvH08xNLM2N63wEP2Ka+Z-Wg@mail.gmail.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<CAD-DQxQNW6cm9KB2ujZchkM2_EZPvA5FJdFHbP7i=JBFsTeO-g@mail.gmail.com>
	<ABF002AF-5234-4A15-880F-EC470A60CBA3@twistedmatrix.com>
	<CAD-DQxQ9=_eE_0qXeTC28satdMRvH08xNLM2N63wEP2Ka+Z-Wg@mail.gmail.com>
Message-ID: <0F4EC7B3-9A28-4A03-BAA7-891553797355@twistedmatrix.com>


On Nov 9, 2011, at 11:47 AM, Jeffrey Ollie wrote:

> On Wed, Nov 9, 2011 at 1:42 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> 
>> On Nov 9, 2011, at 11:41 AM, Jeffrey Ollie wrote:
>> 
>>> On Wed, Nov 9, 2011 at 7:22 AM,  <exarkun at twistedmatrix.com> wrote:
>>>> 
>>>> Why do we need to do this again?  There's already
>>>> <http://svn.twistedmatrix.com/git/Twisted>,
>>> 
>>> Last updated in March 2011.
>>> 
>>>> <http://svn.twistedmatrix.com/git/Twisted2.git>, and
>>> 
>>> Last updated in 2004
>>> 
>>>> <http://svn.twistedmatrix.com/git/Twisted3.git>.
>>> 
>>> Last updated in July 2011.
>>> 
>>> They all appear to be flawed in that the tags/releases and
>>> branches/releases directories were imported improperly.
>> 
>> The question is: will the suggested re-import actually import those directories properly?  The command-line in the previous email doesn't suggest that to me; I would imagine it would at least have to have the word "releases" in there somewhere, since that's not part of the SVN layout.
> 
> No, the suggested re-import won't work - it'll have the same flaws.
> I'm working on adapting some scripts that I use to maintain my git
> mirror of the Asterisk SVN repository which has some of the same
> problems.


Thanks!  I look forward to seeing them.



From screwtape at froup.com  Wed Nov  9 17:59:42 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 10 Nov 2011 09:59:42 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAD-DQxRccx0U+7Z0y-KV8mAWKAjQm7AkGJy1=LKJWHKCbo=zBQ@mail.gmail.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<CAD-DQxRccx0U+7Z0y-KV8mAWKAjQm7AkGJy1=LKJWHKCbo=zBQ@mail.gmail.com>
Message-ID: <20111109225942.GE9962@boombah.thristian.org>

On Wed, Nov 09, 2011 at 01:39:44PM -0600, Jeffrey Ollie wrote:
> On Wed, Nov 9, 2011 at 6:49 AM, Tim Allen <screwtape at froup.com> wrote:
> >
> > I believe the next step should be that somebody with the required
> > permissions should connect to a machine on the same physical network as
> > the SVN server and run:
> >
> > ? ?time git svn clone --stdlayout --prefix="svn/" \
> > ? ? ? ? ? ?svn+ssh://svn.twistedmatrix.com/svn/Twisted
> 
> Which will fail spectacularly because the Twisted SVN repository does
> not use the standard layout that git-svn is expecting.  In particular
> the branches/releases and tags/releases directory will really mess
> things up.

Yes, branches/releases and tags/releases would need to be specially
handled; I'm not sure if it's possible to import them as just more
branches and tags, or if they'd have to be removed entirely. I wouldn't
call that a spectactular failure, though - you should still have trunk
and the various feature branches, which is all you need to submit
patches.


From screwtape at froup.com  Wed Nov  9 18:18:03 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 10 Nov 2011 10:18:03 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4EBA8EA1.4090805@recursivedream.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
Message-ID: <20111109231803.GF9962@boombah.thristian.org>

On Wed, Nov 09, 2011 at 09:30:57AM -0500, Tom Davis wrote:
> It's worth noting that you aren't *required* to clone all eight trillion 
> Twisted revisions in order to get a working clone. Doing `git svn clone 
> -rN:HEAD <url>` where `N` is some revision number will only clone from 
> that revision.

Yet another useful thing I've missed in the git-svn manpage. Thanks!

In fact, it seems you can just specify "-rHEAD" and you'll get a repo
with only the latest trunk revision in it. If the resulting repository
can gracefully handle updates that add new branches, and new commits on
old branches that haven't been imported, this would probably be the best
approach for Git-using potential contributors.


From glyph at twistedmatrix.com  Wed Nov  9 18:28:43 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Nov 2011 15:28:43 -0800
Subject: [Twisted-Python] Second pre-release of Twisted 11.1.0
In-Reply-To: <20111109183434.20412.1392450266.divmod.xquotient.35@localhost.localdomain>
References: <4EB29F1D.900@free.fr>
	<20111109183434.20412.1392450266.divmod.xquotient.35@localhost.localdomain>
Message-ID: <F5C0E29D-C3F0-43CF-B8DC-8BF3D8D9FD88@twistedmatrix.com>


On Nov 9, 2011, at 10:34 AM, exarkun at twistedmatrix.com wrote:

> On 3 Nov, 02:03 pm, therve at free.fr wrote:
>> From the sunny land of Orlando, I'm pleased to announce the second
>> pre-release of Twisted 11.1.
>> 
>> You can find the tarballs here:
>> 
>>    http://people.canonical.com/~therve/Twisted/11.1.0pre2/
>> 
>> Among the 17 bugs fixed since the last pre-release, a fix in the new 
>> TLS
>> code in connection lost management, and an error fixed with IOCP under
>> 64bits Windows.
>> 
>> Please give it all the testing you can!
> 
> Doing well on my 32 bit Ubuntu Lucid mail server for several days now.

Looks happy testing against Calendar Server trunk, in all the various ways that caused problems with pre1.

-glyph



From athornton1974 at gmail.com  Wed Nov  9 21:13:20 2011
From: athornton1974 at gmail.com (Andrew Thornton)
Date: Wed, 9 Nov 2011 21:13:20 -0500
Subject: [Twisted-Python] Creating a PKCS#11 Enabled SSL Proxy
Message-ID: <1C133CB5EF6F4591A83737FB21EE18B3@gmail.com>

I am in need of an ssl web proxy that can read a certificate off of a PKCS#11 device and then do client authentication using that certificate. I thought that twisted would be a great way to do this. I was wondering if anyone on this list has put anything like that together before. I have seen the tutorials and walkthroughs the outline the steps to create an http proxy using twisted, but not much about https and nothing about using a wrapper like pkcs11 or PyKCS11. I appreciate any direction that anyone can give. 



From screwtape at froup.com  Wed Nov  9 22:25:00 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 10 Nov 2011 14:25:00 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109144950.20412.1420554947.divmod.xquotient.32@localhost.localdomain>
References: <20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<20111109141819.GD9962@boombah.thristian.org>
	<20111109144950.20412.1420554947.divmod.xquotient.32@localhost.localdomain>
Message-ID: <20111110032500.GG9962@boombah.thristian.org>

On Wed, Nov 09, 2011 at 02:49:50PM -0000, exarkun at twistedmatrix.com wrote:
> On 02:18 pm, screwtape at froup.com wrote:
> >On Wed, Nov 09, 2011 at 01:22:19PM -0000, exarkun at twistedmatrix.com 
> >wrote:
> >>Why do we need to do this again?  There's already
> >><http://svn.twistedmatrix.com/git/Twisted>,
> >><http://svn.twistedmatrix.com/git/Twisted2.git>, and
> >><http://svn.twistedmatrix.com/git/Twisted3.git>.
> >
> >The wiki mentions the first one a couple of times, although strictly
> >speaking you need to add "/.git" to the end to get a URL you can clone
> >from. Apart from being out-of-date, it seems to be missing a lot of
> >branches (there's only 56, and it stopped updating in 2011-03; my
> >personal git-svn hasn't been updated since 2010-09 and has 2062
> >branches), it hasn't correctly imported the branches under "releases",
> >and the only tags are "last_vfs_and_web2" and "releases".
> 
> It's out of date because no one who knows how to keep it updated has 
> taken the necessary steps for that to happen.
> 
> Are there other problems with it which can only be fixed by starting 
> over?

I suspect that the other problems I mentioned can only be fixed by
starting over, yes.

> The point I am trying to convey is that performing some one-off import 
> operation has been done before, repeatedly.  What's going to be 
> different this time that causes the clone to stay up to date?

I fully expect that whatever broke previous attempts will break this new
attempt too. The difference will be that since there's a record of how
the new repository was created, and assuming there'll be a record of
what happened when the new repository broke, this time we'll be able to
reproduce the problem and work out a solution.

> >I guess it's not strictly necessary to have tags or releases imported
> >if the goal is to let people develop patches against trunk, but the
> >fact that branches are missing worries me - if a Twisted committer
> >adds your patch to a branch, you want to be confident that the new
> >branch will actually show up when you update your repository.
> 
> Indeed.  Is this something that's addressed by the git command in your 
> earlier email?

The "--stdlayout" parameter causes git-svn to import branches in the
standard SVN "branches" directory, which is where Twisted seems to keep
its feature branches (the most important ones for people working on
patches).

With some effort it might be possible to import release branches in
"branches/releases", but that's obviously a lesser priority.

> >As for the other two, this is the first I've heard of them. Is there
> >any documentation about how they differ, are there records of how
> >these repositories were created and/or updated that I could add to
> >the GitMirror wiki-page?
> 
> I have no idea where they came from or how they differ.

It turns out Twisted2 is the newest (July 2011) and has about the right
number of branches. It also seems to have imported the various
"ctrl+backslash-2371+2123" branches that I recall causing issues before.
On the other hand, it still imports "branches/releases" as a single
branch, and has no tags. "Twisted3" might have been created for one of
those reasons... or possibly for some other reason that's not
immediately obvious.


From exarkun at twistedmatrix.com  Thu Nov 10 09:45:01 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 10 Nov 2011 14:45:01 -0000
Subject: [Twisted-Python] Creating a PKCS#11 Enabled SSL Proxy
In-Reply-To: <1C133CB5EF6F4591A83737FB21EE18B3@gmail.com>
References: <1C133CB5EF6F4591A83737FB21EE18B3@gmail.com>
Message-ID: <20111110144501.20412.1821045443.divmod.xquotient.42@localhost.localdomain>

On 02:13 am, athornton1974 at gmail.com wrote:
>I am in need of an ssl web proxy that can read a certificate off of a 
>PKCS#11 device and then do client authentication using that 
>certificate. I thought that twisted would be a great way to do this. I 
>was wondering if anyone on this list has put anything like that 
>together before. I have seen the tutorials and walkthroughs the outline 
>the steps to create an http proxy using twisted, but not much about 
>https and nothing about using a wrapper like pkcs11 or PyKCS11. I 
>appreciate any direction that anyone can give.

Twisted currently provides SSL support exclusively based on the features 
of OpenSSL (via pyOpenSSL).  So, if pyOpenSSL supports something, then 
you can probably do it with Twisted.

pyOpenSSL doesn't currently support PKCS11 and it appears that OpenSSL 
itself needs to be patched and build specially to support it.  So, with 
some effort you may be able to create something that satisfies your 
requirements, but there doesn't appear to be a working solution out of 
the box.

This is just my assessment based on some familiarity with SSL and some 
searching around this morning; I've never tried to use PKCS11 myself.

Jean-Paul


From exarkun at twistedmatrix.com  Sun Nov 13 00:05:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 13 Nov 2011 05:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1321160725.92.1387638305@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111113/6ecfd5c3/attachment.htm 

From screwtape at froup.com  Sun Nov 13 01:13:41 2011
From: screwtape at froup.com (Tim Allen)
Date: Sun, 13 Nov 2011 17:13:41 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109231803.GF9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
Message-ID: <20111113061340.GH9962@boombah.thristian.org>

On Thu, Nov 10, 2011 at 10:18:03AM +1100, Tim Allen wrote:
> In fact, it seems you can just specify "-rHEAD" and you'll get a repo
> with only the latest trunk revision in it. If the resulting repository
> can gracefully handle updates that add new branches, and new commits on
> old branches that haven't been imported, this would probably be the best
> approach for Git-using potential contributors.

I did a git-svn clone with "-rHEAD" on the day I posted that message,
and now when I run "git svn fetch" my repository has the following
branches:

    $ git branch -a
    * master
      remotes/svn/multicast-doc-4262
      remotes/svn/new-resource-5379
      remotes/svn/select-halfclose-3037
      remotes/svn/trunk
      remotes/svn/udp-doread-win-3396-2
      remotes/svn/website-template-5380

The "gitk" branch visualisation tool shows me that SVN trunk is currently at
r33098 (which merged udp-doread-win-3396-2, although it doesn't show up
as a merge commit in git) and all the other branches have been created
from that point. So, it looks like it is gracefully handling new
branches, which is all we really wanted.

Should I update the "GitMirror" page to suggest people run "git svn
clone -rHEAD" instead of using the no-longer-updated official mirror?
Perhaps the page should also be renamed?


From glyph at twistedmatrix.com  Sun Nov 13 21:20:46 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 13 Nov 2011 21:20:46 -0500
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111113061340.GH9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
Message-ID: <AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>


On Nov 13, 2011, at 1:13 AM, Tim Allen wrote:

> On Thu, Nov 10, 2011 at 10:18:03AM +1100, Tim Allen wrote:
>> In fact, it seems you can just specify "-rHEAD" and you'll get a repo
>> with only the latest trunk revision in it. If the resulting repository
>> can gracefully handle updates that add new branches, and new commits on
>> old branches that haven't been imported, this would probably be the best
>> approach for Git-using potential contributors.
> 
> I did a git-svn clone with "-rHEAD" on the day I posted that message,
> and now when I run "git svn fetch" my repository has the following
> branches:
> 
>    $ git branch -a
>    * master
>      remotes/svn/multicast-doc-4262
>      remotes/svn/new-resource-5379
>      remotes/svn/select-halfclose-3037
>      remotes/svn/trunk
>      remotes/svn/udp-doread-win-3396-2
>      remotes/svn/website-template-5380
> 
> The "gitk" branch visualisation tool shows me that SVN trunk is currently at
> r33098 (which merged udp-doread-win-3396-2, although it doesn't show up
> as a merge commit in git) and all the other branches have been created
> from that point. So, it looks like it is gracefully handling new
> branches, which is all we really wanted.
> 
> Should I update the "GitMirror" page to suggest people run "git svn
> clone -rHEAD" instead of using the no-longer-updated official mirror?
> Perhaps the page should also be renamed?

Sounds like this is a better idea than what we're advising people to do now, although it also sounds like we should add a post-commit hook to push to tell our local bzr mirror to 'git svn fetch' and then the official mirror will be a good idea again.  (And possibly something with pushing to github?  I don't know.  Someone who cares about Git should set it up, not me. :))



From screwtape at froup.com  Sun Nov 13 22:47:04 2011
From: screwtape at froup.com (Tim Allen)
Date: Mon, 14 Nov 2011 14:47:04 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
Message-ID: <20111114034704.GI9962@boombah.thristian.org>

On Sun, Nov 13, 2011 at 09:20:46PM -0500, Glyph Lefkowitz wrote:
> On Nov 13, 2011, at 1:13 AM, Tim Allen wrote:
> > Should I update the "GitMirror" page to suggest people run "git svn
> > clone -rHEAD" instead of using the no-longer-updated official mirror?
> > Perhaps the page should also be renamed?
> 
> Sounds like this is a better idea than what we're advising people to
> do now,

I'll update the page, then.

> although it also sounds like we should add a post-commit hook
> to push to tell our local bzr mirror to 'git svn fetch' and then the
> official mirror will be a good idea again.

I'm not sure whether an official mirror is a good idea - it's another
service that would need to be maintained, and it seems that among
Twisted core devs there's not a lot of interest or expertise in
maintaining it. If Git-using contributors can take care of things
themselves without adding any extra administrative load on Twisted's
volunteers, what use would an official Git mirror be?


From exarkun at twistedmatrix.com  Sun Nov 13 23:39:43 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 14 Nov 2011 04:39:43 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111114034704.GI9962@boombah.thristian.org>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
Message-ID: <20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>

On 03:47 am, screwtape at froup.com wrote:
>On Sun, Nov 13, 2011 at 09:20:46PM -0500, Glyph Lefkowitz wrote:
>>On Nov 13, 2011, at 1:13 AM, Tim Allen wrote:
>> > Should I update the "GitMirror" page to suggest people run "git svn
>> > clone -rHEAD" instead of using the no-longer-updated official 
>>mirror?
>> > Perhaps the page should also be renamed?
>>
>>Sounds like this is a better idea than what we're advising people to
>>do now,
>
>I'll update the page, then.
>>although it also sounds like we should add a post-commit hook
>>to push to tell our local bzr mirror to 'git svn fetch' and then the
>>official mirror will be a good idea again.
>
>I'm not sure whether an official mirror is a good idea - it's another
>service that would need to be maintained, and it seems that among
>Twisted core devs there's not a lot of interest or expertise in
>maintaining it. If Git-using contributors can take care of things
>themselves without adding any extra administrative load on Twisted's
>volunteers, what use would an official Git mirror be?

The obvious answer is that having one mirror to point people at is 
better than letting them wonder amongst a forest of dozens of mirrors. 
On the other hand, maybe Git users prefer the latter scenario.  A number 
of people have asked for an official Git mirror, though.  If no one 
wants this anymore, then by all means let's forget about it.

Jean-Paul


From glyph at twistedmatrix.com  Mon Nov 14 00:22:59 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 14 Nov 2011 00:22:59 -0500
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
Message-ID: <79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>


On Nov 13, 2011, at 11:39 PM, exarkun at twistedmatrix.com wrote:

>> I'm not sure whether an official mirror is a good idea - it's another
>> service that would need to be maintained, and it seems that among
>> Twisted core devs there's not a lot of interest or expertise in
>> maintaining it. If Git-using contributors can take care of things
>> themselves without adding any extra administrative load on Twisted's
>> volunteers, what use would an official Git mirror be?
> 
> The obvious answer is that having one mirror to point people at is 
> better than letting them wonder amongst a forest of dozens of mirrors. 
> On the other hand, maybe Git users prefer the latter scenario.  A number 
> of people have asked for an official Git mirror, though.  If no one 
> wants this anymore, then by all means let's forget about it.

Tim: you're right that there isn't much interest among the current Twisted core development team.  But the whole point of having a Git mirror (and a presence on Github, which I think is the next step) is to attract new developers to this community.

That's why the topic of this thread is "Twisted Project Jobs Volunteer".  We're asking for someone with expertise in this area to step up, volunteer to help maintain this mirror, which should help us attract more people who are interested in the same going forward.

Is that person you?  You're already maintaining the wiki page - and your participation in this thread has probably taken more time than the setup would have, if you have the relevant knowledge :).  Is there something you're missing?  Some administrative credential, perhaps?  Information about where the relevant code lives?  If you're up for continuing on this, I'm sure we can get you whatever you need :).

Thanks,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111114/feaac533/attachment.htm 

From tobias.oberstein at tavendo.de  Mon Nov 14 03:43:59 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 00:43:59 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C264673@EXVMBX020-12.exch020.serverdata.net>

> But the whole point of having a Git mirror (and a presence on Github, which I think is the next step) is to attract new?developers to this community.

An official presence on Github would be definitely desirable I think, and even more than having a Git mirror technically.

Not only attracting new devs, but also user and general public visibility .. how many followers etc etc

Also, major competitors are there .. node.js, eventmachine, ..

I think  - at this point - it's probably fair to say Github has surpassed other OSS collaboration places once popular .. i.e. sourceforge. (I'm not affiliated with Github in any way .. just my impression).

 


From dynamicgl at gmail.com  Mon Nov 14 04:42:01 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 14 Nov 2011 17:42:01 +0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <634914A010D0B943A035D226786325D42D0C264673@EXVMBX020-12.exch020.serverdata.net>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C264673@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CABkOF6TuhqcF4kf=Zaja7Eg0K5T=fdvSLKfmW1=nn3MqmcR06Q@mail.gmail.com>

placing in Github is almost a must for attracting developers...

At least, it is easy to check the codes...

On Mon, Nov 14, 2011 at 4:43 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> > But the whole point of having a Git mirror (and a presence on Github,
> which I think is the next step) is to attract new developers to this
> community.
>
> An official presence on Github would be definitely desirable I think, and
> even more than having a Git mirror technically.
>
> Not only attracting new devs, but also user and general public visibility
> .. how many followers etc etc
>
> Also, major competitors are there .. node.js, eventmachine, ..
>
> I think  - at this point - it's probably fair to say Github has surpassed
> other OSS collaboration places once popular .. i.e. sourceforge. (I'm not
> affiliated with Github in any way .. just my impression).
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111114/fbb6e15c/attachment.htm 

From screwtape at froup.com  Mon Nov 14 05:48:07 2011
From: screwtape at froup.com (Tim Allen)
Date: Mon, 14 Nov 2011 21:48:07 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
Message-ID: <20111114104807.GJ9962@boombah.thristian.org>

On Sun, Nov 13, 2011 at 09:20:46PM -0500, Glyph Lefkowitz wrote:
> On Nov 13, 2011, at 1:13 AM, Tim Allen wrote:
> > Should I update the "GitMirror" page to suggest people run "git svn
> > clone -rHEAD" instead of using the no-longer-updated official mirror?
> > Perhaps the page should also be renamed?
> 
> Sounds like this is a better idea than what we're advising people to
> do now,

GitMirror page updated.

I discovered a wrinkle, though: it turns out that "git svn clone -rHEAD"
only works if the HEAD of the SVN repo happens to be a commit to trunk.
If the HEAD happens to be a commit on a branch, tag, or anything else,
it only downloads the contents of the branch, tries to set up the trunk
and can't find it, then collapses in a heap.

I've added a step that uses "svn info" to find the last trunk commit, so
the user can substitute that revision number into the "git svn clone"
command.

I'd appreciate it if anyone with a vague familiarity with Git could read
over the page and tell me if there's anything I can improve.


From screwtape at froup.com  Mon Nov 14 06:55:53 2011
From: screwtape at froup.com (Tim Allen)
Date: Mon, 14 Nov 2011 22:55:53 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
References: <20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
Message-ID: <20111114115553.GK9962@boombah.thristian.org>

On Mon, Nov 14, 2011 at 12:22:59AM -0500, Glyph wrote:
> Tim: you're right that there isn't much interest among the current
> Twisted core development team.  But the whole point of having a Git
> mirror (and a presence on Github, which I think is the next step) is
> to attract new developers to this community.
> 
> That's why the topic of this thread is "Twisted Project Jobs
> Volunteer".  We're asking for someone with expertise in this area to
> step up, volunteer to help maintain this mirror, which should help us
> attract more people who are interested in the same going forward.

There is a thing here that worries me, although I'm not sure I can
express it clearly without sounding crazy.

Back in the days when CVS and SVN were king, the only way you could
interact with a project was by submitting patches, and since only
commiters interacted directly with the master repository, it didn't
really matter much how branches and merges were handled. As long as you
kept things in a way that made sense to you, that was OK - nobody else
would see it.

Since Git is a distributed VCS, suddenly everybody has access to
everybody else's repositories, up close and personal, and suddenly (like
when any subjective matter is discussed by a large group of people),
people have *opinions* about other people's repositories, and there are
*fashions* and *best practices* and all that stuff. 

I'm not a Github user myself, so I don't know this first hand, but I as
I understand it the Github community is has even more social
expectations, like pull requests and the Github issue tracker.

It's very well to say "make git mirror, push to Github, get new
contributors", but I think there's a social impedance mismatch here
that's going to cause problems, or at least make people wary because
Twisted's Github project behaves weirdly and differently from other
Github projects they're used to.

Some examples that I can think of:
- The most obvious example: in Git, when you merge a branch to trunk,
  you get a merge commit; in SVN (at least the way Twisted uses it) you
  just get an ordinary commit that squashes together all the branch
  commits. That's not a technical problem, but the difference between
  the Twisted commit graph and an ordinary commit graph is
  a "something's not right" warning.
- In Git, the cultural expectation is "submit a sequence of patches";
  Twisted generally wants all your changes in a single patch, since the
  divisions will be lost on merge anyway.
- In Git, if I develop on a branch, then submit that branch as a patch
  sequence that gets applied by the repository owner, there's a good
  chance that when I 'git pull', git will recognise those patches as
  'my' patches and can rebase my branch intelligently. When those
  patches have gone via git svn, they seem to have changed enough that
  rebasing my branch causes horrible merge conflicts.
- In Git, you'd generally only create one branch for a patch series, and
  occasionally rebase it to keep up with trunk changes. The Twisted
  process seems to favour creating completely new branches (foo-1234,
  foo-1234-2, foo-1234-3, etc.) to handle trunk changes.
- As mentioned, Github merge requests and the Github issue tracker.

None of these are show stoppers, they're annoyances at worst, and could
be easily explained in documentation. But who will write that
documentation? Who will tirelessly explain the differences between the
Git world and the Twisted world on the mailing list and #twisted, poll
for merge requests and redirect them to Trac, forever?

TL;DR: Github users have expectations of how to interact with projects.
Twisted can make it easy for Github users to contribute by meeting those
expectations, switching from SVN to Git, and changing the UQDS to match.
Keeping things the way they are and adding a Git mirror is probably not
going to have the desired effect without a lot of effort on somebody's
part.

> Is that person you?  You're already maintaining the wiki page - and
> your participation in this thread has probably taken more time than
> the setup would have, if you have the relevant knowledge :).  Is there
> something you're missing?  Some administrative credential, perhaps?
> Information about where the relevant code lives?  If you're up for
> continuing on this, I'm sure we can get you whatever you need :).

Updating a wiki-page is not terribly onerous because it's bounded: solve
a problem by reading some documentation, write some more documentation,
done. Being the liaison between Twisted core developers and every Git
user who might want to contribute is unbounded... or at least, very
large and always growing as the number of Twisted devs and Git users
increases.

I've not forgotten that I have/had Twisted commit access, and coming
back to help on a more regular basis is definitely on my list of things
to do, although it's pushed down a fair way at the moment.  However,
even "volunteer for Twisted" was right at the top of the list, I'd be
a mug to sign up for such an open-ended responsibility. :)


From p.mayers at imperial.ac.uk  Mon Nov 14 07:06:33 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 14 Nov 2011 12:06:33 +0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111114115553.GK9962@boombah.thristian.org>
References: <20111109033957.GB9962@boombah.thristian.org>	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>	<20111109124940.GC9962@boombah.thristian.org>	<4EBA8EA1.4090805@recursivedream.com>	<20111109231803.GF9962@boombah.thristian.org>	<20111113061340.GH9962@boombah.thristian.org>	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>	<20111114034704.GI9962@boombah.thristian.org>	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
Message-ID: <4EC10449.8030509@imperial.ac.uk>

On 14/11/11 11:55, Tim Allen wrote:

> TL;DR: Github users have expectations of how to interact with projects.
> Twisted can make it easy for Github users to contribute by meeting those
> expectations, switching from SVN to Git, and changing the UQDS to match.
> Keeping things the way they are and adding a Git mirror is probably not
> going to have the desired effect without a lot of effort on somebody's
> part.

This analysis is spot-on IMO. I am a git and GitHub user, but merely 
putting the repo somewhere public is about 5% of the benefit, and risks 
creating expectations you can't (and won't) satisfy.

I'd love it if you guys move away from "attach a .patch file to Trac 
ticket" as the submission workflow - and I think GitHub has great tools 
for this. But if you're not going to do that, then a shallow clone 
(which I didn't know about) will fill the need:

# run git svn shallow clone
git branch my-local-stuff
git diff master > stuff.patch
# submit to trac
# reply: "ok, please create all future patches against branch x-1-2"
# git svn update - pulls in the aforementioned branch
# hack away
git diff x-1-2 > stuff2.patch

Cheers,
Phil


From tobias.oberstein at tavendo.de  Mon Nov 14 07:07:46 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 04:07:46 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
Message-ID: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>

I am testing a WebSocket based pubsub system .. I have 2 questions .. any hints welcome!

Environment:
  + FreeBSD 8.2 i386
  + Python 2.7.2 32-bit
  + Twisted Trunk
  + new kqueue() reactor

The FreeBSD is tuned for massive connection numbers. I can connect 50k WS clients. Fine.


1) Massive dispatching

Essentially, what I'm currently doing is:

recvs = set([100k instances of protocol.Protocol])

data = "..."
for recv in recvs:
   recv.transport.write(data)

Now, writing mass-data to _one_ transport should be done using producer/consumer.

But in my case, the data itself is tiny (<100 octets) and the same for all clients, but the number
of transports to dispatch that data to is massive.

The problem is: while above loop is running, other stuff is being delayed.

What would be the right approach to solve that?

One idea is to split the loop into 1k chunks and use reactor.callLater to have the sending
called again until all recvs are served.

Reentry of the reactor via reactor.callLater should make other stuff run in-between, right?

Can I use callLater(0, ..) .. that is no delay at all?

And is this approach recommended anyway?


2) Too many files.

As said, the FreeBSD is tuned for massive connections and I can connect 50k clients.

However, the Twisted application not only contains the WebSockets stuff, but also a
Twisted Web based web server.

Somewhere above 30k connections, I'm beginning to see:


twisted/web/server.py, line 132 in process
...
twisted/python/filepath.py, line 643 in open

<type 'exceptions.IOError'>: [Errno 24] Too many open files

However:

[autobahn at autobahnhub ~/AutobahnHub/service]$ sysctl kern.maxfiles
kern.maxfiles: 204800
[autobahn at autobahnhub ~/AutobahnHub/service]$ sysctl kern.maxfilesperproc
kern.maxfilesperproc: 200000
[autobahn at autobahnhub ~/AutobahnHub/service]$ sysctl kern.ipc.maxsockets
kern.ipc.maxsockets: 204800
[autobahn at autobahnhub ~/AutobahnHub/service]$ ulimit
unlimited

It should go well beyond 50k.

Doing an lsof on the app PID, I can see the 50k connected TCPs and <100 open files.

Why is it denying opening more files?

Is there another limit specifically for files, and/or something tunable in Python/Twisted?





From itamar at itamarst.org  Mon Nov 14 08:02:32 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 14 Nov 2011 08:02:32 -0500
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <1321275752.1812.8.camel@blake>

On Mon, 2011-11-14 at 04:07 -0800, Tobias Oberstein wrote:
> I am testing a WebSocket based pubsub system .. I have 2 questions .. any hints welcome!
> 
> Environment:
>   + FreeBSD 8.2 i386
>   + Python 2.7.2 32-bit
>   + Twisted Trunk
>   + new kqueue() reactor
> 
> The FreeBSD is tuned for massive connection numbers. I can connect 50k WS clients. Fine.
> 
> 
> 1) Massive dispatching
> 
> Essentially, what I'm currently doing is:
> 
> recvs = set([100k instances of protocol.Protocol])
> 
> data = "..."
> for recv in recvs:
>    recv.transport.write(data)
> 
> Now, writing mass-data to _one_ transport should be done using producer/consumer.
> 
> But in my case, the data itself is tiny (<100 octets) and the same for all clients, but the number
> of transports to dispatch that data to is massive.
> 
> The problem is: while above loop is running, other stuff is being delayed.
> 
> What would be the right approach to solve that?

Besides callLater, a higher level construct to do this is
twisted.internet.task.cooperate().
https://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-cooperative-multitasking-with-twisted-getting-things-done-concurrently-11-3352182 is a presentation dreid did, which should really be turned into a howto.

> 2) Too many files.
> Is there another limit specifically for files, and/or something tunable in Python/Twisted?

That's definitely not a limit on Python or Twisted. That's an OS limit.
Are you opening lots of files in addition to your sockets?



From tobias.oberstein at tavendo.de  Mon Nov 14 09:28:06 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 06:28:06 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <1321275752.1812.8.camel@blake>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
Message-ID: <634914A010D0B943A035D226786325D42D0C2646E8@EXVMBX020-12.exch020.serverdata.net>

> Besides callLater, a higher level construct to do this is
> twisted.internet.task.cooperate().
> https://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-cooperative-
> multitasking-with-twisted-getting-things-done-concurrently-11-3352182 is a
> presentation dreid did, which should really be turned into a howto.

Interesting. Need to add that to my toolbox.

In the meantime I've implemented the chunked/callLater approach.

It works.

However, as I currently do it, it breaks message order guarantees .. i.e. it's no
longer guaranteed that each recepient will receive published messages in the
order a _single_ publisher sent them.

Currently I use a set() and pop() from it.

I might change that to fetch receivers from

deque(sorted(set))

Is it guaranteed that

callLater(0, fun1)
callLater(0, fun2)

will always result in fun2 being called after fun1?

Because then, and when alway using same chunk size (# of receivers), above
ordering guarantee would hold.

I'd like to avoid having to create a send queue per receiver ..

> 
> > 2) Too many files.
> > Is there another limit specifically for files, and/or something tunable in
> Python/Twisted?
> 
> That's definitely not a limit on Python or Twisted. That's an OS limit.
> Are you opening lots of files in addition to your sockets?

No.

After i.e. 50k clients have connected:

[autobahn at autobahnhub ~/AutobahnHub/service]$ sysctl kern.openfiles
kern.openfiles: 50115

[autobahn at autobahnhub ~/AutobahnHub/service]$ lsof -p 1888 | wc -l
   50075

This bugs me .. don't know why it's happening.



From tobias.oberstein at tavendo.de  Mon Nov 14 09:57:21 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 06:57:21 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <1321275752.1812.8.camel@blake>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
Message-ID: <634914A010D0B943A035D226786325D42D0C264714@EXVMBX020-12.exch020.serverdata.net>

> > 2) Too many files.
> > Is there another limit specifically for files, and/or something tunable in
> Python/Twisted?
> 
> That's definitely not a limit on Python or Twisted. That's an OS limit.
> Are you opening lots of files in addition to your sockets?

Python open() will bail out at 32768 open files.

This despite the fact that 

a) resource.getrlimit(resource.RLIMIT_NOFILE) = 200k
b) I can accept 50k sockets

Obviously, it's at least not Twisted related ..

=========

import resource

max = resource.getrlimit(resource.RLIMIT_NOFILE)
cnt = 0
print "maximum FDs", max

fds = []

while cnt < max:
   f = open("/tmp/test_%d" % cnt, "w")
   f.write("test")
   fds.append(f)
   cnt += 1
   if cnt % 1000 == 0:
      print "opened %d files" % cnt

print "ok, created %d files" % cnt

=========

maximum FDs (200000L, 200000L)
opened 1000 files
opened 2000 files
opened 3000 files
opened 4000 files
opened 5000 files
opened 6000 files
opened 7000 files
opened 8000 files
opened 9000 files
opened 10000 files
opened 11000 files
opened 12000 files
opened 13000 files
opened 14000 files
opened 15000 files
opened 16000 files
opened 17000 files
opened 18000 files
opened 19000 files
opened 20000 files
opened 21000 files
opened 22000 files
opened 23000 files
opened 24000 files
opened 25000 files
opened 26000 files
opened 27000 files
opened 28000 files
opened 29000 files
opened 30000 files
opened 31000 files
opened 32000 files
Traceback (most recent call last):
  File "/home/autobahn/fdtest.py", line 10, in <module>
IOError: [Errno 24] Too many open files: '/tmp/test_32765'
^C
[autobahn at autobahnhub ~/AutobahnHub/service/autobahnhub/script]$



From donal.mcmullan at gmail.com  Mon Nov 14 10:15:20 2011
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Tue, 15 Nov 2011 04:15:20 +1300
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <634914A010D0B943A035D226786325D42D0C264714@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264714@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CADf-aJEWhUF5=hi2tHkRgBJ2Cp3qsMROKWLH0w6d-CaeTGw9yw@mail.gmail.com>

What does resource.getrlimit(resource.RLIMIT_OFILE) return?

The Python docs say:

resource.RLIMIT_OFILE
 The BSD name for RLIMIT_NOFILE.

D



On 15 November 2011 03:57, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
>> > 2) Too many files.
>> > Is there another limit specifically for files, and/or something tunable in
>> Python/Twisted?
>>
>> That's definitely not a limit on Python or Twisted. That's an OS limit.
>> Are you opening lots of files in addition to your sockets?
>
> Python open() will bail out at 32768 open files.
>
> This despite the fact that
>
> a) resource.getrlimit(resource.RLIMIT_NOFILE) = 200k
> b) I can accept 50k sockets
>
> Obviously, it's at least not Twisted related ..
>
> =========
>
> import resource
>
> max = resource.getrlimit(resource.RLIMIT_NOFILE)
> cnt = 0
> print "maximum FDs", max
>
> fds = []
>
> while cnt < max:
> ? f = open("/tmp/test_%d" % cnt, "w")
> ? f.write("test")
> ? fds.append(f)
> ? cnt += 1
> ? if cnt % 1000 == 0:
> ? ? ?print "opened %d files" % cnt
>
> print "ok, created %d files" % cnt
>
> =========
>
> maximum FDs (200000L, 200000L)
> opened 1000 files
> opened 2000 files
> opened 3000 files
> opened 4000 files
> opened 5000 files
> opened 6000 files
> opened 7000 files
> opened 8000 files
> opened 9000 files
> opened 10000 files
> opened 11000 files
> opened 12000 files
> opened 13000 files
> opened 14000 files
> opened 15000 files
> opened 16000 files
> opened 17000 files
> opened 18000 files
> opened 19000 files
> opened 20000 files
> opened 21000 files
> opened 22000 files
> opened 23000 files
> opened 24000 files
> opened 25000 files
> opened 26000 files
> opened 27000 files
> opened 28000 files
> opened 29000 files
> opened 30000 files
> opened 31000 files
> opened 32000 files
> Traceback (most recent call last):
> ?File "/home/autobahn/fdtest.py", line 10, in <module>
> IOError: [Errno 24] Too many open files: '/tmp/test_32765'
> ^C
> [autobahn at autobahnhub ~/AutobahnHub/service/autobahnhub/script]$
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From tobias.oberstein at tavendo.de  Mon Nov 14 10:28:16 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 07:28:16 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <CADf-aJEWhUF5=hi2tHkRgBJ2Cp3qsMROKWLH0w6d-CaeTGw9yw@mail.gmail.com>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264714@EXVMBX020-12.exch020.serverdata.net>
	<CADf-aJEWhUF5=hi2tHkRgBJ2Cp3qsMROKWLH0w6d-CaeTGw9yw@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C26473E@EXVMBX020-12.exch020.serverdata.net>

> What does resource.getrlimit(resource.RLIMIT_OFILE) return?
> 
> The Python docs say:
> 
> resource.RLIMIT_OFILE
>  The BSD name for RLIMIT_NOFILE.

It's not there .. neither 2.6 nor 2.7

[autobahn at autobahnhub ~/AutobahnHub/service]$ python
Python 2.7.1 (r271:86832, Dec 13 2010, 15:52:15)
[GCC 4.2.1 20070719  [FreeBSD]] on freebsd8
Type "help", "copyright", "credits" or "license" for more information.
>>> import resource
>>> resource.getrlimit(resource.RLIMIT_NOFILE)
(200000L, 200000L)
>>> resource.getrlimit(resource.RLIMIT_OFILE)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'module' object has no attribute 'RLIMIT_OFILE'
>>>


oberstet at wwwtavendo: ~ $ python
Python 2.6.6 (r266:84292, Dec 23 2010, 15:11:37)
[GCC 4.2.1 20070719  [FreeBSD]] on freebsd8
Type "help", "copyright", "credits" or "license" for more information.
>>> import resource
>>> resource.getrlimit(resource.RLIMIT_NOFILE)
(11095L, 11095L)
>>> resource.getrlimit(resource.RLIMIT_OFILE)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'module' object has no attribute 'RLIMIT_OFILE'
>>>


From tom.sheffler at gmail.com  Mon Nov 14 10:39:36 2011
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Mon, 14 Nov 2011 07:39:36 -0800
Subject: [Twisted-Python] Using Trial with Eclipse and PyDev
Message-ID: <CAMBtMcvmj0=c9vVCbDk6ZnoA_quTORzj35fdQg4fR2T+ZTAHUA@mail.gmail.com>

I've seen a few answers regarding this topic around the net, but nothing
recent.

I've enjoyed using the Twisted code-base in Eclipse, and have also liked
running unittests in the PyDev framework.  However, I haven't been
successful integrating Trial tests with the PyDev runner.  I did get Trial
to run, but the output isn't really understood and parsed by PyDev the way
I did it.

If anyone has any pointers, I'd appreciate suggestions.

- I'd like the PASSED/FAILED/ERROR/SKIPPED states to be understood by PyDev.
- I'd also like the _trial_temp/test.log file to be displayed in an Eclipse
window

Overall, I'm very happy with Trial as it is.  Using it in Eclipse almost
seems greedy. ;-}

Thanks,
Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111114/0b153f08/attachment.htm 

From tobias.oberstein at tavendo.de  Mon Nov 14 12:57:46 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 09:57:46 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <1321275752.1812.8.camel@blake>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
Message-ID: <634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>

> That's definitely not a limit on Python or Twisted. That's an OS limit.
> Are you opening lots of files in addition to your sockets?

As it turns out, you are right, and the full answer is most unpleasant:

This

http://www.freebsd.org/cgi/query-pr.cgi?pr=148581&cat=

bug in FreeBSD libc, which is there in i386/amd64 up to and including FreeBSD 9 RC1

and the fact that Python uses fopen() from libc, not open() from Posix

results in the situation that you can't have more than 32k FDs done.

In my situation, it's like this: the new kqueue reactor will happily accept
50k TCPs .. no problem, since Python isn't involved with fopen() here.

But as soon as a Python open() and thus fopen() happens, the new FD
would need to be >32k and that does not work, since the braindead libc
on FreeBSD defines fileno to be SHORT_MAX.

Now I'm running out of options.

I was told that the new Python 3 IO system does not use fopen(),
however Twisted is not yet there on Python 3, right?

There is a backport of that new IO to Python 2.7, but I'm not sure
if thats transparent for calls like Python open().

I can't open first i.e. 100 files, since the set of files needed is not
fixed in the beginning ..i.e when Twisted does a log file switch.

Well, this is all absolutely sad. Now we (nearly) have new kqueue,
it does fly, but I can't break above 32k anyway ..


From solipsis at pitrou.net  Mon Nov 14 13:09:18 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Mon, 14 Nov 2011 19:09:18 +0100
Subject: [Twisted-Python] data dispatch on massive connection counts
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20111114190918.3cb62a46@pitrou.net>

On Mon, 14 Nov 2011 09:57:46 -0800
Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> Now I'm running out of options.
> 
> I was told that the new Python 3 IO system does not use fopen(),
> however Twisted is not yet there on Python 3, right?

If you are wild, you can try https://bitbucket.org/pitrou/t3k/
(at least as an experiment :-))

> There is a backport of that new IO to Python 2.7, but I'm not sure
> if thats transparent for calls like Python open().

io.open() should work indeed. However, open() still uses the old I/O
routines (and therefore fopen()) for compatibility.
If you don't have control on the open() call, you could still try to
monkeypatch the module doing the open() call:

    somemodule.open = io.open

cheers

Antoine.




From glyph at twistedmatrix.com  Mon Nov 14 13:33:45 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 14 Nov 2011 13:33:45 -0500
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111114115553.GK9962@boombah.thristian.org>
References: <20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
Message-ID: <4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>

On Nov 14, 2011, at 6:55 AM, Tim Allen wrote:

> It's very well to say "make git mirror, push to Github, get new
> contributors", but I think there's a social impedance mismatch here
> that's going to cause problems, or at least make people wary because
> Twisted's Github project behaves weirdly and differently from other
> Github projects they're used to.

You're right, of course, but lots of other projects (Django comes to mind) have a Github presence without using Github or Git as their primary development tool.  See here: <https://github.com/django>.

We already have <https://github.com/twisted>, it's just broken; despite the brokenness it has 14 watchers and 5 forks _anyway_, so clearly people want to use it.  This is definitely worse than having a mirror that was updated and working correctly.

> I've not forgotten that I have/had Twisted commit access, and coming
> back to help on a more regular basis is definitely on my list of things
> to do, although it's pushed down a fair way at the moment.  However,
> even "volunteer for Twisted" was right at the top of the list, I'd be
> a mug to sign up for such an open-ended responsibility. :)


Welcome to open source.  It's all a never-ending thankless slog :-).

Really the most important thing here though is just to get the automatic mirroring initially set up, not the never-ending ambassadorial work.  That way git users wouldn't _need_ elaborate instructions as to what to clone and how; if we just say "get twisted from github" and have that automatically updated it would be easier for everyone.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111114/98b4eefc/attachment.htm 

From tobias.oberstein at tavendo.de  Mon Nov 14 13:44:03 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 10:44:03 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <20111114190918.3cb62a46@pitrou.net>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
	<20111114190918.3cb62a46@pitrou.net>
Message-ID: <634914A010D0B943A035D226786325D42D0C264890@EXVMBX020-12.exch020.serverdata.net>

> > I was told that the new Python 3 IO system does not use fopen(),
> > however Twisted is not yet there on Python 3, right?
> 
> If you are wild, you can try https://bitbucket.org/pitrou/t3k/ (at least as an
> experiment :-))

I am .. but not thaaat much;)

> 
> > There is a backport of that new IO to Python 2.7, but I'm not sure if
> > thats transparent for calls like Python open().
> 
> io.open() should work indeed. However, open() still uses the old I/O routines
> (and therefore fopen()) for compatibility.
> If you don't have control on the open() call, you could still try to
> monkeypatch the module doing the open() call:
> 
>     somemodule.open = io.open
> 

This is cool .. I just did

import io, __builtin__
__builtin__.open = io.open

in the application's tac file .. and voila:

50k WebSocket connections
Twisted Web still serving web pages
<500MB RAM

;)



From mostawesomedude at gmail.com  Mon Nov 14 13:44:10 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Mon, 14 Nov 2011 10:44:10 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
References: <20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
Message-ID: <CALiqSLcBwHUW3iHzABCU1QjAqqzGmkUoTc=62-z8MdAmBK+S4w@mail.gmail.com>

On Mon, Nov 14, 2011 at 10:33 AM, Glyph <glyph at twistedmatrix.com> wrote:
> On Nov 14, 2011, at 6:55 AM, Tim Allen wrote:
>
> It's very well to say "make git mirror, push to Github, get new
> contributors", but I think there's a social impedance mismatch here
> that's going to cause problems, or at least make people wary because
> Twisted's Github project behaves weirdly and differently from other
> Github projects they're used to.
>
> You're right, of course, but lots of other projects (Django comes to mind)
> have a Github presence without using Github or Git as their primary
> development tool. ?See here: <https://github.com/django>.
> We already have <https://github.com/twisted>, it's just broken; despite the
> brokenness it has 14 watchers and 5 forks _anyway_, so clearly people want
> to use it. ?This is definitely worse than?having a mirror that was updated
> and working correctly.
>
> I've not forgotten that I have/had Twisted commit access, and coming
> back to help on a more regular basis is definitely on my list of things
> to do, although it's pushed down a fair way at the moment. ?However,
> even "volunteer for Twisted" was right at the top of the list, I'd be
> a mug to sign up for such an open-ended responsibility. :)
>
> Welcome to open source. ?It's all a never-ending thankless slog :-).
> Really the most important thing here though is just to get the automatic
> mirroring initially set up, not the never-ending ambassadorial work. ?That
> way git users wouldn't _need_ elaborate instructions as to what to clone and
> how; if we just say "get twisted from github" and have that automatically
> updated it would be easier for everyone.

JP asked me to say something, so...

I come from FreeDesktop. We have a git-driven development process
which doesn't depend on Github. There is a cgit
(http://hjemli.net/git/cgit/about/) instance running on fd.o
(http://cgit.freedesktop.org/) which covers everybody's personal and
project repos.

The contribution process is simple and straightforward. Patches are
sent in through the project mailing lists. People can also send
patches through auxiliary channels like pastebins and IRC or the
Bugzilla, although that's discouraged. When contributors become
prolific enough, they can apply for account access, which lets them
host repos on fd.o through the magic of userdirs. Code is meritocratic
and community-based; when in doubt, a committer can ask for code
review. It varies from project to project; fd.o is a *big* umbrella.
Branches are very common for contested or complex changes; look at
e.g. mesa/mesa for an example of

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>


From mostawesomedude at gmail.com  Mon Nov 14 13:48:04 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Mon, 14 Nov 2011 10:48:04 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CALiqSLcBwHUW3iHzABCU1QjAqqzGmkUoTc=62-z8MdAmBK+S4w@mail.gmail.com>
References: <20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<CALiqSLcBwHUW3iHzABCU1QjAqqzGmkUoTc=62-z8MdAmBK+S4w@mail.gmail.com>
Message-ID: <CALiqSLe5oOWS7v78-oaeBM9WWdV99GeKrCQYjz1ZrM8HDVV3ng@mail.gmail.com>

On Mon, Nov 14, 2011 at 10:44 AM, Corbin Simpson
<mostawesomedude at gmail.com> wrote:
> On Mon, Nov 14, 2011 at 10:33 AM, Glyph <glyph at twistedmatrix.com> wrote:
>> On Nov 14, 2011, at 6:55 AM, Tim Allen wrote:
>>
>> It's very well to say "make git mirror, push to Github, get new
>> contributors", but I think there's a social impedance mismatch here
>> that's going to cause problems, or at least make people wary because
>> Twisted's Github project behaves weirdly and differently from other
>> Github projects they're used to.
>>
>> You're right, of course, but lots of other projects (Django comes to mind)
>> have a Github presence without using Github or Git as their primary
>> development tool. ?See here: <https://github.com/django>.
>> We already have <https://github.com/twisted>, it's just broken; despite the
>> brokenness it has 14 watchers and 5 forks _anyway_, so clearly people want
>> to use it. ?This is definitely worse than?having a mirror that was updated
>> and working correctly.
>>
>> I've not forgotten that I have/had Twisted commit access, and coming
>> back to help on a more regular basis is definitely on my list of things
>> to do, although it's pushed down a fair way at the moment. ?However,
>> even "volunteer for Twisted" was right at the top of the list, I'd be
>> a mug to sign up for such an open-ended responsibility. :)
>>
>> Welcome to open source. ?It's all a never-ending thankless slog :-).
>> Really the most important thing here though is just to get the automatic
>> mirroring initially set up, not the never-ending ambassadorial work. ?That
>> way git users wouldn't _need_ elaborate instructions as to what to clone and
>> how; if we just say "get twisted from github" and have that automatically
>> updated it would be easier for everyone.
>
> JP asked me to say something, so...
>
> I come from FreeDesktop. We have a git-driven development process
> which doesn't depend on Github. There is a cgit
> (http://hjemli.net/git/cgit/about/) instance running on fd.o
> (http://cgit.freedesktop.org/) which covers everybody's personal and
> project repos.
>
> The contribution process is simple and straightforward. Patches are
> sent in through the project mailing lists. People can also send
> patches through auxiliary channels like pastebins and IRC or the
> Bugzilla, although that's discouraged. When contributors become
> prolific enough, they can apply for account access, which lets them
> host repos on fd.o through the magic of userdirs. Code is meritocratic
> and community-based; when in doubt, a committer can ask for code
> review. It varies from project to project; fd.o is a *big* umbrella.
> Branches are very common for contested or complex changes; look at
> e.g. mesa/mesa for an example of

Boy, thanks Gmail. I really appreciated that.

Anyway, mesa/mesa has dozens upon dozens of branches. Just like
Twisted. It works well.

So, Github adds *zero* fun to this. Its issue tracker is roughly as
unfun as Bugzilla. Pull requests are frustrating; I find myself just
pulling their code using standard git tools and ignoring the
auto-merge tool. I don't really enjoy having messages sent to me
*through* Github when we could just use email, like civilized people.
I view Github as a source of bandwidth and space to avoid having to
host my numerous personal repositories on a personal server. It's a
convenience and crutch. TM is not short of resources; there certainly
could be a git.tm.com or cgit.tm.com and userdir-powered repositories.
Admittedly, this is at odds with the current direction towards LP and
Bazaar, but I think it's a lot better than letting us rely on Github.

~ C.

> --
> When the facts change, I change my mind. What do you do, sir? ~ Keynes
>
> Corbin Simpson
> <MostAwesomeDude at gmail.com>
>



-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>


From glyph at twistedmatrix.com  Mon Nov 14 13:53:13 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 14 Nov 2011 13:53:13 -0500
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CALiqSLe5oOWS7v78-oaeBM9WWdV99GeKrCQYjz1ZrM8HDVV3ng@mail.gmail.com>
References: <20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<CALiqSLcBwHUW3iHzABCU1QjAqqzGmkUoTc=62-z8MdAmBK+S4w@mail.gmail.com>
	<CALiqSLe5oOWS7v78-oaeBM9WWdV99GeKrCQYjz1ZrM8HDVV3ng@mail.gmail.com>
Message-ID: <34355BFB-2A40-4393-8E92-34B15FAAC380@twistedmatrix.com>


On Nov 14, 2011, at 1:48 PM, Corbin Simpson wrote:

> ... I think it's a lot better than letting us rely on Github.

I don't want to "rely" on github.  I want our official presence there (which is already there) to be current and properly maintained so that people who use Github for other reasons (discovery, convneience, gists, because "social networks" are cool, whatever) have the ability to use it if it's convenient for them to get started writing code.

It should be pretty well-known at this point that I don't really like github either, but what I like a lot less than github is losing potential contributors for any reason.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111114/b2bfa43a/attachment-0001.htm 

From glyph at twistedmatrix.com  Mon Nov 14 14:30:55 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 14 Nov 2011 14:30:55 -0500
Subject: [Twisted-Python] Using Trial with Eclipse and PyDev
In-Reply-To: <CAMBtMcvmj0=c9vVCbDk6ZnoA_quTORzj35fdQg4fR2T+ZTAHUA@mail.gmail.com>
References: <CAMBtMcvmj0=c9vVCbDk6ZnoA_quTORzj35fdQg4fR2T+ZTAHUA@mail.gmail.com>
Message-ID: <510A9B7B-4987-416D-9539-5A6196796EDF@twistedmatrix.com>


On Nov 14, 2011, at 10:39 AM, Tom Sheffler wrote:

> I've seen a few answers regarding this topic around the net, but nothing recent.
> 
> I've enjoyed using the Twisted code-base in Eclipse, and have also liked running unittests in the PyDev framework.  However, I haven't been successful integrating Trial tests with the PyDev runner.  I did get Trial to run, but the output isn't really understood and parsed by PyDev the way I did it.
> 
> If anyone has any pointers, I'd appreciate suggestions.
> 
> - I'd like the PASSED/FAILED/ERROR/SKIPPED states to be understood by PyDev.
> - I'd also like the _trial_temp/test.log file to be displayed in an Eclipse window
> 
> Overall, I'm very happy with Trial as it is.  Using it in Eclipse almost seems greedy. ;-}

Hi Tom,

I had a similar experience when I used PyDev.

I think that the right thing to do is submit a patch to PyDev, as this is simply new behavior that you need to implement, as it implements support for the built-in Python unittest runner.

Good luck; and let us know if you come up with anything,

-glyph



From itamar at itamarst.org  Mon Nov 14 15:13:42 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 14 Nov 2011 15:13:42 -0500
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdat
	a.net>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <cace4c0f214009c5f46bc1d550dcecf7.squirrel@webmail.zoteca.com>

> Well, this is all absolutely sad. Now we (nearly) have new kqueue,
> it does fly, but I can't break above 32k anyway ..

Epoll on Linux?



From tobias.oberstein at tavendo.de  Mon Nov 14 15:37:28 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 12:37:28 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <cace4c0f214009c5f46bc1d550dcecf7.squirrel@webmail.zoteca.com>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
	<cace4c0f214009c5f46bc1d550dcecf7.squirrel@webmail.zoteca.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C26494C@EXVMBX020-12.exch020.serverdata.net>

> > Well, this is all absolutely sad. Now we (nearly) have new kqueue, it
> > does fly, but I can't break above 32k anyway ..
> 
> Epoll on Linux?

what is linux? ;)

with the monkey patch to use new IO, I can use the Little Daemon flying on kqueue .. so problem solved.


From p.mayers at imperial.ac.uk  Tue Nov 15 03:41:05 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 15 Nov 2011 08:41:05 +0000
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4EC225A1.4090406@imperial.ac.uk>

On 11/14/2011 05:57 PM, Tobias Oberstein wrote:

> and the fact that Python uses fopen() from libc, not open() from Posix

I know you've solved it know, but just to check, you are of course aware 
of os.open (which maps directly to Posix open)


From tobias.oberstein at tavendo.de  Tue Nov 15 06:02:38 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 15 Nov 2011 03:02:38 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <4EC225A1.4090406@imperial.ac.uk>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
	<4EC225A1.4090406@imperial.ac.uk>
Message-ID: <634914A010D0B943A035D226786325D42D0D274D87@EXVMBX020-12.exch020.serverdata.net>

> > and the fact that Python uses fopen() from libc, not open() from Posix
> 
> I know you've solved it know, but just to check, you are of course aware of
> os.open (which maps directly to Posix open)

Yes, thanks, I am aware.

However, i.e. Twisted Web uses open(), not os.open():

twisted.python.filepath.py => line 643

Luckily, it has no problems with monkey patching open() to the new Python IO
which under the hood also uses Posix open.


From tobias.oberstein at tavendo.de  Tue Nov 15 09:33:14 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 15 Nov 2011 06:33:14 -0800
Subject: [Twisted-Python] reactor.callLater question
Message-ID: <634914A010D0B943A035D226786325D42D0D274DF1@EXVMBX020-12.exch020.serverdata.net>

2 short questions .. please consider:

a)
reactor.callLater(0, fun1)
reactor.callLater(0, fun2)

Is that allowed .. delay == 0? It seems to work .. but I want to be sure.

b)
reactor.callLater(T, fun1)
reactor.callLater(T, fun2)

Is the call _order_ first fun1, then fun2 _guaranteed_?
For every T, and in particular T == 0?



From exarkun at twistedmatrix.com  Tue Nov 15 09:57:17 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 15 Nov 2011 14:57:17 -0000
Subject: [Twisted-Python] reactor.callLater question
In-Reply-To: <634914A010D0B943A035D226786325D42D0D274DF1@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0D274DF1@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20111115145717.20412.136891393.divmod.xquotient.127@localhost.localdomain>

On 02:33 pm, tobias.oberstein at tavendo.de wrote:
>2 short questions .. please consider:
>
>a)
>reactor.callLater(0, fun1)
>reactor.callLater(0, fun2)
>
>Is that allowed .. delay == 0? It seems to work .. but I want to be 
>sure.

Yep.  It's allowed.  It means to run the function pretty soon, but not 
right now.
>b)
>reactor.callLater(T, fun1)
>reactor.callLater(T, fun2)
>
>Is the call _order_ first fun1, then fun2 _guaranteed_?
>For every T, and in particular T == 0?

This isn't guaranteed.  It's been proposed that it should be, but the 
ticket has been languishing for a few years now:

  http://twistedmatrix.com/trac/ticket/1396

Jean-Paul


From solipsis at pitrou.net  Tue Nov 15 10:15:15 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Tue, 15 Nov 2011 16:15:15 +0100
Subject: [Twisted-Python] reactor.callLater question
References: <634914A010D0B943A035D226786325D42D0D274DF1@EXVMBX020-12.exch020.serverdata.net>
	<20111115145717.20412.136891393.divmod.xquotient.127@localhost.localdomain>
Message-ID: <20111115161515.0386a6ac@pitrou.net>

On Tue, 15 Nov 2011 14:57:17 -0000
exarkun at twistedmatrix.com wrote:
> >b)
> >reactor.callLater(T, fun1)
> >reactor.callLater(T, fun2)
> >
> >Is the call _order_ first fun1, then fun2 _guaranteed_?
> >For every T, and in particular T == 0?
> 
> This isn't guaranteed.  It's been proposed that it should be, but the 
> ticket has been languishing for a few years now:
> 
>   http://twistedmatrix.com/trac/ticket/1396

For the record, clock_gettime() will be available in Python 3.3:

>>> time.clock_gettime(time.CLOCK_REALTIME)
1321369967.1877146
>>> time.clock_gettime(time.CLOCK_MONOTONIC)
8488.233418624

Regards

Antoine.




From jeff at ocjtech.us  Tue Nov 15 11:36:12 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Tue, 15 Nov 2011 10:36:12 -0600
Subject: [Twisted-Python] logging question
Message-ID: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>

I'm using twisted.python.log to do some logging in an application.
It's formatting the output like "<date> [-] <mymessage>".  I've seen
in some of my other applications that the contents of "[-]" can change
depending on how the code is reached.  Is there a way that I can
customize this in my application?  I'd like to change the contents to
reflect the particular object that is generating the log message.

-- 
Jeff Ollie


From radix at twistedmatrix.com  Tue Nov 15 11:57:43 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 15 Nov 2011 11:57:43 -0500
Subject: [Twisted-Python] logging question
In-Reply-To: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
Message-ID: <CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>

On Tue, Nov 15, 2011 at 11:36 AM, Jeffrey Ollie <jeff at ocjtech.us> wrote:

> I'm using twisted.python.log to do some logging in an application.
> It's formatting the output like "<date> [-] <mymessage>".  I've seen
> in some of my other applications that the contents of "[-]" can change
> depending on how the code is reached.  Is there a way that I can
> customize this in my application?  I'd like to change the contents to
> reflect the particular object that is generating the log message.
>
>
If you pass a 'system' kwarg to log.msg then it will go in that field.

log.msg("hi", system="stuff") results in <date> [stuff] hi

In my applications I usually hack the default log context stuff to disable
the inferred systems because they end up just being misleading and
inconsistent anyway.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111115/78012867/attachment.htm 

From glyph at twistedmatrix.com  Tue Nov 15 13:27:39 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 15 Nov 2011 13:27:39 -0500
Subject: [Twisted-Python] reactor.callLater question
In-Reply-To: <20111115145717.20412.136891393.divmod.xquotient.127@localhost.localdomain>
References: <634914A010D0B943A035D226786325D42D0D274DF1@EXVMBX020-12.exch020.serverdata.net>
	<20111115145717.20412.136891393.divmod.xquotient.127@localhost.localdomain>
Message-ID: <A58806D8-A5E3-4E2A-A6C0-B93814627A20@twistedmatrix.com>


On Nov 15, 2011, at 9:57 AM, exarkun at twistedmatrix.com wrote:

> On 02:33 pm, tobias.oberstein at tavendo.de wrote:
>> 2 short questions .. please consider:
>> 
>> a)
>> reactor.callLater(0, fun1)
>> reactor.callLater(0, fun2)
>> 
>> Is that allowed .. delay == 0? It seems to work .. but I want to be 
>> sure.
> 
> Yep.  It's allowed.  It means to run the function pretty soon, but not 
> right now.
>> b)
>> reactor.callLater(T, fun1)
>> reactor.callLater(T, fun2)
>> 
>> Is the call _order_ first fun1, then fun2 _guaranteed_?
>> For every T, and in particular T == 0?
> 
> This isn't guaranteed.  It's been proposed that it should be, but the 
> ticket has been languishing for a few years now:
> 
>  http://twistedmatrix.com/trac/ticket/1396
> 

You might want to look at twisted.internet.task.cooperate instead if you want to perform a sequence of functions separated by callLater()s.

-glyph



From p.mayers at imperial.ac.uk  Wed Nov 16 06:33:52 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 16 Nov 2011 11:33:52 +0000
Subject: [Twisted-Python] 64 bit windows machine
Message-ID: <4EC39FA0.1000200@imperial.ac.uk>

I see from the Trac page that you guys are (or were) hunting a 64-bit 
windows machine. I also see there are no 64-bit Twisted packages on pypi.

Are the two related? Do you still want a windows 64-bit machine?

When you ask for a Visual Studio license, is not VC Express sufficient?

This is possibly something we can provide for you.

Cheers,
Phil


From screwtape at froup.com  Wed Nov 16 07:13:50 2011
From: screwtape at froup.com (Tim Allen)
Date: Wed, 16 Nov 2011 23:13:50 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
References: <20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
Message-ID: <20111116121350.GM9962@boombah.thristian.org>

On Mon, Nov 14, 2011 at 01:33:45PM -0500, Glyph wrote:
> Really the most important thing here though is just to get the
> automatic mirroring initially set up, not the never-ending
> ambassadorial work.  That way git users wouldn't _need_ elaborate
> instructions as to what to clone and how; if we just say "get twisted
> from github" and have that automatically updated it would be easier
> for everyone.

I've done some experimentation, and (as best I can tell) it's impossible
to use git-svn to create a sensible SVN ? Git conversion of the Twisted
repository. This is because of the various, inconsistent branch-naming
schemes that have been used over Twisted's long history.

As best I can tell, git-svn can import branches that exist at some
specific depth in the tree... so if your branches look like this:

    root
    |
    +- branches
	|
	+- add-a-feature-1234
	+- fix-a-bug-2345
	+- release-v1.0.x
	+- release-v1.1.x

...you can say "git svn clone --branches='branches/*'" and they'll be
imported as Git branches. Likewise, if you group your branches in some
way:

    root
    |
    +- branches
	|
	+- topic-branches
	|   |
	|   +- add-a-feature-1234
	|   +- fix-a-bug-2345
	|
	+- release-branches
	    |
	    +- v1.0.x
	    +- v1.1.x

...then you can say "git svn clone --branches='branches/*/*'" and
they'll all be imported cleanly. Unfortunately, the Twisted repository's
"branches" directory contains subdirectories representing branches *and*
subdirectories representing groups of branches... and *those* contain
both branch directories and branch-group directories. Here are the
branch-group directories I've discovered so far:

    branches/
    branches/releases/
    branches/releases/conch/
    branches/releases/mail/
    branches/releases/names/
    branches/releases/words/

When I import a range of revisions that happens to include a change to
a branch in "branches/releases" (I've been using the range 33049:33062
for testing), git-svn winds up importing the entire "releases" subtree
as a branch, which is... suboptimal. If I use the "--ignore-paths"
option to ignore everything under "branches/releases", then it still
generates the branch and faithfully records all the commits affecting
it... but ignores all the files, so when you check out that branch it
deletes everything in your working directory.

What's really annoying about this is that git itself doesn't care about
branch naming, and it's perfectly happy to have "add-a-feature-1234" and
"releases/v1.0.x" as branch names. It's just the git-svn tool not being
flexible enough. A quick Google doesn't reveal much in the way of other
people who have dealt with repository layouts like this, except for one
report which basically went "use 'svnadmin dump' to export the
repository, use sed to rewrite all the paths, load the dump into a new
svn repository and import from there." That sounds like a lot of work to
me, and not the sort of thing that could be reliably repeated to keep
the two repositories in sync. Perhaps someone should file a bug with the
git-svn maintainer, if only they had a bug-tracker.

So, would a repository with a huge, bogus "releases" branch be
acceptable in an Official Mirror? It's not strictly needed for
developing patches, but it *will* create lots of puzzled frowns and
annoyance, perhaps from people who want a Git mirror to integrate with
their "automatically download new releases" code.

Also in the spirit of writing things down so future contributors can
figure things out, I note the Git FAQ on the Git Wiki has a "How do
I mirror a SVN repository to git?" question:

    https://git.wiki.kernel.org/articles/g/i/t/GitFaq_ebc3.html


From wulczer at wulczer.org  Wed Nov 16 07:29:27 2011
From: wulczer at wulczer.org (=?UTF-8?B?SmFuIFVyYmHFhHNraQ==?=)
Date: Wed, 16 Nov 2011 13:29:27 +0100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111116121350.GM9962@boombah.thristian.org>
References: <20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
Message-ID: <4EC3ACA7.2030509@wulczer.org>

On 16/11/11 13:13, Tim Allen wrote:
> On Mon, Nov 14, 2011 at 01:33:45PM -0500, Glyph wrote:
>> Really the most important thing here though is just to get the
>> automatic mirroring initially set up, not the never-ending
>> ambassadorial work.  That way git users wouldn't _need_ elaborate
>> instructions as to what to clone and how; if we just say "get twisted
>> from github" and have that automatically updated it would be easier
>> for everyone.
>
> I've done some experimentation, and (as best I can tell) it's impossible
> to use git-svn to create a sensible SVN ? Git conversion of the Twisted
> repository.

There's a tool called svn-all-fast-export [1] that in my experience is 
much faster and is much more flexible.

It has some issues:
  * the documentation is scarce, but after some googling it's possible 
to get the hang of it
  * it's a one-off conversion (!)
  * AFAIR it requires access to the actual SVN repository, not just a 
checkout

Perhaps it would be feasible for you to get a tarball of the SVN repo, 
write a config file for svn-all-fast-export that will make all the 
required branches and tags be created and then pick up with git-svn from 
that (I'm also not 100% sure that "picking up" will be possible).

Anyway, just wanted to point out a tool that's been used by for instance 
Gnome to move from SVN to git and that I had some positive experience 
with personally.

Cheers,
Jan

[1] http://repo.or.cz/w/svn-all-fast-export.git


From jon at multani.info  Wed Nov 16 07:41:21 2011
From: jon at multani.info (Jonathan Ballet)
Date: Wed, 16 Nov 2011 20:41:21 +0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111116121350.GM9962@boombah.thristian.org>
References: <4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
Message-ID: <20111116124119.GC2439@localhost>

On Wed, Nov 16, 2011 at 11:13:50PM +1100, Tim Allen wrote:
> On Mon, Nov 14, 2011 at 01:33:45PM -0500, Glyph wrote:
> > Really the most important thing here though is just to get the
> > automatic mirroring initially set up, not the never-ending
> > ambassadorial work.  That way git users wouldn't _need_ elaborate
> > instructions as to what to clone and how; if we just say "get twisted
> > from github" and have that automatically updated it would be easier
> > for everyone.
>
> I've done some experimentation, and (as best I can tell) it's impossible
> to use git-svn to create a sensible SVN ? Git conversion of the Twisted
> repository. This is because of the various, inconsistent branch-naming
> schemes that have been used over Twisted's long history.
>

Actually, maybe git-svn by itself is not smart enough to handle all the
possible cases and "weird" repository schemes like Twisted's one.

However, I think it should be possible with a second pass script to have
a pretty good, or at least better, conversion.

If you init the repository with "--prefix=svn/ --trunk=trunk", I think
you will got a working copy with trunk, and all the branches and tags as
references in the "svn/" namespace. Then, with a script smart enough,
which looks through the references in "svn/branches/" and "svn/tags/",
it can create the right branches and tags like "--stdlayout" would do if
the scheme was compatible.

The difficulty I think lies into the "smart enough", but if we can't
find a way with this, I don't know how git-svn would be capable of.

As an example of what I mean, if we want to import the tags from the
Subversion repository, the job will consist in:

1. list all of the svn/tags/releases/release-* references
2. strip the "release-" prefix to keep only the "x.y.z" scheme
3. for each tag, if it doesn't already exit, "git tag x.y.z
   svn/tags/releases/release-x.y.z"

Maybe it needs to be even smarter for branches, but the final step will
only be "git branch BRANCH_NAME SVN_REFERENCE", which might end up with
a cleaner Git repository than the original Subversion repository...

If some help is needed, I'm willing to help too. I'm not sure to fully
understand where and how this conversion is heading to.

My 2 cents,

 Jonathan


From jeff at ocjtech.us  Wed Nov 16 09:17:51 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 16 Nov 2011 08:17:51 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111116124119.GC2439@localhost>
References: <4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
	<20111116124119.GC2439@localhost>
Message-ID: <CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>

On Wed, Nov 16, 2011 at 6:41 AM, Jonathan Ballet <jon at multani.info> wrote:
> On Wed, Nov 16, 2011 at 11:13:50PM +1100, Tim Allen wrote:
>>
>> I've done some experimentation, and (as best I can tell) it's impossible
>> to use git-svn to create a sensible SVN ? Git conversion of the Twisted
>> repository. This is because of the various, inconsistent branch-naming
>> schemes that have been used over Twisted's long history.
>
> Actually, maybe git-svn by itself is not smart enough to handle all the
> possible cases and "weird" repository schemes like Twisted's one.

Yes, git-svn by itself cannot handle Twisted's repository both because
of the repository layout that is different from what it expects, but
also because if git-svn tries to mirror a repository with a large
number of branches all at once it slows to a molasses-in-January
crawl.

> However, I think it should be possible with a second pass script to have
> a pretty good, or at least better, conversion.

The solution that I've come up with is to use git-svn to create a
separate Git repository for each branch, and then git-push that branch
into a central Git repository.  This does burn *a lot* of disk space,
but only one person needs to do it - everyone else can clone the
central repository.  The initial setup takes a while, but subsequent
runs should be relatively fast.

You can see the converted repository I'm building at:

https://github.com/jcollie/twisted

It's still in the process of building up so not all the branches are
there yet.  I've put the script that I'm using here:

https://github.com/jcollie/twisted-svn-convert

One feature that I'd like to add before calling this final is
converting SVN usernames to "proper" names/email addresses like Git
prefers to use.

I use a similar script to mirror the Asterisk SVN repository with some
good results:

https://github.com/jcollie/asterisk

-- 
Jeff Ollie


From lists at collab.nl  Wed Nov 16 12:50:24 2011
From: lists at collab.nl (Thijs Triemstra)
Date: Wed, 16 Nov 2011 18:50:24 +0100
Subject: [Twisted-Python] 64 bit windows machine
In-Reply-To: <4EC39FA0.1000200@imperial.ac.uk>
References: <4EC39FA0.1000200@imperial.ac.uk>
Message-ID: <4EC3F7E0.6030903@collab.nl>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 11/16/2011 12:33 PM, Phil Mayers wrote:
> I see from the Trac page that you guys are (or were) hunting a 64-bit 
> windows machine. I also see there are no 64-bit Twisted packages on pypi.

Thanks for the offer but I think there's already a 64-bit python 2.7
buildslave in use so it seems the wiki is out of date..

http://buildbot.twistedmatrix.com/buildslaves/bot-glyph-6

I'm not sure about the 64-bit packages, but its likely these builders
were added after the 11.0 release and the upcoming 11.1 will have those
packages.

Thijs
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.11 (GNU/Linux)

iEYEARECAAYFAk7D99cACgkQBRbMGagbo3nlfgCeKufnUeANVc0eGMk7adDiK7Ho
50EAn3JZQZmwKgrk7IZkYIZ/Wl1I2b1T
=zsz/
-----END PGP SIGNATURE-----


From p.mayers at imperial.ac.uk  Wed Nov 16 15:16:47 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 16 Nov 2011 20:16:47 +0000
Subject: [Twisted-Python] 64 bit windows machine
In-Reply-To: <4EC3F7E0.6030903@collab.nl>
References: <4EC39FA0.1000200@imperial.ac.uk> <4EC3F7E0.6030903@collab.nl>
Message-ID: <4EC41A2F.6060604@imperial.ac.uk>

On 11/16/2011 05:50 PM, Thijs Triemstra wrote:

> Thanks for the offer but I think there's already a 64-bit python 2.7
> buildslave in use so it seems the wiki is out of date..
>
> http://buildbot.twistedmatrix.com/buildslaves/bot-glyph-6
>
> I'm not sure about the 64-bit packages, but its likely these builders
> were added after the 11.0 release and the upcoming 11.1 will have those
> packages.

Cool. Good to hear.


From ddwiggins at advpubtech.com  Wed Nov 16 15:27:44 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Wed, 16 Nov 2011 12:27:44 -0800
Subject: [Twisted-Python] Log output formatting (was Re: logging question)
In-Reply-To: <CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
Message-ID: <ja16c1$u1t$1@dough.gmane.org>

On 11/15/2011 8:57 AM, Christopher Armstrong wrote:
> If you pass a 'system' kwarg to log.msg then it will go in that field.
>
> log.msg("hi", system="stuff") results in <date> [stuff] hi

This triggered me to look further into what LogPublisher.msg does, since 
I've long wanted to customize the format of the output.  I found what I 
wanted in 
http://twistedmatrix.com/documents/current/api/twisted.python.log.ILogObserver.html 
:

In msg(), the message gets added to the kwargs dictionary (along with a 
timestamp called 'time'), and that dict is passed to LogObserver.emit, 
which uses textFromEventDict() to create what's actually output.  This 
dictionary has the following keys recognized by textFromEventDict:

    * |message|: A |tuple| of |str| containing messages to be logged.
    * |system|: A |str| which indicates the "system" which is generating
      this event.
    * |isError|: A |bool| indicating whether this event represents an
      error.
    * |failure|: A |failure.Failure|
      <http://twistedmatrix.com/documents/current/api/twisted.python.failure.Failure.html>
      instance, required if the event is an error.
    * |why|: Used as header of the traceback in case of errors.
    * |format|: A string format used in place of |message| to customize
      the event. The intent is for the observer to format a message by
      doing something like |format % eventDict|.

So, for example, you could do log.msg(format='....', foo='stuff', 
bar='things')

I suggest that this be added to the documentation string of the msg() 
method and 
http://twistedmatrix.com/documents/current/core/howto/logging.html.


-- 

Don Dwiggins
Advanced Publishing Technology

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111116/080000d9/attachment.htm 

From glyph at twistedmatrix.com  Wed Nov 16 16:01:36 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 16 Nov 2011 16:01:36 -0500
Subject: [Twisted-Python] 64 bit windows machine
In-Reply-To: <4EC41A2F.6060604@imperial.ac.uk>
References: <4EC39FA0.1000200@imperial.ac.uk> <4EC3F7E0.6030903@collab.nl>
	<4EC41A2F.6060604@imperial.ac.uk>
Message-ID: <F995B9CA-51AB-4762-B5F5-74C007285EFB@twistedmatrix.com>


On Nov 16, 2011, at 3:16 PM, Phil Mayers wrote:

> On 11/16/2011 05:50 PM, Thijs Triemstra wrote:
> 
>> Thanks for the offer but I think there's already a 64-bit python 2.7
>> buildslave in use so it seems the wiki is out of date..
>> 
>> http://buildbot.twistedmatrix.com/buildslaves/bot-glyph-6
>> 
>> I'm not sure about the 64-bit packages, but its likely these builders
>> were added after the 11.0 release and the upcoming 11.1 will have those
>> packages.
> 
> Cool. Good to hear.

It's always helpful to get more hardware for the build farm though; there are more configurations that we want to test than we can possibly buy enough hardware for :).

It would also be very helpful if you could contribute some time to help administer our existing Windows buildslaves; Windows expertise (especially administrator expertise) is fairly thin among the core developer community.

What were you thinking of offering?

-glyph

From vieuxtech at gmail.com  Wed Nov 16 17:19:51 2011
From: vieuxtech at gmail.com (Sam Roberts)
Date: Wed, 16 Nov 2011 14:19:51 -0800
Subject: [Twisted-Python] gnupg protocol implementation, does one exist?
In-Reply-To: <mailman.3454.1321473169.5291.twisted-python@twistedmatrix.com>
References: <mailman.3454.1321473169.5291.twisted-python@twistedmatrix.com>
Message-ID: <CA+Sj9TmZj4e=Kr6fc0Fn+gDanZVOtGbC-mThhgJaNjOqaLtrbA@mail.gmail.com>

There is a bit of an example in

http://twistedmatrix.com/documents/current/core/howto/process.html

but I'm sure somebody out there must have fleshed this out into a more
complete implementation.

Can anybody point me to such a thing, before we write out own?

We are currently using GnuPGInterface.py, but its non-twisted child
process handling is causing flakyness, especially around the waitpid()
call.

Thanks,
Sam


From screwtape at froup.com  Wed Nov 16 22:46:45 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 17 Nov 2011 14:46:45 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>
References: <20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
	<20111116124119.GC2439@localhost>
	<CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>
Message-ID: <20111117034645.GN9962@boombah.thristian.org>

On Wed, Nov 16, 2011 at 08:17:51AM -0600, Jeffrey Ollie wrote:
> The solution that I've come up with is to use git-svn to create a
> separate Git repository for each branch, and then git-push that branch
> into a central Git repository.  This does burn *a lot* of disk space,
> but only one person needs to do it - everyone else can clone the
> central repository.  The initial setup takes a while, but subsequent
> runs should be relatively fast.
> 
> You can see the converted repository I'm building at:
> 
> https://github.com/jcollie/twisted
> 
> It's still in the process of building up so not all the branches are
> there yet.

Oooh. That's looking pretty good. As you say, not all the branches are
there, and none of the tags, but I can see you've already successfully imported some
of the tricky release branches.

> I've put the script that I'm using here:
> 
> https://github.com/jcollie/twisted-svn-convert
> 
> One feature that I'd like to add before calling this final is
> converting SVN usernames to "proper" names/email addresses like Git
> prefers to use.

I see your script repository already has the beginnings of such
a mapping file; unfortunately you've already filled in most of the names
I recognise, and I don't know if there's any other authoritative list of
such information (and of course, it would need to be updated as Twisted
adds new committers).

The "how to mirror Git to SVN" section of the Git FAQ includes
information on how to take a cloned git repository and add git-svn magic
so you can commit to the original upstream repository; I guess that
wouldn't really work with your custom import script.

I think this would be a much better base for an Official Twisted Git
Mirror than anything I've come up with so far. How difficult would it be
for somebody unfamiliar with Git (such as, say, the Twisted core devs)
to keep running?


From twisted at ralphm.ik.nu  Thu Nov 17 05:03:29 2011
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Thu, 17 Nov 2011 11:03:29 +0100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111117034645.GN9962@boombah.thristian.org>
References: <20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
	<20111116124119.GC2439@localhost>
	<CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>
	<20111117034645.GN9962@boombah.thristian.org>
Message-ID: <1321524209.2789.14.camel@dwaal>

On Thu, 2011-11-17 at 14:46 +1100, Tim Allen wrote:
> On Wed, Nov 16, 2011 at 08:17:51AM -0600, Jeffrey Ollie wrote:
>[..snip..]
>
> > One feature that I'd like to add before calling this final is
> > converting SVN usernames to "proper" names/email addresses like Git
> > prefers to use.
> 
> I see your script repository already has the beginnings of such
> a mapping file; unfortunately you've already filled in most of the names
> I recognise, and I don't know if there's any other authoritative list of
> such information (and of course, it would need to be updated as Twisted
> adds new committers).

These might be a good start:

http://twistedmatrix.com/trac/wiki/TwistedMatrixLaboratories
http://twistedmatrix.com/trac/browser/trunk/twisted/topfiles/CREDITS

However the latter hasn't changed in 5 years, the former probably also
isn't complete and people's e-mail addresses might not map their
(current) Git(Hub) one.

--
ralphm



From jeff at ocjtech.us  Thu Nov 17 09:29:16 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Thu, 17 Nov 2011 08:29:16 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111117034645.GN9962@boombah.thristian.org>
References: <20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
	<20111116124119.GC2439@localhost>
	<CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>
	<20111117034645.GN9962@boombah.thristian.org>
Message-ID: <CAD-DQxTi2ZfResfECZDqHp9EpWWKjWf0qDKN+dzPU=n2ATjftQ@mail.gmail.com>

On Wed, Nov 16, 2011 at 9:46 PM, Tim Allen <screwtape at froup.com> wrote:
> On Wed, Nov 16, 2011 at 08:17:51AM -0600, Jeffrey Ollie wrote:
>>
>> It's still in the process of building up so not all the branches are
>> there yet.
>
> Oooh. That's looking pretty good. As you say, not all the branches are
> there, and none of the tags, but I can see you've already successfully imported some
> of the tricky release branches.

The problem with tags in SVN is that there really aren't any, there
are just directories that are used as tags by convention.

> The "how to mirror Git to SVN" section of the Git FAQ includes
> information on how to take a cloned git repository and add git-svn magic
> so you can commit to the original upstream repository; I guess that
> wouldn't really work with your custom import script.

Not really, and from what I've seen it's very tricky to get it to work
properly anyway.

> I think this would be a much better base for an Official Twisted Git
> Mirror than anything I've come up with so far. How difficult would it be
> for somebody unfamiliar with Git (such as, say, the Twisted core devs)
> to keep running?

Customize a few variables and then it's just a matter of putting it in
a cron job.  I should add some sort of locking as well so that if one
run lasts too long a subsequent run won't step all over the previous
one.

-- 
Jeff Ollie


From therve at free.fr  Thu Nov 17 13:02:17 2011
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Thu, 17 Nov 2011 19:02:17 +0100
Subject: [Twisted-Python] Twisted 11.1.0 Released
Message-ID: <4EC54C29.80300@free.fr>

On behalf of Twisted Matrix Laboratories, I am pleased to announce the
release of Twisted 11.1.

Highlights of the 185 tickets closed include:

  * The poll reactor as default where applicable, instead of select
    everywhere.

  * A new SSL implementation only relying on OpenSSL for cryptography,
    (not I/O) making it more robust.

  * Several improvements to the fresh HTTP/1.1 client implementation,
    including proxy and cookie support.

  * My personal favorite: a new howto has been published on test-driven
    development with Twisted.

  * A special mention to the new abortConnection support on TCP and SSL
    connections, heroically pushed by Itamar and Jean-Paul, and the
    oldest ticket closed by this release.

This is the last release supporting Python 2.4 (the support on Windows stopped with 11.0).

For more information, see the NEWS file here:

  http://twistedmatrix.com/Releases/Twisted/11.1/NEWS.txt

Download it now from:

  http://pypi.python.org/packages/source/T/Twisted/Twisted-11.1.0.tar.bz2 or
  http://pypi.python.org/packages/2.5/T/Twisted/Twisted-11.1.0.win32-py2.5.msi or
  http://pypi.python.org/packages/2.6/T/Twisted/Twisted-11.1.0.win32-py2.6.msi or
  http://pypi.python.org/packages/2.7/T/Twisted/Twisted-11.1.0.win32-py2.7.msi

Thanks to the supporters of the Twisted Software Foundation and to the many contributors for this release.

-- 
Thomas



From jml at mumak.net  Thu Nov 17 13:05:15 2011
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 17 Nov 2011 18:05:15 +0000
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <4EC54C29.80300@free.fr>
References: <4EC54C29.80300@free.fr>
Message-ID: <CAHZ8tnbNTDBwmgdM+QdwMh5kChFcQqqVPHT=xXm4NTd1aACusw@mail.gmail.com>

On Thu, Nov 17, 2011 at 6:02 PM, Thomas Herv? <therve at free.fr> wrote:
> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 11.1.
>

\o/

> Highlights of the 185 tickets closed include:
>

Rock on!

...
> This is the last release supporting Python 2.4 (the support on Windows stopped with 11.0).
>

This just gets better and better :)

Thanks so much for getting the release out, and to all who contributed
to making it the best release of Twisted ever.

jml


From glyph at twistedmatrix.com  Thu Nov 17 14:11:36 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 17 Nov 2011 14:11:36 -0500
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <4EC54C29.80300@free.fr>
References: <4EC54C29.80300@free.fr>
Message-ID: <2D70BD79-722C-4F08-8DBD-135FE37814FB@twistedmatrix.com>


On Nov 17, 2011, at 1:02 PM, Thomas Herv? wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 11.1.

WOOOOOOOOO!

Thanks to Thomas and everyone who worked on fixes and features for this release.

>  * My personal favorite: a new howto has been published on test-driven
>    development with Twisted.

LEARN IT.  LOVE IT.  LIVE IT.

<http://twistedmatrix.com/documents/current/core/howto/trial.html>

> Thanks to the supporters of the Twisted Software Foundation and to the many contributors for this release.

A gentle reminder: those supporters should renew their sponsorships; we were remarkably lax in 2011, but at the beginning of 2012, all those logos will be coming down off the front page unless they are renewed :-).  Sponsored development and especially sponsored reviews really helped to make 11.1 what it is, It would be great to make 12.0 (and beyond) even better!

-glyph



From kevin.horn at gmail.com  Thu Nov 17 14:58:31 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 17 Nov 2011 13:58:31 -0600
Subject: [Twisted-Python] Twisted 11.1.0 Released
In-Reply-To: <4EC54C29.80300@free.fr>
References: <4EC54C29.80300@free.fr>
Message-ID: <CA+U=zK3uVp1abhHzZ7ZLXxX7jgouKfObE0yRbAHetJRXtCNSwA@mail.gmail.com>

On Thu, Nov 17, 2011 at 12:02 PM, Thomas Herv? <therve at free.fr> wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 11.1.
>
> Highlights of the 185 tickets closed include:
>
>  * The poll reactor as default where applicable, instead of select
>    everywhere.
>
>  * A new SSL implementation only relying on OpenSSL for cryptography,
>    (not I/O) making it more robust.
>
>  * Several improvements to the fresh HTTP/1.1 client implementation,
>    including proxy and cookie support.
>
>  * My personal favorite: a new howto has been published on test-driven
>    development with Twisted.
>
>  * A special mention to the new abortConnection support on TCP and SSL
>    connections, heroically pushed by Itamar and Jean-Paul, and the
>    oldest ticket closed by this release.
>
> This is the last release supporting Python 2.4 (the support on Windows
> stopped with 11.0).
>
> For more information, see the NEWS file here:
>
>  http://twistedmatrix.com/Releases/Twisted/11.1/NEWS.txt
>
> Download it now from:
>
>  http://pypi.python.org/packages/source/T/Twisted/Twisted-11.1.0.tar.bz2or
>
> http://pypi.python.org/packages/2.5/T/Twisted/Twisted-11.1.0.win32-py2.5.msior
>
> http://pypi.python.org/packages/2.6/T/Twisted/Twisted-11.1.0.win32-py2.6.msior
>
> http://pypi.python.org/packages/2.7/T/Twisted/Twisted-11.1.0.win32-py2.7.msi
>
> Thanks to the supporters of the Twisted Software Foundation and to the
> many contributors for this release.
>
> --
> Thomas
>

<happydance>

Great work, everyone, and especially Thomas, for performing the relatively
tedious task of cutting the release.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111117/7de62fd8/attachment.htm 

From kevin.horn at gmail.com  Thu Nov 17 15:01:18 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 17 Nov 2011 14:01:18 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <1321524209.2789.14.camel@dwaal>
References: <20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
	<20111116124119.GC2439@localhost>
	<CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>
	<20111117034645.GN9962@boombah.thristian.org>
	<1321524209.2789.14.camel@dwaal>
Message-ID: <CA+U=zK1BM2H7m-6gmpOnBKcwkzcw8UuuOqxknc5R-18rRtTe9A@mail.gmail.com>

On Thu, Nov 17, 2011 at 4:03 AM, Ralph Meijer <twisted at ralphm.ik.nu> wrote:

>
> http://twistedmatrix.com/trac/wiki/TwistedMatrixLaboratories
> http://twistedmatrix.com/trac/browser/trunk/twisted/topfiles/CREDITS
>
> However the latter hasn't changed in 5 years, the former probably also
> isn't complete and people's e-mail addresses might not map their
> (current) Git(Hub) one.
>
>
Those are most definitely not complete.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111117/1d0c0717/attachment.htm 

From kevin.horn at gmail.com  Thu Nov 17 16:10:18 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 17 Nov 2011 15:10:18 -0600
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <ja16c1$u1t$1@dough.gmane.org>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
Message-ID: <CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>

On Wed, Nov 16, 2011 at 2:27 PM, Don Dwiggins <ddwiggins at advpubtech.com>wrote:

> **
> On 11/15/2011 8:57 AM, Christopher Armstrong wrote:
>
> If you pass a 'system' kwarg to log.msg then it will go in that field.
>
>  log.msg("hi", system="stuff") results in <date> [stuff] hi
>
>
> This triggered me to look further into what LogPublisher.msg does, since
> I've long wanted to customize the format of the output.  I found what I
> wanted in
> http://twistedmatrix.com/documents/current/api/twisted.python.log.ILogObserver.html:
>
> In msg(), the message gets added to the kwargs dictionary (along with a
> timestamp called 'time'), and that dict is passed to LogObserver.emit,
> which uses textFromEventDict() to create what's actually output.  This
> dictionary has the following keys recognized by textFromEventDict:
>
>    - message: A tuple of str containing messages to be logged.
>    - system: A str which indicates the "system" which is generating this
>    event.
>    - isError: A bool indicating whether this event represents an error.
>    - failure: A failure.Failure<http://twistedmatrix.com/documents/current/api/twisted.python.failure.Failure.html>instance, required
>    if the event is an error.
>    - why: Used as header of the traceback in case of errors.
>    - format: A string format used in place of message to customize the
>    event. The intent is for the observer to format a message by doing
>    something like format % eventDict.
>
> So, for example, you could do log.msg(format='....', foo='stuff',
> bar='things')
>
> I suggest that this be added to the documentation string of the msg()
> method and
> http://twistedmatrix.com/documents/current/core/howto/logging.html.
>
>
> --
>
> Don Dwiggins
> Advanced Publishing Technology
>
>
>
Please open a ticket for this, so it doesn't get lost.

Thx.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111117/b8283a43/attachment.htm 

From tobias.oberstein at tavendo.de  Thu Nov 17 16:18:54 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 17 Nov 2011 13:18:54 -0800
Subject: [Twisted-Python] Twisted 11.1.0 Released
In-Reply-To: <4EC54C29.80300@free.fr>
References: <4EC54C29.80300@free.fr>
Message-ID: <634914A010D0B943A035D226786325D42D0D27589C@EXVMBX020-12.exch020.serverdata.net>

> Highlights of the 185 tickets closed include:

Awesome!

Haven't been around on the Twisted homepage for a while, but the
release made me to, so I like to add this (not release related):

The new homepage is really nice and much more inviting!



From ypercube at gmail.com  Thu Nov 17 17:15:34 2011
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Thu, 17 Nov 2011 22:15:34 +0000
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <4EC54C29.80300@free.fr>
References: <4EC54C29.80300@free.fr>
Message-ID: <CAE3TBxyZ4D4F0SDPpKFZCAKuoC_63M71JAZLnxAT7byUvjOXAQ@mail.gmail.com>

Great, just great!

(nitpicking: the title should be changed from "Twisted *11.1.0* Released"
to "*Twisted 11.1.1 Released*")

Pandelis


On Thu, Nov 17, 2011 at 6:02 PM, Thomas Herv? <therve at free.fr> wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 11.1.
>
> Highlights of the 185 tickets closed include:
>
>  * The poll reactor as default where applicable, instead of select
>    everywhere.
>
>  * A new SSL implementation only relying on OpenSSL for cryptography,
>    (not I/O) making it more robust.
>
>  * Several improvements to the fresh HTTP/1.1 client implementation,
>    including proxy and cookie support.
>
>  * My personal favorite: a new howto has been published on test-driven
>    development with Twisted.
>
>  * A special mention to the new abortConnection support on TCP and SSL
>    connections, heroically pushed by Itamar and Jean-Paul, and the
>    oldest ticket closed by this release.
>
> This is the last release supporting Python 2.4 (the support on Windows
> stopped with 11.0).
>
> For more information, see the NEWS file here:
>
>  http://twistedmatrix.com/Releases/Twisted/11.1/NEWS.txt
>
> Download it now from:
>
>  http://pypi.python.org/packages/source/T/Twisted/Twisted-11.1.0.tar.bz2or
>
> http://pypi.python.org/packages/2.5/T/Twisted/Twisted-11.1.0.win32-py2.5.msior
>
> http://pypi.python.org/packages/2.6/T/Twisted/Twisted-11.1.0.win32-py2.6.msior
>
> http://pypi.python.org/packages/2.7/T/Twisted/Twisted-11.1.0.win32-py2.7.msi
>
> Thanks to the supporters of the Twisted Software Foundation and to the
> many contributors for this release.
>
> --
> Thomas
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111117/2a4f5d4b/attachment-0001.htm 

From ypercube at gmail.com  Thu Nov 17 17:17:57 2011
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Thu, 17 Nov 2011 22:17:57 +0000
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <CAE3TBxyZ4D4F0SDPpKFZCAKuoC_63M71JAZLnxAT7byUvjOXAQ@mail.gmail.com>
References: <4EC54C29.80300@free.fr>
	<CAE3TBxyZ4D4F0SDPpKFZCAKuoC_63M71JAZLnxAT7byUvjOXAQ@mail.gmail.com>
Message-ID: <CAE3TBxwWt4Gs++nsoG4wuQSCeaKa6V3HyqsyZGLQfWMT29ebcQ@mail.gmail.com>

On Thu, Nov 17, 2011 at 10:15 PM, Pantelis Theodosiou <ypercube at gmail.com>wrote:

> Great, just great!
>
> (nitpicking: the title should be changed from "Twisted *11.1.0* Released"
> to "*Twisted 11.1.1 Released*")
>

Oops, my bad. Too many 1s can confuse one's mind. Sorry.


>
> Pandelis
>
>
>
> On Thu, Nov 17, 2011 at 6:02 PM, Thomas Herv? <therve at free.fr> wrote:
>
>> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
>> release of Twisted 11.1.
>>
>> Highlights of the 185 tickets closed include:
>>
>>  * The poll reactor as default where applicable, instead of select
>>    everywhere.
>>
>>  * A new SSL implementation only relying on OpenSSL for cryptography,
>>    (not I/O) making it more robust.
>>
>>  * Several improvements to the fresh HTTP/1.1 client implementation,
>>    including proxy and cookie support.
>>
>>  * My personal favorite: a new howto has been published on test-driven
>>    development with Twisted.
>>
>>  * A special mention to the new abortConnection support on TCP and SSL
>>    connections, heroically pushed by Itamar and Jean-Paul, and the
>>    oldest ticket closed by this release.
>>
>> This is the last release supporting Python 2.4 (the support on Windows
>> stopped with 11.0).
>>
>> For more information, see the NEWS file here:
>>
>>  http://twistedmatrix.com/Releases/Twisted/11.1/NEWS.txt
>>
>> Download it now from:
>>
>>  http://pypi.python.org/packages/source/T/Twisted/Twisted-11.1.0.tar.bz2or
>>
>> http://pypi.python.org/packages/2.5/T/Twisted/Twisted-11.1.0.win32-py2.5.msior
>>
>> http://pypi.python.org/packages/2.6/T/Twisted/Twisted-11.1.0.win32-py2.6.msior
>>
>> http://pypi.python.org/packages/2.7/T/Twisted/Twisted-11.1.0.win32-py2.7.msi
>>
>> Thanks to the supporters of the Twisted Software Foundation and to the
>> many contributors for this release.
>>
>> --
>> Thomas
>>
>>
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111117/5d73f9a7/attachment.htm 

From exarkun at twistedmatrix.com  Thu Nov 17 18:26:48 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 17 Nov 2011 23:26:48 -0000
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
Message-ID: <20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>

On 09:10 pm, kevin.horn at gmail.com wrote:
>On Wed, Nov 16, 2011 at 2:27 PM, Don Dwiggins 
><ddwiggins at advpubtech.com>wrote:
>>**
>>On 11/15/2011 8:57 AM, Christopher Armstrong wrote:
>>
>>If you pass a 'system' kwarg to log.msg then it will go in that field.
>>
>>  log.msg("hi", system="stuff") results in <date> [stuff] hi
>>
>>
>>This triggered me to look further into what LogPublisher.msg does, 
>>since
>>I've long wanted to customize the format of the output.  I found what 
>>I
>>wanted in
>>http://twistedmatrix.com/documents/current/api/twisted.python.log.ILogObserver.html:
>>
>>In msg(), the message gets added to the kwargs dictionary (along with 
>>a
>>timestamp called 'time'), and that dict is passed to LogObserver.emit,
>>which uses textFromEventDict() to create what's actually output.  This
>>dictionary has the following keys recognized by textFromEventDict:
>>
>>    - message: A tuple of str containing messages to be logged.
>>    - system: A str which indicates the "system" which is generating 
>>this
>>    event.
>>    - isError: A bool indicating whether this event represents an 
>>error.
>>    - failure: A 
>>failure.Failure<http://twistedmatrix.com/documents/current/api/twisted.python.failure.Failure.html>instance, 
>>required
>>    if the event is an error.
>>    - why: Used as header of the traceback in case of errors.
>>    - format: A string format used in place of message to customize the
>>    event. The intent is for the observer to format a message by doing
>>    something like format % eventDict.
>>
>>So, for example, you could do log.msg(format='....', foo='stuff',
>>bar='things')
>>
>>I suggest that this be added to the documentation string of the msg()
>>method and
>>http://twistedmatrix.com/documents/current/core/howto/logging.html.

`msg` doesn't really care about what you give it.  It doesn't support 
the `format` keyword in any particular way.  It's the job of a log 
observer to handle that sort of thing.  So it could certainly be 
documented, but don't mix things together that are unrelated.

Jean-Paul


From exarkun at twistedmatrix.com  Thu Nov 17 22:34:26 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 18 Nov 2011 03:34:26 -0000
Subject: [Twisted-Python] 64 bit windows machine
In-Reply-To: <4EC39FA0.1000200@imperial.ac.uk>
References: <4EC39FA0.1000200@imperial.ac.uk>
Message-ID: <20111118033426.20412.273429403.divmod.xquotient.135@localhost.localdomain>

On 16 Nov, 11:33 am, p.mayers at imperial.ac.uk wrote:
>I see from the Trac page that you guys are (or were) hunting a 64-bit
>windows machine. I also see there are no 64-bit Twisted packages on 
>pypi.

/Another/ reason there are no 64 bit Twisted packages on PyPI is that 
PyPI rejects 64 bit MSI uploads.  If someone wants to help out on this 
front, filing bugs against PyPI (and perhaps then fixing them, and 
getting someone to deploy the fixes) would be useful.  This is also one 
of the reasons there are no 64 bit pyOpenSSL packages on PyPI.

Jean-Paul


From glyph at twistedmatrix.com  Fri Nov 18 00:11:24 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 18 Nov 2011 00:11:24 -0500
Subject: [Twisted-Python] Twisted 11.1.0 Released
In-Reply-To: <634914A010D0B943A035D226786325D42D0D27589C@EXVMBX020-12.exch020.serverdata.net>
References: <4EC54C29.80300@free.fr>
	<634914A010D0B943A035D226786325D42D0D27589C@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <8C8DB58C-0937-4B70-9781-A96A500A8DBD@twistedmatrix.com>


On Nov 17, 2011, at 4:18 PM, Tobias Oberstein wrote:

>> Highlights of the 185 tickets closed include:
> 
> Awesome!
> 
> Haven't been around on the Twisted homepage for a while, but the
> release made me to, so I like to add this (not release related):
> 
> The new homepage is really nice and much more inviting!

Thanks for noticing!  I believe the current re-write was an effort put forth by Itamar, so credit where credit's due :).

-glyph

From albert.brandl at weiermayer.com  Fri Nov 18 03:46:45 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Fri, 18 Nov 2011 09:46:45 +0100
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <2D70BD79-722C-4F08-8DBD-135FE37814FB@twistedmatrix.com>
References: <4EC54C29.80300@free.fr>
	<2D70BD79-722C-4F08-8DBD-135FE37814FB@twistedmatrix.com>
Message-ID: <20111118084645.GA3413@weiermayer.com>

On Thu, Nov 17, 2011 at 02:11:36PM -0500, Glyph wrote:
> 
> A gentle reminder: those supporters should renew their sponsorships; we 
> were remarkably lax in 2011, but at the beginning of 2012, all those 
> logos will be coming down off the front page unless they are renewed 
> :-).

I just had a look at the page explaining the TSF. In the section "Benefits
of Sponsorship", the first note about logos reads:

"Placement on the front page of http://twistedmatrix.com will be for 
donations that equal or are more than the Bronze level."

The "equal or" seems to be wrong.

Best regards,
-- 
Albert Brandl | Weiermayer Solutions GmbH


?
A-4813 Altm?nster - Abteistra?e 12 - web: www.weiermayer.com - phone: +43761287677 - fax: +43761220356 - mobile: +436642442777

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111118/85eb2626/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 43835 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20111118/85eb2626/attachment-0001.jpeg 

From albert.brandl at weiermayer.com  Fri Nov 18 06:23:52 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Fri, 18 Nov 2011 12:23:52 +0100
Subject: [Twisted-Python] Sending a "good-bye message" before closing a
	connection
Message-ID: <20111118112352.GA17073@weiermayer.com>

Hi!

We have a small heartbeat-system based on Twisted. The clients register
at the server and send some health information in regular intervals.
If the server does not get a lifesign from a client, this is registered
in a database. 

But sometimes, the clients have to go offline. In this case, I'd like 
them to send a message to the server that they will be gone for a while.
When a client goes offline, the twistd daemon for handling the heartbeats
is shut down.

What is the best way to do this in Twisted? The `clientConnectionLost`
method of the factory is only called after disconnecting, AFAICT.

Thanks & best regards,

-- 
Albert Brandl


?
A-4813 Altm?nster - Abteistra?e 12 - web: www.weiermayer.com - phone: +43761287677 - fax: +43761220356 - mobile: +436642442777

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111118/3b0b2976/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 43835 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20111118/3b0b2976/attachment-0001.jpeg 

From itamar at itamarst.org  Fri Nov 18 08:31:18 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 18 Nov 2011 08:31:18 -0500
Subject: [Twisted-Python] Sending a "good-bye message" before closing a
 connection
In-Reply-To: <20111118112352.GA17073@weiermayer.com>
References: <20111118112352.GA17073@weiermayer.com>
Message-ID: <1321623078.5747.3.camel@blake>

On Fri, 2011-11-18 at 12:23 +0100, Albert Brandl wrote:

> But sometimes, the clients have to go offline. In this case, I'd like 
> them to send a message to the server that they will be gone for a
> while.
> When a client goes offline, the twistd daemon for handling the
> heartbeats
> is shut down.

Presumably there is a method somewhere that decides to close the
connection down:

   def timeToShutdown(self):
       self.transport.loseConnection()

So instead do:

   def timeToShutdown(self):
       self.transport.write(GOODBYE)
       self.transport.loseConnection()




From dynamicgl at gmail.com  Fri Nov 18 14:14:27 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 19 Nov 2011 03:14:27 +0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
Message-ID: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>

Hi all.

   just a few hours ago, I discovered ampoule is probably a right choice to
run my analyze codes. I want to know whether your guys have used it for
production purposes or not It seems the development has been frozen for a
while and I noticed many bugs reported on the board. Some bugs looks like
quite serious for example: a bug mentioned occasionally, startWorker may
generate double process until the system hanging.

    If those bugs still exist, i am gonna try to fix some of them if it is
impossible.

Regards

GELIN YAN
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111119/0fdd4524/attachment.htm 

From drednout.by at gmail.com  Fri Nov 18 14:58:10 2011
From: drednout.by at gmail.com (Romanoff Alexei)
Date: Fri, 18 Nov 2011 19:58:10 +0000
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
Message-ID: <CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>

2011/11/18 gelin yan <dynamicgl at gmail.com>:
> Hi all.
> ? ?just a few hours ago, I discovered ampoule is probably a right choice to
> run my analyze codes. I want to know whether your guys have used it for
> production purposes or not It seems the development has been frozen for a
> while and I noticed many bugs reported on the board. Some bugs looks like
> quite serious for example: a bug mentioned occasionally, startWorker may
> generate double process until the system hanging.
> ? ? If those bugs still exist, i am gonna try to fix some of them if it is
> impossible.
> Regards
> GELIN YAN
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

Good question!
I've recently adopted our game server for processing client requests
in several processes using ampoule as tool for managing process pool.
New approach has significantly more performance(5-100% more queries
per second in depends on type of query and the number of concurrent
clients) and high scalability. Modern servers have a lot of processor
cores, but GIL  in python kills all opportunities to use
multi-threading for heavy computation.
But my solution is still not in production. I wanted to ask the same
question, but other tasks distracted me from ampoule and
multi-processing.
I should also mention that my tests were rather artificial,  I don't
know how  ampoule would work when many real players came to our server
and started playing.

I have also several patches for ampoule, which allows me send
many-many client's requests to several processes in pool(from the box
ampoule allows to process one query per process).

I'm really keen on this question, thank you, GELIN YAN.
-- 
Best regards,
Alexei Romanoff
software developer, Melesta


From exarkun at twistedmatrix.com  Fri Nov 18 15:17:46 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 18 Nov 2011 20:17:46 -0000
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <20111118084645.GA3413@weiermayer.com>
References: <4EC54C29.80300@free.fr>
	<2D70BD79-722C-4F08-8DBD-135FE37814FB@twistedmatrix.com>
	<20111118084645.GA3413@weiermayer.com>
Message-ID: <20111118201746.20412.1430484843.divmod.xquotient.165@localhost.localdomain>

On 08:46 am, albert.brandl at weiermayer.com wrote:
>On Thu, Nov 17, 2011 at 02:11:36PM -0500, Glyph wrote:
>>
>>A gentle reminder: those supporters should renew their sponsorships; 
>>we
>>were remarkably lax in 2011, but at the beginning of 2012, all those
>>logos will be coming down off the front page unless they are renewed
>>:-).
>
>I just had a look at the page explaining the TSF. In the section 
>"Benefits
>of Sponsorship", the first note about logos reads:
>
>"Placement on the front page of http://twistedmatrix.com will be for
>donations that equal or are more than the Bronze level."
>
>The "equal or" seems to be wrong.

Grammatically, or in some other way?

Jean-Paul


From JOHN at egh.com  Sat Nov 19 10:38:52 2011
From: JOHN at egh.com (John Santos)
Date: Sat, 19 Nov 2011 11:38:52 -0400
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <20111118201746.20412.1430484843.divmod.xquotient.165@localhost.localdomain>
Message-ID: <1111119113055.39570J-100000@Ives.egh.com>

On Fri, 18 Nov 2011 exarkun at twistedmatrix.com wrote:

> On 08:46 am, albert.brandl at weiermayer.com wrote:
> >On Thu, Nov 17, 2011 at 02:11:36PM -0500, Glyph wrote:
> >>
> >>A gentle reminder: those supporters should renew their sponsorships; 
> >>we
> >>were remarkably lax in 2011, but at the beginning of 2012, all those
> >>logos will be coming down off the front page unless they are renewed
> >>:-).
> >
> >I just had a look at the page explaining the TSF. In the section 
> >"Benefits
> >of Sponsorship", the first note about logos reads:
> >
> >"Placement on the front page of http://twistedmatrix.com will be for
> >donations that equal or are more than the Bronze level."
> >
> >The "equal or" seems to be wrong.
> 
> Grammatically, or in some other way?

I don't have any problem with the wording, but maybe "... that equal or 
exceed the Bronze level" would be clearer, in case some people have
trouble parsing it.

In BNF, the original wording means "... will be for donations that
[equal | are more than] the Bronze level." and is unambigous to me.


> 
> Jean-Paul
> 

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539



From facundobatista at gmail.com  Sat Nov 19 14:53:47 2011
From: facundobatista at gmail.com (Facundo Batista)
Date: Sat, 19 Nov 2011 16:53:47 -0300
Subject: [Twisted-Python] Twisted for Python 3
In-Reply-To: <20111019135033.6b40e5ba@pitrou.net>
References: <20111019135033.6b40e5ba@pitrou.net>
Message-ID: <CAM09pzQGjFMv+63DAOWKyPV3gwcz_VcFn+SuVvWdPRhgfXt-AQ@mail.gmail.com>

On Wed, Oct 19, 2011 at 8:50 AM, Antoine Pitrou <solipsis at pitrou.net> wrote:

> I'm announcing an experimental, work-in-progress port of Twisted to
> Python 3. The homepage, where you can find more detailed information,
> is at https://bitbucket.org/pitrou/t3k

Here's something similar from my side:

  lp:~facundo/+junk/twisted-py3k/

All testing infrastructure works, running of course the 2to3 inside the project.

A lot of tests fail, of course... I found that there're a lot of code
that you *need* to know the protocols and such to be able to convert
them...

Thanks for your work!

-- 
.? ? Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/


From exarkun at twistedmatrix.com  Sun Nov 20 00:05:29 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 20 Nov 2011 05:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1321765529.59.149088445@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111120/6aae8ffe/attachment.htm 

From dynamicgl at gmail.com  Mon Nov 21 01:25:54 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 21 Nov 2011 14:25:54 +0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
Message-ID: <CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>

Hi Romanoff

    Have you suffered from transfer large size of data to child process? I
encountered a problem: it seems i am unable to send any chunks of data
larger than 4000 bytes. I guess there is a limit.




On Sat, Nov 19, 2011 at 3:58 AM, Romanoff Alexei <drednout.by at gmail.com>wrote:

> 2011/11/18 gelin yan <dynamicgl at gmail.com>:
> > Hi all.
> >    just a few hours ago, I discovered ampoule is probably a right choice
> to
> > run my analyze codes. I want to know whether your guys have used it for
> > production purposes or not It seems the development has been frozen for a
> > while and I noticed many bugs reported on the board. Some bugs looks like
> > quite serious for example: a bug mentioned occasionally, startWorker may
> > generate double process until the system hanging.
> >     If those bugs still exist, i am gonna try to fix some of them if it
> is
> > impossible.
> > Regards
> > GELIN YAN
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
> Good question!
> I've recently adopted our game server for processing client requests
> in several processes using ampoule as tool for managing process pool.
> New approach has significantly more performance(5-100% more queries
> per second in depends on type of query and the number of concurrent
> clients) and high scalability. Modern servers have a lot of processor
> cores, but GIL  in python kills all opportunities to use
> multi-threading for heavy computation.
> But my solution is still not in production. I wanted to ask the same
> question, but other tasks distracted me from ampoule and
> multi-processing.
> I should also mention that my tests were rather artificial,  I don't
> know how  ampoule would work when many real players came to our server
> and started playing.
>
> I have also several patches for ampoule, which allows me send
> many-many client's requests to several processes in pool(from the box
> ampoule allows to process one query per process).
>
> I'm really keen on this question, thank you, GELIN YAN.
> --
> Best regards,
> Alexei Romanoff
> software developer, Melesta
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111121/02fc6a7a/attachment.htm 

From glyph at twistedmatrix.com  Mon Nov 21 01:57:06 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 21 Nov 2011 01:57:06 -0500
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
Message-ID: <70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>


On Nov 21, 2011, at 1:25 AM, gelin yan wrote:

>     Have you suffered from transfer large size of data to child process? I encountered a problem: it seems i am unable to send any chunks of data larger than 4000 bytes. I guess there is a limit.

What do you mean by this?  Do you have a test case that demonstrates this limit?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111121/8fe97fcd/attachment.htm 

From dynamicgl at gmail.com  Mon Nov 21 02:40:38 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 21 Nov 2011 15:40:38 +0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
Message-ID: <CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>

Hi glyph

     I attached a file for this purpose. there is a number 4073 inside the
code. when i use any smaller value, the function return a correct result. I
use win 7 & twisted 11.1 at the moment. I am not sure whether this limit
comes from os or not.

thanks

gelin yan

On Mon, Nov 21, 2011 at 2:57 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Nov 21, 2011, at 1:25 AM, gelin yan wrote:
>
>     Have you suffered from transfer large size of data to child process? I
> encountered a problem: it seems i am unable to send any chunks of data
> larger than 4000 bytes. I guess there is a limit.
>
>
> What do you mean by this?  Do you have a test case that demonstrates this
> limit?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111121/cd2ae764/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: multest.py
Type: application/octet-stream
Size: 1090 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20111121/cd2ae764/attachment.obj 

From mostawesomedude at gmail.com  Mon Nov 21 03:39:13 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Mon, 21 Nov 2011 00:39:13 -0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
	<CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
Message-ID: <CALiqSLf+W=UWwvtmgxcXVegwDWz59ZQEbho7F5hwCO3XCuNhug@mail.gmail.com>

On Sun, Nov 20, 2011 at 11:40 PM, gelin yan <dynamicgl at gmail.com> wrote:
> Hi glyph
> ? ? ?I attached a file for this purpose. there is a number 4073 inside the
> code. when i use any smaller value, the function return a correct result. I
> use win 7 & twisted 11.1 at the moment. I am not sure whether this limit
> comes from os or not.

A few intrepid hackers working on Win32 platforms reported similar
issues with Bravo, which uses Ampoule extensively. We chalked it up to
Win32 weirdness and told people to use better operating systems when
deploying Bravo. The only hack which seemed to alleviate the problem
was changing Twisted's subprocess management to allocate massive
(64KiB) buffers for the subprocess pipes instead of zeroing them out.
I have no idea what the correct answer is.

~ C.

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>


From flaviogrossi at ymail.com  Mon Nov 21 04:03:47 2011
From: flaviogrossi at ymail.com (Flavio Grossi)
Date: Mon, 21 Nov 2011 09:03:47 +0000 (UTC)
Subject: [Twisted-Python] Does anyone use ampoule in production?
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
	<CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
Message-ID: <loom.20111121T095718-973@post.gmane.org>

gelin yan <dynamicgl <at> gmail.com> writes:

> 
> 
> Hi glyph
> 
> ? ? ?I attached a file for this purpose. there is a number 4073 inside the 
code. when i use any smaller value, the function return a correct result. I use 
win 7 & twisted 11.1 at the moment. I am not sure whether this limit comes from 
os or not.
> 


hi,
there is a limit, but it's 64kb [1][2], not 4k, in fact i can successfully run 
your program in linux until i use something bigger than 64k.

maybe there's an os-specific bug somewhere.

bye,
flavio


[1] http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html 
(the notes section)

[2] http://twistedmatrix.com/pipermail/twisted-python/2009-February/019218.html 
(mail by ampoule author)







From rlotun at gmail.com  Mon Nov 21 05:51:48 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 21 Nov 2011 10:51:48 +0000
Subject: [Twisted-Python] Twisted on PyPy
Message-ID: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>

Hi All,

I was just wondering if anyone is running (or has tested) their production
stack of Twisted on PyPy. Since 1.7 has just been released, I'd like to
play around with running our unit tests and running a production test at
some point.

One concern I have is support for pyOpenSSL on PyPy. According to
http://as.ynchrono.us/2011/04/pyopenssl-on-pypy.html as of April that
effort was progressing, just wondering if there are any updates on that
front?

I also stumbled on https://github.com/svpcom/pyopenssl-pypy which claims to
be a branch of pyOpenSSL that works with PyPy. Has anyone used it?

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111121/02910809/attachment.htm 

From _ at lvh.cc  Mon Nov 21 05:57:13 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 21 Nov 2011 11:57:13 +0100
Subject: [Twisted-Python] Twisted on PyPy
In-Reply-To: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>
References: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>
Message-ID: <CAE_Hg6YOtN+U0MjS06rHxyD+i5TR6BSHTfvsrFXsJ2Fbr8j6iA@mail.gmail.com>

I tried once, and then I submitted a ticket, because a Cython extension was
preventing a complete install.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111121/5b3c5da6/attachment-0001.htm 

From ziga.seilnacht at gmail.com  Mon Nov 21 06:02:49 2011
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Mon, 21 Nov 2011 12:02:49 +0100
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
	<CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
Message-ID: <4ECA2FD9.1050801@gmail.com>

On 21.11.2011 8:40, gelin yan wrote:
> Hi glyph
>
>       I attached a file for this purpose. there is a number 4073 inside the
> code. when i use any smaller value, the function return a correct result. I
> use win 7&  twisted 11.1 at the moment. I am not sure whether this limit
> comes from os or not.
>
> thanks
>
> gelin yan
>

That sounds like issue 5365:
http://twistedmatrix.com/trac/ticket/5365

Does the patch there fix the issue for you?

Best regards,
Ziga


From dynamicgl at gmail.com  Mon Nov 21 06:41:56 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 21 Nov 2011 19:41:56 +0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <4ECA2FD9.1050801@gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
	<CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
	<4ECA2FD9.1050801@gmail.com>
Message-ID: <CABkOF6RJcMTGDtH3G0bXbwY-ssoXM5-uSQwwEGjrmwuLmPLZWw@mail.gmail.com>

Thanks for that... the patch you mentioned definitely solve this
problem...it looks like the default buffer size is 4096 bytes on windows.

minor change of the patch for twisted 11.1

_pollingfile._PIPE_BUFFER_SIZE has been changed to
_pollingfile.FULL_BUFFER_SIZE

*
*
thanks again for your guys help.

Regards

gelin yan

On Mon, Nov 21, 2011 at 7:02 PM, ?iga Seilnacht <ziga.seilnacht at gmail.com>wrote:

> On 21.11.2011 8:40, gelin yan wrote:
> > Hi glyph
> >
> >       I attached a file for this purpose. there is a number 4073 inside
> the
> > code. when i use any smaller value, the function return a correct
> result. I
> > use win 7&  twisted 11.1 at the moment. I am not sure whether this limit
> > comes from os or not.
> >
> > thanks
> >
> > gelin yan
> >
>
> That sounds like issue 5365:
> http://twistedmatrix.com/trac/ticket/5365
>
> Does the patch there fix the issue for you?
>
> Best regards,
> Ziga
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111121/7540cfd4/attachment.htm 

From dynamicgl at gmail.com  Mon Nov 21 06:53:13 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 21 Nov 2011 19:53:13 +0800
Subject: [Twisted-Python] Twisted on PyPy
In-Reply-To: <CAE_Hg6YOtN+U0MjS06rHxyD+i5TR6BSHTfvsrFXsJ2Fbr8j6iA@mail.gmail.com>
References: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>
	<CAE_Hg6YOtN+U0MjS06rHxyD+i5TR6BSHTfvsrFXsJ2Fbr8j6iA@mail.gmail.com>
Message-ID: <CABkOF6TjbffB8TJbLuwi4KkcoWXvRXCBgk1jUNjuKNE8kUo0Ag@mail.gmail.com>

If pypy doesn't work well with cython, it implies we can't use iocp for
that.

On Mon, Nov 21, 2011 at 6:57 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> I tried once, and then I submitted a ticket, because a Cython extension
> was preventing a complete install.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111121/843cb15d/attachment.htm 

From dynamicgl at gmail.com  Mon Nov 21 07:55:51 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 21 Nov 2011 20:55:51 +0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CALiqSLf+W=UWwvtmgxcXVegwDWz59ZQEbho7F5hwCO3XCuNhug@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
	<CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
	<CALiqSLf+W=UWwvtmgxcXVegwDWz59ZQEbho7F5hwCO3XCuNhug@mail.gmail.com>
Message-ID: <CABkOF6Ru02ACj5KN-p=+XVGi=3OPQtK1FhWWdHumEM8wOOMEkA@mail.gmail.com>

Hi

   I am happy to see some other teams have used it in a production
environment. If there are no serious bugs, I am gonna use it to implement
my analyzer which need to take benefit from multiple cores. At the moment,
ampoule seems is the most intuitive way to reap the power of multiple cores.

thanks

gelin yan

On Mon, Nov 21, 2011 at 4:39 PM, Corbin Simpson
<mostawesomedude at gmail.com>wrote:

> On Sun, Nov 20, 2011 at 11:40 PM, gelin yan <dynamicgl at gmail.com> wrote:
> > Hi glyph
> >      I attached a file for this purpose. there is a number 4073 inside
> the
> > code. when i use any smaller value, the function return a correct
> result. I
> > use win 7 & twisted 11.1 at the moment. I am not sure whether this limit
> > comes from os or not.
>
> A few intrepid hackers working on Win32 platforms reported similar
> issues with Bravo, which uses Ampoule extensively. We chalked it up to
> Win32 weirdness and told people to use better operating systems when
> deploying Bravo. The only hack which seemed to alleviate the problem
> was changing Twisted's subprocess management to allocate massive
> (64KiB) buffers for the subprocess pipes instead of zeroing them out.
> I have no idea what the correct answer is.
>
> ~ C.
>
> --
> When the facts change, I change my mind. What do you do, sir? ~ Keynes
>
> Corbin Simpson
> <MostAwesomeDude at gmail.com>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111121/11eecf55/attachment.htm 

From exarkun at twistedmatrix.com  Mon Nov 21 08:03:14 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 21 Nov 2011 13:03:14 -0000
Subject: [Twisted-Python] Twisted on PyPy
In-Reply-To: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>
References: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>
Message-ID: <20111121130314.2308.1777028927.divmod.xquotient.24@localhost.localdomain>

On 10:51 am, rlotun at gmail.com wrote:
>Hi All,
>
>I was just wondering if anyone is running (or has tested) their 
>production
>stack of Twisted on PyPy. Since 1.7 has just been released, I'd like to
>play around with running our unit tests and running a production test 
>at
>some point.

PyPy testing is part of Twisted development:

    http://buildbot.twistedmatrix.com/builders/lucid32-pypy
>
>One concern I have is support for pyOpenSSL on PyPy. According to
>http://as.ynchrono.us/2011/04/pyopenssl-on-pypy.html as of April that
>effort was progressing, just wondering if there are any updates on that
>front?

Upstream pyOpenSSL builds on PyPy and passes a large portion of its test 
suite (certain things related to memoryview are not supported).
>
>I also stumbled on https://github.com/svpcom/pyopenssl-pypy which 
>claims to
>be a branch of pyOpenSSL that works with PyPy. Has anyone used it?

It looks like an exact copy of pyOpenSSL from June with no changes.

Jean-Paul


From albert.brandl at weiermayer.com  Wed Nov 23 03:52:51 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 23 Nov 2011 09:52:51 +0100
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <20111118201746.20412.1430484843.divmod.xquotient.165@localhost.localdomain>
References: <4EC54C29.80300@free.fr>
	<2D70BD79-722C-4F08-8DBD-135FE37814FB@twistedmatrix.com>
	<20111118084645.GA3413@weiermayer.com>
	<20111118201746.20412.1430484843.divmod.xquotient.165@localhost.localdomain>
Message-ID: <20111123085251.GB2806@weiermayer.com>

On Fri, Nov 18, 2011 at 08:17:46PM -0000, exarkun at twistedmatrix.com wrote:
> Grammatically, or in some other way?

On a second glance, the problem is not on the sponsorship page, but on 
the homepage. The explanation under the "Your Logo Here" section reads:

> You can use the form above for both personal donations and corporate 
> sponsorships; for any donation _above_the_Bronze_level_, we will 
> display your logo here on the front page.

There _are_ two "Bronze" level logos, which I didn't correctly identify 
as such (maybe due to the small font of the headings). Thus it's the
homepage which should be corrected.

Regards,
-- 
Albert Brandl | Weiermayer Solutions GmbH


?
A-4813 Altm?nster - Abteistra?e 12 - web: www.weiermayer.com - phone: +43761287677 - fax: +43761220356 - mobile: +436642442777

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111123/20985be5/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 43835 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20111123/20985be5/attachment-0001.jpeg 

From albert.brandl at weiermayer.com  Wed Nov 23 05:13:03 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 23 Nov 2011 11:13:03 +0100
Subject: [Twisted-Python] Sending a "good-bye message" before closing a
 connection
In-Reply-To: <1321623078.5747.3.camel@blake>
References: <20111118112352.GA17073@weiermayer.com>
	<1321623078.5747.3.camel@blake>
Message-ID: <20111123101303.GA7806@weiermayer.com>

Hi!

On Fri, Nov 18, 2011 at 08:31:18AM -0500, Itamar Turner-Trauring wrote:
> Presumably there is a method somewhere that decides to close the
> connection down:
> 
>    def timeToShutdown(self):
>        self.transport.loseConnection()

Actually, I hoped that I'd find such a method in the framework. When the
twistd daemon is shut down, it has to close all connections, and it would
have been nice if there were a hook that could be overridden.

But AFAICT, the respective code is buried inside the BaseConnector class,
and I'd rather leave it alone :-).

Anyway - it should be possible to send some kind of message to the daemon
in the init script before shutting it down.

Thanks & best regards,
-- 
Albert Brandl | Weiermayer Solutions GmbH


?
A-4813 Altm?nster - Abteistra?e 12 - web: www.weiermayer.com - phone: +43761287677 - fax: +43761220356 - mobile: +436642442777

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111123/a4fa37d2/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 43835 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20111123/a4fa37d2/attachment-0001.jpeg 

From exarkun at twistedmatrix.com  Wed Nov 23 07:34:59 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 23 Nov 2011 12:34:59 -0000
Subject: [Twisted-Python] Sending a "good-bye message" before closing
	a	connection
In-Reply-To: <20111123101303.GA7806@weiermayer.com>
References: <20111118112352.GA17073@weiermayer.com>
	<1321623078.5747.3.camel@blake>
	<20111123101303.GA7806@weiermayer.com>
Message-ID: <20111123123459.2308.1710459484.divmod.xquotient.241@localhost.localdomain>

On 10:13 am, albert.brandl at weiermayer.com wrote:
>Hi!
>
>On Fri, Nov 18, 2011 at 08:31:18AM -0500, Itamar Turner-Trauring wrote:
>>Presumably there is a method somewhere that decides to close the
>>connection down:
>>
>>    def timeToShutdown(self):
>>        self.transport.loseConnection()
>
>Actually, I hoped that I'd find such a method in the framework. When 
>the
>twistd daemon is shut down, it has to close all connections, and it 
>would
>have been nice if there were a hook that could be overridden.
>
>But AFAICT, the respective code is buried inside the BaseConnector 
>class,
>and I'd rather leave it alone :-).
>
>Anyway - it should be possible to send some kind of message to the 
>daemon
>in the init script before shutting it down.

The shutdown hook provided is IService.stopService.  You can add your 
custom shutdown logic there, and attach your service to the 
Application/Service hierarchy.

Jean-Paul


From tobias.oberstein at tavendo.de  Thu Nov 24 08:49:28 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 24 Nov 2011 05:49:28 -0800
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
Message-ID: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>

Should I file a bug? If so, any guidelines what to do?

        --- <exception caught here> ---
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/defer.py", line 545, in _runCallbacks
            current.result = callback(current.result, *args, **kw)
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 907, in gotListing
            self.dtpInstance.sendListResponse(name, attrs)
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 421, in sendListResponse
            self.sendLine(self._formatOneListResponse(name, *response))
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 385, in sendLine
            self.transport.write(line + '\r\n')
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/_newtls.py", line 180, in write
            FileDescriptor.write(self, bytes)
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/abstract.py", line 300, in write
            raise TypeError("Data must not be unicode")
        exceptions.TypeError: Data must not be unicode


[autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
Index: twisted/protocols/ftp.py
===================================================================
--- twisted/protocols/ftp.py    (revision 33225)
+++ twisted/protocols/ftp.py    (working copy)
@@ -382,7 +382,7 @@
             self._onConnLost.callback(None)

     def sendLine(self, line):
-        self.transport.write(line + '\r\n')
+        self.transport.write(str(line) + '\r\n')


     def _formatOneListResponse(self, name, size, directory, permissions, hardlinks, modified, owner, group):



From adi at roiban.ro  Thu Nov 24 09:00:46 2011
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 24 Nov 2011 16:00:46 +0200
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <1322143246.19562.8.camel@pp>

On Jo, 2011-11-24 at 05:49 -0800, Tobias Oberstein wrote:
> Should I file a bug? If so, any guidelines what to do?
> 
>         --- <exception caught here> ---
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/defer.py", line 545, in _runCallbacks
>             current.result = callback(current.result, *args, **kw)
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 907, in gotListing
>             self.dtpInstance.sendListResponse(name, attrs)
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 421, in sendListResponse
>             self.sendLine(self._formatOneListResponse(name, *response))
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 385, in sendLine
>             self.transport.write(line + '\r\n')
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/_newtls.py", line 180, in write
>             FileDescriptor.write(self, bytes)
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/abstract.py", line 300, in write
>             raise TypeError("Data must not be unicode")
>         exceptions.TypeError: Data must not be unicode
> 
> 
> [autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
> Index: twisted/protocols/ftp.py
> ===================================================================
> --- twisted/protocols/ftp.py    (revision 33225)
> +++ twisted/protocols/ftp.py    (working copy)
> @@ -382,7 +382,7 @@
>              self._onConnLost.callback(None)
> 
>      def sendLine(self, line):
> -        self.transport.write(line + '\r\n')
> +        self.transport.write(str(line) + '\r\n')
> 
> 
>      def _formatOneListResponse(self, name, size, directory, permissions, hardlinks, modified, owner, group):
> 

Rather than implementing an hard-coded conversion at lower level of FTP
protocol implementation, you could write explicit unicode encoders to
bytestream before making a call to FTP API.

By doing so you can have an FTP protocol, that beside UTF could also
handle other encodings.

Cheers,

-- 
Adi Roiban



From tobias.oberstein at tavendo.de  Thu Nov 24 09:07:12 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 24 Nov 2011 06:07:12 -0800
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <1322143246.19562.8.camel@pp>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<1322143246.19562.8.camel@pp>
Message-ID: <634914A010D0B943A035D226786325D42D0D4208F6@EXVMBX020-12.exch020.serverdata.net>

> Rather than implementing an hard-coded conversion at lower level of FTP
> protocol implementation, you could write explicit unicode encoders to
> bytestream before making a call to FTP API.
> 
> By doing so you can have an FTP protocol, that beside UTF could also handle
> other encodings.

I'm not making calls to FTP protocol ... this is a FTP server and the errors pops
when the client does a DIR.




From exarkun at twistedmatrix.com  Thu Nov 24 09:07:07 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 24 Nov 2011 14:07:07 -0000
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>

On 01:49 pm, tobias.oberstein at tavendo.de wrote:
>Should I file a bug? If so, any guidelines what to do?

This report isn't sufficiently complete to decide if this is a bug in 
Twisted or in something else.

You really cannot send unicode over a socket without encoding it.  The 
question to consider here is the question of whose responsibility it 
should be to do that encoding in this case.
>[snip]
>
>[autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
>Index: twisted/protocols/ftp.py
>===================================================================
>--- twisted/protocols/ftp.py    (revision 33225)
>+++ twisted/protocols/ftp.py    (working copy)
>@@ -382,7 +382,7 @@
>             self._onConnLost.callback(None)
>
>     def sendLine(self, line):
>-        self.transport.write(line + '\r\n')
>+        self.transport.write(str(line) + '\r\n')

This isn't the correct fix, even if the bug is in Twisted's FTP support.
`str(line)` is the least reliable way to encode a unicode string into a 
byte string.  It has unpredictable behavior (it relies on the action- 
at-a-distance API, `sys.setdefaultencoding`, which doesn't even exist 
most of the time, but which can be used to completely change what 
`str(unicode)` does).

A more correct solution would be `line.encode(someencoding)`.  However, 
looking at `sendLine`, it's clear that the value of `someencoding` is 
not easily decided upon.  Should it be UTF-8?  ASCII with an error 
replacement policy?  cp1252?  Does it depend on the client, or the 
server, or the filesystem encoding, or a user preference?

An even more correct solution would be for `line` to have been encoded 
properly already before it was passed to `sendLine`.  Where did the data 
come from, and why wasn't it encoded already?

Jean-Paul


From tobias.oberstein at tavendo.de  Thu Nov 24 09:26:12 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 24 Nov 2011 06:26:12 -0800
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
Message-ID: <634914A010D0B943A035D226786325D42D0D4208F9@EXVMBX020-12.exch020.serverdata.net>

> An even more correct solution would be for `line` to have been encoded
> properly already before it was passed to `sendLine`.  Where did the data
> come from, and why wasn't it encoded already?

The data is coming from the FTP directory listing formatting function

ftp.DTP. _formatOneListResponse

Here is a more localized fix:

[autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
Index: twisted/protocols/ftp.py
===================================================================
--- twisted/protocols/ftp.py    (revision 33225)
+++ twisted/protocols/ftp.py    (working copy)
@@ -415,7 +415,7 @@
             'group': group[:8],
             'size': size,
             'date': formatDate(time.gmtime(modified)),
-            'name': name}
+            'name': name.encode("utf-8")}

     def sendListResponse(self, name, response):
         self.sendLine(self._formatOneListResponse(name, *response))



From solipsis at pitrou.net  Thu Nov 24 09:23:55 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 24 Nov 2011 15:23:55 +0100
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
Message-ID: <20111124152355.29ac4d25@pitrou.net>

On Thu, 24 Nov 2011 14:07:07 -0000
exarkun at twistedmatrix.com wrote:
> 
> A more correct solution would be `line.encode(someencoding)`.  However, 
> looking at `sendLine`, it's clear that the value of `someencoding` is 
> not easily decided upon.  Should it be UTF-8?  ASCII with an error 
> replacement policy?  cp1252?  Does it depend on the client, or the 
> server, or the filesystem encoding, or a user preference?

RFC 3659 specifies UTF-8 as the default encoding.
The Python 3 port of Twisted uses this (with the "surrogateescape"
error handler).

Regards

Antoine.




From exarkun at twistedmatrix.com  Thu Nov 24 09:58:14 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 24 Nov 2011 14:58:14 -0000
Subject: [Twisted-Python] Status of Twisted on Python 3
In-Reply-To: <20111124152355.29ac4d25@pitrou.net>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<20111124152355.29ac4d25@pitrou.net>
Message-ID: <20111124145814.2308.1765660276.divmod.xquotient.282@localhost.localdomain>

On 02:23 pm, solipsis at pitrou.net wrote:
>On Thu, 24 Nov 2011 14:07:07 -0000
>exarkun at twistedmatrix.com wrote:
>>
>>A more correct solution would be `line.encode(someencoding)`. 
>>However,
>>looking at `sendLine`, it's clear that the value of `someencoding` is
>>not easily decided upon.  Should it be UTF-8?  ASCII with an error
>>replacement policy?  cp1252?  Does it depend on the client, or the
>>server, or the filesystem encoding, or a user preference?
>
>RFC 3659 specifies UTF-8 as the default encoding.
>The Python 3 port of Twisted uses this (with the "surrogateescape"
>error handler).

Please say "My Python 3 port of Twisted".  The work you're doing is 
appreciated,
but it's also important to avoid confusing people into thinking that 
there is an
official version of Twisted for Python 3.  Twisted is what's hosted on
<http://twistedmatrix.com/> (11.1 just released!) and is still limited 
to Python
2.4 - 2.7.

It's very easy to confuse people and get them thinking that a piece of 
software
is supported in a context where it's not, or by a team that it's not.  I 
want
everyone to remain clear on the current status of Python 3 support in 
*Twisted*
(the thing we have a mailing list for, the thing we have an issue 
tracker for,
the thing we have continuous integration for, the thing we periodically 
make
releases of) as distinct from the progress of various porting efforts.

Thanks,
Jean-Paul


From exarkun at twistedmatrix.com  Thu Nov 24 10:00:35 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 24 Nov 2011 15:00:35 -0000
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <634914A010D0B943A035D226786325D42D0D4208F9@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0D4208F9@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20111124150035.2308.1747199997.divmod.xquotient.284@localhost.localdomain>

On 02:26 pm, tobias.oberstein at tavendo.de wrote:
>>An even more correct solution would be for `line` to have been encoded
>>properly already before it was passed to `sendLine`.  Where did the 
>>data
>>come from, and why wasn't it encoded already?
>
>The data is coming from the FTP directory listing formatting function
>
>ftp.DTP. _formatOneListResponse
>
>Here is a more localized fix:
>
>[autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
>Index: twisted/protocols/ftp.py
>===================================================================
>--- twisted/protocols/ftp.py    (revision 33225)
>+++ twisted/protocols/ftp.py    (working copy)
>@@ -415,7 +415,7 @@
>             'group': group[:8],
>             'size': size,
>             'date': formatDate(time.gmtime(modified)),
>-            'name': name}
>+            'name': name.encode("utf-8")}
>
>     def sendListResponse(self, name, response):
>         self.sendLine(self._formatOneListResponse(name, *response))

Cool, that seems much more reasonable.  It would be great if you could 
file a ticket for this.  Thanks!

Jean-Paul


From adi at roiban.ro  Thu Nov 24 10:26:42 2011
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 24 Nov 2011 17:26:42 +0200
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <20111124150035.2308.1747199997.divmod.xquotient.284@localhost.localdomain>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0D4208F9@EXVMBX020-12.exch020.serverdata.net>
	<20111124150035.2308.1747199997.divmod.xquotient.284@localhost.localdomain>
Message-ID: <1322148402.19562.11.camel@pp>

On Jo, 2011-11-24 at 15:00 +0000, exarkun at twistedmatrix.com wrote:
> On 02:26 pm, tobias.oberstein at tavendo.de wrote:
> >>An even more correct solution would be for `line` to have been encoded
> >>properly already before it was passed to `sendLine`.  Where did the 
> >>data
> >>come from, and why wasn't it encoded already?
> >
> >The data is coming from the FTP directory listing formatting function
> >
> >ftp.DTP. _formatOneListResponse
> >
> >Here is a more localized fix:
> >
> >[autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
> >Index: twisted/protocols/ftp.py
> >===================================================================
> >--- twisted/protocols/ftp.py    (revision 33225)
> >+++ twisted/protocols/ftp.py    (working copy)
> >@@ -415,7 +415,7 @@
> >             'group': group[:8],
> >             'size': size,
> >             'date': formatDate(time.gmtime(modified)),
> >-            'name': name}
> >+            'name': name.encode("utf-8")}
> >
> >     def sendListResponse(self, name, response):
> >         self.sendLine(self._formatOneListResponse(name, *response))
> 
> Cool, that seems much more reasonable.  It would be great if you could 
> file a ticket for this.  Thanks!

The source of this evil is FTPAnonymousShell.list as this is the entry
point for the file name.
FTPAnonymousShell.list

-- 
Adi Roiban



From solipsis at pitrou.net  Thu Nov 24 12:37:11 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 24 Nov 2011 18:37:11 +0100
Subject: [Twisted-Python] Status of Twisted on Python 3
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<20111124152355.29ac4d25@pitrou.net>
	<20111124145814.2308.1765660276.divmod.xquotient.282@localhost.localdomain>
Message-ID: <20111124183711.38b4876b@pitrou.net>

On Thu, 24 Nov 2011 14:58:14 -0000
exarkun at twistedmatrix.com wrote:
> On 02:23 pm, solipsis at pitrou.net wrote:
> >On Thu, 24 Nov 2011 14:07:07 -0000
> >exarkun at twistedmatrix.com wrote:
> >>
> >>A more correct solution would be `line.encode(someencoding)`. 
> >>However,
> >>looking at `sendLine`, it's clear that the value of `someencoding` is
> >>not easily decided upon.  Should it be UTF-8?  ASCII with an error
> >>replacement policy?  cp1252?  Does it depend on the client, or the
> >>server, or the filesystem encoding, or a user preference?
> >
> >RFC 3659 specifies UTF-8 as the default encoding.
> >The Python 3 port of Twisted uses this (with the "surrogateescape"
> >error handler).
> 
> Please say "My Python 3 port of Twisted".  The work you're doing is 
> appreciated,
> but it's also important to avoid confusing people into thinking that 
> there is an
> official version of Twisted for Python 3.  Twisted is what's hosted on
> <http://twistedmatrix.com/> (11.1 just released!) and is still limited 
> to Python
> 2.4 - 2.7.

You're right. I've just added and bolded "unofficial" on
https://bitbucket.org/pitrou/t3k/wiki/Home

Regards

Antoine.




From tobias.oberstein at tavendo.de  Fri Nov 25 03:19:28 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 25 Nov 2011 00:19:28 -0800
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <1322148402.19562.11.camel@pp>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0D4208F9@EXVMBX020-12.exch020.serverdata.net>
	<20111124150035.2308.1747199997.divmod.xquotient.284@localhost.localdomain>
	<1322148402.19562.11.camel@pp>
Message-ID: <634914A010D0B943A035D226786325D42D0D420906@EXVMBX020-12.exch020.serverdata.net>

> > Cool, that seems much more reasonable.  It would be great if you could
> > file a ticket for this.  Thanks!

http://twistedmatrix.com/trac/ticket/5411

> The source of this evil is FTPAnonymousShell.list as this is the entry point for
> the file name.
> FTPAnonymousShell.list

Yep, I see.

The patch above does the fix at the mediating function

ftp.DTP. _formatOneListResponse

which is not the entry point above, but has the charme that it's really
minimally invasive.


From glyph at twistedmatrix.com  Fri Nov 25 16:48:27 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 25 Nov 2011 16:48:27 -0500
Subject: [Twisted-Python] Status of Twisted on Python 3
In-Reply-To: <20111124183711.38b4876b@pitrou.net>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<20111124152355.29ac4d25@pitrou.net>
	<20111124145814.2308.1765660276.divmod.xquotient.282@localhost.localdomain>
	<20111124183711.38b4876b@pitrou.net>
Message-ID: <29638FC0-DC74-4FEA-8372-B351591EE2C4@twistedmatrix.com>

On Nov 24, 2011, at 12:37 PM, Antoine Pitrou <solipsis at pitrou.net> wrote:

> You're right. I've just added and bolded "unofficial" on
> https://bitbucket.org/pitrou/t3k/wiki/Home

Thanks for doing this!  And thanks even more for your continued efforts on making most of this official, eventually :)

From exarkun at twistedmatrix.com  Sun Nov 27 00:05:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 Nov 2011 05:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1322370329.0.1862058575@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111127/1c2537cb/attachment.htm 

From don at delphexonline.com  Sun Nov 27 06:58:21 2011
From: don at delphexonline.com (Don Schoeman)
Date: Sun, 27 Nov 2011 13:58:21 +0200
Subject: [Twisted-Python] XML-RPC Server in multiservice application
Message-ID: <4ED225DD.2050905@delphexonline.com>

I've got a multiservice application running and I'm using the
MultiService class from twisted.application.service to do this. All my
existing services are setup as children of my multiservice instance.

In addition I'd like to run an XML/RPC server as as well. Is it ok if I
instantiate the XML/RPC listening server as per the examples?

r = MyXMLRPCServer()
reactor.listenTCP(7080, server.Site(r))

I've tried this and it does seem to peacefully co-exist alongside the
other services, but is this the correct way of implementing the XML/RPC
server on a multiservice application?

Kind Regards,
Don Schoeman



From itamar at itamarst.org  Sun Nov 27 08:35:16 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 27 Nov 2011 08:35:16 -0500
Subject: [Twisted-Python] XML-RPC Server in multiservice application
In-Reply-To: <4ED225DD.2050905@delphexonline.com>
References: <4ED225DD.2050905@delphexonline.com>
Message-ID: <4ED23C94.9020900@itamarst.org>

On 11/27/2011 06:58 AM, Don Schoeman wrote:
> I've got a multiservice application running and I'm using the
> MultiService class from twisted.application.service to do this. All my
> existing services are setup as children of my multiservice instance.
>
> In addition I'd like to run an XML/RPC server as as well. Is it ok if I
> instantiate the XML/RPC listening server as per the examples?
>
> r = MyXMLRPCServer()
> reactor.listenTCP(7080, server.Site(r))
>
> I've tried this and it does seem to peacefully co-exist alongside the
> other services, but is this the correct way of implementing the XML/RPC
> server on a multiservice application?

A more consistent way, though, would be to have a subclass of Service 
hooked up to your multiservice. This service's startService method would 
do the above, and stopService would do port.stopListening() on the port 
returned from listenTCP.


From exarkun at twistedmatrix.com  Sun Nov 27 08:50:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 Nov 2011 13:50:22 -0000
Subject: [Twisted-Python] XML-RPC Server in multiservice application
In-Reply-To: <4ED23C94.9020900@itamarst.org>
References: <4ED225DD.2050905@delphexonline.com>
	<4ED23C94.9020900@itamarst.org>
Message-ID: <20111127135022.2308.1092065824.divmod.xquotient.323@localhost.localdomain>

On 01:35 pm, itamar at itamarst.org wrote:
>On 11/27/2011 06:58 AM, Don Schoeman wrote:
>>I've got a multiservice application running and I'm using the
>>MultiService class from twisted.application.service to do this. All my
>>existing services are setup as children of my multiservice instance.
>>
>>In addition I'd like to run an XML/RPC server as as well. Is it ok if 
>>I
>>instantiate the XML/RPC listening server as per the examples?
>>
>>r = MyXMLRPCServer()
>>reactor.listenTCP(7080, server.Site(r))
>>
>>I've tried this and it does seem to peacefully co-exist alongside the
>>other services, but is this the correct way of implementing the 
>>XML/RPC
>>server on a multiservice application?
>
>A more consistent way, though, would be to have a subclass of Service
>hooked up to your multiservice. This service's startService method 
>would
>do the above, and stopService would do port.stopListening() on the port
>returned from listenTCP.

eg

    from twisted.application.internet import TCPServer

    xmlrpcsvc = TCPServer(7080, server.Site(MyXMLRPCServer())
    xmlrpcsvc.setServiceParent(yourMultiService)

Jean-Paul


From don at delphexonline.com  Sun Nov 27 10:53:00 2011
From: don at delphexonline.com (Don Schoeman)
Date: Sun, 27 Nov 2011 17:53:00 +0200
Subject: [Twisted-Python] XML-RPC Server in multiservice application
In-Reply-To: <20111127135022.2308.1092065824.divmod.xquotient.323@localhost.localdomain>
References: <4ED225DD.2050905@delphexonline.com>	<4ED23C94.9020900@itamarst.org>
	<20111127135022.2308.1092065824.divmod.xquotient.323@localhost.localdomain>
Message-ID: <4ED25CDC.7050605@delphexonline.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111127/066a3049/attachment.htm 

From ddwiggins at advpubtech.com  Tue Nov 29 13:44:21 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Tue, 29 Nov 2011 10:44:21 -0800
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>	<ja16c1$u1t$1@dough.gmane.org>	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
Message-ID: <4ED52805.7050300@advpubtech.com>

On 11/17/2011 3:26 PM, exarkun at twistedmatrix.com wrote:
> `msg` doesn't really care about what you give it. It doesn't support
> the `format` keyword in any particular way.  It's the job of a log
> observer to handle that sort of thing.  So it could certainly be
> documented, but don't mix things together that are unrelated.
>
> Jean-Paul

True, but I was motivated by a different concern: when I first started 
using msg, I was unable to trace through the API docs to the place where 
I could find what I've quoted; Chris' message gave me the hint I needed 
to complete my detective work.  I'd like to spare future users of the 
method the trouble I had.

Looking at the source of log.py, I'm at a bit of a loss to reconcile 
these two forces.  Certainly, the two log observers implemented there 
use textFromEventDict, but one could create a different observer that 
does things entirely differently.

The best idea I can come up with is, in the documentation for msg, refer 
to the documentation for the chosen log observer; then, in each log 
observer's documentation, describe how the formatting is done, either 
explicitly, or by reference to textFromEventDict.  (And maybe in the 
documentation for ILogObserver, recommend strongly that each 
implementation be explicit about message formatting.)  There should 
probably also be something in the logging howto.

Any better suggestions?

-- 

Don Dwiggins
Advanced Publishing Technology




From screwtape at froup.com  Tue Nov 29 23:07:22 2011
From: screwtape at froup.com (Tim Allen)
Date: Wed, 30 Nov 2011 15:07:22 +1100
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <4ED52805.7050300@advpubtech.com>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
	<4ED52805.7050300@advpubtech.com>
Message-ID: <20111130040722.GA3713@boombah.thristian.org>

On Tue, Nov 29, 2011 at 10:44:21AM -0800, Don Dwiggins wrote:
> Looking at the source of log.py, I'm at a bit of a loss to reconcile 
> these two forces.  Certainly, the two log observers implemented there 
> use textFromEventDict, but one could create a different observer that 
> does things entirely differently.
> 
> The best idea I can come up with is, in the documentation for msg, refer 
> to the documentation for the chosen log observer; then, in each log 
> observer's documentation, describe how the formatting is done, either 
> explicitly, or by reference to textFromEventDict.  (And maybe in the 
> documentation for ILogObserver, recommend strongly that each 
> implementation be explicit about message formatting.)  There should 
> probably also be something in the logging howto.
> 
> Any better suggestions?

While not every log observer needs to flatten a log event dict into
a string, that particular approach is probably common enough that it
deserves a simple solution. I think, in my ideal world, there would be
a LogMessage class that inherits from dict, with a __str__ method that
looks something like:

    def __str__(self):
	if "msg" in self:
	    return self["msg"]
	elif "format" in self:
	    return self["format"] % self
	else return dict.__str__(self)

If the standard Twisted logging functions automatically constructed
LogMessage instances from dict instances, it should be easy enough for
future ILogObserver implementations to do the right thing (by just
calling str(msg)). Of course, they could also do more sophisticated
things like pulling particular keys out of the message to set
observer-specific message properties (like syslog channel and severity,
etc.)

The documentation for the standard Twisted logging functions could then
just point to the LogMessage documentation to describe what goes into
a log event and how it gets interpreted, with a footnote to the effect
that different log observers can handle the same message in different
ways.


From exarkun at twistedmatrix.com  Wed Nov 30 08:04:27 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 30 Nov 2011 13:04:27 -0000
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <20111130040722.GA3713@boombah.thristian.org>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
	<4ED52805.7050300@advpubtech.com>
	<20111130040722.GA3713@boombah.thristian.org>
Message-ID: <20111130130427.2308.845285623.divmod.xquotient.547@localhost.localdomain>

On 04:07 am, screwtape at froup.com wrote:
>On Tue, Nov 29, 2011 at 10:44:21AM -0800, Don Dwiggins wrote:
>>Looking at the source of log.py, I'm at a bit of a loss to reconcile
>>these two forces.  Certainly, the two log observers implemented there
>>use textFromEventDict, but one could create a different observer that
>>does things entirely differently.
>>
>>The best idea I can come up with is, in the documentation for msg, 
>>refer
>>to the documentation for the chosen log observer; then, in each log
>>observer's documentation, describe how the formatting is done, either
>>explicitly, or by reference to textFromEventDict.  (And maybe in the
>>documentation for ILogObserver, recommend strongly that each
>>implementation be explicit about message formatting.)  There should
>>probably also be something in the logging howto.
>>
>>Any better suggestions?
>
>While not every log observer needs to flatten a log event dict into
>a string, that particular approach is probably common enough that it
>deserves a simple solution. I think, in my ideal world, there would be
>a LogMessage class that inherits from dict, with a __str__ method that
>looks something like:
>
>    def __str__(self):
>         if "msg" in self:
>             return self["msg"]
>         elif "format" in self:
>             return self["format"] % self
>         else return dict.__str__(self)
>
>If the standard Twisted logging functions automatically constructed
>LogMessage instances from dict instances, it should be easy enough for
>future ILogObserver implementations to do the right thing (by just
>calling str(msg)). Of course, they could also do more sophisticated
>things like pulling particular keys out of the message to set
>observer-specific message properties (like syslog channel and severity,
>etc.)

Oooorrrr there could be a function that takes a dict intended to 
represent a text message and returns that message as a string.

Jean-Paul
>The documentation for the standard Twisted logging functions could then
>just point to the LogMessage documentation to describe what goes into
>a log event and how it gets interpreted, with a footnote to the effect
>that different log observers can handle the same message in different
>ways.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Wed Nov 30 08:20:41 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 30 Nov 2011 13:20:41 -0000
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <4ED52805.7050300@advpubtech.com>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
	<4ED52805.7050300@advpubtech.com>
Message-ID: <20111130132041.2308.327340699.divmod.xquotient.560@localhost.localdomain>

On 29 Nov, 06:44 pm, ddwiggins at advpubtech.com wrote:
>On 11/17/2011 3:26 PM, exarkun at twistedmatrix.com wrote:
>>`msg` doesn't really care about what you give it. It doesn't support
>>the `format` keyword in any particular way.  It's the job of a log
>>observer to handle that sort of thing.  So it could certainly be
>>documented, but don't mix things together that are unrelated.
>>
>>Jean-Paul
>
>True, but I was motivated by a different concern: when I first started
>using msg, I was unable to trace through the API docs to the place 
>where
>I could find what I've quoted; Chris' message gave me the hint I needed
>to complete my detective work.  I'd like to spare future users of the
>method the trouble I had.
>
>Looking at the source of log.py, I'm at a bit of a loss to reconcile
>these two forces.  Certainly, the two log observers implemented there
>use textFromEventDict, but one could create a different observer that
>does things entirely differently.
>
>The best idea I can come up with is, in the documentation for msg, 
>refer
>to the documentation for the chosen log observer; then, in each log
>observer's documentation, describe how the formatting is done, either
>explicitly, or by reference to textFromEventDict.  (And maybe in the
>documentation for ILogObserver, recommend strongly that each
>implementation be explicit about message formatting.)  There should
>probably also be something in the logging howto.
>
>Any better suggestions?

I'm not sure what you mean by "refer to the documentation for the chosen 
log observer".  The only interpretation I can think of involves changing 
the documentation dynamically at runtime, which doesn't make any sense, 
so I don't think it's what you meant. :)

Adding something about observers to the twisted.python.log.msg 
documentation does seem like it makes sense.  Maybe that could be a link 
to most-used observers that Twisted comes with, or maybe to a document 
about observers in general.

The second part of your suggestion, having each observer document what 
kind of events it expects to consume, sounds great.

Extending the logging howto also sounds great.

And a long-standing related issue, twisted.python.log.msg not appearing 
in the API documentation, would also be nice to resolve.

Jean-Paul


From screwtape at froup.com  Wed Nov 30 21:57:52 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 1 Dec 2011 13:57:52 +1100
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <20111130130427.2308.845285623.divmod.xquotient.547@localhost.localdomain>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
	<4ED52805.7050300@advpubtech.com>
	<20111130040722.GA3713@boombah.thristian.org>
	<20111130130427.2308.845285623.divmod.xquotient.547@localhost.localdomain>
Message-ID: <20111201025752.GB3713@boombah.thristian.org>

On Wed, Nov 30, 2011 at 01:04:27PM -0000, exarkun at twistedmatrix.com wrote:
> On 04:07 am, screwtape at froup.com wrote:
> >If the standard Twisted logging functions automatically constructed
> >LogMessage instances from dict instances, it should be easy enough for
> >future ILogObserver implementations to do the right thing (by just
> >calling str(msg)). Of course, they could also do more sophisticated
> >things like pulling particular keys out of the message to set
> >observer-specific message properties (like syslog channel and severity,
> >etc.)
> 
> Oooorrrr there could be a function that takes a dict intended to 
> represent a text message and returns that message as a string.

As mentioned, we already have one of those in the form of
textFromEventDict(). The trouble is that everybody who writes
a LogObserver needs to know that it exists, and remember to call it. If
it were the __str__() method of a LogMessage object, they'd have to go
out of their way to *not* do the right thing.


From dsturmfels at gmail.com  Wed Nov 30 23:07:49 2011
From: dsturmfels at gmail.com (dsturmfels at gmail.com)
Date: Thu, 1 Dec 2011 15:07:49 +1100
Subject: [Twisted-Python] Rts/Cts Serial port flow control in twisted
In-Reply-To: <20111108145737.20412.971335401.divmod.xquotient.12@localhost.localdomain>
References: <CAAR7Vgq-71OJucSCFY5VsaykHBQMhRPgYAL5BtM616hV1Uzuwg@mail.gmail.com>
	<20111108145737.20412.971335401.divmod.xquotient.12@localhost.localdomain>
Message-ID: <CAAR7VgoLP8dWNp4AGzsMAGJ+kzY=SaD_0jROLZy2wJErBKiJKg@mail.gmail.com>

On 9 November 2011 01:57, <exarkun at twistedmatrix.com> wrote:

> On 11:59 am, dsturmfels at gmail.com wrote:
> >Hi,
> >Has anyone had much experience with serial flow control in twisted?
>
> I don't. :)  It sounds like this may not really have much to do with
> Twisted, though.
> >I've been using a twisted serial port in my gtk+ software for quite a
> >while
> >now, and I can get xonxoff flow control to work, but for some reason,
> >rtscts flow control isn't working (or I may be using it wrong).
> >
> >I'm connecting the software, via a usb-serial cable, to a Datalogic
> >barcode
> >scanner cradle.
> >I've been able to replicate this problem with pyserial as well.
>
> As you perhaps already know, Twisted's serial port support is
> implemented in terms of pyserial - and the layer Twisted adds is very
> thin.  So the problem you experience with pyserial is probably exactly
> the same as the problem you experience with Twisted, since the latter is
> actually the same code as the former.
> >
> >Without flow control on, I can for example, send a particular serial
> >string
> >to the cradle, and the cradle replies instantly with it's software
> >version
> >(as a string).
> >If I scan a barcode, this also instantly shows up in
> >twisted/pyserial/etc
> >(as a string).
> >
> >With xonxoff flow control on in both the software and cradle, the
> >serial
> >connection works exactly the same as having no flow control on.
> >
> >With rtscts flow control on in both the software and cradle however,
> >the
> >cradle doesn't reply instantly with it's software version when the
> >correct
> >string is sent.
> >However, a scanned barcode shows up instantly in the twisted/pyserial
> >software, and if you've previously requested the cradle software
> >version,
> >the software version string only shows up directly after receiving a
> >barcode string.
> >
> >Am I doing something wrong, or does anyone know what might be going on
> >here?
>
> Do you know that the device supports RTS/CTS?  Do you know that the USB
> driver for the device supports it?  Do you know that the USB driver
> support for it is bug free? :)
>
> Sorry I can't add anything more helpful.  I think you want to be looking
> for the problem at a pretty low level, though.  Perhaps even at the
> level of measuring voltage on the RTS pin...
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Thanks - I was assuming it probably was a hardware problem, but I just
thought I'd check to see if I'd been doing anything wrong.
The hardware definitely supports rts/cts flow control, so I'm guessing the
problem then might possibly be with the usb-serial cable, or the driver for
it.

Either way, I've decided to stick with xon/xoff flow control for now - it
seems to work quite well.

Thanks anyway!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111201/7b898d11/attachment.htm 

From dsturmfels at gmail.com  Wed Nov 30 23:13:35 2011
From: dsturmfels at gmail.com (dsturmfels at gmail.com)
Date: Thu, 1 Dec 2011 15:13:35 +1100
Subject: [Twisted-Python] Rts/Cts Serial port flow control in twisted
In-Reply-To: <1111108115014.16719A-100000@Ives.egh.com>
References: <20111108145737.20412.971335401.divmod.xquotient.12@localhost.localdomain>
	<1111108115014.16719A-100000@Ives.egh.com>
Message-ID: <CAAR7VgpU-DC7q3xv3NFABoBLS-4EkcgGYZ+OscB-1wjxLkbt4Q@mail.gmail.com>

On 9 November 2011 02:53, John Santos <JOHN at egh.com> wrote:

> On Tue, 8 Nov 2011 exarkun at twistedmatrix.com wrote:
>
> > On 11:59 am, dsturmfels at gmail.com wrote:
> > >Hi,
> > >Has anyone had much experience with serial flow control in twisted?
> >
> > I don't. :)  It sounds like this may not really have much to do with
> > Twisted, though.
> > >I've been using a twisted serial port in my gtk+ software for quite a
> > >while
> > >now, and I can get xonxoff flow control to work, but for some reason,
> > >rtscts flow control isn't working (or I may be using it wrong).
> > >
> > >I'm connecting the software, via a usb-serial cable, to a Datalogic
> > >barcode
> > >scanner cradle.
> > >I've been able to replicate this problem with pyserial as well.
> >
> > As you perhaps already know, Twisted's serial port support is
> > implemented in terms of pyserial - and the layer Twisted adds is very
> > thin.  So the problem you experience with pyserial is probably exactly
> > the same as the problem you experience with Twisted, since the latter is
> > actually the same code as the former.
> > >
> > >Without flow control on, I can for example, send a particular serial
> > >string
> > >to the cradle, and the cradle replies instantly with it's software
> > >version
> > >(as a string).
> > >If I scan a barcode, this also instantly shows up in
> > >twisted/pyserial/etc
> > >(as a string).
> > >
> > >With xonxoff flow control on in both the software and cradle, the
> > >serial
> > >connection works exactly the same as having no flow control on.
> > >
> > >With rtscts flow control on in both the software and cradle however,
> > >the
> > >cradle doesn't reply instantly with it's software version when the
> > >correct
> > >string is sent.
> > >However, a scanned barcode shows up instantly in the twisted/pyserial
> > >software, and if you've previously requested the cradle software
> > >version,
> > >the software version string only shows up directly after receiving a
> > >barcode string.
> > >
> > >Am I doing something wrong, or does anyone know what might be going on
> > >here?
> >
> > Do you know that the device supports RTS/CTS?  Do you know that the USB
> > driver for the device supports it?  Do you know that the USB driver
> > support for it is bug free? :)
>
> You also need to know that the serial cable(s) include the necessary
> leads, and that the null modem (or whatever) properly crosses them over.
>
> An RS-232 break-out box (if they are still available) would be very
> helpful here.
>
> >
> > Sorry I can't add anything more helpful.  I think you want to be looking
> > for the problem at a pretty low level, though.  Perhaps even at the
> > level of measuring voltage on the RTS pin...
> >
> > Jean-Paul
> >
> >
>
> --
> John Santos
> Evans Griffiths & Hart, Inc.
> 781-861-0670 ext 539
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Thanks John - I'll keep the RS-232 breakout box in mind, if I decide to try
rts/cts flow control again in the future.

Darcy.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111201/c98e90f4/attachment.htm 

From sweetnivi88 at gmail.com  Tue Nov  1 05:34:32 2011
From: sweetnivi88 at gmail.com (nivedita datta)
Date: Tue, 1 Nov 2011 17:04:32 +0530
Subject: [Twisted-Python] Limitations & future extension of twisted
Message-ID: <CA+XLstu0MRo1Zd9uiG9+A_tupcgfLJ1gNG=jx8AoS05TDfcQxQ@mail.gmail.com>

Hi all,

I have to give a talk on twisted. Can anyone let me know about the
limitations of twisted which can later be improved. Also let me know about
the possible future extensions in twisted.

Regards,
Nivedita Datta
Student, IISc Bangalore
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111101/e7abfffc/attachment.html>

From p.mayers at imperial.ac.uk  Tue Nov  1 05:41:52 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 11:41:52 +0000
Subject: [Twisted-Python] Limitations & future extension of twisted
In-Reply-To: <CA+XLstu0MRo1Zd9uiG9+A_tupcgfLJ1gNG=jx8AoS05TDfcQxQ@mail.gmail.com>
References: <CA+XLstu0MRo1Zd9uiG9+A_tupcgfLJ1gNG=jx8AoS05TDfcQxQ@mail.gmail.com>
Message-ID: <4EAFDB00.6050205@imperial.ac.uk>

On 01/11/11 11:34, nivedita datta wrote:
> Hi all,
>
> I have to give a talk on twisted. Can anyone let me know about the
> limitations of twisted which can later be improved. Also let me know
> about the possible future extensions in twisted.

Well, the big one we face: does not currently support IPv6 (although 
work is ongoing)



From solipsis at pitrou.net  Tue Nov  1 06:20:48 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Tue, 1 Nov 2011 13:20:48 +0100
Subject: [Twisted-Python] Python 3 progress: Twisted Core, Twisted Names
Message-ID: <20111101132048.4af63ef2@pitrou.net>


Hello,

Just a heads up about the continuing experiment in porting Twisted to
Python 3.  The port has reached the point where most of Twisted Core
and Twisted Names is now working.  The exceptions are: twisted.cred,
twisted.protocols.sip, twisted.python.hook.  This is validated by
running the corresponding test suites.  Details about the successful
tests are on the project page (*).

I have also validated that merging upstream changes (from Twisted's
trunk) is relatively painless. The merges produced few conflicts and
few regressions (test failures), which were easy to fix.

(*) Project page: https://bitbucket.org/pitrou/t3k/, as always.

Regards

Antoine.





From exarkun at twistedmatrix.com  Tue Nov  1 08:38:38 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 01 Nov 2011 14:38:38 -0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test suite
Message-ID: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>

Hello,

I'd like for us to decide that we will introduce no new unit tests into 
Twisted's test suite which use the global reactor.

These tests require extra complexity in trial - to support the Deferred, 
to check for left over event sources (incompletely implemented), and to 
clean up left over event sources (incompletely implemented).

The tests themselves are also complicated by the need to clean up those 
event sources.

The tests only exercise functionality against one reactor at a time 
which leads to additional challenges for buildbot.

If a test is for reactor functionality with multiple implementations, 
the ReactorBuilder-style tests are better.  If a test is for 
implementation details of a particular reactor, I think the necessary 
parts of that reactor should just be invoked directly - on a new 
instance.  For anything that's not a test for reactor functionality, no 
reactor should be involved at all (protocol implementations, etc).

I've mentioned these ideas to various people at various times, but they 
don't seem to be catching on, so I'd like to hear why and come to some 
conclusion about how we're going to write tests in the future.

Jean-Paul



From _ at lvh.cc  Tue Nov  1 08:49:27 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 1 Nov 2011 15:49:27 +0100
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
Message-ID: <F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>

+1.

Agree completely, did not realize this was still a point of contention.



From radix at twistedmatrix.com  Tue Nov  1 09:28:14 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 1 Nov 2011 11:28:14 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
Message-ID: <CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>

On Tue, Nov 1, 2011 at 10:49 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> +1.
>
> Agree completely, did not realize this was still a point of contention.
>
>

I think the only point of contention would be if you're trying to modify an
existing piece of code that uses the global reactor, and you need to write
tests for your changes (which are unrelated to the reactor usage itself),
it'd add a lot of overhead to getting your change in.

I whole-heartedly agree with the sentiment, though. We need to get rid of
the global reactor.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111101/fdc353f4/attachment-0001.html>

From p.mayers at imperial.ac.uk  Tue Nov  1 10:14:29 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 16:14:29 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
Message-ID: <4EB01AE5.5060606@imperial.ac.uk>

On 01/11/11 15:28, Christopher Armstrong wrote:

> I whole-heartedly agree with the sentiment, though. We need to get rid
> of the global reactor.

Why?

I find the "pass reactor as 1st argument to everything" API pattern 
messy. I'm sure there's a good reason. What is it?



From jml at mumak.net  Tue Nov  1 10:18:16 2011
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 1 Nov 2011 12:18:16 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB01AE5.5060606@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
Message-ID: <CAHZ8tnZTWby4ay9OonHih6PJy=mU6AzqSXt86g-8dPOj4DCDDg@mail.gmail.com>

On Tue, Nov 1, 2011 at 12:14 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 01/11/11 15:28, Christopher Armstrong wrote:
>
>> I whole-heartedly agree with the sentiment, though. We need to get rid
>> of the global reactor.
>
> Why?
>
> I find the "pass reactor as 1st argument to everything" API pattern
> messy. I'm sure there's a good reason. What is it?

An insufficiently advanced sense of taste? :P

jml



From p.mayers at imperial.ac.uk  Tue Nov  1 10:45:31 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 16:45:31 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <CAHZ8tnZTWby4ay9OonHih6PJy=mU6AzqSXt86g-8dPOj4DCDDg@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>
	<CAHZ8tnZTWby4ay9OonHih6PJy=mU6AzqSXt86g-8dPOj4DCDDg@mail.gmail.com>
Message-ID: <4EB0222B.2060200@imperial.ac.uk>

On 01/11/11 16:18, Jonathan Lange wrote:
> On Tue, Nov 1, 2011 at 12:14 PM, Phil Mayers<p.mayers at imperial.ac.uk>  wrote:
>> On 01/11/11 15:28, Christopher Armstrong wrote:
>>
>>> I whole-heartedly agree with the sentiment, though. We need to get rid
>>> of the global reactor.
>>
>> Why?
>>
>> I find the "pass reactor as 1st argument to everything" API pattern
>> messy. I'm sure there's a good reason. What is it?
>
> An insufficiently advanced sense of taste? :P

Well, it's a good job I've got you guys here to educate me. On some 
mailing lists, you'd just get a flip reply.



From itamar at itamarst.org  Tue Nov  1 10:58:37 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 1 Nov 2011 12:58:37 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <4EB01AE5.5060606@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
Message-ID: <1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>

> I find the "pass reactor as 1st argument to everything" API pattern
> messy. I'm sure there's a good reason. What is it?

1. Supporting multiple reactors.

2. Unit testing: if you have an explicit object, you can replace it more
easily with a fake.




From p.mayers at imperial.ac.uk  Tue Nov  1 11:06:10 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 17:06:10 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>
	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>
Message-ID: <4EB02702.7060401@imperial.ac.uk>

On 01/11/11 16:58, Itamar Turner-Trauring wrote:
>> I find the "pass reactor as 1st argument to everything" API pattern
>> messy. I'm sure there's a good reason. What is it?
>
> 1. Supporting multiple reactors.

Interesting. I had assumed that was a "never on the cards" option. Would 
it be possible to "nest" the reactors, or would they have to run in 
separate threads? Or is this speculative?

>
> 2. Unit testing: if you have an explicit object, you can replace it more
> easily with a fake.

Ok. I realise it's a bit late in the day at this point, but I do wonder 
if something like:

def method(arg, reactor=DefaultReactor):
   ...

...with DefaultReactor being some kind of lazy singleton or weak 
reference might not have been a more friendly pattern to API users.

As it is, I might bind a keystroke to "reactor, " ;o)



From mostawesomedude at gmail.com  Tue Nov  1 11:23:05 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Tue, 1 Nov 2011 10:23:05 -0700
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB02702.7060401@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>
	<4EB02702.7060401@imperial.ac.uk>
Message-ID: <CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>

On Tue, Nov 1, 2011 at 10:06 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 01/11/11 16:58, Itamar Turner-Trauring wrote:
>>> I find the "pass reactor as 1st argument to everything" API pattern
>>> messy. I'm sure there's a good reason. What is it?
>>
>> 1. Supporting multiple reactors.
>
> Interesting. I had assumed that was a "never on the cards" option. Would
> it be possible to "nest" the reactors, or would they have to run in
> separate threads? Or is this speculative?
>
>>
>> 2. Unit testing: if you have an explicit object, you can replace it more
>> easily with a fake.
>
> Ok. I realise it's a bit late in the day at this point, but I do wonder
> if something like:
>
> def method(arg, reactor=DefaultReactor):
>   ...
>
> ...with DefaultReactor being some kind of lazy singleton or weak
> reference might not have been a more friendly pattern to API users.
>
> As it is, I might bind a keystroke to "reactor, " ;o)

Singletons are an anti-pattern. Because the reactor is a singleton:

* We can't have multiple reactors instantiated
* We can't restart reactors
* We can't isolate certain reactor-dependent unit tests
* We have to install reactors, which requires careful ordering of imports

In Bravo, Exocet is used to set up a pseudo-sandbox. If reactor were
not a singleton, I could isolate people's usage of Twisted calls, and
force them to proxy everything. Instead, I have to grant them access
to the reactor, because it's shared global state. Is this horribly
important? No, but it does prohibit more effective sandboxing and
isolation.

Exocet needs to keep a list of modules which are so fucked that they
must be allowed to touch sys.modules to work correctly. There are two
things in that list: os.path and twisted.internet.reactor. Also, the
reactor only works if it's imported before Exocet. While Exocet's not
exactly a bastion of sanity, this doesn't speak well of the magic that
the reactor goes through in order to advertise itself globally.

Those are my reasons. They're not superb reasons from a
getting-shit-done point of view, but from a reducing-cyclopean-horrors
point of view, I think they're worth considering.

~ C.

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>



From p.mayers at imperial.ac.uk  Tue Nov  1 11:27:51 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 17:27:51 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>
	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>
Message-ID: <4EB02C17.7040301@imperial.ac.uk>

On 01/11/11 17:23, Corbin Simpson wrote:

> Singletons are an anti-pattern. Because the reactor is a singleton:

Note "some kind of".

I don't care how it's done, but I would have liked the common use case 
(single reactor) to require no extra typing. But I think that ship has 
sailed.



From glyph at twistedmatrix.com  Tue Nov  1 12:48:02 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 1 Nov 2011 14:48:02 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB01AE5.5060606@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
Message-ID: <EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>

On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:

> On 01/11/11 15:28, Christopher Armstrong wrote:
> 
>> I whole-heartedly agree with the sentiment, though. We need to get rid
>> of the global reactor.
> 
> Why?

Sometimes you want a different reactor.  The most common reason is unit testing, although if we could successfully eliminate the global reactor everywhere, there are other things that we might be able to do: slowing down or speeding up time from a protocol's perspective (by replacing IReactorTime), grouping related objects together in reactors that can be shut down together (so that reactor.stop() doesn't actually end the process); or, similarly, suspending a group of related objects (removeReader()/removeWriter() on everything) so that they can be inspected for debugging purposes, without suspending the thing doing the inspecting (a manhole python prompt).

> I find the "pass reactor as 1st argument to everything" API pattern 
> messy. I'm sure there's a good reason. What is it?

This pattern is a solution to the problem, but I agree that it is possibly not the optimal solution.  It sort of points in a direction where every possible module that might be imported becomes an argument to your function.  After all, there are plenty of other modules which have to be mocked for testing, why not just make everyone's __init__ method take sys.modules as an argument too, and never import anything?  In more complex systems this can definitely turn into a bit of a mess.

Nevertheless, "real reactor as default argument" is not a huge improvement either, because it typically breaks one level out.  If you have 'a(reactor=defaultReactor)' and then 'b()' needs to call 'a', half the time 'b' will forget to supply a reactor argument and call 'a()' passing nothing, because that appears to be the suggested API.   Any code that calls 'b()' then needs to deal with the fact that the global reactor is going to get used, even if it has a cleanly encapsulated parameter of its own.  With sufficient discipline, of course, this approach is equivalent.

So despite its imperfections, I don't have a solution better than "pass the reactor to everything" yet.  It seems to be better than the alternatives in almost every case.  The one place it's not better is when writing brief example scripts, but I suspect this is only the case because examples have to expose the semantic conflict between the way you actually get the reactor (import the singleton) and the way that you want to deal with the reactor (as a parameter).  If we had a sensible top-level way of getting the reactor I think examples which didn't use the global would read much more cleanly.

If you can think of a better solution that addresses all of these concerns simultaneously somehow, please share, I'd love to hear it :-).

-glyph




From jml at mumak.net  Tue Nov  1 13:51:10 2011
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 1 Nov 2011 15:51:10 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB0222B.2060200@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<CAHZ8tnZTWby4ay9OonHih6PJy=mU6AzqSXt86g-8dPOj4DCDDg@mail.gmail.com>
	<4EB0222B.2060200@imperial.ac.uk>
Message-ID: <CAHZ8tnb4ASBCSDcfXAF5mKJ+28nTNDr2rvq7LkvuzMWRtWF_AA@mail.gmail.com>

On Tue, Nov 1, 2011 at 12:45 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 01/11/11 16:18, Jonathan Lange wrote:
>> On Tue, Nov 1, 2011 at 12:14 PM, Phil Mayers<p.mayers at imperial.ac.uk>  wrote:
>>> On 01/11/11 15:28, Christopher Armstrong wrote:
>>>
>>>> I whole-heartedly agree with the sentiment, though. We need to get rid
>>>> of the global reactor.
>>>
>>> Why?
>>>
>>> I find the "pass reactor as 1st argument to everything" API pattern
>>> messy. I'm sure there's a good reason. What is it?
>>
>> An insufficiently advanced sense of taste? :P
>
> Well, it's a good job I've got you guys here to educate me. On some
> mailing lists, you'd just get a flip reply.
>

Sorry, I thought you were asking us to come up with good reasons for
why you find it messy.

jml



From tretiy3 at gmail.com  Tue Nov  1 13:57:17 2011
From: tretiy3 at gmail.com (Alexey Ganzha)
Date: Tue, 01 Nov 2011 22:57:17 +0300
Subject: [Twisted-Python] any chat (comet) application for twisted web
In-Reply-To: <4EB02C17.7040301@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>
	<4EB02C17.7040301@imperial.ac.uk>
Message-ID: <4EB04F1D.6060404@gmail.com>

Hello everebody.
May be somebody knows open source chat app for twisted web?
Possible not the complete app, but just skeleton. Possible some 
snippets, pieces...
Will appreciate any suggestions.
Thanks.



From p.mayers at imperial.ac.uk  Tue Nov  1 14:15:19 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 20:15:19 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <CAHZ8tnb4ASBCSDcfXAF5mKJ+28nTNDr2rvq7LkvuzMWRtWF_AA@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<CAHZ8tnZTWby4ay9OonHih6PJy=mU6AzqSXt86g-8dPOj4DCDDg@mail.gmail.com>	<4EB0222B.2060200@imperial.ac.uk>
	<CAHZ8tnb4ASBCSDcfXAF5mKJ+28nTNDr2rvq7LkvuzMWRtWF_AA@mail.gmail.com>
Message-ID: <4EB05357.4030701@imperial.ac.uk>

On 11/01/2011 07:51 PM, Jonathan Lange wrote:

> Sorry, I thought you were asking us to come up with good reasons for
> why you find it messy.

Drat; upon re-reading my question, that meaning does suggest itself, 
doesn't it? Oh well, never mind. I blame email...



From p.mayers at imperial.ac.uk  Tue Nov  1 14:36:31 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 01 Nov 2011 20:36:31 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
Message-ID: <4EB0584F.5020106@imperial.ac.uk>

On 11/01/2011 06:48 PM, Glyph wrote:

> Nevertheless, "real reactor as default argument" is not a huge
> improvement either, because it typically breaks one level out.  If
> you have 'a(reactor=defaultReactor)' and then 'b()' needs to call
> 'a', half the time 'b' will forget to supply a reactor argument and
> call 'a()' passing nothing, because that appears to be the suggested

Darn. I hadn't thought of that.

You could always walk back up the call stack looking for the 
implemenation of IReactorXXX that you want... what? Stop looking at me 
like that!

I kid of course... the right answer is to make everything a method on 
the reactor! No wait...

> So despite its imperfections, I don't have a solution better than
> "pass the reactor to everything" yet.  It seems to be better than the
> alternatives in almost every case.  The one place it's not better is
> when writing brief example scripts, but I suspect this is only the

Well, not only brief example scripts; brief actual scripts. One of the 
nice things about Twisted is that, with a bit of familiarity, you can 
knock up some really fast & powerful event-based network clients for 
ad-hoc jobs.

One example, we use a tiny script wrapping DeferredSemaphore and 
t.p.utils.getProcessOutput to parallelise SSH scanning, because 
ssh-keyscan is (ahem) poorly implemented.

Maybe I knock up more of these short 20-liners than is common? And 
typing "reactor, " a lot in them seems a bit, well... retrograde.

But you're right. Default "reactor=X" parameters will just get passed 
wrong, dammit...

> If you can think of a better solution that addresses all of these
> concerns simultaneously somehow, please share, I'd love to hear it
> :-).

Hmpf. I suspect you've covered most of the ground. If anything springs 
to mind I'll be sure to speak up!

Cheers,
Phil



From anton at iki.fi  Tue Nov  1 15:29:31 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Tue, 1 Nov 2011 23:29:31 +0200
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
Message-ID: <CADa-veR=n6ZDahome672k4vmy9p3WAk9qZt8n6LGRCCNbDK35w@mail.gmail.com>

On Tue, Nov 1, 2011 at 20:48, Glyph <glyph at twistedmatrix.com> wrote:
> On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:
>> I find the "pass reactor as 1st argument to everything" API pattern
>> messy. I'm sure there's a good reason. What is it?
>
> This pattern is a solution to the problem, but I agree that it is possibly not the optimal solution.  It sort of points in a direction where every possible module that might be imported becomes an argument to your function.  After all, there are plenty of other modules which have to be mocked for testing, why not just make everyone's __init__ method take sys.modules as an argument too, and never import anything?  In more complex systems this can definitely turn into a bit of a mess.

I've often wondered whether there is a *real* use of the reactor
argument other than unit testing. I haven't had other uses for it, and
haven't seen (or perhaps not understood) real application code making
use of it. Now, I've sometimes made an argument for unit testing,
other than the obvious quality assurance, that unit tested code will
be more reusable and have better interfaces as it already is used for
at least two things: the real application and the unit test. However,
if accommodating unit testing requires sacrificing the natural
interface, then that kind of takes the edge off that argument.

Thanks to everybody for the discussion and input. Very informative!

-- Anton



From radix at twistedmatrix.com  Tue Nov  1 15:37:24 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 1 Nov 2011 17:37:24 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <CADa-veR=n6ZDahome672k4vmy9p3WAk9qZt8n6LGRCCNbDK35w@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<CADa-veR=n6ZDahome672k4vmy9p3WAk9qZt8n6LGRCCNbDK35w@mail.gmail.com>
Message-ID: <CAPkRfUQKNb3Y6XbYi-Jc-bJpAL7Me4UvA9FK_sJNZkPUuQBtgg@mail.gmail.com>

On Tue, Nov 1, 2011 at 5:29 PM, Anton Gyllenberg <anton at iki.fi> wrote:

> On Tue, Nov 1, 2011 at 20:48, Glyph <glyph at twistedmatrix.com> wrote:
> > On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:
> >> I find the "pass reactor as 1st argument to everything" API pattern
> >> messy. I'm sure there's a good reason. What is it?
> >
> > This pattern is a solution to the problem, but I agree that it is
> possibly not the optimal solution.  It sort of points in a direction where
> every possible module that might be imported becomes an argument to your
> function.  After all, there are plenty of other modules which have to be
> mocked for testing, why not just make everyone's __init__ method take
> sys.modules as an argument too, and never import anything?  In more complex
> systems this can definitely turn into a bit of a mess.
>
> I've often wondered whether there is a *real* use of the reactor
> argument other than unit testing. I haven't had other uses for it, and
> haven't seen (or perhaps not understood) real application code making
> use of it. Now, I've sometimes made an argument for unit testing,
> other than the obvious quality assurance, that unit tested code will
> be more reusable and have better interfaces as it already is used for
> at least two things: the real application and the unit test. However,
> if accommodating unit testing requires sacrificing the natural
> interface, then that kind of takes the edge off that argument.
>
> Thanks to everybody for the discussion and input. Very informative!
>
>
Here's the thing: not only does removing the global reactor make *our* unit
tests a lot nicer, it makes the unit tests of our users much easier to
write, since they will want to use our APIs in their unit tests in a way
that doesn't require ugly global hacking. I don't know how many times I
have raged at some crappy library whose code is incompatible with consumer
unit testing. Having testable interfaces is a really valuable feature we
can provide to our users.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111101/c31b5c79/attachment.html>

From exarkun at twistedmatrix.com  Tue Nov  1 15:46:51 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 01 Nov 2011 21:46:51 -0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted
	test	suite
In-Reply-To: <CAPkRfUQKNb3Y6XbYi-Jc-bJpAL7Me4UvA9FK_sJNZkPUuQBtgg@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<CADa-veR=n6ZDahome672k4vmy9p3WAk9qZt8n6LGRCCNbDK35w@mail.gmail.com>
	<CAPkRfUQKNb3Y6XbYi-Jc-bJpAL7Me4UvA9FK_sJNZkPUuQBtgg@mail.gmail.com>
Message-ID: <20111101214651.17986.595085197.divmod.xquotient.182@localhost.localdomain>

On 09:37 pm, radix at twistedmatrix.com wrote:
>On Tue, Nov 1, 2011 at 5:29 PM, Anton Gyllenberg <anton at iki.fi> wrote:
>>On Tue, Nov 1, 2011 at 20:48, Glyph <glyph at twistedmatrix.com> wrote:
>> > On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:
>> >> I find the "pass reactor as 1st argument to everything" API pattern
>> >> messy. I'm sure there's a good reason. What is it?
>> >
>> > This pattern is a solution to the problem, but I agree that it is
>>possibly not the optimal solution.  It sort of points in a direction 
>>where
>>every possible module that might be imported becomes an argument to 
>>your
>>function.  After all, there are plenty of other modules which have to 
>>be
>>mocked for testing, why not just make everyone's __init__ method take
>>sys.modules as an argument too, and never import anything?  In more 
>>complex
>>systems this can definitely turn into a bit of a mess.
>>
>>I've often wondered whether there is a *real* use of the reactor
>>argument other than unit testing. I haven't had other uses for it, and
>>haven't seen (or perhaps not understood) real application code making
>>use of it. Now, I've sometimes made an argument for unit testing,
>>other than the obvious quality assurance, that unit tested code will
>>be more reusable and have better interfaces as it already is used for
>>at least two things: the real application and the unit test. However,
>>if accommodating unit testing requires sacrificing the natural
>>interface, then that kind of takes the edge off that argument.
>>
>>Thanks to everybody for the discussion and input. Very informative!
>Here's the thing: not only does removing the global reactor make *our* 
>unit
>tests a lot nicer, it makes the unit tests of our users much easier to
>write, since they will want to use our APIs in their unit tests in a 
>way
>that doesn't require ugly global hacking. I don't know how many times I
>have raged at some crappy library whose code is incompatible with 
>consumer
>unit testing. Having testable interfaces is a really valuable feature 
>we
>can provide to our users.

To emphasize, having testable interfaces is a *really* *really* valuable 
feature we can provide to our users.  If you're a Twisted user and 
you're not taking advantage of it, you're missing out on a lot.

Jean-Paul



From glyph at twistedmatrix.com  Tue Nov  1 16:24:07 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 1 Nov 2011 18:24:07 -0400
Subject: [Twisted-Python] any chat (comet) application for twisted web
In-Reply-To: <4EB04F1D.6060404@gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>
	<4EB02C17.7040301@imperial.ac.uk> <4EB04F1D.6060404@gmail.com>
Message-ID: <ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>


On Nov 1, 2011, at 3:57 PM, Alexey Ganzha wrote:

> Hello everebody.
> May be somebody knows open source chat app for twisted web?
> Possible not the complete app, but just skeleton. Possible some 
> snippets, pieces...
> Will appreciate any suggestions.

There is a tutorial on how to build the a chat server using Nevow here:

<http://divmodsphinx.funsize.net/nevow/chattutorial/index.html#the-chat-tutorial-series>

-glyph


From tretiy3 at gmail.com  Tue Nov  1 16:42:49 2011
From: tretiy3 at gmail.com (Alexey Ganzha)
Date: Wed, 02 Nov 2011 01:42:49 +0300
Subject: [Twisted-Python] any chat (comet) application for twisted web
In-Reply-To: <ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>	<4EB02C17.7040301@imperial.ac.uk>
	<4EB04F1D.6060404@gmail.com>
	<ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>
Message-ID: <4EB075E9.4040706@gmail.com>

Thank You very much!

On 11/02/2011 01:24 AM, Glyph wrote:
> On Nov 1, 2011, at 3:57 PM, Alexey Ganzha wrote:
>
>> Hello everebody.
>> May be somebody knows open source chat app for twisted web?
>> Possible not the complete app, but just skeleton. Possible some
>> snippets, pieces...
>> Will appreciate any suggestions.
> There is a tutorial on how to build the a chat server using Nevow here:
>
> <http://divmodsphinx.funsize.net/nevow/chattutorial/index.html#the-chat-tutorial-series>
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at twistedmatrix.com  Tue Nov  1 17:49:34 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 1 Nov 2011 19:49:34 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
Message-ID: <1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>


On Nov 1, 2011, at 10:38 AM, exarkun at twistedmatrix.com wrote:

> Hello,
> 
> I'd like for us to decide that we will introduce no new unit tests into 
> Twisted's test suite which use the global reactor.

+1.

Let's add this to the coding standard.  It doesn't look to me like anyone's objecting.

I think it might be worth considering a grandfather clause.  If we have an outstanding patch or branch which is otherwise close to being merged, whose only problem is real-reactor tests, I think it might not be worth it to block its landing at this point.  Instead, we could file a new ticket to fix its tests separately.

I don't know of any such outstanding tickets though, so hopefully this is a baseless concern.  And I'm happy to be overruled on this point, as well, if you feel strongly about it :).

> These tests require extra complexity in trial - to support the Deferred, 
> to check for left over event sources (incompletely implemented), and to 
> clean up left over event sources (incompletely implemented).

It might be useful to have a switch in trial that reports tests which return a Deferred, to make it easy to spot violators of this policy within Twisted.

I hope you're not suggesting getting rid of the feature _entirely_ from trial, though.  The first step to doing so would be to provide a totally comprehensive, complete, documented, maintained test fake for every interface supplied by every reactor... and then some.  I know that there are hundreds of tests for applications which _use_ Twisted that I've written which would be mind-bendingly difficult to rewrite using even a fake reactor.

For one simple example, on more than one occasion I've had a high-level abstraction wrapping a proprietary C program with spawnProcess and I wanted to test high-level logic that dealt with its results in specific cases; I could of course try to test everything using fakes, but it was actually harder to write the fakes than to set up the state for the real system, and the tests were significantly higher-value as regression tests with the real components integrated.

(In some cases it's a proprietary C extension module which needs to be run via deferToThread.)

That said, there are some caveats: none of these considerations should ever apply to Twisted itself; if they do seem to apply, then it's probably time to split that code out into a separate project.

Conversely, third-party projects should be able to implicitly rely on the reactor working as expected, and therefore don't have any concerns about testing the reactor itself.

If we could publicly expose the ReactorBuilder testing facility, and make it build only a single reactor by default, then it might be possible to test code like I described by spinning up a new reactor for each thing... but in some cases, there's an expensive subprocess that I really want multiple tests to share.  Would it be possible to move the associated file descriptors between reactors?  (On a related note, I wonder, how am I ever going to get those tests to work in disttrial...)

To summarize my own position about Trial, Deferreds, and real-reactor testing in general:

Whenever it's a reasonable amount of effort, tests should always be written against in-memory data structures and avoid doing real I/O, including any real asynchrony, since tests like that are easier to maintain and debug.
Within Twisted itself, it should always be a reasonable amount of effort to write tests the "right" way.  Any code which seems to require a real-asynchronous testing approach is either out of scope for Twisted or has other architectural problems which need to be addressed before landing it.
Some applications which use Twisted will need to interact with other systems as part of their unit tests, and they should be able to use the reactor to do that.  We should provide as many facilities to help people avoid writing tests like this as possible, but there are circumstances where we couldn't possibly provide enough, so we should continue to support trial's use as an integration testing tool.
We don't currently provide enough facilities to make it easy to avoid the reactor in all the cases where you should avoid it, and we should really improve proto_helpers et. al. so that it's easier to find in-memory implementations of stuff.

> The tests themselves are also complicated by the need to clean up those 
> event sources.

Amen.  Even today, the only document I'm aware of which actually covers this in its entirety is <http://blackjml.livejournal.com/23029.html>.  I think _maybe_ the trial tutorial actually covers all the steps but I'll need to read it very carefully to see if I can spot anything that it doesn't address :).

> The tests only exercise functionality against one reactor at a time 
> which leads to additional challenges for buildbot.

AMEN.  If we made all tests ReactorBuilder tests, would we be able to kill all the alternate-reactor (i.e. -r whatever) buildbots?  It seems like that would speed up build results quite a bit.

> If a test is for reactor functionality with multiple implementations, 
> the ReactorBuilder-style tests are better.  If a test is for 
> implementation details of a particular reactor, I think the necessary 
> parts of that reactor should just be invoked directly - on a new 
> instance.  For anything that's not a test for reactor functionality, no 
> reactor should be involved at all (protocol implementations, etc).

As I said above, we have a few gaps in this area which we need to work on filling.  For example, I recently wrote some tests where I wanted an IReactorCore provider but was dismayed to discover that Twisted doesn't provide an in-memory implementor of that interface anywhere, despite the fact that all I needed to call was addSystemEventTrigger/fireSystemEventTrigger, two APIs which just manipulate lists in memory even in their "real" implementations.  I was bad open-source citizen and did not immediately file a bug!  However, writing this email made me do so <http://twistedmatrix.com/trac/ticket/5353>.

While the code that I was writing wasn't for Twisted itself, I do feel like this may be an area where the prevalence of bad examples comes from the fact that we don't give our users a lot of options for nice, isolated testing.  It's definitely easier to just use the real reactor, despite its myriad issues, than to spend a week implementing comprehensive, testable versions of the ~40-odd interfaces in twisted.internet.interfaces.  But that means that all tx* projects tend to test things in the worse style, which means that most new patch contributors are likely to be cribbing from bad examples when writing a patch for Twisted.

So I filed another ticket for another frequent sticking point for me: <http://twistedmatrix.com/trac/ticket/5354>.  Hopefully if we can make more such things popular it will more widely disseminate the skills necessary to write tests in a more self-contained style.

> I've mentioned these ideas to various people at various times, but they 
> don't seem to be catching on, so I'd like to hear why and come to some 
> conclusion about how we're going to write tests in the future.

The new Trial tutorial provides a great resource that we were lacking for a long time, so we should make reference to its section on using StringTransport and Clock frequently and with enthusiasm.  

We a similar document for ReactorBuilder though.

I think we may want to also write up a companion wiki page that is more the rhetorical rather than pedagogic side of this problem, collecting our explanations of why you really want to use in-memory stuff instead of "real" reactors.  New contributors sometimes say that they don't feel like the code is "really" being tested unless they're testing against the real implementation of something, and it may not be immediately obvious that testing against a not-real implementation is desirable in many cases.  Much of it can just be copy/pasted from this thread :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111101/77a541a4/attachment.html>

From glyph at twistedmatrix.com  Tue Nov  1 17:58:33 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 1 Nov 2011 19:58:33 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB0584F.5020106@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<4EB0584F.5020106@imperial.ac.uk>
Message-ID: <4CDB0B53-9A2B-41A1-9D3E-5BEB927EBC60@twistedmatrix.com>


On Nov 1, 2011, at 4:36 PM, Phil Mayers wrote:

> One example, we use a tiny script wrapping DeferredSemaphore and 
> t.p.utils.getProcessOutput to parallelise SSH scanning, because 
> ssh-keyscan is (ahem) poorly implemented.
> 
> Maybe I knock up more of these short 20-liners than is common? And 
> typing "reactor, " a lot in them seems a bit, well... retrograde.

Hopefully you only need to pass it in at the top level to a few things, not everywhere to everything :).

For example, with something like twisted.web.client.Agent, you pass the reactor once and then you have an object you can call methods on, you don't need to keep repeating it.  If getProcessOutput were a method of a more helpful object, perhaps you'd be able to type 'reactor' a bit less.

Another possible eventual improvement here is that Twisted include a script-running tool which creates the reactor for you and passes it, either to a specified function or as a magic global in a script.  Then you should just pass 'reactor' to the top-level stuff in your script.  Sort of like 'twistd' but for one-off things where you don't want to go to the trouble to build a plugin or even a Service.

As a bonus, such a tool could call 'reactor.run()' for you automatically, eliminating some newbie confusion about when it's appropriate to do that.  (And ideally, 'reactor.stop' when some appropriate Deferred is fired, but that gets into more thinking than I want to do about this right now...)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111101/043a6bde/attachment.html>

From tim at commsecure.com.au  Tue Nov  1 20:20:17 2011
From: tim at commsecure.com.au (Tim Allen)
Date: Wed, 2 Nov 2011 13:20:17 +1100
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
Message-ID: <20111102022016.GA5838@ws35.commsecure.com.au>

On Tue, Nov 01, 2011 at 02:48:02PM -0400, Glyph wrote:
> If you can think of a better solution that addresses all of these
> concerns simultaneously somehow, please share, I'd love to hear it
> :-).

I'm not sure if it addresses all your concerns, but
twisted.python.context will let you set a particular value for things
you call and all their descendants (unless one of them sets a new value
in the context). I can imagine interleaving code that passes a reactor
parameter explicitly and code that grabs a reactor from the current
context without much hassle.

Tim.



From glyph at twistedmatrix.com  Tue Nov  1 21:18:12 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 1 Nov 2011 23:18:12 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <20111102022016.GA5838@ws35.commsecure.com.au>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<20111102022016.GA5838@ws35.commsecure.com.au>
Message-ID: <7214F82C-8EEC-469D-B289-5BD5C3871196@twistedmatrix.com>


On Nov 1, 2011, at 10:20 PM, Tim Allen wrote:

> On Tue, Nov 01, 2011 at 02:48:02PM -0400, Glyph wrote:
>> If you can think of a better solution that addresses all of these
>> concerns simultaneously somehow, please share, I'd love to hear it
>> :-).
> 
> I'm not sure if it addresses all your concerns, but
> twisted.python.context will let you set a particular value for things
> you call and all their descendants (unless one of them sets a new value
> in the context). I can imagine interleaving code that passes a reactor
> parameter explicitly and code that grabs a reactor from the current
> context without much hassle.

I invented twisted.python.context for this very reason!

But... I find the idea of encouraging its widespread use disconcerting.

There are a couple of issues (and if you search the web for "emacs lisp dynamic scope" you will find a whole bunch of them) but the main problem is this:

When you do context.get(something) and something isn't there... what do you do?  Whose fault is it?

As a parallel example, when a function gets called with the wrong argument, it's quite easy to figure out where the problem is: you just look at the caller, and the caller almost certainly knows who they are.  The caller somehow has to know about the signature of the callee and if they get it wrong it's an immediate and obvious runtime error.

But when code has a relationship to its caller's caller's caller's caller's caller, and there may be any amount of indirection in there (callbacks registered on Deferreds, for example) how do you find the place that really should have been the one to pass the result?  How do you know at the time you invoke something, all the context that it may require?

The immediate place I can think of where this would cause issues is with GUI callbacks.  Right now Twisted goes out of its way to make sure that you can '.connect("clicked", ...)' on a GTK widget and use any old python callback you want.  If we made the reactor context-driven, then that would work... mostly.  If Twisted's callbacks were run with the reactor present, then the GUI's callbacks might not have the reactor available to them because they lack some setup.

Of course you can probably fix that problem, but there are other places where it will crop up again; the standard idiom is to call a bunch of functions to set up event handlers, then call reactor.run().  But what if the reactor isn't available to those functions before it's run?

Et cetera, et cetera.

If you can think of a solid, robust way to specify contracts that describe what context is expected, by whom, and how it can be filled at the right time without surprising consequences, I'd love to hear it, but I won't hold my breath :).

-glyph




From dynamicgl at gmail.com  Wed Nov  2 01:10:33 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Wed, 2 Nov 2011 15:10:33 +0800
Subject: [Twisted-Python] Limitations & future extension of twisted
In-Reply-To: <4EAFDB00.6050205@imperial.ac.uk>
References: <CA+XLstu0MRo1Zd9uiG9+A_tupcgfLJ1gNG=jx8AoS05TDfcQxQ@mail.gmail.com>
	<4EAFDB00.6050205@imperial.ac.uk>
Message-ID: <CABkOF6SwhR=DEVh2rL4XP2jpkxC_b5GZQJgAXONZTLixG3M8gQ@mail.gmail.com>

Hi all

  I want to know which version of twisted will be supposed to support
IPv6...

Thanks

On Tue, Nov 1, 2011 at 7:41 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 01/11/11 11:34, nivedita datta wrote:
> > Hi all,
> >
> > I have to give a talk on twisted. Can anyone let me know about the
> > limitations of twisted which can later be improved. Also let me know
> > about the possible future extensions in twisted.
>
> Well, the big one we face: does not currently support IPv6 (although
> work is ongoing)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111102/2b8a6a8c/attachment.html>

From p.mayers at imperial.ac.uk  Wed Nov  2 01:55:32 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 07:55:32 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>
Message-ID: <4EB0F774.30601@imperial.ac.uk>

On 11/01/2011 11:49 PM, Glyph wrote:

> of "real" reactors. New contributors sometimes say that they don't feel
> like the code is "really" being tested unless they're testing against
> the real implementation of something, and it may not be immediately
> obvious that testing against a not-real implementation is desirable in
> many cases. Much of it can just be copy/pasted from this thread :).

Without commenting on everything else in the thread - this realisation 
was something I came to late, and I feel it would have helped enormously 
if it had come earlier. So, +1 on convincing people to go for in-memory 
/ simulated transport/clock/etc.

But I'll note that most people I've seen crib from existing test code 
during the early phases of TDD, tutorials or not - and if most test code 
in Twisted uses the real reactor...



From p.mayers at imperial.ac.uk  Wed Nov  2 01:57:17 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 07:57:17 +0000
Subject: [Twisted-Python] Limitations & future extension of twisted
In-Reply-To: <CABkOF6SwhR=DEVh2rL4XP2jpkxC_b5GZQJgAXONZTLixG3M8gQ@mail.gmail.com>
References: <CA+XLstu0MRo1Zd9uiG9+A_tupcgfLJ1gNG=jx8AoS05TDfcQxQ@mail.gmail.com>	<4EAFDB00.6050205@imperial.ac.uk>
	<CABkOF6SwhR=DEVh2rL4XP2jpkxC_b5GZQJgAXONZTLixG3M8gQ@mail.gmail.com>
Message-ID: <4EB0F7DD.7070901@imperial.ac.uk>

On 11/02/2011 07:10 AM, gelin yan wrote:
> Hi all
>
> I want to know which version of twisted will be supposed to support IPv6...

http://twistedmatrix.com/trac/wiki/IPv6



From p.mayers at imperial.ac.uk  Wed Nov  2 02:05:32 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 08:05:32 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <4EB0F774.30601@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>
	<4EB0F774.30601@imperial.ac.uk>
Message-ID: <4EB0F9CC.2050801@imperial.ac.uk>

On 11/02/2011 07:55 AM, Phil Mayers wrote:

> Without commenting on everything else in the thread

s/thread/message/

Dammit...



From spam at herox.net  Wed Nov  2 03:34:27 2011
From: spam at herox.net (=?ISO-8859-15?Q?Marcel_G=E4digk?=)
Date: Wed, 02 Nov 2011 10:34:27 +0100
Subject: [Twisted-Python] Slow PB imports
Message-ID: <4EB10EA3.3030603@herox.net>

Hi,

i using the Perspective Broker and i have problems with the speed of 
importing the modules.
It takes 15 - 17 seconds for importing the Reactor and the 
PBServerFactory (or other pb imports).
If i import the reactor or the pb imports alone it takes in avg. 2-3 
seconds.

def ImportIt():
     from twisted.internet import reactor
     from twisted.spread.pb import PBServerFactory

import timeit
t = timeit.Timer(setup='from __main__ import ImportIt', stmt='ImportIt()')
print t.timeit()

How can i improve this?

I running win7 32bit SP1 on a 2,93 Ghz Core 2 Duo with python 2.7.1 and 
twisted 11.0

cheers

Marcel




From umit at oztosun.net  Wed Nov  2 04:40:56 2011
From: umit at oztosun.net (Umit Oztosun)
Date: Wed, 2 Nov 2011 12:40:56 +0200
Subject: [Twisted-Python] Interleaving long running loops
Message-ID: <CAKV7NN8F4OcyHPAA5D475069JzN23kka2ORd3P6vFii9pu38sg@mail.gmail.com>

Hello,

I have been developing a medium/large scale application using twisted
and very happy about it. It is composed of two parts, an application
server and a PyQt based client. Perspective broker is used for all
communication between client and server. Server mainly talks with a
database, formats results and sends to clients (roughly).

Most formatting is done in simple for loops (there are many different
kinds of operations which a client can choose):

@defer.inlineCallbacks
def operation():
    dbQueryResult = yield runSomeSQL()
    for item in dbQueryResult:
        process(item)

Again, most of the time these are light operations which complete in
sub-seconds. However, rarely, results may be so large that it takes
several seconds to process, and during this period all other server
processing stops (i.e. accepting new client connections).

I've written a utility function, deferredSleep(), which I call
occasionally to avoid blocking:

def deferredSleep(seconds=0.01):
    d = defer.Deferred()
    reactor.callLater(seconds, d.callback, None)
    return d

And I use it like below to avoid blocking for very large result sets:

@defer.inlineCallbacks
def operation():
    dbQueryResult = yield runSomeSQL()
    for i, item in enumerate(dbQueryResult):
        if i % 1000 == 0:
            # Breathe after a thousand iterations
            yield deferredSleep(0.01)
        process(item)

So my question is, is this an acceptable solution? And is there a more
generic way, i.e.

for item in magicalIterator(dbQueryResult):
    process(item)

I have lots of similar loops all over the place and a more generic
solution would be great. I am also aware of deferToThread but I am
trying to avoid using threads.

Regards,
--
Umit



From p.mayers at imperial.ac.uk  Wed Nov  2 05:06:45 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 11:06:45 +0000
Subject: [Twisted-Python] Interleaving long running loops
In-Reply-To: <CAKV7NN8F4OcyHPAA5D475069JzN23kka2ORd3P6vFii9pu38sg@mail.gmail.com>
References: <CAKV7NN8F4OcyHPAA5D475069JzN23kka2ORd3P6vFii9pu38sg@mail.gmail.com>
Message-ID: <4EB12445.10900@imperial.ac.uk>

On 02/11/11 10:40, Umit Oztosun wrote:

> I have lots of similar loops all over the place and a more generic
> solution would be great. I am also aware of deferToThread but I am
> trying to avoid using threads.

Well, deferToThread gives you all kinds of problems re: talking to the 
reactor from threads, so avoid.

You could try it as a cooperator

from twisted.internet import task

@defer.inlineCallbacks
def operation():
   result = yield somesql()
   # n.b. generator expression!
   work = (process(item) for item in result)
   yield task.coiterate(work)



From p.mayers at imperial.ac.uk  Wed Nov  2 05:24:11 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 11:24:11 +0000
Subject: [Twisted-Python] t.i.task.Cooperator & inlineCallbacks mashup
Message-ID: <4EB1285B.9010302@imperial.ac.uk>

I only just noticed today that if a generator passed to a 
CooperativeTask does:

   result = yield some_deferred()

...it doesn't work, because CooperativeTask doesn't .send() the result 
of the deferred bacn into the generator.

Is this intentional? If not, would that behaviour be desirable? It seems 
like it would be a useful pattern to me.



From tobias.oberstein at tavendo.de  Wed Nov  2 05:38:34 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 2 Nov 2011 04:38:34 -0700
Subject: [Twisted-Python] twistd/tac : when does logging start?
Message-ID: <634914A010D0B943A035D226786325D42D0B0D8BE6@EXVMBX020-12.exch020.serverdata.net>

I've got a Twisted application started via a tac file.

Within the tac, I also initialize a database and create a db pool for use with adbapi.

Now it seems that log messages from the network services are logged, but not from the initial DB setup stuff.

When exactly does Twistd start the logging? How can I make it start logging from the very beginning?

I've looked at the docs:

"Before startLogging is called, log messages will be discarded and errors will be written to stderr."

"If you are using twistd to run your daemon, it will take care of calling startLogging for you, ..."

but that doesn't help me.

Any hints are welcome



From luke-lists at hybrid-logic.co.uk  Wed Nov  2 05:48:01 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Wed, 02 Nov 2011 11:48:01 +0000
Subject: [Twisted-Python] twistd/tac : when does logging start?
In-Reply-To: <634914A010D0B943A035D226786325D42D0B0D8BE6@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0B0D8BE6@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <1320234481.27033.4.camel@pow>

On Wed, 2011-11-02 at 04:38 -0700, Tobias Oberstein wrote:
> I've got a Twisted application started via a tac file.
> 
> Within the tac, I also initialize a database and create a db pool for use with adbapi.
> 
> Now it seems that log messages from the network services are logged, but not from the initial DB setup stuff.
> 
> When exactly does Twistd start the logging? How can I make it start logging from the very beginning?
> 
> I've looked at the docs:
> 
> "Before startLogging is called, log messages will be discarded and errors will be written to stderr."
> 
> "If you are using twistd to run your daemon, it will take care of calling startLogging for you, ..."
> 
> but that doesn't help me.
> 
> Any hints are welcome
> 

Hi Tobias,

You need to do your intialisation (database connections, etc) in a
startService method of your application, rather than (as you're probably
doing) in the __init__ method.

Hope this helps.

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Mobile: +447791750420 (UK) / +1-415-449-1165 (US)





From tobias.oberstein at tavendo.de  Wed Nov  2 06:14:43 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 2 Nov 2011 05:14:43 -0700
Subject: [Twisted-Python] twistd/tac : when does logging start?
In-Reply-To: <1320234481.27033.4.camel@pow>
References: <634914A010D0B943A035D226786325D42D0B0D8BE6@EXVMBX020-12.exch020.serverdata.net>
	<1320234481.27033.4.camel@pow>
Message-ID: <634914A010D0B943A035D226786325D42D0B0D8BF1@EXVMBX020-12.exch020.serverdata.net>

> Hi Tobias,
> 
> You need to do your intialisation (database connections, etc) in a startService
> method of your application, rather than (as you're probably
> doing) in the __init__ method.
> 
> Hope this helps.

Hi Luke,

yeah, that helps;)

Thanks!



From itamar at itamarst.org  Wed Nov  2 06:36:10 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 02 Nov 2011 12:36:10 +0000
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <4EB10EA3.3030603@herox.net>
References: <4EB10EA3.3030603@herox.net>
Message-ID: <1320237370.2042.90.camel@blake>

On Wed, 2011-11-02 at 10:34 +0100, Marcel Gädigk wrote:
> Hi,
> 
> i using the Perspective Broker and i have problems with the speed of 
> importing the modules.
> It takes 15 - 17 seconds for importing the Reactor and the 
> PBServerFactory (or other pb imports).
> If i import the reactor or the pb imports alone it takes in avg. 2-3 
> seconds.

The example script you gave takes me 3.3 seconds to run, on a similar
machine on Linux. So switching operating systems may be one solution :)
If not:

0. Is Twisted on a network filesystem? That may be the problem.

1. Make sure you have .pyc in your installed Twisted directories. If you
don't, you import all of Twisted with a user that has permissions to
create them in those folders.

2. Maybe try a packaging Twisted in an .egg file.




From itamar at itamarst.org  Wed Nov  2 06:39:17 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 02 Nov 2011 08:39:17 -0400
Subject: [Twisted-Python] t.i.task.Cooperator & inlineCallbacks mashup
In-Reply-To: <4EB1285B.9010302@imperial.ac.uk>
References: <4EB1285B.9010302@imperial.ac.uk>
Message-ID: <1320237557.2042.91.camel@blake>

On Wed, 2011-11-02 at 11:24 +0000, Phil Mayers wrote:
> I only just noticed today that if a generator passed to a 
> CooperativeTask does:
> 
>    result = yield some_deferred()
> 
> ...it doesn't work, because CooperativeTask doesn't .send() the result 
> of the deferred bacn into the generator.
> 
> Is this intentional? If not, would that behaviour be desirable? It seems 
> like it would be a useful pattern to me.

Could you give an example snippet? I don't really understand the
question, sorry.




From itamar at itamarst.org  Wed Nov  2 06:44:28 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 02 Nov 2011 12:44:28 +0000
Subject: [Twisted-Python] Prhaps 11.1rc2 should include #4669?
Message-ID: <1320237868.2042.93.camel@blake>

It seems like keeping IOCP from being broken on win64 is worth
integrating.





From exarkun at twistedmatrix.com  Wed Nov  2 07:01:12 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 02 Nov 2011 13:01:12 -0000
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <1320237370.2042.90.camel@blake>
References: <4EB10EA3.3030603@herox.net>
	<1320237370.2042.90.camel@blake>
Message-ID: <20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>

On 12:36 pm, itamar at itamarst.org wrote:
>
>2. Maybe try a packaging Twisted in an .egg file.

This isn't a great idea, since Twisted doesn't support being installed 
as a zipfile (which is what I guess you meant, since a .egg directory 
wouldn't be any different from the standard installation in terms of 
import performance).

Jean-Paul



From exarkun at twistedmatrix.com  Wed Nov  2 07:08:42 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 02 Nov 2011 13:08:42 -0000
Subject: [Twisted-Python] t.i.task.Cooperator & inlineCallbacks mashup
In-Reply-To: <4EB1285B.9010302@imperial.ac.uk>
References: <4EB1285B.9010302@imperial.ac.uk>
Message-ID: <20111102130842.17986.1299270262.divmod.xquotient.193@localhost.localdomain>

On 11:24 am, p.mayers at imperial.ac.uk wrote:
>I only just noticed today that if a generator passed to a
>CooperativeTask does:
>
>   result = yield some_deferred()
>
>...it doesn't work, because CooperativeTask doesn't .send() the result
>of the deferred bacn into the generator.
>
>Is this intentional?

Yes.  Cooperator is for iterators, not generators, making send unusable 
in the general case.  Cooperator also isn't a replacement for 
inlineCallbacks.

You can build a wrapper for a generator that works together with 
Cooperator and sends results back in.  If it ends up being useful, it 
might be something to add to Twisted.

Jean-Paul
>If not, would that behaviour be desirable? It seems
>like it would be a useful pattern to me.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From itamar at itamarst.org  Wed Nov  2 07:10:13 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 02 Nov 2011 09:10:13 -0400
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>
References: <4EB10EA3.3030603@herox.net> <1320237370.2042.90.camel@blake>
	<20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>
Message-ID: <1320239413.2042.97.camel@blake>

On Wed, 2011-11-02 at 13:01 +0000, exarkun at twistedmatrix.com wrote:

> This isn't a great idea, since Twisted doesn't support being installed 
> as a zipfile (which is what I guess you meant, since a .egg directory 
> wouldn't be any different from the standard installation in terms of 
> import performance).

Oh right, plugins don't work or something?




From spam at herox.net  Wed Nov  2 07:25:28 2011
From: spam at herox.net (=?ISO-8859-1?Q?Marcel_G=E4digk?=)
Date: Wed, 02 Nov 2011 14:25:28 +0100
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <1320239413.2042.97.camel@blake>
References: <4EB10EA3.3030603@herox.net> <1320237370.2042.90.camel@blake>
	<20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>
	<1320239413.2042.97.camel@blake>
Message-ID: <4EB144C8.2020306@herox.net>

I deleted all *.pyc files from the twisted Folder. After the *.pyc 
generation python imports pb and reactor in around 5 seconds.

Thx for your help.



From solipsis at pitrou.net  Wed Nov  2 07:24:10 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 2 Nov 2011 14:24:10 +0100
Subject: [Twisted-Python] Slow PB imports
References: <4EB10EA3.3030603@herox.net>
Message-ID: <20111102142410.506e6f90@pitrou.net>

On Wed, 02 Nov 2011 10:34:27 +0100
Marcel Gädigk <spam at herox.net> wrote:
> i using the Perspective Broker and i have problems with the speed of 
> importing the modules.
> It takes 15 - 17 seconds for importing the Reactor and the 
> PBServerFactory (or other pb imports).
> If i import the reactor or the pb imports alone it takes in avg. 2-3 
> seconds.
> 
> def ImportIt():
>      from twisted.internet import reactor
>      from twisted.spread.pb import PBServerFactory
> 
> import timeit
> t = timeit.Timer(setup='from __main__ import ImportIt', stmt='ImportIt()')
> print t.timeit()

Er, have read the timeit docs?
The timeit() method will execute the given code *one million times* by
default:

timeit(self, number=1000000) unbound timeit.Timer method
    Time 'number' executions of the main statement.
    
    To be precise, this executes the setup statement once, and
    then returns the time it takes to execute the main statement
    a number of times, as a float measured in seconds.  The
    argument is the number of times through the loop, defaulting
    to one million.  The main statement, the setup statement and
    the timer function to be used are passed to the constructor.

You might want to rewrite your script without timeit and simply use the
"time" command. Or call `t.timeit(1)` instead.


Antoine.





From p.mayers at imperial.ac.uk  Wed Nov  2 07:57:23 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 13:57:23 +0000
Subject: [Twisted-Python] t.i.task.Cooperator & inlineCallbacks mashup
In-Reply-To: <20111102130842.17986.1299270262.divmod.xquotient.193@localhost.localdomain>
References: <4EB1285B.9010302@imperial.ac.uk>
	<20111102130842.17986.1299270262.divmod.xquotient.193@localhost.localdomain>
Message-ID: <4EB14C43.40201@imperial.ac.uk>

On 02/11/11 13:08, exarkun at twistedmatrix.com wrote:

> Yes.  Cooperator is for iterators, not generators, making send unusable

Ah of course.

> in the general case.  Cooperator also isn't a replacement for
> inlineCallbacks.

That was essentially my question ;o)



From p.mayers at imperial.ac.uk  Wed Nov  2 08:01:19 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 02 Nov 2011 14:01:19 +0000
Subject: [Twisted-Python] t.i.task.Cooperator & inlineCallbacks mashup
In-Reply-To: <1320237557.2042.91.camel@blake>
References: <4EB1285B.9010302@imperial.ac.uk> <1320237557.2042.91.camel@blake>
Message-ID: <4EB14D2F.10706@imperial.ac.uk>

On 02/11/11 12:39, Itamar Turner-Trauring wrote:
> On Wed, 2011-11-02 at 11:24 +0000, Phil Mayers wrote:
>> I only just noticed today that if a generator passed to a
>> CooperativeTask does:
>>
>>     result = yield some_deferred()
>>
>> ...it doesn't work, because CooperativeTask doesn't .send() the result
>> of the deferred bacn into the generator.
>>
>> Is this intentional? If not, would that behaviour be desirable? It seems
>> like it would be a useful pattern to me.
>
> Could you give an example snippet? I don't really understand the
> question, sorry.

I meant this:

from twisted.internet import task, reactor, defer

def dowork(n):
     d = defer.Deferred()
     result = 'waited %i' % (n,)
     reactor.callLater(n, d.callback, result)
     return d

def work():
     for i in (1,2,3):
         rv = yield dowork(i)
         print rv

task.coiterate(work())
reactor.run()

...prints:

None
None
None

rather than

waited 1
waited 2
waited 3

i.e. the iterator that is yielding deferreds doesn't "see" the results 
emerge from the "yield" in the same way inlineCallbacks do.

Obviously it's pretty trivial to get at the results:

   holder = {}
   def cb(r):
     holder['result'] = r
     return r
   yield dowork(i).addCallback(cb)
   print holder['result']

But the essential point I was missing is that Cooperator is for general 
purpose iterators, not just generators.



From tretiy3 at gmail.com  Wed Nov  2 12:34:17 2011
From: tretiy3 at gmail.com (Alexey Ganzha)
Date: Wed, 02 Nov 2011 21:34:17 +0300
Subject: [Twisted-Python] any chat (comet) application for twisted web
In-Reply-To: <ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>	<4EB02C17.7040301@imperial.ac.uk>
	<4EB04F1D.6060404@gmail.com>
	<ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>
Message-ID: <4EB18D29.1020202@gmail.com>

Hi!
Thanks again, Glyph for the link.
It took me less an hour to embed chat app in existent site (except that 
nevow is hosted on lanuchpad now, instead of divmod.org).
It is ready to use, just according to the tutorial. Just add some js and 
css to chatthing package to skin athena app.

One problem - i had to use it as a separate app. My own app is a raw 
twisted.web.
I saw OldResourceAdapter in Nevows code. Possible it need to write my 
own NewResourceAdapter for twisted.web :)

Any suggestions everybody? May be somebody had already implemented that 
(embed Nevow as a t.w.Resource)?

Thanks again for Your help, guys.
Twisted is beautiful.

On 11/02/2011 01:24 AM, Glyph wrote:
> On Nov 1, 2011, at 3:57 PM, Alexey Ganzha wrote:
>
>> Hello everebody.
>> May be somebody knows open source chat app for twisted web?
>> Possible not the complete app, but just skeleton. Possible some
>> snippets, pieces...
>> Will appreciate any suggestions.
> There is a tutorial on how to build the a chat server using Nevow here:
>
> <http://divmodsphinx.funsize.net/nevow/chattutorial/index.html#the-chat-tutorial-series>
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at twistedmatrix.com  Wed Nov  2 16:34:40 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 2 Nov 2011 18:34:40 -0400
Subject: [Twisted-Python] any chat (comet) application for twisted web
In-Reply-To: <4EB18D29.1020202@gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>	<4EB01AE5.5060606@imperial.ac.uk>	<1a91977aee6de746fed69aaa029b135a.squirrel@webmail.zoteca.com>	<4EB02702.7060401@imperial.ac.uk>	<CALiqSLdOpCmWNkkF78NoVaBY3G-h7XTfceJC8Mxx55jLAZw8DA@mail.gmail.com>	<4EB02C17.7040301@imperial.ac.uk>
	<4EB04F1D.6060404@gmail.com>
	<ED16D6CD-3192-48BD-9B3B-F82A078BEFB4@twistedmatrix.com>
	<4EB18D29.1020202@gmail.com>
Message-ID: <BB057640-FEC1-439C-BB90-9CBD23FC1E9E@twistedmatrix.com>



On Nov 2, 2011, at 2:34 PM, Alexey Ganzha wrote:

> Hi!
> Thanks again, Glyph for the link.
> It took me less an hour to embed chat app in existent site (except that 
> nevow is hosted on lanuchpad now, instead of divmod.org).
> It is ready to use, just according to the tutorial. Just add some js and 
> css to chatthing package to skin athena app.

Glad to hear it!

> One problem - i had to use it as a separate app. My own app is a raw 
> twisted.web.
> I saw OldResourceAdapter in Nevows code. Possible it need to write my 
> own NewResourceAdapter for twisted.web :)
> 
> Any suggestions everybody? May be somebody had already implemented that 
> (embed Nevow as a t.w.Resource)?

I don't know if anyone's done it at the API level - there are some limitations in twisted web that might make it problematic.  But, you can always easily set up a reverse proxy so that your nevow server can live in the same URL structure as the rest of your Twisted app!

> Thanks again for Your help, guys.
> Twisted is beautiful.

Thanks for saying so :).

-glyph


From glyph at twistedmatrix.com  Wed Nov  2 16:51:07 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 2 Nov 2011 18:51:07 -0400
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <1320239413.2042.97.camel@blake>
References: <4EB10EA3.3030603@herox.net> <1320237370.2042.90.camel@blake>
	<20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>
	<1320239413.2042.97.camel@blake>
Message-ID: <0AB015A7-9A60-49CF-8EE8-743FCF0232CA@twistedmatrix.com>


On Nov 2, 2011, at 9:10 AM, Itamar Turner-Trauring wrote:

> On Wed, 2011-11-02 at 13:01 +0000, exarkun at twistedmatrix.com wrote:
> 
>> This isn't a great idea, since Twisted doesn't support being installed 
>> as a zipfile (which is what I guess you meant, since a .egg directory 
>> wouldn't be any different from the standard installation in terms of 
>> import performance).
> 
> Oh right, plugins don't work or something?

Actually, you can pre-generate a dropin.cache for your zip file, and the plugin system will work fine out of a zip file, since about 5 years ago: <http://twistedmatrix.com/trac/changeset/19305>.

Basically, portions of Twisted can work just fine out of a zip file, and it might be adequate for many applications.  But (A) we don't have a buildbot anywhere that tests things in a zipfile configuration, and (B) there are many, many modules within Twisted, especially within tests, which expect that they can look at __file__ and assume it's a path on the filesystem.  So big chunks of it definitely won't work.

I'd love to fix this, but it is just _super_ low priority for me right now; I kinda hope that someone else will show up with another embedded system running Twisted and do some work in this area, since the last time I genuinely cared about zip files was when I was putting Twisted on a tiny flash card to install in buses :).

-glyph




From glyph at twistedmatrix.com  Wed Nov  2 16:54:42 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 2 Nov 2011 18:54:42 -0400
Subject: [Twisted-Python] Prhaps 11.1rc2 should include #4669?
In-Reply-To: <1320237868.2042.93.camel@blake>
References: <1320237868.2042.93.camel@blake>
Message-ID: <42AF37AD-D321-4813-B4ED-9986327FBAB6@twistedmatrix.com>


On Nov 2, 2011, at 8:44 AM, Itamar Turner-Trauring wrote:

> It seems like keeping IOCP from being broken on win64 is worth
> integrating.

Did it work on win64 in 11.0?

If so, then this is a regression and needs to be fixed.

If not, I'd say this is just a good motivation to get done with 11.1 and get the ball rolling on an 11.2 ASAP! :)

-glyph




From glyph at twistedmatrix.com  Wed Nov  2 16:56:09 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 2 Nov 2011 18:56:09 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB0F774.30601@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>
	<4EB0F774.30601@imperial.ac.uk>
Message-ID: <6E0DFDED-002C-4BFC-9977-5FCF281F7944@twistedmatrix.com>


On Nov 2, 2011, at 3:55 AM, Phil Mayers wrote:

> But I'll note that most people I've seen crib from existing test code 
> during the early phases of TDD, tutorials or not - and if most test code 
> in Twisted uses the real reactor...

Thanks for volunteering to fix some of our existing tests, then!  There's been a real shortage of labor for that ;-).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111102/cc69ae3b/attachment.html>

From itamar at itamarst.org  Wed Nov  2 19:35:04 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 02 Nov 2011 21:35:04 -0400
Subject: [Twisted-Python] Prhaps 11.1rc2 should include #4669?
In-Reply-To: <42AF37AD-D321-4813-B4ED-9986327FBAB6@twistedmatrix.com>
References: <1320237868.2042.93.camel@blake>
	<42AF37AD-D321-4813-B4ED-9986327FBAB6@twistedmatrix.com>
Message-ID: <1320284104.2042.98.camel@blake>

On Wed, 2011-11-02 at 18:54 -0400, Glyph Lefkowitz wrote:
> On Nov 2, 2011, at 8:44 AM, Itamar Turner-Trauring wrote:
> 
> > It seems like keeping IOCP from being broken on win64 is worth
> > integrating.
> 
> Did it work on win64 in 11.0?
> 
> If so, then this is a regression and needs to be fixed.
> 
> If not, I'd say this is just a good motivation to get done with 11.1 and get the ball rolling on an 11.2 ASAP! :)

Thomas was talking about merging 11.1rc2 to current trunk...




From kevin.horn at gmail.com  Wed Nov  2 20:01:28 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 2 Nov 2011 21:01:28 -0500
Subject: [Twisted-Python] Slow PB imports
In-Reply-To: <0AB015A7-9A60-49CF-8EE8-743FCF0232CA@twistedmatrix.com>
References: <4EB10EA3.3030603@herox.net> <1320237370.2042.90.camel@blake>
	<20111102130112.17986.1579844527.divmod.xquotient.187@localhost.localdomain>
	<1320239413.2042.97.camel@blake>
	<0AB015A7-9A60-49CF-8EE8-743FCF0232CA@twistedmatrix.com>
Message-ID: <CA+U=zK3wsjFeM6VK62e8nRW6_K6uhZ4sE9NzsRfJ33tg3oDzUg@mail.gmail.com>

On Wed, Nov 2, 2011 at 5:51 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> I'd love to fix this
>
> -glyph
>
>
Is there a ticket?  Maybe there should be...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111102/9d86d12e/attachment.html>

From glyph at twistedmatrix.com  Wed Nov  2 20:23:25 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 2 Nov 2011 22:23:25 -0400
Subject: [Twisted-Python] Prhaps 11.1rc2 should include #4669?
In-Reply-To: <1320284104.2042.98.camel@blake>
References: <1320237868.2042.93.camel@blake>
	<42AF37AD-D321-4813-B4ED-9986327FBAB6@twistedmatrix.com>
	<1320284104.2042.98.camel@blake>
Message-ID: <3EFCA824-A65A-4EC2-9467-551F26D6D81E@twistedmatrix.com>


On Nov 2, 2011, at 9:35 PM, Itamar Turner-Trauring wrote:

> On Wed, 2011-11-02 at 18:54 -0400, Glyph Lefkowitz wrote:
>> On Nov 2, 2011, at 8:44 AM, Itamar Turner-Trauring wrote:
>> 
>>> It seems like keeping IOCP from being broken on win64 is worth
>>> integrating.
>> 
>> Did it work on win64 in 11.0?
>> 
>> If so, then this is a regression and needs to be fixed.
>> 
>> If not, I'd say this is just a good motivation to get done with 11.1 and get the ball rolling on an 11.2 ASAP! :)
> 
> Thomas was talking about merging 11.1rc2 to current trunk...

Hrm.  Looking at trunk, I guess we might be in a situation where we have to cherry-pick to get the regressions.

Here's what's happened since 11.1rc1, if anyone wants to object on the basis of a risky change:

<http://twistedmatrix.com/trac/log/trunk?action=stop_on_copy&mode=stop_on_copy&rev=33057&stop_rev=32950&limit=100>

My impressions is that some of these are frighteningly subtle, but those are mostly bugfixes in equally highly subtle (but wrong) win32 code; given the relatively improved state of the buildbots I don't have any concerns.  So I don't object, and anyway.

Ultimately, Thomas gets to make the call as the release manager anyway, though :).

-glyph


From p.mayers at imperial.ac.uk  Thu Nov  3 03:14:17 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 03 Nov 2011 09:14:17 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
 suite
In-Reply-To: <6E0DFDED-002C-4BFC-9977-5FCF281F7944@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>	<4EB0F774.30601@imperial.ac.uk>
	<6E0DFDED-002C-4BFC-9977-5FCF281F7944@twistedmatrix.com>
Message-ID: <4EB25B69.1080607@imperial.ac.uk>

On 11/02/2011 10:56 PM, Glyph Lefkowitz wrote:
>
> On Nov 2, 2011, at 3:55 AM, Phil Mayers wrote:
>
>> But I'll note that most people I've seen crib from existing test code
>> during the early phases of TDD, tutorials or not - and if most test code
>> in Twisted uses the real reactor...
>
> Thanks for volunteering to fix some of our existing tests, then! There's
> been a real shortage of labor for that ;-).

Is there a ticket/list/trac report for "make this test be like X"?



From exarkun at twistedmatrix.com  Thu Nov  3 06:40:14 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 03 Nov 2011 12:40:14 -0000
Subject: [Twisted-Python] Docs HTML suggestion/request for moving
	between	versions.
In-Reply-To: <4EA8274E.9070704@imperial.ac.uk>
References: <4EA8274E.9070704@imperial.ac.uk>
Message-ID: <20111103124014.17986.1462827444.divmod.xquotient.272@localhost.localdomain>

On 26 Oct, 03:29 pm, p.mayers at imperial.ac.uk wrote:
>Lately, I've taken to finding Twisted docs by writing:
>
>twisted.internet.task.Cooperator
>
>...into the Chrome bar'o'magic and hitting return to get the Google 
>hit.
>This is great, except that the resultant Google hits almost always 
>point
>me to the 8.2.0 HTML docs. 2nd hit is (currently) 11.0 docs.
>
>Obviously it's tricky to force Google to put "current" at the top! But
>could we maybe have a little <select> dropdown in the top-right that
>shows the version, and lets you pick a new one and have the page 
>reload?
>
>It strikes me that this would be useful in general, for flicking back
>and forward between two versions of the docs page for a given 
>method/API.

I've updated http://twistedmatrix.com/documents/8.0.0/api/ - compare it 
to the old http://twistedmatrix.com/documents/old-8.0.0/api/ for 
problems, please.  If it looks good, I can update all the other versions 
of the API documentation as well.

If you have style suggestions, please submit them as merge proposals to 
<lp:~twisted-dev/pydoctor/twisted-templates-2>.

Thanks,
Jean-Paul



From p.mayers at imperial.ac.uk  Thu Nov  3 07:04:09 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 03 Nov 2011 13:04:09 +0000
Subject: [Twisted-Python] Docs HTML suggestion/request for
 moving	between versions.
In-Reply-To: <20111103124014.17986.1462827444.divmod.xquotient.272@localhost.localdomain>
References: <4EA8274E.9070704@imperial.ac.uk>
	<20111103124014.17986.1462827444.divmod.xquotient.272@localhost.localdomain>
Message-ID: <4EB29149.4020309@imperial.ac.uk>

On 03/11/11 12:40, exarkun at twistedmatrix.com wrote:

> I've updated http://twistedmatrix.com/documents/8.0.0/api/ - compare it

Cool, that looks good, thanks!



From therve at free.fr  Thu Nov  3 08:03:09 2011
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Thu, 03 Nov 2011 10:03:09 -0400
Subject: [Twisted-Python] Second pre-release of Twisted 11.1.0
Message-ID: <4EB29F1D.900@free.fr>

 From the sunny land of Orlando, I'm pleased to announce the second 
pre-release of Twisted 11.1.

You can find the tarballs here:

     http://people.canonical.com/~therve/Twisted/11.1.0pre2/

Among the 17 bugs fixed since the last pre-release, a fix in the new TLS 
code in connection lost management, and an error fixed with IOCP under 
64bits Windows.

Please give it all the testing you can!

-- 
Thomas



From glyph at twistedmatrix.com  Thu Nov  3 10:10:10 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 3 Nov 2011 12:10:10 -0400
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <4EB25B69.1080607@imperial.ac.uk>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>	<1697D539-7C2A-4E0B-9D98-08F452FA6EF2@twistedmatrix.com>	<4EB0F774.30601@imperial.ac.uk>
	<6E0DFDED-002C-4BFC-9977-5FCF281F7944@twistedmatrix.com>
	<4EB25B69.1080607@imperial.ac.uk>
Message-ID: <25FDB00C-54ED-4B97-8554-F37D8C35DA81@twistedmatrix.com>


On Nov 3, 2011, at 5:14 AM, Phil Mayers wrote:

> On 11/02/2011 10:56 PM, Glyph Lefkowitz wrote:
>> 
>> On Nov 2, 2011, at 3:55 AM, Phil Mayers wrote:
>> 
>>> But I'll note that most people I've seen crib from existing test code
>>> during the early phases of TDD, tutorials or not - and if most test code
>>> in Twisted uses the real reactor...
>> 
>> Thanks for volunteering to fix some of our existing tests, then! There's
>> been a real shortage of labor for that ;-).
> 
> Is there a ticket/list/trac report for "make this test be like X"?

No, unfortunately.  A big part of the work here is finding and cataloguing the work that needs to be done.


From tobias.oberstein at tavendo.de  Thu Nov  3 11:33:24 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 3 Nov 2011 10:33:24 -0700
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY and
	RealDictCursor
Message-ID: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>

I am using Twisted adbapi, psycopg2 and PostgreSQL which works really great.

Now, there are 2 features I'd like to use in this context, which I've been
using before without Twisted.

I'm missing those.

Would be glad for any hints ..

If there is work to do to make those features happen, and it's doable for
non-Twisted-gods, then I'd also be willing to invest time/effort ...

Thanks,
Tobias



LISTEN/NOTIFY
============

Is a Postgres>=9 feature which allows one to asynchronously notify a database client
from _within_ the database (i.e. from pgPLSQL).

http://www.postgresql.org/docs/9.1/static/sql-notify.html
http://initd.org/psycopg/docs/advanced.html#asynchronous-notifications

On the Python side, it'll do a select() on the TCP underlying the connection to Postgres.

adbapi assumes DBAPI, and above is a non-standard extension.

Now, what would be a sensible approach to use that with Twisted?

Own thread?
How do I integrate that into a standard Twisted application service hierarchy?
Or somehow extend adbapi?


psycopg2.extras.RealDictCursor
========================

We have a convention that all database access must be exclusively via
stored procedures with all IN and all OUT parameters named.

Outside the context of Twisted, we use that in conjunction with

# Real Dict Cursor (returns a Dict which can be referenced via named bracket access, or offset)

dict_cursor = db.cursor(cursor_factory = psycopg2.extras.RealDictCursor)
dict_cursor.execute("SELECT first_name, last_name, email FROM user.get_user(%s)", (user_id,))
my_row = dict_cursor.fetchone()

=>

{'first_name': 'John', 'last_name': 'Doe', 'email': 'john at doe.com'}

Is there a way to do something like this when using

self.dbpool.runInteraction

or otherwise?

Setting the "cursor factory" to be used?

On the other hand, the txn given to the fun provided with runInteraction already is somehow dressed up, right?




From tobias.oberstein at tavendo.de  Thu Nov  3 12:58:48 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 3 Nov 2011 11:58:48 -0700
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY
	and	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>

after actually looking at the adbapi.py code, it's quite accessible, so I guess doing

> dict_cursor = db.cursor(cursor_factory = psycopg2.extras.RealDictCursor)

would entail forwarding the desired cursor factory to here

https://github.com/powdahound/twisted/blob/master/twisted/enterprise/adbapi.py#L106

I'll get that done.

btw: are there plans to get Twisted master repo from svn to git?

==

so whats left is the LISTEN/NOTIFY stuff .. any ideas?
 



From glyph at twistedmatrix.com  Thu Nov  3 13:21:21 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 3 Nov 2011 15:21:21 -0400
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY and
	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>

On Nov 3, 2011, at 2:58 PM, Tobias Oberstein wrote:

> btw: are there plans to get Twisted master repo from svn to git?

No; the eventual plan is to move to bzr.  This is happening very slowly though :).

By the way, the official Twisted git mirror _should_ be at <https://github.com/twisted/twisted>.  It looks like nobody's updating that, though.  Since people seem to keep using powdahound's mirror, perhaps we should just ask powdahound to do the updating?





From exarkun at twistedmatrix.com  Thu Nov  3 13:40:54 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 03 Nov 2011 19:40:54 -0000
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY
	and	RealDictCursor
In-Reply-To: <8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
Message-ID: <20111103194054.17986.1085903964.divmod.xquotient.285@localhost.localdomain>

On 07:21 pm, glyph at twistedmatrix.com wrote:
>On Nov 3, 2011, at 2:58 PM, Tobias Oberstein wrote:
>>btw: are there plans to get Twisted master repo from svn to git?
>
>No; the eventual plan is to move to bzr.  This is happening very slowly 
>though :).
>
>By the way, the official Twisted git mirror _should_ be at 
><https://github.com/twisted/twisted>.  It looks like nobody's updating 
>that, though.  Since people seem to keep using powdahound's mirror, 
>perhaps we should just ask powdahound to do the updating?

I wonder why it's so much harder to update one repository on github than 
it is to update another.

Jean-Paul



From tobias.oberstein at tavendo.de  Thu Nov  3 13:54:08 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 3 Nov 2011 12:54:08 -0700
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY
	and	RealDictCursor
In-Reply-To: <8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CDED5@EXVMBX020-12.exch020.serverdata.net>

> > btw: are there plans to get Twisted master repo from svn to git?
> 
> No; the eventual plan is to move to bzr.  This is happening very slowly though
> :).
> 
> By the way, the official Twisted git mirror _should_ be at
> <https://github.com/twisted/twisted>.  It looks like nobody's updating that,
> though.  Since people seem to keep using powdahound's mirror, perhaps we
> should just ask powdahound to do the updating?

the readme at

https://github.com/powdahound/twisted

says: "Automatically updated every 15 minutes".

so that could be some script pulling svn and pushing to github.

@Garret: is that right? are you hosting and cron'jobbing that? 





From mostawesomedude at gmail.com  Thu Nov  3 14:54:04 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Thu, 3 Nov 2011 13:54:04 -0700
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY and
	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDED5@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CDED5@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CALiqSLdAVjqNSM3VL8avqNKv2hLEujtX9g5c0c+=QoTbkoDACw@mail.gmail.com>

I should point out that git-svn isn't happy about Twisted's repo, so the
git mirror is non-trivial to maintain. Last time I tried, I got quite a few
curious errors.

Sending from a mobile, pardon my terseness. ~ C.
On Nov 3, 2011 12:56 PM, "Tobias Oberstein" <tobias.oberstein at tavendo.de>
wrote:

> > > btw: are there plans to get Twisted master repo from svn to git?
> >
> > No; the eventual plan is to move to bzr.  This is happening very slowly
> though
> > :).
> >
> > By the way, the official Twisted git mirror _should_ be at
> > <https://github.com/twisted/twisted>.  It looks like nobody's updating
> that,
> > though.  Since people seem to keep using powdahound's mirror, perhaps we
> > should just ask powdahound to do the updating?
>
> the readme at
>
> https://github.com/powdahound/twisted
>
> says: "Automatically updated every 15 minutes".
>
> so that could be some script pulling svn and pushing to github.
>
> @Garret: is that right? are you hosting and cron'jobbing that?
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111103/0828356a/attachment.html>

From tobias.oberstein at tavendo.de  Thu Nov  3 16:18:03 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 3 Nov 2011 15:18:03 -0700
Subject: [Twisted-Python] adbapi / Postgres :
	LISTEN/NOTIFY	and	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CDFBC@EXVMBX020-12.exch020.serverdata.net>

Ok, should anyone else need this, here is working code:

 
class PostgresListenService(twisted.application.service.Service):
   """
   PostgreSQL LISTEN/NOTIFY as Twisted service.
   
   http://initd.org/psycopg/docs/advanced.html#asynchronous-notifications
   """

   def __init__(self, dsn, channel, timeout = 1):
      self.dsn = dsn
      self.channel = channel
      self.timeout = 1

   def notify(self, channel, payload):
      log.msg("NOTIFY on channel %s with payload %s, delivered on thread %s" % (channel, payload, thread.get_ident()))

   def run(self):
      log.msg("LISTEN on channel %s, running on thread %s" % (self.channel, thread.get_ident()))
      conn = psycopg2.connect(self.dsn)
      conn.set_isolation_level(psycopg2.extensions.ISOLATION_LEVEL_AUTOCOMMIT)
      curs = conn.cursor()
      curs.execute("LISTEN %s;" % self.channel)
      while not self.stopped:
         if select.select([conn], [], [], self.timeout) == ([], [], []):
            pass
         else:
            conn.poll()
            while conn.notifies:
               notify = conn.notifies.pop()
               reactor.callFromThread(self.notify, notify.channel, notify.payload)

   def startService(self):
      self.stopped = False
      reactor.callInThread(self.run)
      Service.startService(self)

   def stopService(self):
      self.stopped = True
      Service.stopService(self)




From glyph at twistedmatrix.com  Thu Nov  3 16:54:11 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 3 Nov 2011 18:54:11 -0400
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY	and
	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDFBC@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDFBC@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <47D7E0D3-60F7-4650-8768-B46A061DD254@twistedmatrix.com>

On Nov 3, 2011, at 6:18 PM, Tobias Oberstein wrote:

>      while not self.stopped:
>         if select.select([conn], [], [], self.timeout) == ([], [], []):
>            pass

Please note that on high-volume servers, this is problematic, as 'conn' may be higher than the maximum file descriptor pollable by select().  So if you've tuned everything to be smart, use a high-volume reactor like epoll, and set all your ulimits correctly, you will still get tracebacks out of this code depending on random accidents of ordering.

This part of the logic might therefore be better implemented as a IReadDescriptor/IWriteDescriptor provider (i.e. a subclass of FileDescriptor), assuming you can ask your postgres binding to give you non-blocking reads and writes.  You're certainly not the first person to make this mistake though, <http://divillo.com/> gives the same advice :).

Also this would probably make a better patch for txpostgres <https://launchpad.net/txpostgres> than for Twisted itself, since support depends on specific database bindings.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111103/aa3cbe87/attachment.html>

From ivan at ludios.org  Thu Nov  3 16:54:58 2011
From: ivan at ludios.org (Ivan Kozik)
Date: Thu, 3 Nov 2011 22:54:58 +0000
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY and
	RealDictCursor
In-Reply-To: <CALiqSLdAVjqNSM3VL8avqNKv2hLEujtX9g5c0c+=QoTbkoDACw@mail.gmail.com>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<8D34147E-6D98-4B03-8410-856D5233AEDC@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CDED5@EXVMBX020-12.exch020.serverdata.net>
	<CALiqSLdAVjqNSM3VL8avqNKv2hLEujtX9g5c0c+=QoTbkoDACw@mail.gmail.com>
Message-ID: <CAKyntiJVhO3zoo-bHjmBpoS+fa9m=zfjAONfSFDgwTwwBDWs4g@mail.gmail.com>

On Thu, Nov 3, 2011 at 20:54, Corbin Simpson <mostawesomedude at gmail.com> wrote:
> I should point out that git-svn isn't happy about Twisted's repo, so the git
> mirror is non-trivial to maintain. Last time I tried, I got quite a few
> curious errors.

I keep a tarball of a git-svn clone of Twisted at
https://ludios.org/mirror/ and update it several times a year.  Anyone
can grab it and update their copy with:

git svn fetch
git checkout trunk

OR

git svn rebase


On Windows, first edit .git/config and set `filemode = false` to avoid
problems with executable bits.

Ivan



From tobias.oberstein at tavendo.de  Thu Nov  3 17:40:04 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 3 Nov 2011 16:40:04 -0700
Subject: [Twisted-Python] adbapi / Postgres :
	LISTEN/NOTIFY	and	RealDictCursor
In-Reply-To: <47D7E0D3-60F7-4650-8768-B46A061DD254@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDFBC@EXVMBX020-12.exch020.serverdata.net>
	<47D7E0D3-60F7-4650-8768-B46A061DD254@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CDFCF@EXVMBX020-12.exch020.serverdata.net>

Hello Glyph,

thank's a lot for this advice! I thought I would have done right, and Twisted-style .. but the select FD trap wasn't on my radar.


The https://github.com/wulczer/txpostgres is very interesting. Guess I need to learn about interfaces.IReadWriteDescriptor
first to grasp it.

Regarding the broader picture: I cannot say I understand what you say completely.

" maximum file descriptor pollable by select()"

Is this *nix in general?

Does that only apply to select.select?

Or also: select.poll(), select.epoll(), select.kqueue() ?

How would implementing an IReadDescriptor circumvent the problem? By not using select(), but poll/epoll/kqeue?

In any case: we're running FreeBSD, so epoll() is out.

Is there even a kqueue-based Twisted reactor?

Sorry if helping me spawns new questions,

Thanks!
Tobias


for reference (don't know if it applies here):
psycopg since v2.2 has
http://initd.org/psycopg/docs/advanced.html#asynchronous-support


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph
Gesendet: Donnerstag, 3. November 2011 23:54
An: Twisted general discussion
Betreff: Re: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY and RealDictCursor

On Nov 3, 2011, at 6:18 PM, Tobias Oberstein wrote:


     while not self.stopped:
        if select.select([conn], [], [], self.timeout) == ([], [], []):
           pass


Please note that on high-volume servers, this is problematic, as 'conn' may be higher than the maximum file descriptor pollable by select().  So if you've tuned everything to be smart, use a high-volume reactor like epoll, and set all your ulimits correctly, you will still get tracebacks out of this code depending on random accidents of ordering.

This part of the logic might therefore be better implemented as a IReadDescriptor/IWriteDescriptor provider (i.e. a subclass of FileDescriptor), assuming you can ask your postgres binding to give you non-blocking reads and writes.  You're certainly not the first person to make this mistake though, <http://divillo.com/> gives the same advice :).

Also this would probably make a better patch for txpostgres <https://launchpad.net/txpostgres> than for Twisted itself, since support depends on specific database bindings.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111103/7cb53792/attachment.html>

From glyph at twistedmatrix.com  Thu Nov  3 20:47:02 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 3 Nov 2011 22:47:02 -0400
Subject: [Twisted-Python] adbapi / Postgres : LISTEN/NOTIFY	and
	RealDictCursor
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CDFCF@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CDDC6@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDE64@EXVMBX020-12.exch020.serverdata.net>
	<634914A010D0B943A035D226786325D42D0C0CDFBC@EXVMBX020-12.exch020.serverdata.net>
	<47D7E0D3-60F7-4650-8768-B46A061DD254@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CDFCF@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <9C152DE3-C60C-4C2F-9B38-CC0D644FC8B0@twistedmatrix.com>


On Nov 3, 2011, at 7:40 PM, Tobias Oberstein wrote:

> Regarding the broader picture: I cannot say I understand what you say completely.
> 
> "maximum file descriptor pollable by select()"
> 
> Is this *nix in general?
> 
> Does that only apply to select.select?

Yep, only to select.select.  Search around for FD_SETSIZE for more information.

> Or also: select.poll(), select.epoll(), select.kqueue() ?

But those may not be available consistently, so you shouldn't hard-code it to use one of those either :).

> How would implementing an IReadDescriptor circumvent the problem? By not using select(), but poll/epoll/kqeue?

It circumvents the problem by allowing whatever mechanism Twisted is using for multiplexing, rather than always using select().  So you still have to select a reactor that actually supports more than  FD_SETSIZE sockets.

> In any case: we're running FreeBSD, so epoll() is out.
> 
> Is there even a kqueue-based Twisted reactor?

Yes... ish.  More detail here: <http://twistedmatrix.com/trac/ticket/1918>.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111103/18366c1c/attachment.html>

From tobias.oberstein at tavendo.de  Fri Nov  4 08:11:11 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 4 Nov 2011 07:11:11 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>

> Is there even a kqueue-based Twisted reactor?
> 
> Yes... ish.  More detail here: <http://twistedmatrix.com/trac/ticket/1918>.

Hi Glyph,

first, thanks as always!

The pykqueue 1.3 and 2.0 referenced in that ticket seem to be no longer
maintained.

On the other hand, Python has built-in support for kqueue since Python 2.6
in the select module.

I have adjusted the Twisted kqreactor to select.kqueue and made a package:

https://github.com/oberstet/txkqreactor

I have tested that reactor successfully with Autobahn WebSockets on FreeBSD 8.2
(running as a VirtualBox x86 VM). When I'm home later, I can check out Mac.

Doing the Autobahn tests helped me finding the only non-canonical change required

https://github.com/oberstet/txkqreactor/commit/27302b4f643cd3967289ff11d811309a0b05f630

Is there any regression/test/stresstest I could run to verify the stuff actually works?

The Autobahn WS tests do quite some stuff, but they do not test concurrency and
high connections numbers ..

Cheers,
Tobias



From exarkun at twistedmatrix.com  Fri Nov  4 08:39:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 04 Nov 2011 14:39:56 -0000
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20111104143956.17986.406115027.divmod.xquotient.313@localhost.localdomain>

On 02:11 pm, tobias.oberstein at tavendo.de wrote:
>>Is there even a kqueue-based Twisted reactor?
>>
>>Yes... ish. �More detail here: 
>><http://twistedmatrix.com/trac/ticket/1918>.
>
>Hi Glyph,
>
>first, thanks as always!
>
>The pykqueue 1.3 and 2.0 referenced in that ticket seem to be no longer
>maintained.
>
>On the other hand, Python has built-in support for kqueue since Python 
>2.6
>in the select module.
>
>I have adjusted the Twisted kqreactor to select.kqueue and made a 
>package:
>
>https://github.com/oberstet/txkqreactor
>
>I have tested that reactor successfully with Autobahn WebSockets on 
>FreeBSD 8.2
>(running as a VirtualBox x86 VM). When I'm home later, I can check out 
>Mac.
>
>Doing the Autobahn tests helped me finding the only non-canonical 
>change required
>
>https://github.com/oberstet/txkqreactor/commit/27302b4f643cd3967289ff11d811309a0b05f630
>
>Is there any regression/test/stresstest I could run to verify the stuff 
>actually works?

You can run the Twisted test suite:

    trial --reactor kqueue twisted

(assuming you've hooked up the name "kqueue" to your new version of the 
kqueue reactor).

This is what needs to work in order for the new reactor to be added to 
Twisted itself (ie, for us to resolve #1918).

Jean-Paul
>The Autobahn WS tests do quite some stuff, but they do not test 
>concurrency and
>high connections numbers ..
>
>Cheers,
>Tobias
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From tobias.oberstein at tavendo.de  Fri Nov  4 09:54:36 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 4 Nov 2011 08:54:36 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <20111104143956.17986.406115027.divmod.xquotient.313@localhost.localdomain>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<20111104143956.17986.406115027.divmod.xquotient.313@localhost.localdomain>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE1CA@EXVMBX020-12.exch020.serverdata.net>

> >Is there any regression/test/stresstest I could run to verify the stuff
> >actually works?
> 
> You can run the Twisted test suite:
> 
>     trial --reactor kqueue twisted
> 
> (assuming you've hooked up the name "kqueue" to your new version of the
> kqueue reactor).
> 
> This is what needs to work in order for the new reactor to be added to
> Twisted itself (ie, for us to resolve #1918).

Hello Jean-Paul,

I've ran the new one on a Python 2.7.1/Twisted 11.0 (stock) by patching

twisted_reactor.py

#kqueue = Reactor(
#    'kqueue', 'twisted.internet.kqreactor', 'kqueue(2)-based reactor.')
kqueue = Reactor(
    'kqueue', 'txkqreactor.kqreactor', 'NEW kqueue(2)-based reactor.')

and running both that, and the select() reactor.

Uploaded all logs to the ticket.

The diff between both:

http://twistedmatrix.com/trac/attachment/ticket/1918/select_vs_new_kqueue_diff.log

Summary:

< Ran 6515 tests in 102.948s
---
> Ran 6515 tests in 343.371s
9292c9354
< FAILED (skips=977, expectedFailures=11, failures=1, errors=7, successes=5519)
---
> FAILED (skips=977, expectedFailures=11, failures=2, errors=13, successes=5516)

< = select
> = new kqueue

Is that good, bad or ugly?



From kevin.horn at gmail.com  Fri Nov  4 10:49:03 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 4 Nov 2011 11:49:03 -0500
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>

On Fri, Nov 4, 2011 at 9:11 AM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> > Is there even a kqueue-based Twisted reactor?
> >
> > Yes... ish.  More detail here: <
> http://twistedmatrix.com/trac/ticket/1918>.
>
> Hi Glyph,
>
> first, thanks as always!
>
> The pykqueue 1.3 and 2.0 referenced in that ticket seem to be no longer
> maintained.
>
> On the other hand, Python has built-in support for kqueue since Python 2.6
> in the select module.
>
> I have adjusted the Twisted kqreactor to select.kqueue and made a package:
>
> https://github.com/oberstet/txkqreactor
>
> I have tested that reactor successfully with Autobahn WebSockets on
> FreeBSD 8.2
> (running as a VirtualBox x86 VM). When I'm home later, I can check out Mac.
>
> Doing the Autobahn tests helped me finding the only non-canonical change
> required
>
>
> https://github.com/oberstet/txkqreactor/commit/27302b4f643cd3967289ff11d811309a0b05f630
>
> Is there any regression/test/stresstest I could run to verify the stuff
> actually works?
>
> The Autobahn WS tests do quite some stuff, but they do not test
> concurrency and
> high connections numbers ..
>
> Cheers,
> Tobias
>
>
This is awesome, BUT...

...would probably have to be distributed outside of Twisted proper (at
least for the moment), as Twisted supports versions of Python < 2.6, where
select.kqueue would not exist.

(Maybe this is your plan, but I'm just pointing it out.)

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111104/4a44c848/attachment.html>

From itamar at itamarst.org  Fri Nov  4 10:54:31 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 4 Nov 2011 12:54:31 -0400
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
Message-ID: <727c45fff3d8f44faec0621070f8e50d.squirrel@webmail.zoteca.com>

> This is awesome, BUT...
>
> ...would probably have to be distributed outside of Twisted proper (at
> least for the moment), as Twisted supports versions of Python < 2.6, where
> select.kqueue would not exist.
>
> (Maybe this is your plan, but I'm just pointing it out.)

We've said e.g. Windows only supports Python 2.5 or later even when
everything else supports Python 2.4. And we have inlineCallbacks which
only runs on Python 2.5 or later. Saying "kqueue reactor only works on
Python 2.6 and later" seems fine to me.

-Itamar




From exarkun at twistedmatrix.com  Fri Nov  4 11:00:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 04 Nov 2011 17:00:24 -0000
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
Message-ID: <20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>

On 04:49 pm, kevin.horn at gmail.com wrote:
>On Fri, Nov 4, 2011 at 9:11 AM, Tobias Oberstein <
>tobias.oberstein at tavendo.de> wrote:
>> > Is there even a kqueue-based Twisted reactor?
>> >
>> > Yes... ish.  More detail here: <
>>http://twistedmatrix.com/trac/ticket/1918>.
>>
>>Hi Glyph,
>>
>>first, thanks as always!
>>
>>The pykqueue 1.3 and 2.0 referenced in that ticket seem to be no 
>>longer
>>maintained.
>>
>>On the other hand, Python has built-in support for kqueue since Python 
>>2.6
>>in the select module.
>>
>>I have adjusted the Twisted kqreactor to select.kqueue and made a 
>>package:
>>
>>https://github.com/oberstet/txkqreactor
>>
>>I have tested that reactor successfully with Autobahn WebSockets on
>>FreeBSD 8.2
>>(running as a VirtualBox x86 VM). When I'm home later, I can check out 
>>Mac.
>>
>>Doing the Autobahn tests helped me finding the only non-canonical 
>>change
>>required
>>
>>
>>https://github.com/oberstet/txkqreactor/commit/27302b4f643cd3967289ff11d811309a0b05f630
>>
>>Is there any regression/test/stresstest I could run to verify the 
>>stuff
>>actually works?
>>
>>The Autobahn WS tests do quite some stuff, but they do not test
>>concurrency and
>>high connections numbers ..
>>
>>Cheers,
>>Tobias
>This is awesome, BUT...
>
>...would probably have to be distributed outside of Twisted proper (at
>least for the moment), as Twisted supports versions of Python < 2.6, 
>where
>select.kqueue would not exist.
>
>(Maybe this is your plan, but I'm just pointing it out.)

It would be fine for Twisted to offer this feature only on Python 2.6 
and newer.

Jean-Paul



From tobias.oberstein at tavendo.de  Fri Nov  4 11:11:38 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 4 Nov 2011 10:11:38 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>

> >This is awesome, BUT...
> >
> >...would probably have to be distributed outside of Twisted proper (at
> >least for the moment), as Twisted supports versions of Python < 2.6,
> >where select.kqueue would not exist.
> >
> >(Maybe this is your plan, but I'm just pointing it out.)
> 
> It would be fine for Twisted to offer this feature only on Python 2.6 and
> newer.

Would be great of course to have it in Twisted.

In the meantime, I've packaged it up

http://pypi.python.org/pypi/txkqreactor

Caveat: as attached to the ticket, there are some errs when running trial
which don't happen with select reactor.

Whether those are significant I can't tell .. if there is anything I can do to
clarify (like i.e. running on non-virtualized hardware FreeBSD) let me know.






From glyph at twistedmatrix.com  Sat Nov  5 00:07:04 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 5 Nov 2011 02:07:04 -0400
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>


On Nov 4, 2011, at 1:11 PM, Tobias Oberstein wrote:

>>> This is awesome, BUT...
>>> 
>>> ...would probably have to be distributed outside of Twisted proper (at
>>> least for the moment), as Twisted supports versions of Python < 2.6,
>>> where select.kqueue would not exist.
>>> 
>>> (Maybe this is your plan, but I'm just pointing it out.)
>> 
>> It would be fine for Twisted to offer this feature only on Python 2.6 and
>> newer.
> 
> Would be great of course to have it in Twisted.

Yes :).

> In the meantime, I've packaged it up
> 
> http://pypi.python.org/pypi/txkqreactor

Thanks, but we should really try to integrate it ASAP. :)

> Caveat: as attached to the ticket, there are some errs when running trial
> which don't happen with select reactor.

Do you think you could start fixing some of those errors?  Do they make sense to you?  If you're interested in moving this ticket forward, I'm sure that folks on this mailing list (me included) would love to provide you some guidance.

> Whether those are significant I can't tell ..

If they're failing tests, they're significant :).  In order for stuff to be added to Twisted, the full test suite needs to run.

> if there is anything I can do to clarify (like i.e. running on non-virtualized hardware FreeBSD) let me know.

Have you run the tests on OS X as well?

-glyph




From tobias.oberstein at tavendo.de  Sat Nov  5 05:48:52 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 5 Nov 2011 04:48:52 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>

> > if there is anything I can do to clarify (like i.e. running on non-virtualized
> hardware FreeBSD) let me know.
> 
> Have you run the tests on OS X as well?

I'll do that.

> > Caveat: as attached to the ticket, there are some errs when running
> > trial which don't happen with select reactor.
> 
> Do you think you could start fixing some of those errors?  Do they make

I've looked at the logs in more detail, the error _diff_ between select/kqueue
yields:

twisted.test.test_tcp.HalfCloseBuggyApplicationTests.test_readNotificationRaises
twisted.test.test_tcp.HalfCloseTestCase.testCloseWriteCloser
twisted.test.test_tcp.HalfCloseTestCase.testWriteCloseNotification

which all seem to be testing TCP Half-Close.

I've looked at the case code .. guess I can grasp that after reading some background.

But I have no clue where to start "fixing" / looking for why this works with
the select reactor vs kqueue.

> sense to you?  If you're interested in moving this ticket forward, I'm sure that
> folks on this mailing list (me included) would love to provide you some
> guidance.
> 

Ok, will see what I can do.

Need some advice/hints though.

Generally, there are a couple of skipped tests missing modules (i.e. pycrypto)
which I could install. Should I do that, or are those not necessary?
Note, that there are packages I could, but would not like to install: GTK etc.

Then, whats the difference between FAIL and ERROR?

Then, there are a couple of tests which are skipped because

xxx_KQueueReactor
No module named kqsyscall

The kqsyscall should now be select.kqueue/kevent .. so I guess those
test cases needed to be adapted as well, right?

Then, baseline. I've run the trial using select reactor in the expectation of
finding all tests passed.

This is not the case, there are a couple of failed ones. Those are also failed
with the kqueue reactor, so I need to know whether I need to inspect those
or those are problems unrelated to the reactor, but of general (platform?) nature.

[1]
twisted.internet.test.test_posixprocess
  FileDescriptorTests
    test_expectedFDs ...                                                 [FAIL]

[2]
twisted.internet.test.test_process
  PTYProcessTestsBuilder_PollReactor
    test_openFileDescriptors ...                                        [ERROR]
  PTYProcessTestsBuilder_SelectReactor
    test_openFileDescriptors ...                                        [ERROR]
  ProcessTestsBuilder_PollReactor
    test_openFileDescriptors ...                                        [ERROR]
  ProcessTestsBuilder_SelectReactor
    test_openFileDescriptors ...                                        [ERROR]

[3]
twisted.python.test.test_components
  RegistrationTestCase
    test_duplicateAdapterForInterfaceAllowed ...                        [ERROR]
    test_registerAdapterForInterface ...                                [ERROR]
    test_subclassAdapterRegistrationForInterface ...                    [ERROR]

Now, [2] could be a consequence of [3], since they all fail because of

exceptions.ValueError: an adapter (<function <lambda> at 0x2c0dc41c>) was already registered.

See:

twisted.internet.test.test_process.PTYProcessTestsBuilder_PollReactor.test_openFileDescriptors
twisted.internet.test.test_process.PTYProcessTestsBuilder_SelectReactor.test_openFileDescriptors
twisted.internet.test.test_process.ProcessTestsBuilder_PollReactor.test_openFileDescriptors
twisted.internet.test.test_process.ProcessTestsBuilder_SelectReactor.test_openFileDescriptors
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 351, in test_duplicateAdapterForInterfaceAllowed
    return self._duplicateAdapterForClassOrInterfaceAllowed(TheOriginal)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 312, in _duplicateAdapterForClassOrInterfaceAllowed
    components.registerAdapter(firstAdapter, original, TheInterface)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/components.py", line 93, in registerAdapter
    raise ValueError("an adapter (%s) was already registered." % (factory, ))
exceptions.ValueError: an adapter (<function <lambda> at 0x2c0dc41c>) was already registered.

twisted.python.test.test_components.RegistrationTestCase.test_duplicateAdapterForInterfaceAllowed
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 268, in test_registerAdapterForInterface
    return self._registerAdapterForClassOrInterface(TheOriginal)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 245, in _registerAdapterForClassOrInterface
    components.registerAdapter(adapter, original, TheInterface)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/components.py", line 93, in registerAdapter
    raise ValueError("an adapter (%s) was already registered." % (factory, ))
exceptions.ValueError: an adapter (<function <lambda> at 0x2c0dc41c>) was already registered.

twisted.python.test.test_components.RegistrationTestCase.test_registerAdapterForInterface
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 423, in test_subclassAdapterRegistrationForInterface
    return self._subclassAdapterRegistrationForClassOrInterface(TheOriginal)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/test/test_components.py", line 396, in _subclassAdapterRegistrationForClassOrInterface
    components.registerAdapter(firstAdapter, original, TheInterface)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/components.py", line 93, in registerAdapter
    raise ValueError("an adapter (%s) was already registered." % (factory, ))
exceptions.ValueError: an adapter (<function <lambda> at 0x2c0dc41c>) was already registered.

twisted.python.test.test_components.RegistrationTestCase.test_subclassAdapterRegistrationForInterface

=======

And [1]:

twisted.internet.test.test_posixprocess.FileDescriptorTests.test_expectedFDs
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/_baseprocess.py", line 60, in maybeCallProcessEnded
    proto.processEnded(Failure(reason))
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/test/test_process.py", line 289, in processEnded
    checkOutput("".join(self.output))
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/test/test_process.py", line 276, in checkOutput
    self.assertEquals('[0, 1, 2, 3]', output)
twisted.trial.unittest.FailTest: not equal:
a = '[0, 1, 2, 3]'
b = 'xrange(256)'


**********************************************

Now, for the kqeue reactor, the following _additional_ errors appear:

twisted.test.test_tcp
  HalfCloseBuggyApplicationTests
    test_readNotificationRaises ...                                      [FAIL]
  HalfCloseTestCase
    testCloseWriteCloser ...                                               [ERROR]
    testWriteCloseNotification ...                                      [ERROR]


twisted.test.test_tcp.HalfCloseBuggyApplicationTests.test_readNotificationRaises
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/_baseprocess.py", line 60, in maybeCallProcessEnded
    proto.processEnded(Failure(reason))
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/test/test_process.py", line 289, in processEnded
    checkOutput("".join(self.output))
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/test/test_process.py", line 276, in checkOutput
    self.assertEquals('[0, 1, 2, 3]', output)
twisted.trial.unittest.FailTest: not equal:
a = '[0, 1, 2, 3]'
b = 'xrange(256)'

===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError: <twisted.test.test_tcp.HalfCloseTestCase testMethod=testCloseWriteCloser> (testCloseWriteCloser) still running at 120.0 secs

twisted.test.test_tcp.HalfCloseTestCase.testCloseWriteCloser
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.trial.util.DirtyReactorAggregateError: Reactor was unclean.
DelayedCalls: (set twisted.internet.base.DelayedCall.debug = True to debug)
<DelayedCall 0x29c0462c [-6.91413879395e-05s] called=0 cancelled=0 LoopingCall<0>(check, *(), **{})()>

twisted.test.test_tcp.HalfCloseTestCase.testCloseWriteCloser
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.trial.util.DirtyReactorAggregateError: Reactor was unclean.
Selectables:
<<class 'twisted.internet.tcp.Port'> of twisted.test.test_tcp.MyHCFactory on 53746>

twisted.test.test_tcp.HalfCloseTestCase.testCloseWriteCloser
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError: <twisted.test.test_tcp.HalfCloseTestCase testMethod=testWriteCloseNotification> (testWriteCloseNotification) still running at 120.0 secs

twisted.test.test_tcp.HalfCloseTestCase.testWriteCloseNotification
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/test/test_tcp.py", line 1602, in tearDown
    self.assertEquals(self.client.closed, 0)
twisted.trial.unittest.FailTest: not equal:
a = 1
b = 0


twisted.test.test_tcp.HalfCloseTestCase.testWriteCloseNotification
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.trial.util.DirtyReactorAggregateError: Reactor was unclean.
DelayedCalls: (set twisted.internet.base.DelayedCall.debug = True to debug)
<DelayedCall 0x2bf7f4ac [-6.29425048828e-05s] called=0 cancelled=0 LoopingCall<0>(check, *(), **{})()>

twisted.test.test_tcp.HalfCloseTestCase.testWriteCloseNotification






From tobias.oberstein at tavendo.de  Sat Nov  5 06:01:40 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 5 Nov 2011 05:01:40 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <727c45fff3d8f44faec0621070f8e50d.squirrel@webmail.zoteca.com>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<727c45fff3d8f44faec0621070f8e50d.squirrel@webmail.zoteca.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE427@EXVMBX020-12.exch020.serverdata.net>

> We've said e.g. Windows only supports Python 2.5 or later even when
> everything else supports Python 2.4. And we have inlineCallbacks which only
> runs on Python 2.5 or later. Saying "kqueue reactor only works on Python 2.6
> and later" seems fine to me.

For completeness: there seem to be 2 packages providing the select.kqueue/epoll
interface backported for Python 2.3-2.5:

http://pypi.python.org/pypi/select26/0.1a3
http://pypi.python.org/pypi/select_backport/0.2

However, both seem to be based on Python svn at some point in time, and not
actively maintained.



From itamar at itamarst.org  Sat Nov  5 06:12:36 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 05 Nov 2011 08:12:36 -0400
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <1320495156.2042.100.camel@blake>

On Sat, 2011-11-05 at 04:48 -0700, Tobias Oberstein wrote:
> Then, whats the difference between FAIL and ERROR?

Fail means an assertion failed. Error means an unexpected exception was
throwhn.

> Then, there are a couple of tests which are skipped because
> 
> xxx_KQueueReactor
> No module named kqsyscall
> 
> The kqsyscall should now be select.kqueue/kevent .. so I guess those
> test cases needed to be adapted as well, right?

Yes.

> Then, baseline. I've run the trial using select reactor in the expectation of
> finding all tests passed.
> 
> This is not the case, there are a couple of failed ones. Those are also failed
> with the kqueue reactor, so I need to know whether I need to inspect those
> or those are problems unrelated to the reactor, but of general (platform?) nature.

Are you using Twisted 11? Many of these issues are, if I'm not mistaken,
fixed in trunk (though perhaps not all). So trunk is probably a better
baseline to work off of.




From tobias.oberstein at tavendo.de  Sat Nov  5 12:46:03 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 5 Nov 2011 11:46:03 -0700
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <1320495156.2042.100.camel@blake>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
	<1320495156.2042.100.camel@blake>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE449@EXVMBX020-12.exch020.serverdata.net>

> > Then, baseline. I've run the trial using select reactor in the
> > expectation of finding all tests passed.
> >
> > This is not the case, there are a couple of failed ones. Those are
> > also failed with the kqueue reactor, so I need to know whether I need
> > to inspect those or those are problems unrelated to the reactor, but of
> general (platform?) nature.
> 
> Are you using Twisted 11? Many of these issues are, if I'm not mistaken,
> fixed in trunk (though perhaps not all). So trunk is probably a better baseline
> to work off of.

Ok, I'm using trunk now.

1)
The errors in

twisted.python.test.test_components

are gone.

2)
The errors in

twisted.internet.test.test_posixprocess
twisted.internet.test.test_process

are still there ... and they show up for select, poll and kqueue reactors.

They all somehow relate to "open FDs":

twisted.internet.test.test_posixprocess
  FileDescriptorTests
    test_expectedFDs ...                                                 [FAIL]

twisted.internet.test.test_process
  PTYProcessTestsBuilder_KQueueReactor
    test_openFileDescriptors ...                                        [ERROR]
  PTYProcessTestsBuilder_PollReactor
    test_openFileDescriptors ...                                        [ERROR]
  PTYProcessTestsBuilder_SelectReactor
    test_openFileDescriptors ...                                        [ERROR]
ProcessTestsBuilder_SelectReactor
    test_openFileDescriptors ...                                        [ERROR]

This might more a FreeBSD related thing. ?

3)
I think I've nailed down the Half-Close stuff.

4)
These are kqueue specific. Need to investigate further.

twisted.internet.test.test_fdset
  ReactorFDSetTestsBuilder_KQueueReactor
    test_lostFileDescriptor ...                                         [ERROR]
    test_removedFromReactor ...                                          [FAIL]

The first one comes up, since

removeReader()

is called for a FD which is gone,  and leads to a socket exception from fd = reader.fileno()

5)
These are kqueue specific. Need to investigate further.

twisted.conch.test.test_conch

The fail on the kqeue control call .. see below.

Any ideas what could be the reason?


[autobahn at autobahnhub ~/temp]$ trial -r select twisted.conch.test.test_conch
twisted.conch.test.test_conch
  CmdLineClientTestCase
    test_exec ...                                                          [OK]
    test_localToRemoteForwarding ...                                       [OK]
    test_remoteToLocalForwarding ...                                       [OK]
  OpenSSHClientForwardingTestCase
    test_exec ...                                                          [OK]
    test_localToRemoteForwarding ...                                       [OK]
    test_remoteToLocalForwarding ...                                       [OK]
  OpenSSHClientRekeyTestCase
    test_clientRekey ...                                                   [OK]
  StdioInteractingSessionTests
    test_eofReceived ...                                                   [OK]

-------------------------------------------------------------------------------
Ran 8 tests in 4.707s

PASSED (successes=8)
[autobahn at autobahnhub ~/temp]$ trial -r kqueue twisted.conch.test.test_conch
twisted.conch.test.test_conch
  CmdLineClientTestCase
    test_exec ...                                                          [OK]
    test_localToRemoteForwarding ...                                    [ERROR]
                                   [ERROR]
    test_remoteToLocalForwarding ...                                       [OK]
  OpenSSHClientForwardingTestCase
    test_exec ...                                                          [OK]
    test_localToRemoteForwarding ...                                    [ERROR]
                                   [ERROR]
    test_remoteToLocalForwarding ...                                       [OK]
  OpenSSHClientRekeyTestCase
    test_clientRekey ...                                                   [OK]
  StdioInteractingSessionTests
    test_eofReceived ...                                                   [OK]

===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError: <twisted.conch.test.test_conch.CmdLineClientTestCase testMethod=test_localToRemoteForwarding> (test_localToRemoteForwarding) still running at 120.0 secs

twisted.conch.test.test_conch.CmdLineClientTestCase.test_localToRemoteForwarding
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/log.py", line 84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/log.py", line 69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/context.py", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/context.py", line 81, in callWithContext
    return func(*args,**kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 225, in _doWriteOrRead
    self._disconnectSelectable(selectable, why, inRead)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/posixbase.py", line 260, in _disconnectSelectable
    selectable.readConnectionLost(f)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/tcp.py", line 257, in readConnectionLost
    self.connectionLost(reason)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/tcp.py", line 433, in connectionLost
    Connection.connectionLost(self, reason)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/tcp.py", line 277, in connectionLost
    protocol.connectionLost(reason)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/conch/test/test_conch.py", line 242, in connectionLost
    self.protocol.forwardingPortDisconnected(self.buffer)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/conch/test/test_conch.py", line 190, in forwardingPortDisconnected
    self.transport.write('\x03')
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/process.py", line 862, in write
    self.pipes[0].write(data)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/process.py", line 174, in write
    abstract.FileDescriptor.write(self, data)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/abstract.py", line 310, in write
    self.startWriting()
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/abstract.py", line 400, in startWriting
    self.reactor.addWriter(self)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 94, in addWriter
    self._updateRegistration(fd, KQ_FILTER_WRITE, KQ_EV_ADD)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 74, in _updateRegistration
    self._kq.control([kevent(*args)], 0, 0)
exceptions.OSError: [Errno 32] Broken pipe

twisted.conch.test.test_conch.CmdLineClientTestCase.test_localToRemoteForwarding
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError: <twisted.conch.test.test_conch.OpenSSHClientForwardingTestCase testMethod=test_localToRemoteForwarding> (test_localToRemoteForwarding) still running at 120.0 secs

twisted.conch.test.test_conch.OpenSSHClientForwardingTestCase.test_localToRemoteForwarding
===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/log.py", line 84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/log.py", line 69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/context.py", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/python/context.py", line 81, in callWithContext
    return func(*args,**kw)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 225, in _doWriteOrRead
    self._disconnectSelectable(selectable, why, inRead)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/posixbase.py", line 262, in _disconnectSelectable
    self.removeWriter(selectable)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 140, in removeWriter
    self._updateRegistration(fd, KQ_FILTER_WRITE, KQ_EV_DELETE)
  File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.0.0_r33077-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/kqreactor.py", line 74, in _updateRegistration
    self._kq.control([kevent(*args)], 0, 0)
exceptions.OSError: [Errno 2] No such file or directory

twisted.conch.test.test_conch.OpenSSHClientForwardingTestCase.test_localToRemoteForwarding
-------------------------------------------------------------------------------
Ran 8 tests in 243.797s

FAILED (errors=4, successes=6)
[autobahn at autobahnhub ~/temp]$



From exarkun at twistedmatrix.com  Sat Nov  5 22:05:26 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Nov 2011 04:05:26 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1320552326.72.156475450@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111106/fd3d3505/attachment.html>

From exarkun at twistedmatrix.com  Sun Nov  6 07:37:15 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Nov 2011 14:37:15 -0000
Subject: [Twisted-Python] Docs HTML suggestion/request for moving
	between	versions.
In-Reply-To: <4EB29149.4020309@imperial.ac.uk>
References: <4EA8274E.9070704@imperial.ac.uk>
	<20111103124014.17986.1462827444.divmod.xquotient.272@localhost.localdomain>
	<4EB29149.4020309@imperial.ac.uk>
Message-ID: <20111106143715.17986.1876597934.divmod.xquotient.335@localhost.localdomain>

On 3 Nov, 01:04 pm, p.mayers at imperial.ac.uk wrote:
>On 03/11/11 12:40, exarkun at twistedmatrix.com wrote:
>>I've updated http://twistedmatrix.com/documents/8.0.0/api/ - compare 
>>it
>
>Cool, that looks good, thanks!

Thanks for the review.  Since I didn't hear anything else, I went ahead 
and switched over all versions of the documentation to have this 
feature.

Jean-Paul



From jonathan+twisted at jsphere.com  Sun Nov  6 10:51:15 2011
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Sun, 6 Nov 2011 19:51:15 +0200
Subject: [Twisted-Python] Website visual improvements
Message-ID: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>

Hello,

I recently volunteered to make some visual improvements to the Twisted Trac
website. I received a lot of good feedback and suggestions from the IRC
channel, most of which I took to heart and fine-tuned the changes. I think
everyone is generally happy with the changes, I'm happy with the changes
and I'd like help with moving things forward to eventually deploy these
changes.

The branch is currently up for review on Launchpad[1], the merge proposal
contains links to some[2] static[3] pages demonstrating the style changes.
(It is worth noting that there are some quirks that are as a result of
"File -> Save As" in Firefox, I wouldn't worry about these.)

I am willing to help with the final deployment of the site changes as well
as integrating the new styling with:
* the Sphinx documentation and documentation tools;
* the Lore documentation (which I see thijs recently did some work on) if
that is necessary;
* and the pydoctor API documentation.

-- 
Jonathan


[1] <
https://code.launchpad.net/~jjacobs/twisted-website/visual-design-update/+merge/80468<https://code.launchpad.net/%7Ejjacobs/twisted-website/visual-design-update/+merge/80468>
>
[2] <https://dl.dropbox.com/u/4030134/Twisted/Twisted.htm>
[3] <https://dl.dropbox.com/u/4030134/Twisted/5047.htm>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111106/ab89c2b9/attachment.html>

From tom at recursivedream.com  Sun Nov  6 11:53:24 2011
From: tom at recursivedream.com (Tom Davis)
Date: Sun, 6 Nov 2011 13:53:24 -0500
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
Message-ID: <29139477-832F-4B93-B913-42F6FA7F171F@recursivedream.com>



On Nov 6, 2011, at 12:51 PM, Jonathan Jacobs <jonathan+twisted at jsphere.com> wrote:

> Hello,
> 
> I recently volunteered to make some visual improvements to the Twisted Trac website. I received a lot of good feedback and suggestions from the IRC channel, most of which I took to heart and fine-tuned the changes. I think everyone is generally happy with the changes, I'm happy with the changes and I'd like help with moving things forward to eventually deploy these changes.
> 
> The branch is currently up for review on Launchpad[1], the merge proposal contains links to some[2] static[3] pages demonstrating the style changes. (It is worth noting that there are some quirks that are as a result of "File -> Save As" in Firefox, I wouldn't worry about these.)
> 
> I am willing to help with the final deployment of the site changes as well as integrating the new styling with:
> * the Sphinx documentation and documentation tools;
> * the Lore documentation (which I see thijs recently did some work on) if that is necessary;
> * and the pydoctor API documentation.
> 

Wow Jonathan, these changes look great! 

> -- 
> Jonathan
> 
> 
> [1] <https://code.launchpad.net/~jjacobs/twisted-website/visual-design-update/+merge/80468>
> [2] <https://dl.dropbox.com/u/4030134/Twisted/Twisted.htm>
> [3] <https://dl.dropbox.com/u/4030134/Twisted/5047.htm>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111106/891a7da4/attachment.html>

From glyph at twistedmatrix.com  Sun Nov  6 14:12:58 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 6 Nov 2011 15:12:58 -0600
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE449@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
	<1320495156.2042.100.camel@blake>
	<634914A010D0B943A035D226786325D42D0C0CE449@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <68BB485F-5883-4A49-A17B-5AA212F6737B@twistedmatrix.com>


On Nov 5, 2011, at 1:46 PM, Tobias Oberstein wrote:

>>> Then, baseline. I've run the trial using select reactor in the
>>> expectation of finding all tests passed.
>>> 
>>> This is not the case, there are a couple of failed ones. Those are
>>> also failed with the kqueue reactor, so I need to know whether I need
>>> to inspect those or those are problems unrelated to the reactor, but of
>> general (platform?) nature.
>> 
>> Are you using Twisted 11? Many of these issues are, if I'm not mistaken,
>> fixed in trunk (though perhaps not all). So trunk is probably a better baseline
>> to work off of.
> 
> Ok, I'm using trunk now.
> 
> 1)
> The errors in
> 
> twisted.python.test.test_components
> 
> are gone.
> 
> 2)
> The errors in
> 
> twisted.internet.test.test_posixprocess
> twisted.internet.test.test_process
> 
> are still there ... and they show up for select, poll and kqueue reactors.
> 
> They all somehow relate to "open FDs":
> 
> twisted.internet.test.test_posixprocess
>  FileDescriptorTests
>    test_expectedFDs ...                                                 [FAIL]
> 
> twisted.internet.test.test_process
>  PTYProcessTestsBuilder_KQueueReactor
>    test_openFileDescriptors ...                                        [ERROR]
>  PTYProcessTestsBuilder_PollReactor
>    test_openFileDescriptors ...                                        [ERROR]
>  PTYProcessTestsBuilder_SelectReactor
>    test_openFileDescriptors ...                                        [ERROR]
> ProcessTestsBuilder_SelectReactor
>    test_openFileDescriptors ...                                        [ERROR]
> 
> This might more a FreeBSD related thing. ?

Yes.

These tests should pass; I am guessing this has something to do with the still-open ticket <http://tm.tl/4747>.  Maybe have a look at fixing that?

You might be able to work around it on your system this by mounting fdescfs at /dev/fd.  (This really ought to be the default, please bother someone in FreeBSD-land to make it so. :)).

It would be useful to include tracebacks with the errors.  "trial --rterrors" is useful, as it includes the tracebacks  especially if you are experiencing hanging with the tests.

> 3)
> I think I've nailed down the Half-Close stuff.

Awesome.  Do you have a link to a changeset for that?  (Did I miss it earlier in the thread?)

> 4)
> These are kqueue specific. Need to investigate further.

These are the ones to focus on for <http://tm.tl/1918>, then :).

> twisted.internet.test.test_fdset
>  ReactorFDSetTestsBuilder_KQueueReactor
>    test_lostFileDescriptor ...                                         [ERROR]
>    test_removedFromReactor ...                                          [FAIL]
> 
> The first one comes up, since
> 
> removeReader()
> 
> is called for a FD which is gone,  and leads to a socket exception from fd = reader.fileno()

It sounds like you've narrowed this down pretty far!  Good work.

> 5)
> These are kqueue specific. Need to investigate further.
> 
> twisted.conch.test.test_conch
> 
> The fail on the kqeue control call .. see below.
> 
> Any ideas what could be the reason?

I would suggest fixing the issues you outlined in point 4 first.  It's really unfortunate that reactor issues are being caught by conch tests.  The reactor tests should be comprehensive enough to catch everything in the reactor.

This may just be a side-effect of the other errors you're tracking down, so see if you can fix those, and then loop back to these.  If they disappear, then great.  If not, then we should have a test that specifically tests this functionality and doesn't rely on weird and difficult to diagnose errors in conch to find them.

Thanks again for working on this!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111106/e79ac761/attachment.html>

From jon at multani.info  Sun Nov  6 21:11:01 2011
From: jon at multani.info (Jonathan Ballet)
Date: Mon, 07 Nov 2011 13:11:01 +0900
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <29139477-832F-4B93-B913-42F6FA7F171F@recursivedream.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<29139477-832F-4B93-B913-42F6FA7F171F@recursivedream.com>
Message-ID: <8e51798d4dc5924bfb74f30e37d32cbc@mail.webfaction.com>

On Sun, 6 Nov 2011 13:53:24 -0500, Tom Davis wrote:
> On Nov 6, 2011, at 12:51 PM, Jonathan Jacobs  wrote:
>
>> Hello,
>>
>> I recently volunteered to make some visual improvements to the
>> Twisted Trac website. I received a lot of good feedback and
>> suggestions from the IRC channel, most of which I took to heart and
>> fine-tuned the changes. I think everyone is generally happy with the
>> changes, I'm happy with the changes and I'd like help with moving
>> things forward to eventually deploy these changes.
>>
>> The branch is currently up for review on Launchpad[1], the merge
>> proposal contains links to some[2] static[3] pages demonstrating the
>> style changes. (It is worth noting that there are some quirks that
>> are as a result of "File -> Save As" in Firefox, I wouldn't worry
>> about these.)
>>
>> I am willing to help with the final deployment of the site changes
>> as well as integrating the new styling with:
>> * the Sphinx documentation and documentation tools;
>> * the Lore documentation (which I see thijs recently did some work
>> on) if that is necessary;
>> * and the pydoctor API documentation.
>
> Wow Jonathan, these changes look great!

Indeed, this looks great!
On https://dl.dropbox.com/u/4030134/Twisted/5047.htm, the status 
"Enhancement", "Fixed", "Closed" are not really vertically centered in 
their boxes, is it one of the Firefox quirks you were speaking about?

Great job!

  Jonathan



From einar.twisted at norsk-esport.no  Mon Nov  7 02:01:54 2011
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Mon, 7 Nov 2011 10:01:54 +0100
Subject: [Twisted-Python] FTP Proxy
Message-ID: <CAKXDhcWYaB83p85kdGQCKphxM7Ys+LAKz2c95PaNTikKn0bLHg@mail.gmail.com>

Hi,

I need to develop a customised FTP proxy for one of our systems, and
would like to consider Twisted for this project.

The t.p.ftp module seems to have the server and the client more or
less ready to use, so I think I am good to start, but just wanted to
check with you guys if there are any gotchas that I should be aware
of. The system is intended to work as follows:

- Users authenticate directly with the proxy, not the backend-server,
using a Drupal site for authentication (either through some sort of
API-call or by accessing the database directly - to be decided)
- The client-part of the proxy connects with a master-user/password to
one or more backend FTP-servers running in passive mode behind
firewalls.
- The master-user has access to the union of all file and directory
sets that each individual user has access to.
- The root folder presented to the user should contain either all the
available hosts, or a virtualised overview of all main directories on
all the hosts that the user may access.
- Any file access or directory listing will be filtered against an ACL
to allow only certain files and directories to be accessed by the
user.

Is there anything I should be aware of that may be a showstopper or
otherwise overly complicate this project by using t.p.ftp, or am I
good to go?

Will producers/consumers be an appropriate way of transferring data
between the client-part and the server-part of the proxy, and is
t.p.pcp something I should look into?

Any suggestions, especially mentions of/links to similar projects,
would be most helpful and appreciated.

Cheers,
Einar S. Idsř



From jonathan+twisted at jsphere.com  Mon Nov  7 03:00:06 2011
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Mon, 7 Nov 2011 12:00:06 +0200
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <8e51798d4dc5924bfb74f30e37d32cbc@mail.webfaction.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<29139477-832F-4B93-B913-42F6FA7F171F@recursivedream.com>
	<8e51798d4dc5924bfb74f30e37d32cbc@mail.webfaction.com>
Message-ID: <CAM187SGgrN4f3PX9gDTOhEXT3BLAj-Z9zLCD-SWcpXcdbcjJ6Q@mail.gmail.com>

On Mon, Nov 7, 2011 at 06:11, Jonathan Ballet <jon at multani.info> wrote:
> On https://dl.dropbox.com/u/4030134/Twisted/5047.htm, the status
> "Enhancement", "Fixed", "Closed" are not really vertically centered in
> their boxes, is it one of the Firefox quirks you were speaking about?

No, that was actually an issue. Thanks for pointing it out!



From tom.sheffler at gmail.com  Mon Nov  7 06:27:00 2011
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Mon, 7 Nov 2011 05:27:00 -0800
Subject: [Twisted-Python] TDD: How to test that a Timeout Exception occurs
	within the timeout period
Message-ID: <CAMBtMcuqDGf0=AmA8pAV8=fO6y+L7-jCyhFWkzEnNsrdku1XBg@mail.gmail.com>

I am investigating timeout properties of the FTP server module.  I
have written the following trial test, that when functioning properly
will throw a PortConnectionError with a "DTPFactory timeout"

I would like to use something like

   self.failUnlessRaises()

but the test is also constructed using defer.deferredGenerator, and it
doesn't seem possible to apply the test for an exception to a
Generator-based test.  This is a useful type of test to be able to
write: to assert that an exceptional condition *will* occur within a
timeout period.  Failure is if the exceptional condition is *never*
raised.  Suggestions for attacking these types of properties is welcome.

FYI: Here is my test, along with the trial directive that if it runs
for 60 seconds it is a failure.  But first, here is the ERROR
traceback that a "successful" run of this test produces.

===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.protocols.ftp.PortConnectionError: DTPFactory timeout

test_ftp_timeouts.TimeoutsFTPServerTestCase.test_FtpControlChannelTimesOut
-------------------------------------------------------------------------------


    def test_FtpControlChannelTimesOut(self):
        """Test that after the FTP timeout, the control channel closes
itself."""

        # Set the timeout to something small, but greater than DTPTimeout
        self.serverProtocol.timeOut = 15

        # Login
        wfd = defer.waitForDeferred(self._anonymousLogin())
        yield wfd
        wfd.getResult()
        log.msg("Login Anonymous")

        # Wait for N seconds, protocol timeOut not fired yet
        wait1 = defer.waitForDeferred(self.mywait(2))
        yield wait1

        # Should get here and not fail
        log.msg("FTP is ok here")

        # Issue a PASV command, and extract the host and port from the response
        pasvCmd = defer.waitForDeferred(self.client.queueStringCommand('PASV'))
        yield pasvCmd
        responseLines = pasvCmd.getResult()
        log.msg("PASV responseLines", responseLines)
        host, port = ftp.decodeHostPort(responseLines[-1][4:])

        # Wait for N seconds, protocol timeOut will fire
        wait2 = defer.waitForDeferred(self.mywait(20))
        yield wait2
        log.msg("FTP should have timed out and left reactor clean")


    test_FtpControlChannelTimesOut =
defer.deferredGenerator(test_FtpControlChannelTimesOut)
    # test_FtpControlChannelTimesOut.skip = "skipping"
    test_FtpControlChannelTimesOut.timeout = 60 # is a real error if
it takes this long



From exarkun at twistedmatrix.com  Mon Nov  7 06:35:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 07 Nov 2011 13:35:24 -0000
Subject: [Twisted-Python] FTP Proxy
In-Reply-To: <CAKXDhcWYaB83p85kdGQCKphxM7Ys+LAKz2c95PaNTikKn0bLHg@mail.gmail.com>
References: <CAKXDhcWYaB83p85kdGQCKphxM7Ys+LAKz2c95PaNTikKn0bLHg@mail.gmail.com>
Message-ID: <20111107133524.17986.704404351.divmod.xquotient.344@localhost.localdomain>

On 09:01 am, einar.twisted at norsk-esport.no wrote:
>Hi,
>
>I need to develop a customised FTP proxy for one of our systems, and
>would like to consider Twisted for this project.
>
>The t.p.ftp module seems to have the server and the client more or
>less ready to use, so I think I am good to start, but just wanted to
>check with you guys if there are any gotchas that I should be aware
>of. The system is intended to work as follows:
>
>- Users authenticate directly with the proxy, not the backend-server,
>using a Drupal site for authentication (either through some sort of
>API-call or by accessing the database directly - to be decided)
>- The client-part of the proxy connects with a master-user/password to
>one or more backend FTP-servers running in passive mode behind
>firewalls.
>- The master-user has access to the union of all file and directory
>sets that each individual user has access to.
>- The root folder presented to the user should contain either all the
>available hosts, or a virtualised overview of all main directories on
>all the hosts that the user may access.
>- Any file access or directory listing will be filtered against an ACL
>to allow only certain files and directories to be accessed by the
>user.
>
>Is there anything I should be aware of that may be a showstopper or
>otherwise overly complicate this project by using t.p.ftp, or am I
>good to go?
>
>Will producers/consumers be an appropriate way of transferring data
>between the client-part and the server-part of the proxy, and is
>t.p.pcp something I should look into?

twisted.protocols.pcp isn't that useful.  You can probably build what 
you need without it.

Jean-Paul
>Any suggestions, especially mentions of/links to similar projects,
>would be most helpful and appreciated.
>
>Cheers,
>Einar S. Ids9
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Mon Nov  7 06:46:12 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 07 Nov 2011 13:46:12 -0000
Subject: [Twisted-Python] TDD: How to test that a Timeout Exception
	occurs	within the timeout period
In-Reply-To: <CAMBtMcuqDGf0=AmA8pAV8=fO6y+L7-jCyhFWkzEnNsrdku1XBg@mail.gmail.com>
References: <CAMBtMcuqDGf0=AmA8pAV8=fO6y+L7-jCyhFWkzEnNsrdku1XBg@mail.gmail.com>
Message-ID: <20111107134612.17986.934927007.divmod.xquotient.359@localhost.localdomain>

On 01:27 pm, tom.sheffler at gmail.com wrote:
>I am investigating timeout properties of the FTP server module.  I
>have written the following trial test, that when functioning properly
>will throw a PortConnectionError with a "DTPFactory timeout"
>
>I would like to use something like
>
>   self.failUnlessRaises()

Unrelated to the real intent of your question: adjust this desire, you 
should want to use self.assertRaises() instead.
>but the test is also constructed using defer.deferredGenerator, and it
>doesn't seem possible to apply the test for an exception to a
>Generator-based test.

This is somewhat true-ish.  There is another trial method that helps out 
with this case: assertFailure.  The new trial documentation written by 
Thomas Herv� addresses this use case a bit:

http://buildbot.twistedmatrix.com/builds/sphinx- 
html/499-16046/projects/core/howto/trial.html#testing-scheduling

However, it's not clear to me that you actually have a Deferred that is 
going to fire with a Failure.  It sounds like maybe you have an error 
that will get logged and no other indication that what you were waiting 
for has happened?  If so, you might want to aim for a Deferred that 
fires when the important thing has happened.

Jean-Paul
>This is a useful type of test to be able to
>write: to assert that an exceptional condition *will* occur within a
>timeout period.  Failure is if the exceptional condition is *never*
>raised.  Suggestions for attacking these types of properties is 
>welcome.
>
>FYI: Here is my test, along with the trial directive that if it runs
>for 60 seconds it is a failure.  But first, here is the ERROR
>traceback that a "successful" run of this test produces.
>
>===============================================================================
>[ERROR]
>Traceback (most recent call last):
>Failure: twisted.protocols.ftp.PortConnectionError: DTPFactory timeout
>
>test_ftp_timeouts.TimeoutsFTPServerTestCase.test_FtpControlChannelTimesOut
>-------------------------------------------------------------------------------
>
>
>    def test_FtpControlChannelTimesOut(self):
>        """Test that after the FTP timeout, the control channel closes
>itself."""
>
>        # Set the timeout to something small, but greater than 
>DTPTimeout
>        self.serverProtocol.timeOut = 15
>
>        # Login
>        wfd = defer.waitForDeferred(self._anonymousLogin())
>        yield wfd
>        wfd.getResult()
>        log.msg("Login Anonymous")
>
>        # Wait for N seconds, protocol timeOut not fired yet
>        wait1 = defer.waitForDeferred(self.mywait(2))
>        yield wait1
>
>        # Should get here and not fail
>        log.msg("FTP is ok here")
>
>        # Issue a PASV command, and extract the host and port from the 
>response
>        pasvCmd = 
>defer.waitForDeferred(self.client.queueStringCommand('PASV'))
>        yield pasvCmd
>        responseLines = pasvCmd.getResult()
>        log.msg("PASV responseLines", responseLines)
>        host, port = ftp.decodeHostPort(responseLines[-1][4:])
>
>        # Wait for N seconds, protocol timeOut will fire
>        wait2 = defer.waitForDeferred(self.mywait(20))
>        yield wait2
>        log.msg("FTP should have timed out and left reactor clean")
>
>
>    test_FtpControlChannelTimesOut =
>defer.deferredGenerator(test_FtpControlChannelTimesOut)
>    # test_FtpControlChannelTimesOut.skip = "skipping"
>    test_FtpControlChannelTimesOut.timeout = 60 # is a real error if
>it takes this long
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From techtonik at gmail.com  Mon Nov  7 07:13:42 2011
From: techtonik at gmail.com (anatoly techtonik)
Date: Mon, 7 Nov 2011 16:13:42 +0200
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
Message-ID: <CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>

On Sun, Nov 6, 2011 at 8:51 PM, Jonathan Jacobs
<jonathan+twisted at jsphere.com> wrote:
> Hello,
> I recently volunteered to make some visual improvements to the Twisted Trac
> website. I received a lot of good feedback and suggestions from the IRC
> channel, most of which I took to heart and fine-tuned the changes. I think
> everyone is generally happy with the changes, I'm happy with the changes and
> I'd like help with moving things forward to eventually deploy these changes.
> The branch is currently up for review on Launchpad[1], the merge proposal
> contains links to some[2] static[3] pages demonstrating the style changes.
> (It is worth noting that there are some quirks that are as a result of "File
> -> Save As" in Firefox, I wouldn't worry about these.)

Cool. I've uploaded screenshots to see how it looks on my FF7 below. I
like it. Well, with the exception of linefeeds in download links and
some stuff that is strictly subjective. For example, blue cloud looks
completely out of the way on the main page - I don't know if it is
thanks to the dark background or to its form. I also prefer right-side
panels over left-side. On issue page red and blue tones are also
looking strange to me. What is awesome are comment numbers. A pity
these are not clickable.

Anyway, good work! =)

old - http://i42.tinypic.com/29dify0.jpg
new - http://i44.tinypic.com/xpv78k.png


> [1]
> <https://code.launchpad.net/~jjacobs/twisted-website/visual-design-update/+merge/80468>
> [2] <https://dl.dropbox.com/u/4030134/Twisted/Twisted.htm>
> [3] <https://dl.dropbox.com/u/4030134/Twisted/5047.htm>
--
anatoly t.



From jonathan+twisted at jsphere.com  Mon Nov  7 07:28:19 2011
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Mon, 7 Nov 2011 16:28:19 +0200
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
Message-ID: <CAM187SFUWM6uS70Hn=36JBovEAwMnaiiR-QMacrkE5Ks_UjZ_Q@mail.gmail.com>

On Mon, Nov 7, 2011 at 16:13, anatoly techtonik <techtonik at gmail.com> wrote:
> What is awesome are comment numbers. A pity
> these are not clickable.

The alterations to the Trac templates will make these clickable, I was
just too lazy to manually edit all the HTML for the demonstration page
(the fifth comment is clickable, as an example.)

> Anyway, good work! =)

Thanks!



From jstpierre at mecheye.net  Mon Nov  7 07:31:39 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 7 Nov 2011 09:31:39 -0500
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
Message-ID: <CAA0H+QRiw9L1TcxgLPLrMCbk=fS0BN3vC51rjbaYA8v1LF2=Jg@mail.gmail.com>

On Mon, Nov 7, 2011 at 9:13 AM, anatoly techtonik <techtonik at gmail.com> wrote:
> On Sun, Nov 6, 2011 at 8:51 PM, Jonathan Jacobs
> <jonathan+twisted at jsphere.com> wrote:
>> Hello,
>> I recently volunteered to make some visual improvements to the Twisted Trac
>> website. I received a lot of good feedback and suggestions from the IRC
>> channel, most of which I took to heart and fine-tuned the changes. I think
>> everyone is generally happy with the changes, I'm happy with the changes and
>> I'd like help with moving things forward to eventually deploy these changes.
>> The branch is currently up for review on Launchpad[1], the merge proposal
>> contains links to some[2] static[3] pages demonstrating the style changes.
>> (It is worth noting that there are some quirks that are as a result of "File
>> -> Save As" in Firefox, I wouldn't worry about these.)
>
> Cool. I've uploaded screenshots to see how it looks on my FF7 below. I
> like it. Well, with the exception of linefeeds in download links and
> some stuff that is strictly subjective. For example, blue cloud looks
> completely out of the way on the main page - I don't know if it is
> thanks to the dark background or to its form. I also prefer right-side
> panels over left-side. On issue page red and blue tones are also
> looking strange to me. What is awesome are comment numbers. A pity
> these are not clickable.
>
> Anyway, good work! =)
>
> old - http://i42.tinypic.com/29dify0.jpg
> new - http://i44.tinypic.com/xpv78k.png

Yes, the cloud's arrow looks a little too green. Making it more
green-yellow like the original download arrow might be better.

See "Chameleon" in the Tango pallete:

http://webcvs.freedesktop.org/tango/tango-art-tools/palettes/Tango-Palette.png?view=co

>> [1]
>> <https://code.launchpad.net/~jjacobs/twisted-website/visual-design-update/+merge/80468>
>> [2] <https://dl.dropbox.com/u/4030134/Twisted/Twisted.htm>
>> [3] <https://dl.dropbox.com/u/4030134/Twisted/5047.htm>
> --
> anatoly t.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
  Jasper



From jonathan+twisted at jsphere.com  Mon Nov  7 07:53:26 2011
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Mon, 7 Nov 2011 16:53:26 +0200
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAA0H+QRiw9L1TcxgLPLrMCbk=fS0BN3vC51rjbaYA8v1LF2=Jg@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
	<CAA0H+QRiw9L1TcxgLPLrMCbk=fS0BN3vC51rjbaYA8v1LF2=Jg@mail.gmail.com>
Message-ID: <CAM187SFM5vM3PZbR7WeEf=_RA37E5HCEvw0qF-r-phANuU3hjg@mail.gmail.com>

On Mon, Nov 7, 2011 at 16:31, Jasper St. Pierre <jstpierre at mecheye.net> wrote:
> Yes, the cloud's arrow looks a little too green. Making it more
> green-yellow like the original download arrow might be better.

For what it's worth the colour of the arrow in Anatoly's screenshot
looks far greener than the way the image appears on my screen, it's
probably not worth only trusting screenshots (with who knows what
colour profile transformations applied) when making colour
comparisons.

The actual colour is much closer to the "Chameleon" colour from the
Tango palette than the colour from Anatoly's image.



From jstpierre at mecheye.net  Mon Nov  7 08:03:41 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 7 Nov 2011 10:03:41 -0500
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAM187SFM5vM3PZbR7WeEf=_RA37E5HCEvw0qF-r-phANuU3hjg@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
	<CAA0H+QRiw9L1TcxgLPLrMCbk=fS0BN3vC51rjbaYA8v1LF2=Jg@mail.gmail.com>
	<CAM187SFM5vM3PZbR7WeEf=_RA37E5HCEvw0qF-r-phANuU3hjg@mail.gmail.com>
Message-ID: <CAA0H+QTDttJNjeX+ar3jxexvoRSiiUQYp-A5b6xTMmWEXsg+Yw@mail.gmail.com>

On Mon, Nov 7, 2011 at 9:53 AM, Jonathan Jacobs
<jonathan+twisted at jsphere.com> wrote:
> On Mon, Nov 7, 2011 at 16:31, Jasper St. Pierre <jstpierre at mecheye.net> wrote:
>> Yes, the cloud's arrow looks a little too green. Making it more
>> green-yellow like the original download arrow might be better.
>
> For what it's worth the colour of the arrow in Anatoly's screenshot
> looks far greener than the way the image appears on my screen, it's
> probably not worth only trusting screenshots (with who knows what
> colour profile transformations applied) when making colour
> comparisons.
>
> The actual colour is much closer to the "Chameleon" colour from the
> Tango palette than the colour from Anatoly's image.

It's that way on my FF7 as well. Welcome to color spaces.

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
  Jasper



From jonathan+twisted at jsphere.com  Mon Nov  7 08:41:47 2011
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Mon, 7 Nov 2011 17:41:47 +0200
Subject: [Twisted-Python] Website visual improvements
In-Reply-To: <CAA0H+QTDttJNjeX+ar3jxexvoRSiiUQYp-A5b6xTMmWEXsg+Yw@mail.gmail.com>
References: <CAM187SGBP56TLaeabbmjUe+pmUThMCmwviPF-ARtWZ085Gc28g@mail.gmail.com>
	<CAPkN8xKWFa4kKj4BafJKcQP4R2Dz-8eX4SqUE1mVoEw0xC7nZA@mail.gmail.com>
	<CAA0H+QRiw9L1TcxgLPLrMCbk=fS0BN3vC51rjbaYA8v1LF2=Jg@mail.gmail.com>
	<CAM187SFM5vM3PZbR7WeEf=_RA37E5HCEvw0qF-r-phANuU3hjg@mail.gmail.com>
	<CAA0H+QTDttJNjeX+ar3jxexvoRSiiUQYp-A5b6xTMmWEXsg+Yw@mail.gmail.com>
Message-ID: <CAM187SEhezkbPOCySGBg+cRpM3kvn=0xVYw__aCMm7WOggX5PA@mail.gmail.com>

On Mon, Nov 7, 2011 at 17:03, Jasper St. Pierre <jstpierre at mecheye.net> wrote:
> It's that way on my FF7 as well. Welcome to color spaces.

Looks like I inadvertently saved it with the wrong embedded colour
profile. Oops.



From jml at mumak.net  Mon Nov  7 11:06:59 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 7 Nov 2011 18:06:59 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
Message-ID: <CAHZ8tnYMyid9rSm7JLXsp9c1OOi5YRjjMdYEQTAP4A-yVfVcYQ@mail.gmail.com>

On Tue, Nov 1, 2011 at 6:48 PM, Glyph <glyph at twistedmatrix.com> wrote:
> On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:
>
>> On 01/11/11 15:28, Christopher Armstrong wrote:
>>
>>> I whole-heartedly agree with the sentiment, though. We need to get rid
>>> of the global reactor.
>>
>> Why?
>
> Sometimes you want a different reactor.  The most common reason is unit testing, although if we could successfully eliminate the global reactor everywhere, there are other things that we might be able to do: slowing down or speeding up time from a protocol's perspective (by replacing IReactorTime), grouping related objects together in reactors that can be shut down together (so that reactor.stop() doesn't actually end the process); or, similarly, suspending a group of related objects (removeReader()/removeWriter() on everything) so that they can be inspected for debugging purposes, without suspending the thing doing the inspecting (a manhole python prompt).
>
>> I find the "pass reactor as 1st argument to everything" API pattern
>> messy. I'm sure there's a good reason. What is it?
>
> This pattern is a solution to the problem, but I agree that it is possibly not the optimal solution.  It sort of points in a direction where every possible module that might be imported becomes an argument to your function.  After all, there are plenty of other modules which have to be mocked for testing, why not just make everyone's __init__ method take sys.modules as an argument too, and never import anything?  In more complex systems this can definitely turn into a bit of a mess.
>
> Nevertheless, "real reactor as default argument" is not a huge improvement either, because it typically breaks one level out.  If you have 'a(reactor=defaultReactor)' and then 'b()' needs to call 'a', half the time 'b' will forget to supply a reactor argument and call 'a()' passing nothing, because that appears to be the suggested API.   Any code that calls 'b()' then needs to deal with the fact that the global reactor is going to get used, even if it has a cleanly encapsulated parameter of its own.  With sufficient discipline, of course, this approach is equivalent.
...
> If you can think of a better solution that addresses all of these concerns simultaneously somehow, please share, I'd love to hear it :-).

reactor = getUtility(IReactor)?

jml



From tobias.oberstein at tavendo.de  Mon Nov  7 11:20:36 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 7 Nov 2011 10:20:36 -0800
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <68BB485F-5883-4A49-A17B-5AA212F6737B@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
	<1320495156.2042.100.camel@blake>
	<634914A010D0B943A035D226786325D42D0C0CE449@EXVMBX020-12.exch020.serverdata.net>
	<68BB485F-5883-4A49-A17B-5AA212F6737B@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C0CE64E@EXVMBX020-12.exch020.serverdata.net>

Ok, I've prepared

http://twistedmatrix.com/trac/attachment/ticket/1918/kqueue.patch

which passes all tests (FreeBSD 8.3 p3 i386 / Python 2.7.1) but the ones related to open FDs (which are unrelated to the reactor stuff).

This works for me for FreeBSD .. I've tried on MacOSX .. there seem to be PTY issues there. Well.

I've also updated the

http://pypi.python.org/pypi/txkqreactor/0.2

for anyone who wants to try before this gets eventually merged into Twisted.


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph Lefkowitz
Gesendet: Sonntag, 6. November 2011 22:13
An: Twisted general discussion
Betreff: Re: [Twisted-Python] kqueue reactor / ticket #1918


On Nov 5, 2011, at 1:46 PM, Tobias Oberstein wrote:


Then, baseline. I've run the trial using select reactor in the
expectation of finding all tests passed.

This is not the case, there are a couple of failed ones. Those are
also failed with the kqueue reactor, so I need to know whether I need
to inspect those or those are problems unrelated to the reactor, but of
general (platform?) nature.

Are you using Twisted 11? Many of these issues are, if I'm not mistaken,
fixed in trunk (though perhaps not all). So trunk is probably a better baseline
to work off of.

Ok, I'm using trunk now.

1)
The errors in

twisted.python.test.test_components

are gone.

2)
The errors in

twisted.internet.test.test_posixprocess
twisted.internet.test.test_process

are still there ... and they show up for select, poll and kqueue reactors.

They all somehow relate to "open FDs":

twisted.internet.test.test_posixprocess
 FileDescriptorTests
   test_expectedFDs ...                                                 [FAIL]

twisted.internet.test.test_process
 PTYProcessTestsBuilder_KQueueReactor
   test_openFileDescriptors ...                                        [ERROR]
 PTYProcessTestsBuilder_PollReactor
   test_openFileDescriptors ...                                        [ERROR]
 PTYProcessTestsBuilder_SelectReactor
   test_openFileDescriptors ...                                        [ERROR]
ProcessTestsBuilder_SelectReactor
   test_openFileDescriptors ...                                        [ERROR]

This might more a FreeBSD related thing. ?

Yes.

These tests should pass; I am guessing this has something to do with the still-open ticket <http://tm.tl/4747>.  Maybe have a look at fixing that?

You might be able to work around it on your system this by mounting fdescfs at /dev/fd.  (This really ought to be the default, please bother someone in FreeBSD-land to make it so. :)).

It would be useful to include tracebacks with the errors.  "trial --rterrors" is useful, as it includes the tracebacks  especially if you are experiencing hanging with the tests.


3)
I think I've nailed down the Half-Close stuff.

Awesome.  Do you have a link to a changeset for that?  (Did I miss it earlier in the thread?)


4)
These are kqueue specific. Need to investigate further.

These are the ones to focus on for <http://tm.tl/1918>, then :).


twisted.internet.test.test_fdset
 ReactorFDSetTestsBuilder_KQueueReactor
   test_lostFileDescriptor ...                                         [ERROR]
   test_removedFromReactor ...                                          [FAIL]

The first one comes up, since

removeReader()

is called for a FD which is gone,  and leads to a socket exception from fd = reader.fileno()

It sounds like you've narrowed this down pretty far!  Good work.


5)
These are kqueue specific. Need to investigate further.

twisted.conch.test.test_conch

The fail on the kqeue control call .. see below.

Any ideas what could be the reason?

I would suggest fixing the issues you outlined in point 4 first.  It's really unfortunate that reactor issues are being caught by conch tests.  The reactor tests should be comprehensive enough to catch everything in the reactor.

This may just be a side-effect of the other errors you're tracking down, so see if you can fix those, and then loop back to these.  If they disappear, then great.  If not, then we should have a test that specifically tests this functionality and doesn't rely on weird and difficult to diagnose errors in conch to find them.

Thanks again for working on this!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111107/2d0df622/attachment.html>

From exarkun at twistedmatrix.com  Mon Nov  7 11:25:36 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 07 Nov 2011 18:25:36 -0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted
	test	suite
In-Reply-To: <CAHZ8tnYMyid9rSm7JLXsp9c1OOi5YRjjMdYEQTAP4A-yVfVcYQ@mail.gmail.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<CAHZ8tnYMyid9rSm7JLXsp9c1OOi5YRjjMdYEQTAP4A-yVfVcYQ@mail.gmail.com>
Message-ID: <20111107182536.20412.1601697382.divmod.xquotient.1@localhost.localdomain>

On 06:06 pm, jml at mumak.net wrote:
>On Tue, Nov 1, 2011 at 6:48 PM, Glyph <glyph at twistedmatrix.com> wrote:
>>On Nov 1, 2011, at 12:14 PM, Phil Mayers wrote:
>>>On 01/11/11 15:28, Christopher Armstrong wrote:
>>>>I whole-heartedly agree with the sentiment, though. We need to get 
>>>>rid
>>>>of the global reactor.
>>>
>>>Why?
>>
>>Sometimes you want a different reactor. �The most common reason is 
>>unit testing, although if we could successfully eliminate the global 
>>reactor everywhere, there are other things that we might be able to 
>>do: slowing down or speeding up time from a protocol's perspective (by 
>>replacing IReactorTime), grouping related objects together in reactors 
>>that can be shut down together (so that reactor.stop() doesn't 
>>actually end the process); or, similarly, suspending a group of 
>>related objects (removeReader()/removeWriter() on everything) so that 
>>they can be inspected for debugging purposes, without suspending the 
>>thing doing the inspecting (a manhole python prompt).
>>>I find the "pass reactor as 1st argument to everything" API pattern
>>>messy. I'm sure there's a good reason. What is it?
>>
>>This pattern is a solution to the problem, but I agree that it is 
>>possibly not the optimal solution. �It sort of points in a direction 
>>where every possible module that might be imported becomes an argument 
>>to your function. �After all, there are plenty of other modules which 
>>have to be mocked for testing, why not just make everyone's __init__ 
>>method take sys.modules as an argument too, and never import anything? 
>>In more complex systems this can definitely turn into a bit of a mess.
>>
>>Nevertheless, "real reactor as default argument" is not a huge 
>>improvement either, because it typically breaks one level out. �If you 
>>have 'a(reactor=defaultReactor)' and then 'b()' needs to call 'a', 
>>half the time 'b' will forget to supply a reactor argument and call 
>>'a()' passing nothing, because that appears to be the suggested API. 
>>Any code that calls 'b()' then needs to deal with the fact that the 
>>global reactor is going to get used, even if it has a cleanly 
>>encapsulated parameter of its own. �With sufficient discipline, of 
>>course, this approach is equivalent.
>...
>>If you can think of a better solution that addresses all of these 
>>concerns simultaneously somehow, please share, I'd love to hear it 
>>:-).
>
>reactor = getUtility(IReactor)?

That's not really a solution.  It's the barest glimpse of a large system 
which might be applied as a solution.  Do you want to expand it?

Jean-Paul



From mostawesomedude at gmail.com  Mon Nov  7 15:33:29 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Mon, 7 Nov 2011 14:33:29 -0800
Subject: [Twisted-Python] [ANN] txWS 0.6.2
Message-ID: <CALiqSLf2=hQV=Za+9-EjRvNmK-zW9ibw2VOU376KbPNO7_cTUQ@mail.gmail.com>

Hi,

I figured I should announce this, so: txWS 0.6.2 has been made
available. You can grab it from PyPI
(http://pypi.python.org/pypi/txWS) or from source on Github
(https://github.com/MostAwesomeDude/txWS).

txWS is a small, single-module library for augmenting Twisted with
WebSockets support. Unlike other approaches, txWS has a minimalist
philosophy and only provides enough WebSockets machinery to wrap
server factories. Notably, txWS does not provide a WebSockets client;
we believe that it is harmful to the ecosystem of the Internet to do
so. (Additionally, I'm only paid for the server-side stuff.)

Feedback (i.e. criticism, insults) is welcome; this library has seen
exactly zero usage outside OSUOSL and we hope to continue to
contribute to the Twisted world.

~ C.
Oregon State University Open Source Lab

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>



From glyph at twistedmatrix.com  Mon Nov  7 22:44:44 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 7 Nov 2011 21:44:44 -0800
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <20111107182536.20412.1601697382.divmod.xquotient.1@localhost.localdomain>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<CAHZ8tnYMyid9rSm7JLXsp9c1OOi5YRjjMdYEQTAP4A-yVfVcYQ@mail.gmail.com>
	<20111107182536.20412.1601697382.divmod.xquotient.1@localhost.localdomain>
Message-ID: <5AE3EBC8-AB2B-4730-9CF7-03CE8A557391@twistedmatrix.com>


On Nov 7, 2011, at 10:25 AM, exarkun at twistedmatrix.com wrote:

>> reactor = getUtility(IReactor)?
> 
> That's not really a solution.  It's the barest glimpse of a large system which might be applied as a solution.  Do you want to expand it?

I'd like to echo this request for exposition.  My understanding is that 'getUtility' is just a baroque way to access a global variable, with most of the disadvantages of said globalness intact.  What does it provide that our existing import strategy doesn't?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111107/e825027d/attachment-0001.html>

From jml at mumak.net  Tue Nov  8 04:33:33 2011
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 8 Nov 2011 11:33:33 +0000
Subject: [Twisted-Python] Global reactor unit tests in the Twisted test
	suite
In-Reply-To: <5AE3EBC8-AB2B-4730-9CF7-03CE8A557391@twistedmatrix.com>
References: <20111101143838.17986.1445488435.divmod.xquotient.177@localhost.localdomain>
	<F0AB9EA6-CC61-46B4-BEFE-38CFCCEC2C94@lvh.cc>
	<CAPkRfUQQf4kZTj_1uBPb6hPHb_F=uRjc-qN9TOgmj6Gq6h028Q@mail.gmail.com>
	<4EB01AE5.5060606@imperial.ac.uk>
	<EE2706F4-3082-45CB-A6F4-9B64A2B51D42@twistedmatrix.com>
	<CAHZ8tnYMyid9rSm7JLXsp9c1OOi5YRjjMdYEQTAP4A-yVfVcYQ@mail.gmail.com>
	<20111107182536.20412.1601697382.divmod.xquotient.1@localhost.localdomain>
	<5AE3EBC8-AB2B-4730-9CF7-03CE8A557391@twistedmatrix.com>
Message-ID: <CAHZ8tnY4VgxHkJCSJiBW4bdR=0OUVQSSUBSmipL0LDip_EjYLg@mail.gmail.com>

On Tue, Nov 8, 2011 at 5:44 AM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
>> On Nov 7, 2011, at 10:25 AM, exarkun at twistedmatrix.com wrote:
>>
>>> reactor = getUtility(IReactor)?
>
>> That's not really a solution.  It's the barest glimpse of a large system
>> which might be applied as a solution.  Do you want to expand it?
>
> I'd like to echo this request for exposition.  My understanding is that
> 'getUtility' is just a baroque way to access a global variable, with most of
> the disadvantages of said globalness intact.  What does it provide that our
> existing import strategy doesn't?

An extra layer of abstraction and XML-based configuration – what's not to love?

It could allow for a clearer expression of dependency. Something that
only uses IReactorTime would only get the utility for that. This would
in turn make it easier to swap out only parts for testing, or to do
things like "speed up or slow down time from a protocol's
perspective".

However, you're right. Ultimately, it's a process-wide configuration
setting. That means that setting it is a slightly politer form of
monkey patching and that it's not fine-grained enough to do the other
things you suggested (e.g. "suspending a group of related objects").

jml



From dsturmfels at gmail.com  Tue Nov  8 04:59:45 2011
From: dsturmfels at gmail.com (dsturmfels at gmail.com)
Date: Tue, 8 Nov 2011 22:59:45 +1100
Subject: [Twisted-Python] Rts/Cts Serial port flow control in twisted
Message-ID: <CAAR7Vgq-71OJucSCFY5VsaykHBQMhRPgYAL5BtM616hV1Uzuwg@mail.gmail.com>

Hi,
Has anyone had much experience with serial flow control in twisted?

I've been using a twisted serial port in my gtk+ software for quite a while
now, and I can get xonxoff flow control to work, but for some reason,
rtscts flow control isn't working (or I may be using it wrong).

I'm connecting the software, via a usb-serial cable, to a Datalogic barcode
scanner cradle.
I've been able to replicate this problem with pyserial as well.

Without flow control on, I can for example, send a particular serial string
to the cradle, and the cradle replies instantly with it's software version
(as a string).
If I scan a barcode, this also instantly shows up in twisted/pyserial/etc
(as a string).

With xonxoff flow control on in both the software and cradle, the serial
connection works exactly the same as having no flow control on.

With rtscts flow control on in both the software and cradle however, the
cradle doesn't reply instantly with it's software version when the correct
string is sent.
However, a scanned barcode shows up instantly in the twisted/pyserial
software, and if you've previously requested the cradle software version,
the software version string only shows up directly after receiving a
barcode string.

Am I doing something wrong, or does anyone know what might be going on here?

Thanks,

Darcy.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111108/f1134232/attachment.html>

From exarkun at twistedmatrix.com  Tue Nov  8 07:57:37 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 08 Nov 2011 14:57:37 -0000
Subject: [Twisted-Python] Rts/Cts Serial port flow control in twisted
In-Reply-To: <CAAR7Vgq-71OJucSCFY5VsaykHBQMhRPgYAL5BtM616hV1Uzuwg@mail.gmail.com>
References: <CAAR7Vgq-71OJucSCFY5VsaykHBQMhRPgYAL5BtM616hV1Uzuwg@mail.gmail.com>
Message-ID: <20111108145737.20412.971335401.divmod.xquotient.12@localhost.localdomain>

On 11:59 am, dsturmfels at gmail.com wrote:
>Hi,
>Has anyone had much experience with serial flow control in twisted?

I don't. :)  It sounds like this may not really have much to do with 
Twisted, though.
>I've been using a twisted serial port in my gtk+ software for quite a 
>while
>now, and I can get xonxoff flow control to work, but for some reason,
>rtscts flow control isn't working (or I may be using it wrong).
>
>I'm connecting the software, via a usb-serial cable, to a Datalogic 
>barcode
>scanner cradle.
>I've been able to replicate this problem with pyserial as well.

As you perhaps already know, Twisted's serial port support is 
implemented in terms of pyserial - and the layer Twisted adds is very 
thin.  So the problem you experience with pyserial is probably exactly 
the same as the problem you experience with Twisted, since the latter is 
actually the same code as the former.
>
>Without flow control on, I can for example, send a particular serial 
>string
>to the cradle, and the cradle replies instantly with it's software 
>version
>(as a string).
>If I scan a barcode, this also instantly shows up in 
>twisted/pyserial/etc
>(as a string).
>
>With xonxoff flow control on in both the software and cradle, the 
>serial
>connection works exactly the same as having no flow control on.
>
>With rtscts flow control on in both the software and cradle however, 
>the
>cradle doesn't reply instantly with it's software version when the 
>correct
>string is sent.
>However, a scanned barcode shows up instantly in the twisted/pyserial
>software, and if you've previously requested the cradle software 
>version,
>the software version string only shows up directly after receiving a
>barcode string.
>
>Am I doing something wrong, or does anyone know what might be going on 
>here?

Do you know that the device supports RTS/CTS?  Do you know that the USB 
driver for the device supports it?  Do you know that the USB driver 
support for it is bug free? :)

Sorry I can't add anything more helpful.  I think you want to be looking 
for the problem at a pretty low level, though.  Perhaps even at the 
level of measuring voltage on the RTS pin...

Jean-Paul



From JOHN at egh.com  Tue Nov  8 08:53:10 2011
From: JOHN at egh.com (John Santos)
Date: Tue, 8 Nov 2011 11:53:10 -0400
Subject: [Twisted-Python] Rts/Cts Serial port flow control in twisted
In-Reply-To: <20111108145737.20412.971335401.divmod.xquotient.12@localhost.localdomain>
Message-ID: <1111108115014.16719A-100000@Ives.egh.com>

On Tue, 8 Nov 2011 exarkun at twistedmatrix.com wrote:

> On 11:59 am, dsturmfels at gmail.com wrote:
> >Hi,
> >Has anyone had much experience with serial flow control in twisted?
> 
> I don't. :)  It sounds like this may not really have much to do with 
> Twisted, though.
> >I've been using a twisted serial port in my gtk+ software for quite a 
> >while
> >now, and I can get xonxoff flow control to work, but for some reason,
> >rtscts flow control isn't working (or I may be using it wrong).
> >
> >I'm connecting the software, via a usb-serial cable, to a Datalogic 
> >barcode
> >scanner cradle.
> >I've been able to replicate this problem with pyserial as well.
> 
> As you perhaps already know, Twisted's serial port support is 
> implemented in terms of pyserial - and the layer Twisted adds is very 
> thin.  So the problem you experience with pyserial is probably exactly 
> the same as the problem you experience with Twisted, since the latter is 
> actually the same code as the former.
> >
> >Without flow control on, I can for example, send a particular serial 
> >string
> >to the cradle, and the cradle replies instantly with it's software 
> >version
> >(as a string).
> >If I scan a barcode, this also instantly shows up in 
> >twisted/pyserial/etc
> >(as a string).
> >
> >With xonxoff flow control on in both the software and cradle, the 
> >serial
> >connection works exactly the same as having no flow control on.
> >
> >With rtscts flow control on in both the software and cradle however, 
> >the
> >cradle doesn't reply instantly with it's software version when the 
> >correct
> >string is sent.
> >However, a scanned barcode shows up instantly in the twisted/pyserial
> >software, and if you've previously requested the cradle software 
> >version,
> >the software version string only shows up directly after receiving a
> >barcode string.
> >
> >Am I doing something wrong, or does anyone know what might be going on 
> >here?
> 
> Do you know that the device supports RTS/CTS?  Do you know that the USB 
> driver for the device supports it?  Do you know that the USB driver 
> support for it is bug free? :)

You also need to know that the serial cable(s) include the necessary 
leads, and that the null modem (or whatever) properly crosses them over.

An RS-232 break-out box (if they are still available) would be very
helpful here.

> 
> Sorry I can't add anything more helpful.  I think you want to be looking 
> for the problem at a pretty low level, though.  Perhaps even at the 
> level of measuring voltage on the RTS pin...
> 
> Jean-Paul
> 
> 

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539




From exarkun at twistedmatrix.com  Tue Nov  8 18:11:07 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Nov 2011 01:11:07 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4E15B499.2030206@imperial.ac.uk>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
Message-ID: <20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>

On 7 Jul, 01:28 pm, p.mayers at imperial.ac.uk wrote:
>On 06/07/11 20:44, exarkun at twistedmatrix.com wrote:
>>Thanks for volunteering.  It seems like the git mirror is well in 
>>hand.
>
>If so, can someone update this:
>
>http://twistedmatrix.com/trac/wiki/GitMirror

Apparently not.  It seems the other volunteers to deal with the git 
mirror haven't been able to dedicate the time necessary to this.

Anyone new want to step up?

Jean-Paul



From glyph at twistedmatrix.com  Tue Nov  8 18:43:09 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Nov 2011 17:43:09 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
Message-ID: <4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>


On Nov 8, 2011, at 5:11 PM, exarkun at twistedmatrix.com wrote:

> On 7 Jul, 01:28 pm, p.mayers at imperial.ac.uk wrote:
>> On 06/07/11 20:44, exarkun at twistedmatrix.com wrote:
>>> Thanks for volunteering.  It seems like the git mirror is well in 
>>> hand.
>> 
>> If so, can someone update this:
>> 
>> http://twistedmatrix.com/trac/wiki/GitMirror
> 
> Apparently not.  It seems the other volunteers to deal with the git 
> mirror haven't been able to dedicate the time necessary to this.
> 
> Anyone new want to step up?

I should stress that the most pressing problem here is not necessarily to provide a comprehensive, elaborate, automatic mirroring setup, but rather to provide canonical, correct, convenient instructions to people who are submitting tickets for review, and who want to use git for development.  Ideally these instructions would not end up knocking over our version control server, either :).  Right now, patches from git users show up in a variety of states of confusion and disarray: they're either based on an incredibly ancient version of trunk, or they're on a non-master branch of some repository and they don't say that, or they include 'a/' and 'b/' prefixes (i.e. they're -p1 patches when they should be -p0 according to the submission standard).

This is increasingly frustrating for me as a reviewer.  I've got git installed; I don't even mind running a git command or two in the process of doing a review.  But I would really like to get our submission standards straight so that the patches and branches that show up for review are something I (and others) can sensibly apply.

-glyph




From glyph at twistedmatrix.com  Tue Nov  8 18:59:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Nov 2011 17:59:56 -0800
Subject: [Twisted-Python] kqueue reactor / ticket #1918
In-Reply-To: <634914A010D0B943A035D226786325D42D0C0CE64E@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C0CE105@EXVMBX020-12.exch020.serverdata.net>
	<CA+U=zK3cDpTv_b8QoO-ZBN69D5qA_ka6NxmA+Zfas9kCtvxOEQ@mail.gmail.com>
	<20111104170024.17986.463496011.divmod.xquotient.316@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0C0CE231@EXVMBX020-12.exch020.serverdata.net>
	<11A50DE4-4B26-4361-B24C-CC58FE51873A@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE426@EXVMBX020-12.exch020.serverdata.net>
	<1320495156.2042.100.camel@blake>
	<634914A010D0B943A035D226786325D42D0C0CE449@EXVMBX020-12.exch020.serverdata.net>
	<68BB485F-5883-4A49-A17B-5AA212F6737B@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C0CE64E@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <ACB20B42-FB43-4188-A340-388B388E5108@twistedmatrix.com>


On Nov 7, 2011, at 10:20 AM, Tobias Oberstein wrote:

> Ok, I've prepared
>  
> http://twistedmatrix.com/trac/attachment/ticket/1918/kqueue.patch
>  
> which passes all tests (FreeBSD 8.3 p3 i386 / Python 2.7.1) but the ones related to open FDs (which are unrelated to the reactor stuff).
>  
> This works for me for FreeBSD .. I've tried on MacOSX .. there seem to be PTY issues there. Well.
>  
> I've also updated the
>  
> http://pypi.python.org/pypi/txkqreactor/0.2
>  
> for anyone who wants to try before this gets eventually merged into Twisted.
> 

I've reviewed it, although looking at this email now I realize I missed the 'kqueue.patch' and instead reviewed just the reactor and not the test change.  Your patch is totally formatted correctly so please ignore the comments to the contrary on the ticket!  And the test change looks like it might fix the failure that I mention in the review, so if you just deal with a few of those nitpicky issues and resubmit with the patch attachment and the 'review' a little closer to each other, I think this may be ready to land in Twisted soon.

If you want to maintain txkqreactor for older users of Twisted, you might want to provide a reactor plugin in your package so that users can do 'twistd --reactor txkq'.

Thanks again, it's great to see progress on this ancient ticket :).

-glyph





-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111108/fff5e05e/attachment.html>

From dave at krondo.com  Tue Nov  8 19:30:52 2011
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 8 Nov 2011 18:30:52 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
Message-ID: <CAPRbp05HLObedKnyuF9CWgP1Poo8-9gkHnMStxQS7=o+pfKTvQ@mail.gmail.com>

2011/11/8 Glyph Lefkowitz <glyph at twistedmatrix.com>

>
> On Nov 8, 2011, at 5:11 PM, exarkun at twistedmatrix.com wrote:
>
> > On 7 Jul, 01:28 pm, p.mayers at imperial.ac.uk wrote:
> >> On 06/07/11 20:44, exarkun at twistedmatrix.com wrote:
> >>> Thanks for volunteering.  It seems like the git mirror is well in
> >>> hand.
> >>
> >> If so, can someone update this:
> >>
> >> http://twistedmatrix.com/trac/wiki/GitMirror
> >
> > Apparently not.  It seems the other volunteers to deal with the git
> > mirror haven't been able to dedicate the time necessary to this.
> >
> > Anyone new want to step up?
>
> I should stress that the most pressing problem here is not necessarily to
> provide a comprehensive, elaborate, automatic mirroring setup, but rather
> to provide canonical, correct, convenient instructions to people who are
> submitting tickets for review, and who want to use git for development.
>  Ideally these instructions would not end up knocking over our version
> control server, either :).  Right now, patches from git users show up in a
> variety of states of confusion and disarray: they're either based on an
> incredibly ancient version of trunk, or they're on a non-master branch of
> some repository and they don't say that, or they include 'a/' and 'b/'
> prefixes (i.e. they're -p1 patches when they should be -p0 according to the
> submission standard).
>
> This is increasingly frustrating for me as a reviewer.  I've got git
> installed; I don't even mind running a git command or two in the process of
> doing a review.  But I would really like to get our submission standards
> straight so that the patches and branches that show up for review are
> something I (and others) can sensibly apply.


I am about to go out of town, but when I get back (December) I will have a
go at this
if no one else has done so already.

Every time in the past when I have attempted to make a git clone of the
Twisted repository,
git has complained that the Twisted svn repo is corrupt in some way. If
there is already a
reliable bzr mirror of Twisted, it might be easier to base the git repo on
that instead. Does
that seem feasible?

dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111108/c0200e77/attachment.html>

From screwtape at froup.com  Tue Nov  8 20:39:57 2011
From: screwtape at froup.com (Tim Allen)
Date: Wed, 9 Nov 2011 14:39:57 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
Message-ID: <20111109033957.GB9962@boombah.thristian.org>

On Tue, Nov 08, 2011 at 05:43:09PM -0800, Glyph Lefkowitz wrote:
> > On 7 Jul, 01:28 pm, p.mayers at imperial.ac.uk wrote:
> >> http://twistedmatrix.com/trac/wiki/GitMirror
> 
> I should stress that the most pressing problem here is not necessarily
> to provide a comprehensive, elaborate, automatic mirroring setup, but
> rather to provide canonical, correct, convenient instructions to
> people who are submitting tickets for review, and who want to use git
> for development.  Ideally these instructions would not end up knocking
> over our version control server, either :).

As far as I know (having written most of the documentation in the linked
wiki page, and from a brief skim through the git-svn manpage) it's
impossible to make a "shallow" clone with git-svn (something like an
ordinary "svn checkout", or "git clone --depth N"), so anyone who wants
to contribute to Twisted via git needs to clone the repository from
scratch (potentially overloading the SVN server, although nobody seemed
to notice or complain when I was doing my git-svn clone), or just copy
a tarball of somebody's comprehensive, elaborate, automatic mirroring
setup.

I'm not sure why I didn't document how to properly clone the Twisted SVN
repo with git-svn; I don't recall it being too hard (with the exception
of some old, closed branches with '+' in the name which I just blew
away), but it did take long enough that I didn't really want to
experiment and risk overloading the SVN server. 

With access to the SVN server over a local network, or with a lot of
patience, it shouldn't take much messing about to figure out canonical
"make a clone" and "update your clone" instructions.

> Right now, patches from git users show up in a variety of states of
> confusion and disarray: they're either based on an incredibly ancient
> version of trunk, or they're on a non-master branch of some repository
> and they don't say that,

I'm not sure why that would be, except that possibly they found
a tarball of somebody else's git-svn clone and forgot to update it, or
they're confused about the best way to get cloned from some unofficial,
no-longer updated mirror. Fixing this probably depends on having the
canonical, correct, convenient instructions and advertising them widely.

> or they include 'a/' and 'b/' prefixes (i.e.  they're -p1 patches when
> they should be -p0 according to the submission standard).

Git doesn't provide any way to generate patches without the fixed,
standard prefixes. As I understand it, this is to prevent ambiguities
when filenames contain spaces. So, you're probably stuck with it. :/



From glyph at twistedmatrix.com  Tue Nov  8 23:46:49 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Nov 2011 22:46:49 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAPRbp05HLObedKnyuF9CWgP1Poo8-9gkHnMStxQS7=o+pfKTvQ@mail.gmail.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<CAPRbp05HLObedKnyuF9CWgP1Poo8-9gkHnMStxQS7=o+pfKTvQ@mail.gmail.com>
Message-ID: <6DD44862-DA53-4945-9793-F45BD925E0E6@twistedmatrix.com>


On Nov 8, 2011, at 6:30 PM, Dave Peticolas wrote:

> I am about to go out of town, but when I get back (December) I will have a go at this
> if no one else has done so already.

Great, glad to hear it.  I hope we won't have to wait that long though ;).

> Every time in the past when I have attempted to make a git clone of the Twisted repository,
> git has complained that the Twisted svn repo is corrupt in some way.

It's a good thing that git has such lucid, well-documented error messages, or that message might confuse some people.  *cough*

> If there is already a reliable bzr mirror of Twisted, it might be easier to base the git repo on that instead. Does that seem feasible?

The reliable bzr mirror is available at <http://svn.twistedmatrix.com/bzr/Twisted/>.  I don't know much about bzr / git conversion beyond the existence of <https://launchpad.net/bzr-git>.  Does it work?  Is it any good?  The fact that it says right in the description that it doesn't support 'push' suggests to me that you can't get revisions from bzr to git, but hopefully I'm wrong about that.

-glyph




-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111108/ea34ec17/attachment.html>

From ivan at ludios.org  Wed Nov  9 00:06:49 2011
From: ivan at ludios.org (Ivan Kozik)
Date: Wed, 9 Nov 2011 07:06:49 +0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109033957.GB9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
Message-ID: <CAKyntiLoRk7H43x29Ds3e6+Gw5EhJQj4vnmgPx5rcpX+wdS6oQ@mail.gmail.com>

On Wed, Nov 9, 2011 at 03:39, Tim Allen <screwtape at froup.com> wrote:
> On Tue, Nov 08, 2011 at 05:43:09PM -0800, Glyph Lefkowitz wrote:
>> or they include 'a/' and 'b/' prefixes (i.e.  they're -p1 patches when
>> they should be -p0 according to the submission standard).
>
> Git doesn't provide any way to generate patches without the fixed,
> standard prefixes. As I understand it, this is to prevent ambiguities
> when filenames contain spaces. So, you're probably stuck with it. :/

I thought so too, but Glyph found this today:

git diff --src-prefix="./" --dst-prefix="./"


Ivan



From glyph at twistedmatrix.com  Wed Nov  9 01:50:23 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Nov 2011 00:50:23 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109033957.GB9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
Message-ID: <43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>


On Nov 8, 2011, at 7:39 PM, Tim Allen wrote:

> On Tue, Nov 08, 2011 at 05:43:09PM -0800, Glyph Lefkowitz wrote:
>>> On 7 Jul, 01:28 pm, p.mayers at imperial.ac.uk wrote:
>>>> http://twistedmatrix.com/trac/wiki/GitMirror
>> 
>> I should stress that the most pressing problem here is not necessarily
>> to provide a comprehensive, elaborate, automatic mirroring setup, but
>> rather to provide canonical, correct, convenient instructions to
>> people who are submitting tickets for review, and who want to use git
>> for development.  Ideally these instructions would not end up knocking
>> over our version control server, either :).
> 
> As far as I know (having written most of the documentation in the linked
> wiki page, and from a brief skim through the git-svn manpage) it's
> impossible to make a "shallow" clone with git-svn (something like an
> ordinary "svn checkout", or "git clone --depth N"), so anyone who wants
> to contribute to Twisted via git needs to clone the repository from
> scratch (potentially overloading the SVN server, although nobody seemed
> to notice or complain when I was doing my git-svn clone), or just copy
> a tarball of somebody's comprehensive, elaborate, automatic mirroring
> setup.

This is the part I don't understand.  Why doesn't 'git clone' work right in the face of svn metadata?  Is it possible to make it work right?  bzr-svn has some metadata it caches about the svn repository which doesn't stick around in the bzr repo or branch, but (from the performance of using it, at least) it doesn't need to stop the world and grab all of that data for most operations.

> I'm not sure why I didn't document how to properly clone the Twisted SVN
> repo with git-svn; I don't recall it being too hard (with the exception
> of some old, closed branches with '+' in the name which I just blew
> away), but it did take long enough that I didn't really want to
> experiment and risk overloading the SVN server. 

It would be better (for most users) to point to a canonical way to get access to a git-svn clone than to document how to make one, if making one takes 24 hours :).  But please do write this down so that at least the Twisted admins have some concept of how to re-create the git mirror or how to fix the issue if it occurs in the future.

> With access to the SVN server over a local network, or with a lot of
> patience, it shouldn't take much messing about to figure out canonical
> "make a clone" and "update your clone" instructions.

If we had an officially maintained mirror (pushed to github, I hope), I assume that non-committer users would not need to do SVN operations.  That's the main audience I'm interested in right now. There are a couple of committers who might be interested in doing development with git, but I'm confident they can figure that out for themselves :).

>> Right now, patches from git users show up in a variety of states of
>> confusion and disarray: they're either based on an incredibly ancient
>> version of trunk, or they're on a non-master branch of some repository
>> and they don't say that,
> 
> I'm not sure why that would be, except that possibly they found
> a tarball of somebody else's git-svn clone and forgot to update it, or
> they're confused about the best way to get cloned from some unofficial,
> no-longer updated mirror. Fixing this probably depends on having the
> canonical, correct, convenient instructions and advertising them widely.

You edited GitMirror before, you can do it again :).

>> or they include 'a/' and 'b/' prefixes (i.e.  they're -p1 patches when
>> they should be -p0 according to the submission standard).
> 
> Git doesn't provide any way to generate patches without the fixed,
> standard prefixes. As I understand it, this is to prevent ambiguities
> when filenames contain spaces. So, you're probably stuck with it. :/


I finally figured this out.  It is fixable.  The correct options to pass are:

git diff --src-prefix=./ --dst-prefix=./

Maybe it's possible to put this into a configuration file somewhere so that users don't need to type all of that every time?  Please put this on the GitMirror page as well.

-glyph




From screwtape at froup.com  Wed Nov  9 05:49:40 2011
From: screwtape at froup.com (Tim Allen)
Date: Wed, 9 Nov 2011 23:49:40 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
Message-ID: <20111109124940.GC9962@boombah.thristian.org>

On Wed, Nov 09, 2011 at 12:50:23AM -0800, Glyph Lefkowitz wrote:
> On Nov 8, 2011, at 7:39 PM, Tim Allen wrote:
> > As far as I know (having written most of the documentation in the linked
> > wiki page, and from a brief skim through the git-svn manpage) it's
> > impossible to make a "shallow" clone with git-svn (something like an
> > ordinary "svn checkout", or "git clone --depth N"), so anyone who wants
> > to contribute to Twisted via git needs to clone the repository from
> > scratch (potentially overloading the SVN server, although nobody seemed
> > to notice or complain when I was doing my git-svn clone), or just copy
> > a tarball of somebody's comprehensive, elaborate, automatic mirroring
> > setup.
> 
> This is the part I don't understand.  Why doesn't 'git clone' work
> right in the face of svn metadata?

Git has a ".git" directory in each repository, and expects certain files
to be present within it. If there's more stuff that it doesn't know
about, it just ignores it. git-svn keeps its metadata in other files
that git-clone doesn't know or care about, and hence they don't get
cloned.

I guess there's an argument for not cloning them - just because person
X has particular access rights to an SVN server doesn't mean that person
Y should have them just because they cloned a repository from X.

> bzr-svn has some metadata it caches about the svn repository which
> doesn't stick around in the bzr repo or branch, but (from the
> performance of using it, at least) it doesn't need to stop the world
> and grab all of that data for most operations.

In a git-svn-cloned repository, ordinary git operations are as speedy as
you'd expect. "git svn fetch" is slow because (I think) it has to
separately request each changed file from each SVN revision, and I think
there's some other operations that are slow because they involve talking
to the SVN server (like 'tell me what SVN properties are attached to
this file').

> It would be better (for most users) to point to a canonical way to get
> access to a git-svn clone than to document how to make one, if making
> one takes 24 hours :).

Don't worry, it doesn't take 24 hours! It's *much* longer than that! ;)

(as the wiki page states, in early 2010 and from the other side of the
world it took about a week; I don't have a feel for how it changes over
time)

> > I'm not sure why that would be, except that possibly they found
> > a tarball of somebody else's git-svn clone and forgot to update it, or
> > they're confused about the best way to get cloned from some unofficial,
> > no-longer updated mirror. Fixing this probably depends on having the
> > canonical, correct, convenient instructions and advertising them widely.
> 
> You edited GitMirror before, you can do it again :).

I'm editing it to include what we've discussed here, as well as a few
other things that I researched this afternoon and put into a reply that
my MUA ate before it was sent. 

I believe the next step should be that somebody with the required
permissions should connect to a machine on the same physical network as
the SVN server and run:

    time git svn clone --stdlayout --prefix="svn/" \
	    svn+ssh://svn.twistedmatrix.com/svn/Twisted

...then check the load on the SVN server and see if it's going to be an
issue to let the clone complete. If the clone completes successfully,
then (a) we know about how long it takes, and (b) we have a "seed"
repository we can potentially put up for people to download. I'd be
happy to download it, check it, and write up some documentation about
how people should update it. If it doesn't complete successfully, we
should have some helpful error messages, adjust the clone command line
and try again.



From exarkun at twistedmatrix.com  Wed Nov  9 06:22:19 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Nov 2011 13:22:19 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109124940.GC9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
Message-ID: <20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>

On 12:49 pm, screwtape at froup.com wrote:
>[snip]
>
>I believe the next step should be that somebody with the required
>permissions should connect to a machine on the same physical network as
>the SVN server and run:
>
>    time git svn clone --stdlayout --prefix="svn/" \
>             svn+ssh://svn.twistedmatrix.com/svn/Twisted
>
>...then check the load on the SVN server and see if it's going to be an
>issue to let the clone complete. If the clone completes successfully,
>then (a) we know about how long it takes, and (b) we have a "seed"
>repository we can potentially put up for people to download. I'd be
>happy to download it, check it, and write up some documentation about
>how people should update it. If it doesn't complete successfully, we
>should have some helpful error messages, adjust the clone command line
>and try again.

Why do we need to do this again?  There's already 
<http://svn.twistedmatrix.com/git/Twisted>, 
<http://svn.twistedmatrix.com/git/Twisted2.git>, and 
<http://svn.twistedmatrix.com/git/Twisted3.git>.

Jean-Paul



From kevin.horn at gmail.com  Wed Nov  9 06:38:31 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 9 Nov 2011 07:38:31 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
Message-ID: <CA+U=zK2ZCaD2m3+5BwCOk6+4ZbQ6dyg4xU2jfiYNzZrHcx_G5w@mail.gmail.com>

While we're on the topic of version control, I thought I'd mention that I
tried to create a mercurial mirror of the SVN repo using hgsubversion a
couple of weeks ago.  It ran fine until it eventually hung on a particular
commit and just refused to go any further.  I had planned to ask the
hgsubversion people about this but got distracted by other things.

I still intend to follow up at some point.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111109/0b6a4d3e/attachment.html>

From solipsis at pitrou.net  Wed Nov  9 06:54:37 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 9 Nov 2011 14:54:37 +0100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<CA+U=zK2ZCaD2m3+5BwCOk6+4ZbQ6dyg4xU2jfiYNzZrHcx_G5w@mail.gmail.com>
Message-ID: <20111109145437.0b51fad8@pitrou.net>

On Wed, 9 Nov 2011 07:38:31 -0600
Kevin Horn <kevin.horn at gmail.com> wrote:
> While we're on the topic of version control, I thought I'd mention that I
> tried to create a mercurial mirror of the SVN repo using hgsubversion a
> couple of weeks ago.  It ran fine until it eventually hung on a particular
> commit and just refused to go any further.  I had planned to ask the
> hgsubversion people about this but got distracted by other things.

I'm not using hgsubversion but I have a simple mirror of SVN trunk (and
only that) here: http://hg.pitrou.net/public/twisted/trunk/

Or you can also use https://bitbucket.org/pitrou/t3k/, which implicitly
contains the above-mentioned truk.

Regards

Antoine.





From screwtape at froup.com  Wed Nov  9 07:18:19 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 10 Nov 2011 01:18:19 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
Message-ID: <20111109141819.GD9962@boombah.thristian.org>

On Wed, Nov 09, 2011 at 01:22:19PM -0000, exarkun at twistedmatrix.com wrote:
> Why do we need to do this again?  There's already 
> <http://svn.twistedmatrix.com/git/Twisted>, 
> <http://svn.twistedmatrix.com/git/Twisted2.git>, and 
> <http://svn.twistedmatrix.com/git/Twisted3.git>.

The wiki mentions the first one a couple of times, although strictly
speaking you need to add "/.git" to the end to get a URL you can clone
from. Apart from being out-of-date, it seems to be missing a lot of
branches (there's only 56, and it stopped updating in 2011-03; my
personal git-svn hasn't been updated since 2010-09 and has 2062
branches), it hasn't correctly imported the branches under "releases",
and the only tags are "last_vfs_and_web2" and "releases".

I guess it's not strictly necessary to have tags or releases imported if
the goal is to let people develop patches against trunk, but the fact
that branches are missing worries me - if a Twisted committer adds your
patch to a branch, you want to be confident that the new branch will
actually show up when you update your repository.

As for the other two, this is the first I've heard of them. Is there any
documentation about how they differ, are there records of how these
repositories were created and/or updated that I could add to the
GitMirror wiki-page?



From tom at recursivedream.com  Wed Nov  9 07:30:57 2011
From: tom at recursivedream.com (Tom Davis)
Date: Wed, 09 Nov 2011 09:30:57 -0500
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109124940.GC9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
Message-ID: <4EBA8EA1.4090805@recursivedream.com>

On 11/09/2011 07:49 AM, Tim Allen wrote:
> On Wed, Nov 09, 2011 at 12:50:23AM -0800, Glyph Lefkowitz wrote:
>> On Nov 8, 2011, at 7:39 PM, Tim Allen wrote:
>>> As far as I know (having written most of the documentation in the linked
>>> wiki page, and from a brief skim through the git-svn manpage) it's
>>> impossible to make a "shallow" clone with git-svn (something like an
>>> ordinary "svn checkout", or "git clone --depth N"), so anyone who wants
>>> to contribute to Twisted via git needs to clone the repository from
>>> scratch (potentially overloading the SVN server, although nobody seemed
>>> to notice or complain when I was doing my git-svn clone), or just copy
>>> a tarball of somebody's comprehensive, elaborate, automatic mirroring
>>> setup.
>>
>> This is the part I don't understand.  Why doesn't 'git clone' work
>> right in the face of svn metadata?
>
> Git has a ".git" directory in each repository, and expects certain files
> to be present within it. If there's more stuff that it doesn't know
> about, it just ignores it. git-svn keeps its metadata in other files
> that git-clone doesn't know or care about, and hence they don't get
> cloned.
>
> I guess there's an argument for not cloning them - just because person
> X has particular access rights to an SVN server doesn't mean that person
> Y should have them just because they cloned a repository from X.
>
>> bzr-svn has some metadata it caches about the svn repository which
>> doesn't stick around in the bzr repo or branch, but (from the
>> performance of using it, at least) it doesn't need to stop the world
>> and grab all of that data for most operations.
>
> In a git-svn-cloned repository, ordinary git operations are as speedy as
> you'd expect. "git svn fetch" is slow because (I think) it has to
> separately request each changed file from each SVN revision, and I think
> there's some other operations that are slow because they involve talking
> to the SVN server (like 'tell me what SVN properties are attached to
> this file').
>
>> It would be better (for most users) to point to a canonical way to get
>> access to a git-svn clone than to document how to make one, if making
>> one takes 24 hours :).
>
> Don't worry, it doesn't take 24 hours! It's *much* longer than that! ;)
>
> (as the wiki page states, in early 2010 and from the other side of the
> world it took about a week; I don't have a feel for how it changes over
> time)

It's worth noting that you aren't *required* to clone all eight trillion 
Twisted revisions in order to get a working clone. Doing `git svn clone 
-rN:HEAD <url>` where `N` is some revision number will only clone from 
that revision. Obviously you will not have the entire history of the 
repository at this point, but I highly doubt that would be a meaningful 
loss for the majority of use cases.

I mean, yeah, it'd be nice to have a full git clone, but if you just 
prefer to use git for development and want to submit patches to Twisted 
it's hardly an insurmountable task compared to the other requirements 
for successfully working a ticket to completion.

>
>>> I'm not sure why that would be, except that possibly they found
>>> a tarball of somebody else's git-svn clone and forgot to update it, or
>>> they're confused about the best way to get cloned from some unofficial,
>>> no-longer updated mirror. Fixing this probably depends on having the
>>> canonical, correct, convenient instructions and advertising them widely.
>>
>> You edited GitMirror before, you can do it again :).
>
> I'm editing it to include what we've discussed here, as well as a few
> other things that I researched this afternoon and put into a reply that
> my MUA ate before it was sent.
>
> I believe the next step should be that somebody with the required
> permissions should connect to a machine on the same physical network as
> the SVN server and run:
>
>      time git svn clone --stdlayout --prefix="svn/" \
> 	    svn+ssh://svn.twistedmatrix.com/svn/Twisted
>
> ...then check the load on the SVN server and see if it's going to be an
> issue to let the clone complete. If the clone completes successfully,
> then (a) we know about how long it takes, and (b) we have a "seed"
> repository we can potentially put up for people to download. I'd be
> happy to download it, check it, and write up some documentation about
> how people should update it. If it doesn't complete successfully, we
> should have some helpful error messages, adjust the clone command line
> and try again.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at twistedmatrix.com  Wed Nov  9 07:49:50 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Nov 2011 14:49:50 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109141819.GD9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<20111109141819.GD9962@boombah.thristian.org>
Message-ID: <20111109144950.20412.1420554947.divmod.xquotient.32@localhost.localdomain>

On 02:18 pm, screwtape at froup.com wrote:
>On Wed, Nov 09, 2011 at 01:22:19PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>Why do we need to do this again?  There's already
>><http://svn.twistedmatrix.com/git/Twisted>,
>><http://svn.twistedmatrix.com/git/Twisted2.git>, and
>><http://svn.twistedmatrix.com/git/Twisted3.git>.
>
>The wiki mentions the first one a couple of times, although strictly
>speaking you need to add "/.git" to the end to get a URL you can clone
>from. Apart from being out-of-date, it seems to be missing a lot of
>branches (there's only 56, and it stopped updating in 2011-03; my
>personal git-svn hasn't been updated since 2010-09 and has 2062
>branches), it hasn't correctly imported the branches under "releases",
>and the only tags are "last_vfs_and_web2" and "releases".

It's out of date because no one who knows how to keep it updated has 
taken the necessary steps for that to happen.

Are there other problems with it which can only be fixed by starting 
over?

The point I am trying to convey is that performing some one-off import 
operation has been done before, repeatedly.  What's going to be 
different this time that causes the clone to stay up to date?
>I guess it's not strictly necessary to have tags or releases imported 
>if
>the goal is to let people develop patches against trunk, but the fact
>that branches are missing worries me - if a Twisted committer adds your
>patch to a branch, you want to be confident that the new branch will
>actually show up when you update your repository.

Indeed.  Is this something that's addressed by the git command in your 
earlier email?
>
>As for the other two, this is the first I've heard of them. Is there 
>any
>documentation about how they differ, are there records of how these
>repositories were created and/or updated that I could add to the
>GitMirror wiki-page?

I have no idea where they came from or how they differ.

Jean-Paul



From exarkun at twistedmatrix.com  Wed Nov  9 08:51:19 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Nov 2011 15:51:19 -0000
Subject: [Twisted-Python] Boston Twisted Sprint: November Edition
In-Reply-To: <CAKJpRM3+uXFd2a7SR-nDWv-STWU6aDPbuQ7LSaeacobORq9RKA@mail.gmail.com>
References: <CAKJpRM3+uXFd2a7SR-nDWv-STWU6aDPbuQ7LSaeacobORq9RKA@mail.gmail.com>
Message-ID: <20111109155119.20412.158665846.divmod.xquotient.34@localhost.localdomain>

On 25 Oct, 02:59 pm, tenth at twistedmatrix.com wrote:
>In an attempt to get back into the habit of holding Monthly sprints 
>planned
>somewhat more in advance, I'm pleased to announce that we'll be hosting
>another Twisted Sprint at the Smarterer offices on Sunday, November 
>13th,
>from about 1:00 to 9:00 PM.
>
>If you'd like to attend but aren't on the contact list, let me know! 
>We
>prefer that sprinters RSVP for food planning purposes (and to receive 
>more
>detailed instructions about getting into the building, which is locked 
>down
>on weekends).
>
>Thanks,

Hello everybody,

Just a reminder that the sprint is coming up.

Jean-Paul



From exarkun at twistedmatrix.com  Wed Nov  9 11:34:34 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Nov 2011 18:34:34 -0000
Subject: [Twisted-Python] Second pre-release of Twisted 11.1.0
In-Reply-To: <4EB29F1D.900@free.fr>
References: <4EB29F1D.900@free.fr>
Message-ID: <20111109183434.20412.1392450266.divmod.xquotient.35@localhost.localdomain>

On 3 Nov, 02:03 pm, therve at free.fr wrote:
> From the sunny land of Orlando, I'm pleased to announce the second
>pre-release of Twisted 11.1.
>
>You can find the tarballs here:
>
>     http://people.canonical.com/~therve/Twisted/11.1.0pre2/
>
>Among the 17 bugs fixed since the last pre-release, a fix in the new 
>TLS
>code in connection lost management, and an error fixed with IOCP under
>64bits Windows.
>
>Please give it all the testing you can!

Doing well on my 32 bit Ubuntu Lucid mail server for several days now.

Jean-Paul



From jeff at ocjtech.us  Wed Nov  9 12:39:44 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 9 Nov 2011 13:39:44 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109124940.GC9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
Message-ID: <CAD-DQxRccx0U+7Z0y-KV8mAWKAjQm7AkGJy1=LKJWHKCbo=zBQ@mail.gmail.com>

On Wed, Nov 9, 2011 at 6:49 AM, Tim Allen <screwtape at froup.com> wrote:
>
> I believe the next step should be that somebody with the required
> permissions should connect to a machine on the same physical network as
> the SVN server and run:
>
>    time git svn clone --stdlayout --prefix="svn/" \
>            svn+ssh://svn.twistedmatrix.com/svn/Twisted

Which will fail spectacularly because the Twisted SVN repository does
not use the standard layout that git-svn is expecting.  In particular
the branches/releases and tags/releases directory will really mess
things up.

-- 
Jeff Ollie



From jeff at ocjtech.us  Wed Nov  9 12:41:00 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 9 Nov 2011 13:41:00 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
Message-ID: <CAD-DQxQNW6cm9KB2ujZchkM2_EZPvA5FJdFHbP7i=JBFsTeO-g@mail.gmail.com>

On Wed, Nov 9, 2011 at 7:22 AM,  <exarkun at twistedmatrix.com> wrote:
>
> Why do we need to do this again?  There's already
> <http://svn.twistedmatrix.com/git/Twisted>,

Last updated in March 2011.

> <http://svn.twistedmatrix.com/git/Twisted2.git>, and

Last updated in 2004

> <http://svn.twistedmatrix.com/git/Twisted3.git>.

Last updated in July 2011.

They all appear to be flawed in that the tags/releases and
branches/releases directories were imported improperly.

-- 
Jeff Ollie



From glyph at twistedmatrix.com  Wed Nov  9 12:42:34 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Nov 2011 11:42:34 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAD-DQxQNW6cm9KB2ujZchkM2_EZPvA5FJdFHbP7i=JBFsTeO-g@mail.gmail.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<CAD-DQxQNW6cm9KB2ujZchkM2_EZPvA5FJdFHbP7i=JBFsTeO-g@mail.gmail.com>
Message-ID: <ABF002AF-5234-4A15-880F-EC470A60CBA3@twistedmatrix.com>


On Nov 9, 2011, at 11:41 AM, Jeffrey Ollie wrote:

> On Wed, Nov 9, 2011 at 7:22 AM,  <exarkun at twistedmatrix.com> wrote:
>> 
>> Why do we need to do this again?  There's already
>> <http://svn.twistedmatrix.com/git/Twisted>,
> 
> Last updated in March 2011.
> 
>> <http://svn.twistedmatrix.com/git/Twisted2.git>, and
> 
> Last updated in 2004
> 
>> <http://svn.twistedmatrix.com/git/Twisted3.git>.
> 
> Last updated in July 2011.
> 
> They all appear to be flawed in that the tags/releases and
> branches/releases directories were imported improperly.

The question is: will the suggested re-import actually import those directories properly?  The command-line in the previous email doesn't suggest that to me; I would imagine it would at least have to have the word "releases" in there somewhere, since that's not part of the SVN layout.

-glyph




From jeff at ocjtech.us  Wed Nov  9 12:47:10 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 9 Nov 2011 13:47:10 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <ABF002AF-5234-4A15-880F-EC470A60CBA3@twistedmatrix.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<CAD-DQxQNW6cm9KB2ujZchkM2_EZPvA5FJdFHbP7i=JBFsTeO-g@mail.gmail.com>
	<ABF002AF-5234-4A15-880F-EC470A60CBA3@twistedmatrix.com>
Message-ID: <CAD-DQxQ9=_eE_0qXeTC28satdMRvH08xNLM2N63wEP2Ka+Z-Wg@mail.gmail.com>

On Wed, Nov 9, 2011 at 1:42 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Nov 9, 2011, at 11:41 AM, Jeffrey Ollie wrote:
>
>> On Wed, Nov 9, 2011 at 7:22 AM,  <exarkun at twistedmatrix.com> wrote:
>>>
>>> Why do we need to do this again?  There's already
>>> <http://svn.twistedmatrix.com/git/Twisted>,
>>
>> Last updated in March 2011.
>>
>>> <http://svn.twistedmatrix.com/git/Twisted2.git>, and
>>
>> Last updated in 2004
>>
>>> <http://svn.twistedmatrix.com/git/Twisted3.git>.
>>
>> Last updated in July 2011.
>>
>> They all appear to be flawed in that the tags/releases and
>> branches/releases directories were imported improperly.
>
> The question is: will the suggested re-import actually import those directories properly?  The command-line in the previous email doesn't suggest that to me; I would imagine it would at least have to have the word "releases" in there somewhere, since that's not part of the SVN layout.

No, the suggested re-import won't work - it'll have the same flaws.
I'm working on adapting some scripts that I use to maintain my git
mirror of the Asterisk SVN repository which has some of the same
problems.

-- 
Jeff Ollie



From glyph at twistedmatrix.com  Wed Nov  9 12:49:49 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Nov 2011 11:49:49 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAD-DQxQ9=_eE_0qXeTC28satdMRvH08xNLM2N63wEP2Ka+Z-Wg@mail.gmail.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<CAD-DQxQNW6cm9KB2ujZchkM2_EZPvA5FJdFHbP7i=JBFsTeO-g@mail.gmail.com>
	<ABF002AF-5234-4A15-880F-EC470A60CBA3@twistedmatrix.com>
	<CAD-DQxQ9=_eE_0qXeTC28satdMRvH08xNLM2N63wEP2Ka+Z-Wg@mail.gmail.com>
Message-ID: <0F4EC7B3-9A28-4A03-BAA7-891553797355@twistedmatrix.com>


On Nov 9, 2011, at 11:47 AM, Jeffrey Ollie wrote:

> On Wed, Nov 9, 2011 at 1:42 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> 
>> On Nov 9, 2011, at 11:41 AM, Jeffrey Ollie wrote:
>> 
>>> On Wed, Nov 9, 2011 at 7:22 AM,  <exarkun at twistedmatrix.com> wrote:
>>>> 
>>>> Why do we need to do this again?  There's already
>>>> <http://svn.twistedmatrix.com/git/Twisted>,
>>> 
>>> Last updated in March 2011.
>>> 
>>>> <http://svn.twistedmatrix.com/git/Twisted2.git>, and
>>> 
>>> Last updated in 2004
>>> 
>>>> <http://svn.twistedmatrix.com/git/Twisted3.git>.
>>> 
>>> Last updated in July 2011.
>>> 
>>> They all appear to be flawed in that the tags/releases and
>>> branches/releases directories were imported improperly.
>> 
>> The question is: will the suggested re-import actually import those directories properly?  The command-line in the previous email doesn't suggest that to me; I would imagine it would at least have to have the word "releases" in there somewhere, since that's not part of the SVN layout.
> 
> No, the suggested re-import won't work - it'll have the same flaws.
> I'm working on adapting some scripts that I use to maintain my git
> mirror of the Asterisk SVN repository which has some of the same
> problems.


Thanks!  I look forward to seeing them.




From screwtape at froup.com  Wed Nov  9 15:59:42 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 10 Nov 2011 09:59:42 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAD-DQxRccx0U+7Z0y-KV8mAWKAjQm7AkGJy1=LKJWHKCbo=zBQ@mail.gmail.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<CAD-DQxRccx0U+7Z0y-KV8mAWKAjQm7AkGJy1=LKJWHKCbo=zBQ@mail.gmail.com>
Message-ID: <20111109225942.GE9962@boombah.thristian.org>

On Wed, Nov 09, 2011 at 01:39:44PM -0600, Jeffrey Ollie wrote:
> On Wed, Nov 9, 2011 at 6:49 AM, Tim Allen <screwtape at froup.com> wrote:
> >
> > I believe the next step should be that somebody with the required
> > permissions should connect to a machine on the same physical network as
> > the SVN server and run:
> >
> >    time git svn clone --stdlayout --prefix="svn/" \
> >            svn+ssh://svn.twistedmatrix.com/svn/Twisted
> 
> Which will fail spectacularly because the Twisted SVN repository does
> not use the standard layout that git-svn is expecting.  In particular
> the branches/releases and tags/releases directory will really mess
> things up.

Yes, branches/releases and tags/releases would need to be specially
handled; I'm not sure if it's possible to import them as just more
branches and tags, or if they'd have to be removed entirely. I wouldn't
call that a spectactular failure, though - you should still have trunk
and the various feature branches, which is all you need to submit
patches.



From screwtape at froup.com  Wed Nov  9 16:18:03 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 10 Nov 2011 10:18:03 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4EBA8EA1.4090805@recursivedream.com>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
Message-ID: <20111109231803.GF9962@boombah.thristian.org>

On Wed, Nov 09, 2011 at 09:30:57AM -0500, Tom Davis wrote:
> It's worth noting that you aren't *required* to clone all eight trillion 
> Twisted revisions in order to get a working clone. Doing `git svn clone 
> -rN:HEAD <url>` where `N` is some revision number will only clone from 
> that revision.

Yet another useful thing I've missed in the git-svn manpage. Thanks!

In fact, it seems you can just specify "-rHEAD" and you'll get a repo
with only the latest trunk revision in it. If the resulting repository
can gracefully handle updates that add new branches, and new commits on
old branches that haven't been imported, this would probably be the best
approach for Git-using potential contributors.



From glyph at twistedmatrix.com  Wed Nov  9 16:28:43 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Nov 2011 15:28:43 -0800
Subject: [Twisted-Python] Second pre-release of Twisted 11.1.0
In-Reply-To: <20111109183434.20412.1392450266.divmod.xquotient.35@localhost.localdomain>
References: <4EB29F1D.900@free.fr>
	<20111109183434.20412.1392450266.divmod.xquotient.35@localhost.localdomain>
Message-ID: <F5C0E29D-C3F0-43CF-B8DC-8BF3D8D9FD88@twistedmatrix.com>


On Nov 9, 2011, at 10:34 AM, exarkun at twistedmatrix.com wrote:

> On 3 Nov, 02:03 pm, therve at free.fr wrote:
>> From the sunny land of Orlando, I'm pleased to announce the second
>> pre-release of Twisted 11.1.
>> 
>> You can find the tarballs here:
>> 
>>    http://people.canonical.com/~therve/Twisted/11.1.0pre2/
>> 
>> Among the 17 bugs fixed since the last pre-release, a fix in the new 
>> TLS
>> code in connection lost management, and an error fixed with IOCP under
>> 64bits Windows.
>> 
>> Please give it all the testing you can!
> 
> Doing well on my 32 bit Ubuntu Lucid mail server for several days now.

Looks happy testing against Calendar Server trunk, in all the various ways that caused problems with pre1.

-glyph




From athornton1974 at gmail.com  Wed Nov  9 19:13:20 2011
From: athornton1974 at gmail.com (Andrew Thornton)
Date: Wed, 9 Nov 2011 21:13:20 -0500
Subject: [Twisted-Python] Creating a PKCS#11 Enabled SSL Proxy
Message-ID: <1C133CB5EF6F4591A83737FB21EE18B3@gmail.com>

I am in need of an ssl web proxy that can read a certificate off of a PKCS#11 device and then do client authentication using that certificate. I thought that twisted would be a great way to do this. I was wondering if anyone on this list has put anything like that together before. I have seen the tutorials and walkthroughs the outline the steps to create an http proxy using twisted, but not much about https and nothing about using a wrapper like pkcs11 or PyKCS11. I appreciate any direction that anyone can give. 




From screwtape at froup.com  Wed Nov  9 20:25:00 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 10 Nov 2011 14:25:00 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109144950.20412.1420554947.divmod.xquotient.32@localhost.localdomain>
References: <20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<20111109132219.20412.2072150947.divmod.xquotient.17@localhost.localdomain>
	<20111109141819.GD9962@boombah.thristian.org>
	<20111109144950.20412.1420554947.divmod.xquotient.32@localhost.localdomain>
Message-ID: <20111110032500.GG9962@boombah.thristian.org>

On Wed, Nov 09, 2011 at 02:49:50PM -0000, exarkun at twistedmatrix.com wrote:
> On 02:18 pm, screwtape at froup.com wrote:
> >On Wed, Nov 09, 2011 at 01:22:19PM -0000, exarkun at twistedmatrix.com 
> >wrote:
> >>Why do we need to do this again?  There's already
> >><http://svn.twistedmatrix.com/git/Twisted>,
> >><http://svn.twistedmatrix.com/git/Twisted2.git>, and
> >><http://svn.twistedmatrix.com/git/Twisted3.git>.
> >
> >The wiki mentions the first one a couple of times, although strictly
> >speaking you need to add "/.git" to the end to get a URL you can clone
> >from. Apart from being out-of-date, it seems to be missing a lot of
> >branches (there's only 56, and it stopped updating in 2011-03; my
> >personal git-svn hasn't been updated since 2010-09 and has 2062
> >branches), it hasn't correctly imported the branches under "releases",
> >and the only tags are "last_vfs_and_web2" and "releases".
> 
> It's out of date because no one who knows how to keep it updated has 
> taken the necessary steps for that to happen.
> 
> Are there other problems with it which can only be fixed by starting 
> over?

I suspect that the other problems I mentioned can only be fixed by
starting over, yes.

> The point I am trying to convey is that performing some one-off import 
> operation has been done before, repeatedly.  What's going to be 
> different this time that causes the clone to stay up to date?

I fully expect that whatever broke previous attempts will break this new
attempt too. The difference will be that since there's a record of how
the new repository was created, and assuming there'll be a record of
what happened when the new repository broke, this time we'll be able to
reproduce the problem and work out a solution.

> >I guess it's not strictly necessary to have tags or releases imported
> >if the goal is to let people develop patches against trunk, but the
> >fact that branches are missing worries me - if a Twisted committer
> >adds your patch to a branch, you want to be confident that the new
> >branch will actually show up when you update your repository.
> 
> Indeed.  Is this something that's addressed by the git command in your 
> earlier email?

The "--stdlayout" parameter causes git-svn to import branches in the
standard SVN "branches" directory, which is where Twisted seems to keep
its feature branches (the most important ones for people working on
patches).

With some effort it might be possible to import release branches in
"branches/releases", but that's obviously a lesser priority.

> >As for the other two, this is the first I've heard of them. Is there
> >any documentation about how they differ, are there records of how
> >these repositories were created and/or updated that I could add to
> >the GitMirror wiki-page?
> 
> I have no idea where they came from or how they differ.

It turns out Twisted2 is the newest (July 2011) and has about the right
number of branches. It also seems to have imported the various
"ctrl+backslash-2371+2123" branches that I recall causing issues before.
On the other hand, it still imports "branches/releases" as a single
branch, and has no tags. "Twisted3" might have been created for one of
those reasons... or possibly for some other reason that's not
immediately obvious.



From exarkun at twistedmatrix.com  Thu Nov 10 07:45:01 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 10 Nov 2011 14:45:01 -0000
Subject: [Twisted-Python] Creating a PKCS#11 Enabled SSL Proxy
In-Reply-To: <1C133CB5EF6F4591A83737FB21EE18B3@gmail.com>
References: <1C133CB5EF6F4591A83737FB21EE18B3@gmail.com>
Message-ID: <20111110144501.20412.1821045443.divmod.xquotient.42@localhost.localdomain>

On 02:13 am, athornton1974 at gmail.com wrote:
>I am in need of an ssl web proxy that can read a certificate off of a 
>PKCS#11 device and then do client authentication using that 
>certificate. I thought that twisted would be a great way to do this. I 
>was wondering if anyone on this list has put anything like that 
>together before. I have seen the tutorials and walkthroughs the outline 
>the steps to create an http proxy using twisted, but not much about 
>https and nothing about using a wrapper like pkcs11 or PyKCS11. I 
>appreciate any direction that anyone can give.

Twisted currently provides SSL support exclusively based on the features 
of OpenSSL (via pyOpenSSL).  So, if pyOpenSSL supports something, then 
you can probably do it with Twisted.

pyOpenSSL doesn't currently support PKCS11 and it appears that OpenSSL 
itself needs to be patched and build specially to support it.  So, with 
some effort you may be able to create something that satisfies your 
requirements, but there doesn't appear to be a working solution out of 
the box.

This is just my assessment based on some familiarity with SSL and some 
searching around this morning; I've never tried to use PKCS11 myself.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Nov 12 22:05:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 13 Nov 2011 05:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1321160725.92.1387638305@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111113/6ecfd5c3/attachment-0001.html>

From screwtape at froup.com  Sat Nov 12 23:13:41 2011
From: screwtape at froup.com (Tim Allen)
Date: Sun, 13 Nov 2011 17:13:41 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111109231803.GF9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
Message-ID: <20111113061340.GH9962@boombah.thristian.org>

On Thu, Nov 10, 2011 at 10:18:03AM +1100, Tim Allen wrote:
> In fact, it seems you can just specify "-rHEAD" and you'll get a repo
> with only the latest trunk revision in it. If the resulting repository
> can gracefully handle updates that add new branches, and new commits on
> old branches that haven't been imported, this would probably be the best
> approach for Git-using potential contributors.

I did a git-svn clone with "-rHEAD" on the day I posted that message,
and now when I run "git svn fetch" my repository has the following
branches:

    $ git branch -a
    * master
      remotes/svn/multicast-doc-4262
      remotes/svn/new-resource-5379
      remotes/svn/select-halfclose-3037
      remotes/svn/trunk
      remotes/svn/udp-doread-win-3396-2
      remotes/svn/website-template-5380

The "gitk" branch visualisation tool shows me that SVN trunk is currently at
r33098 (which merged udp-doread-win-3396-2, although it doesn't show up
as a merge commit in git) and all the other branches have been created
from that point. So, it looks like it is gracefully handling new
branches, which is all we really wanted.

Should I update the "GitMirror" page to suggest people run "git svn
clone -rHEAD" instead of using the no-longer-updated official mirror?
Perhaps the page should also be renamed?



From glyph at twistedmatrix.com  Sun Nov 13 19:20:46 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 13 Nov 2011 21:20:46 -0500
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111113061340.GH9962@boombah.thristian.org>
References: <1309888284.4006.16.camel@pp>
	<20110706194456.3761.1107693784.divmod.xquotient.24@localhost.localdomain>
	<4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
Message-ID: <AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>


On Nov 13, 2011, at 1:13 AM, Tim Allen wrote:

> On Thu, Nov 10, 2011 at 10:18:03AM +1100, Tim Allen wrote:
>> In fact, it seems you can just specify "-rHEAD" and you'll get a repo
>> with only the latest trunk revision in it. If the resulting repository
>> can gracefully handle updates that add new branches, and new commits on
>> old branches that haven't been imported, this would probably be the best
>> approach for Git-using potential contributors.
> 
> I did a git-svn clone with "-rHEAD" on the day I posted that message,
> and now when I run "git svn fetch" my repository has the following
> branches:
> 
>    $ git branch -a
>    * master
>      remotes/svn/multicast-doc-4262
>      remotes/svn/new-resource-5379
>      remotes/svn/select-halfclose-3037
>      remotes/svn/trunk
>      remotes/svn/udp-doread-win-3396-2
>      remotes/svn/website-template-5380
> 
> The "gitk" branch visualisation tool shows me that SVN trunk is currently at
> r33098 (which merged udp-doread-win-3396-2, although it doesn't show up
> as a merge commit in git) and all the other branches have been created
> from that point. So, it looks like it is gracefully handling new
> branches, which is all we really wanted.
> 
> Should I update the "GitMirror" page to suggest people run "git svn
> clone -rHEAD" instead of using the no-longer-updated official mirror?
> Perhaps the page should also be renamed?

Sounds like this is a better idea than what we're advising people to do now, although it also sounds like we should add a post-commit hook to push to tell our local bzr mirror to 'git svn fetch' and then the official mirror will be a good idea again.  (And possibly something with pushing to github?  I don't know.  Someone who cares about Git should set it up, not me. :))




From screwtape at froup.com  Sun Nov 13 20:47:04 2011
From: screwtape at froup.com (Tim Allen)
Date: Mon, 14 Nov 2011 14:47:04 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
Message-ID: <20111114034704.GI9962@boombah.thristian.org>

On Sun, Nov 13, 2011 at 09:20:46PM -0500, Glyph Lefkowitz wrote:
> On Nov 13, 2011, at 1:13 AM, Tim Allen wrote:
> > Should I update the "GitMirror" page to suggest people run "git svn
> > clone -rHEAD" instead of using the no-longer-updated official mirror?
> > Perhaps the page should also be renamed?
> 
> Sounds like this is a better idea than what we're advising people to
> do now,

I'll update the page, then.

> although it also sounds like we should add a post-commit hook
> to push to tell our local bzr mirror to 'git svn fetch' and then the
> official mirror will be a good idea again.

I'm not sure whether an official mirror is a good idea - it's another
service that would need to be maintained, and it seems that among
Twisted core devs there's not a lot of interest or expertise in
maintaining it. If Git-using contributors can take care of things
themselves without adding any extra administrative load on Twisted's
volunteers, what use would an official Git mirror be?



From exarkun at twistedmatrix.com  Sun Nov 13 21:39:43 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 14 Nov 2011 04:39:43 -0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111114034704.GI9962@boombah.thristian.org>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
Message-ID: <20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>

On 03:47 am, screwtape at froup.com wrote:
>On Sun, Nov 13, 2011 at 09:20:46PM -0500, Glyph Lefkowitz wrote:
>>On Nov 13, 2011, at 1:13 AM, Tim Allen wrote:
>> > Should I update the "GitMirror" page to suggest people run "git svn
>> > clone -rHEAD" instead of using the no-longer-updated official 
>>mirror?
>> > Perhaps the page should also be renamed?
>>
>>Sounds like this is a better idea than what we're advising people to
>>do now,
>
>I'll update the page, then.
>>although it also sounds like we should add a post-commit hook
>>to push to tell our local bzr mirror to 'git svn fetch' and then the
>>official mirror will be a good idea again.
>
>I'm not sure whether an official mirror is a good idea - it's another
>service that would need to be maintained, and it seems that among
>Twisted core devs there's not a lot of interest or expertise in
>maintaining it. If Git-using contributors can take care of things
>themselves without adding any extra administrative load on Twisted's
>volunteers, what use would an official Git mirror be?

The obvious answer is that having one mirror to point people at is 
better than letting them wonder amongst a forest of dozens of mirrors. 
On the other hand, maybe Git users prefer the latter scenario.  A number 
of people have asked for an official Git mirror, though.  If no one 
wants this anymore, then by all means let's forget about it.

Jean-Paul



From glyph at twistedmatrix.com  Sun Nov 13 22:22:59 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 14 Nov 2011 00:22:59 -0500
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
Message-ID: <79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>


On Nov 13, 2011, at 11:39 PM, exarkun at twistedmatrix.com wrote:

>> I'm not sure whether an official mirror is a good idea - it's another
>> service that would need to be maintained, and it seems that among
>> Twisted core devs there's not a lot of interest or expertise in
>> maintaining it. If Git-using contributors can take care of things
>> themselves without adding any extra administrative load on Twisted's
>> volunteers, what use would an official Git mirror be?
> 
> The obvious answer is that having one mirror to point people at is 
> better than letting them wonder amongst a forest of dozens of mirrors. 
> On the other hand, maybe Git users prefer the latter scenario.  A number 
> of people have asked for an official Git mirror, though.  If no one 
> wants this anymore, then by all means let's forget about it.

Tim: you're right that there isn't much interest among the current Twisted core development team.  But the whole point of having a Git mirror (and a presence on Github, which I think is the next step) is to attract new developers to this community.

That's why the topic of this thread is "Twisted Project Jobs Volunteer".  We're asking for someone with expertise in this area to step up, volunteer to help maintain this mirror, which should help us attract more people who are interested in the same going forward.

Is that person you?  You're already maintaining the wiki page - and your participation in this thread has probably taken more time than the setup would have, if you have the relevant knowledge :).  Is there something you're missing?  Some administrative credential, perhaps?  Information about where the relevant code lives?  If you're up for continuing on this, I'm sure we can get you whatever you need :).

Thanks,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111114/feaac533/attachment.html>

From tobias.oberstein at tavendo.de  Mon Nov 14 01:43:59 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 00:43:59 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C264673@EXVMBX020-12.exch020.serverdata.net>

> But the whole point of having a Git mirror (and a presence on Github, which I think is the next step) is to attract new developers to this community.

An official presence on Github would be definitely desirable I think, and even more than having a Git mirror technically.

Not only attracting new devs, but also user and general public visibility .. how many followers etc etc

Also, major competitors are there .. node.js, eventmachine, ..

I think  - at this point - it's probably fair to say Github has surpassed other OSS collaboration places once popular .. i.e. sourceforge. (I'm not affiliated with Github in any way .. just my impression).

 



From dynamicgl at gmail.com  Mon Nov 14 02:42:01 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 14 Nov 2011 17:42:01 +0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <634914A010D0B943A035D226786325D42D0C264673@EXVMBX020-12.exch020.serverdata.net>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<634914A010D0B943A035D226786325D42D0C264673@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CABkOF6TuhqcF4kf=Zaja7Eg0K5T=fdvSLKfmW1=nn3MqmcR06Q@mail.gmail.com>

placing in Github is almost a must for attracting developers...

At least, it is easy to check the codes...

On Mon, Nov 14, 2011 at 4:43 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> > But the whole point of having a Git mirror (and a presence on Github,
> which I think is the next step) is to attract new developers to this
> community.
>
> An official presence on Github would be definitely desirable I think, and
> even more than having a Git mirror technically.
>
> Not only attracting new devs, but also user and general public visibility
> .. how many followers etc etc
>
> Also, major competitors are there .. node.js, eventmachine, ..
>
> I think  - at this point - it's probably fair to say Github has surpassed
> other OSS collaboration places once popular .. i.e. sourceforge. (I'm not
> affiliated with Github in any way .. just my impression).
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111114/fbb6e15c/attachment.html>

From screwtape at froup.com  Mon Nov 14 03:48:07 2011
From: screwtape at froup.com (Tim Allen)
Date: Mon, 14 Nov 2011 21:48:07 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
References: <4E15B499.2030206@imperial.ac.uk>
	<20111109011107.20412.1278544054.divmod.xquotient.15@localhost.localdomain>
	<4B1B04C3-1C61-4C8E-BD56-51B700040CFE@twistedmatrix.com>
	<20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
Message-ID: <20111114104807.GJ9962@boombah.thristian.org>

On Sun, Nov 13, 2011 at 09:20:46PM -0500, Glyph Lefkowitz wrote:
> On Nov 13, 2011, at 1:13 AM, Tim Allen wrote:
> > Should I update the "GitMirror" page to suggest people run "git svn
> > clone -rHEAD" instead of using the no-longer-updated official mirror?
> > Perhaps the page should also be renamed?
> 
> Sounds like this is a better idea than what we're advising people to
> do now,

GitMirror page updated.

I discovered a wrinkle, though: it turns out that "git svn clone -rHEAD"
only works if the HEAD of the SVN repo happens to be a commit to trunk.
If the HEAD happens to be a commit on a branch, tag, or anything else,
it only downloads the contents of the branch, tries to set up the trunk
and can't find it, then collapses in a heap.

I've added a step that uses "svn info" to find the last trunk commit, so
the user can substitute that revision number into the "git svn clone"
command.

I'd appreciate it if anyone with a vague familiarity with Git could read
over the page and tell me if there's anything I can improve.



From screwtape at froup.com  Mon Nov 14 04:55:53 2011
From: screwtape at froup.com (Tim Allen)
Date: Mon, 14 Nov 2011 22:55:53 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
References: <20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
Message-ID: <20111114115553.GK9962@boombah.thristian.org>

On Mon, Nov 14, 2011 at 12:22:59AM -0500, Glyph wrote:
> Tim: you're right that there isn't much interest among the current
> Twisted core development team.  But the whole point of having a Git
> mirror (and a presence on Github, which I think is the next step) is
> to attract new developers to this community.
> 
> That's why the topic of this thread is "Twisted Project Jobs
> Volunteer".  We're asking for someone with expertise in this area to
> step up, volunteer to help maintain this mirror, which should help us
> attract more people who are interested in the same going forward.

There is a thing here that worries me, although I'm not sure I can
express it clearly without sounding crazy.

Back in the days when CVS and SVN were king, the only way you could
interact with a project was by submitting patches, and since only
commiters interacted directly with the master repository, it didn't
really matter much how branches and merges were handled. As long as you
kept things in a way that made sense to you, that was OK - nobody else
would see it.

Since Git is a distributed VCS, suddenly everybody has access to
everybody else's repositories, up close and personal, and suddenly (like
when any subjective matter is discussed by a large group of people),
people have *opinions* about other people's repositories, and there are
*fashions* and *best practices* and all that stuff. 

I'm not a Github user myself, so I don't know this first hand, but I as
I understand it the Github community is has even more social
expectations, like pull requests and the Github issue tracker.

It's very well to say "make git mirror, push to Github, get new
contributors", but I think there's a social impedance mismatch here
that's going to cause problems, or at least make people wary because
Twisted's Github project behaves weirdly and differently from other
Github projects they're used to.

Some examples that I can think of:
- The most obvious example: in Git, when you merge a branch to trunk,
  you get a merge commit; in SVN (at least the way Twisted uses it) you
  just get an ordinary commit that squashes together all the branch
  commits. That's not a technical problem, but the difference between
  the Twisted commit graph and an ordinary commit graph is
  a "something's not right" warning.
- In Git, the cultural expectation is "submit a sequence of patches";
  Twisted generally wants all your changes in a single patch, since the
  divisions will be lost on merge anyway.
- In Git, if I develop on a branch, then submit that branch as a patch
  sequence that gets applied by the repository owner, there's a good
  chance that when I 'git pull', git will recognise those patches as
  'my' patches and can rebase my branch intelligently. When those
  patches have gone via git svn, they seem to have changed enough that
  rebasing my branch causes horrible merge conflicts.
- In Git, you'd generally only create one branch for a patch series, and
  occasionally rebase it to keep up with trunk changes. The Twisted
  process seems to favour creating completely new branches (foo-1234,
  foo-1234-2, foo-1234-3, etc.) to handle trunk changes.
- As mentioned, Github merge requests and the Github issue tracker.

None of these are show stoppers, they're annoyances at worst, and could
be easily explained in documentation. But who will write that
documentation? Who will tirelessly explain the differences between the
Git world and the Twisted world on the mailing list and #twisted, poll
for merge requests and redirect them to Trac, forever?

TL;DR: Github users have expectations of how to interact with projects.
Twisted can make it easy for Github users to contribute by meeting those
expectations, switching from SVN to Git, and changing the UQDS to match.
Keeping things the way they are and adding a Git mirror is probably not
going to have the desired effect without a lot of effort on somebody's
part.

> Is that person you?  You're already maintaining the wiki page - and
> your participation in this thread has probably taken more time than
> the setup would have, if you have the relevant knowledge :).  Is there
> something you're missing?  Some administrative credential, perhaps?
> Information about where the relevant code lives?  If you're up for
> continuing on this, I'm sure we can get you whatever you need :).

Updating a wiki-page is not terribly onerous because it's bounded: solve
a problem by reading some documentation, write some more documentation,
done. Being the liaison between Twisted core developers and every Git
user who might want to contribute is unbounded... or at least, very
large and always growing as the number of Twisted devs and Git users
increases.

I've not forgotten that I have/had Twisted commit access, and coming
back to help on a more regular basis is definitely on my list of things
to do, although it's pushed down a fair way at the moment.  However,
even "volunteer for Twisted" was right at the top of the list, I'd be
a mug to sign up for such an open-ended responsibility. :)



From p.mayers at imperial.ac.uk  Mon Nov 14 05:06:33 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 14 Nov 2011 12:06:33 +0000
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111114115553.GK9962@boombah.thristian.org>
References: <20111109033957.GB9962@boombah.thristian.org>	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>	<20111109124940.GC9962@boombah.thristian.org>	<4EBA8EA1.4090805@recursivedream.com>	<20111109231803.GF9962@boombah.thristian.org>	<20111113061340.GH9962@boombah.thristian.org>	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>	<20111114034704.GI9962@boombah.thristian.org>	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
Message-ID: <4EC10449.8030509@imperial.ac.uk>

On 14/11/11 11:55, Tim Allen wrote:

> TL;DR: Github users have expectations of how to interact with projects.
> Twisted can make it easy for Github users to contribute by meeting those
> expectations, switching from SVN to Git, and changing the UQDS to match.
> Keeping things the way they are and adding a Git mirror is probably not
> going to have the desired effect without a lot of effort on somebody's
> part.

This analysis is spot-on IMO. I am a git and GitHub user, but merely 
putting the repo somewhere public is about 5% of the benefit, and risks 
creating expectations you can't (and won't) satisfy.

I'd love it if you guys move away from "attach a .patch file to Trac 
ticket" as the submission workflow - and I think GitHub has great tools 
for this. But if you're not going to do that, then a shallow clone 
(which I didn't know about) will fill the need:

# run git svn shallow clone
git branch my-local-stuff
git diff master > stuff.patch
# submit to trac
# reply: "ok, please create all future patches against branch x-1-2"
# git svn update - pulls in the aforementioned branch
# hack away
git diff x-1-2 > stuff2.patch

Cheers,
Phil



From tobias.oberstein at tavendo.de  Mon Nov 14 05:07:46 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 04:07:46 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
Message-ID: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>

I am testing a WebSocket based pubsub system .. I have 2 questions .. any hints welcome!

Environment:
  + FreeBSD 8.2 i386
  + Python 2.7.2 32-bit
  + Twisted Trunk
  + new kqueue() reactor

The FreeBSD is tuned for massive connection numbers. I can connect 50k WS clients. Fine.


1) Massive dispatching

Essentially, what I'm currently doing is:

recvs = set([100k instances of protocol.Protocol])

data = "..."
for recv in recvs:
   recv.transport.write(data)

Now, writing mass-data to _one_ transport should be done using producer/consumer.

But in my case, the data itself is tiny (<100 octets) and the same for all clients, but the number
of transports to dispatch that data to is massive.

The problem is: while above loop is running, other stuff is being delayed.

What would be the right approach to solve that?

One idea is to split the loop into 1k chunks and use reactor.callLater to have the sending
called again until all recvs are served.

Reentry of the reactor via reactor.callLater should make other stuff run in-between, right?

Can I use callLater(0, ..) .. that is no delay at all?

And is this approach recommended anyway?


2) Too many files.

As said, the FreeBSD is tuned for massive connections and I can connect 50k clients.

However, the Twisted application not only contains the WebSockets stuff, but also a
Twisted Web based web server.

Somewhere above 30k connections, I'm beginning to see:


twisted/web/server.py, line 132 in process
...
twisted/python/filepath.py, line 643 in open

<type 'exceptions.IOError'>: [Errno 24] Too many open files

However:

[autobahn at autobahnhub ~/AutobahnHub/service]$ sysctl kern.maxfiles
kern.maxfiles: 204800
[autobahn at autobahnhub ~/AutobahnHub/service]$ sysctl kern.maxfilesperproc
kern.maxfilesperproc: 200000
[autobahn at autobahnhub ~/AutobahnHub/service]$ sysctl kern.ipc.maxsockets
kern.ipc.maxsockets: 204800
[autobahn at autobahnhub ~/AutobahnHub/service]$ ulimit
unlimited

It should go well beyond 50k.

Doing an lsof on the app PID, I can see the 50k connected TCPs and <100 open files.

Why is it denying opening more files?

Is there another limit specifically for files, and/or something tunable in Python/Twisted?






From itamar at itamarst.org  Mon Nov 14 06:02:32 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 14 Nov 2011 08:02:32 -0500
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <1321275752.1812.8.camel@blake>

On Mon, 2011-11-14 at 04:07 -0800, Tobias Oberstein wrote:
> I am testing a WebSocket based pubsub system .. I have 2 questions .. any hints welcome!
> 
> Environment:
>   + FreeBSD 8.2 i386
>   + Python 2.7.2 32-bit
>   + Twisted Trunk
>   + new kqueue() reactor
> 
> The FreeBSD is tuned for massive connection numbers. I can connect 50k WS clients. Fine.
> 
> 
> 1) Massive dispatching
> 
> Essentially, what I'm currently doing is:
> 
> recvs = set([100k instances of protocol.Protocol])
> 
> data = "..."
> for recv in recvs:
>    recv.transport.write(data)
> 
> Now, writing mass-data to _one_ transport should be done using producer/consumer.
> 
> But in my case, the data itself is tiny (<100 octets) and the same for all clients, but the number
> of transports to dispatch that data to is massive.
> 
> The problem is: while above loop is running, other stuff is being delayed.
> 
> What would be the right approach to solve that?

Besides callLater, a higher level construct to do this is
twisted.internet.task.cooperate().
https://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-cooperative-multitasking-with-twisted-getting-things-done-concurrently-11-3352182 is a presentation dreid did, which should really be turned into a howto.

> 2) Too many files.
> Is there another limit specifically for files, and/or something tunable in Python/Twisted?

That's definitely not a limit on Python or Twisted. That's an OS limit.
Are you opening lots of files in addition to your sockets?




From tobias.oberstein at tavendo.de  Mon Nov 14 07:28:06 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 06:28:06 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <1321275752.1812.8.camel@blake>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
Message-ID: <634914A010D0B943A035D226786325D42D0C2646E8@EXVMBX020-12.exch020.serverdata.net>

> Besides callLater, a higher level construct to do this is
> twisted.internet.task.cooperate().
> https://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-cooperative-
> multitasking-with-twisted-getting-things-done-concurrently-11-3352182 is a
> presentation dreid did, which should really be turned into a howto.

Interesting. Need to add that to my toolbox.

In the meantime I've implemented the chunked/callLater approach.

It works.

However, as I currently do it, it breaks message order guarantees .. i.e. it's no
longer guaranteed that each recepient will receive published messages in the
order a _single_ publisher sent them.

Currently I use a set() and pop() from it.

I might change that to fetch receivers from

deque(sorted(set))

Is it guaranteed that

callLater(0, fun1)
callLater(0, fun2)

will always result in fun2 being called after fun1?

Because then, and when alway using same chunk size (# of receivers), above
ordering guarantee would hold.

I'd like to avoid having to create a send queue per receiver ..

> 
> > 2) Too many files.
> > Is there another limit specifically for files, and/or something tunable in
> Python/Twisted?
> 
> That's definitely not a limit on Python or Twisted. That's an OS limit.
> Are you opening lots of files in addition to your sockets?

No.

After i.e. 50k clients have connected:

[autobahn at autobahnhub ~/AutobahnHub/service]$ sysctl kern.openfiles
kern.openfiles: 50115

[autobahn at autobahnhub ~/AutobahnHub/service]$ lsof -p 1888 | wc -l
   50075

This bugs me .. don't know why it's happening.




From tobias.oberstein at tavendo.de  Mon Nov 14 07:57:21 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 06:57:21 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <1321275752.1812.8.camel@blake>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
Message-ID: <634914A010D0B943A035D226786325D42D0C264714@EXVMBX020-12.exch020.serverdata.net>

> > 2) Too many files.
> > Is there another limit specifically for files, and/or something tunable in
> Python/Twisted?
> 
> That's definitely not a limit on Python or Twisted. That's an OS limit.
> Are you opening lots of files in addition to your sockets?

Python open() will bail out at 32768 open files.

This despite the fact that 

a) resource.getrlimit(resource.RLIMIT_NOFILE) = 200k
b) I can accept 50k sockets

Obviously, it's at least not Twisted related ..

=========

import resource

max = resource.getrlimit(resource.RLIMIT_NOFILE)
cnt = 0
print "maximum FDs", max

fds = []

while cnt < max:
   f = open("/tmp/test_%d" % cnt, "w")
   f.write("test")
   fds.append(f)
   cnt += 1
   if cnt % 1000 == 0:
      print "opened %d files" % cnt

print "ok, created %d files" % cnt

=========

maximum FDs (200000L, 200000L)
opened 1000 files
opened 2000 files
opened 3000 files
opened 4000 files
opened 5000 files
opened 6000 files
opened 7000 files
opened 8000 files
opened 9000 files
opened 10000 files
opened 11000 files
opened 12000 files
opened 13000 files
opened 14000 files
opened 15000 files
opened 16000 files
opened 17000 files
opened 18000 files
opened 19000 files
opened 20000 files
opened 21000 files
opened 22000 files
opened 23000 files
opened 24000 files
opened 25000 files
opened 26000 files
opened 27000 files
opened 28000 files
opened 29000 files
opened 30000 files
opened 31000 files
opened 32000 files
Traceback (most recent call last):
  File "/home/autobahn/fdtest.py", line 10, in <module>
IOError: [Errno 24] Too many open files: '/tmp/test_32765'
^C
[autobahn at autobahnhub ~/AutobahnHub/service/autobahnhub/script]$




From donal.mcmullan at gmail.com  Mon Nov 14 08:15:20 2011
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Tue, 15 Nov 2011 04:15:20 +1300
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <634914A010D0B943A035D226786325D42D0C264714@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264714@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CADf-aJEWhUF5=hi2tHkRgBJ2Cp3qsMROKWLH0w6d-CaeTGw9yw@mail.gmail.com>

What does resource.getrlimit(resource.RLIMIT_OFILE) return?

The Python docs say:

resource.RLIMIT_OFILE
 The BSD name for RLIMIT_NOFILE.

D



On 15 November 2011 03:57, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
>> > 2) Too many files.
>> > Is there another limit specifically for files, and/or something tunable in
>> Python/Twisted?
>>
>> That's definitely not a limit on Python or Twisted. That's an OS limit.
>> Are you opening lots of files in addition to your sockets?
>
> Python open() will bail out at 32768 open files.
>
> This despite the fact that
>
> a) resource.getrlimit(resource.RLIMIT_NOFILE) = 200k
> b) I can accept 50k sockets
>
> Obviously, it's at least not Twisted related ..
>
> =========
>
> import resource
>
> max = resource.getrlimit(resource.RLIMIT_NOFILE)
> cnt = 0
> print "maximum FDs", max
>
> fds = []
>
> while cnt < max:
>   f = open("/tmp/test_%d" % cnt, "w")
>   f.write("test")
>   fds.append(f)
>   cnt += 1
>   if cnt % 1000 == 0:
>      print "opened %d files" % cnt
>
> print "ok, created %d files" % cnt
>
> =========
>
> maximum FDs (200000L, 200000L)
> opened 1000 files
> opened 2000 files
> opened 3000 files
> opened 4000 files
> opened 5000 files
> opened 6000 files
> opened 7000 files
> opened 8000 files
> opened 9000 files
> opened 10000 files
> opened 11000 files
> opened 12000 files
> opened 13000 files
> opened 14000 files
> opened 15000 files
> opened 16000 files
> opened 17000 files
> opened 18000 files
> opened 19000 files
> opened 20000 files
> opened 21000 files
> opened 22000 files
> opened 23000 files
> opened 24000 files
> opened 25000 files
> opened 26000 files
> opened 27000 files
> opened 28000 files
> opened 29000 files
> opened 30000 files
> opened 31000 files
> opened 32000 files
> Traceback (most recent call last):
>  File "/home/autobahn/fdtest.py", line 10, in <module>
> IOError: [Errno 24] Too many open files: '/tmp/test_32765'
> ^C
> [autobahn at autobahnhub ~/AutobahnHub/service/autobahnhub/script]$
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From tobias.oberstein at tavendo.de  Mon Nov 14 08:28:16 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 07:28:16 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <CADf-aJEWhUF5=hi2tHkRgBJ2Cp3qsMROKWLH0w6d-CaeTGw9yw@mail.gmail.com>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264714@EXVMBX020-12.exch020.serverdata.net>
	<CADf-aJEWhUF5=hi2tHkRgBJ2Cp3qsMROKWLH0w6d-CaeTGw9yw@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C26473E@EXVMBX020-12.exch020.serverdata.net>

> What does resource.getrlimit(resource.RLIMIT_OFILE) return?
> 
> The Python docs say:
> 
> resource.RLIMIT_OFILE
>  The BSD name for RLIMIT_NOFILE.

It's not there .. neither 2.6 nor 2.7

[autobahn at autobahnhub ~/AutobahnHub/service]$ python
Python 2.7.1 (r271:86832, Dec 13 2010, 15:52:15)
[GCC 4.2.1 20070719  [FreeBSD]] on freebsd8
Type "help", "copyright", "credits" or "license" for more information.
>>> import resource
>>> resource.getrlimit(resource.RLIMIT_NOFILE)
(200000L, 200000L)
>>> resource.getrlimit(resource.RLIMIT_OFILE)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'module' object has no attribute 'RLIMIT_OFILE'
>>>


oberstet at wwwtavendo: ~ $ python
Python 2.6.6 (r266:84292, Dec 23 2010, 15:11:37)
[GCC 4.2.1 20070719  [FreeBSD]] on freebsd8
Type "help", "copyright", "credits" or "license" for more information.
>>> import resource
>>> resource.getrlimit(resource.RLIMIT_NOFILE)
(11095L, 11095L)
>>> resource.getrlimit(resource.RLIMIT_OFILE)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'module' object has no attribute 'RLIMIT_OFILE'
>>>



From tom.sheffler at gmail.com  Mon Nov 14 08:39:36 2011
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Mon, 14 Nov 2011 07:39:36 -0800
Subject: [Twisted-Python] Using Trial with Eclipse and PyDev
Message-ID: <CAMBtMcvmj0=c9vVCbDk6ZnoA_quTORzj35fdQg4fR2T+ZTAHUA@mail.gmail.com>

I've seen a few answers regarding this topic around the net, but nothing
recent.

I've enjoyed using the Twisted code-base in Eclipse, and have also liked
running unittests in the PyDev framework.  However, I haven't been
successful integrating Trial tests with the PyDev runner.  I did get Trial
to run, but the output isn't really understood and parsed by PyDev the way
I did it.

If anyone has any pointers, I'd appreciate suggestions.

- I'd like the PASSED/FAILED/ERROR/SKIPPED states to be understood by PyDev.
- I'd also like the _trial_temp/test.log file to be displayed in an Eclipse
window

Overall, I'm very happy with Trial as it is.  Using it in Eclipse almost
seems greedy. ;-}

Thanks,
Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111114/0b153f08/attachment-0001.html>

From tobias.oberstein at tavendo.de  Mon Nov 14 10:57:46 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 09:57:46 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <1321275752.1812.8.camel@blake>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
Message-ID: <634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>

> That's definitely not a limit on Python or Twisted. That's an OS limit.
> Are you opening lots of files in addition to your sockets?

As it turns out, you are right, and the full answer is most unpleasant:

This

http://www.freebsd.org/cgi/query-pr.cgi?pr=148581&cat=

bug in FreeBSD libc, which is there in i386/amd64 up to and including FreeBSD 9 RC1

and the fact that Python uses fopen() from libc, not open() from Posix

results in the situation that you can't have more than 32k FDs done.

In my situation, it's like this: the new kqueue reactor will happily accept
50k TCPs .. no problem, since Python isn't involved with fopen() here.

But as soon as a Python open() and thus fopen() happens, the new FD
would need to be >32k and that does not work, since the braindead libc
on FreeBSD defines fileno to be SHORT_MAX.

Now I'm running out of options.

I was told that the new Python 3 IO system does not use fopen(),
however Twisted is not yet there on Python 3, right?

There is a backport of that new IO to Python 2.7, but I'm not sure
if thats transparent for calls like Python open().

I can't open first i.e. 100 files, since the set of files needed is not
fixed in the beginning ..i.e when Twisted does a log file switch.

Well, this is all absolutely sad. Now we (nearly) have new kqueue,
it does fly, but I can't break above 32k anyway ..



From solipsis at pitrou.net  Mon Nov 14 11:09:18 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Mon, 14 Nov 2011 19:09:18 +0100
Subject: [Twisted-Python] data dispatch on massive connection counts
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20111114190918.3cb62a46@pitrou.net>

On Mon, 14 Nov 2011 09:57:46 -0800
Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
> Now I'm running out of options.
> 
> I was told that the new Python 3 IO system does not use fopen(),
> however Twisted is not yet there on Python 3, right?

If you are wild, you can try https://bitbucket.org/pitrou/t3k/
(at least as an experiment :-))

> There is a backport of that new IO to Python 2.7, but I'm not sure
> if thats transparent for calls like Python open().

io.open() should work indeed. However, open() still uses the old I/O
routines (and therefore fopen()) for compatibility.
If you don't have control on the open() call, you could still try to
monkeypatch the module doing the open() call:

    somemodule.open = io.open

cheers

Antoine.





From glyph at twistedmatrix.com  Mon Nov 14 11:33:45 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 14 Nov 2011 13:33:45 -0500
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111114115553.GK9962@boombah.thristian.org>
References: <20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
Message-ID: <4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>

On Nov 14, 2011, at 6:55 AM, Tim Allen wrote:

> It's very well to say "make git mirror, push to Github, get new
> contributors", but I think there's a social impedance mismatch here
> that's going to cause problems, or at least make people wary because
> Twisted's Github project behaves weirdly and differently from other
> Github projects they're used to.

You're right, of course, but lots of other projects (Django comes to mind) have a Github presence without using Github or Git as their primary development tool.  See here: <https://github.com/django>.

We already have <https://github.com/twisted>, it's just broken; despite the brokenness it has 14 watchers and 5 forks _anyway_, so clearly people want to use it.  This is definitely worse than having a mirror that was updated and working correctly.

> I've not forgotten that I have/had Twisted commit access, and coming
> back to help on a more regular basis is definitely on my list of things
> to do, although it's pushed down a fair way at the moment.  However,
> even "volunteer for Twisted" was right at the top of the list, I'd be
> a mug to sign up for such an open-ended responsibility. :)


Welcome to open source.  It's all a never-ending thankless slog :-).

Really the most important thing here though is just to get the automatic mirroring initially set up, not the never-ending ambassadorial work.  That way git users wouldn't _need_ elaborate instructions as to what to clone and how; if we just say "get twisted from github" and have that automatically updated it would be easier for everyone.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111114/98b4eefc/attachment.html>

From tobias.oberstein at tavendo.de  Mon Nov 14 11:44:03 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 10:44:03 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <20111114190918.3cb62a46@pitrou.net>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
	<20111114190918.3cb62a46@pitrou.net>
Message-ID: <634914A010D0B943A035D226786325D42D0C264890@EXVMBX020-12.exch020.serverdata.net>

> > I was told that the new Python 3 IO system does not use fopen(),
> > however Twisted is not yet there on Python 3, right?
> 
> If you are wild, you can try https://bitbucket.org/pitrou/t3k/ (at least as an
> experiment :-))

I am .. but not thaaat much;)

> 
> > There is a backport of that new IO to Python 2.7, but I'm not sure if
> > thats transparent for calls like Python open().
> 
> io.open() should work indeed. However, open() still uses the old I/O routines
> (and therefore fopen()) for compatibility.
> If you don't have control on the open() call, you could still try to
> monkeypatch the module doing the open() call:
> 
>     somemodule.open = io.open
> 

This is cool .. I just did

import io, __builtin__
__builtin__.open = io.open

in the application's tac file .. and voila:

50k WebSocket connections
Twisted Web still serving web pages
<500MB RAM

;)




From mostawesomedude at gmail.com  Mon Nov 14 11:44:10 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Mon, 14 Nov 2011 10:44:10 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
References: <20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
Message-ID: <CALiqSLcBwHUW3iHzABCU1QjAqqzGmkUoTc=62-z8MdAmBK+S4w@mail.gmail.com>

On Mon, Nov 14, 2011 at 10:33 AM, Glyph <glyph at twistedmatrix.com> wrote:
> On Nov 14, 2011, at 6:55 AM, Tim Allen wrote:
>
> It's very well to say "make git mirror, push to Github, get new
> contributors", but I think there's a social impedance mismatch here
> that's going to cause problems, or at least make people wary because
> Twisted's Github project behaves weirdly and differently from other
> Github projects they're used to.
>
> You're right, of course, but lots of other projects (Django comes to mind)
> have a Github presence without using Github or Git as their primary
> development tool.  See here: <https://github.com/django>.
> We already have <https://github.com/twisted>, it's just broken; despite the
> brokenness it has 14 watchers and 5 forks _anyway_, so clearly people want
> to use it.  This is definitely worse than having a mirror that was updated
> and working correctly.
>
> I've not forgotten that I have/had Twisted commit access, and coming
> back to help on a more regular basis is definitely on my list of things
> to do, although it's pushed down a fair way at the moment.  However,
> even "volunteer for Twisted" was right at the top of the list, I'd be
> a mug to sign up for such an open-ended responsibility. :)
>
> Welcome to open source.  It's all a never-ending thankless slog :-).
> Really the most important thing here though is just to get the automatic
> mirroring initially set up, not the never-ending ambassadorial work.  That
> way git users wouldn't _need_ elaborate instructions as to what to clone and
> how; if we just say "get twisted from github" and have that automatically
> updated it would be easier for everyone.

JP asked me to say something, so...

I come from FreeDesktop. We have a git-driven development process
which doesn't depend on Github. There is a cgit
(http://hjemli.net/git/cgit/about/) instance running on fd.o
(http://cgit.freedesktop.org/) which covers everybody's personal and
project repos.

The contribution process is simple and straightforward. Patches are
sent in through the project mailing lists. People can also send
patches through auxiliary channels like pastebins and IRC or the
Bugzilla, although that's discouraged. When contributors become
prolific enough, they can apply for account access, which lets them
host repos on fd.o through the magic of userdirs. Code is meritocratic
and community-based; when in doubt, a committer can ask for code
review. It varies from project to project; fd.o is a *big* umbrella.
Branches are very common for contested or complex changes; look at
e.g. mesa/mesa for an example of

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>



From mostawesomedude at gmail.com  Mon Nov 14 11:48:04 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Mon, 14 Nov 2011 10:48:04 -0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CALiqSLcBwHUW3iHzABCU1QjAqqzGmkUoTc=62-z8MdAmBK+S4w@mail.gmail.com>
References: <20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<CALiqSLcBwHUW3iHzABCU1QjAqqzGmkUoTc=62-z8MdAmBK+S4w@mail.gmail.com>
Message-ID: <CALiqSLe5oOWS7v78-oaeBM9WWdV99GeKrCQYjz1ZrM8HDVV3ng@mail.gmail.com>

On Mon, Nov 14, 2011 at 10:44 AM, Corbin Simpson
<mostawesomedude at gmail.com> wrote:
> On Mon, Nov 14, 2011 at 10:33 AM, Glyph <glyph at twistedmatrix.com> wrote:
>> On Nov 14, 2011, at 6:55 AM, Tim Allen wrote:
>>
>> It's very well to say "make git mirror, push to Github, get new
>> contributors", but I think there's a social impedance mismatch here
>> that's going to cause problems, or at least make people wary because
>> Twisted's Github project behaves weirdly and differently from other
>> Github projects they're used to.
>>
>> You're right, of course, but lots of other projects (Django comes to mind)
>> have a Github presence without using Github or Git as their primary
>> development tool.  See here: <https://github.com/django>.
>> We already have <https://github.com/twisted>, it's just broken; despite the
>> brokenness it has 14 watchers and 5 forks _anyway_, so clearly people want
>> to use it.  This is definitely worse than having a mirror that was updated
>> and working correctly.
>>
>> I've not forgotten that I have/had Twisted commit access, and coming
>> back to help on a more regular basis is definitely on my list of things
>> to do, although it's pushed down a fair way at the moment.  However,
>> even "volunteer for Twisted" was right at the top of the list, I'd be
>> a mug to sign up for such an open-ended responsibility. :)
>>
>> Welcome to open source.  It's all a never-ending thankless slog :-).
>> Really the most important thing here though is just to get the automatic
>> mirroring initially set up, not the never-ending ambassadorial work.  That
>> way git users wouldn't _need_ elaborate instructions as to what to clone and
>> how; if we just say "get twisted from github" and have that automatically
>> updated it would be easier for everyone.
>
> JP asked me to say something, so...
>
> I come from FreeDesktop. We have a git-driven development process
> which doesn't depend on Github. There is a cgit
> (http://hjemli.net/git/cgit/about/) instance running on fd.o
> (http://cgit.freedesktop.org/) which covers everybody's personal and
> project repos.
>
> The contribution process is simple and straightforward. Patches are
> sent in through the project mailing lists. People can also send
> patches through auxiliary channels like pastebins and IRC or the
> Bugzilla, although that's discouraged. When contributors become
> prolific enough, they can apply for account access, which lets them
> host repos on fd.o through the magic of userdirs. Code is meritocratic
> and community-based; when in doubt, a committer can ask for code
> review. It varies from project to project; fd.o is a *big* umbrella.
> Branches are very common for contested or complex changes; look at
> e.g. mesa/mesa for an example of

Boy, thanks Gmail. I really appreciated that.

Anyway, mesa/mesa has dozens upon dozens of branches. Just like
Twisted. It works well.

So, Github adds *zero* fun to this. Its issue tracker is roughly as
unfun as Bugzilla. Pull requests are frustrating; I find myself just
pulling their code using standard git tools and ignoring the
auto-merge tool. I don't really enjoy having messages sent to me
*through* Github when we could just use email, like civilized people.
I view Github as a source of bandwidth and space to avoid having to
host my numerous personal repositories on a personal server. It's a
convenience and crutch. TM is not short of resources; there certainly
could be a git.tm.com or cgit.tm.com and userdir-powered repositories.
Admittedly, this is at odds with the current direction towards LP and
Bazaar, but I think it's a lot better than letting us rely on Github.

~ C.

> --
> When the facts change, I change my mind. What do you do, sir? ~ Keynes
>
> Corbin Simpson
> <MostAwesomeDude at gmail.com>
>



-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>



From glyph at twistedmatrix.com  Mon Nov 14 11:53:13 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 14 Nov 2011 13:53:13 -0500
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CALiqSLe5oOWS7v78-oaeBM9WWdV99GeKrCQYjz1ZrM8HDVV3ng@mail.gmail.com>
References: <20111109033957.GB9962@boombah.thristian.org>
	<43C0365B-49CE-4CF4-BC96-B7BB4B283FD4@twistedmatrix.com>
	<20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<CALiqSLcBwHUW3iHzABCU1QjAqqzGmkUoTc=62-z8MdAmBK+S4w@mail.gmail.com>
	<CALiqSLe5oOWS7v78-oaeBM9WWdV99GeKrCQYjz1ZrM8HDVV3ng@mail.gmail.com>
Message-ID: <34355BFB-2A40-4393-8E92-34B15FAAC380@twistedmatrix.com>


On Nov 14, 2011, at 1:48 PM, Corbin Simpson wrote:

> ... I think it's a lot better than letting us rely on Github.

I don't want to "rely" on github.  I want our official presence there (which is already there) to be current and properly maintained so that people who use Github for other reasons (discovery, convneience, gists, because "social networks" are cool, whatever) have the ability to use it if it's convenient for them to get started writing code.

It should be pretty well-known at this point that I don't really like github either, but what I like a lot less than github is losing potential contributors for any reason.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111114/b2bfa43a/attachment.html>

From glyph at twistedmatrix.com  Mon Nov 14 12:30:55 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 14 Nov 2011 14:30:55 -0500
Subject: [Twisted-Python] Using Trial with Eclipse and PyDev
In-Reply-To: <CAMBtMcvmj0=c9vVCbDk6ZnoA_quTORzj35fdQg4fR2T+ZTAHUA@mail.gmail.com>
References: <CAMBtMcvmj0=c9vVCbDk6ZnoA_quTORzj35fdQg4fR2T+ZTAHUA@mail.gmail.com>
Message-ID: <510A9B7B-4987-416D-9539-5A6196796EDF@twistedmatrix.com>


On Nov 14, 2011, at 10:39 AM, Tom Sheffler wrote:

> I've seen a few answers regarding this topic around the net, but nothing recent.
> 
> I've enjoyed using the Twisted code-base in Eclipse, and have also liked running unittests in the PyDev framework.  However, I haven't been successful integrating Trial tests with the PyDev runner.  I did get Trial to run, but the output isn't really understood and parsed by PyDev the way I did it.
> 
> If anyone has any pointers, I'd appreciate suggestions.
> 
> - I'd like the PASSED/FAILED/ERROR/SKIPPED states to be understood by PyDev.
> - I'd also like the _trial_temp/test.log file to be displayed in an Eclipse window
> 
> Overall, I'm very happy with Trial as it is.  Using it in Eclipse almost seems greedy. ;-}

Hi Tom,

I had a similar experience when I used PyDev.

I think that the right thing to do is submit a patch to PyDev, as this is simply new behavior that you need to implement, as it implements support for the built-in Python unittest runner.

Good luck; and let us know if you come up with anything,

-glyph




From itamar at itamarst.org  Mon Nov 14 13:13:42 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 14 Nov 2011 15:13:42 -0500
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdat
	a.net>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <cace4c0f214009c5f46bc1d550dcecf7.squirrel@webmail.zoteca.com>

> Well, this is all absolutely sad. Now we (nearly) have new kqueue,
> it does fly, but I can't break above 32k anyway ..

Epoll on Linux?




From tobias.oberstein at tavendo.de  Mon Nov 14 13:37:28 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 14 Nov 2011 12:37:28 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <cace4c0f214009c5f46bc1d550dcecf7.squirrel@webmail.zoteca.com>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
	<cace4c0f214009c5f46bc1d550dcecf7.squirrel@webmail.zoteca.com>
Message-ID: <634914A010D0B943A035D226786325D42D0C26494C@EXVMBX020-12.exch020.serverdata.net>

> > Well, this is all absolutely sad. Now we (nearly) have new kqueue, it
> > does fly, but I can't break above 32k anyway ..
> 
> Epoll on Linux?

what is linux? ;)

with the monkey patch to use new IO, I can use the Little Daemon flying on kqueue .. so problem solved.



From p.mayers at imperial.ac.uk  Tue Nov 15 01:41:05 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 15 Nov 2011 08:41:05 +0000
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4EC225A1.4090406@imperial.ac.uk>

On 11/14/2011 05:57 PM, Tobias Oberstein wrote:

> and the fact that Python uses fopen() from libc, not open() from Posix

I know you've solved it know, but just to check, you are of course aware 
of os.open (which maps directly to Posix open)



From tobias.oberstein at tavendo.de  Tue Nov 15 04:02:38 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 15 Nov 2011 03:02:38 -0800
Subject: [Twisted-Python] data dispatch on massive connection counts
In-Reply-To: <4EC225A1.4090406@imperial.ac.uk>
References: <634914A010D0B943A035D226786325D42D0C264675@EXVMBX020-12.exch020.serverdata.net>
	<1321275752.1812.8.camel@blake>
	<634914A010D0B943A035D226786325D42D0C264826@EXVMBX020-12.exch020.serverdata.net>
	<4EC225A1.4090406@imperial.ac.uk>
Message-ID: <634914A010D0B943A035D226786325D42D0D274D87@EXVMBX020-12.exch020.serverdata.net>

> > and the fact that Python uses fopen() from libc, not open() from Posix
> 
> I know you've solved it know, but just to check, you are of course aware of
> os.open (which maps directly to Posix open)

Yes, thanks, I am aware.

However, i.e. Twisted Web uses open(), not os.open():

twisted.python.filepath.py => line 643

Luckily, it has no problems with monkey patching open() to the new Python IO
which under the hood also uses Posix open.



From tobias.oberstein at tavendo.de  Tue Nov 15 07:33:14 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 15 Nov 2011 06:33:14 -0800
Subject: [Twisted-Python] reactor.callLater question
Message-ID: <634914A010D0B943A035D226786325D42D0D274DF1@EXVMBX020-12.exch020.serverdata.net>

2 short questions .. please consider:

a)
reactor.callLater(0, fun1)
reactor.callLater(0, fun2)

Is that allowed .. delay == 0? It seems to work .. but I want to be sure.

b)
reactor.callLater(T, fun1)
reactor.callLater(T, fun2)

Is the call _order_ first fun1, then fun2 _guaranteed_?
For every T, and in particular T == 0?




From exarkun at twistedmatrix.com  Tue Nov 15 07:57:17 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 15 Nov 2011 14:57:17 -0000
Subject: [Twisted-Python] reactor.callLater question
In-Reply-To: <634914A010D0B943A035D226786325D42D0D274DF1@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0D274DF1@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20111115145717.20412.136891393.divmod.xquotient.127@localhost.localdomain>

On 02:33 pm, tobias.oberstein at tavendo.de wrote:
>2 short questions .. please consider:
>
>a)
>reactor.callLater(0, fun1)
>reactor.callLater(0, fun2)
>
>Is that allowed .. delay == 0? It seems to work .. but I want to be 
>sure.

Yep.  It's allowed.  It means to run the function pretty soon, but not 
right now.
>b)
>reactor.callLater(T, fun1)
>reactor.callLater(T, fun2)
>
>Is the call _order_ first fun1, then fun2 _guaranteed_?
>For every T, and in particular T == 0?

This isn't guaranteed.  It's been proposed that it should be, but the 
ticket has been languishing for a few years now:

  http://twistedmatrix.com/trac/ticket/1396

Jean-Paul



From solipsis at pitrou.net  Tue Nov 15 08:15:15 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Tue, 15 Nov 2011 16:15:15 +0100
Subject: [Twisted-Python] reactor.callLater question
References: <634914A010D0B943A035D226786325D42D0D274DF1@EXVMBX020-12.exch020.serverdata.net>
	<20111115145717.20412.136891393.divmod.xquotient.127@localhost.localdomain>
Message-ID: <20111115161515.0386a6ac@pitrou.net>

On Tue, 15 Nov 2011 14:57:17 -0000
exarkun at twistedmatrix.com wrote:
> >b)
> >reactor.callLater(T, fun1)
> >reactor.callLater(T, fun2)
> >
> >Is the call _order_ first fun1, then fun2 _guaranteed_?
> >For every T, and in particular T == 0?
> 
> This isn't guaranteed.  It's been proposed that it should be, but the 
> ticket has been languishing for a few years now:
> 
>   http://twistedmatrix.com/trac/ticket/1396

For the record, clock_gettime() will be available in Python 3.3:

>>> time.clock_gettime(time.CLOCK_REALTIME)
1321369967.1877146
>>> time.clock_gettime(time.CLOCK_MONOTONIC)
8488.233418624

Regards

Antoine.





From jeff at ocjtech.us  Tue Nov 15 09:36:12 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Tue, 15 Nov 2011 10:36:12 -0600
Subject: [Twisted-Python] logging question
Message-ID: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>

I'm using twisted.python.log to do some logging in an application.
It's formatting the output like "<date> [-] <mymessage>".  I've seen
in some of my other applications that the contents of "[-]" can change
depending on how the code is reached.  Is there a way that I can
customize this in my application?  I'd like to change the contents to
reflect the particular object that is generating the log message.

-- 
Jeff Ollie



From radix at twistedmatrix.com  Tue Nov 15 09:57:43 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 15 Nov 2011 11:57:43 -0500
Subject: [Twisted-Python] logging question
In-Reply-To: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
Message-ID: <CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>

On Tue, Nov 15, 2011 at 11:36 AM, Jeffrey Ollie <jeff at ocjtech.us> wrote:

> I'm using twisted.python.log to do some logging in an application.
> It's formatting the output like "<date> [-] <mymessage>".  I've seen
> in some of my other applications that the contents of "[-]" can change
> depending on how the code is reached.  Is there a way that I can
> customize this in my application?  I'd like to change the contents to
> reflect the particular object that is generating the log message.
>
>
If you pass a 'system' kwarg to log.msg then it will go in that field.

log.msg("hi", system="stuff") results in <date> [stuff] hi

In my applications I usually hack the default log context stuff to disable
the inferred systems because they end up just being misleading and
inconsistent anyway.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111115/78012867/attachment-0001.html>

From glyph at twistedmatrix.com  Tue Nov 15 11:27:39 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 15 Nov 2011 13:27:39 -0500
Subject: [Twisted-Python] reactor.callLater question
In-Reply-To: <20111115145717.20412.136891393.divmod.xquotient.127@localhost.localdomain>
References: <634914A010D0B943A035D226786325D42D0D274DF1@EXVMBX020-12.exch020.serverdata.net>
	<20111115145717.20412.136891393.divmod.xquotient.127@localhost.localdomain>
Message-ID: <A58806D8-A5E3-4E2A-A6C0-B93814627A20@twistedmatrix.com>


On Nov 15, 2011, at 9:57 AM, exarkun at twistedmatrix.com wrote:

> On 02:33 pm, tobias.oberstein at tavendo.de wrote:
>> 2 short questions .. please consider:
>> 
>> a)
>> reactor.callLater(0, fun1)
>> reactor.callLater(0, fun2)
>> 
>> Is that allowed .. delay == 0? It seems to work .. but I want to be 
>> sure.
> 
> Yep.  It's allowed.  It means to run the function pretty soon, but not 
> right now.
>> b)
>> reactor.callLater(T, fun1)
>> reactor.callLater(T, fun2)
>> 
>> Is the call _order_ first fun1, then fun2 _guaranteed_?
>> For every T, and in particular T == 0?
> 
> This isn't guaranteed.  It's been proposed that it should be, but the 
> ticket has been languishing for a few years now:
> 
>  http://twistedmatrix.com/trac/ticket/1396
> 

You might want to look at twisted.internet.task.cooperate instead if you want to perform a sequence of functions separated by callLater()s.

-glyph




From p.mayers at imperial.ac.uk  Wed Nov 16 04:33:52 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 16 Nov 2011 11:33:52 +0000
Subject: [Twisted-Python] 64 bit windows machine
Message-ID: <4EC39FA0.1000200@imperial.ac.uk>

I see from the Trac page that you guys are (or were) hunting a 64-bit 
windows machine. I also see there are no 64-bit Twisted packages on pypi.

Are the two related? Do you still want a windows 64-bit machine?

When you ask for a Visual Studio license, is not VC Express sufficient?

This is possibly something we can provide for you.

Cheers,
Phil



From screwtape at froup.com  Wed Nov 16 05:13:50 2011
From: screwtape at froup.com (Tim Allen)
Date: Wed, 16 Nov 2011 23:13:50 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
References: <20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
Message-ID: <20111116121350.GM9962@boombah.thristian.org>

On Mon, Nov 14, 2011 at 01:33:45PM -0500, Glyph wrote:
> Really the most important thing here though is just to get the
> automatic mirroring initially set up, not the never-ending
> ambassadorial work.  That way git users wouldn't _need_ elaborate
> instructions as to what to clone and how; if we just say "get twisted
> from github" and have that automatically updated it would be easier
> for everyone.

I've done some experimentation, and (as best I can tell) it's impossible
to use git-svn to create a sensible SVN → Git conversion of the Twisted
repository. This is because of the various, inconsistent branch-naming
schemes that have been used over Twisted's long history.

As best I can tell, git-svn can import branches that exist at some
specific depth in the tree... so if your branches look like this:

    root
    |
    +- branches
	|
	+- add-a-feature-1234
	+- fix-a-bug-2345
	+- release-v1.0.x
	+- release-v1.1.x

...you can say "git svn clone --branches='branches/*'" and they'll be
imported as Git branches. Likewise, if you group your branches in some
way:

    root
    |
    +- branches
	|
	+- topic-branches
	|   |
	|   +- add-a-feature-1234
	|   +- fix-a-bug-2345
	|
	+- release-branches
	    |
	    +- v1.0.x
	    +- v1.1.x

...then you can say "git svn clone --branches='branches/*/*'" and
they'll all be imported cleanly. Unfortunately, the Twisted repository's
"branches" directory contains subdirectories representing branches *and*
subdirectories representing groups of branches... and *those* contain
both branch directories and branch-group directories. Here are the
branch-group directories I've discovered so far:

    branches/
    branches/releases/
    branches/releases/conch/
    branches/releases/mail/
    branches/releases/names/
    branches/releases/words/

When I import a range of revisions that happens to include a change to
a branch in "branches/releases" (I've been using the range 33049:33062
for testing), git-svn winds up importing the entire "releases" subtree
as a branch, which is... suboptimal. If I use the "--ignore-paths"
option to ignore everything under "branches/releases", then it still
generates the branch and faithfully records all the commits affecting
it... but ignores all the files, so when you check out that branch it
deletes everything in your working directory.

What's really annoying about this is that git itself doesn't care about
branch naming, and it's perfectly happy to have "add-a-feature-1234" and
"releases/v1.0.x" as branch names. It's just the git-svn tool not being
flexible enough. A quick Google doesn't reveal much in the way of other
people who have dealt with repository layouts like this, except for one
report which basically went "use 'svnadmin dump' to export the
repository, use sed to rewrite all the paths, load the dump into a new
svn repository and import from there." That sounds like a lot of work to
me, and not the sort of thing that could be reliably repeated to keep
the two repositories in sync. Perhaps someone should file a bug with the
git-svn maintainer, if only they had a bug-tracker.

So, would a repository with a huge, bogus "releases" branch be
acceptable in an Official Mirror? It's not strictly needed for
developing patches, but it *will* create lots of puzzled frowns and
annoyance, perhaps from people who want a Git mirror to integrate with
their "automatically download new releases" code.

Also in the spirit of writing things down so future contributors can
figure things out, I note the Git FAQ on the Git Wiki has a "How do
I mirror a SVN repository to git?" question:

    https://git.wiki.kernel.org/articles/g/i/t/GitFaq_ebc3.html



From wulczer at wulczer.org  Wed Nov 16 05:29:27 2011
From: wulczer at wulczer.org (=?UTF-8?B?SmFuIFVyYmHFhHNraQ==?=)
Date: Wed, 16 Nov 2011 13:29:27 +0100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111116121350.GM9962@boombah.thristian.org>
References: <20111109124940.GC9962@boombah.thristian.org>
	<4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
Message-ID: <4EC3ACA7.2030509@wulczer.org>

On 16/11/11 13:13, Tim Allen wrote:
> On Mon, Nov 14, 2011 at 01:33:45PM -0500, Glyph wrote:
>> Really the most important thing here though is just to get the
>> automatic mirroring initially set up, not the never-ending
>> ambassadorial work.  That way git users wouldn't _need_ elaborate
>> instructions as to what to clone and how; if we just say "get twisted
>> from github" and have that automatically updated it would be easier
>> for everyone.
>
> I've done some experimentation, and (as best I can tell) it's impossible
> to use git-svn to create a sensible SVN → Git conversion of the Twisted
> repository.

There's a tool called svn-all-fast-export [1] that in my experience is 
much faster and is much more flexible.

It has some issues:
  * the documentation is scarce, but after some googling it's possible 
to get the hang of it
  * it's a one-off conversion (!)
  * AFAIR it requires access to the actual SVN repository, not just a 
checkout

Perhaps it would be feasible for you to get a tarball of the SVN repo, 
write a config file for svn-all-fast-export that will make all the 
required branches and tags be created and then pick up with git-svn from 
that (I'm also not 100% sure that "picking up" will be possible).

Anyway, just wanted to point out a tool that's been used by for instance 
Gnome to move from SVN to git and that I had some positive experience 
with personally.

Cheers,
Jan

[1] http://repo.or.cz/w/svn-all-fast-export.git



From jon at multani.info  Wed Nov 16 05:41:21 2011
From: jon at multani.info (Jonathan Ballet)
Date: Wed, 16 Nov 2011 20:41:21 +0800
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111116121350.GM9962@boombah.thristian.org>
References: <4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
Message-ID: <20111116124119.GC2439@localhost>

On Wed, Nov 16, 2011 at 11:13:50PM +1100, Tim Allen wrote:
> On Mon, Nov 14, 2011 at 01:33:45PM -0500, Glyph wrote:
> > Really the most important thing here though is just to get the
> > automatic mirroring initially set up, not the never-ending
> > ambassadorial work.  That way git users wouldn't _need_ elaborate
> > instructions as to what to clone and how; if we just say "get twisted
> > from github" and have that automatically updated it would be easier
> > for everyone.
>
> I've done some experimentation, and (as best I can tell) it's impossible
> to use git-svn to create a sensible SVN → Git conversion of the Twisted
> repository. This is because of the various, inconsistent branch-naming
> schemes that have been used over Twisted's long history.
>

Actually, maybe git-svn by itself is not smart enough to handle all the
possible cases and "weird" repository schemes like Twisted's one.

However, I think it should be possible with a second pass script to have
a pretty good, or at least better, conversion.

If you init the repository with "--prefix=svn/ --trunk=trunk", I think
you will got a working copy with trunk, and all the branches and tags as
references in the "svn/" namespace. Then, with a script smart enough,
which looks through the references in "svn/branches/" and "svn/tags/",
it can create the right branches and tags like "--stdlayout" would do if
the scheme was compatible.

The difficulty I think lies into the "smart enough", but if we can't
find a way with this, I don't know how git-svn would be capable of.

As an example of what I mean, if we want to import the tags from the
Subversion repository, the job will consist in:

1. list all of the svn/tags/releases/release-* references
2. strip the "release-" prefix to keep only the "x.y.z" scheme
3. for each tag, if it doesn't already exit, "git tag x.y.z
   svn/tags/releases/release-x.y.z"

Maybe it needs to be even smarter for branches, but the final step will
only be "git branch BRANCH_NAME SVN_REFERENCE", which might end up with
a cleaner Git repository than the original Subversion repository...

If some help is needed, I'm willing to help too. I'm not sure to fully
understand where and how this conversion is heading to.

My 2 cents,

 Jonathan



From jeff at ocjtech.us  Wed Nov 16 07:17:51 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 16 Nov 2011 08:17:51 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111116124119.GC2439@localhost>
References: <4EBA8EA1.4090805@recursivedream.com>
	<20111109231803.GF9962@boombah.thristian.org>
	<20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
	<20111116124119.GC2439@localhost>
Message-ID: <CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>

On Wed, Nov 16, 2011 at 6:41 AM, Jonathan Ballet <jon at multani.info> wrote:
> On Wed, Nov 16, 2011 at 11:13:50PM +1100, Tim Allen wrote:
>>
>> I've done some experimentation, and (as best I can tell) it's impossible
>> to use git-svn to create a sensible SVN → Git conversion of the Twisted
>> repository. This is because of the various, inconsistent branch-naming
>> schemes that have been used over Twisted's long history.
>
> Actually, maybe git-svn by itself is not smart enough to handle all the
> possible cases and "weird" repository schemes like Twisted's one.

Yes, git-svn by itself cannot handle Twisted's repository both because
of the repository layout that is different from what it expects, but
also because if git-svn tries to mirror a repository with a large
number of branches all at once it slows to a molasses-in-January
crawl.

> However, I think it should be possible with a second pass script to have
> a pretty good, or at least better, conversion.

The solution that I've come up with is to use git-svn to create a
separate Git repository for each branch, and then git-push that branch
into a central Git repository.  This does burn *a lot* of disk space,
but only one person needs to do it - everyone else can clone the
central repository.  The initial setup takes a while, but subsequent
runs should be relatively fast.

You can see the converted repository I'm building at:

https://github.com/jcollie/twisted

It's still in the process of building up so not all the branches are
there yet.  I've put the script that I'm using here:

https://github.com/jcollie/twisted-svn-convert

One feature that I'd like to add before calling this final is
converting SVN usernames to "proper" names/email addresses like Git
prefers to use.

I use a similar script to mirror the Asterisk SVN repository with some
good results:

https://github.com/jcollie/asterisk

-- 
Jeff Ollie



From lists at collab.nl  Wed Nov 16 10:50:24 2011
From: lists at collab.nl (Thijs Triemstra)
Date: Wed, 16 Nov 2011 18:50:24 +0100
Subject: [Twisted-Python] 64 bit windows machine
In-Reply-To: <4EC39FA0.1000200@imperial.ac.uk>
References: <4EC39FA0.1000200@imperial.ac.uk>
Message-ID: <4EC3F7E0.6030903@collab.nl>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 11/16/2011 12:33 PM, Phil Mayers wrote:
> I see from the Trac page that you guys are (or were) hunting a 64-bit 
> windows machine. I also see there are no 64-bit Twisted packages on pypi.

Thanks for the offer but I think there's already a 64-bit python 2.7
buildslave in use so it seems the wiki is out of date..

http://buildbot.twistedmatrix.com/buildslaves/bot-glyph-6

I'm not sure about the 64-bit packages, but its likely these builders
were added after the 11.0 release and the upcoming 11.1 will have those
packages.

Thijs
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.11 (GNU/Linux)

iEYEARECAAYFAk7D99cACgkQBRbMGagbo3nlfgCeKufnUeANVc0eGMk7adDiK7Ho
50EAn3JZQZmwKgrk7IZkYIZ/Wl1I2b1T
=zsz/
-----END PGP SIGNATURE-----



From p.mayers at imperial.ac.uk  Wed Nov 16 13:16:47 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 16 Nov 2011 20:16:47 +0000
Subject: [Twisted-Python] 64 bit windows machine
In-Reply-To: <4EC3F7E0.6030903@collab.nl>
References: <4EC39FA0.1000200@imperial.ac.uk> <4EC3F7E0.6030903@collab.nl>
Message-ID: <4EC41A2F.6060604@imperial.ac.uk>

On 11/16/2011 05:50 PM, Thijs Triemstra wrote:

> Thanks for the offer but I think there's already a 64-bit python 2.7
> buildslave in use so it seems the wiki is out of date..
>
> http://buildbot.twistedmatrix.com/buildslaves/bot-glyph-6
>
> I'm not sure about the 64-bit packages, but its likely these builders
> were added after the 11.0 release and the upcoming 11.1 will have those
> packages.

Cool. Good to hear.



From ddwiggins at advpubtech.com  Wed Nov 16 13:27:44 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Wed, 16 Nov 2011 12:27:44 -0800
Subject: [Twisted-Python] Log output formatting (was Re: logging question)
In-Reply-To: <CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
Message-ID: <ja16c1$u1t$1@dough.gmane.org>

On 11/15/2011 8:57 AM, Christopher Armstrong wrote:
> If you pass a 'system' kwarg to log.msg then it will go in that field.
>
> log.msg("hi", system="stuff") results in <date> [stuff] hi

This triggered me to look further into what LogPublisher.msg does, since 
I've long wanted to customize the format of the output.  I found what I 
wanted in 
http://twistedmatrix.com/documents/current/api/twisted.python.log.ILogObserver.html 
:

In msg(), the message gets added to the kwargs dictionary (along with a 
timestamp called 'time'), and that dict is passed to LogObserver.emit, 
which uses textFromEventDict() to create what's actually output.  This 
dictionary has the following keys recognized by textFromEventDict:

    * |message|: A |tuple| of |str| containing messages to be logged.
    * |system|: A |str| which indicates the "system" which is generating
      this event.
    * |isError|: A |bool| indicating whether this event represents an
      error.
    * |failure|: A |failure.Failure|
      <http://twistedmatrix.com/documents/current/api/twisted.python.failure.Failure.html>
      instance, required if the event is an error.
    * |why|: Used as header of the traceback in case of errors.
    * |format|: A string format used in place of |message| to customize
      the event. The intent is for the observer to format a message by
      doing something like |format % eventDict|.

So, for example, you could do log.msg(format='....', foo='stuff', 
bar='things')

I suggest that this be added to the documentation string of the msg() 
method and 
http://twistedmatrix.com/documents/current/core/howto/logging.html.


-- 

Don Dwiggins
Advanced Publishing Technology

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111116/080000d9/attachment-0001.html>

From glyph at twistedmatrix.com  Wed Nov 16 14:01:36 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 16 Nov 2011 16:01:36 -0500
Subject: [Twisted-Python] 64 bit windows machine
In-Reply-To: <4EC41A2F.6060604@imperial.ac.uk>
References: <4EC39FA0.1000200@imperial.ac.uk> <4EC3F7E0.6030903@collab.nl>
	<4EC41A2F.6060604@imperial.ac.uk>
Message-ID: <F995B9CA-51AB-4762-B5F5-74C007285EFB@twistedmatrix.com>


On Nov 16, 2011, at 3:16 PM, Phil Mayers wrote:

> On 11/16/2011 05:50 PM, Thijs Triemstra wrote:
> 
>> Thanks for the offer but I think there's already a 64-bit python 2.7
>> buildslave in use so it seems the wiki is out of date..
>> 
>> http://buildbot.twistedmatrix.com/buildslaves/bot-glyph-6
>> 
>> I'm not sure about the 64-bit packages, but its likely these builders
>> were added after the 11.0 release and the upcoming 11.1 will have those
>> packages.
> 
> Cool. Good to hear.

It's always helpful to get more hardware for the build farm though; there are more configurations that we want to test than we can possibly buy enough hardware for :).

It would also be very helpful if you could contribute some time to help administer our existing Windows buildslaves; Windows expertise (especially administrator expertise) is fairly thin among the core developer community.

What were you thinking of offering?

-glyph


From vieuxtech at gmail.com  Wed Nov 16 15:19:51 2011
From: vieuxtech at gmail.com (Sam Roberts)
Date: Wed, 16 Nov 2011 14:19:51 -0800
Subject: [Twisted-Python] gnupg protocol implementation, does one exist?
In-Reply-To: <mailman.3454.1321473169.5291.twisted-python@twistedmatrix.com>
References: <mailman.3454.1321473169.5291.twisted-python@twistedmatrix.com>
Message-ID: <CA+Sj9TmZj4e=Kr6fc0Fn+gDanZVOtGbC-mThhgJaNjOqaLtrbA@mail.gmail.com>

There is a bit of an example in

http://twistedmatrix.com/documents/current/core/howto/process.html

but I'm sure somebody out there must have fleshed this out into a more
complete implementation.

Can anybody point me to such a thing, before we write out own?

We are currently using GnuPGInterface.py, but its non-twisted child
process handling is causing flakyness, especially around the waitpid()
call.

Thanks,
Sam



From screwtape at froup.com  Wed Nov 16 20:46:45 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 17 Nov 2011 14:46:45 +1100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>
References: <20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
	<20111116124119.GC2439@localhost>
	<CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>
Message-ID: <20111117034645.GN9962@boombah.thristian.org>

On Wed, Nov 16, 2011 at 08:17:51AM -0600, Jeffrey Ollie wrote:
> The solution that I've come up with is to use git-svn to create a
> separate Git repository for each branch, and then git-push that branch
> into a central Git repository.  This does burn *a lot* of disk space,
> but only one person needs to do it - everyone else can clone the
> central repository.  The initial setup takes a while, but subsequent
> runs should be relatively fast.
> 
> You can see the converted repository I'm building at:
> 
> https://github.com/jcollie/twisted
> 
> It's still in the process of building up so not all the branches are
> there yet.

Oooh. That's looking pretty good. As you say, not all the branches are
there, and none of the tags, but I can see you've already successfully imported some
of the tricky release branches.

> I've put the script that I'm using here:
> 
> https://github.com/jcollie/twisted-svn-convert
> 
> One feature that I'd like to add before calling this final is
> converting SVN usernames to "proper" names/email addresses like Git
> prefers to use.

I see your script repository already has the beginnings of such
a mapping file; unfortunately you've already filled in most of the names
I recognise, and I don't know if there's any other authoritative list of
such information (and of course, it would need to be updated as Twisted
adds new committers).

The "how to mirror Git to SVN" section of the Git FAQ includes
information on how to take a cloned git repository and add git-svn magic
so you can commit to the original upstream repository; I guess that
wouldn't really work with your custom import script.

I think this would be a much better base for an Official Twisted Git
Mirror than anything I've come up with so far. How difficult would it be
for somebody unfamiliar with Git (such as, say, the Twisted core devs)
to keep running?



From twisted at ralphm.ik.nu  Thu Nov 17 03:03:29 2011
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Thu, 17 Nov 2011 11:03:29 +0100
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111117034645.GN9962@boombah.thristian.org>
References: <20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
	<20111116124119.GC2439@localhost>
	<CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>
	<20111117034645.GN9962@boombah.thristian.org>
Message-ID: <1321524209.2789.14.camel@dwaal>

On Thu, 2011-11-17 at 14:46 +1100, Tim Allen wrote:
> On Wed, Nov 16, 2011 at 08:17:51AM -0600, Jeffrey Ollie wrote:
>[..snip..]
>
> > One feature that I'd like to add before calling this final is
> > converting SVN usernames to "proper" names/email addresses like Git
> > prefers to use.
> 
> I see your script repository already has the beginnings of such
> a mapping file; unfortunately you've already filled in most of the names
> I recognise, and I don't know if there's any other authoritative list of
> such information (and of course, it would need to be updated as Twisted
> adds new committers).

These might be a good start:

http://twistedmatrix.com/trac/wiki/TwistedMatrixLaboratories
http://twistedmatrix.com/trac/browser/trunk/twisted/topfiles/CREDITS

However the latter hasn't changed in 5 years, the former probably also
isn't complete and people's e-mail addresses might not map their
(current) Git(Hub) one.

--
ralphm




From jeff at ocjtech.us  Thu Nov 17 07:29:16 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Thu, 17 Nov 2011 08:29:16 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <20111117034645.GN9962@boombah.thristian.org>
References: <20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
	<20111116124119.GC2439@localhost>
	<CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>
	<20111117034645.GN9962@boombah.thristian.org>
Message-ID: <CAD-DQxTi2ZfResfECZDqHp9EpWWKjWf0qDKN+dzPU=n2ATjftQ@mail.gmail.com>

On Wed, Nov 16, 2011 at 9:46 PM, Tim Allen <screwtape at froup.com> wrote:
> On Wed, Nov 16, 2011 at 08:17:51AM -0600, Jeffrey Ollie wrote:
>>
>> It's still in the process of building up so not all the branches are
>> there yet.
>
> Oooh. That's looking pretty good. As you say, not all the branches are
> there, and none of the tags, but I can see you've already successfully imported some
> of the tricky release branches.

The problem with tags in SVN is that there really aren't any, there
are just directories that are used as tags by convention.

> The "how to mirror Git to SVN" section of the Git FAQ includes
> information on how to take a cloned git repository and add git-svn magic
> so you can commit to the original upstream repository; I guess that
> wouldn't really work with your custom import script.

Not really, and from what I've seen it's very tricky to get it to work
properly anyway.

> I think this would be a much better base for an Official Twisted Git
> Mirror than anything I've come up with so far. How difficult would it be
> for somebody unfamiliar with Git (such as, say, the Twisted core devs)
> to keep running?

Customize a few variables and then it's just a matter of putting it in
a cron job.  I should add some sort of locking as well so that if one
run lasts too long a subsequent run won't step all over the previous
one.

-- 
Jeff Ollie



From therve at free.fr  Thu Nov 17 11:02:17 2011
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Thu, 17 Nov 2011 19:02:17 +0100
Subject: [Twisted-Python] Twisted 11.1.0 Released
Message-ID: <4EC54C29.80300@free.fr>

On behalf of Twisted Matrix Laboratories, I am pleased to announce the
release of Twisted 11.1.

Highlights of the 185 tickets closed include:

  * The poll reactor as default where applicable, instead of select
    everywhere.

  * A new SSL implementation only relying on OpenSSL for cryptography,
    (not I/O) making it more robust.

  * Several improvements to the fresh HTTP/1.1 client implementation,
    including proxy and cookie support.

  * My personal favorite: a new howto has been published on test-driven
    development with Twisted.

  * A special mention to the new abortConnection support on TCP and SSL
    connections, heroically pushed by Itamar and Jean-Paul, and the
    oldest ticket closed by this release.

This is the last release supporting Python 2.4 (the support on Windows stopped with 11.0).

For more information, see the NEWS file here:

  http://twistedmatrix.com/Releases/Twisted/11.1/NEWS.txt

Download it now from:

  http://pypi.python.org/packages/source/T/Twisted/Twisted-11.1.0.tar.bz2 or
  http://pypi.python.org/packages/2.5/T/Twisted/Twisted-11.1.0.win32-py2.5.msi or
  http://pypi.python.org/packages/2.6/T/Twisted/Twisted-11.1.0.win32-py2.6.msi or
  http://pypi.python.org/packages/2.7/T/Twisted/Twisted-11.1.0.win32-py2.7.msi

Thanks to the supporters of the Twisted Software Foundation and to the many contributors for this release.

-- 
Thomas




From jml at mumak.net  Thu Nov 17 11:05:15 2011
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 17 Nov 2011 18:05:15 +0000
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <4EC54C29.80300@free.fr>
References: <4EC54C29.80300@free.fr>
Message-ID: <CAHZ8tnbNTDBwmgdM+QdwMh5kChFcQqqVPHT=xXm4NTd1aACusw@mail.gmail.com>

On Thu, Nov 17, 2011 at 6:02 PM, Thomas Hervé <therve at free.fr> wrote:
> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 11.1.
>

\o/

> Highlights of the 185 tickets closed include:
>

Rock on!

...
> This is the last release supporting Python 2.4 (the support on Windows stopped with 11.0).
>

This just gets better and better :)

Thanks so much for getting the release out, and to all who contributed
to making it the best release of Twisted ever.

jml



From glyph at twistedmatrix.com  Thu Nov 17 12:11:36 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 17 Nov 2011 14:11:36 -0500
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <4EC54C29.80300@free.fr>
References: <4EC54C29.80300@free.fr>
Message-ID: <2D70BD79-722C-4F08-8DBD-135FE37814FB@twistedmatrix.com>


On Nov 17, 2011, at 1:02 PM, Thomas Hervé wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 11.1.

WOOOOOOOOO!

Thanks to Thomas and everyone who worked on fixes and features for this release.

>  * My personal favorite: a new howto has been published on test-driven
>    development with Twisted.

LEARN IT.  LOVE IT.  LIVE IT.

<http://twistedmatrix.com/documents/current/core/howto/trial.html>

> Thanks to the supporters of the Twisted Software Foundation and to the many contributors for this release.

A gentle reminder: those supporters should renew their sponsorships; we were remarkably lax in 2011, but at the beginning of 2012, all those logos will be coming down off the front page unless they are renewed :-).  Sponsored development and especially sponsored reviews really helped to make 11.1 what it is, It would be great to make 12.0 (and beyond) even better!

-glyph




From kevin.horn at gmail.com  Thu Nov 17 12:58:31 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 17 Nov 2011 13:58:31 -0600
Subject: [Twisted-Python] Twisted 11.1.0 Released
In-Reply-To: <4EC54C29.80300@free.fr>
References: <4EC54C29.80300@free.fr>
Message-ID: <CA+U=zK3uVp1abhHzZ7ZLXxX7jgouKfObE0yRbAHetJRXtCNSwA@mail.gmail.com>

On Thu, Nov 17, 2011 at 12:02 PM, Thomas Hervé <therve at free.fr> wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 11.1.
>
> Highlights of the 185 tickets closed include:
>
>  * The poll reactor as default where applicable, instead of select
>    everywhere.
>
>  * A new SSL implementation only relying on OpenSSL for cryptography,
>    (not I/O) making it more robust.
>
>  * Several improvements to the fresh HTTP/1.1 client implementation,
>    including proxy and cookie support.
>
>  * My personal favorite: a new howto has been published on test-driven
>    development with Twisted.
>
>  * A special mention to the new abortConnection support on TCP and SSL
>    connections, heroically pushed by Itamar and Jean-Paul, and the
>    oldest ticket closed by this release.
>
> This is the last release supporting Python 2.4 (the support on Windows
> stopped with 11.0).
>
> For more information, see the NEWS file here:
>
>  http://twistedmatrix.com/Releases/Twisted/11.1/NEWS.txt
>
> Download it now from:
>
>  http://pypi.python.org/packages/source/T/Twisted/Twisted-11.1.0.tar.bz2or
>
> http://pypi.python.org/packages/2.5/T/Twisted/Twisted-11.1.0.win32-py2.5.msior
>
> http://pypi.python.org/packages/2.6/T/Twisted/Twisted-11.1.0.win32-py2.6.msior
>
> http://pypi.python.org/packages/2.7/T/Twisted/Twisted-11.1.0.win32-py2.7.msi
>
> Thanks to the supporters of the Twisted Software Foundation and to the
> many contributors for this release.
>
> --
> Thomas
>

<happydance>

Great work, everyone, and especially Thomas, for performing the relatively
tedious task of cutting the release.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111117/7de62fd8/attachment.html>

From kevin.horn at gmail.com  Thu Nov 17 13:01:18 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 17 Nov 2011 14:01:18 -0600
Subject: [Twisted-Python] Twisted Project Jobs Volunteer
In-Reply-To: <1321524209.2789.14.camel@dwaal>
References: <20111113061340.GH9962@boombah.thristian.org>
	<AB95405F-AD29-41AA-88A6-81EACFB36DE9@twistedmatrix.com>
	<20111114034704.GI9962@boombah.thristian.org>
	<20111114043943.20412.639629075.divmod.xquotient.48@localhost.localdomain>
	<79DEBE96-CA01-468B-A8D7-0F9F1DB7609D@twistedmatrix.com>
	<20111114115553.GK9962@boombah.thristian.org>
	<4669A125-2F2F-4E16-A4BA-3ADD59492923@twistedmatrix.com>
	<20111116121350.GM9962@boombah.thristian.org>
	<20111116124119.GC2439@localhost>
	<CAD-DQxRbcSW_zdg+roC2zaDMp7d-ZcRvJ5dM9Z0qdJAb3QP9mA@mail.gmail.com>
	<20111117034645.GN9962@boombah.thristian.org>
	<1321524209.2789.14.camel@dwaal>
Message-ID: <CA+U=zK1BM2H7m-6gmpOnBKcwkzcw8UuuOqxknc5R-18rRtTe9A@mail.gmail.com>

On Thu, Nov 17, 2011 at 4:03 AM, Ralph Meijer <twisted at ralphm.ik.nu> wrote:

>
> http://twistedmatrix.com/trac/wiki/TwistedMatrixLaboratories
> http://twistedmatrix.com/trac/browser/trunk/twisted/topfiles/CREDITS
>
> However the latter hasn't changed in 5 years, the former probably also
> isn't complete and people's e-mail addresses might not map their
> (current) Git(Hub) one.
>
>
Those are most definitely not complete.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111117/1d0c0717/attachment.html>

From kevin.horn at gmail.com  Thu Nov 17 14:10:18 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 17 Nov 2011 15:10:18 -0600
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <ja16c1$u1t$1@dough.gmane.org>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
Message-ID: <CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>

On Wed, Nov 16, 2011 at 2:27 PM, Don Dwiggins <ddwiggins at advpubtech.com>wrote:

> **
> On 11/15/2011 8:57 AM, Christopher Armstrong wrote:
>
> If you pass a 'system' kwarg to log.msg then it will go in that field.
>
>  log.msg("hi", system="stuff") results in <date> [stuff] hi
>
>
> This triggered me to look further into what LogPublisher.msg does, since
> I've long wanted to customize the format of the output.  I found what I
> wanted in
> http://twistedmatrix.com/documents/current/api/twisted.python.log.ILogObserver.html:
>
> In msg(), the message gets added to the kwargs dictionary (along with a
> timestamp called 'time'), and that dict is passed to LogObserver.emit,
> which uses textFromEventDict() to create what's actually output.  This
> dictionary has the following keys recognized by textFromEventDict:
>
>    - message: A tuple of str containing messages to be logged.
>    - system: A str which indicates the "system" which is generating this
>    event.
>    - isError: A bool indicating whether this event represents an error.
>    - failure: A failure.Failure<http://twistedmatrix.com/documents/current/api/twisted.python.failure.Failure.html>instance, required
>    if the event is an error.
>    - why: Used as header of the traceback in case of errors.
>    - format: A string format used in place of message to customize the
>    event. The intent is for the observer to format a message by doing
>    something like format % eventDict.
>
> So, for example, you could do log.msg(format='....', foo='stuff',
> bar='things')
>
> I suggest that this be added to the documentation string of the msg()
> method and
> http://twistedmatrix.com/documents/current/core/howto/logging.html.
>
>
> --
>
> Don Dwiggins
> Advanced Publishing Technology
>
>
>
Please open a ticket for this, so it doesn't get lost.

Thx.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111117/b8283a43/attachment.html>

From tobias.oberstein at tavendo.de  Thu Nov 17 14:18:54 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 17 Nov 2011 13:18:54 -0800
Subject: [Twisted-Python] Twisted 11.1.0 Released
In-Reply-To: <4EC54C29.80300@free.fr>
References: <4EC54C29.80300@free.fr>
Message-ID: <634914A010D0B943A035D226786325D42D0D27589C@EXVMBX020-12.exch020.serverdata.net>

> Highlights of the 185 tickets closed include:

Awesome!

Haven't been around on the Twisted homepage for a while, but the
release made me to, so I like to add this (not release related):

The new homepage is really nice and much more inviting!




From ypercube at gmail.com  Thu Nov 17 15:15:34 2011
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Thu, 17 Nov 2011 22:15:34 +0000
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <4EC54C29.80300@free.fr>
References: <4EC54C29.80300@free.fr>
Message-ID: <CAE3TBxyZ4D4F0SDPpKFZCAKuoC_63M71JAZLnxAT7byUvjOXAQ@mail.gmail.com>

Great, just great!

(nitpicking: the title should be changed from "Twisted *11.1.0* Released"
to "*Twisted 11.1.1 Released*")

Pandelis


On Thu, Nov 17, 2011 at 6:02 PM, Thomas Hervé <therve at free.fr> wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 11.1.
>
> Highlights of the 185 tickets closed include:
>
>  * The poll reactor as default where applicable, instead of select
>    everywhere.
>
>  * A new SSL implementation only relying on OpenSSL for cryptography,
>    (not I/O) making it more robust.
>
>  * Several improvements to the fresh HTTP/1.1 client implementation,
>    including proxy and cookie support.
>
>  * My personal favorite: a new howto has been published on test-driven
>    development with Twisted.
>
>  * A special mention to the new abortConnection support on TCP and SSL
>    connections, heroically pushed by Itamar and Jean-Paul, and the
>    oldest ticket closed by this release.
>
> This is the last release supporting Python 2.4 (the support on Windows
> stopped with 11.0).
>
> For more information, see the NEWS file here:
>
>  http://twistedmatrix.com/Releases/Twisted/11.1/NEWS.txt
>
> Download it now from:
>
>  http://pypi.python.org/packages/source/T/Twisted/Twisted-11.1.0.tar.bz2or
>
> http://pypi.python.org/packages/2.5/T/Twisted/Twisted-11.1.0.win32-py2.5.msior
>
> http://pypi.python.org/packages/2.6/T/Twisted/Twisted-11.1.0.win32-py2.6.msior
>
> http://pypi.python.org/packages/2.7/T/Twisted/Twisted-11.1.0.win32-py2.7.msi
>
> Thanks to the supporters of the Twisted Software Foundation and to the
> many contributors for this release.
>
> --
> Thomas
>
>
> _______________________________________________
> Twisted-web mailing list
> Twisted-web at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111117/2a4f5d4b/attachment.html>

From ypercube at gmail.com  Thu Nov 17 15:17:57 2011
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Thu, 17 Nov 2011 22:17:57 +0000
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <CAE3TBxyZ4D4F0SDPpKFZCAKuoC_63M71JAZLnxAT7byUvjOXAQ@mail.gmail.com>
References: <4EC54C29.80300@free.fr>
	<CAE3TBxyZ4D4F0SDPpKFZCAKuoC_63M71JAZLnxAT7byUvjOXAQ@mail.gmail.com>
Message-ID: <CAE3TBxwWt4Gs++nsoG4wuQSCeaKa6V3HyqsyZGLQfWMT29ebcQ@mail.gmail.com>

On Thu, Nov 17, 2011 at 10:15 PM, Pantelis Theodosiou <ypercube at gmail.com>wrote:

> Great, just great!
>
> (nitpicking: the title should be changed from "Twisted *11.1.0* Released"
> to "*Twisted 11.1.1 Released*")
>

Oops, my bad. Too many 1s can confuse one's mind. Sorry.


>
> Pandelis
>
>
>
> On Thu, Nov 17, 2011 at 6:02 PM, Thomas Hervé <therve at free.fr> wrote:
>
>> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
>> release of Twisted 11.1.
>>
>> Highlights of the 185 tickets closed include:
>>
>>  * The poll reactor as default where applicable, instead of select
>>    everywhere.
>>
>>  * A new SSL implementation only relying on OpenSSL for cryptography,
>>    (not I/O) making it more robust.
>>
>>  * Several improvements to the fresh HTTP/1.1 client implementation,
>>    including proxy and cookie support.
>>
>>  * My personal favorite: a new howto has been published on test-driven
>>    development with Twisted.
>>
>>  * A special mention to the new abortConnection support on TCP and SSL
>>    connections, heroically pushed by Itamar and Jean-Paul, and the
>>    oldest ticket closed by this release.
>>
>> This is the last release supporting Python 2.4 (the support on Windows
>> stopped with 11.0).
>>
>> For more information, see the NEWS file here:
>>
>>  http://twistedmatrix.com/Releases/Twisted/11.1/NEWS.txt
>>
>> Download it now from:
>>
>>  http://pypi.python.org/packages/source/T/Twisted/Twisted-11.1.0.tar.bz2or
>>
>> http://pypi.python.org/packages/2.5/T/Twisted/Twisted-11.1.0.win32-py2.5.msior
>>
>> http://pypi.python.org/packages/2.6/T/Twisted/Twisted-11.1.0.win32-py2.6.msior
>>
>> http://pypi.python.org/packages/2.7/T/Twisted/Twisted-11.1.0.win32-py2.7.msi
>>
>> Thanks to the supporters of the Twisted Software Foundation and to the
>> many contributors for this release.
>>
>> --
>> Thomas
>>
>>
>> _______________________________________________
>> Twisted-web mailing list
>> Twisted-web at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111117/5d73f9a7/attachment.html>

From exarkun at twistedmatrix.com  Thu Nov 17 16:26:48 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 17 Nov 2011 23:26:48 -0000
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
Message-ID: <20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>

On 09:10 pm, kevin.horn at gmail.com wrote:
>On Wed, Nov 16, 2011 at 2:27 PM, Don Dwiggins 
><ddwiggins at advpubtech.com>wrote:
>>**
>>On 11/15/2011 8:57 AM, Christopher Armstrong wrote:
>>
>>If you pass a 'system' kwarg to log.msg then it will go in that field.
>>
>>  log.msg("hi", system="stuff") results in <date> [stuff] hi
>>
>>
>>This triggered me to look further into what LogPublisher.msg does, 
>>since
>>I've long wanted to customize the format of the output.  I found what 
>>I
>>wanted in
>>http://twistedmatrix.com/documents/current/api/twisted.python.log.ILogObserver.html:
>>
>>In msg(), the message gets added to the kwargs dictionary (along with 
>>a
>>timestamp called 'time'), and that dict is passed to LogObserver.emit,
>>which uses textFromEventDict() to create what's actually output.  This
>>dictionary has the following keys recognized by textFromEventDict:
>>
>>    - message: A tuple of str containing messages to be logged.
>>    - system: A str which indicates the "system" which is generating 
>>this
>>    event.
>>    - isError: A bool indicating whether this event represents an 
>>error.
>>    - failure: A 
>>failure.Failure<http://twistedmatrix.com/documents/current/api/twisted.python.failure.Failure.html>instance, 
>>required
>>    if the event is an error.
>>    - why: Used as header of the traceback in case of errors.
>>    - format: A string format used in place of message to customize the
>>    event. The intent is for the observer to format a message by doing
>>    something like format % eventDict.
>>
>>So, for example, you could do log.msg(format='....', foo='stuff',
>>bar='things')
>>
>>I suggest that this be added to the documentation string of the msg()
>>method and
>>http://twistedmatrix.com/documents/current/core/howto/logging.html.

`msg` doesn't really care about what you give it.  It doesn't support 
the `format` keyword in any particular way.  It's the job of a log 
observer to handle that sort of thing.  So it could certainly be 
documented, but don't mix things together that are unrelated.

Jean-Paul



From exarkun at twistedmatrix.com  Thu Nov 17 20:34:26 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 18 Nov 2011 03:34:26 -0000
Subject: [Twisted-Python] 64 bit windows machine
In-Reply-To: <4EC39FA0.1000200@imperial.ac.uk>
References: <4EC39FA0.1000200@imperial.ac.uk>
Message-ID: <20111118033426.20412.273429403.divmod.xquotient.135@localhost.localdomain>

On 16 Nov, 11:33 am, p.mayers at imperial.ac.uk wrote:
>I see from the Trac page that you guys are (or were) hunting a 64-bit
>windows machine. I also see there are no 64-bit Twisted packages on 
>pypi.

/Another/ reason there are no 64 bit Twisted packages on PyPI is that 
PyPI rejects 64 bit MSI uploads.  If someone wants to help out on this 
front, filing bugs against PyPI (and perhaps then fixing them, and 
getting someone to deploy the fixes) would be useful.  This is also one 
of the reasons there are no 64 bit pyOpenSSL packages on PyPI.

Jean-Paul



From glyph at twistedmatrix.com  Thu Nov 17 22:11:24 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 18 Nov 2011 00:11:24 -0500
Subject: [Twisted-Python] Twisted 11.1.0 Released
In-Reply-To: <634914A010D0B943A035D226786325D42D0D27589C@EXVMBX020-12.exch020.serverdata.net>
References: <4EC54C29.80300@free.fr>
	<634914A010D0B943A035D226786325D42D0D27589C@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <8C8DB58C-0937-4B70-9781-A96A500A8DBD@twistedmatrix.com>


On Nov 17, 2011, at 4:18 PM, Tobias Oberstein wrote:

>> Highlights of the 185 tickets closed include:
> 
> Awesome!
> 
> Haven't been around on the Twisted homepage for a while, but the
> release made me to, so I like to add this (not release related):
> 
> The new homepage is really nice and much more inviting!

Thanks for noticing!  I believe the current re-write was an effort put forth by Itamar, so credit where credit's due :).

-glyph


From albert.brandl at weiermayer.com  Fri Nov 18 01:46:45 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Fri, 18 Nov 2011 09:46:45 +0100
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <2D70BD79-722C-4F08-8DBD-135FE37814FB@twistedmatrix.com>
References: <4EC54C29.80300@free.fr>
	<2D70BD79-722C-4F08-8DBD-135FE37814FB@twistedmatrix.com>
Message-ID: <20111118084645.GA3413@weiermayer.com>

On Thu, Nov 17, 2011 at 02:11:36PM -0500, Glyph wrote:
> 
> A gentle reminder: those supporters should renew their sponsorships; we 
> were remarkably lax in 2011, but at the beginning of 2012, all those 
> logos will be coming down off the front page unless they are renewed 
> :-).

I just had a look at the page explaining the TSF. In the section "Benefits
of Sponsorship", the first note about logos reads:

"Placement on the front page of http://twistedmatrix.com will be for 
donations that equal or are more than the Bronze level."

The "equal or" seems to be wrong.

Best regards,
-- 
Albert Brandl | Weiermayer Solutions GmbH


​
A-4813 Altmünster - Abteistraße 12 - web: www.weiermayer.com - phone: +43761287677 - fax: +43761220356 - mobile: +436642442777

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111118/85eb2626/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 43835 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20111118/85eb2626/attachment.jpe>

From albert.brandl at weiermayer.com  Fri Nov 18 04:23:52 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Fri, 18 Nov 2011 12:23:52 +0100
Subject: [Twisted-Python] Sending a "good-bye message" before closing a
	connection
Message-ID: <20111118112352.GA17073@weiermayer.com>

Hi!

We have a small heartbeat-system based on Twisted. The clients register
at the server and send some health information in regular intervals.
If the server does not get a lifesign from a client, this is registered
in a database. 

But sometimes, the clients have to go offline. In this case, I'd like 
them to send a message to the server that they will be gone for a while.
When a client goes offline, the twistd daemon for handling the heartbeats
is shut down.

What is the best way to do this in Twisted? The `clientConnectionLost`
method of the factory is only called after disconnecting, AFAICT.

Thanks & best regards,

-- 
Albert Brandl


​
A-4813 Altmünster - Abteistraße 12 - web: www.weiermayer.com - phone: +43761287677 - fax: +43761220356 - mobile: +436642442777

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111118/3b0b2976/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 43835 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20111118/3b0b2976/attachment.jpe>

From itamar at itamarst.org  Fri Nov 18 06:31:18 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 18 Nov 2011 08:31:18 -0500
Subject: [Twisted-Python] Sending a "good-bye message" before closing a
 connection
In-Reply-To: <20111118112352.GA17073@weiermayer.com>
References: <20111118112352.GA17073@weiermayer.com>
Message-ID: <1321623078.5747.3.camel@blake>

On Fri, 2011-11-18 at 12:23 +0100, Albert Brandl wrote:

> But sometimes, the clients have to go offline. In this case, I'd like 
> them to send a message to the server that they will be gone for a
> while.
> When a client goes offline, the twistd daemon for handling the
> heartbeats
> is shut down.

Presumably there is a method somewhere that decides to close the
connection down:

   def timeToShutdown(self):
       self.transport.loseConnection()

So instead do:

   def timeToShutdown(self):
       self.transport.write(GOODBYE)
       self.transport.loseConnection()





From dynamicgl at gmail.com  Fri Nov 18 12:14:27 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 19 Nov 2011 03:14:27 +0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
Message-ID: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>

Hi all.

   just a few hours ago, I discovered ampoule is probably a right choice to
run my analyze codes. I want to know whether your guys have used it for
production purposes or not It seems the development has been frozen for a
while and I noticed many bugs reported on the board. Some bugs looks like
quite serious for example: a bug mentioned occasionally, startWorker may
generate double process until the system hanging.

    If those bugs still exist, i am gonna try to fix some of them if it is
impossible.

Regards

GELIN YAN
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111119/0fdd4524/attachment.html>

From drednout.by at gmail.com  Fri Nov 18 12:58:10 2011
From: drednout.by at gmail.com (Romanoff Alexei)
Date: Fri, 18 Nov 2011 19:58:10 +0000
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
Message-ID: <CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>

2011/11/18 gelin yan <dynamicgl at gmail.com>:
> Hi all.
>    just a few hours ago, I discovered ampoule is probably a right choice to
> run my analyze codes. I want to know whether your guys have used it for
> production purposes or not It seems the development has been frozen for a
> while and I noticed many bugs reported on the board. Some bugs looks like
> quite serious for example: a bug mentioned occasionally, startWorker may
> generate double process until the system hanging.
>     If those bugs still exist, i am gonna try to fix some of them if it is
> impossible.
> Regards
> GELIN YAN
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

Good question!
I've recently adopted our game server for processing client requests
in several processes using ampoule as tool for managing process pool.
New approach has significantly more performance(5-100% more queries
per second in depends on type of query and the number of concurrent
clients) and high scalability. Modern servers have a lot of processor
cores, but GIL  in python kills all opportunities to use
multi-threading for heavy computation.
But my solution is still not in production. I wanted to ask the same
question, but other tasks distracted me from ampoule and
multi-processing.
I should also mention that my tests were rather artificial,  I don't
know how  ampoule would work when many real players came to our server
and started playing.

I have also several patches for ampoule, which allows me send
many-many client's requests to several processes in pool(from the box
ampoule allows to process one query per process).

I'm really keen on this question, thank you, GELIN YAN.
-- 
Best regards,
Alexei Romanoff
software developer, Melesta



From exarkun at twistedmatrix.com  Fri Nov 18 13:17:46 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 18 Nov 2011 20:17:46 -0000
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <20111118084645.GA3413@weiermayer.com>
References: <4EC54C29.80300@free.fr>
	<2D70BD79-722C-4F08-8DBD-135FE37814FB@twistedmatrix.com>
	<20111118084645.GA3413@weiermayer.com>
Message-ID: <20111118201746.20412.1430484843.divmod.xquotient.165@localhost.localdomain>

On 08:46 am, albert.brandl at weiermayer.com wrote:
>On Thu, Nov 17, 2011 at 02:11:36PM -0500, Glyph wrote:
>>
>>A gentle reminder: those supporters should renew their sponsorships; 
>>we
>>were remarkably lax in 2011, but at the beginning of 2012, all those
>>logos will be coming down off the front page unless they are renewed
>>:-).
>
>I just had a look at the page explaining the TSF. In the section 
>"Benefits
>of Sponsorship", the first note about logos reads:
>
>"Placement on the front page of http://twistedmatrix.com will be for
>donations that equal or are more than the Bronze level."
>
>The "equal or" seems to be wrong.

Grammatically, or in some other way?

Jean-Paul



From JOHN at egh.com  Sat Nov 19 08:38:52 2011
From: JOHN at egh.com (John Santos)
Date: Sat, 19 Nov 2011 11:38:52 -0400
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <20111118201746.20412.1430484843.divmod.xquotient.165@localhost.localdomain>
Message-ID: <1111119113055.39570J-100000@Ives.egh.com>

On Fri, 18 Nov 2011 exarkun at twistedmatrix.com wrote:

> On 08:46 am, albert.brandl at weiermayer.com wrote:
> >On Thu, Nov 17, 2011 at 02:11:36PM -0500, Glyph wrote:
> >>
> >>A gentle reminder: those supporters should renew their sponsorships; 
> >>we
> >>were remarkably lax in 2011, but at the beginning of 2012, all those
> >>logos will be coming down off the front page unless they are renewed
> >>:-).
> >
> >I just had a look at the page explaining the TSF. In the section 
> >"Benefits
> >of Sponsorship", the first note about logos reads:
> >
> >"Placement on the front page of http://twistedmatrix.com will be for
> >donations that equal or are more than the Bronze level."
> >
> >The "equal or" seems to be wrong.
> 
> Grammatically, or in some other way?

I don't have any problem with the wording, but maybe "... that equal or 
exceed the Bronze level" would be clearer, in case some people have
trouble parsing it.

In BNF, the original wording means "... will be for donations that
[equal | are more than] the Bronze level." and is unambigous to me.


> 
> Jean-Paul
> 

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539




From facundobatista at gmail.com  Sat Nov 19 12:53:47 2011
From: facundobatista at gmail.com (Facundo Batista)
Date: Sat, 19 Nov 2011 16:53:47 -0300
Subject: [Twisted-Python] Twisted for Python 3
In-Reply-To: <20111019135033.6b40e5ba@pitrou.net>
References: <20111019135033.6b40e5ba@pitrou.net>
Message-ID: <CAM09pzQGjFMv+63DAOWKyPV3gwcz_VcFn+SuVvWdPRhgfXt-AQ@mail.gmail.com>

On Wed, Oct 19, 2011 at 8:50 AM, Antoine Pitrou <solipsis at pitrou.net> wrote:

> I'm announcing an experimental, work-in-progress port of Twisted to
> Python 3. The homepage, where you can find more detailed information,
> is at https://bitbucket.org/pitrou/t3k

Here's something similar from my side:

  lp:~facundo/+junk/twisted-py3k/

All testing infrastructure works, running of course the 2to3 inside the project.

A lot of tests fail, of course... I found that there're a lot of code
that you *need* to know the protocols and such to be able to convert
them...

Thanks for your work!

-- 
.    Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/



From exarkun at twistedmatrix.com  Sat Nov 19 22:05:29 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 20 Nov 2011 05:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1321765529.59.149088445@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111120/6aae8ffe/attachment-0001.html>

From dynamicgl at gmail.com  Sun Nov 20 23:25:54 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 21 Nov 2011 14:25:54 +0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
Message-ID: <CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>

Hi Romanoff

    Have you suffered from transfer large size of data to child process? I
encountered a problem: it seems i am unable to send any chunks of data
larger than 4000 bytes. I guess there is a limit.




On Sat, Nov 19, 2011 at 3:58 AM, Romanoff Alexei <drednout.by at gmail.com>wrote:

> 2011/11/18 gelin yan <dynamicgl at gmail.com>:
> > Hi all.
> >    just a few hours ago, I discovered ampoule is probably a right choice
> to
> > run my analyze codes. I want to know whether your guys have used it for
> > production purposes or not It seems the development has been frozen for a
> > while and I noticed many bugs reported on the board. Some bugs looks like
> > quite serious for example: a bug mentioned occasionally, startWorker may
> > generate double process until the system hanging.
> >     If those bugs still exist, i am gonna try to fix some of them if it
> is
> > impossible.
> > Regards
> > GELIN YAN
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
> Good question!
> I've recently adopted our game server for processing client requests
> in several processes using ampoule as tool for managing process pool.
> New approach has significantly more performance(5-100% more queries
> per second in depends on type of query and the number of concurrent
> clients) and high scalability. Modern servers have a lot of processor
> cores, but GIL  in python kills all opportunities to use
> multi-threading for heavy computation.
> But my solution is still not in production. I wanted to ask the same
> question, but other tasks distracted me from ampoule and
> multi-processing.
> I should also mention that my tests were rather artificial,  I don't
> know how  ampoule would work when many real players came to our server
> and started playing.
>
> I have also several patches for ampoule, which allows me send
> many-many client's requests to several processes in pool(from the box
> ampoule allows to process one query per process).
>
> I'm really keen on this question, thank you, GELIN YAN.
> --
> Best regards,
> Alexei Romanoff
> software developer, Melesta
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111121/02fc6a7a/attachment.html>

From glyph at twistedmatrix.com  Sun Nov 20 23:57:06 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 21 Nov 2011 01:57:06 -0500
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
Message-ID: <70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>


On Nov 21, 2011, at 1:25 AM, gelin yan wrote:

>     Have you suffered from transfer large size of data to child process? I encountered a problem: it seems i am unable to send any chunks of data larger than 4000 bytes. I guess there is a limit.

What do you mean by this?  Do you have a test case that demonstrates this limit?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111121/8fe97fcd/attachment.html>

From dynamicgl at gmail.com  Mon Nov 21 00:40:38 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 21 Nov 2011 15:40:38 +0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
Message-ID: <CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>

Hi glyph

     I attached a file for this purpose. there is a number 4073 inside the
code. when i use any smaller value, the function return a correct result. I
use win 7 & twisted 11.1 at the moment. I am not sure whether this limit
comes from os or not.

thanks

gelin yan

On Mon, Nov 21, 2011 at 2:57 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Nov 21, 2011, at 1:25 AM, gelin yan wrote:
>
>     Have you suffered from transfer large size of data to child process? I
> encountered a problem: it seems i am unable to send any chunks of data
> larger than 4000 bytes. I guess there is a limit.
>
>
> What do you mean by this?  Do you have a test case that demonstrates this
> limit?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111121/cd2ae764/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: multest.py
Type: application/octet-stream
Size: 1091 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20111121/cd2ae764/attachment-0002.obj>

From mostawesomedude at gmail.com  Mon Nov 21 01:39:13 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Mon, 21 Nov 2011 00:39:13 -0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
	<CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
Message-ID: <CALiqSLf+W=UWwvtmgxcXVegwDWz59ZQEbho7F5hwCO3XCuNhug@mail.gmail.com>

On Sun, Nov 20, 2011 at 11:40 PM, gelin yan <dynamicgl at gmail.com> wrote:
> Hi glyph
>      I attached a file for this purpose. there is a number 4073 inside the
> code. when i use any smaller value, the function return a correct result. I
> use win 7 & twisted 11.1 at the moment. I am not sure whether this limit
> comes from os or not.

A few intrepid hackers working on Win32 platforms reported similar
issues with Bravo, which uses Ampoule extensively. We chalked it up to
Win32 weirdness and told people to use better operating systems when
deploying Bravo. The only hack which seemed to alleviate the problem
was changing Twisted's subprocess management to allocate massive
(64KiB) buffers for the subprocess pipes instead of zeroing them out.
I have no idea what the correct answer is.

~ C.

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>



From flaviogrossi at ymail.com  Mon Nov 21 02:03:47 2011
From: flaviogrossi at ymail.com (Flavio Grossi)
Date: Mon, 21 Nov 2011 09:03:47 +0000 (UTC)
Subject: [Twisted-Python] Does anyone use ampoule in production?
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
	<CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
Message-ID: <loom.20111121T095718-973@post.gmane.org>

gelin yan <dynamicgl <at> gmail.com> writes:

> 
> 
> Hi glyph
> 
>      I attached a file for this purpose. there is a number 4073 inside the 
code. when i use any smaller value, the function return a correct result. I use 
win 7 & twisted 11.1 at the moment. I am not sure whether this limit comes from 
os or not.
> 


hi,
there is a limit, but it's 64kb [1][2], not 4k, in fact i can successfully run 
your program in linux until i use something bigger than 64k.

maybe there's an os-specific bug somewhere.

bye,
flavio


[1] http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html 
(the notes section)

[2] http://twistedmatrix.com/pipermail/twisted-python/2009-February/019218.html 
(mail by ampoule author)








From rlotun at gmail.com  Mon Nov 21 03:51:48 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 21 Nov 2011 10:51:48 +0000
Subject: [Twisted-Python] Twisted on PyPy
Message-ID: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>

Hi All,

I was just wondering if anyone is running (or has tested) their production
stack of Twisted on PyPy. Since 1.7 has just been released, I'd like to
play around with running our unit tests and running a production test at
some point.

One concern I have is support for pyOpenSSL on PyPy. According to
http://as.ynchrono.us/2011/04/pyopenssl-on-pypy.html as of April that
effort was progressing, just wondering if there are any updates on that
front?

I also stumbled on https://github.com/svpcom/pyopenssl-pypy which claims to
be a branch of pyOpenSSL that works with PyPy. Has anyone used it?

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111121/02910809/attachment.html>

From _ at lvh.cc  Mon Nov 21 03:57:13 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 21 Nov 2011 11:57:13 +0100
Subject: [Twisted-Python] Twisted on PyPy
In-Reply-To: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>
References: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>
Message-ID: <CAE_Hg6YOtN+U0MjS06rHxyD+i5TR6BSHTfvsrFXsJ2Fbr8j6iA@mail.gmail.com>

I tried once, and then I submitted a ticket, because a Cython extension was
preventing a complete install.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111121/5b3c5da6/attachment.html>

From ziga.seilnacht at gmail.com  Mon Nov 21 04:02:49 2011
From: ziga.seilnacht at gmail.com (=?windows-1252?Q?=8Eiga_Seilnacht?=)
Date: Mon, 21 Nov 2011 12:02:49 +0100
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
	<CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
Message-ID: <4ECA2FD9.1050801@gmail.com>

On 21.11.2011 8:40, gelin yan wrote:
> Hi glyph
>
>       I attached a file for this purpose. there is a number 4073 inside the
> code. when i use any smaller value, the function return a correct result. I
> use win 7&  twisted 11.1 at the moment. I am not sure whether this limit
> comes from os or not.
>
> thanks
>
> gelin yan
>

That sounds like issue 5365:
http://twistedmatrix.com/trac/ticket/5365

Does the patch there fix the issue for you?

Best regards,
Ziga



From dynamicgl at gmail.com  Mon Nov 21 04:41:56 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 21 Nov 2011 19:41:56 +0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <4ECA2FD9.1050801@gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
	<CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
	<4ECA2FD9.1050801@gmail.com>
Message-ID: <CABkOF6RJcMTGDtH3G0bXbwY-ssoXM5-uSQwwEGjrmwuLmPLZWw@mail.gmail.com>

Thanks for that... the patch you mentioned definitely solve this
problem...it looks like the default buffer size is 4096 bytes on windows.

minor change of the patch for twisted 11.1

_pollingfile._PIPE_BUFFER_SIZE has been changed to
_pollingfile.FULL_BUFFER_SIZE

*
*
thanks again for your guys help.

Regards

gelin yan

On Mon, Nov 21, 2011 at 7:02 PM, Žiga Seilnacht <ziga.seilnacht at gmail.com>wrote:

> On 21.11.2011 8:40, gelin yan wrote:
> > Hi glyph
> >
> >       I attached a file for this purpose. there is a number 4073 inside
> the
> > code. when i use any smaller value, the function return a correct
> result. I
> > use win 7&  twisted 11.1 at the moment. I am not sure whether this limit
> > comes from os or not.
> >
> > thanks
> >
> > gelin yan
> >
>
> That sounds like issue 5365:
> http://twistedmatrix.com/trac/ticket/5365
>
> Does the patch there fix the issue for you?
>
> Best regards,
> Ziga
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111121/7540cfd4/attachment-0001.html>

From dynamicgl at gmail.com  Mon Nov 21 04:53:13 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 21 Nov 2011 19:53:13 +0800
Subject: [Twisted-Python] Twisted on PyPy
In-Reply-To: <CAE_Hg6YOtN+U0MjS06rHxyD+i5TR6BSHTfvsrFXsJ2Fbr8j6iA@mail.gmail.com>
References: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>
	<CAE_Hg6YOtN+U0MjS06rHxyD+i5TR6BSHTfvsrFXsJ2Fbr8j6iA@mail.gmail.com>
Message-ID: <CABkOF6TjbffB8TJbLuwi4KkcoWXvRXCBgk1jUNjuKNE8kUo0Ag@mail.gmail.com>

If pypy doesn't work well with cython, it implies we can't use iocp for
that.

On Mon, Nov 21, 2011 at 6:57 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> I tried once, and then I submitted a ticket, because a Cython extension
> was preventing a complete install.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111121/843cb15d/attachment.html>

From dynamicgl at gmail.com  Mon Nov 21 05:55:51 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 21 Nov 2011 20:55:51 +0800
Subject: [Twisted-Python] Does anyone use ampoule in production?
In-Reply-To: <CALiqSLf+W=UWwvtmgxcXVegwDWz59ZQEbho7F5hwCO3XCuNhug@mail.gmail.com>
References: <CABkOF6TBeFoOc0K=OuS3o-oq0e_U1dpLvdAsNxAab6q1XUoj9g@mail.gmail.com>
	<CAMoxhts+M+8mmQ5nJN4_M1MGMkQWkhMC8WqnNeWbEWozm=NTEA@mail.gmail.com>
	<CABkOF6ShZWk1xYk+kxFNbb09hwefiL1iUT79vKY1KMurjAEd=A@mail.gmail.com>
	<70C444AD-9778-47C9-9BD5-EA2C3BA3C6AF@twistedmatrix.com>
	<CABkOF6Q_NGQ11=+OwOh4ua7PTKDp0+HGjj7u+jvZzRz+syp0JA@mail.gmail.com>
	<CALiqSLf+W=UWwvtmgxcXVegwDWz59ZQEbho7F5hwCO3XCuNhug@mail.gmail.com>
Message-ID: <CABkOF6Ru02ACj5KN-p=+XVGi=3OPQtK1FhWWdHumEM8wOOMEkA@mail.gmail.com>

Hi

   I am happy to see some other teams have used it in a production
environment. If there are no serious bugs, I am gonna use it to implement
my analyzer which need to take benefit from multiple cores. At the moment,
ampoule seems is the most intuitive way to reap the power of multiple cores.

thanks

gelin yan

On Mon, Nov 21, 2011 at 4:39 PM, Corbin Simpson
<mostawesomedude at gmail.com>wrote:

> On Sun, Nov 20, 2011 at 11:40 PM, gelin yan <dynamicgl at gmail.com> wrote:
> > Hi glyph
> >      I attached a file for this purpose. there is a number 4073 inside
> the
> > code. when i use any smaller value, the function return a correct
> result. I
> > use win 7 & twisted 11.1 at the moment. I am not sure whether this limit
> > comes from os or not.
>
> A few intrepid hackers working on Win32 platforms reported similar
> issues with Bravo, which uses Ampoule extensively. We chalked it up to
> Win32 weirdness and told people to use better operating systems when
> deploying Bravo. The only hack which seemed to alleviate the problem
> was changing Twisted's subprocess management to allocate massive
> (64KiB) buffers for the subprocess pipes instead of zeroing them out.
> I have no idea what the correct answer is.
>
> ~ C.
>
> --
> When the facts change, I change my mind. What do you do, sir? ~ Keynes
>
> Corbin Simpson
> <MostAwesomeDude at gmail.com>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111121/11eecf55/attachment.html>

From exarkun at twistedmatrix.com  Mon Nov 21 06:03:14 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 21 Nov 2011 13:03:14 -0000
Subject: [Twisted-Python] Twisted on PyPy
In-Reply-To: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>
References: <CAFJezo2eDpVK6LDGwrNkQb9p2ggWCvqVD1S4xrnxkbt9zoA8Jw@mail.gmail.com>
Message-ID: <20111121130314.2308.1777028927.divmod.xquotient.24@localhost.localdomain>

On 10:51 am, rlotun at gmail.com wrote:
>Hi All,
>
>I was just wondering if anyone is running (or has tested) their 
>production
>stack of Twisted on PyPy. Since 1.7 has just been released, I'd like to
>play around with running our unit tests and running a production test 
>at
>some point.

PyPy testing is part of Twisted development:

    http://buildbot.twistedmatrix.com/builders/lucid32-pypy
>
>One concern I have is support for pyOpenSSL on PyPy. According to
>http://as.ynchrono.us/2011/04/pyopenssl-on-pypy.html as of April that
>effort was progressing, just wondering if there are any updates on that
>front?

Upstream pyOpenSSL builds on PyPy and passes a large portion of its test 
suite (certain things related to memoryview are not supported).
>
>I also stumbled on https://github.com/svpcom/pyopenssl-pypy which 
>claims to
>be a branch of pyOpenSSL that works with PyPy. Has anyone used it?

It looks like an exact copy of pyOpenSSL from June with no changes.

Jean-Paul



From albert.brandl at weiermayer.com  Wed Nov 23 01:52:51 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 23 Nov 2011 09:52:51 +0100
Subject: [Twisted-Python] [Twisted-web] Twisted 11.1.0 Released
In-Reply-To: <20111118201746.20412.1430484843.divmod.xquotient.165@localhost.localdomain>
References: <4EC54C29.80300@free.fr>
	<2D70BD79-722C-4F08-8DBD-135FE37814FB@twistedmatrix.com>
	<20111118084645.GA3413@weiermayer.com>
	<20111118201746.20412.1430484843.divmod.xquotient.165@localhost.localdomain>
Message-ID: <20111123085251.GB2806@weiermayer.com>

On Fri, Nov 18, 2011 at 08:17:46PM -0000, exarkun at twistedmatrix.com wrote:
> Grammatically, or in some other way?

On a second glance, the problem is not on the sponsorship page, but on 
the homepage. The explanation under the "Your Logo Here" section reads:

> You can use the form above for both personal donations and corporate 
> sponsorships; for any donation _above_the_Bronze_level_, we will 
> display your logo here on the front page.

There _are_ two "Bronze" level logos, which I didn't correctly identify 
as such (maybe due to the small font of the headings). Thus it's the
homepage which should be corrected.

Regards,
-- 
Albert Brandl | Weiermayer Solutions GmbH


​
A-4813 Altmünster - Abteistraße 12 - web: www.weiermayer.com - phone: +43761287677 - fax: +43761220356 - mobile: +436642442777

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111123/20985be5/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 43835 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20111123/20985be5/attachment.jpe>

From albert.brandl at weiermayer.com  Wed Nov 23 03:13:03 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 23 Nov 2011 11:13:03 +0100
Subject: [Twisted-Python] Sending a "good-bye message" before closing a
 connection
In-Reply-To: <1321623078.5747.3.camel@blake>
References: <20111118112352.GA17073@weiermayer.com>
	<1321623078.5747.3.camel@blake>
Message-ID: <20111123101303.GA7806@weiermayer.com>

Hi!

On Fri, Nov 18, 2011 at 08:31:18AM -0500, Itamar Turner-Trauring wrote:
> Presumably there is a method somewhere that decides to close the
> connection down:
> 
>    def timeToShutdown(self):
>        self.transport.loseConnection()

Actually, I hoped that I'd find such a method in the framework. When the
twistd daemon is shut down, it has to close all connections, and it would
have been nice if there were a hook that could be overridden.

But AFAICT, the respective code is buried inside the BaseConnector class,
and I'd rather leave it alone :-).

Anyway - it should be possible to send some kind of message to the daemon
in the init script before shutting it down.

Thanks & best regards,
-- 
Albert Brandl | Weiermayer Solutions GmbH


​
A-4813 Altmünster - Abteistraße 12 - web: www.weiermayer.com - phone: +43761287677 - fax: +43761220356 - mobile: +436642442777

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111123/a4fa37d2/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 43835 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20111123/a4fa37d2/attachment.jpe>

From exarkun at twistedmatrix.com  Wed Nov 23 05:34:59 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 23 Nov 2011 12:34:59 -0000
Subject: [Twisted-Python] Sending a "good-bye message" before closing
	a	connection
In-Reply-To: <20111123101303.GA7806@weiermayer.com>
References: <20111118112352.GA17073@weiermayer.com>
	<1321623078.5747.3.camel@blake>
	<20111123101303.GA7806@weiermayer.com>
Message-ID: <20111123123459.2308.1710459484.divmod.xquotient.241@localhost.localdomain>

On 10:13 am, albert.brandl at weiermayer.com wrote:
>Hi!
>
>On Fri, Nov 18, 2011 at 08:31:18AM -0500, Itamar Turner-Trauring wrote:
>>Presumably there is a method somewhere that decides to close the
>>connection down:
>>
>>    def timeToShutdown(self):
>>        self.transport.loseConnection()
>
>Actually, I hoped that I'd find such a method in the framework. When 
>the
>twistd daemon is shut down, it has to close all connections, and it 
>would
>have been nice if there were a hook that could be overridden.
>
>But AFAICT, the respective code is buried inside the BaseConnector 
>class,
>and I'd rather leave it alone :-).
>
>Anyway - it should be possible to send some kind of message to the 
>daemon
>in the init script before shutting it down.

The shutdown hook provided is IService.stopService.  You can add your 
custom shutdown logic there, and attach your service to the 
Application/Service hierarchy.

Jean-Paul



From tobias.oberstein at tavendo.de  Thu Nov 24 06:49:28 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 24 Nov 2011 05:49:28 -0800
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
Message-ID: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>

Should I file a bug? If so, any guidelines what to do?

        --- <exception caught here> ---
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/defer.py", line 545, in _runCallbacks
            current.result = callback(current.result, *args, **kw)
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 907, in gotListing
            self.dtpInstance.sendListResponse(name, attrs)
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 421, in sendListResponse
            self.sendLine(self._formatOneListResponse(name, *response))
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 385, in sendLine
            self.transport.write(line + '\r\n')
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/_newtls.py", line 180, in write
            FileDescriptor.write(self, bytes)
          File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/abstract.py", line 300, in write
            raise TypeError("Data must not be unicode")
        exceptions.TypeError: Data must not be unicode


[autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
Index: twisted/protocols/ftp.py
===================================================================
--- twisted/protocols/ftp.py    (revision 33225)
+++ twisted/protocols/ftp.py    (working copy)
@@ -382,7 +382,7 @@
             self._onConnLost.callback(None)

     def sendLine(self, line):
-        self.transport.write(line + '\r\n')
+        self.transport.write(str(line) + '\r\n')


     def _formatOneListResponse(self, name, size, directory, permissions, hardlinks, modified, owner, group):




From adi at roiban.ro  Thu Nov 24 07:00:46 2011
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 24 Nov 2011 16:00:46 +0200
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <1322143246.19562.8.camel@pp>

On Jo, 2011-11-24 at 05:49 -0800, Tobias Oberstein wrote:
> Should I file a bug? If so, any guidelines what to do?
> 
>         --- <exception caught here> ---
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/defer.py", line 545, in _runCallbacks
>             current.result = callback(current.result, *args, **kw)
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 907, in gotListing
>             self.dtpInstance.sendListResponse(name, attrs)
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 421, in sendListResponse
>             self.sendLine(self._formatOneListResponse(name, *response))
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/protocols/ftp.py", line 385, in sendLine
>             self.transport.write(line + '\r\n')
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/_newtls.py", line 180, in write
>             FileDescriptor.write(self, bytes)
>           File "/home/autobahn/python/lib/python2.7/site-packages/Twisted-11.1.0_r33225-py2.7-freebsd-8.2-RELEASE-p3-i386.egg/twisted/internet/abstract.py", line 300, in write
>             raise TypeError("Data must not be unicode")
>         exceptions.TypeError: Data must not be unicode
> 
> 
> [autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
> Index: twisted/protocols/ftp.py
> ===================================================================
> --- twisted/protocols/ftp.py    (revision 33225)
> +++ twisted/protocols/ftp.py    (working copy)
> @@ -382,7 +382,7 @@
>              self._onConnLost.callback(None)
> 
>      def sendLine(self, line):
> -        self.transport.write(line + '\r\n')
> +        self.transport.write(str(line) + '\r\n')
> 
> 
>      def _formatOneListResponse(self, name, size, directory, permissions, hardlinks, modified, owner, group):
> 

Rather than implementing an hard-coded conversion at lower level of FTP
protocol implementation, you could write explicit unicode encoders to
bytestream before making a call to FTP API.

By doing so you can have an FTP protocol, that beside UTF could also
handle other encodings.

Cheers,

-- 
Adi Roiban




From tobias.oberstein at tavendo.de  Thu Nov 24 07:07:12 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 24 Nov 2011 06:07:12 -0800
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <1322143246.19562.8.camel@pp>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<1322143246.19562.8.camel@pp>
Message-ID: <634914A010D0B943A035D226786325D42D0D4208F6@EXVMBX020-12.exch020.serverdata.net>

> Rather than implementing an hard-coded conversion at lower level of FTP
> protocol implementation, you could write explicit unicode encoders to
> bytestream before making a call to FTP API.
> 
> By doing so you can have an FTP protocol, that beside UTF could also handle
> other encodings.

I'm not making calls to FTP protocol ... this is a FTP server and the errors pops
when the client does a DIR.





From exarkun at twistedmatrix.com  Thu Nov 24 07:07:07 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 24 Nov 2011 14:07:07 -0000
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>

On 01:49 pm, tobias.oberstein at tavendo.de wrote:
>Should I file a bug? If so, any guidelines what to do?

This report isn't sufficiently complete to decide if this is a bug in 
Twisted or in something else.

You really cannot send unicode over a socket without encoding it.  The 
question to consider here is the question of whose responsibility it 
should be to do that encoding in this case.
>[snip]
>
>[autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
>Index: twisted/protocols/ftp.py
>===================================================================
>--- twisted/protocols/ftp.py    (revision 33225)
>+++ twisted/protocols/ftp.py    (working copy)
>@@ -382,7 +382,7 @@
>             self._onConnLost.callback(None)
>
>     def sendLine(self, line):
>-        self.transport.write(line + '\r\n')
>+        self.transport.write(str(line) + '\r\n')

This isn't the correct fix, even if the bug is in Twisted's FTP support.
`str(line)` is the least reliable way to encode a unicode string into a 
byte string.  It has unpredictable behavior (it relies on the action- 
at-a-distance API, `sys.setdefaultencoding`, which doesn't even exist 
most of the time, but which can be used to completely change what 
`str(unicode)` does).

A more correct solution would be `line.encode(someencoding)`.  However, 
looking at `sendLine`, it's clear that the value of `someencoding` is 
not easily decided upon.  Should it be UTF-8?  ASCII with an error 
replacement policy?  cp1252?  Does it depend on the client, or the 
server, or the filesystem encoding, or a user preference?

An even more correct solution would be for `line` to have been encoded 
properly already before it was passed to `sendLine`.  Where did the data 
come from, and why wasn't it encoded already?

Jean-Paul



From tobias.oberstein at tavendo.de  Thu Nov 24 07:26:12 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 24 Nov 2011 06:26:12 -0800
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
Message-ID: <634914A010D0B943A035D226786325D42D0D4208F9@EXVMBX020-12.exch020.serverdata.net>

> An even more correct solution would be for `line` to have been encoded
> properly already before it was passed to `sendLine`.  Where did the data
> come from, and why wasn't it encoded already?

The data is coming from the FTP directory listing formatting function

ftp.DTP. _formatOneListResponse

Here is a more localized fix:

[autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
Index: twisted/protocols/ftp.py
===================================================================
--- twisted/protocols/ftp.py    (revision 33225)
+++ twisted/protocols/ftp.py    (working copy)
@@ -415,7 +415,7 @@
             'group': group[:8],
             'size': size,
             'date': formatDate(time.gmtime(modified)),
-            'name': name}
+            'name': name.encode("utf-8")}

     def sendListResponse(self, name, response):
         self.sendLine(self._formatOneListResponse(name, *response))




From solipsis at pitrou.net  Thu Nov 24 07:23:55 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 24 Nov 2011 15:23:55 +0100
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
Message-ID: <20111124152355.29ac4d25@pitrou.net>

On Thu, 24 Nov 2011 14:07:07 -0000
exarkun at twistedmatrix.com wrote:
> 
> A more correct solution would be `line.encode(someencoding)`.  However, 
> looking at `sendLine`, it's clear that the value of `someencoding` is 
> not easily decided upon.  Should it be UTF-8?  ASCII with an error 
> replacement policy?  cp1252?  Does it depend on the client, or the 
> server, or the filesystem encoding, or a user preference?

RFC 3659 specifies UTF-8 as the default encoding.
The Python 3 port of Twisted uses this (with the "surrogateescape"
error handler).

Regards

Antoine.





From exarkun at twistedmatrix.com  Thu Nov 24 07:58:14 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 24 Nov 2011 14:58:14 -0000
Subject: [Twisted-Python] Status of Twisted on Python 3
In-Reply-To: <20111124152355.29ac4d25@pitrou.net>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<20111124152355.29ac4d25@pitrou.net>
Message-ID: <20111124145814.2308.1765660276.divmod.xquotient.282@localhost.localdomain>

On 02:23 pm, solipsis at pitrou.net wrote:
>On Thu, 24 Nov 2011 14:07:07 -0000
>exarkun at twistedmatrix.com wrote:
>>
>>A more correct solution would be `line.encode(someencoding)`. 
>>However,
>>looking at `sendLine`, it's clear that the value of `someencoding` is
>>not easily decided upon.  Should it be UTF-8?  ASCII with an error
>>replacement policy?  cp1252?  Does it depend on the client, or the
>>server, or the filesystem encoding, or a user preference?
>
>RFC 3659 specifies UTF-8 as the default encoding.
>The Python 3 port of Twisted uses this (with the "surrogateescape"
>error handler).

Please say "My Python 3 port of Twisted".  The work you're doing is 
appreciated,
but it's also important to avoid confusing people into thinking that 
there is an
official version of Twisted for Python 3.  Twisted is what's hosted on
<http://twistedmatrix.com/> (11.1 just released!) and is still limited 
to Python
2.4 - 2.7.

It's very easy to confuse people and get them thinking that a piece of 
software
is supported in a context where it's not, or by a team that it's not.  I 
want
everyone to remain clear on the current status of Python 3 support in 
*Twisted*
(the thing we have a mailing list for, the thing we have an issue 
tracker for,
the thing we have continuous integration for, the thing we periodically 
make
releases of) as distinct from the progress of various porting efforts.

Thanks,
Jean-Paul



From exarkun at twistedmatrix.com  Thu Nov 24 08:00:35 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 24 Nov 2011 15:00:35 -0000
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <634914A010D0B943A035D226786325D42D0D4208F9@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0D4208F9@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20111124150035.2308.1747199997.divmod.xquotient.284@localhost.localdomain>

On 02:26 pm, tobias.oberstein at tavendo.de wrote:
>>An even more correct solution would be for `line` to have been encoded
>>properly already before it was passed to `sendLine`.  Where did the 
>>data
>>come from, and why wasn't it encoded already?
>
>The data is coming from the FTP directory listing formatting function
>
>ftp.DTP. _formatOneListResponse
>
>Here is a more localized fix:
>
>[autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
>Index: twisted/protocols/ftp.py
>===================================================================
>--- twisted/protocols/ftp.py    (revision 33225)
>+++ twisted/protocols/ftp.py    (working copy)
>@@ -415,7 +415,7 @@
>             'group': group[:8],
>             'size': size,
>             'date': formatDate(time.gmtime(modified)),
>-            'name': name}
>+            'name': name.encode("utf-8")}
>
>     def sendListResponse(self, name, response):
>         self.sendLine(self._formatOneListResponse(name, *response))

Cool, that seems much more reasonable.  It would be great if you could 
file a ticket for this.  Thanks!

Jean-Paul



From adi at roiban.ro  Thu Nov 24 08:26:42 2011
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 24 Nov 2011 17:26:42 +0200
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <20111124150035.2308.1747199997.divmod.xquotient.284@localhost.localdomain>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0D4208F9@EXVMBX020-12.exch020.serverdata.net>
	<20111124150035.2308.1747199997.divmod.xquotient.284@localhost.localdomain>
Message-ID: <1322148402.19562.11.camel@pp>

On Jo, 2011-11-24 at 15:00 +0000, exarkun at twistedmatrix.com wrote:
> On 02:26 pm, tobias.oberstein at tavendo.de wrote:
> >>An even more correct solution would be for `line` to have been encoded
> >>properly already before it was passed to `sendLine`.  Where did the 
> >>data
> >>come from, and why wasn't it encoded already?
> >
> >The data is coming from the FTP directory listing formatting function
> >
> >ftp.DTP. _formatOneListResponse
> >
> >Here is a more localized fix:
> >
> >[autobahn at autobahnhub ~/Twisted]$ svn diff twisted/protocols/ftp.py
> >Index: twisted/protocols/ftp.py
> >===================================================================
> >--- twisted/protocols/ftp.py    (revision 33225)
> >+++ twisted/protocols/ftp.py    (working copy)
> >@@ -415,7 +415,7 @@
> >             'group': group[:8],
> >             'size': size,
> >             'date': formatDate(time.gmtime(modified)),
> >-            'name': name}
> >+            'name': name.encode("utf-8")}
> >
> >     def sendListResponse(self, name, response):
> >         self.sendLine(self._formatOneListResponse(name, *response))
> 
> Cool, that seems much more reasonable.  It would be great if you could 
> file a ticket for this.  Thanks!

The source of this evil is FTPAnonymousShell.list as this is the entry
point for the file name.
FTPAnonymousShell.list

-- 
Adi Roiban




From solipsis at pitrou.net  Thu Nov 24 10:37:11 2011
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 24 Nov 2011 18:37:11 +0100
Subject: [Twisted-Python] Status of Twisted on Python 3
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<20111124152355.29ac4d25@pitrou.net>
	<20111124145814.2308.1765660276.divmod.xquotient.282@localhost.localdomain>
Message-ID: <20111124183711.38b4876b@pitrou.net>

On Thu, 24 Nov 2011 14:58:14 -0000
exarkun at twistedmatrix.com wrote:
> On 02:23 pm, solipsis at pitrou.net wrote:
> >On Thu, 24 Nov 2011 14:07:07 -0000
> >exarkun at twistedmatrix.com wrote:
> >>
> >>A more correct solution would be `line.encode(someencoding)`. 
> >>However,
> >>looking at `sendLine`, it's clear that the value of `someencoding` is
> >>not easily decided upon.  Should it be UTF-8?  ASCII with an error
> >>replacement policy?  cp1252?  Does it depend on the client, or the
> >>server, or the filesystem encoding, or a user preference?
> >
> >RFC 3659 specifies UTF-8 as the default encoding.
> >The Python 3 port of Twisted uses this (with the "surrogateescape"
> >error handler).
> 
> Please say "My Python 3 port of Twisted".  The work you're doing is 
> appreciated,
> but it's also important to avoid confusing people into thinking that 
> there is an
> official version of Twisted for Python 3.  Twisted is what's hosted on
> <http://twistedmatrix.com/> (11.1 just released!) and is still limited 
> to Python
> 2.4 - 2.7.

You're right. I've just added and bolded "unofficial" on
https://bitbucket.org/pitrou/t3k/wiki/Home

Regards

Antoine.





From tobias.oberstein at tavendo.de  Fri Nov 25 01:19:28 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 25 Nov 2011 00:19:28 -0800
Subject: [Twisted-Python] Twisted FTP: Data must not be unicode
In-Reply-To: <1322148402.19562.11.camel@pp>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<634914A010D0B943A035D226786325D42D0D4208F9@EXVMBX020-12.exch020.serverdata.net>
	<20111124150035.2308.1747199997.divmod.xquotient.284@localhost.localdomain>
	<1322148402.19562.11.camel@pp>
Message-ID: <634914A010D0B943A035D226786325D42D0D420906@EXVMBX020-12.exch020.serverdata.net>

> > Cool, that seems much more reasonable.  It would be great if you could
> > file a ticket for this.  Thanks!

http://twistedmatrix.com/trac/ticket/5411

> The source of this evil is FTPAnonymousShell.list as this is the entry point for
> the file name.
> FTPAnonymousShell.list

Yep, I see.

The patch above does the fix at the mediating function

ftp.DTP. _formatOneListResponse

which is not the entry point above, but has the charme that it's really
minimally invasive.



From glyph at twistedmatrix.com  Fri Nov 25 14:48:27 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 25 Nov 2011 16:48:27 -0500
Subject: [Twisted-Python] Status of Twisted on Python 3
In-Reply-To: <20111124183711.38b4876b@pitrou.net>
References: <634914A010D0B943A035D226786325D42D0D4208F4@EXVMBX020-12.exch020.serverdata.net>
	<20111124140707.2308.824227994.divmod.xquotient.253@localhost.localdomain>
	<20111124152355.29ac4d25@pitrou.net>
	<20111124145814.2308.1765660276.divmod.xquotient.282@localhost.localdomain>
	<20111124183711.38b4876b@pitrou.net>
Message-ID: <29638FC0-DC74-4FEA-8372-B351591EE2C4@twistedmatrix.com>

On Nov 24, 2011, at 12:37 PM, Antoine Pitrou <solipsis at pitrou.net> wrote:

> You're right. I've just added and bolded "unofficial" on
> https://bitbucket.org/pitrou/t3k/wiki/Home

Thanks for doing this!  And thanks even more for your continued efforts on making most of this official, eventually :)


From exarkun at twistedmatrix.com  Sat Nov 26 22:05:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 Nov 2011 05:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1322370329.0.1862058575@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111127/1c2537cb/attachment-0001.html>

From don at delphexonline.com  Sun Nov 27 04:58:21 2011
From: don at delphexonline.com (Don Schoeman)
Date: Sun, 27 Nov 2011 13:58:21 +0200
Subject: [Twisted-Python] XML-RPC Server in multiservice application
Message-ID: <4ED225DD.2050905@delphexonline.com>

I've got a multiservice application running and I'm using the
MultiService class from twisted.application.service to do this. All my
existing services are setup as children of my multiservice instance.

In addition I'd like to run an XML/RPC server as as well. Is it ok if I
instantiate the XML/RPC listening server as per the examples?

r = MyXMLRPCServer()
reactor.listenTCP(7080, server.Site(r))

I've tried this and it does seem to peacefully co-exist alongside the
other services, but is this the correct way of implementing the XML/RPC
server on a multiservice application?

Kind Regards,
Don Schoeman




From itamar at itamarst.org  Sun Nov 27 06:35:16 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 27 Nov 2011 08:35:16 -0500
Subject: [Twisted-Python] XML-RPC Server in multiservice application
In-Reply-To: <4ED225DD.2050905@delphexonline.com>
References: <4ED225DD.2050905@delphexonline.com>
Message-ID: <4ED23C94.9020900@itamarst.org>

On 11/27/2011 06:58 AM, Don Schoeman wrote:
> I've got a multiservice application running and I'm using the
> MultiService class from twisted.application.service to do this. All my
> existing services are setup as children of my multiservice instance.
>
> In addition I'd like to run an XML/RPC server as as well. Is it ok if I
> instantiate the XML/RPC listening server as per the examples?
>
> r = MyXMLRPCServer()
> reactor.listenTCP(7080, server.Site(r))
>
> I've tried this and it does seem to peacefully co-exist alongside the
> other services, but is this the correct way of implementing the XML/RPC
> server on a multiservice application?

A more consistent way, though, would be to have a subclass of Service 
hooked up to your multiservice. This service's startService method would 
do the above, and stopService would do port.stopListening() on the port 
returned from listenTCP.



From exarkun at twistedmatrix.com  Sun Nov 27 06:50:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 Nov 2011 13:50:22 -0000
Subject: [Twisted-Python] XML-RPC Server in multiservice application
In-Reply-To: <4ED23C94.9020900@itamarst.org>
References: <4ED225DD.2050905@delphexonline.com>
	<4ED23C94.9020900@itamarst.org>
Message-ID: <20111127135022.2308.1092065824.divmod.xquotient.323@localhost.localdomain>

On 01:35 pm, itamar at itamarst.org wrote:
>On 11/27/2011 06:58 AM, Don Schoeman wrote:
>>I've got a multiservice application running and I'm using the
>>MultiService class from twisted.application.service to do this. All my
>>existing services are setup as children of my multiservice instance.
>>
>>In addition I'd like to run an XML/RPC server as as well. Is it ok if 
>>I
>>instantiate the XML/RPC listening server as per the examples?
>>
>>r = MyXMLRPCServer()
>>reactor.listenTCP(7080, server.Site(r))
>>
>>I've tried this and it does seem to peacefully co-exist alongside the
>>other services, but is this the correct way of implementing the 
>>XML/RPC
>>server on a multiservice application?
>
>A more consistent way, though, would be to have a subclass of Service
>hooked up to your multiservice. This service's startService method 
>would
>do the above, and stopService would do port.stopListening() on the port
>returned from listenTCP.

eg

    from twisted.application.internet import TCPServer

    xmlrpcsvc = TCPServer(7080, server.Site(MyXMLRPCServer())
    xmlrpcsvc.setServiceParent(yourMultiService)

Jean-Paul



From don at delphexonline.com  Sun Nov 27 08:53:00 2011
From: don at delphexonline.com (Don Schoeman)
Date: Sun, 27 Nov 2011 17:53:00 +0200
Subject: [Twisted-Python] XML-RPC Server in multiservice application
In-Reply-To: <20111127135022.2308.1092065824.divmod.xquotient.323@localhost.localdomain>
References: <4ED225DD.2050905@delphexonline.com>	<4ED23C94.9020900@itamarst.org>
	<20111127135022.2308.1092065824.divmod.xquotient.323@localhost.localdomain>
Message-ID: <4ED25CDC.7050605@delphexonline.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111127/066a3049/attachment.html>

From ddwiggins at advpubtech.com  Tue Nov 29 11:44:21 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Tue, 29 Nov 2011 10:44:21 -0800
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>	<ja16c1$u1t$1@dough.gmane.org>	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
Message-ID: <4ED52805.7050300@advpubtech.com>

On 11/17/2011 3:26 PM, exarkun at twistedmatrix.com wrote:
> `msg` doesn't really care about what you give it. It doesn't support
> the `format` keyword in any particular way.  It's the job of a log
> observer to handle that sort of thing.  So it could certainly be
> documented, but don't mix things together that are unrelated.
>
> Jean-Paul

True, but I was motivated by a different concern: when I first started 
using msg, I was unable to trace through the API docs to the place where 
I could find what I've quoted; Chris' message gave me the hint I needed 
to complete my detective work.  I'd like to spare future users of the 
method the trouble I had.

Looking at the source of log.py, I'm at a bit of a loss to reconcile 
these two forces.  Certainly, the two log observers implemented there 
use textFromEventDict, but one could create a different observer that 
does things entirely differently.

The best idea I can come up with is, in the documentation for msg, refer 
to the documentation for the chosen log observer; then, in each log 
observer's documentation, describe how the formatting is done, either 
explicitly, or by reference to textFromEventDict.  (And maybe in the 
documentation for ILogObserver, recommend strongly that each 
implementation be explicit about message formatting.)  There should 
probably also be something in the logging howto.

Any better suggestions?

-- 

Don Dwiggins
Advanced Publishing Technology





From screwtape at froup.com  Tue Nov 29 21:07:22 2011
From: screwtape at froup.com (Tim Allen)
Date: Wed, 30 Nov 2011 15:07:22 +1100
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <4ED52805.7050300@advpubtech.com>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
	<4ED52805.7050300@advpubtech.com>
Message-ID: <20111130040722.GA3713@boombah.thristian.org>

On Tue, Nov 29, 2011 at 10:44:21AM -0800, Don Dwiggins wrote:
> Looking at the source of log.py, I'm at a bit of a loss to reconcile 
> these two forces.  Certainly, the two log observers implemented there 
> use textFromEventDict, but one could create a different observer that 
> does things entirely differently.
> 
> The best idea I can come up with is, in the documentation for msg, refer 
> to the documentation for the chosen log observer; then, in each log 
> observer's documentation, describe how the formatting is done, either 
> explicitly, or by reference to textFromEventDict.  (And maybe in the 
> documentation for ILogObserver, recommend strongly that each 
> implementation be explicit about message formatting.)  There should 
> probably also be something in the logging howto.
> 
> Any better suggestions?

While not every log observer needs to flatten a log event dict into
a string, that particular approach is probably common enough that it
deserves a simple solution. I think, in my ideal world, there would be
a LogMessage class that inherits from dict, with a __str__ method that
looks something like:

    def __str__(self):
	if "msg" in self:
	    return self["msg"]
	elif "format" in self:
	    return self["format"] % self
	else return dict.__str__(self)

If the standard Twisted logging functions automatically constructed
LogMessage instances from dict instances, it should be easy enough for
future ILogObserver implementations to do the right thing (by just
calling str(msg)). Of course, they could also do more sophisticated
things like pulling particular keys out of the message to set
observer-specific message properties (like syslog channel and severity,
etc.)

The documentation for the standard Twisted logging functions could then
just point to the LogMessage documentation to describe what goes into
a log event and how it gets interpreted, with a footnote to the effect
that different log observers can handle the same message in different
ways.



From exarkun at twistedmatrix.com  Wed Nov 30 06:04:27 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 30 Nov 2011 13:04:27 -0000
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <20111130040722.GA3713@boombah.thristian.org>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
	<4ED52805.7050300@advpubtech.com>
	<20111130040722.GA3713@boombah.thristian.org>
Message-ID: <20111130130427.2308.845285623.divmod.xquotient.547@localhost.localdomain>

On 04:07 am, screwtape at froup.com wrote:
>On Tue, Nov 29, 2011 at 10:44:21AM -0800, Don Dwiggins wrote:
>>Looking at the source of log.py, I'm at a bit of a loss to reconcile
>>these two forces.  Certainly, the two log observers implemented there
>>use textFromEventDict, but one could create a different observer that
>>does things entirely differently.
>>
>>The best idea I can come up with is, in the documentation for msg, 
>>refer
>>to the documentation for the chosen log observer; then, in each log
>>observer's documentation, describe how the formatting is done, either
>>explicitly, or by reference to textFromEventDict.  (And maybe in the
>>documentation for ILogObserver, recommend strongly that each
>>implementation be explicit about message formatting.)  There should
>>probably also be something in the logging howto.
>>
>>Any better suggestions?
>
>While not every log observer needs to flatten a log event dict into
>a string, that particular approach is probably common enough that it
>deserves a simple solution. I think, in my ideal world, there would be
>a LogMessage class that inherits from dict, with a __str__ method that
>looks something like:
>
>    def __str__(self):
>         if "msg" in self:
>             return self["msg"]
>         elif "format" in self:
>             return self["format"] % self
>         else return dict.__str__(self)
>
>If the standard Twisted logging functions automatically constructed
>LogMessage instances from dict instances, it should be easy enough for
>future ILogObserver implementations to do the right thing (by just
>calling str(msg)). Of course, they could also do more sophisticated
>things like pulling particular keys out of the message to set
>observer-specific message properties (like syslog channel and severity,
>etc.)

Oooorrrr there could be a function that takes a dict intended to 
represent a text message and returns that message as a string.

Jean-Paul
>The documentation for the standard Twisted logging functions could then
>just point to the LogMessage documentation to describe what goes into
>a log event and how it gets interpreted, with a footnote to the effect
>that different log observers can handle the same message in different
>ways.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Wed Nov 30 06:20:41 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 30 Nov 2011 13:20:41 -0000
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <4ED52805.7050300@advpubtech.com>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
	<4ED52805.7050300@advpubtech.com>
Message-ID: <20111130132041.2308.327340699.divmod.xquotient.560@localhost.localdomain>

On 29 Nov, 06:44 pm, ddwiggins at advpubtech.com wrote:
>On 11/17/2011 3:26 PM, exarkun at twistedmatrix.com wrote:
>>`msg` doesn't really care about what you give it. It doesn't support
>>the `format` keyword in any particular way.  It's the job of a log
>>observer to handle that sort of thing.  So it could certainly be
>>documented, but don't mix things together that are unrelated.
>>
>>Jean-Paul
>
>True, but I was motivated by a different concern: when I first started
>using msg, I was unable to trace through the API docs to the place 
>where
>I could find what I've quoted; Chris' message gave me the hint I needed
>to complete my detective work.  I'd like to spare future users of the
>method the trouble I had.
>
>Looking at the source of log.py, I'm at a bit of a loss to reconcile
>these two forces.  Certainly, the two log observers implemented there
>use textFromEventDict, but one could create a different observer that
>does things entirely differently.
>
>The best idea I can come up with is, in the documentation for msg, 
>refer
>to the documentation for the chosen log observer; then, in each log
>observer's documentation, describe how the formatting is done, either
>explicitly, or by reference to textFromEventDict.  (And maybe in the
>documentation for ILogObserver, recommend strongly that each
>implementation be explicit about message formatting.)  There should
>probably also be something in the logging howto.
>
>Any better suggestions?

I'm not sure what you mean by "refer to the documentation for the chosen 
log observer".  The only interpretation I can think of involves changing 
the documentation dynamically at runtime, which doesn't make any sense, 
so I don't think it's what you meant. :)

Adding something about observers to the twisted.python.log.msg 
documentation does seem like it makes sense.  Maybe that could be a link 
to most-used observers that Twisted comes with, or maybe to a document 
about observers in general.

The second part of your suggestion, having each observer document what 
kind of events it expects to consume, sounds great.

Extending the logging howto also sounds great.

And a long-standing related issue, twisted.python.log.msg not appearing 
in the API documentation, would also be nice to resolve.

Jean-Paul



From screwtape at froup.com  Wed Nov 30 19:57:52 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 1 Dec 2011 13:57:52 +1100
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <20111130130427.2308.845285623.divmod.xquotient.547@localhost.localdomain>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
	<4ED52805.7050300@advpubtech.com>
	<20111130040722.GA3713@boombah.thristian.org>
	<20111130130427.2308.845285623.divmod.xquotient.547@localhost.localdomain>
Message-ID: <20111201025752.GB3713@boombah.thristian.org>

On Wed, Nov 30, 2011 at 01:04:27PM -0000, exarkun at twistedmatrix.com wrote:
> On 04:07 am, screwtape at froup.com wrote:
> >If the standard Twisted logging functions automatically constructed
> >LogMessage instances from dict instances, it should be easy enough for
> >future ILogObserver implementations to do the right thing (by just
> >calling str(msg)). Of course, they could also do more sophisticated
> >things like pulling particular keys out of the message to set
> >observer-specific message properties (like syslog channel and severity,
> >etc.)
> 
> Oooorrrr there could be a function that takes a dict intended to 
> represent a text message and returns that message as a string.

As mentioned, we already have one of those in the form of
textFromEventDict(). The trouble is that everybody who writes
a LogObserver needs to know that it exists, and remember to call it. If
it were the __str__() method of a LogMessage object, they'd have to go
out of their way to *not* do the right thing.



From dsturmfels at gmail.com  Wed Nov 30 21:07:49 2011
From: dsturmfels at gmail.com (dsturmfels at gmail.com)
Date: Thu, 1 Dec 2011 15:07:49 +1100
Subject: [Twisted-Python] Rts/Cts Serial port flow control in twisted
In-Reply-To: <20111108145737.20412.971335401.divmod.xquotient.12@localhost.localdomain>
References: <CAAR7Vgq-71OJucSCFY5VsaykHBQMhRPgYAL5BtM616hV1Uzuwg@mail.gmail.com>
	<20111108145737.20412.971335401.divmod.xquotient.12@localhost.localdomain>
Message-ID: <CAAR7VgoLP8dWNp4AGzsMAGJ+kzY=SaD_0jROLZy2wJErBKiJKg@mail.gmail.com>

On 9 November 2011 01:57, <exarkun at twistedmatrix.com> wrote:

> On 11:59 am, dsturmfels at gmail.com wrote:
> >Hi,
> >Has anyone had much experience with serial flow control in twisted?
>
> I don't. :)  It sounds like this may not really have much to do with
> Twisted, though.
> >I've been using a twisted serial port in my gtk+ software for quite a
> >while
> >now, and I can get xonxoff flow control to work, but for some reason,
> >rtscts flow control isn't working (or I may be using it wrong).
> >
> >I'm connecting the software, via a usb-serial cable, to a Datalogic
> >barcode
> >scanner cradle.
> >I've been able to replicate this problem with pyserial as well.
>
> As you perhaps already know, Twisted's serial port support is
> implemented in terms of pyserial - and the layer Twisted adds is very
> thin.  So the problem you experience with pyserial is probably exactly
> the same as the problem you experience with Twisted, since the latter is
> actually the same code as the former.
> >
> >Without flow control on, I can for example, send a particular serial
> >string
> >to the cradle, and the cradle replies instantly with it's software
> >version
> >(as a string).
> >If I scan a barcode, this also instantly shows up in
> >twisted/pyserial/etc
> >(as a string).
> >
> >With xonxoff flow control on in both the software and cradle, the
> >serial
> >connection works exactly the same as having no flow control on.
> >
> >With rtscts flow control on in both the software and cradle however,
> >the
> >cradle doesn't reply instantly with it's software version when the
> >correct
> >string is sent.
> >However, a scanned barcode shows up instantly in the twisted/pyserial
> >software, and if you've previously requested the cradle software
> >version,
> >the software version string only shows up directly after receiving a
> >barcode string.
> >
> >Am I doing something wrong, or does anyone know what might be going on
> >here?
>
> Do you know that the device supports RTS/CTS?  Do you know that the USB
> driver for the device supports it?  Do you know that the USB driver
> support for it is bug free? :)
>
> Sorry I can't add anything more helpful.  I think you want to be looking
> for the problem at a pretty low level, though.  Perhaps even at the
> level of measuring voltage on the RTS pin...
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Thanks - I was assuming it probably was a hardware problem, but I just
thought I'd check to see if I'd been doing anything wrong.
The hardware definitely supports rts/cts flow control, so I'm guessing the
problem then might possibly be with the usb-serial cable, or the driver for
it.

Either way, I've decided to stick with xon/xoff flow control for now - it
seems to work quite well.

Thanks anyway!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111201/7b898d11/attachment.html>

From dsturmfels at gmail.com  Wed Nov 30 21:13:35 2011
From: dsturmfels at gmail.com (dsturmfels at gmail.com)
Date: Thu, 1 Dec 2011 15:13:35 +1100
Subject: [Twisted-Python] Rts/Cts Serial port flow control in twisted
In-Reply-To: <1111108115014.16719A-100000@Ives.egh.com>
References: <20111108145737.20412.971335401.divmod.xquotient.12@localhost.localdomain>
	<1111108115014.16719A-100000@Ives.egh.com>
Message-ID: <CAAR7VgpU-DC7q3xv3NFABoBLS-4EkcgGYZ+OscB-1wjxLkbt4Q@mail.gmail.com>

On 9 November 2011 02:53, John Santos <JOHN at egh.com> wrote:

> On Tue, 8 Nov 2011 exarkun at twistedmatrix.com wrote:
>
> > On 11:59 am, dsturmfels at gmail.com wrote:
> > >Hi,
> > >Has anyone had much experience with serial flow control in twisted?
> >
> > I don't. :)  It sounds like this may not really have much to do with
> > Twisted, though.
> > >I've been using a twisted serial port in my gtk+ software for quite a
> > >while
> > >now, and I can get xonxoff flow control to work, but for some reason,
> > >rtscts flow control isn't working (or I may be using it wrong).
> > >
> > >I'm connecting the software, via a usb-serial cable, to a Datalogic
> > >barcode
> > >scanner cradle.
> > >I've been able to replicate this problem with pyserial as well.
> >
> > As you perhaps already know, Twisted's serial port support is
> > implemented in terms of pyserial - and the layer Twisted adds is very
> > thin.  So the problem you experience with pyserial is probably exactly
> > the same as the problem you experience with Twisted, since the latter is
> > actually the same code as the former.
> > >
> > >Without flow control on, I can for example, send a particular serial
> > >string
> > >to the cradle, and the cradle replies instantly with it's software
> > >version
> > >(as a string).
> > >If I scan a barcode, this also instantly shows up in
> > >twisted/pyserial/etc
> > >(as a string).
> > >
> > >With xonxoff flow control on in both the software and cradle, the
> > >serial
> > >connection works exactly the same as having no flow control on.
> > >
> > >With rtscts flow control on in both the software and cradle however,
> > >the
> > >cradle doesn't reply instantly with it's software version when the
> > >correct
> > >string is sent.
> > >However, a scanned barcode shows up instantly in the twisted/pyserial
> > >software, and if you've previously requested the cradle software
> > >version,
> > >the software version string only shows up directly after receiving a
> > >barcode string.
> > >
> > >Am I doing something wrong, or does anyone know what might be going on
> > >here?
> >
> > Do you know that the device supports RTS/CTS?  Do you know that the USB
> > driver for the device supports it?  Do you know that the USB driver
> > support for it is bug free? :)
>
> You also need to know that the serial cable(s) include the necessary
> leads, and that the null modem (or whatever) properly crosses them over.
>
> An RS-232 break-out box (if they are still available) would be very
> helpful here.
>
> >
> > Sorry I can't add anything more helpful.  I think you want to be looking
> > for the problem at a pretty low level, though.  Perhaps even at the
> > level of measuring voltage on the RTS pin...
> >
> > Jean-Paul
> >
> >
>
> --
> John Santos
> Evans Griffiths & Hart, Inc.
> 781-861-0670 ext 539
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Thanks John - I'll keep the RS-232 breakout box in mind, if I decide to try
rts/cts flow control again in the future.

Darcy.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111201/c98e90f4/attachment.html>

