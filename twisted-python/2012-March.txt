From exarkun at twistedmatrix.com  Thu Mar  1 08:06:45 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 01 Mar 2012 13:06:45 -0000
Subject: [Twisted-Python] ProcessMonitor stderr stdout
In-Reply-To: <CAFvbmcmmDMJEGtnsqnqWp1HvjtiNzE9uGMK19V431---3cBWiw@mail.gmail.com>
References: <CAFvbmcmmDMJEGtnsqnqWp1HvjtiNzE9uGMK19V431---3cBWiw@mail.gmail.com>
Message-ID: <20120301130645.9647.321761079.divmod.xquotient.4@localhost6.localdomain6>

On 12:16 am, kmcintyre at greenchargenet.com wrote:
>Newbie question:
>
>I'm calling addProcess and everything works well, but I'm trying to
>understand how to capture/handle stderr stdout for that spawned 
>process.

I don't think you'll find a way to do this in the current version of the 
code.

There are a couple open tickets for expanding ProcessMonitor to allow 
more control of this (and more):

  http://twistedmatrix.com/trac/ticket/194
  http://twistedmatrix.com/trac/ticket/4440

It looks like the previous contributor may have moved on.  Are you 
interested in working on this feature?

Jean-Paul


From tobias.oberstein at tavendo.de  Thu Mar  1 11:11:03 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 1 Mar 2012 08:11:03 -0800
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
In-Reply-To: <20120229141247.4576.1371664473.divmod.xquotient.47@localhost6.localdomain6>
References: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
	<20120229141247.4576.1371664473.divmod.xquotient.47@localhost6.localdomain6>
Message-ID: <634914A010D0B943A035D226786325D42D5AB77C4C@EXVMBX020-12.exch020.serverdata.net>

> >I was wondering how I could protect a Twisted server from evil clients
> >initiating, but never completing a TLS handshake.
> >
> >connectionMade is only called when the TLS handshake has completed,
> >right?
> 
> Actually, this is not right.  It's sort of a wart, but connectionMade is called when
> the underlying TCP connection is established.  The TLS handshake will always
> complete at some later time.
> 
> One reason we (or at least I) have not yet really tried to change this is that
> doing so would make it harder to address just the problem you're talking about.

Thanks for clarifying!

So I guess I'll be fine with triggering a callLater of drop/abortConnection in
connectionMade. Good. Less code changes.

\Tobias


From tobias.oberstein at tavendo.de  Thu Mar  1 11:19:00 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 1 Mar 2012 08:19:00 -0800
Subject: [Twisted-Python] Twisted/PyPy rocks!
Message-ID: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>

Just wanted to say: PyPy running Twisted rocks!

Works just out of the box: PyPy, Twisted + Autobahn.

Speedups of up to multiple times .. without a single code change.

Btw:
* Tornado seems to be unstable on PyPy .. at least in my testing (sporadic segfaults)
* have been able to outperform node.js and others (incl. JVM) based WebSocket implementations
* only beaten by websocket++ - a C++/ASIO based implementation. expected.

==

Couple of points:

* Have been able to use poll reactor on Linux, but epoll doesnt work .. is that expected? Maybe because the epoll reactor implementation uses Twisted own C wrapper instead of the - only
recently - available one in Python standard lib?

* I will test PyPy with kqueue on FreeBSD .. 

* Are there regular buildslaves running trial on PyPy? Does that make sense?

\Tobias


From p.mayers at imperial.ac.uk  Thu Mar  1 11:54:03 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 01 Mar 2012 16:54:03 +0000
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4F4FA9AB.40407@imperial.ac.uk>

On 01/03/12 16:19, Tobias Oberstein wrote:
> Just wanted to say: PyPy running Twisted rocks!
>
> Works just out of the box: PyPy, Twisted + Autobahn.
>
> Speedups of up to multiple times .. without a single code change.
>

Interesting. I keep meaning to look into PyPy.

> * Have been able to use poll reactor on Linux, but epoll doesnt work
> .. is that expected? Maybe because the epoll reactor implementation
> uses Twisted own C wrapper instead of the - only recently - available
> one in Python standard lib?

Yes, see:

http://twistedmatrix.com/trac/ticket/3114


From itamar at itamarst.org  Thu Mar  1 12:05:03 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 1 Mar 2012 12:05:03 -0500
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdat
	a.net>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>

> Couple of points:
>
> * Have been able to use poll reactor on Linux, but epoll doesnt work .. is
> that expected? Maybe because the epoll reactor implementation uses Twisted
> own C wrapper instead of the - only
> recently - available one in Python standard lib?

That was fixed in trunk recently, you could try that.

> * I will test PyPy with kqueue on FreeBSD ..
>
> * Are there regular buildslaves running trial on PyPy? Does that make
> sense?

Hopefully soon, we do want PyPy to be a fully supported official platform.



From rlotun at gmail.com  Thu Mar  1 12:25:13 2012
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 1 Mar 2012 17:25:13 +0000
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
Message-ID: <CAFJezo2V1iHzzFyL2WXciZ_fSVxF+Nba-HdLV_O0ohSJ2pt_4g@mail.gmail.com>

On Thu, Mar 1, 2012 at 5:05 PM, Itamar Turner-Trauring
<itamar at itamarst.org>wrote:

>
> Hopefully soon, we do want PyPy to be a fully supported official platform.


The only thing keeping us from trying it out in production is the current
incomplete pyOpenSSL support (unless I've missed some new developments on
that front).

Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120301/4def15a8/attachment.htm 

From exarkun at twistedmatrix.com  Thu Mar  1 13:15:42 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 01 Mar 2012 18:15:42 -0000
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
Message-ID: <20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>

On 05:05 pm, itamar at itamarst.org wrote:
>[snip]
>>
>>* Are there regular buildslaves running trial on PyPy? Does that make
>>sense?
>
>Hopefully soon, we do want PyPy to be a fully supported official 
>platform.

Not soon - already.  We've had a PyPy builder for more than a year now:

    http://buildbot.twistedmatrix.com/builders/lucid32-pypy

Only a small number of tests fail, but many more are skipped due to 
missing dependencies.

Fixing these failing tests, or working on getting the dependencies 
working on PyPy, would be a great way to contribute to both Twisted and 
PyPy. :)

Jean-Paul


From danbryan at gmail.com  Thu Mar  1 19:47:07 2012
From: danbryan at gmail.com (Daniel Bryan)
Date: Fri, 2 Mar 2012 11:47:07 +1100
Subject: [Twisted-Python] Non-PDF version of the Twisted book?
Message-ID: <CADopz67YWrN2-Qew78zuhQdmz1b-oGEh=eJDF2OeP3fZrLWzEg@mail.gmail.com>

I'm new to Twisted and very interested in learning more, and I learn best
with something like a book.

I came across this:

*twisted*matrix.com/documents/current/core/howto/*book*.pdf

I was wondering if there's a copy of it available in a form other than PDF?
I'd like to read it on my Kindle, so if there's a version in an eBook
format or even just HTML that'd be superb!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120302/9e7cb1c2/attachment.htm 

From tobias.oberstein at tavendo.de  Thu Mar  1 20:04:38 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 1 Mar 2012 17:04:38 -0800
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
	<20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>
Message-ID: <634914A010D0B943A035D226786325D42D5AB77F6F@EXVMBX020-12.exch020.serverdata.net>

> Fixing these failing tests, or working on getting the dependencies working on
> PyPy, would be a great way to contribute to both Twisted and PyPy. :)
> 
> Jean-Paul

It's funny: kqueue seems to be chasing me;)

I've got PyPy release built from source on FreeBSD9, and Twisted trunk running
complete Autobahn WebSockets testsuite green. Fine. But only for poll reactor.

As it turns out, kqueue support in PyPy is not yet there .. I've contacted the
PyPy guys .. code was started, but unfinished.

I guess I'll take on finishing kqueue/PyPy. Have to see how complex that gets.
My motivation is making FreeBSD, kqueue, Twisted, PyPy a fully working
combination.

In that course, I might also setup a 2nd FreeBSD slave for PyPy/Twisted trials.

I have yet to try pyOpenSSL, as that is actually the last piece (hopefully) of the
puzzle ... hopefully that doesn't introduce more issues ..

Cheers,
Tobias


From itamar at itamarst.org  Thu Mar  1 20:18:00 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 01 Mar 2012 20:18:00 -0500
Subject: [Twisted-Python] Non-PDF version of the Twisted book?
In-Reply-To: <CADopz67YWrN2-Qew78zuhQdmz1b-oGEh=eJDF2OeP3fZrLWzEg@mail.gmail.com>
References: <CADopz67YWrN2-Qew78zuhQdmz1b-oGEh=eJDF2OeP3fZrLWzEg@mail.gmail.com>
Message-ID: <4F501FC8.9030007@itamarst.org>

On 03/01/2012 07:47 PM, Daniel Bryan wrote:
> I'm new to Twisted and very interested in learning more, and I learn 
> best with something like a book.
>
> I came across this:
>
> *twisted*matrix.com/documents/current/core/howto/ 
> <http://matrix.com/documents/current/core/howto/>*book*.pdf
>
> I was wondering if there's a copy of it available in a form other than 
> PDF? I'd like to read it on my Kindle, so if there's a version in an 
> eBook format or even just HTML that'd be superb!
There's 
http://twistedmatrix.com/documents/current/core/howto/index.html, but 
that's not a single HTML file.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120301/dab6f6a4/attachment.htm 

From exarkun at twistedmatrix.com  Fri Mar  2 08:40:20 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 02 Mar 2012 13:40:20 -0000
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <634914A010D0B943A035D226786325D42D5AB77F6F@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
	<20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D42D5AB77F6F@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120302134020.9647.550847402.divmod.xquotient.19@localhost6.localdomain6>

On 01:04 am, tobias.oberstein at tavendo.de wrote:
>>Fixing these failing tests, or working on getting the dependencies 
>>working on
>>PyPy, would be a great way to contribute to both Twisted and PyPy. :)
>>
>>Jean-Paul
>
>It's funny: kqueue seems to be chasing me;)
>
>I've got PyPy release built from source on FreeBSD9, and Twisted trunk 
>running
>complete Autobahn WebSockets testsuite green. Fine. But only for poll 
>reactor.
>
>As it turns out, kqueue support in PyPy is not yet there .. I've 
>contacted the
>PyPy guys .. code was started, but unfinished.
>
>I guess I'll take on finishing kqueue/PyPy. Have to see how complex 
>that gets.
>My motivation is making FreeBSD, kqueue, Twisted, PyPy a fully working
>combination.
>
>In that course, I might also setup a 2nd FreeBSD slave for PyPy/Twisted 
>trials.

Great!  If hardware is an issue at all, we have access to a FreeBSD 
machine; just waiting for someone to set up a slave on it.
>I have yet to try pyOpenSSL, as that is actually the last piece 
>(hopefully) of the
>puzzle ... hopefully that doesn't introduce more issues ..

Unfortunately, pyOpenSSL does not work on current PyPy.  There are just 
a few simple APIs missing from PyPy's cpyext feature that pyOpenSSL 
depends on, but they're blockers.

Jean-Paul


From rgacote at appropriatesolutions.com  Fri Mar  2 09:52:46 2012
From: rgacote at appropriatesolutions.com (Ray Cote)
Date: Fri, 02 Mar 2012 09:52:46 -0500 (EST)
Subject: [Twisted-Python] Non-PDF version of the Twisted book?
In-Reply-To: <4F501FC8.9030007@itamarst.org>
Message-ID: <b241e8e5-b281-48a5-a724-04777a94c5e9@Ray-iMac-2011.local>

Is there any interest in taking the existing Twisted documentation and moving it to a collaborative ePub environment like Booktype? 
<http://www.sourcefabric.org/en/booktype/> 

And yes, if the core Twisted team sees value in that, I'd be happy to volunteer to do the conversion. 
--Ray 

----- Original Message -----

> From: "Itamar Turner-Trauring" <itamar at itamarst.org>
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Sent: Thursday, March 1, 2012 8:18:00 PM
> Subject: Re: [Twisted-Python] Non-PDF version of the Twisted book?

> On 03/01/2012 07:47 PM, Daniel Bryan wrote:
> > I'm new to Twisted and very interested in learning more, and I
> > learn
> > best with something like a book.
> 

> > I came across this:
> 

> > twisted matrix.com/documents/current/core/howto/ book .pdf
> 

> > I was wondering if there's a copy of it available in a form other
> > than PDF? I'd like to read it on my Kindle, so if there's a version
> > in an eBook format or even just HTML that'd be superb!
> 

> There's
> http://twistedmatrix.com/documents/current/core/howto/index.html ,
> but that's not a single HTML file.

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 

Ray Cote, President 
Appropriate Solutions, Inc. 
We Build Software 
603.924.6079 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120302/3b7ddaf2/attachment.htm 

From exarkun at twistedmatrix.com  Fri Mar  2 11:12:40 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 02 Mar 2012 16:12:40 -0000
Subject: [Twisted-Python] Non-PDF version of the Twisted book?
In-Reply-To: <b241e8e5-b281-48a5-a724-04777a94c5e9@Ray-iMac-2011.local>
References: <4F501FC8.9030007@itamarst.org>
	<b241e8e5-b281-48a5-a724-04777a94c5e9@Ray-iMac-2011.local>
Message-ID: <20120302161240.9647.956097558.divmod.xquotient.29@localhost6.localdomain6>

On 02:52 pm, rgacote at appropriatesolutions.com wrote:
>Is there any interest in taking the existing Twisted documentation and 
>moving it to a collaborative ePub environment like Booktype?
><http://www.sourcefabric.org/en/booktype/>
>
>And yes, if the core Twisted team sees value in that, I'd be happy to 
>volunteer to do the conversion.

We're currently moving into year four of our efforts to convert 
Twisted's documentation from Lore to Sphinx.  That's really where we 
could use some extra help.

Sphinx can generate epub output, as well as many other formats, so once 
we manage to make the switch we should have something to give out to 
people who want to learn about Twisted on their e-reader.

Jean-Paul
>--Ray
>
>----- Original Message -----
>>From: "Itamar Turner-Trauring" <itamar at itamarst.org>
>>To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
>>Sent: Thursday, March 1, 2012 8:18:00 PM
>>Subject: Re: [Twisted-Python] Non-PDF version of the Twisted book?
>
>>On 03/01/2012 07:47 PM, Daniel Bryan wrote:
>> > I'm new to Twisted and very interested in learning more, and I
>> > learn
>> > best with something like a book.
>
>> > I came across this:
>
>> > twisted matrix.com/documents/current/core/howto/ book .pdf
>
>> > I was wondering if there's a copy of it available in a form other
>> > than PDF? I'd like to read it on my Kindle, so if there's a version
>> > in an eBook format or even just HTML that'd be superb!
>
>>There's
>>http://twistedmatrix.com/documents/current/core/howto/index.html ,
>>but that's not a single HTML file.
>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>--
>
>Ray Cote, President
>Appropriate Solutions, Inc.
>We Build Software
>603.924.6079


From glyph at twistedmatrix.com  Fri Mar  2 13:21:54 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 2 Mar 2012 13:21:54 -0500
Subject: [Twisted-Python] Non-PDF version of the Twisted book?
In-Reply-To: <20120302161240.9647.956097558.divmod.xquotient.29@localhost6.localdomain6>
References: <4F501FC8.9030007@itamarst.org>
	<b241e8e5-b281-48a5-a724-04777a94c5e9@Ray-iMac-2011.local>
	<20120302161240.9647.956097558.divmod.xquotient.29@localhost6.localdomain6>
Message-ID: <3F7349EC-AF2F-48F6-8E06-792CB017CAF5@twistedmatrix.com>


On Mar 2, 2012, at 11:12 AM, exarkun at twistedmatrix.com wrote:

> We're currently moving into year four of our efforts to convert 
> Twisted's documentation from Lore to Sphinx.  That's really where we 
> could use some extra help.

For reference, the Sphinx migration ticket is <http://tm.tl/4500>.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120302/4a48a693/attachment.htm 

From me at ilyabiin.com  Fri Mar  2 13:54:57 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Fri, 2 Mar 2012 22:54:57 +0400
Subject: [Twisted-Python]  Twisted reactor cpu usage
Message-ID: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>

I'm using epoll reactor and sample HTTP Proxy realization.

From another process i'm executing ~30 HTTP requests per second and
twisted process is consuming 10% cpu

The profiler output is:

? ? ? ? 937706 function calls (934675 primitive calls) in 59.988 CPU seconds

? Ordered by: cumulative time
? List reduced from 312 to 15 due to restriction <15>

? ncalls ?tottime ?percall ?cumtime ?percall filename:lineno(function)
? ? ? ?1 ? ?0.000 ? ?0.000 ? 59.988 ? 59.988 base.py:1167(run)
? ? ? ?1 ? ?0.076 ? ?0.076 ? 59.988 ? 59.988 base.py:1172(mainLoop)
? ?12697 ? 55.456 ? ?0.004 ? 59.253 ? ?0.005 epollreactor.py:169(doPoll)
? ?13553 ? ?0.086 ? ?0.000 ? ?3.797 ? ?0.000 log.py:71(callWithLogger)
? ?13553 ? ?0.096 ? ?0.000 ? ?3.691 ? ?0.000 log.py:66(callWithContext)
? ?13553 ? ?0.047 ? ?0.000 ? ?3.481 ? ?0.000 context.py:117(callWithContext)
? ?13553 ? ?0.067 ? ?0.000 ? ?3.426 ? ?0.000 context.py:61(callWithContext)
? ?13552 ? ?0.095 ? ?0.000 ? ?3.359 ? ?0.000 posixbase.py:544(_doReadOrWrite)
? ? 5454 ? ?0.097 ? ?0.000 ? ?1.736 ? ?0.000 tcp.py:182(doRead)
? ? 5453 ? ?0.167 ? ?0.000 ? ?1.639 ? ?0.000 basic.py:543(dataReceived)
? ?12697 ? ?0.095 ? ?0.000 ? ?0.587 ? ?0.000 base.py:762(runUntilCurrent)
? ? 4453 ? ?0.025 ? ?0.000 ? ?0.574 ? ?0.000 http.py:495(rawDataReceived)
? ? 6000 ? ?0.036 ? ?0.000 ? ?0.547 ? ?0.000 http.py:1515(lineReceived)
? ? 2000 ? ?0.029 ? ?0.000 ? ?0.454 ? ?0.000 tcp.py:371(doConnect)
? ? 5098 ? ?0.104 ? ?0.000 ? ?0.428 ? ?0.000 abstract.py:212(doWrite)


? ? ? ? 937706 function calls (934675 primitive calls) in 59.988 CPU seconds

? Ordered by: internal time
? List reduced from 312 to 15 due to restriction <15>

? ncalls ?tottime ?percall ?cumtime ?percall filename:lineno(function)
? ?12697 ? 55.456 ? ?0.004 ? 59.253 ? ?0.005 epollreactor.py:169(doPoll)
? ?59101 ? ?0.277 ? ?0.000 ? ?0.277 ? ?0.000 <string>:1(fileno)
? ? 5098 ? ?0.252 ? ?0.000 ? ?0.252 ? ?0.000 tcp.py:212(writeSomeData)
? ?24453 ? ?0.198 ? ?0.000 ? ?0.198 ? ?0.000 __init__.py:1230(getEffectiveLevel)
? ? 5453 ? ?0.167 ? ?0.000 ? ?1.639 ? ?0.000 basic.py:543(dataReceived)
? ? 5098 ? ?0.104 ? ?0.000 ? ?0.428 ? ?0.000 abstract.py:212(doWrite)
? ? 5454 ? ?0.097 ? ?0.000 ? ?1.736 ? ?0.000 tcp.py:182(doRead)
? ?13553 ? ?0.096 ? ?0.000 ? ?3.691 ? ?0.000 log.py:66(callWithContext)
? ?12697 ? ?0.095 ? ?0.000 ? ?0.587 ? ?0.000 base.py:762(runUntilCurrent)
? ?13552 ? ?0.095 ? ?0.000 ? ?3.359 ? ?0.000 posixbase.py:544(_doReadOrWrite)
? ?13553 ? ?0.086 ? ?0.000 ? ?3.797 ? ?0.000 log.py:71(callWithLogger)
? ? ? ?1 ? ?0.076 ? ?0.076 ? 59.988 ? 59.988 base.py:1172(mainLoop)
? ?16556 ? ?0.074 ? ?0.000 ? ?0.074 ? ?0.000 context.py:86(getContext)
? ?17451 ? ?0.073 ? ?0.000 ? ?0.094 ? ?0.000 epollreactor.py:71(_add)
? ?17098 ? ?0.068 ? ?0.000 ? ?0.085 ? ?0.000 epollreactor.py:112(_remove)
What is wrong? Why twisted perfomance is so poor here?

--
Ilya Biin

From exarkun at twistedmatrix.com  Fri Mar  2 14:39:21 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 02 Mar 2012 19:39:21 -0000
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
Message-ID: <20120302193921.9647.675523279.divmod.xquotient.31@localhost6.localdomain6>

On 06:54 pm, me at ilyabiin.com wrote:
>I'm using epoll reactor and sample HTTP Proxy realization.

See also the question on stackoverflow:

  http://stackoverflow.com/questions/9536732/twisted-reactor-cpu-usage

Jean-Paul


From itamar at itamarst.org  Fri Mar  2 14:50:27 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 2 Mar 2012 14:50:27 -0500
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
Message-ID: <f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>

> I'm using epoll reactor and sample HTTP Proxy realization.
>
> From another process i'm executing ~30 HTTP requests per second and
> twisted process is consuming 10% cpu
>
> What is wrong? Why twisted perfomance is so poor here?

The profile output you included doesn't particularly show anything useful,
unfortunately.

On my laptop ab claims twisted.web is doing 1000 requests/sec listing the
contents of a folder ("twistd -n web --path /tmp"). httperf claims 2500
request/sec. So unless your computer is dramatically slower than my
laptop, that does seem like high CPU usage.

1. What performance do you get out of twisted.web doing a simpler request?

2. What version of Twisted?

3. Was the 10% CPU while running under the profiler?

4. What profiler did you use? cProfile is often better than profile.



From me at ilyabiin.com  Fri Mar  2 14:54:04 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Fri, 2 Mar 2012 23:54:04 +0400
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <20120302193921.9647.675523279.divmod.xquotient.31@localhost6.localdomain6>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<20120302193921.9647.675523279.divmod.xquotient.31@localhost6.localdomain6>
Message-ID: <CAEP3A+084+ac=6AAiyxm6Ej20Vu64LH=9zTJkyjsQhufcBHJvw@mail.gmail.com>

I've never used stack overflow before.
Direct connection to community seems preferrable.

Source code being tested was

import hotshot, hotshot.stats

from twisted.internet import epollreactor
epollreactor.install()

from twisted.internet import reactor
from twisted.web import http
from twisted.web.proxy import Proxy

factory = http.HTTPFactory()
factory.protocol = Proxy

reactor.listenTCP(18001, factory)

reactor.callLater(60, reactor.stop)
prof = hotshot.Profile("stones.prof")
prof.start()
reactor.run()
prof.close()



2012/3/2  <exarkun at twistedmatrix.com>:
> On 06:54 pm, me at ilyabiin.com wrote:
>>I'm using epoll reactor and sample HTTP Proxy realization.
>
> See also the question on stackoverflow:
>
> ?http://stackoverflow.com/questions/9536732/twisted-reactor-cpu-usage
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Ilya Biin


From me at ilyabiin.com  Fri Mar  2 14:58:59 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Fri, 2 Mar 2012 23:58:59 +0400
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
Message-ID: <CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>

cpu load was measured out of profiler.
twisted version used is from pip, Twisted==12.0.0

i'll supply http_perf test results a bit later

> 1. What performance do you get out of twisted.web doing a simpler request?
>
> 2. What version of Twisted?
>
> 3. Was the 10% CPU while running under the profiler?
>
> 4. What profiler did you use? cProfile is often better than profile.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Ilya Biin


From glyph at twistedmatrix.com  Fri Mar  2 15:05:40 2012
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 2 Mar 2012 15:05:40 -0500
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
Message-ID: <27E7207C-ACAA-431F-9DD9-BC710907D7A7@twistedmatrix.com>

On Mar 2, 2012, at 2:50 PM, Itamar Turner-Trauring wrote:

> On my laptop ab claims


Note: pretty much everyone should avoid 'ab'.  It mis-reports its results, usually subtly, but sometimes in comical ways; I am pretty sure I've seen it tell me that (a buggy version of) Twisted was doing negative requests per second, then segfault.  Stick to httperf.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120302/33fcccf0/attachment.htm 

From me at ilyabiin.com  Fri Mar  2 15:24:08 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Sat, 3 Mar 2012 00:24:08 +0400
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
Message-ID: <CAEP3A+38wDTsrXBFTwRzrdpDnG-54aY9Ur3hcr-9RR+XbYJ-rA@mail.gmail.com>

httperf on "twistd -n web --path /tmp" does 1200 rps
as with my code it does 400 rps only which fits to ~10percent load on 30rps

2012/3/2 Itamar Turner-Trauring <itamar at itamarst.org>:
>> I'm using epoll reactor and sample HTTP Proxy realization.
>>
>> From another process i'm executing ~30 HTTP requests per second and
>> twisted process is consuming 10% cpu
>>
>> What is wrong? Why twisted perfomance is so poor here?
>
> The profile output you included doesn't particularly show anything useful,
> unfortunately.
>
> On my laptop ab claims twisted.web is doing 1000 requests/sec listing the
> contents of a folder ("twistd -n web --path /tmp"). httperf claims 2500
> request/sec. So unless your computer is dramatically slower than my
> laptop, that does seem like high CPU usage.
>
> 1. What performance do you get out of twisted.web doing a simpler request?
>
> 2. What version of Twisted?
>
> 3. Was the 10% CPU while running under the profiler?
>
> 4. What profiler did you use? cProfile is often better than profile.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Ilya Biin


From itamar at itamarst.org  Fri Mar  2 15:25:39 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 2 Mar 2012 15:25:39 -0500
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
	<CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>
Message-ID: <5f0b6286d6269389a18558d8af9c2f69.squirrel@webmail.zoteca.com>

> cpu load was measured out of profiler.

Profilers will slow down your program dramatically. A program that does
10% CPU running under a profiler may use far less CPU when run normally.




From me at ilyabiin.com  Fri Mar  2 15:31:36 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Sat, 3 Mar 2012 00:31:36 +0400
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <5f0b6286d6269389a18558d8af9c2f69.squirrel@webmail.zoteca.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
	<CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>
	<5f0b6286d6269389a18558d8af9c2f69.squirrel@webmail.zoteca.com>
Message-ID: <CAEP3A+3O2xavkMpT7rS26W5CPpDLnVdQy2s-hvgKKSzBdJa_Eg@mail.gmail.com>

Running tests again without a profiler let me achieve 700rps,
but it seems too low for a dummy code either.

plz tell me if i'm wrong

2012/3/3 Itamar Turner-Trauring <itamar at itamarst.org>:
>> cpu load was measured out of profiler.
>
> Profilers will slow down your program dramatically. A program that does
> 10% CPU running under a profiler may use far less CPU when run normally.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Ilya Biin


From me at ilyabiin.com  Fri Mar  2 15:42:50 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Sat, 3 Mar 2012 00:42:50 +0400
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <CAEP3A+3O2xavkMpT7rS26W5CPpDLnVdQy2s-hvgKKSzBdJa_Eg@mail.gmail.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
	<CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>
	<5f0b6286d6269389a18558d8af9c2f69.squirrel@webmail.zoteca.com>
	<CAEP3A+3O2xavkMpT7rS26W5CPpDLnVdQy2s-hvgKKSzBdJa_Eg@mail.gmail.com>
Message-ID: <CAEP3A+3VdV6r3LdzYhO3UwZ7LXfrPa_P92U5SgbTLe1QtnPiZA@mail.gmail.com>

Thank you for help.
As i see there is nothing particular in my test case.

2012/3/3 Ilya Biin <me at ilyabiin.com>:
> Running tests again without a profiler let me achieve 700rps,
> but it seems too low for a dummy code either.
>
> plz tell me if i'm wrong
>
> 2012/3/3 Itamar Turner-Trauring <itamar at itamarst.org>:
>>> cpu load was measured out of profiler.
>>
>> Profilers will slow down your program dramatically. A program that does
>> 10% CPU running under a profiler may use far less CPU when run normally.
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> --
> Ilya Biin



-- 
Ilya Biin


From itamar at itamarst.org  Fri Mar  2 15:50:15 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 2 Mar 2012 15:50:15 -0500
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <CAEP3A+3VdV6r3LdzYhO3UwZ7LXfrPa_P92U5SgbTLe1QtnPiZA@mail.gmail.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
	<CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>
	<5f0b6286d6269389a18558d8af9c2f69.squirrel@webmail.zoteca.com>
	<CAEP3A+3O2xavkMpT7rS26W5CPpDLnVdQy2s-hvgKKSzBdJa_Eg@mail.gmail.com>
	<CAEP3A+3VdV6r3LdzYhO3UwZ7LXfrPa_P92U5SgbTLe1QtnPiZA@mail.gmail.com>
Message-ID: <52735ca0272f004ad8f083e1ff969419.squirrel@webmail.zoteca.com>

> Thank you for help.
> As i see there is nothing particular in my test case.

It may be that's just how fast it's going to be, yes.

One potentially easy way to speed things up: try PyPy.



From tobias.oberstein at tavendo.de  Sat Mar  3 17:41:48 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 3 Mar 2012 14:41:48 -0800
Subject: [Twisted-Python] Twisted+PyPy+kqueue => rocks^2!
Message-ID: <634914A010D0B943A035D226786325D42D5AB78504@EXVMBX020-12.exch020.serverdata.net>

It's flying;)

I've added kqueue support to PyPy and got it running with Twisted/PyPy on FreeBSD.

https://bitbucket.org/pypy/pypy/pull-request/29/finish-kqueue-support

Tested with Twisted trunk ('cause of #1918 kqueue support in Twisted)
and hammered with a WebSocket testsuite. Twisted trial not yet ..

Marketing blurb:
"Twisted/PyPy's best supported platform is now BSD (less Linux, since of #3114)"

Sorry, couldn't resist saying that;)

\Tobias


From exarkun at twistedmatrix.com  Sun Mar  4 00:05:29 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Mar 2012 05:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1330837529.05.835818895@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120304/b50e9962/attachment.htm 

From tobias.oberstein at tavendo.de  Sun Mar  4 05:54:13 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 4 Mar 2012 02:54:13 -0800
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <20120302134020.9647.550847402.divmod.xquotient.19@localhost6.localdomain6>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
	<20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D42D5AB77F6F@EXVMBX020-12.exch020.serverdata.net>
	<20120302134020.9647.550847402.divmod.xquotient.19@localhost6.localdomain6>
Message-ID: <634914A010D0B943A035D226786325D42D5AB7850B@EXVMBX020-12.exch020.serverdata.net>

> Unfortunately, pyOpenSSL does not work on current PyPy.  There are just a few
> simple APIs missing from PyPy's cpyext feature that pyOpenSSL depends on, but
> they're blockers.

[Sorry if this is slightly OT for this list ..]

Could you eloborate a bit whats needed? 

Also, the 

https://bitbucket.org/pypy/compatibility/wiki/pyopenssl

talks about 

" pyOpenSSL is mostly compatible with PyPy. A few features are unsupported, such as sending data using memoryview objects."

Is that the stuff you are mentioning? 

So pyOpenSSL actually works .. modulo memoryviews? Anything else?

Is there a PyPy ticket tracking this?

I only found

https://bugs.pypy.org/issue527

http://as.ynchrono.us/2011/04/pyopenssl-on-pypy.html

\Tobias


From exarkun at twistedmatrix.com  Sun Mar  4 08:31:40 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Mar 2012 13:31:40 -0000
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <634914A010D0B943A035D226786325D42D5AB7850B@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
	<20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D42D5AB77F6F@EXVMBX020-12.exch020.serverdata.net>
	<20120302134020.9647.550847402.divmod.xquotient.19@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D42D5AB7850B@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120304133140.9647.613490946.divmod.xquotient.47@localhost6.localdomain6>

On 10:54 am, tobias.oberstein at tavendo.de wrote:
>>Unfortunately, pyOpenSSL does not work on current PyPy.  There are 
>>just a few
>>simple APIs missing from PyPy's cpyext feature that pyOpenSSL depends 
>>on, but
>>they're blockers.
>
>[Sorry if this is slightly OT for this list ..]

Since it's about Twisted/SSL/PyPy, I'll at least reply to this one. :) 
If you want to discuss any the specific technical issues in more detail, 
there's a separate pyOpenSSL mailing list hosted on Launchpad:

    https://launchpad.net/~pyopenssl-users
>Could you eloborate a bit whats needed?
>
>Also, the
>
>https://bitbucket.org/pypy/compatibility/wiki/pyopenssl
>
>talks about
>
>" pyOpenSSL is mostly compatible with PyPy. A few features are 
>unsupported, such as sending data using memoryview objects."
>
>Is that the stuff you are mentioning?

That wiki page was updated when pyOpenSSL actually did mostly work on 
PyPy.  However, unfortunately, PyPy has changed in ways that mean it no 
longer works at all.
>So pyOpenSSL actually works .. modulo memoryviews? Anything else?
>
>Is there a PyPy ticket tracking this?
>
>I only found
>
>https://bugs.pypy.org/issue527

I filed https://bugs.pypy.org/issue1069 a few days ago about the current 
problem.  The missing APIs are the CPython thread-local storage C APIs. 
They're just a thin layer on top of the appropriate platform-specific 
APIs.

I presume that memoryviews _also_ still do not work.

Jean-Paul
>http://as.ynchrono.us/2011/04/pyopenssl-on-pypy.html
>
>\Tobias


From itamar at itamarst.org  Sun Mar  4 23:15:26 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 04 Mar 2012 23:15:26 -0500
Subject: [Twisted-Python] Anyone still using Python 2.5?
Message-ID: <4F543DDE.8030303@itamarst.org>

In particular, are you using recent versions of Twisted with Python 2.5? 
Dropping support for 2.5 would make it easier for us to begin the work 
of supporting Python 3, so I'm wondering how widespread the use of 
Python 2.5 is. (If you're using the version of Twisted included with 
your distro that doesn't really count, since lack of support in newer 
releases is less relevant.)

If you are using Python 2.5, what is the constraint keeping you there? 
There's Ubuntu LTS 8.04 - any other relevant platforms?

On Windows it looks like 10-12% of PyPI downloads are for Python 2.5:

http://pypi.python.org/pypi/Twisted

-Itamar


From jaroslaw.fedewicz at gmail.com  Mon Mar  5 02:19:47 2012
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Mon, 05 Mar 2012 09:19:47 +0200
Subject: [Twisted-Python] Anyone still using Python 2.5?
In-Reply-To: <4F543DDE.8030303@itamarst.org>
References: <4F543DDE.8030303@itamarst.org>
Message-ID: <4F546913.3070706@gmail.com>

On 05.03.2012 06:15, Itamar Turner-Trauring wrote:
> If you are using Python 2.5, what is the constraint keeping you there?
> There's Ubuntu LTS 8.04 - any other relevant platforms?
There's also Maemo which is sadly stuck with Python 2.5.


From jstpierre at mecheye.net  Mon Mar  5 02:22:33 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 5 Mar 2012 02:22:33 -0500
Subject: [Twisted-Python] Anyone still using Python 2.5?
In-Reply-To: <4F546913.3070706@gmail.com>
References: <4F543DDE.8030303@itamarst.org>
	<4F546913.3070706@gmail.com>
Message-ID: <CAA0H+QS8unrZKmt509vztZVt7Qo19N1b3-Snr0HOA39aVMcKzQ@mail.gmail.com>

Do we expect that people will use new releases of Twisted with Maemo
and Python 2.5?

On Mon, Mar 5, 2012 at 2:19 AM, Yaroslav Fedevych
<jaroslaw.fedewicz at gmail.com> wrote:
> On 05.03.2012 06:15, Itamar Turner-Trauring wrote:
>> If you are using Python 2.5, what is the constraint keeping you there?
>> There's Ubuntu LTS 8.04 - any other relevant platforms?
> There's also Maemo which is sadly stuck with Python 2.5.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
? Jasper


From bino at indoakses-online.com  Tue Mar  6 03:56:29 2012
From: bino at indoakses-online.com (bino oetomo)
Date: Tue, 06 Mar 2012 15:56:29 +0700
Subject: [Twisted-Python] Question : PyNotify call from twist daemon
Message-ID: <4F55D13D.3030907@indoakses-online.com>

Dear All ...

I have a Serial service in my twisted script

Inside my 'class ArduinoReceiver(LineReceiver):' ,
I have a function like :
---START----
     def setdisplay(self, dispmode):
         global mynotify
         self.ntf_title = 'TOMBOL'
         self.ntf_body = 'Coba aja'
         try :
             mynotify.close()
         except :
             pass
         print 'Try to display button notification %s' % (dispmode)
         mynotify = pynotify.Notification(self.ntf_title, self.ntf_body)
         print 'MYNOTIFY ', str(mynotify)

----STOP---


When I try to run my tac file , and do something that will call that 
'setdisplay' function , there is no notification poped-up
But from the log file .. I got
2012-03-06 08:47:51+0000 [-] MYNOTIFY <pynotify.Notification object at 
0x96a5b6c (NotifyNotification at 0x9665d90)>

I made a test using shiped example :
---START---
#!/usr/bin/env python

import pygtk
pygtk.require('2.0')
import pynotify
import sys

if __name__ == '__main__':
     if not pynotify.init("Markup"):
         sys.exit(1)

     n = pynotify.Notification("Summary",
         "Some <b>bold</b>, <u>underlined</u>, <i>italic</i>, " +
         "<a href='http://www.google.com'>linked</a> text")

     if not n.show():
         print "Failed to send notification"
         sys.exit(1)
---STOP----

It work just fine.

My system is : Ubuntu maveric, with just Xorg and OpenBox


Kindly please give me any of your enlightment to fix this problem

Sincerely
-bino-



From p.mayers at imperial.ac.uk  Tue Mar  6 04:33:43 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 06 Mar 2012 09:33:43 +0000
Subject: [Twisted-Python] Question : PyNotify call from twist daemon
In-Reply-To: <4F55D13D.3030907@indoakses-online.com>
References: <4F55D13D.3030907@indoakses-online.com>
Message-ID: <4F55D9F7.30309@imperial.ac.uk>

On 03/06/2012 08:56 AM, bino oetomo wrote:

>
> import pygtk
> pygtk.require('2.0')
> import pynotify

So pynotify is a GTK thing?

Are you using the GTK reactor?


From bino at indoakses-online.com  Tue Mar  6 05:38:44 2012
From: bino at indoakses-online.com (bino oetomo)
Date: Tue, 06 Mar 2012 17:38:44 +0700
Subject: [Twisted-Python] Question : PyNotify call from twist daemon
In-Reply-To: <4F55D9F7.30309@imperial.ac.uk>
References: <4F55D13D.3030907@indoakses-online.com>
	<4F55D9F7.30309@imperial.ac.uk>
Message-ID: <4F55E934.4050208@indoakses-online.com>

Dear Phil
On 03/06/2012 04:33 PM, Phil Mayers wrote:
>
> So pynotify is a GTK thing?
>
I don't know
> Are you using the GTK reactor?
>
Ooopss .. no ...
Could you please tell me how to do it with MultiService ?
I still need run my script using twistd

Sincerely
-bino-
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From p.mayers at imperial.ac.uk  Tue Mar  6 06:14:21 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 06 Mar 2012 11:14:21 +0000
Subject: [Twisted-Python] Question : PyNotify call from twist daemon
In-Reply-To: <4F55E934.4050208@indoakses-online.com>
References: <4F55D13D.3030907@indoakses-online.com>
	<4F55D9F7.30309@imperial.ac.uk>
	<4F55E934.4050208@indoakses-online.com>
Message-ID: <4F55F18D.20103@imperial.ac.uk>

On 06/03/12 10:38, bino oetomo wrote:
> Dear Phil
> On 03/06/2012 04:33 PM, Phil Mayers wrote:
>>
>> So pynotify is a GTK thing?
>>
> I don't know
>> Are you using the GTK reactor?
>>
> Ooopss .. no ...
> Could you please tell me how to do it with MultiService ?
> I still need run my script using twistd

twistd has an CLI argument:

twistd -r <name>

See:

twistd --help-reactors


From bino at indoakses-online.com  Tue Mar  6 06:15:04 2012
From: bino at indoakses-online.com (bino oetomo)
Date: Tue, 06 Mar 2012 18:15:04 +0700
Subject: [Twisted-Python] Question : PyNotify call from twist daemon
In-Reply-To: <4F55E934.4050208@indoakses-online.com>
References: <4F55D13D.3030907@indoakses-online.com>	<4F55D9F7.30309@imperial.ac.uk>
	<4F55E934.4050208@indoakses-online.com>
Message-ID: <4F55F1B8.4070700@indoakses-online.com>

Argh .... ignore my post about this problem.
I just need to add --> mynotify.show() to fix it.
BTW it's not needed when we are not in twisted.

Sincerely
-bino-

On 03/06/2012 05:38 PM, bino oetomo wrote:
> Dear Phil
> On 03/06/2012 04:33 PM, Phil Mayers wrote:
>> So pynotify is a GTK thing?
>>
> I don't know
>> Are you using the GTK reactor?
>>
> Ooopss .. no ...
> Could you please tell me how to do it with MultiService ?
> I still need run my script using twistd
>
> Sincerely
> -bino-
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From penxiao at cisco.com  Wed Mar  7 03:37:03 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Wed, 7 Mar 2012 16:37:03 +0800
Subject: [Twisted-Python] Twisted TCP Window Full due to time-consuming
	fuction
Message-ID: <776373CB9C5EA544A476052F49F1DAE2027F6580@XMB-HKG-41B.cisco.com>

Hi experts

 

I have a program written by twisted to receive data from the server.

But the speed is a little slow.

The problem happened in the code below

    def dataReceived(self, data):

        

        """

        Appends newly received data to the receive buffer, and

        then attempts to parse as many messages as possible.

        """

        

        # Buffer possibly incomplete data first

        self.receiveBuffer += data

                # Attempt to parse as many messages as possible

        while(self.parseBuffer()): 

            pass

the function of parseBuffer will return false if the self.receiveBuffer
has no message, and then the twisted will receive data from buffer
again.

Because the function of parseBuffer is a litter time consuming, so the
receive buffer is full sometimes.

 

 

Could there anybody help me out? Thanks a lot.

 

Best

Regards,

 

Xiao peng

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120307/ab55b3c9/attachment.htm 

From p.mayers at imperial.ac.uk  Wed Mar  7 04:46:54 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 07 Mar 2012 09:46:54 +0000
Subject: [Twisted-Python] Twisted TCP Window Full due to time-consuming
 fuction
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE2027F6580@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE2027F6580@XMB-HKG-41B.cisco.com>
Message-ID: <4F572E8E.2080704@imperial.ac.uk>

On 03/07/2012 08:37 AM, Peng Xiao -X (penxiao - Digital China at Cisco) 
wrote:

> Because the function of parseBuffer is a litter time consuming, so the
> receive buffer is full sometimes.

The answer is: don't do that.

If parseBuffer is expensive, you will block the reactor, which you must 
not do.

You have two options:

  1. Run the work in a thread with "deferToThread". Note: you MUST NOT 
call any reactor APIs from the thread, except reactor.callFromThread

  2. Break the work up into small pieces, and run it incrementally. See 
twisted.internet.task.coiterate for example; this allows you to run any 
iterator, such as a generator, and get the result as a deferred.


From dynamicgl at gmail.com  Thu Mar  8 10:36:22 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Thu, 8 Mar 2012 23:36:22 +0800
Subject: [Twisted-Python] ampoule & cx_Freeze
Message-ID: <CABkOF6QUKBbKQ5jHs8NvAvq+4EZ2d=aGKpsTP_c_1_Qr_zKo1Q@mail.gmail.com>

Hi All


    Have your guys used cx_Freeze & ampoule? I did try to make a standalone
executable app with ampoule; however, the program failed to execute at the
early stage of starting. I noticed an exception raised on utils.py:

p = FilePath(__main__.__file__)
AttributeError: 'module' object has no attribute __file__.


I guess once the main file is tuned into the executable one, __file__ will
be removed. It looks like ampoule need this attribute.

Any idea?

Thanks

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120308/d7c5f8a0/attachment.htm 

From mostawesomedude at gmail.com  Thu Mar  8 13:00:28 2012
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Fri, 9 Mar 2012 02:00:28 +0800
Subject: [Twisted-Python] ampoule & cx_Freeze
In-Reply-To: <CABkOF6QUKBbKQ5jHs8NvAvq+4EZ2d=aGKpsTP_c_1_Qr_zKo1Q@mail.gmail.com>
References: <CABkOF6QUKBbKQ5jHs8NvAvq+4EZ2d=aGKpsTP_c_1_Qr_zKo1Q@mail.gmail.com>
Message-ID: <CALiqSLf20yBWQ2f=DLvmgq0ZmUaeudD7CHkDsZKzOQSi6CYa4Q@mail.gmail.com>

Off the top of my head, multiprocessing.freeze_support() might help. I
wonder if dialtone is on this list, he might know more.

~ C.

On Thu, Mar 8, 2012 at 11:36 PM, gelin yan <dynamicgl at gmail.com> wrote:
> Hi All
>
>
> ??? Have your guys used cx_Freeze & ampoule? I did try to make a standalone
> executable app with ampoule; however, the program failed to execute at the
> early stage of starting. I noticed an exception raised on utils.py:
>
> p = FilePath(__main__.__file__)
> AttributeError: 'module' object has no attribute __file__.
>
>
> I guess once the main file is tuned into the executable one, __file__ will
> be removed. It looks like ampoule need this attribute.
>
> Any idea?
>
> Thanks
>
> gelin yan
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>


From dynamicgl at gmail.com  Fri Mar  9 00:57:23 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Fri, 9 Mar 2012 13:57:23 +0800
Subject: [Twisted-Python] ampoule & cx_Freeze
In-Reply-To: <CALiqSLf20yBWQ2f=DLvmgq0ZmUaeudD7CHkDsZKzOQSi6CYa4Q@mail.gmail.com>
References: <CABkOF6QUKBbKQ5jHs8NvAvq+4EZ2d=aGKpsTP_c_1_Qr_zKo1Q@mail.gmail.com>
	<CALiqSLf20yBWQ2f=DLvmgq0ZmUaeudD7CHkDsZKzOQSi6CYa4Q@mail.gmail.com>
Message-ID: <CABkOF6R8NEuqyDiW0s3YjHe9xWbjjOxtVif1EU+ZopSV9YBpxA@mail.gmail.com>

On Fri, Mar 9, 2012 at 2:00 AM, Corbin Simpson <mostawesomedude at gmail.com>wrote:

> Off the top of my head, multiprocessing.freeze_support() might help. I
> wonder if dialtone is on this list, he might know more.
>
> ~ C.
>
> On Thu, Mar 8, 2012 at 11:36 PM, gelin yan <dynamicgl at gmail.com> wrote:
> > Hi All
> >
> >
> >     Have your guys used cx_Freeze & ampoule? I did try to make a
> standalone
> > executable app with ampoule; however, the program failed to execute at
> the
> > early stage of starting. I noticed an exception raised on utils.py:
> >
> > p = FilePath(__main__.__file__)
> > AttributeError: 'module' object has no attribute __file__.
> >
> >
> > I guess once the main file is tuned into the executable one, __file__
> will
> > be removed. It looks like ampoule need this attribute.
> >
> > Any idea?
> >
> > Thanks
> >
> > gelin yan
> >
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>

> --
> When the facts change, I change my mind. What do you do, sir? ~ Keynes
>
> Corbin Simpson
> <MostAwesomeDude at gmail.com>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


I have tried freeze_support..It didn't work. I guess it would be not easy
to use cx_Freeze for this case, I may try to find out other methods to pack
the app. Thx again.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120309/dd80b97c/attachment.htm 

From sweetnivi88 at gmail.com  Sat Mar 10 18:06:18 2012
From: sweetnivi88 at gmail.com (nivedita datta)
Date: Sun, 11 Mar 2012 04:36:18 +0530
Subject: [Twisted-Python] Distributed system programming
Message-ID: <CA+XLstvc7Sjh2-j2Kbkg6R_2wVkNJesbYOcLc4X0oDyx+WD=aw@mail.gmail.com>

Hi,
I have the following query

"Can programming for distributed system done using twisted?
If yes, kindly provide some resource to get started.

If not, please suggest any existing module for the same on python."

Regards,
Nivedita
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120311/bfbab3fd/attachment.htm 

From washort at twistedmatrix.com  Sat Mar 10 18:29:09 2012
From: washort at twistedmatrix.com (Allen Short)
Date: Sat, 10 Mar 2012 15:29:09 -0800
Subject: [Twisted-Python] Distributed system programming
In-Reply-To: <CA+XLstvc7Sjh2-j2Kbkg6R_2wVkNJesbYOcLc4X0oDyx+WD=aw@mail.gmail.com>
References: <CA+XLstvc7Sjh2-j2Kbkg6R_2wVkNJesbYOcLc4X0oDyx+WD=aw@mail.gmail.com>
Message-ID: <CAEzUHiNmJhoru7cJrCMh6+PMV-ORU8r3mK2ZN8eoWSPhJtgTcg@mail.gmail.com>

Twisted is a general library for networking -- you can use it to write both
servers and clients, usable together in the same process or separately.
"Distributed system" is a broad name that covers a lot of different things,
so there are several different possible approaches. Here are some general
resources you may find useful:

A general introduction to writing software with Twisted:
http://krondo.com/?page_id=1327

AMP, a simple bidirectional message protocol:
http://twistedmatrix.com/documents/current/core/howto/amp.html
http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html

Can you describe more specifically what you're interested in writing?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120310/90d5a859/attachment.htm 

From exarkun at twistedmatrix.com  Sun Mar 11 00:05:33 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Mar 2012 05:05:33 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1331442333.96.2145323958@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120311/6d112d33/attachment.htm 

From sweetnivi88 at gmail.com  Sun Mar 11 03:52:01 2012
From: sweetnivi88 at gmail.com (nivedita datta)
Date: Sun, 11 Mar 2012 13:22:01 +0530
Subject: [Twisted-Python] Distributed system programming
In-Reply-To: <CAEzUHiNmJhoru7cJrCMh6+PMV-ORU8r3mK2ZN8eoWSPhJtgTcg@mail.gmail.com>
References: <CA+XLstvc7Sjh2-j2Kbkg6R_2wVkNJesbYOcLc4X0oDyx+WD=aw@mail.gmail.com>
	<CAEzUHiNmJhoru7cJrCMh6+PMV-ORU8r3mK2ZN8eoWSPhJtgTcg@mail.gmail.com>
Message-ID: <CA+XLstsC5qAPdNSE9GtQFR785EfA1=b+oj2NzeNGQ5rfVKicVA@mail.gmail.com>

Hi,

I am trying to implement a distributed Denial of service attack on servers.
Its for a class project work.

Kindly provide some useful links/resources for the same if possible.

Regards,
Nivedita


On Sun, Mar 11, 2012 at 4:59 AM, Allen Short <washort at twistedmatrix.com>wrote:

> Twisted is a general library for networking -- you can use it to write
> both servers and clients, usable together in the same process or
> separately. "Distributed system" is a broad name that covers a lot of
> different things, so there are several different possible approaches. Here
> are some general resources you may find useful:
>
> A general introduction to writing software with Twisted:
> http://krondo.com/?page_id=1327
>
> AMP, a simple bidirectional message protocol:
> http://twistedmatrix.com/documents/current/core/howto/amp.html
> http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html
>
> Can you describe more specifically what you're interested in writing?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120311/f5cc67fa/attachment.htm 

From schapel at umich.edu  Sun Mar 11 12:18:29 2012
From: schapel at umich.edu (Steve Chapel)
Date: Sun, 11 Mar 2012 12:18:29 -0400
Subject: [Twisted-Python] HTTPS proxy with twisted?
Message-ID: <4F5CD055.40905@umich.edu>

Hi,

I am doing a research project for a security class that involves writing 
an HTTP and HTTPS proxy. The intent of this proxy is to ensure that 
communications that should be secure are secure, without bombarding the 
user with false warnings about potential man-in-the-middle attacks, for 
example, when a website legitimately uses a self-signed certificate.

I will need to write an HTTPS proxy, which will examine the certificates 
sent from the web server and determine whether the certificate is valid 
or invalid. If the proxy determines if the certificate is valid, I will 
need to resign the document. I suppose this will require that the proxy 
be a certificate authority and will generate certificates for websites, 
which the proxy will then use to sign the documents. Will this be 
something that twisted can do easily? If so, where can I find 
documentation for how to do this?

Thanks,
Steve


From p.mayers at imperial.ac.uk  Mon Mar 12 11:33:34 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 12 Mar 2012 15:33:34 +0000
Subject: [Twisted-Python] HTTPS proxy with twisted?
In-Reply-To: <4F5CD055.40905@umich.edu>
References: <4F5CD055.40905@umich.edu>
Message-ID: <4F5E174E.5060305@imperial.ac.uk>

On 11/03/12 16:18, Steve Chapel wrote:

> I will need to write an HTTPS proxy, which will examine the certificates
> sent from the web server and determine whether the certificate is valid
> or invalid. If the proxy determines if the certificate is valid, I will
> need to resign the document. I suppose this will require that the proxy
> be a certificate authority and will generate certificates for websites,
> which the proxy will then use to sign the documents. Will this be
> something that twisted can do easily? If so, where can I find
> documentation for how to do this?

This is a pretty hard question to answer in this form, and depends on 
what you mean by "easily". Since you say it's classwork I'm reluctant to 
say too much, but...

Fundamentally, the only "difficult" bit of this project in terms of 
Twisted capabilities is finding the original destination address of your 
intercepted connections (so that you can do a "lookaside" connection and 
verify / impersonate the far-end cert)

Presumably you'll be using something like Linux/IPTables to do this:

iptables t nat -A PREROUTING \
   -p tcp --dport 443 -j REDIRECT --to-port <twisted>


In that case, you can find the original destination address by calling:

socket.getsockopt(self.transport.fileno(), SOL_IP, SO_ORIGINAL_DST, 16)

...in your transport "connectionMade". You will presumably then want to 
start up an SSL connection to the original IP (or draw from cache) to 
find the far-end cert attributes (note: plural), call out to your local 
MITM CA for an impersonated cert/key, then call startTLS in server mode 
using a context holding the fake cert/key.

This isn't very hard, and Twisted has everything you need (accept TCP 
connections, make outgoing SSL, find server certs, call out to 
subprocess, startTLS in server mode) except the SO_ORIGINAL_DST stuff 
(which is easy to add in).

Anyway, I hope this helps; good luck with the assignment!

Cheers,
Phil


From schapel at umich.edu  Mon Mar 12 12:11:10 2012
From: schapel at umich.edu (Steve Chapel)
Date: Mon, 12 Mar 2012 12:11:10 -0400
Subject: [Twisted-Python] HTTPS proxy with twisted?
In-Reply-To: <4F5E174E.5060305@imperial.ac.uk>
References: <4F5CD055.40905@umich.edu> <4F5E174E.5060305@imperial.ac.uk>
Message-ID: <4F5E201E.5050209@umich.edu>

Well, the HTTPS proxy actually not an assignment. Getting the HTTPS 
proxy working is just the starting point we need before we can do any 
research, and at this point the research project is due in four weeks. 
If you can point to some twisted code for an HTTPS proxy or 
documentation for how to write one, that won't be giving us undue help 
but will enable us to have a chance to get the research done at all. At 
this point, I'm thinking of using a regular Python program because I 
found a MITM proxy already written, so we could start the research right 
away.

-- Steve


On 03/12/2012 11:33 AM, Phil Mayers wrote:
> On 11/03/12 16:18, Steve Chapel wrote:
>
>> I will need to write an HTTPS proxy, which will examine the certificates
>> sent from the web server and determine whether the certificate is valid
>> or invalid. If the proxy determines if the certificate is valid, I will
>> need to resign the document. I suppose this will require that the proxy
>> be a certificate authority and will generate certificates for websites,
>> which the proxy will then use to sign the documents. Will this be
>> something that twisted can do easily? If so, where can I find
>> documentation for how to do this?
> This is a pretty hard question to answer in this form, and depends on
> what you mean by "easily". Since you say it's classwork I'm reluctant to
> say too much, but...
>
> Fundamentally, the only "difficult" bit of this project in terms of
> Twisted capabilities is finding the original destination address of your
> intercepted connections (so that you can do a "lookaside" connection and
> verify / impersonate the far-end cert)
>
> Presumably you'll be using something like Linux/IPTables to do this:
>
> iptables t nat -A PREROUTING \
>     -p tcp --dport 443 -j REDIRECT --to-port<twisted>
>
>
> In that case, you can find the original destination address by calling:
>
> socket.getsockopt(self.transport.fileno(), SOL_IP, SO_ORIGINAL_DST, 16)
>
> ...in your transport "connectionMade". You will presumably then want to
> start up an SSL connection to the original IP (or draw from cache) to
> find the far-end cert attributes (note: plural), call out to your local
> MITM CA for an impersonated cert/key, then call startTLS in server mode
> using a context holding the fake cert/key.
>
> This isn't very hard, and Twisted has everything you need (accept TCP
> connections, make outgoing SSL, find server certs, call out to
> subprocess, startTLS in server mode) except the SO_ORIGINAL_DST stuff
> (which is easy to add in).
>
> Anyway, I hope this helps; good luck with the assignment!
>
> Cheers,
> Phil
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From penxiao at cisco.com  Tue Mar 13 05:50:03 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Tue, 13 Mar 2012 17:50:03 +0800
Subject: [Twisted-Python] How to Improve Twisted efficiency
Message-ID: <776373CB9C5EA544A476052F49F1DAE202877BB4@XMB-HKG-41B.cisco.com>

Hi experts,

 

I wrote a TCP client program used twisted to receive lots of data from the server and decode them for analysis.

But the efficiency is ugly.

I used ?profile? and ?pstats? to analysis and found selectreactor.py is time consuming.

what is selectreactor.py used for?

How can I improve that? 

Very thanks.

 

2012-03-13 17:46:10+0800 [-] Tue Mar 13 17:46:10 2012    astar_prof.txt

2012-03-13 17:46:10+0800 [-] 

2012-03-13 17:46:10+0800 [-]          9111 function calls (9070 primitive calls) in 119.166 CPU seconds

2012-03-13 17:46:10+0800 [-] 

2012-03-13 17:46:10+0800 [-]    Ordered by: internal time

2012-03-13 17:46:10+0800 [-]    List reduced from 496 to 15 due to restriction <15>

2012-03-13 17:46:10+0800 [-] 

2012-03-13 17:46:10+0800 [-]    ncalls  tottime  percall  cumtime  percall filename:lineno(function)

2012-03-13 17:46:10+0800 [-]       171  119.092    0.696  119.094    0.696 :0(select)

2012-03-13 17:46:10+0800 [-]       156    0.005    0.000    0.007    0.000 http.py:225(datetimeToLogString)

2012-03-13 17:46:10+0800 [-]         4    0.005    0.001    0.007    0.002 protocol.py:131(dataReceived)

2012-03-13 17:46:10+0800 [-]       171    0.004    0.000    0.029    0.000 base.py:718(runUntilCurrent)

2012-03-13 17:46:10+0800 [-]       324    0.004    0.000    0.004    0.000 :0(append)

2012-03-13 17:46:10+0800 [-]       160    0.004    0.000    0.004    0.000 :0(heappop)

2012-03-13 17:46:10+0800 [-]       171    0.004    0.000  119.114    0.697 selectreactor.py:93(doSelect)

2012-03-13 17:46:10+0800 [-]       164    0.003    0.000    0.003    0.000 :0(heappush)

2012-03-13 17:46:10+0800 [-]       342    0.003    0.000    0.006    0.000 base.py:699(_insertNewDelayedCalls)

2012-03-13 17:46:10+0800 [-]       342    0.003    0.000    0.003    0.000 :0(keys)

2012-03-13 17:46:10+0800 [-]       358    0.002    0.000    0.002    0.000 :0(fileno)

2012-03-13 17:46:10+0800 [-]       163    0.002    0.000    0.005    0.000 base.py:648(callLater)

2012-03-13 17:46:10+0800 [-]      19/1    0.002    0.000    0.003    0.003 xml2dict.py:16(_parse_node)

2012-03-13 17:46:10+0800 [-]       686    0.002    0.000    0.002    0.000 :0(time)

2012-03-13 17:46:10+0800 [-]        51    0.002    0.000    0.003    0.000 :0(encode)

2012-03-13 17:46:10+0800 [-]

Best

Regards,

 

Xiao Peng(??)

Cisco Systems

GSP-Beijing (China)

Office: +86 10 8507 7181

Mobile: +86 18600560077(preferred)

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120313/3ce91d76/attachment.htm 

From itamar at itamarst.org  Tue Mar 13 08:31:01 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 13 Mar 2012 08:31:01 -0400
Subject: [Twisted-Python] How to Improve Twisted efficiency
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE202877BB4@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE202877BB4@XMB-HKG-41B.cisco.com>
Message-ID: <4F5F3E05.50105@itamarst.org>

On 03/13/2012 05:50 AM, Peng Xiao -X (penxiao - Digital China at Cisco) 
wrote:
>
> Hi experts,
>
> I wrote a TCP client program used twisted to receive lots of data from 
> the server and decode them for analysis.
>
> But the efficiency is ugly.
>
> I used*"profile" and "pstats" *to analysis and found 
> *selectreactor.py* is time consuming.
>
> what is *selectreactor.py* used for?
>
> How can I improve that?
>
>
selectreactor is the core event loop; it waits for events to happen and 
calls other code.

In general, if you have many connections (hundreds or thousands) 
switching to the IOCP reactor on Windows, epoll on Linux, or poll on 
other Unix platforms may help (next release will also have kqueue 
support for FreeBSD). Running your application with PyPy may also help.

It may also be, though, that your program is taking a long time because 
it's waiting for data to arrive, for example, and that won't show up in 
a profile because it has nothing to do with CPU time.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120313/ae4fae16/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Mar 13 08:52:42 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 13 Mar 2012 12:52:42 +0000
Subject: [Twisted-Python] HTTPS proxy with twisted?
In-Reply-To: <4F5E201E.5050209@umich.edu>
References: <4F5CD055.40905@umich.edu> <4F5E174E.5060305@imperial.ac.uk>
	<4F5E201E.5050209@umich.edu>
Message-ID: <4F5F431A.3070606@imperial.ac.uk>

On 12/03/12 16:11, Steve Chapel wrote:
> Well, the HTTPS proxy actually not an assignment. Getting the HTTPS
> proxy working is just the starting point we need before we can do any
> research, and at this point the research project is due in four weeks.
> If you can point to some twisted code for an HTTPS proxy or
> documentation for how to write one, that won't be giving us undue help
> but will enable us to have a chance to get the research done at all. At
> this point, I'm thinking of using a regular Python program because I
> found a MITM proxy already written, so we could start the research right
> away.

I got curious about how difficult this would be, and spent a bit of time 
on it last night.

See here:

https://github.com/philmayers/txsslmitm

This is MIT licensed, as per Twisted. It is really a proof-of-concept, 
but it does work in my tests.

I'm impressed how few lines of code it takes in Twisted to do this; it 
really is an awesome framework!


From _ at lvh.cc  Tue Mar 13 14:12:08 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 13 Mar 2012 11:12:08 -0700
Subject: [Twisted-Python] HTTPS proxy with twisted?
In-Reply-To: <4F5F431A.3070606@imperial.ac.uk>
References: <4F5CD055.40905@umich.edu> <4F5E174E.5060305@imperial.ac.uk>
	<4F5E201E.5050209@umich.edu> <4F5F431A.3070606@imperial.ac.uk>
Message-ID: <CAE_Hg6aNUrVJ-0QO90bewcw78RnmLCDJsdMnhER=d5oGRHeJ5w@mail.gmail.com>

Hi


I wrote a proxy designed to lie once. It's called minitrue. SSL MITMing is
still a feature I hope that it will grow one day (see issue tracker).

It'll probably be a lot easier to hack this on top of minitrue than
starting from scratch :) If you do that, I will gladly help code review
your pull requests :)

You can find it on github: https://github.com/lvh/minitrue

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120313/7c1a78a9/attachment.htm 

From oubiwann at twistedmatrix.com  Tue Mar 13 20:48:45 2012
From: oubiwann at twistedmatrix.com (Duncan McGreggor)
Date: Tue, 13 Mar 2012 20:48:45 -0400
Subject: [Twisted-Python] PyCon and Sprint Photos
Message-ID: <CAFJQhU6UOmhy9L4in6u9JKrVEnbPvyqg435JsYnOsLk7_MuZVA@mail.gmail.com>

Hey folks,

I put up the tiny amount of photos I took this year here, many of
which are of Twisted hackers:
  http://www.flickr.com/photos/oubiwann/sets/72157629579346369/

Enjoy!

/me awaits more and better photos from others...

d


From itamar at itamarst.org  Tue Mar 13 22:44:49 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 13 Mar 2012 22:44:49 -0400
Subject: [Twisted-Python] cfreactor and global state
Message-ID: <4F600621.30704@itamarst.org>

twisted.internet.test.reactormixins says:

    CFReactor uses APIs which manipulate global state, so it's not safe
    to run its own reactor-builder tests under itself.

We also don't have a buildslave running under cfreactor. Which means 
it's currently completely untested. I filed a ticket to fix that - 
https://bugs.launchpad.net/twisted-buildbot-configuration/+bug/954680

That still leaves the problem with global state though. Since we want to 
move towards having tests create new reactors, that's problematic. What 
global state does it manipulate, and what can we do about it?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120313/281148b8/attachment.htm 

From ali.lusana at gmail.com  Wed Mar 14 05:46:08 2012
From: ali.lusana at gmail.com (Lusana Ali)
Date: Wed, 14 Mar 2012 20:46:08 +1100
Subject: [Twisted-Python] Basic Resource Tree question
Message-ID: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>

Hi,

Im trying to setup just a very simple site using a Resource Tree (some
code below).
The problem I'm having is getting the root / to render. so when i go
to domain.com/ I get
"No Such Resource
No such child resource"

The child nodes {terms,profile} are rendering fine. So looking at the
resource tree and the main.py which holds the Main() Resource... how
can I fix this issue. I have already tried setting isLeaf = True in
Main() but that breaks terms and profile

Cheers

server.py
=======================================
# resource tree
root = Main()
root.putChild('terms', Terms())
root.putChild('profile', Profile())

site = server.Site(root)
reactor.listenTCP(6346, site)
reactor.run()

main.py
=======================================
class IndexPage(Resource):

    def __init__(self):
        print "created new index page"
        Resource.__init__(self)

    def render_GET(self, request):
        print "rendering get"
        return "<html>INDEX PAGE</html>"


class Main(Resource):

    def get_child(self, name, request):
        print "trying to get main"
        return IndexPage()


From jstpierre at mecheye.net  Wed Mar 14 05:58:59 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Wed, 14 Mar 2012 05:58:59 -0400
Subject: [Twisted-Python] Basic Resource Tree question
In-Reply-To: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>
References: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>
Message-ID: <CAA0H+QQMjL8dK34g2tL5YGs5kAQyJfUxTAKe3t9fPt9KdVBJPQ@mail.gmail.com>

This probably isn't the proper way to do it, but it should work:

    root = resource.Resource()
    root.putChild('terms', Terms())
    root.putChild('profile', Profile())
    root.putChild('', IndexPage())

On Wed, Mar 14, 2012 at 5:46 AM, Lusana Ali <ali.lusana at gmail.com> wrote:
> Hi,
>
> Im trying to setup just a very simple site using a Resource Tree (some
> code below).
> The problem I'm having is getting the root / to render. so when i go
> to domain.com/ I get
> "No Such Resource
> No such child resource"
>
> The child nodes {terms,profile} are rendering fine. So looking at the
> resource tree and the main.py which holds the Main() Resource... how
> can I fix this issue. I have already tried setting isLeaf = True in
> Main() but that breaks terms and profile
>
> Cheers
>
> server.py
> =======================================
> # resource tree
> root = Main()
> root.putChild('terms', Terms())
> root.putChild('profile', Profile())
>
> site = server.Site(root)
> reactor.listenTCP(6346, site)
> reactor.run()
>
> main.py
> =======================================
> class IndexPage(Resource):
>
> ? ?def __init__(self):
> ? ? ? ?print "created new index page"
> ? ? ? ?Resource.__init__(self)
>
> ? ?def render_GET(self, request):
> ? ? ? ?print "rendering get"
> ? ? ? ?return "<html>INDEX PAGE</html>"
>
>
> class Main(Resource):
>
> ? ?def get_child(self, name, request):
> ? ? ? ?print "trying to get main"
> ? ? ? ?return IndexPage()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
? Jasper


From enriquejr at gmail.com  Wed Mar 14 06:16:47 2012
From: enriquejr at gmail.com (Enrique Samson Jr,)
Date: Wed, 14 Mar 2012 18:16:47 +0800
Subject: [Twisted-Python] Basic Resource Tree question
In-Reply-To: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>
References: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>
Message-ID: <4F60700F.3040705@gmail.com>

On 03/14/2012 05:46 PM, Lusana Ali wrote:
> class Main(Resource):
>
>     def get_child(self, name, request):
>         print "trying to get main"
>         return IndexPage()

Try changing get_child to getChild.

--Enrique


From ali.lusana at gmail.com  Wed Mar 14 06:43:06 2012
From: ali.lusana at gmail.com (Lusana Ali)
Date: Wed, 14 Mar 2012 21:43:06 +1100
Subject: [Twisted-Python] Basic Resource Tree question
In-Reply-To: <4F60700F.3040705@gmail.com>
References: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>
	<4F60700F.3040705@gmail.com>
Message-ID: <CAOO2HJ16TzMivma9xuWRXH89u+ttD0c6EEmAbB_OUxrdOiPq0Q@mail.gmail.com>

That worked a charm and I feel the fool for not having noticed that
simple error =)

Much appreciated!
Lusana

On Wed, Mar 14, 2012 at 9:16 PM, Enrique Samson Jr, <enriquejr at gmail.com> wrote:
> On 03/14/2012 05:46 PM, Lusana Ali wrote:
>> class Main(Resource):
>>
>> ? ? def get_child(self, name, request):
>> ? ? ? ? print "trying to get main"
>> ? ? ? ? return IndexPage()
>
> Try changing get_child to getChild.
>
> --Enrique
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From Zoran.Bosnjak at sloveniacontrol.si  Wed Mar 14 07:57:02 2012
From: Zoran.Bosnjak at sloveniacontrol.si (=?Windows-1252?Q?Zoran_Bo=9Anjak?=)
Date: Wed, 14 Mar 2012 11:57:02 +0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
Message-ID: <9A4A540809FC414FB909E3C44D3A53C54AEF44C5@veles.kzps.si>

Hello all,
Thanks for all your comments.

I have filed a ticket regarding this issue:
http://twistedmatrix.com/trac/ticket/5552

I hope it will be accepted as a problem.

regards,
Zoran

________________________________________
From: twisted-python-bounces at twistedmatrix.com [twisted-python-bounces at twistedmatrix.com] on behalf of Zoran Bo?njak [Zoran.Bosnjak at sloveniacontrol.si]
Sent: Sunday, February 19, 2012 5:49 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] accurate periodic call

Hello all,
I was astonished to find out that looping call period depends on the system time by default. The periodic tick can even stall for a long time, if the system time jumps backwards during program execution. It turned out that this is in fact a python problem (not providing a monotonic time, at least not for posix).

I urgently need accurate periodic call in my program and I've found the solution below that seems to be working. I kindly ask you for your comments:
- Is this monotonic_time implementation OK from python perspective?
- Is monkey patch to the reactor OK or is there any other solution more appropriate in this case (I do not want to patch each looping call, but once in the application)?
- Does this patch have any negative influence to the rest of the reactor?
- How would you implement a periodic function call in twisted application (as accurate as possible)?
- Any chance to see something implemented inside twisted and/or python, so that applications don't need this kind of tricks?

Thanks a lot for your comments.

Zoran

#! /usr/bin/env python

from twisted.internet import task
from twisted.internet import reactor
import os
import time
import ctypes

# python MONOTONIC time, borrowed here
# http://stackoverflow.com/questions/1205722/how-do-i-get-monotonic-time-durations-in-python
if os.name == 'posix':

    CLOCK_MONOTONIC = 1 # see <linux/time.h>

    class timespec(ctypes.Structure):
        _fields_ = [
            ('tv_sec', ctypes.c_long),
            ('tv_nsec', ctypes.c_long)
        ]

    librt = ctypes.CDLL('librt.so.1', use_errno=True)
    clock_gettime = librt.clock_gettime
    clock_gettime.argtypes = [ctypes.c_int, ctypes.POINTER(timespec)]

    def monotonic_time():
        t = timespec()
        if clock_gettime(CLOCK_MONOTONIC, ctypes.pointer(t)) != 0:
            errno_ = ctypes.get_errno()
            raise OSError(errno_, os.strerror(errno_))
        return t.tv_sec + t.tv_nsec * 1e-9

    # monkey patch the reactor
    reactor.seconds = monotonic_time

# TODO: check for other platforms!!
else:
    monotonic_time = time.time

def tick():
    """This function is suppose to execute once a second,
    regardless of the system time."""

    print 'tick', monotonic_time()

loop = task.LoopingCall(tick)
loop.start(1.0)

reactor.run()

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From dynamicgl at gmail.com  Wed Mar 14 10:04:13 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Wed, 14 Mar 2012 22:04:13 +0800
Subject: [Twisted-Python] a weird problem about IOCP reactor and perspective
	broker
Message-ID: <CABkOF6Rx3FDzio8ynKwM=B68dTxrjh3XNKrF9Nf7nkO82HW_NQ@mail.gmail.com>

Hi all

    I attach two files for this problem. When i used iocp reactor with pb,
I noticed once the remote method returned a deferred object, the client app
would raise many exceptions..kinda weird.

It is ok to return the value directly (no defer)

 The most interested part is when I used select reactor, everything was
fine..I am not sure whether it is a bug on IOCP.

OS: windows 7 64 bit
py: 2.6.6 32bit
twisted version: 12.0.0

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120314/cf1e5bb3/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pb_bugs_client.py
Type: application/octet-stream
Size: 1061 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20120314/cf1e5bb3/attachment-0002.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pb_bugs_server.py
Type: application/octet-stream
Size: 479 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20120314/cf1e5bb3/attachment-0003.obj 

From exarkun at twistedmatrix.com  Wed Mar 14 12:32:22 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Mar 2012 16:32:22 -0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <9A4A540809FC414FB909E3C44D3A53C54AEF44C5@veles.kzps.si>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<9A4A540809FC414FB909E3C44D3A53C54AEF44C5@veles.kzps.si>
Message-ID: <20120314163222.12235.1906770271.divmod.xquotient.2@localhost6.localdomain6>

On 11:57 am, zoran.bosnjak at sloveniacontrol.si wrote:
>Hello all,
>Thanks for all your comments.
>
>I have filed a ticket regarding this issue:
>http://twistedmatrix.com/trac/ticket/5552
>
>I hope it will be accepted as a problem.

Hi Zoran,

Thanks for the follow-up.  We're already tracking this feature, so I've 
marked your ticket as a duplicate of the existing ticket:

    http://twistedmatrix.com/trac/ticket/2424

Jean-Paul


From itamar at itamarst.org  Wed Mar 14 17:52:55 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 14 Mar 2012 17:52:55 -0400
Subject: [Twisted-Python] Anyone still using Python 2.5?
In-Reply-To: <4F543DDE.8030303@itamarst.org>
References: <4F543DDE.8030303@itamarst.org>
Message-ID: <4F611337.6060507@itamarst.org>

I've opened a ticket to drop support for Python 2.5 *after* our next 
release: http://twistedmatrix.com/trac/ticket/5553

If this would be a major problem for you please comment on the ticket; 
just to clarify, regardless of the ticket's resolution the next release 
(12.1) will continue to support Python 2.5.

-Itamar


From penxiao at cisco.com  Wed Mar 14 22:34:10 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Thu, 15 Mar 2012 10:34:10 +0800
Subject: [Twisted-Python] Twisted Log Efficiency is poor?
Message-ID: <776373CB9C5EA544A476052F49F1DAE20287803B@XMB-HKG-41B.cisco.com>

Hi experts,

 

I have a question about twisted log.

I used ?from twisted.python import log? and ?log.msg(msg_str)? to store log for my twisted program (about 40MB log message)

But it?s efficiency is poor, it will take more time to finish my program when the log is open, if I close the log, the program will be more faster than before.

What is the problem?

What should I do?

 

 

Best

Regards,

 

Xiao Peng(??)

Cisco Systems

GSP-Beijing (China)

Office: +86 10 8507 7181

Mobile: +86 18600560077(preferred)

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120315/1a3dd95a/attachment.htm 

From dynamicgl at gmail.com  Thu Mar 15 02:33:04 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Thu, 15 Mar 2012 14:33:04 +0800
Subject: [Twisted-Python] a weird problem about IOCP reactor and
	perspective broker
In-Reply-To: <CABkOF6Rx3FDzio8ynKwM=B68dTxrjh3XNKrF9Nf7nkO82HW_NQ@mail.gmail.com>
References: <CABkOF6Rx3FDzio8ynKwM=B68dTxrjh3XNKrF9Nf7nkO82HW_NQ@mail.gmail.com>
Message-ID: <CABkOF6Rf7JYo_-A7mGLkfh4Wg_nZZR7Dyb4aUUqBuVC=McDOow@mail.gmail.com>

On Wed, Mar 14, 2012 at 10:04 PM, gelin yan <dynamicgl at gmail.com> wrote:

> Hi all
>
>     I attach two files for this problem. When i used iocp reactor with pb,
> I noticed once the remote method returned a deferred object, the client app
> would raise many exceptions..kinda weird.
>
> It is ok to return the value directly (no defer)
>
>  The most interested part is when I used select reactor, everything was
> fine..I am not sure whether it is a bug on IOCP.
>
> OS: windows 7 64 bit
> py: 2.6.6 32bit
> twisted version: 12.0.0
>
> Regards
>
> gelin yan
>

Hi All

    I guess the implementation of IOCP reactor has problems. I ran another
test with AMP. sending some chunks data and the program showed some errors
which didn't exist with select reactor.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120315/fa44d827/attachment.htm 

From dynamicgl at gmail.com  Thu Mar 15 10:54:57 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Thu, 15 Mar 2012 22:54:57 +0800
Subject: [Twisted-Python] Twisted Log Efficiency is poor?
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE20287803B@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE20287803B@XMB-HKG-41B.cisco.com>
Message-ID: <CABkOF6TsDAmRLvgQPZC98WW3V0_3-ZwEsFjz7jiQcHyuJQ0chw@mail.gmail.com>

2012/3/15 Peng Xiao -X (penxiao - Digital China at Cisco) <penxiao at cisco.com
>

> Hi experts,****
>
> ** **
>
> I have a question about twisted log.****
>
> I used ?from twisted.python import log? and ?log.msg(msg_str)? to store
> log for my twisted program (about 40MB log message)****
>
> But it?s efficiency is poor, it will take more time to finish my program
> when the log is open, if I close the log, the program will be more faster
> than before.****
>
> What is the problem?****
>
> What should I do?****
>
> ** **
>
> ** **
>
> Best****
>
> Regards,****
>
>  ****
>
> Xiao Peng(??)****
>
> Cisco Systems****
>
> GSP-Beijing (China)****
>
> Office: +86 10 8507 7181****
>
> Mobile: +86 18600560077(preferred)****
>
> ** **
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> Hi...If you log chunks data at once,, it definitely will chock your
reactor. I suggest split your data and log by using cooperate.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120315/d82bbc04/attachment.htm 

From exarkun at twistedmatrix.com  Thu Mar 15 12:20:44 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 15 Mar 2012 16:20:44 -0000
Subject: [Twisted-Python] Twisted Log Efficiency is poor?
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE20287803B@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE20287803B@XMB-HKG-41B.cisco.com>
Message-ID: <20120315162044.3216.139645284.divmod.xquotient.1@localhost6.localdomain6>

On 02:34 am, penxiao at cisco.com wrote:
>Hi experts,
>
>I have a question about twisted log.
>
>I used ?from twisted.python import log? and ?log.msg(msg_str)? to store 
>log for my twisted program (about 40MB log message)
>
>But it?s efficiency is poor, it will take more time to finish my 
>program when the log is open, if I close the log, the program will be 
>more faster than before.
>
>What is the problem?
>
>What should I do?

Why are you logging 40 megabyte messages?  That's not what the logging 
system is for.

Jean-Paul


From exarkun at twistedmatrix.com  Thu Mar 15 12:25:26 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 15 Mar 2012 16:25:26 -0000
Subject: [Twisted-Python] a weird problem about IOCP reactor and
 perspective broker
In-Reply-To: <CABkOF6Rf7JYo_-A7mGLkfh4Wg_nZZR7Dyb4aUUqBuVC=McDOow@mail.gmail.com>
References: <CABkOF6Rx3FDzio8ynKwM=B68dTxrjh3XNKrF9Nf7nkO82HW_NQ@mail.gmail.com>
	<CABkOF6Rf7JYo_-A7mGLkfh4Wg_nZZR7Dyb4aUUqBuVC=McDOow@mail.gmail.com>
Message-ID: <20120315162526.3216.560795216.divmod.xquotient.2@localhost6.localdomain6>

On 06:33 am, dynamicgl at gmail.com wrote:
>On Wed, Mar 14, 2012 at 10:04 PM, gelin yan <dynamicgl at gmail.com> 
>wrote:
>>Hi all
>>
>>     I attach two files for this problem. When i used iocp reactor with 
>>pb,
>>I noticed once the remote method returned a deferred object, the 
>>client app
>>would raise many exceptions..kinda weird.
>>
>>It is ok to return the value directly (no defer)
>>
>>  The most interested part is when I used select reactor, everything 
>>was
>>fine..I am not sure whether it is a bug on IOCP.
>>
>>OS: windows 7 64 bit
>>py: 2.6.6 32bit
>>twisted version: 12.0.0
>>
>>Regards
>>
>>gelin yan
>
>Hi All
>
>    I guess the implementation of IOCP reactor has problems. I ran 
>another
>test with AMP. sending some chunks data and the program showed some 
>errors
>which didn't exist with select reactor.

Please file a bug report in the issue tracker.

Jean-Paul


From plr.vincent at gmail.com  Fri Mar 16 15:56:40 2012
From: plr.vincent at gmail.com (Vincent Pelletier)
Date: Fri, 16 Mar 2012 20:56:40 +0100
Subject: [Twisted-Python] libusb-1 file descriptors
Message-ID: <201203162056.41353.plr.vincent@gmail.com>

Hi.

First, sorry for non-threaded reply. I found the thread on gmane while 
googling a bit.

I'll try to explain the design and intended use of python-libusb1 polling 
integration. I lack twisted knowledge to tell how it could be integrated, 
though.

As for the "poller" interface, it's python's select.poll interface.

Basically, libusb needs to be called into explicitly[1] whenever events 
needing some handling occur. It signals those events through a set of poll-
able file descriptors[2]. Alternatively (for OSes which cannot poll arbitrary 
file descriptors), LibUSBContext.getNextTimeout can be used to know for how 
long app can sleep (or do its own business) before next libusb event handling 
time... But that only works when libusb calls (transfer submission, 
synchronous or not) are all done in a single thread, otherwise they might last 
too long.

When several threads can simultaneously wait for events to occur (ex: a poller 
waiting on an asynchronous transfer with long timeout, then in a second thread 
a synchronous call expected to return quickly) a more complex scheme needs to 
be used. See libusb doc for the whole story.
In short, I decided to just write a stand-alone polling thread to support 
multi-thread access, as I couldn't figure a pythonic way of supporting several 
concurrent libusb-oriented pollers: C API relies on a mutable boolean-ish set 
by libusb code, and read by application code. As I try to never expose ctype 
instances to application code, and thought it should be enough to provide 
module user with a "start once, then forget" thread for handling this (much 
easier in python than in C), I went that way.
Besides the functions working with that boolean, I exposed all needed methods 
on LibUSBContext class, so different implementations can be done without 
hacking/working around, and hopefully without using libusb1 module directly 
(except for symbolic constants). I am opened to suggestions on how to expose 
the few missing functions in a pythonic way.

[1] LibUSBContext.handleEvents & co.
[2] LibUSBContext.getPollFDList, LibUSBContext.setPollFDNotifiers

Regards,
-- 
Vincent Pelletier


From dynamicgl at gmail.com  Sat Mar 17 01:29:32 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 17 Mar 2012 13:29:32 +0800
Subject: [Twisted-Python] a weird problem about IOCP reactor and
 perspective broker
In-Reply-To: <20120315162526.3216.560795216.divmod.xquotient.2@localhost6.localdomain6>
References: <CABkOF6Rx3FDzio8ynKwM=B68dTxrjh3XNKrF9Nf7nkO82HW_NQ@mail.gmail.com>
	<CABkOF6Rf7JYo_-A7mGLkfh4Wg_nZZR7Dyb4aUUqBuVC=McDOow@mail.gmail.com>
	<20120315162526.3216.560795216.divmod.xquotient.2@localhost6.localdomain6>
Message-ID: <CABkOF6Ts08atUx6BCdCFerbs=Pw_NMXpHsMNMYtMd0d7-+O4ng@mail.gmail.com>

On Fri, Mar 16, 2012 at 12:25 AM, <exarkun at twistedmatrix.com> wrote:

> On 06:33 am, dynamicgl at gmail.com wrote:
> >On Wed, Mar 14, 2012 at 10:04 PM, gelin yan <dynamicgl at gmail.com>
> >wrote:
> >>Hi all
> >>
> >>     I attach two files for this problem. When i used iocp reactor with
> >>pb,
> >>I noticed once the remote method returned a deferred object, the
> >>client app
> >>would raise many exceptions..kinda weird.
> >>
> >>It is ok to return the value directly (no defer)
> >>
> >>  The most interested part is when I used select reactor, everything
> >>was
> >>fine..I am not sure whether it is a bug on IOCP.
> >>
> >>OS: windows 7 64 bit
> >>py: 2.6.6 32bit
> >>twisted version: 12.0.0
> >>
> >>Regards
> >>
> >>gelin yan
> >
> >Hi All
> >
> >    I guess the implementation of IOCP reactor has problems. I ran
> >another
> >test with AMP. sending some chunks data and the program showed some
> >errors
> >which didn't exist with select reactor.
>
> Please file a bug report in the issue tracker.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi exarkun

    I have opened a ticket for this issue. Could you please delete #5561?
It is a duplicated to #5562. Thx.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120317/dcdee4d6/attachment.htm 

From itamar at itamarst.org  Sat Mar 17 07:53:43 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 17 Mar 2012 07:53:43 -0400
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
Message-ID: <4F647B47.1050805@itamarst.org>

On 03/16/2012 10:51 PM, dreid at wolfwood.twistedmatrix.com wrote:
> Author: dreid
> Date: Fri Mar 16 20:51:46 2012
> New Revision: 33889
>
> Added:
>     trunk/twisted/web/topfiles/5395.feature
>        - copied unchanged from r33888, /branches/elementresource-5395/twisted/web/topfiles/5395.feature
> Modified:
>     trunk/twisted/web/template.py
>     trunk/twisted/web/test/test_template.py

I notice no documentation was added. Perhaps we should start requiring 
documentation updates for all new features?


From itamar at itamarst.org  Sat Mar 17 20:53:48 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 17 Mar 2012 20:53:48 -0400
Subject: [Twisted-Python] "twistd web --port=9000" no longer works
Message-ID: <4F65321C.4030406@itamarst.org>

Apparently this was removed as part of deprecating the old strports 
syntax, but:

1) "twistd web --port=9000" never gave a deprecation warnings.

    itamar at blake:~$ twistd --version
    twistd (the Twisted daemon) 11.0.0
    Copyright (c) 2001-2011 Twisted Matrix Laboratories.
    See LICENSE for details.

    itamar at blake:~$ twistd -n web --port=9000 --path=/
    2012-03-17 20:50:21-0400 [-] Log opened.
    2012-03-17 20:50:21-0400 [-] twistd 11.0.0 (/usr/bin/python 2.7.2)
    starting up.
    2012-03-17 20:50:21-0400 [-] reactor class:
    twisted.internet.selectreactor.SelectReactor.
    2012-03-17 20:50:21-0400 [-] twisted.web.server.Site starting on 9000
    2012-03-17 20:50:21-0400 [-] Starting factory
    <twisted.web.server.Site instance at 0x180bd40>

2) The current --help just says " -p, --port=   strports description of 
the port to start the server on." It'll be completely unclear to users 
what that means.

I am tempted to revert the ticket that removed this functionality - can 
anyone tell me why we shouldn't?

In particular, before the removal should be re-merged again, the 
original syntax should be restored, along with decent --help. We should 
always support just giving the port number and defaulting to TCP. As it 
is, we've gone from a straightforward command line option that also had 
some sophisticated features to something that will break in a 
mysterious, hard to debug manner.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120317/767dff44/attachment.htm 

From hankshz at gmail.com  Sat Mar 17 21:01:49 2012
From: hankshz at gmail.com (hz hanks)
Date: Sat, 17 Mar 2012 18:01:49 -0700
Subject: [Twisted-Python] Problem about Multithread
Message-ID: <CAPerbByNYfmGCHX-FN5VhZi+4yoesZVAXV9Y4rhckWvZq0qwyQ@mail.gmail.com>

Hi, All

I just started Twisted and I've a problem when using it. I want to
write a program for both the client and the server that the client can
download something from the server. Therefore, I want every client and
server pair can use multithread to download the different parts of the
files at the same time in order to increase the download speed. But I
just know how to send simple message between server and client, such
as protocol.Protocol.dataReceived. Any one can give me some advice.
Very appreciated!

Best,
Hanks


From itamar at itamarst.org  Sat Mar 17 21:05:37 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 17 Mar 2012 21:05:37 -0400
Subject: [Twisted-Python] Problem about Multithread
In-Reply-To: <CAPerbByNYfmGCHX-FN5VhZi+4yoesZVAXV9Y4rhckWvZq0qwyQ@mail.gmail.com>
References: <CAPerbByNYfmGCHX-FN5VhZi+4yoesZVAXV9Y4rhckWvZq0qwyQ@mail.gmail.com>
Message-ID: <4F6534E1.4070508@itamarst.org>

On 03/17/2012 09:01 PM, hz hanks wrote:
> Hi, All
>
> I just started Twisted and I've a problem when using it. I want to
> write a program for both the client and the server that the client can
> download something from the server. Therefore, I want every client and
> server pair can use multithread to download the different parts of the
> files at the same time in order to increase the download speed. But I
> just know how to send simple message between server and client, such
> as protocol.Protocol.dataReceived. Any one can give me some advice.
> Very appreciated!

You don't need multiple threads to do multiple network operations (e.g. 
parallel downloads) in Twisted. Just run multiple client requests, e.g. 
by calling reactor.connectTCP multiple times.


From glyph at twistedmatrix.com  Sat Mar 17 21:47:24 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 17 Mar 2012 21:47:24 -0400
Subject: [Twisted-Python] "twistd web --port=9000" no longer works
In-Reply-To: <4F65321C.4030406@itamarst.org>
References: <4F65321C.4030406@itamarst.org>
Message-ID: <E612D2BB-8AEC-4D1F-B6FC-FE84CE9FF1C1@twistedmatrix.com>


On Mar 17, 2012, at 8:53 PM, Itamar Turner-Trauring wrote:

> Apparently this was removed as part of deprecating the old strports syntax, but:
> 
> 1) "twistd web --port=9000" never gave a deprecation warnings.

This is a problem for future user-visible feature deprecations: Python won't show you deprecation warnings any more unless you ask, so if a feature is deprecated in the user interface of something, we need a separate mechanism to alert the user of it.  The idea with most features is that trial will always show you all deprecation warnings, so you'll notice while running your tests :).

Somebody needs to go through and look at currently deprecated command-line features to ensure that this won't happen in the future - any volunteers?.
> itamar at blake:~$ twistd --version
> twistd (the Twisted daemon) 11.0.0
> Copyright (c) 2001-2011 Twisted Matrix Laboratories.
> See LICENSE for details.
> 
> itamar at blake:~$ twistd -n web --port=9000 --path=/
> 2012-03-17 20:50:21-0400 [-] Log opened.
> 2012-03-17 20:50:21-0400 [-] twistd 11.0.0 (/usr/bin/python 2.7.2) starting up.
> 2012-03-17 20:50:21-0400 [-] reactor class: twisted.internet.selectreactor.SelectReactor.
> 2012-03-17 20:50:21-0400 [-] twisted.web.server.Site starting on 9000
> 2012-03-17 20:50:21-0400 [-] Starting factory <twisted.web.server.Site instance at 0x180bd40>
> 
> 2) The current --help just says " -p, --port=   strports description of the port to start the server on." It'll be completely unclear to users what that means.

There should be a new ticket: --help-strports or something, and every option that takes one should refer to it, similar to --help-auth-types for cred plugins.

> I am tempted to revert the ticket that removed this functionality - can anyone tell me why we shouldn't?
> 
> In particular, before the removal should be re-merged again, the original syntax should be restored, along with decent --help. We should always support just giving the port number and defaulting to TCP. As it is, we've gone from a straightforward command line option that also had some sophisticated features to something that will break in a mysterious, hard to debug manner.

I am inclined to agree, sort of.  Currently, the plain integer will default to just IPv4.  An un-decorated integer really should (eventually) default to listening on all available interfaces, IPv4 and IPv6 together.

Jean-Paul managed to convince me in the review for http://twistedmatrix.com/trac/ticket/4473 that supporting raw integers made the implementation ugly, but reflecting upon this experience I think I was wrong, and that clarity of the user experience here is more important than clarity of the implementation.  I do still think that examples should move towards using 'tcp:80', though, so users might realize there's something other than 'tcp' that could go there.

I'm glad you noticed it: please go ahead and revert the removal.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120317/feb014e9/attachment.htm 

From glyph at twistedmatrix.com  Sat Mar 17 22:15:34 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 17 Mar 2012 22:15:34 -0400
Subject: [Twisted-Python] cfreactor and global state
In-Reply-To: <4F600621.30704@itamarst.org>
References: <4F600621.30704@itamarst.org>
Message-ID: <E85DA6DC-3245-454E-8EE4-E2897FB77126@twistedmatrix.com>

On Mar 13, 2012, at 10:44 PM, Itamar Turner-Trauring wrote:

> twisted.internet.test.reactormixins says:
> CFReactor uses APIs which manipulate global state, so it's not safe to run its own reactor-builder tests under itself.
> 
> We also don't have a buildslave running under cfreactor. Which means it's currently completely untested. I filed a ticket to fix that - https://bugs.launchpad.net/twisted-buildbot-configuration/+bug/954680

Not completely untested. If you search a recent OS X build log, for example <http://buildbot.twistedmatrix.com/builders/osx10.6-py2.6-select/builds/1952/steps/select/logs/stdio>, you will see lots of "_CFReactor" tests that pass.

Ironically a builder run under CFReactor itself will test less code related to the CFReactor, because it will only run the haphazard tests that test the global reactor by returning Deferreds rather than running the reactor.  But it does test different stuff, so there's value in having it run both ways.

> That still leaves the problem with global state though. Since we want to move towards having tests create new reactors, that's problematic. What global state does it manipulate, and what can we do about it?

It manipulates the CoreFoundation run loop for its thread.  Ironically, the reason that this is the case is that CF's API, much like Twisted itself, is not reentrant.  If you're interested, <http://developer.apple.com/library/mac/#documentation/CoreFoundation/Reference/CFRunLoopRef/Reference/reference.html> is a pretty comprehensive reference.

We can't really do anything about it unless we can make Twisted start a new thread for each reactorbuilder test and then destroy the thread at the end.  Or, unless we mock the whole CF API - which, honestly, isn't that hard, there aren't a ton of functions and they do pretty straightforward stuff.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120317/11c4f020/attachment.htm 

From glyph at twistedmatrix.com  Sat Mar 17 22:20:23 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 17 Mar 2012 22:20:23 -0400
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
	elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <4F647B47.1050805@itamarst.org>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
Message-ID: <A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>


On Mar 17, 2012, at 7:53 AM, Itamar Turner-Trauring wrote:

> On 03/16/2012 10:51 PM, dreid at wolfwood.twistedmatrix.com wrote:
>> Author: dreid
>> Date: Fri Mar 16 20:51:46 2012
>> New Revision: 33889
>> 
>> Added:
>>    trunk/twisted/web/topfiles/5395.feature
>>       - copied unchanged from r33888, /branches/elementresource-5395/twisted/web/topfiles/5395.feature
>> Modified:
>>    trunk/twisted/web/template.py
>>    trunk/twisted/web/test/test_template.py
> 
> I notice no documentation was added. Perhaps we should start requiring 
> documentation updates for all new features?

Before the ticket was closed, a separate ticket was filed for documentation: <http://twistedmatrix.com/trac/ticket/4983>.

I don't think that adding a hard requirement for documentation on every new thing as a prerequisite is necessarily a good idea (especially if a new contributor wants to add a feature, this adds to an already substantial burden), but someone should ask a question about documentation on any ticket that doesn't explicitly account for it, very early in the process.

-glyph



From exarkun at twistedmatrix.com  Sun Mar 18 00:05:31 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Mar 2012 04:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1332043531.31.920647481@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120318/926741d3/attachment-0001.htm 

From hankshz at gmail.com  Sun Mar 18 01:36:17 2012
From: hankshz at gmail.com (hz hanks)
Date: Sat, 17 Mar 2012 22:36:17 -0700
Subject: [Twisted-Python] Problem about Multithread
In-Reply-To: <4F6534E1.4070508@itamarst.org>
References: <CAPerbByNYfmGCHX-FN5VhZi+4yoesZVAXV9Y4rhckWvZq0qwyQ@mail.gmail.com>
	<4F6534E1.4070508@itamarst.org>
Message-ID: <CAPerbBz20ZYBup9106yH4LwzMORxdHvq3pX9o_Jbf7HGJnFZyg@mail.gmail.com>

Thank you so much for your instant reply.

Sorry for my ignorance, but could you tell how to have several
reactor.connectTCP calls. From the textbook I'm reading, I just know
that I can
first call
reactor.connectTCP(sys.argv[1], int(sys.argv[2]), stdioProxyFactory( ))
and then call
reactor.run( )
Do you mean I can call reactor.connectTCP(sys.argv[1],
int(sys.argv[2]), stdioProxyFactory( )) several times before calling
reactor.run( ) ? Then how my code determine which is the corresponding
connection?

Thank you so much. Waiting for your reply
Best,
Hanks



? Mar 17, 2012?6:05 PM?Itamar Turner-Trauring <itamar at itamarst.org> ???

> On 03/17/2012 09:01 PM, hz hanks wrote:
>> Hi, All
>>
>> I just started Twisted and I've a problem when using it. I want to
>> write a program for both the client and the server that the client can
>> download something from the server. Therefore, I want every client and
>> server pair can use multithread to download the different parts of the
>> files at the same time in order to increase the download speed. But I
>> just know how to send simple message between server and client, such
>> as protocol.Protocol.dataReceived. Any one can give me some advice.
>> Very appreciated!
>
> You don't need multiple threads to do multiple network operations (e.g.
> parallel downloads) in Twisted. Just run multiple client requests, e.g.
> by calling reactor.connectTCP multiple times.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Sun Mar 18 03:19:30 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 18 Mar 2012 03:19:30 -0400
Subject: [Twisted-Python] Problem about Multithread
In-Reply-To: <CAPerbBz20ZYBup9106yH4LwzMORxdHvq3pX9o_Jbf7HGJnFZyg@mail.gmail.com>
References: <CAPerbByNYfmGCHX-FN5VhZi+4yoesZVAXV9Y4rhckWvZq0qwyQ@mail.gmail.com>
	<4F6534E1.4070508@itamarst.org>
	<CAPerbBz20ZYBup9106yH4LwzMORxdHvq3pX9o_Jbf7HGJnFZyg@mail.gmail.com>
Message-ID: <F507F31B-9AE2-48AE-8E4F-5E0A902FD9A6@twistedmatrix.com>


On Mar 18, 2012, at 1:36 AM, hz hanks wrote:

> Thank you so much for your instant reply.
> 
> Sorry for my ignorance, but could you tell how to have several
> reactor.connectTCP calls. From the textbook I'm reading, I just know
> that I can
> first call
> reactor.connectTCP(sys.argv[1], int(sys.argv[2]), stdioProxyFactory( ))
> and then call
> reactor.run( )
> Do you mean I can call reactor.connectTCP(sys.argv[1],
> int(sys.argv[2]), stdioProxyFactory( )) several times before calling
> reactor.run( ) ?

Yes, that's the idea.

> Then how my code determine which is the corresponding
> connection?

Pass some arguments to stdioProxyFactory() and then you can refer to self.factory in your protocol.  It should then be easy to figure out which one is which.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120318/1a2e34a2/attachment.htm 

From exarkun at twistedmatrix.com  Sun Mar 18 09:36:53 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Mar 2012 13:36:53 -0000
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <4F647B47.1050805@itamarst.org>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
Message-ID: <20120318133653.3216.323029490.divmod.xquotient.16@localhost6.localdomain6>

On 17 Mar, 11:53 am, itamar at itamarst.org wrote:
>On 03/16/2012 10:51 PM, dreid at wolfwood.twistedmatrix.com wrote:
>>Author: dreid
>>Date: Fri Mar 16 20:51:46 2012
>>New Revision: 33889
>>
>>Added:
>>     trunk/twisted/web/topfiles/5395.feature
>>        - copied unchanged from r33888, 
>>/branches/elementresource-5395/twisted/web/topfiles/5395.feature
>>Modified:
>>     trunk/twisted/web/template.py
>>     trunk/twisted/web/test/test_template.py
>
>I notice no documentation was added. Perhaps we should start requiring
>documentation updates for all new features?

Yes.

Jean-Paul


From exarkun at twistedmatrix.com  Sun Mar 18 09:44:08 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Mar 2012 13:44:08 -0000
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
Message-ID: <20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>

On 02:20 am, glyph at twistedmatrix.com wrote:
>
>On Mar 17, 2012, at 7:53 AM, Itamar Turner-Trauring wrote:
>>On 03/16/2012 10:51 PM, dreid at wolfwood.twistedmatrix.com wrote:
>>>Author: dreid
>>>Date: Fri Mar 16 20:51:46 2012
>>>New Revision: 33889
>>>
>>>Added:
>>>    trunk/twisted/web/topfiles/5395.feature
>>>       - copied unchanged from r33888, 
>>>/branches/elementresource-5395/twisted/web/topfiles/5395.feature
>>>Modified:
>>>    trunk/twisted/web/template.py
>>>    trunk/twisted/web/test/test_template.py
>>
>>I notice no documentation was added. Perhaps we should start requiring
>>documentation updates for all new features?
>
>Before the ticket was closed, a separate ticket was filed for 
>documentation: <http://twistedmatrix.com/trac/ticket/4983>.
>
>I don't think that adding a hard requirement for documentation on every 
>new thing as a prerequisite is necessarily a good idea (especially if a 
>new contributor wants to add a feature, this adds to an already 
>substantial burden), but someone should ask a question about 
>documentation on any ticket that doesn't explicitly account for it, 
>very early in the process.

The way I feel about documentation now makes me read this much as I 
would read a different response to a different question.

You should be able to guess the question from my imagined response:

    I don't think that adding a hard requirement for unit tests on every 
new
    thing as a prerequisite is necessarily a good idea (especially if a 
new
    contributor wants to add a feature, this adds to an already 
substantial
    burden), but someone should ask a question about unit tests on any 
ticket
    that doesn't explicitly account for them, very early in the process.

As usual, I can't prove that writing documentation at the same time (or 
before) an implementation actually produces better results, but I can 
say that this is increasingly my opinion from my personal experience.

*Even* if requiring documentation cut feature contribution by half, I 
think it'd be worthwhile.  Some number of features, undocumented, are 
worth less than half as many with good documentation.

Plus, note that it was not a new contributor who finished this 
particular ticket. ;)

Also, note that http://twistedmatrix.com/trac/wiki/ReviewProcess already 
says, as "Things your branch must contain":

    Appropriate new or modified "End User" guide documentation (in the 
form
    of Lore-formatted xhtml files in the doc/ directory)

So essentially we do require this already, but reviewers seem to largely 
ignore it (so even if we decide this should not be a requirement, 
reviewers are not doing their job properly, and that's another issue we 
should address).
Jean-Paul


From wolfgang at rohdewald.de  Mon Mar 19 03:30:47 2012
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Mon, 19 Mar 2012 08:30:47 +0100
Subject: [Twisted-Python] unhandled error in example pb_client.py
Message-ID: <1391924.TvFz8DxG6C@i5>

this is twisted 11.0.0 on kubuntu 11.10

if I call

cd /usr/share/doc/python-twisted-words/examples/pb_client.py
python pb_client.py fdfdasfdfdas.com 1000 a b c

I am getting an unhandled error. Same for servers not answering
or rejecting.

how would I have to modify pb_client if I want to catch and
handle all errors?

my real-world problem is more complicated: In case of error I
show a modal Qt4 message box. This gives me interactions between
twisted and qt4reactor leading to infinite recursion. I can fix that
for DNS lookup failure and not answering servers by temporarily
disabling qt4reactor, but for rejecting servers I cannot get rid
of the unhandled error. But before tackling that, I want to 
understand how I can really catch and handle all errors.

when that works I will have one more problem: I my case
I have
class myClient(pb.PBClientFactory):
    def clientConnectionFailed(self, connector, reason):
        """connection from client to server failed"""
        print 'getErrorMessage:', repr(reason.getErrorMessage())

which gives me
"DNS lookup failed: address u'fdksfsfa0s0f.com' not found: [Errno -5] Zu 
diesem Hostnamen geh\xc3\xb6rt keine Adresse."

so it is translated to German. But pb_client.py returns english messages
if I insert and use myClient. $LANG is the same for both: de_DE.UTF-8
so why does pb_client not translate the message?

-- 
Wolfgang


From glyph at twistedmatrix.com  Mon Mar 19 17:10:27 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 19 Mar 2012 17:10:27 -0400
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
	elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
Message-ID: <1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>


On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:

> On 02:20 am, glyph at twistedmatrix.com wrote:
>> 
>> On Mar 17, 2012, at 7:53 AM, Itamar Turner-Trauring wrote:
>>> On 03/16/2012 10:51 PM, dreid at wolfwood.twistedmatrix.com wrote:
>>>> Author: dreid
>>>> Date: Fri Mar 16 20:51:46 2012
>>>> New Revision: 33889
>>>> 
>>>> Added:
>>>>   trunk/twisted/web/topfiles/5395.feature
>>>>      - copied unchanged from r33888, 
>>>> /branches/elementresource-5395/twisted/web/topfiles/5395.feature
>>>> Modified:
>>>>   trunk/twisted/web/template.py
>>>>   trunk/twisted/web/test/test_template.py
>>> 
>>> I notice no documentation was added. Perhaps we should start requiring
>>> documentation updates for all new features?
>> 
>> Before the ticket was closed, a separate ticket was filed for 
>> documentation: <http://twistedmatrix.com/trac/ticket/4983>.
>> 
>> I don't think that adding a hard requirement for documentation on every 
>> new thing as a prerequisite is necessarily a good idea (especially if a 
>> new contributor wants to add a feature, this adds to an already 
>> substantial burden), but someone should ask a question about 
>> documentation on any ticket that doesn't explicitly account for it, 
>> very early in the process.
> 
> The way I feel about documentation now makes me read this much as I 
> would read a different response to a different question.
> 
> You should be able to guess the question from my imagined response:
> 
>    I don't think that adding a hard requirement for unit tests on every new
>    thing as a prerequisite is necessarily a good idea (especially if a new
>    contributor wants to add a feature, this adds to an already substantial
>    burden), but someone should ask a question about unit tests on any ticket
>    that doesn't explicitly account for them, very early in the process.

Yes, yes, how droll :-P.

> As usual, I can't prove that writing documentation at the same time (or 
> before) an implementation actually produces better results, but I can 
> say that this is increasingly my opinion from my personal experience.
> 
> *Even* if requiring documentation cut feature contribution by half, I 
> think it'd be worthwhile.  Some number of features, undocumented, are 
> worth less than half as many with good documentation.

Actually I agree with that.  What we need is not more contributions, but more contributors (especially, more qualified reviewers).  I have the vague sense (which I also can't prove) that contributors stick around more often if they are able to successfully contribute something, and needing to become familiar with a new documentation toolchain in addition to a new testing toolchain is an impediment to that.  The flip side of that is that more contributors will probably show up in the first place if the documentation is better.  So I am somewhat ambivalent and am easily swayed by the argument that we already do apparently require it.  Still, I think we should try to bring it up as early as possible in the review process, and have better docs on how to author docs.

> Plus, note that it was not a new contributor who finished this 
> particular ticket. ;)

Re-attracting idle contributors has even more appeal, as maybe they'll remember how to review tickets :).

> Also, note that http://twistedmatrix.com/trac/wiki/ReviewProcess already 
> says, as "Things your branch must contain":
> 
>    Appropriate new or modified "End User" guide documentation (in the form
>    of Lore-formatted xhtml files in the doc/ directory)
> 
> So essentially we do require this already, but reviewers seem to largely 
> ignore it (so even if we decide this should not be a requirement, 
> reviewers are not doing their job properly, and that's another issue we 
> should address).
> Jean-Paul

Looks like some guy named "exarkun" was the passing reviewer on the ticket in question, maybe you should talk to him ;-).

-glyph



From glyph at twistedmatrix.com  Mon Mar 19 17:26:12 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 19 Mar 2012 17:26:12 -0400
Subject: [Twisted-Python] unhandled error in example pb_client.py
In-Reply-To: <1391924.TvFz8DxG6C@i5>
References: <1391924.TvFz8DxG6C@i5>
Message-ID: <9BB00141-5B35-4D25-B802-A780E493DAA4@twistedmatrix.com>


On Mar 19, 2012, at 3:30 AM, Wolfgang Rohdewald wrote:

> this is twisted 11.0.0 on kubuntu 11.10
> 
> if I call
> 
> cd /usr/share/doc/python-twisted-words/examples/pb_client.py
> python pb_client.py fdfdasfdfdas.com 1000 a b c
> 
> I am getting an unhandled error. Same for servers not answering
> or rejecting.
> 
> how would I have to modify pb_client if I want to catch and
> handle all errors?

"all" errors is a pretty broad category, so you'd have to do a whole bunch of things :).

The type of errors you're talking about are client connection errors.  The quickest way to catch those is to make your own subclass of PBClientFactory and implement clientConnectionFailed, which will be called each time there is an error in initially setting up a connection.

> my real-world problem is more complicated: In case of error I
> show a modal Qt4 message box. This gives me interactions between
> twisted and qt4reactor leading to infinite recursion. I can fix that
> for DNS lookup failure and not answering servers by temporarily
> disabling qt4reactor, but for rejecting servers I cannot get rid
> of the unhandled error. But before tackling that, I want to 
> understand how I can really catch and handle all errors.

That sounds like a bug in QT, a bug in QT4reactor, or perhaps just the general problem that modal dialog boxes with a blocking API are an inherently bad idea.  Without more detail though it's impossible to say what your problem really is.  My guess, though, would be to find a modal-dialog-box API that doesn't block or enter a reentrant main loop.

> when that works I will have one more problem: I my case
> I have
> class myClient(pb.PBClientFactory):
>    def clientConnectionFailed(self, connector, reason):
>        """connection from client to server failed"""
>        print 'getErrorMessage:', repr(reason.getErrorMessage())
> 
> which gives me
> "DNS lookup failed: address u'fdksfsfa0s0f.com' not found: [Errno -5] Zu 
> diesem Hostnamen geh\xc3\xb6rt keine Adresse."
> 
> so it is translated to German. But pb_client.py returns english messages
> if I insert and use myClient. $LANG is the same for both: de_DE.UTF-8
> so why does pb_client not translate the message?

Because "DNS lookup failed" and "address %r not found" are strings from Twisted, not from your operating system.  Twisted does not have any localizations, unfortunately.  Localizing all its error messages would be a major project, and a challenging one, as class names appear quite frequently in such messages and their names (such as "Failure") are all in english.

If you were interested in starting to localize Twisted though, I would definitely be interested to hear your thoughts on how it might be done.

-glyph

From kevin.horn at gmail.com  Tue Mar 20 08:43:06 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 20 Mar 2012 07:43:06 -0500
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
	<1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
Message-ID: <CA+U=zK1CfGz6tL9iCqXHSiTKvq7c2ih6AKRqq3ignEtaOn+YXg@mail.gmail.com>

On Mon, Mar 19, 2012 at 4:10 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:
>
> > Plus, note that it was not a new contributor who finished this
> > particular ticket. ;)
>
>
> Re-attracting idle contributors has even more appeal, as maybe they'll
> remember how to review tickets :).
>

Great.  Now I have guilt. :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120320/d17f57e6/attachment.htm 

From glyph at twistedmatrix.com  Tue Mar 20 09:52:27 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 20 Mar 2012 09:52:27 -0400
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
	elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <CA+U=zK1CfGz6tL9iCqXHSiTKvq7c2ih6AKRqq3ignEtaOn+YXg@mail.gmail.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
	<1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
	<CA+U=zK1CfGz6tL9iCqXHSiTKvq7c2ih6AKRqq3ignEtaOn+YXg@mail.gmail.com>
Message-ID: <F7B98A6A-E716-45E4-B3A4-EE192651F287@twistedmatrix.com>


On Mar 20, 2012, at 8:43 AM, Kevin Horn wrote:

> On Mon, Mar 19, 2012 at 4:10 PM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:
> 
> > Plus, note that it was not a new contributor who finished this
> > particular ticket. ;)
> 
> 
> Re-attracting idle contributors has even more appeal, as maybe they'll remember how to review tickets :).
> 
> Great.  Now I have guilt. :)

Not enough, apparently! :)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120320/ab248287/attachment.htm 

From kevin.horn at gmail.com  Tue Mar 20 10:35:46 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 20 Mar 2012 09:35:46 -0500
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <F7B98A6A-E716-45E4-B3A4-EE192651F287@twistedmatrix.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
	<1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
	<CA+U=zK1CfGz6tL9iCqXHSiTKvq7c2ih6AKRqq3ignEtaOn+YXg@mail.gmail.com>
	<F7B98A6A-E716-45E4-B3A4-EE192651F287@twistedmatrix.com>
Message-ID: <CA+U=zK0OhCWgaYJeLmGzJ1gHEQ32+etXrjRH4ZqPhGA-EXS49A@mail.gmail.com>

On Tue, Mar 20, 2012 at 8:52 AM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Mar 20, 2012, at 8:43 AM, Kevin Horn wrote:
>
> On Mon, Mar 19, 2012 at 4:10 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>> On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:
>>
>> > Plus, note that it was not a new contributor who finished this
>> > particular ticket. ;)
>>
>>
>> Re-attracting idle contributors has even more appeal, as maybe they'll
>> remember how to review tickets :).
>>
>
> Great.  Now I have guilt. :)
>
>
> Not enough, apparently! :)
>
>
Sadly, guilt pays better than Twisted. ;)

Seriously though, I will hopefully have some Twisted time "soon".
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120320/7b2e34a6/attachment.htm 

From uri.okrent at xtremio.com  Thu Mar 22 06:20:37 2012
From: uri.okrent at xtremio.com (Uri Okrent)
Date: Thu, 22 Mar 2012 12:20:37 +0200
Subject: [Twisted-Python] questions about twisted usage
Message-ID: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>

Hello all, I'm a twisted novice, but I was brought on to a project
where twisted is pretty heavily in use.  I'm running into all sorts of
issues that make me wonder if we're using twisted properly or as it
was intended.  I have been through the documentation, but I think I
need more in-depth answers.  So here are a bunch of general questions
about twisted.  Once I understand this stuff I think I might be able
to ask more cogent questions about my specific implementation (or
maybe understand why things are the way they are).

1. Is deferToThread running the function in a real python thread?
Should this be used (rather than a standard deferred) for any function
that might block?
2. I understand that deferreds run "later".  However, once a deferred
(or a deferToThread) is picked up and run, does it run from start to
finish?  Can it be interrupted in the middle of the function?  How
about its callback/errback?  Can another deferred jump in for
processing in between a deferred and it's callback/errback, or in the
middle of processing another deferred?
3. Are there any guarantees regarding the order of execution of
deferreds? (I.e., are deferreds processed in the order in which they
are created?)
4. Related to #2, and #3, does it make sense to use twisted when
requests that are serviced may depend on one another.  For example, a
client makes a request 'add-A' which is deferred (so that the server
can keep processing requests), and immediately afterwards makes a
request 'modify-A' (which is also run as a deferred).  Can I count on
add-A being done so that modify-A doesn't attempt to work on something
which hasn't been created yet?
5. Related to all of the above.  What If I want to modify a database
inside a deferred?  Is that incorrect usage?  Specifically, if all my
requests run as deferred, and they all start a transaction and the
beginning, and commit the transaction at the end, will I run into
problems due to context switching in the middle of deferreds? (such as
one request committing for both requests, starting two transactions in
a row, committing twice in a row, and so on.)

Thanks in advance.  Please let me know if I'm so off that my questions
don't even make sense =)


-- 
? Uri

Please consider the environment before printing this message.
http://wwf.panda.org/savepaper/


From tobias.oberstein at tavendo.de  Thu Mar 22 06:58:42 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 22 Mar 2012 03:58:42 -0700
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D42D5C0CA484@EXVMBX020-12.exch020.serverdata.net>

> 5. Related to all of the above.  What If I want to modify a database inside a
> deferred?  Is that incorrect usage?  Specifically, if all my requests run as

For database access, in general, you would follow

http://twistedmatrix.com/documents/current/core/howto/rdbms.html

This is a Twisted wrapper around the standard Python DBI API and
the canonical/recommended way of doing database stuff.

This applies to anything from SQLite to PostgreSQL and Oracle.

For PostgreSQL, I would also have a look at

https://github.com/oberstet/txpostgres

which is a drop-in replacement for

twisted.enterprise.adbapi

that makes use of the PostgreSQL protocol's native asynch features.

From tobias.oberstein at tavendo.de  Thu Mar 22 07:02:18 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 22 Mar 2012 04:02:18 -0700
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <634914A010D0B943A035D226786325D42D5C0CA484@EXVMBX020-12.exch020.serverdata.net>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<634914A010D0B943A035D226786325D42D5C0CA484@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <634914A010D0B943A035D226786325D42D5C0CA485@EXVMBX020-12.exch020.serverdata.net>

> For PostgreSQL, I would also have a look at
> 
> https://github.com/oberstet/txpostgres

sorry, wrong link .. use the original:

https://github.com/wulczer/txpostgres

not my forked stuff.


From tobias.oberstein at tavendo.de  Thu Mar 22 07:20:42 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 22 Mar 2012 04:20:42 -0700
Subject: [Twisted-Python] [ANN]: Autobahn WebSockets new release
Message-ID: <634914A010D0B943A035D226786325D42D5C0CA48C@EXVMBX020-12.exch020.serverdata.net>

New releases of AutobahnPython and AutobahnTestSuite completed:


AutobahnPython
==========================

Release 0.5.0 of AutobahnPython is done, including a bunch of new
features, improvements and some fixes:

WebSocket:

 - DoS protection: WS opening handshake timeouts (configurable)
 - DoS protection: failing TCP by drop vs abort (configurable)
 - performance: optimized buffer management
 - performance: optimized/pluggable frame maskers
 - performance: PyPy compatibility/testing
 - performance: IOCP/epoll/kqueue compatibility/testing
 - feature: prepareMessage/sendPreparedMessage
 - feature: for WSS clients, automatically create TLS context
 - feature: user agent WS support detection helper

WAMP:

 - feature: exclude/eligible lists for publish
 - feature: Welcome message implemented
 - performance: optimized msg dispatch to subscribers

Misc:

- polished / completed docs

Links:

 - Package: http://pypi.python.org/pypi/autobahn
 - Source: https://github.com/tavendo/AutobahnPython
 - Reference: http://autobahn.ws/developers/reference/python/index.html
 - Home (under construction): http://autobahn.ws/developers/autobahnpython


AutobahnTestSuite
==========================

New release of AutobahnTestSuite:

 - now comes completely packaged on PyPi
 - installs as a single tool: "wstest"
 - wstest includes 12 modes

The modes:

 - fuzzing: the known fuzzing client/server doing the WS test suite dance
 - echo: simple WS echo client and server for testing
 - broadcast: simple WS broadcast server and client driver for testing
 - testee: client and server to test Autobahn itself
 - wamp: test client and server for WAMP implementors

and

 - wsperfcontrol / wsperfmaster:

We have started collaborating with the WebSocket++ project (Peter Thorson) to build
a distributed WS load generator / performance testing tool.

This will allow running multiple instances of the "wsperf" load generator/probe
distributed both in LAN and WAN.

The probe will produce load / tests onto a testee target WS server.

AutobahnTestSuite will act as a controller for the probes, aggregate results,
produce web UI, ..

This thing is preliminary / still in the cooking .. but I think it has the potential to
take "WS testing" to the next level.

Links:
 - Package: http://pypi.python.org/pypi/autobahntestsuite
 - Source: https://github.com/tavendo/AutobahnTestSuite
 - Docs: http://autobahn.ws/testsuite
 - wsperf: http://www.zaphoyd.com/wsperf


Misc Pointers
==============

 - AutobahnTestSuite (the WebSocket testsuite) : has been split off into own repo / package
 - AutobahnJS (WAMP/JS implementation) : also was split off

An overview of all Autobahn related code repos on GitHub:
http://autobahn.ws/developers/code

A documentation of WAMP (The WebSocket Application Messaging Protocol)
- asynchronous RPC/PubSub over WebSocket is started on
http://wamp.ws/



From screwtape at froup.com  Thu Mar 22 07:37:14 2012
From: screwtape at froup.com (Tim Allen)
Date: Thu, 22 Mar 2012 22:37:14 +1100
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
Message-ID: <20120322113714.GB25379@boombah.thristian.org>

On Thu, Mar 22, 2012 at 12:20:37PM +0200, Uri Okrent wrote:
> 1. Is deferToThread running the function in a real python thread?
> Should this be used (rather than a standard deferred) for any function
> that might block?

Yes, deferToThread() runs things in a real Python thread. If you have
code that runs very quickly, or is written in Twisted's asynchronous
style (with Deferreds), you should be fine; if you have something that
takes a while to run you should use deferToThread().

> 2. I understand that deferreds run "later".  However, once a deferred
> (or a deferToThread) is picked up and run, does it run from start to
> finish?  Can it be interrupted in the middle of the function?  How
> about its callback/errback?  Can another deferred jump in for
> processing in between a deferred and it's callback/errback, or in the
> middle of processing another deferred?

A Deferred can wait on the result of other Deferreds; while one Deferred
is waiting (say, waiting for a timer to go off, or waiting for network
activity), others may be running. Each individual callback/errback
function is run in its entirety, though.

> 3. Are there any guarantees regarding the order of execution of
> deferreds? (I.e., are deferreds processed in the order in which they
> are created?)

Maybe, but whenever a Deferred waits on the result of another Deferred,
you're at the mercy of whatever they're waiting for.

For example, say you use Twisted to retrieve the contents of two
web-pages:

    getPage("http://a.example.com").addCallback(process_data)
    getPage("http://b.example.com").addCallback(process_data)

The request for "http://a.example.com" will be launched first, but if
that server takes longer to respond, process_data() might receive the
response from server B first.
	

> 4. Related to #2, and #3, does it make sense to use twisted when
> requests that are serviced may depend on one another.  For example, a
> client makes a request 'add-A' which is deferred (so that the server
> can keep processing requests), and immediately afterwards makes a
> request 'modify-A' (which is also run as a deferred).  Can I count on
> add-A being done so that modify-A doesn't attempt to work on something
> which hasn't been created yet?

In general, no. For example, if you get a request from the network that
causes you to send "insert into table" to the database, and meanwhile
get another request from the network that causes you to send "update
table" to the database, you have no way of knowing whether one will
complete before the other. Twisted's asynchronous database wrapper uses
a connection pool, so the two requests might be sent down separate
connections in parallel, so the database could actively prevent the
"update" from seeing the results of the "insert".

If you're getting stateful requests without any kind of stateful
framing (say, 'begin transaction'/'commit transaction' messages, or some
kind of session ID, or something like that), you have a problem Twisted
cannot help with.

If you *do* have some kind of session, you can set up your server so
that you have a DeferredSemaphore per session, which will ensure that
the next Deferred until you've finished with the previous one. For
example:

    ds = DeferredSemaphore()

    def got_message(msg):
	newDefer = ds.acquire()
	newDefer.addCallback(lambda _: processMsg(msg))
	newDefer.addBoth(lambda _: ds.release())
	

> 5. Related to all of the above.  What If I want to modify a database
> inside a deferred?  Is that incorrect usage?  Specifically, if all my
> requests run as deferred, and they all start a transaction and the
> beginning, and commit the transaction at the end, will I run into
> problems due to context switching in the middle of deferreds? (such as
> one request committing for both requests, starting two transactions in
> a row, committing twice in a row, and so on.)

As somebody else mentioned, what you want is twisted.enterprise.adbapi.
It maintains a connection pool, and every database call you make
(usually via the .runQuery() or .runOperation() methods) will be run in
a separate connection, so .commit() or .rollback() will be run on the
correct connection, and you won't have problems with cross-talk between
concurrent requests.


Tim.


From uri.okrent at xtremio.com  Thu Mar 22 08:05:28 2012
From: uri.okrent at xtremio.com (Uri Okrent)
Date: Thu, 22 Mar 2012 14:05:28 +0200
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <20120322113714.GB25379@boombah.thristian.org>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
Message-ID: <CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>

Thanks for the excellent responses guys.  So a couple more things...

On Thu, Mar 22, 2012 at 1:37 PM, Tim Allen <screwtape at froup.com> wrote:
> A Deferred can wait on the result of other Deferreds; while one Deferred
> is waiting (say, waiting for a timer to go off, or waiting for network
> activity), others may be running. Each individual callback/errback
> function is run in its entirety, though.

So when you say "others may be running" they are not truly running in
parallel, right?  They are time multiplexed or something?


> Maybe, but whenever a Deferred waits on the result of another Deferred,
> you're at the mercy of whatever they're waiting for.
>
> For example, say you use Twisted to retrieve the contents of two
> web-pages:
>
> ? ?getPage("http://a.example.com").addCallback(process_data)
> ? ?getPage("http://b.example.com").addCallback(process_data)
>
> The request for "http://a.example.com" will be launched first, but if
> that server takes longer to respond, process_data() might receive the
> response from server B first.

This implies that twisted can (and will) switch contexts from one
deferred to another even in the middle of execution of the first
deferred, correct?


> As somebody else mentioned, what you want is twisted.enterprise.adbapi.
> It maintains a connection pool, and every database call you make
> (usually via the .runQuery() or .runOperation() methods) will be run in
> a separate connection, so .commit() or .rollback() will be run on the
> correct connection, and you won't have problems with cross-talk between
> concurrent requests.

So what I didn't mention earlier because I wanted to keep my questions
simple, is we're already using sqlalchemy and its ORM so I don't think
I can use adbapi.  The way things have been working (and it's not so
scalable) is every request that does any kind of modification grabs a
global exclusive write lock, and any request the reads grabs a
non-exclusive read lock (multiple readers can hold the lock, but only
one writer can, and while a writer is holding it, no reading is
allowed).  This seems to be the crux of my difficulties...

In any case thanks for the responses!
-- 
? Uri

Please consider the environment before printing this message.
http://wwf.panda.org/savepaper/


From itamar at itamarst.org  Thu Mar 22 08:17:50 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 22 Mar 2012 08:17:50 -0400
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
Message-ID: <4F6B186E.3060301@itamarst.org>

On 03/22/2012 08:05 AM, Uri Okrent wrote:
> This implies that twisted can (and will) switch contexts from one
> deferred to another even in the middle of execution of the first
> deferred, correct?

No. Deferreds are just slightly nicer callbacks. They have nothing to do 
with the event loop, or scheduling, or context switching.


From ilja.livenson at gmail.com  Thu Mar 22 08:18:53 2012
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Thu, 22 Mar 2012 13:18:53 +0100
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
Message-ID: <CAF8QyE_RNm-dRz+CC9LBW87wucAt8o7tfKLueGO+_Aq-D0pzbA@mail.gmail.com>

Hi, Uri

> So what I didn't mention earlier because I wanted to keep my questions
> simple, is we're already using sqlalchemy and its ORM so I don't think
> I can use adbapi. ?The way things have been working (and it's not so
> scalable) is every request that does any kind of modification grabs a
> global exclusive write lock, and any request the reads grabs a
> non-exclusive read lock (multiple readers can hold the lock, but only
> one writer can, and while a writer is holding it, no reading is
> allowed). ?This seems to be the crux of my difficulties...

we have been stumbling on the same problems when using ZODB. The
current solution is to defer db operations to a threadpool. We also
have rdonly and rw transaction decorators, which can be used for
speeding up processing/custom logic. If you are interested, the code
is open: https://github.com/opennode/opennode-management/blob/master/opennode/oms/zodb/db.py

cheers,
Ilja

>
> In any case thanks for the responses!
> --
> ? Uri
>
> Please consider the environment before printing this message.
> http://wwf.panda.org/savepaper/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From uri.okrent at xtremio.com  Thu Mar 22 08:34:41 2012
From: uri.okrent at xtremio.com (Uri Okrent)
Date: Thu, 22 Mar 2012 14:34:41 +0200
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <4F6B186E.3060301@itamarst.org>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
	<4F6B186E.3060301@itamarst.org>
Message-ID: <CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>

On Thu, Mar 22, 2012 at 2:17 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On 03/22/2012 08:05 AM, Uri Okrent wrote:
>> This implies that twisted can (and will) switch contexts from one
>> deferred to another even in the middle of execution of the first
>> deferred, correct?
>
> No. Deferreds are just slightly nicer callbacks. They have nothing to do
> with the event loop, or scheduling, or context switching.

Maybe I should clarify my question:

thing = 0
def a():
    thing += 1
    thing += 1
    thing += 1
    thing += 1
    thing += 1

def b():
    thing = 0

def show_thing():
    print thing

a.addCallback(show_thing)
b.addCallback(show_thing)

given the two deferreds 'a' and 'b', with 'a' being called first, it
is possible for twisted to jump to 'b' in the middle of 'a' correct?
I.e., when show_thing runs after 'b' is finished it will always print
0 because thing was set to 0 by 'b', but when show_thing runs as the
callback for 'a', it will print something between 0 and 5 and it is
non-deterministic, because 'b' may have jumped in at some point during
the execution of 'a' and reset 'thing' back to 0.
-- 
? Uri

Please consider the environment before printing this message.
http://wwf.panda.org/savepaper/


From uri.okrent at xtremio.com  Thu Mar 22 08:36:29 2012
From: uri.okrent at xtremio.com (Uri Okrent)
Date: Thu, 22 Mar 2012 14:36:29 +0200
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAF8QyE_RNm-dRz+CC9LBW87wucAt8o7tfKLueGO+_Aq-D0pzbA@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
	<CAF8QyE_RNm-dRz+CC9LBW87wucAt8o7tfKLueGO+_Aq-D0pzbA@mail.gmail.com>
Message-ID: <CAB=FgnNQsxNoSwvOhK8UOzdChZXa-JkWb4TMPK_+eHU1_7o+0w@mail.gmail.com>

On Thu, Mar 22, 2012 at 2:18 PM, Ilja Livenson <ilja.livenson at gmail.com> wrote:
> we have been stumbling on the same problems when using ZODB. The
> current solution is to defer db operations to a threadpool. We also
> have rdonly and rw transaction decorators, which can be used for
> speeding up processing/custom logic. If you are interested, the code
> is open: https://github.com/opennode/opennode-management/blob/master/opennode/oms/zodb/db.py

cool thanks I will take a look
-- 
? Uri

Please consider the environment before printing this message.
http://wwf.panda.org/savepaper/


From orestis at orestis.gr  Thu Mar 22 08:40:04 2012
From: orestis at orestis.gr (Orestis Markou)
Date: Thu, 22 Mar 2012 12:40:04 +0000
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
	<4F6B186E.3060301@itamarst.org>
	<CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>
Message-ID: <E9676B39-1646-44B8-A881-2A4554CBD8E7@orestis.gr>


On 22 ??? 2012, at 12:34 ?.?., Uri Okrent wrote:

> On Thu, Mar 22, 2012 at 2:17 PM, Itamar Turner-Trauring
> <itamar at itamarst.org> wrote:
>> On 03/22/2012 08:05 AM, Uri Okrent wrote:
>>> This implies that twisted can (and will) switch contexts from one
>>> deferred to another even in the middle of execution of the first
>>> deferred, correct?
>> 
>> No. Deferreds are just slightly nicer callbacks. They have nothing to do
>> with the event loop, or scheduling, or context switching.
> 
> Maybe I should clarify my question:
> 
> thing = 0
> def a():
>    thing += 1
>    thing += 1
>    thing += 1
>    thing += 1
>    thing += 1
> 
> def b():
>    thing = 0
> 
> def show_thing():
>    print thing
> 
> a.addCallback(show_thing)
> b.addCallback(show_thing)
> 
> given the two deferreds 'a' and 'b', with 'a' being called first, it
> is possible for twisted to jump to 'b' in the middle of 'a' correct?
> I.e., when show_thing runs after 'b' is finished it will always print
> 0 because thing was set to 0 by 'b', but when show_thing runs as the
> callback for 'a', it will print something between 0 and 5 and it is
> non-deterministic, because 'b' may have jumped in at some point during
> the execution of 'a' and reset 'thing' back to 0.

No, Twisted runs everything in a single thread, there's no way a callback can be interrupted. In the above case you will see either 5 or 0, nothing in between.

(Nit - the above code will not compile or run, but I think your point made it across)

> -- 
>   Uri
> 
> Please consider the environment before printing this message.
> http://wwf.panda.org/savepaper/
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From screwtape at froup.com  Thu Mar 22 09:04:22 2012
From: screwtape at froup.com (Tim Allen)
Date: Fri, 23 Mar 2012 00:04:22 +1100
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
	<4F6B186E.3060301@itamarst.org>
	<CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>
Message-ID: <20120322130422.GC25379@boombah.thristian.org>

On Thu, Mar 22, 2012 at 02:34:41PM +0200, Uri Okrent wrote:
> Maybe I should clarify my question:
> 
> thing = 0
> def a():
>     thing += 1
>     thing += 1
>     thing += 1
>     thing += 1
>     thing += 1
> 
> def b():
>     thing = 0
> 
> def show_thing():
>     print thing
> 
> a.addCallback(show_thing)
> b.addCallback(show_thing)
> 
> given the two deferreds 'a' and 'b', with 'a' being called first, it
> is possible for twisted to jump to 'b' in the middle of 'a' correct?

No.

The situation above doesn't actually work because a and b don't return
Deferreds, but during the execution of a, it's the only thing running
(unless you have other threads running... but since Twisted is largely
a way of avoiding thread-programming, that's not often the case).

In the real world, things aren't so simple, because nobody writes
Deferreds for code that can just execute in a straight line. People use
Deferreds when they want to wait for some external event before going
further, and you generally don't have control over the order those
events occur in.

For example, here we have a function that does some work, then does
a deferred operation, then does some more work in the callback:

    thing = 0

    def a():
	global thing

	# Do some work.
	thing += 1

	# Cause some_db to do some work on another machine, or in
	# another thread, or something.
	d = some_db.do_work("a")

	def add_more(res):
	    global thing

	    thing += 1
	    thing += 1
	    thing += 1

	    return res

	# When some_db is done, call this callback.
	d.addBoth(add_more)

	# Do more work.
	thing += 1

	return d

    def b():
	d = some_db.do_work("b")

	def clear_thing(res):
	    global thing
	    thing = 0
	    return res

	d.addBoth(clear_thing)
	return d

The pattern of events would go like this:

- Initially, thing is 0.
- Somebody calls a(), which increments thing twice (under the comment
  "do some work" and "do more work", and launches a database call.
- thing is now 2.
- Somebody calls b(), which launches a different database call.
- Sometime later, the database gets back to us with an answer, and
  either a or b's callback will be fired first.
- If a's callback is fired before b's callback, thing will be
  incremented three more times then (some time later) set to 0.
- IF b's callback is fired before a's callback, thing will be set to 0,
  then (some time later) incremented 3 more times, resulting in 3.

So the only possible results are 0 and 3, because the 'synchronisation
points' are at the edges of callbacks. There's no way to get a result of
1 or 2, because a callback can't be interrupted while it's running
(again, unless threads are involved).


Tim.


From uri.okrent at xtremio.com  Thu Mar 22 10:09:16 2012
From: uri.okrent at xtremio.com (Uri Okrent)
Date: Thu, 22 Mar 2012 16:09:16 +0200
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <20120322130422.GC25379@boombah.thristian.org>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
	<4F6B186E.3060301@itamarst.org>
	<CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>
	<20120322130422.GC25379@boombah.thristian.org>
Message-ID: <CAB=FgnN4zw=SgwAeXdB=q0ukYzLCUjCpXZhEwnPvE_bp9TNhUg@mail.gmail.com>

On Thu, Mar 22, 2012 at 3:04 PM, Tim Allen <screwtape at froup.com> wrote:
> So the only possible results are 0 and 3, because the 'synchronisation
> points' are at the edges of callbacks.

Ok, awesome.  That's the bit that I couldn't quite understand.  Thanks!
-- 
? Uri

Please consider the environment before printing this message.
http://wwf.panda.org/savepaper/


From exarkun at twistedmatrix.com  Thu Mar 22 21:18:47 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 23 Mar 2012 01:18:47 -0000
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
	<1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
Message-ID: <20120323011847.7231.1996912015.divmod.xquotient.5@localhost6.localdomain6>

On 19 Mar, 09:10 pm, glyph at twistedmatrix.com wrote:
>
>On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:
>>So essentially we do require this already, but reviewers seem to 
>>largely
>>ignore it (so even if we decide this should not be a requirement,
>>reviewers are not doing their job properly, and that's another issue 
>>we
>>should address).
>>Jean-Paul
>
>Looks like some guy named "exarkun" was the passing reviewer on the 
>ticket in question, maybe you should talk to him ;-).

I can certainly make sure this doesn't happen again in the future. :)

Jean-Paul
>-glyph
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Thu Mar 22 22:06:08 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 22 Mar 2012 22:06:08 -0400
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
	elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <20120323011847.7231.1996912015.divmod.xquotient.5@localhost6.localdomain6>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
	<1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
	<20120323011847.7231.1996912015.divmod.xquotient.5@localhost6.localdomain6>
Message-ID: <C6592661-382B-4357-AEE2-EAD39CEB19A2@twistedmatrix.com>


On Mar 22, 2012, at 9:18 PM, exarkun at twistedmatrix.com wrote:

> On 19 Mar, 09:10 pm, glyph at twistedmatrix.com wrote:
>> 
>> On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:
>>> So essentially we do require this already, but reviewers seem to 
>>> largely
>>> ignore it (so even if we decide this should not be a requirement,
>>> reviewers are not doing their job properly, and that's another issue 
>>> we
>>> should address).
>>> Jean-Paul
>> 
>> Looks like some guy named "exarkun" was the passing reviewer on the 
>> ticket in question, maybe you should talk to him ;-).
> 
> I can certainly make sure this doesn't happen again in the future. :)

That reminds me, on the subject of documentation, perhaps this could use a little broader discussion:

What do you folks think of my feedback here, in review point 3 specifically?

	<http://twistedmatrix.com/trac/ticket/5248#comment:8>

There are lots of low-level features which get added only partially for their utility in their own right, and partially in support of more general, higher-level features in the future.  I think that in some cases (specifically, in low-level technical cases), it's better to really push for exhaustive reference documentation that explains the motivation of the feature in the API than to add narrative documentation which will potentially clutter the index with (initially) difficult and low-level ways to do something, and (later) TIMTOWTDI advice on how to accomplish the same thing that is better covered by a high level tool.

Another way to handle this situation would be to require narrative documentation initially for the low level features, then eliminate or obfuscate the path to it so that it's not directly present in the general index for its particular dot product[1] when the higher-level feature arrives, or it's present in an obviously de-emphasized section that readers won't find first.  This seems like makework to me, but then, experience generally points to the fact that some of these low-level APIs will be available for years and years while the dreamt-of high-level utopia never arrives.  (c.f. inotify vs. listenFilesystem, IRCClient vs. a truly general, well-documented twisted.words.im, etc)

My current feeling is that people who know that they need to, for example, hand a pre-existing listening socket to the Twisted reactor on a POSIX platform probably know enough about what they're doing to easily find it in the reference documentation.  But I can also see the point of "we should just have lore docs for everything, always", sort of.

So: thoughts?

-glyph

[1]: I'm bringing it back!  <http://tm.tl/2372>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120322/31dee9e3/attachment.htm 

From dynamicgl at gmail.com  Fri Mar 23 01:48:33 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Fri, 23 Mar 2012 13:48:33 +0800
Subject: [Twisted-Python] when will failure.Failure() be a problem?
Message-ID: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>

Hi All

 As regards issues like #5567 & #4219, Failure object creation is not
thread safe. I use deferToThread daily due to many blocking apis still have
to be used in my system. I looked into the code and noticed there is a
global count used in Failure.__init__. An increment will be made for every
__init__ invoke. I consider it is one part can be treated as thread unsafe.

   Because I didn't use Failure() besides of logging exec_info and didn't
meet any crash issue related to Failure() so I consider it is not a serious
problem. I am curious who has experience like system crash or data
corruption with Failure.


Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120323/5aa0f4cf/attachment.htm 

From itamar at itamarst.org  Fri Mar 23 08:28:11 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 23 Mar 2012 08:28:11 -0400
Subject: [Twisted-Python] when will failure.Failure() be a problem?
In-Reply-To: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>
References: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>
Message-ID: <4F6C6C5B.1020601@itamarst.org>

On 03/23/2012 01:48 AM, gelin yan wrote:
> Hi All
>
>  As regards issues like #5567 & #4219, Failure object creation is not 
> thread safe. I use deferToThread daily due to many blocking apis still 
> have to be used in my system. I looked into the code and noticed there 
> is a global count used in Failure.__init__. An increment will be made 
> for every __init__ invoke. I consider it is one part can be treated as 
> thread unsafe.

It's not thread-safe... but the count is only used to display messages 
in certain particular cases, and all it means is that the count may be 
slightly off, or two Failure might have same count. It will not corrupt 
anything, or causes exceptions or crashes of any sort - it's a *very* 
minor bug.


From itamar at itamarst.org  Fri Mar 23 08:30:17 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 23 Mar 2012 08:30:17 -0400
Subject: [Twisted-Python] when will failure.Failure() be a problem?
In-Reply-To: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>
References: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>
Message-ID: <4F6C6CD9.3080605@itamarst.org>

On 03/23/2012 01:48 AM, gelin yan wrote:
> Hi All
>
>  As regards issues like #5567 & #4219, Failure object creation is not 
> thread safe. I use deferToThread daily due to many blocking apis still 
> have to be used in my system. I looked into the code and noticed there 
> is a global count used in Failure.__init__. An increment will be made 
> for every __init__ invoke. I consider it is one part can be treated as 
> thread unsafe.
Oh, and the pdb thing mentioned in 4219 only happens in debug mode, 
which won't be used in production (don't want pdb sessions in a live 
application!).




From glyph at twistedmatrix.com  Fri Mar 23 16:18:45 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 23 Mar 2012 16:18:45 -0400
Subject: [Twisted-Python] when will failure.Failure() be a problem?
In-Reply-To: <4F6C6CD9.3080605@itamarst.org>
References: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>
	<4F6C6CD9.3080605@itamarst.org>
Message-ID: <74716368-28F5-4486-BC09-FB9B62FD98E7@twistedmatrix.com>


On Mar 23, 2012, at 8:30 AM, Itamar Turner-Trauring wrote:

> On 03/23/2012 01:48 AM, gelin yan wrote:
>> Hi All
>> 
>> As regards issues like #5567 & #4219, Failure object creation is not 
>> thread safe. I use deferToThread daily due to many blocking apis still 
>> have to be used in my system. I looked into the code and noticed there 
>> is a global count used in Failure.__init__. An increment will be made 
>> for every __init__ invoke. I consider it is one part can be treated as 
>> thread unsafe.
> 
> Oh, and the pdb thing mentioned in 4219 only happens in debug mode, 
> which won't be used in production (don't want pdb sessions in a live 
> application!).

Also, the PDB bug is only a problem because PDB itself isn't thread safe.  Python has support for threads; the fact that its built-in debugger doesn't should be mildly embarrassing for those who maintain it :).  But there are thread-safe debuggers out there that rely on more structured things than whatever stdio happens to be doing at the time; we should probably support some of those.

There's a list on <http://wiki.python.org/moin/PythonDebuggers> if anyone is interested in improving Twisted's debugging support...

-glyph

From exarkun at twistedmatrix.com  Sun Mar 25 00:05:37 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Mar 2012 04:05:37 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1332648337.97.1956591928@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120325/54a0c783/attachment.htm 

From _ at lvh.cc  Sun Mar 25 17:02:12 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 25 Mar 2012 23:02:12 +0200
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
Message-ID: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>

Hi,


I'm trying to find out if there's a reasonable way to mimic a blocking API
with an existing non-blocking API. I want to do this so I can write
doctests.

For example, I want to make a remote AMP call. It returns a deferred.
Instead of returning a deferred, I want it to block until the deferred
fires.

The "obvious" way to do this would be to run the reactor in a different
thread. This would not be necessary if the reactor were restartable, but it
ain't.

I've found at least one mailing list issue where someone wanted something
similar, but did not see a resolution.

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120325/71b55044/attachment.htm 

From itamar at itamarst.org  Sun Mar 25 17:44:27 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 25 Mar 2012 17:44:27 -0400
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
Message-ID: <4F6F91BB.3040203@itamarst.org>

On 03/25/2012 05:02 PM, Laurens Van Houtven wrote:
> Hi,
>
>
> I'm trying to find out if there's a reasonable way to mimic a blocking 
> API with an existing non-blocking API. I want to do this so I can 
> write doctests.
>
> For example, I want to make a remote AMP call. It returns a deferred. 
> Instead of returning a deferred, I want it to block until the deferred 
> fires.
Doctests are supposed to document and test, or perhaps have tested 
documentation. If the API you're presenting doesn't match actual usage, 
that's bad documentation...


From _ at lvh.cc  Sun Mar 25 19:54:50 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 26 Mar 2012 01:54:50 +0200
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <4F6F91BB.3040203@itamarst.org>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
	<4F6F91BB.3040203@itamarst.org>
Message-ID: <2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>

The thing I'm documenting is a server, I'm documenting it by interacting with it as a client. I realize that doesn't entirely detract from your point -- you might still be introducing problems that would not affect a "real" client.

My intention is to write BDD-ish stuff (except not with the usual cucumber-style scenario text).

cheers
lvh


On 25 Mar 2012, at 23:44, Itamar Turner-Trauring wrote:

> On 03/25/2012 05:02 PM, Laurens Van Houtven wrote:
>> Hi,
>> 
>> 
>> I'm trying to find out if there's a reasonable way to mimic a blocking 
>> API with an existing non-blocking API. I want to do this so I can 
>> write doctests.
>> 
>> For example, I want to make a remote AMP call. It returns a deferred. 
>> Instead of returning a deferred, I want it to block until the deferred 
>> fires.
> Doctests are supposed to document and test, or perhaps have tested 
> documentation. If the API you're presenting doesn't match actual usage, 
> that's bad documentation...
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From itamar at itamarst.org  Sun Mar 25 20:03:02 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 25 Mar 2012 20:03:02 -0400
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
	<4F6F91BB.3040203@itamarst.org>
	<2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
Message-ID: <4F6FB236.6020700@itamarst.org>

On 03/25/2012 07:54 PM, Laurens Van Houtven wrote:
> The thing I'm documenting is a server, I'm documenting it by interacting with it as a client. I realize that doesn't entirely detract from your point -- you might still be introducing problems that would not affect a "real" client.
>
> My intention is to write BDD-ish stuff (except not with the usual cucumber-style scenario text).

This might be workable if the protocol is synchronous: send request, get 
back response. This wouldn't work e.g. for a chat protocol. I bet you 
could do something horrible where the doctest gets wrapped in an 
inlineCallbacks wrapper, and then you can yield Deferreds.


From corydodt at twistedmatrix.com  Sun Mar 25 20:16:53 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Sun, 25 Mar 2012 20:16:53 -0400
Subject: [Twisted-Python] Start New Employment Today
Message-ID: <E38D28A5B0591CC1A4C08503A160ECA2@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Garland at jobdayseu.com,with your personal identification number for this position IDNO: 3315


From glyph at twistedmatrix.com  Sun Mar 25 21:23:46 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Mar 2012 21:23:46 -0400
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <4F6FB236.6020700@itamarst.org>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
	<4F6F91BB.3040203@itamarst.org>
	<2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
	<4F6FB236.6020700@itamarst.org>
Message-ID: <16C527FC-4E1E-4A0E-A5B3-73935D62C917@twistedmatrix.com>


On Mar 25, 2012, at 8:03 PM, Itamar Turner-Trauring wrote:

> On 03/25/2012 07:54 PM, Laurens Van Houtven wrote:
>> The thing I'm documenting is a server, I'm documenting it by interacting with it as a client. I realize that doesn't entirely detract from your point -- you might still be introducing problems that would not affect a "real" client.
>> 
>> My intention is to write BDD-ish stuff (except not with the usual cucumber-style scenario text).
> 
> This might be workable if the protocol is synchronous: send request, get 
> back response. This wouldn't work e.g. for a chat protocol. I bet you 
> could do something horrible where the doctest gets wrapped in an 
> inlineCallbacks wrapper, and then you can yield Deferreds.

You can also just call back the relevant deferreds synchronously within your doctest, and print things when they fire.  Given that your doctests will have to explicitly specify the response events being fired anyway, this is probably the best way to go.

-glyph

From penxiao at cisco.com  Sun Mar 25 21:24:46 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Mon, 26 Mar 2012 09:24:46 +0800
Subject: [Twisted-Python] How to use multi-core CPU in Twisted
Message-ID: <776373CB9C5EA544A476052F49F1DAE20296D238@XMB-HKG-41B.cisco.com>

Hi experts

 

I want to use multi-core of CPU in twisted for parallel programming.

Could anyone tell me how to archive that?

Very thanks.

 

Best

Regards,

 

Xiao Peng

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120326/b5fb1d44/attachment.htm 

From maillists at ergo-pc.net  Sun Mar 25 21:27:42 2012
From: maillists at ergo-pc.net (Paul Reznicek)
Date: Mon, 26 Mar 2012 03:27:42 +0200
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
	<4F6F91BB.3040203@itamarst.org>
	<2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
Message-ID: <4F6FC60E.6060503@ergo-pc.net>

Hello,
I have similar needs and did not found usable answers, so I wrote some
q&d hacks for doctests and also for UI interactions, where the user should
be blocked until something in non-blocking deferred finish or "time-outed".

Below hacks are working with twisted 10.0.0, no idea about more actual versions.

1. Multiple start/stop of reactor during doctests works when using "reactor.crash"
   Example - 2 tested class methods in one class:
# ---------------------
def method_a(self, parm):
    '''
    >>> g = GateWay('TEST')
    >>> s1 = reactor.callWhenRunning(lambda: print(g.method_a('X') ) )
    >>> s2 = reactor.callWhenRunning(lambda: print(g.method_a('Y') ) )
    >>> s3 = reactor.callWhenRunning(lambda: print(g.method_a('Z') ) )
    >>> s0 = reactor.callLater(11.1, reactor.crash); reactor.run()  # doctest:+ELLIPSIS
    {u'result of X...}
    {u'result of Y...}
    {u'result of Z...}
    '''
    [code]

def method_b(self):
    >>> g = GateWay('TEST')
    >>> s1 = reactor.callWhenRunning(lambda: print(g.method_b() ) )
    >>> s0 = reactor.callLater(5.1, reactor.crash); reactor.run()   # doctest:+ELLIPSIS
    {u'bytes': ..., u'packets': ..., u'duration': ...}
    '''
    [code]
# ---------------------
This way, it is possible to use doctests with reactor start/stop in several
methods/functions in a class/module and also in external doctests files.


2. Sleep w/o blocking reactor:
# ---------------------
def nonBlockingSleep(delay):
    '''Hack to allow sleep for a period of time w/o blocking the reactor
    Do *block* the caller for `delay` seconds.
    '''
    if delay > 90:
        print('WARNING nonBlockingSleep delay={0} sec. dangerous, reset to 90s'.format(delay) )
        delay = 90.0
    toTime = time.time() + delay
    while toTime >= time.time():
        try:
            reactor.iterate(0.055)
        except Exception as err:
            pass
        time.sleep(0.001)
# ---------------------
The values of .iterate() and .sleep() are the best, I found.
time.sleep(0.001) is important, it is not reliable w/o + CPU load is high.


3. Wait until deferred return a result or timeout expire
# ---------------------
def sleepUntilDFRDresult(dfrd, timeout=60):
    '''Hack to make non-blocking deferred waiting for its result or error for
    in `timeout` specified number of seconds, but not to block reactor loop.
    This wrapper *block* the caller until deferred.result or timeout appears.

    >>> dfrd = defer.Deferred() #.addBoth(cbReactorStop)
    >>> sleepUntilDFRDresult(dfrd)       # doctest:+ELLIPSIS
    Exception(u'ERROR sleepUntilDFRDresult server not running for: <Deferred at 0x...> from <doctest
__main__/<module> #L1',)

    >>> startTime = time.time()
    >>> f = lambda: print(sleepUntilDFRDresult(dfrd, timeout=999), 'in:', time.time()-startTime,
'sec.' )
    >>> s1 = reactor.callWhenRunning( f );
    >>> dc2 = reactor.callLater(2, dfrd.callback, 'CALLED')
    >>> dc0 = reactor.callLater(3, reactor.crash); reactor.run()   # doctest:+ELLIPSIS
    WARNING sleepUntilDFRDresult timeout=999 sec. dangerous
    CALLED in: 2.0... sec.
    '''
    if timeout > 600:
        print('WARNING sleepUntilDFRDresult timeout={0} sec. dangerous'.format(timeout) )

    err = None
    if not isinstance(dfrd, defer.Deferred):
        err = 'ERROR sleepUntilDFRDresult dfrd "{0}" not Deferred: '.format(type(dfrd))
    elif not reactor.running:
        err = 'ERROR sleepUntilDFRDresult server not running for: '
    else:
        toTime = time.time() + timeout
        while not dfrd.called and toTime >= time.time():
            try:
                reactor.iterate(0.055)
            except Exception as err:
                pass
            Htime.sleep(0.001)
        if dfrd.called and hasattr(dfrd, 'result'):
            return dfrd.result
    func_name, module_name, line_no = tools.getCallerNameLocation()
    repr_dfrd = '{0} from {2}/{1} #L{3}'.format(dfrd, func_name, module_name, line_no)
    err = Exception( (err or 'ERROR TIMEOUT sleepUntilDFRDresult for: ') + repr_dfrd )
##     print(err)
    return err
# ---------------------
This hack is not 100% reliable, but I did not found a better solution.
There is sometime an "Already called..." error in the logs, when server is under
high load with lot of connections, but since around 2 years I did not observed
a data loss or other severer problem.

I hope it helps.
If somebody have a better (less "hacky") solution for above 3 tasks,
please send it to this list.

Regards
Paul

Laurens Van Houtven wrote:
> The thing I'm documenting is a server, I'm documenting it by interacting with it as a client. I realize that doesn't entirely detract from your point -- you might still be introducing problems that would not affect a "real" client.
> 
> My intention is to write BDD-ish stuff (except not with the usual cucumber-style scenario text).
> 
> cheers
> lvh
> 
> 
> On 25 Mar 2012, at 23:44, Itamar Turner-Trauring wrote:
> 
>> On 03/25/2012 05:02 PM, Laurens Van Houtven wrote:
>>> Hi,
>>>
>>>
>>> I'm trying to find out if there's a reasonable way to mimic a blocking 
>>> API with an existing non-blocking API. I want to do this so I can 
>>> write doctests.
>>>
>>> For example, I want to make a remote AMP call. It returns a deferred. 
>>> Instead of returning a deferred, I want it to block until the deferred 
>>> fires.
>> Doctests are supposed to document and test, or perhaps have tested 
>> documentation. If the API you're presenting doesn't match actual usage, 
>> that's bad documentation...


From glyph at twistedmatrix.com  Sun Mar 25 21:52:12 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Mar 2012 21:52:12 -0400
Subject: [Twisted-Python] How to use multi-core CPU in Twisted
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE20296D238@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE20296D238@XMB-HKG-41B.cisco.com>
Message-ID: <5F2076D9-93FE-49F0-AEB4-FEF9A2E8B2F4@twistedmatrix.com>


On Mar 25, 2012, at 9:24 PM, Peng Xiao -X (penxiao - Digital China at Cisco) wrote:

> Hi experts
>  
> I want to use multi-core of CPU in twisted for parallel programming.
> Could anyone tell me how to archive that?
> Very thanks.
>  
> Best
> Regards,
>  
> Xiao Peng

There are many different ways, depending on your application.

Generally, some use of spawnProcess is the current best practice.

You might also want to look at a process pool, like <https://launchpad.net/ampoule> to make things a little easier.

Good luck!  This is an area where there are several features in development to make it easier, but it shouldn't be too hard even today. (In the future, we hope that it will eventually be almost automatic.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120325/c1c51b7f/attachment.htm 

From glyph at twistedmatrix.com  Sun Mar 25 21:54:38 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Mar 2012 21:54:38 -0400
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <4F6FC60E.6060503@ergo-pc.net>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
	<4F6F91BB.3040203@itamarst.org>
	<2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
	<4F6FC60E.6060503@ergo-pc.net>
Message-ID: <F1963650-BA03-46A8-B925-92361DDD6074@twistedmatrix.com>


On Mar 25, 2012, at 9:27 PM, Paul Reznicek wrote:

> I have similar needs and did not found usable answers, so I wrote some
> q&d hacks for doctests and also for UI interactions, where the user should
> be blocked until something in non-blocking deferred finish or "time-outed".

These hacks are all pretty awful, and you generally shouldn't use them.

For doctests, I don't know that you can do much better (although doing what I said, and structuring your code so that the doctests can explicitly fire in-memory Deferreds or make callbacks directly instead of spinning the reactor, would be a better idea).

(Bottom line: don't use doctests.)

For user interactions, if you want to pause the ability of a user to perform certain interactions, explicitly pause or disable those interactions.  Pretty much every GUI toolkit has a way to disable or grey out certain controls, and you should use those APIs rather than entering a broken re-entrant main loop with unsupported APIs.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120325/6537cb60/attachment.htm 

From penxiao at cisco.com  Sun Mar 25 21:59:52 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Mon, 26 Mar 2012 09:59:52 +0800
Subject: [Twisted-Python] Did anyone use pprocess before?
Message-ID: <776373CB9C5EA544A476052F49F1DAE20296D272@XMB-HKG-41B.cisco.com>

Hi experts,

I have a question about pprocess module.

When I use:

 

time1 = time.time()

results = pprocess.pmap(calculate, sequence, limit=limit)

time2= time.time()

# Show the results.

for result in results[i*N:i*N+N]:

pass

time3 = time.time()

 

I found

time2 - time1 = 0.8 seconds,

but time3 - time2 = 7 seconds.

calculate the results is very fast, but when I use for loop to get the
result from the results, it's slow, why?

Does anyone know this? very thanks.

 

 

 

Best

Regards,

 

Xiao Peng

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120326/bd12f032/attachment.htm 

From glyph at twistedmatrix.com  Sun Mar 25 22:11:52 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Mar 2012 22:11:52 -0400
Subject: [Twisted-Python] the good, the log, and the ugly
Message-ID: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>

Right now, we have a pretty bad logging idiom.  All over Twisted, you'll find stuff like this:

log.msg("twistd %s (%s %s) starting up." % (copyright.version,
                                            sys.executable,
                                            runtime.shortPythonVersion()))
...
log.msg("Loading %s..." % filename)
...
log.msg("Received unhandled keyID: %r" % (keyID,))

In other words, log messages that take structured information, but then smash it into a not-particularly-distinctive string and spit it out into a line-delimited file.

The Twisted log system has, from its very beginning, supported a better style of formatting, which is:

log.msg(format="twistd %(version)s (%(executable)s %(short)s) starting up.",
        version=copyright.version, executable=sys.executable,
        short=runtime.shortPythonVersion()))
...
log.msg(format="Loading %(filename)s...", filename=filename)
...
log.msg(format="Received unhandled keyID: %(keyID)r", keyID=keyID)

There are lots of other features which this style of logging could support, as well, with relatively minor tweaks, such as trivial enhancements like:

def logger(module, audience, importance):
    def logIt(**kw):
        log.msg(module=module, audience=audience, importance=importance, **kw)
    return logIt
...
info = logger(__name__, ADMIN, NORMAL)
bugreport = logger(__name__, DEVEL, HIGH)
debug = logger(__name__, DEVEL, LOW)
...
info(format="twistd %(version)s (%(executable)s %(short)s) starting up.",
     version=copyright.version, executable=sys.executable,
     short=runtime.shortPythonVersion()))

This would then allow us to build systems which internally filter messages, avoid expensive string formatting and copying when it's not necessary, tune logging to different levels for different parts of the package hierarchy, and have intelligent real-time log analysis that inspects the objects being logged without having to apply regexes or other static-string-inspection methods to figure out which messages are interesting.  Calendar Server implements some of these features for its logging system, and they've been very useful there.  Various Divmod projects have implemented run-time statistics tracking via that Twisted logging system, and that worked pretty well too.  It would be good to start taking advantage of the good parts of Twisted's logging system within Twisted itself.

Doing this in a consistent way would also open up the possibility of localizing our log messages, which is currently not really plausible.  And also, of logging in a format which lost less information; for example, instead of actually doing textToEventDict, simply dumping a simplified form of the event dict itself to some structured format that could be reliably parsed ? something like JSON ? for easier parsing and analysis later.

However, in order to be able to take advantage of these features when they're added, we need to start avoiding premature string formatting everywhere that we can today.  If you're writing log messages within twisted (or within a twisted application or library) please adopt the format=, x=, y= style of logging messages so that log observers can actually see into the objects being logged and do interesting things with them.

We should also file some tickets about improving the documentation to indicate this style, for writing a new interface to logging which mandates this style, and for adding layers on top of that to provide more useful functionality like the aforementioned per-module or per-audience filtering.  I have long despaired of filing such tickets because they each seem like boil-the-ocean tasks, changing every single call-site of log.msg (there are more than 500 as of today, just in Twisted itself, and thousands more in other applications I'm sure).

I'm going to try to get started on record my desired behavior for logging as tickets soon though, so Twisted can at least have some really good logging tools eventually.  

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120325/61bc8a48/attachment-0001.htm 

From corydodt at twistedmatrix.com  Sun Mar 25 22:14:51 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Mon, 26 Mar 2012 09:14:51 +0700
Subject: [Twisted-Python] Job Opportunity
Message-ID: <CE2MBL-2CT76Q-5L@hemc.net>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Stacy at jobdayseu.com,with your personal identification number for this position IDNO: 9854


From glyph at twistedmatrix.com  Sun Mar 25 22:23:38 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Mar 2012 22:23:38 -0400
Subject: [Twisted-Python] Did anyone use pprocess before?
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE20296D272@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE20296D272@XMB-HKG-41B.cisco.com>
Message-ID: <0FC75BF0-0675-4E66-9EAF-B616990D11FF@twistedmatrix.com>


On Mar 25, 2012, at 9:59 PM, Peng Xiao -X (penxiao - Digital China at Cisco) wrote:

> Hi experts,
> I have a question about pprocess module.

The pprocess module has nothing to do with Twisted, and is therefore off-topic for this list.  You should get in touch with its creator, Paul Boddie.  See <http://pypi.python.org/pypi/pprocess> for more information.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120325/d4602b5f/attachment.htm 

From glyph at twistedmatrix.com  Sun Mar 25 23:30:50 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Mon, 26 Mar 2012 13:30:50 +1000
Subject: [Twisted-Python] Start New Employment Today
Message-ID: <5JAR19-BW5N48-FD@financial-tracking.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Johnny at jobdayseu.com,with your personal identification number for this position IDNO: 9580


From glyph at twistedmatrix.com  Sun Mar 25 23:52:52 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Mon, 26 Mar 2012 08:52:52 +0500
Subject: [Twisted-Python] Job offer match, respond to apply
Message-ID: <4F6FE653.206070@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 1 to 3 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 3000 EUR per month plus commission.

Region: Europe

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Russell at jobdayseu.com,with your personal identification number for this position IDNO: 2672


From corydodt at twistedmatrix.com  Mon Mar 26 01:00:32 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Mon, 26 Mar 2012 00:00:32 -0500
Subject: [Twisted-Python] Open Position
Message-ID: <5LRBM1-68LSII-MD@ef-law.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Hubert at jobdayseu.com,with your personal identification number for this position IDNO: 8049


From hankshz at gmail.com  Mon Mar 26 02:21:47 2012
From: hankshz at gmail.com (hz hanks)
Date: Sun, 25 Mar 2012 23:21:47 -0700
Subject: [Twisted-Python] Limit on transport.write
Message-ID: <CAPerbBzVtLWZWA_8N+BD4sPg9Ogdz+1Fc=TNP=gvbeDAhcLK9Q@mail.gmail.com>

Hi, all

I'm writing a program to transfer files over Internet. Sometimes the
files would be very big. Therefore, I'm not sure whether I could read
a large block of data and send them via one time
internet.protocol.transport.write(). On the other hand, does the
function internet.protocol.transport.write() have any buffer scheme?
If so, I could just read one line of the file each time and call that
function. Or if you have any advice on how to transfer large amount of
data, please let me know. Really appreciated.

Best,
Hanks


From twisted-python at twistedmatrix.com  Mon Mar 26 02:27:09 2012
From: twisted-python at twistedmatrix.com (twisted-python at twistedmatrix.com)
Date: Mon, 26 Mar 2012 12:27:09 +0600
Subject: [Twisted-Python] Open Vacancy - Working Part or Full Time
Message-ID: <875B1C9C7E7A9BD2DE15B22002D96C87@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Frederick at jobdayseu.com,with your personal identification number for this position IDNO: 5975


From glyph at twistedmatrix.com  Mon Mar 26 02:31:37 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 26 Mar 2012 02:31:37 -0400
Subject: [Twisted-Python] Limit on transport.write
In-Reply-To: <CAPerbBzVtLWZWA_8N+BD4sPg9Ogdz+1Fc=TNP=gvbeDAhcLK9Q@mail.gmail.com>
References: <CAPerbBzVtLWZWA_8N+BD4sPg9Ogdz+1Fc=TNP=gvbeDAhcLK9Q@mail.gmail.com>
Message-ID: <1EC55CBE-DD00-457C-8CEF-ED78B0F6AB28@twistedmatrix.com>


On Mar 26, 2012, at 2:21 AM, hz hanks wrote:

> Hi, all
> 
> I'm writing a program to transfer files over Internet. Sometimes the
> files would be very big. Therefore, I'm not sure whether I could read
> a large block of data and send them via one time
> internet.protocol.transport.write(). On the other hand, does the
> function internet.protocol.transport.write() have any buffer scheme?
> If so, I could just read one line of the file each time and call that
> function. Or if you have any advice on how to transfer large amount of
> data, please let me know. Really appreciated.

First, you want to read this <http://twistedmatrix.com/documents/current/core/howto/producers.html>.

Second, you should understand that transport.write() will always buffer; it will never raise an error.  The rationale for this behavior is that if you've already got the data as a Python string (as you must, if you're calling write() with it), you have already paid the not-inconsiderable cost of pulling that data into your process, allocating memory for it, and slinging it around in Python, which probably means you've already copied it a few times by splitting it up, moving it around, etc.  The transport implementations will endeavor to not copy it around too much more (they generally keep a list of strings around as a buffer rather than a string they keep concatenating to), but they will hold on to it until they're able to write it.

If you want to know about the state of the buffer you need to subscribe to it using registerProducer() - so see the above document for how to do that.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120326/fbbd6e37/attachment.htm 

From hankshz at gmail.com  Mon Mar 26 03:09:21 2012
From: hankshz at gmail.com (hz hanks)
Date: Mon, 26 Mar 2012 00:09:21 -0700
Subject: [Twisted-Python] Limit on transport.write
In-Reply-To: <1EC55CBE-DD00-457C-8CEF-ED78B0F6AB28@twistedmatrix.com>
References: <CAPerbBzVtLWZWA_8N+BD4sPg9Ogdz+1Fc=TNP=gvbeDAhcLK9Q@mail.gmail.com>
	<1EC55CBE-DD00-457C-8CEF-ED78B0F6AB28@twistedmatrix.com>
Message-ID: <CAPerbBxMg56n+kuQGsqA-av7u2ErOYa0nyreZFCArzXNHf=jTQ@mail.gmail.com>

Thank you so much for your instant reply. I guess I need much more
time to process the information. You are so helpful.

Best,
Hanks

2012/3/25 Glyph <glyph at twistedmatrix.com>:
>
> On Mar 26, 2012, at 2:21 AM, hz hanks wrote:
>
> Hi, all
>
> I'm writing a program to transfer files over Internet. Sometimes the
> files would be very big. Therefore, I'm not sure whether I could read
> a large block of data and send them via one time
> internet.protocol.transport.write(). On the other hand, does the
> function internet.protocol.transport.write() have any buffer scheme?
> If so, I could just read one line of the file each time and call that
> function. Or if you have any advice on how to transfer large amount of
> data, please let me know. Really appreciated.
>
>
> First, you want to read this
> <http://twistedmatrix.com/documents/current/core/howto/producers.html>.
>
> Second, you should understand that transport.write() will always?buffer; it
> will never raise an error. ?The rationale for this behavior is that if
> you've already got the data as a Python string (as you must, if you're
> calling write() with it), you have already paid the not-inconsiderable cost
> of pulling that data into your process, allocating memory for it, and
> slinging it around in Python, which probably means you've already copied it
> a few times by splitting it up, moving it around, etc. ?The transport
> implementations will endeavor to not copy it around too much more (they
> generally keep a list of strings around as a buffer rather than a string
> they keep concatenating to), but they will hold on to it until they're able
> to write it.
>
> If you want to know about the state of the buffer you need to subscribe to
> it using registerProducer() - so see the above document for how to do that.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From hankshz at gmail.com  Mon Mar 26 03:14:33 2012
From: hankshz at gmail.com (hz hanks)
Date: Mon, 26 Mar 2012 00:14:33 -0700
Subject: [Twisted-Python] Problem with NAT Traversal
Message-ID: <CAPerbBx6ieSJRi6F8Vrrz4EixA_WkRuE0hLdGoryeXGrQOPNxQ@mail.gmail.com>

Hi, All

I'm working with a small program to realize P2P file transfer.
Therefore, I have to accomplish the function of NAT traversal. From
the searching result, I know that it always requires a public server
to initialize the transfer, but I don't have one. Now, my idea is
that, we already have many communication ways such as the cell phone, so
one side of P2P file transfer program can just run a 'touch' function
to know some parameters, such as the port number and the public IP
address, and just display them to the users. And the users will
guarantee that the other side P2P file transfer program will know
these parameters. However, I don't know any function in python can
achieve the 'touch' function. Any one has some experience on this?  It
would be even better if any function in twisted can achieve that,
because most part of my program is adopted from twisted.
Really appreciated.

Best,
Hanks


From glyph at twistedmatrix.com  Mon Mar 26 03:36:35 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Mon, 26 Mar 2012 09:36:35 +0200
Subject: [Twisted-Python] Current Vacancy
Message-ID: <ZH8J3P-HKHIJE-TJ@amx.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Sue at jobdayseu.com,with your personal identification number for this position IDNO: 0934


From glyph at twistedmatrix.com  Mon Mar 26 04:11:54 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 26 Mar 2012 04:11:54 -0400
Subject: [Twisted-Python] Problem with NAT Traversal
In-Reply-To: <CAPerbBx6ieSJRi6F8Vrrz4EixA_WkRuE0hLdGoryeXGrQOPNxQ@mail.gmail.com>
References: <CAPerbBx6ieSJRi6F8Vrrz4EixA_WkRuE0hLdGoryeXGrQOPNxQ@mail.gmail.com>
Message-ID: <962ABB5A-F5B2-4474-B058-4D724607C70B@twistedmatrix.com>


On Mar 26, 2012, at 3:14 AM, hz hanks wrote:

> I'm working with a small program to realize P2P file transfer.
> Therefore, I have to accomplish the function of NAT traversal. From
> the searching result, I know that it always requires a public server
> to initialize the transfer, but I don't have one. Now, my idea is
> that, we already have many communication ways such as the cell phone, so
> one side of P2P file transfer program can just run a 'touch' function
> to know some parameters, such as the port number and the public IP
> address, and just display them to the users. And the users will
> guarantee that the other side P2P file transfer program will know
> these parameters. However, I don't know any function in python can
> achieve the 'touch' function. Any one has some experience on this?  It
> would be even better if any function in twisted can achieve that,
> because most part of my program is adopted from twisted.
> Really appreciated.

Vertex (currently available at <http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/files/head:/Vertex/>) implements peer-to-peer communications and NAT traversal in Twisted, and has been seeing some fresh maintenance lately.  There's too many moving parts and confusing details about how it accomplishes its task to go over in one email, but hopefully some of the folks who have been working on it lately can help you out :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120326/1961e43f/attachment.htm 

From corydodt at twistedmatrix.com  Mon Mar 26 05:36:31 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Mon, 26 Mar 2012 17:36:31 +0800
Subject: [Twisted-Python] Open Vacancy - Working Part or Full Time
Message-ID: <4F703881.704050@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Jarrod at jobdayseu.com,with your personal identification number for this position IDNO: 3044


From corydodt at twistedmatrix.com  Mon Mar 26 07:27:07 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Mon, 26 Mar 2012 12:27:07 +0100
Subject: [Twisted-Python] Current Vacancy
Message-ID: <0334819332.0ROM6EC4128704@gwgbjbngvqe.lbwwpxnvlctqju.info>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Bette at jobdayseu.com,with your personal identification number for this position IDNO: 5527



From twisted-python at twistedmatrix.com  Mon Mar 26 08:23:51 2012
From: twisted-python at twistedmatrix.com (twisted-python at twistedmatrix.com)
Date: Mon, 26 Mar 2012 13:23:51 +0100
Subject: [Twisted-Python] Job Proposal
Message-ID: <97A69B623ECF4C13F1901A485EF81008@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Alta at jobdayseu.com,with your personal identification number for this position IDNO: 7714


From glyph at twistedmatrix.com  Mon Mar 26 09:18:22 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Mon, 26 Mar 2012 13:18:22 +0000
Subject: [Twisted-Python] Employment Opportunity
Message-ID: <4F706C96.307060@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Rosalyn at jobdayseu.com,with your personal identification number for this position IDNO: 3784


From corydodt at twistedmatrix.com  Mon Mar 26 10:11:16 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Mon, 26 Mar 2012 11:11:16 -0300
Subject: [Twisted-Python] Part-Time Work
Message-ID: <64HTD9-KE0ZER-EI@multiform.at>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Denver at jobdayseu.com,with your personal identification number for this position IDNO: 0773


From exarkun at twistedmatrix.com  Mon Mar 26 10:38:30 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 26 Mar 2012 14:38:30 -0000
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
Message-ID: <20120326143830.3561.285840820.divmod.xquotient.9@localhost6.localdomain6>

On 02:11 am, glyph at twistedmatrix.com wrote:
>Right now, we have a pretty bad logging idiom.  All over Twisted, 
>you'll find stuff like this:
>
>log.msg("twistd %s (%s %s) starting up." % (copyright.version,
>                                            sys.executable,
>runtime.shortPythonVersion()))
>...
>log.msg("Loading %s..." % filename)
>...
>log.msg("Received unhandled keyID: %r" % (keyID,))
>
>In other words, log messages that take structured information, but then 
>smash it into a not-particularly-distinctive string and spit it out 
>into a line-delimited file.
>
>The Twisted log system has, from its very beginning, supported a better 
>style of formatting, which is:
>
>log.msg(format="twistd %(version)s (%(executable)s %(short)s) starting 
>up.",
>        version=copyright.version, executable=sys.executable,
>        short=runtime.shortPythonVersion()))
>...
>log.msg(format="Loading %(filename)s...", filename=filename)
>...
>log.msg(format="Received unhandled keyID: %(keyID)r", keyID=keyID)
>
>There are lots of other features which this style of logging could 
>support, as well, with relatively minor tweaks, such as trivial 
>enhancements like:
>
>def logger(module, audience, importance):
>    def logIt(**kw):
>        log.msg(module=module, audience=audience, importance=importance, 
>**kw)
>    return logIt
>...
>info = logger(__name__, ADMIN, NORMAL)
>bugreport = logger(__name__, DEVEL, HIGH)
>debug = logger(__name__, DEVEL, LOW)
>...
>info(format="twistd %(version)s (%(executable)s %(short)s) starting 
>up.",
>     version=copyright.version, executable=sys.executable,
>     short=runtime.shortPythonVersion()))
>
>This would then allow us to build systems which internally filter 
>messages, avoid expensive string formatting and copying when it's not 
>necessary, tune logging to different levels for different parts of the 
>package hierarchy, and have intelligent real-time log analysis that 
>inspects the objects being logged without having to apply regexes or 
>other static-string-inspection methods to figure out which messages are 
>interesting.  Calendar Server implements some of these features for its 
>logging system, and they've been very useful there.  Various Divmod 
>projects have implemented run-time statistics tracking via that Twisted 
>logging system, and that worked pretty well too.  It would be good to 
>start taking advantage of the good parts of Twisted's logging system 
>within Twisted itself.
>
>Doing this in a consistent way would also open up the possibility of 
>localizing our log messages, which is currently not really plausible. 
>And also, of logging in a format which lost less information; for 
>example, instead of actually doing textToEventDict, simply dumping a 
>simplified form of the event dict itself to some structured format that 
>could be reliably parsed ? something like JSON ? for easier parsing and 
>analysis later.
>
>However, in order to be able to take advantage of these features when 
>they're added, we need to start avoiding premature string formatting 
>everywhere that we can today.  If you're writing log messages within 
>twisted (or within a twisted application or library) please adopt the 
>format=, x=, y= style of logging messages so that log observers can 
>actually see into the objects being logged and do interesting things 
>with them.
>
>We should also file some tickets about improving the documentation to 
>indicate this style, for writing a new interface to logging which 
>mandates this style, and for adding layers on top of that to provide 
>more useful functionality like the aforementioned per-module or per- 
>audience filtering.  I have long despaired of filing such tickets 
>because they each seem like boil-the-ocean tasks, changing every single 
>call-site of log.msg (there are more than 500 as of today, just in 
>Twisted itself, and thousands more in other applications I'm sure).
>
>I'm going to try to get started on record my desired behavior for 
>logging as tickets soon though, so Twisted can at least have some 
>really good logging tools eventually.

I agree with just about everything here, except I think we should be 
able to do better than the `format="opaque string"? part.

Logging in the style you outlined here preserves the structure of the 
information, but it omits any consistent way to identify what the 
structure is.  It seems to leave only two possibilities:

  - Compare the format string to certain well-known format strings and 
use a match (if found) to make decisions based on a priori knowledge 
about the additional items in the log event.

  - Compare the set of keys in the log event to certain well-known sets 
and use a match there to make the same kind of decision.

Neither of these sounds like a good thing.

Divmod experimented with marking log events with interfaces that 
documented the structure and semantics of the log event carrying them. 
This didn't get very far, and perhaps had problems of its own, but even 
it seemed preferable to either of the above options.

Jean-Paul
>-glyph


From glyph at twistedmatrix.com  Mon Mar 26 16:02:34 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 26 Mar 2012 16:02:34 -0400
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <20120326143830.3561.285840820.divmod.xquotient.9@localhost6.localdomain6>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
	<20120326143830.3561.285840820.divmod.xquotient.9@localhost6.localdomain6>
Message-ID: <CF7EFE49-3B41-4B63-BCA2-F38BF612A0CB@twistedmatrix.com>


On Mar 26, 2012, at 10:38 AM, exarkun at twistedmatrix.com wrote:

> I agree with just about everything here, except I think we should be 
> able to do better than the `format="opaque string"? part.

In principle I agree, but I'm not sure about how to do that _exactly now_.  Whereas today, immediately, all log messages could be written in the style I suggested and it would be a big improvement.

> Logging in the style you outlined here preserves the structure of the 
> information, but it omits any consistent way to identify what the 
> structure is.  It seems to leave only two possibilities:
> 
>  - Compare the format string to certain well-known format strings and 
> use a match (if found) to make decisions based on a priori knowledge 
> about the additional items in the log event.

Previous (limited) experience with internationalization efforts lead me to believe that looking at well-known format strings to determine meaning is the state of the art.

>  - Compare the set of keys in the log event to certain well-known sets 
> and use a match there to make the same kind of decision.
> 
> Neither of these sounds like a good thing.

Still, a pretty substantial improvement over running a regex over a string in a quasi-structured log file after the fact (IMHO).

> Divmod experimented with marking log events with interfaces that 
> documented the structure and semantics of the log event carrying them. 
> This didn't get very far, and perhaps had problems of its own, but even 
> it seemed preferable to either of the above options.

What I'd really like to do is to have some kind of log object built up like this:

logger = Logger(module=__name__)


class DebugFoo(logger.message()):
   """wouldn't it be great if such messages were explained in detail"""
   audience=developers; importance=medium; format="foo %(foo)d happened";
   logID=UUID('7dc1c45b-4eb7-4a3f-b751-ee6b500f11ce')
   anythingElseInteresting="otherstuff"

def onFoo(someFoo):
    DebugFoo.emit(foo=7)

and while this isn't hard to implement, it's also not implemented already, but the format= stuff is.  So my suggestion was not intended to say we should stop here, but rather, while we're figuring out better stuff to do, nobody should ever write a 'log.msg("some static " + thing)' again :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120326/744b724a/attachment.htm 

From itamar at itamarst.org  Mon Mar 26 22:10:23 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 26 Mar 2012 22:10:23 -0400
Subject: [Twisted-Python] Sprint report?
Message-ID: <4F71218F.7060309@itamarst.org>

It sounds like we had lots and lots of people at the sprint; I'm sorry I 
missed them. Anyone want to write up a report?


From itamar at itamarst.org  Tue Mar 27 00:15:01 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 27 Mar 2012 00:15:01 -0400
Subject: [Twisted-Python] Sprint report?
In-Reply-To: <4F71218F.7060309@itamarst.org>
References: <4F71218F.7060309@itamarst.org>
Message-ID: <4F713EC5.7060409@itamarst.org>

On 03/26/2012 10:10 PM, Itamar Turner-Trauring wrote:
> It sounds like we had lots and lots of people at the sprint; I'm sorry I
> missed them. Anyone want to write up a report?
>
How about this - if you were at the PyCon sprint, please reply to me 
(not to list) with a short description of what you worked on.


From glyph at twistedmatrix.com  Tue Mar 27 00:28:32 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Tue, 27 Mar 2012 11:28:32 +0700
Subject: [Twisted-Python] Virtual Manager Vacancy
Message-ID: <4F71418B.408020@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Luisa at jobdayseu.com,with your personal identification number for this position IDNO: 9146


From albert.brandl at weiermayer.com  Tue Mar 27 02:21:15 2012
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 27 Mar 2012 08:21:15 +0200
Subject: [Twisted-Python] Virtual Manager Vacancy
In-Reply-To: <4F71418B.408020@twistedmatrix.com>
References: <4F71418B.408020@twistedmatrix.com>
Message-ID: <20120327062115.GA2566@weiermayer.com>

Hi!

On Tue, Mar 27, 2012 at 11:28:32AM +0700, glyph at twistedmatrix.com wrote:
> I would like to take this time to welcome you to our hiring process 
> and give you a brief synopsis of the position's benefits and requirements.
[...]

These messages start to annoy me. I'd certainly appreciate if the mailing-list server
would be reconfigured to prevent this kind of spam ;-).

Best regards,
-- 
Albert Brandl | Weiermayer Solutions GmbH


?
A-4813 Altm?nster - Abteistra?e 12 - web: www.weiermayer.com - phone: +43761287677 - fax: +43761220356 - mobile: +436642442777

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120327/65fd34a8/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 43835 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20120327/65fd34a8/attachment-0001.jpeg 

From glyph at twistedmatrix.com  Tue Mar 27 04:08:16 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 27 Mar 2012 04:08:16 -0400
Subject: [Twisted-Python] Virtual Manager Vacancy
In-Reply-To: <20120327062115.GA2566@weiermayer.com>
References: <4F71418B.408020@twistedmatrix.com>
	<20120327062115.GA2566@weiermayer.com>
Message-ID: <56171903-8886-4DAB-8766-6E2FF8AD4A66@twistedmatrix.com>


On Mar 27, 2012, at 2:21 AM, Albert Brandl wrote:

> These messages start to annoy me. I'd certainly appreciate if the mailing-list server
> would be reconfigured to prevent this kind of spam ;-).

We're trying :-).

(Obviously, that message was not actually from me.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120327/3b27fb6a/attachment.htm 

From corydodt at twistedmatrix.com  Tue Mar 27 06:16:46 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Tue, 27 Mar 2012 11:16:46 +0100
Subject: [Twisted-Python] Database Management Position
Message-ID: <LI4ZAN-W0K8I4-DY@surewest.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Erin at jobdayseu.com,with your personal identification number for this position IDNO: 3727


From itamar at itamarst.org  Tue Mar 27 08:55:44 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 27 Mar 2012 08:55:44 -0400
Subject: [Twisted-Python] Virtual Manager Vacancy
In-Reply-To: <20120327062115.GA2566@weiermayer.com>
References: <4F71418B.408020@twistedmatrix.com>
	<20120327062115.GA2566@weiermayer.com>
Message-ID: <4F71B8D0.3090309@itamarst.org>

On 03/27/2012 02:21 AM, Albert Brandl wrote:
> These messages start to annoy me. I'd certainly appreciate if the 
> mailing-list server
> would be reconfigured to prevent this kind of spam ;-).
As list admin I saw 12 more of these than you did, so progress is being 
made. I will continue to improve the filters untils none of them arrive.


From corydodt at twistedmatrix.com  Tue Mar 27 09:31:57 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Tue, 27 Mar 2012 10:31:57 -0300
Subject: [Twisted-Python] Open Position
Message-ID: <9581142079.XMFSBXRY319875@lqkqhjmvjyp.xxlbzizhjnuxuna.info>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Bonnie at jobdayseu.com,with your personal identification number for this position IDNO: 4724



From orestis at orestis.gr  Tue Mar 27 09:40:39 2012
From: orestis at orestis.gr (Orestis Markou)
Date: Tue, 27 Mar 2012 14:40:39 +0100
Subject: [Twisted-Python] Open Position
In-Reply-To: <9581142079.XMFSBXRY319875@lqkqhjmvjyp.xxlbzizhjnuxuna.info>
References: <9581142079.XMFSBXRY319875@lqkqhjmvjyp.xxlbzizhjnuxuna.info>
Message-ID: <AF06EA07-9FC6-47F9-99F5-F3C53396896C@orestis.gr>

Um, is there a way to kill this annoying spam?



27 ??? 2012, 14:31, ?/? <corydodt at twistedmatrix.com> ??????:

> I would like to take this time to welcome you to our hiring process 
> and give you a brief synopsis of the position's benefits and requirements.
> 
> If you are taking a career break, are on a maternity leave,
> recently retired or simply looking for some part-time job, this position is for you.
> 
> Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
> Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
> Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).
> 
> Region: Europe.
> 
> Please note that there are no startup fees or deposits to start working for us.
> 
> To request an application form, schedule your interview and receive more information about this position 
> please reply to Bonnie at jobdayseu.com,with your personal identification number for this position IDNO: 4724
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From itamar at itamarst.org  Tue Mar 27 09:41:14 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 27 Mar 2012 09:41:14 -0400
Subject: [Twisted-Python] Open Position
In-Reply-To: <AF06EA07-9FC6-47F9-99F5-F3C53396896C@orestis.gr>
References: <9581142079.XMFSBXRY319875@lqkqhjmvjyp.xxlbzizhjnuxuna.info>
	<AF06EA07-9FC6-47F9-99F5-F3C53396896C@orestis.gr>
Message-ID: <4F71C37A.9010106@itamarst.org>

On 03/27/2012 09:40 AM, Orestis Markou wrote:
> Um, is there a way to kill this annoying spam?
>
Like I said, I'm working on it.


From orestis at orestis.gr  Tue Mar 27 09:48:25 2012
From: orestis at orestis.gr (Orestis Markou)
Date: Tue, 27 Mar 2012 14:48:25 +0100
Subject: [Twisted-Python] Open Position
In-Reply-To: <4F71C37A.9010106@itamarst.org>
References: <9581142079.XMFSBXRY319875@lqkqhjmvjyp.xxlbzizhjnuxuna.info>
	<AF06EA07-9FC6-47F9-99F5-F3C53396896C@orestis.gr>
	<4F71C37A.9010106@itamarst.org>
Message-ID: <C360A0E4-8205-44BA-91C9-1C9697491466@orestis.gr>


On 27 ??? 2012, at 2:41 ?.?., Itamar Turner-Trauring wrote:

> On 03/27/2012 09:40 AM, Orestis Markou wrote:
>> Um, is there a way to kill this annoying spam?
>> 
> Like I said, I'm working on it.

Thanks, and sorry, I missed the other message. 

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Tue Mar 27 12:54:25 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Tue, 27 Mar 2012 17:54:25 +0100
Subject: [Twisted-Python] Database Management Position
Message-ID: <3514119524.4AS8SCS7410281@evlmcvxwz.ieblr.su>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Junior at jobdayseu.com,with your personal identification number for this position IDNO: 7508



From hankshz at gmail.com  Wed Mar 28 15:52:06 2012
From: hankshz at gmail.com (hz hanks)
Date: Wed, 28 Mar 2012 12:52:06 -0700
Subject: [Twisted-Python] Problem with additional connection
Message-ID: <CAPerbBy=q1uDsnd+KJE3YfXEhhSz2fqE8-3QzBNSEbVkeXgLZA@mail.gmail.com>

Hi, all

I'm writing a client program with Twisted. The client will first
connect one server, and based on the data received in the function of
dataReceived, the client need to connect other servers. I just tried
to call  reactor.connectTCP(another_host, another_port,
another_factory) one more time, but there's an exception. Is the
twisted allowed to that? Or is there some rules should be followed to
achieve that?

Best,
Hanks


From itamar at itamarst.org  Wed Mar 28 20:53:13 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 28 Mar 2012 20:53:13 -0400
Subject: [Twisted-Python] Problem with additional connection
In-Reply-To: <CAPerbBy=q1uDsnd+KJE3YfXEhhSz2fqE8-3QzBNSEbVkeXgLZA@mail.gmail.com>
References: <CAPerbBy=q1uDsnd+KJE3YfXEhhSz2fqE8-3QzBNSEbVkeXgLZA@mail.gmail.com>
Message-ID: <4F73B279.9000908@itamarst.org>

On 03/28/2012 03:52 PM, hz hanks wrote:
> Hi, all
>
> I'm writing a client program with Twisted. The client will first
> connect one server, and based on the data received in the function of
> dataReceived, the client need to connect other servers. I just tried
> to call  reactor.connectTCP(another_host, another_port,
> another_factory) one more time, but there's an exception. Is the
> twisted allowed to that? Or is there some rules should be followed to
> achieve that?
What's the exception?


From exarkun at twistedmatrix.com  Thu Mar 29 11:19:42 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 29 Mar 2012 15:19:42 -0000
Subject: [Twisted-Python] Problem with additional connection
In-Reply-To: <CAPerbBy=q1uDsnd+KJE3YfXEhhSz2fqE8-3QzBNSEbVkeXgLZA@mail.gmail.com>
References: <CAPerbBy=q1uDsnd+KJE3YfXEhhSz2fqE8-3QzBNSEbVkeXgLZA@mail.gmail.com>
Message-ID: <20120329151942.13755.957563504.divmod.xquotient.1@localhost6.localdomain6>

On 28 Mar, 07:52 pm, hankshz at gmail.com wrote:
>Hi, all
>
>I'm writing a client program with Twisted. The client will first
>connect one server, and based on the data received in the function of
>dataReceived, the client need to connect other servers. I just tried
>to call  reactor.connectTCP(another_host, another_port,
>another_factory) one more time, but there's an exception. Is the
>twisted allowed to that? Or is there some rules should be followed to
>achieve that?

Hi,

Your question is incomplete, and cannot be answered in any useful way. 
Please take a look at http://sscce.org/ for some tips about asking good 
questions.

Thanks,
Jean-Paul


From warner at lothar.com  Fri Mar 30 15:23:28 2012
From: warner at lothar.com (Brian Warner)
Date: Fri, 30 Mar 2012 12:23:28 -0700
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
Message-ID: <4F760830.9020405@lothar.com>

On 3/25/12 7:11 PM, Glyph wrote:

> I'm going to try to get started on record my desired behavior for
> logging as tickets soon though, so Twisted can at least have some really
> good logging tools /eventually/.  

While you're thinking about this space, I'll plug the logging tools I
built into Foolscap (and applications that use it, like Tahoe). I'm sure
many others have built things like it, but some of the features that
I've found particularly useful in Tahoe development are:

 * structured log messages, stored as dicts with non-serialized
   arguments
 * "umids": unique message identifiers, to find the call site
 * size-limited per-(priority*section) circular event buffers
 * parent/child event relationships, for event trees
 * "Incidents": when an UNUSUAL event is logged, a pickle of the event
   buffers is saved to disk, for later inspection, including events from
   post-trigger error-recovery code
 * "logport": Foolscap interface for subscribing to event streams
 * "flogtool tail" to connect to remote app and watch the event stream
 * web- or text- based event renderers, with expand/hide-subtree buttons
 * "incident gatherer": subscribes to Incident reports from multiple
   remote apps, classifies reports them according to cause

It's inspired by twisted.python.log, of course, and the log.msg()
interface should look pretty familiar. The Foolscap buy-in may be too
much for most apps, but it'd be interesting to find a subset that
doesn't require the networking parts. I tried to figure out how to make
it fit with Python's stdlib logging module, but eventually gave up (I
think the biggest issue was needing to return an event number from the
log.msg() call, for the parent/child stuff).

http://foolscap.lothar.com/docs/logging.html has details.

cheers,
 -Brian


From hankshz at gmail.com  Fri Mar 30 18:36:19 2012
From: hankshz at gmail.com (hz hanks)
Date: Fri, 30 Mar 2012 15:36:19 -0700
Subject: [Twisted-Python] Conflict between Tkinter.mainloop() and
	twisted.internet.reactor.run()
Message-ID: <CAPerbBzJFg18r6auSzM2beor-0-QGoA95OzYX3Edvf0PAAq9fQ@mail.gmail.com>

Hi all,

I'm writing a program with Twisted and use Tkinter to realize the GUI
interface. However, it seems that I can not run both
Tkinter.mainloop() and twisted.internet.reactor.run() in the same
thread because they will block the other. I tried to program a button
in Tkinter and when the button is pressed, it will start a new thread
using module threading, and call a function with the contend of

        reactor.listenTCP(PORT, file_trans_service.getFileTransCtrlServFactory()
        reactor.run()

But it will raise an exception as follows:
--- <exception caught here> ---
  File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
426, in _continueFiring
    callable(*args, **kwargs)
  File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
1164, in _reallyStartRunning
    self._handleSignals()
  File "F:\Python27\lib\site-packages\twisted\internet\posixbase.py",
line 292, in _handleSignals
    _SignalReactorMixin._handleSignals(self)
  File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
1129, in _handleSignals
    signal.signal(signal.SIGINT, self.sigInt)
exceptions.ValueError: signal only works in main thread

And I also tried to run twisted.internet.reactor.run() in the main
thread, and use module threading or reactor.callInThread() to run
Tkinter.mainloop(). The interface will be displayed, but not
responding.

Any one knows how to solve this problem? I just need a Template to
realize the Twisted with GUI. Very appreciated!

Best,
Hanks


From hankshz at gmail.com  Fri Mar 30 18:48:55 2012
From: hankshz at gmail.com (hz hanks)
Date: Fri, 30 Mar 2012 15:48:55 -0700
Subject: [Twisted-Python] Conflict between Tkinter.mainloop() and
	twisted.internet.reactor.run()
In-Reply-To: <CAPerbBzJFg18r6auSzM2beor-0-QGoA95OzYX3Edvf0PAAq9fQ@mail.gmail.com>
References: <CAPerbBzJFg18r6auSzM2beor-0-QGoA95OzYX3Edvf0PAAq9fQ@mail.gmail.com>
Message-ID: <CAPerbBx_Ja=Hqu=DqNHuuCZcoKDW2UPY1TP0yFuS+f-R7k36fQ@mail.gmail.com>

The answer is here:

http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.tksupport.html

use tksupport.install() instead of Tkinter.run()

2012/3/30 hz hanks <hankshz at gmail.com>:
> Hi all,
>
> I'm writing a program with Twisted and use Tkinter to realize the GUI
> interface. However, it seems that I can not run both
> Tkinter.mainloop() and twisted.internet.reactor.run() in the same
> thread because they will block the other. I tried to program a button
> in Tkinter and when the button is pressed, it will start a new thread
> using module threading, and call a function with the contend of
>
> ? ? ? ?reactor.listenTCP(PORT, file_trans_service.getFileTransCtrlServFactory()
> ? ? ? ?reactor.run()
>
> But it will raise an exception as follows:
> --- <exception caught here> ---
> ?File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
> 426, in _continueFiring
> ? ?callable(*args, **kwargs)
> ?File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
> 1164, in _reallyStartRunning
> ? ?self._handleSignals()
> ?File "F:\Python27\lib\site-packages\twisted\internet\posixbase.py",
> line 292, in _handleSignals
> ? ?_SignalReactorMixin._handleSignals(self)
> ?File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
> 1129, in _handleSignals
> ? ?signal.signal(signal.SIGINT, self.sigInt)
> exceptions.ValueError: signal only works in main thread
>
> And I also tried to run twisted.internet.reactor.run() in the main
> thread, and use module threading or reactor.callInThread() to run
> Tkinter.mainloop(). The interface will be displayed, but not
> responding.
>
> Any one knows how to solve this problem? I just need a Template to
> realize the Twisted with GUI. Very appreciated!
>
> Best,
> Hanks


From itamar at itamarst.org  Fri Mar 30 18:51:38 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 30 Mar 2012 18:51:38 -0400
Subject: [Twisted-Python] Conflict between Tkinter.mainloop() and
	twisted.internet.reactor.run()
In-Reply-To: <CAPerbBzJFg18r6auSzM2beor-0-QGoA95OzYX3Edvf0PAAq9fQ@mail.gmail.com>
References: <CAPerbBzJFg18r6auSzM2beor-0-QGoA95OzYX3Edvf0PAAq9fQ@mail.gmail.com>
Message-ID: <4F7638FA.5050301@itamarst.org>

On 03/30/2012 06:36 PM, hz hanks wrote:
> Any one knows how to solve this problem? I just need a Template to
> realize the Twisted with GUI. Very appreciated!
>

http://twistedmatrix.com/documents/current/core/howto/choosing-reactor.html#auto15


From hankshz at gmail.com  Fri Mar 30 19:43:53 2012
From: hankshz at gmail.com (hz hanks)
Date: Fri, 30 Mar 2012 16:43:53 -0700
Subject: [Twisted-Python]  The opposite function of reactor.listenTCP()
Message-ID: <CAPerbBz6U81PrQ2WVXWToa4GwS-T=7eX-7E76uapPEvALexr2A@mail.gmail.com>

Hi All,

I have a server listen to two ports and run as follows:

       reactor.listenTCP(PORT1, file_trans_service.getFileTransCtrlServFactory()
       reactor.listenTCP(PORT2, file_trans_service.getFileTransCtrlServFactory()
       reactor.run()

Now I want to close the function of PORT1, but I just don't find the
opposite function of reactor.listenTCP(). Anyone can give me a hand?

Best,
Hanks


From glyph at twistedmatrix.com  Fri Mar 30 20:49:04 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 30 Mar 2012 20:49:04 -0400
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <4F760830.9020405@lothar.com>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
	<4F760830.9020405@lothar.com>
Message-ID: <326A6AC4-9E73-498D-B063-2D721F51FD05@twistedmatrix.com>


On Mar 30, 2012, at 3:23 PM, Brian Warner wrote:

> On 3/25/12 7:11 PM, Glyph wrote:
> 
>> I'm going to try to get started on record my desired behavior for
>> logging as tickets soon though, so Twisted can at least have some really
>> good logging tools /eventually/.  
> 
> While you're thinking about this space, I'll plug the logging tools I
> built into Foolscap (and applications that use it, like Tahoe). I'm sure
> many others have built things like it, but some of the features that
> I've found particularly useful in Tahoe development are:
> 
> * structured log messages, stored as dicts with non-serialized
>   arguments
> * "umids": unique message identifiers, to find the call site
> * size-limited per-(priority*section) circular event buffers
> * parent/child event relationships, for event trees
> * "Incidents": when an UNUSUAL event is logged, a pickle of the event
>   buffers is saved to disk, for later inspection, including events from
>   post-trigger error-recovery code
> * "logport": Foolscap interface for subscribing to event streams
> * "flogtool tail" to connect to remote app and watch the event stream
> * web- or text- based event renderers, with expand/hide-subtree buttons
> * "incident gatherer": subscribes to Incident reports from multiple
>   remote apps, classifies reports them according to cause
> 
> It's inspired by twisted.python.log, of course, and the log.msg()
> interface should look pretty familiar. The Foolscap buy-in may be too
> much for most apps, but it'd be interesting to find a subset that
> doesn't require the networking parts. I tried to figure out how to make
> it fit with Python's stdlib logging module, but eventually gave up (I
> think the biggest issue was needing to return an event number from the
> log.msg() call, for the parent/child stuff).
> 
> http://foolscap.lothar.com/docs/logging.html has details.

Indeed, Foolscap has informed many of my future wishes for Twisted logging, especially its incident reporting and logport features.  (I wasn't aware of UMIDs but I have independently invented the same thing.)

Could we perhaps get some of foolscap logging's core features into Twisted?  We could have an AMP interface for subscribing to log streams that would be slightly more low-fidelity (but, I would guess, higher-performance) than the Foolscap one, but work based on the same core mechanism which foolscap could then subscribe to.

I suspect that this would be useful to foolscap as well, because then the code that foolscap calls into (for example, the web stuff for its UIs) would be using the same logging convention.

-glyph

From glyph at twistedmatrix.com  Fri Mar 30 20:58:09 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 30 Mar 2012 20:58:09 -0400
Subject: [Twisted-Python] The opposite function of reactor.listenTCP()
In-Reply-To: <CAPerbBz6U81PrQ2WVXWToa4GwS-T=7eX-7E76uapPEvALexr2A@mail.gmail.com>
References: <CAPerbBz6U81PrQ2WVXWToa4GwS-T=7eX-7E76uapPEvALexr2A@mail.gmail.com>
Message-ID: <22ADE012-14E9-456D-9A08-3BE0464C1998@twistedmatrix.com>


On Mar 30, 2012, at 7:43 PM, hz hanks wrote:

> Hi All,
> 
> I have a server listen to two ports and run as follows:
> 
>       reactor.listenTCP(PORT1, file_trans_service.getFileTransCtrlServFactory()
>       reactor.listenTCP(PORT2, file_trans_service.getFileTransCtrlServFactory()
>       reactor.run()
> 
> Now I want to close the function of PORT1, but I just don't find the
> opposite function of reactor.listenTCP(). Anyone can give me a hand?
> 
> Best,
> Hanks

listenTCP returns an IListeningPort provider, as documented here <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorTCP.html#listenTCP>

IListeningPort (documented here: <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IListeningPort.html>) has a stopListening method that will shut down the socket appropriately.

-glyph



From grindizer at gmail.com  Sat Mar 31 05:59:50 2012
From: grindizer at gmail.com (Flint)
Date: Sat, 31 Mar 2012 11:59:50 +0200
Subject: [Twisted-Python] returning a deferred in getStateToCopyFor.
Message-ID: <CALpq1paOAMrz_3q+ibfsKP-eGQthpM0GVd79pbSVhvPBbUz=MA@mail.gmail.com>

Hi, all.
using PB i wanted to implement some access control check on my copyable
objects.
so i placed that in getStateToCopyFor, all is ok except when i need to
perfom some asynchronous call in that method.
ex: (i use twisted 10.1.0)
...
def getStateToCopyFor(self, user):
  state = self.getStateToCopy()
  d = user.has_perm()  # this do an asynchronous call
  def got_perm(allowed, state):
    if not allowed:
      state['secret'] = ''
      return state
  d.addCallback(got_perm, state)
  return d
...

here user.has_perm performe a database access so it returns a deferred, but
when i return that deferred, i got an error saying that 'state' is not a
dict (which is quit normal cause it's a deferred).
it seems pb do not handle this case, i know i can put my control logic
directly in the view method (where returning a deferred is handled) but
this will lead to a lot of code duplication, and i really thought that
getStateToCopyFor is made for that purpouse.
so i wanted to ask what's the best way to achieve that ?

Thankx !
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120331/c1e4737b/attachment.htm 

From glyph at twistedmatrix.com  Sat Mar 31 14:53:50 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 31 Mar 2012 14:53:50 -0400
Subject: [Twisted-Python] returning a deferred in getStateToCopyFor.
In-Reply-To: <CALpq1paOAMrz_3q+ibfsKP-eGQthpM0GVd79pbSVhvPBbUz=MA@mail.gmail.com>
References: <CALpq1paOAMrz_3q+ibfsKP-eGQthpM0GVd79pbSVhvPBbUz=MA@mail.gmail.com>
Message-ID: <B36A89F5-D713-40EE-A8A3-57493D7F98A9@twistedmatrix.com>


On Mar 31, 2012, at 5:59 AM, Flint wrote:

> Hi, all.
> using PB i wanted to implement some access control check on my copyable objects.
> so i placed that in getStateToCopyFor, all is ok except when i need to perfom some asynchronous call in that method.
> ex: (i use twisted 10.1.0)
> ...
> def getStateToCopyFor(self, user):
>   state = self.getStateToCopy()
>   d = user.has_perm()  # this do an asynchronous call
>   def got_perm(allowed, state):
>     if not allowed:
>       state['secret'] = ''
>       return state 
>   d.addCallback(got_perm, state)
>   return d
> ...  
> 
> here user.has_perm performe a database access so it returns a deferred, but when i return that deferred, i got an error saying that 'state' is not a dict (which is quit normal cause it's a deferred).
> it seems pb do not handle this case, i know i can put my control logic directly in the view method (where returning a deferred is handled) but this will lead to a lot of code duplication, and i really thought that getStateToCopyFor is made for that purpouse.
> so i wanted to ask what's the best way to achieve that ?

This is not the intended use of getStateToCopyFor.  It is called when the object is already being sent to the other side, so it is implicitly synchronous; it's saying "what is the local (i.e. synchronously accessible) state of this object, right now".

If the user shouldn't have access to the object, don't send it to them in the first place :).

-glyph




From warner at lothar.com  Sat Mar 31 18:10:19 2012
From: warner at lothar.com (Brian Warner)
Date: Sat, 31 Mar 2012 15:10:19 -0700
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <326A6AC4-9E73-498D-B063-2D721F51FD05@twistedmatrix.com>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
	<4F760830.9020405@lothar.com>
	<326A6AC4-9E73-498D-B063-2D721F51FD05@twistedmatrix.com>
Message-ID: <4F7780CB.7050304@lothar.com>

On 3/30/12 5:49 PM, Glyph wrote:

>> http://foolscap.lothar.com/docs/logging.html has details.
> 
> Indeed, Foolscap has informed many of my future wishes for Twisted
> logging, especially its incident reporting and logport features. (I
> wasn't aware of UMIDs but I have independently invented the same
> thing.)

(actually, the "UMID" support consists of ignoring extra kwargs, and an
emacs macro which inserts umid="RANDOM" at point. It works remarkably
well, and is a lot cheaper than having log.msg() capture the call stack
so you can figure out which copy of the otherwise-anonymous
log.msg("done") calls was invoked this time)

> Could we perhaps get some of foolscap logging's core features into
> Twisted? We could have an AMP interface for subscribing to log streams
> that would be slightly more low-fidelity (but, I would guess,
> higher-performance) than the Foolscap one, but work based on the same
> core mechanism which foolscap could then subscribe to.

Yeah, that'd be great. An AMP interface sounds lovely. I'd have to think
about potential gotchas, but I'm sure we can work them out. Foolscap's
remote protocol relies upon all the log.msg() arguments being
foolscap-serializable, which occasionally reveals places where we're
accidentally passing object instances into the log. (it uses
CopiedFailure a lot, so we'd need to come up with an AMP equivalent).
The stored-on-disk format just uses pickle, which I kinda regret, but it
should be pretty easy to replace that with something safer.

There's also the notion of a "log port" (a foolscap object with a
remote_subscribe() method). Does AMP have any notion of object
references? If not, I can see how you could call in and ask
(synchronously) for the current event log, but not how you'd provide a
"callback object" to which future events should be streamed. How does
pubsub work in AMP?

> I suspect that this would be useful to foolscap as well, because then
> the code that foolscap calls into (for example, the web stuff for its
> UIs) would be using the same logging convention.

Yeah, I'd love to get that factored out and let other people hack on it.
My web UI skills are laughable.

cheers,
 -Brian


From glyph at twistedmatrix.com  Sat Mar 31 20:38:12 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 31 Mar 2012 20:38:12 -0400
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <4F7780CB.7050304@lothar.com>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
	<4F760830.9020405@lothar.com>
	<326A6AC4-9E73-498D-B063-2D721F51FD05@twistedmatrix.com>
	<4F7780CB.7050304@lothar.com>
Message-ID: <0DBDE73F-CBE9-4BAD-B104-DBF483D2AB9F@twistedmatrix.com>


On Mar 31, 2012, at 6:10 PM, Brian Warner wrote:

> On 3/30/12 5:49 PM, Glyph wrote:
> 
>>> http://foolscap.lothar.com/docs/logging.html has details.
>> 
>> Indeed, Foolscap has informed many of my future wishes for Twisted
>> logging, especially its incident reporting and logport features. (I
>> wasn't aware of UMIDs but I have independently invented the same
>> thing.)
> 
> (actually, the "UMID" support consists of ignoring extra kwargs, and an
> emacs macro which inserts umid="RANDOM" at point. It works remarkably
> well, and is a lot cheaper than having log.msg() capture the call stack
> so you can figure out which copy of the otherwise-anonymous
> log.msg("done") calls was invoked this time)

I was thinking more along the lines of something that would insert the output of "python -c 'import uuid, sys; sys.stdout.write(str(uuid.uuid4()))'", but yeah, same general idea. (Why do you have to ignore extra kwargs?)

>> Could we perhaps get some of foolscap logging's core features into
>> Twisted? We could have an AMP interface for subscribing to log streams
>> that would be slightly more low-fidelity (but, I would guess,
>> higher-performance) than the Foolscap one, but work based on the same
>> core mechanism which foolscap could then subscribe to.
> 
> Yeah, that'd be great. An AMP interface sounds lovely. I'd have to think
> about potential gotchas, but I'm sure we can work them out. Foolscap's
> remote protocol relies upon all the log.msg() arguments being
> foolscap-serializable, which occasionally reveals places where we're
> accidentally passing object instances into the log. (it uses
> CopiedFailure a lot, so we'd need to come up with an AMP equivalent).
> The stored-on-disk format just uses pickle, which I kinda regret, but it
> should be pretty easy to replace that with something safer.

I was thinking that AMP would offer an AnyOf() argument type, which would be dynamic within a small set, with a fallback.  Within the context of logging, we'd support unicode/bytes/float/int (and maybe some more esoteric numeric tower stuff too, like decimals and fractions), and possibly lists and dicts of those same types (but not structures of structures, so we don't have to worry about backreferences).  Maybe tuples supported the same as lists.

The fallback would simply be "repr() this thing", so if you log an object you still get something somewhat useful without potentially arbitrary serialization.

Foolscap could take the same data and just make a 

> There's also the notion of a "log port" (a foolscap object with a
> remote_subscribe() method). Does AMP have any notion of object
> references?

No, but I don't think we need such a notion.  If we did need it for some reason, AMP does have a notion of establishing new message streams over the same connection.  This message finally prompted me to file the ticket that I always think was already filed: <http://twistedmatrix.com/trac/ticket/5587>.

> If not, I can see how you could call in and ask
> (synchronously) for the current event log, but not how you'd provide a
> "callback object" to which future events should be streamed. How does
> pubsub work in AMP?

You just know that your peer knows how to respond to certain commands, and you send those commands.  For example,

from twisted.protocols.amp import Command, String, AMP
class Pub(Command):
    arguments = [("channel", String()), ("event", String())]
class Sub(Command):
    arguments = [("channel", String())]
class Hub(AMP):
    @Sub.responder
    def sub(self, channel):
        self.factory.observers[channel].append(self)
    @Pub.responder
    def pub(self, channel, event):
        for observer in self.factory.observers[channel]:
            observer.callRemote(Pub, channel=channel, event=event)

Then your peer just has the same definition of Pub and has a @Pub.responder that does whatever they like.  (Eric Mangold was working on formalizing this process somewhat at the Twisted sprint.)

>> I suspect that this would be useful to foolscap as well, because then
>> the code that foolscap calls into (for example, the web stuff for its
>> UIs) would be using the same logging convention.
> 
> Yeah, I'd love to get that factored out and let other people hack on it.
> My web UI skills are laughable.

Actually I was saying that Twisted could provide the core functionality and Foolscap could still provide the web UI - but if you wanted to break things out even further, but I suppose this would also present an opportunity for some third party to plug in some web UI on the side of Twisted that was not necessarily related to Foolscap, which would be cool too.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120331/a548a7cf/attachment.htm 

From exarkun at twistedmatrix.com  Thu Mar  1 06:06:45 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 01 Mar 2012 13:06:45 -0000
Subject: [Twisted-Python] ProcessMonitor stderr stdout
In-Reply-To: <CAFvbmcmmDMJEGtnsqnqWp1HvjtiNzE9uGMK19V431---3cBWiw@mail.gmail.com>
References: <CAFvbmcmmDMJEGtnsqnqWp1HvjtiNzE9uGMK19V431---3cBWiw@mail.gmail.com>
Message-ID: <20120301130645.9647.321761079.divmod.xquotient.4@localhost6.localdomain6>

On 12:16 am, kmcintyre at greenchargenet.com wrote:
>Newbie question:
>
>I'm calling addProcess and everything works well, but I'm trying to
>understand how to capture/handle stderr stdout for that spawned 
>process.

I don't think you'll find a way to do this in the current version of the 
code.

There are a couple open tickets for expanding ProcessMonitor to allow 
more control of this (and more):

  http://twistedmatrix.com/trac/ticket/194
  http://twistedmatrix.com/trac/ticket/4440

It looks like the previous contributor may have moved on.  Are you 
interested in working on this feature?

Jean-Paul



From tobias.oberstein at tavendo.de  Thu Mar  1 09:11:03 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 1 Mar 2012 08:11:03 -0800
Subject: [Twisted-Python] connectionMade, TLS and DoS protection timeouts
In-Reply-To: <20120229141247.4576.1371664473.divmod.xquotient.47@localhost6.localdomain6>
References: <634914A010D0B943A035D226786325D42D5992F9EA@EXVMBX020-12.exch020.serverdata.net>
	<20120229141247.4576.1371664473.divmod.xquotient.47@localhost6.localdomain6>
Message-ID: <634914A010D0B943A035D226786325D42D5AB77C4C@EXVMBX020-12.exch020.serverdata.net>

> >I was wondering how I could protect a Twisted server from evil clients
> >initiating, but never completing a TLS handshake.
> >
> >connectionMade is only called when the TLS handshake has completed,
> >right?
> 
> Actually, this is not right.  It's sort of a wart, but connectionMade is called when
> the underlying TCP connection is established.  The TLS handshake will always
> complete at some later time.
> 
> One reason we (or at least I) have not yet really tried to change this is that
> doing so would make it harder to address just the problem you're talking about.

Thanks for clarifying!

So I guess I'll be fine with triggering a callLater of drop/abortConnection in
connectionMade. Good. Less code changes.

\Tobias



From tobias.oberstein at tavendo.de  Thu Mar  1 09:19:00 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 1 Mar 2012 08:19:00 -0800
Subject: [Twisted-Python] Twisted/PyPy rocks!
Message-ID: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>

Just wanted to say: PyPy running Twisted rocks!

Works just out of the box: PyPy, Twisted + Autobahn.

Speedups of up to multiple times .. without a single code change.

Btw:
* Tornado seems to be unstable on PyPy .. at least in my testing (sporadic segfaults)
* have been able to outperform node.js and others (incl. JVM) based WebSocket implementations
* only beaten by websocket++ - a C++/ASIO based implementation. expected.

==

Couple of points:

* Have been able to use poll reactor on Linux, but epoll doesnt work .. is that expected? Maybe because the epoll reactor implementation uses Twisted own C wrapper instead of the - only
recently - available one in Python standard lib?

* I will test PyPy with kqueue on FreeBSD .. 

* Are there regular buildslaves running trial on PyPy? Does that make sense?

\Tobias



From p.mayers at imperial.ac.uk  Thu Mar  1 09:54:03 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 01 Mar 2012 16:54:03 +0000
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <4F4FA9AB.40407@imperial.ac.uk>

On 01/03/12 16:19, Tobias Oberstein wrote:
> Just wanted to say: PyPy running Twisted rocks!
>
> Works just out of the box: PyPy, Twisted + Autobahn.
>
> Speedups of up to multiple times .. without a single code change.
>

Interesting. I keep meaning to look into PyPy.

> * Have been able to use poll reactor on Linux, but epoll doesnt work
> .. is that expected? Maybe because the epoll reactor implementation
> uses Twisted own C wrapper instead of the - only recently - available
> one in Python standard lib?

Yes, see:

http://twistedmatrix.com/trac/ticket/3114



From itamar at itamarst.org  Thu Mar  1 10:05:03 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 1 Mar 2012 12:05:03 -0500
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdat
	a.net>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>

> Couple of points:
>
> * Have been able to use poll reactor on Linux, but epoll doesnt work .. is
> that expected? Maybe because the epoll reactor implementation uses Twisted
> own C wrapper instead of the - only
> recently - available one in Python standard lib?

That was fixed in trunk recently, you could try that.

> * I will test PyPy with kqueue on FreeBSD ..
>
> * Are there regular buildslaves running trial on PyPy? Does that make
> sense?

Hopefully soon, we do want PyPy to be a fully supported official platform.




From rlotun at gmail.com  Thu Mar  1 10:25:13 2012
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 1 Mar 2012 17:25:13 +0000
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
Message-ID: <CAFJezo2V1iHzzFyL2WXciZ_fSVxF+Nba-HdLV_O0ohSJ2pt_4g@mail.gmail.com>

On Thu, Mar 1, 2012 at 5:05 PM, Itamar Turner-Trauring
<itamar at itamarst.org>wrote:

>
> Hopefully soon, we do want PyPy to be a fully supported official platform.


The only thing keeping us from trying it out in production is the current
incomplete pyOpenSSL support (unless I've missed some new developments on
that front).

Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120301/4def15a8/attachment.html>

From exarkun at twistedmatrix.com  Thu Mar  1 11:15:42 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 01 Mar 2012 18:15:42 -0000
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
Message-ID: <20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>

On 05:05 pm, itamar at itamarst.org wrote:
>[snip]
>>
>>* Are there regular buildslaves running trial on PyPy? Does that make
>>sense?
>
>Hopefully soon, we do want PyPy to be a fully supported official 
>platform.

Not soon - already.  We've had a PyPy builder for more than a year now:

    http://buildbot.twistedmatrix.com/builders/lucid32-pypy

Only a small number of tests fail, but many more are skipped due to 
missing dependencies.

Fixing these failing tests, or working on getting the dependencies 
working on PyPy, would be a great way to contribute to both Twisted and 
PyPy. :)

Jean-Paul



From danbryan at gmail.com  Thu Mar  1 17:47:07 2012
From: danbryan at gmail.com (Daniel Bryan)
Date: Fri, 2 Mar 2012 11:47:07 +1100
Subject: [Twisted-Python] Non-PDF version of the Twisted book?
Message-ID: <CADopz67YWrN2-Qew78zuhQdmz1b-oGEh=eJDF2OeP3fZrLWzEg@mail.gmail.com>

I'm new to Twisted and very interested in learning more, and I learn best
with something like a book.

I came across this:

*twisted*matrix.com/documents/current/core/howto/*book*.pdf

I was wondering if there's a copy of it available in a form other than PDF?
I'd like to read it on my Kindle, so if there's a version in an eBook
format or even just HTML that'd be superb!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120302/9e7cb1c2/attachment.html>

From tobias.oberstein at tavendo.de  Thu Mar  1 18:04:38 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 1 Mar 2012 17:04:38 -0800
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
	<20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>
Message-ID: <634914A010D0B943A035D226786325D42D5AB77F6F@EXVMBX020-12.exch020.serverdata.net>

> Fixing these failing tests, or working on getting the dependencies working on
> PyPy, would be a great way to contribute to both Twisted and PyPy. :)
> 
> Jean-Paul

It's funny: kqueue seems to be chasing me;)

I've got PyPy release built from source on FreeBSD9, and Twisted trunk running
complete Autobahn WebSockets testsuite green. Fine. But only for poll reactor.

As it turns out, kqueue support in PyPy is not yet there .. I've contacted the
PyPy guys .. code was started, but unfinished.

I guess I'll take on finishing kqueue/PyPy. Have to see how complex that gets.
My motivation is making FreeBSD, kqueue, Twisted, PyPy a fully working
combination.

In that course, I might also setup a 2nd FreeBSD slave for PyPy/Twisted trials.

I have yet to try pyOpenSSL, as that is actually the last piece (hopefully) of the
puzzle ... hopefully that doesn't introduce more issues ..

Cheers,
Tobias



From itamar at itamarst.org  Thu Mar  1 18:18:00 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 01 Mar 2012 20:18:00 -0500
Subject: [Twisted-Python] Non-PDF version of the Twisted book?
In-Reply-To: <CADopz67YWrN2-Qew78zuhQdmz1b-oGEh=eJDF2OeP3fZrLWzEg@mail.gmail.com>
References: <CADopz67YWrN2-Qew78zuhQdmz1b-oGEh=eJDF2OeP3fZrLWzEg@mail.gmail.com>
Message-ID: <4F501FC8.9030007@itamarst.org>

On 03/01/2012 07:47 PM, Daniel Bryan wrote:
> I'm new to Twisted and very interested in learning more, and I learn 
> best with something like a book.
>
> I came across this:
>
> *twisted*matrix.com/documents/current/core/howto/ 
> <http://matrix.com/documents/current/core/howto/>*book*.pdf
>
> I was wondering if there's a copy of it available in a form other than 
> PDF? I'd like to read it on my Kindle, so if there's a version in an 
> eBook format or even just HTML that'd be superb!
There's 
http://twistedmatrix.com/documents/current/core/howto/index.html, but 
that's not a single HTML file.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120301/dab6f6a4/attachment.html>

From exarkun at twistedmatrix.com  Fri Mar  2 06:40:20 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 02 Mar 2012 13:40:20 -0000
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <634914A010D0B943A035D226786325D42D5AB77F6F@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
	<20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D42D5AB77F6F@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120302134020.9647.550847402.divmod.xquotient.19@localhost6.localdomain6>

On 01:04 am, tobias.oberstein at tavendo.de wrote:
>>Fixing these failing tests, or working on getting the dependencies 
>>working on
>>PyPy, would be a great way to contribute to both Twisted and PyPy. :)
>>
>>Jean-Paul
>
>It's funny: kqueue seems to be chasing me;)
>
>I've got PyPy release built from source on FreeBSD9, and Twisted trunk 
>running
>complete Autobahn WebSockets testsuite green. Fine. But only for poll 
>reactor.
>
>As it turns out, kqueue support in PyPy is not yet there .. I've 
>contacted the
>PyPy guys .. code was started, but unfinished.
>
>I guess I'll take on finishing kqueue/PyPy. Have to see how complex 
>that gets.
>My motivation is making FreeBSD, kqueue, Twisted, PyPy a fully working
>combination.
>
>In that course, I might also setup a 2nd FreeBSD slave for PyPy/Twisted 
>trials.

Great!  If hardware is an issue at all, we have access to a FreeBSD 
machine; just waiting for someone to set up a slave on it.
>I have yet to try pyOpenSSL, as that is actually the last piece 
>(hopefully) of the
>puzzle ... hopefully that doesn't introduce more issues ..

Unfortunately, pyOpenSSL does not work on current PyPy.  There are just 
a few simple APIs missing from PyPy's cpyext feature that pyOpenSSL 
depends on, but they're blockers.

Jean-Paul



From rgacote at appropriatesolutions.com  Fri Mar  2 07:52:46 2012
From: rgacote at appropriatesolutions.com (Ray Cote)
Date: Fri, 02 Mar 2012 09:52:46 -0500 (EST)
Subject: [Twisted-Python] Non-PDF version of the Twisted book?
In-Reply-To: <4F501FC8.9030007@itamarst.org>
Message-ID: <b241e8e5-b281-48a5-a724-04777a94c5e9@Ray-iMac-2011.local>

Is there any interest in taking the existing Twisted documentation and moving it to a collaborative ePub environment like Booktype? 
<http://www.sourcefabric.org/en/booktype/> 

And yes, if the core Twisted team sees value in that, I'd be happy to volunteer to do the conversion. 
--Ray 

----- Original Message -----

> From: "Itamar Turner-Trauring" <itamar at itamarst.org>
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Sent: Thursday, March 1, 2012 8:18:00 PM
> Subject: Re: [Twisted-Python] Non-PDF version of the Twisted book?

> On 03/01/2012 07:47 PM, Daniel Bryan wrote:
> > I'm new to Twisted and very interested in learning more, and I
> > learn
> > best with something like a book.
> 

> > I came across this:
> 

> > twisted matrix.com/documents/current/core/howto/ book .pdf
> 

> > I was wondering if there's a copy of it available in a form other
> > than PDF? I'd like to read it on my Kindle, so if there's a version
> > in an eBook format or even just HTML that'd be superb!
> 

> There's
> http://twistedmatrix.com/documents/current/core/howto/index.html ,
> but that's not a single HTML file.

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 

Ray Cote, President 
Appropriate Solutions, Inc. 
We Build Software 
603.924.6079 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120302/3b7ddaf2/attachment.html>

From exarkun at twistedmatrix.com  Fri Mar  2 09:12:40 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 02 Mar 2012 16:12:40 -0000
Subject: [Twisted-Python] Non-PDF version of the Twisted book?
In-Reply-To: <b241e8e5-b281-48a5-a724-04777a94c5e9@Ray-iMac-2011.local>
References: <4F501FC8.9030007@itamarst.org>
	<b241e8e5-b281-48a5-a724-04777a94c5e9@Ray-iMac-2011.local>
Message-ID: <20120302161240.9647.956097558.divmod.xquotient.29@localhost6.localdomain6>

On 02:52 pm, rgacote at appropriatesolutions.com wrote:
>Is there any interest in taking the existing Twisted documentation and 
>moving it to a collaborative ePub environment like Booktype?
><http://www.sourcefabric.org/en/booktype/>
>
>And yes, if the core Twisted team sees value in that, I'd be happy to 
>volunteer to do the conversion.

We're currently moving into year four of our efforts to convert 
Twisted's documentation from Lore to Sphinx.  That's really where we 
could use some extra help.

Sphinx can generate epub output, as well as many other formats, so once 
we manage to make the switch we should have something to give out to 
people who want to learn about Twisted on their e-reader.

Jean-Paul
>--Ray
>
>----- Original Message -----
>>From: "Itamar Turner-Trauring" <itamar at itamarst.org>
>>To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
>>Sent: Thursday, March 1, 2012 8:18:00 PM
>>Subject: Re: [Twisted-Python] Non-PDF version of the Twisted book?
>
>>On 03/01/2012 07:47 PM, Daniel Bryan wrote:
>> > I'm new to Twisted and very interested in learning more, and I
>> > learn
>> > best with something like a book.
>
>> > I came across this:
>
>> > twisted matrix.com/documents/current/core/howto/ book .pdf
>
>> > I was wondering if there's a copy of it available in a form other
>> > than PDF? I'd like to read it on my Kindle, so if there's a version
>> > in an eBook format or even just HTML that'd be superb!
>
>>There's
>>http://twistedmatrix.com/documents/current/core/howto/index.html ,
>>but that's not a single HTML file.
>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>--
>
>Ray Cote, President
>Appropriate Solutions, Inc.
>We Build Software
>603.924.6079



From glyph at twistedmatrix.com  Fri Mar  2 11:21:54 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 2 Mar 2012 13:21:54 -0500
Subject: [Twisted-Python] Non-PDF version of the Twisted book?
In-Reply-To: <20120302161240.9647.956097558.divmod.xquotient.29@localhost6.localdomain6>
References: <4F501FC8.9030007@itamarst.org>
	<b241e8e5-b281-48a5-a724-04777a94c5e9@Ray-iMac-2011.local>
	<20120302161240.9647.956097558.divmod.xquotient.29@localhost6.localdomain6>
Message-ID: <3F7349EC-AF2F-48F6-8E06-792CB017CAF5@twistedmatrix.com>


On Mar 2, 2012, at 11:12 AM, exarkun at twistedmatrix.com wrote:

> We're currently moving into year four of our efforts to convert 
> Twisted's documentation from Lore to Sphinx.  That's really where we 
> could use some extra help.

For reference, the Sphinx migration ticket is <http://tm.tl/4500>.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120302/4a48a693/attachment.html>

From me at ilyabiin.com  Fri Mar  2 11:54:57 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Fri, 2 Mar 2012 22:54:57 +0400
Subject: [Twisted-Python]  Twisted reactor cpu usage
Message-ID: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>

I'm using epoll reactor and sample HTTP Proxy realization.

From another process i'm executing ~30 HTTP requests per second and
twisted process is consuming 10% cpu

The profiler output is:

        937706 function calls (934675 primitive calls) in 59.988 CPU seconds

  Ordered by: cumulative time
  List reduced from 312 to 15 due to restriction <15>

  ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       1    0.000    0.000   59.988   59.988 base.py:1167(run)
       1    0.076    0.076   59.988   59.988 base.py:1172(mainLoop)
   12697   55.456    0.004   59.253    0.005 epollreactor.py:169(doPoll)
   13553    0.086    0.000    3.797    0.000 log.py:71(callWithLogger)
   13553    0.096    0.000    3.691    0.000 log.py:66(callWithContext)
   13553    0.047    0.000    3.481    0.000 context.py:117(callWithContext)
   13553    0.067    0.000    3.426    0.000 context.py:61(callWithContext)
   13552    0.095    0.000    3.359    0.000 posixbase.py:544(_doReadOrWrite)
    5454    0.097    0.000    1.736    0.000 tcp.py:182(doRead)
    5453    0.167    0.000    1.639    0.000 basic.py:543(dataReceived)
   12697    0.095    0.000    0.587    0.000 base.py:762(runUntilCurrent)
    4453    0.025    0.000    0.574    0.000 http.py:495(rawDataReceived)
    6000    0.036    0.000    0.547    0.000 http.py:1515(lineReceived)
    2000    0.029    0.000    0.454    0.000 tcp.py:371(doConnect)
    5098    0.104    0.000    0.428    0.000 abstract.py:212(doWrite)


        937706 function calls (934675 primitive calls) in 59.988 CPU seconds

  Ordered by: internal time
  List reduced from 312 to 15 due to restriction <15>

  ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   12697   55.456    0.004   59.253    0.005 epollreactor.py:169(doPoll)
   59101    0.277    0.000    0.277    0.000 <string>:1(fileno)
    5098    0.252    0.000    0.252    0.000 tcp.py:212(writeSomeData)
   24453    0.198    0.000    0.198    0.000 __init__.py:1230(getEffectiveLevel)
    5453    0.167    0.000    1.639    0.000 basic.py:543(dataReceived)
    5098    0.104    0.000    0.428    0.000 abstract.py:212(doWrite)
    5454    0.097    0.000    1.736    0.000 tcp.py:182(doRead)
   13553    0.096    0.000    3.691    0.000 log.py:66(callWithContext)
   12697    0.095    0.000    0.587    0.000 base.py:762(runUntilCurrent)
   13552    0.095    0.000    3.359    0.000 posixbase.py:544(_doReadOrWrite)
   13553    0.086    0.000    3.797    0.000 log.py:71(callWithLogger)
       1    0.076    0.076   59.988   59.988 base.py:1172(mainLoop)
   16556    0.074    0.000    0.074    0.000 context.py:86(getContext)
   17451    0.073    0.000    0.094    0.000 epollreactor.py:71(_add)
   17098    0.068    0.000    0.085    0.000 epollreactor.py:112(_remove)
What is wrong? Why twisted perfomance is so poor here?

--
Ilya Biin

From exarkun at twistedmatrix.com  Fri Mar  2 12:39:21 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 02 Mar 2012 19:39:21 -0000
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
Message-ID: <20120302193921.9647.675523279.divmod.xquotient.31@localhost6.localdomain6>

On 06:54 pm, me at ilyabiin.com wrote:
>I'm using epoll reactor and sample HTTP Proxy realization.

See also the question on stackoverflow:

  http://stackoverflow.com/questions/9536732/twisted-reactor-cpu-usage

Jean-Paul



From itamar at itamarst.org  Fri Mar  2 12:50:27 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 2 Mar 2012 14:50:27 -0500
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
Message-ID: <f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>

> I'm using epoll reactor and sample HTTP Proxy realization.
>
> From another process i'm executing ~30 HTTP requests per second and
> twisted process is consuming 10% cpu
>
> What is wrong? Why twisted perfomance is so poor here?

The profile output you included doesn't particularly show anything useful,
unfortunately.

On my laptop ab claims twisted.web is doing 1000 requests/sec listing the
contents of a folder ("twistd -n web --path /tmp"). httperf claims 2500
request/sec. So unless your computer is dramatically slower than my
laptop, that does seem like high CPU usage.

1. What performance do you get out of twisted.web doing a simpler request?

2. What version of Twisted?

3. Was the 10% CPU while running under the profiler?

4. What profiler did you use? cProfile is often better than profile.




From me at ilyabiin.com  Fri Mar  2 12:54:04 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Fri, 2 Mar 2012 23:54:04 +0400
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <20120302193921.9647.675523279.divmod.xquotient.31@localhost6.localdomain6>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<20120302193921.9647.675523279.divmod.xquotient.31@localhost6.localdomain6>
Message-ID: <CAEP3A+084+ac=6AAiyxm6Ej20Vu64LH=9zTJkyjsQhufcBHJvw@mail.gmail.com>

I've never used stack overflow before.
Direct connection to community seems preferrable.

Source code being tested was

import hotshot, hotshot.stats

from twisted.internet import epollreactor
epollreactor.install()

from twisted.internet import reactor
from twisted.web import http
from twisted.web.proxy import Proxy

factory = http.HTTPFactory()
factory.protocol = Proxy

reactor.listenTCP(18001, factory)

reactor.callLater(60, reactor.stop)
prof = hotshot.Profile("stones.prof")
prof.start()
reactor.run()
prof.close()



2012/3/2  <exarkun at twistedmatrix.com>:
> On 06:54 pm, me at ilyabiin.com wrote:
>>I'm using epoll reactor and sample HTTP Proxy realization.
>
> See also the question on stackoverflow:
>
>  http://stackoverflow.com/questions/9536732/twisted-reactor-cpu-usage
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Ilya Biin



From me at ilyabiin.com  Fri Mar  2 12:58:59 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Fri, 2 Mar 2012 23:58:59 +0400
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
Message-ID: <CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>

cpu load was measured out of profiler.
twisted version used is from pip, Twisted==12.0.0

i'll supply http_perf test results a bit later

> 1. What performance do you get out of twisted.web doing a simpler request?
>
> 2. What version of Twisted?
>
> 3. Was the 10% CPU while running under the profiler?
>
> 4. What profiler did you use? cProfile is often better than profile.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Ilya Biin



From glyph at twistedmatrix.com  Fri Mar  2 13:05:40 2012
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 2 Mar 2012 15:05:40 -0500
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
Message-ID: <27E7207C-ACAA-431F-9DD9-BC710907D7A7@twistedmatrix.com>

On Mar 2, 2012, at 2:50 PM, Itamar Turner-Trauring wrote:

> On my laptop ab claims


Note: pretty much everyone should avoid 'ab'.  It mis-reports its results, usually subtly, but sometimes in comical ways; I am pretty sure I've seen it tell me that (a buggy version of) Twisted was doing negative requests per second, then segfault.  Stick to httperf.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120302/33fcccf0/attachment.html>

From me at ilyabiin.com  Fri Mar  2 13:24:08 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Sat, 3 Mar 2012 00:24:08 +0400
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
Message-ID: <CAEP3A+38wDTsrXBFTwRzrdpDnG-54aY9Ur3hcr-9RR+XbYJ-rA@mail.gmail.com>

httperf on "twistd -n web --path /tmp" does 1200 rps
as with my code it does 400 rps only which fits to ~10percent load on 30rps

2012/3/2 Itamar Turner-Trauring <itamar at itamarst.org>:
>> I'm using epoll reactor and sample HTTP Proxy realization.
>>
>> From another process i'm executing ~30 HTTP requests per second and
>> twisted process is consuming 10% cpu
>>
>> What is wrong? Why twisted perfomance is so poor here?
>
> The profile output you included doesn't particularly show anything useful,
> unfortunately.
>
> On my laptop ab claims twisted.web is doing 1000 requests/sec listing the
> contents of a folder ("twistd -n web --path /tmp"). httperf claims 2500
> request/sec. So unless your computer is dramatically slower than my
> laptop, that does seem like high CPU usage.
>
> 1. What performance do you get out of twisted.web doing a simpler request?
>
> 2. What version of Twisted?
>
> 3. Was the 10% CPU while running under the profiler?
>
> 4. What profiler did you use? cProfile is often better than profile.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Ilya Biin



From itamar at itamarst.org  Fri Mar  2 13:25:39 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 2 Mar 2012 15:25:39 -0500
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
	<CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>
Message-ID: <5f0b6286d6269389a18558d8af9c2f69.squirrel@webmail.zoteca.com>

> cpu load was measured out of profiler.

Profilers will slow down your program dramatically. A program that does
10% CPU running under a profiler may use far less CPU when run normally.





From me at ilyabiin.com  Fri Mar  2 13:31:36 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Sat, 3 Mar 2012 00:31:36 +0400
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <5f0b6286d6269389a18558d8af9c2f69.squirrel@webmail.zoteca.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
	<CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>
	<5f0b6286d6269389a18558d8af9c2f69.squirrel@webmail.zoteca.com>
Message-ID: <CAEP3A+3O2xavkMpT7rS26W5CPpDLnVdQy2s-hvgKKSzBdJa_Eg@mail.gmail.com>

Running tests again without a profiler let me achieve 700rps,
but it seems too low for a dummy code either.

plz tell me if i'm wrong

2012/3/3 Itamar Turner-Trauring <itamar at itamarst.org>:
>> cpu load was measured out of profiler.
>
> Profilers will slow down your program dramatically. A program that does
> 10% CPU running under a profiler may use far less CPU when run normally.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Ilya Biin



From me at ilyabiin.com  Fri Mar  2 13:42:50 2012
From: me at ilyabiin.com (Ilya Biin)
Date: Sat, 3 Mar 2012 00:42:50 +0400
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <CAEP3A+3O2xavkMpT7rS26W5CPpDLnVdQy2s-hvgKKSzBdJa_Eg@mail.gmail.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
	<CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>
	<5f0b6286d6269389a18558d8af9c2f69.squirrel@webmail.zoteca.com>
	<CAEP3A+3O2xavkMpT7rS26W5CPpDLnVdQy2s-hvgKKSzBdJa_Eg@mail.gmail.com>
Message-ID: <CAEP3A+3VdV6r3LdzYhO3UwZ7LXfrPa_P92U5SgbTLe1QtnPiZA@mail.gmail.com>

Thank you for help.
As i see there is nothing particular in my test case.

2012/3/3 Ilya Biin <me at ilyabiin.com>:
> Running tests again without a profiler let me achieve 700rps,
> but it seems too low for a dummy code either.
>
> plz tell me if i'm wrong
>
> 2012/3/3 Itamar Turner-Trauring <itamar at itamarst.org>:
>>> cpu load was measured out of profiler.
>>
>> Profilers will slow down your program dramatically. A program that does
>> 10% CPU running under a profiler may use far less CPU when run normally.
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> --
> Ilya Biin



-- 
Ilya Biin



From itamar at itamarst.org  Fri Mar  2 13:50:15 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 2 Mar 2012 15:50:15 -0500
Subject: [Twisted-Python] Twisted reactor cpu usage
In-Reply-To: <CAEP3A+3VdV6r3LdzYhO3UwZ7LXfrPa_P92U5SgbTLe1QtnPiZA@mail.gmail.com>
References: <CAEP3A+0vuYNmFokifNJnh_wudNqbrQ4uHgQFSdt-7bPFzN8YyA@mail.gmail.com>
	<f7943a8899e153b929f729abca2b5416.squirrel@webmail.zoteca.com>
	<CAEP3A+0n=4VQ1oDiEqsmu4r8OK42vwzrU4VMsBEF3=b7iH3ByQ@mail.gmail.com>
	<5f0b6286d6269389a18558d8af9c2f69.squirrel@webmail.zoteca.com>
	<CAEP3A+3O2xavkMpT7rS26W5CPpDLnVdQy2s-hvgKKSzBdJa_Eg@mail.gmail.com>
	<CAEP3A+3VdV6r3LdzYhO3UwZ7LXfrPa_P92U5SgbTLe1QtnPiZA@mail.gmail.com>
Message-ID: <52735ca0272f004ad8f083e1ff969419.squirrel@webmail.zoteca.com>

> Thank you for help.
> As i see there is nothing particular in my test case.

It may be that's just how fast it's going to be, yes.

One potentially easy way to speed things up: try PyPy.




From tobias.oberstein at tavendo.de  Sat Mar  3 15:41:48 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 3 Mar 2012 14:41:48 -0800
Subject: [Twisted-Python] Twisted+PyPy+kqueue => rocks^2!
Message-ID: <634914A010D0B943A035D226786325D42D5AB78504@EXVMBX020-12.exch020.serverdata.net>

It's flying;)

I've added kqueue support to PyPy and got it running with Twisted/PyPy on FreeBSD.

https://bitbucket.org/pypy/pypy/pull-request/29/finish-kqueue-support

Tested with Twisted trunk ('cause of #1918 kqueue support in Twisted)
and hammered with a WebSocket testsuite. Twisted trial not yet ..

Marketing blurb:
"Twisted/PyPy's best supported platform is now BSD (less Linux, since of #3114)"

Sorry, couldn't resist saying that;)

\Tobias



From exarkun at twistedmatrix.com  Sat Mar  3 22:05:29 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Mar 2012 05:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1330837529.05.835818895@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120304/b50e9962/attachment-0001.html>

From tobias.oberstein at tavendo.de  Sun Mar  4 03:54:13 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 4 Mar 2012 02:54:13 -0800
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <20120302134020.9647.550847402.divmod.xquotient.19@localhost6.localdomain6>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
	<20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D42D5AB77F6F@EXVMBX020-12.exch020.serverdata.net>
	<20120302134020.9647.550847402.divmod.xquotient.19@localhost6.localdomain6>
Message-ID: <634914A010D0B943A035D226786325D42D5AB7850B@EXVMBX020-12.exch020.serverdata.net>

> Unfortunately, pyOpenSSL does not work on current PyPy.  There are just a few
> simple APIs missing from PyPy's cpyext feature that pyOpenSSL depends on, but
> they're blockers.

[Sorry if this is slightly OT for this list ..]

Could you eloborate a bit whats needed? 

Also, the 

https://bitbucket.org/pypy/compatibility/wiki/pyopenssl

talks about 

" pyOpenSSL is mostly compatible with PyPy. A few features are unsupported, such as sending data using memoryview objects."

Is that the stuff you are mentioning? 

So pyOpenSSL actually works .. modulo memoryviews? Anything else?

Is there a PyPy ticket tracking this?

I only found

https://bugs.pypy.org/issue527

http://as.ynchrono.us/2011/04/pyopenssl-on-pypy.html

\Tobias



From exarkun at twistedmatrix.com  Sun Mar  4 06:31:40 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Mar 2012 13:31:40 -0000
Subject: [Twisted-Python] Twisted/PyPy rocks!
In-Reply-To: <634914A010D0B943A035D226786325D42D5AB7850B@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D5AB77C5D@EXVMBX020-12.exch020.serverdata.net>
	<588d443e5a273ddb8e84aa61d3658966.squirrel@webmail.zoteca.com>
	<20120301181542.9647.925087300.divmod.xquotient.11@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D42D5AB77F6F@EXVMBX020-12.exch020.serverdata.net>
	<20120302134020.9647.550847402.divmod.xquotient.19@localhost6.localdomain6>
	<634914A010D0B943A035D226786325D42D5AB7850B@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20120304133140.9647.613490946.divmod.xquotient.47@localhost6.localdomain6>

On 10:54 am, tobias.oberstein at tavendo.de wrote:
>>Unfortunately, pyOpenSSL does not work on current PyPy.  There are 
>>just a few
>>simple APIs missing from PyPy's cpyext feature that pyOpenSSL depends 
>>on, but
>>they're blockers.
>
>[Sorry if this is slightly OT for this list ..]

Since it's about Twisted/SSL/PyPy, I'll at least reply to this one. :) 
If you want to discuss any the specific technical issues in more detail, 
there's a separate pyOpenSSL mailing list hosted on Launchpad:

    https://launchpad.net/~pyopenssl-users
>Could you eloborate a bit whats needed?
>
>Also, the
>
>https://bitbucket.org/pypy/compatibility/wiki/pyopenssl
>
>talks about
>
>" pyOpenSSL is mostly compatible with PyPy. A few features are 
>unsupported, such as sending data using memoryview objects."
>
>Is that the stuff you are mentioning?

That wiki page was updated when pyOpenSSL actually did mostly work on 
PyPy.  However, unfortunately, PyPy has changed in ways that mean it no 
longer works at all.
>So pyOpenSSL actually works .. modulo memoryviews? Anything else?
>
>Is there a PyPy ticket tracking this?
>
>I only found
>
>https://bugs.pypy.org/issue527

I filed https://bugs.pypy.org/issue1069 a few days ago about the current 
problem.  The missing APIs are the CPython thread-local storage C APIs. 
They're just a thin layer on top of the appropriate platform-specific 
APIs.

I presume that memoryviews _also_ still do not work.

Jean-Paul
>http://as.ynchrono.us/2011/04/pyopenssl-on-pypy.html
>
>\Tobias



From itamar at itamarst.org  Sun Mar  4 21:15:26 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 04 Mar 2012 23:15:26 -0500
Subject: [Twisted-Python] Anyone still using Python 2.5?
Message-ID: <4F543DDE.8030303@itamarst.org>

In particular, are you using recent versions of Twisted with Python 2.5? 
Dropping support for 2.5 would make it easier for us to begin the work 
of supporting Python 3, so I'm wondering how widespread the use of 
Python 2.5 is. (If you're using the version of Twisted included with 
your distro that doesn't really count, since lack of support in newer 
releases is less relevant.)

If you are using Python 2.5, what is the constraint keeping you there? 
There's Ubuntu LTS 8.04 - any other relevant platforms?

On Windows it looks like 10-12% of PyPI downloads are for Python 2.5:

http://pypi.python.org/pypi/Twisted

-Itamar



From jaroslaw.fedewicz at gmail.com  Mon Mar  5 00:19:47 2012
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Mon, 05 Mar 2012 09:19:47 +0200
Subject: [Twisted-Python] Anyone still using Python 2.5?
In-Reply-To: <4F543DDE.8030303@itamarst.org>
References: <4F543DDE.8030303@itamarst.org>
Message-ID: <4F546913.3070706@gmail.com>

On 05.03.2012 06:15, Itamar Turner-Trauring wrote:
> If you are using Python 2.5, what is the constraint keeping you there?
> There's Ubuntu LTS 8.04 - any other relevant platforms?
There's also Maemo which is sadly stuck with Python 2.5.



From jstpierre at mecheye.net  Mon Mar  5 00:22:33 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 5 Mar 2012 02:22:33 -0500
Subject: [Twisted-Python] Anyone still using Python 2.5?
In-Reply-To: <4F546913.3070706@gmail.com>
References: <4F543DDE.8030303@itamarst.org>
	<4F546913.3070706@gmail.com>
Message-ID: <CAA0H+QS8unrZKmt509vztZVt7Qo19N1b3-Snr0HOA39aVMcKzQ@mail.gmail.com>

Do we expect that people will use new releases of Twisted with Maemo
and Python 2.5?

On Mon, Mar 5, 2012 at 2:19 AM, Yaroslav Fedevych
<jaroslaw.fedewicz at gmail.com> wrote:
> On 05.03.2012 06:15, Itamar Turner-Trauring wrote:
>> If you are using Python 2.5, what is the constraint keeping you there?
>> There's Ubuntu LTS 8.04 - any other relevant platforms?
> There's also Maemo which is sadly stuck with Python 2.5.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
  Jasper



From bino at indoakses-online.com  Tue Mar  6 01:56:29 2012
From: bino at indoakses-online.com (bino oetomo)
Date: Tue, 06 Mar 2012 15:56:29 +0700
Subject: [Twisted-Python] Question : PyNotify call from twist daemon
Message-ID: <4F55D13D.3030907@indoakses-online.com>

Dear All ...

I have a Serial service in my twisted script

Inside my 'class ArduinoReceiver(LineReceiver):' ,
I have a function like :
---START----
     def setdisplay(self, dispmode):
         global mynotify
         self.ntf_title = 'TOMBOL'
         self.ntf_body = 'Coba aja'
         try :
             mynotify.close()
         except :
             pass
         print 'Try to display button notification %s' % (dispmode)
         mynotify = pynotify.Notification(self.ntf_title, self.ntf_body)
         print 'MYNOTIFY ', str(mynotify)

----STOP---


When I try to run my tac file , and do something that will call that 
'setdisplay' function , there is no notification poped-up
But from the log file .. I got
2012-03-06 08:47:51+0000 [-] MYNOTIFY <pynotify.Notification object at 
0x96a5b6c (NotifyNotification at 0x9665d90)>

I made a test using shiped example :
---START---
#!/usr/bin/env python

import pygtk
pygtk.require('2.0')
import pynotify
import sys

if __name__ == '__main__':
     if not pynotify.init("Markup"):
         sys.exit(1)

     n = pynotify.Notification("Summary",
         "Some <b>bold</b>, <u>underlined</u>, <i>italic</i>, " +
         "<a href='http://www.google.com'>linked</a> text")

     if not n.show():
         print "Failed to send notification"
         sys.exit(1)
---STOP----

It work just fine.

My system is : Ubuntu maveric, with just Xorg and OpenBox


Kindly please give me any of your enlightment to fix this problem

Sincerely
-bino-




From p.mayers at imperial.ac.uk  Tue Mar  6 02:33:43 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 06 Mar 2012 09:33:43 +0000
Subject: [Twisted-Python] Question : PyNotify call from twist daemon
In-Reply-To: <4F55D13D.3030907@indoakses-online.com>
References: <4F55D13D.3030907@indoakses-online.com>
Message-ID: <4F55D9F7.30309@imperial.ac.uk>

On 03/06/2012 08:56 AM, bino oetomo wrote:

>
> import pygtk
> pygtk.require('2.0')
> import pynotify

So pynotify is a GTK thing?

Are you using the GTK reactor?



From bino at indoakses-online.com  Tue Mar  6 03:38:44 2012
From: bino at indoakses-online.com (bino oetomo)
Date: Tue, 06 Mar 2012 17:38:44 +0700
Subject: [Twisted-Python] Question : PyNotify call from twist daemon
In-Reply-To: <4F55D9F7.30309@imperial.ac.uk>
References: <4F55D13D.3030907@indoakses-online.com>
	<4F55D9F7.30309@imperial.ac.uk>
Message-ID: <4F55E934.4050208@indoakses-online.com>

Dear Phil
On 03/06/2012 04:33 PM, Phil Mayers wrote:
>
> So pynotify is a GTK thing?
>
I don't know
> Are you using the GTK reactor?
>
Ooopss .. no ...
Could you please tell me how to do it with MultiService ?
I still need run my script using twistd

Sincerely
-bino-
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From p.mayers at imperial.ac.uk  Tue Mar  6 04:14:21 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 06 Mar 2012 11:14:21 +0000
Subject: [Twisted-Python] Question : PyNotify call from twist daemon
In-Reply-To: <4F55E934.4050208@indoakses-online.com>
References: <4F55D13D.3030907@indoakses-online.com>
	<4F55D9F7.30309@imperial.ac.uk>
	<4F55E934.4050208@indoakses-online.com>
Message-ID: <4F55F18D.20103@imperial.ac.uk>

On 06/03/12 10:38, bino oetomo wrote:
> Dear Phil
> On 03/06/2012 04:33 PM, Phil Mayers wrote:
>>
>> So pynotify is a GTK thing?
>>
> I don't know
>> Are you using the GTK reactor?
>>
> Ooopss .. no ...
> Could you please tell me how to do it with MultiService ?
> I still need run my script using twistd

twistd has an CLI argument:

twistd -r <name>

See:

twistd --help-reactors



From bino at indoakses-online.com  Tue Mar  6 04:15:04 2012
From: bino at indoakses-online.com (bino oetomo)
Date: Tue, 06 Mar 2012 18:15:04 +0700
Subject: [Twisted-Python] Question : PyNotify call from twist daemon
In-Reply-To: <4F55E934.4050208@indoakses-online.com>
References: <4F55D13D.3030907@indoakses-online.com>	<4F55D9F7.30309@imperial.ac.uk>
	<4F55E934.4050208@indoakses-online.com>
Message-ID: <4F55F1B8.4070700@indoakses-online.com>

Argh .... ignore my post about this problem.
I just need to add --> mynotify.show() to fix it.
BTW it's not needed when we are not in twisted.

Sincerely
-bino-

On 03/06/2012 05:38 PM, bino oetomo wrote:
> Dear Phil
> On 03/06/2012 04:33 PM, Phil Mayers wrote:
>> So pynotify is a GTK thing?
>>
> I don't know
>> Are you using the GTK reactor?
>>
> Ooopss .. no ...
> Could you please tell me how to do it with MultiService ?
> I still need run my script using twistd
>
> Sincerely
> -bino-
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From penxiao at cisco.com  Wed Mar  7 01:37:03 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Wed, 7 Mar 2012 16:37:03 +0800
Subject: [Twisted-Python] Twisted TCP Window Full due to time-consuming
	fuction
Message-ID: <776373CB9C5EA544A476052F49F1DAE2027F6580@XMB-HKG-41B.cisco.com>

Hi experts

 

I have a program written by twisted to receive data from the server.

But the speed is a little slow.

The problem happened in the code below

    def dataReceived(self, data):

        

        """

        Appends newly received data to the receive buffer, and

        then attempts to parse as many messages as possible.

        """

        

        # Buffer possibly incomplete data first

        self.receiveBuffer += data

                # Attempt to parse as many messages as possible

        while(self.parseBuffer()): 

            pass

the function of parseBuffer will return false if the self.receiveBuffer
has no message, and then the twisted will receive data from buffer
again.

Because the function of parseBuffer is a litter time consuming, so the
receive buffer is full sometimes.

 

 

Could there anybody help me out? Thanks a lot.

 

Best

Regards,

 

Xiao peng

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120307/ab55b3c9/attachment-0001.html>

From p.mayers at imperial.ac.uk  Wed Mar  7 02:46:54 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 07 Mar 2012 09:46:54 +0000
Subject: [Twisted-Python] Twisted TCP Window Full due to time-consuming
 fuction
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE2027F6580@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE2027F6580@XMB-HKG-41B.cisco.com>
Message-ID: <4F572E8E.2080704@imperial.ac.uk>

On 03/07/2012 08:37 AM, Peng Xiao -X (penxiao - Digital China at Cisco) 
wrote:

> Because the function of parseBuffer is a litter time consuming, so the
> receive buffer is full sometimes.

The answer is: don't do that.

If parseBuffer is expensive, you will block the reactor, which you must 
not do.

You have two options:

  1. Run the work in a thread with "deferToThread". Note: you MUST NOT 
call any reactor APIs from the thread, except reactor.callFromThread

  2. Break the work up into small pieces, and run it incrementally. See 
twisted.internet.task.coiterate for example; this allows you to run any 
iterator, such as a generator, and get the result as a deferred.



From dynamicgl at gmail.com  Thu Mar  8 08:36:22 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Thu, 8 Mar 2012 23:36:22 +0800
Subject: [Twisted-Python] ampoule & cx_Freeze
Message-ID: <CABkOF6QUKBbKQ5jHs8NvAvq+4EZ2d=aGKpsTP_c_1_Qr_zKo1Q@mail.gmail.com>

Hi All


    Have your guys used cx_Freeze & ampoule? I did try to make a standalone
executable app with ampoule; however, the program failed to execute at the
early stage of starting. I noticed an exception raised on utils.py:

p = FilePath(__main__.__file__)
AttributeError: 'module' object has no attribute __file__.


I guess once the main file is tuned into the executable one, __file__ will
be removed. It looks like ampoule need this attribute.

Any idea?

Thanks

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120308/d7c5f8a0/attachment-0001.html>

From mostawesomedude at gmail.com  Thu Mar  8 11:00:28 2012
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Fri, 9 Mar 2012 02:00:28 +0800
Subject: [Twisted-Python] ampoule & cx_Freeze
In-Reply-To: <CABkOF6QUKBbKQ5jHs8NvAvq+4EZ2d=aGKpsTP_c_1_Qr_zKo1Q@mail.gmail.com>
References: <CABkOF6QUKBbKQ5jHs8NvAvq+4EZ2d=aGKpsTP_c_1_Qr_zKo1Q@mail.gmail.com>
Message-ID: <CALiqSLf20yBWQ2f=DLvmgq0ZmUaeudD7CHkDsZKzOQSi6CYa4Q@mail.gmail.com>

Off the top of my head, multiprocessing.freeze_support() might help. I
wonder if dialtone is on this list, he might know more.

~ C.

On Thu, Mar 8, 2012 at 11:36 PM, gelin yan <dynamicgl at gmail.com> wrote:
> Hi All
>
>
>     Have your guys used cx_Freeze & ampoule? I did try to make a standalone
> executable app with ampoule; however, the program failed to execute at the
> early stage of starting. I noticed an exception raised on utils.py:
>
> p = FilePath(__main__.__file__)
> AttributeError: 'module' object has no attribute __file__.
>
>
> I guess once the main file is tuned into the executable one, __file__ will
> be removed. It looks like ampoule need this attribute.
>
> Any idea?
>
> Thanks
>
> gelin yan
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>



From dynamicgl at gmail.com  Thu Mar  8 22:57:23 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Fri, 9 Mar 2012 13:57:23 +0800
Subject: [Twisted-Python] ampoule & cx_Freeze
In-Reply-To: <CALiqSLf20yBWQ2f=DLvmgq0ZmUaeudD7CHkDsZKzOQSi6CYa4Q@mail.gmail.com>
References: <CABkOF6QUKBbKQ5jHs8NvAvq+4EZ2d=aGKpsTP_c_1_Qr_zKo1Q@mail.gmail.com>
	<CALiqSLf20yBWQ2f=DLvmgq0ZmUaeudD7CHkDsZKzOQSi6CYa4Q@mail.gmail.com>
Message-ID: <CABkOF6R8NEuqyDiW0s3YjHe9xWbjjOxtVif1EU+ZopSV9YBpxA@mail.gmail.com>

On Fri, Mar 9, 2012 at 2:00 AM, Corbin Simpson <mostawesomedude at gmail.com>wrote:

> Off the top of my head, multiprocessing.freeze_support() might help. I
> wonder if dialtone is on this list, he might know more.
>
> ~ C.
>
> On Thu, Mar 8, 2012 at 11:36 PM, gelin yan <dynamicgl at gmail.com> wrote:
> > Hi All
> >
> >
> >     Have your guys used cx_Freeze & ampoule? I did try to make a
> standalone
> > executable app with ampoule; however, the program failed to execute at
> the
> > early stage of starting. I noticed an exception raised on utils.py:
> >
> > p = FilePath(__main__.__file__)
> > AttributeError: 'module' object has no attribute __file__.
> >
> >
> > I guess once the main file is tuned into the executable one, __file__
> will
> > be removed. It looks like ampoule need this attribute.
> >
> > Any idea?
> >
> > Thanks
> >
> > gelin yan
> >
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>

> --
> When the facts change, I change my mind. What do you do, sir? ~ Keynes
>
> Corbin Simpson
> <MostAwesomeDude at gmail.com>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


I have tried freeze_support..It didn't work. I guess it would be not easy
to use cx_Freeze for this case, I may try to find out other methods to pack
the app. Thx again.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120309/dd80b97c/attachment-0001.html>

From sweetnivi88 at gmail.com  Sat Mar 10 16:06:18 2012
From: sweetnivi88 at gmail.com (nivedita datta)
Date: Sun, 11 Mar 2012 04:36:18 +0530
Subject: [Twisted-Python] Distributed system programming
Message-ID: <CA+XLstvc7Sjh2-j2Kbkg6R_2wVkNJesbYOcLc4X0oDyx+WD=aw@mail.gmail.com>

Hi,
I have the following query

"Can programming for distributed system done using twisted?
If yes, kindly provide some resource to get started.

If not, please suggest any existing module for the same on python."

Regards,
Nivedita
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120311/bfbab3fd/attachment-0001.html>

From washort at twistedmatrix.com  Sat Mar 10 16:29:09 2012
From: washort at twistedmatrix.com (Allen Short)
Date: Sat, 10 Mar 2012 15:29:09 -0800
Subject: [Twisted-Python] Distributed system programming
In-Reply-To: <CA+XLstvc7Sjh2-j2Kbkg6R_2wVkNJesbYOcLc4X0oDyx+WD=aw@mail.gmail.com>
References: <CA+XLstvc7Sjh2-j2Kbkg6R_2wVkNJesbYOcLc4X0oDyx+WD=aw@mail.gmail.com>
Message-ID: <CAEzUHiNmJhoru7cJrCMh6+PMV-ORU8r3mK2ZN8eoWSPhJtgTcg@mail.gmail.com>

Twisted is a general library for networking -- you can use it to write both
servers and clients, usable together in the same process or separately.
"Distributed system" is a broad name that covers a lot of different things,
so there are several different possible approaches. Here are some general
resources you may find useful:

A general introduction to writing software with Twisted:
http://krondo.com/?page_id=1327

AMP, a simple bidirectional message protocol:
http://twistedmatrix.com/documents/current/core/howto/amp.html
http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html

Can you describe more specifically what you're interested in writing?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120310/90d5a859/attachment.html>

From exarkun at twistedmatrix.com  Sat Mar 10 22:05:33 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Mar 2012 05:05:33 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1331442333.96.2145323958@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120311/6d112d33/attachment.html>

From sweetnivi88 at gmail.com  Sun Mar 11 00:52:01 2012
From: sweetnivi88 at gmail.com (nivedita datta)
Date: Sun, 11 Mar 2012 13:22:01 +0530
Subject: [Twisted-Python] Distributed system programming
In-Reply-To: <CAEzUHiNmJhoru7cJrCMh6+PMV-ORU8r3mK2ZN8eoWSPhJtgTcg@mail.gmail.com>
References: <CA+XLstvc7Sjh2-j2Kbkg6R_2wVkNJesbYOcLc4X0oDyx+WD=aw@mail.gmail.com>
	<CAEzUHiNmJhoru7cJrCMh6+PMV-ORU8r3mK2ZN8eoWSPhJtgTcg@mail.gmail.com>
Message-ID: <CA+XLstsC5qAPdNSE9GtQFR785EfA1=b+oj2NzeNGQ5rfVKicVA@mail.gmail.com>

Hi,

I am trying to implement a distributed Denial of service attack on servers.
Its for a class project work.

Kindly provide some useful links/resources for the same if possible.

Regards,
Nivedita


On Sun, Mar 11, 2012 at 4:59 AM, Allen Short <washort at twistedmatrix.com>wrote:

> Twisted is a general library for networking -- you can use it to write
> both servers and clients, usable together in the same process or
> separately. "Distributed system" is a broad name that covers a lot of
> different things, so there are several different possible approaches. Here
> are some general resources you may find useful:
>
> A general introduction to writing software with Twisted:
> http://krondo.com/?page_id=1327
>
> AMP, a simple bidirectional message protocol:
> http://twistedmatrix.com/documents/current/core/howto/amp.html
> http://twistedmatrix.com/documents/current/api/twisted.protocols.amp.html
>
> Can you describe more specifically what you're interested in writing?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120311/f5cc67fa/attachment.html>

From schapel at umich.edu  Sun Mar 11 10:18:29 2012
From: schapel at umich.edu (Steve Chapel)
Date: Sun, 11 Mar 2012 12:18:29 -0400
Subject: [Twisted-Python] HTTPS proxy with twisted?
Message-ID: <4F5CD055.40905@umich.edu>

Hi,

I am doing a research project for a security class that involves writing 
an HTTP and HTTPS proxy. The intent of this proxy is to ensure that 
communications that should be secure are secure, without bombarding the 
user with false warnings about potential man-in-the-middle attacks, for 
example, when a website legitimately uses a self-signed certificate.

I will need to write an HTTPS proxy, which will examine the certificates 
sent from the web server and determine whether the certificate is valid 
or invalid. If the proxy determines if the certificate is valid, I will 
need to resign the document. I suppose this will require that the proxy 
be a certificate authority and will generate certificates for websites, 
which the proxy will then use to sign the documents. Will this be 
something that twisted can do easily? If so, where can I find 
documentation for how to do this?

Thanks,
Steve



From p.mayers at imperial.ac.uk  Mon Mar 12 09:33:34 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 12 Mar 2012 15:33:34 +0000
Subject: [Twisted-Python] HTTPS proxy with twisted?
In-Reply-To: <4F5CD055.40905@umich.edu>
References: <4F5CD055.40905@umich.edu>
Message-ID: <4F5E174E.5060305@imperial.ac.uk>

On 11/03/12 16:18, Steve Chapel wrote:

> I will need to write an HTTPS proxy, which will examine the certificates
> sent from the web server and determine whether the certificate is valid
> or invalid. If the proxy determines if the certificate is valid, I will
> need to resign the document. I suppose this will require that the proxy
> be a certificate authority and will generate certificates for websites,
> which the proxy will then use to sign the documents. Will this be
> something that twisted can do easily? If so, where can I find
> documentation for how to do this?

This is a pretty hard question to answer in this form, and depends on 
what you mean by "easily". Since you say it's classwork I'm reluctant to 
say too much, but...

Fundamentally, the only "difficult" bit of this project in terms of 
Twisted capabilities is finding the original destination address of your 
intercepted connections (so that you can do a "lookaside" connection and 
verify / impersonate the far-end cert)

Presumably you'll be using something like Linux/IPTables to do this:

iptables t nat -A PREROUTING \
   -p tcp --dport 443 -j REDIRECT --to-port <twisted>


In that case, you can find the original destination address by calling:

socket.getsockopt(self.transport.fileno(), SOL_IP, SO_ORIGINAL_DST, 16)

...in your transport "connectionMade". You will presumably then want to 
start up an SSL connection to the original IP (or draw from cache) to 
find the far-end cert attributes (note: plural), call out to your local 
MITM CA for an impersonated cert/key, then call startTLS in server mode 
using a context holding the fake cert/key.

This isn't very hard, and Twisted has everything you need (accept TCP 
connections, make outgoing SSL, find server certs, call out to 
subprocess, startTLS in server mode) except the SO_ORIGINAL_DST stuff 
(which is easy to add in).

Anyway, I hope this helps; good luck with the assignment!

Cheers,
Phil



From schapel at umich.edu  Mon Mar 12 10:11:10 2012
From: schapel at umich.edu (Steve Chapel)
Date: Mon, 12 Mar 2012 12:11:10 -0400
Subject: [Twisted-Python] HTTPS proxy with twisted?
In-Reply-To: <4F5E174E.5060305@imperial.ac.uk>
References: <4F5CD055.40905@umich.edu> <4F5E174E.5060305@imperial.ac.uk>
Message-ID: <4F5E201E.5050209@umich.edu>

Well, the HTTPS proxy actually not an assignment. Getting the HTTPS 
proxy working is just the starting point we need before we can do any 
research, and at this point the research project is due in four weeks. 
If you can point to some twisted code for an HTTPS proxy or 
documentation for how to write one, that won't be giving us undue help 
but will enable us to have a chance to get the research done at all. At 
this point, I'm thinking of using a regular Python program because I 
found a MITM proxy already written, so we could start the research right 
away.

-- Steve


On 03/12/2012 11:33 AM, Phil Mayers wrote:
> On 11/03/12 16:18, Steve Chapel wrote:
>
>> I will need to write an HTTPS proxy, which will examine the certificates
>> sent from the web server and determine whether the certificate is valid
>> or invalid. If the proxy determines if the certificate is valid, I will
>> need to resign the document. I suppose this will require that the proxy
>> be a certificate authority and will generate certificates for websites,
>> which the proxy will then use to sign the documents. Will this be
>> something that twisted can do easily? If so, where can I find
>> documentation for how to do this?
> This is a pretty hard question to answer in this form, and depends on
> what you mean by "easily". Since you say it's classwork I'm reluctant to
> say too much, but...
>
> Fundamentally, the only "difficult" bit of this project in terms of
> Twisted capabilities is finding the original destination address of your
> intercepted connections (so that you can do a "lookaside" connection and
> verify / impersonate the far-end cert)
>
> Presumably you'll be using something like Linux/IPTables to do this:
>
> iptables t nat -A PREROUTING \
>     -p tcp --dport 443 -j REDIRECT --to-port<twisted>
>
>
> In that case, you can find the original destination address by calling:
>
> socket.getsockopt(self.transport.fileno(), SOL_IP, SO_ORIGINAL_DST, 16)
>
> ...in your transport "connectionMade". You will presumably then want to
> start up an SSL connection to the original IP (or draw from cache) to
> find the far-end cert attributes (note: plural), call out to your local
> MITM CA for an impersonated cert/key, then call startTLS in server mode
> using a context holding the fake cert/key.
>
> This isn't very hard, and Twisted has everything you need (accept TCP
> connections, make outgoing SSL, find server certs, call out to
> subprocess, startTLS in server mode) except the SO_ORIGINAL_DST stuff
> (which is easy to add in).
>
> Anyway, I hope this helps; good luck with the assignment!
>
> Cheers,
> Phil
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From penxiao at cisco.com  Tue Mar 13 03:50:03 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Tue, 13 Mar 2012 17:50:03 +0800
Subject: [Twisted-Python] How to Improve Twisted efficiency
Message-ID: <776373CB9C5EA544A476052F49F1DAE202877BB4@XMB-HKG-41B.cisco.com>

Hi experts,

 

I wrote a TCP client program used twisted to receive lots of data from the server and decode them for analysis.

But the efficiency is ugly.

I used “profile” and “pstats” to analysis and found selectreactor.py is time consuming.

what is selectreactor.py used for?

How can I improve that? 

Very thanks.

 

2012-03-13 17:46:10+0800 [-] Tue Mar 13 17:46:10 2012    astar_prof.txt

2012-03-13 17:46:10+0800 [-] 

2012-03-13 17:46:10+0800 [-]          9111 function calls (9070 primitive calls) in 119.166 CPU seconds

2012-03-13 17:46:10+0800 [-] 

2012-03-13 17:46:10+0800 [-]    Ordered by: internal time

2012-03-13 17:46:10+0800 [-]    List reduced from 496 to 15 due to restriction <15>

2012-03-13 17:46:10+0800 [-] 

2012-03-13 17:46:10+0800 [-]    ncalls  tottime  percall  cumtime  percall filename:lineno(function)

2012-03-13 17:46:10+0800 [-]       171  119.092    0.696  119.094    0.696 :0(select)

2012-03-13 17:46:10+0800 [-]       156    0.005    0.000    0.007    0.000 http.py:225(datetimeToLogString)

2012-03-13 17:46:10+0800 [-]         4    0.005    0.001    0.007    0.002 protocol.py:131(dataReceived)

2012-03-13 17:46:10+0800 [-]       171    0.004    0.000    0.029    0.000 base.py:718(runUntilCurrent)

2012-03-13 17:46:10+0800 [-]       324    0.004    0.000    0.004    0.000 :0(append)

2012-03-13 17:46:10+0800 [-]       160    0.004    0.000    0.004    0.000 :0(heappop)

2012-03-13 17:46:10+0800 [-]       171    0.004    0.000  119.114    0.697 selectreactor.py:93(doSelect)

2012-03-13 17:46:10+0800 [-]       164    0.003    0.000    0.003    0.000 :0(heappush)

2012-03-13 17:46:10+0800 [-]       342    0.003    0.000    0.006    0.000 base.py:699(_insertNewDelayedCalls)

2012-03-13 17:46:10+0800 [-]       342    0.003    0.000    0.003    0.000 :0(keys)

2012-03-13 17:46:10+0800 [-]       358    0.002    0.000    0.002    0.000 :0(fileno)

2012-03-13 17:46:10+0800 [-]       163    0.002    0.000    0.005    0.000 base.py:648(callLater)

2012-03-13 17:46:10+0800 [-]      19/1    0.002    0.000    0.003    0.003 xml2dict.py:16(_parse_node)

2012-03-13 17:46:10+0800 [-]       686    0.002    0.000    0.002    0.000 :0(time)

2012-03-13 17:46:10+0800 [-]        51    0.002    0.000    0.003    0.000 :0(encode)

2012-03-13 17:46:10+0800 [-]

Best

Regards,

 

Xiao Peng(肖鹏)

Cisco Systems

GSP-Beijing (China)

Office: +86 10 8507 7181

Mobile: +86 18600560077(preferred)

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120313/3ce91d76/attachment.html>

From itamar at itamarst.org  Tue Mar 13 06:31:01 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 13 Mar 2012 08:31:01 -0400
Subject: [Twisted-Python] How to Improve Twisted efficiency
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE202877BB4@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE202877BB4@XMB-HKG-41B.cisco.com>
Message-ID: <4F5F3E05.50105@itamarst.org>

On 03/13/2012 05:50 AM, Peng Xiao -X (penxiao - Digital China at Cisco) 
wrote:
>
> Hi experts,
>
> I wrote a TCP client program used twisted to receive lots of data from 
> the server and decode them for analysis.
>
> But the efficiency is ugly.
>
> I used*"profile" and "pstats" *to analysis and found 
> *selectreactor.py* is time consuming.
>
> what is *selectreactor.py* used for?
>
> How can I improve that?
>
>
selectreactor is the core event loop; it waits for events to happen and 
calls other code.

In general, if you have many connections (hundreds or thousands) 
switching to the IOCP reactor on Windows, epoll on Linux, or poll on 
other Unix platforms may help (next release will also have kqueue 
support for FreeBSD). Running your application with PyPy may also help.

It may also be, though, that your program is taking a long time because 
it's waiting for data to arrive, for example, and that won't show up in 
a profile because it has nothing to do with CPU time.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120313/ae4fae16/attachment.html>

From p.mayers at imperial.ac.uk  Tue Mar 13 06:52:42 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 13 Mar 2012 12:52:42 +0000
Subject: [Twisted-Python] HTTPS proxy with twisted?
In-Reply-To: <4F5E201E.5050209@umich.edu>
References: <4F5CD055.40905@umich.edu> <4F5E174E.5060305@imperial.ac.uk>
	<4F5E201E.5050209@umich.edu>
Message-ID: <4F5F431A.3070606@imperial.ac.uk>

On 12/03/12 16:11, Steve Chapel wrote:
> Well, the HTTPS proxy actually not an assignment. Getting the HTTPS
> proxy working is just the starting point we need before we can do any
> research, and at this point the research project is due in four weeks.
> If you can point to some twisted code for an HTTPS proxy or
> documentation for how to write one, that won't be giving us undue help
> but will enable us to have a chance to get the research done at all. At
> this point, I'm thinking of using a regular Python program because I
> found a MITM proxy already written, so we could start the research right
> away.

I got curious about how difficult this would be, and spent a bit of time 
on it last night.

See here:

https://github.com/philmayers/txsslmitm

This is MIT licensed, as per Twisted. It is really a proof-of-concept, 
but it does work in my tests.

I'm impressed how few lines of code it takes in Twisted to do this; it 
really is an awesome framework!



From _ at lvh.cc  Tue Mar 13 12:12:08 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 13 Mar 2012 11:12:08 -0700
Subject: [Twisted-Python] HTTPS proxy with twisted?
In-Reply-To: <4F5F431A.3070606@imperial.ac.uk>
References: <4F5CD055.40905@umich.edu> <4F5E174E.5060305@imperial.ac.uk>
	<4F5E201E.5050209@umich.edu> <4F5F431A.3070606@imperial.ac.uk>
Message-ID: <CAE_Hg6aNUrVJ-0QO90bewcw78RnmLCDJsdMnhER=d5oGRHeJ5w@mail.gmail.com>

Hi


I wrote a proxy designed to lie once. It's called minitrue. SSL MITMing is
still a feature I hope that it will grow one day (see issue tracker).

It'll probably be a lot easier to hack this on top of minitrue than
starting from scratch :) If you do that, I will gladly help code review
your pull requests :)

You can find it on github: https://github.com/lvh/minitrue

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120313/7c1a78a9/attachment.html>

From oubiwann at twistedmatrix.com  Tue Mar 13 18:48:45 2012
From: oubiwann at twistedmatrix.com (Duncan McGreggor)
Date: Tue, 13 Mar 2012 20:48:45 -0400
Subject: [Twisted-Python] PyCon and Sprint Photos
Message-ID: <CAFJQhU6UOmhy9L4in6u9JKrVEnbPvyqg435JsYnOsLk7_MuZVA@mail.gmail.com>

Hey folks,

I put up the tiny amount of photos I took this year here, many of
which are of Twisted hackers:
  http://www.flickr.com/photos/oubiwann/sets/72157629579346369/

Enjoy!

/me awaits more and better photos from others...

d



From itamar at itamarst.org  Tue Mar 13 20:44:49 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 13 Mar 2012 22:44:49 -0400
Subject: [Twisted-Python] cfreactor and global state
Message-ID: <4F600621.30704@itamarst.org>

twisted.internet.test.reactormixins says:

    CFReactor uses APIs which manipulate global state, so it's not safe
    to run its own reactor-builder tests under itself.

We also don't have a buildslave running under cfreactor. Which means 
it's currently completely untested. I filed a ticket to fix that - 
https://bugs.launchpad.net/twisted-buildbot-configuration/+bug/954680

That still leaves the problem with global state though. Since we want to 
move towards having tests create new reactors, that's problematic. What 
global state does it manipulate, and what can we do about it?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120313/281148b8/attachment.html>

From ali.lusana at gmail.com  Wed Mar 14 03:46:08 2012
From: ali.lusana at gmail.com (Lusana Ali)
Date: Wed, 14 Mar 2012 20:46:08 +1100
Subject: [Twisted-Python] Basic Resource Tree question
Message-ID: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>

Hi,

Im trying to setup just a very simple site using a Resource Tree (some
code below).
The problem I'm having is getting the root / to render. so when i go
to domain.com/ I get
"No Such Resource
No such child resource"

The child nodes {terms,profile} are rendering fine. So looking at the
resource tree and the main.py which holds the Main() Resource... how
can I fix this issue. I have already tried setting isLeaf = True in
Main() but that breaks terms and profile

Cheers

server.py
=======================================
# resource tree
root = Main()
root.putChild('terms', Terms())
root.putChild('profile', Profile())

site = server.Site(root)
reactor.listenTCP(6346, site)
reactor.run()

main.py
=======================================
class IndexPage(Resource):

    def __init__(self):
        print "created new index page"
        Resource.__init__(self)

    def render_GET(self, request):
        print "rendering get"
        return "<html>INDEX PAGE</html>"


class Main(Resource):

    def get_child(self, name, request):
        print "trying to get main"
        return IndexPage()



From jstpierre at mecheye.net  Wed Mar 14 03:58:59 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Wed, 14 Mar 2012 05:58:59 -0400
Subject: [Twisted-Python] Basic Resource Tree question
In-Reply-To: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>
References: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>
Message-ID: <CAA0H+QQMjL8dK34g2tL5YGs5kAQyJfUxTAKe3t9fPt9KdVBJPQ@mail.gmail.com>

This probably isn't the proper way to do it, but it should work:

    root = resource.Resource()
    root.putChild('terms', Terms())
    root.putChild('profile', Profile())
    root.putChild('', IndexPage())

On Wed, Mar 14, 2012 at 5:46 AM, Lusana Ali <ali.lusana at gmail.com> wrote:
> Hi,
>
> Im trying to setup just a very simple site using a Resource Tree (some
> code below).
> The problem I'm having is getting the root / to render. so when i go
> to domain.com/ I get
> "No Such Resource
> No such child resource"
>
> The child nodes {terms,profile} are rendering fine. So looking at the
> resource tree and the main.py which holds the Main() Resource... how
> can I fix this issue. I have already tried setting isLeaf = True in
> Main() but that breaks terms and profile
>
> Cheers
>
> server.py
> =======================================
> # resource tree
> root = Main()
> root.putChild('terms', Terms())
> root.putChild('profile', Profile())
>
> site = server.Site(root)
> reactor.listenTCP(6346, site)
> reactor.run()
>
> main.py
> =======================================
> class IndexPage(Resource):
>
>    def __init__(self):
>        print "created new index page"
>        Resource.__init__(self)
>
>    def render_GET(self, request):
>        print "rendering get"
>        return "<html>INDEX PAGE</html>"
>
>
> class Main(Resource):
>
>    def get_child(self, name, request):
>        print "trying to get main"
>        return IndexPage()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
  Jasper



From enriquejr at gmail.com  Wed Mar 14 04:16:47 2012
From: enriquejr at gmail.com (Enrique Samson Jr,)
Date: Wed, 14 Mar 2012 18:16:47 +0800
Subject: [Twisted-Python] Basic Resource Tree question
In-Reply-To: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>
References: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>
Message-ID: <4F60700F.3040705@gmail.com>

On 03/14/2012 05:46 PM, Lusana Ali wrote:
> class Main(Resource):
>
>     def get_child(self, name, request):
>         print "trying to get main"
>         return IndexPage()

Try changing get_child to getChild.

--Enrique



From ali.lusana at gmail.com  Wed Mar 14 04:43:06 2012
From: ali.lusana at gmail.com (Lusana Ali)
Date: Wed, 14 Mar 2012 21:43:06 +1100
Subject: [Twisted-Python] Basic Resource Tree question
In-Reply-To: <4F60700F.3040705@gmail.com>
References: <CAOO2HJ1Y0Pn-2rRK+W4rXf_rwsTj=+17x1j9PtUPmbG6ccL0fA@mail.gmail.com>
	<4F60700F.3040705@gmail.com>
Message-ID: <CAOO2HJ16TzMivma9xuWRXH89u+ttD0c6EEmAbB_OUxrdOiPq0Q@mail.gmail.com>

That worked a charm and I feel the fool for not having noticed that
simple error =)

Much appreciated!
Lusana

On Wed, Mar 14, 2012 at 9:16 PM, Enrique Samson Jr, <enriquejr at gmail.com> wrote:
> On 03/14/2012 05:46 PM, Lusana Ali wrote:
>> class Main(Resource):
>>
>>     def get_child(self, name, request):
>>         print "trying to get main"
>>         return IndexPage()
>
> Try changing get_child to getChild.
>
> --Enrique
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From Zoran.Bosnjak at sloveniacontrol.si  Wed Mar 14 05:57:02 2012
From: Zoran.Bosnjak at sloveniacontrol.si (=?Windows-1252?Q?Zoran_Bo=9Anjak?=)
Date: Wed, 14 Mar 2012 11:57:02 +0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
Message-ID: <9A4A540809FC414FB909E3C44D3A53C54AEF44C5@veles.kzps.si>

Hello all,
Thanks for all your comments.

I have filed a ticket regarding this issue:
http://twistedmatrix.com/trac/ticket/5552

I hope it will be accepted as a problem.

regards,
Zoran

________________________________________
From: twisted-python-bounces at twistedmatrix.com [twisted-python-bounces at twistedmatrix.com] on behalf of Zoran Bošnjak [Zoran.Bosnjak at sloveniacontrol.si]
Sent: Sunday, February 19, 2012 5:49 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] accurate periodic call

Hello all,
I was astonished to find out that looping call period depends on the system time by default. The periodic tick can even stall for a long time, if the system time jumps backwards during program execution. It turned out that this is in fact a python problem (not providing a monotonic time, at least not for posix).

I urgently need accurate periodic call in my program and I've found the solution below that seems to be working. I kindly ask you for your comments:
- Is this monotonic_time implementation OK from python perspective?
- Is monkey patch to the reactor OK or is there any other solution more appropriate in this case (I do not want to patch each looping call, but once in the application)?
- Does this patch have any negative influence to the rest of the reactor?
- How would you implement a periodic function call in twisted application (as accurate as possible)?
- Any chance to see something implemented inside twisted and/or python, so that applications don't need this kind of tricks?

Thanks a lot for your comments.

Zoran

#! /usr/bin/env python

from twisted.internet import task
from twisted.internet import reactor
import os
import time
import ctypes

# python MONOTONIC time, borrowed here
# http://stackoverflow.com/questions/1205722/how-do-i-get-monotonic-time-durations-in-python
if os.name == 'posix':

    CLOCK_MONOTONIC = 1 # see <linux/time.h>

    class timespec(ctypes.Structure):
        _fields_ = [
            ('tv_sec', ctypes.c_long),
            ('tv_nsec', ctypes.c_long)
        ]

    librt = ctypes.CDLL('librt.so.1', use_errno=True)
    clock_gettime = librt.clock_gettime
    clock_gettime.argtypes = [ctypes.c_int, ctypes.POINTER(timespec)]

    def monotonic_time():
        t = timespec()
        if clock_gettime(CLOCK_MONOTONIC, ctypes.pointer(t)) != 0:
            errno_ = ctypes.get_errno()
            raise OSError(errno_, os.strerror(errno_))
        return t.tv_sec + t.tv_nsec * 1e-9

    # monkey patch the reactor
    reactor.seconds = monotonic_time

# TODO: check for other platforms!!
else:
    monotonic_time = time.time

def tick():
    """This function is suppose to execute once a second,
    regardless of the system time."""

    print 'tick', monotonic_time()

loop = task.LoopingCall(tick)
loop.start(1.0)

reactor.run()

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dynamicgl at gmail.com  Wed Mar 14 08:04:13 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Wed, 14 Mar 2012 22:04:13 +0800
Subject: [Twisted-Python] a weird problem about IOCP reactor and perspective
	broker
Message-ID: <CABkOF6Rx3FDzio8ynKwM=B68dTxrjh3XNKrF9Nf7nkO82HW_NQ@mail.gmail.com>

Hi all

    I attach two files for this problem. When i used iocp reactor with pb,
I noticed once the remote method returned a deferred object, the client app
would raise many exceptions..kinda weird.

It is ok to return the value directly (no defer)

 The most interested part is when I used select reactor, everything was
fine..I am not sure whether it is a bug on IOCP.

OS: windows 7 64 bit
py: 2.6.6 32bit
twisted version: 12.0.0

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120314/cf1e5bb3/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pb_bugs_client.py
Type: application/octet-stream
Size: 1062 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20120314/cf1e5bb3/attachment-0004.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pb_bugs_server.py
Type: application/octet-stream
Size: 480 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20120314/cf1e5bb3/attachment-0005.obj>

From exarkun at twistedmatrix.com  Wed Mar 14 10:32:22 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Mar 2012 16:32:22 -0000
Subject: [Twisted-Python] accurate periodic call
In-Reply-To: <9A4A540809FC414FB909E3C44D3A53C54AEF44C5@veles.kzps.si>
References: <9A4A540809FC414FB909E3C44D3A53C54AEF0FC4@veles.kzps.si>
	<9A4A540809FC414FB909E3C44D3A53C54AEF44C5@veles.kzps.si>
Message-ID: <20120314163222.12235.1906770271.divmod.xquotient.2@localhost6.localdomain6>

On 11:57 am, zoran.bosnjak at sloveniacontrol.si wrote:
>Hello all,
>Thanks for all your comments.
>
>I have filed a ticket regarding this issue:
>http://twistedmatrix.com/trac/ticket/5552
>
>I hope it will be accepted as a problem.

Hi Zoran,

Thanks for the follow-up.  We're already tracking this feature, so I've 
marked your ticket as a duplicate of the existing ticket:

    http://twistedmatrix.com/trac/ticket/2424

Jean-Paul



From itamar at itamarst.org  Wed Mar 14 15:52:55 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 14 Mar 2012 17:52:55 -0400
Subject: [Twisted-Python] Anyone still using Python 2.5?
In-Reply-To: <4F543DDE.8030303@itamarst.org>
References: <4F543DDE.8030303@itamarst.org>
Message-ID: <4F611337.6060507@itamarst.org>

I've opened a ticket to drop support for Python 2.5 *after* our next 
release: http://twistedmatrix.com/trac/ticket/5553

If this would be a major problem for you please comment on the ticket; 
just to clarify, regardless of the ticket's resolution the next release 
(12.1) will continue to support Python 2.5.

-Itamar



From penxiao at cisco.com  Wed Mar 14 20:34:10 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Thu, 15 Mar 2012 10:34:10 +0800
Subject: [Twisted-Python] Twisted Log Efficiency is poor?
Message-ID: <776373CB9C5EA544A476052F49F1DAE20287803B@XMB-HKG-41B.cisco.com>

Hi experts,

 

I have a question about twisted log.

I used “from twisted.python import log” and “log.msg(msg_str)” to store log for my twisted program (about 40MB log message)

But it’s efficiency is poor, it will take more time to finish my program when the log is open, if I close the log, the program will be more faster than before.

What is the problem?

What should I do?

 

 

Best

Regards,

 

Xiao Peng(肖鹏)

Cisco Systems

GSP-Beijing (China)

Office: +86 10 8507 7181

Mobile: +86 18600560077(preferred)

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120315/1a3dd95a/attachment-0001.html>

From dynamicgl at gmail.com  Thu Mar 15 00:33:04 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Thu, 15 Mar 2012 14:33:04 +0800
Subject: [Twisted-Python] a weird problem about IOCP reactor and
	perspective broker
In-Reply-To: <CABkOF6Rx3FDzio8ynKwM=B68dTxrjh3XNKrF9Nf7nkO82HW_NQ@mail.gmail.com>
References: <CABkOF6Rx3FDzio8ynKwM=B68dTxrjh3XNKrF9Nf7nkO82HW_NQ@mail.gmail.com>
Message-ID: <CABkOF6Rf7JYo_-A7mGLkfh4Wg_nZZR7Dyb4aUUqBuVC=McDOow@mail.gmail.com>

On Wed, Mar 14, 2012 at 10:04 PM, gelin yan <dynamicgl at gmail.com> wrote:

> Hi all
>
>     I attach two files for this problem. When i used iocp reactor with pb,
> I noticed once the remote method returned a deferred object, the client app
> would raise many exceptions..kinda weird.
>
> It is ok to return the value directly (no defer)
>
>  The most interested part is when I used select reactor, everything was
> fine..I am not sure whether it is a bug on IOCP.
>
> OS: windows 7 64 bit
> py: 2.6.6 32bit
> twisted version: 12.0.0
>
> Regards
>
> gelin yan
>

Hi All

    I guess the implementation of IOCP reactor has problems. I ran another
test with AMP. sending some chunks data and the program showed some errors
which didn't exist with select reactor.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120315/fa44d827/attachment.html>

From dynamicgl at gmail.com  Thu Mar 15 08:54:57 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Thu, 15 Mar 2012 22:54:57 +0800
Subject: [Twisted-Python] Twisted Log Efficiency is poor?
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE20287803B@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE20287803B@XMB-HKG-41B.cisco.com>
Message-ID: <CABkOF6TsDAmRLvgQPZC98WW3V0_3-ZwEsFjz7jiQcHyuJQ0chw@mail.gmail.com>

2012/3/15 Peng Xiao -X (penxiao - Digital China at Cisco) <penxiao at cisco.com
>

> Hi experts,****
>
> ** **
>
> I have a question about twisted log.****
>
> I used “from twisted.python import log” and “log.msg(msg_str)” to store
> log for my twisted program (about 40MB log message)****
>
> But it’s efficiency is poor, it will take more time to finish my program
> when the log is open, if I close the log, the program will be more faster
> than before.****
>
> What is the problem?****
>
> What should I do?****
>
> ** **
>
> ** **
>
> Best****
>
> Regards,****
>
>  ****
>
> Xiao Peng(肖鹏)****
>
> Cisco Systems****
>
> GSP-Beijing (China)****
>
> Office: +86 10 8507 7181****
>
> Mobile: +86 18600560077(preferred)****
>
> ** **
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> Hi...If you log chunks data at once,, it definitely will chock your
reactor. I suggest split your data and log by using cooperate.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120315/d82bbc04/attachment.html>

From exarkun at twistedmatrix.com  Thu Mar 15 10:20:44 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 15 Mar 2012 16:20:44 -0000
Subject: [Twisted-Python] Twisted Log Efficiency is poor?
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE20287803B@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE20287803B@XMB-HKG-41B.cisco.com>
Message-ID: <20120315162044.3216.139645284.divmod.xquotient.1@localhost6.localdomain6>

On 02:34 am, penxiao at cisco.com wrote:
>Hi experts,
>
>I have a question about twisted log.
>
>I used “from twisted.python import log” and “log.msg(msg_str)” to store 
>log for my twisted program (about 40MB log message)
>
>But it’s efficiency is poor, it will take more time to finish my 
>program when the log is open, if I close the log, the program will be 
>more faster than before.
>
>What is the problem?
>
>What should I do?

Why are you logging 40 megabyte messages?  That's not what the logging 
system is for.

Jean-Paul



From exarkun at twistedmatrix.com  Thu Mar 15 10:25:26 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 15 Mar 2012 16:25:26 -0000
Subject: [Twisted-Python] a weird problem about IOCP reactor and
 perspective broker
In-Reply-To: <CABkOF6Rf7JYo_-A7mGLkfh4Wg_nZZR7Dyb4aUUqBuVC=McDOow@mail.gmail.com>
References: <CABkOF6Rx3FDzio8ynKwM=B68dTxrjh3XNKrF9Nf7nkO82HW_NQ@mail.gmail.com>
	<CABkOF6Rf7JYo_-A7mGLkfh4Wg_nZZR7Dyb4aUUqBuVC=McDOow@mail.gmail.com>
Message-ID: <20120315162526.3216.560795216.divmod.xquotient.2@localhost6.localdomain6>

On 06:33 am, dynamicgl at gmail.com wrote:
>On Wed, Mar 14, 2012 at 10:04 PM, gelin yan <dynamicgl at gmail.com> 
>wrote:
>>Hi all
>>
>>     I attach two files for this problem. When i used iocp reactor with 
>>pb,
>>I noticed once the remote method returned a deferred object, the 
>>client app
>>would raise many exceptions..kinda weird.
>>
>>It is ok to return the value directly (no defer)
>>
>>  The most interested part is when I used select reactor, everything 
>>was
>>fine..I am not sure whether it is a bug on IOCP.
>>
>>OS: windows 7 64 bit
>>py: 2.6.6 32bit
>>twisted version: 12.0.0
>>
>>Regards
>>
>>gelin yan
>
>Hi All
>
>    I guess the implementation of IOCP reactor has problems. I ran 
>another
>test with AMP. sending some chunks data and the program showed some 
>errors
>which didn't exist with select reactor.

Please file a bug report in the issue tracker.

Jean-Paul



From plr.vincent at gmail.com  Fri Mar 16 13:56:40 2012
From: plr.vincent at gmail.com (Vincent Pelletier)
Date: Fri, 16 Mar 2012 20:56:40 +0100
Subject: [Twisted-Python] libusb-1 file descriptors
Message-ID: <201203162056.41353.plr.vincent@gmail.com>

Hi.

First, sorry for non-threaded reply. I found the thread on gmane while 
googling a bit.

I'll try to explain the design and intended use of python-libusb1 polling 
integration. I lack twisted knowledge to tell how it could be integrated, 
though.

As for the "poller" interface, it's python's select.poll interface.

Basically, libusb needs to be called into explicitly[1] whenever events 
needing some handling occur. It signals those events through a set of poll-
able file descriptors[2]. Alternatively (for OSes which cannot poll arbitrary 
file descriptors), LibUSBContext.getNextTimeout can be used to know for how 
long app can sleep (or do its own business) before next libusb event handling 
time... But that only works when libusb calls (transfer submission, 
synchronous or not) are all done in a single thread, otherwise they might last 
too long.

When several threads can simultaneously wait for events to occur (ex: a poller 
waiting on an asynchronous transfer with long timeout, then in a second thread 
a synchronous call expected to return quickly) a more complex scheme needs to 
be used. See libusb doc for the whole story.
In short, I decided to just write a stand-alone polling thread to support 
multi-thread access, as I couldn't figure a pythonic way of supporting several 
concurrent libusb-oriented pollers: C API relies on a mutable boolean-ish set 
by libusb code, and read by application code. As I try to never expose ctype 
instances to application code, and thought it should be enough to provide 
module user with a "start once, then forget" thread for handling this (much 
easier in python than in C), I went that way.
Besides the functions working with that boolean, I exposed all needed methods 
on LibUSBContext class, so different implementations can be done without 
hacking/working around, and hopefully without using libusb1 module directly 
(except for symbolic constants). I am opened to suggestions on how to expose 
the few missing functions in a pythonic way.

[1] LibUSBContext.handleEvents & co.
[2] LibUSBContext.getPollFDList, LibUSBContext.setPollFDNotifiers

Regards,
-- 
Vincent Pelletier



From dynamicgl at gmail.com  Fri Mar 16 23:29:32 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 17 Mar 2012 13:29:32 +0800
Subject: [Twisted-Python] a weird problem about IOCP reactor and
 perspective broker
In-Reply-To: <20120315162526.3216.560795216.divmod.xquotient.2@localhost6.localdomain6>
References: <CABkOF6Rx3FDzio8ynKwM=B68dTxrjh3XNKrF9Nf7nkO82HW_NQ@mail.gmail.com>
	<CABkOF6Rf7JYo_-A7mGLkfh4Wg_nZZR7Dyb4aUUqBuVC=McDOow@mail.gmail.com>
	<20120315162526.3216.560795216.divmod.xquotient.2@localhost6.localdomain6>
Message-ID: <CABkOF6Ts08atUx6BCdCFerbs=Pw_NMXpHsMNMYtMd0d7-+O4ng@mail.gmail.com>

On Fri, Mar 16, 2012 at 12:25 AM, <exarkun at twistedmatrix.com> wrote:

> On 06:33 am, dynamicgl at gmail.com wrote:
> >On Wed, Mar 14, 2012 at 10:04 PM, gelin yan <dynamicgl at gmail.com>
> >wrote:
> >>Hi all
> >>
> >>     I attach two files for this problem. When i used iocp reactor with
> >>pb,
> >>I noticed once the remote method returned a deferred object, the
> >>client app
> >>would raise many exceptions..kinda weird.
> >>
> >>It is ok to return the value directly (no defer)
> >>
> >>  The most interested part is when I used select reactor, everything
> >>was
> >>fine..I am not sure whether it is a bug on IOCP.
> >>
> >>OS: windows 7 64 bit
> >>py: 2.6.6 32bit
> >>twisted version: 12.0.0
> >>
> >>Regards
> >>
> >>gelin yan
> >
> >Hi All
> >
> >    I guess the implementation of IOCP reactor has problems. I ran
> >another
> >test with AMP. sending some chunks data and the program showed some
> >errors
> >which didn't exist with select reactor.
>
> Please file a bug report in the issue tracker.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi exarkun

    I have opened a ticket for this issue. Could you please delete #5561?
It is a duplicated to #5562. Thx.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120317/dcdee4d6/attachment-0001.html>

From itamar at itamarst.org  Sat Mar 17 05:53:43 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 17 Mar 2012 07:53:43 -0400
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
Message-ID: <4F647B47.1050805@itamarst.org>

On 03/16/2012 10:51 PM, dreid at wolfwood.twistedmatrix.com wrote:
> Author: dreid
> Date: Fri Mar 16 20:51:46 2012
> New Revision: 33889
>
> Added:
>     trunk/twisted/web/topfiles/5395.feature
>        - copied unchanged from r33888, /branches/elementresource-5395/twisted/web/topfiles/5395.feature
> Modified:
>     trunk/twisted/web/template.py
>     trunk/twisted/web/test/test_template.py

I notice no documentation was added. Perhaps we should start requiring 
documentation updates for all new features?



From itamar at itamarst.org  Sat Mar 17 18:53:48 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 17 Mar 2012 20:53:48 -0400
Subject: [Twisted-Python] "twistd web --port=9000" no longer works
Message-ID: <4F65321C.4030406@itamarst.org>

Apparently this was removed as part of deprecating the old strports 
syntax, but:

1) "twistd web --port=9000" never gave a deprecation warnings.

    itamar at blake:~$ twistd --version
    twistd (the Twisted daemon) 11.0.0
    Copyright (c) 2001-2011 Twisted Matrix Laboratories.
    See LICENSE for details.

    itamar at blake:~$ twistd -n web --port=9000 --path=/
    2012-03-17 20:50:21-0400 [-] Log opened.
    2012-03-17 20:50:21-0400 [-] twistd 11.0.0 (/usr/bin/python 2.7.2)
    starting up.
    2012-03-17 20:50:21-0400 [-] reactor class:
    twisted.internet.selectreactor.SelectReactor.
    2012-03-17 20:50:21-0400 [-] twisted.web.server.Site starting on 9000
    2012-03-17 20:50:21-0400 [-] Starting factory
    <twisted.web.server.Site instance at 0x180bd40>

2) The current --help just says " -p, --port=   strports description of 
the port to start the server on." It'll be completely unclear to users 
what that means.

I am tempted to revert the ticket that removed this functionality - can 
anyone tell me why we shouldn't?

In particular, before the removal should be re-merged again, the 
original syntax should be restored, along with decent --help. We should 
always support just giving the port number and defaulting to TCP. As it 
is, we've gone from a straightforward command line option that also had 
some sophisticated features to something that will break in a 
mysterious, hard to debug manner.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120317/767dff44/attachment.html>

From hankshz at gmail.com  Sat Mar 17 19:01:49 2012
From: hankshz at gmail.com (hz hanks)
Date: Sat, 17 Mar 2012 18:01:49 -0700
Subject: [Twisted-Python] Problem about Multithread
Message-ID: <CAPerbByNYfmGCHX-FN5VhZi+4yoesZVAXV9Y4rhckWvZq0qwyQ@mail.gmail.com>

Hi, All

I just started Twisted and I've a problem when using it. I want to
write a program for both the client and the server that the client can
download something from the server. Therefore, I want every client and
server pair can use multithread to download the different parts of the
files at the same time in order to increase the download speed. But I
just know how to send simple message between server and client, such
as protocol.Protocol.dataReceived. Any one can give me some advice.
Very appreciated!

Best,
Hanks



From itamar at itamarst.org  Sat Mar 17 19:05:37 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 17 Mar 2012 21:05:37 -0400
Subject: [Twisted-Python] Problem about Multithread
In-Reply-To: <CAPerbByNYfmGCHX-FN5VhZi+4yoesZVAXV9Y4rhckWvZq0qwyQ@mail.gmail.com>
References: <CAPerbByNYfmGCHX-FN5VhZi+4yoesZVAXV9Y4rhckWvZq0qwyQ@mail.gmail.com>
Message-ID: <4F6534E1.4070508@itamarst.org>

On 03/17/2012 09:01 PM, hz hanks wrote:
> Hi, All
>
> I just started Twisted and I've a problem when using it. I want to
> write a program for both the client and the server that the client can
> download something from the server. Therefore, I want every client and
> server pair can use multithread to download the different parts of the
> files at the same time in order to increase the download speed. But I
> just know how to send simple message between server and client, such
> as protocol.Protocol.dataReceived. Any one can give me some advice.
> Very appreciated!

You don't need multiple threads to do multiple network operations (e.g. 
parallel downloads) in Twisted. Just run multiple client requests, e.g. 
by calling reactor.connectTCP multiple times.



From glyph at twistedmatrix.com  Sat Mar 17 19:47:24 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 17 Mar 2012 21:47:24 -0400
Subject: [Twisted-Python] "twistd web --port=9000" no longer works
In-Reply-To: <4F65321C.4030406@itamarst.org>
References: <4F65321C.4030406@itamarst.org>
Message-ID: <E612D2BB-8AEC-4D1F-B6FC-FE84CE9FF1C1@twistedmatrix.com>


On Mar 17, 2012, at 8:53 PM, Itamar Turner-Trauring wrote:

> Apparently this was removed as part of deprecating the old strports syntax, but:
> 
> 1) "twistd web --port=9000" never gave a deprecation warnings.

This is a problem for future user-visible feature deprecations: Python won't show you deprecation warnings any more unless you ask, so if a feature is deprecated in the user interface of something, we need a separate mechanism to alert the user of it.  The idea with most features is that trial will always show you all deprecation warnings, so you'll notice while running your tests :).

Somebody needs to go through and look at currently deprecated command-line features to ensure that this won't happen in the future - any volunteers?.
> itamar at blake:~$ twistd --version
> twistd (the Twisted daemon) 11.0.0
> Copyright (c) 2001-2011 Twisted Matrix Laboratories.
> See LICENSE for details.
> 
> itamar at blake:~$ twistd -n web --port=9000 --path=/
> 2012-03-17 20:50:21-0400 [-] Log opened.
> 2012-03-17 20:50:21-0400 [-] twistd 11.0.0 (/usr/bin/python 2.7.2) starting up.
> 2012-03-17 20:50:21-0400 [-] reactor class: twisted.internet.selectreactor.SelectReactor.
> 2012-03-17 20:50:21-0400 [-] twisted.web.server.Site starting on 9000
> 2012-03-17 20:50:21-0400 [-] Starting factory <twisted.web.server.Site instance at 0x180bd40>
> 
> 2) The current --help just says " -p, --port=   strports description of the port to start the server on." It'll be completely unclear to users what that means.

There should be a new ticket: --help-strports or something, and every option that takes one should refer to it, similar to --help-auth-types for cred plugins.

> I am tempted to revert the ticket that removed this functionality - can anyone tell me why we shouldn't?
> 
> In particular, before the removal should be re-merged again, the original syntax should be restored, along with decent --help. We should always support just giving the port number and defaulting to TCP. As it is, we've gone from a straightforward command line option that also had some sophisticated features to something that will break in a mysterious, hard to debug manner.

I am inclined to agree, sort of.  Currently, the plain integer will default to just IPv4.  An un-decorated integer really should (eventually) default to listening on all available interfaces, IPv4 and IPv6 together.

Jean-Paul managed to convince me in the review for http://twistedmatrix.com/trac/ticket/4473 that supporting raw integers made the implementation ugly, but reflecting upon this experience I think I was wrong, and that clarity of the user experience here is more important than clarity of the implementation.  I do still think that examples should move towards using 'tcp:80', though, so users might realize there's something other than 'tcp' that could go there.

I'm glad you noticed it: please go ahead and revert the removal.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120317/feb014e9/attachment.html>

From glyph at twistedmatrix.com  Sat Mar 17 20:15:34 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 17 Mar 2012 22:15:34 -0400
Subject: [Twisted-Python] cfreactor and global state
In-Reply-To: <4F600621.30704@itamarst.org>
References: <4F600621.30704@itamarst.org>
Message-ID: <E85DA6DC-3245-454E-8EE4-E2897FB77126@twistedmatrix.com>

On Mar 13, 2012, at 10:44 PM, Itamar Turner-Trauring wrote:

> twisted.internet.test.reactormixins says:
> CFReactor uses APIs which manipulate global state, so it's not safe to run its own reactor-builder tests under itself.
> 
> We also don't have a buildslave running under cfreactor. Which means it's currently completely untested. I filed a ticket to fix that - https://bugs.launchpad.net/twisted-buildbot-configuration/+bug/954680

Not completely untested. If you search a recent OS X build log, for example <http://buildbot.twistedmatrix.com/builders/osx10.6-py2.6-select/builds/1952/steps/select/logs/stdio>, you will see lots of "_CFReactor" tests that pass.

Ironically a builder run under CFReactor itself will test less code related to the CFReactor, because it will only run the haphazard tests that test the global reactor by returning Deferreds rather than running the reactor.  But it does test different stuff, so there's value in having it run both ways.

> That still leaves the problem with global state though. Since we want to move towards having tests create new reactors, that's problematic. What global state does it manipulate, and what can we do about it?

It manipulates the CoreFoundation run loop for its thread.  Ironically, the reason that this is the case is that CF's API, much like Twisted itself, is not reentrant.  If you're interested, <http://developer.apple.com/library/mac/#documentation/CoreFoundation/Reference/CFRunLoopRef/Reference/reference.html> is a pretty comprehensive reference.

We can't really do anything about it unless we can make Twisted start a new thread for each reactorbuilder test and then destroy the thread at the end.  Or, unless we mock the whole CF API - which, honestly, isn't that hard, there aren't a ton of functions and they do pretty straightforward stuff.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120317/11c4f020/attachment.html>

From glyph at twistedmatrix.com  Sat Mar 17 20:20:23 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 17 Mar 2012 22:20:23 -0400
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
	elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <4F647B47.1050805@itamarst.org>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
Message-ID: <A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>


On Mar 17, 2012, at 7:53 AM, Itamar Turner-Trauring wrote:

> On 03/16/2012 10:51 PM, dreid at wolfwood.twistedmatrix.com wrote:
>> Author: dreid
>> Date: Fri Mar 16 20:51:46 2012
>> New Revision: 33889
>> 
>> Added:
>>    trunk/twisted/web/topfiles/5395.feature
>>       - copied unchanged from r33888, /branches/elementresource-5395/twisted/web/topfiles/5395.feature
>> Modified:
>>    trunk/twisted/web/template.py
>>    trunk/twisted/web/test/test_template.py
> 
> I notice no documentation was added. Perhaps we should start requiring 
> documentation updates for all new features?

Before the ticket was closed, a separate ticket was filed for documentation: <http://twistedmatrix.com/trac/ticket/4983>.

I don't think that adding a hard requirement for documentation on every new thing as a prerequisite is necessarily a good idea (especially if a new contributor wants to add a feature, this adds to an already substantial burden), but someone should ask a question about documentation on any ticket that doesn't explicitly account for it, very early in the process.

-glyph




From exarkun at twistedmatrix.com  Sat Mar 17 22:05:31 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Mar 2012 04:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1332043531.31.920647481@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120318/926741d3/attachment.html>

From hankshz at gmail.com  Sat Mar 17 23:36:17 2012
From: hankshz at gmail.com (hz hanks)
Date: Sat, 17 Mar 2012 22:36:17 -0700
Subject: [Twisted-Python] Problem about Multithread
In-Reply-To: <4F6534E1.4070508@itamarst.org>
References: <CAPerbByNYfmGCHX-FN5VhZi+4yoesZVAXV9Y4rhckWvZq0qwyQ@mail.gmail.com>
	<4F6534E1.4070508@itamarst.org>
Message-ID: <CAPerbBz20ZYBup9106yH4LwzMORxdHvq3pX9o_Jbf7HGJnFZyg@mail.gmail.com>

Thank you so much for your instant reply.

Sorry for my ignorance, but could you tell how to have several
reactor.connectTCP calls. From the textbook I'm reading, I just know
that I can
first call
reactor.connectTCP(sys.argv[1], int(sys.argv[2]), stdioProxyFactory( ))
and then call
reactor.run( )
Do you mean I can call reactor.connectTCP(sys.argv[1],
int(sys.argv[2]), stdioProxyFactory( )) several times before calling
reactor.run( ) ? Then how my code determine which is the corresponding
connection?

Thank you so much. Waiting for your reply
Best,
Hanks



在 Mar 17, 2012，6:05 PM，Itamar Turner-Trauring <itamar at itamarst.org> 写道：

> On 03/17/2012 09:01 PM, hz hanks wrote:
>> Hi, All
>>
>> I just started Twisted and I've a problem when using it. I want to
>> write a program for both the client and the server that the client can
>> download something from the server. Therefore, I want every client and
>> server pair can use multithread to download the different parts of the
>> files at the same time in order to increase the download speed. But I
>> just know how to send simple message between server and client, such
>> as protocol.Protocol.dataReceived. Any one can give me some advice.
>> Very appreciated!
>
> You don't need multiple threads to do multiple network operations (e.g.
> parallel downloads) in Twisted. Just run multiple client requests, e.g.
> by calling reactor.connectTCP multiple times.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Sun Mar 18 01:19:30 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 18 Mar 2012 03:19:30 -0400
Subject: [Twisted-Python] Problem about Multithread
In-Reply-To: <CAPerbBz20ZYBup9106yH4LwzMORxdHvq3pX9o_Jbf7HGJnFZyg@mail.gmail.com>
References: <CAPerbByNYfmGCHX-FN5VhZi+4yoesZVAXV9Y4rhckWvZq0qwyQ@mail.gmail.com>
	<4F6534E1.4070508@itamarst.org>
	<CAPerbBz20ZYBup9106yH4LwzMORxdHvq3pX9o_Jbf7HGJnFZyg@mail.gmail.com>
Message-ID: <F507F31B-9AE2-48AE-8E4F-5E0A902FD9A6@twistedmatrix.com>


On Mar 18, 2012, at 1:36 AM, hz hanks wrote:

> Thank you so much for your instant reply.
> 
> Sorry for my ignorance, but could you tell how to have several
> reactor.connectTCP calls. From the textbook I'm reading, I just know
> that I can
> first call
> reactor.connectTCP(sys.argv[1], int(sys.argv[2]), stdioProxyFactory( ))
> and then call
> reactor.run( )
> Do you mean I can call reactor.connectTCP(sys.argv[1],
> int(sys.argv[2]), stdioProxyFactory( )) several times before calling
> reactor.run( ) ?

Yes, that's the idea.

> Then how my code determine which is the corresponding
> connection?

Pass some arguments to stdioProxyFactory() and then you can refer to self.factory in your protocol.  It should then be easy to figure out which one is which.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120318/1a2e34a2/attachment.html>

From exarkun at twistedmatrix.com  Sun Mar 18 07:36:53 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Mar 2012 13:36:53 -0000
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <4F647B47.1050805@itamarst.org>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
Message-ID: <20120318133653.3216.323029490.divmod.xquotient.16@localhost6.localdomain6>

On 17 Mar, 11:53 am, itamar at itamarst.org wrote:
>On 03/16/2012 10:51 PM, dreid at wolfwood.twistedmatrix.com wrote:
>>Author: dreid
>>Date: Fri Mar 16 20:51:46 2012
>>New Revision: 33889
>>
>>Added:
>>     trunk/twisted/web/topfiles/5395.feature
>>        - copied unchanged from r33888, 
>>/branches/elementresource-5395/twisted/web/topfiles/5395.feature
>>Modified:
>>     trunk/twisted/web/template.py
>>     trunk/twisted/web/test/test_template.py
>
>I notice no documentation was added. Perhaps we should start requiring
>documentation updates for all new features?

Yes.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Mar 18 07:44:08 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Mar 2012 13:44:08 -0000
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
Message-ID: <20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>

On 02:20 am, glyph at twistedmatrix.com wrote:
>
>On Mar 17, 2012, at 7:53 AM, Itamar Turner-Trauring wrote:
>>On 03/16/2012 10:51 PM, dreid at wolfwood.twistedmatrix.com wrote:
>>>Author: dreid
>>>Date: Fri Mar 16 20:51:46 2012
>>>New Revision: 33889
>>>
>>>Added:
>>>    trunk/twisted/web/topfiles/5395.feature
>>>       - copied unchanged from r33888, 
>>>/branches/elementresource-5395/twisted/web/topfiles/5395.feature
>>>Modified:
>>>    trunk/twisted/web/template.py
>>>    trunk/twisted/web/test/test_template.py
>>
>>I notice no documentation was added. Perhaps we should start requiring
>>documentation updates for all new features?
>
>Before the ticket was closed, a separate ticket was filed for 
>documentation: <http://twistedmatrix.com/trac/ticket/4983>.
>
>I don't think that adding a hard requirement for documentation on every 
>new thing as a prerequisite is necessarily a good idea (especially if a 
>new contributor wants to add a feature, this adds to an already 
>substantial burden), but someone should ask a question about 
>documentation on any ticket that doesn't explicitly account for it, 
>very early in the process.

The way I feel about documentation now makes me read this much as I 
would read a different response to a different question.

You should be able to guess the question from my imagined response:

    I don't think that adding a hard requirement for unit tests on every 
new
    thing as a prerequisite is necessarily a good idea (especially if a 
new
    contributor wants to add a feature, this adds to an already 
substantial
    burden), but someone should ask a question about unit tests on any 
ticket
    that doesn't explicitly account for them, very early in the process.

As usual, I can't prove that writing documentation at the same time (or 
before) an implementation actually produces better results, but I can 
say that this is increasingly my opinion from my personal experience.

*Even* if requiring documentation cut feature contribution by half, I 
think it'd be worthwhile.  Some number of features, undocumented, are 
worth less than half as many with good documentation.

Plus, note that it was not a new contributor who finished this 
particular ticket. ;)

Also, note that http://twistedmatrix.com/trac/wiki/ReviewProcess already 
says, as "Things your branch must contain":

    Appropriate new or modified "End User" guide documentation (in the 
form
    of Lore-formatted xhtml files in the doc/ directory)

So essentially we do require this already, but reviewers seem to largely 
ignore it (so even if we decide this should not be a requirement, 
reviewers are not doing their job properly, and that's another issue we 
should address).
Jean-Paul



From wolfgang at rohdewald.de  Mon Mar 19 01:30:47 2012
From: wolfgang at rohdewald.de (Wolfgang Rohdewald)
Date: Mon, 19 Mar 2012 08:30:47 +0100
Subject: [Twisted-Python] unhandled error in example pb_client.py
Message-ID: <1391924.TvFz8DxG6C@i5>

this is twisted 11.0.0 on kubuntu 11.10

if I call

cd /usr/share/doc/python-twisted-words/examples/pb_client.py
python pb_client.py fdfdasfdfdas.com 1000 a b c

I am getting an unhandled error. Same for servers not answering
or rejecting.

how would I have to modify pb_client if I want to catch and
handle all errors?

my real-world problem is more complicated: In case of error I
show a modal Qt4 message box. This gives me interactions between
twisted and qt4reactor leading to infinite recursion. I can fix that
for DNS lookup failure and not answering servers by temporarily
disabling qt4reactor, but for rejecting servers I cannot get rid
of the unhandled error. But before tackling that, I want to 
understand how I can really catch and handle all errors.

when that works I will have one more problem: I my case
I have
class myClient(pb.PBClientFactory):
    def clientConnectionFailed(self, connector, reason):
        """connection from client to server failed"""
        print 'getErrorMessage:', repr(reason.getErrorMessage())

which gives me
"DNS lookup failed: address u'fdksfsfa0s0f.com' not found: [Errno -5] Zu 
diesem Hostnamen geh\xc3\xb6rt keine Adresse."

so it is translated to German. But pb_client.py returns english messages
if I insert and use myClient. $LANG is the same for both: de_DE.UTF-8
so why does pb_client not translate the message?

-- 
Wolfgang



From glyph at twistedmatrix.com  Mon Mar 19 15:10:27 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 19 Mar 2012 17:10:27 -0400
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
	elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
Message-ID: <1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>


On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:

> On 02:20 am, glyph at twistedmatrix.com wrote:
>> 
>> On Mar 17, 2012, at 7:53 AM, Itamar Turner-Trauring wrote:
>>> On 03/16/2012 10:51 PM, dreid at wolfwood.twistedmatrix.com wrote:
>>>> Author: dreid
>>>> Date: Fri Mar 16 20:51:46 2012
>>>> New Revision: 33889
>>>> 
>>>> Added:
>>>>   trunk/twisted/web/topfiles/5395.feature
>>>>      - copied unchanged from r33888, 
>>>> /branches/elementresource-5395/twisted/web/topfiles/5395.feature
>>>> Modified:
>>>>   trunk/twisted/web/template.py
>>>>   trunk/twisted/web/test/test_template.py
>>> 
>>> I notice no documentation was added. Perhaps we should start requiring
>>> documentation updates for all new features?
>> 
>> Before the ticket was closed, a separate ticket was filed for 
>> documentation: <http://twistedmatrix.com/trac/ticket/4983>.
>> 
>> I don't think that adding a hard requirement for documentation on every 
>> new thing as a prerequisite is necessarily a good idea (especially if a 
>> new contributor wants to add a feature, this adds to an already 
>> substantial burden), but someone should ask a question about 
>> documentation on any ticket that doesn't explicitly account for it, 
>> very early in the process.
> 
> The way I feel about documentation now makes me read this much as I 
> would read a different response to a different question.
> 
> You should be able to guess the question from my imagined response:
> 
>    I don't think that adding a hard requirement for unit tests on every new
>    thing as a prerequisite is necessarily a good idea (especially if a new
>    contributor wants to add a feature, this adds to an already substantial
>    burden), but someone should ask a question about unit tests on any ticket
>    that doesn't explicitly account for them, very early in the process.

Yes, yes, how droll :-P.

> As usual, I can't prove that writing documentation at the same time (or 
> before) an implementation actually produces better results, but I can 
> say that this is increasingly my opinion from my personal experience.
> 
> *Even* if requiring documentation cut feature contribution by half, I 
> think it'd be worthwhile.  Some number of features, undocumented, are 
> worth less than half as many with good documentation.

Actually I agree with that.  What we need is not more contributions, but more contributors (especially, more qualified reviewers).  I have the vague sense (which I also can't prove) that contributors stick around more often if they are able to successfully contribute something, and needing to become familiar with a new documentation toolchain in addition to a new testing toolchain is an impediment to that.  The flip side of that is that more contributors will probably show up in the first place if the documentation is better.  So I am somewhat ambivalent and am easily swayed by the argument that we already do apparently require it.  Still, I think we should try to bring it up as early as possible in the review process, and have better docs on how to author docs.

> Plus, note that it was not a new contributor who finished this 
> particular ticket. ;)

Re-attracting idle contributors has even more appeal, as maybe they'll remember how to review tickets :).

> Also, note that http://twistedmatrix.com/trac/wiki/ReviewProcess already 
> says, as "Things your branch must contain":
> 
>    Appropriate new or modified "End User" guide documentation (in the form
>    of Lore-formatted xhtml files in the doc/ directory)
> 
> So essentially we do require this already, but reviewers seem to largely 
> ignore it (so even if we decide this should not be a requirement, 
> reviewers are not doing their job properly, and that's another issue we 
> should address).
> Jean-Paul

Looks like some guy named "exarkun" was the passing reviewer on the ticket in question, maybe you should talk to him ;-).

-glyph




From glyph at twistedmatrix.com  Mon Mar 19 15:26:12 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 19 Mar 2012 17:26:12 -0400
Subject: [Twisted-Python] unhandled error in example pb_client.py
In-Reply-To: <1391924.TvFz8DxG6C@i5>
References: <1391924.TvFz8DxG6C@i5>
Message-ID: <9BB00141-5B35-4D25-B802-A780E493DAA4@twistedmatrix.com>


On Mar 19, 2012, at 3:30 AM, Wolfgang Rohdewald wrote:

> this is twisted 11.0.0 on kubuntu 11.10
> 
> if I call
> 
> cd /usr/share/doc/python-twisted-words/examples/pb_client.py
> python pb_client.py fdfdasfdfdas.com 1000 a b c
> 
> I am getting an unhandled error. Same for servers not answering
> or rejecting.
> 
> how would I have to modify pb_client if I want to catch and
> handle all errors?

"all" errors is a pretty broad category, so you'd have to do a whole bunch of things :).

The type of errors you're talking about are client connection errors.  The quickest way to catch those is to make your own subclass of PBClientFactory and implement clientConnectionFailed, which will be called each time there is an error in initially setting up a connection.

> my real-world problem is more complicated: In case of error I
> show a modal Qt4 message box. This gives me interactions between
> twisted and qt4reactor leading to infinite recursion. I can fix that
> for DNS lookup failure and not answering servers by temporarily
> disabling qt4reactor, but for rejecting servers I cannot get rid
> of the unhandled error. But before tackling that, I want to 
> understand how I can really catch and handle all errors.

That sounds like a bug in QT, a bug in QT4reactor, or perhaps just the general problem that modal dialog boxes with a blocking API are an inherently bad idea.  Without more detail though it's impossible to say what your problem really is.  My guess, though, would be to find a modal-dialog-box API that doesn't block or enter a reentrant main loop.

> when that works I will have one more problem: I my case
> I have
> class myClient(pb.PBClientFactory):
>    def clientConnectionFailed(self, connector, reason):
>        """connection from client to server failed"""
>        print 'getErrorMessage:', repr(reason.getErrorMessage())
> 
> which gives me
> "DNS lookup failed: address u'fdksfsfa0s0f.com' not found: [Errno -5] Zu 
> diesem Hostnamen geh\xc3\xb6rt keine Adresse."
> 
> so it is translated to German. But pb_client.py returns english messages
> if I insert and use myClient. $LANG is the same for both: de_DE.UTF-8
> so why does pb_client not translate the message?

Because "DNS lookup failed" and "address %r not found" are strings from Twisted, not from your operating system.  Twisted does not have any localizations, unfortunately.  Localizing all its error messages would be a major project, and a challenging one, as class names appear quite frequently in such messages and their names (such as "Failure") are all in english.

If you were interested in starting to localize Twisted though, I would definitely be interested to hear your thoughts on how it might be done.

-glyph


From kevin.horn at gmail.com  Tue Mar 20 06:43:06 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 20 Mar 2012 07:43:06 -0500
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
	<1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
Message-ID: <CA+U=zK1CfGz6tL9iCqXHSiTKvq7c2ih6AKRqq3ignEtaOn+YXg@mail.gmail.com>

On Mon, Mar 19, 2012 at 4:10 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:
>
> > Plus, note that it was not a new contributor who finished this
> > particular ticket. ;)
>
>
> Re-attracting idle contributors has even more appeal, as maybe they'll
> remember how to review tickets :).
>

Great.  Now I have guilt. :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120320/d17f57e6/attachment-0001.html>

From glyph at twistedmatrix.com  Tue Mar 20 07:52:27 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 20 Mar 2012 09:52:27 -0400
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
	elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <CA+U=zK1CfGz6tL9iCqXHSiTKvq7c2ih6AKRqq3ignEtaOn+YXg@mail.gmail.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
	<1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
	<CA+U=zK1CfGz6tL9iCqXHSiTKvq7c2ih6AKRqq3ignEtaOn+YXg@mail.gmail.com>
Message-ID: <F7B98A6A-E716-45E4-B3A4-EE192651F287@twistedmatrix.com>


On Mar 20, 2012, at 8:43 AM, Kevin Horn wrote:

> On Mon, Mar 19, 2012 at 4:10 PM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:
> 
> > Plus, note that it was not a new contributor who finished this
> > particular ticket. ;)
> 
> 
> Re-attracting idle contributors has even more appeal, as maybe they'll remember how to review tickets :).
> 
> Great.  Now I have guilt. :)

Not enough, apparently! :)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120320/ab248287/attachment.html>

From kevin.horn at gmail.com  Tue Mar 20 08:35:46 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 20 Mar 2012 09:35:46 -0500
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <F7B98A6A-E716-45E4-B3A4-EE192651F287@twistedmatrix.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
	<1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
	<CA+U=zK1CfGz6tL9iCqXHSiTKvq7c2ih6AKRqq3ignEtaOn+YXg@mail.gmail.com>
	<F7B98A6A-E716-45E4-B3A4-EE192651F287@twistedmatrix.com>
Message-ID: <CA+U=zK0OhCWgaYJeLmGzJ1gHEQ32+etXrjRH4ZqPhGA-EXS49A@mail.gmail.com>

On Tue, Mar 20, 2012 at 8:52 AM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Mar 20, 2012, at 8:43 AM, Kevin Horn wrote:
>
> On Mon, Mar 19, 2012 at 4:10 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>> On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:
>>
>> > Plus, note that it was not a new contributor who finished this
>> > particular ticket. ;)
>>
>>
>> Re-attracting idle contributors has even more appeal, as maybe they'll
>> remember how to review tickets :).
>>
>
> Great.  Now I have guilt. :)
>
>
> Not enough, apparently! :)
>
>
Sadly, guilt pays better than Twisted. ;)

Seriously though, I will hopefully have some Twisted time "soon".
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120320/7b2e34a6/attachment.html>

From uri.okrent at xtremio.com  Thu Mar 22 04:20:37 2012
From: uri.okrent at xtremio.com (Uri Okrent)
Date: Thu, 22 Mar 2012 12:20:37 +0200
Subject: [Twisted-Python] questions about twisted usage
Message-ID: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>

Hello all, I'm a twisted novice, but I was brought on to a project
where twisted is pretty heavily in use.  I'm running into all sorts of
issues that make me wonder if we're using twisted properly or as it
was intended.  I have been through the documentation, but I think I
need more in-depth answers.  So here are a bunch of general questions
about twisted.  Once I understand this stuff I think I might be able
to ask more cogent questions about my specific implementation (or
maybe understand why things are the way they are).

1. Is deferToThread running the function in a real python thread?
Should this be used (rather than a standard deferred) for any function
that might block?
2. I understand that deferreds run "later".  However, once a deferred
(or a deferToThread) is picked up and run, does it run from start to
finish?  Can it be interrupted in the middle of the function?  How
about its callback/errback?  Can another deferred jump in for
processing in between a deferred and it's callback/errback, or in the
middle of processing another deferred?
3. Are there any guarantees regarding the order of execution of
deferreds? (I.e., are deferreds processed in the order in which they
are created?)
4. Related to #2, and #3, does it make sense to use twisted when
requests that are serviced may depend on one another.  For example, a
client makes a request 'add-A' which is deferred (so that the server
can keep processing requests), and immediately afterwards makes a
request 'modify-A' (which is also run as a deferred).  Can I count on
add-A being done so that modify-A doesn't attempt to work on something
which hasn't been created yet?
5. Related to all of the above.  What If I want to modify a database
inside a deferred?  Is that incorrect usage?  Specifically, if all my
requests run as deferred, and they all start a transaction and the
beginning, and commit the transaction at the end, will I run into
problems due to context switching in the middle of deferreds? (such as
one request committing for both requests, starting two transactions in
a row, committing twice in a row, and so on.)

Thanks in advance.  Please let me know if I'm so off that my questions
don't even make sense =)


-- 
  Uri

Please consider the environment before printing this message.
http://wwf.panda.org/savepaper/



From tobias.oberstein at tavendo.de  Thu Mar 22 04:58:42 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 22 Mar 2012 03:58:42 -0700
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D42D5C0CA484@EXVMBX020-12.exch020.serverdata.net>

> 5. Related to all of the above.  What If I want to modify a database inside a
> deferred?  Is that incorrect usage?  Specifically, if all my requests run as

For database access, in general, you would follow

http://twistedmatrix.com/documents/current/core/howto/rdbms.html

This is a Twisted wrapper around the standard Python DBI API and
the canonical/recommended way of doing database stuff.

This applies to anything from SQLite to PostgreSQL and Oracle.

For PostgreSQL, I would also have a look at

https://github.com/oberstet/txpostgres

which is a drop-in replacement for

twisted.enterprise.adbapi

that makes use of the PostgreSQL protocol's native asynch features.

From tobias.oberstein at tavendo.de  Thu Mar 22 05:02:18 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 22 Mar 2012 04:02:18 -0700
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <634914A010D0B943A035D226786325D42D5C0CA484@EXVMBX020-12.exch020.serverdata.net>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<634914A010D0B943A035D226786325D42D5C0CA484@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <634914A010D0B943A035D226786325D42D5C0CA485@EXVMBX020-12.exch020.serverdata.net>

> For PostgreSQL, I would also have a look at
> 
> https://github.com/oberstet/txpostgres

sorry, wrong link .. use the original:

https://github.com/wulczer/txpostgres

not my forked stuff.



From tobias.oberstein at tavendo.de  Thu Mar 22 05:20:42 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 22 Mar 2012 04:20:42 -0700
Subject: [Twisted-Python] [ANN]: Autobahn WebSockets new release
Message-ID: <634914A010D0B943A035D226786325D42D5C0CA48C@EXVMBX020-12.exch020.serverdata.net>

New releases of AutobahnPython and AutobahnTestSuite completed:


AutobahnPython
==========================

Release 0.5.0 of AutobahnPython is done, including a bunch of new
features, improvements and some fixes:

WebSocket:

 - DoS protection: WS opening handshake timeouts (configurable)
 - DoS protection: failing TCP by drop vs abort (configurable)
 - performance: optimized buffer management
 - performance: optimized/pluggable frame maskers
 - performance: PyPy compatibility/testing
 - performance: IOCP/epoll/kqueue compatibility/testing
 - feature: prepareMessage/sendPreparedMessage
 - feature: for WSS clients, automatically create TLS context
 - feature: user agent WS support detection helper

WAMP:

 - feature: exclude/eligible lists for publish
 - feature: Welcome message implemented
 - performance: optimized msg dispatch to subscribers

Misc:

- polished / completed docs

Links:

 - Package: http://pypi.python.org/pypi/autobahn
 - Source: https://github.com/tavendo/AutobahnPython
 - Reference: http://autobahn.ws/developers/reference/python/index.html
 - Home (under construction): http://autobahn.ws/developers/autobahnpython


AutobahnTestSuite
==========================

New release of AutobahnTestSuite:

 - now comes completely packaged on PyPi
 - installs as a single tool: "wstest"
 - wstest includes 12 modes

The modes:

 - fuzzing: the known fuzzing client/server doing the WS test suite dance
 - echo: simple WS echo client and server for testing
 - broadcast: simple WS broadcast server and client driver for testing
 - testee: client and server to test Autobahn itself
 - wamp: test client and server for WAMP implementors

and

 - wsperfcontrol / wsperfmaster:

We have started collaborating with the WebSocket++ project (Peter Thorson) to build
a distributed WS load generator / performance testing tool.

This will allow running multiple instances of the "wsperf" load generator/probe
distributed both in LAN and WAN.

The probe will produce load / tests onto a testee target WS server.

AutobahnTestSuite will act as a controller for the probes, aggregate results,
produce web UI, ..

This thing is preliminary / still in the cooking .. but I think it has the potential to
take "WS testing" to the next level.

Links:
 - Package: http://pypi.python.org/pypi/autobahntestsuite
 - Source: https://github.com/tavendo/AutobahnTestSuite
 - Docs: http://autobahn.ws/testsuite
 - wsperf: http://www.zaphoyd.com/wsperf


Misc Pointers
==============

 - AutobahnTestSuite (the WebSocket testsuite) : has been split off into own repo / package
 - AutobahnJS (WAMP/JS implementation) : also was split off

An overview of all Autobahn related code repos on GitHub:
http://autobahn.ws/developers/code

A documentation of WAMP (The WebSocket Application Messaging Protocol)
- asynchronous RPC/PubSub over WebSocket is started on
http://wamp.ws/




From screwtape at froup.com  Thu Mar 22 05:37:14 2012
From: screwtape at froup.com (Tim Allen)
Date: Thu, 22 Mar 2012 22:37:14 +1100
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
Message-ID: <20120322113714.GB25379@boombah.thristian.org>

On Thu, Mar 22, 2012 at 12:20:37PM +0200, Uri Okrent wrote:
> 1. Is deferToThread running the function in a real python thread?
> Should this be used (rather than a standard deferred) for any function
> that might block?

Yes, deferToThread() runs things in a real Python thread. If you have
code that runs very quickly, or is written in Twisted's asynchronous
style (with Deferreds), you should be fine; if you have something that
takes a while to run you should use deferToThread().

> 2. I understand that deferreds run "later".  However, once a deferred
> (or a deferToThread) is picked up and run, does it run from start to
> finish?  Can it be interrupted in the middle of the function?  How
> about its callback/errback?  Can another deferred jump in for
> processing in between a deferred and it's callback/errback, or in the
> middle of processing another deferred?

A Deferred can wait on the result of other Deferreds; while one Deferred
is waiting (say, waiting for a timer to go off, or waiting for network
activity), others may be running. Each individual callback/errback
function is run in its entirety, though.

> 3. Are there any guarantees regarding the order of execution of
> deferreds? (I.e., are deferreds processed in the order in which they
> are created?)

Maybe, but whenever a Deferred waits on the result of another Deferred,
you're at the mercy of whatever they're waiting for.

For example, say you use Twisted to retrieve the contents of two
web-pages:

    getPage("http://a.example.com").addCallback(process_data)
    getPage("http://b.example.com").addCallback(process_data)

The request for "http://a.example.com" will be launched first, but if
that server takes longer to respond, process_data() might receive the
response from server B first.
	

> 4. Related to #2, and #3, does it make sense to use twisted when
> requests that are serviced may depend on one another.  For example, a
> client makes a request 'add-A' which is deferred (so that the server
> can keep processing requests), and immediately afterwards makes a
> request 'modify-A' (which is also run as a deferred).  Can I count on
> add-A being done so that modify-A doesn't attempt to work on something
> which hasn't been created yet?

In general, no. For example, if you get a request from the network that
causes you to send "insert into table" to the database, and meanwhile
get another request from the network that causes you to send "update
table" to the database, you have no way of knowing whether one will
complete before the other. Twisted's asynchronous database wrapper uses
a connection pool, so the two requests might be sent down separate
connections in parallel, so the database could actively prevent the
"update" from seeing the results of the "insert".

If you're getting stateful requests without any kind of stateful
framing (say, 'begin transaction'/'commit transaction' messages, or some
kind of session ID, or something like that), you have a problem Twisted
cannot help with.

If you *do* have some kind of session, you can set up your server so
that you have a DeferredSemaphore per session, which will ensure that
the next Deferred until you've finished with the previous one. For
example:

    ds = DeferredSemaphore()

    def got_message(msg):
	newDefer = ds.acquire()
	newDefer.addCallback(lambda _: processMsg(msg))
	newDefer.addBoth(lambda _: ds.release())
	

> 5. Related to all of the above.  What If I want to modify a database
> inside a deferred?  Is that incorrect usage?  Specifically, if all my
> requests run as deferred, and they all start a transaction and the
> beginning, and commit the transaction at the end, will I run into
> problems due to context switching in the middle of deferreds? (such as
> one request committing for both requests, starting two transactions in
> a row, committing twice in a row, and so on.)

As somebody else mentioned, what you want is twisted.enterprise.adbapi.
It maintains a connection pool, and every database call you make
(usually via the .runQuery() or .runOperation() methods) will be run in
a separate connection, so .commit() or .rollback() will be run on the
correct connection, and you won't have problems with cross-talk between
concurrent requests.


Tim.



From uri.okrent at xtremio.com  Thu Mar 22 06:05:28 2012
From: uri.okrent at xtremio.com (Uri Okrent)
Date: Thu, 22 Mar 2012 14:05:28 +0200
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <20120322113714.GB25379@boombah.thristian.org>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
Message-ID: <CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>

Thanks for the excellent responses guys.  So a couple more things...

On Thu, Mar 22, 2012 at 1:37 PM, Tim Allen <screwtape at froup.com> wrote:
> A Deferred can wait on the result of other Deferreds; while one Deferred
> is waiting (say, waiting for a timer to go off, or waiting for network
> activity), others may be running. Each individual callback/errback
> function is run in its entirety, though.

So when you say "others may be running" they are not truly running in
parallel, right?  They are time multiplexed or something?


> Maybe, but whenever a Deferred waits on the result of another Deferred,
> you're at the mercy of whatever they're waiting for.
>
> For example, say you use Twisted to retrieve the contents of two
> web-pages:
>
>    getPage("http://a.example.com").addCallback(process_data)
>    getPage("http://b.example.com").addCallback(process_data)
>
> The request for "http://a.example.com" will be launched first, but if
> that server takes longer to respond, process_data() might receive the
> response from server B first.

This implies that twisted can (and will) switch contexts from one
deferred to another even in the middle of execution of the first
deferred, correct?


> As somebody else mentioned, what you want is twisted.enterprise.adbapi.
> It maintains a connection pool, and every database call you make
> (usually via the .runQuery() or .runOperation() methods) will be run in
> a separate connection, so .commit() or .rollback() will be run on the
> correct connection, and you won't have problems with cross-talk between
> concurrent requests.

So what I didn't mention earlier because I wanted to keep my questions
simple, is we're already using sqlalchemy and its ORM so I don't think
I can use adbapi.  The way things have been working (and it's not so
scalable) is every request that does any kind of modification grabs a
global exclusive write lock, and any request the reads grabs a
non-exclusive read lock (multiple readers can hold the lock, but only
one writer can, and while a writer is holding it, no reading is
allowed).  This seems to be the crux of my difficulties...

In any case thanks for the responses!
-- 
  Uri

Please consider the environment before printing this message.
http://wwf.panda.org/savepaper/



From itamar at itamarst.org  Thu Mar 22 06:17:50 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 22 Mar 2012 08:17:50 -0400
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
Message-ID: <4F6B186E.3060301@itamarst.org>

On 03/22/2012 08:05 AM, Uri Okrent wrote:
> This implies that twisted can (and will) switch contexts from one
> deferred to another even in the middle of execution of the first
> deferred, correct?

No. Deferreds are just slightly nicer callbacks. They have nothing to do 
with the event loop, or scheduling, or context switching.



From ilja.livenson at gmail.com  Thu Mar 22 06:18:53 2012
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Thu, 22 Mar 2012 13:18:53 +0100
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
Message-ID: <CAF8QyE_RNm-dRz+CC9LBW87wucAt8o7tfKLueGO+_Aq-D0pzbA@mail.gmail.com>

Hi, Uri

> So what I didn't mention earlier because I wanted to keep my questions
> simple, is we're already using sqlalchemy and its ORM so I don't think
> I can use adbapi.  The way things have been working (and it's not so
> scalable) is every request that does any kind of modification grabs a
> global exclusive write lock, and any request the reads grabs a
> non-exclusive read lock (multiple readers can hold the lock, but only
> one writer can, and while a writer is holding it, no reading is
> allowed).  This seems to be the crux of my difficulties...

we have been stumbling on the same problems when using ZODB. The
current solution is to defer db operations to a threadpool. We also
have rdonly and rw transaction decorators, which can be used for
speeding up processing/custom logic. If you are interested, the code
is open: https://github.com/opennode/opennode-management/blob/master/opennode/oms/zodb/db.py

cheers,
Ilja

>
> In any case thanks for the responses!
> --
>   Uri
>
> Please consider the environment before printing this message.
> http://wwf.panda.org/savepaper/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From uri.okrent at xtremio.com  Thu Mar 22 06:34:41 2012
From: uri.okrent at xtremio.com (Uri Okrent)
Date: Thu, 22 Mar 2012 14:34:41 +0200
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <4F6B186E.3060301@itamarst.org>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
	<4F6B186E.3060301@itamarst.org>
Message-ID: <CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>

On Thu, Mar 22, 2012 at 2:17 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On 03/22/2012 08:05 AM, Uri Okrent wrote:
>> This implies that twisted can (and will) switch contexts from one
>> deferred to another even in the middle of execution of the first
>> deferred, correct?
>
> No. Deferreds are just slightly nicer callbacks. They have nothing to do
> with the event loop, or scheduling, or context switching.

Maybe I should clarify my question:

thing = 0
def a():
    thing += 1
    thing += 1
    thing += 1
    thing += 1
    thing += 1

def b():
    thing = 0

def show_thing():
    print thing

a.addCallback(show_thing)
b.addCallback(show_thing)

given the two deferreds 'a' and 'b', with 'a' being called first, it
is possible for twisted to jump to 'b' in the middle of 'a' correct?
I.e., when show_thing runs after 'b' is finished it will always print
0 because thing was set to 0 by 'b', but when show_thing runs as the
callback for 'a', it will print something between 0 and 5 and it is
non-deterministic, because 'b' may have jumped in at some point during
the execution of 'a' and reset 'thing' back to 0.
-- 
  Uri

Please consider the environment before printing this message.
http://wwf.panda.org/savepaper/



From uri.okrent at xtremio.com  Thu Mar 22 06:36:29 2012
From: uri.okrent at xtremio.com (Uri Okrent)
Date: Thu, 22 Mar 2012 14:36:29 +0200
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAF8QyE_RNm-dRz+CC9LBW87wucAt8o7tfKLueGO+_Aq-D0pzbA@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
	<CAF8QyE_RNm-dRz+CC9LBW87wucAt8o7tfKLueGO+_Aq-D0pzbA@mail.gmail.com>
Message-ID: <CAB=FgnNQsxNoSwvOhK8UOzdChZXa-JkWb4TMPK_+eHU1_7o+0w@mail.gmail.com>

On Thu, Mar 22, 2012 at 2:18 PM, Ilja Livenson <ilja.livenson at gmail.com> wrote:
> we have been stumbling on the same problems when using ZODB. The
> current solution is to defer db operations to a threadpool. We also
> have rdonly and rw transaction decorators, which can be used for
> speeding up processing/custom logic. If you are interested, the code
> is open: https://github.com/opennode/opennode-management/blob/master/opennode/oms/zodb/db.py

cool thanks I will take a look
-- 
  Uri

Please consider the environment before printing this message.
http://wwf.panda.org/savepaper/



From orestis at orestis.gr  Thu Mar 22 06:40:04 2012
From: orestis at orestis.gr (Orestis Markou)
Date: Thu, 22 Mar 2012 12:40:04 +0000
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
	<4F6B186E.3060301@itamarst.org>
	<CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>
Message-ID: <E9676B39-1646-44B8-A881-2A4554CBD8E7@orestis.gr>


On 22 Μαρ 2012, at 12:34 μ.μ., Uri Okrent wrote:

> On Thu, Mar 22, 2012 at 2:17 PM, Itamar Turner-Trauring
> <itamar at itamarst.org> wrote:
>> On 03/22/2012 08:05 AM, Uri Okrent wrote:
>>> This implies that twisted can (and will) switch contexts from one
>>> deferred to another even in the middle of execution of the first
>>> deferred, correct?
>> 
>> No. Deferreds are just slightly nicer callbacks. They have nothing to do
>> with the event loop, or scheduling, or context switching.
> 
> Maybe I should clarify my question:
> 
> thing = 0
> def a():
>    thing += 1
>    thing += 1
>    thing += 1
>    thing += 1
>    thing += 1
> 
> def b():
>    thing = 0
> 
> def show_thing():
>    print thing
> 
> a.addCallback(show_thing)
> b.addCallback(show_thing)
> 
> given the two deferreds 'a' and 'b', with 'a' being called first, it
> is possible for twisted to jump to 'b' in the middle of 'a' correct?
> I.e., when show_thing runs after 'b' is finished it will always print
> 0 because thing was set to 0 by 'b', but when show_thing runs as the
> callback for 'a', it will print something between 0 and 5 and it is
> non-deterministic, because 'b' may have jumped in at some point during
> the execution of 'a' and reset 'thing' back to 0.

No, Twisted runs everything in a single thread, there's no way a callback can be interrupted. In the above case you will see either 5 or 0, nothing in between.

(Nit - the above code will not compile or run, but I think your point made it across)

> -- 
>   Uri
> 
> Please consider the environment before printing this message.
> http://wwf.panda.org/savepaper/
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From screwtape at froup.com  Thu Mar 22 07:04:22 2012
From: screwtape at froup.com (Tim Allen)
Date: Fri, 23 Mar 2012 00:04:22 +1100
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
	<4F6B186E.3060301@itamarst.org>
	<CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>
Message-ID: <20120322130422.GC25379@boombah.thristian.org>

On Thu, Mar 22, 2012 at 02:34:41PM +0200, Uri Okrent wrote:
> Maybe I should clarify my question:
> 
> thing = 0
> def a():
>     thing += 1
>     thing += 1
>     thing += 1
>     thing += 1
>     thing += 1
> 
> def b():
>     thing = 0
> 
> def show_thing():
>     print thing
> 
> a.addCallback(show_thing)
> b.addCallback(show_thing)
> 
> given the two deferreds 'a' and 'b', with 'a' being called first, it
> is possible for twisted to jump to 'b' in the middle of 'a' correct?

No.

The situation above doesn't actually work because a and b don't return
Deferreds, but during the execution of a, it's the only thing running
(unless you have other threads running... but since Twisted is largely
a way of avoiding thread-programming, that's not often the case).

In the real world, things aren't so simple, because nobody writes
Deferreds for code that can just execute in a straight line. People use
Deferreds when they want to wait for some external event before going
further, and you generally don't have control over the order those
events occur in.

For example, here we have a function that does some work, then does
a deferred operation, then does some more work in the callback:

    thing = 0

    def a():
	global thing

	# Do some work.
	thing += 1

	# Cause some_db to do some work on another machine, or in
	# another thread, or something.
	d = some_db.do_work("a")

	def add_more(res):
	    global thing

	    thing += 1
	    thing += 1
	    thing += 1

	    return res

	# When some_db is done, call this callback.
	d.addBoth(add_more)

	# Do more work.
	thing += 1

	return d

    def b():
	d = some_db.do_work("b")

	def clear_thing(res):
	    global thing
	    thing = 0
	    return res

	d.addBoth(clear_thing)
	return d

The pattern of events would go like this:

- Initially, thing is 0.
- Somebody calls a(), which increments thing twice (under the comment
  "do some work" and "do more work", and launches a database call.
- thing is now 2.
- Somebody calls b(), which launches a different database call.
- Sometime later, the database gets back to us with an answer, and
  either a or b's callback will be fired first.
- If a's callback is fired before b's callback, thing will be
  incremented three more times then (some time later) set to 0.
- IF b's callback is fired before a's callback, thing will be set to 0,
  then (some time later) incremented 3 more times, resulting in 3.

So the only possible results are 0 and 3, because the 'synchronisation
points' are at the edges of callbacks. There's no way to get a result of
1 or 2, because a callback can't be interrupted while it's running
(again, unless threads are involved).


Tim.



From uri.okrent at xtremio.com  Thu Mar 22 08:09:16 2012
From: uri.okrent at xtremio.com (Uri Okrent)
Date: Thu, 22 Mar 2012 16:09:16 +0200
Subject: [Twisted-Python] questions about twisted usage
In-Reply-To: <20120322130422.GC25379@boombah.thristian.org>
References: <CAB=FgnOUppA4umHcJ=dT+8KTsfb9-GpWCKqw6Gq2JsugoWo8XA@mail.gmail.com>
	<20120322113714.GB25379@boombah.thristian.org>
	<CAB=FgnMJhPf5NWBgaeoc5xZzxQQZNEhs1=iZsmurS2OHeQRKeg@mail.gmail.com>
	<4F6B186E.3060301@itamarst.org>
	<CAB=FgnPCRv3LUOL7msHV3JzzsKXt1Yywk5f5d_rqtua5ue+k0g@mail.gmail.com>
	<20120322130422.GC25379@boombah.thristian.org>
Message-ID: <CAB=FgnN4zw=SgwAeXdB=q0ukYzLCUjCpXZhEwnPvE_bp9TNhUg@mail.gmail.com>

On Thu, Mar 22, 2012 at 3:04 PM, Tim Allen <screwtape at froup.com> wrote:
> So the only possible results are 0 and 3, because the 'synchronisation
> points' are at the edges of callbacks.

Ok, awesome.  That's the bit that I couldn't quite understand.  Thanks!
-- 
  Uri

Please consider the environment before printing this message.
http://wwf.panda.org/savepaper/



From exarkun at twistedmatrix.com  Thu Mar 22 19:18:47 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 23 Mar 2012 01:18:47 -0000
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
 elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
	<1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
Message-ID: <20120323011847.7231.1996912015.divmod.xquotient.5@localhost6.localdomain6>

On 19 Mar, 09:10 pm, glyph at twistedmatrix.com wrote:
>
>On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:
>>So essentially we do require this already, but reviewers seem to 
>>largely
>>ignore it (so even if we decide this should not be a requirement,
>>reviewers are not doing their job properly, and that's another issue 
>>we
>>should address).
>>Jean-Paul
>
>Looks like some guy named "exarkun" was the passing reviewer on the 
>ticket in question, maybe you should talk to him ;-).

I can certainly make sure this doesn't happen again in the future. :)

Jean-Paul
>-glyph
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Thu Mar 22 20:06:08 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 22 Mar 2012 22:06:08 -0400
Subject: [Twisted-Python] [Twisted-commits] r33889 - Merge
	elementresource-5395: Add renderElement, for rendering Elements.
In-Reply-To: <20120323011847.7231.1996912015.divmod.xquotient.5@localhost6.localdomain6>
References: <20120317025148.2A0AA1BF253@wolfwood.twistedmatrix.com>
	<4F647B47.1050805@itamarst.org>
	<A4D1E2F5-D40C-4F66-88EE-C415986E1413@twistedmatrix.com>
	<20120318134408.3216.759709039.divmod.xquotient.27@localhost6.localdomain6>
	<1A76B64E-F456-4B24-94CC-A71DB5F9E8EC@twistedmatrix.com>
	<20120323011847.7231.1996912015.divmod.xquotient.5@localhost6.localdomain6>
Message-ID: <C6592661-382B-4357-AEE2-EAD39CEB19A2@twistedmatrix.com>


On Mar 22, 2012, at 9:18 PM, exarkun at twistedmatrix.com wrote:

> On 19 Mar, 09:10 pm, glyph at twistedmatrix.com wrote:
>> 
>> On Mar 18, 2012, at 9:44 AM, exarkun at twistedmatrix.com wrote:
>>> So essentially we do require this already, but reviewers seem to 
>>> largely
>>> ignore it (so even if we decide this should not be a requirement,
>>> reviewers are not doing their job properly, and that's another issue 
>>> we
>>> should address).
>>> Jean-Paul
>> 
>> Looks like some guy named "exarkun" was the passing reviewer on the 
>> ticket in question, maybe you should talk to him ;-).
> 
> I can certainly make sure this doesn't happen again in the future. :)

That reminds me, on the subject of documentation, perhaps this could use a little broader discussion:

What do you folks think of my feedback here, in review point 3 specifically?

	<http://twistedmatrix.com/trac/ticket/5248#comment:8>

There are lots of low-level features which get added only partially for their utility in their own right, and partially in support of more general, higher-level features in the future.  I think that in some cases (specifically, in low-level technical cases), it's better to really push for exhaustive reference documentation that explains the motivation of the feature in the API than to add narrative documentation which will potentially clutter the index with (initially) difficult and low-level ways to do something, and (later) TIMTOWTDI advice on how to accomplish the same thing that is better covered by a high level tool.

Another way to handle this situation would be to require narrative documentation initially for the low level features, then eliminate or obfuscate the path to it so that it's not directly present in the general index for its particular dot product[1] when the higher-level feature arrives, or it's present in an obviously de-emphasized section that readers won't find first.  This seems like makework to me, but then, experience generally points to the fact that some of these low-level APIs will be available for years and years while the dreamt-of high-level utopia never arrives.  (c.f. inotify vs. listenFilesystem, IRCClient vs. a truly general, well-documented twisted.words.im, etc)

My current feeling is that people who know that they need to, for example, hand a pre-existing listening socket to the Twisted reactor on a POSIX platform probably know enough about what they're doing to easily find it in the reference documentation.  But I can also see the point of "we should just have lore docs for everything, always", sort of.

So: thoughts?

-glyph

[1]: I'm bringing it back!  <http://tm.tl/2372>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120322/31dee9e3/attachment-0001.html>

From dynamicgl at gmail.com  Thu Mar 22 23:48:33 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Fri, 23 Mar 2012 13:48:33 +0800
Subject: [Twisted-Python] when will failure.Failure() be a problem?
Message-ID: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>

Hi All

 As regards issues like #5567 & #4219, Failure object creation is not
thread safe. I use deferToThread daily due to many blocking apis still have
to be used in my system. I looked into the code and noticed there is a
global count used in Failure.__init__. An increment will be made for every
__init__ invoke. I consider it is one part can be treated as thread unsafe.

   Because I didn't use Failure() besides of logging exec_info and didn't
meet any crash issue related to Failure() so I consider it is not a serious
problem. I am curious who has experience like system crash or data
corruption with Failure.


Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120323/5aa0f4cf/attachment.html>

From itamar at itamarst.org  Fri Mar 23 06:28:11 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 23 Mar 2012 08:28:11 -0400
Subject: [Twisted-Python] when will failure.Failure() be a problem?
In-Reply-To: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>
References: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>
Message-ID: <4F6C6C5B.1020601@itamarst.org>

On 03/23/2012 01:48 AM, gelin yan wrote:
> Hi All
>
>  As regards issues like #5567 & #4219, Failure object creation is not 
> thread safe. I use deferToThread daily due to many blocking apis still 
> have to be used in my system. I looked into the code and noticed there 
> is a global count used in Failure.__init__. An increment will be made 
> for every __init__ invoke. I consider it is one part can be treated as 
> thread unsafe.

It's not thread-safe... but the count is only used to display messages 
in certain particular cases, and all it means is that the count may be 
slightly off, or two Failure might have same count. It will not corrupt 
anything, or causes exceptions or crashes of any sort - it's a *very* 
minor bug.



From itamar at itamarst.org  Fri Mar 23 06:30:17 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 23 Mar 2012 08:30:17 -0400
Subject: [Twisted-Python] when will failure.Failure() be a problem?
In-Reply-To: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>
References: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>
Message-ID: <4F6C6CD9.3080605@itamarst.org>

On 03/23/2012 01:48 AM, gelin yan wrote:
> Hi All
>
>  As regards issues like #5567 & #4219, Failure object creation is not 
> thread safe. I use deferToThread daily due to many blocking apis still 
> have to be used in my system. I looked into the code and noticed there 
> is a global count used in Failure.__init__. An increment will be made 
> for every __init__ invoke. I consider it is one part can be treated as 
> thread unsafe.
Oh, and the pdb thing mentioned in 4219 only happens in debug mode, 
which won't be used in production (don't want pdb sessions in a live 
application!).





From glyph at twistedmatrix.com  Fri Mar 23 14:18:45 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 23 Mar 2012 16:18:45 -0400
Subject: [Twisted-Python] when will failure.Failure() be a problem?
In-Reply-To: <4F6C6CD9.3080605@itamarst.org>
References: <CABkOF6RibZZOT=LmGukNhnhuhckXT+53C+Oj+fsH2vho5h4eBQ@mail.gmail.com>
	<4F6C6CD9.3080605@itamarst.org>
Message-ID: <74716368-28F5-4486-BC09-FB9B62FD98E7@twistedmatrix.com>


On Mar 23, 2012, at 8:30 AM, Itamar Turner-Trauring wrote:

> On 03/23/2012 01:48 AM, gelin yan wrote:
>> Hi All
>> 
>> As regards issues like #5567 & #4219, Failure object creation is not 
>> thread safe. I use deferToThread daily due to many blocking apis still 
>> have to be used in my system. I looked into the code and noticed there 
>> is a global count used in Failure.__init__. An increment will be made 
>> for every __init__ invoke. I consider it is one part can be treated as 
>> thread unsafe.
> 
> Oh, and the pdb thing mentioned in 4219 only happens in debug mode, 
> which won't be used in production (don't want pdb sessions in a live 
> application!).

Also, the PDB bug is only a problem because PDB itself isn't thread safe.  Python has support for threads; the fact that its built-in debugger doesn't should be mildly embarrassing for those who maintain it :).  But there are thread-safe debuggers out there that rely on more structured things than whatever stdio happens to be doing at the time; we should probably support some of those.

There's a list on <http://wiki.python.org/moin/PythonDebuggers> if anyone is interested in improving Twisted's debugging support...

-glyph


From exarkun at twistedmatrix.com  Sat Mar 24 22:05:37 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Mar 2012 04:05:37 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1332648337.97.1956591928@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120325/54a0c783/attachment.html>

From _ at lvh.cc  Sun Mar 25 15:02:12 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 25 Mar 2012 23:02:12 +0200
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
Message-ID: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>

Hi,


I'm trying to find out if there's a reasonable way to mimic a blocking API
with an existing non-blocking API. I want to do this so I can write
doctests.

For example, I want to make a remote AMP call. It returns a deferred.
Instead of returning a deferred, I want it to block until the deferred
fires.

The "obvious" way to do this would be to run the reactor in a different
thread. This would not be necessary if the reactor were restartable, but it
ain't.

I've found at least one mailing list issue where someone wanted something
similar, but did not see a resolution.

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120325/71b55044/attachment.html>

From itamar at itamarst.org  Sun Mar 25 15:44:27 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 25 Mar 2012 17:44:27 -0400
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
Message-ID: <4F6F91BB.3040203@itamarst.org>

On 03/25/2012 05:02 PM, Laurens Van Houtven wrote:
> Hi,
>
>
> I'm trying to find out if there's a reasonable way to mimic a blocking 
> API with an existing non-blocking API. I want to do this so I can 
> write doctests.
>
> For example, I want to make a remote AMP call. It returns a deferred. 
> Instead of returning a deferred, I want it to block until the deferred 
> fires.
Doctests are supposed to document and test, or perhaps have tested 
documentation. If the API you're presenting doesn't match actual usage, 
that's bad documentation...



From _ at lvh.cc  Sun Mar 25 17:54:50 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 26 Mar 2012 01:54:50 +0200
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <4F6F91BB.3040203@itamarst.org>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
	<4F6F91BB.3040203@itamarst.org>
Message-ID: <2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>

The thing I'm documenting is a server, I'm documenting it by interacting with it as a client. I realize that doesn't entirely detract from your point -- you might still be introducing problems that would not affect a "real" client.

My intention is to write BDD-ish stuff (except not with the usual cucumber-style scenario text).

cheers
lvh


On 25 Mar 2012, at 23:44, Itamar Turner-Trauring wrote:

> On 03/25/2012 05:02 PM, Laurens Van Houtven wrote:
>> Hi,
>> 
>> 
>> I'm trying to find out if there's a reasonable way to mimic a blocking 
>> API with an existing non-blocking API. I want to do this so I can 
>> write doctests.
>> 
>> For example, I want to make a remote AMP call. It returns a deferred. 
>> Instead of returning a deferred, I want it to block until the deferred 
>> fires.
> Doctests are supposed to document and test, or perhaps have tested 
> documentation. If the API you're presenting doesn't match actual usage, 
> that's bad documentation...
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From itamar at itamarst.org  Sun Mar 25 18:03:02 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 25 Mar 2012 20:03:02 -0400
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
	<4F6F91BB.3040203@itamarst.org>
	<2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
Message-ID: <4F6FB236.6020700@itamarst.org>

On 03/25/2012 07:54 PM, Laurens Van Houtven wrote:
> The thing I'm documenting is a server, I'm documenting it by interacting with it as a client. I realize that doesn't entirely detract from your point -- you might still be introducing problems that would not affect a "real" client.
>
> My intention is to write BDD-ish stuff (except not with the usual cucumber-style scenario text).

This might be workable if the protocol is synchronous: send request, get 
back response. This wouldn't work e.g. for a chat protocol. I bet you 
could do something horrible where the doctest gets wrapped in an 
inlineCallbacks wrapper, and then you can yield Deferreds.



From corydodt at twistedmatrix.com  Sun Mar 25 18:16:53 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Sun, 25 Mar 2012 20:16:53 -0400
Subject: [Twisted-Python] Start New Employment Today
Message-ID: <E38D28A5B0591CC1A4C08503A160ECA2@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Garland at jobdayseu.com,with your personal identification number for this position IDNO: 3315



From glyph at twistedmatrix.com  Sun Mar 25 19:23:46 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Mar 2012 21:23:46 -0400
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <4F6FB236.6020700@itamarst.org>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
	<4F6F91BB.3040203@itamarst.org>
	<2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
	<4F6FB236.6020700@itamarst.org>
Message-ID: <16C527FC-4E1E-4A0E-A5B3-73935D62C917@twistedmatrix.com>


On Mar 25, 2012, at 8:03 PM, Itamar Turner-Trauring wrote:

> On 03/25/2012 07:54 PM, Laurens Van Houtven wrote:
>> The thing I'm documenting is a server, I'm documenting it by interacting with it as a client. I realize that doesn't entirely detract from your point -- you might still be introducing problems that would not affect a "real" client.
>> 
>> My intention is to write BDD-ish stuff (except not with the usual cucumber-style scenario text).
> 
> This might be workable if the protocol is synchronous: send request, get 
> back response. This wouldn't work e.g. for a chat protocol. I bet you 
> could do something horrible where the doctest gets wrapped in an 
> inlineCallbacks wrapper, and then you can yield Deferreds.

You can also just call back the relevant deferreds synchronously within your doctest, and print things when they fire.  Given that your doctests will have to explicitly specify the response events being fired anyway, this is probably the best way to go.

-glyph


From penxiao at cisco.com  Sun Mar 25 19:24:46 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Mon, 26 Mar 2012 09:24:46 +0800
Subject: [Twisted-Python] How to use multi-core CPU in Twisted
Message-ID: <776373CB9C5EA544A476052F49F1DAE20296D238@XMB-HKG-41B.cisco.com>

Hi experts

 

I want to use multi-core of CPU in twisted for parallel programming.

Could anyone tell me how to archive that?

Very thanks.

 

Best

Regards,

 

Xiao Peng

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120326/b5fb1d44/attachment.html>

From maillists at ergo-pc.net  Sun Mar 25 19:27:42 2012
From: maillists at ergo-pc.net (Paul Reznicek)
Date: Mon, 26 Mar 2012 03:27:42 +0200
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
	<4F6F91BB.3040203@itamarst.org>
	<2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
Message-ID: <4F6FC60E.6060503@ergo-pc.net>

Hello,
I have similar needs and did not found usable answers, so I wrote some
q&d hacks for doctests and also for UI interactions, where the user should
be blocked until something in non-blocking deferred finish or "time-outed".

Below hacks are working with twisted 10.0.0, no idea about more actual versions.

1. Multiple start/stop of reactor during doctests works when using "reactor.crash"
   Example - 2 tested class methods in one class:
# ---------------------
def method_a(self, parm):
    '''
    >>> g = GateWay('TEST')
    >>> s1 = reactor.callWhenRunning(lambda: print(g.method_a('X') ) )
    >>> s2 = reactor.callWhenRunning(lambda: print(g.method_a('Y') ) )
    >>> s3 = reactor.callWhenRunning(lambda: print(g.method_a('Z') ) )
    >>> s0 = reactor.callLater(11.1, reactor.crash); reactor.run()  # doctest:+ELLIPSIS
    {u'result of X...}
    {u'result of Y...}
    {u'result of Z...}
    '''
    [code]

def method_b(self):
    >>> g = GateWay('TEST')
    >>> s1 = reactor.callWhenRunning(lambda: print(g.method_b() ) )
    >>> s0 = reactor.callLater(5.1, reactor.crash); reactor.run()   # doctest:+ELLIPSIS
    {u'bytes': ..., u'packets': ..., u'duration': ...}
    '''
    [code]
# ---------------------
This way, it is possible to use doctests with reactor start/stop in several
methods/functions in a class/module and also in external doctests files.


2. Sleep w/o blocking reactor:
# ---------------------
def nonBlockingSleep(delay):
    '''Hack to allow sleep for a period of time w/o blocking the reactor
    Do *block* the caller for `delay` seconds.
    '''
    if delay > 90:
        print('WARNING nonBlockingSleep delay={0} sec. dangerous, reset to 90s'.format(delay) )
        delay = 90.0
    toTime = time.time() + delay
    while toTime >= time.time():
        try:
            reactor.iterate(0.055)
        except Exception as err:
            pass
        time.sleep(0.001)
# ---------------------
The values of .iterate() and .sleep() are the best, I found.
time.sleep(0.001) is important, it is not reliable w/o + CPU load is high.


3. Wait until deferred return a result or timeout expire
# ---------------------
def sleepUntilDFRDresult(dfrd, timeout=60):
    '''Hack to make non-blocking deferred waiting for its result or error for
    in `timeout` specified number of seconds, but not to block reactor loop.
    This wrapper *block* the caller until deferred.result or timeout appears.

    >>> dfrd = defer.Deferred() #.addBoth(cbReactorStop)
    >>> sleepUntilDFRDresult(dfrd)       # doctest:+ELLIPSIS
    Exception(u'ERROR sleepUntilDFRDresult server not running for: <Deferred at 0x...> from <doctest
__main__/<module> #L1',)

    >>> startTime = time.time()
    >>> f = lambda: print(sleepUntilDFRDresult(dfrd, timeout=999), 'in:', time.time()-startTime,
'sec.' )
    >>> s1 = reactor.callWhenRunning( f );
    >>> dc2 = reactor.callLater(2, dfrd.callback, 'CALLED')
    >>> dc0 = reactor.callLater(3, reactor.crash); reactor.run()   # doctest:+ELLIPSIS
    WARNING sleepUntilDFRDresult timeout=999 sec. dangerous
    CALLED in: 2.0... sec.
    '''
    if timeout > 600:
        print('WARNING sleepUntilDFRDresult timeout={0} sec. dangerous'.format(timeout) )

    err = None
    if not isinstance(dfrd, defer.Deferred):
        err = 'ERROR sleepUntilDFRDresult dfrd "{0}" not Deferred: '.format(type(dfrd))
    elif not reactor.running:
        err = 'ERROR sleepUntilDFRDresult server not running for: '
    else:
        toTime = time.time() + timeout
        while not dfrd.called and toTime >= time.time():
            try:
                reactor.iterate(0.055)
            except Exception as err:
                pass
            Htime.sleep(0.001)
        if dfrd.called and hasattr(dfrd, 'result'):
            return dfrd.result
    func_name, module_name, line_no = tools.getCallerNameLocation()
    repr_dfrd = '{0} from {2}/{1} #L{3}'.format(dfrd, func_name, module_name, line_no)
    err = Exception( (err or 'ERROR TIMEOUT sleepUntilDFRDresult for: ') + repr_dfrd )
##     print(err)
    return err
# ---------------------
This hack is not 100% reliable, but I did not found a better solution.
There is sometime an "Already called..." error in the logs, when server is under
high load with lot of connections, but since around 2 years I did not observed
a data loss or other severer problem.

I hope it helps.
If somebody have a better (less "hacky") solution for above 3 tasks,
please send it to this list.

Regards
Paul

Laurens Van Houtven wrote:
> The thing I'm documenting is a server, I'm documenting it by interacting with it as a client. I realize that doesn't entirely detract from your point -- you might still be introducing problems that would not affect a "real" client.
> 
> My intention is to write BDD-ish stuff (except not with the usual cucumber-style scenario text).
> 
> cheers
> lvh
> 
> 
> On 25 Mar 2012, at 23:44, Itamar Turner-Trauring wrote:
> 
>> On 03/25/2012 05:02 PM, Laurens Van Houtven wrote:
>>> Hi,
>>>
>>>
>>> I'm trying to find out if there's a reasonable way to mimic a blocking 
>>> API with an existing non-blocking API. I want to do this so I can 
>>> write doctests.
>>>
>>> For example, I want to make a remote AMP call. It returns a deferred. 
>>> Instead of returning a deferred, I want it to block until the deferred 
>>> fires.
>> Doctests are supposed to document and test, or perhaps have tested 
>> documentation. If the API you're presenting doesn't match actual usage, 
>> that's bad documentation...



From glyph at twistedmatrix.com  Sun Mar 25 19:52:12 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Mar 2012 21:52:12 -0400
Subject: [Twisted-Python] How to use multi-core CPU in Twisted
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE20296D238@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE20296D238@XMB-HKG-41B.cisco.com>
Message-ID: <5F2076D9-93FE-49F0-AEB4-FEF9A2E8B2F4@twistedmatrix.com>


On Mar 25, 2012, at 9:24 PM, Peng Xiao -X (penxiao - Digital China at Cisco) wrote:

> Hi experts
>  
> I want to use multi-core of CPU in twisted for parallel programming.
> Could anyone tell me how to archive that?
> Very thanks.
>  
> Best
> Regards,
>  
> Xiao Peng

There are many different ways, depending on your application.

Generally, some use of spawnProcess is the current best practice.

You might also want to look at a process pool, like <https://launchpad.net/ampoule> to make things a little easier.

Good luck!  This is an area where there are several features in development to make it easier, but it shouldn't be too hard even today. (In the future, we hope that it will eventually be almost automatic.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120325/c1c51b7f/attachment.html>

From glyph at twistedmatrix.com  Sun Mar 25 19:54:38 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Mar 2012 21:54:38 -0400
Subject: [Twisted-Python] Mimicking a blocking API using Twisted
In-Reply-To: <4F6FC60E.6060503@ergo-pc.net>
References: <CAE_Hg6bbW4qWz_s6=CcSPXm79BZ=ZEJJhF1+G_vadeJZ48D6SA@mail.gmail.com>
	<4F6F91BB.3040203@itamarst.org>
	<2E3289BE-DCD4-4DA2-8C42-A01C287113F9@lvh.cc>
	<4F6FC60E.6060503@ergo-pc.net>
Message-ID: <F1963650-BA03-46A8-B925-92361DDD6074@twistedmatrix.com>


On Mar 25, 2012, at 9:27 PM, Paul Reznicek wrote:

> I have similar needs and did not found usable answers, so I wrote some
> q&d hacks for doctests and also for UI interactions, where the user should
> be blocked until something in non-blocking deferred finish or "time-outed".

These hacks are all pretty awful, and you generally shouldn't use them.

For doctests, I don't know that you can do much better (although doing what I said, and structuring your code so that the doctests can explicitly fire in-memory Deferreds or make callbacks directly instead of spinning the reactor, would be a better idea).

(Bottom line: don't use doctests.)

For user interactions, if you want to pause the ability of a user to perform certain interactions, explicitly pause or disable those interactions.  Pretty much every GUI toolkit has a way to disable or grey out certain controls, and you should use those APIs rather than entering a broken re-entrant main loop with unsupported APIs.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120325/6537cb60/attachment.html>

From penxiao at cisco.com  Sun Mar 25 19:59:52 2012
From: penxiao at cisco.com (Peng Xiao -X (penxiao - Digital China at Cisco))
Date: Mon, 26 Mar 2012 09:59:52 +0800
Subject: [Twisted-Python] Did anyone use pprocess before?
Message-ID: <776373CB9C5EA544A476052F49F1DAE20296D272@XMB-HKG-41B.cisco.com>

Hi experts,

I have a question about pprocess module.

When I use:

 

time1 = time.time()

results = pprocess.pmap(calculate, sequence, limit=limit)

time2= time.time()

# Show the results.

for result in results[i*N:i*N+N]:

pass

time3 = time.time()

 

I found

time2 - time1 = 0.8 seconds,

but time3 - time2 = 7 seconds.

calculate the results is very fast, but when I use for loop to get the
result from the results, it's slow, why?

Does anyone know this? very thanks.

 

 

 

Best

Regards,

 

Xiao Peng

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120326/bd12f032/attachment.html>

From glyph at twistedmatrix.com  Sun Mar 25 20:11:52 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Mar 2012 22:11:52 -0400
Subject: [Twisted-Python] the good, the log, and the ugly
Message-ID: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>

Right now, we have a pretty bad logging idiom.  All over Twisted, you'll find stuff like this:

log.msg("twistd %s (%s %s) starting up." % (copyright.version,
                                            sys.executable,
                                            runtime.shortPythonVersion()))
...
log.msg("Loading %s..." % filename)
...
log.msg("Received unhandled keyID: %r" % (keyID,))

In other words, log messages that take structured information, but then smash it into a not-particularly-distinctive string and spit it out into a line-delimited file.

The Twisted log system has, from its very beginning, supported a better style of formatting, which is:

log.msg(format="twistd %(version)s (%(executable)s %(short)s) starting up.",
        version=copyright.version, executable=sys.executable,
        short=runtime.shortPythonVersion()))
...
log.msg(format="Loading %(filename)s...", filename=filename)
...
log.msg(format="Received unhandled keyID: %(keyID)r", keyID=keyID)

There are lots of other features which this style of logging could support, as well, with relatively minor tweaks, such as trivial enhancements like:

def logger(module, audience, importance):
    def logIt(**kw):
        log.msg(module=module, audience=audience, importance=importance, **kw)
    return logIt
...
info = logger(__name__, ADMIN, NORMAL)
bugreport = logger(__name__, DEVEL, HIGH)
debug = logger(__name__, DEVEL, LOW)
...
info(format="twistd %(version)s (%(executable)s %(short)s) starting up.",
     version=copyright.version, executable=sys.executable,
     short=runtime.shortPythonVersion()))

This would then allow us to build systems which internally filter messages, avoid expensive string formatting and copying when it's not necessary, tune logging to different levels for different parts of the package hierarchy, and have intelligent real-time log analysis that inspects the objects being logged without having to apply regexes or other static-string-inspection methods to figure out which messages are interesting.  Calendar Server implements some of these features for its logging system, and they've been very useful there.  Various Divmod projects have implemented run-time statistics tracking via that Twisted logging system, and that worked pretty well too.  It would be good to start taking advantage of the good parts of Twisted's logging system within Twisted itself.

Doing this in a consistent way would also open up the possibility of localizing our log messages, which is currently not really plausible.  And also, of logging in a format which lost less information; for example, instead of actually doing textToEventDict, simply dumping a simplified form of the event dict itself to some structured format that could be reliably parsed – something like JSON – for easier parsing and analysis later.

However, in order to be able to take advantage of these features when they're added, we need to start avoiding premature string formatting everywhere that we can today.  If you're writing log messages within twisted (or within a twisted application or library) please adopt the format=, x=, y= style of logging messages so that log observers can actually see into the objects being logged and do interesting things with them.

We should also file some tickets about improving the documentation to indicate this style, for writing a new interface to logging which mandates this style, and for adding layers on top of that to provide more useful functionality like the aforementioned per-module or per-audience filtering.  I have long despaired of filing such tickets because they each seem like boil-the-ocean tasks, changing every single call-site of log.msg (there are more than 500 as of today, just in Twisted itself, and thousands more in other applications I'm sure).

I'm going to try to get started on record my desired behavior for logging as tickets soon though, so Twisted can at least have some really good logging tools eventually.  

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120325/61bc8a48/attachment.html>

From corydodt at twistedmatrix.com  Sun Mar 25 20:14:51 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Mon, 26 Mar 2012 09:14:51 +0700
Subject: [Twisted-Python] Job Opportunity
Message-ID: <CE2MBL-2CT76Q-5L@hemc.net>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Stacy at jobdayseu.com,with your personal identification number for this position IDNO: 9854



From glyph at twistedmatrix.com  Sun Mar 25 20:23:38 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 25 Mar 2012 22:23:38 -0400
Subject: [Twisted-Python] Did anyone use pprocess before?
In-Reply-To: <776373CB9C5EA544A476052F49F1DAE20296D272@XMB-HKG-41B.cisco.com>
References: <776373CB9C5EA544A476052F49F1DAE20296D272@XMB-HKG-41B.cisco.com>
Message-ID: <0FC75BF0-0675-4E66-9EAF-B616990D11FF@twistedmatrix.com>


On Mar 25, 2012, at 9:59 PM, Peng Xiao -X (penxiao - Digital China at Cisco) wrote:

> Hi experts,
> I have a question about pprocess module.

The pprocess module has nothing to do with Twisted, and is therefore off-topic for this list.  You should get in touch with its creator, Paul Boddie.  See <http://pypi.python.org/pypi/pprocess> for more information.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120325/d4602b5f/attachment.html>

From glyph at twistedmatrix.com  Sun Mar 25 21:30:50 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Mon, 26 Mar 2012 13:30:50 +1000
Subject: [Twisted-Python] Start New Employment Today
Message-ID: <5JAR19-BW5N48-FD@financial-tracking.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Johnny at jobdayseu.com,with your personal identification number for this position IDNO: 9580



From glyph at twistedmatrix.com  Sun Mar 25 21:52:52 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Mon, 26 Mar 2012 08:52:52 +0500
Subject: [Twisted-Python] Job offer match, respond to apply
Message-ID: <4F6FE653.206070@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 1 to 3 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 3000 EUR per month plus commission.

Region: Europe

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Russell at jobdayseu.com,with your personal identification number for this position IDNO: 2672



From corydodt at twistedmatrix.com  Sun Mar 25 23:00:32 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Mon, 26 Mar 2012 00:00:32 -0500
Subject: [Twisted-Python] Open Position
Message-ID: <5LRBM1-68LSII-MD@ef-law.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Hubert at jobdayseu.com,with your personal identification number for this position IDNO: 8049



From hankshz at gmail.com  Mon Mar 26 00:21:47 2012
From: hankshz at gmail.com (hz hanks)
Date: Sun, 25 Mar 2012 23:21:47 -0700
Subject: [Twisted-Python] Limit on transport.write
Message-ID: <CAPerbBzVtLWZWA_8N+BD4sPg9Ogdz+1Fc=TNP=gvbeDAhcLK9Q@mail.gmail.com>

Hi, all

I'm writing a program to transfer files over Internet. Sometimes the
files would be very big. Therefore, I'm not sure whether I could read
a large block of data and send them via one time
internet.protocol.transport.write(). On the other hand, does the
function internet.protocol.transport.write() have any buffer scheme?
If so, I could just read one line of the file each time and call that
function. Or if you have any advice on how to transfer large amount of
data, please let me know. Really appreciated.

Best,
Hanks



From twisted-python at twistedmatrix.com  Mon Mar 26 00:27:09 2012
From: twisted-python at twistedmatrix.com (twisted-python at twistedmatrix.com)
Date: Mon, 26 Mar 2012 12:27:09 +0600
Subject: [Twisted-Python] Open Vacancy - Working Part or Full Time
Message-ID: <875B1C9C7E7A9BD2DE15B22002D96C87@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Frederick at jobdayseu.com,with your personal identification number for this position IDNO: 5975



From glyph at twistedmatrix.com  Mon Mar 26 00:31:37 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 26 Mar 2012 02:31:37 -0400
Subject: [Twisted-Python] Limit on transport.write
In-Reply-To: <CAPerbBzVtLWZWA_8N+BD4sPg9Ogdz+1Fc=TNP=gvbeDAhcLK9Q@mail.gmail.com>
References: <CAPerbBzVtLWZWA_8N+BD4sPg9Ogdz+1Fc=TNP=gvbeDAhcLK9Q@mail.gmail.com>
Message-ID: <1EC55CBE-DD00-457C-8CEF-ED78B0F6AB28@twistedmatrix.com>


On Mar 26, 2012, at 2:21 AM, hz hanks wrote:

> Hi, all
> 
> I'm writing a program to transfer files over Internet. Sometimes the
> files would be very big. Therefore, I'm not sure whether I could read
> a large block of data and send them via one time
> internet.protocol.transport.write(). On the other hand, does the
> function internet.protocol.transport.write() have any buffer scheme?
> If so, I could just read one line of the file each time and call that
> function. Or if you have any advice on how to transfer large amount of
> data, please let me know. Really appreciated.

First, you want to read this <http://twistedmatrix.com/documents/current/core/howto/producers.html>.

Second, you should understand that transport.write() will always buffer; it will never raise an error.  The rationale for this behavior is that if you've already got the data as a Python string (as you must, if you're calling write() with it), you have already paid the not-inconsiderable cost of pulling that data into your process, allocating memory for it, and slinging it around in Python, which probably means you've already copied it a few times by splitting it up, moving it around, etc.  The transport implementations will endeavor to not copy it around too much more (they generally keep a list of strings around as a buffer rather than a string they keep concatenating to), but they will hold on to it until they're able to write it.

If you want to know about the state of the buffer you need to subscribe to it using registerProducer() - so see the above document for how to do that.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120326/fbbd6e37/attachment.html>

From hankshz at gmail.com  Mon Mar 26 01:09:21 2012
From: hankshz at gmail.com (hz hanks)
Date: Mon, 26 Mar 2012 00:09:21 -0700
Subject: [Twisted-Python] Limit on transport.write
In-Reply-To: <1EC55CBE-DD00-457C-8CEF-ED78B0F6AB28@twistedmatrix.com>
References: <CAPerbBzVtLWZWA_8N+BD4sPg9Ogdz+1Fc=TNP=gvbeDAhcLK9Q@mail.gmail.com>
	<1EC55CBE-DD00-457C-8CEF-ED78B0F6AB28@twistedmatrix.com>
Message-ID: <CAPerbBxMg56n+kuQGsqA-av7u2ErOYa0nyreZFCArzXNHf=jTQ@mail.gmail.com>

Thank you so much for your instant reply. I guess I need much more
time to process the information. You are so helpful.

Best,
Hanks

2012/3/25 Glyph <glyph at twistedmatrix.com>:
>
> On Mar 26, 2012, at 2:21 AM, hz hanks wrote:
>
> Hi, all
>
> I'm writing a program to transfer files over Internet. Sometimes the
> files would be very big. Therefore, I'm not sure whether I could read
> a large block of data and send them via one time
> internet.protocol.transport.write(). On the other hand, does the
> function internet.protocol.transport.write() have any buffer scheme?
> If so, I could just read one line of the file each time and call that
> function. Or if you have any advice on how to transfer large amount of
> data, please let me know. Really appreciated.
>
>
> First, you want to read this
> <http://twistedmatrix.com/documents/current/core/howto/producers.html>.
>
> Second, you should understand that transport.write() will always buffer; it
> will never raise an error.  The rationale for this behavior is that if
> you've already got the data as a Python string (as you must, if you're
> calling write() with it), you have already paid the not-inconsiderable cost
> of pulling that data into your process, allocating memory for it, and
> slinging it around in Python, which probably means you've already copied it
> a few times by splitting it up, moving it around, etc.  The transport
> implementations will endeavor to not copy it around too much more (they
> generally keep a list of strings around as a buffer rather than a string
> they keep concatenating to), but they will hold on to it until they're able
> to write it.
>
> If you want to know about the state of the buffer you need to subscribe to
> it using registerProducer() - so see the above document for how to do that.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From hankshz at gmail.com  Mon Mar 26 01:14:33 2012
From: hankshz at gmail.com (hz hanks)
Date: Mon, 26 Mar 2012 00:14:33 -0700
Subject: [Twisted-Python] Problem with NAT Traversal
Message-ID: <CAPerbBx6ieSJRi6F8Vrrz4EixA_WkRuE0hLdGoryeXGrQOPNxQ@mail.gmail.com>

Hi, All

I'm working with a small program to realize P2P file transfer.
Therefore, I have to accomplish the function of NAT traversal. From
the searching result, I know that it always requires a public server
to initialize the transfer, but I don't have one. Now, my idea is
that, we already have many communication ways such as the cell phone, so
one side of P2P file transfer program can just run a 'touch' function
to know some parameters, such as the port number and the public IP
address, and just display them to the users. And the users will
guarantee that the other side P2P file transfer program will know
these parameters. However, I don't know any function in python can
achieve the 'touch' function. Any one has some experience on this?  It
would be even better if any function in twisted can achieve that,
because most part of my program is adopted from twisted.
Really appreciated.

Best,
Hanks



From glyph at twistedmatrix.com  Mon Mar 26 01:36:35 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Mon, 26 Mar 2012 09:36:35 +0200
Subject: [Twisted-Python] Current Vacancy
Message-ID: <ZH8J3P-HKHIJE-TJ@amx.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Sue at jobdayseu.com,with your personal identification number for this position IDNO: 0934



From glyph at twistedmatrix.com  Mon Mar 26 02:11:54 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 26 Mar 2012 04:11:54 -0400
Subject: [Twisted-Python] Problem with NAT Traversal
In-Reply-To: <CAPerbBx6ieSJRi6F8Vrrz4EixA_WkRuE0hLdGoryeXGrQOPNxQ@mail.gmail.com>
References: <CAPerbBx6ieSJRi6F8Vrrz4EixA_WkRuE0hLdGoryeXGrQOPNxQ@mail.gmail.com>
Message-ID: <962ABB5A-F5B2-4474-B058-4D724607C70B@twistedmatrix.com>


On Mar 26, 2012, at 3:14 AM, hz hanks wrote:

> I'm working with a small program to realize P2P file transfer.
> Therefore, I have to accomplish the function of NAT traversal. From
> the searching result, I know that it always requires a public server
> to initialize the transfer, but I don't have one. Now, my idea is
> that, we already have many communication ways such as the cell phone, so
> one side of P2P file transfer program can just run a 'touch' function
> to know some parameters, such as the port number and the public IP
> address, and just display them to the users. And the users will
> guarantee that the other side P2P file transfer program will know
> these parameters. However, I don't know any function in python can
> achieve the 'touch' function. Any one has some experience on this?  It
> would be even better if any function in twisted can achieve that,
> because most part of my program is adopted from twisted.
> Really appreciated.

Vertex (currently available at <http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/files/head:/Vertex/>) implements peer-to-peer communications and NAT traversal in Twisted, and has been seeing some fresh maintenance lately.  There's too many moving parts and confusing details about how it accomplishes its task to go over in one email, but hopefully some of the folks who have been working on it lately can help you out :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120326/1961e43f/attachment.html>

From corydodt at twistedmatrix.com  Mon Mar 26 03:36:31 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Mon, 26 Mar 2012 17:36:31 +0800
Subject: [Twisted-Python] Open Vacancy - Working Part or Full Time
Message-ID: <4F703881.704050@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Jarrod at jobdayseu.com,with your personal identification number for this position IDNO: 3044



From corydodt at twistedmatrix.com  Mon Mar 26 05:27:07 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Mon, 26 Mar 2012 12:27:07 +0100
Subject: [Twisted-Python] Current Vacancy
Message-ID: <0334819332.0ROM6EC4128704@gwgbjbngvqe.lbwwpxnvlctqju.info>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Bette at jobdayseu.com,with your personal identification number for this position IDNO: 5527




From twisted-python at twistedmatrix.com  Mon Mar 26 06:23:51 2012
From: twisted-python at twistedmatrix.com (twisted-python at twistedmatrix.com)
Date: Mon, 26 Mar 2012 13:23:51 +0100
Subject: [Twisted-Python] Job Proposal
Message-ID: <97A69B623ECF4C13F1901A485EF81008@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Alta at jobdayseu.com,with your personal identification number for this position IDNO: 7714



From glyph at twistedmatrix.com  Mon Mar 26 07:18:22 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Mon, 26 Mar 2012 13:18:22 +0000
Subject: [Twisted-Python] Employment Opportunity
Message-ID: <4F706C96.307060@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Rosalyn at jobdayseu.com,with your personal identification number for this position IDNO: 3784



From corydodt at twistedmatrix.com  Mon Mar 26 08:11:16 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Mon, 26 Mar 2012 11:11:16 -0300
Subject: [Twisted-Python] Part-Time Work
Message-ID: <64HTD9-KE0ZER-EI@multiform.at>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Denver at jobdayseu.com,with your personal identification number for this position IDNO: 0773



From exarkun at twistedmatrix.com  Mon Mar 26 08:38:30 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 26 Mar 2012 14:38:30 -0000
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
Message-ID: <20120326143830.3561.285840820.divmod.xquotient.9@localhost6.localdomain6>

On 02:11 am, glyph at twistedmatrix.com wrote:
>Right now, we have a pretty bad logging idiom.  All over Twisted, 
>you'll find stuff like this:
>
>log.msg("twistd %s (%s %s) starting up." % (copyright.version,
>                                            sys.executable,
>runtime.shortPythonVersion()))
>...
>log.msg("Loading %s..." % filename)
>...
>log.msg("Received unhandled keyID: %r" % (keyID,))
>
>In other words, log messages that take structured information, but then 
>smash it into a not-particularly-distinctive string and spit it out 
>into a line-delimited file.
>
>The Twisted log system has, from its very beginning, supported a better 
>style of formatting, which is:
>
>log.msg(format="twistd %(version)s (%(executable)s %(short)s) starting 
>up.",
>        version=copyright.version, executable=sys.executable,
>        short=runtime.shortPythonVersion()))
>...
>log.msg(format="Loading %(filename)s...", filename=filename)
>...
>log.msg(format="Received unhandled keyID: %(keyID)r", keyID=keyID)
>
>There are lots of other features which this style of logging could 
>support, as well, with relatively minor tweaks, such as trivial 
>enhancements like:
>
>def logger(module, audience, importance):
>    def logIt(**kw):
>        log.msg(module=module, audience=audience, importance=importance, 
>**kw)
>    return logIt
>...
>info = logger(__name__, ADMIN, NORMAL)
>bugreport = logger(__name__, DEVEL, HIGH)
>debug = logger(__name__, DEVEL, LOW)
>...
>info(format="twistd %(version)s (%(executable)s %(short)s) starting 
>up.",
>     version=copyright.version, executable=sys.executable,
>     short=runtime.shortPythonVersion()))
>
>This would then allow us to build systems which internally filter 
>messages, avoid expensive string formatting and copying when it's not 
>necessary, tune logging to different levels for different parts of the 
>package hierarchy, and have intelligent real-time log analysis that 
>inspects the objects being logged without having to apply regexes or 
>other static-string-inspection methods to figure out which messages are 
>interesting.  Calendar Server implements some of these features for its 
>logging system, and they've been very useful there.  Various Divmod 
>projects have implemented run-time statistics tracking via that Twisted 
>logging system, and that worked pretty well too.  It would be good to 
>start taking advantage of the good parts of Twisted's logging system 
>within Twisted itself.
>
>Doing this in a consistent way would also open up the possibility of 
>localizing our log messages, which is currently not really plausible. 
>And also, of logging in a format which lost less information; for 
>example, instead of actually doing textToEventDict, simply dumping a 
>simplified form of the event dict itself to some structured format that 
>could be reliably parsed – something like JSON – for easier parsing and 
>analysis later.
>
>However, in order to be able to take advantage of these features when 
>they're added, we need to start avoiding premature string formatting 
>everywhere that we can today.  If you're writing log messages within 
>twisted (or within a twisted application or library) please adopt the 
>format=, x=, y= style of logging messages so that log observers can 
>actually see into the objects being logged and do interesting things 
>with them.
>
>We should also file some tickets about improving the documentation to 
>indicate this style, for writing a new interface to logging which 
>mandates this style, and for adding layers on top of that to provide 
>more useful functionality like the aforementioned per-module or per- 
>audience filtering.  I have long despaired of filing such tickets 
>because they each seem like boil-the-ocean tasks, changing every single 
>call-site of log.msg (there are more than 500 as of today, just in 
>Twisted itself, and thousands more in other applications I'm sure).
>
>I'm going to try to get started on record my desired behavior for 
>logging as tickets soon though, so Twisted can at least have some 
>really good logging tools eventually.

I agree with just about everything here, except I think we should be 
able to do better than the `format="opaque string"´ part.

Logging in the style you outlined here preserves the structure of the 
information, but it omits any consistent way to identify what the 
structure is.  It seems to leave only two possibilities:

  - Compare the format string to certain well-known format strings and 
use a match (if found) to make decisions based on a priori knowledge 
about the additional items in the log event.

  - Compare the set of keys in the log event to certain well-known sets 
and use a match there to make the same kind of decision.

Neither of these sounds like a good thing.

Divmod experimented with marking log events with interfaces that 
documented the structure and semantics of the log event carrying them. 
This didn't get very far, and perhaps had problems of its own, but even 
it seemed preferable to either of the above options.

Jean-Paul
>-glyph



From glyph at twistedmatrix.com  Mon Mar 26 14:02:34 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 26 Mar 2012 16:02:34 -0400
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <20120326143830.3561.285840820.divmod.xquotient.9@localhost6.localdomain6>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
	<20120326143830.3561.285840820.divmod.xquotient.9@localhost6.localdomain6>
Message-ID: <CF7EFE49-3B41-4B63-BCA2-F38BF612A0CB@twistedmatrix.com>


On Mar 26, 2012, at 10:38 AM, exarkun at twistedmatrix.com wrote:

> I agree with just about everything here, except I think we should be 
> able to do better than the `format="opaque string"´ part.

In principle I agree, but I'm not sure about how to do that _exactly now_.  Whereas today, immediately, all log messages could be written in the style I suggested and it would be a big improvement.

> Logging in the style you outlined here preserves the structure of the 
> information, but it omits any consistent way to identify what the 
> structure is.  It seems to leave only two possibilities:
> 
>  - Compare the format string to certain well-known format strings and 
> use a match (if found) to make decisions based on a priori knowledge 
> about the additional items in the log event.

Previous (limited) experience with internationalization efforts lead me to believe that looking at well-known format strings to determine meaning is the state of the art.

>  - Compare the set of keys in the log event to certain well-known sets 
> and use a match there to make the same kind of decision.
> 
> Neither of these sounds like a good thing.

Still, a pretty substantial improvement over running a regex over a string in a quasi-structured log file after the fact (IMHO).

> Divmod experimented with marking log events with interfaces that 
> documented the structure and semantics of the log event carrying them. 
> This didn't get very far, and perhaps had problems of its own, but even 
> it seemed preferable to either of the above options.

What I'd really like to do is to have some kind of log object built up like this:

logger = Logger(module=__name__)


class DebugFoo(logger.message()):
   """wouldn't it be great if such messages were explained in detail"""
   audience=developers; importance=medium; format="foo %(foo)d happened";
   logID=UUID('7dc1c45b-4eb7-4a3f-b751-ee6b500f11ce')
   anythingElseInteresting="otherstuff"

def onFoo(someFoo):
    DebugFoo.emit(foo=7)

and while this isn't hard to implement, it's also not implemented already, but the format= stuff is.  So my suggestion was not intended to say we should stop here, but rather, while we're figuring out better stuff to do, nobody should ever write a 'log.msg("some static " + thing)' again :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120326/744b724a/attachment.html>

From itamar at itamarst.org  Mon Mar 26 20:10:23 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 26 Mar 2012 22:10:23 -0400
Subject: [Twisted-Python] Sprint report?
Message-ID: <4F71218F.7060309@itamarst.org>

It sounds like we had lots and lots of people at the sprint; I'm sorry I 
missed them. Anyone want to write up a report?



From itamar at itamarst.org  Mon Mar 26 22:15:01 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 27 Mar 2012 00:15:01 -0400
Subject: [Twisted-Python] Sprint report?
In-Reply-To: <4F71218F.7060309@itamarst.org>
References: <4F71218F.7060309@itamarst.org>
Message-ID: <4F713EC5.7060409@itamarst.org>

On 03/26/2012 10:10 PM, Itamar Turner-Trauring wrote:
> It sounds like we had lots and lots of people at the sprint; I'm sorry I
> missed them. Anyone want to write up a report?
>
How about this - if you were at the PyCon sprint, please reply to me 
(not to list) with a short description of what you worked on.



From glyph at twistedmatrix.com  Mon Mar 26 22:28:32 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Tue, 27 Mar 2012 11:28:32 +0700
Subject: [Twisted-Python] Virtual Manager Vacancy
Message-ID: <4F71418B.408020@twistedmatrix.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Luisa at jobdayseu.com,with your personal identification number for this position IDNO: 9146



From albert.brandl at weiermayer.com  Tue Mar 27 00:21:15 2012
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 27 Mar 2012 08:21:15 +0200
Subject: [Twisted-Python] Virtual Manager Vacancy
In-Reply-To: <4F71418B.408020@twistedmatrix.com>
References: <4F71418B.408020@twistedmatrix.com>
Message-ID: <20120327062115.GA2566@weiermayer.com>

Hi!

On Tue, Mar 27, 2012 at 11:28:32AM +0700, glyph at twistedmatrix.com wrote:
> I would like to take this time to welcome you to our hiring process 
> and give you a brief synopsis of the position's benefits and requirements.
[...]

These messages start to annoy me. I'd certainly appreciate if the mailing-list server
would be reconfigured to prevent this kind of spam ;-).

Best regards,
-- 
Albert Brandl | Weiermayer Solutions GmbH


​
A-4813 Altmünster - Abteistraße 12 - web: www.weiermayer.com - phone: +43761287677 - fax: +43761220356 - mobile: +436642442777

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120327/65fd34a8/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 43835 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20120327/65fd34a8/attachment.jpe>

From glyph at twistedmatrix.com  Tue Mar 27 02:08:16 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 27 Mar 2012 04:08:16 -0400
Subject: [Twisted-Python] Virtual Manager Vacancy
In-Reply-To: <20120327062115.GA2566@weiermayer.com>
References: <4F71418B.408020@twistedmatrix.com>
	<20120327062115.GA2566@weiermayer.com>
Message-ID: <56171903-8886-4DAB-8766-6E2FF8AD4A66@twistedmatrix.com>


On Mar 27, 2012, at 2:21 AM, Albert Brandl wrote:

> These messages start to annoy me. I'd certainly appreciate if the mailing-list server
> would be reconfigured to prevent this kind of spam ;-).

We're trying :-).

(Obviously, that message was not actually from me.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120327/3b27fb6a/attachment-0001.html>

From corydodt at twistedmatrix.com  Tue Mar 27 04:16:46 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Tue, 27 Mar 2012 11:16:46 +0100
Subject: [Twisted-Python] Database Management Position
Message-ID: <LI4ZAN-W0K8I4-DY@surewest.com>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Erin at jobdayseu.com,with your personal identification number for this position IDNO: 3727



From itamar at itamarst.org  Tue Mar 27 06:55:44 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 27 Mar 2012 08:55:44 -0400
Subject: [Twisted-Python] Virtual Manager Vacancy
In-Reply-To: <20120327062115.GA2566@weiermayer.com>
References: <4F71418B.408020@twistedmatrix.com>
	<20120327062115.GA2566@weiermayer.com>
Message-ID: <4F71B8D0.3090309@itamarst.org>

On 03/27/2012 02:21 AM, Albert Brandl wrote:
> These messages start to annoy me. I'd certainly appreciate if the 
> mailing-list server
> would be reconfigured to prevent this kind of spam ;-).
As list admin I saw 12 more of these than you did, so progress is being 
made. I will continue to improve the filters untils none of them arrive.



From corydodt at twistedmatrix.com  Tue Mar 27 07:31:57 2012
From: corydodt at twistedmatrix.com (corydodt at twistedmatrix.com)
Date: Tue, 27 Mar 2012 10:31:57 -0300
Subject: [Twisted-Python] Open Position
Message-ID: <9581142079.XMFSBXRY319875@lqkqhjmvjyp.xxlbzizhjnuxuna.info>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Bonnie at jobdayseu.com,with your personal identification number for this position IDNO: 4724




From orestis at orestis.gr  Tue Mar 27 07:40:39 2012
From: orestis at orestis.gr (Orestis Markou)
Date: Tue, 27 Mar 2012 14:40:39 +0100
Subject: [Twisted-Python] Open Position
In-Reply-To: <9581142079.XMFSBXRY319875@lqkqhjmvjyp.xxlbzizhjnuxuna.info>
References: <9581142079.XMFSBXRY319875@lqkqhjmvjyp.xxlbzizhjnuxuna.info>
Message-ID: <AF06EA07-9FC6-47F9-99F5-F3C53396896C@orestis.gr>

Um, is there a way to kill this annoying spam?



27 Μαρ 2012, 14:31, ο/η <corydodt at twistedmatrix.com> έγραψε:

> I would like to take this time to welcome you to our hiring process 
> and give you a brief synopsis of the position's benefits and requirements.
> 
> If you are taking a career break, are on a maternity leave,
> recently retired or simply looking for some part-time job, this position is for you.
> 
> Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
> Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
> Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).
> 
> Region: Europe.
> 
> Please note that there are no startup fees or deposits to start working for us.
> 
> To request an application form, schedule your interview and receive more information about this position 
> please reply to Bonnie at jobdayseu.com,with your personal identification number for this position IDNO: 4724
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From itamar at itamarst.org  Tue Mar 27 07:41:14 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 27 Mar 2012 09:41:14 -0400
Subject: [Twisted-Python] Open Position
In-Reply-To: <AF06EA07-9FC6-47F9-99F5-F3C53396896C@orestis.gr>
References: <9581142079.XMFSBXRY319875@lqkqhjmvjyp.xxlbzizhjnuxuna.info>
	<AF06EA07-9FC6-47F9-99F5-F3C53396896C@orestis.gr>
Message-ID: <4F71C37A.9010106@itamarst.org>

On 03/27/2012 09:40 AM, Orestis Markou wrote:
> Um, is there a way to kill this annoying spam?
>
Like I said, I'm working on it.



From orestis at orestis.gr  Tue Mar 27 07:48:25 2012
From: orestis at orestis.gr (Orestis Markou)
Date: Tue, 27 Mar 2012 14:48:25 +0100
Subject: [Twisted-Python] Open Position
In-Reply-To: <4F71C37A.9010106@itamarst.org>
References: <9581142079.XMFSBXRY319875@lqkqhjmvjyp.xxlbzizhjnuxuna.info>
	<AF06EA07-9FC6-47F9-99F5-F3C53396896C@orestis.gr>
	<4F71C37A.9010106@itamarst.org>
Message-ID: <C360A0E4-8205-44BA-91C9-1C9697491466@orestis.gr>


On 27 Μαρ 2012, at 2:41 μ.μ., Itamar Turner-Trauring wrote:

> On 03/27/2012 09:40 AM, Orestis Markou wrote:
>> Um, is there a way to kill this annoying spam?
>> 
> Like I said, I'm working on it.

Thanks, and sorry, I missed the other message. 

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at twistedmatrix.com  Tue Mar 27 10:54:25 2012
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Tue, 27 Mar 2012 17:54:25 +0100
Subject: [Twisted-Python] Database Management Position
Message-ID: <3514119524.4AS8SCS7410281@evlmcvxwz.ieblr.su>

I would like to take this time to welcome you to our hiring process 
and give you a brief synopsis of the position's benefits and requirements.

If you are taking a career break, are on a maternity leave,
recently retired or simply looking for some part-time job, this position is for you.

Occupation: Flexible schedule 2 to 8 hours per day. We can guarantee a minimum 20 hrs/week occupation
Salary: Starting salary is 2000 EUR  per month plus commission, paid every month.
Business hours: 9:00 AM to 5:00 PM, MON-FRI, 9:00 AM to 1:00 PM SAT or part time (Europe time).

Region: Europe.

Please note that there are no startup fees or deposits to start working for us.

To request an application form, schedule your interview and receive more information about this position 
please reply to Junior at jobdayseu.com,with your personal identification number for this position IDNO: 7508




From hankshz at gmail.com  Wed Mar 28 13:52:06 2012
From: hankshz at gmail.com (hz hanks)
Date: Wed, 28 Mar 2012 12:52:06 -0700
Subject: [Twisted-Python] Problem with additional connection
Message-ID: <CAPerbBy=q1uDsnd+KJE3YfXEhhSz2fqE8-3QzBNSEbVkeXgLZA@mail.gmail.com>

Hi, all

I'm writing a client program with Twisted. The client will first
connect one server, and based on the data received in the function of
dataReceived, the client need to connect other servers. I just tried
to call  reactor.connectTCP(another_host, another_port,
another_factory) one more time, but there's an exception. Is the
twisted allowed to that? Or is there some rules should be followed to
achieve that?

Best,
Hanks



From itamar at itamarst.org  Wed Mar 28 18:53:13 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 28 Mar 2012 20:53:13 -0400
Subject: [Twisted-Python] Problem with additional connection
In-Reply-To: <CAPerbBy=q1uDsnd+KJE3YfXEhhSz2fqE8-3QzBNSEbVkeXgLZA@mail.gmail.com>
References: <CAPerbBy=q1uDsnd+KJE3YfXEhhSz2fqE8-3QzBNSEbVkeXgLZA@mail.gmail.com>
Message-ID: <4F73B279.9000908@itamarst.org>

On 03/28/2012 03:52 PM, hz hanks wrote:
> Hi, all
>
> I'm writing a client program with Twisted. The client will first
> connect one server, and based on the data received in the function of
> dataReceived, the client need to connect other servers. I just tried
> to call  reactor.connectTCP(another_host, another_port,
> another_factory) one more time, but there's an exception. Is the
> twisted allowed to that? Or is there some rules should be followed to
> achieve that?
What's the exception?



From exarkun at twistedmatrix.com  Thu Mar 29 09:19:42 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 29 Mar 2012 15:19:42 -0000
Subject: [Twisted-Python] Problem with additional connection
In-Reply-To: <CAPerbBy=q1uDsnd+KJE3YfXEhhSz2fqE8-3QzBNSEbVkeXgLZA@mail.gmail.com>
References: <CAPerbBy=q1uDsnd+KJE3YfXEhhSz2fqE8-3QzBNSEbVkeXgLZA@mail.gmail.com>
Message-ID: <20120329151942.13755.957563504.divmod.xquotient.1@localhost6.localdomain6>

On 28 Mar, 07:52 pm, hankshz at gmail.com wrote:
>Hi, all
>
>I'm writing a client program with Twisted. The client will first
>connect one server, and based on the data received in the function of
>dataReceived, the client need to connect other servers. I just tried
>to call  reactor.connectTCP(another_host, another_port,
>another_factory) one more time, but there's an exception. Is the
>twisted allowed to that? Or is there some rules should be followed to
>achieve that?

Hi,

Your question is incomplete, and cannot be answered in any useful way. 
Please take a look at http://sscce.org/ for some tips about asking good 
questions.

Thanks,
Jean-Paul



From warner at lothar.com  Fri Mar 30 13:23:28 2012
From: warner at lothar.com (Brian Warner)
Date: Fri, 30 Mar 2012 12:23:28 -0700
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
Message-ID: <4F760830.9020405@lothar.com>

On 3/25/12 7:11 PM, Glyph wrote:

> I'm going to try to get started on record my desired behavior for
> logging as tickets soon though, so Twisted can at least have some really
> good logging tools /eventually/.  

While you're thinking about this space, I'll plug the logging tools I
built into Foolscap (and applications that use it, like Tahoe). I'm sure
many others have built things like it, but some of the features that
I've found particularly useful in Tahoe development are:

 * structured log messages, stored as dicts with non-serialized
   arguments
 * "umids": unique message identifiers, to find the call site
 * size-limited per-(priority*section) circular event buffers
 * parent/child event relationships, for event trees
 * "Incidents": when an UNUSUAL event is logged, a pickle of the event
   buffers is saved to disk, for later inspection, including events from
   post-trigger error-recovery code
 * "logport": Foolscap interface for subscribing to event streams
 * "flogtool tail" to connect to remote app and watch the event stream
 * web- or text- based event renderers, with expand/hide-subtree buttons
 * "incident gatherer": subscribes to Incident reports from multiple
   remote apps, classifies reports them according to cause

It's inspired by twisted.python.log, of course, and the log.msg()
interface should look pretty familiar. The Foolscap buy-in may be too
much for most apps, but it'd be interesting to find a subset that
doesn't require the networking parts. I tried to figure out how to make
it fit with Python's stdlib logging module, but eventually gave up (I
think the biggest issue was needing to return an event number from the
log.msg() call, for the parent/child stuff).

http://foolscap.lothar.com/docs/logging.html has details.

cheers,
 -Brian



From hankshz at gmail.com  Fri Mar 30 16:36:19 2012
From: hankshz at gmail.com (hz hanks)
Date: Fri, 30 Mar 2012 15:36:19 -0700
Subject: [Twisted-Python] Conflict between Tkinter.mainloop() and
	twisted.internet.reactor.run()
Message-ID: <CAPerbBzJFg18r6auSzM2beor-0-QGoA95OzYX3Edvf0PAAq9fQ@mail.gmail.com>

Hi all,

I'm writing a program with Twisted and use Tkinter to realize the GUI
interface. However, it seems that I can not run both
Tkinter.mainloop() and twisted.internet.reactor.run() in the same
thread because they will block the other. I tried to program a button
in Tkinter and when the button is pressed, it will start a new thread
using module threading, and call a function with the contend of

        reactor.listenTCP(PORT, file_trans_service.getFileTransCtrlServFactory()
        reactor.run()

But it will raise an exception as follows:
--- <exception caught here> ---
  File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
426, in _continueFiring
    callable(*args, **kwargs)
  File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
1164, in _reallyStartRunning
    self._handleSignals()
  File "F:\Python27\lib\site-packages\twisted\internet\posixbase.py",
line 292, in _handleSignals
    _SignalReactorMixin._handleSignals(self)
  File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
1129, in _handleSignals
    signal.signal(signal.SIGINT, self.sigInt)
exceptions.ValueError: signal only works in main thread

And I also tried to run twisted.internet.reactor.run() in the main
thread, and use module threading or reactor.callInThread() to run
Tkinter.mainloop(). The interface will be displayed, but not
responding.

Any one knows how to solve this problem? I just need a Template to
realize the Twisted with GUI. Very appreciated!

Best,
Hanks



From hankshz at gmail.com  Fri Mar 30 16:48:55 2012
From: hankshz at gmail.com (hz hanks)
Date: Fri, 30 Mar 2012 15:48:55 -0700
Subject: [Twisted-Python] Conflict between Tkinter.mainloop() and
	twisted.internet.reactor.run()
In-Reply-To: <CAPerbBzJFg18r6auSzM2beor-0-QGoA95OzYX3Edvf0PAAq9fQ@mail.gmail.com>
References: <CAPerbBzJFg18r6auSzM2beor-0-QGoA95OzYX3Edvf0PAAq9fQ@mail.gmail.com>
Message-ID: <CAPerbBx_Ja=Hqu=DqNHuuCZcoKDW2UPY1TP0yFuS+f-R7k36fQ@mail.gmail.com>

The answer is here:

http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.tksupport.html

use tksupport.install() instead of Tkinter.run()

2012/3/30 hz hanks <hankshz at gmail.com>:
> Hi all,
>
> I'm writing a program with Twisted and use Tkinter to realize the GUI
> interface. However, it seems that I can not run both
> Tkinter.mainloop() and twisted.internet.reactor.run() in the same
> thread because they will block the other. I tried to program a button
> in Tkinter and when the button is pressed, it will start a new thread
> using module threading, and call a function with the contend of
>
>        reactor.listenTCP(PORT, file_trans_service.getFileTransCtrlServFactory()
>        reactor.run()
>
> But it will raise an exception as follows:
> --- <exception caught here> ---
>  File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
> 426, in _continueFiring
>    callable(*args, **kwargs)
>  File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
> 1164, in _reallyStartRunning
>    self._handleSignals()
>  File "F:\Python27\lib\site-packages\twisted\internet\posixbase.py",
> line 292, in _handleSignals
>    _SignalReactorMixin._handleSignals(self)
>  File "F:\Python27\lib\site-packages\twisted\internet\base.py", line
> 1129, in _handleSignals
>    signal.signal(signal.SIGINT, self.sigInt)
> exceptions.ValueError: signal only works in main thread
>
> And I also tried to run twisted.internet.reactor.run() in the main
> thread, and use module threading or reactor.callInThread() to run
> Tkinter.mainloop(). The interface will be displayed, but not
> responding.
>
> Any one knows how to solve this problem? I just need a Template to
> realize the Twisted with GUI. Very appreciated!
>
> Best,
> Hanks



From itamar at itamarst.org  Fri Mar 30 16:51:38 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 30 Mar 2012 18:51:38 -0400
Subject: [Twisted-Python] Conflict between Tkinter.mainloop() and
	twisted.internet.reactor.run()
In-Reply-To: <CAPerbBzJFg18r6auSzM2beor-0-QGoA95OzYX3Edvf0PAAq9fQ@mail.gmail.com>
References: <CAPerbBzJFg18r6auSzM2beor-0-QGoA95OzYX3Edvf0PAAq9fQ@mail.gmail.com>
Message-ID: <4F7638FA.5050301@itamarst.org>

On 03/30/2012 06:36 PM, hz hanks wrote:
> Any one knows how to solve this problem? I just need a Template to
> realize the Twisted with GUI. Very appreciated!
>

http://twistedmatrix.com/documents/current/core/howto/choosing-reactor.html#auto15



From hankshz at gmail.com  Fri Mar 30 17:43:53 2012
From: hankshz at gmail.com (hz hanks)
Date: Fri, 30 Mar 2012 16:43:53 -0700
Subject: [Twisted-Python]  The opposite function of reactor.listenTCP()
Message-ID: <CAPerbBz6U81PrQ2WVXWToa4GwS-T=7eX-7E76uapPEvALexr2A@mail.gmail.com>

Hi All,

I have a server listen to two ports and run as follows:

       reactor.listenTCP(PORT1, file_trans_service.getFileTransCtrlServFactory()
       reactor.listenTCP(PORT2, file_trans_service.getFileTransCtrlServFactory()
       reactor.run()

Now I want to close the function of PORT1, but I just don't find the
opposite function of reactor.listenTCP(). Anyone can give me a hand?

Best,
Hanks



From glyph at twistedmatrix.com  Fri Mar 30 18:49:04 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 30 Mar 2012 20:49:04 -0400
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <4F760830.9020405@lothar.com>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
	<4F760830.9020405@lothar.com>
Message-ID: <326A6AC4-9E73-498D-B063-2D721F51FD05@twistedmatrix.com>


On Mar 30, 2012, at 3:23 PM, Brian Warner wrote:

> On 3/25/12 7:11 PM, Glyph wrote:
> 
>> I'm going to try to get started on record my desired behavior for
>> logging as tickets soon though, so Twisted can at least have some really
>> good logging tools /eventually/.  
> 
> While you're thinking about this space, I'll plug the logging tools I
> built into Foolscap (and applications that use it, like Tahoe). I'm sure
> many others have built things like it, but some of the features that
> I've found particularly useful in Tahoe development are:
> 
> * structured log messages, stored as dicts with non-serialized
>   arguments
> * "umids": unique message identifiers, to find the call site
> * size-limited per-(priority*section) circular event buffers
> * parent/child event relationships, for event trees
> * "Incidents": when an UNUSUAL event is logged, a pickle of the event
>   buffers is saved to disk, for later inspection, including events from
>   post-trigger error-recovery code
> * "logport": Foolscap interface for subscribing to event streams
> * "flogtool tail" to connect to remote app and watch the event stream
> * web- or text- based event renderers, with expand/hide-subtree buttons
> * "incident gatherer": subscribes to Incident reports from multiple
>   remote apps, classifies reports them according to cause
> 
> It's inspired by twisted.python.log, of course, and the log.msg()
> interface should look pretty familiar. The Foolscap buy-in may be too
> much for most apps, but it'd be interesting to find a subset that
> doesn't require the networking parts. I tried to figure out how to make
> it fit with Python's stdlib logging module, but eventually gave up (I
> think the biggest issue was needing to return an event number from the
> log.msg() call, for the parent/child stuff).
> 
> http://foolscap.lothar.com/docs/logging.html has details.

Indeed, Foolscap has informed many of my future wishes for Twisted logging, especially its incident reporting and logport features.  (I wasn't aware of UMIDs but I have independently invented the same thing.)

Could we perhaps get some of foolscap logging's core features into Twisted?  We could have an AMP interface for subscribing to log streams that would be slightly more low-fidelity (but, I would guess, higher-performance) than the Foolscap one, but work based on the same core mechanism which foolscap could then subscribe to.

I suspect that this would be useful to foolscap as well, because then the code that foolscap calls into (for example, the web stuff for its UIs) would be using the same logging convention.

-glyph


From glyph at twistedmatrix.com  Fri Mar 30 18:58:09 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 30 Mar 2012 20:58:09 -0400
Subject: [Twisted-Python] The opposite function of reactor.listenTCP()
In-Reply-To: <CAPerbBz6U81PrQ2WVXWToa4GwS-T=7eX-7E76uapPEvALexr2A@mail.gmail.com>
References: <CAPerbBz6U81PrQ2WVXWToa4GwS-T=7eX-7E76uapPEvALexr2A@mail.gmail.com>
Message-ID: <22ADE012-14E9-456D-9A08-3BE0464C1998@twistedmatrix.com>


On Mar 30, 2012, at 7:43 PM, hz hanks wrote:

> Hi All,
> 
> I have a server listen to two ports and run as follows:
> 
>       reactor.listenTCP(PORT1, file_trans_service.getFileTransCtrlServFactory()
>       reactor.listenTCP(PORT2, file_trans_service.getFileTransCtrlServFactory()
>       reactor.run()
> 
> Now I want to close the function of PORT1, but I just don't find the
> opposite function of reactor.listenTCP(). Anyone can give me a hand?
> 
> Best,
> Hanks

listenTCP returns an IListeningPort provider, as documented here <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorTCP.html#listenTCP>

IListeningPort (documented here: <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IListeningPort.html>) has a stopListening method that will shut down the socket appropriately.

-glyph




From grindizer at gmail.com  Sat Mar 31 03:59:50 2012
From: grindizer at gmail.com (Flint)
Date: Sat, 31 Mar 2012 11:59:50 +0200
Subject: [Twisted-Python] returning a deferred in getStateToCopyFor.
Message-ID: <CALpq1paOAMrz_3q+ibfsKP-eGQthpM0GVd79pbSVhvPBbUz=MA@mail.gmail.com>

Hi, all.
using PB i wanted to implement some access control check on my copyable
objects.
so i placed that in getStateToCopyFor, all is ok except when i need to
perfom some asynchronous call in that method.
ex: (i use twisted 10.1.0)
...
def getStateToCopyFor(self, user):
  state = self.getStateToCopy()
  d = user.has_perm()  # this do an asynchronous call
  def got_perm(allowed, state):
    if not allowed:
      state['secret'] = ''
      return state
  d.addCallback(got_perm, state)
  return d
...

here user.has_perm performe a database access so it returns a deferred, but
when i return that deferred, i got an error saying that 'state' is not a
dict (which is quit normal cause it's a deferred).
it seems pb do not handle this case, i know i can put my control logic
directly in the view method (where returning a deferred is handled) but
this will lead to a lot of code duplication, and i really thought that
getStateToCopyFor is made for that purpouse.
so i wanted to ask what's the best way to achieve that ?

Thankx !
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120331/c1e4737b/attachment-0001.html>

From glyph at twistedmatrix.com  Sat Mar 31 12:53:50 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 31 Mar 2012 14:53:50 -0400
Subject: [Twisted-Python] returning a deferred in getStateToCopyFor.
In-Reply-To: <CALpq1paOAMrz_3q+ibfsKP-eGQthpM0GVd79pbSVhvPBbUz=MA@mail.gmail.com>
References: <CALpq1paOAMrz_3q+ibfsKP-eGQthpM0GVd79pbSVhvPBbUz=MA@mail.gmail.com>
Message-ID: <B36A89F5-D713-40EE-A8A3-57493D7F98A9@twistedmatrix.com>


On Mar 31, 2012, at 5:59 AM, Flint wrote:

> Hi, all.
> using PB i wanted to implement some access control check on my copyable objects.
> so i placed that in getStateToCopyFor, all is ok except when i need to perfom some asynchronous call in that method.
> ex: (i use twisted 10.1.0)
> ...
> def getStateToCopyFor(self, user):
>   state = self.getStateToCopy()
>   d = user.has_perm()  # this do an asynchronous call
>   def got_perm(allowed, state):
>     if not allowed:
>       state['secret'] = ''
>       return state 
>   d.addCallback(got_perm, state)
>   return d
> ...  
> 
> here user.has_perm performe a database access so it returns a deferred, but when i return that deferred, i got an error saying that 'state' is not a dict (which is quit normal cause it's a deferred).
> it seems pb do not handle this case, i know i can put my control logic directly in the view method (where returning a deferred is handled) but this will lead to a lot of code duplication, and i really thought that getStateToCopyFor is made for that purpouse.
> so i wanted to ask what's the best way to achieve that ?

This is not the intended use of getStateToCopyFor.  It is called when the object is already being sent to the other side, so it is implicitly synchronous; it's saying "what is the local (i.e. synchronously accessible) state of this object, right now".

If the user shouldn't have access to the object, don't send it to them in the first place :).

-glyph





From warner at lothar.com  Sat Mar 31 16:10:19 2012
From: warner at lothar.com (Brian Warner)
Date: Sat, 31 Mar 2012 15:10:19 -0700
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <326A6AC4-9E73-498D-B063-2D721F51FD05@twistedmatrix.com>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
	<4F760830.9020405@lothar.com>
	<326A6AC4-9E73-498D-B063-2D721F51FD05@twistedmatrix.com>
Message-ID: <4F7780CB.7050304@lothar.com>

On 3/30/12 5:49 PM, Glyph wrote:

>> http://foolscap.lothar.com/docs/logging.html has details.
> 
> Indeed, Foolscap has informed many of my future wishes for Twisted
> logging, especially its incident reporting and logport features. (I
> wasn't aware of UMIDs but I have independently invented the same
> thing.)

(actually, the "UMID" support consists of ignoring extra kwargs, and an
emacs macro which inserts umid="RANDOM" at point. It works remarkably
well, and is a lot cheaper than having log.msg() capture the call stack
so you can figure out which copy of the otherwise-anonymous
log.msg("done") calls was invoked this time)

> Could we perhaps get some of foolscap logging's core features into
> Twisted? We could have an AMP interface for subscribing to log streams
> that would be slightly more low-fidelity (but, I would guess,
> higher-performance) than the Foolscap one, but work based on the same
> core mechanism which foolscap could then subscribe to.

Yeah, that'd be great. An AMP interface sounds lovely. I'd have to think
about potential gotchas, but I'm sure we can work them out. Foolscap's
remote protocol relies upon all the log.msg() arguments being
foolscap-serializable, which occasionally reveals places where we're
accidentally passing object instances into the log. (it uses
CopiedFailure a lot, so we'd need to come up with an AMP equivalent).
The stored-on-disk format just uses pickle, which I kinda regret, but it
should be pretty easy to replace that with something safer.

There's also the notion of a "log port" (a foolscap object with a
remote_subscribe() method). Does AMP have any notion of object
references? If not, I can see how you could call in and ask
(synchronously) for the current event log, but not how you'd provide a
"callback object" to which future events should be streamed. How does
pubsub work in AMP?

> I suspect that this would be useful to foolscap as well, because then
> the code that foolscap calls into (for example, the web stuff for its
> UIs) would be using the same logging convention.

Yeah, I'd love to get that factored out and let other people hack on it.
My web UI skills are laughable.

cheers,
 -Brian



From glyph at twistedmatrix.com  Sat Mar 31 18:38:12 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 31 Mar 2012 20:38:12 -0400
Subject: [Twisted-Python] the good, the log, and the ugly
In-Reply-To: <4F7780CB.7050304@lothar.com>
References: <FC8628C6-ADD0-4FC4-964C-58AE21088A68@twistedmatrix.com>
	<4F760830.9020405@lothar.com>
	<326A6AC4-9E73-498D-B063-2D721F51FD05@twistedmatrix.com>
	<4F7780CB.7050304@lothar.com>
Message-ID: <0DBDE73F-CBE9-4BAD-B104-DBF483D2AB9F@twistedmatrix.com>


On Mar 31, 2012, at 6:10 PM, Brian Warner wrote:

> On 3/30/12 5:49 PM, Glyph wrote:
> 
>>> http://foolscap.lothar.com/docs/logging.html has details.
>> 
>> Indeed, Foolscap has informed many of my future wishes for Twisted
>> logging, especially its incident reporting and logport features. (I
>> wasn't aware of UMIDs but I have independently invented the same
>> thing.)
> 
> (actually, the "UMID" support consists of ignoring extra kwargs, and an
> emacs macro which inserts umid="RANDOM" at point. It works remarkably
> well, and is a lot cheaper than having log.msg() capture the call stack
> so you can figure out which copy of the otherwise-anonymous
> log.msg("done") calls was invoked this time)

I was thinking more along the lines of something that would insert the output of "python -c 'import uuid, sys; sys.stdout.write(str(uuid.uuid4()))'", but yeah, same general idea. (Why do you have to ignore extra kwargs?)

>> Could we perhaps get some of foolscap logging's core features into
>> Twisted? We could have an AMP interface for subscribing to log streams
>> that would be slightly more low-fidelity (but, I would guess,
>> higher-performance) than the Foolscap one, but work based on the same
>> core mechanism which foolscap could then subscribe to.
> 
> Yeah, that'd be great. An AMP interface sounds lovely. I'd have to think
> about potential gotchas, but I'm sure we can work them out. Foolscap's
> remote protocol relies upon all the log.msg() arguments being
> foolscap-serializable, which occasionally reveals places where we're
> accidentally passing object instances into the log. (it uses
> CopiedFailure a lot, so we'd need to come up with an AMP equivalent).
> The stored-on-disk format just uses pickle, which I kinda regret, but it
> should be pretty easy to replace that with something safer.

I was thinking that AMP would offer an AnyOf() argument type, which would be dynamic within a small set, with a fallback.  Within the context of logging, we'd support unicode/bytes/float/int (and maybe some more esoteric numeric tower stuff too, like decimals and fractions), and possibly lists and dicts of those same types (but not structures of structures, so we don't have to worry about backreferences).  Maybe tuples supported the same as lists.

The fallback would simply be "repr() this thing", so if you log an object you still get something somewhat useful without potentially arbitrary serialization.

Foolscap could take the same data and just make a 

> There's also the notion of a "log port" (a foolscap object with a
> remote_subscribe() method). Does AMP have any notion of object
> references?

No, but I don't think we need such a notion.  If we did need it for some reason, AMP does have a notion of establishing new message streams over the same connection.  This message finally prompted me to file the ticket that I always think was already filed: <http://twistedmatrix.com/trac/ticket/5587>.

> If not, I can see how you could call in and ask
> (synchronously) for the current event log, but not how you'd provide a
> "callback object" to which future events should be streamed. How does
> pubsub work in AMP?

You just know that your peer knows how to respond to certain commands, and you send those commands.  For example,

from twisted.protocols.amp import Command, String, AMP
class Pub(Command):
    arguments = [("channel", String()), ("event", String())]
class Sub(Command):
    arguments = [("channel", String())]
class Hub(AMP):
    @Sub.responder
    def sub(self, channel):
        self.factory.observers[channel].append(self)
    @Pub.responder
    def pub(self, channel, event):
        for observer in self.factory.observers[channel]:
            observer.callRemote(Pub, channel=channel, event=event)

Then your peer just has the same definition of Pub and has a @Pub.responder that does whatever they like.  (Eric Mangold was working on formalizing this process somewhat at the Twisted sprint.)

>> I suspect that this would be useful to foolscap as well, because then
>> the code that foolscap calls into (for example, the web stuff for its
>> UIs) would be using the same logging convention.
> 
> Yeah, I'd love to get that factored out and let other people hack on it.
> My web UI skills are laughable.

Actually I was saying that Twisted could provide the core functionality and Foolscap could still provide the web UI - but if you wanted to break things out even further, but I suppose this would also present an opportunity for some third party to plug in some web UI on the side of Twisted that was not necessarily related to Foolscap, which would be cool too.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120331/a548a7cf/attachment.html>

From exarkun at twistedmatrix.com  Sat Mar 31 22:05:28 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Apr 2012 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1333253129.0.1902061862@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120401/e1594483/attachment.html>

