From manlio_perillo at libero.it  Sat Dec  1 05:05:59 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 01 Dec 2007 11:05:59 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <072b01c833aa$b4d05c30$1e711490$@com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com>
Message-ID: <47513207.7070709@libero.it>

Alec Matusis ha scritto:
>> What causes the CPU overload in such a case
> 
> It looks like the for loop that loops over connections to send the message 
> is the main source of the load. The biggest problem is not the CPU however. 
> When the process takes more than 70% of the CPU (as displayed by top), python seems to start 
> skipping garbage collection, and the memory size of the process just keeps growing. We have no control over this.
> 

You should break the loop into small parts.

If you send a message to a lot of clients, then Twisted needs to keep 
all the buffers in memory (since your loop is blocking the reactor and 
Twisted is unable to flush the buffers).

You see the memory growing because the Python interpreter will not 
release the memory to the operating system (however the memory should 
not grow indefinitely)


 > [...]


Manlio Perillo



From matusis at yahoo.com  Sat Dec  1 05:50:31 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 1 Dec 2007 02:50:31 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <47513207.7070709@libero.it>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>	<072b01c833aa$b4d05c30$1e711490$@com>
	<47513207.7070709@libero.it>
Message-ID: <006f01c83407$fe819620$fb84c260$@com>

> You should break the loop into small parts.

Can you explain this?
Do you mean, use reactor.callLater to process say 100 messages at a time? Or maybe use deferToThread for the whole loop?

> You see the memory growing because the Python interpreter will not
> release the memory to the operating system (however the memory should
> not grow indefinitely)

The memory is actually growing indefinitely.
We run 4 identical servers on one machine. The load is not balanced very symmetrically. So one server can have 4500 connections, while another has 6000. There is a certain threshold on the number of connections, when a server starts to leak memory uncontrollably, and it's not set by the highest usage. For example, a server with 4500 connections remains at 100mb RSS for days, while a server that reaches 6000 connections leaks memory to 2gb in 10 hrs (I did not try beyond that, since the machine starts swapping!)  

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Manlio Perillo
> Sent: Saturday, December 01, 2007 2:06 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Advise for heavy concurrency
> 
> Alec Matusis ha scritto:
> >> What causes the CPU overload in such a case
> >
> > It looks like the for loop that loops over connections to send the
> message
> > is the main source of the load. The biggest problem is not the CPU
> however.
> > When the process takes more than 70% of the CPU (as displayed by
> top), python seems to start
> > skipping garbage collection, and the memory size of the process just
> keeps growing. We have no control over this.
> >
> 
> You should break the loop into small parts.
> 
> If you send a message to a lot of clients, then Twisted needs to keep
> all the buffers in memory (since your loop is blocking the reactor and
> Twisted is unable to flush the buffers).
> 
> You see the memory growing because the Python interpreter will not
> release the memory to the operating system (however the memory should
> not grow indefinitely)
> 
> 
>  > [...]
> 
> 
> Manlio Perillo
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From manlio_perillo at libero.it  Sat Dec  1 06:54:37 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 01 Dec 2007 12:54:37 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <006f01c83407$fe819620$fb84c260$@com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>	<072b01c833aa$b4d05c30$1e711490$@com>	<47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com>
Message-ID: <47514B7D.20203@libero.it>

Alec Matusis ha scritto:
>> You should break the loop into small parts.
> 
> Can you explain this?
> Do you mean, use reactor.callLater to process say 100 messages at a time? Or maybe use deferToThread for the whole loop?
> 

There is also twisted.internet.task.cooperate, but I have never used it.

>> You see the memory growing because the Python interpreter will not
>> release the memory to the operating system (however the memory should
>> not grow indefinitely)
> 
> The memory is actually growing indefinitely.
> We run 4 identical servers on one machine. The load is not balanced very symmetrically. 
> So one server can have 4500 connections, while another has 6000. 
> There is a certain threshold on the number of connections, when a server starts to leak memory uncontrollably, 
> and it's not set by the highest usage. For example, a server with 4500 connections remains at 100mb RSS for days, 
> while a server that reaches 6000 connections leaks memory to 2gb in 10 hrs 
> (I did not try beyond that, since the machine starts swapping!)


How big is a message sent to each client?
That is, how much memory requires to hold all these messages in memory?

 > [...]



P.S.:
your mail user agent does not wraps long lines; can you please fix it?





Manlio Perillo



From mrsalty0 at gmail.com  Sat Dec  1 12:01:32 2007
From: mrsalty0 at gmail.com (J Davis)
Date: Sat, 1 Dec 2007 12:01:32 -0500
Subject: [Twisted-Python] implementing a timeout
In-Reply-To: <20071130003038.8162.468070766.divmod.quotient.41374@ohm>
References: <a26b6f030711291545l7704dcd6yedebc1df49d227cd@mail.gmail.com>
	<20071130003038.8162.468070766.divmod.quotient.41374@ohm>
Message-ID: <a26b6f030712010901i91125a5n901f432181ca6a91@mail.gmail.com>

Ah yes, I should have thought to check the source for web.client.

Thank You!

-Jake


On Nov 29, 2007 7:30 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Thu, 29 Nov 2007 18:45:27 -0500, J Davis <mrsalty0 at gmail.com> wrote:
> >Greetings,
> >
> >I'm a newcomer to twisted and am struggling a little with the learning
> >curve.
> >I have an idea for an app that I believe is ideally suited for twisted
> >though I
> >could use some help finding the right way to approach it.
> >
> >It performs a status check by getting a page from a web server.
> >It calculates the time it took to download the page and also can check
> that
> >the
> >content matches a predefined string.
> >
> >That part of it is working fine but I'd like to take it a step further.
> >I need a way to impose a limit on how long it waits to receive a response
> so
> >that I can detect
> >unresponsive hosts. I must say that I'm at a loss as to how to add such a
> >timeout to my code.
> >Any pointers or examples would be greatly appreciated.
>
> You can pass a timeout keyword argument to getPage.  This will set the
> maximum time which is allowed to elapsed between when the TCP connection
> is established to the remote host and when the page is completely loaded.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071201/0afb8d13/attachment.htm 

From nico at teknico.net  Sat Dec  1 15:12:38 2007
From: nico at teknico.net (Nicola Larosa)
Date: Sat, 01 Dec 2007 21:12:38 +0100
Subject: [Twisted-Python] Re: Advise for heavy concurrency
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>	<072b01c833aa$b4d05c30$1e711490$@com>
	<47513207.7070709@libero.it> <006f01c83407$fe819620$fb84c260$@com>
Message-ID: <20071201201252.661721240B3@slice.teknico.net>

Manlio Perillo wrote:
> You see the memory growing because the Python interpreter will not
> release the memory to the operating system

This was true until CPython 2.4: the 2.5 version does actually release
unused memory to the operating system.

Python Memory Management Part 3: The Saga is Over
http://evanjones.ca/python-memory-part3.html

-- 
Nicola Larosa - http://www.tekNico.net/

Restricting yourself to the intersection of the two versions [Python 2.6
and 3.0] is very painful and limited. We're not introducing backwards
compatibility syntax in 3.0, because that would defeat the purpose
(we've had backwards compatibility forever in 2.x, and the whole point
of 3.0 is to clean up the mess). -- Guido van Rossum, July 2007





From matusis at yahoo.com  Sat Dec  1 16:11:04 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 1 Dec 2007 13:11:04 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <47514B7D.20203@libero.it>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>	<072b01c833aa$b4d05c30$1e711490$@com>	<47513207.7070709@libero.it>	<006f01c83407$fe819620$fb84c260$@com>
	<47514B7D.20203@libero.it>
Message-ID: <01d001c8345e$aefaeeb0$0cf0cc10$@com>

> How big is a message sent to each client?

Each message is about 40 bytes.
A typical loop to send message is 1000 clients, 
so only 40KB to hold the message for all clients.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Manlio Perillo
> Sent: Saturday, December 01, 2007 3:55 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Advise for heavy concurrency
> 
> Alec Matusis ha scritto:
> >> You should break the loop into small parts.
> >
> > Can you explain this?
> > Do you mean, use reactor.callLater to process say 100 messages at a
> time? Or maybe use deferToThread for the whole loop?
> >
> 
> There is also twisted.internet.task.cooperate, but I have never used
> it.
> 
> >> You see the memory growing because the Python interpreter will not
> >> release the memory to the operating system (however the memory
> should
> >> not grow indefinitely)
> >
> > The memory is actually growing indefinitely.
> > We run 4 identical servers on one machine. The load is not balanced
> very symmetrically.
> > So one server can have 4500 connections, while another has 6000.
> > There is a certain threshold on the number of connections, when a
> server starts to leak memory uncontrollably,
> > and it's not set by the highest usage. For example, a server with
> 4500 connections remains at 100mb RSS for days,
> > while a server that reaches 6000 connections leaks memory to 2gb in
> 10 hrs
> > (I did not try beyond that, since the machine starts swapping!)
> 
> 
> How big is a message sent to each client?
> That is, how much memory requires to hold all these messages in memory?
> 
>  > [...]
> 
> 
> 
> P.S.:
> your mail user agent does not wraps long lines; can you please fix it?
> 
> 
> 
> 
> 
> Manlio Perillo
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From theatilla at gmail.com  Sat Dec  1 18:37:47 2007
From: theatilla at gmail.com (Atilla)
Date: Sun, 2 Dec 2007 00:37:47 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <01d001c8345e$aefaeeb0$0cf0cc10$@com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com> <47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com> <47514B7D.20203@libero.it>
	<01d001c8345e$aefaeeb0$0cf0cc10$@com>
Message-ID: <b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>

I think I can control a lot of the memory overhead, both the one in my
application and the one that comes with the OSs overhead for the TCP
stack and network bufers. I've yet to see how much memory that is
going to take.

When it comes to deferToThread - is that actually going to be of any
use? Do I get an advantage of running the "send" loop in a seperate
thread? What if, say, I never had to send more than 10-50 messages, so
the loop is relatively small - then I'd have to keep spawning threads
for no reason.

But - when it comes to large send queues, how can that be chopped in
an efficient manner? Chop it into equal pieces and schedule them with
small delay, one after the other? Defer them to another thread? Is
there any other solution, a way to chain them into a log callback
squence maybe?



From mithrandi at mithrandi.za.net  Sat Dec  1 21:50:44 2007
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sun, 2 Dec 2007 04:50:44 +0200
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com> <47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com> <47514B7D.20203@libero.it>
	<01d001c8345e$aefaeeb0$0cf0cc10$@com>
	<b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
Message-ID: <20071202025044.GB11735@mithrandi.za.net>

* Atilla <theatilla at gmail.com> [2007-12-02 00:37:47 +0100]:

> When it comes to deferToThread - is that actually going to be of any
> use? Do I get an advantage of running the "send" loop in a seperate
> thread? What if, say, I never had to send more than 10-50 messages, so

You cannot call any Twisted functions from a thread, with the exception
of callFromThread; so this would probably be pretty pointless.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20071202/989f2144/attachment.pgp 

From mithrandi at mithrandi.za.net  Sat Dec  1 21:56:59 2007
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sun, 2 Dec 2007 04:56:59 +0200
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <20071202025044.GB11735@mithrandi.za.net>
References: <005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com> <47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com> <47514B7D.20203@libero.it>
	<01d001c8345e$aefaeeb0$0cf0cc10$@com>
	<b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
	<20071202025044.GB11735@mithrandi.za.net>
Message-ID: <20071202025659.GC11735@mithrandi.za.net>

* Tristan Seligmann <mithrandi at mithrandi.za.net> [2007-12-02 04:50:44 +0200]:

> * Atilla <theatilla at gmail.com> [2007-12-02 00:37:47 +0100]:
> 
> > When it comes to deferToThread - is that actually going to be of any
> > use? Do I get an advantage of running the "send" loop in a seperate
> > thread? What if, say, I never had to send more than 10-50 messages, so
> 
> You cannot call any Twisted functions from a thread, with the exception
                                        ^^^^^^^^^^^^^
Er, I guess I should have worded this more carefully. What I meant is: you cannot call
any Twisted functions from a different thread to the one the reactor is
running in, which includes any thread created with deferToThread.

> of callFromThread; so this would probably be pretty pointless.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20071202/56808b93/attachment.pgp 

From matusis at yahoo.com  Sat Dec  1 22:40:28 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 1 Dec 2007 19:40:28 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <20071202025659.GC11735@mithrandi.za.net>
References: <005401c83222$96a87b40$c3f971c0$@com>
	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>	<072b01c833aa$b4d05c30$1e711490$@com>
	<47513207.7070709@libero.it>	<006f01c83407$fe819620$fb84c260$@com>
	<47514B7D.20203@libero.it>	<01d001c8345e$aefaeeb0$0cf0cc10$@com>	<b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>	<20071202025044.GB11735@mithrandi.za.net>
	<20071202025659.GC11735@mithrandi.za.net>
Message-ID: <027d01c83495$15149120$3f3db360$@com>

> > You cannot call any Twisted functions from a thread, with the
> > exception
>                                         ^^^^^^^^^^^^^ Er, I guess I
> should have worded this more carefully. What I meant is: you cannot
> call any Twisted functions from a different thread to the one the
> reactor is running in, which includes any thread created with
> deferToThread.
> 
> > of callFromThread; so this would probably be pretty pointless.


I am not sure I understood this: suppose my message sending loop simply 
loops over client protocol instances and calls 
transport.write(some_message)  

Why cannot I call this loop in a thread from the main reactor loop 
to have it non-blocking in case this sending loop is giant (over 1000s of clients)?
I do not care when this sending loop is finished, I just do not want this to slow down 
the main reactor loop.

With 50 clients this is obviously unnecessary.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Tristan Seligmann
> Sent: Saturday, December 01, 2007 6:57 PM
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] Advise for heavy concurrency
> 
> * Tristan Seligmann <mithrandi at mithrandi.za.net> [2007-12-02 04:50:44
> +0200]:
> 
> > * Atilla <theatilla at gmail.com> [2007-12-02 00:37:47 +0100]:
> >
> > > When it comes to deferToThread - is that actually going to be of
> any
> > > use? Do I get an advantage of running the "send" loop in a seperate
> > > thread? What if, say, I never had to send more than 10-50 messages,
> > > so
> >
> > You cannot call any Twisted functions from a thread, with the
> > exception
>                                         ^^^^^^^^^^^^^ Er, I guess I
> should have worded this more carefully. What I meant is: you cannot
> call any Twisted functions from a different thread to the one the
> reactor is running in, which includes any thread created with
> deferToThread.
> 
> > of callFromThread; so this would probably be pretty pointless.
> --
> mithrandi, i Ainil en-Balandor, a faer Ambar




From exarkun at twistedmatrix.com  Sun Dec  2 00:05:06 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 02 Dec 2007 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1196571906.35.78782516@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071202/8393bc57/attachment.htm 

From exarkun at divmod.com  Sun Dec  2 01:25:08 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 2 Dec 2007 01:25:08 -0500
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <027d01c83495$15149120$3f3db360$@com>
Message-ID: <20071202062508.8162.621491139.divmod.quotient.42175@ohm>

On Sat, 1 Dec 2007 19:40:28 -0800, Alec Matusis <matusis at yahoo.com> wrote:
>> > You cannot call any Twisted functions from a thread, with the
>> > exception
>>                                         ^^^^^^^^^^^^^ Er, I guess I
>> should have worded this more carefully. What I meant is: you cannot
>> call any Twisted functions from a different thread to the one the
>> reactor is running in, which includes any thread created with
>> deferToThread.
>>
>> > of callFromThread; so this would probably be pretty pointless.
>
>
>I am not sure I understood this: suppose my message sending loop simply
>loops over client protocol instances and calls
>transport.write(some_message)
>
>Why cannot I call this loop in a thread from the main reactor loop
>to have it non-blocking in case this sending loop is giant (over 1000s of clients)?

Because it is not a supported use of the API.  Twisted APIs, unless other-
wise documented, are not thread safe and can only be called from the thread
in which the reactor is running.

Jean-Paul



From matusis at yahoo.com  Sun Dec  2 02:26:38 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 1 Dec 2007 23:26:38 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <20071202062508.8162.621491139.divmod.quotient.42175@ohm>
References: <027d01c83495$15149120$3f3db360$@com>
	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>
Message-ID: <02cf01c834b4$ad950000$08bf0000$@com>

> Because it is not a supported use of the API.  Twisted APIs, unless
> other-
> wise documented, are not thread safe and can only be called from the
> thread
> in which the reactor is running.

Then I do not understand when it is safe to use 

t.i.threads.deferToThread(f, clients) ?

I was thinking of calling this from the main reactor thread, where f is

def f(clients):
    for client in clients:
        client.protocol.transport.write('hello')


This function would not even have a deferred attached to it. 
Is the point that it's not thread-safe to have Twisted API calls
inside the function f?

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
> Sent: Saturday, December 01, 2007 10:25 PM
> To: Twisted general discussion
> Subject: RE: [Twisted-Python] Advise for heavy concurrency
> 
> On Sat, 1 Dec 2007 19:40:28 -0800, Alec Matusis <matusis at yahoo.com>
> wrote:
> >> > You cannot call any Twisted functions from a thread, with the
> >> > exception
> >>                                         ^^^^^^^^^^^^^ Er, I guess I
> >> should have worded this more carefully. What I meant is: you cannot
> >> call any Twisted functions from a different thread to the one the
> >> reactor is running in, which includes any thread created with
> >> deferToThread.
> >>
> >> > of callFromThread; so this would probably be pretty pointless.
> >
> >
> >I am not sure I understood this: suppose my message sending loop
> simply
> >loops over client protocol instances and calls
> >transport.write(some_message)
> >
> >Why cannot I call this loop in a thread from the main reactor loop
> >to have it non-blocking in case this sending loop is giant (over 1000s
> of clients)?
> 
> Because it is not a supported use of the API.  Twisted APIs, unless
> other-
> wise documented, are not thread safe and can only be called from the
> thread
> in which the reactor is running.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From matusis at yahoo.com  Sun Dec  2 02:39:30 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 1 Dec 2007 23:39:30 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <02cf01c834b4$ad950000$08bf0000$@com>
References: <027d01c83495$15149120$3f3db360$@com>	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>
	<02cf01c834b4$ad950000$08bf0000$@com>
Message-ID: <02d301c834b6$79ceb020$6d6c1060$@com>

PS. Sorry I forgot: 

> t.i.threads.deferToThread(f, clients) ?

I suppose my question also applies to 

twisted.internet.reactor.callInThread(f, clients)


> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Alec Matusis
> Sent: Saturday, December 01, 2007 11:27 PM
> To: 'Twisted general discussion'
> Subject: RE: [Twisted-Python] Advise for heavy concurrency
> 
> > Because it is not a supported use of the API.  Twisted APIs, unless
> > other-
> > wise documented, are not thread safe and can only be called from the
> > thread
> > in which the reactor is running.
> 
> Then I do not understand when it is safe to use
> 
> t.i.threads.deferToThread(f, clients) ?
> 
> I was thinking of calling this from the main reactor thread, where f is
> 
> def f(clients):
>     for client in clients:
>         client.protocol.transport.write('hello')
> 
> 
> This function would not even have a deferred attached to it.
> Is the point that it's not thread-safe to have Twisted API calls
> inside the function f?
> 
> > -----Original Message-----
> > From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-
> python-
> > bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
> > Sent: Saturday, December 01, 2007 10:25 PM
> > To: Twisted general discussion
> > Subject: RE: [Twisted-Python] Advise for heavy concurrency
> >
> > On Sat, 1 Dec 2007 19:40:28 -0800, Alec Matusis <matusis at yahoo.com>
> > wrote:
> > >> > You cannot call any Twisted functions from a thread, with the
> > >> > exception
> > >>                                         ^^^^^^^^^^^^^ Er, I guess
> I
> > >> should have worded this more carefully. What I meant is: you
> cannot
> > >> call any Twisted functions from a different thread to the one the
> > >> reactor is running in, which includes any thread created with
> > >> deferToThread.
> > >>
> > >> > of callFromThread; so this would probably be pretty pointless.
> > >
> > >
> > >I am not sure I understood this: suppose my message sending loop
> > simply
> > >loops over client protocol instances and calls
> > >transport.write(some_message)
> > >
> > >Why cannot I call this loop in a thread from the main reactor loop
> > >to have it non-blocking in case this sending loop is giant (over
> 1000s
> > of clients)?
> >
> > Because it is not a supported use of the API.  Twisted APIs, unless
> > other-
> > wise documented, are not thread safe and can only be called from the
> > thread
> > in which the reactor is running.
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nico at teknico.net  Sun Dec  2 04:54:13 2007
From: nico at teknico.net (Nicola Larosa)
Date: Sun, 02 Dec 2007 10:54:13 +0100
Subject: [Twisted-Python] Re: Advise for heavy concurrency
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com> <47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com> <47514B7D.20203@libero.it>
	<01d001c8345e$aefaeeb0$0cf0cc10$@com>
	<b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
Message-ID: <20071202095416.06B391240B3@slice.teknico.net>

Atilla wrote:
> When it comes to deferToThread - is that actually going to be of any
> use? Do I get an advantage of running the "send" loop in a seperate
> thread? What if, say, I never had to send more than 10-50 messages, so
> the loop is relatively small - then I'd have to keep spawning threads
> for no reason.

Exactly, no reason. Don't spawn threads, unless you have no other way.


> But - when it comes to large send queues, how can that be chopped in
> an efficient manner? Chop it into equal pieces and schedule them with
> small delay, one after the other?

Yes, and the delay can be very small. Send 50-100 messages at a time, then
run the next batch with a reactor.callLater(0.00000001, ...). That way the
reactor will be able to handle network events with low latency.

Or just use coiterate, as Manlio said:

http://twistedmatrix.com/documents/current/api/twisted.internet.task.html

It works in 10ms batches: that's your latency. It also uses a 10us delay on
the callLater.


> Defer them to another thread?

Don't. Only use threads in Twisted if you have to call external, synchronous
libraries, like database clients.


-- 
Nicola Larosa - http://www.tekNico.net/

Restricting yourself to the intersection of the two versions [Python 2.6
and 3.0] is very painful and limited. We're not introducing backwards
compatibility syntax in 3.0, because that would defeat the purpose
(we've had backwards compatibility forever in 2.x, and the whole point
of 3.0 is to clean up the mess). -- Guido van Rossum, July 2007





From mithrandi at mithrandi.za.net  Sun Dec  2 07:21:25 2007
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sun, 2 Dec 2007 14:21:25 +0200
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <02cf01c834b4$ad950000$08bf0000$@com>
References: <027d01c83495$15149120$3f3db360$@com>
	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>
	<02cf01c834b4$ad950000$08bf0000$@com>
Message-ID: <20071202122125.GD11735@mithrandi.za.net>

* Alec Matusis <matusis at yahoo.com> [2007-12-01 23:26:38 -0800]:

> > Because it is not a supported use of the API.  Twisted APIs, unless
> > other-
> > wise documented, are not thread safe and can only be called from the
> > thread
> > in which the reactor is running.
> 
> Then I do not understand when it is safe to use 
> 
> t.i.threads.deferToThread(f, clients) ?

The code in f, or in functions called from f, must not invoke any
functions in the Twisted API other than reactor.callFromThread. The same
goes for a thread created any other way (eg. with callInThread).

> I was thinking of calling this from the main reactor thread, where f is
> 
> def f(clients):
>     for client in clients:
>         client.protocol.transport.write('hello')
> 
> 
> This function would not even have a deferred attached to it. 
> Is the point that it's not thread-safe to have Twisted API calls
> inside the function f?

Yes, that is basically the point; the only API that is thread-safe is
callFromThread; any other Twisted function must be invoked from the
reactor thread.

If this loop is really blocking for too long, you could use something
like the following, which cooperatively distributes the work over
several timeslices; you'll need to check that the default scheduler
performs the work fast enough for your purposes, though.

from twisted.internet.task import coiterate

def f(clients):
    for client in clients:
        client.protocol.transport.write('hello')
        yield None

coiterate(f)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20071202/8efaa016/attachment.pgp 

From theatilla at gmail.com  Sun Dec  2 08:21:13 2007
From: theatilla at gmail.com (Atilla)
Date: Sun, 2 Dec 2007 14:21:13 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <20071202122125.GD11735@mithrandi.za.net>
References: <027d01c83495$15149120$3f3db360$@com>
	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>
	<02cf01c834b4$ad950000$08bf0000$@com>
	<20071202122125.GD11735@mithrandi.za.net>
Message-ID: <b53c932d0712020521mbcde3cfsecccd742223b1b42@mail.gmail.com>

Thanks a lot for the feedback, it really cleared some things up. I'll
experiment a little with the coiterate and I'll see how it works out
for me. My send queues are not going to be large, but they could
theoretically grow to large numbers and under heavy load it'll start
to matter.



From manlio_perillo at libero.it  Sun Dec  2 15:12:17 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 02 Dec 2007 21:12:17 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0712020521mbcde3cfsecccd742223b1b42@mail.gmail.com>
References: <027d01c83495$15149120$3f3db360$@com>	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>	<02cf01c834b4$ad950000$08bf0000$@com>	<20071202122125.GD11735@mithrandi.za.net>
	<b53c932d0712020521mbcde3cfsecccd742223b1b42@mail.gmail.com>
Message-ID: <475311A1.4000602@libero.it>

Atilla ha scritto:
> Thanks a lot for the feedback, it really cleared some things up. I'll
> experiment a little with the coiterate and I'll see how it works out
> for me. My send queues are not going to be large, but they could
> theoretically grow to large numbers and under heavy load it'll start
> to matter.
> 

Have you tried to use Python 2.5?



Manlio Perillo



From glyph at divmod.com  Sun Dec  2 15:28:10 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 02 Dec 2007 20:28:10 -0000
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com> <47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com> <47514B7D.20203@libero.it>
	<01d001c8345e$aefaeeb0$0cf0cc10$@com>
	<b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
Message-ID: <20071202202810.21558.293322773.divmod.xquotient.2263@joule.divmod.com>

On 1 Dec, 11:37 pm, theatilla at gmail.com wrote:
>But - when it comes to large send queues, how can that be chopped in
>an efficient manner? Chop it into equal pieces and schedule them with
>small delay, one after the other? Defer them to another thread? Is
>there any other solution, a way to chain them into a log callback
>squence maybe?

You probably want to use the producer/consumer API.  self.transport will 
provide this interface:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IConsumer.html

which will all you to create and send the data only as needed, rather 
than on a timer.  If your concern is the loop over all of your clients, 
then coiterate might be a better bet, but IConsumer will help you spend 
that CPU only when you actually need to.



From Marcin.Kasperski at softax.com.pl  Mon Dec  3 05:03:33 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Mon, 03 Dec 2007 11:03:33 +0100
Subject: [Twisted-Python] Re: StdioOnnaStick instance has no attribute
	'isatty'
References: <87prygtti8.fsf@platon.mekk.waw.pl>
	<87y7cg69gw.fsf@platon.mekk.waw.pl>
	<1196391455.1197.33.camel@localhost.localdomain>
Message-ID: <873aukdrii.fsf@cauchy.softax.local>

>> > I just tried to run some trial tests on ubuntu gutsy (twisted 2.5.0),
>> > just to get the error as in the title (full traceback below).
>> > Does anybody know what is wrong here?
>> >
>> > (...)
>> >
>> > AttributeError: StdioOnnaStick instance has no attribute 'isatty'
>
> Could you file a bug about this? I suspect someone someday may have same
> issue, so we should fix underlying problem.

Bah, I do not understand what is wrong here and where is the bug...

-- 
----------------------------------------------------------------------
| Marcin Kasperski   |  For waterfall, milestones are commitments.
| http://mekk.waw.pl | For iterative development, they are decision
|                    |               points. (Martin)
----------------------------------------------------------------------




From theatilla at gmail.com  Mon Dec  3 07:40:16 2007
From: theatilla at gmail.com (Atilla)
Date: Mon, 3 Dec 2007 13:40:16 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <475311A1.4000602@libero.it>
References: <027d01c83495$15149120$3f3db360$@com>
	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>
	<02cf01c834b4$ad950000$08bf0000$@com>
	<20071202122125.GD11735@mithrandi.za.net>
	<b53c932d0712020521mbcde3cfsecccd742223b1b42@mail.gmail.com>
	<475311A1.4000602@libero.it>
Message-ID: <b53c932d0712030440m647e4f4dl77a30060f6273736@mail.gmail.com>

On 02/12/2007, Manlio Perillo <manlio_perillo at libero.it> wrote:
> Atilla ha scritto:
> Have you tried to use Python 2.5?

I Am using the lastest Python and Twisted, but why are you asking?



From michele.petrazzo at unipex.it  Mon Dec  3 08:33:44 2007
From: michele.petrazzo at unipex.it (Michele Petrazzo - Unipex srl)
Date: Mon, 03 Dec 2007 14:33:44 +0100
Subject: [Twisted-Python] wx and twisted
Message-ID: <475405B8.7040604@unipex.it>

Hi all,
just installed the last wx and twisted and tring my already working app and:

Traceback (most recent call last):
   File "threading.py", line 442, in __bootstrap
     self.run()
   File "threading.py", line 422, in run
     self.__target(*self.__args, **self.__kwargs)
   File 
"/usr/lib/python2.4/site-packages/twisted/internet/_threadedselect.py", 
line 149, in _workerInThread
     fn(*args)
--- <exception caught here> ---
   File 
"/usr/lib/python2.4/site-packages/twisted/internet/_threadedselect.py", 
line 169, in _doSelectInThread
     [], timeout)
exceptions.ValueError: file descriptor cannot be a negative integer (-1)

and on shutdown:

Traceback (most recent call last):
   File 
"/usr/lib/python2.4/site-packages/wx-2.8-gtk2-unicode/wx/_core.py", line 
14364, in <lambda>
     lambda event: event.callable(*event.args, **event.kw) )
   File 
"/usr/lib/python2.4/site-packages/twisted/internet/_threadedselect.py", 
line 243, in _interleave
     msg, args = self.toMainThread.get_nowait()
   File "/usr/lib/python2.4/Queue.py", line 141, in get_nowait
     return self.get(False)
   File "/usr/lib/python2.4/Queue.py", line 116, in get
     raise Empty
Queue.Empty


How debug it?

Debian etch, python 2.4.4, wx 2.8.7.1, twisted 2.5.0

Thanks,
Michele



From exarkun at divmod.com  Mon Dec  3 08:47:55 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 3 Dec 2007 08:47:55 -0500
Subject: [Twisted-Python] wx and twisted
In-Reply-To: <475405B8.7040604@unipex.it>
Message-ID: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>

On Mon, 03 Dec 2007 14:33:44 +0100, Michele Petrazzo - Unipex srl <michele.petrazzo at unipex.it> wrote:
>Hi all,
>just installed the last wx and twisted and tring my already working app and:
>
>Traceback (most recent call last):
>   File "threading.py", line 442, in __bootstrap
>     self.run()
>   File "threading.py", line 422, in run
>     self.__target(*self.__args, **self.__kwargs)
>   File "/usr/lib/python2.4/site- 
>packages/twisted/internet/_threadedselect.py", line 149, in _workerInThread
>     fn(*args)
>--- <exception caught here> ---
>   File "/usr/lib/python2.4/site- 
>packages/twisted/internet/_threadedselect.py", line 169, in 
>_doSelectInThread
>     [], timeout)
>exceptions.ValueError: file descriptor cannot be a negative integer (-1)
>
>and on shutdown:
>
>Traceback (most recent call last):
>   File "/usr/lib/python2.4/site-packages/wx-2.8-gtk2-unicode/wx/_core.py", 
>line 14364, in <lambda>
>     lambda event: event.callable(*event.args, **event.kw) )
>   File "/usr/lib/python2.4/site- 
>packages/twisted/internet/_threadedselect.py", line 243, in _interleave
>     msg, args = self.toMainThread.get_nowait()
>   File "/usr/lib/python2.4/Queue.py", line 141, in get_nowait
>     return self.get(False)
>   File "/usr/lib/python2.4/Queue.py", line 116, in get
>     raise Empty
>Queue.Empty
>
>
>How debug it?

Start looking at what has changed in wx since the previous working version,
or start looking at which calls are resulting in invalid file descriptors.

Or you could try to get the Twisted unit tests to run with wxreactor, and
then work on making them pass.

Jean-Paul



From phil at bubblehouse.org  Mon Dec  3 11:41:33 2007
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 3 Dec 2007 11:41:33 -0500
Subject: [Twisted-Python] wx and twisted
In-Reply-To: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>
References: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>
Message-ID: <672BACC4-A1AF-4006-9067-34C30A581D75@bubblehouse.org>


On Dec 3, 2007, at 8:47 AM, Jean-Paul Calderone wrote:

> On Mon, 03 Dec 2007 14:33:44 +0100, Michele Petrazzo - Unipex srl <michele.petrazzo at unipex.it 
> > wrote:
>>
[snip traceback]
>> exceptions.ValueError: file descriptor cannot be a negative integer  
>> (-1)
>>
>> and on shutdown:
>>
[snip traceback]
>
>>
>> How debug it?
>
> Start looking at what has changed in wx since the previous working  
> version,
> or start looking at which calls are resulting in invalid file  
> descriptors.
>
> Or you could try to get the Twisted unit tests to run with  
> wxreactor, and
> then work on making them pass.

I'm pretty sure that this is truly impossible with the current  
wxreactor, and possibly any reactor that is based on TSR. I found this  
out while trying to implement a corefoundation reactor using wxreactor  
as a reference.

My actual experience with wxWidgets is limited, but as far as I can  
tell, the same issue exists. Tests won't run because wxreactor.stop()  
will never stop the toolkit's main loop by itself, and anything that  
makes the loop end will also terminate the process.


I posted some comments on:
	http://twistedmatrix.com/trac/ticket/1833

"there are architectural choices in TSR that prevent most of its use- 
cases from being fully tested. The biggest problem is that TSR allows  
the native toolkit's event loop to dictate when the reactor will stop.
This has the most obvious implications when dealing with Trial. Trial  
assumes that reactor.run() will return after another thread calls  
reactor.crash(). This can't be done in Cocoa (so far as I can tell),  
because anything I've found that will make  
PyObjCTools.AppHelper.runEventLoop() stop will terminate the entire  
process.

This seems to also be the issue for t.i.wxreactor."



-phil





From exarkun at divmod.com  Mon Dec  3 11:47:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 3 Dec 2007 11:47:22 -0500
Subject: [Twisted-Python] wx and twisted
In-Reply-To: <672BACC4-A1AF-4006-9067-34C30A581D75@bubblehouse.org>
Message-ID: <20071203164722.8162.598357997.divmod.quotient.42623@ohm>

On Mon, 3 Dec 2007 11:41:33 -0500, Phil Christensen <phil at bubblehouse.org> wrote:
>
>On Dec 3, 2007, at 8:47 AM, Jean-Paul Calderone wrote:
>>On Mon, 03 Dec 2007 14:33:44 +0100, Michele Petrazzo - Unipex srl 
>><michele.petrazzo at unipex.it > wrote:
>>>
>[snip traceback]
>>>exceptions.ValueError: file descriptor cannot be a negative integer  (-1)
>>>
>>>and on shutdown:
>[snip traceback]
>>
>>>
>>>How debug it?
>>
>>Start looking at what has changed in wx since the previous working 
>>version,
>>or start looking at which calls are resulting in invalid file  descriptors.
>>
>>Or you could try to get the Twisted unit tests to run with  wxreactor, and
>>then work on making them pass.
>
>I'm pretty sure that this is truly impossible with the current  wxreactor, 
>and possibly any reactor that is based on TSR. I found this  out while 
>trying to implement a corefoundation reactor using wxreactor  as a 
>reference.
>
> [snip]
>

I didn't say it would be easy.  Few things are impossible, though.

Jean-Paul



From manlio_perillo at libero.it  Mon Dec  3 11:00:54 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 03 Dec 2007 17:00:54 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0712030440m647e4f4dl77a30060f6273736@mail.gmail.com>
References: <027d01c83495$15149120$3f3db360$@com>	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>	<02cf01c834b4$ad950000$08bf0000$@com>	<20071202122125.GD11735@mithrandi.za.net>	<b53c932d0712020521mbcde3cfsecccd742223b1b42@mail.gmail.com>	<475311A1.4000602@libero.it>
	<b53c932d0712030440m647e4f4dl77a30060f6273736@mail.gmail.com>
Message-ID: <47542836.8020304@libero.it>

Atilla ha scritto:
> On 02/12/2007, Manlio Perillo <manlio_perillo at libero.it> wrote:
>> Atilla ha scritto:
>> Have you tried to use Python 2.5?
> 
> I Am using the lastest Python and Twisted, but why are you asking?
> 

Because Python 2.5 should free unused memory.


Manlio Perillo



From michele.petrazzo at unipex.it  Mon Dec  3 14:16:43 2007
From: michele.petrazzo at unipex.it (Michele Petrazzo - Unipex srl)
Date: Mon, 03 Dec 2007 20:16:43 +0100
Subject: [Twisted-Python] wx and twisted
In-Reply-To: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>
References: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>
Message-ID: <4754561B.3030904@unipex.it>

Jean-Paul Calderone wrote:
> Start looking at what has changed in wx since the previous working
> version,

on wxpython? It's very very hard because, like I can see, it can be also
a wxwidget problem... (since wx.App it's a C class)

> or start looking at which calls are resulting in invalid file
> descriptors.
> 

Simplest, I think. How do it? Where to start? Or in the worst case, can
I "skip" them? Because apart the shown errors, the application (an ftp
client) seem to work well!

P.s. From my tests, these errors appear only on my linux platform, not
on win! Surely because wx it's more "windows" like that "linux" like,
but however it's very strange!

> Or you could try to get the Twisted unit tests to run with wxreactor,
> and then work on making them pass.
> 

Sorry, but I think that I'm not so able to do it...

Thanks,
Michele



From arkanes at gmail.com  Mon Dec  3 14:55:50 2007
From: arkanes at gmail.com (Chris Mellon)
Date: Mon, 3 Dec 2007 13:55:50 -0600
Subject: [Twisted-Python] wx and twisted
In-Reply-To: <672BACC4-A1AF-4006-9067-34C30A581D75@bubblehouse.org>
References: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>
	<672BACC4-A1AF-4006-9067-34C30A581D75@bubblehouse.org>
Message-ID: <4866bea60712031155o53a1591bs91e4173bea24dac@mail.gmail.com>

On Dec 3, 2007 10:41 AM, Phil Christensen <phil at bubblehouse.org> wrote:
>
> On Dec 3, 2007, at 8:47 AM, Jean-Paul Calderone wrote:
>
> > On Mon, 03 Dec 2007 14:33:44 +0100, Michele Petrazzo - Unipex srl <michele.petrazzo at unipex.it
> > > wrote:
> >>
> [snip traceback]
> >> exceptions.ValueError: file descriptor cannot be a negative integer
> >> (-1)
> >>
> >> and on shutdown:
> >>
> [snip traceback]
> >
> >>
> >> How debug it?
> >
> > Start looking at what has changed in wx since the previous working
> > version,
> > or start looking at which calls are resulting in invalid file
> > descriptors.
> >
> > Or you could try to get the Twisted unit tests to run with
> > wxreactor, and
> > then work on making them pass.
>
> I'm pretty sure that this is truly impossible with the current
> wxreactor, and possibly any reactor that is based on TSR. I found this
> out while trying to implement a corefoundation reactor using wxreactor
> as a reference.
>
> My actual experience with wxWidgets is limited, but as far as I can
> tell, the same issue exists. Tests won't run because wxreactor.stop()
> will never stop the toolkit's main loop by itself, and anything that
> makes the loop end will also terminate the process.
>

This isn't accurate, with regards to wxreactor - wxreactor shuts down
the wx main loop using a system event, and the wx main loop is
restartable so there's no intrinsic problem with doing this. The way
wxreactor tries to interact with the wxApp is pretty kludgy and might
result in problems, though.

I'm not sure why trial has so many problems with wxreactor - stuff
which works fine outside of trials environment fails hard within it.
It seems to have something to do with TSR, though - its _interleave
loop is raising StopIteration.



From matthias at urlichs.de  Tue Dec  4 17:24:33 2007
From: matthias at urlichs.de (Matthias Urlichs)
Date: Tue, 4 Dec 2007 22:24:33 +0000 (UTC)
Subject: [Twisted-Python] @inlineCallbacks eat the traceback. Help?
Message-ID: <fj4k31$94a$1@ger.gmane.org>

It seems that @inlineCallbacks trashes the error traceback when you yield
a Deferred that emits an error. That's not very social behavior.

Any ideas how to get the traceback back?

This is Twisted 2.5.

Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line 37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.5/site-packages/twisted/internet/threads.py", line 25, in _putResultInDeferred
    result = f(*args, **kwargs)
  File "/usr/lib/python2.5/site-packages/twisted/internet/defer.py", line 813, in unwindGenerator
    return _inlineCallbacks(None, f(*args, **kwargs), Deferred())
  File "/usr/lib/python2.5/site-packages/twisted/internet/defer.py", line 724, in _inlineCallbacks
    result = g.throw(result.type, result.value, result.tb)
--- <exception caught here> ---
  File "/var/lib/python-support/python2.5/homevent/worker.py", line 153, in _process
    r = yield w.process(event=self.event, queue=self)
exceptions.TypeError: float() argument must be a string or a number

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
 - -
Know when to quit.




From exarkun at divmod.com  Tue Dec  4 19:13:40 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Dec 2007 19:13:40 -0500
Subject: [Twisted-Python] @inlineCallbacks eat the traceback. Help?
In-Reply-To: <fj4k31$94a$1@ger.gmane.org>
Message-ID: <20071205001340.8162.1518935329.divmod.quotient.43077@ohm>

On Tue, 4 Dec 2007 22:24:33 +0000 (UTC), Matthias Urlichs <matthias at urlichs.de> wrote:
>It seems that @inlineCallbacks trashes the error traceback when you yield
>a Deferred that emits an error. That's not very social behavior.
>
>Any ideas how to get the traceback back?

One possibility is to not use inlineCallbacks.

Another possibility is to wait for the next release of Twisted, which
will have some additional functionality in this area and may be able
to provide the correct traceback (but no promises).  This is implemented
already, so you could check out trunk and give it a try.

Jean-Paul



From lordvan at lordvan.com  Wed Dec  5 05:18:23 2007
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Wed, 5 Dec 2007 10:18:23 +0000
Subject: [Twisted-Python] TLS echo server and client examples
Message-ID: <25665cf5766d7c037d39424b9fb0b72c@secure.lordvan.com>


hi all.

With therves help I changed the ssl echoserv and echoclient examples to use
tls today.
Thought I post this to the list for (possible) inclusion in the examples
directory, as it might be useful for other ppl too.

Regards

--
Thomas Raschbacher
http://www.lordvan.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071205/f7c2ed51/attachment.htm 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: echoserv_tls.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071205/f7c2ed51/attachment.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: echoclient_tls.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071205/f7c2ed51/attachment-0001.txt 

From andrewfr_ice at yahoo.com  Wed Dec  5 16:18:42 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 5 Dec 2007 13:18:42 -0800 (PST)
Subject: [Twisted-Python] Altering Distutils to get PyOpenSSL to Work ? Re:
	Twisted-Python Digest, Vol 44, Issue 32
In-Reply-To: <E1Iy9Df-0005sA-9S@cube.twistedmatrix.com>
Message-ID: <894921.35909.qm@web34201.mail.mud.yahoo.com>

Hello Zooko:

> The error message is in error.  Here is the Python
> issue ticket in   which the message was changed from
>stating that you have to use the  
> same compiler that was used to build Python, to
> instead stating that  you have to use a compiler
that >is compatible with the one that was  used to
build >Python:
> 

> In my experience, simply setting "compiler=mingw32"
> in your distutils config file works for all
extension >modules that I have tried  *except* for
pyOpenSSL.  

Thanks for the information...

I have followed pyOpenSSL's Windows instructions. I
downloaded the Microsoft Visual C++ Express kit (what
a monster). I still get the same message.

I read somewhere that distutils looks at the registry
to look for the Microsoft C compiler. I know little
about distutils and I have not used Visual Studio in
ages. And I really need to get https stuff working
soon.

If this is the case, what exactly would I have to
change and what value do I use?

Thanks in advance,
Andrew


      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From sakalsiz at gmail.com  Sat Dec  8 04:52:00 2007
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Sat, 8 Dec 2007 11:52:00 +0200
Subject: [Twisted-Python] Timeout for Deferred objects
Message-ID: <767e5e0d0712080152p6967f8bbwb7bd1e267cfd712d@mail.gmail.com>

Hi,

I want set a timeout for Deferred objects. There is a method in
Deferred class, setTimeout. It works well for me, but it gives a
deprecation warning. If setTimeout is deprecated, what else I should
use for timeouts.

Thanks

Saki



From exarkun at divmod.com  Sat Dec  8 11:25:40 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 8 Dec 2007 11:25:40 -0500
Subject: [Twisted-Python] Timeout for Deferred objects
In-Reply-To: <767e5e0d0712080152p6967f8bbwb7bd1e267cfd712d@mail.gmail.com>
Message-ID: <20071208162540.8162.861808109.divmod.quotient.43813@ohm>

On Sat, 8 Dec 2007 11:52:00 +0200, Mustafa Sakalsiz <sakalsiz at gmail.com> wrote:
>Hi,
>
>I want set a timeout for Deferred objects. There is a method in
>Deferred class, setTimeout. It works well for me, but it gives a
>deprecation warning. If setTimeout is deprecated, what else I should
>use for timeouts.

It's deprecated because having a timeout for a Deferred doesn't make sense.
A Deferred is just a convenient API for associating a result with the code
which is interested in the result.  It doesn't ever produce the result itself,
so it isn't the right object to give a timeout to.

Instead, the code which is responsible for calling back the Deferred is the
code which needs to be given a timeout.  There's no general way to do this,
since the code for calling back Deferreds is different for each Deferred.
Some APIs support timeouts already - for example, reactor.resolve - but
not all of them do.

You can add a timeout to an API which doesn't support timeouts in one of
two ways:

  - Add it and implement whatever changes are necessary so that after the
    timeout the underlying operation is cancelled.  You may want to submit
    patches. :)

  - Wrap the original API with one which supports a timeout.  This will
    return a Deferred it creates and call it back when the underlying
    Deferred is called back - unless the timeout has expired, then it will
    just drop the result.

In either case, you'll probably use reactor.callLater to implement the
timeout.

Jean-Paul



From donwsmith at gmail.com  Sat Dec  8 11:52:36 2007
From: donwsmith at gmail.com (Don Smith)
Date: Sat, 8 Dec 2007 08:52:36 -0800
Subject: [Twisted-Python] stopping MultiService child services
Message-ID: <24f63c200712080852m4bf9708fmf38bdb23b13d07cb@mail.gmail.com>

Hi all,

I'm still a bit of a novice but I'm trying to implement MultiService. The
trick is that I want my program to be able to change it's config while it is
running. Once the app realizes it has a new configuration it needs to stop
all services, load the new config and start services accordingly. However,
I'm stuck right now with how to stop all services. I'm thinking I need to
loop over the children of MultiService and call stopService on them, but I'm
not sure how to do that. Or should I just call stopServivce on the
MultiService object?

Thanks,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071208/96aee30e/attachment.htm 

From exarkun at divmod.com  Sat Dec  8 12:09:23 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 8 Dec 2007 12:09:23 -0500
Subject: [Twisted-Python] stopping MultiService child services
In-Reply-To: <24f63c200712080852m4bf9708fmf38bdb23b13d07cb@mail.gmail.com>
Message-ID: <20071208170923.8162.921056293.divmod.quotient.43829@ohm>

On Sat, 8 Dec 2007 08:52:36 -0800, Don Smith <donwsmith at gmail.com> wrote:
>Hi all,
>
>I'm still a bit of a novice but I'm trying to implement MultiService. The
>trick is that I want my program to be able to change it's config while it is
>running. Once the app realizes it has a new configuration it needs to stop
>all services, load the new config and start services accordingly. However,
>I'm stuck right now with how to stop all services. I'm thinking I need to
>loop over the children of MultiService and call stopService on them, but I'm
>not sure how to do that. Or should I just call stopServivce on the
>MultiService object?

MultiService.stopService will call stopService on all of its child services,
so if the goal is to do that, then a for loop is more work for the same
result.

When you call stopService, keep in mind that it can return a Deferred which
you'll probably want to wait for before trying to start anything again.

Likewise for startup, you can just call MultiService.startService to start
all of its children.

It might also be useful to know that removing a service from a running
MultiService will stop the service and adding a service to a running
MultiService will start it.

Jean-Paul



From chronoss at gmx.de  Sat Dec  8 19:21:27 2007
From: chronoss at gmx.de (Bjoern Schliessmann)
Date: Sun, 09 Dec 2007 01:21:27 +0100
Subject: [Twisted-Python] Conch/insults -- using HistoricRecvLine
Message-ID: <fjfce8$amb$2@ger.gmane.org>

Hello,

I'm using a "standard" Twisted setup here: a ServerFactory which has
basic.LineReceiver subclass as protocol for handling connections;
I'm using methods like connectionMade and lineReceived.

Now I tried the example on HistoricRecvLine from Twisted Conch and I
like it. I tried my protocol to subclass HistoricRecvLine directly
instead of basic.LineReceiver, but the server won't work anymore
(it complains about not finding certain methods as soon as a
connection comes in). So HistoricRecvLine doesn't seem to be
compatible to standard Core protocols.

I had a closer look at the demo_recvline.py example and, besides
under ten lines of real code defining functional stuff, I saw a
real mess of wrapper code. Several different classes are used to
hook up the DemoRecvLine class into the ServerFactory. (This simple
example is, IMHO, a huge difference to the elegance of simple
Twisted Core examples.)

Those wrapper classes are documented in a way that you don't
understand what one class does unless you understand what some few
other classes and interfaces do. Those others are documented in a
similar way ;) There is one tutorial for conch which is in my view
completely unrelated.

No matter what, I tried to adapt and/or wrap my
ex-basic.LineReceiver-and-now-HistoricRecvLine subclass in a way
that I can hook it up to my ServerFactory class, but to no avail
for hours. That's why I'm asking here. Could you please tell me
what exactly I need to do to "convert" my new HistoricRecvLine
subclass in a way that ServerFactory will accept it? Or is there
even a simpler way to get basic readline-like functionality in
Twisted? Because that's what I'm aiming at.

Regards,


Bj?rn

-- 
BOFH excuse #403:

Sysadmin didn't hear pager go off due to loud music from bar-room
speakers.





From sajitrao at gmail.com  Sat Dec  8 20:10:25 2007
From: sajitrao at gmail.com (Sajit Rao)
Date: Sat, 8 Dec 2007 20:10:25 -0500
Subject: [Twisted-Python] Please help: having problems with the simplest
	Twisted Server/Client Demo Example from the Tutorial
Message-ID: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>

Hello all,

I've been trying the most basic (only a few lines) server/client code
example in the Twisted docs and can't get even that to work (code included
below). It's very frustrating, because I did get a simple server/client
example working without using Twisted. Any help will be greatly appreciated.


The problem is that the client never connects with the server. it prints
"Started to Connect" and hangs, then times out with an error. I'm trying
this on my laptop running WinXP - I first start the server program (from the
command line python prompt) and then the client program in another window on
the same machine. Please let me know what I'm doing wrong.

Server Code:

from twisted.internet.protocol import Factory, Protocol
from twisted.internet import reactor

class QOTD(Protocol):
         def connectionMade(self):
              self.transport.write("An apple a day keeps the doctor
away\r\n")
              self.transport.loseConnection()

factory = Factory()
factory.protocol = QOTD

reactor.listenTCP(8007, factory)
reactor.run()

Client Code:

from twisted.internet.protocol import Protocol, ClientFactory
from sys import stdout

class Echo(Protocol):
         def dataReceived(self, data):
              stdout.write(data)

class EchoClientFactory(ClientFactory):
         def startedConnecting(self, connector):
               print 'Started to connect.'

         def buildProtocol(self, addr):
              print 'Connected.'
              return Echo()

         def clientConnectionLost(self, connector, reason):
              print 'Lost connection. Reason:', reason

         def clientConnectionFailed(self, connector, reason):
              print 'Connection failed. Reason:', reason

from twisted.internet import reactor
reactor.connectTCP('localhost', 8007, EchoClientFactory())
reactor.run()


Result

Python 2.5.1 (r251:54863, Apr 18 2007, 08:51:08) [MSC v.1310 32 bit (Intel)]
on
win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import QOTDServer

..then I start the client in a separate window...

Python 2.5.1 (r251:54863, Apr 18 2007, 08:51:08) [MSC v.1310 32 bit (Intel)]
on
win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import EchoClient
Started to connect.
Connection failed. Reason: [Failure instance: Traceback (failure with no
frames)
: <class 'twisted.internet.error.TimeoutError'>: User timeout caused
connection
failure.
][/b]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071208/64a0ca7b/attachment.htm 

From itamar at itamarst.org  Sat Dec  8 20:27:18 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 08 Dec 2007 20:27:18 -0500
Subject: [Twisted-Python] Please help: having problems with the
	simplest Twisted Server/Client Demo Example from the Tutorial
In-Reply-To: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>
References: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>
Message-ID: <1197163638.1197.67.camel@localhost.localdomain>

1. Certain Python prompts (e.g. idle) may not work well with Twisted.
Better to run the program directly:

python.exe myscript.py

2. Might want to start a log:

from twisted.python import log
log.startLogging(sys.stderr)

3. Might want to flush when writing to stdout().

At first glance, however, your code looks fine.




From exarkun at divmod.com  Sat Dec  8 22:12:09 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 8 Dec 2007 22:12:09 -0500
Subject: [Twisted-Python] Conch/insults -- using HistoricRecvLine
In-Reply-To: <fjfce8$amb$2@ger.gmane.org>
Message-ID: <20071209031209.8162.485080318.divmod.quotient.43920@ohm>

On Sun, 09 Dec 2007 01:21:27 +0100, Bjoern Schliessmann <chronoss at gmx.de> wrote:
>Hello,
>
>I'm using a "standard" Twisted setup here: a ServerFactory which has
>basic.LineReceiver subclass as protocol for handling connections;
>I'm using methods like connectionMade and lineReceived.
>
>Now I tried the example on HistoricRecvLine from Twisted Conch and I
>like it. I tried my protocol to subclass HistoricRecvLine directly
>instead of basic.LineReceiver, but the server won't work anymore
>(it complains about not finding certain methods as soon as a
>connection comes in). So HistoricRecvLine doesn't seem to be
>compatible to standard Core protocols.

Indeed, it is not compatible.  Despite being an apparently similar thing,
it is actually drastically different.  It may have been a mistake to give
it methods such as "lineReceived", mirroring LineReceiver.

LineReceiver takes a stream of bytes and splits them on a delimiter,
giving each element received to the "lineReceived" callback.  It also
has a convenience method, "sendLine", which writes the given bytes to
the transport and then writes the delimiter.

This is the full extent of its behavior with regard to the network.

HistoricRecvLine does a number of things.  Actually, as you pointed out,
HistoricRecvLine is just one of the objects which must be used in order
to achieve the readline-like behavior it offers.  For the purposes of this
explanation, I'm going to lump them all together and just talk about them
as HistoricRecvLine though.

First, it interprets telnet command sequences.  This means it can do
things like know how big the client's terminal is, negotiate about
linemode behavior, and so on.  This means bytes received over the network
won't always just be split into nicely delimited strings and delivered to
application code: some of them will be consumed internally.  Reversely,
it will write out bytes which are not lines being sent to the client, but
telnet command sequences indicating some requirement or response to the
telnet client.

Next, it interprets vt102 command codes.  This happens after the telnet
command sequences have been removed.  The telnet layer is a protocol, but
it acts as a transport for the vt102 layer.  This layer allows such things
as the cursor to be repositioned, the screen to be cleared, function keys
(such as control, arrows, home, F1, etc) to be interpreted and handled
separately from "normal" input.  Again, this all results in bytes being
sent and received over the socket which have nothing to do with the "lines"
which will eventually be delivered.

Finally, the readline-like behavior is implemented as yet another protocol
on top of the vt102 layer which is acting as yet another transport.  This
means you have readline stacked on top of vt102 stacked on top of telnet
stacked on top of TCP.  Finally, at this layer, eventually some of the bytes
received over the socket will be turned into a line of input which is
delivered via the "lineReceived" method.

In addition, the readline-like layer has to be very careful about what it
sends, since the prompt interface is only preserved by careful management
of the cursor position and other terminal state (ie, what is displaying on
it).  If code simply writes text data to the transport, it will end up in
the prompt somewhere, corrupting the readline interface.

>
>I had a closer look at the demo_recvline.py example and, besides
>under ten lines of real code defining functional stuff, I saw a
>real mess of wrapper code. Several different classes are used to
>hook up the DemoRecvLine class into the ServerFactory. (This simple
>example is, IMHO, a huge difference to the elegance of simple
>Twisted Core examples.)

Yes, it's quite a mess.

>
>Those wrapper classes are documented in a way that you don't
>understand what one class does unless you understand what some few
>other classes and interfaces do. Those others are documented in a
>similar way ;) There is one tutorial for conch which is in my view
>completely unrelated.

Indeed, the tutorial doesn't go into this area.  There is currently no
prose-style documentation for these APIs.

>
>No matter what, I tried to adapt and/or wrap my
>ex-basic.LineReceiver-and-now-HistoricRecvLine subclass in a way
>that I can hook it up to my ServerFactory class, but to no avail
>for hours. That's why I'm asking here. Could you please tell me
>what exactly I need to do to "convert" my new HistoricRecvLine
>subclass in a way that ServerFactory will accept it? Or is there
>even a simpler way to get basic readline-like functionality in
>Twisted? Because that's what I'm aiming at.

There may be other ways (for example, you could run a readline-using
process as a child and allow the network client to interact with it).
Whether any of them are simpler, I'm not sure.

I haven't had a chance to work with this part of Twisted much recently,
but after my most recent attempt, I think I decided that the approach
taken by HistoricRecvLine doesn't lead to easily extensible or reusable
code.  I had been investigating an API based on an explicit buffer object
which allowed different components to be isolated from each other.  You
can take a look at the incomplete results of this (again, no documentation,
sorry) here:

http://twistedmatrix.com/trac/browser/sandbox/exarkun/invective/trunk/invective/widgets.py

LineInputWidget serves roughly the same purpose as HistoricRecvLine.  It
takes a rather different approach, though.  I haven't followed this
investigation through to its conclusion, so I can't say if this approach
ultimately works any better or not.  I'm hopeful, at least. :)

If you want to stick with HistoricRecvLine, then the only suggestion that
comes to mind to make is for you to keep your original LineReceiver sub-
class separate from your HistoricRecvLine subclass.  Give a reference to
the former to the latter: have the HistoricvRecvLine subclass's lineReceived
method call lineReceived on the LineReceiver subclass (which may not need
to be a LineReceiver subclass anymore); give the LineReceiver subclass a
transport which knows how to interact with the terminal in a way which is
not disruptive to HistoricRecvLine's use of it.

If you have any other questions, feel free to ask, particularly if they're
more specific, as those will be much easier to answer. :)

Jean-Paul



From exarkun at twistedmatrix.com  Sun Dec  9 00:05:06 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 09 Dec 2007 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1197176706.71.1668787596@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071209/069e80e7/attachment.htm 

From glyph at divmod.com  Sun Dec  9 13:44:07 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 09 Dec 2007 18:44:07 -0000
Subject: [Twisted-Python] Please help: having problems with the simplest
	Twisted Server/Client Demo Example from the Tutorial
In-Reply-To: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>
References: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>
Message-ID: <20071209184407.21558.1177216814.divmod.xquotient.2544@joule.divmod.com>

On 01:10 am, sajitrao at gmail.com wrote:
>The problem is that the client never connects with the server. it 
>prints
>"Started to Connect" and hangs, then times out with an error. I'm 
>trying
>this on my laptop running WinXP - I first start the server program 
>(from the
>command line python prompt) and then the client program in another 
>window on
>the same machine. Please let me know what I'm doing wrong.

Your code, for what it's worth, looks correct.  Try running it on a 
different machine.  (A stock Ubuntu image in VMWare would be best.)

The most common cause of this problem is a software firewall popping up 
a dialog box underneath the window that you're looking at, or denying 
traffic to 'python.exe' altogether.

Another cause I've seen once or twice is the name "localhost" being 
misconfigured.  Try specifically connecting to "127.0.0.1" instead.



From sajitrao at gmail.com  Sun Dec  9 16:18:05 2007
From: sajitrao at gmail.com (Sajit Rao)
Date: Sun, 9 Dec 2007 16:18:05 -0500
Subject: [Twisted-Python] Please help: having problems with the simplest
	Twisted Server/Client Demo Example from the Tutorial
In-Reply-To: <1197163638.1197.67.camel@localhost.localdomain>
References: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>
	<1197163638.1197.67.camel@localhost.localdomain>
Message-ID: <e0d23f6a0712091318i22c3483cgc05fc22dff8053a2@mail.gmail.com>

Thanks Itamar, That was exactly the problem. The Twisted server/client
example runs fine when the program is run directly (> python.exe  mycode.py)
but not when imported at the python prompt.

Best,

Sajit


On Dec 8, 2007 8:27 PM, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:

> 1. Certain Python prompts (e.g. idle) may not work well with Twisted.
> Better to run the program directly:
>
> python.exe myscript.py
>
> 2. Might want to start a log:
>
> from twisted.python import log
> log.startLogging(sys.stderr)
>
> 3. Might want to flush when writing to stdout().
>
> At first glance, however, your code looks fine.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071209/b98ec608/attachment.htm 

From fbuchinger at gmail.com  Sun Dec  9 18:00:25 2007
From: fbuchinger at gmail.com (Franz Buchinger)
Date: Mon, 10 Dec 2007 00:00:25 +0100
Subject: [Twisted-Python] Emulating urllib.read()-behaviour with
	twisted.web.client
Message-ID: <a07b86220712091500o6cabe398l9efb134b9404113b@mail.gmail.com>

Hello,

I'm currently switching from the urllib library to twisted.web.client in my
HTTP Download Class. How can I emulate urllib.read(bytes=None) behaviour
with twisted.web.client? (only reading n bytes of the ressource, if the
bytes parameter is given).
The second difficulty (at least from my twisted newbie perspective) is to
return the downloaded data to the method caller outside the class. Any hints
are appreciated..

Thanks,

Franz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071210/9acbb848/attachment.htm 

From donwsmith at gmail.com  Mon Dec 10 19:15:32 2007
From: donwsmith at gmail.com (Don Smith)
Date: Mon, 10 Dec 2007 16:15:32 -0800
Subject: [Twisted-Python] stopping MultiService child services
In-Reply-To: <20071208170923.8162.921056293.divmod.quotient.43829@ohm>
References: <24f63c200712080852m4bf9708fmf38bdb23b13d07cb@mail.gmail.com>
	<20071208170923.8162.921056293.divmod.quotient.43829@ohm>
Message-ID: <24f63c200712101615sc06109cj4401a3243d5db4d9@mail.gmail.com>

Thank you, this was very helpful!

-Don

On Dec 8, 2007 9:09 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Sat, 8 Dec 2007 08:52:36 -0800, Don Smith <donwsmith at gmail.com> wrote:
> >Hi all,
> >
> >I'm still a bit of a novice but I'm trying to implement MultiService. The
> >trick is that I want my program to be able to change it's config while it
> is
> >running. Once the app realizes it has a new configuration it needs to
> stop
> >all services, load the new config and start services accordingly.
> However,
> >I'm stuck right now with how to stop all services. I'm thinking I need to
> >loop over the children of MultiService and call stopService on them, but
> I'm
> >not sure how to do that. Or should I just call stopServivce on the
> >MultiService object?
>
> MultiService.stopService will call stopService on all of its child
> services,
> so if the goal is to do that, then a for loop is more work for the same
> result.
>
> When you call stopService, keep in mind that it can return a Deferred
> which
> you'll probably want to wait for before trying to start anything again.
>
> Likewise for startup, you can just call MultiService.startService to start
> all of its children.
>
> It might also be useful to know that removing a service from a running
> MultiService will stop the service and adding a service to a running
> MultiService will start it.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071210/a09b7e1e/attachment.htm 

From sakalsiz at gmail.com  Tue Dec 11 08:06:45 2007
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Tue, 11 Dec 2007 15:06:45 +0200
Subject: [Twisted-Python] Strange behaviour for epoll reactor
Message-ID: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>

We have a twisted application uses the epoll reactor. Sometimes it
wastes %100 cpu. It has also some threads for single isolated
functions (using deferToThred). First we suspected that threads don't
end and goes to an infinite loop. Because application still accepts
connections and executes the requested functions. Then I ran the
following ps command

ps h -Leo pid,pcpu,args,lwp

Looking at the output, the main thread seemed to be wasting the whole
cpu time. Later on I attached the process to the strace and saw the
output below. I don't how does it happen or when does it happen. It is
not regular nor repeatable, but this is the strace output when it gets
into loop. I send to the list, because it may be useful for someone.

Now we switched back to the select reactor.

P.S.: We use perspective broker on the server side and qt4reactor for
the client.

futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 15) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 796897}, NULL) = 0
gettimeofday({1197377318, 796940}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 15) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 797127}, NULL) = 0
gettimeofday({1197377318, 797169}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 15) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 797388}, NULL) = 0
gettimeofday({1197377318, 797430}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 14) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 797617}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 797692}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 14) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 797879}, NULL) = 0
gettimeofday({1197377318, 797921}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 14) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 798139}, NULL) = 0
gettimeofday({1197377318, 798181}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 14) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 798368}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 798442}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 13) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 798627}, NULL) = 0
gettimeofday({1197377318, 798669}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 13) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0



From therve at free.fr  Tue Dec 11 08:56:25 2007
From: therve at free.fr (Thomas =?utf-8?q?Herv=C3=A9?=)
Date: Tue, 11 Dec 2007 14:56:25 +0100
Subject: [Twisted-Python] Strange behaviour for epoll reactor
In-Reply-To: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>
References: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>
Message-ID: <200712111456.25807.therve@free.fr>

Le Tuesday 11 December 2007 14:06:45 Mustafa Sakalsiz, vous avez ?crit?:
> We have a twisted application uses the epoll reactor. Sometimes it
> wastes %100 cpu.

Yes this a known problem in Twisted 2.5, that has been corrected in trunk.

Hopefully we'll have a release soon, until then you can backport the changes 
in epollreactor into your installation.

-- 
Thomas



From exarkun at divmod.com  Tue Dec 11 08:57:44 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 11 Dec 2007 08:57:44 -0500
Subject: [Twisted-Python] Strange behaviour for epoll reactor
In-Reply-To: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>
Message-ID: <20071211135744.8162.945386516.divmod.quotient.44584@ohm>

On Tue, 11 Dec 2007 15:06:45 +0200, Mustafa Sakalsiz <sakalsiz at gmail.com> wrote:
>We have a twisted application uses the epoll reactor. Sometimes it
>wastes %100 cpu. It has also some threads for single isolated
>functions (using deferToThred). First we suspected that threads don't
>end and goes to an infinite loop. Because application still accepts
>connections and executes the requested functions. Then I ran the
>following ps command
>
>ps h -Leo pid,pcpu,args,lwp
>
>Looking at the output, the main thread seemed to be wasting the whole
>cpu time. Later on I attached the process to the strace and saw the
>output below. I don't how does it happen or when does it happen. It is
>not regular nor repeatable, but this is the strace output when it gets
>into loop. I send to the list, because it may be useful for someone.
>
>Now we switched back to the select reactor.
>
>P.S.: We use perspective broker on the server side and qt4reactor for
>the client.

This sounds like this issue:

  http://twistedmatrix.com/trac/ticket/2809

This is fixed in current trunk at HEAD and the fix will be included in the
next release of Twisted.

Jean-Paul



From zooko at zooko.com  Tue Dec 11 15:25:18 2007
From: zooko at zooko.com (zooko)
Date: Tue, 11 Dec 2007 12:25:18 -0800
Subject: [Twisted-Python] number of Hack Fests reaches an all-time high
References: <BAF60108-85CE-46A5-B74E-37612E61A6F5@allmydata.com>
Message-ID: <33EB0EA7-1747-40B9-9310-0AEA61994A53@zooko.com>

Folks:

There will be a Hack Fest this coming Friday, December 14th, at 17:00
hours Pacific Time, at the offices of allmydata.com in Potrero Hill,
San Francisco.

This will be the third Hack Fest, making its cardinal number one
larger than the cardinal number of any previous Hack Fest! [1, 2]

We already have two people lined up to show off their projects,
making the number of presenters with prior planning one larger than
any previous number of prepared presentations.

Those two are Pavel with a Python decompiler ("WATCH as he
translates .pyc files into .py files before your very eyes!") and
Nejucomo with "Conway's Second Life", which is mattress of cells
floating above the ground which spawn new cells and reconfigure
themselves in order to play Conway's Life.

Since one of these demos will be taking place in Second Life
(projected onto the wall of our office in First Life), we thought it
would be fun to invite people who can't physically come to San
Francisco to virtually join the Hack Fest in Second Life.  Please e-
mail me zooko at zooko.com and nejucomo at gmail.com to coordinate.

By the way, there will probably be more projects at play at the Hack
Fest -- these two are just the only two that are already planned.
You are welcome to bring yours!

As usual, allmydata.com will generously provide drinks, eats, and
funky beats.  Please RSVP to zooko at zooko.com and secorp at allmydata.com.

Regards,

Zooko

[1] http://lists.zooko.com/pipermail/p2p-hackers/2007-November/ 
001412.html
[2] http://lists.zooko.com/pipermail/p2p-hackers/2007-November/ 
001444.html




From adelagon at gmail.com  Tue Dec 11 20:56:44 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 12 Dec 2007 09:56:44 +0800
Subject: [Twisted-Python] Strange behaviour for epoll reactor
In-Reply-To: <20071211135744.8162.945386516.divmod.quotient.44584@ohm>
References: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>
	<20071211135744.8162.945386516.divmod.quotient.44584@ohm>
Message-ID: <7a01f6c00712111756n36f7a7a2sf07045e71778c9eb@mail.gmail.com>

To summarize Jean-Paul's link, you can just a two-liner patch in the
epollreactor.py to fix this (after line 201 if you're using the
twisted 2.50release)

if event & _epoll.HUP or event & _epoll.ERR:
                    why = main.CONNECTION_LOST


On Dec 11, 2007 9:57 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Tue, 11 Dec 2007 15:06:45 +0200, Mustafa Sakalsiz <sakalsiz at gmail.com>
> wrote:
> >We have a twisted application uses the epoll reactor. Sometimes it
> >wastes %100 cpu. It has also some threads for single isolated
> >functions (using deferToThred). First we suspected that threads don't
> >end and goes to an infinite loop. Because application still accepts
> >connections and executes the requested functions. Then I ran the
> >following ps command
> >
> >ps h -Leo pid,pcpu,args,lwp
> >
> >Looking at the output, the main thread seemed to be wasting the whole
> >cpu time. Later on I attached the process to the strace and saw the
> >output below. I don't how does it happen or when does it happen. It is
> >not regular nor repeatable, but this is the strace output when it gets
> >into loop. I send to the list, because it may be useful for someone.
> >
> >Now we switched back to the select reactor.
> >
> >P.S.: We use perspective broker on the server side and qt4reactor for
> >the client.
>
> This sounds like this issue:
>
>  http://twistedmatrix.com/trac/ticket/2809
>
> This is fixed in current trunk at HEAD and the fix will be included in the
> next release of Twisted.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071212/e1aa3435/attachment.htm 

From sajitrao at gmail.com  Tue Dec 11 22:07:41 2007
From: sajitrao at gmail.com (Sajit Rao)
Date: Tue, 11 Dec 2007 22:07:41 -0500
Subject: [Twisted-Python] Server/Client bi-directional data-transfer - need
	a solution
Message-ID: <e0d23f6a0712111907y3cfd073dr52312c40209658c1@mail.gmail.com>

Hi,

*The Goal:*

   - I'm trying to write a simple server/client app where the client can
   send the server either a small string like "hello" OR a small file (txt,
   pdf, ppt,.. let's say < 5MB ).
   - The server needs to figure out if the data it received is a simple
   string or a file and symmetrically may decide to send back to the client a
   simple string or a small file.
   - As a bonus, It's highly desirable that the transfer be secure - but
   it's ok for the first version if it isn't

*Questions:*

What's the cleanest way to accomplish this? I've been looking at the single
Howto/Example that exists for *twisted.conch* but still can't understand
several things. In particular

   1. Should I create two separate channels between server and client -
   one for simple strings and one for files so that the client or server knows
   the type of data on that channel?

   2. Should the files be mime-encoded at one end and mime-decoded at the
   other so that file-type is automatically handled?

   3. I've read that there is a python package called paramiko that
   implements ssh2 transfer - how does this compare with twisted.conch?

This is my first time playing around with twisted or any kind of networking
stuff so any kind of help will be appreciated

Thanks!

Sajit
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071211/4e6b48ad/attachment.htm 

From donwsmith at gmail.com  Wed Dec 12 00:08:30 2007
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 11 Dec 2007 21:08:30 -0800
Subject: [Twisted-Python] MultiService puzzler
Message-ID: <24f63c200712112108l92c64d6i93e91ccdc22c0814@mail.gmail.com>

Hi all,

I'm trying to build an app using MultiService. I need to have 2 services,
one that listens for UDP datagrams and another that can send those datagrams
to an ActiveMQ server via a Stomp client.

I can set up the two services just fine, but I'm stuck with how to call the
MQ service send method from the UDPServer instance.

Some code to illustrate:



class GetUDP(DatagramProtocol):

    def datagramReceived(self, datagram, address):
        print datagram,address
        #Send datagram to the queue server
        # I don't know how to access the send method for the Stomp client
service!



testq = internet.TCPClient(APPVARIABLES['queue_server'],
int(APPVARIABLES['queue_port']), connections.StompClientFactory
(username='',password='',queue='/queue/test'))
testq.setName('Testq')
testq.setServiceParent(MQService)


#create a UDP listener
#TODO: this should be driven by the config file
#reactor.listenUDP(42000, GetUDP())
internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
# Create an application as normal
application = service.Application("MQExample")

# Connect our MultiService to the application, just like a normal service.
MQService.setServiceParent(application)


Note: this is won't run exactly as is, but should give an idea of my
problem. I've setup the ActiveMQ Stomp client as 'testq'. I've setup the
UDPServer service to listen for UDP packets. I can get the UDP packets and
print them, but I can't figure out how to hand them to my Stomp client's
send() method. This is possible, right?

Thanks,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071211/7ffb9910/attachment.htm 

From maarten at treewalker.org  Wed Dec 12 05:20:20 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Wed, 12 Dec 2007 11:20:20 +0100
Subject: [Twisted-Python] Server/Client bi-directional data-transfer -
	need a solution
In-Reply-To: <e0d23f6a0712111907y3cfd073dr52312c40209658c1@mail.gmail.com>
References: <e0d23f6a0712111907y3cfd073dr52312c40209658c1@mail.gmail.com>
Message-ID: <200712121120.27558.maarten@treewalker.org>

On Wednesday 12 December 2007, Sajit Rao wrote:

> *The Goal:*
>
>    - I'm trying to write a simple server/client app where the client can
>    send the server either a small string like "hello" OR a small file
> (txt, pdf, ppt,.. let's say < 5MB ).
>    - The server needs to figure out if the data it received is a simple
>    string or a file and symmetrically may decide to send back to the
> client a simple string or a small file.
>    - As a bonus, It's highly desirable that the transfer be secure - but
>    it's ok for the first version if it isn't

Would an HTTP POST suffice? You could easily test it using a web browser or 
a program like wget and adding a secure channel is done by switching from 
HTTP to HTTPS later.

If your application works like an instant messenger, consider using Twisted 
Words, for example with the XMPP (Jabber) protocol.

Does the client/server connection have to be able to pass a firewall or 
proxy? In that case HTTP or something that can be run over HTTP would be a 
big advantage.

> *Questions:*
>
> What's the cleanest way to accomplish this? I've been looking at the
> single Howto/Example that exists for *twisted.conch* but still can't
> understand several things. In particular
>
>    1. Should I create two separate channels between server and client -
>    one for simple strings and one for files so that the client or server
> knows the type of data on that channel?

That depends on what protocol you want to use over the channel(s). If the 
protocol can send series of text strings and binaries over the same channel 
then you need only one. But if having separate channels helps in 
simplifying the protocol, then that might be better.

One design decision to make is whether to keep the channel(s) open the whole 
time or open them when there is new data and then close them when the 
transfer is done. Or maybe keep the text string channel open all the time 
and open a file transfer channel on demand.

What kind of performance characteristics do you need? Does latency on the 
text strings matter? Are you going to transfer 10 files a day or 10000?

>    2. Should the files be mime-encoded at one end and mime-decoded at the
>    other so that file-type is automatically handled?

MIME encoding gives you a way to send the file name and type and it can be 
used over a text stream. However, the encoding of the data itself is not 
really needed if your channel is 8-bit clear and everything except e-mail 
is 8-bit clear nowadays (I think). For small files the overhead is neglible 
though.

>    3. I've read that there is a python package called paramiko that
>    implements ssh2 transfer - how does this compare with twisted.conch?

I don't know. One thing you could look at is which main loop you want to 
use. If you want to use Twisted's reactor, conch would better integrate 
with that of course. But if you want to use a GUI toolkit not supported by 
Twisted, it would take some effort to merge the main loops, so then running 
paramiko in a thread might be easier.

Another thing to look at is the license: paramiko is LGPL, which places more 
restrictions on its use than Twisted's MIT license. Depending on your 
situation that may or may not be important.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20071212/2b28e8df/attachment.pgp 

From dfarrell at mypublisher.com  Wed Dec 12 09:29:12 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Wed, 12 Dec 2007 09:29:12 -0500
Subject: [Twisted-Python] How send information (constructor data?) to a
	derived protocol
Message-ID: <318F79422ADC5041A93343721F84474D8B063C@exchange.mypublisher.local>

Hi all,

 

I'm trying to develop a system to handle Python logging messages via the
logging.handlers.sockethandler system. What I want is a to be able to
have multiple Python processes logging to the same log file, as well as
a global log file. I want to do this by having a local logging server
that handles all of the log messages from all of the Python processes
per server. I also want to have a global logging server that handles all
logging messages from all processes from all servers. I've written a
class that derives from Protocol and does the right thing with the log
messages generated by the logging.handler.sockethandler, and I'd like to
use this class for both the local and global servers. On the global
server machine there will be both services running; the local and global
server. 

 

So here's where I finally get to my question. I'd like to use my derived
Protocol class, but I want each instance of it (in the local server and
in the global server) to use a separate logging configuration file. How
do I pass information to my Protocol class so that it configures itself
for the correct logging configuration file? I don't see how to pass
information via the constructor, and I don't see how else to get
information in there. I'm fairly new to Twisted, so maybe I'm missing
something obvious. Any help would be greatly appreciated!

 

Thanks,

Doug

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071212/5ec44e91/attachment.htm 

From exarkun at divmod.com  Wed Dec 12 09:44:49 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 12 Dec 2007 09:44:49 -0500
Subject: [Twisted-Python] How send information (constructor data?) to a
	derived protocol
In-Reply-To: <318F79422ADC5041A93343721F84474D8B063C@exchange.mypublisher.local>
Message-ID: <20071212144449.8162.134006786.divmod.quotient.44975@ohm>

On Wed, 12 Dec 2007 09:29:12 -0500, Doug Farrell <dfarrell at mypublisher.com> wrote:
>Hi all,
>
> [snip]
>
>So here's where I finally get to my question. I'd like to use my derived
>Protocol class, but I want each instance of it (in the local server and
>in the global server) to use a separate logging configuration file. How
>do I pass information to my Protocol class so that it configures itself
>for the correct logging configuration file? I don't see how to pass
>information via the constructor, and I don't see how else to get
>information in there. I'm fairly new to Twisted, so maybe I'm missing
>something obvious. Any help would be greatly appreciated!
>

The factory is responsible for creating the protocol.  So you can do
something like this:

    from twisted.internet.protocol import Protocol, ServerFactory

    class LoggingProtocol(Protocol):
        ...

    class LoggingServerFactory(ServerFactory):
        protocol = LoggingProtocol

        def buildProtocol(self, address):
            proto = self.protocol(arguments)
            proto.factory = self # if you want - it's conventional
            return proto

Jean-Paul
        



From raja at aonic.net  Wed Dec 12 09:51:34 2007
From: raja at aonic.net (Raja)
Date: Wed, 12 Dec 2007 09:51:34 -0500
Subject: [Twisted-Python] (no subject)
Message-ID: <A4E5D62C-210C-4D3A-BAE0-F4BF652CC613@aonic.net>



-Raja



From christian.simms at gmail.com  Wed Dec 12 11:16:25 2007
From: christian.simms at gmail.com (Christian Simms)
Date: Wed, 12 Dec 2007 11:16:25 -0500
Subject: [Twisted-Python] MultiService puzzler
In-Reply-To: <24f63c200712112108l92c64d6i93e91ccdc22c0814@mail.gmail.com>
References: <24f63c200712112108l92c64d6i93e91ccdc22c0814@mail.gmail.com>
Message-ID: <cd8fa6f90712120816u1327c60fv17df3250d8d03257@mail.gmail.com>

On Dec 12, 2007 12:08 AM, Don Smith <donwsmith at gmail.com> wrote:
> Hi all,
>
> I'm trying to build an app using MultiService. I need to have 2 services,
> one that listens for UDP datagrams and another that can send those datagrams
> to an ActiveMQ server via a Stomp client.
>
> I can set up the two services just fine, but I'm stuck with how to call the
> MQ service send method from the UDPServer instance.
>
> Some code to illustrate:
>
>
>
> class GetUDP(DatagramProtocol):
>
>     def datagramReceived(self, datagram, address):
>         print datagram,address
>         #Send datagram to the queue server
>         # I don't know how to access the send method for the Stomp client
> service!
>
>
>
> testq = internet.TCPClient(APPVARIABLES['queue_server'],
> int(APPVARIABLES['queue_port']), connections.StompClientFactory
> (username='',password='',queue='/queue/test'))
> testq.setName('Testq')
> testq.setServiceParent(MQService)
>
>
> #create a UDP listener
> #TODO: this should be driven by the config file
> #reactor.listenUDP(42000, GetUDP())
> internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
> # Create an application as normal
> application = service.Application("MQExample")
>
> # Connect our MultiService to the application, just like a normal service.
> MQService.setServiceParent(application)
>
>
> Note: this is won't run exactly as is, but should give an idea of my
> problem. I've setup the ActiveMQ Stomp client as 'testq'. I've setup the
> UDPServer service to listen for UDP packets. I can get the UDP packets and
> print them, but I can't figure out how to hand them to my Stomp client's
> send() method. This is possible, right?
>
> Thanks,
>
> Don
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

The answer is really easy -- you don't need any twisted magic to do
this, you just need to use standard Python mechanisms.  Your UDP
listener, when it receives some data, just needs a Python reference to
your Stomp client. You could have stuffed a reference to the Stomp
client in a module global variable (naughty!), or better, you could
have stuffed it in an attribute of your GetUDP object. So you could
change this line:

   internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)

to these lines:

   udpService = GetUDP()
   udpService.stompClient = testq  # stuff it in!
   internet.UDPServer(42000,udpService).setServiceParent(MQService)

Cheers,
Christian



From donwsmith at gmail.com  Wed Dec 12 12:10:31 2007
From: donwsmith at gmail.com (Don Smith)
Date: Wed, 12 Dec 2007 09:10:31 -0800
Subject: [Twisted-Python] MultiService puzzler
In-Reply-To: <cd8fa6f90712120816u1327c60fv17df3250d8d03257@mail.gmail.com>
References: <24f63c200712112108l92c64d6i93e91ccdc22c0814@mail.gmail.com>
	<cd8fa6f90712120816u1327c60fv17df3250d8d03257@mail.gmail.com>
Message-ID: <24f63c200712120910l4ac9fd6fjb10afd6a93aad4b3@mail.gmail.com>

Thanks for your response, Christian!

However, this still does not work and I think it is related to the
StompClientFactory and the StompProtocol I'm using. I'm including those at
the end of this email so you can see what they do.

I changed my GetUDP class to this:

class GetUDP(DatagramProtocol):

    def datagramReceived(self, datagram, address):
        print datagram,address
        #Send datagram to the queue server
        stompclient.send(datagram)

And I changed the instantiation to what you gave me, but I get this error
when I get a UDP packet:

        File "Agent_service_test.py", line 103, in datagramReceived
          stompclient.send(datagram)
      exceptions.NameError: global name 'stompclient' is not defined


Here are my stomp classes:

class StompProtocol(Protocol, stomper.Engine):

    def __init__(self, username='', password='', queue=''):
        stomper.Engine.__init__(self)
        self.username = username
        self.password = password
        self.counter = 1
        self.log = logging.getLogger("sender")
        self.queue = queue

    def connected(self, msg):
        """Once I've connected I want to subscribe to the message queue.
        """
        stomper.Engine.connected(self, msg)

        #self.log.info("Connected: session %s. Begining say hello." %
msg['headers']['session'])
        #lc = LoopingCall(self.send)
        #lc.start(1)

        f = stomper.Frame()
        f.unpack(stomper.subscribe(self.queue))

        # ActiveMQ specific headers:
        #
        # prevent the messages we send comming back to us.
        f.headers['activemq.noLocal'] = 'true'

        return f.pack()


    def ack(self, msg):
        """Processes the received message. I don't need to
        generate an ack message.

        """
        self.log.info("SENDER - received: %s " % msg['body'])
        return stomper.NO_REPONSE_NEEDED


    def send(self):
        """Send out a hello message periodically.
        """
        self.log.info("Saying hello (%d)." % self.counter)
        self.counter += 1

        f = stomper.Frame()
        f.unpack(stomper.send(self.queue, 'hello there (%d)' % self.counter
))

        # ActiveMQ specific headers:
        #
        f.headers['persistent'] = 'true'

        self.transport.write(f.pack())


    def connectionMade(self):
        """Register with stomp server.
        """
        cmd = stomper.connect(self.username, self.password)
        self.transport.write(cmd)


    def dataReceived(self, data):
        """Data received, react to it and respond if needed.
        """
        msg = stomper.unpack_frame(data)

        returned = self.react(msg)

        if returned:
            self.transport.write(returned)

class StompClientFactory(ReconnectingClientFactory):
    def __init__(self, username='', password='',
queue='',queue_type='',config=''):
        self.username=username
        self.password=password
        self.queue=queue
        self.queue_type=queue_type
        self.config_file=config


    def buildProtocol(self, addr):
        if self.queue_type =='config':
            return ConfigurationProtocol(self.queue,self.config_file,
self.username, self.password)
        else:
            return StompProtocol(self.username, self.password, self.queue)

    def clientConnectionLost(self, connector, reason):
        """Lost connection
        """
        print 'Lost connection.  Reason:', reason


    def clientConnectionFailed(self, connector, reason):
        """Connection failed
        """
        print 'Connection failed. Reason:', reason
        ReconnectingClientFactory.clientConnectionFailed(self, connector,
reason)

On Dec 12, 2007 8:16 AM, Christian Simms <christian.simms at gmail.com> wrote:

> On Dec 12, 2007 12:08 AM, Don Smith <donwsmith at gmail.com> wrote:
> > Hi all,
> >
> > I'm trying to build an app using MultiService. I need to have 2
> services,
> > one that listens for UDP datagrams and another that can send those
> datagrams
> > to an ActiveMQ server via a Stomp client.
> >
> > I can set up the two services just fine, but I'm stuck with how to call
> the
> > MQ service send method from the UDPServer instance.
> >
> > Some code to illustrate:
> >
> >
> >
> > class GetUDP(DatagramProtocol):
> >
> >     def datagramReceived(self, datagram, address):
> >         print datagram,address
> >         #Send datagram to the queue server
> >         # I don't know how to access the send method for the Stomp
> client
> > service!
> >
> >
> >
> > testq = internet.TCPClient(APPVARIABLES['queue_server'],
> > int(APPVARIABLES['queue_port']), connections.StompClientFactory
> > (username='',password='',queue='/queue/test'))
> > testq.setName('Testq')
> > testq.setServiceParent(MQService)
> >
> >
> > #create a UDP listener
> > #TODO: this should be driven by the config file
> > #reactor.listenUDP(42000, GetUDP())
> > internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
> > # Create an application as normal
> > application = service.Application("MQExample")
> >
> > # Connect our MultiService to the application, just like a normal
> service.
> > MQService.setServiceParent(application)
> >
> >
> > Note: this is won't run exactly as is, but should give an idea of my
> > problem. I've setup the ActiveMQ Stomp client as 'testq'. I've setup the
> > UDPServer service to listen for UDP packets. I can get the UDP packets
> and
> > print them, but I can't figure out how to hand them to my Stomp client's
> > send() method. This is possible, right?
> >
> > Thanks,
> >
> > Don
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
> The answer is really easy -- you don't need any twisted magic to do
> this, you just need to use standard Python mechanisms.  Your UDP
> listener, when it receives some data, just needs a Python reference to
> your Stomp client. You could have stuffed a reference to the Stomp
> client in a module global variable (naughty!), or better, you could
> have stuffed it in an attribute of your GetUDP object. So you could
> change this line:
>
>   internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
>
> to these lines:
>
>   udpService = GetUDP()
>   udpService.stompClient = testq  # stuff it in!
>   internet.UDPServer(42000,udpService).setServiceParent(MQService)
>
> Cheers,
> Christian
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071212/6d88ac3d/attachment.htm 

From RDMcGuire01 at indianatech.net  Wed Dec 12 12:26:00 2007
From: RDMcGuire01 at indianatech.net (Ryan McGuire)
Date: Wed, 12 Dec 2007 12:26:00 -0500
Subject: [Twisted-Python] multiple mysql results in function
Message-ID: <f5879bda62234a20b5ce3b2d3c5f29fc@indianatech.net>


 I am using xmlrpc to send and recieve messages to a "thought board" kind of thing, and being COMPLETELY new to python and twisted, I am kind of stuck on something.

I have everything working except for the fact that I want to return multiple rows when I run the mysql query.

Here is the code I have:

from twisted.web import xmlrpc, server
import MySQLdb
from twisted.enterprise import adbapi

class itr(xmlrpc.XMLRPC):

??? def xmlrpc_thought(self, uname, pwrd, arg, msg):
??????? """Return the most recent thought"""
??????? if arg == "get":
??????????????? db=adbapi.ConnectionPool("MySQLdb",host='192.168.0.220',user='redbeardmcg',passwd='xxxxx',db='itr')
??????????????? db.start()
??????????????? return db.runQuery("""
??????????????????????? SELECT * FROM thoughts
??????????????????????? WHERE tid > (SELECT curtid FROM users
??????????????????????? WHERE uid = (SELECT uid FROM users
??????????????????????? WHERE username='%s' AND password='%s'))
??????????????? """ % (uname, pwrd)).addCallback(lambda results: results[0][2])
??????????????? db.stop()
??????? if arg == "post":
??????????????? db=adbapi.ConnectionPool("MySQLdb",host='192.168.0.220',user='redbeardmcg',passwd='xxxxx',db='itr')
??????????????? db.start()
??????????????? db.runQuery("""
??????????????????????? INSERT INTO thoughts(uid,thought)
??????????????????????? VALUES((SELECT uid FROM users WHERE
??????????????????????? username='%s' AND password='%s'),
??????????????????????? '%s')
??????????????? """ % (uname, pwrd, msg))
??????????????? x='Thought added'
??????????????? return x

if __name__ == '__main__':
??? from twisted.internet import reactor
??? r = itr()
??? reactor.listenTCP(8899, server.Site(r))
??? reactor.run()

I believe something needs to be changed in the callback, but I very well may be wrong.

Thanks in advance!

RDMcGuire01 at indianatech.net

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071212/07ad6c41/attachment.htm 

From arnarbi at gmail.com  Wed Dec 12 20:17:10 2007
From: arnarbi at gmail.com (Arnar Birgisson)
Date: Thu, 13 Dec 2007 01:17:10 +0000
Subject: [Twisted-Python] PyAMF 0.1.0 alpha
Message-ID: <28012bc60712121717k1d489d67h75e31d037930c804@mail.gmail.com>

Hello there,

For people communicating with Flash or Flex/AIR frontends, this might be of use.

cheers,
Arnar

We are pleased to announce the first alpha version of PyAMF.

PyAMF [1] is a lightweight library that allows Flash and Python
applications to communicate via Adobe's ActionScript Message Format.

A summary of features in this release:

 * AMF0 and AMF3 encoders/decoders
 * Support for IExternalizable, ArrayCollection, ObjectProxy, ByteArray,
RecordSet and RemoteObject
 * Remoting gateways for Twisted, WSGI, and Django
 * Authentication/setCredentials support (AMF0 only)
 * zlib compression support for ByteArray
 * Remoting client with httplib

Check out the download page [2] and installation instructions [3].

Got questions? First stop is the mailing list [4].

Cheers,

The PyAMF Team

[1] - http://pyamf.org
[2] - http://pyamf.org/wiki/Download
[3] - http://pyamf.org/wiki/Install
[4] - http://pyamf.org/wiki/MailingList



From itamar at itamarst.org  Wed Dec 12 21:12:57 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 12 Dec 2007 21:12:57 -0500
Subject: [Twisted-Python] multiple mysql results in function
In-Reply-To: <f5879bda62234a20b5ce3b2d3c5f29fc@indianatech.net>
References: <f5879bda62234a20b5ce3b2d3c5f29fc@indianatech.net>
Message-ID: <1197511977.24724.29.camel@localhost.localdomain>


On Wed, 2007-12-12 at 12:26 -0500, Ryan McGuire wrote:
> 
> I am using xmlrpc to send and recieve messages to a "thought board"
> kind of thing, and being COMPLETELY new to python and twisted, I am
> kind of stuck on something.
> 
> I have everything working except for the fact that I want to return
> multiple rows when I run the mysql query.
> 
> Here is the code I have:

>                 return db.runQuery("""
>                         SELECT * FROM thoughts
>                         WHERE tid > (SELECT curtid FROM users
>                         WHERE uid = (SELECT uid FROM users
>                         WHERE username='%s' AND password='%s'))
>                 """ % (uname, pwrd)).addCallback(lambda results:
> results[0][2])
>                 db.stop()

1. Notice you stop the database after its returned from function; i.e.
it won't be.

2. Better to keep around a single database pool instance (e.g. as
attribute of xmlrpc resource).

3. Perhaps you should, once you've familiarized yourself with DB-API and
mysqldb's implementation, look at runInteraction method of the dbpool
that lets you run a whole function instead of just a single SQL query in
the context of a transaction. The adbapi HOWTO covers this.




From maarten at treewalker.org  Wed Dec 12 21:35:34 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Thu, 13 Dec 2007 03:35:34 +0100
Subject: [Twisted-Python] multiple mysql results in function
In-Reply-To: <f5879bda62234a20b5ce3b2d3c5f29fc@indianatech.net>
References: <f5879bda62234a20b5ce3b2d3c5f29fc@indianatech.net>
Message-ID: <200712130335.40210.maarten@treewalker.org>

On Wednesday 12 December 2007, Ryan McGuire wrote:

> ??? def xmlrpc_thought(self, uname, pwrd, arg, msg):
> ??????? """Return the most recent thought"""
> ??????? if arg == "get":
> ???????????????
> db=adbapi.ConnectionPool("MySQLdb",host='192.168.0.220',user='redbeardmcg
>',passwd='xxxxx',db='itr') db.start()
> ??????????????? return db.runQuery("""
> ??????????????????????? SELECT * FROM thoughts
> ??????????????????????? WHERE tid > (SELECT curtid FROM users
> ??????????????????????? WHERE uid = (SELECT uid FROM users
> ??????????????????????? WHERE username='%s' AND password='%s'))
> ??????????????? """ % (uname, pwrd)).addCallback(lambda results:
> results[0][2])

Unrelated to your problem, but are you aware that this code is vulnerable to 
SQL injection? The values of "uname" and "pwrd" are set by the XMLRPC 
client and are not escaped when they are inserted into the query. This 
might not be a problem if you trust everyone on your network, but if you 
expose this to the internet or mischievous local users, you're asking for 
trouble.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20071213/ca5b3b54/attachment.pgp 

From donwsmith at gmail.com  Wed Dec 12 21:51:24 2007
From: donwsmith at gmail.com (Don Smith)
Date: Wed, 12 Dec 2007 18:51:24 -0800
Subject: [Twisted-Python] MultiService puzzler
In-Reply-To: <24f63c200712120910l4ac9fd6fjb10afd6a93aad4b3@mail.gmail.com>
References: <24f63c200712112108l92c64d6i93e91ccdc22c0814@mail.gmail.com>
	<cd8fa6f90712120816u1327c60fv17df3250d8d03257@mail.gmail.com>
	<24f63c200712120910l4ac9fd6fjb10afd6a93aad4b3@mail.gmail.com>
Message-ID: <24f63c200712121851m13189cafhfebaae38ef5dcb1e@mail.gmail.com>

Ah, I realized I need to call the reference the stompClient like this '
self.stompClient'.

Unfortunately, what is returned by this:

testq = internet.TCPClient(APPVARIABLES['queue_server'],
int(APPVARIABLES['queue_port']), connections.StompClientFactory
(username='',password='',queue='/queue/test'))

is the StompClientFactory object, not the StompProtocol object which
contains the send() method.

So, any ideas on how I can reference the StompProtocol object (that is
created by the StompClientFactory) from the GetUDP object?

Thanks,

Don

On Dec 12, 2007 9:10 AM, Don Smith <donwsmith at gmail.com> wrote:

> Thanks for your response, Christian!
>
> However, this still does not work and I think it is related to the
> StompClientFactory and the StompProtocol I'm using. I'm including those at
> the end of this email so you can see what they do.
>
> I changed my GetUDP class to this:
>
> class GetUDP(DatagramProtocol):
>
>     def datagramReceived(self, datagram, address):
>         print datagram,address
>         #Send datagram to the queue server
>         stompclient.send(datagram)
>
> And I changed the instantiation to what you gave me, but I get this error
> when I get a UDP packet:
>
>         File "Agent_service_test.py", line 103, in datagramReceived
>           stompclient.send(datagram)
>       exceptions.NameError: global name 'stompclient' is not defined
>
>
> Here are my stomp classes:
>
> class StompProtocol(Protocol, stomper.Engine):
>
>     def __init__(self, username='', password='', queue=''):
>         stomper.Engine.__init__(self)
>         self.username = username
>         self.password = password
>         self.counter = 1
>         self.log = logging.getLogger("sender")
>         self.queue = queue
>
>     def connected(self, msg):
>         """Once I've connected I want to subscribe to the message queue.
>         """
>         stomper.Engine.connected(self, msg)
>
>         #self.log.info("Connected: session %s. Begining say hello." %
> msg['headers']['session'])
>         #lc = LoopingCall(self.send)
>         #lc.start(1)
>
>         f = stomper.Frame ()
>         f.unpack(stomper.subscribe(self.queue))
>
>         # ActiveMQ specific headers:
>         #
>         # prevent the messages we send comming back to us.
>         f.headers['activemq.noLocal'] = 'true'
>
>         return f.pack()
>
>
>     def ack(self, msg):
>         """Processes the received message. I don't need to
>         generate an ack message.
>
>         """
>         self.log.info("SENDER - received: %s " % msg['body'])
>         return stomper.NO_REPONSE_NEEDED
>
>
>     def send(self):
>         """Send out a hello message periodically.
>         """
>         self.log.info("Saying hello (%d)." % self.counter)
>         self.counter += 1
>
>         f = stomper.Frame()
>         f.unpack(stomper.send(self.queue, 'hello there (%d)' %
> self.counter))
>
>         # ActiveMQ specific headers:
>         #
>         f.headers['persistent'] = 'true'
>
>         self.transport.write(f.pack())
>
>
>     def connectionMade(self):
>         """Register with stomp server.
>         """
>         cmd = stomper.connect(self.username, self.password)
>         self.transport.write(cmd)
>
>
>     def dataReceived(self, data):
>         """Data received, react to it and respond if needed.
>         """
>         msg = stomper.unpack_frame(data)
>
>         returned = self.react(msg)
>
>         if returned:
>             self.transport.write(returned)
>
> class StompClientFactory(ReconnectingClientFactory):
>     def __init__(self, username='', password='',
> queue='',queue_type='',config=''):
>         self.username=username
>         self.password=password
>         self.queue=queue
>         self.queue_type=queue_type
>         self.config_file=config
>
>
>     def buildProtocol(self, addr):
>         if self.queue_type =='config':
>             return ConfigurationProtocol(self.queue,self.config_file,
> self.username, self.password)
>         else:
>             return StompProtocol(self.username, self.password, self.queue)
>
>     def clientConnectionLost(self, connector, reason):
>         """Lost connection
>         """
>         print 'Lost connection.  Reason:', reason
>
>
>     def clientConnectionFailed(self, connector, reason):
>         """Connection failed
>         """
>         print 'Connection failed. Reason:', reason
>         ReconnectingClientFactory.clientConnectionFailed(self, connector,
> reason)
>
>
> On Dec 12, 2007 8:16 AM, Christian Simms <christian.simms at gmail.com >
> wrote:
>
> > On Dec 12, 2007 12:08 AM, Don Smith < donwsmith at gmail.com> wrote:
> > > Hi all,
> > >
> > > I'm trying to build an app using MultiService. I need to have 2
> > services,
> > > one that listens for UDP datagrams and another that can send those
> > datagrams
> > > to an ActiveMQ server via a Stomp client.
> > >
> > > I can set up the two services just fine, but I'm stuck with how to
> > call the
> > > MQ service send method from the UDPServer instance.
> > >
> > > Some code to illustrate:
> > >
> > >
> > >
> > > class GetUDP(DatagramProtocol):
> > >
> > >     def datagramReceived(self, datagram, address):
> > >         print datagram,address
> > >         #Send datagram to the queue server
> > >         # I don't know how to access the send method for the Stomp
> > client
> > > service!
> > >
> > >
> > >
> > > testq = internet.TCPClient(APPVARIABLES['queue_server'],
> > > int(APPVARIABLES['queue_port']), connections.StompClientFactory
> > > (username='',password='',queue='/queue/test'))
> > > testq.setName('Testq')
> > > testq.setServiceParent(MQService)
> > >
> > >
> > > #create a UDP listener
> > > #TODO: this should be driven by the config file
> > > #reactor.listenUDP(42000, GetUDP())
> > > internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
> > > # Create an application as normal
> > > application = service.Application("MQExample")
> > >
> > > # Connect our MultiService to the application, just like a normal
> > service.
> > > MQService.setServiceParent(application)
> > >
> > >
> > > Note: this is won't run exactly as is, but should give an idea of my
> > > problem. I've setup the ActiveMQ Stomp client as 'testq'. I've setup
> > the
> > > UDPServer service to listen for UDP packets. I can get the UDP packets
> > and
> > > print them, but I can't figure out how to hand them to my Stomp
> > client's
> > > send() method. This is possible, right?
> > >
> > > Thanks,
> > >
> > > Don
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> >
> > The answer is really easy -- you don't need any twisted magic to do
> > this, you just need to use standard Python mechanisms.  Your UDP
> > listener, when it receives some data, just needs a Python reference to
> > your Stomp client. You could have stuffed a reference to the Stomp
> > client in a module global variable (naughty!), or better, you could
> > have stuffed it in an attribute of your GetUDP object. So you could
> > change this line:
> >
> >   internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
> >
> > to these lines:
> >
> >   udpService = GetUDP()
> >   udpService.stompClient = testq  # stuff it in!
> >   internet.UDPServer(42000,udpService).setServiceParent(MQService)
> >
> > Cheers,
> > Christian
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071212/e4c20667/attachment.htm 

From sakalsiz at gmail.com  Thu Dec 13 08:35:27 2007
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Thu, 13 Dec 2007 15:35:27 +0200
Subject: [Twisted-Python] Strange behaviour for epoll reactor
In-Reply-To: <7a01f6c00712111756n36f7a7a2sf07045e71778c9eb@mail.gmail.com>
References: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>
	<20071211135744.8162.945386516.divmod.quotient.44584@ohm>
	<7a01f6c00712111756n36f7a7a2sf07045e71778c9eb@mail.gmail.com>
Message-ID: <767e5e0d0712130535x535821e0xda87fcb98a28486c@mail.gmail.com>

Yes, I saw the ticket and the patch. Thanks for your help. It works well now.

On Dec 12, 2007 3:56 AM, Alvin Delagon <adelagon at gmail.com> wrote:
> To summarize Jean-Paul's link, you can just a two-liner patch in the
> epollreactor.py to fix this (after line 201 if you're using the twisted 2.50
> release)
>
> if event & _epoll.HUP or event & _epoll.ERR:
>                     why = main.CONNECTION_LOST
>
>
>
>
> On Dec 11, 2007 9:57 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> >
> > On Tue, 11 Dec 2007 15:06:45 +0200, Mustafa Sakalsiz <sakalsiz at gmail.com>
> wrote:
> > >We have a twisted application uses the epoll reactor. Sometimes it
> > >wastes %100 cpu. It has also some threads for single isolated
> > >functions (using deferToThred). First we suspected that threads don't
> > >end and goes to an infinite loop. Because application still accepts
> > >connections and executes the requested functions. Then I ran the
> > >following ps command
> > >
> > >ps h -Leo pid,pcpu,args,lwp
> > >
> > >Looking at the output, the main thread seemed to be wasting the whole
> > >cpu time. Later on I attached the process to the strace and saw the
> > >output below. I don't how does it happen or when does it happen. It is
> > >not regular nor repeatable, but this is the strace output when it gets
> > >into loop. I send to the list, because it may be useful for someone.
> > >
> > >Now we switched back to the select reactor.
> > >
> > >P.S.: We use perspective broker on the server side and qt4reactor for
> > >the client.
> >
> > This sounds like this issue:
> >
> >  http://twistedmatrix.com/trac/ticket/2809
> >
> > This is fixed in current trunk at HEAD and the fix will be included in the
> > next release of Twisted.
> >
> > Jean-Paul
> >
> >
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
----------------------------------------------------------------
Likya Yaz?l?m ve Bili?im Hizmetleri Ltd.?ti.
    ODT? Teknokent Galyum Blok B-08
               06531 ANKARA
        Tel    :: (312) 210 00 90
        Fax   :: (312) 210 00 91
        Web  :: www.ly.com.tr
----------------------------------------------------------------
                mustafa at ly.com.tr

From chronoss at gmx.de  Thu Dec 13 16:50:54 2007
From: chronoss at gmx.de (Bjoern Schliessmann)
Date: Thu, 13 Dec 2007 22:50:54 +0100
Subject: [Twisted-Python] Re: Conch/insults -- using HistoricRecvLine
References: <fjfce8$amb$2@ger.gmane.org>
	<20071209031209.8162.485080318.divmod.quotient.43920@ohm>
Message-ID: <fjs9fv$e9a$1@ger.gmane.org>

At first, thank you for the detailed explanation :)

Jean-Paul Calderone wrote:

> I haven't had a chance to work with this part of Twisted much
> recently, but after my most recent attempt, I think I decided that
> the approach taken by HistoricRecvLine doesn't lead to easily
> extensible or reusable code.  I had been investigating an API
> based on an explicit buffer object which allowed different
> components to be isolated from each other.  You can take a look at
> the incomplete results of this (again, no documentation, sorry)
> here: 

Mh, I'm not too familiar with the insults API. I'll have to look
into it deeper first.

> If you want to stick with HistoricRecvLine

I don't really want. As you mentioned, it has a full telnet
implementation a few layers down, which I don't need at all. 

I have a custom text protocol which is for quite some time "abused"
for manual input, so I'm trying to add some minimal convenience on
the server side.

> then the only suggestion that comes to mind to make is for you to
> keep your original LineReceiver sub-class separate from your
> HistoricRecvLine subclass.  Give a reference to the former to the
> latter: have the HistoricvRecvLine subclass's lineReceived method
> call lineReceived on the LineReceiver subclass (which may not need
> to be a LineReceiver subclass anymore); give the LineReceiver
> subclass a transport which knows how to interact with the terminal
> in a way which is not disruptive to HistoricRecvLine's use of it.

Since I haven't achieved setting up a working HistoricRecvLine yet,
and I wouldn't like to have such deep telnet functionality, I'm
going to look into other options. The most simple would be using
rlwrap (3rd party program) for all clients which is work. 

What I'd like most is just to have the server interpret a few
keystrokes specially, for a history function (saving the last
commands given in this session) and _perhaps_ a basic autocompleter
for a set of (~10) commands. 

I'm afraid I have no specific questions for now (but I appreciate
your offer). I think I'll look into the implementation of
LineReceiver and try to figure out where I can tap dataReceived to
catch (and filter out) a few special keystrokes.

Regards,


Bj?rn 

-- 
BOFH excuse #295:

The Token fell out of the ring. Call us when you find it.





From markus at bluegap.ch  Fri Dec 14 07:00:26 2007
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 14 Dec 2007 13:00:26 +0100
Subject: [Twisted-Python] disturbing trial exceptions 
Message-ID: <4762705A.5020103@bluegap.ch>

Hi,

since my last svn update of twisted, some strange errors started popping 
up when testing my package with trial. I've tracked down the exact 
revision with which the errors started to appear:

> ------------------------------------------------------------------------
> r21907 | therve | 2007-11-20 20:32:56 +0100 (Tue, 20 Nov 2007) | 9 lines
> 
> Merge test-plugins-not-shared-942
> 
> Author: therve
> Reviewers: exarkun, jml, glyph
> Fixes #942
> 
> Fix twisted.test.test_plugin so that it doesn't use twisted.plugins anymore,
> but create temporary plugins beneath _trial_temp instead.
> 
> ------------------------------------------------------------------------

The first exception is:
   exceptions.AttributeError: 'module' object has no attribute 'running'

As the errors are from seemingly dynamically generated code (at least I 
could only find .pyc files, no source), I didn't try to investigate further.

After the errors, all tests are correctly run through, so it's just 
plain disturbing.

Here's the full error output:

> Traceback (most recent call last):
>   File "/home/markus/projects/twisted/twisted/python/usage.py", line 241, in parseOptions
>     self.postOptions()
>   File "/home/markus/projects/twisted/twisted/scripts/trial.py", line 292, in postOptions
>     self['reporter'] = self._loadReporterByName(self['reporter'])
>   File "/home/markus/projects/twisted/twisted/scripts/trial.py", line 278, in _loadReporterByName
>     for p in plugin.getPlugins(itrial.IReporter):
>   File "/home/markus/projects/twisted/twisted/plugin.py", line 200, in getPlugins
>     allDropins = getCache(package)
> --- <exception caught here> ---
>   File "/home/markus/projects/twisted/twisted/plugin.py", line 165, in getCache
>     provider = pluginModule.load()
>   File "/home/markus/projects/twisted/twisted/python/modules.py", line 380, in load
>     return self.pathEntry.pythonPath.moduleLoader(self.name)
>   File "/home/markus/projects/twisted/twisted/python/modules.py", line 618, in moduleLoader
>     return self._moduleLoader(modname)
>   File "/home/markus/projects/twisted/twisted/python/reflect.py", line 361, in namedAny
>     topLevelPackage = __import__(trialname)
>   File "/home/markus/projects/twisted/twisted/plugins/notestplugin.py", line 18, in ?
>     
> exceptions.AttributeError: 'module' object has no attribute 'running'
> Traceback (most recent call last):
>   File "/home/markus/projects/twisted/twisted/python/usage.py", line 241, in parseOptions
>     self.postOptions()
>   File "/home/markus/projects/twisted/twisted/scripts/trial.py", line 292, in postOptions
>     self['reporter'] = self._loadReporterByName(self['reporter'])
>   File "/home/markus/projects/twisted/twisted/scripts/trial.py", line 278, in _loadReporterByName
>     for p in plugin.getPlugins(itrial.IReporter):
>   File "/home/markus/projects/twisted/twisted/plugin.py", line 200, in getPlugins
>     allDropins = getCache(package)
> --- <exception caught here> ---
>   File "/home/markus/projects/twisted/twisted/plugin.py", line 165, in getCache
>     provider = pluginModule.load()
>   File "/home/markus/projects/twisted/twisted/python/modules.py", line 380, in load
>     return self.pathEntry.pythonPath.moduleLoader(self.name)
>   File "/home/markus/projects/twisted/twisted/python/modules.py", line 618, in moduleLoader
>     return self._moduleLoader(modname)
>   File "/home/markus/projects/twisted/twisted/python/reflect.py", line 361, in namedAny
>     topLevelPackage = __import__(trialname)
>   File "/home/markus/projects/twisted/twisted/plugins/testplugin.py", line 12, in ?
>     
> exceptions.ImportError: cannot import name ITestPlugin



Help appreciated.

Regards

Markus




From therve at free.fr  Fri Dec 14 07:34:35 2007
From: therve at free.fr (Thomas =?iso-8859-1?q?Herv=E9?=)
Date: Fri, 14 Dec 2007 13:34:35 +0100
Subject: [Twisted-Python] disturbing trial exceptions
In-Reply-To: <4762705A.5020103@bluegap.ch>
References: <4762705A.5020103@bluegap.ch>
Message-ID: <200712141334.35981.therve@free.fr>

Le Friday 14 December 2007 13:00:26 Markus Schiltknecht, vous avez ?crit?:
> Hi,
>
> since my last svn update of twisted, some strange errors started popping
> up when testing my package with trial. I've tracked down the exact
>
> revision with which the errors started to appear:
> > ------------------------------------------------------------------------
> > r21907 | therve | 2007-11-20 20:32:56 +0100 (Tue, 20 Nov 2007) | 9 lines
> >
> > Merge test-plugins-not-shared-942
> >
> > Author: therve
> > Reviewers: exarkun, jml, glyph
> > Fixes #942
> >
> > Fix twisted.test.test_plugin so that it doesn't use twisted.plugins
> > anymore, but create temporary plugins beneath _trial_temp instead.
> >
> > ------------------------------------------------------------------------
>
> The first exception is:
>    exceptions.AttributeError: 'module' object has no attribute 'running'
>
> As the errors are from seemingly dynamically generated code (at least I
> could only find .pyc files, no source), I didn't try to investigate
> further.

You have to remove the pyc files in the plugins (and probably the dropin.cache 
file too), because the source files have been removed by this revision.

The responsability for this problem is not clear yet, but in this case it was 
for a good reason :).

-- 
Thomas



From radix at twistedmatrix.com  Fri Dec 14 07:43:01 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 14 Dec 2007 07:43:01 -0500
Subject: [Twisted-Python] disturbing trial exceptions
In-Reply-To: <4762705A.5020103@bluegap.ch>
References: <4762705A.5020103@bluegap.ch>
Message-ID: <60ed19d40712140443q79576a1x949fb4e683913a0d@mail.gmail.com>

On Dec 14, 2007 7:00 AM, Markus Schiltknecht <markus at bluegap.ch> wrote:

Hi Markus.

This is the problem:

> As the errors are from seemingly dynamically generated code (at least I
> could only find .pyc files, no source), I didn't try to investigate further.

Actually, those aren't dynamically generated. Those are old .pyc files
(which were generated from .py files that *used* to exist), and they
should be removed. Your problems will probably go away after that.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From markus at bluegap.ch  Fri Dec 14 08:40:06 2007
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 14 Dec 2007 14:40:06 +0100
Subject: [Twisted-Python] disturbing trial exceptions
In-Reply-To: <60ed19d40712140443q79576a1x949fb4e683913a0d@mail.gmail.com>
References: <4762705A.5020103@bluegap.ch>
	<60ed19d40712140443q79576a1x949fb4e683913a0d@mail.gmail.com>
Message-ID: <476287B6.7060407@bluegap.ch>

Hi Christopher,

Christopher Armstrong wrote:
> Actually, those aren't dynamically generated. Those are old .pyc files
> (which were generated from .py files that *used* to exist), and they
> should be removed. Your problems will probably go away after that.

Hehe, obviously I'm expecting too many bells and whistles in twisted. 
Dynamically generated python code, tz tz...

Thanks for the explanation, also to Thomas, solved my problem.

Regards

Markus



From josef.robert.novak at gmail.com  Sat Dec 15 00:10:53 2007
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Sat, 15 Dec 2007 14:10:53 +0900
Subject: [Twisted-Python] finer control of deferToThread ?
Message-ID: <710ff8630712142110x53fa7c05yae6c0fa79db5d522@mail.gmail.com>

Hi,
  I am writing a twisted application using StarPY fastagi API for
Asterisk.  My application involves answering user calls, and then
based on their responses to an IVR dialogue, running some some
compute-intensive applications on the same server, after they hang up.
  At the moment I am running the compute-intensive application (3rd
party code) in a deferred.deferToThread.  The application works fine,
however if the number of callers goes above 2-3, and one of the
compute-intensive applications from a previous call has not finished
up, the audio for the call gets very jumpy because of CPU usage.
  This compute-intensive process needs to be run immediately after
hangup, and I'd prefer to take care of everything on the same machine
(rather than send the compute-intensive application request somewhere
else).

  What I'd like to do is pause the thread with the
deferred.deferToThread process any time a new  call comes in (this
sort of violates what I'm saying above but the number of calls going
to a particular ASterisk trunk is limited so in most cases this would
never result in more than a couple-seconds delay, which is
acceptable).

  Is there any way to control these deferred.deferToThread objects in
a more fine-grained manner?  Say from a reactor factory?  Can I
register them separately somehow, and then pause these
compute-intensive applications temporarily every time a new call comes
in?  I'm imagining something as simple as as ctrl+z and $ fg linux
terminal commands... but I appreciate that it is probably not so
straightforward.

  -Joe



From general at eepatents.com  Sat Dec 15 10:50:02 2007
From: general at eepatents.com (Ed Suominen)
Date: Sat, 15 Dec 2007 07:50:02 -0800
Subject: [Twisted-Python] finer control of deferToThread ?
In-Reply-To: <710ff8630712142110x53fa7c05yae6c0fa79db5d522@mail.gmail.com>
References: <710ff8630712142110x53fa7c05yae6c0fa79db5d522@mail.gmail.com>
Message-ID: <4763F7AA.2090800@eepatents.com>

You can do priority queuing to one or more threads using AsynQueue,
http://foss.eepatents.com/AsynQueue or python-asynqueue in Debian. Use
multiple threads and queue up the compute-intensive calls with a low
priority and the other stuff with higher priorities.

However, you will need to chop up your compute-intensive stuff into
smaller pieces for this to be helpful. (That's good asynchronous
processing practice, generally.) The priority queuing is only effective
at deciding which calls to dispatch next, and each thread call is on its
own once it is dispatched from the queue. Each call uses an entire
thread for its entire duration, and will keep the queue from dispatching
anything else to that thread while it's squatting on it, no matter how
low-priority it is.

Best regards, Ed

Josef Novak wrote:
> Hi,
>   I am writing a twisted application using StarPY fastagi API for
> Asterisk.  My application involves answering user calls, and then
> based on their responses to an IVR dialogue, running some some
> compute-intensive applications on the same server, after they hang up.
>   At the moment I am running the compute-intensive application (3rd
> party code) in a deferred.deferToThread.  The application works fine,
> however if the number of callers goes above 2-3, and one of the
> compute-intensive applications from a previous call has not finished
> up, the audio for the call gets very jumpy because of CPU usage.
>   This compute-intensive process needs to be run immediately after
> hangup, and I'd prefer to take care of everything on the same machine
> (rather than send the compute-intensive application request somewhere
> else).
> 
>   What I'd like to do is pause the thread with the
> deferred.deferToThread process any time a new  call comes in (this
> sort of violates what I'm saying above but the number of calls going
> to a particular ASterisk trunk is limited so in most cases this would
> never result in more than a couple-seconds delay, which is
> acceptable).
> 
>   Is there any way to control these deferred.deferToThread objects in
> a more fine-grained manner?  Say from a reactor factory?  Can I
> register them separately somehow, and then pause these
> compute-intensive applications temporarily every time a new call comes
> in?  I'm imagining something as simple as as ctrl+z and $ fg linux
> terminal commands... but I appreciate that it is probably not so
> straightforward.
> 
>   -Joe
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 



From dave at krondo.com  Sat Dec 15 12:45:51 2007
From: dave at krondo.com (Dave Peticolas)
Date: Sat, 15 Dec 2007 09:45:51 -0800
Subject: [Twisted-Python] finer control of deferToThread ?
In-Reply-To: <4763F7AA.2090800@eepatents.com>
References: <710ff8630712142110x53fa7c05yae6c0fa79db5d522@mail.gmail.com>
	<4763F7AA.2090800@eepatents.com>
Message-ID: <476412CF.6070400@krondo.com>

Hey Ed, I keep meaning to check this out. What's the minimum version
of Twisted you need with it?

thanks,
dave

Ed Suominen wrote:
> You can do priority queuing to one or more threads using AsynQueue,
> http://foss.eepatents.com/AsynQueue or python-asynqueue in Debian. Use
> multiple threads and queue up the compute-intensive calls with a low
> priority and the other stuff with higher priorities.
> 
> However, you will need to chop up your compute-intensive stuff into
> smaller pieces for this to be helpful. (That's good asynchronous
> processing practice, generally.) The priority queuing is only effective
> at deciding which calls to dispatch next, and each thread call is on its
> own once it is dispatched from the queue. Each call uses an entire
> thread for its entire duration, and will keep the queue from dispatching
> anything else to that thread while it's squatting on it, no matter how
> low-priority it is.
> 
> Best regards, Ed
> 
> Josef Novak wrote:
>> Hi,
>>   I am writing a twisted application using StarPY fastagi API for
>> Asterisk.  My application involves answering user calls, and then
>> based on their responses to an IVR dialogue, running some some
>> compute-intensive applications on the same server, after they hang up.
>>   At the moment I am running the compute-intensive application (3rd
>> party code) in a deferred.deferToThread.  The application works fine,
>> however if the number of callers goes above 2-3, and one of the
>> compute-intensive applications from a previous call has not finished
>> up, the audio for the call gets very jumpy because of CPU usage.
>>   This compute-intensive process needs to be run immediately after
>> hangup, and I'd prefer to take care of everything on the same machine
>> (rather than send the compute-intensive application request somewhere
>> else).
>>
>>   What I'd like to do is pause the thread with the
>> deferred.deferToThread process any time a new  call comes in (this
>> sort of violates what I'm saying above but the number of calls going
>> to a particular ASterisk trunk is limited so in most cases this would
>> never result in more than a couple-seconds delay, which is
>> acceptable).
>>
>>   Is there any way to control these deferred.deferToThread objects in
>> a more fine-grained manner?  Say from a reactor factory?  Can I
>> register them separately somehow, and then pause these
>> compute-intensive applications temporarily every time a new call comes
>> in?  I'm imagining something as simple as as ctrl+z and $ fg linux
>> terminal commands... but I appreciate that it is probably not so
>> straightforward.
>>
>>   -Joe
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From josef.robert.novak at gmail.com  Sat Dec 15 22:37:27 2007
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Sun, 16 Dec 2007 12:37:27 +0900
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 18
In-Reply-To: <E1J3aMt-0004u6-A4@cube.twistedmatrix.com>
References: <E1J3aMt-0004u6-A4@cube.twistedmatrix.com>
Message-ID: <710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>

Hmm.  This seems like a pretty nice solution, except that it seems it will
be blocking incoming calls during processing.  What I really need to do is
pause the deferToThread objects based on their pid.

How can I obtain the pid of a new deferToThread object?  If I can obtain it,
then I can just keep a persistent dictionary containing all the running
compute-intensive processes, and unregister each one in a callback after it
finishes up.  Then, every time a new call comes in, I check my persistent
pid dictionary/list,
for pid in pid_list:
  os.kill(pid, signal.SIGSTOP)

and every time a call finishes, I check the number of current calls, and
then if we're back to zero, we resume the compute intensive processes again:
if parentObj.live_calls == 0::
  for pid in parentObj.pid_list:
    os.kill(pid, signal.SIGCONT)

so, my new question is...
How can I obtain the pid of a new deferToThread object?

I'm pretty sure that, while not very elegant, this should solve my problem -
but please let me know if this sounds really, cockamamey!

-Joe

> ------------------------------
>
> Message: 2
> Date: Sat, 15 Dec 2007 07:50:02 -0800
> From: Ed Suominen <general at eepatents.com>
> Subject: Re: [Twisted-Python] finer control of deferToThread ?
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <4763F7AA.2090800 at eepatents.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> You can do priority queuing to one or more threads using AsynQueue,
> http://foss.eepatents.com/AsynQueue or python-asynqueue in Debian. Use
> multiple threads and queue up the compute-intensive calls with a low
> priority and the other stuff with higher priorities.
>
> However, you will need to chop up your compute-intensive stuff into
> smaller pieces for this to be helpful. (That's good asynchronous
> processing practice, generally.) The priority queuing is only effective
> at deciding which calls to dispatch next, and each thread call is on its
> own once it is dispatched from the queue. Each call uses an entire
> thread for its entire duration, and will keep the queue from dispatching
> anything else to that thread while it's squatting on it, no matter how
> low-priority it is.
>
> Best regards, Ed
>
> Josef Novak wrote:
> > Hi,
> >   I am writing a twisted application using StarPY fastagi API for
> > Asterisk.  My application involves answering user calls, and then
> > based on their responses to an IVR dialogue, running some some
> > compute-intensive applications on the same server, after they hang up.
> >   At the moment I am running the compute-intensive application (3rd
> > party code) in a deferred.deferToThread.  The application works fine,
> > however if the number of callers goes above 2-3, and one of the
> > compute-intensive applications from a previous call has not finished
> > up, the audio for the call gets very jumpy because of CPU usage.
> >   This compute-intensive process needs to be run immediately after
> > hangup, and I'd prefer to take care of everything on the same machine
> > (rather than send the compute-intensive application request somewhere
> > else).
> >
> >   What I'd like to do is pause the thread with the
> > deferred.deferToThread process any time a new  call comes in (this
> > sort of violates what I'm saying above but the number of calls going
> > to a particular ASterisk trunk is limited so in most cases this would
> > never result in more than a couple-seconds delay, which is
> > acceptable).
> >
> >   Is there any way to control these deferred.deferToThread objects in
> > a more fine-grained manner?  Say from a reactor factory?  Can I
> > register them separately somehow, and then pause these
> > compute-intensive applications temporarily every time a new call comes
> > in?  I'm imagining something as simple as as ctrl+z and $ fg linux
> > terminal commands... but I appreciate that it is probably not so
> > straightforward.
> >
> >   -Joe
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 45, Issue 18
> **********************************************
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071216/d4673b24/attachment.htm 

From glyph at divmod.com  Sun Dec 16 01:41:57 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 16 Dec 2007 06:41:57 -0000
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 18
In-Reply-To: <710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>
References: <E1J3aMt-0004u6-A4@cube.twistedmatrix.com>
	<710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>
Message-ID: <20071216064157.21558.1104897279.divmod.xquotient.2950@joule.divmod.com>

On 03:37 am, josef.robert.novak at gmail.com wrote:
>How can I obtain the pid of a new deferToThread object?  If I can 
>obtain it,
>then I can just keep a persistent dictionary containing all the running
>compute-intensive processes, and unregister each one in a callback 
>after it
>finishes up.  Then, every time a new call comes in, I check my 
>persistent
>pid dictionary/list,
>for pid in pid_list:
>  os.kill(pid, signal.SIGSTOP)

If this even does anything at all, it will effectively just crash or 
wedge python.  Plus, on many platforms threads don't have PIDs, because 
they're not processes, they're threads.

You need to use subprocesses to split up your long-running tasks, not 
threads.  Have a look at the documentation for reactor.spawnProcess: 
http://tinyurl.com/2blgz9



From josef.robert.novak at gmail.com  Sun Dec 16 05:04:57 2007
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Sun, 16 Dec 2007 19:04:57 +0900
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 18
In-Reply-To: <710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>
References: <E1J3aMt-0004u6-A4@cube.twistedmatrix.com>
	<710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>
Message-ID: <710ff8630712160204l10818aaga5e3587f16cd4d69@mail.gmail.com>

Ok I see this will definitely not work as we are talking about threads and
not processes so os.kill is of no use to me.  I guess there is no way to
track these new threads and stop/pause/restart them based on some other
decision logic?  Would have been nice if there were though...  -joe

2007/12/16, Josef Novak <josef.robert.novak at gmail.com>:
>
>
> Hmm.  This seems like a pretty nice solution, except that it seems it will
> be blocking incoming calls during processing.  What I really need to do is
> pause the deferToThread objects based on their pid.
>
> How can I obtain the pid of a new deferToThread object?  If I can obtain
> it, then I can just keep a persistent dictionary containing all the running
> compute-intensive processes, and unregister each one in a callback after it
> finishes up.  Then, every time a new call comes in, I check my persistent
> pid dictionary/list,
> for pid in pid_list:
>   os.kill(pid, signal.SIGSTOP)
>
> and every time a call finishes, I check the number of current calls, and
> then if we're back to zero, we resume the compute intensive processes again:
> if parentObj.live_calls == 0::
>   for pid in parentObj.pid_list:
>     os.kill(pid, signal.SIGCONT)
>
> so, my new question is...
> How can I obtain the pid of a new deferToThread object?
>
> I'm pretty sure that, while not very elegant, this should solve my problem
> - but please let me know if this sounds really, cockamamey!
>
> -Joe
>
> > ------------------------------
> >
> > Message: 2
> > Date: Sat, 15 Dec 2007 07:50:02 -0800
> > From: Ed Suominen <general at eepatents.com>
> > Subject: Re: [Twisted-Python] finer control of deferToThread ?
> > To: Twisted general discussion <twisted-python at twistedmatrix.com>
> > Message-ID: <4763F7AA.2090800 at eepatents.com >
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > You can do priority queuing to one or more threads using AsynQueue,
> > http://foss.eepatents.com/AsynQueue or python-asynqueue in Debian. Use
> > multiple threads and queue up the compute-intensive calls with a low
> > priority and the other stuff with higher priorities.
> >
> > However, you will need to chop up your compute-intensive stuff into
> > smaller pieces for this to be helpful. (That's good asynchronous
> > processing practice, generally.) The priority queuing is only effective
> > at deciding which calls to dispatch next, and each thread call is on its
>
> > own once it is dispatched from the queue. Each call uses an entire
> > thread for its entire duration, and will keep the queue from dispatching
> > anything else to that thread while it's squatting on it, no matter how
> > low-priority it is.
> >
> > Best regards, Ed
> >
> > Josef Novak wrote:
> > > Hi,
> > >   I am writing a twisted application using StarPY fastagi API for
> > > Asterisk.  My application involves answering user calls, and then
> > > based on their responses to an IVR dialogue, running some some
> > > compute-intensive applications on the same server, after they hang up.
> > >   At the moment I am running the compute-intensive application (3rd
> > > party code) in a deferred.deferToThread.  The application works fine,
> > > however if the number of callers goes above 2-3, and one of the
> > > compute-intensive applications from a previous call has not finished
> > > up, the audio for the call gets very jumpy because of CPU usage.
> > >   This compute-intensive process needs to be run immediately after
> > > hangup, and I'd prefer to take care of everything on the same machine
> > > (rather than send the compute-intensive application request somewhere
> > > else).
> > >
> > >   What I'd like to do is pause the thread with the
> > > deferred.deferToThread process any time a new  call comes in (this
> > > sort of violates what I'm saying above but the number of calls going
> > > to a particular ASterisk trunk is limited so in most cases this would
> > > never result in more than a couple-seconds delay, which is
> > > acceptable).
> > >
> > >   Is there any way to control these deferred.deferToThread objects in
> > > a more fine-grained manner?  Say from a reactor factory?  Can I
> > > register them separately somehow, and then pause these
> > > compute-intensive applications temporarily every time a new call comes
> > > in?  I'm imagining something as simple as as ctrl+z and $ fg linux
> > > terminal commands... but I appreciate that it is probably not so
> > > straightforward.
> > >
> > >   -Joe
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> > >
> > >
> >
> >
> >
> > ------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > End of Twisted-Python Digest, Vol 45, Issue 18
> > **********************************************
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071216/b57022bb/attachment.htm 

From glyph at divmod.com  Sun Dec 16 05:13:08 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 16 Dec 2007 10:13:08 -0000
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 18
In-Reply-To: <710ff8630712160204l10818aaga5e3587f16cd4d69@mail.gmail.com>
References: <E1J3aMt-0004u6-A4@cube.twistedmatrix.com>
	<710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>
	<710ff8630712160204l10818aaga5e3587f16cd4d69@mail.gmail.com>
Message-ID: <20071216101308.21558.555241615.divmod.xquotient.2970@joule.divmod.com>

On 10:04 am, josef.robert.novak at gmail.com wrote:
>Ok I see this will definitely not work as we are talking about threads 
>and
>not processes so os.kill is of no use to me.  I guess there is no way 
>to
>track these new threads and stop/pause/restart them based on some other
>decision logic?  Would have been nice if there were though...  -joe

If you really think about it (and I mean really think about it, computer 
science-y stuff, understanding what sharing state in threads really 
means, how the Python interpreter happens to work now, considering all 
the ways it could work) the idea of stopping and restarting threads is 
inherently broken.  You might be able to make it work, by accident, for 
a few simple cases, but there would be no reasonable way to guarantee 
safety except for forcing the explicit use of channels to communicate 
between threads.  If you're doing that, though, you're effectively using 
processes. SIGSTOP and friends work just fine on them :).



From josef.robert.novak at gmail.com  Sun Dec 16 17:54:33 2007
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Mon, 17 Dec 2007 07:54:33 +0900
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 20
In-Reply-To: <E1J3wqS-0006Fh-11@cube.twistedmatrix.com>
References: <E1J3wqS-0006Fh-11@cube.twistedmatrix.com>
Message-ID: <710ff8630712161454v51b36895h192240ae6387c18@mail.gmail.com>

Thank you for all the feedback, it was quite useful.  I'm still quite new to
twisted, threads and quite the novice programmer, as my questions indicate;
this project has been quite enlightening. As a solution I decided that
passing off the compute intensive operations in a proper callback to another
(set of) machine(s), which is dedicated to these jobs was a more viable
longterm solution than this start-stop madness I initially came up with.
However, attempting it initially resulted in a great opportunity for me to
learn a bit about threads and processes, so it wasn't necessarily a waste of
time.
Thanks again!
-joe

2007/12/17, twisted-python-request at twistedmatrix.com <
twisted-python-request at twistedmatrix.com>:
>
> Send Twisted-Python mailing list submissions to
>         twisted-python at twistedmatrix.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> or, via email, send a message with subject or body 'help' to
>         twisted-python-request at twistedmatrix.com
>
> You can reach the person managing the list at
>         twisted-python-owner at twistedmatrix.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Twisted-Python digest..."
>
>
> Today's Topics:
>
>    1. Re: Re: Twisted-Python Digest, Vol 45, Issue 18 (glyph at divmod.com)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 16 Dec 2007 10:13:08 -0000
> From: glyph at divmod.com
> Subject: Re: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue
>         18
> To: twisted-python at twistedmatrix.com
> Message-ID:
>         <
> 20071216101308.21558.555241615.divmod.xquotient.2970 at joule.divmod.com>
>
> Content-Type: text/plain; charset="utf-8"; format="flowed"
>
> On 10:04 am, josef.robert.novak at gmail.com wrote:
> >Ok I see this will definitely not work as we are talking about threads
> >and
> >not processes so os.kill is of no use to me.  I guess there is no way
> >to
> >track these new threads and stop/pause/restart them based on some other
> >decision logic?  Would have been nice if there were though...  -joe
>
> If you really think about it (and I mean really think about it, computer
> science-y stuff, understanding what sharing state in threads really
> means, how the Python interpreter happens to work now, considering all
> the ways it could work) the idea of stopping and restarting threads is
> inherently broken.  You might be able to make it work, by accident, for
> a few simple cases, but there would be no reasonable way to guarantee
> safety except for forcing the explicit use of channels to communicate
> between threads.  If you're doing that, though, you're effectively using
> processes. SIGSTOP and friends work just fine on them :).
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 45, Issue 20
> **********************************************
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071217/2fca7dd4/attachment.htm 

From general at eepatents.com  Mon Dec 17 10:15:45 2007
From: general at eepatents.com (Ed Suominen)
Date: Mon, 17 Dec 2007 10:15:45 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 20
In-Reply-To: <710ff8630712161454v51b36895h192240ae6387c18@mail.gmail.com>
References: <E1J3wqS-0006Fh-11@cube.twistedmatrix.com>
	<710ff8630712161454v51b36895h192240ae6387c18@mail.gmail.com>
Message-ID: <476692A1.2060308@eepatents.com>

Yes, it sounds like your time investigating this was well spent.
Asynchronous programming is a whole new way of thinking. And after
programming with Twisted for several years now, I really can't think any
other way; blocking for results just seems backwards somehow.

In case anyone's interested, my own work with CPU-intensive processing
involves Monte Carlo analysis and Bayesian inference of statistical
models. I'm currently performing probabilistic random walks in 6+
dimensional parameter spaces using a cluster of PCs and processor cores.
All of the nodes are managed via my AsynCluster package,
http://foss.eepatents.com/AsynCluster, which is built on AsynQueue and
of course Twisted itself. The main script instantiates a job client that
directs the AsynCluster server to dispatch hundreds of jobs at a time to
the cluster, the deferred results of which are processed with a single
"defer.gatherResults" call for each of thousands of iterations in a
"defer.deferredGenerator" loop.

Some of the nodes are significantly faster than others. That's fine,
because the dispatch queue just feeds more job calls to the faster
nodes. Right now each run of a million or so model evaluations is taking
about an hour apiece on 5-6 nodes. My new 3+ GHz quad-core PC is nearly
done, so things are about to ramp up some more...

By the way, if Twisted Matrix Laboratories wants to use the above as a
success story, they are welcome to do so. Twisted is a triumph of
computer science and the foundation of my current work.

Best regards,
Ed Suominen
http://foss.eepatents.com


Josef Novak wrote:
> Thank you for all the feedback, it was quite useful.  I'm still quite
> new to twisted, threads and quite the novice programmer, as my questions
> indicate; this project has been quite enlightening. As a solution I
> decided that passing off the compute intensive operations in a proper
> callback to another (set of) machine(s), which is dedicated to these
> jobs was a more viable longterm solution than this start-stop madness I
> initially came up with.  However, attempting it initially resulted in a
> great opportunity for me to learn a bit about threads and processes, so
> it wasn't necessarily a waste of time.
> Thanks again!
> -joe
> 
> 2007/12/17, twisted-python-request at twistedmatrix.com
> <mailto:twisted-python-request at twistedmatrix.com> <
> twisted-python-request at twistedmatrix.com
> <mailto:twisted-python-request at twistedmatrix.com>>:
> 
>     Send Twisted-Python mailing list submissions to
>             twisted-python at twistedmatrix.com
>     <mailto:twisted-python at twistedmatrix.com>
> 
>     To subscribe or unsubscribe via the World Wide Web, visit
>             
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>     or, via email, send a message with subject or body 'help' to
>             twisted-python-request at twistedmatrix.com
>     <mailto:twisted-python-request at twistedmatrix.com>
> 
>     You can reach the person managing the list at
>             twisted-python-owner at twistedmatrix.com
>     <mailto:twisted-python-owner at twistedmatrix.com>
> 
>     When replying, please edit your Subject line so it is more specific
>     than "Re: Contents of Twisted-Python digest..."
> 
> 
>     Today's Topics:
> 
>        1. Re: Re: Twisted-Python Digest, Vol 45, Issue 18
>     (glyph at divmod.com <mailto:glyph at divmod.com>)
> 
> 
>     ----------------------------------------------------------------------
> 
>     Message: 1
>     Date: Sun, 16 Dec 2007 10:13:08 -0000
>     From: glyph at divmod.com <mailto:glyph at divmod.com>
>     Subject: Re: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue
>             18
>     To: twisted-python at twistedmatrix.com
>     <mailto:twisted-python at twistedmatrix.com>
>     Message-ID:
>             <
>     20071216101308.21558.555241615.divmod.xquotient.2970 at joule.divmod.com
>     <mailto:20071216101308.21558.555241615.divmod.xquotient.2970 at joule.divmod.com>>
> 
>     Content-Type: text/plain; charset="utf-8"; format="flowed"
> 
>     On 10:04 am, josef.robert.novak at gmail.com
>     <mailto:josef.robert.novak at gmail.com> wrote:
>     >Ok I see this will definitely not work as we are talking about threads
>     >and
>     >not processes so os.kill is of no use to me.  I guess there is no way
>     >to
>     >track these new threads and stop/pause/restart them based on some
>     other
>     >decision logic?  Would have been nice if there were though...  -joe
> 
>     If you really think about it (and I mean really think about it, computer
>     science-y stuff, understanding what sharing state in threads really
>     means, how the Python interpreter happens to work now, considering all
>     the ways it could work) the idea of stopping and restarting threads is
>     inherently broken.  You might be able to make it work, by accident, for
>     a few simple cases, but there would be no reasonable way to guarantee
>     safety except for forcing the explicit use of channels to communicate
>     between threads.  If you're doing that, though, you're effectively
>     using
>     processes. SIGSTOP and friends work just fine on them :).
> 
> 
> 
>     ------------------------------
> 
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
>     End of Twisted-Python Digest, Vol 45, Issue 20
>     **********************************************
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 



From dfarrell at mypublisher.com  Mon Dec 17 10:39:16 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Mon, 17 Dec 2007 10:39:16 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 20
In-Reply-To: <476692A1.2060308@eepatents.com>
Message-ID: <318F79422ADC5041A93343721F84474D8B0656@exchange.mypublisher.local>

Ed,

I've been coding for awhile, but am fairly new to actually using
Twisted. I'm very interested the work you are doing because of a project
I'm thinking of at work. It's not nearly as complicated as your project,
and though we have a number of Linux servers at our disposal, they
aren't clustered at all. We manufacture photobooks, and I'd like to make
our manufacturing workflow more "real time" than it is. What I was
thinking of was building a Twisted backbone for the system and
allocating long term processing elements of the workflow to other
"nodes" using Pyro or PP (the python parallel processing module) tied to
DeferToThread objects. But your solution looks interesting and I'm going
to read more of the link you provide. Any suggestions you might have,
places you could point me for guidance would be greatly appreaciated.

Thanks for the link you provided,
Doug Farrell

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Ed
Suominen
Sent: Monday, December 17, 2007 10:16 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue
20

Yes, it sounds like your time investigating this was well spent.
Asynchronous programming is a whole new way of thinking. And after
programming with Twisted for several years now, I really can't think any
other way; blocking for results just seems backwards somehow.

In case anyone's interested, my own work with CPU-intensive processing
involves Monte Carlo analysis and Bayesian inference of statistical
models. I'm currently performing probabilistic random walks in 6+
dimensional parameter spaces using a cluster of PCs and processor cores.
All of the nodes are managed via my AsynCluster package,
http://foss.eepatents.com/AsynCluster, which is built on AsynQueue and
of course Twisted itself. The main script instantiates a job client that
directs the AsynCluster server to dispatch hundreds of jobs at a time to
the cluster, the deferred results of which are processed with a single
"defer.gatherResults" call for each of thousands of iterations in a
"defer.deferredGenerator" loop.

Some of the nodes are significantly faster than others. That's fine,
because the dispatch queue just feeds more job calls to the faster
nodes. Right now each run of a million or so model evaluations is taking
about an hour apiece on 5-6 nodes. My new 3+ GHz quad-core PC is nearly
done, so things are about to ramp up some more...

By the way, if Twisted Matrix Laboratories wants to use the above as a
success story, they are welcome to do so. Twisted is a triumph of
computer science and the foundation of my current work.

Best regards,
Ed Suominen
http://foss.eepatents.com


Josef Novak wrote:
> Thank you for all the feedback, it was quite useful.  I'm still quite
> new to twisted, threads and quite the novice programmer, as my
questions
> indicate; this project has been quite enlightening. As a solution I
> decided that passing off the compute intensive operations in a proper
> callback to another (set of) machine(s), which is dedicated to these
> jobs was a more viable longterm solution than this start-stop madness
I
> initially came up with.  However, attempting it initially resulted in
a
> great opportunity for me to learn a bit about threads and processes,
so
> it wasn't necessarily a waste of time.
> Thanks again!
> -joe
> 
> 2007/12/17, twisted-python-request at twistedmatrix.com
> <mailto:twisted-python-request at twistedmatrix.com> <
> twisted-python-request at twistedmatrix.com
> <mailto:twisted-python-request at twistedmatrix.com>>:
> 
>     Send Twisted-Python mailing list submissions to
>             twisted-python at twistedmatrix.com
>     <mailto:twisted-python at twistedmatrix.com>
> 
>     To subscribe or unsubscribe via the World Wide Web, visit
>             
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>     or, via email, send a message with subject or body 'help' to
>             twisted-python-request at twistedmatrix.com
>     <mailto:twisted-python-request at twistedmatrix.com>
> 
>     You can reach the person managing the list at
>             twisted-python-owner at twistedmatrix.com
>     <mailto:twisted-python-owner at twistedmatrix.com>
> 
>     When replying, please edit your Subject line so it is more
specific
>     than "Re: Contents of Twisted-Python digest..."
> 
> 
>     Today's Topics:
> 
>        1. Re: Re: Twisted-Python Digest, Vol 45, Issue 18
>     (glyph at divmod.com <mailto:glyph at divmod.com>)
> 
> 
>
----------------------------------------------------------------------
> 
>     Message: 1
>     Date: Sun, 16 Dec 2007 10:13:08 -0000
>     From: glyph at divmod.com <mailto:glyph at divmod.com>
>     Subject: Re: [Twisted-Python] Re: Twisted-Python Digest, Vol 45,
Issue
>             18
>     To: twisted-python at twistedmatrix.com
>     <mailto:twisted-python at twistedmatrix.com>
>     Message-ID:
>             <
>
20071216101308.21558.555241615.divmod.xquotient.2970 at joule.divmod.com
>
<mailto:20071216101308.21558.555241615.divmod.xquotient.2970 at joule.divmo
d.com>>
> 
>     Content-Type: text/plain; charset="utf-8"; format="flowed"
> 
>     On 10:04 am, josef.robert.novak at gmail.com
>     <mailto:josef.robert.novak at gmail.com> wrote:
>     >Ok I see this will definitely not work as we are talking about
threads
>     >and
>     >not processes so os.kill is of no use to me.  I guess there is no
way
>     >to
>     >track these new threads and stop/pause/restart them based on some
>     other
>     >decision logic?  Would have been nice if there were though...
-joe
> 
>     If you really think about it (and I mean really think about it,
computer
>     science-y stuff, understanding what sharing state in threads
really
>     means, how the Python interpreter happens to work now, considering
all
>     the ways it could work) the idea of stopping and restarting
threads is
>     inherently broken.  You might be able to make it work, by
accident, for
>     a few simple cases, but there would be no reasonable way to
guarantee
>     safety except for forcing the explicit use of channels to
communicate
>     between threads.  If you're doing that, though, you're effectively
>     using
>     processes. SIGSTOP and friends work just fine on them :).
> 
> 
> 
>     ------------------------------
> 
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
>     End of Twisted-Python Digest, Vol 45, Issue 20
>     **********************************************
> 
> 
> 
>
------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dfarrell at mypublisher.com  Mon Dec 17 14:44:55 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Mon, 17 Dec 2007 14:44:55 -0500
Subject: [Twisted-Python] twisted, SMP and clusters
Message-ID: <318F79422ADC5041A93343721F84474D8B065B@exchange.mypublisher.local>

Hi all,

 

I'm considering using Twisted to build a soft realtime system to control a workflow for a physical production facility. Although there would be some socket work for it to do (XML-RPC, logging, etc) I also like it because of the nice way it can be daemonized. One of my goals for this project is to take better advantage of our multiple Linux servers, each of which has multiple CPU's with dual cores. I'd like to take our workflow objects that are fairly long running state machines and cut them loose on other cores/CPUs/servers if I can. So here's my question: should I be looking at twisted.spread for this kind of work? Can the Parallel Python or Pyro projects be incorporated into Twisted, and if so, what kinds of things should I watch out for, or is it even possible? I'm thinking if I use Parallel Python or Pyro I could make remote calls to our objects in a DeferToThread object and get back the results/errors via callbacks. I'm still really pretty new to Twisted, so forgive my na?ve questions if they are so.

 

Thanks in advance,

Doug

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071217/d62de5dd/attachment.htm 

From glyph at divmod.com  Mon Dec 17 17:17:16 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 17 Dec 2007 22:17:16 -0000
Subject: [Twisted-Python] twisted, SMP and clusters
In-Reply-To: <318F79422ADC5041A93343721F84474D8B065B@exchange.mypublisher.local>
References: <318F79422ADC5041A93343721F84474D8B065B@exchange.mypublisher.local>
Message-ID: <20071217221716.21558.1652062512.divmod.xquotient.3092@joule.divmod.com>

On 07:44 pm, dfarrell at mypublisher.com wrote:
>I'm considering using Twisted to build a soft realtime system to 
>control a workflow for a physical production facility. Although there 
>would be some socket work for it to do (XML-RPC, logging, etc) I also 
>like it because of the nice way it can be daemonized. One of my goals 
>for this project is to take better advantage of our multiple Linux 
>servers, each of which has multiple CPU's with dual cores. I'd like to 
>take our workflow objects that are fairly long running state machines 
>and cut them loose on other cores/CPUs/servers if I can. So here's my 
>question: should I be looking at twisted.spread for this kind of work? 
>Can the Parallel Python or Pyro projects be incorporated into Twisted, 
>and if so, what kinds of things should I watch out for, or is it even 
>possible? I'm thinking if I use Parallel Python or Pyro I could make 
>remote calls to our objects in a DeferToThread object and get back the 
>results/errors via callbacks. I'm still really pretty new to Twisted, 
>so forgive my na?ve questions if they are so.

PB (i.e. twisted.spread.pb) might be appropriate to this sort of work. 
It makes communicating between objects in multiple Twisted processes 
fairly easy.

Depending on your requirements, so might a lot of Twisted things.  If 
other code is talking to this, AMP (twisted.protocols.amp) or XMLRPC 
(twisted.web.xmlrpc) might also be appropriate.

Pyro and PP, while potentially valid approaches to your problem, are 
more or less incompatible with Twisted.  They *could* be made to work 
togther, there's no actual technical incompatibility, but they're geared 
towards working with entirely different programming paradigms.

When it's all said and done, none of these things is really a turn-key 
distributed programming environment.  They're just different ways to 
communicate messages between nodes.  In order to say what would be most 
appropriate to your problem domain, you'd need to describe your 
environment and your requirements a bit better.  For obvious reasons, 
though, you're not likely to get a suggestion other than "use Twisted" 
in this particular venue :).

It sounds like Ed's AsynCluster might provide the sort of structure (on 
top of PB) that you're looking for, but I don't know much about it, and 
I've never used it.  However, unlike these other tools, it's not just a 
messaging system, it is specifically for doing cluster computing.



From exarkun at twistedmatrix.com  Mon Dec 17 17:40:33 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Dec 2007 22:40:33 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1197931233.62.473715163@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071217/a45c4e6b/attachment.htm 

From general at eepatents.com  Mon Dec 17 21:44:45 2007
From: general at eepatents.com (Ed Suominen)
Date: Mon, 17 Dec 2007 21:44:45 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 20
In-Reply-To: <318F79422ADC5041A93343721F84474D8B0656@exchange.mypublisher.local>
References: <318F79422ADC5041A93343721F84474D8B0656@exchange.mypublisher.local>
Message-ID: <4767341D.9060805@eepatents.com>

Doug Farrell wrote:
> Ed,
> 
> I've been coding for awhile, but am fairly new to actually using
> Twisted. I'm very interested the work you are doing because of a project
> I'm thinking of at work. It's not nearly as complicated as your project,
> and though we have a number of Linux servers at our disposal, they
> aren't clustered at all. We manufacture photobooks, and I'd like to make
> our manufacturing workflow more "real time" than it is. What I was
> thinking of was building a Twisted backbone for the system and
> allocating long term processing elements of the workflow to other
> "nodes" using Pyro or PP (the python parallel processing module) tied to
> DeferToThread objects. But your solution looks interesting and I'm going
> to read more of the link you provide. Any suggestions you might have,
> places you could point me for guidance would be greatly appreaciated.
> 
> Thanks for the link you provided,

Doug, I'll try to write up some sort of an "Asynchronous Clustering
HOW-TO" on the AsynCluster wiki site in the next few days.

Best regards, Ed



From dmarfil at citic.es  Tue Dec 18 03:51:40 2007
From: dmarfil at citic.es (Daniel Marfil)
Date: Tue, 18 Dec 2007 09:51:40 +0100
Subject: [Twisted-Python] SMS sending with Python
Message-ID: <47678A1C.6000604@citic.es>

Hi, my name is Daniel from Spain, and this is my first post here ;-)
I've been looking for something in twisted that allows me to send SMS 
messages through a server, but got no luck until the moment.
Could anyone give me a clue to begin?

Thank you in advance,

Daniel




From adelagon at gmail.com  Tue Dec 18 04:21:52 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 18 Dec 2007 17:21:52 +0800
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <47678A1C.6000604@citic.es>
References: <47678A1C.6000604@citic.es>
Message-ID: <7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>

What is your SMS provider? What protocols are they using? Is it SMPP, CIMD2,
CSP?



On Dec 18, 2007 4:51 PM, Daniel Marfil <dmarfil at citic.es> wrote:

> Hi, my name is Daniel from Spain, and this is my first post here ;-)
> I've been looking for something in twisted that allows me to send SMS
> messages through a server, but got no luck until the moment.
> Could anyone give me a clue to begin?
>
> Thank you in advance,
>
> Daniel
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071218/6de7e31f/attachment.htm 

From dmarfil at citic.es  Tue Dec 18 04:59:44 2007
From: dmarfil at citic.es (Daniel Marfil)
Date: Tue, 18 Dec 2007 10:59:44 +0100
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>
References: <47678A1C.6000604@citic.es>
	<7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>
Message-ID: <47679A10.9050302@citic.es>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071218/7c7dba05/attachment.htm 

From matusis at yahoo.com  Tue Dec 18 05:01:39 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Tue, 18 Dec 2007 02:01:39 -0800
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>
References: <47678A1C.6000604@citic.es>
	<7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>
Message-ID: <02f501c8415c$fbc0eaa0$f342bfe0$@com>

You can just send emails to most providers
http://en.wikipedia.org/wiki/SMS_gateways
(section "Email to SMS")

I am not sure you even need Twisted for that, you could just have a for loop
sending emails I suppose... 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Alvin Delagon
Sent: Tuesday, December 18, 2007 1:22 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] SMS sending with Python

What is your SMS provider? What protocols are they using? Is it SMPP, CIMD2,
CSP?


On Dec 18, 2007 4:51 PM, Daniel Marfil <dmarfil at citic.es> wrote: 
Hi, my name is Daniel from Spain, and this is my first post here ;-)
I've been looking for something in twisted that allows me to send SMS 
messages through a server, but got no luck until the moment.
Could anyone give me a clue to begin?

Thank you in advance,

Daniel


_______________________________________________
Twisted-Python mailing list 
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 





From adelagon at gmail.com  Tue Dec 18 05:56:13 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 18 Dec 2007 18:56:13 +0800
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <02f501c8415c$fbc0eaa0$f342bfe0$@com>
References: <47678A1C.6000604@citic.es>
	<7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>
	<02f501c8415c$fbc0eaa0$f342bfe0$@com>
Message-ID: <7a01f6c00712180256j2ce311c9ncb96f329c493808@mail.gmail.com>

So far there's no free available SMS Gateway protocol implementation in
python if you search through the net (there is one called pySMPP but isn't
maintained anymore. You can download it to have an idea).

I strongly recommend twisted-python in writing an SMS gateway
implementation. It's a very powerful tool once you tame it as long you have
in-depth understanding of what protocol you're going to implement (kudos to
twisted-python developers). :)

Just some advice to help you get going:
CIMD2 (Nokia)- can be implemented by twisted.protocols.basic.LineReceiver
CSP (Terabyte)- is just an exchange of http posts so it can be implemented
by twisted.web
SMPP (mBlox)- is packet based twisted.internet.protocol.Protocol + struct
will do the trick.

Some telcos might provide a different protocol though but these three are
the popular ones.


On Dec 18, 2007 6:01 PM, Alec Matusis <matusis at yahoo.com> wrote:

> You can just send emails to most providers
> http://en.wikipedia.org/wiki/SMS_gateways
> (section "Email to SMS")
>
> I am not sure you even need Twisted for that, you could just have a for
> loop
> sending emails I suppose...
>
> From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Alvin
> Delagon
> Sent: Tuesday, December 18, 2007 1:22 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] SMS sending with Python
>
> What is your SMS provider? What protocols are they using? Is it SMPP,
> CIMD2,
> CSP?
>
>
> On Dec 18, 2007 4:51 PM, Daniel Marfil <dmarfil at citic.es> wrote:
> Hi, my name is Daniel from Spain, and this is my first post here ;-)
> I've been looking for something in twisted that allows me to send SMS
> messages through a server, but got no luck until the moment.
> Could anyone give me a clue to begin?
>
> Thank you in advance,
>
> Daniel
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071218/d28246b5/attachment.htm 

From dmarfil at citic.es  Tue Dec 18 07:05:40 2007
From: dmarfil at citic.es (Daniel Marfil)
Date: Tue, 18 Dec 2007 13:05:40 +0100
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <7a01f6c00712180256j2ce311c9ncb96f329c493808@mail.gmail.com>
References: <47678A1C.6000604@citic.es>	<7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>	<02f501c8415c$fbc0eaa0$f342bfe0$@com>
	<7a01f6c00712180256j2ce311c9ncb96f329c493808@mail.gmail.com>
Message-ID: <4767B794.9080407@citic.es>

Thank you very much for your help, Alvin and Alec, I've been having a 
look at your links and looks like a great starting point ;-)


Alvin Delagon escribi?:
> So far there's no free available SMS Gateway protocol implementation 
> in python if you search through the net (there is one called pySMPP 
> but isn't maintained anymore. You can download it to have an idea).
>
> I strongly recommend twisted-python in writing an SMS gateway 
> implementation. It's a very powerful tool once you tame it as long you 
> have in-depth understanding of what protocol you're going to implement 
> (kudos to twisted-python developers). :)
>
> Just some advice to help you get going:
> CIMD2 (Nokia)- can be implemented by twisted.protocols.basic.LineReceiver
> CSP (Terabyte)- is just an exchange of http posts so it can be 
> implemented by twisted.web
> SMPP (mBlox)- is packet based twisted.internet.protocol.Protocol + 
> struct will do the trick.
>
> Some telcos might provide a different protocol though but these three 
> are the popular ones.
>
>
> On Dec 18, 2007 6:01 PM, Alec Matusis <matusis at yahoo.com 
> <mailto:matusis at yahoo.com>> wrote:
>
>     You can just send emails to most providers
>     http://en.wikipedia.org/wiki/SMS_gateways
>     (section "Email to SMS")
>
>     I am not sure you even need Twisted for that, you could just have
>     a for loop
>     sending emails I suppose...
>
>     From: twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>
>     [mailto:twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>] On Behalf Of
>     Alvin Delagon
>     Sent: Tuesday, December 18, 2007 1:22 AM
>     To: Twisted general discussion
>     Subject: Re: [Twisted-Python] SMS sending with Python
>
>     What is your SMS provider? What protocols are they using? Is it
>     SMPP, CIMD2,
>     CSP?
>
>
>     On Dec 18, 2007 4:51 PM, Daniel Marfil <dmarfil at citic.es
>     <mailto:dmarfil at citic.es>> wrote:
>     Hi, my name is Daniel from Spain, and this is my first post here ;-)
>     I've been looking for something in twisted that allows me to send SMS
>     messages through a server, but got no luck until the moment.
>     Could anyone give me a clue to begin?
>
>     Thank you in advance,
>
>     Daniel
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>     <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
>
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From itamar at itamarst.org  Tue Dec 18 08:24:30 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Dec 2007 08:24:30 -0500
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <47678A1C.6000604@citic.es>
References: <47678A1C.6000604@citic.es>
Message-ID: <1197984270.21999.17.camel@localhost.localdomain>


On Tue, 2007-12-18 at 09:51 +0100, Daniel Marfil wrote:
> Hi, my name is Daniel from Spain, and this is my first post here ;-)
> I've been looking for something in twisted that allows me to send SMS 
> messages through a server, but got no luck until the moment.
> Could anyone give me a clue to begin?

In the US at least you can send SMS messages using AIM (so, using the
twisted.words.protocols.oscar module), though that means less control
over formatting. And they'll stop accepting messages if you send too
many, probably. 

For personal use, however, and assuming it works in Spain, that's an
easy way to go (send a message to +<countrycode><phonenumber>, e.g.
+15551234567)




From dfarrell at mypublisher.com  Tue Dec 18 08:37:01 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Tue, 18 Dec 2007 08:37:01 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 20
In-Reply-To: <4767341D.9060805@eepatents.com>
Message-ID: <318F79422ADC5041A93343721F84474D8B0661@exchange.mypublisher.local>

Thanks Ed, that's very kind of you and I appreciate your efforts to do
so.

Doug

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Ed
Suominen
Sent: Monday, December 17, 2007 9:45 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue
20

Doug Farrell wrote:
> Ed,
> 
> I've been coding for awhile, but am fairly new to actually using
> Twisted. I'm very interested the work you are doing because of a
project
> I'm thinking of at work. It's not nearly as complicated as your
project,
> and though we have a number of Linux servers at our disposal, they
> aren't clustered at all. We manufacture photobooks, and I'd like to
make
> our manufacturing workflow more "real time" than it is. What I was
> thinking of was building a Twisted backbone for the system and
> allocating long term processing elements of the workflow to other
> "nodes" using Pyro or PP (the python parallel processing module) tied
to
> DeferToThread objects. But your solution looks interesting and I'm
going
> to read more of the link you provide. Any suggestions you might have,
> places you could point me for guidance would be greatly appreaciated.
> 
> Thanks for the link you provided,

Doug, I'll try to write up some sort of an "Asynchronous Clustering
HOW-TO" on the AsynCluster wiki site in the next few days.

Best regards, Ed

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dfarrell at mypublisher.com  Tue Dec 18 08:42:06 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Tue, 18 Dec 2007 08:42:06 -0500
Subject: [Twisted-Python] twisted, SMP and clusters
In-Reply-To: <20071217221716.21558.1652062512.divmod.xquotient.3092@joule.divmod.com>
Message-ID: <318F79422ADC5041A93343721F84474D8B0662@exchange.mypublisher.local>

Thanks for the response. I was thinking Pyro and PP might be
incompatible with Twisted, since they already have communication
mechanisms in them, but wasn't sure. I've also got a response from Ed
that he might try to get some sample code up on the AsynCluster site to
show how something like this could be implemented. I've got to better
define my goals and design and perhaps post that.

Again, thanks for the response,
Doug

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of
glyph at divmod.com
Sent: Monday, December 17, 2007 5:17 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] twisted, SMP and clusters

On 07:44 pm, dfarrell at mypublisher.com wrote:
>I'm considering using Twisted to build a soft realtime system to 
>control a workflow for a physical production facility. Although there 
>would be some socket work for it to do (XML-RPC, logging, etc) I also 
>like it because of the nice way it can be daemonized. One of my goals 
>for this project is to take better advantage of our multiple Linux 
>servers, each of which has multiple CPU's with dual cores. I'd like to 
>take our workflow objects that are fairly long running state machines 
>and cut them loose on other cores/CPUs/servers if I can. So here's my 
>question: should I be looking at twisted.spread for this kind of work? 
>Can the Parallel Python or Pyro projects be incorporated into Twisted, 
>and if so, what kinds of things should I watch out for, or is it even 
>possible? I'm thinking if I use Parallel Python or Pyro I could make 
>remote calls to our objects in a DeferToThread object and get back the 
>results/errors via callbacks. I'm still really pretty new to Twisted, 
>so forgive my nave questions if they are so.

PB (i.e. twisted.spread.pb) might be appropriate to this sort of work. 
It makes communicating between objects in multiple Twisted processes 
fairly easy.

Depending on your requirements, so might a lot of Twisted things.  If 
other code is talking to this, AMP (twisted.protocols.amp) or XMLRPC 
(twisted.web.xmlrpc) might also be appropriate.

Pyro and PP, while potentially valid approaches to your problem, are 
more or less incompatible with Twisted.  They *could* be made to work 
togther, there's no actual technical incompatibility, but they're geared

towards working with entirely different programming paradigms.

When it's all said and done, none of these things is really a turn-key 
distributed programming environment.  They're just different ways to 
communicate messages between nodes.  In order to say what would be most 
appropriate to your problem domain, you'd need to describe your 
environment and your requirements a bit better.  For obvious reasons, 
though, you're not likely to get a suggestion other than "use Twisted" 
in this particular venue :).

It sounds like Ed's AsynCluster might provide the sort of structure (on 
top of PB) that you're looking for, but I don't know much about it, and 
I've never used it.  However, unlike these other tools, it's not just a 
messaging system, it is specifically for doing cluster computing.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From sajitrao at gmail.com  Tue Dec 18 12:18:48 2007
From: sajitrao at gmail.com (Sajit Rao)
Date: Tue, 18 Dec 2007 12:18:48 -0500
Subject: [Twisted-Python] Server/Client bi-directional data-transfer -
	need a solution
In-Reply-To: <200712121120.27558.maarten@treewalker.org>
References: <e0d23f6a0712111907y3cfd073dr52312c40209658c1@mail.gmail.com>
	<200712121120.27558.maarten@treewalker.org>
Message-ID: <e0d23f6a0712180918h3fea2932wef0d6767cb4f228f@mail.gmail.com>

Thanks for your reply, Maarten.

I'm still chewing over it. In answer to your questions:

I will be sending short strings between client and server (bi-directionally)
most of the time (> 100 times a day) and ocassionaly files (each of size 5
MB or less and > 10 but <100 times a day).

I wouldn't mind sending strings or files along the same channel - but I
don't know how to do that

While I like the brevity of python and realize that Twisted deffereds are
the heart of the async model,  I'm hampered by the scant documentation and
code fragments.

Could someone point me to how to send raw strings or binary files over the
same channel and have the other side interpret the data correctly?

Thanks,

Sajit

On Dec 12, 2007 5:20 AM, Maarten ter Huurne <maarten at treewalker.org> wrote:

> On Wednesday 12 December 2007, Sajit Rao wrote:
>
> > *The Goal:*
> >
> >    - I'm trying to write a simple server/client app where the client can
> >    send the server either a small string like "hello" OR a small file
> > (txt, pdf, ppt,.. let's say < 5MB ).
> >    - The server needs to figure out if the data it received is a simple
> >    string or a file and symmetrically may decide to send back to the
> > client a simple string or a small file.
> >    - As a bonus, It's highly desirable that the transfer be secure - but
> >    it's ok for the first version if it isn't
>
> Would an HTTP POST suffice? You could easily test it using a web browser
> or
> a program like wget and adding a secure channel is done by switching from
> HTTP to HTTPS later.
>
> If your application works like an instant messenger, consider using
> Twisted
> Words, for example with the XMPP (Jabber) protocol.
>
> Does the client/server connection have to be able to pass a firewall or
> proxy? In that case HTTP or something that can be run over HTTP would be a
> big advantage.
>
> > *Questions:*
> >
> > What's the cleanest way to accomplish this? I've been looking at the
> > single Howto/Example that exists for *twisted.conch* but still can't
> > understand several things. In particular
> >
> >    1. Should I create two separate channels between server and client -
> >    one for simple strings and one for files so that the client or server
> > knows the type of data on that channel?
>
> That depends on what protocol you want to use over the channel(s). If the
> protocol can send series of text strings and binaries over the same
> channel
> then you need only one. But if having separate channels helps in
> simplifying the protocol, then that might be better.
>
> One design decision to make is whether to keep the channel(s) open the
> whole
> time or open them when there is new data and then close them when the
> transfer is done. Or maybe keep the text string channel open all the time
> and open a file transfer channel on demand.
>
> What kind of performance characteristics do you need? Does latency on the
> text strings matter? Are you going to transfer 10 files a day or 10000?
>
> >    2. Should the files be mime-encoded at one end and mime-decoded at
> the
> >    other so that file-type is automatically handled?
>
> MIME encoding gives you a way to send the file name and type and it can be
> used over a text stream. However, the encoding of the data itself is not
> really needed if your channel is 8-bit clear and everything except e-mail
> is 8-bit clear nowadays (I think). For small files the overhead is
> neglible
> though.
>
> >    3. I've read that there is a python package called paramiko that
> >    implements ssh2 transfer - how does this compare with twisted.conch?
>
> I don't know. One thing you could look at is which main loop you want to
> use. If you want to use Twisted's reactor, conch would better integrate
> with that of course. But if you want to use a GUI toolkit not supported by
> Twisted, it would take some effort to merge the main loops, so then
> running
> paramiko in a thread might be easier.
>
> Another thing to look at is the license: paramiko is LGPL, which places
> more
> restrictions on its use than Twisted's MIT license. Depending on your
> situation that may or may not be important.
>
> Bye,
>                Maarten
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071218/49733973/attachment.htm 

From michal.dtz at gmail.com  Tue Dec 18 12:37:38 2007
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Tue, 18 Dec 2007 18:37:38 +0100
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <47678A1C.6000604@citic.es>
References: <47678A1C.6000604@citic.es>
Message-ID: <20071218183738.4473508b@dotz-laptop>

On Tue, 18 Dec 2007 09:51:40 +0100
Daniel Marfil <dmarfil at citic.es> wrote:

> Hi, my name is Daniel from Spain, and this is my first post here ;-)
> I've been looking for something in twisted that allows me to send SMS 
> messages through a server, but got no luck until the moment.
> Could anyone give me a clue to begin?

Well, I'd try sending SMS via web - through an official web gate. Some
networks have simple web pages, thus they allow you to send
SMS by simply sending a GET or POST request via HTTP. Some networks,
instead, use some complicated javascript as a mean of security by
obscurity (captcha included) - http://sms.idea.pl, for example - I'd
try PBP (Python Browser Poseur; http://pbp.berlios.de ) or twill or
similar utilities. PBP uses Twisted.

... but, Twisted supports serial ports, so feel free to plug in your
phone and hack :) 

-- 
m



From andrew-twisted at puzzling.org  Tue Dec 18 18:24:20 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 19 Dec 2007 10:24:20 +1100
Subject: [Twisted-Python] Server/Client bi-directional data-transfer -
	need a solution
In-Reply-To: <e0d23f6a0712180918h3fea2932wef0d6767cb4f228f@mail.gmail.com>
References: <e0d23f6a0712111907y3cfd073dr52312c40209658c1@mail.gmail.com>
	<200712121120.27558.maarten@treewalker.org>
	<e0d23f6a0712180918h3fea2932wef0d6767cb4f228f@mail.gmail.com>
Message-ID: <20071218232420.GD15885@steerpike.home.puzzling.org>

Sajit Rao wrote:
> Thanks for your reply, Maarten.
> 
> I'm still chewing over it. In answer to your questions:
> 
> I will be sending short strings between client and server (bi-directionally)
> most of the time (> 100 times a day) and ocassionaly files (each of size 5 MB
> or less and > 10 but <100 times a day).
> 
> I wouldn't mind sending strings or files along the same channel - but I don't
> know how to do that
> 
> While I like the brevity of python and realize that Twisted deffereds are the
> heart of the async model,  I'm hampered by the scant documentation and code
> fragments.
> 
> Could someone point me to how to send raw strings or binary files over the same
> channel and have the other side interpret the data correctly?

This is really a protocol design question rather than Twisted-specific question.

You might find Itamar's series of articles on protocol design to be helpful:

http://webservices.xml.com/pub/a/ws/2003/11/25/protocols.html
http://webservices.xml.com/pub/a/ws/2004/01/20/sessions.html
http://webservices.xml.com/pub/a/ws/2004/02/25/protocols3.html
http://webservices.xml.com/pub/a/ws/2004/04/21/protocols.html
http://www.xml.com/pub/a/ws/2004/08/25/dprotocol.html

(You can find these and other writings at http://www.itamarst.org/)

-Andrew.




From miles.chris at gmail.com  Wed Dec 19 08:15:59 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Thu, 20 Dec 2007 00:15:59 +1100
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
Message-ID: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>

I want to deploy my Twisted app as a Twisted Application Plugin for  
twistd as per
http://twistedmatrix.com/projects/core/documentation/howto/tap.html

I want to distribute my app as a tarball, so the user would untar it  
and run "python setup.py install".  Then they would run "twistd myapp"  
to start it.

How do I configure setup.py so that twisted/plugins/myapp.py is created?

Where do I create the twisted/plugins directory?

(I see how this works if I run twistd from the directory containing  
twisted/plugins, or if I set PYTHONPATH, but I don't expect my users  
to have to do this).

Cheers,
Chris




From radix at twistedmatrix.com  Wed Dec 19 08:37:06 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 19 Dec 2007 08:37:06 -0500
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>
References: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>
Message-ID: <60ed19d40712190537y1a0b68aej59d6d3400bff51e2@mail.gmail.com>

On Dec 19, 2007 8:15 AM, Chris Miles <miles.chris at gmail.com> wrote:
> How do I configure setup.py so that twisted/plugins/myapp.py is created?

Good question; I still haven't figured it out. I know the Divmod guys
use the plugin system extensively, maybe one of them can say something
on the subject?

> Where do I create the twisted/plugins directory?

You should probably expect it to be already there. It needs to go into
the main twisted/plugins directory, i.e. the one that "import
twisted.plugins; print twisted.plugins.__file__" gives you.

I get the feeling that this should either be really easy or really
hard to do with distutils. If you manage to figure it out, I'd like to
add the information to the Plugin howto.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From eburus at gmail.com  Wed Dec 19 08:39:36 2007
From: eburus at gmail.com (Burus Gmail)
Date: Wed, 19 Dec 2007 16:39:36 +0300
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>
References: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>
Message-ID: <47691F18.2090904@gmail.com>

See the twisted.python.dist module to understand installation process
for the twisted subprojects.
For real example check any plugin of the Twisted and make setup.py file
in  your own project directory.
Be careful, in the twisted subprojects  setup  modules is in the
topfiles directory. It necessary for the
twisted's release script, you don't need it if you plugin isn't under
twisted maintainence.

Chris Miles wrote:
> I want to deploy my Twisted app as a Twisted Application Plugin for
> twistd as per
> http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
> I want to distribute my app as a tarball, so the user would untar it
> and run "python setup.py install".  Then they would run "twistd myapp"
> to start it.
>
> How do I configure setup.py so that twisted/plugins/myapp.py is created?
>
> Where do I create the twisted/plugins directory?
>
> (I see how this works if I run twistd from the directory containing
> twisted/plugins, or if I set PYTHONPATH, but I don't expect my users
> to have to do this).
>
> Cheers,
> Chris
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
"""
Best regards, 
Alexander Burtsev, 
Web Development Department, TV Channel 'Sport' 
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071219/d6b04ffc/attachment.htm 

From exarkun at divmod.com  Wed Dec 19 09:21:40 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 19 Dec 2007 09:21:40 -0500
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>
Message-ID: <20071219142140.8162.546952978.divmod.quotient.47178@ohm>

On Thu, 20 Dec 2007 00:15:59 +1100, Chris Miles <miles.chris at gmail.com> wrote:
>I want to deploy my Twisted app as a Twisted Application Plugin for  twistd 
>as per
>http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
>I want to distribute my app as a tarball, so the user would untar it  and 
>run "python setup.py install".  Then they would run "twistd myapp"  to start 
>it.
>
>How do I configure setup.py so that twisted/plugins/myapp.py is created?
>

Since your app depends on Twisted, the user should already have a directory
named "twisted/plugins" in their install directory (probably their system-
wide site-packages, but not necessary).  Twisted itself creates and installs
this directory.  Your installer needs to do just two things: put myapp.py
into that directory and regenerate the plugin cache.

One way in which to accomplish the first thing is like this:

    Pass a list like ["twisted.plugins"] for the packages keyword argument
    to distutils setup()

    Pass a dict like {'twisted': ['plugins/myapp.py']} for the package_data
    keyword argument to distutils setup()

    Include a line like "graft twisted" in your MANIFEST.in

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3
gives an example of how to do the second thing.

Jean-Paul



From michal.dtz at gmail.com  Wed Dec 19 21:42:18 2007
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Thu, 20 Dec 2007 03:42:18 +0100
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
Message-ID: <20071220034218.20beba97@dotz-laptop>

Hi, 

I've spent last few days trying to write a wrapper for libaio.

Libaio is a simple Linux-only library, which should in theory support
async read/write on a file descriptor. In practice - this depends on
many strange requirements and the documentation is basically
nonexistent (if you don't count lwn articles and kernel mailing list
archives), so that last few days of C coding looked like this: (it's
funny how every C coding session looks similar)

	http://youtube.com/watch?v=-JbhMvzeX7s
	
Just to summarize...
 * no AIO reads from socket 
 * not every filesystem supported 
 * output buffer must be N-pages long and aligned to page start
 * file access is unbuffered (yep, no cache!)
 * ... and it may still - *silently* - block in some circumstances
   (like, when you run out of "block layer requests", like if 
   I knew, what are those)

Anyways, libaio seems to be a cool idea - maybe someday kernel guys
will do some more work on it (like, commit those patches which add
buffer aio) and it will be possible to do AIO stuff on sockets. On the
other hand, I found no way other to be informed about data
availability, than periodically reaping events (want libaio and epoll
integration? use some more kernel patches...)

You can get the module code and read about current linux aio problems
here:

	http://code.google.com/p/twisted-linux-aio/

It is not a general-purpose module - it's tightly tied to Twisted.
Only reads are supported ATM and there's no Python queue, only that low
level one (see TODO.txt). If you're lucky, you may even see the proof
of concept code running - w/o blocking. There are more things to come,
especially that async shutil.copyfileobj replacement... :)

Sad thing is, that Linux seems to lack much in this area, especially
when compared to FreeBSD...

-- 
m

PS: I feel glad I didn't started with POSIX aio_* implementation - on
Linux it is said to launch a new thread for every fd request!
http://www.atnf.csiro.au/people/rgooch/linux/docs/io-events.html - way
to go, glibc programmers! I hope things are looking better now, than
they were that few years ago...



From miles.chris at gmail.com  Thu Dec 20 02:23:44 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Thu, 20 Dec 2007 18:23:44 +1100
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <20071219142140.8162.546952978.divmod.quotient.47178@ohm>
References: <20071219142140.8162.546952978.divmod.quotient.47178@ohm>
Message-ID: <FE1135C7-BC53-4C26-BCF8-9F067E510563@gmail.com>


On 20/12/2007, at 1:21 AM, Jean-Paul Calderone wrote:

> On Thu, 20 Dec 2007 00:15:59 +1100, Chris Miles  
> <miles.chris at gmail.com> wrote:
>> I want to deploy my Twisted app as a Twisted Application Plugin  
>> for  twistd as per
>> http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>>
>> I want to distribute my app as a tarball, so the user would untar  
>> it  and run "python setup.py install".  Then they would run "twistd  
>> myapp"  to start it.
>>
>> How do I configure setup.py so that twisted/plugins/myapp.py is  
>> created?
>>
>
> Since your app depends on Twisted, the user should already have a  
> directory
> named "twisted/plugins" in their install directory (probably their  
> system-
> wide site-packages, but not necessary).  Twisted itself creates and  
> installs
> this directory.  Your installer needs to do just two things: put  
> myapp.py
> into that directory and regenerate the plugin cache.
>
> One way in which to accomplish the first thing is like this:
>
>   Pass a list like ["twisted.plugins"] for the packages keyword  
> argument
>   to distutils setup()
>
>   Pass a dict like {'twisted': ['plugins/myapp.py']} for the  
> package_data
>   keyword argument to distutils setup()
>
>   Include a line like "graft twisted" in your MANIFEST.in
>
> http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3
> gives an example of how to do the second thing.

Thanks Jean-Paul, that worked great, with both distutils.core.setup  
and twisted.python.dist.setup.  When I used the latter I didn't need  
to regenerate the plugin cache, twistd picked up the new command  
immediately after install.  Is this the advantage of  
twisted.python.dist.setup ?

The technique also (mostly) worked using setuptools.setup.  twistd  
picks up the new command, but spits out a UserWarning due to the  
appearance of the duplicate twisted package within the egg directory.

/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
packages/zope.interface-3.3.0.1-py2.4-macosx-10.3-fat.egg/zope/ 
__init__.py:3: UserWarning: Module twisted was already imported from / 
Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
packages/twisted/__init__.pyc, but /Library/Frameworks/ 
Python.framework/Versions/2.4/lib/python2.4/site-packages/ 
myproject-0.0.0-py2.4.egg is being added to sys.path
   import pkg_resources
Usage: twistd [options]
...

I'd like to use setuptools, if possible, due to my project's  
dependencies on other setuptools-managed packages, but I can live  
without it if it's not fully compatible with Twisted application  
plugins.

Cheers,
Chris Miles




From robert at gravina.com  Thu Dec 20 03:04:32 2007
From: robert at gravina.com (Robert Gravina)
Date: Thu, 20 Dec 2007 17:04:32 +0900
Subject: [Twisted-Python] sending images via PB
Message-ID: <EB31CDF7-77B9-422D-B256-B94C478E874E@gravina.com>

Hi All,

I'm developing an application using Twisted PB, and I'd like to send  
image data from server to client for display there.

Specifically, I'm trying to display an image (e.g. a PNG, but might  
be another type) in a wxPython client which should come from a  
Twisted server somehow, and the client is already connected using PB.

I suppose I can just send the raw file data as a string and use  
that... but just thought I'd ask if anyone has any advice.

Robert




From robert at gravina.com  Thu Dec 20 03:50:12 2007
From: robert at gravina.com (Robert Gravina)
Date: Thu, 20 Dec 2007 17:50:12 +0900
Subject: [Twisted-Python] sending images via PB
In-Reply-To: <EB31CDF7-77B9-422D-B256-B94C478E874E@gravina.com>
References: <EB31CDF7-77B9-422D-B256-B94C478E874E@gravina.com>
Message-ID: <661255BC-8F9F-4E87-B7B9-671507B2D952@gravina.com>


On Dec 20, 2007, at 5:04 PM, Robert Gravina wrote:

> Hi All,
>
> I'm developing an application using Twisted PB, and I'd like to  
> send image data from server to client for display there.
>
> Specifically, I'm trying to display an image (e.g. a PNG, but might  
> be another type) in a wxPython client which should come from a  
> Twisted server somehow, and the client is already connected using PB.
>
> I suppose I can just send the raw file data as a string and use  
> that... but just thought I'd ask if anyone has any advice.
>

No worries.. I was able to get it going by just sending the file  
contents, i.e.:

#on server, open image
image = open("images/test.png")
data = image.read()
#send data to client
.......

#client side
stream = cStringIO.StringIO(data)
bitmap = BitmapFromImage(ImageFromStream(stream))
wx.StaticBitmap(panel, wx.ID_ANY, bitmap)

Robert




From arnarbi at gmail.com  Thu Dec 20 04:23:43 2007
From: arnarbi at gmail.com (Arnar Birgisson)
Date: Thu, 20 Dec 2007 09:23:43 +0000
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
In-Reply-To: <20071220034218.20beba97@dotz-laptop>
References: <20071220034218.20beba97@dotz-laptop>
Message-ID: <28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>

Hi there,

May I ask why you chose libaio over, for example, libevent?

Arnar

On Dec 20, 2007 2:42 AM, Micha? Pasternak <michal.dtz at gmail.com> wrote:
> Hi,
>
> I've spent last few days trying to write a wrapper for libaio.
>
> Libaio is a simple Linux-only library, which should in theory support
> async read/write on a file descriptor. In practice - this depends on
> many strange requirements and the documentation is basically
> nonexistent (if you don't count lwn articles and kernel mailing list
> archives), so that last few days of C coding looked like this: (it's
> funny how every C coding session looks similar)
>
>         http://youtube.com/watch?v=-JbhMvzeX7s
>
> Just to summarize...
>  * no AIO reads from socket
>  * not every filesystem supported
>  * output buffer must be N-pages long and aligned to page start
>  * file access is unbuffered (yep, no cache!)
>  * ... and it may still - *silently* - block in some circumstances
>    (like, when you run out of "block layer requests", like if
>    I knew, what are those)
>
> Anyways, libaio seems to be a cool idea - maybe someday kernel guys
> will do some more work on it (like, commit those patches which add
> buffer aio) and it will be possible to do AIO stuff on sockets. On the
> other hand, I found no way other to be informed about data
> availability, than periodically reaping events (want libaio and epoll
> integration? use some more kernel patches...)
>
> You can get the module code and read about current linux aio problems
> here:
>
>         http://code.google.com/p/twisted-linux-aio/
>
> It is not a general-purpose module - it's tightly tied to Twisted.
> Only reads are supported ATM and there's no Python queue, only that low
> level one (see TODO.txt). If you're lucky, you may even see the proof
> of concept code running - w/o blocking. There are more things to come,
> especially that async shutil.copyfileobj replacement... :)
>
> Sad thing is, that Linux seems to lack much in this area, especially
> when compared to FreeBSD...
>
> --
> m
>
> PS: I feel glad I didn't started with POSIX aio_* implementation - on
> Linux it is said to launch a new thread for every fd request!
> http://www.atnf.csiro.au/people/rgooch/linux/docs/io-events.html - way
> to go, glibc programmers! I hope things are looking better now, than
> they were that few years ago...
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

From exarkun at divmod.com  Thu Dec 20 09:30:11 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 20 Dec 2007 09:30:11 -0500
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <FE1135C7-BC53-4C26-BCF8-9F067E510563@gmail.com>
Message-ID: <20071220143011.8162.1498082092.divmod.quotient.47498@ohm>

On Thu, 20 Dec 2007 18:23:44 +1100, Chris Miles <miles.chris at gmail.com> wrote:
>
> [snip]
>
>Thanks Jean-Paul, that worked great, with both distutils.core.setup  and 
>twisted.python.dist.setup.  When I used the latter I didn't need  to 
>regenerate the plugin cache, twistd picked up the new command  immediately 
>after install.  Is this the advantage of  twisted.python.dist.setup ?

Not quite.  twisted.python.dist is an internal module, not part of Twisted's
public API.  Notice this line in its docstring:

    API Stability: Unstable. Don't use it outside of Twisted.

>
>The technique also (mostly) worked using setuptools.setup.  twistd  picks up 
>the new command, but spits out a UserWarning due to the  appearance of the 
>duplicate twisted package within the egg directory.
>
>/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>packages/zope.interface-3.3.0.1-py2.4-macosx-10.3-fat.egg/zope/ 
>__init__.py:3: UserWarning: Module twisted was already imported from / 
>Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>packages/twisted/__init__.pyc, but /Library/Frameworks/ 
>Python.framework/Versions/2.4/lib/python2.4/site-packages/ 
>myproject-0.0.0-py2.4.egg is being added to sys.path
>   import pkg_resources
>Usage: twistd [options]
>...
>
>I'd like to use setuptools, if possible, due to my project's  dependencies 
>on other setuptools-managed packages, but I can live  without it if it's not 
>fully compatible with Twisted application  plugins.

I'm not really sure what the above warning signifies, whether it indicates
a real problem, or what would be necessary to fix it if so.  I know that
setuptools does a number of things which aren't compatible with distutils
and the assumptions of Twisted, though.

Jean-Paul



From exarkun at divmod.com  Thu Dec 20 09:31:35 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 20 Dec 2007 09:31:35 -0500
Subject: [Twisted-Python] sending images via PB
In-Reply-To: <661255BC-8F9F-4E87-B7B9-671507B2D952@gravina.com>
Message-ID: <20071220143135.8162.1025533629.divmod.quotient.47499@ohm>

On Thu, 20 Dec 2007 17:50:12 +0900, Robert Gravina <robert at gravina.com> wrote:
>
>On Dec 20, 2007, at 5:04 PM, Robert Gravina wrote:
>>Hi All,
>>
>>I'm developing an application using Twisted PB, and I'd like to  send image 
>>data from server to client for display there.
>>
>>Specifically, I'm trying to display an image (e.g. a PNG, but might  be 
>>another type) in a wxPython client which should come from a  Twisted server 
>>somehow, and the client is already connected using PB.
>>
>>I suppose I can just send the raw file data as a string and use  that... 
>>but just thought I'd ask if anyone has any advice.
>
>No worries.. I was able to get it going by just sending the file  contents, 
>i.e.:
>
>#on server, open image
>image = open("images/test.png")
>data = image.read()
>#send data to client

For potentially large files, you might want to use FilePager from
twisted.spread.util, if you aren't already.

Jean-Paul



From michal.dtz at gmail.com  Thu Dec 20 13:16:59 2007
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Thu, 20 Dec 2007 19:16:59 +0100
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
In-Reply-To: <28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
References: <20071220034218.20beba97@dotz-laptop>
	<28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
Message-ID: <20071220191659.198aa3e2@dotz-laptop>

On Thu, 20 Dec 2007 09:23:43 +0000
"Arnar Birgisson" <arnarbi at gmail.com> wrote:

> Hi there,
> 
> May I ask why you chose libaio over, for example, libevent?

libevent is to C as Twisted is to Python. Both run on many
OS/platforms, but neither give you asynchronous file read/write;
read(2) on a file descriptor (not socket) will be always blocking.
At least this is what I understood after quick glance at libevent
source - all it does in buffer.c:evbuffer_read on non-win32 OS is
calling read(2).

libaio, instead, gives you async filesystem read/write access. Reading
a few hundred megabytes of data won't block Twisted reactor, which is
good.

Even better news is that since sending that e-mail yesterday I've found
out how to integrate Linux async I/O with epoll notification, so the
implementation I'm working on now will be even better. Pity it's
Linux-only, but well... to be portable, it should be POSIX aio really,
but I can't give you any guarantees about POSIX aio performance on
Linux. I can try working on other OSs later, if there will be enough
ppl interested.

Of course it would be cool to have Python libevent bindings - and even
cooler it would be to have a portable libevent reactor in C - but would
that really remove some of the limitations that Twisted has still to
deal with? You'd still have to hack portable AIO implementation into
libevent to have async file read/writes then ... :)

Take care,
-- 
m



From arnarbi at gmail.com  Thu Dec 20 14:46:04 2007
From: arnarbi at gmail.com (Arnar Birgisson)
Date: Thu, 20 Dec 2007 19:46:04 +0000
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
In-Reply-To: <20071220191659.198aa3e2@dotz-laptop>
References: <20071220034218.20beba97@dotz-laptop>
	<28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
	<20071220191659.198aa3e2@dotz-laptop>
Message-ID: <28012bc60712201146x38264bf0o793ec5e435ac6201@mail.gmail.com>

On Dec 20, 2007 6:16 PM, Micha? Pasternak <michal.dtz at gmail.com> wrote:
> On Thu, 20 Dec 2007 09:23:43 +0000
> "Arnar Birgisson" <arnarbi at gmail.com> wrote:
>
> > Hi there,
> >
> > May I ask why you chose libaio over, for example, libevent?
>
> libevent is to C as Twisted is to Python. Both run on many
> OS/platforms, but neither give you asynchronous file read/write;
> read(2) on a file descriptor (not socket) will be always blocking.
> At least this is what I understood after quick glance at libevent
> source - all it does in buffer.c:evbuffer_read on non-win32 OS is
> calling read(2).

I'm pretty sure you are mistaken. As I understood, libevent provides a
portable API on top of whatever async I/O mechanisms there are on the
underlying system, selecting the best available implementation.

For Linux, I believe this it currently uses epoll, kqueue on freebsd,
or select() or poll() on older systems.

> libaio, instead, gives you async filesystem read/write access. Reading
> a few hundred megabytes of data won't block Twisted reactor, which is
> good.

libevent provides file and socket i/o, along with timers. Latest
version provides buffered i/o and async dns resolver and http server.

Please forgive (and ignore) me if I'm completely missing something :)

> Of course it would be cool to have Python libevent bindings - and even
> cooler it would be to have a portable libevent reactor in C - but would
> that really remove some of the limitations that Twisted has still to
> deal with? You'd still have to hack portable AIO implementation into
> libevent to have async file read/writes then ... :)

Python libevent bindings have existed for a while in pyevent, a pyrex
binding module:
http://code.google.com/p/pyevent/

Not sure how well it is maintained, but I've seen many references to
it so it looks like people are using it.

As for a libevent based reactor, there is an old ticket and branch for it here:
http://twistedmatrix.com/trac/ticket/1930
http://twistedmatrix.com/trac/browser/branches/libevent-1930-3

Googling for "twisted libevent reactor" gives many interesting results.

cheers,
Arnar

From itamar at itamarst.org  Thu Dec 20 15:36:47 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 20 Dec 2007 15:36:47 -0500 (EST)
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
In-Reply-To: <28012bc60712201146x38264bf0o793ec5e435ac6201@mail.gmail.com>
References: <20071220034218.20beba97@dotz-laptop>
	<28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
	<20071220191659.198aa3e2@dotz-laptop>
	<28012bc60712201146x38264bf0o793ec5e435ac6201@mail.gmail.com>
Message-ID: <9334.63.107.91.99.1198183007.squirrel@webmail.zoteca.com>

> I'm pretty sure you are mistaken. As I understood, libevent provides a
> portable API on top of whatever async I/O mechanisms there are on the
> underlying system, selecting the best available implementation.
>
> For Linux, I believe this it currently uses epoll, kqueue on freebsd,
> or select() or poll() on older systems.

None of those are asynchronous IO. They allow efficient querying of
readability/writeability, typically used with *non-blocking* IO.

In design pattern language they are "reactors", whereas async IO would be
a "proactor." In API land you can tell the difference because with async
APIs you have a callback: Twisted's Protocol/Transport APIs usually
convert low-level change events (socket is readable) and non-blocking IO
(reading the socket) to high-level async callbacks (dataReceived called
with data).




From arnarbi at gmail.com  Thu Dec 20 16:13:26 2007
From: arnarbi at gmail.com (Arnar Birgisson)
Date: Thu, 20 Dec 2007 21:13:26 +0000
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
In-Reply-To: <9334.63.107.91.99.1198183007.squirrel@webmail.zoteca.com>
References: <20071220034218.20beba97@dotz-laptop>
	<28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
	<20071220191659.198aa3e2@dotz-laptop>
	<28012bc60712201146x38264bf0o793ec5e435ac6201@mail.gmail.com>
	<9334.63.107.91.99.1198183007.squirrel@webmail.zoteca.com>
Message-ID: <28012bc60712201313gbadd16dx86a99c8cfbf9125d@mail.gmail.com>

On Dec 20, 2007 8:36 PM, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> > I'm pretty sure you are mistaken. As I understood, libevent provides a
> > portable API on top of whatever async I/O mechanisms there are on the
> > underlying system, selecting the best available implementation.
> >
> > For Linux, I believe this it currently uses epoll, kqueue on freebsd,
> > or select() or poll() on older systems.
>
> None of those are asynchronous IO. They allow efficient querying of
> readability/writeability, typically used with *non-blocking* IO.

Ah, right, I understand. Sorry about the noise then <:|

Seems I've been using the wrong word for a while then. So is
performance the only reason for preferring asynchronous i/o to
non-blocking i/o?

> In design pattern language they are "reactors", whereas async IO would be
> a "proactor." In API land you can tell the difference because with async
> APIs you have a callback: Twisted's Protocol/Transport APIs usually
> convert low-level change events (socket is readable) and non-blocking IO
> (reading the socket) to high-level async callbacks (dataReceived called
> with data).

Kernel level AIO, is that about the kernel providing that abstraction
or is it using the hardware in some entirely different way?

Hope you don't mind naive questions.

cheers,
Arnar



From jonathansamuel at yahoo.com  Fri Dec 21 00:33:49 2007
From: jonathansamuel at yahoo.com (Jonathan Mark)
Date: Thu, 20 Dec 2007 21:33:49 -0800 (PST)
Subject: [Twisted-Python] Which OpenSSL Package Does Twisted 2.5 Need On
	Linux? Where can I get it?
Message-ID: <677197.13060.qm@web32514.mail.mud.yahoo.com>

Running the email server script from Abe Fettig's Twisted book produces the following error:

"ImportError: No module named OpenSSL"

There are a number of versions of a number of Python modules with a similar name. PyOpenSSL has not been updated since 2004 and only has a .6 version number.

Which OpenSSL module or other modules should I install with Twisted 2.5 on Linux in order to avoid this error message. I am using the CentOs 4 version of Linux which is similar to RHEL 4.








From miles.chris at gmail.com  Fri Dec 21 01:43:26 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Fri, 21 Dec 2007 17:43:26 +1100
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <20071220143011.8162.1498082092.divmod.quotient.47498@ohm>
References: <20071220143011.8162.1498082092.divmod.quotient.47498@ohm>
Message-ID: <DCF4A982-D568-400B-BF26-AF0C7BBF867A@gmail.com>


On 21/12/2007, at 1:30 AM, Jean-Paul Calderone wrote:

> On Thu, 20 Dec 2007 18:23:44 +1100, Chris Miles  
> <miles.chris at gmail.com> wrote:
>> Thanks Jean-Paul, that worked great, with both  
>> distutils.core.setup  and twisted.python.dist.setup.  When I used  
>> the latter I didn't need  to regenerate the plugin cache, twistd  
>> picked up the new command  immediately after install.  Is this the  
>> advantage of  twisted.python.dist.setup ?
>
> Not quite.  twisted.python.dist is an internal module, not part of  
> Twisted's
> public API.  Notice this line in its docstring:
>
>   API Stability: Unstable. Don't use it outside of Twisted.

Understood.  I'm happy with the solution using distutils.core.setup  
and forcing a plugin cache refresh.

btw, the "Plugin Caching" section on http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3 
  has an error.  The sample code uses "getPlugin" but it should be  
getPlugins.

i.e. I needed to use (with Twisted 2.5.0):
{{{
from twisted.plugin import IPlugin, getPlugins
list(getPlugins(IPlugin))
}}}

Cheers,
Chris Miles




From exarkun at divmod.com  Fri Dec 21 07:36:52 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 21 Dec 2007 07:36:52 -0500
Subject: [Twisted-Python] Which OpenSSL Package Does Twisted 2.5 Need On
	Linux? Where can I get it?
In-Reply-To: <677197.13060.qm@web32514.mail.mud.yahoo.com>
Message-ID: <20071221123652.8162.1190951305.divmod.quotient.47750@ohm>

On Thu, 20 Dec 2007 21:33:49 -0800 (PST), Jonathan Mark <jonathansamuel at yahoo.com> wrote:
>Running the email server script from Abe Fettig's Twisted book produces the following error:
>
>"ImportError: No module named OpenSSL"
>
>There are a number of versions of a number of Python modules with a similar name. PyOpenSSL has not been updated since 2004 and only has a .6 version number.

PyOpenSSL is the library Twisted depends on for SSL support.

Jean-Paul




From exarkun at twistedmatrix.com  Sun Dec 23 00:05:06 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Dec 2007 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1198386306.88.46180751@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071223/44402c55/attachment.htm 

From michal.dtz at gmail.com  Sat Dec 22 13:50:50 2007
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Sat, 22 Dec 2007 19:50:50 +0100
Subject: [UPDATE] twisted-linux-aio now works with epoll [was: Re:
	[Twisted-Python] Async file I/O with Linux & Twisted]
In-Reply-To: <28012bc60712201313gbadd16dx86a99c8cfbf9125d@mail.gmail.com>
References: <20071220034218.20beba97@dotz-laptop>
	<28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
	<20071220191659.198aa3e2@dotz-laptop>
	<28012bc60712201146x38264bf0o793ec5e435ac6201@mail.gmail.com>
	<9334.63.107.91.99.1198183007.squirrel@webmail.zoteca.com>
	<28012bc60712201313gbadd16dx86a99c8cfbf9125d@mail.gmail.com>
Message-ID: <20071222195050.083f9bd1@dotz-laptop>

On Thu, 20 Dec 2007 21:13:26 +0000
"Arnar Birgisson" <arnarbi at gmail.com> wrote:

> Kernel level AIO, is that about the kernel providing that abstraction
> or is it using the hardware in some entirely different way?

Linux KAIO (Kernel Async I/O) layer allows you to read and write
files in an async (non-blocking) way, just like you read or write
non-blocking network sockets. It is similar to async I/O defined by
Open Group:

	http://www.opengroup.org/onlinepubs/009695399/functions/aio_read.html

It is a quite new topic, because until now, you were able to perform
async operations only on network sockets. Async I/O in terms of
network sockets is nothing new. FreeBSD's kqueue, Linux's epoll are
just a means of notification, that a given async socket has some data
to read (or accepts data to be written), so you don't need to poll for
those events (like traditional Unix's poll, which is slow -- see
http://www.kegel.com/c10k.html ).

[UPDATE] twisted-linux-aio now works with epoll.
I finally found out how to create fd notification for aio, so right now
twisted-linux-aio supports it. It integrates well with epollreactor. I
also added some code to implement Python queue in it, so the usage
ATM looks like this:

  aio.Queue().readfile("/some/file/name").addCallbacks(...)

It is still work in progress, though. Too early to say about
efficiency, but it seems, that Twisted applications which do a lot of
concurrent disk I/O will benefit. Get the new code via
http://twisted-linux-aio.googlecode.com/ .

-- 
Michal Pasternak



From miles.chris at gmail.com  Sun Dec 23 06:34:12 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Sun, 23 Dec 2007 22:34:12 +1100
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <DCF4A982-D568-400B-BF26-AF0C7BBF867A@gmail.com>
References: <20071220143011.8162.1498082092.divmod.quotient.47498@ohm>
	<DCF4A982-D568-400B-BF26-AF0C7BBF867A@gmail.com>
Message-ID: <F6F895E1-96FA-4602-BBB6-110E7B5A4ED5@gmail.com>


On 21/12/2007, at 5:43 PM, Chris Miles wrote:

> On 21/12/2007, at 1:30 AM, Jean-Paul Calderone wrote:
>
>> On Thu, 20 Dec 2007 18:23:44 +1100, Chris Miles <miles.chris at gmail.com 
>> > wrote:
>>> Thanks Jean-Paul, that worked great, with both  
>>> distutils.core.setup  and twisted.python.dist.setup.  When I used  
>>> the latter I didn't need  to regenerate the plugin cache, twistd  
>>> picked up the new command  immediately after install.  Is this the  
>>> advantage of  twisted.python.dist.setup ?
>>
>> Not quite.  twisted.python.dist is an internal module, not part of  
>> Twisted's
>> public API.  Notice this line in its docstring:
>>
>>  API Stability: Unstable. Don't use it outside of Twisted.
>
> Understood.  I'm happy with the solution using distutils.core.setup  
> and forcing a plugin cache refresh.

I have documented the method I used to package my Twisted app using  
distutils.  I used the Twisted finger tutorial as an example.

http://chrismiles.livejournal.com/23399.html

Hope this helps others.

Cheers,
Chris Miles




From therve at free.fr  Mon Dec 24 13:27:17 2007
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Mon, 24 Dec 2007 19:27:17 +0100
Subject: [Twisted-Python] Implementation of the Erlang node protocol
Message-ID: <476FFA05.6060308@free.fr>

Hello people,

I want to point out to a project I started in my Twisted sandbox to 
implement the Erlang node protocol: 
http://twistedmatrix.com/trac/browser/sandbox/therve/erlang. It's 
vaguely inspired from the py_interface project: 
http://www.lysator.liu.se/~tab/erlang/py_interface/.

What's the content? It allows you to create a hidden Erlang node as a 
Twisted process, so that you can call methods on another Erlang node and 
receive calls (like you can do with C or Java with standard erlang 
distribution). It implements serialization and deserialization for most 
of the basic types, and both direction RPC. The benefit, of course, is 
to be able to get all Twisted protocols for free inside an Erlang 
program, or on the contrary to access Erlang power inside a Twisted 
server. I'm even writing a lit bit of documention: 
http://twistedmatrix.com/trac/browser/sandbox/therve/erlang.xhtml?format=raw.

I started it hoping to use it for something serious, but I couldn't, so 
now the project is a bit stalled until someone really use it. I'd be 
glad if it could be useful for anyone, and I'm willing to help by 
debugging and adding features. You can contact me on the #twisted 
channel or on this ML.

-- 
Thomas



From sflist at ihonk.com  Tue Dec 25 18:57:42 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 25 Dec 2007 16:57:42 -0700
Subject: [Twisted-Python] Implementation of the Erlang node protocol
In-Reply-To: <476FFA05.6060308@free.fr>
References: <476FFA05.6060308@free.fr>
Message-ID: <1198627062.23415.54.camel@infidel>

That is waaaaay too cool. I've got to try this out.

Steve

On Mon, 2007-12-24 at 19:27 +0100, Thomas Herv? wrote:
> Hello people,
> 
> I want to point out to a project I started in my Twisted sandbox to 
> implement the Erlang node protocol: 
> http://twistedmatrix.com/trac/browser/sandbox/therve/erlang. It's 
> vaguely inspired from the py_interface project: 
> http://www.lysator.liu.se/~tab/erlang/py_interface/.
> 
> What's the content? It allows you to create a hidden Erlang node as a 
> Twisted process, so that you can call methods on another Erlang node and 
> receive calls (like you can do with C or Java with standard erlang 
> distribution). It implements serialization and deserialization for most 
> of the basic types, and both direction RPC. The benefit, of course, is 
> to be able to get all Twisted protocols for free inside an Erlang 
> program, or on the contrary to access Erlang power inside a Twisted 
> server. I'm even writing a lit bit of documention: 
> http://twistedmatrix.com/trac/browser/sandbox/therve/erlang.xhtml?format=raw.
> 
> I started it hoping to use it for something serious, but I couldn't, so 
> now the project is a bit stalled until someone really use it. I'd be 
> glad if it could be useful for anyone, and I'm willing to help by 
> debugging and adding features. You can contact me on the #twisted 
> channel or on this ML.
> 




From ellisonbg.net at gmail.com  Tue Dec 25 23:03:44 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 25 Dec 2007 21:03:44 -0700
Subject: [Twisted-Python] Implementation of the Erlang node protocol
In-Reply-To: <476FFA05.6060308@free.fr>
References: <476FFA05.6060308@free.fr>
Message-ID: <6ce0ac130712252003i4b052465xd5046d61228a6ea3@mail.gmail.com>

Thomas,

This is absolutely fantastic!  We are currently using twisted for some
parallel/distributed computing stuff in Python.  While overall we are
very happy with twisted, we have begun looking into Erlang for certain
things and this could make a huge difference for us.  We wouldn't
actually begin work on this front for a while, but we will keep an eye
on how this develops.  Also if we go this direction we could likely
help with the effort.

Brian


On Dec 24, 2007 11:27 AM, Thomas Herv? <therve at free.fr> wrote:
> Hello people,
>
> I want to point out to a project I started in my Twisted sandbox to
> implement the Erlang node protocol:
> http://twistedmatrix.com/trac/browser/sandbox/therve/erlang. It's
> vaguely inspired from the py_interface project:
> http://www.lysator.liu.se/~tab/erlang/py_interface/.
>
> What's the content? It allows you to create a hidden Erlang node as a
> Twisted process, so that you can call methods on another Erlang node and
> receive calls (like you can do with C or Java with standard erlang
> distribution). It implements serialization and deserialization for most
> of the basic types, and both direction RPC. The benefit, of course, is
> to be able to get all Twisted protocols for free inside an Erlang
> program, or on the contrary to access Erlang power inside a Twisted
> server. I'm even writing a lit bit of documention:
> http://twistedmatrix.com/trac/browser/sandbox/therve/erlang.xhtml?format=raw.
>
> I started it hoping to use it for something serious, but I couldn't, so
> now the project is a bit stalled until someone really use it. I'd be
> glad if it could be useful for anyone, and I'm willing to help by
> debugging and adding features. You can contact me on the #twisted
> channel or on this ML.
>
> --
> Thomas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jarek.zgoda at sensisoft.com  Wed Dec 26 07:31:50 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Wed, 26 Dec 2007 13:31:50 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
Message-ID: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>

I'd like to add auto-discovery feature to my (Twisted) application and I 
thought I'll use zeroconf to advertize the service to clients in local 
network. I decided on zeroconf, because the app is a webservice that has to 
be accessible to multitude of various clients. Unfortunately, the only one 
library I found barely usable with Twisted is PyZeroconf (the other is 
avahi, but it seems too tightly bound to gobject to be usable with 
Twisted). Is this all or I do not know how to use google?

Anybody can share any hints on this? Is this feasible idea or there are 
better ways to achieve what I want?

Cheers
Jarek Zgoda




From therve at free.fr  Wed Dec 26 08:12:59 2007
From: therve at free.fr (=?ISO-8859-2?Q?Thomas_Herv=E9?=)
Date: Wed, 26 Dec 2007 14:12:59 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
Message-ID: <4772535B.9070801@free.fr>

Jarek Zgoda a ?crit :
> I'd like to add auto-discovery feature to my (Twisted) application and I 
> thought I'll use zeroconf to advertize the service to clients in local 
> network. I decided on zeroconf, because the app is a webservice that has to 
> be accessible to multitude of various clients. Unfortunately, the only one 
> library I found barely usable with Twisted is PyZeroconf (the other is 
> avahi, but it seems too tightly bound to gobject to be usable with 
> Twisted). Is this all or I do not know how to use google?
>
> Anybody can share any hints on this? Is this feasible idea or there are 
> better ways to achieve what I want?
>   

A quick search of twisted and zeroconf should redirect you to some 
infos, especially to the mDNS implementation of itamar in its sandbox: 
http://twistedmatrix.com/trac/browser/sandbox/itamar/mdns. Nothing 
completly finished though, but contributions are welcome :).

I don't know avahi, but the fact it uses gobject may not be a problem if 
you use the gtk2reactor.

-- 
Thomas




From jarek.zgoda at sensisoft.com  Wed Dec 26 14:56:39 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Wed, 26 Dec 2007 20:56:39 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
	<4772535B.9070801@free.fr>
Message-ID: <63303eb6d58978ac4721fec4052bc39d.qmail@home.pl>

Thomas Herv? <therve at free.fr> napisa?(a):

> A quick search of twisted and zeroconf should redirect you to some
> infos, especially to the mDNS implementation of itamar in its sandbox:
> http://twistedmatrix.com/trac/browser/sandbox/itamar/mdns. Nothing
> completly finished though, but contributions are welcome :).

Did not notice this one, thank you. From the quick view, it seems like the 
whole service publishing part is not yet implemented. I never wrote any 
line of code "Twisted style", maybe this will be my first time. ;)

> I don't know avahi, but the fact it uses gobject may not be a problem if
> you use the gtk2reactor.

Actually, this is a REST webservice built upon twisted.web. Registering 
service using avahi requires async DBus connection and, effectively, 
gobject main loop. This does not seem to be good choice for service that is 
supposed to serve hundreds of requests per minute...

Cheers
Jarek Zgoda




From exarkun at divmod.com  Wed Dec 26 22:58:03 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 26 Dec 2007 22:58:03 -0500
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
Message-ID: <20071227035803.8162.743849158.divmod.quotient.50054@ohm>

On Wed, 26 Dec 2007 13:31:50 +0100, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:
>I'd like to add auto-discovery feature to my (Twisted) application and I
>thought I'll use zeroconf to advertize the service to clients in local
>network. I decided on zeroconf, because the app is a webservice that has to
>be accessible to multitude of various clients. Unfortunately, the only one
>library I found barely usable with Twisted is PyZeroconf (the other is
>avahi, but it seems too tightly bound to gobject to be usable with
>Twisted). Is this all or I do not know how to use google?
>
>Anybody can share any hints on this? Is this feasible idea or there are
>better ways to achieve what I want?

There is only supposed to be one process on a system taking care of zeroconf
publications.  This means that it is more likely that you will want your app
to talk to some existing zeroconf software.  For example, on Linux, avahi.

This means that for most practical purposes, you don't actually want to talk
mdns.  You want to talk to avahi (or to something on OS X, or to something
on Windows).

This doesn't mean it wouldn't be cool to have a very Twisted-friendly zero-
conf library.  But it does mean that for practical purposes, that's usually
not what you want.

Jean-Paul



From jarek.zgoda at sensisoft.com  Thu Dec 27 03:22:56 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Thu, 27 Dec 2007 09:22:56 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <20071227035803.8162.743849158.divmod.quotient.50054@ohm>
References: <20071227035803.8162.743849158.divmod.quotient.50054@ohm>
Message-ID: <477360E0.3000404@sensisoft.com>

Jean-Paul Calderone napisa?(a):

>> I'd like to add auto-discovery feature to my (Twisted) application and I
>> thought I'll use zeroconf to advertize the service to clients in local
>> network. I decided on zeroconf, because the app is a webservice that
>> has to
>> be accessible to multitude of various clients. Unfortunately, the only
>> one
>> library I found barely usable with Twisted is PyZeroconf (the other is
>> avahi, but it seems too tightly bound to gobject to be usable with
>> Twisted). Is this all or I do not know how to use google?
>>
>> Anybody can share any hints on this? Is this feasible idea or there are
>> better ways to achieve what I want?
> 
> There is only supposed to be one process on a system taking care of
> zeroconf
> publications.  This means that it is more likely that you will want your
> app
> to talk to some existing zeroconf software.  For example, on Linux, avahi.
> 
> This means that for most practical purposes, you don't actually want to
> talk
> mdns.  You want to talk to avahi (or to something on OS X, or to something
> on Windows).
> 
> This doesn't mean it wouldn't be cool to have a very Twisted-friendly zero-
> conf library.  But it does mean that for practical purposes, that's usually
> not what you want.

I do not want to run my own mDNS service, I just want to advertize
(publish) my webservice in running instance of mDNS. I think it would be
Avahi mDNS/SD in most cases, but I cann't be sure now.

The PyZeroconf library has many global state objects so I think it's not
well suited for any forking environment. Python-avahi looks far better,
but it requires gobject-based main loop to be used asynchronously (other
way it can not connect to DBus signals). Itamar's module (mentioned by
Thomas) seems to be perfect fit my needs if only I'd be able to
implement service publishing part (discovery and browsing works well,
after adapting the code to Twisted 2.5 layout). ;)

-- 
Jarek Zgoda
Skype: jzgoda | GTalk: zgoda at jabber.aster.pl | voice: +48228430101

"We read Knuth so you don't have to." (Tim Peters)



From buz at netbuz.org  Thu Dec 27 08:49:04 2007
From: buz at netbuz.org (Bastian Winkler)
Date: Thu, 27 Dec 2007 14:49:04 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <63303eb6d58978ac4721fec4052bc39d.qmail@home.pl>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
	<4772535B.9070801@free.fr>
	<63303eb6d58978ac4721fec4052bc39d.qmail@home.pl>
Message-ID: <20071227134904.GA22634@succubus.netbuz.org>

On Wed, Dec 26, 2007 at 08:56:39PM +0100, Jarek Zgoda wrote:
> > I don't know avahi, but the fact it uses gobject may not be a problem if
> > you use the gtk2reactor.
> 
> Actually, this is a REST webservice built upon twisted.web. Registering 
> service using avahi requires async DBus connection and, effectively, 
> gobject main loop. This does not seem to be good choice for service that is 
> supposed to serve hundreds of requests per minute...

I use avahi with the glib2reactor on a high traffic system and it works
pretty good for me.
The service is only registered once at startup, and service discovery is
done by simply connecting to DBus signal. Everything only with a few
lines of code :)

So long

:wq buz
-- 
There are two major products to come out of Berkeley: LSD and UNIX.
We don't believe this to be a coincidence.

GnuPG Fingerprint: 2FFF FC48 C7DF 1EA0 00A0  FD53 8C35 FD2E 6908 7B82
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20071227/1cdd2cb6/attachment.pgp 

From exarkun at divmod.com  Thu Dec 27 09:18:15 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 27 Dec 2007 09:18:15 -0500
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <477360E0.3000404@sensisoft.com>
Message-ID: <20071227141815.8162.1712975259.divmod.quotient.50230@ohm>

On Thu, 27 Dec 2007 09:22:56 +0100, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:
>Jean-Paul Calderone napisa?(a):
>>
>> This doesn't mean it wouldn't be cool to have a very Twisted-friendly zero-
>> conf library.  But it does mean that for practical purposes, that's usually
>> not what you want.
>
>I do not want to run my own mDNS service, I just want to advertize
>(publish) my webservice in running instance of mDNS.
>
>[snip]
>
>Itamar's module (mentioned by
>Thomas) seems to be perfect fit my needs if only I'd be able to
>implement service publishing part (discovery and browsing works well,
>after adapting the code to Twisted 2.5 layout). ;)
>

Itamar's module is for running your own mDNS service.

Jean-Paul



From jarek.zgoda at sensisoft.com  Thu Dec 27 09:33:46 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Thu, 27 Dec 2007 15:33:46 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <20071227141815.8162.1712975259.divmod.quotient.50230@ohm>
References: <20071227141815.8162.1712975259.divmod.quotient.50230@ohm>
Message-ID: <4773B7CA.4030905@sensisoft.com>

Jean-Paul Calderone napisa?(a):

>>> This doesn't mean it wouldn't be cool to have a very Twisted-friendly
>>> zero-
>>> conf library.  But it does mean that for practical purposes, that's
>>> usually
>>> not what you want.
>>
>> I do not want to run my own mDNS service, I just want to advertize
>> (publish) my webservice in running instance of mDNS.
>>
>> [snip]
>>
>> Itamar's module (mentioned by
>> Thomas) seems to be perfect fit my needs if only I'd be able to
>> implement service publishing part (discovery and browsing works well,
>> after adapting the code to Twisted 2.5 layout). ;)
>>
> 
> Itamar's module is for running your own mDNS service.

If so, I am blind and lost.

-- 
Jarek Zgoda
Skype: jzgoda | GTalk: zgoda at jabber.aster.pl | voice: +48228430101

"We read Knuth so you don't have to." (Tim Peters)



From ellisonbg.net at gmail.com  Thu Dec 27 13:10:43 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 27 Dec 2007 11:10:43 -0700
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
Message-ID: <6ce0ac130712271010lc833aa4w208f9897030b1fc4@mail.gmail.com>

A while back I implemented a wrapper around pyzeroconf that integrated
it into the twisted event loop.  While we never did anything with
this, it seemed to work fine.  The design is not wonderful, but it
does show how everything can be done.  Here it is:

http://projects.scipy.org/ipython/ipython/browser/ipython/sandbox/bgranger/bonjour/twistbonjour.py

At some point we might end up using this - let us know if it is
helpful or worth putting somewhere more public.

Brian

On Dec 26, 2007 5:31 AM, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:
> I'd like to add auto-discovery feature to my (Twisted) application and I
> thought I'll use zeroconf to advertize the service to clients in local
> network. I decided on zeroconf, because the app is a webservice that has to
> be accessible to multitude of various clients. Unfortunately, the only one
> library I found barely usable with Twisted is PyZeroconf (the other is
> avahi, but it seems too tightly bound to gobject to be usable with
> Twisted). Is this all or I do not know how to use google?
>
> Anybody can share any hints on this? Is this feasible idea or there are
> better ways to achieve what I want?
>
> Cheers
> Jarek Zgoda
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From p.mayers at imperial.ac.uk  Thu Dec 27 12:37:56 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 27 Dec 2007 17:37:56 +0000
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <20071227035803.8162.743849158.divmod.quotient.50054@ohm>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
	<20071227035803.8162.743849158.divmod.quotient.50054@ohm>
Message-ID: <20071227173756.GA13972@wildfire.net.ic.ac.uk>

>
>There is only supposed to be one process on a system taking care of zeroconf
>publications.  This means that it is more likely that you will want your app
>to talk to some existing zeroconf software.  For example, on Linux, avahi.

Indeed.

For those situations where glib2reactor really won't work, you could 
write a simple, blocking non-threaded python helper process, and talk to 
it via a Twisted ProcessProtocol

This would be a very handy utility to have in TwistedCore




From jieryn at gmail.com  Fri Dec 28 19:57:46 2007
From: jieryn at gmail.com (jieryn at gmail.com)
Date: Fri, 28 Dec 2007 19:57:46 -0500
Subject: [Twisted-Python] new project using Twisted
Message-ID: <eab08af20712281657l4533ab15sde686eb3f796bf17@mail.gmail.com>

Greetings,

It would be great if you would link to the Sunklus project on your
ProjectsUsingTwisted page
(http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted). Sunklus is
an ad-hoc distribution file sharing daemon for Gentoo Linux. Find more
about it on our webpage, http://sunklus.googlecode.com.

Thanks for a great product!!
-jesse

-- 
There are 10 types of people in this world, those
that can read binary and those that can not.



From exarkun at twistedmatrix.com  Sun Dec 30 00:05:08 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 30 Dec 2007 05:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1198991108.19.1199368004@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071230/4f8698bf/attachment.htm 

From manlio_perillo at libero.it  Sat Dec  1 03:05:59 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 01 Dec 2007 11:05:59 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <072b01c833aa$b4d05c30$1e711490$@com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com>
Message-ID: <47513207.7070709@libero.it>

Alec Matusis ha scritto:
>> What causes the CPU overload in such a case
> 
> It looks like the for loop that loops over connections to send the message 
> is the main source of the load. The biggest problem is not the CPU however. 
> When the process takes more than 70% of the CPU (as displayed by top), python seems to start 
> skipping garbage collection, and the memory size of the process just keeps growing. We have no control over this.
> 

You should break the loop into small parts.

If you send a message to a lot of clients, then Twisted needs to keep 
all the buffers in memory (since your loop is blocking the reactor and 
Twisted is unable to flush the buffers).

You see the memory growing because the Python interpreter will not 
release the memory to the operating system (however the memory should 
not grow indefinitely)


 > [...]


Manlio Perillo



From matusis at yahoo.com  Sat Dec  1 03:50:31 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 1 Dec 2007 02:50:31 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <47513207.7070709@libero.it>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>	<072b01c833aa$b4d05c30$1e711490$@com>
	<47513207.7070709@libero.it>
Message-ID: <006f01c83407$fe819620$fb84c260$@com>

> You should break the loop into small parts.

Can you explain this?
Do you mean, use reactor.callLater to process say 100 messages at a time? Or maybe use deferToThread for the whole loop?

> You see the memory growing because the Python interpreter will not
> release the memory to the operating system (however the memory should
> not grow indefinitely)

The memory is actually growing indefinitely.
We run 4 identical servers on one machine. The load is not balanced very symmetrically. So one server can have 4500 connections, while another has 6000. There is a certain threshold on the number of connections, when a server starts to leak memory uncontrollably, and it's not set by the highest usage. For example, a server with 4500 connections remains at 100mb RSS for days, while a server that reaches 6000 connections leaks memory to 2gb in 10 hrs (I did not try beyond that, since the machine starts swapping!)  

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Manlio Perillo
> Sent: Saturday, December 01, 2007 2:06 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Advise for heavy concurrency
> 
> Alec Matusis ha scritto:
> >> What causes the CPU overload in such a case
> >
> > It looks like the for loop that loops over connections to send the
> message
> > is the main source of the load. The biggest problem is not the CPU
> however.
> > When the process takes more than 70% of the CPU (as displayed by
> top), python seems to start
> > skipping garbage collection, and the memory size of the process just
> keeps growing. We have no control over this.
> >
> 
> You should break the loop into small parts.
> 
> If you send a message to a lot of clients, then Twisted needs to keep
> all the buffers in memory (since your loop is blocking the reactor and
> Twisted is unable to flush the buffers).
> 
> You see the memory growing because the Python interpreter will not
> release the memory to the operating system (however the memory should
> not grow indefinitely)
> 
> 
>  > [...]
> 
> 
> Manlio Perillo
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From manlio_perillo at libero.it  Sat Dec  1 04:54:37 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 01 Dec 2007 12:54:37 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <006f01c83407$fe819620$fb84c260$@com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>	<072b01c833aa$b4d05c30$1e711490$@com>	<47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com>
Message-ID: <47514B7D.20203@libero.it>

Alec Matusis ha scritto:
>> You should break the loop into small parts.
> 
> Can you explain this?
> Do you mean, use reactor.callLater to process say 100 messages at a time? Or maybe use deferToThread for the whole loop?
> 

There is also twisted.internet.task.cooperate, but I have never used it.

>> You see the memory growing because the Python interpreter will not
>> release the memory to the operating system (however the memory should
>> not grow indefinitely)
> 
> The memory is actually growing indefinitely.
> We run 4 identical servers on one machine. The load is not balanced very symmetrically. 
> So one server can have 4500 connections, while another has 6000. 
> There is a certain threshold on the number of connections, when a server starts to leak memory uncontrollably, 
> and it's not set by the highest usage. For example, a server with 4500 connections remains at 100mb RSS for days, 
> while a server that reaches 6000 connections leaks memory to 2gb in 10 hrs 
> (I did not try beyond that, since the machine starts swapping!)


How big is a message sent to each client?
That is, how much memory requires to hold all these messages in memory?

 > [...]



P.S.:
your mail user agent does not wraps long lines; can you please fix it?





Manlio Perillo



From mrsalty0 at gmail.com  Sat Dec  1 10:01:32 2007
From: mrsalty0 at gmail.com (J Davis)
Date: Sat, 1 Dec 2007 12:01:32 -0500
Subject: [Twisted-Python] implementing a timeout
In-Reply-To: <20071130003038.8162.468070766.divmod.quotient.41374@ohm>
References: <a26b6f030711291545l7704dcd6yedebc1df49d227cd@mail.gmail.com>
	<20071130003038.8162.468070766.divmod.quotient.41374@ohm>
Message-ID: <a26b6f030712010901i91125a5n901f432181ca6a91@mail.gmail.com>

Ah yes, I should have thought to check the source for web.client.

Thank You!

-Jake


On Nov 29, 2007 7:30 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Thu, 29 Nov 2007 18:45:27 -0500, J Davis <mrsalty0 at gmail.com> wrote:
> >Greetings,
> >
> >I'm a newcomer to twisted and am struggling a little with the learning
> >curve.
> >I have an idea for an app that I believe is ideally suited for twisted
> >though I
> >could use some help finding the right way to approach it.
> >
> >It performs a status check by getting a page from a web server.
> >It calculates the time it took to download the page and also can check
> that
> >the
> >content matches a predefined string.
> >
> >That part of it is working fine but I'd like to take it a step further.
> >I need a way to impose a limit on how long it waits to receive a response
> so
> >that I can detect
> >unresponsive hosts. I must say that I'm at a loss as to how to add such a
> >timeout to my code.
> >Any pointers or examples would be greatly appreciated.
>
> You can pass a timeout keyword argument to getPage.  This will set the
> maximum time which is allowed to elapsed between when the TCP connection
> is established to the remote host and when the page is completely loaded.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071201/0afb8d13/attachment.html>

From nico at teknico.net  Sat Dec  1 13:12:38 2007
From: nico at teknico.net (Nicola Larosa)
Date: Sat, 01 Dec 2007 21:12:38 +0100
Subject: [Twisted-Python] Re: Advise for heavy concurrency
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>	<072b01c833aa$b4d05c30$1e711490$@com>
	<47513207.7070709@libero.it> <006f01c83407$fe819620$fb84c260$@com>
Message-ID: <20071201201252.661721240B3@slice.teknico.net>

Manlio Perillo wrote:
> You see the memory growing because the Python interpreter will not
> release the memory to the operating system

This was true until CPython 2.4: the 2.5 version does actually release
unused memory to the operating system.

Python Memory Management Part 3: The Saga is Over
http://evanjones.ca/python-memory-part3.html

-- 
Nicola Larosa - http://www.tekNico.net/

Restricting yourself to the intersection of the two versions [Python 2.6
and 3.0] is very painful and limited. We're not introducing backwards
compatibility syntax in 3.0, because that would defeat the purpose
(we've had backwards compatibility forever in 2.x, and the whole point
of 3.0 is to clean up the mess). -- Guido van Rossum, July 2007





From matusis at yahoo.com  Sat Dec  1 14:11:04 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 1 Dec 2007 13:11:04 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <47514B7D.20203@libero.it>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>	<072b01c833aa$b4d05c30$1e711490$@com>	<47513207.7070709@libero.it>	<006f01c83407$fe819620$fb84c260$@com>
	<47514B7D.20203@libero.it>
Message-ID: <01d001c8345e$aefaeeb0$0cf0cc10$@com>

> How big is a message sent to each client?

Each message is about 40 bytes.
A typical loop to send message is 1000 clients, 
so only 40KB to hold the message for all clients.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Manlio Perillo
> Sent: Saturday, December 01, 2007 3:55 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Advise for heavy concurrency
> 
> Alec Matusis ha scritto:
> >> You should break the loop into small parts.
> >
> > Can you explain this?
> > Do you mean, use reactor.callLater to process say 100 messages at a
> time? Or maybe use deferToThread for the whole loop?
> >
> 
> There is also twisted.internet.task.cooperate, but I have never used
> it.
> 
> >> You see the memory growing because the Python interpreter will not
> >> release the memory to the operating system (however the memory
> should
> >> not grow indefinitely)
> >
> > The memory is actually growing indefinitely.
> > We run 4 identical servers on one machine. The load is not balanced
> very symmetrically.
> > So one server can have 4500 connections, while another has 6000.
> > There is a certain threshold on the number of connections, when a
> server starts to leak memory uncontrollably,
> > and it's not set by the highest usage. For example, a server with
> 4500 connections remains at 100mb RSS for days,
> > while a server that reaches 6000 connections leaks memory to 2gb in
> 10 hrs
> > (I did not try beyond that, since the machine starts swapping!)
> 
> 
> How big is a message sent to each client?
> That is, how much memory requires to hold all these messages in memory?
> 
>  > [...]
> 
> 
> 
> P.S.:
> your mail user agent does not wraps long lines; can you please fix it?
> 
> 
> 
> 
> 
> Manlio Perillo
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From theatilla at gmail.com  Sat Dec  1 16:37:47 2007
From: theatilla at gmail.com (Atilla)
Date: Sun, 2 Dec 2007 00:37:47 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <01d001c8345e$aefaeeb0$0cf0cc10$@com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com> <47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com> <47514B7D.20203@libero.it>
	<01d001c8345e$aefaeeb0$0cf0cc10$@com>
Message-ID: <b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>

I think I can control a lot of the memory overhead, both the one in my
application and the one that comes with the OSs overhead for the TCP
stack and network bufers. I've yet to see how much memory that is
going to take.

When it comes to deferToThread - is that actually going to be of any
use? Do I get an advantage of running the "send" loop in a seperate
thread? What if, say, I never had to send more than 10-50 messages, so
the loop is relatively small - then I'd have to keep spawning threads
for no reason.

But - when it comes to large send queues, how can that be chopped in
an efficient manner? Chop it into equal pieces and schedule them with
small delay, one after the other? Defer them to another thread? Is
there any other solution, a way to chain them into a log callback
squence maybe?



From mithrandi at mithrandi.za.net  Sat Dec  1 19:50:44 2007
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sun, 2 Dec 2007 04:50:44 +0200
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com> <47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com> <47514B7D.20203@libero.it>
	<01d001c8345e$aefaeeb0$0cf0cc10$@com>
	<b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
Message-ID: <20071202025044.GB11735@mithrandi.za.net>

* Atilla <theatilla at gmail.com> [2007-12-02 00:37:47 +0100]:

> When it comes to deferToThread - is that actually going to be of any
> use? Do I get an advantage of running the "send" loop in a seperate
> thread? What if, say, I never had to send more than 10-50 messages, so

You cannot call any Twisted functions from a thread, with the exception
of callFromThread; so this would probably be pretty pointless.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20071202/989f2144/attachment.sig>

From mithrandi at mithrandi.za.net  Sat Dec  1 19:56:59 2007
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sun, 2 Dec 2007 04:56:59 +0200
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <20071202025044.GB11735@mithrandi.za.net>
References: <005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com> <47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com> <47514B7D.20203@libero.it>
	<01d001c8345e$aefaeeb0$0cf0cc10$@com>
	<b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
	<20071202025044.GB11735@mithrandi.za.net>
Message-ID: <20071202025659.GC11735@mithrandi.za.net>

* Tristan Seligmann <mithrandi at mithrandi.za.net> [2007-12-02 04:50:44 +0200]:

> * Atilla <theatilla at gmail.com> [2007-12-02 00:37:47 +0100]:
> 
> > When it comes to deferToThread - is that actually going to be of any
> > use? Do I get an advantage of running the "send" loop in a seperate
> > thread? What if, say, I never had to send more than 10-50 messages, so
> 
> You cannot call any Twisted functions from a thread, with the exception
                                        ^^^^^^^^^^^^^
Er, I guess I should have worded this more carefully. What I meant is: you cannot call
any Twisted functions from a different thread to the one the reactor is
running in, which includes any thread created with deferToThread.

> of callFromThread; so this would probably be pretty pointless.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20071202/56808b93/attachment.sig>

From matusis at yahoo.com  Sat Dec  1 20:40:28 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 1 Dec 2007 19:40:28 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <20071202025659.GC11735@mithrandi.za.net>
References: <005401c83222$96a87b40$c3f971c0$@com>
	<474E86DE.1@libero.it>	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>	<072b01c833aa$b4d05c30$1e711490$@com>
	<47513207.7070709@libero.it>	<006f01c83407$fe819620$fb84c260$@com>
	<47514B7D.20203@libero.it>	<01d001c8345e$aefaeeb0$0cf0cc10$@com>	<b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>	<20071202025044.GB11735@mithrandi.za.net>
	<20071202025659.GC11735@mithrandi.za.net>
Message-ID: <027d01c83495$15149120$3f3db360$@com>

> > You cannot call any Twisted functions from a thread, with the
> > exception
>                                         ^^^^^^^^^^^^^ Er, I guess I
> should have worded this more carefully. What I meant is: you cannot
> call any Twisted functions from a different thread to the one the
> reactor is running in, which includes any thread created with
> deferToThread.
> 
> > of callFromThread; so this would probably be pretty pointless.


I am not sure I understood this: suppose my message sending loop simply 
loops over client protocol instances and calls 
transport.write(some_message)  

Why cannot I call this loop in a thread from the main reactor loop 
to have it non-blocking in case this sending loop is giant (over 1000s of clients)?
I do not care when this sending loop is finished, I just do not want this to slow down 
the main reactor loop.

With 50 clients this is obviously unnecessary.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Tristan Seligmann
> Sent: Saturday, December 01, 2007 6:57 PM
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] Advise for heavy concurrency
> 
> * Tristan Seligmann <mithrandi at mithrandi.za.net> [2007-12-02 04:50:44
> +0200]:
> 
> > * Atilla <theatilla at gmail.com> [2007-12-02 00:37:47 +0100]:
> >
> > > When it comes to deferToThread - is that actually going to be of
> any
> > > use? Do I get an advantage of running the "send" loop in a seperate
> > > thread? What if, say, I never had to send more than 10-50 messages,
> > > so
> >
> > You cannot call any Twisted functions from a thread, with the
> > exception
>                                         ^^^^^^^^^^^^^ Er, I guess I
> should have worded this more carefully. What I meant is: you cannot
> call any Twisted functions from a different thread to the one the
> reactor is running in, which includes any thread created with
> deferToThread.
> 
> > of callFromThread; so this would probably be pretty pointless.
> --
> mithrandi, i Ainil en-Balandor, a faer Ambar




From exarkun at twistedmatrix.com  Sat Dec  1 22:05:06 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 02 Dec 2007 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1196571906.35.78782516@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071202/8393bc57/attachment.html>

From exarkun at divmod.com  Sat Dec  1 23:25:08 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 2 Dec 2007 01:25:08 -0500
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <027d01c83495$15149120$3f3db360$@com>
Message-ID: <20071202062508.8162.621491139.divmod.quotient.42175@ohm>

On Sat, 1 Dec 2007 19:40:28 -0800, Alec Matusis <matusis at yahoo.com> wrote:
>> > You cannot call any Twisted functions from a thread, with the
>> > exception
>>                                         ^^^^^^^^^^^^^ Er, I guess I
>> should have worded this more carefully. What I meant is: you cannot
>> call any Twisted functions from a different thread to the one the
>> reactor is running in, which includes any thread created with
>> deferToThread.
>>
>> > of callFromThread; so this would probably be pretty pointless.
>
>
>I am not sure I understood this: suppose my message sending loop simply
>loops over client protocol instances and calls
>transport.write(some_message)
>
>Why cannot I call this loop in a thread from the main reactor loop
>to have it non-blocking in case this sending loop is giant (over 1000s of clients)?

Because it is not a supported use of the API.  Twisted APIs, unless other-
wise documented, are not thread safe and can only be called from the thread
in which the reactor is running.

Jean-Paul



From matusis at yahoo.com  Sun Dec  2 00:26:38 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 1 Dec 2007 23:26:38 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <20071202062508.8162.621491139.divmod.quotient.42175@ohm>
References: <027d01c83495$15149120$3f3db360$@com>
	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>
Message-ID: <02cf01c834b4$ad950000$08bf0000$@com>

> Because it is not a supported use of the API.  Twisted APIs, unless
> other-
> wise documented, are not thread safe and can only be called from the
> thread
> in which the reactor is running.

Then I do not understand when it is safe to use 

t.i.threads.deferToThread(f, clients) ?

I was thinking of calling this from the main reactor thread, where f is

def f(clients):
    for client in clients:
        client.protocol.transport.write('hello')


This function would not even have a deferred attached to it. 
Is the point that it's not thread-safe to have Twisted API calls
inside the function f?

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
> Sent: Saturday, December 01, 2007 10:25 PM
> To: Twisted general discussion
> Subject: RE: [Twisted-Python] Advise for heavy concurrency
> 
> On Sat, 1 Dec 2007 19:40:28 -0800, Alec Matusis <matusis at yahoo.com>
> wrote:
> >> > You cannot call any Twisted functions from a thread, with the
> >> > exception
> >>                                         ^^^^^^^^^^^^^ Er, I guess I
> >> should have worded this more carefully. What I meant is: you cannot
> >> call any Twisted functions from a different thread to the one the
> >> reactor is running in, which includes any thread created with
> >> deferToThread.
> >>
> >> > of callFromThread; so this would probably be pretty pointless.
> >
> >
> >I am not sure I understood this: suppose my message sending loop
> simply
> >loops over client protocol instances and calls
> >transport.write(some_message)
> >
> >Why cannot I call this loop in a thread from the main reactor loop
> >to have it non-blocking in case this sending loop is giant (over 1000s
> of clients)?
> 
> Because it is not a supported use of the API.  Twisted APIs, unless
> other-
> wise documented, are not thread safe and can only be called from the
> thread
> in which the reactor is running.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From matusis at yahoo.com  Sun Dec  2 00:39:30 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Sat, 1 Dec 2007 23:39:30 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <02cf01c834b4$ad950000$08bf0000$@com>
References: <027d01c83495$15149120$3f3db360$@com>	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>
	<02cf01c834b4$ad950000$08bf0000$@com>
Message-ID: <02d301c834b6$79ceb020$6d6c1060$@com>

PS. Sorry I forgot: 

> t.i.threads.deferToThread(f, clients) ?

I suppose my question also applies to 

twisted.internet.reactor.callInThread(f, clients)


> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Alec Matusis
> Sent: Saturday, December 01, 2007 11:27 PM
> To: 'Twisted general discussion'
> Subject: RE: [Twisted-Python] Advise for heavy concurrency
> 
> > Because it is not a supported use of the API.  Twisted APIs, unless
> > other-
> > wise documented, are not thread safe and can only be called from the
> > thread
> > in which the reactor is running.
> 
> Then I do not understand when it is safe to use
> 
> t.i.threads.deferToThread(f, clients) ?
> 
> I was thinking of calling this from the main reactor thread, where f is
> 
> def f(clients):
>     for client in clients:
>         client.protocol.transport.write('hello')
> 
> 
> This function would not even have a deferred attached to it.
> Is the point that it's not thread-safe to have Twisted API calls
> inside the function f?
> 
> > -----Original Message-----
> > From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-
> python-
> > bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
> > Sent: Saturday, December 01, 2007 10:25 PM
> > To: Twisted general discussion
> > Subject: RE: [Twisted-Python] Advise for heavy concurrency
> >
> > On Sat, 1 Dec 2007 19:40:28 -0800, Alec Matusis <matusis at yahoo.com>
> > wrote:
> > >> > You cannot call any Twisted functions from a thread, with the
> > >> > exception
> > >>                                         ^^^^^^^^^^^^^ Er, I guess
> I
> > >> should have worded this more carefully. What I meant is: you
> cannot
> > >> call any Twisted functions from a different thread to the one the
> > >> reactor is running in, which includes any thread created with
> > >> deferToThread.
> > >>
> > >> > of callFromThread; so this would probably be pretty pointless.
> > >
> > >
> > >I am not sure I understood this: suppose my message sending loop
> > simply
> > >loops over client protocol instances and calls
> > >transport.write(some_message)
> > >
> > >Why cannot I call this loop in a thread from the main reactor loop
> > >to have it non-blocking in case this sending loop is giant (over
> 1000s
> > of clients)?
> >
> > Because it is not a supported use of the API.  Twisted APIs, unless
> > other-
> > wise documented, are not thread safe and can only be called from the
> > thread
> > in which the reactor is running.
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nico at teknico.net  Sun Dec  2 02:54:13 2007
From: nico at teknico.net (Nicola Larosa)
Date: Sun, 02 Dec 2007 10:54:13 +0100
Subject: [Twisted-Python] Re: Advise for heavy concurrency
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com> <47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com> <47514B7D.20203@libero.it>
	<01d001c8345e$aefaeeb0$0cf0cc10$@com>
	<b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
Message-ID: <20071202095416.06B391240B3@slice.teknico.net>

Atilla wrote:
> When it comes to deferToThread - is that actually going to be of any
> use? Do I get an advantage of running the "send" loop in a seperate
> thread? What if, say, I never had to send more than 10-50 messages, so
> the loop is relatively small - then I'd have to keep spawning threads
> for no reason.

Exactly, no reason. Don't spawn threads, unless you have no other way.


> But - when it comes to large send queues, how can that be chopped in
> an efficient manner? Chop it into equal pieces and schedule them with
> small delay, one after the other?

Yes, and the delay can be very small. Send 50-100 messages at a time, then
run the next batch with a reactor.callLater(0.00000001, ...). That way the
reactor will be able to handle network events with low latency.

Or just use coiterate, as Manlio said:

http://twistedmatrix.com/documents/current/api/twisted.internet.task.html

It works in 10ms batches: that's your latency. It also uses a 10us delay on
the callLater.


> Defer them to another thread?

Don't. Only use threads in Twisted if you have to call external, synchronous
libraries, like database clients.


-- 
Nicola Larosa - http://www.tekNico.net/

Restricting yourself to the intersection of the two versions [Python 2.6
and 3.0] is very painful and limited. We're not introducing backwards
compatibility syntax in 3.0, because that would defeat the purpose
(we've had backwards compatibility forever in 2.x, and the whole point
of 3.0 is to clean up the mess). -- Guido van Rossum, July 2007





From mithrandi at mithrandi.za.net  Sun Dec  2 05:21:25 2007
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sun, 2 Dec 2007 14:21:25 +0200
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <02cf01c834b4$ad950000$08bf0000$@com>
References: <027d01c83495$15149120$3f3db360$@com>
	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>
	<02cf01c834b4$ad950000$08bf0000$@com>
Message-ID: <20071202122125.GD11735@mithrandi.za.net>

* Alec Matusis <matusis at yahoo.com> [2007-12-01 23:26:38 -0800]:

> > Because it is not a supported use of the API.  Twisted APIs, unless
> > other-
> > wise documented, are not thread safe and can only be called from the
> > thread
> > in which the reactor is running.
> 
> Then I do not understand when it is safe to use 
> 
> t.i.threads.deferToThread(f, clients) ?

The code in f, or in functions called from f, must not invoke any
functions in the Twisted API other than reactor.callFromThread. The same
goes for a thread created any other way (eg. with callInThread).

> I was thinking of calling this from the main reactor thread, where f is
> 
> def f(clients):
>     for client in clients:
>         client.protocol.transport.write('hello')
> 
> 
> This function would not even have a deferred attached to it. 
> Is the point that it's not thread-safe to have Twisted API calls
> inside the function f?

Yes, that is basically the point; the only API that is thread-safe is
callFromThread; any other Twisted function must be invoked from the
reactor thread.

If this loop is really blocking for too long, you could use something
like the following, which cooperatively distributes the work over
several timeslices; you'll need to check that the default scheduler
performs the work fast enough for your purposes, though.

from twisted.internet.task import coiterate

def f(clients):
    for client in clients:
        client.protocol.transport.write('hello')
        yield None

coiterate(f)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20071202/8efaa016/attachment.sig>

From theatilla at gmail.com  Sun Dec  2 06:21:13 2007
From: theatilla at gmail.com (Atilla)
Date: Sun, 2 Dec 2007 14:21:13 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <20071202122125.GD11735@mithrandi.za.net>
References: <027d01c83495$15149120$3f3db360$@com>
	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>
	<02cf01c834b4$ad950000$08bf0000$@com>
	<20071202122125.GD11735@mithrandi.za.net>
Message-ID: <b53c932d0712020521mbcde3cfsecccd742223b1b42@mail.gmail.com>

Thanks a lot for the feedback, it really cleared some things up. I'll
experiment a little with the coiterate and I'll see how it works out
for me. My send queues are not going to be large, but they could
theoretically grow to large numbers and under heavy load it'll start
to matter.



From manlio_perillo at libero.it  Sun Dec  2 13:12:17 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 02 Dec 2007 21:12:17 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0712020521mbcde3cfsecccd742223b1b42@mail.gmail.com>
References: <027d01c83495$15149120$3f3db360$@com>	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>	<02cf01c834b4$ad950000$08bf0000$@com>	<20071202122125.GD11735@mithrandi.za.net>
	<b53c932d0712020521mbcde3cfsecccd742223b1b42@mail.gmail.com>
Message-ID: <475311A1.4000602@libero.it>

Atilla ha scritto:
> Thanks a lot for the feedback, it really cleared some things up. I'll
> experiment a little with the coiterate and I'll see how it works out
> for me. My send queues are not going to be large, but they could
> theoretically grow to large numbers and under heavy load it'll start
> to matter.
> 

Have you tried to use Python 2.5?



Manlio Perillo



From glyph at divmod.com  Sun Dec  2 13:28:10 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 02 Dec 2007 20:28:10 -0000
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
	<072b01c833aa$b4d05c30$1e711490$@com> <47513207.7070709@libero.it>
	<006f01c83407$fe819620$fb84c260$@com> <47514B7D.20203@libero.it>
	<01d001c8345e$aefaeeb0$0cf0cc10$@com>
	<b53c932d0712011537p13800dccs91c90e8757c26ff1@mail.gmail.com>
Message-ID: <20071202202810.21558.293322773.divmod.xquotient.2263@joule.divmod.com>

On 1 Dec, 11:37 pm, theatilla at gmail.com wrote:
>But - when it comes to large send queues, how can that be chopped in
>an efficient manner? Chop it into equal pieces and schedule them with
>small delay, one after the other? Defer them to another thread? Is
>there any other solution, a way to chain them into a log callback
>squence maybe?

You probably want to use the producer/consumer API.  self.transport will 
provide this interface:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IConsumer.html

which will all you to create and send the data only as needed, rather 
than on a timer.  If your concern is the loop over all of your clients, 
then coiterate might be a better bet, but IConsumer will help you spend 
that CPU only when you actually need to.



From Marcin.Kasperski at softax.com.pl  Mon Dec  3 03:03:33 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Mon, 03 Dec 2007 11:03:33 +0100
Subject: [Twisted-Python] Re: StdioOnnaStick instance has no attribute
	'isatty'
References: <87prygtti8.fsf@platon.mekk.waw.pl>
	<87y7cg69gw.fsf@platon.mekk.waw.pl>
	<1196391455.1197.33.camel@localhost.localdomain>
Message-ID: <873aukdrii.fsf@cauchy.softax.local>

>> > I just tried to run some trial tests on ubuntu gutsy (twisted 2.5.0),
>> > just to get the error as in the title (full traceback below).
>> > Does anybody know what is wrong here?
>> >
>> > (...)
>> >
>> > AttributeError: StdioOnnaStick instance has no attribute 'isatty'
>
> Could you file a bug about this? I suspect someone someday may have same
> issue, so we should fix underlying problem.

Bah, I do not understand what is wrong here and where is the bug...

-- 
----------------------------------------------------------------------
| Marcin Kasperski   |  For waterfall, milestones are commitments.
| http://mekk.waw.pl | For iterative development, they are decision
|                    |               points. (Martin)
----------------------------------------------------------------------




From theatilla at gmail.com  Mon Dec  3 05:40:16 2007
From: theatilla at gmail.com (Atilla)
Date: Mon, 3 Dec 2007 13:40:16 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <475311A1.4000602@libero.it>
References: <027d01c83495$15149120$3f3db360$@com>
	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>
	<02cf01c834b4$ad950000$08bf0000$@com>
	<20071202122125.GD11735@mithrandi.za.net>
	<b53c932d0712020521mbcde3cfsecccd742223b1b42@mail.gmail.com>
	<475311A1.4000602@libero.it>
Message-ID: <b53c932d0712030440m647e4f4dl77a30060f6273736@mail.gmail.com>

On 02/12/2007, Manlio Perillo <manlio_perillo at libero.it> wrote:
> Atilla ha scritto:
> Have you tried to use Python 2.5?

I Am using the lastest Python and Twisted, but why are you asking?



From michele.petrazzo at unipex.it  Mon Dec  3 06:33:44 2007
From: michele.petrazzo at unipex.it (Michele Petrazzo - Unipex srl)
Date: Mon, 03 Dec 2007 14:33:44 +0100
Subject: [Twisted-Python] wx and twisted
Message-ID: <475405B8.7040604@unipex.it>

Hi all,
just installed the last wx and twisted and tring my already working app and:

Traceback (most recent call last):
   File "threading.py", line 442, in __bootstrap
     self.run()
   File "threading.py", line 422, in run
     self.__target(*self.__args, **self.__kwargs)
   File 
"/usr/lib/python2.4/site-packages/twisted/internet/_threadedselect.py", 
line 149, in _workerInThread
     fn(*args)
--- <exception caught here> ---
   File 
"/usr/lib/python2.4/site-packages/twisted/internet/_threadedselect.py", 
line 169, in _doSelectInThread
     [], timeout)
exceptions.ValueError: file descriptor cannot be a negative integer (-1)

and on shutdown:

Traceback (most recent call last):
   File 
"/usr/lib/python2.4/site-packages/wx-2.8-gtk2-unicode/wx/_core.py", line 
14364, in <lambda>
     lambda event: event.callable(*event.args, **event.kw) )
   File 
"/usr/lib/python2.4/site-packages/twisted/internet/_threadedselect.py", 
line 243, in _interleave
     msg, args = self.toMainThread.get_nowait()
   File "/usr/lib/python2.4/Queue.py", line 141, in get_nowait
     return self.get(False)
   File "/usr/lib/python2.4/Queue.py", line 116, in get
     raise Empty
Queue.Empty


How debug it?

Debian etch, python 2.4.4, wx 2.8.7.1, twisted 2.5.0

Thanks,
Michele



From exarkun at divmod.com  Mon Dec  3 06:47:55 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 3 Dec 2007 08:47:55 -0500
Subject: [Twisted-Python] wx and twisted
In-Reply-To: <475405B8.7040604@unipex.it>
Message-ID: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>

On Mon, 03 Dec 2007 14:33:44 +0100, Michele Petrazzo - Unipex srl <michele.petrazzo at unipex.it> wrote:
>Hi all,
>just installed the last wx and twisted and tring my already working app and:
>
>Traceback (most recent call last):
>   File "threading.py", line 442, in __bootstrap
>     self.run()
>   File "threading.py", line 422, in run
>     self.__target(*self.__args, **self.__kwargs)
>   File "/usr/lib/python2.4/site- 
>packages/twisted/internet/_threadedselect.py", line 149, in _workerInThread
>     fn(*args)
>--- <exception caught here> ---
>   File "/usr/lib/python2.4/site- 
>packages/twisted/internet/_threadedselect.py", line 169, in 
>_doSelectInThread
>     [], timeout)
>exceptions.ValueError: file descriptor cannot be a negative integer (-1)
>
>and on shutdown:
>
>Traceback (most recent call last):
>   File "/usr/lib/python2.4/site-packages/wx-2.8-gtk2-unicode/wx/_core.py", 
>line 14364, in <lambda>
>     lambda event: event.callable(*event.args, **event.kw) )
>   File "/usr/lib/python2.4/site- 
>packages/twisted/internet/_threadedselect.py", line 243, in _interleave
>     msg, args = self.toMainThread.get_nowait()
>   File "/usr/lib/python2.4/Queue.py", line 141, in get_nowait
>     return self.get(False)
>   File "/usr/lib/python2.4/Queue.py", line 116, in get
>     raise Empty
>Queue.Empty
>
>
>How debug it?

Start looking at what has changed in wx since the previous working version,
or start looking at which calls are resulting in invalid file descriptors.

Or you could try to get the Twisted unit tests to run with wxreactor, and
then work on making them pass.

Jean-Paul



From phil at bubblehouse.org  Mon Dec  3 09:41:33 2007
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 3 Dec 2007 11:41:33 -0500
Subject: [Twisted-Python] wx and twisted
In-Reply-To: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>
References: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>
Message-ID: <672BACC4-A1AF-4006-9067-34C30A581D75@bubblehouse.org>


On Dec 3, 2007, at 8:47 AM, Jean-Paul Calderone wrote:

> On Mon, 03 Dec 2007 14:33:44 +0100, Michele Petrazzo - Unipex srl <michele.petrazzo at unipex.it 
> > wrote:
>>
[snip traceback]
>> exceptions.ValueError: file descriptor cannot be a negative integer  
>> (-1)
>>
>> and on shutdown:
>>
[snip traceback]
>
>>
>> How debug it?
>
> Start looking at what has changed in wx since the previous working  
> version,
> or start looking at which calls are resulting in invalid file  
> descriptors.
>
> Or you could try to get the Twisted unit tests to run with  
> wxreactor, and
> then work on making them pass.

I'm pretty sure that this is truly impossible with the current  
wxreactor, and possibly any reactor that is based on TSR. I found this  
out while trying to implement a corefoundation reactor using wxreactor  
as a reference.

My actual experience with wxWidgets is limited, but as far as I can  
tell, the same issue exists. Tests won't run because wxreactor.stop()  
will never stop the toolkit's main loop by itself, and anything that  
makes the loop end will also terminate the process.


I posted some comments on:
	http://twistedmatrix.com/trac/ticket/1833

"there are architectural choices in TSR that prevent most of its use- 
cases from being fully tested. The biggest problem is that TSR allows  
the native toolkit's event loop to dictate when the reactor will stop.
This has the most obvious implications when dealing with Trial. Trial  
assumes that reactor.run() will return after another thread calls  
reactor.crash(). This can't be done in Cocoa (so far as I can tell),  
because anything I've found that will make  
PyObjCTools.AppHelper.runEventLoop() stop will terminate the entire  
process.

This seems to also be the issue for t.i.wxreactor."



-phil





From exarkun at divmod.com  Mon Dec  3 09:47:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 3 Dec 2007 11:47:22 -0500
Subject: [Twisted-Python] wx and twisted
In-Reply-To: <672BACC4-A1AF-4006-9067-34C30A581D75@bubblehouse.org>
Message-ID: <20071203164722.8162.598357997.divmod.quotient.42623@ohm>

On Mon, 3 Dec 2007 11:41:33 -0500, Phil Christensen <phil at bubblehouse.org> wrote:
>
>On Dec 3, 2007, at 8:47 AM, Jean-Paul Calderone wrote:
>>On Mon, 03 Dec 2007 14:33:44 +0100, Michele Petrazzo - Unipex srl 
>><michele.petrazzo at unipex.it > wrote:
>>>
>[snip traceback]
>>>exceptions.ValueError: file descriptor cannot be a negative integer  (-1)
>>>
>>>and on shutdown:
>[snip traceback]
>>
>>>
>>>How debug it?
>>
>>Start looking at what has changed in wx since the previous working 
>>version,
>>or start looking at which calls are resulting in invalid file  descriptors.
>>
>>Or you could try to get the Twisted unit tests to run with  wxreactor, and
>>then work on making them pass.
>
>I'm pretty sure that this is truly impossible with the current  wxreactor, 
>and possibly any reactor that is based on TSR. I found this  out while 
>trying to implement a corefoundation reactor using wxreactor  as a 
>reference.
>
> [snip]
>

I didn't say it would be easy.  Few things are impossible, though.

Jean-Paul



From manlio_perillo at libero.it  Mon Dec  3 09:00:54 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 03 Dec 2007 17:00:54 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0712030440m647e4f4dl77a30060f6273736@mail.gmail.com>
References: <027d01c83495$15149120$3f3db360$@com>	<20071202062508.8162.621491139.divmod.quotient.42175@ohm>	<02cf01c834b4$ad950000$08bf0000$@com>	<20071202122125.GD11735@mithrandi.za.net>	<b53c932d0712020521mbcde3cfsecccd742223b1b42@mail.gmail.com>	<475311A1.4000602@libero.it>
	<b53c932d0712030440m647e4f4dl77a30060f6273736@mail.gmail.com>
Message-ID: <47542836.8020304@libero.it>

Atilla ha scritto:
> On 02/12/2007, Manlio Perillo <manlio_perillo at libero.it> wrote:
>> Atilla ha scritto:
>> Have you tried to use Python 2.5?
> 
> I Am using the lastest Python and Twisted, but why are you asking?
> 

Because Python 2.5 should free unused memory.


Manlio Perillo



From michele.petrazzo at unipex.it  Mon Dec  3 12:16:43 2007
From: michele.petrazzo at unipex.it (Michele Petrazzo - Unipex srl)
Date: Mon, 03 Dec 2007 20:16:43 +0100
Subject: [Twisted-Python] wx and twisted
In-Reply-To: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>
References: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>
Message-ID: <4754561B.3030904@unipex.it>

Jean-Paul Calderone wrote:
> Start looking at what has changed in wx since the previous working
> version,

on wxpython? It's very very hard because, like I can see, it can be also
a wxwidget problem... (since wx.App it's a C class)

> or start looking at which calls are resulting in invalid file
> descriptors.
> 

Simplest, I think. How do it? Where to start? Or in the worst case, can
I "skip" them? Because apart the shown errors, the application (an ftp
client) seem to work well!

P.s. From my tests, these errors appear only on my linux platform, not
on win! Surely because wx it's more "windows" like that "linux" like,
but however it's very strange!

> Or you could try to get the Twisted unit tests to run with wxreactor,
> and then work on making them pass.
> 

Sorry, but I think that I'm not so able to do it...

Thanks,
Michele



From arkanes at gmail.com  Mon Dec  3 12:55:50 2007
From: arkanes at gmail.com (Chris Mellon)
Date: Mon, 3 Dec 2007 13:55:50 -0600
Subject: [Twisted-Python] wx and twisted
In-Reply-To: <672BACC4-A1AF-4006-9067-34C30A581D75@bubblehouse.org>
References: <20071203134755.8162.1671441083.divmod.quotient.42585@ohm>
	<672BACC4-A1AF-4006-9067-34C30A581D75@bubblehouse.org>
Message-ID: <4866bea60712031155o53a1591bs91e4173bea24dac@mail.gmail.com>

On Dec 3, 2007 10:41 AM, Phil Christensen <phil at bubblehouse.org> wrote:
>
> On Dec 3, 2007, at 8:47 AM, Jean-Paul Calderone wrote:
>
> > On Mon, 03 Dec 2007 14:33:44 +0100, Michele Petrazzo - Unipex srl <michele.petrazzo at unipex.it
> > > wrote:
> >>
> [snip traceback]
> >> exceptions.ValueError: file descriptor cannot be a negative integer
> >> (-1)
> >>
> >> and on shutdown:
> >>
> [snip traceback]
> >
> >>
> >> How debug it?
> >
> > Start looking at what has changed in wx since the previous working
> > version,
> > or start looking at which calls are resulting in invalid file
> > descriptors.
> >
> > Or you could try to get the Twisted unit tests to run with
> > wxreactor, and
> > then work on making them pass.
>
> I'm pretty sure that this is truly impossible with the current
> wxreactor, and possibly any reactor that is based on TSR. I found this
> out while trying to implement a corefoundation reactor using wxreactor
> as a reference.
>
> My actual experience with wxWidgets is limited, but as far as I can
> tell, the same issue exists. Tests won't run because wxreactor.stop()
> will never stop the toolkit's main loop by itself, and anything that
> makes the loop end will also terminate the process.
>

This isn't accurate, with regards to wxreactor - wxreactor shuts down
the wx main loop using a system event, and the wx main loop is
restartable so there's no intrinsic problem with doing this. The way
wxreactor tries to interact with the wxApp is pretty kludgy and might
result in problems, though.

I'm not sure why trial has so many problems with wxreactor - stuff
which works fine outside of trials environment fails hard within it.
It seems to have something to do with TSR, though - its _interleave
loop is raising StopIteration.



From matthias at urlichs.de  Tue Dec  4 15:24:33 2007
From: matthias at urlichs.de (Matthias Urlichs)
Date: Tue, 4 Dec 2007 22:24:33 +0000 (UTC)
Subject: [Twisted-Python] @inlineCallbacks eat the traceback. Help?
Message-ID: <fj4k31$94a$1@ger.gmane.org>

It seems that @inlineCallbacks trashes the error traceback when you yield
a Deferred that emits an error. That's not very social behavior.

Any ideas how to get the traceback back?

This is Twisted 2.5.

Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/twisted/python/context.py", line 37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.5/site-packages/twisted/internet/threads.py", line 25, in _putResultInDeferred
    result = f(*args, **kwargs)
  File "/usr/lib/python2.5/site-packages/twisted/internet/defer.py", line 813, in unwindGenerator
    return _inlineCallbacks(None, f(*args, **kwargs), Deferred())
  File "/usr/lib/python2.5/site-packages/twisted/internet/defer.py", line 724, in _inlineCallbacks
    result = g.throw(result.type, result.value, result.tb)
--- <exception caught here> ---
  File "/var/lib/python-support/python2.5/homevent/worker.py", line 153, in _process
    r = yield w.process(event=self.event, queue=self)
exceptions.TypeError: float() argument must be a string or a number

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
 - -
Know when to quit.




From exarkun at divmod.com  Tue Dec  4 17:13:40 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Dec 2007 19:13:40 -0500
Subject: [Twisted-Python] @inlineCallbacks eat the traceback. Help?
In-Reply-To: <fj4k31$94a$1@ger.gmane.org>
Message-ID: <20071205001340.8162.1518935329.divmod.quotient.43077@ohm>

On Tue, 4 Dec 2007 22:24:33 +0000 (UTC), Matthias Urlichs <matthias at urlichs.de> wrote:
>It seems that @inlineCallbacks trashes the error traceback when you yield
>a Deferred that emits an error. That's not very social behavior.
>
>Any ideas how to get the traceback back?

One possibility is to not use inlineCallbacks.

Another possibility is to wait for the next release of Twisted, which
will have some additional functionality in this area and may be able
to provide the correct traceback (but no promises).  This is implemented
already, so you could check out trunk and give it a try.

Jean-Paul



From lordvan at lordvan.com  Wed Dec  5 03:18:23 2007
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Wed, 5 Dec 2007 10:18:23 +0000
Subject: [Twisted-Python] TLS echo server and client examples
Message-ID: <25665cf5766d7c037d39424b9fb0b72c@secure.lordvan.com>


hi all.

With therves help I changed the ssl echoserv and echoclient examples to use
tls today.
Thought I post this to the list for (possible) inclusion in the examples
directory, as it might be useful for other ppl too.

Regards

--
Thomas Raschbacher
http://www.lordvan.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071205/f7c2ed51/attachment.html>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: echoserv_tls.py
URL: </pipermail/twisted-python/attachments/20071205/f7c2ed51/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: echoclient_tls.py
URL: </pipermail/twisted-python/attachments/20071205/f7c2ed51/attachment-0001.ksh>

From andrewfr_ice at yahoo.com  Wed Dec  5 14:18:42 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 5 Dec 2007 13:18:42 -0800 (PST)
Subject: [Twisted-Python] Altering Distutils to get PyOpenSSL to Work ? Re:
	Twisted-Python Digest, Vol 44, Issue 32
In-Reply-To: <E1Iy9Df-0005sA-9S@cube.twistedmatrix.com>
Message-ID: <894921.35909.qm@web34201.mail.mud.yahoo.com>

Hello Zooko:

> The error message is in error.  Here is the Python
> issue ticket in   which the message was changed from
>stating that you have to use the  
> same compiler that was used to build Python, to
> instead stating that  you have to use a compiler
that >is compatible with the one that was  used to
build >Python:
> 

> In my experience, simply setting "compiler=mingw32"
> in your distutils config file works for all
extension >modules that I have tried  *except* for
pyOpenSSL.  

Thanks for the information...

I have followed pyOpenSSL's Windows instructions. I
downloaded the Microsoft Visual C++ Express kit (what
a monster). I still get the same message.

I read somewhere that distutils looks at the registry
to look for the Microsoft C compiler. I know little
about distutils and I have not used Visual Studio in
ages. And I really need to get https stuff working
soon.

If this is the case, what exactly would I have to
change and what value do I use?

Thanks in advance,
Andrew


      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From sakalsiz at gmail.com  Sat Dec  8 02:52:00 2007
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Sat, 8 Dec 2007 11:52:00 +0200
Subject: [Twisted-Python] Timeout for Deferred objects
Message-ID: <767e5e0d0712080152p6967f8bbwb7bd1e267cfd712d@mail.gmail.com>

Hi,

I want set a timeout for Deferred objects. There is a method in
Deferred class, setTimeout. It works well for me, but it gives a
deprecation warning. If setTimeout is deprecated, what else I should
use for timeouts.

Thanks

Saki



From exarkun at divmod.com  Sat Dec  8 09:25:40 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 8 Dec 2007 11:25:40 -0500
Subject: [Twisted-Python] Timeout for Deferred objects
In-Reply-To: <767e5e0d0712080152p6967f8bbwb7bd1e267cfd712d@mail.gmail.com>
Message-ID: <20071208162540.8162.861808109.divmod.quotient.43813@ohm>

On Sat, 8 Dec 2007 11:52:00 +0200, Mustafa Sakalsiz <sakalsiz at gmail.com> wrote:
>Hi,
>
>I want set a timeout for Deferred objects. There is a method in
>Deferred class, setTimeout. It works well for me, but it gives a
>deprecation warning. If setTimeout is deprecated, what else I should
>use for timeouts.

It's deprecated because having a timeout for a Deferred doesn't make sense.
A Deferred is just a convenient API for associating a result with the code
which is interested in the result.  It doesn't ever produce the result itself,
so it isn't the right object to give a timeout to.

Instead, the code which is responsible for calling back the Deferred is the
code which needs to be given a timeout.  There's no general way to do this,
since the code for calling back Deferreds is different for each Deferred.
Some APIs support timeouts already - for example, reactor.resolve - but
not all of them do.

You can add a timeout to an API which doesn't support timeouts in one of
two ways:

  - Add it and implement whatever changes are necessary so that after the
    timeout the underlying operation is cancelled.  You may want to submit
    patches. :)

  - Wrap the original API with one which supports a timeout.  This will
    return a Deferred it creates and call it back when the underlying
    Deferred is called back - unless the timeout has expired, then it will
    just drop the result.

In either case, you'll probably use reactor.callLater to implement the
timeout.

Jean-Paul



From donwsmith at gmail.com  Sat Dec  8 09:52:36 2007
From: donwsmith at gmail.com (Don Smith)
Date: Sat, 8 Dec 2007 08:52:36 -0800
Subject: [Twisted-Python] stopping MultiService child services
Message-ID: <24f63c200712080852m4bf9708fmf38bdb23b13d07cb@mail.gmail.com>

Hi all,

I'm still a bit of a novice but I'm trying to implement MultiService. The
trick is that I want my program to be able to change it's config while it is
running. Once the app realizes it has a new configuration it needs to stop
all services, load the new config and start services accordingly. However,
I'm stuck right now with how to stop all services. I'm thinking I need to
loop over the children of MultiService and call stopService on them, but I'm
not sure how to do that. Or should I just call stopServivce on the
MultiService object?

Thanks,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071208/96aee30e/attachment.html>

From exarkun at divmod.com  Sat Dec  8 10:09:23 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 8 Dec 2007 12:09:23 -0500
Subject: [Twisted-Python] stopping MultiService child services
In-Reply-To: <24f63c200712080852m4bf9708fmf38bdb23b13d07cb@mail.gmail.com>
Message-ID: <20071208170923.8162.921056293.divmod.quotient.43829@ohm>

On Sat, 8 Dec 2007 08:52:36 -0800, Don Smith <donwsmith at gmail.com> wrote:
>Hi all,
>
>I'm still a bit of a novice but I'm trying to implement MultiService. The
>trick is that I want my program to be able to change it's config while it is
>running. Once the app realizes it has a new configuration it needs to stop
>all services, load the new config and start services accordingly. However,
>I'm stuck right now with how to stop all services. I'm thinking I need to
>loop over the children of MultiService and call stopService on them, but I'm
>not sure how to do that. Or should I just call stopServivce on the
>MultiService object?

MultiService.stopService will call stopService on all of its child services,
so if the goal is to do that, then a for loop is more work for the same
result.

When you call stopService, keep in mind that it can return a Deferred which
you'll probably want to wait for before trying to start anything again.

Likewise for startup, you can just call MultiService.startService to start
all of its children.

It might also be useful to know that removing a service from a running
MultiService will stop the service and adding a service to a running
MultiService will start it.

Jean-Paul



From chronoss at gmx.de  Sat Dec  8 17:21:27 2007
From: chronoss at gmx.de (Bjoern Schliessmann)
Date: Sun, 09 Dec 2007 01:21:27 +0100
Subject: [Twisted-Python] Conch/insults -- using HistoricRecvLine
Message-ID: <fjfce8$amb$2@ger.gmane.org>

Hello,

I'm using a "standard" Twisted setup here: a ServerFactory which has
basic.LineReceiver subclass as protocol for handling connections;
I'm using methods like connectionMade and lineReceived.

Now I tried the example on HistoricRecvLine from Twisted Conch and I
like it. I tried my protocol to subclass HistoricRecvLine directly
instead of basic.LineReceiver, but the server won't work anymore
(it complains about not finding certain methods as soon as a
connection comes in). So HistoricRecvLine doesn't seem to be
compatible to standard Core protocols.

I had a closer look at the demo_recvline.py example and, besides
under ten lines of real code defining functional stuff, I saw a
real mess of wrapper code. Several different classes are used to
hook up the DemoRecvLine class into the ServerFactory. (This simple
example is, IMHO, a huge difference to the elegance of simple
Twisted Core examples.)

Those wrapper classes are documented in a way that you don't
understand what one class does unless you understand what some few
other classes and interfaces do. Those others are documented in a
similar way ;) There is one tutorial for conch which is in my view
completely unrelated.

No matter what, I tried to adapt and/or wrap my
ex-basic.LineReceiver-and-now-HistoricRecvLine subclass in a way
that I can hook it up to my ServerFactory class, but to no avail
for hours. That's why I'm asking here. Could you please tell me
what exactly I need to do to "convert" my new HistoricRecvLine
subclass in a way that ServerFactory will accept it? Or is there
even a simpler way to get basic readline-like functionality in
Twisted? Because that's what I'm aiming at.

Regards,


Björn

-- 
BOFH excuse #403:

Sysadmin didn't hear pager go off due to loud music from bar-room
speakers.





From sajitrao at gmail.com  Sat Dec  8 18:10:25 2007
From: sajitrao at gmail.com (Sajit Rao)
Date: Sat, 8 Dec 2007 20:10:25 -0500
Subject: [Twisted-Python] Please help: having problems with the simplest
	Twisted Server/Client Demo Example from the Tutorial
Message-ID: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>

Hello all,

I've been trying the most basic (only a few lines) server/client code
example in the Twisted docs and can't get even that to work (code included
below). It's very frustrating, because I did get a simple server/client
example working without using Twisted. Any help will be greatly appreciated.


The problem is that the client never connects with the server. it prints
"Started to Connect" and hangs, then times out with an error. I'm trying
this on my laptop running WinXP - I first start the server program (from the
command line python prompt) and then the client program in another window on
the same machine. Please let me know what I'm doing wrong.

Server Code:

from twisted.internet.protocol import Factory, Protocol
from twisted.internet import reactor

class QOTD(Protocol):
         def connectionMade(self):
              self.transport.write("An apple a day keeps the doctor
away\r\n")
              self.transport.loseConnection()

factory = Factory()
factory.protocol = QOTD

reactor.listenTCP(8007, factory)
reactor.run()

Client Code:

from twisted.internet.protocol import Protocol, ClientFactory
from sys import stdout

class Echo(Protocol):
         def dataReceived(self, data):
              stdout.write(data)

class EchoClientFactory(ClientFactory):
         def startedConnecting(self, connector):
               print 'Started to connect.'

         def buildProtocol(self, addr):
              print 'Connected.'
              return Echo()

         def clientConnectionLost(self, connector, reason):
              print 'Lost connection. Reason:', reason

         def clientConnectionFailed(self, connector, reason):
              print 'Connection failed. Reason:', reason

from twisted.internet import reactor
reactor.connectTCP('localhost', 8007, EchoClientFactory())
reactor.run()


Result

Python 2.5.1 (r251:54863, Apr 18 2007, 08:51:08) [MSC v.1310 32 bit (Intel)]
on
win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import QOTDServer

..then I start the client in a separate window...

Python 2.5.1 (r251:54863, Apr 18 2007, 08:51:08) [MSC v.1310 32 bit (Intel)]
on
win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import EchoClient
Started to connect.
Connection failed. Reason: [Failure instance: Traceback (failure with no
frames)
: <class 'twisted.internet.error.TimeoutError'>: User timeout caused
connection
failure.
][/b]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071208/64a0ca7b/attachment.html>

From itamar at itamarst.org  Sat Dec  8 18:27:18 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 08 Dec 2007 20:27:18 -0500
Subject: [Twisted-Python] Please help: having problems with the
	simplest Twisted Server/Client Demo Example from the Tutorial
In-Reply-To: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>
References: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>
Message-ID: <1197163638.1197.67.camel@localhost.localdomain>

1. Certain Python prompts (e.g. idle) may not work well with Twisted.
Better to run the program directly:

python.exe myscript.py

2. Might want to start a log:

from twisted.python import log
log.startLogging(sys.stderr)

3. Might want to flush when writing to stdout().

At first glance, however, your code looks fine.




From exarkun at divmod.com  Sat Dec  8 20:12:09 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 8 Dec 2007 22:12:09 -0500
Subject: [Twisted-Python] Conch/insults -- using HistoricRecvLine
In-Reply-To: <fjfce8$amb$2@ger.gmane.org>
Message-ID: <20071209031209.8162.485080318.divmod.quotient.43920@ohm>

On Sun, 09 Dec 2007 01:21:27 +0100, Bjoern Schliessmann <chronoss at gmx.de> wrote:
>Hello,
>
>I'm using a "standard" Twisted setup here: a ServerFactory which has
>basic.LineReceiver subclass as protocol for handling connections;
>I'm using methods like connectionMade and lineReceived.
>
>Now I tried the example on HistoricRecvLine from Twisted Conch and I
>like it. I tried my protocol to subclass HistoricRecvLine directly
>instead of basic.LineReceiver, but the server won't work anymore
>(it complains about not finding certain methods as soon as a
>connection comes in). So HistoricRecvLine doesn't seem to be
>compatible to standard Core protocols.

Indeed, it is not compatible.  Despite being an apparently similar thing,
it is actually drastically different.  It may have been a mistake to give
it methods such as "lineReceived", mirroring LineReceiver.

LineReceiver takes a stream of bytes and splits them on a delimiter,
giving each element received to the "lineReceived" callback.  It also
has a convenience method, "sendLine", which writes the given bytes to
the transport and then writes the delimiter.

This is the full extent of its behavior with regard to the network.

HistoricRecvLine does a number of things.  Actually, as you pointed out,
HistoricRecvLine is just one of the objects which must be used in order
to achieve the readline-like behavior it offers.  For the purposes of this
explanation, I'm going to lump them all together and just talk about them
as HistoricRecvLine though.

First, it interprets telnet command sequences.  This means it can do
things like know how big the client's terminal is, negotiate about
linemode behavior, and so on.  This means bytes received over the network
won't always just be split into nicely delimited strings and delivered to
application code: some of them will be consumed internally.  Reversely,
it will write out bytes which are not lines being sent to the client, but
telnet command sequences indicating some requirement or response to the
telnet client.

Next, it interprets vt102 command codes.  This happens after the telnet
command sequences have been removed.  The telnet layer is a protocol, but
it acts as a transport for the vt102 layer.  This layer allows such things
as the cursor to be repositioned, the screen to be cleared, function keys
(such as control, arrows, home, F1, etc) to be interpreted and handled
separately from "normal" input.  Again, this all results in bytes being
sent and received over the socket which have nothing to do with the "lines"
which will eventually be delivered.

Finally, the readline-like behavior is implemented as yet another protocol
on top of the vt102 layer which is acting as yet another transport.  This
means you have readline stacked on top of vt102 stacked on top of telnet
stacked on top of TCP.  Finally, at this layer, eventually some of the bytes
received over the socket will be turned into a line of input which is
delivered via the "lineReceived" method.

In addition, the readline-like layer has to be very careful about what it
sends, since the prompt interface is only preserved by careful management
of the cursor position and other terminal state (ie, what is displaying on
it).  If code simply writes text data to the transport, it will end up in
the prompt somewhere, corrupting the readline interface.

>
>I had a closer look at the demo_recvline.py example and, besides
>under ten lines of real code defining functional stuff, I saw a
>real mess of wrapper code. Several different classes are used to
>hook up the DemoRecvLine class into the ServerFactory. (This simple
>example is, IMHO, a huge difference to the elegance of simple
>Twisted Core examples.)

Yes, it's quite a mess.

>
>Those wrapper classes are documented in a way that you don't
>understand what one class does unless you understand what some few
>other classes and interfaces do. Those others are documented in a
>similar way ;) There is one tutorial for conch which is in my view
>completely unrelated.

Indeed, the tutorial doesn't go into this area.  There is currently no
prose-style documentation for these APIs.

>
>No matter what, I tried to adapt and/or wrap my
>ex-basic.LineReceiver-and-now-HistoricRecvLine subclass in a way
>that I can hook it up to my ServerFactory class, but to no avail
>for hours. That's why I'm asking here. Could you please tell me
>what exactly I need to do to "convert" my new HistoricRecvLine
>subclass in a way that ServerFactory will accept it? Or is there
>even a simpler way to get basic readline-like functionality in
>Twisted? Because that's what I'm aiming at.

There may be other ways (for example, you could run a readline-using
process as a child and allow the network client to interact with it).
Whether any of them are simpler, I'm not sure.

I haven't had a chance to work with this part of Twisted much recently,
but after my most recent attempt, I think I decided that the approach
taken by HistoricRecvLine doesn't lead to easily extensible or reusable
code.  I had been investigating an API based on an explicit buffer object
which allowed different components to be isolated from each other.  You
can take a look at the incomplete results of this (again, no documentation,
sorry) here:

http://twistedmatrix.com/trac/browser/sandbox/exarkun/invective/trunk/invective/widgets.py

LineInputWidget serves roughly the same purpose as HistoricRecvLine.  It
takes a rather different approach, though.  I haven't followed this
investigation through to its conclusion, so I can't say if this approach
ultimately works any better or not.  I'm hopeful, at least. :)

If you want to stick with HistoricRecvLine, then the only suggestion that
comes to mind to make is for you to keep your original LineReceiver sub-
class separate from your HistoricRecvLine subclass.  Give a reference to
the former to the latter: have the HistoricvRecvLine subclass's lineReceived
method call lineReceived on the LineReceiver subclass (which may not need
to be a LineReceiver subclass anymore); give the LineReceiver subclass a
transport which knows how to interact with the terminal in a way which is
not disruptive to HistoricRecvLine's use of it.

If you have any other questions, feel free to ask, particularly if they're
more specific, as those will be much easier to answer. :)

Jean-Paul



From exarkun at twistedmatrix.com  Sat Dec  8 22:05:06 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 09 Dec 2007 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1197176706.71.1668787596@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071209/069e80e7/attachment.html>

From glyph at divmod.com  Sun Dec  9 11:44:07 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 09 Dec 2007 18:44:07 -0000
Subject: [Twisted-Python] Please help: having problems with the simplest
	Twisted Server/Client Demo Example from the Tutorial
In-Reply-To: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>
References: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>
Message-ID: <20071209184407.21558.1177216814.divmod.xquotient.2544@joule.divmod.com>

On 01:10 am, sajitrao at gmail.com wrote:
>The problem is that the client never connects with the server. it 
>prints
>"Started to Connect" and hangs, then times out with an error. I'm 
>trying
>this on my laptop running WinXP - I first start the server program 
>(from the
>command line python prompt) and then the client program in another 
>window on
>the same machine. Please let me know what I'm doing wrong.

Your code, for what it's worth, looks correct.  Try running it on a 
different machine.  (A stock Ubuntu image in VMWare would be best.)

The most common cause of this problem is a software firewall popping up 
a dialog box underneath the window that you're looking at, or denying 
traffic to 'python.exe' altogether.

Another cause I've seen once or twice is the name "localhost" being 
misconfigured.  Try specifically connecting to "127.0.0.1" instead.



From sajitrao at gmail.com  Sun Dec  9 14:18:05 2007
From: sajitrao at gmail.com (Sajit Rao)
Date: Sun, 9 Dec 2007 16:18:05 -0500
Subject: [Twisted-Python] Please help: having problems with the simplest
	Twisted Server/Client Demo Example from the Tutorial
In-Reply-To: <1197163638.1197.67.camel@localhost.localdomain>
References: <e0d23f6a0712081710o1e164ec1webfcedd6c4d8ce5c@mail.gmail.com>
	<1197163638.1197.67.camel@localhost.localdomain>
Message-ID: <e0d23f6a0712091318i22c3483cgc05fc22dff8053a2@mail.gmail.com>

Thanks Itamar, That was exactly the problem. The Twisted server/client
example runs fine when the program is run directly (> python.exe  mycode.py)
but not when imported at the python prompt.

Best,

Sajit


On Dec 8, 2007 8:27 PM, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:

> 1. Certain Python prompts (e.g. idle) may not work well with Twisted.
> Better to run the program directly:
>
> python.exe myscript.py
>
> 2. Might want to start a log:
>
> from twisted.python import log
> log.startLogging(sys.stderr)
>
> 3. Might want to flush when writing to stdout().
>
> At first glance, however, your code looks fine.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071209/b98ec608/attachment.html>

From fbuchinger at gmail.com  Sun Dec  9 16:00:25 2007
From: fbuchinger at gmail.com (Franz Buchinger)
Date: Mon, 10 Dec 2007 00:00:25 +0100
Subject: [Twisted-Python] Emulating urllib.read()-behaviour with
	twisted.web.client
Message-ID: <a07b86220712091500o6cabe398l9efb134b9404113b@mail.gmail.com>

Hello,

I'm currently switching from the urllib library to twisted.web.client in my
HTTP Download Class. How can I emulate urllib.read(bytes=None) behaviour
with twisted.web.client? (only reading n bytes of the ressource, if the
bytes parameter is given).
The second difficulty (at least from my twisted newbie perspective) is to
return the downloaded data to the method caller outside the class. Any hints
are appreciated..

Thanks,

Franz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071210/9acbb848/attachment.html>

From donwsmith at gmail.com  Mon Dec 10 17:15:32 2007
From: donwsmith at gmail.com (Don Smith)
Date: Mon, 10 Dec 2007 16:15:32 -0800
Subject: [Twisted-Python] stopping MultiService child services
In-Reply-To: <20071208170923.8162.921056293.divmod.quotient.43829@ohm>
References: <24f63c200712080852m4bf9708fmf38bdb23b13d07cb@mail.gmail.com>
	<20071208170923.8162.921056293.divmod.quotient.43829@ohm>
Message-ID: <24f63c200712101615sc06109cj4401a3243d5db4d9@mail.gmail.com>

Thank you, this was very helpful!

-Don

On Dec 8, 2007 9:09 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Sat, 8 Dec 2007 08:52:36 -0800, Don Smith <donwsmith at gmail.com> wrote:
> >Hi all,
> >
> >I'm still a bit of a novice but I'm trying to implement MultiService. The
> >trick is that I want my program to be able to change it's config while it
> is
> >running. Once the app realizes it has a new configuration it needs to
> stop
> >all services, load the new config and start services accordingly.
> However,
> >I'm stuck right now with how to stop all services. I'm thinking I need to
> >loop over the children of MultiService and call stopService on them, but
> I'm
> >not sure how to do that. Or should I just call stopServivce on the
> >MultiService object?
>
> MultiService.stopService will call stopService on all of its child
> services,
> so if the goal is to do that, then a for loop is more work for the same
> result.
>
> When you call stopService, keep in mind that it can return a Deferred
> which
> you'll probably want to wait for before trying to start anything again.
>
> Likewise for startup, you can just call MultiService.startService to start
> all of its children.
>
> It might also be useful to know that removing a service from a running
> MultiService will stop the service and adding a service to a running
> MultiService will start it.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071210/a09b7e1e/attachment.html>

From sakalsiz at gmail.com  Tue Dec 11 06:06:45 2007
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Tue, 11 Dec 2007 15:06:45 +0200
Subject: [Twisted-Python] Strange behaviour for epoll reactor
Message-ID: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>

We have a twisted application uses the epoll reactor. Sometimes it
wastes %100 cpu. It has also some threads for single isolated
functions (using deferToThred). First we suspected that threads don't
end and goes to an infinite loop. Because application still accepts
connections and executes the requested functions. Then I ran the
following ps command

ps h -Leo pid,pcpu,args,lwp

Looking at the output, the main thread seemed to be wasting the whole
cpu time. Later on I attached the process to the strace and saw the
output below. I don't how does it happen or when does it happen. It is
not regular nor repeatable, but this is the strace output when it gets
into loop. I send to the list, because it may be useful for someone.

Now we switched back to the select reactor.

P.S.: We use perspective broker on the server side and qt4reactor for
the client.

futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 15) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 796897}, NULL) = 0
gettimeofday({1197377318, 796940}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 15) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 797127}, NULL) = 0
gettimeofday({1197377318, 797169}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 15) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 797388}, NULL) = 0
gettimeofday({1197377318, 797430}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 14) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 797617}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 797692}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 14) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 797879}, NULL) = 0
gettimeofday({1197377318, 797921}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 14) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 798139}, NULL) = 0
gettimeofday({1197377318, 798181}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 14) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 798368}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 798442}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 13) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
gettimeofday({1197377318, 798627}, NULL) = 0
gettimeofday({1197377318, 798669}, NULL) = 0
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0
epoll_wait(8, {{EPOLLERR|EPOLLHUP, {u32=19, u64=593541665440923667}}},
8, 13) = 1
futex(0x8ab6898, FUTEX_WAKE, 1)         = 0



From therve at free.fr  Tue Dec 11 06:56:25 2007
From: therve at free.fr (Thomas =?utf-8?q?Herv=C3=A9?=)
Date: Tue, 11 Dec 2007 14:56:25 +0100
Subject: [Twisted-Python] Strange behaviour for epoll reactor
In-Reply-To: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>
References: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>
Message-ID: <200712111456.25807.therve@free.fr>

Le Tuesday 11 December 2007 14:06:45 Mustafa Sakalsiz, vous avez écrit :
> We have a twisted application uses the epoll reactor. Sometimes it
> wastes %100 cpu.

Yes this a known problem in Twisted 2.5, that has been corrected in trunk.

Hopefully we'll have a release soon, until then you can backport the changes 
in epollreactor into your installation.

-- 
Thomas



From exarkun at divmod.com  Tue Dec 11 06:57:44 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 11 Dec 2007 08:57:44 -0500
Subject: [Twisted-Python] Strange behaviour for epoll reactor
In-Reply-To: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>
Message-ID: <20071211135744.8162.945386516.divmod.quotient.44584@ohm>

On Tue, 11 Dec 2007 15:06:45 +0200, Mustafa Sakalsiz <sakalsiz at gmail.com> wrote:
>We have a twisted application uses the epoll reactor. Sometimes it
>wastes %100 cpu. It has also some threads for single isolated
>functions (using deferToThred). First we suspected that threads don't
>end and goes to an infinite loop. Because application still accepts
>connections and executes the requested functions. Then I ran the
>following ps command
>
>ps h -Leo pid,pcpu,args,lwp
>
>Looking at the output, the main thread seemed to be wasting the whole
>cpu time. Later on I attached the process to the strace and saw the
>output below. I don't how does it happen or when does it happen. It is
>not regular nor repeatable, but this is the strace output when it gets
>into loop. I send to the list, because it may be useful for someone.
>
>Now we switched back to the select reactor.
>
>P.S.: We use perspective broker on the server side and qt4reactor for
>the client.

This sounds like this issue:

  http://twistedmatrix.com/trac/ticket/2809

This is fixed in current trunk at HEAD and the fix will be included in the
next release of Twisted.

Jean-Paul



From zooko at zooko.com  Tue Dec 11 13:25:18 2007
From: zooko at zooko.com (zooko)
Date: Tue, 11 Dec 2007 12:25:18 -0800
Subject: [Twisted-Python] number of Hack Fests reaches an all-time high
References: <BAF60108-85CE-46A5-B74E-37612E61A6F5@allmydata.com>
Message-ID: <33EB0EA7-1747-40B9-9310-0AEA61994A53@zooko.com>

Folks:

There will be a Hack Fest this coming Friday, December 14th, at 17:00
hours Pacific Time, at the offices of allmydata.com in Potrero Hill,
San Francisco.

This will be the third Hack Fest, making its cardinal number one
larger than the cardinal number of any previous Hack Fest! [1, 2]

We already have two people lined up to show off their projects,
making the number of presenters with prior planning one larger than
any previous number of prepared presentations.

Those two are Pavel with a Python decompiler ("WATCH as he
translates .pyc files into .py files before your very eyes!") and
Nejucomo with "Conway's Second Life", which is mattress of cells
floating above the ground which spawn new cells and reconfigure
themselves in order to play Conway's Life.

Since one of these demos will be taking place in Second Life
(projected onto the wall of our office in First Life), we thought it
would be fun to invite people who can't physically come to San
Francisco to virtually join the Hack Fest in Second Life.  Please e-
mail me zooko at zooko.com and nejucomo at gmail.com to coordinate.

By the way, there will probably be more projects at play at the Hack
Fest -- these two are just the only two that are already planned.
You are welcome to bring yours!

As usual, allmydata.com will generously provide drinks, eats, and
funky beats.  Please RSVP to zooko at zooko.com and secorp at allmydata.com.

Regards,

Zooko

[1] http://lists.zooko.com/pipermail/p2p-hackers/2007-November/ 
001412.html
[2] http://lists.zooko.com/pipermail/p2p-hackers/2007-November/ 
001444.html




From adelagon at gmail.com  Tue Dec 11 18:56:44 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 12 Dec 2007 09:56:44 +0800
Subject: [Twisted-Python] Strange behaviour for epoll reactor
In-Reply-To: <20071211135744.8162.945386516.divmod.quotient.44584@ohm>
References: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>
	<20071211135744.8162.945386516.divmod.quotient.44584@ohm>
Message-ID: <7a01f6c00712111756n36f7a7a2sf07045e71778c9eb@mail.gmail.com>

To summarize Jean-Paul's link, you can just a two-liner patch in the
epollreactor.py to fix this (after line 201 if you're using the
twisted 2.50release)

if event & _epoll.HUP or event & _epoll.ERR:
                    why = main.CONNECTION_LOST


On Dec 11, 2007 9:57 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Tue, 11 Dec 2007 15:06:45 +0200, Mustafa Sakalsiz <sakalsiz at gmail.com>
> wrote:
> >We have a twisted application uses the epoll reactor. Sometimes it
> >wastes %100 cpu. It has also some threads for single isolated
> >functions (using deferToThred). First we suspected that threads don't
> >end and goes to an infinite loop. Because application still accepts
> >connections and executes the requested functions. Then I ran the
> >following ps command
> >
> >ps h -Leo pid,pcpu,args,lwp
> >
> >Looking at the output, the main thread seemed to be wasting the whole
> >cpu time. Later on I attached the process to the strace and saw the
> >output below. I don't how does it happen or when does it happen. It is
> >not regular nor repeatable, but this is the strace output when it gets
> >into loop. I send to the list, because it may be useful for someone.
> >
> >Now we switched back to the select reactor.
> >
> >P.S.: We use perspective broker on the server side and qt4reactor for
> >the client.
>
> This sounds like this issue:
>
>  http://twistedmatrix.com/trac/ticket/2809
>
> This is fixed in current trunk at HEAD and the fix will be included in the
> next release of Twisted.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071212/e1aa3435/attachment.html>

From sajitrao at gmail.com  Tue Dec 11 20:07:41 2007
From: sajitrao at gmail.com (Sajit Rao)
Date: Tue, 11 Dec 2007 22:07:41 -0500
Subject: [Twisted-Python] Server/Client bi-directional data-transfer - need
	a solution
Message-ID: <e0d23f6a0712111907y3cfd073dr52312c40209658c1@mail.gmail.com>

Hi,

*The Goal:*

   - I'm trying to write a simple server/client app where the client can
   send the server either a small string like "hello" OR a small file (txt,
   pdf, ppt,.. let's say < 5MB ).
   - The server needs to figure out if the data it received is a simple
   string or a file and symmetrically may decide to send back to the client a
   simple string or a small file.
   - As a bonus, It's highly desirable that the transfer be secure - but
   it's ok for the first version if it isn't

*Questions:*

What's the cleanest way to accomplish this? I've been looking at the single
Howto/Example that exists for *twisted.conch* but still can't understand
several things. In particular

   1. Should I create two separate channels between server and client -
   one for simple strings and one for files so that the client or server knows
   the type of data on that channel?

   2. Should the files be mime-encoded at one end and mime-decoded at the
   other so that file-type is automatically handled?

   3. I've read that there is a python package called paramiko that
   implements ssh2 transfer - how does this compare with twisted.conch?

This is my first time playing around with twisted or any kind of networking
stuff so any kind of help will be appreciated

Thanks!

Sajit
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071211/4e6b48ad/attachment.html>

From donwsmith at gmail.com  Tue Dec 11 22:08:30 2007
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 11 Dec 2007 21:08:30 -0800
Subject: [Twisted-Python] MultiService puzzler
Message-ID: <24f63c200712112108l92c64d6i93e91ccdc22c0814@mail.gmail.com>

Hi all,

I'm trying to build an app using MultiService. I need to have 2 services,
one that listens for UDP datagrams and another that can send those datagrams
to an ActiveMQ server via a Stomp client.

I can set up the two services just fine, but I'm stuck with how to call the
MQ service send method from the UDPServer instance.

Some code to illustrate:



class GetUDP(DatagramProtocol):

    def datagramReceived(self, datagram, address):
        print datagram,address
        #Send datagram to the queue server
        # I don't know how to access the send method for the Stomp client
service!



testq = internet.TCPClient(APPVARIABLES['queue_server'],
int(APPVARIABLES['queue_port']), connections.StompClientFactory
(username='',password='',queue='/queue/test'))
testq.setName('Testq')
testq.setServiceParent(MQService)


#create a UDP listener
#TODO: this should be driven by the config file
#reactor.listenUDP(42000, GetUDP())
internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
# Create an application as normal
application = service.Application("MQExample")

# Connect our MultiService to the application, just like a normal service.
MQService.setServiceParent(application)


Note: this is won't run exactly as is, but should give an idea of my
problem. I've setup the ActiveMQ Stomp client as 'testq'. I've setup the
UDPServer service to listen for UDP packets. I can get the UDP packets and
print them, but I can't figure out how to hand them to my Stomp client's
send() method. This is possible, right?

Thanks,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071211/7ffb9910/attachment.html>

From maarten at treewalker.org  Wed Dec 12 03:20:20 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Wed, 12 Dec 2007 11:20:20 +0100
Subject: [Twisted-Python] Server/Client bi-directional data-transfer -
	need a solution
In-Reply-To: <e0d23f6a0712111907y3cfd073dr52312c40209658c1@mail.gmail.com>
References: <e0d23f6a0712111907y3cfd073dr52312c40209658c1@mail.gmail.com>
Message-ID: <200712121120.27558.maarten@treewalker.org>

On Wednesday 12 December 2007, Sajit Rao wrote:

> *The Goal:*
>
>    - I'm trying to write a simple server/client app where the client can
>    send the server either a small string like "hello" OR a small file
> (txt, pdf, ppt,.. let's say < 5MB ).
>    - The server needs to figure out if the data it received is a simple
>    string or a file and symmetrically may decide to send back to the
> client a simple string or a small file.
>    - As a bonus, It's highly desirable that the transfer be secure - but
>    it's ok for the first version if it isn't

Would an HTTP POST suffice? You could easily test it using a web browser or 
a program like wget and adding a secure channel is done by switching from 
HTTP to HTTPS later.

If your application works like an instant messenger, consider using Twisted 
Words, for example with the XMPP (Jabber) protocol.

Does the client/server connection have to be able to pass a firewall or 
proxy? In that case HTTP or something that can be run over HTTP would be a 
big advantage.

> *Questions:*
>
> What's the cleanest way to accomplish this? I've been looking at the
> single Howto/Example that exists for *twisted.conch* but still can't
> understand several things. In particular
>
>    1. Should I create two separate channels between server and client -
>    one for simple strings and one for files so that the client or server
> knows the type of data on that channel?

That depends on what protocol you want to use over the channel(s). If the 
protocol can send series of text strings and binaries over the same channel 
then you need only one. But if having separate channels helps in 
simplifying the protocol, then that might be better.

One design decision to make is whether to keep the channel(s) open the whole 
time or open them when there is new data and then close them when the 
transfer is done. Or maybe keep the text string channel open all the time 
and open a file transfer channel on demand.

What kind of performance characteristics do you need? Does latency on the 
text strings matter? Are you going to transfer 10 files a day or 10000?

>    2. Should the files be mime-encoded at one end and mime-decoded at the
>    other so that file-type is automatically handled?

MIME encoding gives you a way to send the file name and type and it can be 
used over a text stream. However, the encoding of the data itself is not 
really needed if your channel is 8-bit clear and everything except e-mail 
is 8-bit clear nowadays (I think). For small files the overhead is neglible 
though.

>    3. I've read that there is a python package called paramiko that
>    implements ssh2 transfer - how does this compare with twisted.conch?

I don't know. One thing you could look at is which main loop you want to 
use. If you want to use Twisted's reactor, conch would better integrate 
with that of course. But if you want to use a GUI toolkit not supported by 
Twisted, it would take some effort to merge the main loops, so then running 
paramiko in a thread might be easier.

Another thing to look at is the license: paramiko is LGPL, which places more 
restrictions on its use than Twisted's MIT license. Depending on your 
situation that may or may not be important.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20071212/2b28e8df/attachment.sig>

From dfarrell at mypublisher.com  Wed Dec 12 07:29:12 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Wed, 12 Dec 2007 09:29:12 -0500
Subject: [Twisted-Python] How send information (constructor data?) to a
	derived protocol
Message-ID: <318F79422ADC5041A93343721F84474D8B063C@exchange.mypublisher.local>

Hi all,

 

I'm trying to develop a system to handle Python logging messages via the
logging.handlers.sockethandler system. What I want is a to be able to
have multiple Python processes logging to the same log file, as well as
a global log file. I want to do this by having a local logging server
that handles all of the log messages from all of the Python processes
per server. I also want to have a global logging server that handles all
logging messages from all processes from all servers. I've written a
class that derives from Protocol and does the right thing with the log
messages generated by the logging.handler.sockethandler, and I'd like to
use this class for both the local and global servers. On the global
server machine there will be both services running; the local and global
server. 

 

So here's where I finally get to my question. I'd like to use my derived
Protocol class, but I want each instance of it (in the local server and
in the global server) to use a separate logging configuration file. How
do I pass information to my Protocol class so that it configures itself
for the correct logging configuration file? I don't see how to pass
information via the constructor, and I don't see how else to get
information in there. I'm fairly new to Twisted, so maybe I'm missing
something obvious. Any help would be greatly appreciated!

 

Thanks,

Doug

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071212/5ec44e91/attachment.html>

From exarkun at divmod.com  Wed Dec 12 07:44:49 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 12 Dec 2007 09:44:49 -0500
Subject: [Twisted-Python] How send information (constructor data?) to a
	derived protocol
In-Reply-To: <318F79422ADC5041A93343721F84474D8B063C@exchange.mypublisher.local>
Message-ID: <20071212144449.8162.134006786.divmod.quotient.44975@ohm>

On Wed, 12 Dec 2007 09:29:12 -0500, Doug Farrell <dfarrell at mypublisher.com> wrote:
>Hi all,
>
> [snip]
>
>So here's where I finally get to my question. I'd like to use my derived
>Protocol class, but I want each instance of it (in the local server and
>in the global server) to use a separate logging configuration file. How
>do I pass information to my Protocol class so that it configures itself
>for the correct logging configuration file? I don't see how to pass
>information via the constructor, and I don't see how else to get
>information in there. I'm fairly new to Twisted, so maybe I'm missing
>something obvious. Any help would be greatly appreciated!
>

The factory is responsible for creating the protocol.  So you can do
something like this:

    from twisted.internet.protocol import Protocol, ServerFactory

    class LoggingProtocol(Protocol):
        ...

    class LoggingServerFactory(ServerFactory):
        protocol = LoggingProtocol

        def buildProtocol(self, address):
            proto = self.protocol(arguments)
            proto.factory = self # if you want - it's conventional
            return proto

Jean-Paul
        



From raja at aonic.net  Wed Dec 12 07:51:34 2007
From: raja at aonic.net (Raja)
Date: Wed, 12 Dec 2007 09:51:34 -0500
Subject: [Twisted-Python] (no subject)
Message-ID: <A4E5D62C-210C-4D3A-BAE0-F4BF652CC613@aonic.net>



-Raja



From christian.simms at gmail.com  Wed Dec 12 09:16:25 2007
From: christian.simms at gmail.com (Christian Simms)
Date: Wed, 12 Dec 2007 11:16:25 -0500
Subject: [Twisted-Python] MultiService puzzler
In-Reply-To: <24f63c200712112108l92c64d6i93e91ccdc22c0814@mail.gmail.com>
References: <24f63c200712112108l92c64d6i93e91ccdc22c0814@mail.gmail.com>
Message-ID: <cd8fa6f90712120816u1327c60fv17df3250d8d03257@mail.gmail.com>

On Dec 12, 2007 12:08 AM, Don Smith <donwsmith at gmail.com> wrote:
> Hi all,
>
> I'm trying to build an app using MultiService. I need to have 2 services,
> one that listens for UDP datagrams and another that can send those datagrams
> to an ActiveMQ server via a Stomp client.
>
> I can set up the two services just fine, but I'm stuck with how to call the
> MQ service send method from the UDPServer instance.
>
> Some code to illustrate:
>
>
>
> class GetUDP(DatagramProtocol):
>
>     def datagramReceived(self, datagram, address):
>         print datagram,address
>         #Send datagram to the queue server
>         # I don't know how to access the send method for the Stomp client
> service!
>
>
>
> testq = internet.TCPClient(APPVARIABLES['queue_server'],
> int(APPVARIABLES['queue_port']), connections.StompClientFactory
> (username='',password='',queue='/queue/test'))
> testq.setName('Testq')
> testq.setServiceParent(MQService)
>
>
> #create a UDP listener
> #TODO: this should be driven by the config file
> #reactor.listenUDP(42000, GetUDP())
> internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
> # Create an application as normal
> application = service.Application("MQExample")
>
> # Connect our MultiService to the application, just like a normal service.
> MQService.setServiceParent(application)
>
>
> Note: this is won't run exactly as is, but should give an idea of my
> problem. I've setup the ActiveMQ Stomp client as 'testq'. I've setup the
> UDPServer service to listen for UDP packets. I can get the UDP packets and
> print them, but I can't figure out how to hand them to my Stomp client's
> send() method. This is possible, right?
>
> Thanks,
>
> Don
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

The answer is really easy -- you don't need any twisted magic to do
this, you just need to use standard Python mechanisms.  Your UDP
listener, when it receives some data, just needs a Python reference to
your Stomp client. You could have stuffed a reference to the Stomp
client in a module global variable (naughty!), or better, you could
have stuffed it in an attribute of your GetUDP object. So you could
change this line:

   internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)

to these lines:

   udpService = GetUDP()
   udpService.stompClient = testq  # stuff it in!
   internet.UDPServer(42000,udpService).setServiceParent(MQService)

Cheers,
Christian



From donwsmith at gmail.com  Wed Dec 12 10:10:31 2007
From: donwsmith at gmail.com (Don Smith)
Date: Wed, 12 Dec 2007 09:10:31 -0800
Subject: [Twisted-Python] MultiService puzzler
In-Reply-To: <cd8fa6f90712120816u1327c60fv17df3250d8d03257@mail.gmail.com>
References: <24f63c200712112108l92c64d6i93e91ccdc22c0814@mail.gmail.com>
	<cd8fa6f90712120816u1327c60fv17df3250d8d03257@mail.gmail.com>
Message-ID: <24f63c200712120910l4ac9fd6fjb10afd6a93aad4b3@mail.gmail.com>

Thanks for your response, Christian!

However, this still does not work and I think it is related to the
StompClientFactory and the StompProtocol I'm using. I'm including those at
the end of this email so you can see what they do.

I changed my GetUDP class to this:

class GetUDP(DatagramProtocol):

    def datagramReceived(self, datagram, address):
        print datagram,address
        #Send datagram to the queue server
        stompclient.send(datagram)

And I changed the instantiation to what you gave me, but I get this error
when I get a UDP packet:

        File "Agent_service_test.py", line 103, in datagramReceived
          stompclient.send(datagram)
      exceptions.NameError: global name 'stompclient' is not defined


Here are my stomp classes:

class StompProtocol(Protocol, stomper.Engine):

    def __init__(self, username='', password='', queue=''):
        stomper.Engine.__init__(self)
        self.username = username
        self.password = password
        self.counter = 1
        self.log = logging.getLogger("sender")
        self.queue = queue

    def connected(self, msg):
        """Once I've connected I want to subscribe to the message queue.
        """
        stomper.Engine.connected(self, msg)

        #self.log.info("Connected: session %s. Begining say hello." %
msg['headers']['session'])
        #lc = LoopingCall(self.send)
        #lc.start(1)

        f = stomper.Frame()
        f.unpack(stomper.subscribe(self.queue))

        # ActiveMQ specific headers:
        #
        # prevent the messages we send comming back to us.
        f.headers['activemq.noLocal'] = 'true'

        return f.pack()


    def ack(self, msg):
        """Processes the received message. I don't need to
        generate an ack message.

        """
        self.log.info("SENDER - received: %s " % msg['body'])
        return stomper.NO_REPONSE_NEEDED


    def send(self):
        """Send out a hello message periodically.
        """
        self.log.info("Saying hello (%d)." % self.counter)
        self.counter += 1

        f = stomper.Frame()
        f.unpack(stomper.send(self.queue, 'hello there (%d)' % self.counter
))

        # ActiveMQ specific headers:
        #
        f.headers['persistent'] = 'true'

        self.transport.write(f.pack())


    def connectionMade(self):
        """Register with stomp server.
        """
        cmd = stomper.connect(self.username, self.password)
        self.transport.write(cmd)


    def dataReceived(self, data):
        """Data received, react to it and respond if needed.
        """
        msg = stomper.unpack_frame(data)

        returned = self.react(msg)

        if returned:
            self.transport.write(returned)

class StompClientFactory(ReconnectingClientFactory):
    def __init__(self, username='', password='',
queue='',queue_type='',config=''):
        self.username=username
        self.password=password
        self.queue=queue
        self.queue_type=queue_type
        self.config_file=config


    def buildProtocol(self, addr):
        if self.queue_type =='config':
            return ConfigurationProtocol(self.queue,self.config_file,
self.username, self.password)
        else:
            return StompProtocol(self.username, self.password, self.queue)

    def clientConnectionLost(self, connector, reason):
        """Lost connection
        """
        print 'Lost connection.  Reason:', reason


    def clientConnectionFailed(self, connector, reason):
        """Connection failed
        """
        print 'Connection failed. Reason:', reason
        ReconnectingClientFactory.clientConnectionFailed(self, connector,
reason)

On Dec 12, 2007 8:16 AM, Christian Simms <christian.simms at gmail.com> wrote:

> On Dec 12, 2007 12:08 AM, Don Smith <donwsmith at gmail.com> wrote:
> > Hi all,
> >
> > I'm trying to build an app using MultiService. I need to have 2
> services,
> > one that listens for UDP datagrams and another that can send those
> datagrams
> > to an ActiveMQ server via a Stomp client.
> >
> > I can set up the two services just fine, but I'm stuck with how to call
> the
> > MQ service send method from the UDPServer instance.
> >
> > Some code to illustrate:
> >
> >
> >
> > class GetUDP(DatagramProtocol):
> >
> >     def datagramReceived(self, datagram, address):
> >         print datagram,address
> >         #Send datagram to the queue server
> >         # I don't know how to access the send method for the Stomp
> client
> > service!
> >
> >
> >
> > testq = internet.TCPClient(APPVARIABLES['queue_server'],
> > int(APPVARIABLES['queue_port']), connections.StompClientFactory
> > (username='',password='',queue='/queue/test'))
> > testq.setName('Testq')
> > testq.setServiceParent(MQService)
> >
> >
> > #create a UDP listener
> > #TODO: this should be driven by the config file
> > #reactor.listenUDP(42000, GetUDP())
> > internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
> > # Create an application as normal
> > application = service.Application("MQExample")
> >
> > # Connect our MultiService to the application, just like a normal
> service.
> > MQService.setServiceParent(application)
> >
> >
> > Note: this is won't run exactly as is, but should give an idea of my
> > problem. I've setup the ActiveMQ Stomp client as 'testq'. I've setup the
> > UDPServer service to listen for UDP packets. I can get the UDP packets
> and
> > print them, but I can't figure out how to hand them to my Stomp client's
> > send() method. This is possible, right?
> >
> > Thanks,
> >
> > Don
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
> The answer is really easy -- you don't need any twisted magic to do
> this, you just need to use standard Python mechanisms.  Your UDP
> listener, when it receives some data, just needs a Python reference to
> your Stomp client. You could have stuffed a reference to the Stomp
> client in a module global variable (naughty!), or better, you could
> have stuffed it in an attribute of your GetUDP object. So you could
> change this line:
>
>   internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
>
> to these lines:
>
>   udpService = GetUDP()
>   udpService.stompClient = testq  # stuff it in!
>   internet.UDPServer(42000,udpService).setServiceParent(MQService)
>
> Cheers,
> Christian
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071212/6d88ac3d/attachment.html>

From RDMcGuire01 at indianatech.net  Wed Dec 12 10:26:00 2007
From: RDMcGuire01 at indianatech.net (Ryan McGuire)
Date: Wed, 12 Dec 2007 12:26:00 -0500
Subject: [Twisted-Python] multiple mysql results in function
Message-ID: <f5879bda62234a20b5ce3b2d3c5f29fc@indianatech.net>


 I am using xmlrpc to send and recieve messages to a "thought board" kind of thing, and being COMPLETELY new to python and twisted, I am kind of stuck on something.

I have everything working except for the fact that I want to return multiple rows when I run the mysql query.

Here is the code I have:

from twisted.web import xmlrpc, server
import MySQLdb
from twisted.enterprise import adbapi

class itr(xmlrpc.XMLRPC):

    def xmlrpc_thought(self, uname, pwrd, arg, msg):
        """Return the most recent thought"""
        if arg == "get":
                db=adbapi.ConnectionPool("MySQLdb",host='192.168.0.220',user='redbeardmcg',passwd='xxxxx',db='itr')
                db.start()
                return db.runQuery("""
                        SELECT * FROM thoughts
                        WHERE tid > (SELECT curtid FROM users
                        WHERE uid = (SELECT uid FROM users
                        WHERE username='%s' AND password='%s'))
                """ % (uname, pwrd)).addCallback(lambda results: results[0][2])
                db.stop()
        if arg == "post":
                db=adbapi.ConnectionPool("MySQLdb",host='192.168.0.220',user='redbeardmcg',passwd='xxxxx',db='itr')
                db.start()
                db.runQuery("""
                        INSERT INTO thoughts(uid,thought)
                        VALUES((SELECT uid FROM users WHERE
                        username='%s' AND password='%s'),
                        '%s')
                """ % (uname, pwrd, msg))
                x='Thought added'
                return x

if __name__ == '__main__':
    from twisted.internet import reactor
    r = itr()
    reactor.listenTCP(8899, server.Site(r))
    reactor.run()

I believe something needs to be changed in the callback, but I very well may be wrong.

Thanks in advance!

RDMcGuire01 at indianatech.net

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071212/07ad6c41/attachment.html>

From arnarbi at gmail.com  Wed Dec 12 18:17:10 2007
From: arnarbi at gmail.com (Arnar Birgisson)
Date: Thu, 13 Dec 2007 01:17:10 +0000
Subject: [Twisted-Python] PyAMF 0.1.0 alpha
Message-ID: <28012bc60712121717k1d489d67h75e31d037930c804@mail.gmail.com>

Hello there,

For people communicating with Flash or Flex/AIR frontends, this might be of use.

cheers,
Arnar

We are pleased to announce the first alpha version of PyAMF.

PyAMF [1] is a lightweight library that allows Flash and Python
applications to communicate via Adobe's ActionScript Message Format.

A summary of features in this release:

 * AMF0 and AMF3 encoders/decoders
 * Support for IExternalizable, ArrayCollection, ObjectProxy, ByteArray,
RecordSet and RemoteObject
 * Remoting gateways for Twisted, WSGI, and Django
 * Authentication/setCredentials support (AMF0 only)
 * zlib compression support for ByteArray
 * Remoting client with httplib

Check out the download page [2] and installation instructions [3].

Got questions? First stop is the mailing list [4].

Cheers,

The PyAMF Team

[1] - http://pyamf.org
[2] - http://pyamf.org/wiki/Download
[3] - http://pyamf.org/wiki/Install
[4] - http://pyamf.org/wiki/MailingList



From itamar at itamarst.org  Wed Dec 12 19:12:57 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 12 Dec 2007 21:12:57 -0500
Subject: [Twisted-Python] multiple mysql results in function
In-Reply-To: <f5879bda62234a20b5ce3b2d3c5f29fc@indianatech.net>
References: <f5879bda62234a20b5ce3b2d3c5f29fc@indianatech.net>
Message-ID: <1197511977.24724.29.camel@localhost.localdomain>


On Wed, 2007-12-12 at 12:26 -0500, Ryan McGuire wrote:
> 
> I am using xmlrpc to send and recieve messages to a "thought board"
> kind of thing, and being COMPLETELY new to python and twisted, I am
> kind of stuck on something.
> 
> I have everything working except for the fact that I want to return
> multiple rows when I run the mysql query.
> 
> Here is the code I have:

>                 return db.runQuery("""
>                         SELECT * FROM thoughts
>                         WHERE tid > (SELECT curtid FROM users
>                         WHERE uid = (SELECT uid FROM users
>                         WHERE username='%s' AND password='%s'))
>                 """ % (uname, pwrd)).addCallback(lambda results:
> results[0][2])
>                 db.stop()

1. Notice you stop the database after its returned from function; i.e.
it won't be.

2. Better to keep around a single database pool instance (e.g. as
attribute of xmlrpc resource).

3. Perhaps you should, once you've familiarized yourself with DB-API and
mysqldb's implementation, look at runInteraction method of the dbpool
that lets you run a whole function instead of just a single SQL query in
the context of a transaction. The adbapi HOWTO covers this.




From maarten at treewalker.org  Wed Dec 12 19:35:34 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Thu, 13 Dec 2007 03:35:34 +0100
Subject: [Twisted-Python] multiple mysql results in function
In-Reply-To: <f5879bda62234a20b5ce3b2d3c5f29fc@indianatech.net>
References: <f5879bda62234a20b5ce3b2d3c5f29fc@indianatech.net>
Message-ID: <200712130335.40210.maarten@treewalker.org>

On Wednesday 12 December 2007, Ryan McGuire wrote:

>     def xmlrpc_thought(self, uname, pwrd, arg, msg):
>         """Return the most recent thought"""
>         if arg == "get":
>                
> db=adbapi.ConnectionPool("MySQLdb",host='192.168.0.220',user='redbeardmcg
>',passwd='xxxxx',db='itr') db.start()
>                 return db.runQuery("""
>                         SELECT * FROM thoughts
>                         WHERE tid > (SELECT curtid FROM users
>                         WHERE uid = (SELECT uid FROM users
>                         WHERE username='%s' AND password='%s'))
>                 """ % (uname, pwrd)).addCallback(lambda results:
> results[0][2])

Unrelated to your problem, but are you aware that this code is vulnerable to 
SQL injection? The values of "uname" and "pwrd" are set by the XMLRPC 
client and are not escaped when they are inserted into the query. This 
might not be a problem if you trust everyone on your network, but if you 
expose this to the internet or mischievous local users, you're asking for 
trouble.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20071213/ca5b3b54/attachment.sig>

From donwsmith at gmail.com  Wed Dec 12 19:51:24 2007
From: donwsmith at gmail.com (Don Smith)
Date: Wed, 12 Dec 2007 18:51:24 -0800
Subject: [Twisted-Python] MultiService puzzler
In-Reply-To: <24f63c200712120910l4ac9fd6fjb10afd6a93aad4b3@mail.gmail.com>
References: <24f63c200712112108l92c64d6i93e91ccdc22c0814@mail.gmail.com>
	<cd8fa6f90712120816u1327c60fv17df3250d8d03257@mail.gmail.com>
	<24f63c200712120910l4ac9fd6fjb10afd6a93aad4b3@mail.gmail.com>
Message-ID: <24f63c200712121851m13189cafhfebaae38ef5dcb1e@mail.gmail.com>

Ah, I realized I need to call the reference the stompClient like this '
self.stompClient'.

Unfortunately, what is returned by this:

testq = internet.TCPClient(APPVARIABLES['queue_server'],
int(APPVARIABLES['queue_port']), connections.StompClientFactory
(username='',password='',queue='/queue/test'))

is the StompClientFactory object, not the StompProtocol object which
contains the send() method.

So, any ideas on how I can reference the StompProtocol object (that is
created by the StompClientFactory) from the GetUDP object?

Thanks,

Don

On Dec 12, 2007 9:10 AM, Don Smith <donwsmith at gmail.com> wrote:

> Thanks for your response, Christian!
>
> However, this still does not work and I think it is related to the
> StompClientFactory and the StompProtocol I'm using. I'm including those at
> the end of this email so you can see what they do.
>
> I changed my GetUDP class to this:
>
> class GetUDP(DatagramProtocol):
>
>     def datagramReceived(self, datagram, address):
>         print datagram,address
>         #Send datagram to the queue server
>         stompclient.send(datagram)
>
> And I changed the instantiation to what you gave me, but I get this error
> when I get a UDP packet:
>
>         File "Agent_service_test.py", line 103, in datagramReceived
>           stompclient.send(datagram)
>       exceptions.NameError: global name 'stompclient' is not defined
>
>
> Here are my stomp classes:
>
> class StompProtocol(Protocol, stomper.Engine):
>
>     def __init__(self, username='', password='', queue=''):
>         stomper.Engine.__init__(self)
>         self.username = username
>         self.password = password
>         self.counter = 1
>         self.log = logging.getLogger("sender")
>         self.queue = queue
>
>     def connected(self, msg):
>         """Once I've connected I want to subscribe to the message queue.
>         """
>         stomper.Engine.connected(self, msg)
>
>         #self.log.info("Connected: session %s. Begining say hello." %
> msg['headers']['session'])
>         #lc = LoopingCall(self.send)
>         #lc.start(1)
>
>         f = stomper.Frame ()
>         f.unpack(stomper.subscribe(self.queue))
>
>         # ActiveMQ specific headers:
>         #
>         # prevent the messages we send comming back to us.
>         f.headers['activemq.noLocal'] = 'true'
>
>         return f.pack()
>
>
>     def ack(self, msg):
>         """Processes the received message. I don't need to
>         generate an ack message.
>
>         """
>         self.log.info("SENDER - received: %s " % msg['body'])
>         return stomper.NO_REPONSE_NEEDED
>
>
>     def send(self):
>         """Send out a hello message periodically.
>         """
>         self.log.info("Saying hello (%d)." % self.counter)
>         self.counter += 1
>
>         f = stomper.Frame()
>         f.unpack(stomper.send(self.queue, 'hello there (%d)' %
> self.counter))
>
>         # ActiveMQ specific headers:
>         #
>         f.headers['persistent'] = 'true'
>
>         self.transport.write(f.pack())
>
>
>     def connectionMade(self):
>         """Register with stomp server.
>         """
>         cmd = stomper.connect(self.username, self.password)
>         self.transport.write(cmd)
>
>
>     def dataReceived(self, data):
>         """Data received, react to it and respond if needed.
>         """
>         msg = stomper.unpack_frame(data)
>
>         returned = self.react(msg)
>
>         if returned:
>             self.transport.write(returned)
>
> class StompClientFactory(ReconnectingClientFactory):
>     def __init__(self, username='', password='',
> queue='',queue_type='',config=''):
>         self.username=username
>         self.password=password
>         self.queue=queue
>         self.queue_type=queue_type
>         self.config_file=config
>
>
>     def buildProtocol(self, addr):
>         if self.queue_type =='config':
>             return ConfigurationProtocol(self.queue,self.config_file,
> self.username, self.password)
>         else:
>             return StompProtocol(self.username, self.password, self.queue)
>
>     def clientConnectionLost(self, connector, reason):
>         """Lost connection
>         """
>         print 'Lost connection.  Reason:', reason
>
>
>     def clientConnectionFailed(self, connector, reason):
>         """Connection failed
>         """
>         print 'Connection failed. Reason:', reason
>         ReconnectingClientFactory.clientConnectionFailed(self, connector,
> reason)
>
>
> On Dec 12, 2007 8:16 AM, Christian Simms <christian.simms at gmail.com >
> wrote:
>
> > On Dec 12, 2007 12:08 AM, Don Smith < donwsmith at gmail.com> wrote:
> > > Hi all,
> > >
> > > I'm trying to build an app using MultiService. I need to have 2
> > services,
> > > one that listens for UDP datagrams and another that can send those
> > datagrams
> > > to an ActiveMQ server via a Stomp client.
> > >
> > > I can set up the two services just fine, but I'm stuck with how to
> > call the
> > > MQ service send method from the UDPServer instance.
> > >
> > > Some code to illustrate:
> > >
> > >
> > >
> > > class GetUDP(DatagramProtocol):
> > >
> > >     def datagramReceived(self, datagram, address):
> > >         print datagram,address
> > >         #Send datagram to the queue server
> > >         # I don't know how to access the send method for the Stomp
> > client
> > > service!
> > >
> > >
> > >
> > > testq = internet.TCPClient(APPVARIABLES['queue_server'],
> > > int(APPVARIABLES['queue_port']), connections.StompClientFactory
> > > (username='',password='',queue='/queue/test'))
> > > testq.setName('Testq')
> > > testq.setServiceParent(MQService)
> > >
> > >
> > > #create a UDP listener
> > > #TODO: this should be driven by the config file
> > > #reactor.listenUDP(42000, GetUDP())
> > > internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
> > > # Create an application as normal
> > > application = service.Application("MQExample")
> > >
> > > # Connect our MultiService to the application, just like a normal
> > service.
> > > MQService.setServiceParent(application)
> > >
> > >
> > > Note: this is won't run exactly as is, but should give an idea of my
> > > problem. I've setup the ActiveMQ Stomp client as 'testq'. I've setup
> > the
> > > UDPServer service to listen for UDP packets. I can get the UDP packets
> > and
> > > print them, but I can't figure out how to hand them to my Stomp
> > client's
> > > send() method. This is possible, right?
> > >
> > > Thanks,
> > >
> > > Don
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> >
> > The answer is really easy -- you don't need any twisted magic to do
> > this, you just need to use standard Python mechanisms.  Your UDP
> > listener, when it receives some data, just needs a Python reference to
> > your Stomp client. You could have stuffed a reference to the Stomp
> > client in a module global variable (naughty!), or better, you could
> > have stuffed it in an attribute of your GetUDP object. So you could
> > change this line:
> >
> >   internet.UDPServer(42000,GetUDP()).setServiceParent(MQService)
> >
> > to these lines:
> >
> >   udpService = GetUDP()
> >   udpService.stompClient = testq  # stuff it in!
> >   internet.UDPServer(42000,udpService).setServiceParent(MQService)
> >
> > Cheers,
> > Christian
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071212/e4c20667/attachment.html>

From sakalsiz at gmail.com  Thu Dec 13 06:35:27 2007
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Thu, 13 Dec 2007 15:35:27 +0200
Subject: [Twisted-Python] Strange behaviour for epoll reactor
In-Reply-To: <7a01f6c00712111756n36f7a7a2sf07045e71778c9eb@mail.gmail.com>
References: <767e5e0d0712110506j50a85d74qa4268e3f8465bd0e@mail.gmail.com>
	<20071211135744.8162.945386516.divmod.quotient.44584@ohm>
	<7a01f6c00712111756n36f7a7a2sf07045e71778c9eb@mail.gmail.com>
Message-ID: <767e5e0d0712130535x535821e0xda87fcb98a28486c@mail.gmail.com>

Yes, I saw the ticket and the patch. Thanks for your help. It works well now.

On Dec 12, 2007 3:56 AM, Alvin Delagon <adelagon at gmail.com> wrote:
> To summarize Jean-Paul's link, you can just a two-liner patch in the
> epollreactor.py to fix this (after line 201 if you're using the twisted 2.50
> release)
>
> if event & _epoll.HUP or event & _epoll.ERR:
>                     why = main.CONNECTION_LOST
>
>
>
>
> On Dec 11, 2007 9:57 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> >
> > On Tue, 11 Dec 2007 15:06:45 +0200, Mustafa Sakalsiz <sakalsiz at gmail.com>
> wrote:
> > >We have a twisted application uses the epoll reactor. Sometimes it
> > >wastes %100 cpu. It has also some threads for single isolated
> > >functions (using deferToThred). First we suspected that threads don't
> > >end and goes to an infinite loop. Because application still accepts
> > >connections and executes the requested functions. Then I ran the
> > >following ps command
> > >
> > >ps h -Leo pid,pcpu,args,lwp
> > >
> > >Looking at the output, the main thread seemed to be wasting the whole
> > >cpu time. Later on I attached the process to the strace and saw the
> > >output below. I don't how does it happen or when does it happen. It is
> > >not regular nor repeatable, but this is the strace output when it gets
> > >into loop. I send to the list, because it may be useful for someone.
> > >
> > >Now we switched back to the select reactor.
> > >
> > >P.S.: We use perspective broker on the server side and qt4reactor for
> > >the client.
> >
> > This sounds like this issue:
> >
> >  http://twistedmatrix.com/trac/ticket/2809
> >
> > This is fixed in current trunk at HEAD and the fix will be included in the
> > next release of Twisted.
> >
> > Jean-Paul
> >
> >
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
----------------------------------------------------------------
Likya Yazılım ve Bilişim Hizmetleri Ltd.Şti.
    ODTÜ Teknokent Galyum Blok B-08
               06531 ANKARA
        Tel    :: (312) 210 00 90
        Fax   :: (312) 210 00 91
        Web  :: www.ly.com.tr
----------------------------------------------------------------
                mustafa at ly.com.tr

From chronoss at gmx.de  Thu Dec 13 14:50:54 2007
From: chronoss at gmx.de (Bjoern Schliessmann)
Date: Thu, 13 Dec 2007 22:50:54 +0100
Subject: [Twisted-Python] Re: Conch/insults -- using HistoricRecvLine
References: <fjfce8$amb$2@ger.gmane.org>
	<20071209031209.8162.485080318.divmod.quotient.43920@ohm>
Message-ID: <fjs9fv$e9a$1@ger.gmane.org>

At first, thank you for the detailed explanation :)

Jean-Paul Calderone wrote:

> I haven't had a chance to work with this part of Twisted much
> recently, but after my most recent attempt, I think I decided that
> the approach taken by HistoricRecvLine doesn't lead to easily
> extensible or reusable code.  I had been investigating an API
> based on an explicit buffer object which allowed different
> components to be isolated from each other.  You can take a look at
> the incomplete results of this (again, no documentation, sorry)
> here: 

Mh, I'm not too familiar with the insults API. I'll have to look
into it deeper first.

> If you want to stick with HistoricRecvLine

I don't really want. As you mentioned, it has a full telnet
implementation a few layers down, which I don't need at all. 

I have a custom text protocol which is for quite some time "abused"
for manual input, so I'm trying to add some minimal convenience on
the server side.

> then the only suggestion that comes to mind to make is for you to
> keep your original LineReceiver sub-class separate from your
> HistoricRecvLine subclass.  Give a reference to the former to the
> latter: have the HistoricvRecvLine subclass's lineReceived method
> call lineReceived on the LineReceiver subclass (which may not need
> to be a LineReceiver subclass anymore); give the LineReceiver
> subclass a transport which knows how to interact with the terminal
> in a way which is not disruptive to HistoricRecvLine's use of it.

Since I haven't achieved setting up a working HistoricRecvLine yet,
and I wouldn't like to have such deep telnet functionality, I'm
going to look into other options. The most simple would be using
rlwrap (3rd party program) for all clients which is work. 

What I'd like most is just to have the server interpret a few
keystrokes specially, for a history function (saving the last
commands given in this session) and _perhaps_ a basic autocompleter
for a set of (~10) commands. 

I'm afraid I have no specific questions for now (but I appreciate
your offer). I think I'll look into the implementation of
LineReceiver and try to figure out where I can tap dataReceived to
catch (and filter out) a few special keystrokes.

Regards,


Björn 

-- 
BOFH excuse #295:

The Token fell out of the ring. Call us when you find it.





From markus at bluegap.ch  Fri Dec 14 05:00:26 2007
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 14 Dec 2007 13:00:26 +0100
Subject: [Twisted-Python] disturbing trial exceptions 
Message-ID: <4762705A.5020103@bluegap.ch>

Hi,

since my last svn update of twisted, some strange errors started popping 
up when testing my package with trial. I've tracked down the exact 
revision with which the errors started to appear:

> ------------------------------------------------------------------------
> r21907 | therve | 2007-11-20 20:32:56 +0100 (Tue, 20 Nov 2007) | 9 lines
> 
> Merge test-plugins-not-shared-942
> 
> Author: therve
> Reviewers: exarkun, jml, glyph
> Fixes #942
> 
> Fix twisted.test.test_plugin so that it doesn't use twisted.plugins anymore,
> but create temporary plugins beneath _trial_temp instead.
> 
> ------------------------------------------------------------------------

The first exception is:
   exceptions.AttributeError: 'module' object has no attribute 'running'

As the errors are from seemingly dynamically generated code (at least I 
could only find .pyc files, no source), I didn't try to investigate further.

After the errors, all tests are correctly run through, so it's just 
plain disturbing.

Here's the full error output:

> Traceback (most recent call last):
>   File "/home/markus/projects/twisted/twisted/python/usage.py", line 241, in parseOptions
>     self.postOptions()
>   File "/home/markus/projects/twisted/twisted/scripts/trial.py", line 292, in postOptions
>     self['reporter'] = self._loadReporterByName(self['reporter'])
>   File "/home/markus/projects/twisted/twisted/scripts/trial.py", line 278, in _loadReporterByName
>     for p in plugin.getPlugins(itrial.IReporter):
>   File "/home/markus/projects/twisted/twisted/plugin.py", line 200, in getPlugins
>     allDropins = getCache(package)
> --- <exception caught here> ---
>   File "/home/markus/projects/twisted/twisted/plugin.py", line 165, in getCache
>     provider = pluginModule.load()
>   File "/home/markus/projects/twisted/twisted/python/modules.py", line 380, in load
>     return self.pathEntry.pythonPath.moduleLoader(self.name)
>   File "/home/markus/projects/twisted/twisted/python/modules.py", line 618, in moduleLoader
>     return self._moduleLoader(modname)
>   File "/home/markus/projects/twisted/twisted/python/reflect.py", line 361, in namedAny
>     topLevelPackage = __import__(trialname)
>   File "/home/markus/projects/twisted/twisted/plugins/notestplugin.py", line 18, in ?
>     
> exceptions.AttributeError: 'module' object has no attribute 'running'
> Traceback (most recent call last):
>   File "/home/markus/projects/twisted/twisted/python/usage.py", line 241, in parseOptions
>     self.postOptions()
>   File "/home/markus/projects/twisted/twisted/scripts/trial.py", line 292, in postOptions
>     self['reporter'] = self._loadReporterByName(self['reporter'])
>   File "/home/markus/projects/twisted/twisted/scripts/trial.py", line 278, in _loadReporterByName
>     for p in plugin.getPlugins(itrial.IReporter):
>   File "/home/markus/projects/twisted/twisted/plugin.py", line 200, in getPlugins
>     allDropins = getCache(package)
> --- <exception caught here> ---
>   File "/home/markus/projects/twisted/twisted/plugin.py", line 165, in getCache
>     provider = pluginModule.load()
>   File "/home/markus/projects/twisted/twisted/python/modules.py", line 380, in load
>     return self.pathEntry.pythonPath.moduleLoader(self.name)
>   File "/home/markus/projects/twisted/twisted/python/modules.py", line 618, in moduleLoader
>     return self._moduleLoader(modname)
>   File "/home/markus/projects/twisted/twisted/python/reflect.py", line 361, in namedAny
>     topLevelPackage = __import__(trialname)
>   File "/home/markus/projects/twisted/twisted/plugins/testplugin.py", line 12, in ?
>     
> exceptions.ImportError: cannot import name ITestPlugin



Help appreciated.

Regards

Markus




From therve at free.fr  Fri Dec 14 05:34:35 2007
From: therve at free.fr (Thomas =?iso-8859-1?q?Herv=E9?=)
Date: Fri, 14 Dec 2007 13:34:35 +0100
Subject: [Twisted-Python] disturbing trial exceptions
In-Reply-To: <4762705A.5020103@bluegap.ch>
References: <4762705A.5020103@bluegap.ch>
Message-ID: <200712141334.35981.therve@free.fr>

Le Friday 14 December 2007 13:00:26 Markus Schiltknecht, vous avez écrit :
> Hi,
>
> since my last svn update of twisted, some strange errors started popping
> up when testing my package with trial. I've tracked down the exact
>
> revision with which the errors started to appear:
> > ------------------------------------------------------------------------
> > r21907 | therve | 2007-11-20 20:32:56 +0100 (Tue, 20 Nov 2007) | 9 lines
> >
> > Merge test-plugins-not-shared-942
> >
> > Author: therve
> > Reviewers: exarkun, jml, glyph
> > Fixes #942
> >
> > Fix twisted.test.test_plugin so that it doesn't use twisted.plugins
> > anymore, but create temporary plugins beneath _trial_temp instead.
> >
> > ------------------------------------------------------------------------
>
> The first exception is:
>    exceptions.AttributeError: 'module' object has no attribute 'running'
>
> As the errors are from seemingly dynamically generated code (at least I
> could only find .pyc files, no source), I didn't try to investigate
> further.

You have to remove the pyc files in the plugins (and probably the dropin.cache 
file too), because the source files have been removed by this revision.

The responsability for this problem is not clear yet, but in this case it was 
for a good reason :).

-- 
Thomas



From radix at twistedmatrix.com  Fri Dec 14 05:43:01 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 14 Dec 2007 07:43:01 -0500
Subject: [Twisted-Python] disturbing trial exceptions
In-Reply-To: <4762705A.5020103@bluegap.ch>
References: <4762705A.5020103@bluegap.ch>
Message-ID: <60ed19d40712140443q79576a1x949fb4e683913a0d@mail.gmail.com>

On Dec 14, 2007 7:00 AM, Markus Schiltknecht <markus at bluegap.ch> wrote:

Hi Markus.

This is the problem:

> As the errors are from seemingly dynamically generated code (at least I
> could only find .pyc files, no source), I didn't try to investigate further.

Actually, those aren't dynamically generated. Those are old .pyc files
(which were generated from .py files that *used* to exist), and they
should be removed. Your problems will probably go away after that.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From markus at bluegap.ch  Fri Dec 14 06:40:06 2007
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Fri, 14 Dec 2007 14:40:06 +0100
Subject: [Twisted-Python] disturbing trial exceptions
In-Reply-To: <60ed19d40712140443q79576a1x949fb4e683913a0d@mail.gmail.com>
References: <4762705A.5020103@bluegap.ch>
	<60ed19d40712140443q79576a1x949fb4e683913a0d@mail.gmail.com>
Message-ID: <476287B6.7060407@bluegap.ch>

Hi Christopher,

Christopher Armstrong wrote:
> Actually, those aren't dynamically generated. Those are old .pyc files
> (which were generated from .py files that *used* to exist), and they
> should be removed. Your problems will probably go away after that.

Hehe, obviously I'm expecting too many bells and whistles in twisted. 
Dynamically generated python code, tz tz...

Thanks for the explanation, also to Thomas, solved my problem.

Regards

Markus



From josef.robert.novak at gmail.com  Fri Dec 14 22:10:53 2007
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Sat, 15 Dec 2007 14:10:53 +0900
Subject: [Twisted-Python] finer control of deferToThread ?
Message-ID: <710ff8630712142110x53fa7c05yae6c0fa79db5d522@mail.gmail.com>

Hi,
  I am writing a twisted application using StarPY fastagi API for
Asterisk.  My application involves answering user calls, and then
based on their responses to an IVR dialogue, running some some
compute-intensive applications on the same server, after they hang up.
  At the moment I am running the compute-intensive application (3rd
party code) in a deferred.deferToThread.  The application works fine,
however if the number of callers goes above 2-3, and one of the
compute-intensive applications from a previous call has not finished
up, the audio for the call gets very jumpy because of CPU usage.
  This compute-intensive process needs to be run immediately after
hangup, and I'd prefer to take care of everything on the same machine
(rather than send the compute-intensive application request somewhere
else).

  What I'd like to do is pause the thread with the
deferred.deferToThread process any time a new  call comes in (this
sort of violates what I'm saying above but the number of calls going
to a particular ASterisk trunk is limited so in most cases this would
never result in more than a couple-seconds delay, which is
acceptable).

  Is there any way to control these deferred.deferToThread objects in
a more fine-grained manner?  Say from a reactor factory?  Can I
register them separately somehow, and then pause these
compute-intensive applications temporarily every time a new call comes
in?  I'm imagining something as simple as as ctrl+z and $ fg linux
terminal commands... but I appreciate that it is probably not so
straightforward.

  -Joe



From general at eepatents.com  Sat Dec 15 08:50:02 2007
From: general at eepatents.com (Ed Suominen)
Date: Sat, 15 Dec 2007 07:50:02 -0800
Subject: [Twisted-Python] finer control of deferToThread ?
In-Reply-To: <710ff8630712142110x53fa7c05yae6c0fa79db5d522@mail.gmail.com>
References: <710ff8630712142110x53fa7c05yae6c0fa79db5d522@mail.gmail.com>
Message-ID: <4763F7AA.2090800@eepatents.com>

You can do priority queuing to one or more threads using AsynQueue,
http://foss.eepatents.com/AsynQueue or python-asynqueue in Debian. Use
multiple threads and queue up the compute-intensive calls with a low
priority and the other stuff with higher priorities.

However, you will need to chop up your compute-intensive stuff into
smaller pieces for this to be helpful. (That's good asynchronous
processing practice, generally.) The priority queuing is only effective
at deciding which calls to dispatch next, and each thread call is on its
own once it is dispatched from the queue. Each call uses an entire
thread for its entire duration, and will keep the queue from dispatching
anything else to that thread while it's squatting on it, no matter how
low-priority it is.

Best regards, Ed

Josef Novak wrote:
> Hi,
>   I am writing a twisted application using StarPY fastagi API for
> Asterisk.  My application involves answering user calls, and then
> based on their responses to an IVR dialogue, running some some
> compute-intensive applications on the same server, after they hang up.
>   At the moment I am running the compute-intensive application (3rd
> party code) in a deferred.deferToThread.  The application works fine,
> however if the number of callers goes above 2-3, and one of the
> compute-intensive applications from a previous call has not finished
> up, the audio for the call gets very jumpy because of CPU usage.
>   This compute-intensive process needs to be run immediately after
> hangup, and I'd prefer to take care of everything on the same machine
> (rather than send the compute-intensive application request somewhere
> else).
> 
>   What I'd like to do is pause the thread with the
> deferred.deferToThread process any time a new  call comes in (this
> sort of violates what I'm saying above but the number of calls going
> to a particular ASterisk trunk is limited so in most cases this would
> never result in more than a couple-seconds delay, which is
> acceptable).
> 
>   Is there any way to control these deferred.deferToThread objects in
> a more fine-grained manner?  Say from a reactor factory?  Can I
> register them separately somehow, and then pause these
> compute-intensive applications temporarily every time a new call comes
> in?  I'm imagining something as simple as as ctrl+z and $ fg linux
> terminal commands... but I appreciate that it is probably not so
> straightforward.
> 
>   -Joe
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 



From dave at krondo.com  Sat Dec 15 10:45:51 2007
From: dave at krondo.com (Dave Peticolas)
Date: Sat, 15 Dec 2007 09:45:51 -0800
Subject: [Twisted-Python] finer control of deferToThread ?
In-Reply-To: <4763F7AA.2090800@eepatents.com>
References: <710ff8630712142110x53fa7c05yae6c0fa79db5d522@mail.gmail.com>
	<4763F7AA.2090800@eepatents.com>
Message-ID: <476412CF.6070400@krondo.com>

Hey Ed, I keep meaning to check this out. What's the minimum version
of Twisted you need with it?

thanks,
dave

Ed Suominen wrote:
> You can do priority queuing to one or more threads using AsynQueue,
> http://foss.eepatents.com/AsynQueue or python-asynqueue in Debian. Use
> multiple threads and queue up the compute-intensive calls with a low
> priority and the other stuff with higher priorities.
> 
> However, you will need to chop up your compute-intensive stuff into
> smaller pieces for this to be helpful. (That's good asynchronous
> processing practice, generally.) The priority queuing is only effective
> at deciding which calls to dispatch next, and each thread call is on its
> own once it is dispatched from the queue. Each call uses an entire
> thread for its entire duration, and will keep the queue from dispatching
> anything else to that thread while it's squatting on it, no matter how
> low-priority it is.
> 
> Best regards, Ed
> 
> Josef Novak wrote:
>> Hi,
>>   I am writing a twisted application using StarPY fastagi API for
>> Asterisk.  My application involves answering user calls, and then
>> based on their responses to an IVR dialogue, running some some
>> compute-intensive applications on the same server, after they hang up.
>>   At the moment I am running the compute-intensive application (3rd
>> party code) in a deferred.deferToThread.  The application works fine,
>> however if the number of callers goes above 2-3, and one of the
>> compute-intensive applications from a previous call has not finished
>> up, the audio for the call gets very jumpy because of CPU usage.
>>   This compute-intensive process needs to be run immediately after
>> hangup, and I'd prefer to take care of everything on the same machine
>> (rather than send the compute-intensive application request somewhere
>> else).
>>
>>   What I'd like to do is pause the thread with the
>> deferred.deferToThread process any time a new  call comes in (this
>> sort of violates what I'm saying above but the number of calls going
>> to a particular ASterisk trunk is limited so in most cases this would
>> never result in more than a couple-seconds delay, which is
>> acceptable).
>>
>>   Is there any way to control these deferred.deferToThread objects in
>> a more fine-grained manner?  Say from a reactor factory?  Can I
>> register them separately somehow, and then pause these
>> compute-intensive applications temporarily every time a new call comes
>> in?  I'm imagining something as simple as as ctrl+z and $ fg linux
>> terminal commands... but I appreciate that it is probably not so
>> straightforward.
>>
>>   -Joe
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From josef.robert.novak at gmail.com  Sat Dec 15 20:37:27 2007
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Sun, 16 Dec 2007 12:37:27 +0900
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 18
In-Reply-To: <E1J3aMt-0004u6-A4@cube.twistedmatrix.com>
References: <E1J3aMt-0004u6-A4@cube.twistedmatrix.com>
Message-ID: <710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>

Hmm.  This seems like a pretty nice solution, except that it seems it will
be blocking incoming calls during processing.  What I really need to do is
pause the deferToThread objects based on their pid.

How can I obtain the pid of a new deferToThread object?  If I can obtain it,
then I can just keep a persistent dictionary containing all the running
compute-intensive processes, and unregister each one in a callback after it
finishes up.  Then, every time a new call comes in, I check my persistent
pid dictionary/list,
for pid in pid_list:
  os.kill(pid, signal.SIGSTOP)

and every time a call finishes, I check the number of current calls, and
then if we're back to zero, we resume the compute intensive processes again:
if parentObj.live_calls == 0::
  for pid in parentObj.pid_list:
    os.kill(pid, signal.SIGCONT)

so, my new question is...
How can I obtain the pid of a new deferToThread object?

I'm pretty sure that, while not very elegant, this should solve my problem -
but please let me know if this sounds really, cockamamey!

-Joe

> ------------------------------
>
> Message: 2
> Date: Sat, 15 Dec 2007 07:50:02 -0800
> From: Ed Suominen <general at eepatents.com>
> Subject: Re: [Twisted-Python] finer control of deferToThread ?
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <4763F7AA.2090800 at eepatents.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> You can do priority queuing to one or more threads using AsynQueue,
> http://foss.eepatents.com/AsynQueue or python-asynqueue in Debian. Use
> multiple threads and queue up the compute-intensive calls with a low
> priority and the other stuff with higher priorities.
>
> However, you will need to chop up your compute-intensive stuff into
> smaller pieces for this to be helpful. (That's good asynchronous
> processing practice, generally.) The priority queuing is only effective
> at deciding which calls to dispatch next, and each thread call is on its
> own once it is dispatched from the queue. Each call uses an entire
> thread for its entire duration, and will keep the queue from dispatching
> anything else to that thread while it's squatting on it, no matter how
> low-priority it is.
>
> Best regards, Ed
>
> Josef Novak wrote:
> > Hi,
> >   I am writing a twisted application using StarPY fastagi API for
> > Asterisk.  My application involves answering user calls, and then
> > based on their responses to an IVR dialogue, running some some
> > compute-intensive applications on the same server, after they hang up.
> >   At the moment I am running the compute-intensive application (3rd
> > party code) in a deferred.deferToThread.  The application works fine,
> > however if the number of callers goes above 2-3, and one of the
> > compute-intensive applications from a previous call has not finished
> > up, the audio for the call gets very jumpy because of CPU usage.
> >   This compute-intensive process needs to be run immediately after
> > hangup, and I'd prefer to take care of everything on the same machine
> > (rather than send the compute-intensive application request somewhere
> > else).
> >
> >   What I'd like to do is pause the thread with the
> > deferred.deferToThread process any time a new  call comes in (this
> > sort of violates what I'm saying above but the number of calls going
> > to a particular ASterisk trunk is limited so in most cases this would
> > never result in more than a couple-seconds delay, which is
> > acceptable).
> >
> >   Is there any way to control these deferred.deferToThread objects in
> > a more fine-grained manner?  Say from a reactor factory?  Can I
> > register them separately somehow, and then pause these
> > compute-intensive applications temporarily every time a new call comes
> > in?  I'm imagining something as simple as as ctrl+z and $ fg linux
> > terminal commands... but I appreciate that it is probably not so
> > straightforward.
> >
> >   -Joe
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 45, Issue 18
> **********************************************
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071216/d4673b24/attachment.html>

From glyph at divmod.com  Sat Dec 15 23:41:57 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 16 Dec 2007 06:41:57 -0000
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 18
In-Reply-To: <710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>
References: <E1J3aMt-0004u6-A4@cube.twistedmatrix.com>
	<710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>
Message-ID: <20071216064157.21558.1104897279.divmod.xquotient.2950@joule.divmod.com>

On 03:37 am, josef.robert.novak at gmail.com wrote:
>How can I obtain the pid of a new deferToThread object?  If I can 
>obtain it,
>then I can just keep a persistent dictionary containing all the running
>compute-intensive processes, and unregister each one in a callback 
>after it
>finishes up.  Then, every time a new call comes in, I check my 
>persistent
>pid dictionary/list,
>for pid in pid_list:
>  os.kill(pid, signal.SIGSTOP)

If this even does anything at all, it will effectively just crash or 
wedge python.  Plus, on many platforms threads don't have PIDs, because 
they're not processes, they're threads.

You need to use subprocesses to split up your long-running tasks, not 
threads.  Have a look at the documentation for reactor.spawnProcess: 
http://tinyurl.com/2blgz9



From josef.robert.novak at gmail.com  Sun Dec 16 03:04:57 2007
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Sun, 16 Dec 2007 19:04:57 +0900
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 18
In-Reply-To: <710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>
References: <E1J3aMt-0004u6-A4@cube.twistedmatrix.com>
	<710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>
Message-ID: <710ff8630712160204l10818aaga5e3587f16cd4d69@mail.gmail.com>

Ok I see this will definitely not work as we are talking about threads and
not processes so os.kill is of no use to me.  I guess there is no way to
track these new threads and stop/pause/restart them based on some other
decision logic?  Would have been nice if there were though...  -joe

2007/12/16, Josef Novak <josef.robert.novak at gmail.com>:
>
>
> Hmm.  This seems like a pretty nice solution, except that it seems it will
> be blocking incoming calls during processing.  What I really need to do is
> pause the deferToThread objects based on their pid.
>
> How can I obtain the pid of a new deferToThread object?  If I can obtain
> it, then I can just keep a persistent dictionary containing all the running
> compute-intensive processes, and unregister each one in a callback after it
> finishes up.  Then, every time a new call comes in, I check my persistent
> pid dictionary/list,
> for pid in pid_list:
>   os.kill(pid, signal.SIGSTOP)
>
> and every time a call finishes, I check the number of current calls, and
> then if we're back to zero, we resume the compute intensive processes again:
> if parentObj.live_calls == 0::
>   for pid in parentObj.pid_list:
>     os.kill(pid, signal.SIGCONT)
>
> so, my new question is...
> How can I obtain the pid of a new deferToThread object?
>
> I'm pretty sure that, while not very elegant, this should solve my problem
> - but please let me know if this sounds really, cockamamey!
>
> -Joe
>
> > ------------------------------
> >
> > Message: 2
> > Date: Sat, 15 Dec 2007 07:50:02 -0800
> > From: Ed Suominen <general at eepatents.com>
> > Subject: Re: [Twisted-Python] finer control of deferToThread ?
> > To: Twisted general discussion <twisted-python at twistedmatrix.com>
> > Message-ID: <4763F7AA.2090800 at eepatents.com >
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > You can do priority queuing to one or more threads using AsynQueue,
> > http://foss.eepatents.com/AsynQueue or python-asynqueue in Debian. Use
> > multiple threads and queue up the compute-intensive calls with a low
> > priority and the other stuff with higher priorities.
> >
> > However, you will need to chop up your compute-intensive stuff into
> > smaller pieces for this to be helpful. (That's good asynchronous
> > processing practice, generally.) The priority queuing is only effective
> > at deciding which calls to dispatch next, and each thread call is on its
>
> > own once it is dispatched from the queue. Each call uses an entire
> > thread for its entire duration, and will keep the queue from dispatching
> > anything else to that thread while it's squatting on it, no matter how
> > low-priority it is.
> >
> > Best regards, Ed
> >
> > Josef Novak wrote:
> > > Hi,
> > >   I am writing a twisted application using StarPY fastagi API for
> > > Asterisk.  My application involves answering user calls, and then
> > > based on their responses to an IVR dialogue, running some some
> > > compute-intensive applications on the same server, after they hang up.
> > >   At the moment I am running the compute-intensive application (3rd
> > > party code) in a deferred.deferToThread.  The application works fine,
> > > however if the number of callers goes above 2-3, and one of the
> > > compute-intensive applications from a previous call has not finished
> > > up, the audio for the call gets very jumpy because of CPU usage.
> > >   This compute-intensive process needs to be run immediately after
> > > hangup, and I'd prefer to take care of everything on the same machine
> > > (rather than send the compute-intensive application request somewhere
> > > else).
> > >
> > >   What I'd like to do is pause the thread with the
> > > deferred.deferToThread process any time a new  call comes in (this
> > > sort of violates what I'm saying above but the number of calls going
> > > to a particular ASterisk trunk is limited so in most cases this would
> > > never result in more than a couple-seconds delay, which is
> > > acceptable).
> > >
> > >   Is there any way to control these deferred.deferToThread objects in
> > > a more fine-grained manner?  Say from a reactor factory?  Can I
> > > register them separately somehow, and then pause these
> > > compute-intensive applications temporarily every time a new call comes
> > > in?  I'm imagining something as simple as as ctrl+z and $ fg linux
> > > terminal commands... but I appreciate that it is probably not so
> > > straightforward.
> > >
> > >   -Joe
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> > >
> > >
> >
> >
> >
> > ------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > End of Twisted-Python Digest, Vol 45, Issue 18
> > **********************************************
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071216/b57022bb/attachment.html>

From glyph at divmod.com  Sun Dec 16 03:13:08 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 16 Dec 2007 10:13:08 -0000
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 18
In-Reply-To: <710ff8630712160204l10818aaga5e3587f16cd4d69@mail.gmail.com>
References: <E1J3aMt-0004u6-A4@cube.twistedmatrix.com>
	<710ff8630712151937o217eb8a4x79b6023624193d2d@mail.gmail.com>
	<710ff8630712160204l10818aaga5e3587f16cd4d69@mail.gmail.com>
Message-ID: <20071216101308.21558.555241615.divmod.xquotient.2970@joule.divmod.com>

On 10:04 am, josef.robert.novak at gmail.com wrote:
>Ok I see this will definitely not work as we are talking about threads 
>and
>not processes so os.kill is of no use to me.  I guess there is no way 
>to
>track these new threads and stop/pause/restart them based on some other
>decision logic?  Would have been nice if there were though...  -joe

If you really think about it (and I mean really think about it, computer 
science-y stuff, understanding what sharing state in threads really 
means, how the Python interpreter happens to work now, considering all 
the ways it could work) the idea of stopping and restarting threads is 
inherently broken.  You might be able to make it work, by accident, for 
a few simple cases, but there would be no reasonable way to guarantee 
safety except for forcing the explicit use of channels to communicate 
between threads.  If you're doing that, though, you're effectively using 
processes. SIGSTOP and friends work just fine on them :).



From josef.robert.novak at gmail.com  Sun Dec 16 15:54:33 2007
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Mon, 17 Dec 2007 07:54:33 +0900
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 20
In-Reply-To: <E1J3wqS-0006Fh-11@cube.twistedmatrix.com>
References: <E1J3wqS-0006Fh-11@cube.twistedmatrix.com>
Message-ID: <710ff8630712161454v51b36895h192240ae6387c18@mail.gmail.com>

Thank you for all the feedback, it was quite useful.  I'm still quite new to
twisted, threads and quite the novice programmer, as my questions indicate;
this project has been quite enlightening. As a solution I decided that
passing off the compute intensive operations in a proper callback to another
(set of) machine(s), which is dedicated to these jobs was a more viable
longterm solution than this start-stop madness I initially came up with.
However, attempting it initially resulted in a great opportunity for me to
learn a bit about threads and processes, so it wasn't necessarily a waste of
time.
Thanks again!
-joe

2007/12/17, twisted-python-request at twistedmatrix.com <
twisted-python-request at twistedmatrix.com>:
>
> Send Twisted-Python mailing list submissions to
>         twisted-python at twistedmatrix.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> or, via email, send a message with subject or body 'help' to
>         twisted-python-request at twistedmatrix.com
>
> You can reach the person managing the list at
>         twisted-python-owner at twistedmatrix.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Twisted-Python digest..."
>
>
> Today's Topics:
>
>    1. Re: Re: Twisted-Python Digest, Vol 45, Issue 18 (glyph at divmod.com)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 16 Dec 2007 10:13:08 -0000
> From: glyph at divmod.com
> Subject: Re: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue
>         18
> To: twisted-python at twistedmatrix.com
> Message-ID:
>         <
> 20071216101308.21558.555241615.divmod.xquotient.2970 at joule.divmod.com>
>
> Content-Type: text/plain; charset="utf-8"; format="flowed"
>
> On 10:04 am, josef.robert.novak at gmail.com wrote:
> >Ok I see this will definitely not work as we are talking about threads
> >and
> >not processes so os.kill is of no use to me.  I guess there is no way
> >to
> >track these new threads and stop/pause/restart them based on some other
> >decision logic?  Would have been nice if there were though...  -joe
>
> If you really think about it (and I mean really think about it, computer
> science-y stuff, understanding what sharing state in threads really
> means, how the Python interpreter happens to work now, considering all
> the ways it could work) the idea of stopping and restarting threads is
> inherently broken.  You might be able to make it work, by accident, for
> a few simple cases, but there would be no reasonable way to guarantee
> safety except for forcing the explicit use of channels to communicate
> between threads.  If you're doing that, though, you're effectively using
> processes. SIGSTOP and friends work just fine on them :).
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 45, Issue 20
> **********************************************
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071217/2fca7dd4/attachment.html>

From general at eepatents.com  Mon Dec 17 08:15:45 2007
From: general at eepatents.com (Ed Suominen)
Date: Mon, 17 Dec 2007 10:15:45 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 20
In-Reply-To: <710ff8630712161454v51b36895h192240ae6387c18@mail.gmail.com>
References: <E1J3wqS-0006Fh-11@cube.twistedmatrix.com>
	<710ff8630712161454v51b36895h192240ae6387c18@mail.gmail.com>
Message-ID: <476692A1.2060308@eepatents.com>

Yes, it sounds like your time investigating this was well spent.
Asynchronous programming is a whole new way of thinking. And after
programming with Twisted for several years now, I really can't think any
other way; blocking for results just seems backwards somehow.

In case anyone's interested, my own work with CPU-intensive processing
involves Monte Carlo analysis and Bayesian inference of statistical
models. I'm currently performing probabilistic random walks in 6+
dimensional parameter spaces using a cluster of PCs and processor cores.
All of the nodes are managed via my AsynCluster package,
http://foss.eepatents.com/AsynCluster, which is built on AsynQueue and
of course Twisted itself. The main script instantiates a job client that
directs the AsynCluster server to dispatch hundreds of jobs at a time to
the cluster, the deferred results of which are processed with a single
"defer.gatherResults" call for each of thousands of iterations in a
"defer.deferredGenerator" loop.

Some of the nodes are significantly faster than others. That's fine,
because the dispatch queue just feeds more job calls to the faster
nodes. Right now each run of a million or so model evaluations is taking
about an hour apiece on 5-6 nodes. My new 3+ GHz quad-core PC is nearly
done, so things are about to ramp up some more...

By the way, if Twisted Matrix Laboratories wants to use the above as a
success story, they are welcome to do so. Twisted is a triumph of
computer science and the foundation of my current work.

Best regards,
Ed Suominen
http://foss.eepatents.com


Josef Novak wrote:
> Thank you for all the feedback, it was quite useful.  I'm still quite
> new to twisted, threads and quite the novice programmer, as my questions
> indicate; this project has been quite enlightening. As a solution I
> decided that passing off the compute intensive operations in a proper
> callback to another (set of) machine(s), which is dedicated to these
> jobs was a more viable longterm solution than this start-stop madness I
> initially came up with.  However, attempting it initially resulted in a
> great opportunity for me to learn a bit about threads and processes, so
> it wasn't necessarily a waste of time.
> Thanks again!
> -joe
> 
> 2007/12/17, twisted-python-request at twistedmatrix.com
> <mailto:twisted-python-request at twistedmatrix.com> <
> twisted-python-request at twistedmatrix.com
> <mailto:twisted-python-request at twistedmatrix.com>>:
> 
>     Send Twisted-Python mailing list submissions to
>             twisted-python at twistedmatrix.com
>     <mailto:twisted-python at twistedmatrix.com>
> 
>     To subscribe or unsubscribe via the World Wide Web, visit
>             
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>     or, via email, send a message with subject or body 'help' to
>             twisted-python-request at twistedmatrix.com
>     <mailto:twisted-python-request at twistedmatrix.com>
> 
>     You can reach the person managing the list at
>             twisted-python-owner at twistedmatrix.com
>     <mailto:twisted-python-owner at twistedmatrix.com>
> 
>     When replying, please edit your Subject line so it is more specific
>     than "Re: Contents of Twisted-Python digest..."
> 
> 
>     Today's Topics:
> 
>        1. Re: Re: Twisted-Python Digest, Vol 45, Issue 18
>     (glyph at divmod.com <mailto:glyph at divmod.com>)
> 
> 
>     ----------------------------------------------------------------------
> 
>     Message: 1
>     Date: Sun, 16 Dec 2007 10:13:08 -0000
>     From: glyph at divmod.com <mailto:glyph at divmod.com>
>     Subject: Re: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue
>             18
>     To: twisted-python at twistedmatrix.com
>     <mailto:twisted-python at twistedmatrix.com>
>     Message-ID:
>             <
>     20071216101308.21558.555241615.divmod.xquotient.2970 at joule.divmod.com
>     <mailto:20071216101308.21558.555241615.divmod.xquotient.2970 at joule.divmod.com>>
> 
>     Content-Type: text/plain; charset="utf-8"; format="flowed"
> 
>     On 10:04 am, josef.robert.novak at gmail.com
>     <mailto:josef.robert.novak at gmail.com> wrote:
>     >Ok I see this will definitely not work as we are talking about threads
>     >and
>     >not processes so os.kill is of no use to me.  I guess there is no way
>     >to
>     >track these new threads and stop/pause/restart them based on some
>     other
>     >decision logic?  Would have been nice if there were though...  -joe
> 
>     If you really think about it (and I mean really think about it, computer
>     science-y stuff, understanding what sharing state in threads really
>     means, how the Python interpreter happens to work now, considering all
>     the ways it could work) the idea of stopping and restarting threads is
>     inherently broken.  You might be able to make it work, by accident, for
>     a few simple cases, but there would be no reasonable way to guarantee
>     safety except for forcing the explicit use of channels to communicate
>     between threads.  If you're doing that, though, you're effectively
>     using
>     processes. SIGSTOP and friends work just fine on them :).
> 
> 
> 
>     ------------------------------
> 
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
>     End of Twisted-Python Digest, Vol 45, Issue 20
>     **********************************************
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 



From dfarrell at mypublisher.com  Mon Dec 17 08:39:16 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Mon, 17 Dec 2007 10:39:16 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 20
In-Reply-To: <476692A1.2060308@eepatents.com>
Message-ID: <318F79422ADC5041A93343721F84474D8B0656@exchange.mypublisher.local>

Ed,

I've been coding for awhile, but am fairly new to actually using
Twisted. I'm very interested the work you are doing because of a project
I'm thinking of at work. It's not nearly as complicated as your project,
and though we have a number of Linux servers at our disposal, they
aren't clustered at all. We manufacture photobooks, and I'd like to make
our manufacturing workflow more "real time" than it is. What I was
thinking of was building a Twisted backbone for the system and
allocating long term processing elements of the workflow to other
"nodes" using Pyro or PP (the python parallel processing module) tied to
DeferToThread objects. But your solution looks interesting and I'm going
to read more of the link you provide. Any suggestions you might have,
places you could point me for guidance would be greatly appreaciated.

Thanks for the link you provided,
Doug Farrell

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Ed
Suominen
Sent: Monday, December 17, 2007 10:16 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue
20

Yes, it sounds like your time investigating this was well spent.
Asynchronous programming is a whole new way of thinking. And after
programming with Twisted for several years now, I really can't think any
other way; blocking for results just seems backwards somehow.

In case anyone's interested, my own work with CPU-intensive processing
involves Monte Carlo analysis and Bayesian inference of statistical
models. I'm currently performing probabilistic random walks in 6+
dimensional parameter spaces using a cluster of PCs and processor cores.
All of the nodes are managed via my AsynCluster package,
http://foss.eepatents.com/AsynCluster, which is built on AsynQueue and
of course Twisted itself. The main script instantiates a job client that
directs the AsynCluster server to dispatch hundreds of jobs at a time to
the cluster, the deferred results of which are processed with a single
"defer.gatherResults" call for each of thousands of iterations in a
"defer.deferredGenerator" loop.

Some of the nodes are significantly faster than others. That's fine,
because the dispatch queue just feeds more job calls to the faster
nodes. Right now each run of a million or so model evaluations is taking
about an hour apiece on 5-6 nodes. My new 3+ GHz quad-core PC is nearly
done, so things are about to ramp up some more...

By the way, if Twisted Matrix Laboratories wants to use the above as a
success story, they are welcome to do so. Twisted is a triumph of
computer science and the foundation of my current work.

Best regards,
Ed Suominen
http://foss.eepatents.com


Josef Novak wrote:
> Thank you for all the feedback, it was quite useful.  I'm still quite
> new to twisted, threads and quite the novice programmer, as my
questions
> indicate; this project has been quite enlightening. As a solution I
> decided that passing off the compute intensive operations in a proper
> callback to another (set of) machine(s), which is dedicated to these
> jobs was a more viable longterm solution than this start-stop madness
I
> initially came up with.  However, attempting it initially resulted in
a
> great opportunity for me to learn a bit about threads and processes,
so
> it wasn't necessarily a waste of time.
> Thanks again!
> -joe
> 
> 2007/12/17, twisted-python-request at twistedmatrix.com
> <mailto:twisted-python-request at twistedmatrix.com> <
> twisted-python-request at twistedmatrix.com
> <mailto:twisted-python-request at twistedmatrix.com>>:
> 
>     Send Twisted-Python mailing list submissions to
>             twisted-python at twistedmatrix.com
>     <mailto:twisted-python at twistedmatrix.com>
> 
>     To subscribe or unsubscribe via the World Wide Web, visit
>             
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>     or, via email, send a message with subject or body 'help' to
>             twisted-python-request at twistedmatrix.com
>     <mailto:twisted-python-request at twistedmatrix.com>
> 
>     You can reach the person managing the list at
>             twisted-python-owner at twistedmatrix.com
>     <mailto:twisted-python-owner at twistedmatrix.com>
> 
>     When replying, please edit your Subject line so it is more
specific
>     than "Re: Contents of Twisted-Python digest..."
> 
> 
>     Today's Topics:
> 
>        1. Re: Re: Twisted-Python Digest, Vol 45, Issue 18
>     (glyph at divmod.com <mailto:glyph at divmod.com>)
> 
> 
>
----------------------------------------------------------------------
> 
>     Message: 1
>     Date: Sun, 16 Dec 2007 10:13:08 -0000
>     From: glyph at divmod.com <mailto:glyph at divmod.com>
>     Subject: Re: [Twisted-Python] Re: Twisted-Python Digest, Vol 45,
Issue
>             18
>     To: twisted-python at twistedmatrix.com
>     <mailto:twisted-python at twistedmatrix.com>
>     Message-ID:
>             <
>
20071216101308.21558.555241615.divmod.xquotient.2970 at joule.divmod.com
>
<mailto:20071216101308.21558.555241615.divmod.xquotient.2970 at joule.divmo
d.com>>
> 
>     Content-Type: text/plain; charset="utf-8"; format="flowed"
> 
>     On 10:04 am, josef.robert.novak at gmail.com
>     <mailto:josef.robert.novak at gmail.com> wrote:
>     >Ok I see this will definitely not work as we are talking about
threads
>     >and
>     >not processes so os.kill is of no use to me.  I guess there is no
way
>     >to
>     >track these new threads and stop/pause/restart them based on some
>     other
>     >decision logic?  Would have been nice if there were though...
-joe
> 
>     If you really think about it (and I mean really think about it,
computer
>     science-y stuff, understanding what sharing state in threads
really
>     means, how the Python interpreter happens to work now, considering
all
>     the ways it could work) the idea of stopping and restarting
threads is
>     inherently broken.  You might be able to make it work, by
accident, for
>     a few simple cases, but there would be no reasonable way to
guarantee
>     safety except for forcing the explicit use of channels to
communicate
>     between threads.  If you're doing that, though, you're effectively
>     using
>     processes. SIGSTOP and friends work just fine on them :).
> 
> 
> 
>     ------------------------------
> 
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
>     End of Twisted-Python Digest, Vol 45, Issue 20
>     **********************************************
> 
> 
> 
>
------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dfarrell at mypublisher.com  Mon Dec 17 12:44:55 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Mon, 17 Dec 2007 14:44:55 -0500
Subject: [Twisted-Python] twisted, SMP and clusters
Message-ID: <318F79422ADC5041A93343721F84474D8B065B@exchange.mypublisher.local>

Hi all,

 

I'm considering using Twisted to build a soft realtime system to control a workflow for a physical production facility. Although there would be some socket work for it to do (XML-RPC, logging, etc) I also like it because of the nice way it can be daemonized. One of my goals for this project is to take better advantage of our multiple Linux servers, each of which has multiple CPU's with dual cores. I'd like to take our workflow objects that are fairly long running state machines and cut them loose on other cores/CPUs/servers if I can. So here's my question: should I be looking at twisted.spread for this kind of work? Can the Parallel Python or Pyro projects be incorporated into Twisted, and if so, what kinds of things should I watch out for, or is it even possible? I'm thinking if I use Parallel Python or Pyro I could make remote calls to our objects in a DeferToThread object and get back the results/errors via callbacks. I'm still really pretty new to Twisted, so forgive my naïve questions if they are so.

 

Thanks in advance,

Doug

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071217/d62de5dd/attachment.html>

From glyph at divmod.com  Mon Dec 17 15:17:16 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 17 Dec 2007 22:17:16 -0000
Subject: [Twisted-Python] twisted, SMP and clusters
In-Reply-To: <318F79422ADC5041A93343721F84474D8B065B@exchange.mypublisher.local>
References: <318F79422ADC5041A93343721F84474D8B065B@exchange.mypublisher.local>
Message-ID: <20071217221716.21558.1652062512.divmod.xquotient.3092@joule.divmod.com>

On 07:44 pm, dfarrell at mypublisher.com wrote:
>I'm considering using Twisted to build a soft realtime system to 
>control a workflow for a physical production facility. Although there 
>would be some socket work for it to do (XML-RPC, logging, etc) I also 
>like it because of the nice way it can be daemonized. One of my goals 
>for this project is to take better advantage of our multiple Linux 
>servers, each of which has multiple CPU's with dual cores. I'd like to 
>take our workflow objects that are fairly long running state machines 
>and cut them loose on other cores/CPUs/servers if I can. So here's my 
>question: should I be looking at twisted.spread for this kind of work? 
>Can the Parallel Python or Pyro projects be incorporated into Twisted, 
>and if so, what kinds of things should I watch out for, or is it even 
>possible? I'm thinking if I use Parallel Python or Pyro I could make 
>remote calls to our objects in a DeferToThread object and get back the 
>results/errors via callbacks. I'm still really pretty new to Twisted, 
>so forgive my na�ve questions if they are so.

PB (i.e. twisted.spread.pb) might be appropriate to this sort of work. 
It makes communicating between objects in multiple Twisted processes 
fairly easy.

Depending on your requirements, so might a lot of Twisted things.  If 
other code is talking to this, AMP (twisted.protocols.amp) or XMLRPC 
(twisted.web.xmlrpc) might also be appropriate.

Pyro and PP, while potentially valid approaches to your problem, are 
more or less incompatible with Twisted.  They *could* be made to work 
togther, there's no actual technical incompatibility, but they're geared 
towards working with entirely different programming paradigms.

When it's all said and done, none of these things is really a turn-key 
distributed programming environment.  They're just different ways to 
communicate messages between nodes.  In order to say what would be most 
appropriate to your problem domain, you'd need to describe your 
environment and your requirements a bit better.  For obvious reasons, 
though, you're not likely to get a suggestion other than "use Twisted" 
in this particular venue :).

It sounds like Ed's AsynCluster might provide the sort of structure (on 
top of PB) that you're looking for, but I don't know much about it, and 
I've never used it.  However, unlike these other tools, it's not just a 
messaging system, it is specifically for doing cluster computing.



From exarkun at twistedmatrix.com  Mon Dec 17 15:40:33 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Dec 2007 22:40:33 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1197931233.62.473715163@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071217/a45c4e6b/attachment.html>

From general at eepatents.com  Mon Dec 17 19:44:45 2007
From: general at eepatents.com (Ed Suominen)
Date: Mon, 17 Dec 2007 21:44:45 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 20
In-Reply-To: <318F79422ADC5041A93343721F84474D8B0656@exchange.mypublisher.local>
References: <318F79422ADC5041A93343721F84474D8B0656@exchange.mypublisher.local>
Message-ID: <4767341D.9060805@eepatents.com>

Doug Farrell wrote:
> Ed,
> 
> I've been coding for awhile, but am fairly new to actually using
> Twisted. I'm very interested the work you are doing because of a project
> I'm thinking of at work. It's not nearly as complicated as your project,
> and though we have a number of Linux servers at our disposal, they
> aren't clustered at all. We manufacture photobooks, and I'd like to make
> our manufacturing workflow more "real time" than it is. What I was
> thinking of was building a Twisted backbone for the system and
> allocating long term processing elements of the workflow to other
> "nodes" using Pyro or PP (the python parallel processing module) tied to
> DeferToThread objects. But your solution looks interesting and I'm going
> to read more of the link you provide. Any suggestions you might have,
> places you could point me for guidance would be greatly appreaciated.
> 
> Thanks for the link you provided,

Doug, I'll try to write up some sort of an "Asynchronous Clustering
HOW-TO" on the AsynCluster wiki site in the next few days.

Best regards, Ed



From dmarfil at citic.es  Tue Dec 18 01:51:40 2007
From: dmarfil at citic.es (Daniel Marfil)
Date: Tue, 18 Dec 2007 09:51:40 +0100
Subject: [Twisted-Python] SMS sending with Python
Message-ID: <47678A1C.6000604@citic.es>

Hi, my name is Daniel from Spain, and this is my first post here ;-)
I've been looking for something in twisted that allows me to send SMS 
messages through a server, but got no luck until the moment.
Could anyone give me a clue to begin?

Thank you in advance,

Daniel




From adelagon at gmail.com  Tue Dec 18 02:21:52 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 18 Dec 2007 17:21:52 +0800
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <47678A1C.6000604@citic.es>
References: <47678A1C.6000604@citic.es>
Message-ID: <7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>

What is your SMS provider? What protocols are they using? Is it SMPP, CIMD2,
CSP?



On Dec 18, 2007 4:51 PM, Daniel Marfil <dmarfil at citic.es> wrote:

> Hi, my name is Daniel from Spain, and this is my first post here ;-)
> I've been looking for something in twisted that allows me to send SMS
> messages through a server, but got no luck until the moment.
> Could anyone give me a clue to begin?
>
> Thank you in advance,
>
> Daniel
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071218/6de7e31f/attachment.html>

From dmarfil at citic.es  Tue Dec 18 02:59:44 2007
From: dmarfil at citic.es (Daniel Marfil)
Date: Tue, 18 Dec 2007 10:59:44 +0100
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>
References: <47678A1C.6000604@citic.es>
	<7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>
Message-ID: <47679A10.9050302@citic.es>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071218/7c7dba05/attachment.html>

From matusis at yahoo.com  Tue Dec 18 03:01:39 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Tue, 18 Dec 2007 02:01:39 -0800
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>
References: <47678A1C.6000604@citic.es>
	<7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>
Message-ID: <02f501c8415c$fbc0eaa0$f342bfe0$@com>

You can just send emails to most providers
http://en.wikipedia.org/wiki/SMS_gateways
(section "Email to SMS")

I am not sure you even need Twisted for that, you could just have a for loop
sending emails I suppose... 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Alvin Delagon
Sent: Tuesday, December 18, 2007 1:22 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] SMS sending with Python

What is your SMS provider? What protocols are they using? Is it SMPP, CIMD2,
CSP?


On Dec 18, 2007 4:51 PM, Daniel Marfil <dmarfil at citic.es> wrote: 
Hi, my name is Daniel from Spain, and this is my first post here ;-)
I've been looking for something in twisted that allows me to send SMS 
messages through a server, but got no luck until the moment.
Could anyone give me a clue to begin?

Thank you in advance,

Daniel


_______________________________________________
Twisted-Python mailing list 
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 





From adelagon at gmail.com  Tue Dec 18 03:56:13 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 18 Dec 2007 18:56:13 +0800
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <02f501c8415c$fbc0eaa0$f342bfe0$@com>
References: <47678A1C.6000604@citic.es>
	<7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>
	<02f501c8415c$fbc0eaa0$f342bfe0$@com>
Message-ID: <7a01f6c00712180256j2ce311c9ncb96f329c493808@mail.gmail.com>

So far there's no free available SMS Gateway protocol implementation in
python if you search through the net (there is one called pySMPP but isn't
maintained anymore. You can download it to have an idea).

I strongly recommend twisted-python in writing an SMS gateway
implementation. It's a very powerful tool once you tame it as long you have
in-depth understanding of what protocol you're going to implement (kudos to
twisted-python developers). :)

Just some advice to help you get going:
CIMD2 (Nokia)- can be implemented by twisted.protocols.basic.LineReceiver
CSP (Terabyte)- is just an exchange of http posts so it can be implemented
by twisted.web
SMPP (mBlox)- is packet based twisted.internet.protocol.Protocol + struct
will do the trick.

Some telcos might provide a different protocol though but these three are
the popular ones.


On Dec 18, 2007 6:01 PM, Alec Matusis <matusis at yahoo.com> wrote:

> You can just send emails to most providers
> http://en.wikipedia.org/wiki/SMS_gateways
> (section "Email to SMS")
>
> I am not sure you even need Twisted for that, you could just have a for
> loop
> sending emails I suppose...
>
> From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Alvin
> Delagon
> Sent: Tuesday, December 18, 2007 1:22 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] SMS sending with Python
>
> What is your SMS provider? What protocols are they using? Is it SMPP,
> CIMD2,
> CSP?
>
>
> On Dec 18, 2007 4:51 PM, Daniel Marfil <dmarfil at citic.es> wrote:
> Hi, my name is Daniel from Spain, and this is my first post here ;-)
> I've been looking for something in twisted that allows me to send SMS
> messages through a server, but got no luck until the moment.
> Could anyone give me a clue to begin?
>
> Thank you in advance,
>
> Daniel
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071218/d28246b5/attachment.html>

From dmarfil at citic.es  Tue Dec 18 05:05:40 2007
From: dmarfil at citic.es (Daniel Marfil)
Date: Tue, 18 Dec 2007 13:05:40 +0100
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <7a01f6c00712180256j2ce311c9ncb96f329c493808@mail.gmail.com>
References: <47678A1C.6000604@citic.es>	<7a01f6c00712180121x1d4de024j1cb83da01555bec3@mail.gmail.com>	<02f501c8415c$fbc0eaa0$f342bfe0$@com>
	<7a01f6c00712180256j2ce311c9ncb96f329c493808@mail.gmail.com>
Message-ID: <4767B794.9080407@citic.es>

Thank you very much for your help, Alvin and Alec, I've been having a 
look at your links and looks like a great starting point ;-)


Alvin Delagon escribió:
> So far there's no free available SMS Gateway protocol implementation 
> in python if you search through the net (there is one called pySMPP 
> but isn't maintained anymore. You can download it to have an idea).
>
> I strongly recommend twisted-python in writing an SMS gateway 
> implementation. It's a very powerful tool once you tame it as long you 
> have in-depth understanding of what protocol you're going to implement 
> (kudos to twisted-python developers). :)
>
> Just some advice to help you get going:
> CIMD2 (Nokia)- can be implemented by twisted.protocols.basic.LineReceiver
> CSP (Terabyte)- is just an exchange of http posts so it can be 
> implemented by twisted.web
> SMPP (mBlox)- is packet based twisted.internet.protocol.Protocol + 
> struct will do the trick.
>
> Some telcos might provide a different protocol though but these three 
> are the popular ones.
>
>
> On Dec 18, 2007 6:01 PM, Alec Matusis <matusis at yahoo.com 
> <mailto:matusis at yahoo.com>> wrote:
>
>     You can just send emails to most providers
>     http://en.wikipedia.org/wiki/SMS_gateways
>     (section "Email to SMS")
>
>     I am not sure you even need Twisted for that, you could just have
>     a for loop
>     sending emails I suppose...
>
>     From: twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>
>     [mailto:twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>] On Behalf Of
>     Alvin Delagon
>     Sent: Tuesday, December 18, 2007 1:22 AM
>     To: Twisted general discussion
>     Subject: Re: [Twisted-Python] SMS sending with Python
>
>     What is your SMS provider? What protocols are they using? Is it
>     SMPP, CIMD2,
>     CSP?
>
>
>     On Dec 18, 2007 4:51 PM, Daniel Marfil <dmarfil at citic.es
>     <mailto:dmarfil at citic.es>> wrote:
>     Hi, my name is Daniel from Spain, and this is my first post here ;-)
>     I've been looking for something in twisted that allows me to send SMS
>     messages through a server, but got no luck until the moment.
>     Could anyone give me a clue to begin?
>
>     Thank you in advance,
>
>     Daniel
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>     <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
>
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From itamar at itamarst.org  Tue Dec 18 06:24:30 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Dec 2007 08:24:30 -0500
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <47678A1C.6000604@citic.es>
References: <47678A1C.6000604@citic.es>
Message-ID: <1197984270.21999.17.camel@localhost.localdomain>


On Tue, 2007-12-18 at 09:51 +0100, Daniel Marfil wrote:
> Hi, my name is Daniel from Spain, and this is my first post here ;-)
> I've been looking for something in twisted that allows me to send SMS 
> messages through a server, but got no luck until the moment.
> Could anyone give me a clue to begin?

In the US at least you can send SMS messages using AIM (so, using the
twisted.words.protocols.oscar module), though that means less control
over formatting. And they'll stop accepting messages if you send too
many, probably. 

For personal use, however, and assuming it works in Spain, that's an
easy way to go (send a message to +<countrycode><phonenumber>, e.g.
+15551234567)




From dfarrell at mypublisher.com  Tue Dec 18 06:37:01 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Tue, 18 Dec 2007 08:37:01 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue 20
In-Reply-To: <4767341D.9060805@eepatents.com>
Message-ID: <318F79422ADC5041A93343721F84474D8B0661@exchange.mypublisher.local>

Thanks Ed, that's very kind of you and I appreciate your efforts to do
so.

Doug

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Ed
Suominen
Sent: Monday, December 17, 2007 9:45 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Re: Twisted-Python Digest, Vol 45, Issue
20

Doug Farrell wrote:
> Ed,
> 
> I've been coding for awhile, but am fairly new to actually using
> Twisted. I'm very interested the work you are doing because of a
project
> I'm thinking of at work. It's not nearly as complicated as your
project,
> and though we have a number of Linux servers at our disposal, they
> aren't clustered at all. We manufacture photobooks, and I'd like to
make
> our manufacturing workflow more "real time" than it is. What I was
> thinking of was building a Twisted backbone for the system and
> allocating long term processing elements of the workflow to other
> "nodes" using Pyro or PP (the python parallel processing module) tied
to
> DeferToThread objects. But your solution looks interesting and I'm
going
> to read more of the link you provide. Any suggestions you might have,
> places you could point me for guidance would be greatly appreaciated.
> 
> Thanks for the link you provided,

Doug, I'll try to write up some sort of an "Asynchronous Clustering
HOW-TO" on the AsynCluster wiki site in the next few days.

Best regards, Ed

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dfarrell at mypublisher.com  Tue Dec 18 06:42:06 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Tue, 18 Dec 2007 08:42:06 -0500
Subject: [Twisted-Python] twisted, SMP and clusters
In-Reply-To: <20071217221716.21558.1652062512.divmod.xquotient.3092@joule.divmod.com>
Message-ID: <318F79422ADC5041A93343721F84474D8B0662@exchange.mypublisher.local>

Thanks for the response. I was thinking Pyro and PP might be
incompatible with Twisted, since they already have communication
mechanisms in them, but wasn't sure. I've also got a response from Ed
that he might try to get some sample code up on the AsynCluster site to
show how something like this could be implemented. I've got to better
define my goals and design and perhaps post that.

Again, thanks for the response,
Doug

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of
glyph at divmod.com
Sent: Monday, December 17, 2007 5:17 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] twisted, SMP and clusters

On 07:44 pm, dfarrell at mypublisher.com wrote:
>I'm considering using Twisted to build a soft realtime system to 
>control a workflow for a physical production facility. Although there 
>would be some socket work for it to do (XML-RPC, logging, etc) I also 
>like it because of the nice way it can be daemonized. One of my goals 
>for this project is to take better advantage of our multiple Linux 
>servers, each of which has multiple CPU's with dual cores. I'd like to 
>take our workflow objects that are fairly long running state machines 
>and cut them loose on other cores/CPUs/servers if I can. So here's my 
>question: should I be looking at twisted.spread for this kind of work? 
>Can the Parallel Python or Pyro projects be incorporated into Twisted, 
>and if so, what kinds of things should I watch out for, or is it even 
>possible? I'm thinking if I use Parallel Python or Pyro I could make 
>remote calls to our objects in a DeferToThread object and get back the 
>results/errors via callbacks. I'm still really pretty new to Twisted, 
>so forgive my nave questions if they are so.

PB (i.e. twisted.spread.pb) might be appropriate to this sort of work. 
It makes communicating between objects in multiple Twisted processes 
fairly easy.

Depending on your requirements, so might a lot of Twisted things.  If 
other code is talking to this, AMP (twisted.protocols.amp) or XMLRPC 
(twisted.web.xmlrpc) might also be appropriate.

Pyro and PP, while potentially valid approaches to your problem, are 
more or less incompatible with Twisted.  They *could* be made to work 
togther, there's no actual technical incompatibility, but they're geared

towards working with entirely different programming paradigms.

When it's all said and done, none of these things is really a turn-key 
distributed programming environment.  They're just different ways to 
communicate messages between nodes.  In order to say what would be most 
appropriate to your problem domain, you'd need to describe your 
environment and your requirements a bit better.  For obvious reasons, 
though, you're not likely to get a suggestion other than "use Twisted" 
in this particular venue :).

It sounds like Ed's AsynCluster might provide the sort of structure (on 
top of PB) that you're looking for, but I don't know much about it, and 
I've never used it.  However, unlike these other tools, it's not just a 
messaging system, it is specifically for doing cluster computing.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From sajitrao at gmail.com  Tue Dec 18 10:18:48 2007
From: sajitrao at gmail.com (Sajit Rao)
Date: Tue, 18 Dec 2007 12:18:48 -0500
Subject: [Twisted-Python] Server/Client bi-directional data-transfer -
	need a solution
In-Reply-To: <200712121120.27558.maarten@treewalker.org>
References: <e0d23f6a0712111907y3cfd073dr52312c40209658c1@mail.gmail.com>
	<200712121120.27558.maarten@treewalker.org>
Message-ID: <e0d23f6a0712180918h3fea2932wef0d6767cb4f228f@mail.gmail.com>

Thanks for your reply, Maarten.

I'm still chewing over it. In answer to your questions:

I will be sending short strings between client and server (bi-directionally)
most of the time (> 100 times a day) and ocassionaly files (each of size 5
MB or less and > 10 but <100 times a day).

I wouldn't mind sending strings or files along the same channel - but I
don't know how to do that

While I like the brevity of python and realize that Twisted deffereds are
the heart of the async model,  I'm hampered by the scant documentation and
code fragments.

Could someone point me to how to send raw strings or binary files over the
same channel and have the other side interpret the data correctly?

Thanks,

Sajit

On Dec 12, 2007 5:20 AM, Maarten ter Huurne <maarten at treewalker.org> wrote:

> On Wednesday 12 December 2007, Sajit Rao wrote:
>
> > *The Goal:*
> >
> >    - I'm trying to write a simple server/client app where the client can
> >    send the server either a small string like "hello" OR a small file
> > (txt, pdf, ppt,.. let's say < 5MB ).
> >    - The server needs to figure out if the data it received is a simple
> >    string or a file and symmetrically may decide to send back to the
> > client a simple string or a small file.
> >    - As a bonus, It's highly desirable that the transfer be secure - but
> >    it's ok for the first version if it isn't
>
> Would an HTTP POST suffice? You could easily test it using a web browser
> or
> a program like wget and adding a secure channel is done by switching from
> HTTP to HTTPS later.
>
> If your application works like an instant messenger, consider using
> Twisted
> Words, for example with the XMPP (Jabber) protocol.
>
> Does the client/server connection have to be able to pass a firewall or
> proxy? In that case HTTP or something that can be run over HTTP would be a
> big advantage.
>
> > *Questions:*
> >
> > What's the cleanest way to accomplish this? I've been looking at the
> > single Howto/Example that exists for *twisted.conch* but still can't
> > understand several things. In particular
> >
> >    1. Should I create two separate channels between server and client -
> >    one for simple strings and one for files so that the client or server
> > knows the type of data on that channel?
>
> That depends on what protocol you want to use over the channel(s). If the
> protocol can send series of text strings and binaries over the same
> channel
> then you need only one. But if having separate channels helps in
> simplifying the protocol, then that might be better.
>
> One design decision to make is whether to keep the channel(s) open the
> whole
> time or open them when there is new data and then close them when the
> transfer is done. Or maybe keep the text string channel open all the time
> and open a file transfer channel on demand.
>
> What kind of performance characteristics do you need? Does latency on the
> text strings matter? Are you going to transfer 10 files a day or 10000?
>
> >    2. Should the files be mime-encoded at one end and mime-decoded at
> the
> >    other so that file-type is automatically handled?
>
> MIME encoding gives you a way to send the file name and type and it can be
> used over a text stream. However, the encoding of the data itself is not
> really needed if your channel is 8-bit clear and everything except e-mail
> is 8-bit clear nowadays (I think). For small files the overhead is
> neglible
> though.
>
> >    3. I've read that there is a python package called paramiko that
> >    implements ssh2 transfer - how does this compare with twisted.conch?
>
> I don't know. One thing you could look at is which main loop you want to
> use. If you want to use Twisted's reactor, conch would better integrate
> with that of course. But if you want to use a GUI toolkit not supported by
> Twisted, it would take some effort to merge the main loops, so then
> running
> paramiko in a thread might be easier.
>
> Another thing to look at is the license: paramiko is LGPL, which places
> more
> restrictions on its use than Twisted's MIT license. Depending on your
> situation that may or may not be important.
>
> Bye,
>                Maarten
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071218/49733973/attachment.html>

From michal.dtz at gmail.com  Tue Dec 18 10:37:38 2007
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Tue, 18 Dec 2007 18:37:38 +0100
Subject: [Twisted-Python] SMS sending with Python
In-Reply-To: <47678A1C.6000604@citic.es>
References: <47678A1C.6000604@citic.es>
Message-ID: <20071218183738.4473508b@dotz-laptop>

On Tue, 18 Dec 2007 09:51:40 +0100
Daniel Marfil <dmarfil at citic.es> wrote:

> Hi, my name is Daniel from Spain, and this is my first post here ;-)
> I've been looking for something in twisted that allows me to send SMS 
> messages through a server, but got no luck until the moment.
> Could anyone give me a clue to begin?

Well, I'd try sending SMS via web - through an official web gate. Some
networks have simple web pages, thus they allow you to send
SMS by simply sending a GET or POST request via HTTP. Some networks,
instead, use some complicated javascript as a mean of security by
obscurity (captcha included) - http://sms.idea.pl, for example - I'd
try PBP (Python Browser Poseur; http://pbp.berlios.de ) or twill or
similar utilities. PBP uses Twisted.

... but, Twisted supports serial ports, so feel free to plug in your
phone and hack :) 

-- 
m



From andrew-twisted at puzzling.org  Tue Dec 18 16:24:20 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 19 Dec 2007 10:24:20 +1100
Subject: [Twisted-Python] Server/Client bi-directional data-transfer -
	need a solution
In-Reply-To: <e0d23f6a0712180918h3fea2932wef0d6767cb4f228f@mail.gmail.com>
References: <e0d23f6a0712111907y3cfd073dr52312c40209658c1@mail.gmail.com>
	<200712121120.27558.maarten@treewalker.org>
	<e0d23f6a0712180918h3fea2932wef0d6767cb4f228f@mail.gmail.com>
Message-ID: <20071218232420.GD15885@steerpike.home.puzzling.org>

Sajit Rao wrote:
> Thanks for your reply, Maarten.
> 
> I'm still chewing over it. In answer to your questions:
> 
> I will be sending short strings between client and server (bi-directionally)
> most of the time (> 100 times a day) and ocassionaly files (each of size 5 MB
> or less and > 10 but <100 times a day).
> 
> I wouldn't mind sending strings or files along the same channel - but I don't
> know how to do that
> 
> While I like the brevity of python and realize that Twisted deffereds are the
> heart of the async model,  I'm hampered by the scant documentation and code
> fragments.
> 
> Could someone point me to how to send raw strings or binary files over the same
> channel and have the other side interpret the data correctly?

This is really a protocol design question rather than Twisted-specific question.

You might find Itamar's series of articles on protocol design to be helpful:

http://webservices.xml.com/pub/a/ws/2003/11/25/protocols.html
http://webservices.xml.com/pub/a/ws/2004/01/20/sessions.html
http://webservices.xml.com/pub/a/ws/2004/02/25/protocols3.html
http://webservices.xml.com/pub/a/ws/2004/04/21/protocols.html
http://www.xml.com/pub/a/ws/2004/08/25/dprotocol.html

(You can find these and other writings at http://www.itamarst.org/)

-Andrew.




From miles.chris at gmail.com  Wed Dec 19 06:15:59 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Thu, 20 Dec 2007 00:15:59 +1100
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
Message-ID: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>

I want to deploy my Twisted app as a Twisted Application Plugin for  
twistd as per
http://twistedmatrix.com/projects/core/documentation/howto/tap.html

I want to distribute my app as a tarball, so the user would untar it  
and run "python setup.py install".  Then they would run "twistd myapp"  
to start it.

How do I configure setup.py so that twisted/plugins/myapp.py is created?

Where do I create the twisted/plugins directory?

(I see how this works if I run twistd from the directory containing  
twisted/plugins, or if I set PYTHONPATH, but I don't expect my users  
to have to do this).

Cheers,
Chris




From radix at twistedmatrix.com  Wed Dec 19 06:37:06 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 19 Dec 2007 08:37:06 -0500
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>
References: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>
Message-ID: <60ed19d40712190537y1a0b68aej59d6d3400bff51e2@mail.gmail.com>

On Dec 19, 2007 8:15 AM, Chris Miles <miles.chris at gmail.com> wrote:
> How do I configure setup.py so that twisted/plugins/myapp.py is created?

Good question; I still haven't figured it out. I know the Divmod guys
use the plugin system extensively, maybe one of them can say something
on the subject?

> Where do I create the twisted/plugins directory?

You should probably expect it to be already there. It needs to go into
the main twisted/plugins directory, i.e. the one that "import
twisted.plugins; print twisted.plugins.__file__" gives you.

I get the feeling that this should either be really easy or really
hard to do with distutils. If you manage to figure it out, I'd like to
add the information to the Plugin howto.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From eburus at gmail.com  Wed Dec 19 06:39:36 2007
From: eburus at gmail.com (Burus Gmail)
Date: Wed, 19 Dec 2007 16:39:36 +0300
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>
References: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>
Message-ID: <47691F18.2090904@gmail.com>

See the twisted.python.dist module to understand installation process
for the twisted subprojects.
For real example check any plugin of the Twisted and make setup.py file
in  your own project directory.
Be careful, in the twisted subprojects  setup  modules is in the
topfiles directory. It necessary for the
twisted's release script, you don't need it if you plugin isn't under
twisted maintainence.

Chris Miles wrote:
> I want to deploy my Twisted app as a Twisted Application Plugin for
> twistd as per
> http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
> I want to distribute my app as a tarball, so the user would untar it
> and run "python setup.py install".  Then they would run "twistd myapp"
> to start it.
>
> How do I configure setup.py so that twisted/plugins/myapp.py is created?
>
> Where do I create the twisted/plugins directory?
>
> (I see how this works if I run twistd from the directory containing
> twisted/plugins, or if I set PYTHONPATH, but I don't expect my users
> to have to do this).
>
> Cheers,
> Chris
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
"""
Best regards, 
Alexander Burtsev, 
Web Development Department, TV Channel 'Sport' 
"""

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071219/d6b04ffc/attachment.html>

From exarkun at divmod.com  Wed Dec 19 07:21:40 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 19 Dec 2007 09:21:40 -0500
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <2C4BC941-C6E5-4C1A-ACDE-5A386E615E7C@gmail.com>
Message-ID: <20071219142140.8162.546952978.divmod.quotient.47178@ohm>

On Thu, 20 Dec 2007 00:15:59 +1100, Chris Miles <miles.chris at gmail.com> wrote:
>I want to deploy my Twisted app as a Twisted Application Plugin for  twistd 
>as per
>http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
>I want to distribute my app as a tarball, so the user would untar it  and 
>run "python setup.py install".  Then they would run "twistd myapp"  to start 
>it.
>
>How do I configure setup.py so that twisted/plugins/myapp.py is created?
>

Since your app depends on Twisted, the user should already have a directory
named "twisted/plugins" in their install directory (probably their system-
wide site-packages, but not necessary).  Twisted itself creates and installs
this directory.  Your installer needs to do just two things: put myapp.py
into that directory and regenerate the plugin cache.

One way in which to accomplish the first thing is like this:

    Pass a list like ["twisted.plugins"] for the packages keyword argument
    to distutils setup()

    Pass a dict like {'twisted': ['plugins/myapp.py']} for the package_data
    keyword argument to distutils setup()

    Include a line like "graft twisted" in your MANIFEST.in

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3
gives an example of how to do the second thing.

Jean-Paul



From michal.dtz at gmail.com  Wed Dec 19 19:42:18 2007
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Thu, 20 Dec 2007 03:42:18 +0100
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
Message-ID: <20071220034218.20beba97@dotz-laptop>

Hi, 

I've spent last few days trying to write a wrapper for libaio.

Libaio is a simple Linux-only library, which should in theory support
async read/write on a file descriptor. In practice - this depends on
many strange requirements and the documentation is basically
nonexistent (if you don't count lwn articles and kernel mailing list
archives), so that last few days of C coding looked like this: (it's
funny how every C coding session looks similar)

	http://youtube.com/watch?v=-JbhMvzeX7s
	
Just to summarize...
 * no AIO reads from socket 
 * not every filesystem supported 
 * output buffer must be N-pages long and aligned to page start
 * file access is unbuffered (yep, no cache!)
 * ... and it may still - *silently* - block in some circumstances
   (like, when you run out of "block layer requests", like if 
   I knew, what are those)

Anyways, libaio seems to be a cool idea - maybe someday kernel guys
will do some more work on it (like, commit those patches which add
buffer aio) and it will be possible to do AIO stuff on sockets. On the
other hand, I found no way other to be informed about data
availability, than periodically reaping events (want libaio and epoll
integration? use some more kernel patches...)

You can get the module code and read about current linux aio problems
here:

	http://code.google.com/p/twisted-linux-aio/

It is not a general-purpose module - it's tightly tied to Twisted.
Only reads are supported ATM and there's no Python queue, only that low
level one (see TODO.txt). If you're lucky, you may even see the proof
of concept code running - w/o blocking. There are more things to come,
especially that async shutil.copyfileobj replacement... :)

Sad thing is, that Linux seems to lack much in this area, especially
when compared to FreeBSD...

-- 
m

PS: I feel glad I didn't started with POSIX aio_* implementation - on
Linux it is said to launch a new thread for every fd request!
http://www.atnf.csiro.au/people/rgooch/linux/docs/io-events.html - way
to go, glibc programmers! I hope things are looking better now, than
they were that few years ago...



From miles.chris at gmail.com  Thu Dec 20 00:23:44 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Thu, 20 Dec 2007 18:23:44 +1100
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <20071219142140.8162.546952978.divmod.quotient.47178@ohm>
References: <20071219142140.8162.546952978.divmod.quotient.47178@ohm>
Message-ID: <FE1135C7-BC53-4C26-BCF8-9F067E510563@gmail.com>


On 20/12/2007, at 1:21 AM, Jean-Paul Calderone wrote:

> On Thu, 20 Dec 2007 00:15:59 +1100, Chris Miles  
> <miles.chris at gmail.com> wrote:
>> I want to deploy my Twisted app as a Twisted Application Plugin  
>> for  twistd as per
>> http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>>
>> I want to distribute my app as a tarball, so the user would untar  
>> it  and run "python setup.py install".  Then they would run "twistd  
>> myapp"  to start it.
>>
>> How do I configure setup.py so that twisted/plugins/myapp.py is  
>> created?
>>
>
> Since your app depends on Twisted, the user should already have a  
> directory
> named "twisted/plugins" in their install directory (probably their  
> system-
> wide site-packages, but not necessary).  Twisted itself creates and  
> installs
> this directory.  Your installer needs to do just two things: put  
> myapp.py
> into that directory and regenerate the plugin cache.
>
> One way in which to accomplish the first thing is like this:
>
>   Pass a list like ["twisted.plugins"] for the packages keyword  
> argument
>   to distutils setup()
>
>   Pass a dict like {'twisted': ['plugins/myapp.py']} for the  
> package_data
>   keyword argument to distutils setup()
>
>   Include a line like "graft twisted" in your MANIFEST.in
>
> http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3
> gives an example of how to do the second thing.

Thanks Jean-Paul, that worked great, with both distutils.core.setup  
and twisted.python.dist.setup.  When I used the latter I didn't need  
to regenerate the plugin cache, twistd picked up the new command  
immediately after install.  Is this the advantage of  
twisted.python.dist.setup ?

The technique also (mostly) worked using setuptools.setup.  twistd  
picks up the new command, but spits out a UserWarning due to the  
appearance of the duplicate twisted package within the egg directory.

/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
packages/zope.interface-3.3.0.1-py2.4-macosx-10.3-fat.egg/zope/ 
__init__.py:3: UserWarning: Module twisted was already imported from / 
Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
packages/twisted/__init__.pyc, but /Library/Frameworks/ 
Python.framework/Versions/2.4/lib/python2.4/site-packages/ 
myproject-0.0.0-py2.4.egg is being added to sys.path
   import pkg_resources
Usage: twistd [options]
...

I'd like to use setuptools, if possible, due to my project's  
dependencies on other setuptools-managed packages, but I can live  
without it if it's not fully compatible with Twisted application  
plugins.

Cheers,
Chris Miles




From robert at gravina.com  Thu Dec 20 01:04:32 2007
From: robert at gravina.com (Robert Gravina)
Date: Thu, 20 Dec 2007 17:04:32 +0900
Subject: [Twisted-Python] sending images via PB
Message-ID: <EB31CDF7-77B9-422D-B256-B94C478E874E@gravina.com>

Hi All,

I'm developing an application using Twisted PB, and I'd like to send  
image data from server to client for display there.

Specifically, I'm trying to display an image (e.g. a PNG, but might  
be another type) in a wxPython client which should come from a  
Twisted server somehow, and the client is already connected using PB.

I suppose I can just send the raw file data as a string and use  
that... but just thought I'd ask if anyone has any advice.

Robert




From robert at gravina.com  Thu Dec 20 01:50:12 2007
From: robert at gravina.com (Robert Gravina)
Date: Thu, 20 Dec 2007 17:50:12 +0900
Subject: [Twisted-Python] sending images via PB
In-Reply-To: <EB31CDF7-77B9-422D-B256-B94C478E874E@gravina.com>
References: <EB31CDF7-77B9-422D-B256-B94C478E874E@gravina.com>
Message-ID: <661255BC-8F9F-4E87-B7B9-671507B2D952@gravina.com>


On Dec 20, 2007, at 5:04 PM, Robert Gravina wrote:

> Hi All,
>
> I'm developing an application using Twisted PB, and I'd like to  
> send image data from server to client for display there.
>
> Specifically, I'm trying to display an image (e.g. a PNG, but might  
> be another type) in a wxPython client which should come from a  
> Twisted server somehow, and the client is already connected using PB.
>
> I suppose I can just send the raw file data as a string and use  
> that... but just thought I'd ask if anyone has any advice.
>

No worries.. I was able to get it going by just sending the file  
contents, i.e.:

#on server, open image
image = open("images/test.png")
data = image.read()
#send data to client
.......

#client side
stream = cStringIO.StringIO(data)
bitmap = BitmapFromImage(ImageFromStream(stream))
wx.StaticBitmap(panel, wx.ID_ANY, bitmap)

Robert




From arnarbi at gmail.com  Thu Dec 20 02:23:43 2007
From: arnarbi at gmail.com (Arnar Birgisson)
Date: Thu, 20 Dec 2007 09:23:43 +0000
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
In-Reply-To: <20071220034218.20beba97@dotz-laptop>
References: <20071220034218.20beba97@dotz-laptop>
Message-ID: <28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>

Hi there,

May I ask why you chose libaio over, for example, libevent?

Arnar

On Dec 20, 2007 2:42 AM, Michał Pasternak <michal.dtz at gmail.com> wrote:
> Hi,
>
> I've spent last few days trying to write a wrapper for libaio.
>
> Libaio is a simple Linux-only library, which should in theory support
> async read/write on a file descriptor. In practice - this depends on
> many strange requirements and the documentation is basically
> nonexistent (if you don't count lwn articles and kernel mailing list
> archives), so that last few days of C coding looked like this: (it's
> funny how every C coding session looks similar)
>
>         http://youtube.com/watch?v=-JbhMvzeX7s
>
> Just to summarize...
>  * no AIO reads from socket
>  * not every filesystem supported
>  * output buffer must be N-pages long and aligned to page start
>  * file access is unbuffered (yep, no cache!)
>  * ... and it may still - *silently* - block in some circumstances
>    (like, when you run out of "block layer requests", like if
>    I knew, what are those)
>
> Anyways, libaio seems to be a cool idea - maybe someday kernel guys
> will do some more work on it (like, commit those patches which add
> buffer aio) and it will be possible to do AIO stuff on sockets. On the
> other hand, I found no way other to be informed about data
> availability, than periodically reaping events (want libaio and epoll
> integration? use some more kernel patches...)
>
> You can get the module code and read about current linux aio problems
> here:
>
>         http://code.google.com/p/twisted-linux-aio/
>
> It is not a general-purpose module - it's tightly tied to Twisted.
> Only reads are supported ATM and there's no Python queue, only that low
> level one (see TODO.txt). If you're lucky, you may even see the proof
> of concept code running - w/o blocking. There are more things to come,
> especially that async shutil.copyfileobj replacement... :)
>
> Sad thing is, that Linux seems to lack much in this area, especially
> when compared to FreeBSD...
>
> --
> m
>
> PS: I feel glad I didn't started with POSIX aio_* implementation - on
> Linux it is said to launch a new thread for every fd request!
> http://www.atnf.csiro.au/people/rgooch/linux/docs/io-events.html - way
> to go, glibc programmers! I hope things are looking better now, than
> they were that few years ago...
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

From exarkun at divmod.com  Thu Dec 20 07:30:11 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 20 Dec 2007 09:30:11 -0500
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <FE1135C7-BC53-4C26-BCF8-9F067E510563@gmail.com>
Message-ID: <20071220143011.8162.1498082092.divmod.quotient.47498@ohm>

On Thu, 20 Dec 2007 18:23:44 +1100, Chris Miles <miles.chris at gmail.com> wrote:
>
> [snip]
>
>Thanks Jean-Paul, that worked great, with both distutils.core.setup  and 
>twisted.python.dist.setup.  When I used the latter I didn't need  to 
>regenerate the plugin cache, twistd picked up the new command  immediately 
>after install.  Is this the advantage of  twisted.python.dist.setup ?

Not quite.  twisted.python.dist is an internal module, not part of Twisted's
public API.  Notice this line in its docstring:

    API Stability: Unstable. Don't use it outside of Twisted.

>
>The technique also (mostly) worked using setuptools.setup.  twistd  picks up 
>the new command, but spits out a UserWarning due to the  appearance of the 
>duplicate twisted package within the egg directory.
>
>/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>packages/zope.interface-3.3.0.1-py2.4-macosx-10.3-fat.egg/zope/ 
>__init__.py:3: UserWarning: Module twisted was already imported from / 
>Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site- 
>packages/twisted/__init__.pyc, but /Library/Frameworks/ 
>Python.framework/Versions/2.4/lib/python2.4/site-packages/ 
>myproject-0.0.0-py2.4.egg is being added to sys.path
>   import pkg_resources
>Usage: twistd [options]
>...
>
>I'd like to use setuptools, if possible, due to my project's  dependencies 
>on other setuptools-managed packages, but I can live  without it if it's not 
>fully compatible with Twisted application  plugins.

I'm not really sure what the above warning signifies, whether it indicates
a real problem, or what would be necessary to fix it if so.  I know that
setuptools does a number of things which aren't compatible with distutils
and the assumptions of Twisted, though.

Jean-Paul



From exarkun at divmod.com  Thu Dec 20 07:31:35 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 20 Dec 2007 09:31:35 -0500
Subject: [Twisted-Python] sending images via PB
In-Reply-To: <661255BC-8F9F-4E87-B7B9-671507B2D952@gravina.com>
Message-ID: <20071220143135.8162.1025533629.divmod.quotient.47499@ohm>

On Thu, 20 Dec 2007 17:50:12 +0900, Robert Gravina <robert at gravina.com> wrote:
>
>On Dec 20, 2007, at 5:04 PM, Robert Gravina wrote:
>>Hi All,
>>
>>I'm developing an application using Twisted PB, and I'd like to  send image 
>>data from server to client for display there.
>>
>>Specifically, I'm trying to display an image (e.g. a PNG, but might  be 
>>another type) in a wxPython client which should come from a  Twisted server 
>>somehow, and the client is already connected using PB.
>>
>>I suppose I can just send the raw file data as a string and use  that... 
>>but just thought I'd ask if anyone has any advice.
>
>No worries.. I was able to get it going by just sending the file  contents, 
>i.e.:
>
>#on server, open image
>image = open("images/test.png")
>data = image.read()
>#send data to client

For potentially large files, you might want to use FilePager from
twisted.spread.util, if you aren't already.

Jean-Paul



From michal.dtz at gmail.com  Thu Dec 20 11:16:59 2007
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Thu, 20 Dec 2007 19:16:59 +0100
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
In-Reply-To: <28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
References: <20071220034218.20beba97@dotz-laptop>
	<28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
Message-ID: <20071220191659.198aa3e2@dotz-laptop>

On Thu, 20 Dec 2007 09:23:43 +0000
"Arnar Birgisson" <arnarbi at gmail.com> wrote:

> Hi there,
> 
> May I ask why you chose libaio over, for example, libevent?

libevent is to C as Twisted is to Python. Both run on many
OS/platforms, but neither give you asynchronous file read/write;
read(2) on a file descriptor (not socket) will be always blocking.
At least this is what I understood after quick glance at libevent
source - all it does in buffer.c:evbuffer_read on non-win32 OS is
calling read(2).

libaio, instead, gives you async filesystem read/write access. Reading
a few hundred megabytes of data won't block Twisted reactor, which is
good.

Even better news is that since sending that e-mail yesterday I've found
out how to integrate Linux async I/O with epoll notification, so the
implementation I'm working on now will be even better. Pity it's
Linux-only, but well... to be portable, it should be POSIX aio really,
but I can't give you any guarantees about POSIX aio performance on
Linux. I can try working on other OSs later, if there will be enough
ppl interested.

Of course it would be cool to have Python libevent bindings - and even
cooler it would be to have a portable libevent reactor in C - but would
that really remove some of the limitations that Twisted has still to
deal with? You'd still have to hack portable AIO implementation into
libevent to have async file read/writes then ... :)

Take care,
-- 
m



From arnarbi at gmail.com  Thu Dec 20 12:46:04 2007
From: arnarbi at gmail.com (Arnar Birgisson)
Date: Thu, 20 Dec 2007 19:46:04 +0000
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
In-Reply-To: <20071220191659.198aa3e2@dotz-laptop>
References: <20071220034218.20beba97@dotz-laptop>
	<28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
	<20071220191659.198aa3e2@dotz-laptop>
Message-ID: <28012bc60712201146x38264bf0o793ec5e435ac6201@mail.gmail.com>

On Dec 20, 2007 6:16 PM, Michał Pasternak <michal.dtz at gmail.com> wrote:
> On Thu, 20 Dec 2007 09:23:43 +0000
> "Arnar Birgisson" <arnarbi at gmail.com> wrote:
>
> > Hi there,
> >
> > May I ask why you chose libaio over, for example, libevent?
>
> libevent is to C as Twisted is to Python. Both run on many
> OS/platforms, but neither give you asynchronous file read/write;
> read(2) on a file descriptor (not socket) will be always blocking.
> At least this is what I understood after quick glance at libevent
> source - all it does in buffer.c:evbuffer_read on non-win32 OS is
> calling read(2).

I'm pretty sure you are mistaken. As I understood, libevent provides a
portable API on top of whatever async I/O mechanisms there are on the
underlying system, selecting the best available implementation.

For Linux, I believe this it currently uses epoll, kqueue on freebsd,
or select() or poll() on older systems.

> libaio, instead, gives you async filesystem read/write access. Reading
> a few hundred megabytes of data won't block Twisted reactor, which is
> good.

libevent provides file and socket i/o, along with timers. Latest
version provides buffered i/o and async dns resolver and http server.

Please forgive (and ignore) me if I'm completely missing something :)

> Of course it would be cool to have Python libevent bindings - and even
> cooler it would be to have a portable libevent reactor in C - but would
> that really remove some of the limitations that Twisted has still to
> deal with? You'd still have to hack portable AIO implementation into
> libevent to have async file read/writes then ... :)

Python libevent bindings have existed for a while in pyevent, a pyrex
binding module:
http://code.google.com/p/pyevent/

Not sure how well it is maintained, but I've seen many references to
it so it looks like people are using it.

As for a libevent based reactor, there is an old ticket and branch for it here:
http://twistedmatrix.com/trac/ticket/1930
http://twistedmatrix.com/trac/browser/branches/libevent-1930-3

Googling for "twisted libevent reactor" gives many interesting results.

cheers,
Arnar

From itamar at itamarst.org  Thu Dec 20 13:36:47 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 20 Dec 2007 15:36:47 -0500 (EST)
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
In-Reply-To: <28012bc60712201146x38264bf0o793ec5e435ac6201@mail.gmail.com>
References: <20071220034218.20beba97@dotz-laptop>
	<28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
	<20071220191659.198aa3e2@dotz-laptop>
	<28012bc60712201146x38264bf0o793ec5e435ac6201@mail.gmail.com>
Message-ID: <9334.63.107.91.99.1198183007.squirrel@webmail.zoteca.com>

> I'm pretty sure you are mistaken. As I understood, libevent provides a
> portable API on top of whatever async I/O mechanisms there are on the
> underlying system, selecting the best available implementation.
>
> For Linux, I believe this it currently uses epoll, kqueue on freebsd,
> or select() or poll() on older systems.

None of those are asynchronous IO. They allow efficient querying of
readability/writeability, typically used with *non-blocking* IO.

In design pattern language they are "reactors", whereas async IO would be
a "proactor." In API land you can tell the difference because with async
APIs you have a callback: Twisted's Protocol/Transport APIs usually
convert low-level change events (socket is readable) and non-blocking IO
(reading the socket) to high-level async callbacks (dataReceived called
with data).




From arnarbi at gmail.com  Thu Dec 20 14:13:26 2007
From: arnarbi at gmail.com (Arnar Birgisson)
Date: Thu, 20 Dec 2007 21:13:26 +0000
Subject: [Twisted-Python] Async file I/O with Linux & Twisted
In-Reply-To: <9334.63.107.91.99.1198183007.squirrel@webmail.zoteca.com>
References: <20071220034218.20beba97@dotz-laptop>
	<28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
	<20071220191659.198aa3e2@dotz-laptop>
	<28012bc60712201146x38264bf0o793ec5e435ac6201@mail.gmail.com>
	<9334.63.107.91.99.1198183007.squirrel@webmail.zoteca.com>
Message-ID: <28012bc60712201313gbadd16dx86a99c8cfbf9125d@mail.gmail.com>

On Dec 20, 2007 8:36 PM, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> > I'm pretty sure you are mistaken. As I understood, libevent provides a
> > portable API on top of whatever async I/O mechanisms there are on the
> > underlying system, selecting the best available implementation.
> >
> > For Linux, I believe this it currently uses epoll, kqueue on freebsd,
> > or select() or poll() on older systems.
>
> None of those are asynchronous IO. They allow efficient querying of
> readability/writeability, typically used with *non-blocking* IO.

Ah, right, I understand. Sorry about the noise then <:|

Seems I've been using the wrong word for a while then. So is
performance the only reason for preferring asynchronous i/o to
non-blocking i/o?

> In design pattern language they are "reactors", whereas async IO would be
> a "proactor." In API land you can tell the difference because with async
> APIs you have a callback: Twisted's Protocol/Transport APIs usually
> convert low-level change events (socket is readable) and non-blocking IO
> (reading the socket) to high-level async callbacks (dataReceived called
> with data).

Kernel level AIO, is that about the kernel providing that abstraction
or is it using the hardware in some entirely different way?

Hope you don't mind naive questions.

cheers,
Arnar



From jonathansamuel at yahoo.com  Thu Dec 20 22:33:49 2007
From: jonathansamuel at yahoo.com (Jonathan Mark)
Date: Thu, 20 Dec 2007 21:33:49 -0800 (PST)
Subject: [Twisted-Python] Which OpenSSL Package Does Twisted 2.5 Need On
	Linux? Where can I get it?
Message-ID: <677197.13060.qm@web32514.mail.mud.yahoo.com>

Running the email server script from Abe Fettig's Twisted book produces the following error:

"ImportError: No module named OpenSSL"

There are a number of versions of a number of Python modules with a similar name. PyOpenSSL has not been updated since 2004 and only has a .6 version number.

Which OpenSSL module or other modules should I install with Twisted 2.5 on Linux in order to avoid this error message. I am using the CentOs 4 version of Linux which is similar to RHEL 4.








From miles.chris at gmail.com  Thu Dec 20 23:43:26 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Fri, 21 Dec 2007 17:43:26 +1100
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <20071220143011.8162.1498082092.divmod.quotient.47498@ohm>
References: <20071220143011.8162.1498082092.divmod.quotient.47498@ohm>
Message-ID: <DCF4A982-D568-400B-BF26-AF0C7BBF867A@gmail.com>


On 21/12/2007, at 1:30 AM, Jean-Paul Calderone wrote:

> On Thu, 20 Dec 2007 18:23:44 +1100, Chris Miles  
> <miles.chris at gmail.com> wrote:
>> Thanks Jean-Paul, that worked great, with both  
>> distutils.core.setup  and twisted.python.dist.setup.  When I used  
>> the latter I didn't need  to regenerate the plugin cache, twistd  
>> picked up the new command  immediately after install.  Is this the  
>> advantage of  twisted.python.dist.setup ?
>
> Not quite.  twisted.python.dist is an internal module, not part of  
> Twisted's
> public API.  Notice this line in its docstring:
>
>   API Stability: Unstable. Don't use it outside of Twisted.

Understood.  I'm happy with the solution using distutils.core.setup  
and forcing a plugin cache refresh.

btw, the "Plugin Caching" section on http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3 
  has an error.  The sample code uses "getPlugin" but it should be  
getPlugins.

i.e. I needed to use (with Twisted 2.5.0):
{{{
from twisted.plugin import IPlugin, getPlugins
list(getPlugins(IPlugin))
}}}

Cheers,
Chris Miles




From exarkun at divmod.com  Fri Dec 21 05:36:52 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 21 Dec 2007 07:36:52 -0500
Subject: [Twisted-Python] Which OpenSSL Package Does Twisted 2.5 Need On
	Linux? Where can I get it?
In-Reply-To: <677197.13060.qm@web32514.mail.mud.yahoo.com>
Message-ID: <20071221123652.8162.1190951305.divmod.quotient.47750@ohm>

On Thu, 20 Dec 2007 21:33:49 -0800 (PST), Jonathan Mark <jonathansamuel at yahoo.com> wrote:
>Running the email server script from Abe Fettig's Twisted book produces the following error:
>
>"ImportError: No module named OpenSSL"
>
>There are a number of versions of a number of Python modules with a similar name. PyOpenSSL has not been updated since 2004 and only has a .6 version number.

PyOpenSSL is the library Twisted depends on for SSL support.

Jean-Paul




From exarkun at twistedmatrix.com  Sat Dec 22 22:05:06 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Dec 2007 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1198386306.88.46180751@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071223/44402c55/attachment.html>

From michal.dtz at gmail.com  Sat Dec 22 11:50:50 2007
From: michal.dtz at gmail.com (=?UTF-8?B?TWljaGHFgg==?= Pasternak)
Date: Sat, 22 Dec 2007 19:50:50 +0100
Subject: [UPDATE] twisted-linux-aio now works with epoll [was: Re:
	[Twisted-Python] Async file I/O with Linux & Twisted]
In-Reply-To: <28012bc60712201313gbadd16dx86a99c8cfbf9125d@mail.gmail.com>
References: <20071220034218.20beba97@dotz-laptop>
	<28012bc60712200123k54b9bdfch3d776cd708537472@mail.gmail.com>
	<20071220191659.198aa3e2@dotz-laptop>
	<28012bc60712201146x38264bf0o793ec5e435ac6201@mail.gmail.com>
	<9334.63.107.91.99.1198183007.squirrel@webmail.zoteca.com>
	<28012bc60712201313gbadd16dx86a99c8cfbf9125d@mail.gmail.com>
Message-ID: <20071222195050.083f9bd1@dotz-laptop>

On Thu, 20 Dec 2007 21:13:26 +0000
"Arnar Birgisson" <arnarbi at gmail.com> wrote:

> Kernel level AIO, is that about the kernel providing that abstraction
> or is it using the hardware in some entirely different way?

Linux KAIO (Kernel Async I/O) layer allows you to read and write
files in an async (non-blocking) way, just like you read or write
non-blocking network sockets. It is similar to async I/O defined by
Open Group:

	http://www.opengroup.org/onlinepubs/009695399/functions/aio_read.html

It is a quite new topic, because until now, you were able to perform
async operations only on network sockets. Async I/O in terms of
network sockets is nothing new. FreeBSD's kqueue, Linux's epoll are
just a means of notification, that a given async socket has some data
to read (or accepts data to be written), so you don't need to poll for
those events (like traditional Unix's poll, which is slow -- see
http://www.kegel.com/c10k.html ).

[UPDATE] twisted-linux-aio now works with epoll.
I finally found out how to create fd notification for aio, so right now
twisted-linux-aio supports it. It integrates well with epollreactor. I
also added some code to implement Python queue in it, so the usage
ATM looks like this:

  aio.Queue().readfile("/some/file/name").addCallbacks(...)

It is still work in progress, though. Too early to say about
efficiency, but it seems, that Twisted applications which do a lot of
concurrent disk I/O will benefit. Get the new code via
http://twisted-linux-aio.googlecode.com/ .

-- 
Michal Pasternak



From miles.chris at gmail.com  Sun Dec 23 04:34:12 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Sun, 23 Dec 2007 22:34:12 +1100
Subject: [Twisted-Python] How to configure setup.py for a twistd TAP app
In-Reply-To: <DCF4A982-D568-400B-BF26-AF0C7BBF867A@gmail.com>
References: <20071220143011.8162.1498082092.divmod.quotient.47498@ohm>
	<DCF4A982-D568-400B-BF26-AF0C7BBF867A@gmail.com>
Message-ID: <F6F895E1-96FA-4602-BBB6-110E7B5A4ED5@gmail.com>


On 21/12/2007, at 5:43 PM, Chris Miles wrote:

> On 21/12/2007, at 1:30 AM, Jean-Paul Calderone wrote:
>
>> On Thu, 20 Dec 2007 18:23:44 +1100, Chris Miles <miles.chris at gmail.com 
>> > wrote:
>>> Thanks Jean-Paul, that worked great, with both  
>>> distutils.core.setup  and twisted.python.dist.setup.  When I used  
>>> the latter I didn't need  to regenerate the plugin cache, twistd  
>>> picked up the new command  immediately after install.  Is this the  
>>> advantage of  twisted.python.dist.setup ?
>>
>> Not quite.  twisted.python.dist is an internal module, not part of  
>> Twisted's
>> public API.  Notice this line in its docstring:
>>
>>  API Stability: Unstable. Don't use it outside of Twisted.
>
> Understood.  I'm happy with the solution using distutils.core.setup  
> and forcing a plugin cache refresh.

I have documented the method I used to package my Twisted app using  
distutils.  I used the Twisted finger tutorial as an example.

http://chrismiles.livejournal.com/23399.html

Hope this helps others.

Cheers,
Chris Miles




From therve at free.fr  Mon Dec 24 11:27:17 2007
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Mon, 24 Dec 2007 19:27:17 +0100
Subject: [Twisted-Python] Implementation of the Erlang node protocol
Message-ID: <476FFA05.6060308@free.fr>

Hello people,

I want to point out to a project I started in my Twisted sandbox to 
implement the Erlang node protocol: 
http://twistedmatrix.com/trac/browser/sandbox/therve/erlang. It's 
vaguely inspired from the py_interface project: 
http://www.lysator.liu.se/~tab/erlang/py_interface/.

What's the content? It allows you to create a hidden Erlang node as a 
Twisted process, so that you can call methods on another Erlang node and 
receive calls (like you can do with C or Java with standard erlang 
distribution). It implements serialization and deserialization for most 
of the basic types, and both direction RPC. The benefit, of course, is 
to be able to get all Twisted protocols for free inside an Erlang 
program, or on the contrary to access Erlang power inside a Twisted 
server. I'm even writing a lit bit of documention: 
http://twistedmatrix.com/trac/browser/sandbox/therve/erlang.xhtml?format=raw.

I started it hoping to use it for something serious, but I couldn't, so 
now the project is a bit stalled until someone really use it. I'd be 
glad if it could be useful for anyone, and I'm willing to help by 
debugging and adding features. You can contact me on the #twisted 
channel or on this ML.

-- 
Thomas



From sflist at ihonk.com  Tue Dec 25 16:57:42 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 25 Dec 2007 16:57:42 -0700
Subject: [Twisted-Python] Implementation of the Erlang node protocol
In-Reply-To: <476FFA05.6060308@free.fr>
References: <476FFA05.6060308@free.fr>
Message-ID: <1198627062.23415.54.camel@infidel>

That is waaaaay too cool. I've got to try this out.

Steve

On Mon, 2007-12-24 at 19:27 +0100, Thomas Hervé wrote:
> Hello people,
> 
> I want to point out to a project I started in my Twisted sandbox to 
> implement the Erlang node protocol: 
> http://twistedmatrix.com/trac/browser/sandbox/therve/erlang. It's 
> vaguely inspired from the py_interface project: 
> http://www.lysator.liu.se/~tab/erlang/py_interface/.
> 
> What's the content? It allows you to create a hidden Erlang node as a 
> Twisted process, so that you can call methods on another Erlang node and 
> receive calls (like you can do with C or Java with standard erlang 
> distribution). It implements serialization and deserialization for most 
> of the basic types, and both direction RPC. The benefit, of course, is 
> to be able to get all Twisted protocols for free inside an Erlang 
> program, or on the contrary to access Erlang power inside a Twisted 
> server. I'm even writing a lit bit of documention: 
> http://twistedmatrix.com/trac/browser/sandbox/therve/erlang.xhtml?format=raw.
> 
> I started it hoping to use it for something serious, but I couldn't, so 
> now the project is a bit stalled until someone really use it. I'd be 
> glad if it could be useful for anyone, and I'm willing to help by 
> debugging and adding features. You can contact me on the #twisted 
> channel or on this ML.
> 




From ellisonbg.net at gmail.com  Tue Dec 25 21:03:44 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 25 Dec 2007 21:03:44 -0700
Subject: [Twisted-Python] Implementation of the Erlang node protocol
In-Reply-To: <476FFA05.6060308@free.fr>
References: <476FFA05.6060308@free.fr>
Message-ID: <6ce0ac130712252003i4b052465xd5046d61228a6ea3@mail.gmail.com>

Thomas,

This is absolutely fantastic!  We are currently using twisted for some
parallel/distributed computing stuff in Python.  While overall we are
very happy with twisted, we have begun looking into Erlang for certain
things and this could make a huge difference for us.  We wouldn't
actually begin work on this front for a while, but we will keep an eye
on how this develops.  Also if we go this direction we could likely
help with the effort.

Brian


On Dec 24, 2007 11:27 AM, Thomas Hervé <therve at free.fr> wrote:
> Hello people,
>
> I want to point out to a project I started in my Twisted sandbox to
> implement the Erlang node protocol:
> http://twistedmatrix.com/trac/browser/sandbox/therve/erlang. It's
> vaguely inspired from the py_interface project:
> http://www.lysator.liu.se/~tab/erlang/py_interface/.
>
> What's the content? It allows you to create a hidden Erlang node as a
> Twisted process, so that you can call methods on another Erlang node and
> receive calls (like you can do with C or Java with standard erlang
> distribution). It implements serialization and deserialization for most
> of the basic types, and both direction RPC. The benefit, of course, is
> to be able to get all Twisted protocols for free inside an Erlang
> program, or on the contrary to access Erlang power inside a Twisted
> server. I'm even writing a lit bit of documention:
> http://twistedmatrix.com/trac/browser/sandbox/therve/erlang.xhtml?format=raw.
>
> I started it hoping to use it for something serious, but I couldn't, so
> now the project is a bit stalled until someone really use it. I'd be
> glad if it could be useful for anyone, and I'm willing to help by
> debugging and adding features. You can contact me on the #twisted
> channel or on this ML.
>
> --
> Thomas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jarek.zgoda at sensisoft.com  Wed Dec 26 05:31:50 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Wed, 26 Dec 2007 13:31:50 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
Message-ID: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>

I'd like to add auto-discovery feature to my (Twisted) application and I 
thought I'll use zeroconf to advertize the service to clients in local 
network. I decided on zeroconf, because the app is a webservice that has to 
be accessible to multitude of various clients. Unfortunately, the only one 
library I found barely usable with Twisted is PyZeroconf (the other is 
avahi, but it seems too tightly bound to gobject to be usable with 
Twisted). Is this all or I do not know how to use google?

Anybody can share any hints on this? Is this feasible idea or there are 
better ways to achieve what I want?

Cheers
Jarek Zgoda




From therve at free.fr  Wed Dec 26 06:12:59 2007
From: therve at free.fr (=?ISO-8859-2?Q?Thomas_Herv=E9?=)
Date: Wed, 26 Dec 2007 14:12:59 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
Message-ID: <4772535B.9070801@free.fr>

Jarek Zgoda a écrit :
> I'd like to add auto-discovery feature to my (Twisted) application and I 
> thought I'll use zeroconf to advertize the service to clients in local 
> network. I decided on zeroconf, because the app is a webservice that has to 
> be accessible to multitude of various clients. Unfortunately, the only one 
> library I found barely usable with Twisted is PyZeroconf (the other is 
> avahi, but it seems too tightly bound to gobject to be usable with 
> Twisted). Is this all or I do not know how to use google?
>
> Anybody can share any hints on this? Is this feasible idea or there are 
> better ways to achieve what I want?
>   

A quick search of twisted and zeroconf should redirect you to some 
infos, especially to the mDNS implementation of itamar in its sandbox: 
http://twistedmatrix.com/trac/browser/sandbox/itamar/mdns. Nothing 
completly finished though, but contributions are welcome :).

I don't know avahi, but the fact it uses gobject may not be a problem if 
you use the gtk2reactor.

-- 
Thomas




From jarek.zgoda at sensisoft.com  Wed Dec 26 12:56:39 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Wed, 26 Dec 2007 20:56:39 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
	<4772535B.9070801@free.fr>
Message-ID: <63303eb6d58978ac4721fec4052bc39d.qmail@home.pl>

Thomas Hervé <therve at free.fr> napisał(a):

> A quick search of twisted and zeroconf should redirect you to some
> infos, especially to the mDNS implementation of itamar in its sandbox:
> http://twistedmatrix.com/trac/browser/sandbox/itamar/mdns. Nothing
> completly finished though, but contributions are welcome :).

Did not notice this one, thank you. From the quick view, it seems like the 
whole service publishing part is not yet implemented. I never wrote any 
line of code "Twisted style", maybe this will be my first time. ;)

> I don't know avahi, but the fact it uses gobject may not be a problem if
> you use the gtk2reactor.

Actually, this is a REST webservice built upon twisted.web. Registering 
service using avahi requires async DBus connection and, effectively, 
gobject main loop. This does not seem to be good choice for service that is 
supposed to serve hundreds of requests per minute...

Cheers
Jarek Zgoda




From exarkun at divmod.com  Wed Dec 26 20:58:03 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 26 Dec 2007 22:58:03 -0500
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
Message-ID: <20071227035803.8162.743849158.divmod.quotient.50054@ohm>

On Wed, 26 Dec 2007 13:31:50 +0100, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:
>I'd like to add auto-discovery feature to my (Twisted) application and I
>thought I'll use zeroconf to advertize the service to clients in local
>network. I decided on zeroconf, because the app is a webservice that has to
>be accessible to multitude of various clients. Unfortunately, the only one
>library I found barely usable with Twisted is PyZeroconf (the other is
>avahi, but it seems too tightly bound to gobject to be usable with
>Twisted). Is this all or I do not know how to use google?
>
>Anybody can share any hints on this? Is this feasible idea or there are
>better ways to achieve what I want?

There is only supposed to be one process on a system taking care of zeroconf
publications.  This means that it is more likely that you will want your app
to talk to some existing zeroconf software.  For example, on Linux, avahi.

This means that for most practical purposes, you don't actually want to talk
mdns.  You want to talk to avahi (or to something on OS X, or to something
on Windows).

This doesn't mean it wouldn't be cool to have a very Twisted-friendly zero-
conf library.  But it does mean that for practical purposes, that's usually
not what you want.

Jean-Paul



From jarek.zgoda at sensisoft.com  Thu Dec 27 01:22:56 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Thu, 27 Dec 2007 09:22:56 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <20071227035803.8162.743849158.divmod.quotient.50054@ohm>
References: <20071227035803.8162.743849158.divmod.quotient.50054@ohm>
Message-ID: <477360E0.3000404@sensisoft.com>

Jean-Paul Calderone napisał(a):

>> I'd like to add auto-discovery feature to my (Twisted) application and I
>> thought I'll use zeroconf to advertize the service to clients in local
>> network. I decided on zeroconf, because the app is a webservice that
>> has to
>> be accessible to multitude of various clients. Unfortunately, the only
>> one
>> library I found barely usable with Twisted is PyZeroconf (the other is
>> avahi, but it seems too tightly bound to gobject to be usable with
>> Twisted). Is this all or I do not know how to use google?
>>
>> Anybody can share any hints on this? Is this feasible idea or there are
>> better ways to achieve what I want?
> 
> There is only supposed to be one process on a system taking care of
> zeroconf
> publications.  This means that it is more likely that you will want your
> app
> to talk to some existing zeroconf software.  For example, on Linux, avahi.
> 
> This means that for most practical purposes, you don't actually want to
> talk
> mdns.  You want to talk to avahi (or to something on OS X, or to something
> on Windows).
> 
> This doesn't mean it wouldn't be cool to have a very Twisted-friendly zero-
> conf library.  But it does mean that for practical purposes, that's usually
> not what you want.

I do not want to run my own mDNS service, I just want to advertize
(publish) my webservice in running instance of mDNS. I think it would be
Avahi mDNS/SD in most cases, but I cann't be sure now.

The PyZeroconf library has many global state objects so I think it's not
well suited for any forking environment. Python-avahi looks far better,
but it requires gobject-based main loop to be used asynchronously (other
way it can not connect to DBus signals). Itamar's module (mentioned by
Thomas) seems to be perfect fit my needs if only I'd be able to
implement service publishing part (discovery and browsing works well,
after adapting the code to Twisted 2.5 layout). ;)

-- 
Jarek Zgoda
Skype: jzgoda | GTalk: zgoda at jabber.aster.pl | voice: +48228430101

"We read Knuth so you don't have to." (Tim Peters)



From buz at netbuz.org  Thu Dec 27 06:49:04 2007
From: buz at netbuz.org (Bastian Winkler)
Date: Thu, 27 Dec 2007 14:49:04 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <63303eb6d58978ac4721fec4052bc39d.qmail@home.pl>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
	<4772535B.9070801@free.fr>
	<63303eb6d58978ac4721fec4052bc39d.qmail@home.pl>
Message-ID: <20071227134904.GA22634@succubus.netbuz.org>

On Wed, Dec 26, 2007 at 08:56:39PM +0100, Jarek Zgoda wrote:
> > I don't know avahi, but the fact it uses gobject may not be a problem if
> > you use the gtk2reactor.
> 
> Actually, this is a REST webservice built upon twisted.web. Registering 
> service using avahi requires async DBus connection and, effectively, 
> gobject main loop. This does not seem to be good choice for service that is 
> supposed to serve hundreds of requests per minute...

I use avahi with the glib2reactor on a high traffic system and it works
pretty good for me.
The service is only registered once at startup, and service discovery is
done by simply connecting to DBus signal. Everything only with a few
lines of code :)

So long

:wq buz
-- 
There are two major products to come out of Berkeley: LSD and UNIX.
We don't believe this to be a coincidence.

GnuPG Fingerprint: 2FFF FC48 C7DF 1EA0 00A0  FD53 8C35 FD2E 6908 7B82
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20071227/1cdd2cb6/attachment.sig>

From exarkun at divmod.com  Thu Dec 27 07:18:15 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 27 Dec 2007 09:18:15 -0500
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <477360E0.3000404@sensisoft.com>
Message-ID: <20071227141815.8162.1712975259.divmod.quotient.50230@ohm>

On Thu, 27 Dec 2007 09:22:56 +0100, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:
>Jean-Paul Calderone napisał(a):
>>
>> This doesn't mean it wouldn't be cool to have a very Twisted-friendly zero-
>> conf library.  But it does mean that for practical purposes, that's usually
>> not what you want.
>
>I do not want to run my own mDNS service, I just want to advertize
>(publish) my webservice in running instance of mDNS.
>
>[snip]
>
>Itamar's module (mentioned by
>Thomas) seems to be perfect fit my needs if only I'd be able to
>implement service publishing part (discovery and browsing works well,
>after adapting the code to Twisted 2.5 layout). ;)
>

Itamar's module is for running your own mDNS service.

Jean-Paul



From jarek.zgoda at sensisoft.com  Thu Dec 27 07:33:46 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Thu, 27 Dec 2007 15:33:46 +0100
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <20071227141815.8162.1712975259.divmod.quotient.50230@ohm>
References: <20071227141815.8162.1712975259.divmod.quotient.50230@ohm>
Message-ID: <4773B7CA.4030905@sensisoft.com>

Jean-Paul Calderone napisał(a):

>>> This doesn't mean it wouldn't be cool to have a very Twisted-friendly
>>> zero-
>>> conf library.  But it does mean that for practical purposes, that's
>>> usually
>>> not what you want.
>>
>> I do not want to run my own mDNS service, I just want to advertize
>> (publish) my webservice in running instance of mDNS.
>>
>> [snip]
>>
>> Itamar's module (mentioned by
>> Thomas) seems to be perfect fit my needs if only I'd be able to
>> implement service publishing part (discovery and browsing works well,
>> after adapting the code to Twisted 2.5 layout). ;)
>>
> 
> Itamar's module is for running your own mDNS service.

If so, I am blind and lost.

-- 
Jarek Zgoda
Skype: jzgoda | GTalk: zgoda at jabber.aster.pl | voice: +48228430101

"We read Knuth so you don't have to." (Tim Peters)



From ellisonbg.net at gmail.com  Thu Dec 27 11:10:43 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Thu, 27 Dec 2007 11:10:43 -0700
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
Message-ID: <6ce0ac130712271010lc833aa4w208f9897030b1fc4@mail.gmail.com>

A while back I implemented a wrapper around pyzeroconf that integrated
it into the twisted event loop.  While we never did anything with
this, it seemed to work fine.  The design is not wonderful, but it
does show how everything can be done.  Here it is:

http://projects.scipy.org/ipython/ipython/browser/ipython/sandbox/bgranger/bonjour/twistbonjour.py

At some point we might end up using this - let us know if it is
helpful or worth putting somewhere more public.

Brian

On Dec 26, 2007 5:31 AM, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:
> I'd like to add auto-discovery feature to my (Twisted) application and I
> thought I'll use zeroconf to advertize the service to clients in local
> network. I decided on zeroconf, because the app is a webservice that has to
> be accessible to multitude of various clients. Unfortunately, the only one
> library I found barely usable with Twisted is PyZeroconf (the other is
> avahi, but it seems too tightly bound to gobject to be usable with
> Twisted). Is this all or I do not know how to use google?
>
> Anybody can share any hints on this? Is this feasible idea or there are
> better ways to achieve what I want?
>
> Cheers
> Jarek Zgoda
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From p.mayers at imperial.ac.uk  Thu Dec 27 10:37:56 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 27 Dec 2007 17:37:56 +0000
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <20071227035803.8162.743849158.divmod.quotient.50054@ohm>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
	<20071227035803.8162.743849158.divmod.quotient.50054@ohm>
Message-ID: <20071227173756.GA13972@wildfire.net.ic.ac.uk>

>
>There is only supposed to be one process on a system taking care of zeroconf
>publications.  This means that it is more likely that you will want your app
>to talk to some existing zeroconf software.  For example, on Linux, avahi.

Indeed.

For those situations where glib2reactor really won't work, you could 
write a simple, blocking non-threaded python helper process, and talk to 
it via a Twisted ProcessProtocol

This would be a very handy utility to have in TwistedCore




From jieryn at gmail.com  Fri Dec 28 17:57:46 2007
From: jieryn at gmail.com (jieryn at gmail.com)
Date: Fri, 28 Dec 2007 19:57:46 -0500
Subject: [Twisted-Python] new project using Twisted
Message-ID: <eab08af20712281657l4533ab15sde686eb3f796bf17@mail.gmail.com>

Greetings,

It would be great if you would link to the Sunklus project on your
ProjectsUsingTwisted page
(http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted). Sunklus is
an ad-hoc distribution file sharing daemon for Gentoo Linux. Find more
about it on our webpage, http://sunklus.googlecode.com.

Thanks for a great product!!
-jesse

-- 
There are 10 types of people in this world, those
that can read binary and those that can not.



From exarkun at twistedmatrix.com  Sat Dec 29 22:05:08 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 30 Dec 2007 05:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1198991108.19.1199368004@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071230/4f8698bf/attachment.html>

