From exarkun at twistedmatrix.com  Sun Feb  1 00:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Feb 2009 05:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1233464712.51.1949016221@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090201/c5e12008/attachment.htm 

From ishimoto at gembook.org  Mon Feb  2 05:48:50 2009
From: ishimoto at gembook.org (Atsuo Ishimoto)
Date: Mon, 2 Feb 2009 19:48:50 +0900
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from the
	client side?
In-Reply-To: <797440730901310118j2d423510pac4dc206ba51a1e4@mail.gmail.com>
References: <797440730901310118j2d423510pac4dc206ba51a1e4@mail.gmail.com>
Message-ID: <797440730902020248t30042234ob6b12b325804bdd4@mail.gmail.com>

Investigating further, I found this is not SSL related problem, but in
my code may have bug. In the following script, I expect that reactor
stops in 2 secs after it started, but connectionLost() is not fired at
all.

Is this a bug in Twisted? Or Am I missing something?


=========================================
from twisted.protocols import basic
from twisted.internet import protocol, reactor

serverfactory = protocol.Factory()
serverfactory.protocol = basic.LineOnlyReceiver
port = reactor.listenTCP(9084, serverfactory, interface='127.0.0.1')

CANCELED = False
class Client(basic.LineReceiver):
    def connectionMade(self):
        class dmyfile:
            def read(self, n):
                if CANCELED:
                    return
                else:
                    return '1'

        s = basic.FileSender()
        print "start sending"

        def f1(lastChunk):
            print "finished"

        def f2(reason):
            print "failed"
            print reason

        s.beginFileTransfer(
            dmyfile(), self.transport, None
        ).addCallbacks(f1, f2)

    def connectionLost(self, conn, reason=protocol.connectionDone):
        print "protocol:connectionlost"


class Factory(protocol.ClientFactory):
    protocol = Client

    def clientConnectionLost(self, conn, reason):
        print "clientConnectionLost"
        reactor.stop()

conn = reactor.connectTCP('127.0.0.1', 9084, Factory())

def cancel():
    print "cancel", conn.state
    global CANCELED
    CANCELED = True
    conn.disconnect()

reactor.callLater(2, cancel) # disconnect 2 sec later
reactor.run()



From exarkun at divmod.com  Mon Feb  2 08:18:42 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 2 Feb 2009 08:18:42 -0500
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from
	the client side?
In-Reply-To: <797440730902020248t30042234ob6b12b325804bdd4@mail.gmail.com>
Message-ID: <20090202131842.12853.2121882667.divmod.quotient.2216@henry.divmod.com>

On Mon, 2 Feb 2009 19:48:50 +0900, Atsuo Ishimoto <ishimoto at gembook.org> wrote:
>Investigating further, I found this is not SSL related problem, but in
>my code may have bug. In the following script, I expect that reactor
>stops in 2 secs after it started, but connectionLost() is not fired at
>all.
>
>Is this a bug in Twisted? Or Am I missing something?
>

This does look like a bug in Twisted.  Could you file a ticket for it?

In the mean time, you can work around this by using a simpler cancel
technique.  Get rid of the "conn.disconnect()" call in cancel and
instead call the protocol's transport's loseConnection method in f1
and f2 if CANCEL is set.

Jean-Paul



From johann.borck at densedata.com  Mon Feb  2 08:45:40 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Mon, 02 Feb 2009 14:45:40 +0100
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from
	the	client side?
In-Reply-To: <797440730902020248t30042234ob6b12b325804bdd4@mail.gmail.com>
References: <797440730901310118j2d423510pac4dc206ba51a1e4@mail.gmail.com>
	<797440730902020248t30042234ob6b12b325804bdd4@mail.gmail.com>
Message-ID: <4986F904.8000309@densedata.com>

Atsuo Ishimoto wrote:

...
> class Client(basic.LineReceiver):
>     def connectionMade(self):
>         class dmyfile:
>             def read(self, n):
>                 if CANCELED:
>                     return
>                 else:
>                     return '1'
>
>         s = basic.FileSender()
>         print "start sending"
>
>         def f1(lastChunk):
>             print "finished"
>
>   
...
> def cancel():
>     print "cancel", conn.state
>     global CANCELED
>     CANCELED = True
>     conn.disconnect()
>
>   
I think the problem is that you call conn.disconnect before the 
FileSender has a chance to call unregisterProducer on the transport (in 
real life before it has sent the whole file). If the producer is not 
unregistered, the doWrite() method called from the reactor doesn't even 
check if the connection is in 'disconnecting' state, assumes there's 
more data to come, and since no further events occur on the channel, the 
connection just remains open. You can check that by manually writing one 
more byte to the transport in f1, after FileSender has unregistered 
itself. The correct way is to call 
conn.disconnect()/transport.loseConnection() in f1 instead of in cancel.

from t.i.abstract.FileDescriptor.loseConnection.__doc__:
"... If you have a producer registered, the connection won't be closed 
until the producer is finished. Therefore, make sure you unregister your 
producer when it's finished, or the connection willnever close ..."

hth, Johann
> reactor.callLater(2, cancel) # disconnect 2 sec later
> reactor.run()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   




From exarkun at divmod.com  Mon Feb  2 09:35:31 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 2 Feb 2009 09:35:31 -0500
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from
	the	client side?
In-Reply-To: <4986F904.8000309@densedata.com>
Message-ID: <20090202143531.12853.926748917.divmod.quotient.2249@henry.divmod.com>

On Mon, 02 Feb 2009 14:45:40 +0100, Johann Borck <johann.borck at densedata.com> wrote:
>
>[snip]
>The correct way 
>is to call conn.disconnect()/transport.loseConnection() in f1 instead of in 
>cancel.

It's "correct" in that it works around the bug in Twisted.  However, this
*is* a bug in Twisted which should be fixed.  Then it will be just as
correct to do it one way as the other.

Jean-Paul



From ishimoto at gembook.org  Mon Feb  2 09:50:39 2009
From: ishimoto at gembook.org (Atsuo Ishimoto)
Date: Mon, 2 Feb 2009 23:50:39 +0900
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from the
	client side?
In-Reply-To: <20090202131842.12853.2121882667.divmod.quotient.2216@henry.divmod.com>
References: <797440730902020248t30042234ob6b12b325804bdd4@mail.gmail.com>
	<20090202131842.12853.2121882667.divmod.quotient.2216@henry.divmod.com>
Message-ID: <797440730902020650v2a1ba18fxb14b61c3c58a7656@mail.gmail.com>

> This does look like a bug in Twisted.  Could you file a ticket for it?

Done. #3644.

>
> In the mean time, you can work around this by using a simpler cancel
> technique.  Get rid of the "conn.disconnect()" call in cancel and
> instead call the protocol's transport's loseConnection method in f1
> and f2 if CANCEL is set.
>

Thank you for your comment, Jean-Paul , Johann. Now my application
working right!



From johann.borck at densedata.com  Mon Feb  2 10:15:16 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Mon, 02 Feb 2009 16:15:16 +0100
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from
	the	client side?
In-Reply-To: <20090202143531.12853.926748917.divmod.quotient.2249@henry.divmod.com>
References: <20090202143531.12853.926748917.divmod.quotient.2249@henry.divmod.com>
Message-ID: <49870E04.70506@densedata.com>

Jean-Paul Calderone wrote:
> On Mon, 02 Feb 2009 14:45:40 +0100, Johann Borck 
> <johann.borck at densedata.com> wrote:
>>
>> [snip]
>> The correct way is to call 
>> conn.disconnect()/transport.loseConnection() in f1 instead of in cancel.
>
> It's "correct" in that it works around the bug in Twisted.  However, this
> *is* a bug in Twisted which should be fixed.  Then it will be just as
> correct to do it one way as the other.
I personally find it counterintuitive to have an open connection after 
an explicit call to disconnect, but assumed it is intended behavior 
since it's explicitly mentioned in the docstring. However for the given 
example I'd still say the above is the only correct way unless Atsuo 
intends to break the connection before the transfer has finished.

Johann




From exarkun at divmod.com  Mon Feb  2 11:51:38 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 2 Feb 2009 11:51:38 -0500
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from
	the	client side?
In-Reply-To: <49870E04.70506@densedata.com>
Message-ID: <20090202165138.12853.167805191.divmod.quotient.2312@henry.divmod.com>

On Mon, 02 Feb 2009 16:15:16 +0100, Johann Borck <johann.borck at densedata.com> wrote:
>Jean-Paul Calderone wrote:
>>On Mon, 02 Feb 2009 14:45:40 +0100, Johann Borck 
>><johann.borck at densedata.com> wrote:
>>>
>>>[snip]
>>>The correct way is to call conn.disconnect()/transport.loseConnection() in 
>>>f1 instead of in cancel.
>>
>>It's "correct" in that it works around the bug in Twisted.  However, this
>>*is* a bug in Twisted which should be fixed.  Then it will be just as
>>correct to do it one way as the other.
>I personally find it counterintuitive to have an open connection after an 
>explicit call to disconnect, but assumed it is intended behavior since it's 
>explicitly mentioned in the docstring. However for the given example I'd 
>still say the above is the only correct way unless Atsuo intends to break 
>the connection before the transfer has finished.

Since that contradicts the documentation, I don't know why you'd say it.
Are you trying to make some point other than that you think the documented
behavior is bad?

Jean-Paul



From rayjohnterrill at gmail.com  Mon Feb  2 14:22:01 2009
From: rayjohnterrill at gmail.com (ray terrill)
Date: Mon, 2 Feb 2009 13:22:01 -0600
Subject: [Twisted-Python] Twisted Conch SSH timeout
Message-ID: <557a21f40902021122q29bec5a3jff6ffef60899343c@mail.gmail.com>

I've got a Twisted Conch/SSH script that I inherited which I'm using to run
commands remotely on some servers.  I'd like to add a timeout for servers
that are down, etc (the script currently hangs on these), but I'm not sure
where to add that functionality.

Any help would be appreciated.
Thanks,
-Ray

=========Script Follows=========

#!/usr/bin/python

from twisted.conch import error
from twisted.conch.ssh import transport, connection, keys, userauth,
channel, common
from twisted.internet import defer, protocol, reactor

#a class to store the data returned from the ssh client code
class SSHData():
   data = ''

class ClientCommandTransport(transport.SSHClientTransport):
   def __init__(self, username, password, command):
      self.username = username
      self.password = password
      self.command = command

   def verifyHostKey(self, pubKey, fingerprint):
      # in a real app, you should verify that the fingerprint matches
      # the one you expected to get from this server
      return defer.succeed(True)

   def connectionSecure(self):
      self.requestService(
         PasswordAuth(self.username, self.password,
            ClientConnection(self.command)))

class PasswordAuth(userauth.SSHUserAuthClient):
   def __init__(self, user, password, connection):
      userauth.SSHUserAuthClient.__init__(self, user, connection)
      self.password = password

   def getPassword(self, prompt=None):
      return defer.succeed(self.password)

class ClientConnection(connection.SSHConnection):
   def __init__(self, cmd, *args, **kwargs):
      connection.SSHConnection.__init__(self)
      self.command = cmd

   def serviceStarted(self):
      self.openChannel(CommandChannel(self.command, conn=self))

class CommandChannel(channel.SSHChannel):
   name = 'session'

   def __init__(self, command, *args, **kwargs):
      channel.SSHChannel.__init__(self, *args, **kwargs)
      self.command = command

   def channelOpen(self, data):
      self.conn.sendRequest(
         self, 'exec', common.NS(self.command), wantReply=True).addCallback(
         self._gotResponse)

   def _gotResponse(self, _):
      self.conn.sendEOF(self)

   def dataReceived(self, data):
      SSHData.data = data

   def closed(self):
      reactor.stop()

class ClientCommandFactory(protocol.ClientFactory):
   def __init__(self, username, password, command):
      self.username = username
      self.password = password
      self.command = command
      self.deferred = defer.Deferred()

   def buildProtocol(self, addr):
      protocol = ClientCommandTransport(
      self.username, self.password, self.command)
      return protocol

def testConnect(username, password, command, server):
   testFactory = ClientCommandFactory(username, password, command)
   reactor.connectTCP(server, 22, testFactory)
   return testFactory.deferred

def handleSuccess(result, port):
   print "Connected to port %i" % port
   reactor.stop()

def handleFailure(failure, port):
   print "Error connecting to port %i: %s" % (
      port, failure.getErrorMessage())
   reactor.stop()

if __name__ == "__main__":
   import sys, getpass

   server = sys.argv[1]
   command = sys.argv[2]
   username = raw_input("Username: ")
   password = getpass.getpass("Password: ")

   connecting = testConnect(username, password, command, server)
   #connecting.addCallback(handleSuccess, server)
   #connecting.addErrback(handleFailure, server)
   connecting.setTimeout(1, handleError)
   reactor.run()

   print "The data I got back from the ssh client is " + SSHData.data
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090202/bbde2fc8/attachment.htm 

From andrewfr_ice at yahoo.com  Mon Feb  2 17:47:47 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 2 Feb 2009 14:47:47 -0800 (PST)
Subject: [Twisted-Python] Maximum Recursion Depth Error with Twisted
	8.2/Stackless 2.6.1
Message-ID: <579294.777.qm@web34203.mail.mud.yahoo.com>

Hi Colleagues:

I recently updated to Stackless 2.6.1 and Twisted 8.2. I executed the following programme that works fine under Stackless 2.5.2 and Twisted (including 8.2) and I received the following error:

traceback (most recent call last):
          File "ToyProcessor5.py", line 60, in twistedReactor
            reactor.run()
          File "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
, line 1048, in run
            self.mainLoop()
        --- <exception caught here> ---
          File "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
, line 1057, in mainLoop
            self.runUntilCurrent()
          File "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
, line 707, in runUntilCurrent
            log.deferr()
          File "/usr/local/lib/python2.6/site-packages/twisted/python/log.py", l
ine 153, in err
            _stuff = failure.Failure()
          File "/usr/local/lib/python2.6/site-packages/twisted/python/failure.py
", line 265, in __init__
            parentCs = reflect.allYourBase(self.type)
", line 542, in allYourBase
            accumulateBases(classObj, l, baseClass)
          File "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py", line 550, in accumulateBases
            accumulateBases(base, l, baseClass)
          File "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py", line 550, in accumulateBases
            accumulateBases(base, l, baseClass)
          File "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py", line 550, in accumulateBases
            accumulateBases(base, l, baseClass)
          File "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py", line 550, in accumulateBases
            accumulateBases(base, l, baseClass)
        exceptions.RuntimeError: maximum recursion depth exceeded

Similarily written programmes fail in the same fashion. What is suspicious is that there is no recursion in the offending section. Even if I create one worker tasklet, I get the same error.

def twistedReactor():
    l = task.LoopingCall(stackless.schedule)
    l.start(.01)
    reactor.run()

however, if I change

l = task.LoopingCall(stackless.schedule)

to

l = task.LoopingCall(tick)

and tick is

def tick():
    stackless.schedule()

the programme works. Although a work around, I would like to find the real problem.

What particular worries me is when I created small test examples, I was not  able to recreate the problem. Something else is going on....

What I would appreciate is some hints as to what may be happening.  

- I normally don't expect "Maximum Recursion Depth" errors in Stackless. 
- What is the reflect.allYourBases stuff? 
- What is log.deferr? (I don't recall seeing that method).

If I get few clues, it would make it easier for me to write new tests and zero in on the problem. Hopefully the problem is with my code rather than Stackless 2.6.1 and/or Twisted 8.2

I have included some sample code. Unfortunately ToyProcessor5.py is a bit large (I have newer code that is smaller but requires more files)

Cheers,
Andrew












      
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ToyProcessor5.py
Type: text/x-python
Size: 13450 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090202/8ecf9fca/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Bad.py
Type: text/x-python
Size: 1486 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090202/8ecf9fca/attachment-0001.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Good.py
Type: text/x-python
Size: 1444 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090202/8ecf9fca/attachment-0002.py 

From paulswartz at gmail.com  Mon Feb  2 20:32:43 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Mon, 2 Feb 2009 20:32:43 -0500
Subject: [Twisted-Python] Twisted Conch SSH timeout
In-Reply-To: <557a21f40902021122q29bec5a3jff6ffef60899343c@mail.gmail.com>
References: <557a21f40902021122q29bec5a3jff6ffef60899343c@mail.gmail.com>
Message-ID: <324cfb540902021732y1736baeam45335382ca1e5f02@mail.gmail.com>

On Mon, Feb 2, 2009 at 2:22 PM, ray terrill <rayjohnterrill at gmail.com> wrote:
> I've got a Twisted Conch/SSH script that I inherited which I'm using to run
> commands remotely on some servers.  I'd like to add a timeout for servers
> that are down, etc (the script currently hangs on these), but I'm not sure
> where to add that functionality.

It's probably hanging because you're not handling connectionLost() in
the Channel or the Transport.  One of those should get called when the
connection stops (including via TCP timeout).

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin



From wthie at thiengineering.ch  Wed Feb  4 05:04:26 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 04 Feb 2009 11:04:26 +0100
Subject: [Twisted-Python] Traceback on loseConnection
In-Reply-To: <579294.777.qm@web34203.mail.mud.yahoo.com>
References: <579294.777.qm@web34203.mail.mud.yahoo.com>
Message-ID: <4989682A.3070100@thiengineering.ch>

Hi all

My users are complaining that they get the odd disconnect while using my 
  site built with nevow/athena on FreeBSD 7.1 with the poll reactor. I 
recently switched to twisted 8.2 release and am now observing 199 
'Unhandled Error' out of 298436 logged requests with the following 
traceback.

Any clues?

TIA, Werner

2009-02-04 05:21:29+0100 [ProxyClient,client] Unhandled Error
         Traceback (most recent call last):
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/application/app.py", 
line 348, in runReactorWithLogging
             reactor.run()
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/base.py", 
line 1148, in run
             self.mainLoop()
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/base.py", 
line 1160, in mainLoop
             self.doIteration(t)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/pollreactor.py", 
line 165, in doPoll
             log.callWithLogger(selectable, _drdw, selectable, fd, event)
         --- <exception caught here> ---
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/python/log.py", 
line 84, in callWithLogger
             return callWithContext({"system": lp}, func, *args, **kw)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/python/log.py", 
line 69, in callWithContext
             return context.call({ILogContext: newCtx}, func, *args, **kw)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/python/context.py", 
line 59, in callWithContext
             return self.currentContext().callWithContext(ctx, func, 
*args, **kw)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/python/context.py", 
line 37, in callWithContext
             return func(*args,**kw)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/pollreactor.py", 
line 189, in _doReadOrWrite
             self._disconnectSelectable(selectable, why, inRead)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/posixbase.py", 
line 194, in _disconnectSelectable
             selectable.connectionLost(failure.Failure(why))
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/tcp.py", 
line 676, in connectionLost
             Connection.connectionLost(self, reason)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/tcp.py", 
line 518, in connectionLost
             protocol.connectionLost(reason)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/web/http.py", 
line 426, in connectionLost
             self.handleResponseEnd()
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/web/proxy.py", 
line 79, in handleResponseEnd
             self.father.channel.transport.loseConnection()
         exceptions.AttributeError: 'NoneType' object has no attribute 
'transport'







From gabriel.rossetti at arimaz.com  Wed Feb  4 05:15:38 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 04 Feb 2009 11:15:38 +0100
Subject: [Twisted-Python] redefine signal handlers
Message-ID: <49896ACA.1090005@arimaz.com>

Hello everyone,

I would like to run some cleanup code when my Twisted app receives a 
signal (SIGINT/SIGBREAK/SIGTERM).

I saw that "_SignalReactorMixin" sets the handlers and that 
"ReactorBase" defines the default handlers :

     def sigInt(self, *args):
        """Handle a SIGINT interrupt.
        """
        log.msg("Received SIGINT, shutting down.")
        self.callFromThread(self.stop)

    def sigBreak(self, *args):
        """Handle a SIGBREAK interrupt.
        """
        log.msg("Received SIGBREAK, shutting down.")
        self.callFromThread(self.stop)

    def sigTerm(self, *args):
        """Handle a SIGTERM interrupt.
        """
        log.msg("Received SIGTERM, shutting down.")
        self.callFromThread(self.stop)

My question is how can I redefine them, other than monkey patching or 
inheriting the reactor and over-riding them (which I'd rather not do 
since some of my code uses the windows reactor when on windows since I 
was having problems with windows event)? Is there such a mechanism, 
something like setDefaultSig("SIGINT, mySigIntHandler)?

Thank you,
Gabriel




From reza at getpeer.com  Wed Feb  4 05:32:19 2009
From: reza at getpeer.com (Reza Lotun)
Date: Wed, 4 Feb 2009 10:32:19 +0000
Subject: [Twisted-Python] redefine signal handlers
In-Reply-To: <49896ACA.1090005@arimaz.com>
References: <49896ACA.1090005@arimaz.com>
Message-ID: <356e30830902040232y30bb0442s356f3a2514ac7ad1@mail.gmail.com>

Hi Gabriel,

On Wed, Feb 4, 2009 at 10:15 AM, Gabriel Rossetti
<gabriel.rossetti at arimaz.com> wrote:
> Hello everyone,
>
> I would like to run some cleanup code when my Twisted app receives a signal
> (SIGINT/SIGBREAK/SIGTERM).
>
> I saw that "_SignalReactorMixin" sets the handlers and that "ReactorBase"
> defines the default handlers : ...
> My question is how can I redefine them, other than monkey patching or
> inheriting the reactor and over-riding them (which I'd rather not do since
> some of my code uses the windows reactor when on windows since I was having
> problems with windows event)? Is there such a mechanism, something like
> setDefaultSig("SIGINT, mySigIntHandler)?

One easy way to do it is to reactor.run(installSignalHandlers=False)
and then manually install your own signal handlers in the usual way
(using the python signal library).

Cheers,
Reza


-- 
Reza Lotun
Senior Software Engineer
Peer Technologies Limited
reza at getpeer.com



From arie.lakeman at gmail.com  Wed Feb  4 08:35:59 2009
From: arie.lakeman at gmail.com (Arie Lakeman)
Date: Wed, 4 Feb 2009 13:35:59 +0000
Subject: [Twisted-Python] installation help
Message-ID: <6352c2fb0902040535p4f3bac06x8838a4a921f631e8@mail.gmail.com>

Hi,
I've taken an interest in event driven programming, I came across twisted
and liked the look of it, I've tried downloading the .dmg from
twistedmatrix/trac unfortunately after trying multiple installations
including direct installation to both the folder where python is found
(under system/frameworks...) and by changing the sys.path to another
directory I fail to be able to import twisted in the interactive prompt.  I
have a hunch I may be missing OpenSSL (occassional errors) but I don't know
enough about this (after googling) to be able to resolve this.

Essentially I'm interested in writing local event-driven code, whereby I
write specific objects that are capable of interaction in a more natural
manner than Python would permit by threading and classes, so I'm perfectly
happy with any solution that allows me to only locally program event-driven
code.

I would really appreciate any help whatsoever on how to resolve this
installation problem!

thanks,

Arie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090204/01259fa7/attachment.htm 

From andrewfr_ice at yahoo.com  Wed Feb  4 09:20:19 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 4 Feb 2009 06:20:19 -0800 (PST)
Subject: [Twisted-Python] RE: [Stackless] Maximum Recursion Depth Error with
	Twisted 8.2/Stackless 2.6.1
In-Reply-To: <930F189C8A437347B80DF2C156F7EC7F04DB227AD5@exchis.ccp.ad.local>
Message-ID: <109248.54007.qm@web34206.mail.mud.yahoo.com>

Hi Kristjan:

Thanks for the explanation and the effort. Tomorrow, I'll hunt down a few things on my end. If you find ToyProcessor5 too convoluted, I'll post the code for another prototype that should be easier to follow.

Cheers,
Andrew


--- On Tue, 2/3/09, Kristj?n Valur J?nsson <kristjan at ccpgames.com> wrote:

> From: Kristj?n Valur J?nsson <kristjan at ccpgames.com>
> Subject: RE: [Stackless] Maximum Recursion Depth Error with Twisted 8.2/Stackless 2.6.1
> To: "Andrew Francis" <andrewfr_ice at yahoo.com>, "twisted-python at twistedmatrix.com" <twisted-python at twistedmatrix.com>
> Cc: "stackless at stackless.com" <stackless at stackless.com>
> Date: Tuesday, February 3, 2009, 1:49 AM
> Stackless does stack copying if it senses that the C stack
> has grown to deep.  But it still tries to maintain the
> recursion depth limit set in "sys".  There is
> probably a bug somewhere in the bookkeeping of this.
> I'll try trawling through the code for the
> corresponding stuff If I find the time today.
> K
> 
> -----Original Message-----
> From: stackless-bounces at stackless.com
> [mailto:stackless-bounces at stackless.com] On Behalf Of Andrew
> Francis
> Sent: 2. febr?ar 2009 22:48
> To: twisted-python at twistedmatrix.com
> Cc: stackless at stackless.com
> Subject: [Stackless] Maximum Recursion Depth Error with
> Twisted 8.2/Stackless 2.6.1
> 
> Hi Colleagues:
> 
> I recently updated to Stackless 2.6.1 and Twisted 8.2. I
> executed the following programme that works fine under
> Stackless 2.5.2 and Twisted (including 8.2) and I received
> the following error:
> 
> traceback (most recent call last):
>           File "ToyProcessor5.py", line 60, in
> twistedReactor
>             reactor.run()
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
> , line 1048, in run
>             self.mainLoop()
>         --- <exception caught here> ---
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
> , line 1057, in mainLoop
>             self.runUntilCurrent()
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
> , line 707, in runUntilCurrent
>             log.deferr()
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/log.py",
> l ine 153, in err
>             _stuff = failure.Failure()
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/failure.py
> ", line 265, in __init__
>             parentCs = reflect.allYourBase(self.type)
> ", line 542, in allYourBase
>             accumulateBases(classObj, l, baseClass)
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py",
> line 550, in accumulateBases
>             accumulateBases(base, l, baseClass)
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py",
> line 550, in accumulateBases
>             accumulateBases(base, l, baseClass)
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py",
> line 550, in accumulateBases
>             accumulateBases(base, l, baseClass)
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py",
> line 550, in accumulateBases
>             accumulateBases(base, l, baseClass)
>         exceptions.RuntimeError: maximum recursion depth
> exceeded
> 
> Similarily written programmes fail in the same fashion.
> What is suspicious is that there is no recursion in the
> offending section. Even if I create one worker tasklet, I
> get the same error.
> 
> def twistedReactor():
>     l = task.LoopingCall(stackless.schedule)
>     l.start(.01)
>     reactor.run()
> 
> however, if I change
> 
> l = task.LoopingCall(stackless.schedule)
> 
> to
> 
> l = task.LoopingCall(tick)
> 
> and tick is
> 
> def tick():
>     stackless.schedule()
> 
> the programme works. Although a work around, I would like
> to find the real problem.
> 
> What particular worries me is when I created small test
> examples, I was not  able to recreate the problem. Something
> else is going on....
> 
> What I would appreciate is some hints as to what may be
> happening.  
> 
> - I normally don't expect "Maximum Recursion
> Depth" errors in Stackless. 
> - What is the reflect.allYourBases stuff? 
> - What is log.deferr? (I don't recall seeing that
> method).
> 
> If I get few clues, it would make it easier for me to write
> new tests and zero in on the problem. Hopefully the problem
> is with my code rather than Stackless 2.6.1 and/or Twisted
> 8.2
> 
> I have included some sample code. Unfortunately
> ToyProcessor5.py is a bit large (I have newer code that is
> smaller but requires more files)
> 
> Cheers,
> Andrew


      



From exarkun at divmod.com  Wed Feb  4 09:55:24 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 4 Feb 2009 09:55:24 -0500
Subject: [Twisted-Python] redefine signal handlers
In-Reply-To: <356e30830902040232y30bb0442s356f3a2514ac7ad1@mail.gmail.com>
Message-ID: <20090204145524.12853.84309023.divmod.quotient.3392@henry.divmod.com>

On Wed, 4 Feb 2009 10:32:19 +0000, Reza Lotun <reza at getpeer.com> wrote:
>Hi Gabriel,
>
>On Wed, Feb 4, 2009 at 10:15 AM, Gabriel Rossetti
><gabriel.rossetti at arimaz.com> wrote:
>> Hello everyone,
>>
>> I would like to run some cleanup code when my Twisted app receives a signal
>> (SIGINT/SIGBREAK/SIGTERM).
>>
>> I saw that "_SignalReactorMixin" sets the handlers and that "ReactorBase"
>> defines the default handlers : ...
>> My question is how can I redefine them, other than monkey patching or
>> inheriting the reactor and over-riding them (which I'd rather not do since
>> some of my code uses the windows reactor when on windows since I was having
>> problems with windows event)? Is there such a mechanism, something like
>> setDefaultSig("SIGINT, mySigIntHandler)?
>
>One easy way to do it is to reactor.run(installSignalHandlers=False)
>and then manually install your own signal handlers in the usual way
>(using the python signal library).

If you do this, you'll break spawnProcess.  Fortunately, if you just
install a SIGINT handler, Twisted won't stomp on it:

    exarkun at charm:~$ python
    Python 2.5.2 (r252:60911, Jul 31 2008, 17:28:52) 
    [GCC 4.2.3 (Ubuntu 4.2.3-2ubuntu7)] on linux2
    Type "help", "copyright", "credits" or "license" for more information.
    >>> def f(*a):
    ...     print 'sigint'
    ... 
    >>> import signal
    >>> signal.signal(signal.SIGINT, f)
    <built-in function default_int_handler>
    >>> from twisted.internet import reactor
    >>> reactor.run()
    sigint
    sigint
    sigint
    Quit
    exarkun at charm:~$ 

Jean-Paul



From exarkun at divmod.com  Wed Feb  4 09:56:48 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 4 Feb 2009 09:56:48 -0500
Subject: [Twisted-Python] installation help
In-Reply-To: <6352c2fb0902040535p4f3bac06x8838a4a921f631e8@mail.gmail.com>
Message-ID: <20090204145648.12853.1122602576.divmod.quotient.3393@henry.divmod.com>

On Wed, 4 Feb 2009 13:35:59 +0000, Arie Lakeman <arie.lakeman at gmail.com> wrote:
>Hi,
>I've taken an interest in event driven programming, I came across twisted
>and liked the look of it, I've tried downloading the .dmg from
>twistedmatrix/trac unfortunately after trying multiple installations
>including direct installation to both the folder where python is found
>(under system/frameworks...) and by changing the sys.path to another
>directory I fail to be able to import twisted in the interactive prompt.  I
>have a hunch I may be missing OpenSSL (occassional errors) but I don't know
>enough about this (after googling) to be able to resolve this.

I've never tried to install Twisted on OS X except by using setup.py to do
a single-user installation.  However, I'm pretty sure that if you provide
more details about how exactly the installation process fails you'll be
more likely to get someone else who does have a clue to help you out.

Be detailed in what steps you took and what the consequences were.  Where
there are errors, include them verbatim.

Jean-Paul



From exarkun at divmod.com  Wed Feb  4 09:59:12 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 4 Feb 2009 09:59:12 -0500
Subject: [Twisted-Python] Traceback on loseConnection
In-Reply-To: <4989682A.3070100@thiengineering.ch>
Message-ID: <20090204145912.12853.199041922.divmod.quotient.3395@henry.divmod.com>

On Wed, 04 Feb 2009 11:04:26 +0100, Werner Thie <wthie at thiengineering.ch> wrote:
>Hi all
>
>My users are complaining that they get the odd disconnect while using my 
>site built with nevow/athena on FreeBSD 7.1 with the poll reactor. I 
>recently switched to twisted 8.2 release and am now observing 199 'Unhandled 
>Error' out of 298436 logged requests with the following traceback.
>
>Any clues?
>
>TIA, Werner
>
> [snip]
>           File "/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128- 
>py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/web/proxy.py", line 79, in 
>handleResponseEnd
>             self.father.channel.transport.loseConnection()
>         exceptions.AttributeError: 'NoneType' object has no attribute 
>'transport'
>

Anywhere there are that many dots in a single expression, there's bound to
be trouble. :)

It's probably something rather simple, like the connection being lost near
when the response ends.  It's probably also pretty easy to fix (by being
more careful in how lost connections are handled).  If you can create a
short example which reproduces the problem, that'll go a long way towards
helping it get fixed.  I suggest instrumenting the codepath that sets the
"channel" attribute to None and watching to see what happens.

Jean-Paul



From gabriel.rossetti at arimaz.com  Wed Feb  4 11:19:43 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 04 Feb 2009 17:19:43 +0100
Subject: [Twisted-Python] redefine signal handlers
In-Reply-To: <20090204145524.12853.84309023.divmod.quotient.3392@henry.divmod.com>
References: <20090204145524.12853.84309023.divmod.quotient.3392@henry.divmod.com>
Message-ID: <4989C01F.5070308@arimaz.com>

Jean-Paul Calderone wrote:
> On Wed, 4 Feb 2009 10:32:19 +0000, Reza Lotun <reza at getpeer.com> wrote:
>> Hi Gabriel,
>>
>> On Wed, Feb 4, 2009 at 10:15 AM, Gabriel Rossetti
>> <gabriel.rossetti at arimaz.com> wrote:
>>> Hello everyone,
>>>
>>> I would like to run some cleanup code when my Twisted app receives a 
>>> signal
>>> (SIGINT/SIGBREAK/SIGTERM).
>>>
>>> I saw that "_SignalReactorMixin" sets the handlers and that 
>>> "ReactorBase"
>>> defines the default handlers : ...
>>> My question is how can I redefine them, other than monkey patching or
>>> inheriting the reactor and over-riding them (which I'd rather not do 
>>> since
>>> some of my code uses the windows reactor when on windows since I was 
>>> having
>>> problems with windows event)? Is there such a mechanism, something like
>>> setDefaultSig("SIGINT, mySigIntHandler)?
>>
>> One easy way to do it is to reactor.run(installSignalHandlers=False)
>> and then manually install your own signal handlers in the usual way
>> (using the python signal library).
>
> If you do this, you'll break spawnProcess.  Fortunately, if you just
> install a SIGINT handler, Twisted won't stomp on it:
>
>    exarkun at charm:~$ python
>    Python 2.5.2 (r252:60911, Jul 31 2008, 17:28:52)    [GCC 4.2.3 
> (Ubuntu 4.2.3-2ubuntu7)] on linux2
>    Type "help", "copyright", "credits" or "license" for more information.
>    >>> def f(*a):
>    ...     print 'sigint'
>    ...    >>> import signal
>    >>> signal.signal(signal.SIGINT, f)
>    <built-in function default_int_handler>
>    >>> from twisted.internet import reactor
>    >>> reactor.run()
>    sigint
>    sigint
>    sigint
>    Quit
>    exarkun at charm:~$
> Jean-Paul
>
Ok, this is what I have been doing, but I suspect that it is the reason 
that my reactor won't stop sometimes (when SIGINT is sent). It usually 
happens with code using threads or wxpython support. I was wondering if 
my redefining handlers wasn't messing things up somehow...

Gabriel



From rayjohnterrill at gmail.com  Wed Feb  4 11:49:44 2009
From: rayjohnterrill at gmail.com (ray terrill)
Date: Wed, 4 Feb 2009 10:49:44 -0600
Subject: [Twisted-Python] Twisted Conch SSH timeout
In-Reply-To: <324cfb540902021732y1736baeam45335382ca1e5f02@mail.gmail.com>
References: <557a21f40902021122q29bec5a3jff6ffef60899343c@mail.gmail.com>
	<324cfb540902021732y1736baeam45335382ca1e5f02@mail.gmail.com>
Message-ID: <557a21f40902040849u6c0ba6d4r61a954b8fa510f96@mail.gmail.com>

Could you give me an example of how handling the connectionLost() could be
accomplished?  I'm not sure where I need to integrate that into what I've
already got.

-Ray

On Mon, Feb 2, 2009 at 7:32 PM, Paul Swartz <paulswartz at gmail.com> wrote:

> On Mon, Feb 2, 2009 at 2:22 PM, ray terrill <rayjohnterrill at gmail.com>
> wrote:
> > I've got a Twisted Conch/SSH script that I inherited which I'm using to
> run
> > commands remotely on some servers.  I'd like to add a timeout for servers
> > that are down, etc (the script currently hangs on these), but I'm not
> sure
> > where to add that functionality.
>
> It's probably hanging because you're not handling connectionLost() in
> the Channel or the Transport.  One of those should get called when the
> connection stops (including via TCP timeout).
>
> -p
> --
> Paul Swartz
> paulswartz at gmail dot com
> http://paulswartz.net/
> AIM: z3penguin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090204/9119d281/attachment.htm 

From arie.lakeman at gmail.com  Wed Feb  4 13:03:30 2009
From: arie.lakeman at gmail.com (Arie Lakeman)
Date: Wed, 4 Feb 2009 18:03:30 +0000
Subject: [Twisted-Python] installation help
In-Reply-To: <20090204145648.12853.1122602576.divmod.quotient.3393@henry.divmod.com>
References: <6352c2fb0902040535p4f3bac06x8838a4a921f631e8@mail.gmail.com>
	<20090204145648.12853.1122602576.divmod.quotient.3393@henry.divmod.com>
Message-ID: <6352c2fb0902041003m6336ece7vb2946bc80992c337@mail.gmail.com>

Hi,
Firstly, I either use the built-in version of Idle on mac which is 2.5, or
I'm using ActivePython 2.6, I'm not familiar with binaries so to save time
this is what I used.  I then install the .dmg of twisted to a file I create
on my desktop, then go into sys.path and add /Users/username/Desktop, then
trying 'import twisted' I get the following error:

Traceback (most recent call last):
  File "<pyshell#3>", line 1, in <module>
    import twisted
  File "/Users/arielakeman/Desktop/twisted/__init__.py", line 11, in
<module>
    import rand, crypto, SSL, tsafe
ImportError: No module named OpenSSL.crypto

I looked for but could not find an install.py file, and reading the readme
which accompanies twisted under installation it simply says: 'see INSTALL'.
 I'm running Mac OS 10.5.6 and would massively appreciate any help getting
twisted working, be it binaries or dmg!

Thanks

Arie

On Wed, Feb 4, 2009 at 2:56 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Wed, 4 Feb 2009 13:35:59 +0000, Arie Lakeman <arie.lakeman at gmail.com>
> wrote:
>
>> Hi,
>> I've taken an interest in event driven programming, I came across twisted
>> and liked the look of it, I've tried downloading the .dmg from
>> twistedmatrix/trac unfortunately after trying multiple installations
>> including direct installation to both the folder where python is found
>> (under system/frameworks...) and by changing the sys.path to another
>> directory I fail to be able to import twisted in the interactive prompt.
>>  I
>> have a hunch I may be missing OpenSSL (occassional errors) but I don't
>> know
>> enough about this (after googling) to be able to resolve this.
>>
>
> I've never tried to install Twisted on OS X except by using setup.py to do
> a single-user installation.  However, I'm pretty sure that if you provide
> more details about how exactly the installation process fails you'll be
> more likely to get someone else who does have a clue to help you out.
>
> Be detailed in what steps you took and what the consequences were.  Where
> there are errors, include them verbatim.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090204/522a97a3/attachment.htm 

From matusis at yahoo.com  Wed Feb  4 19:37:04 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Wed, 4 Feb 2009 16:37:04 -0800
Subject: [Twisted-Python] most efficient new connection rate limiting?
Message-ID: <013001c98729$e18b4720$a4a1d560$@com>

We need to limit the new connection rate from a given IP, such that for
example 10.10.1.10 cannot connect more often than 10 times per minute.

This is a high-volume TCP Twisted server, with about 500 new distinct IP
connections per second in the normal state (and we run 8 of these on each 8
core server, so ~4000 new conns/sec per box).

I am trying to find the least CPU intensive approach for this.

1) Create an dictionary {ip1:count1, ip2: count2, .} in the server, and
check the counts for each incoming connection. 
Disconnect with transport.loseConnection() if the threshold for ip:count is
exceeded.
Reset this dictionary to empty dict {} every minute with reactor.callLater
timer.

2) Use some Twisted rate limiter API that I am not familiar with?

3) Use iptables rate-limiting module like so:
iptables -I INPUT -p tcp --dport 8888 -i eth0 -m state --state NEW -m recent
--set
iptables -I INPUT -p tcp --dport 8888 -i eth0 -m state --state NEW -m recent
--update --seconds 60 --hitcount 10 -j DROP

Which one of these approaches would you recommend?




From paulswartz at gmail.com  Wed Feb  4 22:50:20 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Wed, 4 Feb 2009 22:50:20 -0500
Subject: [Twisted-Python] Twisted Conch SSH timeout
In-Reply-To: <557a21f40902040849u6c0ba6d4r61a954b8fa510f96@mail.gmail.com>
References: <557a21f40902021122q29bec5a3jff6ffef60899343c@mail.gmail.com>
	<324cfb540902021732y1736baeam45335382ca1e5f02@mail.gmail.com>
	<557a21f40902040849u6c0ba6d4r61a954b8fa510f96@mail.gmail.com>
Message-ID: <324cfb540902041950v72b994a3u6e5154cad2c815e5@mail.gmail.com>

On Wed, Feb 4, 2009 at 11:49 AM, ray terrill <rayjohnterrill at gmail.com> wrote:
> Could you give me an example of how handling the connectionLost() could be
> accomplished?  I'm not sure where I need to integrate that into what I've
> already got.

For example:

class ClientCommandTransport(
transport.SSHClientTransport):
   def __init__(self, username, password, command):
      self.username = username
      self.password = password
      self.command = command

   def verifyHostKey(self, pubKey, fingerprint):
      # in a real app, you should verify that the fingerprint matches
      # the one you expected to get from this server
      return defer.succeed(True)

   def connectionSecure(self):
      self.requestService(
         PasswordAuth(self.username, self.password,
            ClientConnection(self.command)))

    def connectionLost(self, reason):
        print 'do something because the connection went away'

HTH,
-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin



From stephen at thorne.id.au  Thu Feb  5 02:25:08 2009
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 5 Feb 2009 17:25:08 +1000
Subject: [Twisted-Python] most efficient new connection rate limiting?
In-Reply-To: <013001c98729$e18b4720$a4a1d560$@com>
References: <013001c98729$e18b4720$a4a1d560$@com>
Message-ID: <20090205072508.GA27714@thorne.id.au>

On 2009-02-04, Alec Matusis wrote:
> 1) Create an dictionary {ip1:count1, ip2: count2, .} in the server, and
> check the counts for each incoming connection. 
> Disconnect with transport.loseConnection() if the threshold for ip:count is
> exceeded.
> Reset this dictionary to empty dict {} every minute with reactor.callLater
> timer.
> 
> 2) Use some Twisted rate limiter API that I am not familiar with?
> 
> 3) Use iptables rate-limiting module like so:
> iptables -I INPUT -p tcp --dport 8888 -i eth0 -m state --state NEW -m recent
> --set
> iptables -I INPUT -p tcp --dport 8888 -i eth0 -m state --state NEW -m recent
> --update --seconds 60 --hitcount 10 -j DROP

I would recommend approach (3) because approach (1) will do an accept()
of the connection and then drop it, giving the host on the other end a
syn/ack transaction followed by a closed connection, and then it will
probably attempt to reconnect immediately.

Whereas (3) relies on the tcp/ip stack of the connecting host to send a
bunch of syn packets until it gets through, or times out and follows its
timeout logic.

-- 
Regards,
Stephen Thorne
Development Engineer
NetBox Blue - 1300 737 060

NetBox Blue is proud to be a sponsor and exhibitor at IBM's Solutions 
Showcase 2009 events. These are held in Perth, Adelaide, Brisbane, Sydney and 
Melbourne in February and March. 
For more details and to register please visit: 
http://www.ibm.com/solutionsshowcase/au


Scanned by the NetBox from NetBox Blue
(http://netboxblue.com/)




From wthie at thiengineering.ch  Thu Feb  5 05:34:05 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Thu, 05 Feb 2009 11:34:05 +0100
Subject: [Twisted-Python] Traceback on loseConnection
In-Reply-To: <20090204145912.12853.199041922.divmod.quotient.3395@henry.divmod.com>
References: <20090204145912.12853.199041922.divmod.quotient.3395@henry.divmod.com>
Message-ID: <498AC09D.9000508@thiengineering.ch>

Hi Jean-Paul

Sorry for coming back...

Just to be a little more precise:

This is a nevow/athena site I therefore have little done in the bowels 
of twisted and specially no artwork in handling loseConnection.

Site running on twisted SVN 25479 (appr 8.1.0) shows absolutely no problems.

Site running on twisted SVN 26124 (appr 8.2.0) shows this problem, which 
definitely means that something in the guts of twisted is now barfing at me.

But its only about 700 SVN commits in between, I think I will do a SA 
approach to figure out where this barfing starts and try to nail it to 
the relevant commit.

I would be more than thankful if somebody could spare me this effort by 
throwing in an educated guess.

Thxs, Werner

PS I like the one about the dots, that's why I'm not working with Java



Jean-Paul Calderone wrote:
> On Wed, 04 Feb 2009 11:04:26 +0100, Werner Thie 
> <wthie at thiengineering.ch> wrote:
>> Hi all
>>
>> My users are complaining that they get the odd disconnect while using 
>> my site built with nevow/athena on FreeBSD 7.1 with the poll reactor. 
>> I recently switched to twisted 8.2 release and am now observing 199 
>> 'Unhandled Error' out of 298436 logged requests with the following 
>> traceback.
>>
>> Any clues?
>>
>> TIA, Werner
>>
>> [snip]
>>           File 
>> "/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128- 
>> py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/web/proxy.py", line 79, in 
>> handleResponseEnd
>>             self.father.channel.transport.loseConnection()
>>         exceptions.AttributeError: 'NoneType' object has no attribute 
>> 'transport'
>>
> 
> Anywhere there are that many dots in a single expression, there's bound to
> be trouble. :)
> 
> It's probably something rather simple, like the connection being lost near
> when the response ends.  It's probably also pretty easy to fix (by being
> more careful in how lost connections are handled).  If you can create a
> short example which reproduces the problem, that'll go a long way towards
> helping it get fixed.  I suggest instrumenting the codepath that sets the
> "channel" attribute to None and watching to see what happens.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at divmod.com  Thu Feb  5 08:17:09 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 5 Feb 2009 08:17:09 -0500
Subject: [Twisted-Python] Traceback on loseConnection
In-Reply-To: <498AC09D.9000508@thiengineering.ch>
Message-ID: <20090205131709.12853.1865389699.divmod.quotient.3844@henry.divmod.com>

On Thu, 05 Feb 2009 11:34:05 +0100, Werner Thie <wthie at thiengineering.ch> wrote:
>Hi Jean-Paul
>
>Sorry for coming back...
>
>Just to be a little more precise:
>
>This is a nevow/athena site I therefore have little done in the bowels of 
>twisted and specially no artwork in handling loseConnection.
>
>Site running on twisted SVN 25479 (appr 8.1.0) shows absolutely no problems.
>
>Site running on twisted SVN 26124 (appr 8.2.0) shows this problem, which 
>definitely means that something in the guts of twisted is now barfing at me.

There must be something else involved.  The error is coming from
twisted.web.proxy, but that code isn't used by a plain Nevow/Athena
app.  How is the proxy code getting involved?

Jean-Paul



From exarkun at divmod.com  Thu Feb  5 16:56:51 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 5 Feb 2009 16:56:51 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
Message-ID: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>

On Mon, 26 Jan 2009 18:10:32 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>Hello All,
>
>I'd like to organize another Twisted sprint in Cambridge, MA in February.
>As with previous sprints, this is an all day event, most likely hosted at
>the Divmod office in Porter Square, for Twisted hacking.  The two topics
>which have been raised thus far for this sprint are documentation - in
>particular, looking at Twisted documentation from a high-level and coming
>up with a coherent overall strategy for improving it - and deprecation
>(looking for old, bad APIs in Twisted which we should get rid of).  Of
>course, other topics are welcome as well.
>

The sprint will be held on February 22nd.  All are welcome.  If you need
details on how to get to the sprint, please contact me off-list.

Jean-Paul



From wthie at thiengineering.ch  Fri Feb  6 05:37:31 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Fri, 06 Feb 2009 11:37:31 +0100
Subject: [Twisted-Python] Traceback on loseConnection
In-Reply-To: <20090205131709.12853.1865389699.divmod.quotient.3844@henry.divmod.com>
References: <20090205131709.12853.1865389699.divmod.quotient.3844@henry.divmod.com>
Message-ID: <498C12EB.4080104@thiengineering.ch>

Hello Jean-Paul

> There must be something else involved.  The error is coming from
> twisted.web.proxy, but that code isn't used by a plain Nevow/Athena
> app.  How is the proxy code getting involved?

That remains a mistery to me, I'm certainly not doing any proxying in my 
source. The only thing I have is a redirect but this is via a fully 
qualified URI in case of my app going back to its root page which is a 
static page. In this particular case it's a util.Redirect().

Will have to try and build a test case how this pattern can be triggered.

Thanks for your help, Werner



From wthie at thiengineering.ch  Fri Feb  6 06:02:16 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Fri, 06 Feb 2009 12:02:16 +0100
Subject: [Twisted-Python] Bad file descriptor traceback when deamonnizing
 kqueue reactorwith twistd
In-Reply-To: <498C12EB.4080104@thiengineering.ch>
References: <20090205131709.12853.1865389699.divmod.quotient.3844@henry.divmod.com>
	<498C12EB.4080104@thiengineering.ch>
Message-ID: <498C18B8.8040407@thiengineering.ch>

Hi

When I run the following command (as root) on FreeBSD all is well with

twistd -rpoll -o ftp

I get a running ftp server process on port 2121.

Everything is also up and running (no daemonizing) after

twistd -rkqueue -no ftp

Not so with (daemonized)

twistd -rkqueue -o ftp

The process dies with the attached traceback in twisted.log

Shall I file a ticket for this?

Thanks, Werner

2009-02-06 11:45:01+0100 [-] Log opened.
2009-02-06 11:45:01+0100 [-] twistd 8.2.0 (/usr/local/bin/python 2.5.2) 
starting up.
2009-02-06 11:45:01+0100 [-] reactor class: 
twisted.internet.kqreactor.KQueueReactor.
2009-02-06 11:45:01+0100 [-] twisted.protocols.ftp.FTPFactory starting 
on 2121
2009-02-06 11:45:01+0100 [-] Starting factory 
<twisted.protocols.ftp.FTPFactory instance at 0x803d7ff38>
2009-02-06 11:45:01+0100 [-] Traceback (most recent call last):
2009-02-06 11:45:01+0100 [-]   File "/usr/local/bin/twistd", line 21, in 
<module>
2009-02-06 11:45:01+0100 [-]     run()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/scripts/twistd.py", line 
27, in run
2009-02-06 11:45:01+0100 [-]     app.run(runApp, ServerOptions)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/application/app.py", 
line 694, in run
2009-02-06 11:45:01+0100 [-]     runApp(config)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/scripts/twistd.py", line 
23, in runApp
2009-02-06 11:45:01+0100 [-]     _SomeApplicationRunner(config).run()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/application/app.py", 
line 423, in run
2009-02-06 11:45:01+0100 [-]     self.postApplication()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/scripts/_twistd_unix.py", 
line 206, in postApplication
2009-02-06 11:45:01+0100 [-]     self.startApplication(self.application)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/scripts/_twistd_unix.py", 
line 311, in startApplication
2009-02-06 11:45:01+0100 [-] 
service.IService(application).privilegedStartService()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/application/service.py", 
line 273, in privilegedStartService
2009-02-06 11:45:01+0100 [-]     service.privilegedStartService()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/application/internet.py", 
line 85, in privilegedStartService
2009-02-06 11:45:01+0100 [-]     self._port = self._getPort()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/application/internet.py", 
line 116, in _getPort
2009-02-06 11:45:01+0100 [-]     *self.args, **self.kwargs)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/posixbase.py", 
line 356, in listenTCP
2009-02-06 11:45:01+0100 [-]     p.startListening()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", line 
875, in startListening
2009-02-06 11:45:01+0100 [-]     self.startReading()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/abstract.py", 
line 262, in startReading
2009-02-06 11:45:01+0100 [-]     self.reactor.addReader(self)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/kqreactor.py", 
line 125, in addReader
2009-02-06 11:45:01+0100 [-]     self._updateRegistration(fd, 
EVFILT_READ, EV_ADD)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/kqreactor.py", 
line 116, in _updateRegistration
2009-02-06 11:45:01+0100 [-]     self._kq.kevent([kevent(*args)], 0, 0)
2009-02-06 11:45:01+0100 [-] OSError: [Errno 9] Bad file descriptor



From thebbzoo at gmail.com  Fri Feb  6 11:30:19 2009
From: thebbzoo at gmail.com (B. B.)
Date: Fri, 6 Feb 2009 17:30:19 +0100
Subject: [Twisted-Python] Perspective Broker and thread safe!
Message-ID: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>

Hello, I am relative new to twisted, though I have manage to make a simple
client server solution ( using perspective broker ) that I am now try to
refactor a little.

The solution is now something like :

Using perspective broker, clients connects to the server ( setting up a
remote reference to each other ).
Via a PB call, each client can request the server do some processing. The
result of  the processing is distributed to each connected client - and the
client asking for the request gets a simple status report!

This solution works quite well, the only bottleneck is that all the
"thread-safe" processing on the server is done in the mainloop of the server
reactor. I want to do concurrent processing on the server!

The function doing the processing on the server, also distribute the result
to all the connected clients, and returns the result to the klient asking
for the request.

My question is :
If I just "defer" that function "toThread" ( like  threads.deferToThread(
myServerProcessingFunction ) ). Do I have potential problems, when several
threads try to distribute its result to the connecting clients???


If I have a problem:
Can I make a quick fix as follows:  Within each thread ( started with the
threads.deferToThread function ), I do the distributing to the clients by
using the "reactor.callFromThread"
( like reactor.callFromThread( distributeToAllClient , myResult ) where the
function distributeToAllClient are using the remoteReference for each client
to send the "myResult" )


Or is the only solution, to let the myServerProcessingFunction returns the
"myResult" to be distributed to all connected clients, and do the
distribution in the reactor mainthread???


Thank you!


Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090206/5fd2a31a/attachment.htm 

From ellisonbg.net at gmail.com  Fri Feb  6 13:40:10 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 6 Feb 2009 18:40:10 +0000
Subject: [Twisted-Python] Problems with signalProcess on Windows
Message-ID: <6ce0ac130902061040q7c7d6105wf2af7da98bf2aa5f@mail.gmail.com>

Hi,

[take a deep breath and try to get over how much I dislike Windows]

So, I am using Twisted's external process capabilities in a
cross-platform setting.  Almost everything is working now in Windows.
But, when I try to stop the external program (using
signalProcess("INT")) that I starting using reactor.spawnProcess, I
get the following traceback:

            self.process_transport.signalProcess(sig)
          File "C:\Python25\lib\site-packages\twisted\internet\_dumbwin32proc.py
", line 247, in signalProcess
            win32process.TerminateProcess(self.hProcess, 1)
        pywintypes.error: (5, 'TerminateProcess', 'Access is denied.')

The odd thing is that the process stops just fine.  That is, it tells
me that it has received SIGINT and is shutting down.

Any thoughts on why this would happen?  I have no idea where to even
begin looking.

Thanks in advanced.

Cheers,

Brian



From exarkun at divmod.com  Fri Feb  6 14:04:02 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 6 Feb 2009 14:04:02 -0500
Subject: [Twisted-Python] Problems with signalProcess on Windows
In-Reply-To: <6ce0ac130902061040q7c7d6105wf2af7da98bf2aa5f@mail.gmail.com>
Message-ID: <20090206190402.12853.1156642581.divmod.quotient.5103@henry.divmod.com>

On Fri, 6 Feb 2009 18:40:10 +0000, Brian Granger <ellisonbg.net at gmail.com> wrote:
>Hi,
>
>[take a deep breath and try to get over how much I dislike Windows]
>
>So, I am using Twisted's external process capabilities in a
>cross-platform setting.  Almost everything is working now in Windows.
>But, when I try to stop the external program (using
>signalProcess("INT")) that I starting using reactor.spawnProcess, I
>get the following traceback:
>
>            self.process_transport.signalProcess(sig)
>          File "C:\Python25\lib\site-packages\twisted\internet\_dumbwin32proc.py
>", line 247, in signalProcess
>            win32process.TerminateProcess(self.hProcess, 1)
>        pywintypes.error: (5, 'TerminateProcess', 'Access is denied.')
>
>The odd thing is that the process stops just fine.  That is, it tells
>me that it has received SIGINT and is shutting down.
>
>Any thoughts on why this would happen?  I have no idea where to even
>begin looking.
>
>Thanks in advanced.

I think this is a long standing problem with Twisted's support of processes
on Windows.  I thought there was a ticket for this, but it seems the closest
thing I can find is <http://twistedmatrix.com/trac/ticket/2726>, the scope
of which is a bit broader than just making signalProcess work.

It has been suggested that it is necessary to first OpenProcess to get a
handle to pass to TerminateProcess.  The only reason this hasn't been
implemented is lack of interest (and, as you alluded, the unpleasantness
of doing anything related to Windows).

Jean-Paul



From ellisonbg.net at gmail.com  Fri Feb  6 14:07:58 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 6 Feb 2009 19:07:58 +0000
Subject: [Twisted-Python] Re: Problems with signalProcess on Windows
In-Reply-To: <6ce0ac130902061040q7c7d6105wf2af7da98bf2aa5f@mail.gmail.com>
References: <6ce0ac130902061040q7c7d6105wf2af7da98bf2aa5f@mail.gmail.com>
Message-ID: <6ce0ac130902061107r62a1f6baw49e9ed07c2885b11@mail.gmail.com>

OK, it looks like I solved this.  My external program is a python
program.  I was starting it without the "-u" flag to Python, which
turns on unbuffered output.  Adding the "-u" flag made the error go
away.

I found this tip in the docstrings of the _dumbwin32proc.py Twisted module.

Whoever put that note there, thanks!!!

Cheers,

Brian



> [take a deep breath and try to get over how much I dislike Windows]
>
> So, I am using Twisted's external process capabilities in a
> cross-platform setting.  Almost everything is working now in Windows.
> But, when I try to stop the external program (using
> signalProcess("INT")) that I starting using reactor.spawnProcess, I
> get the following traceback:
>
>            self.process_transport.signalProcess(sig)
>          File "C:\Python25\lib\site-packages\twisted\internet\_dumbwin32proc.py
> ", line 247, in signalProcess
>            win32process.TerminateProcess(self.hProcess, 1)
>        pywintypes.error: (5, 'TerminateProcess', 'Access is denied.')
>
> The odd thing is that the process stops just fine.  That is, it tells
> me that it has received SIGINT and is shutting down.
>
> Any thoughts on why this would happen?  I have no idea where to even
> begin looking.
>
> Thanks in advanced.
>
> Cheers,
>
> Brian
>



From exarkun at divmod.com  Fri Feb  6 14:29:51 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 6 Feb 2009 14:29:51 -0500
Subject: [Twisted-Python] Perspective Broker and thread safe!
In-Reply-To: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>
Message-ID: <20090206192951.12853.983604487.divmod.quotient.5113@henry.divmod.com>

On Fri, 6 Feb 2009 17:30:19 +0100, "B. B." <thebbzoo at gmail.com> wrote:
>Hello, I am relative new to twisted, though I have manage to make a simple
>client server solution ( using perspective broker ) that I am now try to
>refactor a little.
>
>The solution is now something like :
>
>Using perspective broker, clients connects to the server ( setting up a
>remote reference to each other ).
>Via a PB call, each client can request the server do some processing. The
>result of  the processing is distributed to each connected client - and the
>client asking for the request gets a simple status report!
>
>This solution works quite well, the only bottleneck is that all the
>"thread-safe" processing on the server is done in the mainloop of the server
>reactor. I want to do concurrent processing on the server!

That requires that your server be capable of doing the processing
concurrently.  If the processing is CPU bound, then you need multiple
CPUs.  If it is disk I/O bound, you need multiple disks.  etc.

>The function doing the processing on the server, also distribute the result
>to all the connected clients, and returns the result to the klient asking
>for the request.
>
>My question is :
>If I just "defer" that function "toThread" ( like  threads.deferToThread(
>myServerProcessingFunction ) ). Do I have potential problems, when several
>threads try to distribute its result to the connecting clients???

If you use deferToThread with your "processing" function, then the function
must be thread-safe.  Since nearly no Twisted APIs are thread-safe, it cannot
use them directly.  It may only use reactor.callFromThread to send events
back to the reactor thread.  So, in general, yes, the potential for problems
exists.

>
>If I have a problem:
>Can I make a quick fix as follows:  Within each thread ( started with the
>threads.deferToThread function ), I do the distributing to the clients by
>using the "reactor.callFromThread"
>( like reactor.callFromThread( distributeToAllClient , myResult ) where the
>function distributeToAllClient are using the remoteReference for each client
>to send the "myResult" )

This may work.

>Or is the only solution, to let the myServerProcessingFunction returns the
>"myResult" to be distributed to all connected clients, and do the
>distribution in the reactor mainthread???

There are always lots of possible solutions.  Since you are particularly
interested in performance, it will probably be necessary for you to create
a way to measure how well your application is performing and then repeat
these measurements using different implementation techniques.  That is the
only way you'll know which one is best.

Jean-Paul



From general at eepatents.com  Fri Feb  6 21:54:59 2009
From: general at eepatents.com (Ed Suominen)
Date: Fri, 06 Feb 2009 18:54:59 -0800
Subject: [Twisted-Python] Perspective Broker and thread safe!
In-Reply-To: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>
References: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>
Message-ID: <498CF803.1040700@eepatents.com>

This sort of thing is exactly what I wrote AsynCluster to do. See 
http://foss.eepatents.com/AsynCluster.

Best regards, Ed

B. B. wrote:
> Hello, I am relative new to twisted, though I have manage to make a 
> simple client server solution ( using perspective broker ) that I am now 
> try to refactor a little.
> 
> The solution is now something like :
> 
> Using perspective broker, clients connects to the server ( setting up a 
> remote reference to each other ).
> Via a PB call, each client can request the server do some processing. 
> The result of  the processing is distributed to each connected client - 
> and the client asking for the request gets a simple status report!
> 
> This solution works quite well, the only bottleneck is that all the 
> "thread-safe" processing on the server is done in the mainloop of the 
> server reactor. I want to do concurrent processing on the server!
> 
> The function doing the processing on the server, also distribute the 
> result to all the connected clients, and returns the result to the 
> klient asking for the request.
> 
> My question is : 
> If I just "defer" that function "toThread" ( like  
> threads.deferToThread( myServerProcessingFunction ) ). Do I have 
> potential problems, when several threads try to distribute its result to 
> the connecting clients??? 
> 
> 
> If I have a problem:
> Can I make a quick fix as follows:  Within each thread ( started with 
> the threads.deferToThread function ), I do the distributing to the 
> clients by using the "reactor.callFromThread"
> ( like reactor.callFromThread( distributeToAllClient , myResult ) where 
> the function distributeToAllClient are using the remoteReference for 
> each client to send the "myResult" )
> 
> 
> Or is the only solution, to let the myServerProcessingFunction returns 
> the "myResult" to be distributed to all connected clients, and do the 
> distribution in the reactor mainthread???
> 
> 
> Thank you!
> 
> 
> Brian
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 



From thebbzoo at gmail.com  Sat Feb  7 06:47:31 2009
From: thebbzoo at gmail.com (B. B.)
Date: Sat, 7 Feb 2009 12:47:31 +0100
Subject: [Twisted-Python] Perspective Broker and thread safe!
In-Reply-To: <20090206192951.12853.983604487.divmod.quotient.5113@henry.divmod.com>
References: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>
	<20090206192951.12853.983604487.divmod.quotient.5113@henry.divmod.com>
Message-ID: <fb67087a0902070347y25a9d617oa75b96711fe2ad9f@mail.gmail.com>

Thank you very much for you answer. Maybe the twisted details removed my
focus from the "big picture".
I have one followup question, added next to its context below..

On Fri, Feb 6, 2009 at 8:29 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Fri, 6 Feb 2009 17:30:19 +0100, "B. B." <thebbzoo at gmail.com> wrote:
>
>> Hello, I am relative new to twisted, though I have manage to make a simple
>> client server solution ( using perspective broker ) that I am now try to
>> refactor a little.
>>
>> The solution is now something like :
>>
>> Using perspective broker, clients connects to the server ( setting up a
>> remote reference to each other ).
>> Via a PB call, each client can request the server do some processing. The
>> result of  the processing is distributed to each connected client - and
>> the
>> client asking for the request gets a simple status report!
>>
>> This solution works quite well, the only bottleneck is that all the
>> "thread-safe" processing on the server is done in the mainloop of the
>> server
>> reactor. I want to do concurrent processing on the server!
>>
>
> That requires that your server be capable of doing the processing
> concurrently.  If the processing is CPU bound, then you need multiple
> CPUs.  If it is disk I/O bound, you need multiple disks.  etc.


Actually I use a quadcore processor and there is only a litte diskusage. But
thanks to your reply, I am thinking on the famous "Global Interpreter Lock"
in python.
Since allmost all processing is happing in pure python, does'nt the GIL
prevent me to obtain any remarkable performance gain by doing concurrent
processing in pure python???
( At least as long as I only use one process for the threads )

>
>
>  The function doing the processing on the server, also distribute the
>> result
>> to all the connected clients, and returns the result to the klient asking
>> for the request.
>>
>> My question is :
>> If I just "defer" that function "toThread" ( like  threads.deferToThread(
>> myServerProcessingFunction ) ). Do I have potential problems, when several
>> threads try to distribute its result to the connecting clients???
>>
>
> If you use deferToThread with your "processing" function, then the function
> must be thread-safe.  Since nearly no Twisted APIs are thread-safe, it
> cannot
> use them directly.  It may only use reactor.callFromThread to send events
> back to the reactor thread.  So, in general, yes, the potential for
> problems
> exists.
>
>
>> If I have a problem:
>> Can I make a quick fix as follows:  Within each thread ( started with the
>> threads.deferToThread function ), I do the distributing to the clients by
>> using the "reactor.callFromThread"
>> ( like reactor.callFromThread( distributeToAllClient , myResult ) where
>> the
>> function distributeToAllClient are using the remoteReference for each
>> client
>> to send the "myResult" )
>>
>
> This may work.
>
>  Or is the only solution, to let the myServerProcessingFunction returns the
>> "myResult" to be distributed to all connected clients, and do the
>> distribution in the reactor mainthread???
>>
>
> There are always lots of possible solutions.  Since you are particularly
> interested in performance, it will probably be necessary for you to create
> a way to measure how well your application is performing and then repeat
> these measurements using different implementation techniques.  That is the
> only way you'll know which one is best.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090207/f7949542/attachment.htm 

From thebbzoo at gmail.com  Sat Feb  7 07:03:42 2009
From: thebbzoo at gmail.com (B. B.)
Date: Sat, 7 Feb 2009 13:03:42 +0100
Subject: [Twisted-Python] Perspective Broker and thread safe!
In-Reply-To: <498CF803.1040700@eepatents.com>
References: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>
	<498CF803.1040700@eepatents.com>
Message-ID: <fb67087a0902070403w72459ebet4c22d1b9a4f260ea@mail.gmail.com>

Thank you for noticing. I gave it a short look, long enough to know I will
look more closely later! :-)

BR.

Brian...

On Sat, Feb 7, 2009 at 3:54 AM, Ed Suominen <general at eepatents.com> wrote:

> This sort of thing is exactly what I wrote AsynCluster to do. See
> http://foss.eepatents.com/AsynCluster.
>
> Best regards, Ed
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090207/2a922585/attachment.htm 

From exarkun at twistedmatrix.com  Sun Feb  8 00:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Feb 2009 05:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1234069513.02.438451038@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090208/a5734788/attachment.htm 

From ioscas at gmail.com  Tue Feb 10 22:43:07 2009
From: ioscas at gmail.com (=?GB2312?B?wfjvxw==?=)
Date: Wed, 11 Feb 2009 11:43:07 +0800
Subject: [Twisted-Python] need help for twisted FTPClient
Message-ID: <b486cc990902101943h4c1790c8m58c1f9caa8cab74d@mail.gmail.com>

hello, everyone:

    I'm new to twisted and ftp protocol. for some purpose, i need a python
ftp client to do list, get, put, remove operations upon a FTP server which
is implemented with twisted.
    here is my codes, testing for 'get' passed, but 'put' failed. i checked
the api of storeFile, abd got these:

'''
 *def storeFile(self, path, offset=0): **(source)
*<http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/protocols/ftp.py#L2389>
**
*Store a file at the given path.*
 *This method issues the 'STOR' FTP command. *  *Returns* *A tuple of two **
Deferred*<http://twistedmatrix.com/documents/current/api/twisted.internet.defer.Deferred.html>
*s: *

   - *Deferred*<http://twistedmatrix.com/documents/current/api/twisted.internet.defer.Deferred.html>
   * **IFinishableConsumer*<http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IFinishableConsumer.html>
   *. You must call the finish method on the IFinishableConsumer when the
   file is completely transferred. *
   - *Deferred*<http://twistedmatrix.com/documents/current/api/twisted.internet.defer.Deferred.html>
   * list of control-connection responses. *

'''
 but i don't know how to handle it, :)
 sorry for the rubbish codes, but i really need help from you guys, it's
hard to find some useful info from twisted official doc,
 Any suggestion on how to write a nice ftp client with twisted is welcome.
 Thanks in advance.

IOSCAS

______________________________________________________________________________

from twisted.protocols.ftp import FTPClient, FTPFileListProtocol
from twisted.internet.protocol import Protocol, ClientCreator
from twisted.python import usage
from twisted.internet import reactor, defer

class SaveFile(Protocol):
    '''
    save the ftp file to local filesystem
    '''
    def __init__(self, output):
        self.fout = open(output, 'w')

    def dataReceived(self, data):
        self.fout.write(data)
        self.fout.close()

class FTP:
    '''
    a simple ftp client
    '''
    def __init__(self, host, port):
        '''
        init
        '''
        self.__host = host
        self.__port = port
        self.__username = 'aaa'
        self.__passwd = 'bbb'
        self.__passive = 1

    def __get(self, ftp_client, src, des):
        '''
        '''
        save_file = SaveFile(des)
        d = ftp_client.retrieveFile(src, save_file)
        d = ftp_client.quit()
        d.addCallback(lambda result: reactor.stop())
        return d

    def get(self, src, des):
        '''
        get src file from ftp server, store it in des
        '''
        creator = ClientCreator(reactor, FTPClient, self.__username,
self.__passwd, self.__passive)
        defer = creator.connectTCP(self.__host,
self.__port).addCallback(self.__get, src, des)
        reactor.run()
        return defer.result

    def __put(self, ftp_client, src, des):
        '''
        '''
        source_file = os.path.basename(src)
        target_dir = os.path.dirname(des)
        ftp_client.changeDirectory(target_dir)
        d = ftp_client.storeFile(src)
        d = ftp_client.quit()
        d.addCallback(lambda result: reactor.stop())
        return d

   def put(self, src, des):
        '''
        put src file to ftp server, store it in des
        '''
        creator = ClientCreator(reactor, FTPClient, self.__username,
self.__passwd, self.__passive)
        defer = creator.connectTCP(self.__host,
self.__port).addCallback(self.__put, src, des)
        reactor.run()
        return defer.result
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090211/8d0403f9/attachment.htm 

From george at ringdevelopment.com  Wed Feb 11 08:54:44 2009
From: george at ringdevelopment.com (George Pauly)
Date: Wed, 11 Feb 2009 08:54:44 -0500
Subject: [Twisted-Python] need help for twisted FTPClient
In-Reply-To: <b486cc990902101943h4c1790c8m58c1f9caa8cab74d@mail.gmail.com>
References: <b486cc990902101943h4c1790c8m58c1f9caa8cab74d@mail.gmail.com>
Message-ID: <1234360484.10480.83.camel@localhost.localdomain>

Ioscas,

I don't know much about FTP, but your code doesn't look much like the
example
(http://twistedmatrix.com/projects/core/documentation/examples/) .

This page wasn't hard for me to find.  I used "ftp twisted example" in
search.yahoo.com.

-George



On Wed, 2009-02-11 at 11:43 +0800, ?? wrote:
> hello, everyone:
>  
>     I'm new to twisted and ftp protocol. for some purpose, i need a
> python ftp client to do list, get, put, remove operations upon a FTP
> server which is implemented with twisted. 
>     here is my codes, testing for 'get' passed, but 'put' failed. i
> checked the api of storeFile, abd got these:
>  
> '''
> def storeFile(self, path, offset=0): (source) 
>  
> Store a file at the given path.
> This method issues the 'STOR' FTP command. 
> Returns
> A tuple of two Deferreds: 
>       * Deferred
>         IFinishableConsumer. You
>         must call the finish method
>         on the IFinishableConsumer
>         when the file is completely
>         transferred. 
>       * Deferred list of
>         control-connection
>         responses. 
> '''
>  but i don't know how to handle it, :)
>  sorry for the rubbish codes, but i really need help from you guys,
> it's hard to find some useful info from twisted official doc,
>  Any suggestion on how to write a nice ftp client with twisted is
> welcome. 
>  Thanks in advance. 
>  
> IOSCAS
>  
> ______________________________________________________________________________
>  
> from twisted.protocols.ftp import FTPClient, FTPFileListProtocol
> from twisted.internet.protocol import Protocol, ClientCreator
> from twisted.python import usage
> from twisted.internet import reactor, defer
>  
> class SaveFile(Protocol):
>     '''
>     save the ftp file to local filesystem
>     '''
>     def __init__(self, output):
>         self.fout = open(output, 'w')
>         
>     def dataReceived(self, data):
>         self.fout.write(data)
>         self.fout.close()
>  
> class FTP:
>     '''
>     a simple ftp client
>     '''
>     def __init__(self, host, port):
>         ''' 
>         init 
>         '''
>         self.__host = host
>         self.__port = port
>         self.__username = 'aaa'
>         self.__passwd = 'bbb'
>         self.__passive = 1
>  
>     def __get(self, ftp_client, src, des):
>         '''
>         '''
>         save_file = SaveFile(des)
>         d = ftp_client.retrieveFile(src, save_file)
>         d = ftp_client.quit()
>         d.addCallback(lambda result: reactor.stop())
>         return d
>    
>     def get(self, src, des):
>         '''
>         get src file from ftp server, store it in des
>         '''
>         creator = ClientCreator(reactor, FTPClient, self.__username,
> self.__passwd, self.__passive)
>         defer = creator.connectTCP(self.__host,
> self.__port).addCallback(self.__get, src, des)
>         reactor.run()
>         return defer.result 
>  
>     def __put(self, ftp_client, src, des):
>         '''
>         '''
>         source_file = os.path.basename(src)
>         target_dir = os.path.dirname(des)
>         ftp_client.changeDirectory(target_dir)
>         d = ftp_client.storeFile(src)
>         d = ftp_client.quit()
>         d.addCallback(lambda result: reactor.stop())
>         return d
>    
>    def put(self, src, des):
>         '''
>         put src file to ftp server, store it in des
>         '''
>         creator = ClientCreator(reactor, FTPClient, self.__username,
> self.__passwd, self.__passive)
>         defer = creator.connectTCP(self.__host,
> self.__port).addCallback(self.__put, src, des)
>         reactor.run()
>         return defer.result
>  
>  
>  
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From junk at themilkyway.com  Wed Feb 11 10:30:53 2009
From: junk at themilkyway.com (Jonathan Marshall)
Date: Wed, 11 Feb 2009 15:30:53 +0000
Subject: [Twisted-Python] Bad signature using conch ssh
Message-ID: <BB63650B-7399-4200-B189-539076CA90DD@themilkyway.com>

I'm receiving 'Bad signature' when trying to connect to an SSH server,  
however I'm able to connect OK using OpenSSH. I'm hoping that somebody  
here can help me get to the bottom of this!

Using twisted:
$ python -m twisted.conch.scripts.conch -v xxx
[-] Log opened.
[-] Starting factory <twisted.conch.client.unix.SSHUnixClientFactory  
instance at 0x707a30>
[-] Stopping factory <twisted.conch.client.unix.SSHUnixClientFactory  
instance at 0x707a30>
[-] Starting factory <twisted.conch.client.direct.SSHClientFactory  
instance at 0x707a58>
[SSHClientTransport,client] kex alg, key alg: diffie-hellman-group- 
exchange-sha1 ssh-rsa
[SSHClientTransport,client] outgoing: aes256-cbc hmac-sha1 none
[SSHClientTransport,client] incoming: aes256-cbc hmac-sha1 none
[SSHClientTransport,client] Disconnecting with error, code 3
	reason: bad signature
[SSHClientTransport,client] connection lost
[SSHClientTransport,client] Stopping factory  
<twisted.conch.client.direct.SSHClientFactory instance at 0x707a58>
[-] Main loop terminated.
Connection to xxx closed.
conch: exiting with error [Failure instance: Traceback (failure with  
no frames): <class 'twisted.conch.error.ConchError'>: ('bad  
signature', 3)



Using ssh (some lines removed for brevity):
$ ssh -vvv xxx
OpenSSH_5.1p1, OpenSSL 0.9.7l 28 Sep 2006
debug1: Remote protocol version 2.0, remote software version 0.0
debug1: no match: 0.0
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_5.1
debug2: fd 3 setting O_NONBLOCK
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug2: kex_parse_kexinit: diffie-hellman-group-exchange-sha256,diffie- 
hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman- 
group1-sha1
debug2: kex_parse_kexinit: ssh-rsa,ssh-dss
debug2: kex_parse_kexinit: aes128-cbc,3des-cbc,blowfish-cbc,cast128- 
cbc,arcfour128,arcfour256,arcfour,aes192-cbc,aes256-cbc,rijndael-cbc at lysator.liu.se 
,aes128-ctr,aes192-ctr,aes256-ctr
debug2: kex_parse_kexinit: hmac-md5,hmac-sha1,umac-64 at openssh.com,hmac- 
ripemd160,hmac-ripemd160 at openssh.com,hmac-sha1-96,hmac-md5-96
debug2: kex_parse_kexinit: none,zlib at openssh.com,zlib
debug2: kex_parse_kexinit:
debug2: kex_parse_kexinit: first_kex_follows 0
debug2: kex_parse_kexinit: reserved 0
debug2: kex_parse_kexinit: diffie-hellman-group1-sha1,diffie-hellman- 
group-exchange-sha1
debug2: kex_parse_kexinit: ssh-rsa
debug2: kex_parse_kexinit: aes256-cbc,aes192-cbc,aes128-cbc,twofish- 
cbc,blowfish-cbc,3des-cbc,arcfour
debug2: kex_parse_kexinit: hmac-sha1,hmac-sha1-96,hmac-md5,hmac-md5-96
debug2: kex_parse_kexinit: zlib,none
debug2: kex_parse_kexinit:
debug2: kex_parse_kexinit: first_kex_follows 0
debug2: kex_parse_kexinit: reserved 0
debug2: mac_setup: found hmac-md5
debug1: kex: server->client aes128-cbc hmac-md5 none
debug2: mac_setup: found hmac-md5
debug1: kex: client->server aes128-cbc hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024<1024<8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug2: dh_gen_key: priv key bits set: 132/256
debug2: bits set: 515/1025
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug3: check_host_in_hostfile: filename /Users/jon/.ssh/known_hosts
debug3: check_host_in_hostfile: match line 13
debug1: Host 'xxx' is known and matches the RSA host key.
debug1: Found key in /Users/jon/.ssh/known_hosts:13
debug2: bits set: 521/1025
debug1: ssh_rsa_verify: signature correct
debug2: kex_derive_keys
debug2: set_newkeys: mode 1
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug2: set_newkeys: mode 0
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug2: key: /Users/jon/.ssh/id_rsa (0x107ec0)
debug2: key: /Users/jon/.ssh/identity (0x0)
debug2: key: /Users/jon/.ssh/id_dsa (0x0)
debug3: input_userauth_banner





From exarkun at divmod.com  Wed Feb 11 10:32:36 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 11 Feb 2009 10:32:36 -0500
Subject: [Twisted-Python] need help for twisted FTPClient
In-Reply-To: <b486cc990902101943h4c1790c8m58c1f9caa8cab74d@mail.gmail.com>
Message-ID: <20090211153236.12853.623254964.divmod.quotient.8883@henry.divmod.com>

On Wed, 11 Feb 2009 11:43:07 +0800, ?? <ioscas at gmail.com> wrote:
>hello, everyone:
>
>    I'm new to twisted and ftp protocol. for some purpose, i need a python
>ftp client to do list, get, put, remove operations upon a FTP server which
>is implemented with twisted.
>    here is my codes, testing for 'get' passed, but 'put' failed. i checked
>the api of storeFile, abd got these:
>
> [snip]
>
> but i don't know how to handle it, :)
> sorry for the rubbish codes, but i really need help from you guys, it's
>hard to find some useful info from twisted official doc,
> Any suggestion on how to write a nice ftp client with twisted is welcome.
> Thanks in advance.

The most obvious problem with the code is that it uses reactor.run and
reactor.stop too much.  You can start and stop the reactor exactly once.

>IOSCAS
>
>______________________________________________________________________________
>
>from twisted.protocols.ftp import FTPClient, FTPFileListProtocol
>from twisted.internet.protocol import Protocol, ClientCreator
>from twisted.python import usage
>from twisted.internet import reactor, defer
>
>class SaveFile(Protocol):
>    '''
>    save the ftp file to local filesystem
>    '''
>    def __init__(self, output):
>        self.fout = open(output, 'w')
>
>    def dataReceived(self, data):
>        self.fout.write(data)
>        self.fout.close()

This is also probably wrong.  dataReceived may be called multiple times.
You can't close the output file until you've received all the data.  I'm
not sure, but connectionLost is probably called when all data has been
received (or if there is an error receiving the data).

>class FTP:
>    '''
>    a simple ftp client
>    '''
>    def __init__(self, host, port):
>        '''
>        init
>        '''
>        self.__host = host
>        self.__port = port
>        self.__username = 'aaa'
>        self.__passwd = 'bbb'
>        self.__passive = 1
>
>    def __get(self, ftp_client, src, des):
>        '''
>        '''
>        save_file = SaveFile(des)
>        d = ftp_client.retrieveFile(src, save_file)
>        d = ftp_client.quit()
>        d.addCallback(lambda result: reactor.stop())
>        return d

Don't stop the reactor here.  Stopping the reactor means your program is
basically done and you don't want to do anything else with Twisted.

>    def get(self, src, des):
>        '''
>        get src file from ftp server, store it in des
>        '''
>        creator = ClientCreator(reactor, FTPClient, self.__username,
>self.__passwd, self.__passive)
>        defer = creator.connectTCP(self.__host,
>self.__port).addCallback(self.__get, src, des)
>        reactor.run()
>        return defer.result

Don't start the reactor here.  Start the reactor in the "main" part of your
program.  Also, don't access "defer.result".  Instead, just return "defer".

>
>    def __put(self, ftp_client, src, des):
>        '''
>        '''
>        source_file = os.path.basename(src)
>        target_dir = os.path.dirname(des)
>        ftp_client.changeDirectory(target_dir)
>        d = ftp_client.storeFile(src)
>        d = ftp_client.quit()
>        d.addCallback(lambda result: reactor.stop())
>        return d

Again, don't use stop here.

>   def put(self, src, des):
>        '''
>        put src file to ftp server, store it in des
>        '''
>        creator = ClientCreator(reactor, FTPClient, self.__username,
>self.__passwd, self.__passive)
>        defer = creator.connectTCP(self.__host,
>self.__port).addCallback(self.__put, src, des)
>        reactor.run()
>        return defer.result
>

And don't use run or .result here.

Jean-Paul



From ioscas at gmail.com  Thu Feb 12 04:53:28 2009
From: ioscas at gmail.com (=?GB2312?B?wfjvxw==?=)
Date: Thu, 12 Feb 2009 17:53:28 +0800
Subject: [Twisted-Python] need help for twisted FTPClient
In-Reply-To: <20090211153236.12853.623254964.divmod.quotient.8883@henry.divmod.com>
References: <b486cc990902101943h4c1790c8m58c1f9caa8cab74d@mail.gmail.com>
	<20090211153236.12853.623254964.divmod.quotient.8883@henry.divmod.com>
Message-ID: <b486cc990902120153v24204ac3k211a0ae1e12eedf3@mail.gmail.com>

thanks for your reply, i will check the codes..

2009/2/11 Jean-Paul Calderone <exarkun at divmod.com>

> On Wed, 11 Feb 2009 11:43:07 +0800, ?? <ioscas at gmail.com> wrote:
>
>> hello, everyone:
>>
>>   I'm new to twisted and ftp protocol. for some purpose, i need a python
>> ftp client to do list, get, put, remove operations upon a FTP server which
>> is implemented with twisted.
>>   here is my codes, testing for 'get' passed, but 'put' failed. i checked
>> the api of storeFile, abd got these:
>>
>> [snip]
>>
>> but i don't know how to handle it, :)
>> sorry for the rubbish codes, but i really need help from you guys, it's
>> hard to find some useful info from twisted official doc,
>> Any suggestion on how to write a nice ftp client with twisted is welcome.
>> Thanks in advance.
>>
>
> The most obvious problem with the code is that it uses reactor.run and
> reactor.stop too much.  You can start and stop the reactor exactly once.
>
>  IOSCAS
>>
>>
>> ______________________________________________________________________________
>>
>> from twisted.protocols.ftp import FTPClient, FTPFileListProtocol
>> from twisted.internet.protocol import Protocol, ClientCreator
>> from twisted.python import usage
>> from twisted.internet import reactor, defer
>>
>> class SaveFile(Protocol):
>>   '''
>>   save the ftp file to local filesystem
>>   '''
>>   def __init__(self, output):
>>       self.fout = open(output, 'w')
>>
>>   def dataReceived(self, data):
>>       self.fout.write(data)
>>       self.fout.close()
>>
>
> This is also probably wrong.  dataReceived may be called multiple times.
> You can't close the output file until you've received all the data.  I'm
> not sure, but connectionLost is probably called when all data has been
> received (or if there is an error receiving the data).
>
>  class FTP:
>>   '''
>>   a simple ftp client
>>   '''
>>   def __init__(self, host, port):
>>       '''
>>       init
>>       '''
>>       self.__host = host
>>       self.__port = port
>>       self.__username = 'aaa'
>>       self.__passwd = 'bbb'
>>       self.__passive = 1
>>
>>   def __get(self, ftp_client, src, des):
>>       '''
>>       '''
>>       save_file = SaveFile(des)
>>       d = ftp_client.retrieveFile(src, save_file)
>>       d = ftp_client.quit()
>>       d.addCallback(lambda result: reactor.stop())
>>       return d
>>
>
> Don't stop the reactor here.  Stopping the reactor means your program is
> basically done and you don't want to do anything else with Twisted.
>
>    def get(self, src, des):
>>       '''
>>       get src file from ftp server, store it in des
>>       '''
>>       creator = ClientCreator(reactor, FTPClient, self.__username,
>> self.__passwd, self.__passive)
>>       defer = creator.connectTCP(self.__host,
>> self.__port).addCallback(self.__get, src, des)
>>       reactor.run()
>>       return defer.result
>>
>
> Don't start the reactor here.  Start the reactor in the "main" part of your
> program.  Also, don't access "defer.result".  Instead, just return "defer".
>
>
>>   def __put(self, ftp_client, src, des):
>>       '''
>>       '''
>>       source_file = os.path.basename(src)
>>       target_dir = os.path.dirname(des)
>>       ftp_client.changeDirectory(target_dir)
>>       d = ftp_client.storeFile(src)
>>       d = ftp_client.quit()
>>       d.addCallback(lambda result: reactor.stop())
>>       return d
>>
>
> Again, don't use stop here.
>
>   def put(self, src, des):
>>       '''
>>       put src file to ftp server, store it in des
>>       '''
>>       creator = ClientCreator(reactor, FTPClient, self.__username,
>> self.__passwd, self.__passive)
>>       defer = creator.connectTCP(self.__host,
>> self.__port).addCallback(self.__put, src, des)
>>       reactor.run()
>>       return defer.result
>>
>>
> And don't use run or .result here.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090212/44a9d504/attachment.htm 

From esteve at sindominio.net  Thu Feb 12 16:32:24 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 12 Feb 2009 22:32:24 +0100
Subject: [Twisted-Python] GSoC
Message-ID: <200902122232.25033.esteve@sindominio.net>

Hi all,

the GSoC FAQ was recently published [1] and I wondered if Twisted could be a 
mentoring organization for the next installment of the GSoC program.

I think it's a good opportunity to bring new developers to Twisted by having a 
mentor. I was a GSoC student last year and it was pretty fun.

I'd offer my help to mentor a student, but I think I couldn't become an 
official mentor (though I'd like to be one) as I'm not a Twisted developer. 
In any case, I could bring my experience as an ex-student :-)

Anyway, some areas a student could give a helping hand are:

- porting some Twisted.web2 feature(s) to Twisted.web
- improving support for Twisted in Jython or IronPython
- porting Amp to Java, C++, etc.
- adding or improving support for Twisted in an external library (e.g. Thrift, 
Amazon services, Storm, Protocol Buffers, etc.)

What do you think?

Cheers.

1 - http://code.google.com/opensource/gsoc/2009/faqs.html



From ntoper at gmail.com  Thu Feb 12 16:42:33 2009
From: ntoper at gmail.com (Nicolas Toper)
Date: Thu, 12 Feb 2009 22:42:33 +0100
Subject: [Twisted-Python] GSoC
In-Reply-To: <200902122232.25033.esteve@sindominio.net>
References: <200902122232.25033.esteve@sindominio.net>
Message-ID: <fcbb46050902121342k705753b1qe8143ce47f71654@mail.gmail.com>

Hi,

I think it's a great idea. I'm also an ex-student in this program and I use
Twisted quite a lot in my work. I am willing to help mentor if you need me.

Best,
Nicolas

On Thu, Feb 12, 2009 at 10:32 PM, Esteve Fernandez <esteve at sindominio.net>wrote:

> Hi all,
>
> the GSoC FAQ was recently published [1] and I wondered if Twisted could be
> a
> mentoring organization for the next installment of the GSoC program.
>
> I think it's a good opportunity to bring new developers to Twisted by
> having a
> mentor. I was a GSoC student last year and it was pretty fun.
>
> I'd offer my help to mentor a student, but I think I couldn't become an
> official mentor (though I'd like to be one) as I'm not a Twisted developer.
> In any case, I could bring my experience as an ex-student :-)
>
> Anyway, some areas a student could give a helping hand are:
>
> - porting some Twisted.web2 feature(s) to Twisted.web
> - improving support for Twisted in Jython or IronPython
> - porting Amp to Java, C++, etc.
> - adding or improving support for Twisted in an external library (e.g.
> Thrift,
> Amazon services, Storm, Protocol Buffers, etc.)
>
> What do you think?
>
> Cheers.
>
> 1 - http://code.google.com/opensource/gsoc/2009/faqs.html
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
A+
Nico
http://www.deviant-abstraction.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090212/228d277f/attachment.htm 

From gabriel.rossetti at arimaz.com  Fri Feb 13 03:37:02 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Fri, 13 Feb 2009 09:37:02 +0100
Subject: [Twisted-Python] thread + signal + reactor.stop problem
Message-ID: <4995312E.2010807@arimaz.com>

Hello everyone,

I was able to write a small example that reproduces my problem, when I 
redefine signal and I have threads and I try to stop the reactor, it 
hangs. I wasn't sure if it was loopingCall or callLater or threads at 
first, but from my tests it's the threads that cause the problem. I 
attached the example, it's a modified version of the Twisted echo 
server/client example. Run the server, run the client, press Ctrl + C in 
the client's terminal (or Ctrl + break on windows) and it doesn't quit. 
I still have to test if it's caused by the signal redefinition at all or 
not.

Thank you,
Gabriel Rossetti
-------------- next part --------------
A non-text attachment was scrubbed...
Name: echoclient.py
Type: text/x-python
Size: 2432 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090213/ebc52ba7/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: echoserv.py
Type: text/x-python
Size: 611 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090213/ebc52ba7/attachment-0001.py 

From newptcai at gmail.com  Fri Feb 13 03:54:46 2009
From: newptcai at gmail.com (Peter Cai)
Date: Fri, 13 Feb 2009 16:54:46 +0800
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: <c893b8530805081839y401b2652l593151ddb67d588f@mail.gmail.com>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
	<c893b8530805081839y401b2652l593151ddb67d588f@mail.gmail.com>
Message-ID: <befee6d80902130054w3b45ab03qea04b2c1048b1a82@mail.gmail.com>

Hi,

Thanks for this insightful comments on Sqlalchmy and Twisted.


I hope I had read your mail before I start my current project.

At that time, I simply thought using deferToThread would solve
everything since the twisted.enterprise.adbapi simply use
threads.deferToThreadPool
to make database interface asynchronous.

Today, I suddenly feel that, as sqlalchemy is not thread safe, using
deferToThread might cause unexpected problems.
And I found this mail and it seems that all the code I wrote this week is
going to be useless.

But, I got another question:

Since adbapi uses deferToThreadPool to make db api asynchronous, does this
mean that all python db apis are *thread safe*?

BTW: what does 'query generator' means?  Is it a software genrating SQLs?

On Fri, May 9, 2008 at 9:39 AM, Valentino Volonghi <dialtone at gmail.com>wrote:

> On Thu, May 8, 2008 at 3:03 PM, alex clemesha <clemesha at gmail.com> wrote:
> > But, I hoping to solve some immediate problems with Twisted and
> > SQLAlchemy, so ...
>
> I've long worked on trying to integrate sqlalchemy and twisted in a
> useful way but that can only be done when using simple queries. There
> are countless reasons behind this limitation, like the fact that
> sqlalchemy objects can do a lot of stuff behind the scenes or because
> code that you write in other places might use some assumptions because
> it's sync rather than async, and there are also problems with possible
> bugs and assumptions within sqlalchemy itself. Basically it's not safe
> and I wouldn't recommend it for anyone to use the orm together within
> a Twisted process.
>
> What I ended up doing is creating subprocesses that have fairly
> complex logic and usually spend more than a few seconds doing their
> job. By doing this I simply use sqlalchemy synchronously and without
> any problems (I was starting to go completely crazy while trying to
> debug time-dependent errors when I decided to refactor my code to use
> subprocesses instead, everything started working smoothly without any
> relevant change in the logic or in the test code and now I can also
> run the subprocess as a system script to check and verify stuff or
> debug (with pdb)).
>
> Considering that an ORM is only useful (?) for very complex logic I
> consider my approach completely sane. Use the query generator for
> everything and reserve the orm for long running tasks.
>
> nadbapi and storm-twisted tries to solve the orm problem in a similar
> way but nadbapi is no longer maintained, anyway both currently suffer
> from an incredible number of deferreds that they generate making the
> use of defgen an absolute requirement (and thus lowering overall
> performance). If you look hard enough in glyph's old blog or in this
> list (I can't remember where exactly) you can find a post about
> letting the database deal with concurrency and not spread it in
> application code (aka having tons of deferreds). It is true that not
> using threads increases speed and memory usage but for this particular
> case 99% of the time you are not going to need neither of them anyway.
>
> closing: I recently refactored some code that used sqlalchemy orm into
> using just the query generator and instead of taking 17 seconds it now
> takes 7 seconds and memory usage has decreased considerably. It's not
> really just because an orm is slower than simply executing queries,
> but rather because querying the db was so easy; it was basically done
> "recklessly" without thinking too much about the performance hit of
> going back and forth to the database. This is basically why I'd rather
> not use ORMs unless forced by legacy code or because generating a
> query would introduce so much complexity to make it an application in
> itself (very rare case IMHO).
>
> --
> Valentino Volonghi aka Dialtone
> Now running MacOS X 10.5
> Home Page: http://www.twisted.it
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
?????????????????????????
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090213/c6f00d9a/attachment.htm 

From reza at getpeer.com  Fri Feb 13 04:59:42 2009
From: reza at getpeer.com (Reza Lotun)
Date: Fri, 13 Feb 2009 09:59:42 +0000
Subject: [Twisted-Python] thread + signal + reactor.stop problem
In-Reply-To: <4995312E.2010807@arimaz.com>
References: <4995312E.2010807@arimaz.com>
Message-ID: <356e30830902130159l1f25770ck90d45c318bc74738@mail.gmail.com>

Hi Gabriel,

There's two problems from what I can see.

1) You have a method run in a thread

    def __myLoop(self):
        while True:
            self.transport.write("Thread")
            time.sleep(1)

but since it's being run in a thread, you need to schedule the call
into the reactor like so:

    def __myLoop(self):
        while True:
            reactor.callFromThread(self.transport.write, "Thread")
            time.sleep(1)

2) Your loop in that thread will run forever no matter what. It isn't
a daemon thread so there needs to be some sort of stopping criterion
(there's no way to kill Python threads externally):

    def __myLoop(self):
        while self.factory.running:
            reactor.callFromThread(self.transport.write, "Thread")
            time.sleep(1)

By setting an attribute on the factory in the __init__ called
'running' to True, then in the signal handler code we can set it to
False, providing a quick and dirty way to bail out of that thread.

I made the modifications and sending a cntrl-C made the program exit just fine.

Cheers,
Reza


On Fri, Feb 13, 2009 at 8:37 AM, Gabriel Rossetti
<gabriel.rossetti at arimaz.com> wrote:
> Hello everyone,
>
> I was able to write a small example that reproduces my problem, when I
> redefine signal and I have threads and I try to stop the reactor, it hangs.
> I wasn't sure if it was loopingCall or callLater or threads at first, but
> from my tests it's the threads that cause the problem. I attached the
> example, it's a modified version of the Twisted echo server/client example.
> Run the server, run the client, press Ctrl + C in the client's terminal (or
> Ctrl + break on windows) and it doesn't quit. I still have to test if it's
> caused by the signal redefinition at all or not.
>
> Thank you,
> Gabriel Rossetti
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Reza Lotun
Senior Software Engineer
Peer Technologies Limited
reza at getpeer.com



From gabriel.rossetti at arimaz.com  Fri Feb 13 05:21:20 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Fri, 13 Feb 2009 11:21:20 +0100
Subject: [Twisted-Python] thread + signal + reactor.stop problem
In-Reply-To: <356e30830902130159l1f25770ck90d45c318bc74738@mail.gmail.com>
References: <4995312E.2010807@arimaz.com>
	<356e30830902130159l1f25770ck90d45c318bc74738@mail.gmail.com>
Message-ID: <499549A0.1020406@arimaz.com>

Reza Lotun wrote:
> Hi Gabriel,
>   
Hello Reza,
> There's two problems from what I can see.
>
> 1) You have a method run in a thread
>
>     def __myLoop(self):
>         while True:
>             self.transport.write("Thread")
>             time.sleep(1)
>
> but since it's being run in a thread, you need to schedule the call
> into the reactor like so:
>
>     def __myLoop(self):
>         while True:
>             reactor.callFromThread(self.transport.write, "Thread")
>             time.sleep(1)
>
>   

Yes, I forgot to do that in the example, silly me, I do do that in my 
real code though.

> 2) Your loop in that thread will run forever no matter what. It isn't
> a daemon thread so there needs to be some sort of stopping criterion
> (there's no way to kill Python threads externally):
>
>     def __myLoop(self):
>         while self.factory.running:
>             reactor.callFromThread(self.transport.write, "Thread")
>             time.sleep(1)
>
> By setting an attribute on the factory in the __init__ called
> 'running' to True, then in the signal handler code we can set it to
> False, providing a quick and dirty way to bail out of that thread.
>
>   

Ahh, ok, I though Twisted would stop them somehow, That must be it then 
one of my threads must not exit and thus runs forever and Twisted waits 
on it.

> I made the modifications and sending a cntrl-C made the program exit just fine.
>
> Cheers,
> Reza
>   

Thank you!
Gabriel

>
> On Fri, Feb 13, 2009 at 8:37 AM, Gabriel Rossetti
> <gabriel.rossetti at arimaz.com> wrote:
>   
>> Hello everyone,
>>
>> I was able to write a small example that reproduces my problem, when I
>> redefine signal and I have threads and I try to stop the reactor, it hangs.
>> I wasn't sure if it was loopingCall or callLater or threads at first, but
>> from my tests it's the threads that cause the problem. I attached the
>> example, it's a modified version of the Twisted echo server/client example.
>> Run the server, run the client, press Ctrl + C in the client's terminal (or
>> Ctrl + break on windows) and it doesn't quit. I still have to test if it's
>> caused by the signal redefinition at all or not.
>>
>> Thank you,
>> Gabriel Rossetti
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>>     
>
>
>
>   



From denis.bilenko at gmail.com  Fri Feb 13 09:35:33 2009
From: denis.bilenko at gmail.com (Denis Bilenko)
Date: Fri, 13 Feb 2009 20:35:33 +0600
Subject: [Twisted-Python] half-closing SSL connection,
	unexpected connectionLost() error
Message-ID: <95d6e98c0902130635i70393743p6c873974c9e38bb5@mail.gmail.com>

Hi,

What's the correct way to call loseWriteConnection on SSL connection?
I keep getting "Connection was closed in a non-clean fashion" errors
when I do that.

Here's a minimal server and a client that trigger the error. Note that
the server
does not implement IHalfCloseableProtocol and I'd like to keep it that way
(primarily because I'm building a client, not a server, so I'd like my client to
work with as many servers as possible)

---------------------------------------------------------------------------
server.py

from twisted.internet.protocol import Factory, Protocol
from twisted.internet import reactor

class MyProtocol(Protocol):

    def connectionMade(self):
        print self.transport.getHost(), self.transport.getPeer()

    def connectionLost(self, reason):
        print 'connectionLost %r' % reason.value

class MyFactory(Factory):
    protocol = MyProtocol

from twisted.internet import ssl
contextFactory = ssl.DefaultOpenSSLContextFactory('valid.key',
'valid.crt', sslmethod=ssl.SSL.SSLv3_METHOD)
reactor.listenSSL(10000, MyFactory(), contextFactory)
reactor.run()


---------------------------------------------------------------------------
client.py

import sys
from zope.interface import implements

from twisted.internet.protocol import ClientFactory, Protocol
from twisted.internet.interfaces import IHalfCloseableProtocol
from twisted.internet import reactor

class MyProtocol(Protocol):

    implements(IHalfCloseableProtocol)

    def connectionMade(self):
        print 'connectionMade %s -> %s' % (self.transport.getHost(),
self.transport.getPeer())
        self.transport.loseWriteConnection()

    def readConnectionLost(self):
        print 'readConnectionLost'

    def writeConnectionLost(self):
        print 'writeConnectionLost'

    def connectionLost(self, reason):
        print 'connectionLost %r' % reason.value

class MyFactory(ClientFactory):
    protocol = MyProtocol

    def clientConnectionFailed(self, connector, err):
        print err.value
        reactor.stop()

from twisted.internet import ssl
contextFactory = ssl.ClientContextFactory()
reactor.connectSSL(sys.argv[1], int(sys.argv[2]), MyFactory(), contextFactory)
reactor.run()


---------------------------------------------------------------------------
console1

$ python server.py
IPv4Address(TCP, '127.0.0.1', 10000) IPv4Address(TCP, '127.0.0.1', 40291)
connectionLost ConnectionDone()


---------------------------------------------------------------------------
console2

$ python client.py localhost 10000
connectionMade IPv4Address(TCP, '127.0.0.1', 40291) ->
IPv4Address(TCP, 'localhost', 10000)
writeConnectionLost
connectionLost ConnectionLost()

The question is why it's not ConnectionDone but ConnectionLost that
client receives
in connectionLost callback?
If I convert the examples to use TCP, I get ConnectionDone, as expected.

Thank you for your time.



From tg.mufcnotforsale at gmail.com  Fri Feb 13 09:58:52 2009
From: tg.mufcnotforsale at gmail.com (Thomas Greenwood)
Date: Fri, 13 Feb 2009 14:58:52 +0000
Subject: [Twisted-Python] Slow Performance of Twisted Script
Message-ID: <6e6ffb0e0902130658m718817acgf4582b827308b6ca@mail.gmail.com>

Hi everyone,

I have been developing my first python script and jumped straight into the
world of twisted. I like the concept but I seem to be doing something very
wrong. The script takes an NZB file and parses it (using HellaNZB's parser)
and then makes a specified number of connections to the news server and
checks that all articles are there using the STAT command. I also know
nothing about newsservers or nntp so this script is a complete shot in the
dark. First time with python, first time with twisted and first time with
nntp seems to equal disaster!

The problem is that the script is very slow, even with 20 simultaneous
connections to the internet I only produce 111k or so of traffic and only
achieve 2 article checks per connection per second. On a 24meg connection I
can download the whole thing quicker than checking it with my script! Any
ideas why it is so slow?

I have attached the script.

Thanks for any help.

Tom Greenwood
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090213/d5c5fac5/attachment.htm 
-------------- next part --------------
#!/usr/bin/python
from twisted.internet import reactor    
from twisted.internet import protocol
from NZBHellaParser import NZBParser,  parseNZB
from twisted.news.nntp import NNTPClient
import sys,traceback,time

results = None
allClients = None

class NNTPStatCheck(NNTPClient):
    "Class to check if the server has all the articles required using as little bandwidth as possible."
    nextMessageID = None
    def __init__(self, _username, _password,  _newsgroup):
        NNTPClient.__init__(self)
        self.username = _username
        self.password = _password
        self.newsgroup = _newsgroup
        self.nextMessageID = 0
        self.currMessageID = None
        #self.lastTime = 0
        
    def getStat(self):
        #print "Stating for " + self.currMessageID
        #self.startTime = time.time()
        self.sendLine('STAT <%s>' % (self.currMessageID, ))
        self._newState(None, self.getStatFailed, self._stateStat)
        
    def connectionLost(self, error):
        NNTPClient.connectionLost(self)
        if self.nextMessageID >= len(results):
            self.factory.readyToStop = True;
            for client in allClients:
                if client.readyToStop == False:
                    return
            reactor.stop()
        else:
            print "Unexpected Connection Loss, Should we try again?? " + str(self.nextMessageID) + "/" + str(len(results))
                 
    def connectionMade(self):
        NNTPClient.connectionMade(self)
        print 'Connection made, logging in..'
        self.authInfo()
    
    def gotGroup(self, group):
        #print "GOT GROUP "  + str(group) + "\n"
        self.statNext()
        
    def gotStat(self, stat):
        #print "GOT STAT %s\n" % str(stat)
        results[self.currMessageID][self.newsgroup] = True
        #FIXME: Don't need to check the rest of the groups if we have it
        
    def _stateStat(self, (code, message)):
        #print str(allClients.index(self.factory)) + " " + str(time.time() - self.startTime) + " " + str(time.time() - self.lastTime)
        #self.lastTime = time.time()
        if code == 223:
            self.gotStat((code, message))
            self._endState()
            self.tryNext()
        else:
            self.getStatFailed("%s %s" % (str(code) , str(message)))
            
    def statNext(self):
        if self.nextMessageID < len(results):
            self.currMessageID = results.keys()[self.nextMessageID]
            self.nextMessageID = (self.nextMessageID + 1)
            if results[self.currMessageID] [self.newsgroup] is None:
                self.getStat()
	    else:
                self.nextMessageID = (self.nextMessageID + 1)
                self.statNext()
        else:
	    # FIXME: Should now be fixed but sometimes the client got into an unknown state
            print "Finished, disconnecting from server."
            self.quit()
            
    def tryNext(self):
        if self.nextMessageID < len(results):
            self.fetchGroup(self.newsgroup)
        else:
            print "Finished, disconnecting from server."
            self.quit()
                
    def getStatFailed(self, error):
        print str(time.time() - self.startTime)
        try:
            (code, message) = error.split(" ", 1)
        except AttributeError:
            print 'Unknown reply structure: %s\n' % str(error)
        if code == "430":
             self.messageDoesNotExist(error)
        else:
            print 'Error occured after stat: %s\n' % str(error)
        results[self.currMessageID][self.newsgroup] = False
        self.tryNext()
        
    def messageDoesNotExist(self, error):
        print 'Message ' + self.currMessageID + ' does not exist in group ' + self.newsgroup + '\n'
    
    def authInfo(self):
        self.sendLine('AUTHINFO USER ' + self.username)
        self._newState(None, self.authInfoFailed, self._authInfoUserResponse)

    def _authInfoUserResponse(self, (code, message)):
        if code == 381:
            self.sendLine('AUTHINFO PASS ' + self.password)
            self._newState(None, self.authInfoFailed, self._authInfoPassResponse)
        else:
            self.authInfoFailed('%d %s' % (code, message))
        self._endState()

    def _authInfoPassResponse(self, (code, message)):
        if code == 281:
            self.gotauthInfoOk('%d %s' % (code, message))
        else:
            self.authInfoFailed('%d %s' % (code, message))
        self._endState()

    def gotauthInfoOk(self, message):
        print 'Logged in, starting stat checks..'
        self.fetchGroup(self.newsgroup)

    def authInfoFailed(self, error):
        # FIXME: We use reactor.stop so we dont try and auth incorrectly for ever
        print 'Error occured whilst attempting auth: %s\n' % error
        reactor.stop()

        
class NNTPVerifyFactory(protocol.ClientFactory):
    readyToStop = False
    
    def __init__(self, _username, _password, _newsgroup):
        self.username = _username
        self.password = _password
        self.newsgroup = _newsgroup
        
    def clientConnectionFailed(self, connector,  reason):
        print 'Failed to connect using connector: ' + str(connector) + " because " + str(reason)
        reactor.stop()
        
    def buildProtocol(self, addr):
        p = NNTPStatCheck(self.username, self.password, self.newsgroup)
        p.factory = self
        return p
        
def checkFoundArticle(groups):
    "If Article found returns group found, if not found returns false, if failed returns None"
    for group, value in groups.iteritems():
        if value == True:
          return group
        elif value == False:
            return False;
    return None
    
def createDictionaryFromList(list):
    retVal = {}
    for item in list:
        retVal[item] = None
    return retVal

def calcConnections(numGroups,maxConn):
    if numGroups == 0:
        return 0
    if maxConn == 0:
        return 0

    if maxConn < numGroups:
        return 0        
    else:
        if (maxConn / numGroups) >= 1:
            return (maxConn / numGroups)
	else:
            return 1
	    
def printUsage():
        print "Usage: NZBVerify.py maxConnections nzbFile"
        print "  e.g: NZBVerify.py 20 test.nzb"
        print "\n"
        print "NZBVerify will distribute the connections between the groups specified in the NZB"
        print "Your usenet provider will be able to tell you how many maximum connection you can use"
        print "The value of maxConnections must be at least equal to the number of groups"
        print "There is very little error handling so if you think its got stuck, it probably has!"

def main():
    global results,  allClients
    results = {}
    allClients = []

    if len(sys.argv) < 3:
        printUsage()
        return

    try:
        maxConns = int(sys.argv[1])
    except ValueError:
        print "Please enter a valid integer for maxConnections"
        printUsage()
        return

    print "Max connections set to " + str(maxConns)    

    print "Loading NZB File from " + sys.argv[2]
    try:
        groups, messageIDs = parseNZB(sys.argv[2])
    except IOError:
        print "There was an IO error loading the NZB File. The error follows:\n"
        print traceback.print_exc()
        return

    print "Parsed NZB File with " + str(len(messageIDs)) + " articles from " + str(len(groups)) + " groups."

    connectionsPerGroup = calcConnections(len(groups),maxConns)

    print "Using " + str(connectionsPerGroup) + " connections per group."
    
    if connectionsPerGroup == 0:
        print "Finished. Can't do anything with no connections per group!"
        return

    for currMessageID in messageIDs:
        # FIXME: Need to check if we need to create a new Dictionary instance for each message or if python is clever enough to work it out itself.
        results[currMessageID] = createDictionaryFromList(groups)

    #FIXME: Can only have as many groups as connections                
    for group in groups:
	for i in range(connectionsPerGroup):
            verifier = NNTPVerifyFactory("tgreenwood at pp.newsgroups.user", "tomwap1986", str(group))
            allClients.append(verifier)
            reactor.connectTCP("us.usenet-news.net", 119, verifier)
        
    print "Connecting to server.."
    reactor.run()
    print "Got required data from server, analysing.."
    totalArticles = len(results)
    totalFound = 0
    totalNotChecked = 0
    for currMessageID,  _groups in results.iteritems():
        result = checkFoundArticle(_groups)
        if result is None:
            print "Article Not Checked: " + currMessageID
            totalNotChecked = (totalNotChecked + 1)
        elif result is False:
            print "Article Not Found: " + currMessageID
        else:
            print "Found Article: " + currMessageID + " in " + result
            totalFound = (totalFound + 1)
    print "Don't take the groups listed above as gospel, it only means that you newsserver said it had it on the server - it may not have cared that we asked for the article in a particular group!"
    print "All Finished."
    print "Found " + str(totalFound) + ", Not Found " + str(totalArticles - (totalFound+totalNotChecked)) + ", Not checked " + str(totalNotChecked)
    sys.exit(0)
  
if __name__ == '__main__':
    main()
  
-------------- next part --------------
from xml.sax import make_parser
from xml.sax.handler import ContentHandler, feature_external_ges, feature_namespaces

def parseNZB(fileName):
    """ Initialize the queue from the specified nzb file """
    # Create a parser
    parser = make_parser()
    
    # No XML namespaces here
    parser.setFeature(feature_namespaces, 0)
    parser.setFeature(feature_external_ges, 0)
    
    # Create the handler
    dh = NZBParser()
    
    # Tell the parser to use it
    parser.setContentHandler(dh)

    # Parse the input
    parser.parse(fileName)

    return (dh.groups, dh.queue)
        
class NZBParser(ContentHandler):
    """ Parse an NZB 1.0 file into a list of msgids
    http://www.newzbin.com/DTD/nzb/nzb-1.0.dtd """
    def __init__(self):
        # downloading queue to add NZB segments to
        self.queue = []

        # nzb file to parse
        #self.nzb = nzb
        self.groups = []

        # parsing variables
        self.file = None
        self.bytes = None
        self.number = None
        self.chars = None
        self.fileNeedsDownload = None
        
        self.fileCount = 0
        self.segmentCount = 0
        
    def startElement(self, name, attrs):
        if name == 'file':
            subject = self.parseUnicode(attrs.get('subject'))
            poster = self.parseUnicode(attrs.get('poster'))

            self.fileCount += 1
                
        elif name == 'group':
            self.chars = []
                        
        elif name == 'segment':
            self.bytes = int(attrs.get('bytes'))
            self.number = int(attrs.get('number'))
                        
            self.chars = []
        
    def characters(self, content):
        if self.chars is not None:
            self.chars.append(content)
        
    def endElement(self, name):
        if name == 'file':
            self.file = None
            self.fileNeedsDownload = None
                
        elif name == 'group':
            newsgroup = self.parseUnicode(''.join(self.chars))
            
            if newsgroup not in self.groups:
                self.groups.append(newsgroup)
                        
            self.chars = None
                
        elif name == 'segment':
            self.segmentCount += 1

            messageId = self.parseUnicode(''.join(self.chars))
            self.queue.append(messageId)

            self.chars = None
            self.number = None
            self.bytes = None    

    def parseUnicode(self, unicodeOrStr):
        if isinstance(unicodeOrStr, unicode):
            return unicodeOrStr.encode('latin-1')
        return unicodeOrStr

From glyph at divmod.com  Fri Feb 13 11:39:58 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 13 Feb 2009 16:39:58 -0000
Subject: [Twisted-Python] half-closing SSL connection,
	unexpected connectionLost() error
In-Reply-To: <95d6e98c0902130635i70393743p6c873974c9e38bb5@mail.gmail.com>
References: <95d6e98c0902130635i70393743p6c873974c9e38bb5@mail.gmail.com>
Message-ID: <20090213163958.12555.1193248565.divmod.xquotient.4375@weber.divmod.com>


On 02:35 pm, denis.bilenko at gmail.com wrote:
>What's the correct way to call loseWriteConnection on SSL connection?

It is illegal, according to the specification.

    http://tools.ietf.org/html/rfc4346#section-7.2.1

   [upon receiving a close_notify] ... The other party MUST respond with 
a close_notify alert of its own and close down the connection 
immediately, discarding any pending writes.



From exarkun at twistedmatrix.com  Sun Feb 15 00:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Feb 2009 05:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1234674313.47.1334737555@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090215/66029d7c/attachment.htm 

From zooko at zooko.com  Sun Feb 15 10:14:14 2009
From: zooko at zooko.com (zooko)
Date: Sun, 15 Feb 2009 08:14:14 -0700
Subject: [Twisted-Python] ANNOUNCING allmydata.org "Tahoe",
	the Least-Authority Filesystem, v1.3 
Message-ID: <91479565-70B8-4A3E-A2BA-5DE6A66614BA@zooko.com>

Folks:

This project is all based on Twisted, and many of the Related  
Projects that are springing up (see below) are, too.  Thanks to  
everyone for making Twisted into such a high-quality tool!

Regards,

Zooko

ANNOUNCING allmydata.org "Tahoe", the Least-Authority Filesystem, v1.3

We are pleased to announce the release of version 1.3.0 of "Tahoe", the
Least Authority Filesystem.

Tahoe-LAFS is a secure, decentralized, fault-tolerant filesystem.  All
of the source code is available under a choice of two Free Software,
Open Source licences.

This filesystem is encrypted and distributed over multiple peers in
such a way it continues to function even when some of the peers are
unavailable, malfunctioning, or malicious.

Here is the one-page explanation of the security and fault-tolerance
properties that it offers:

http://allmydata.org/source/tahoe/trunk/docs/about.html

This is the successor to v1.2, which was released July 21, 2008 [1].
This is a major new release, adding a repairer, an efficient backup
command, support for large files, an (S)FTP server, and much more.

See the NEWS file [2] and the known_issues.txt file [3] for more
information.

In addition to the many new features of Tahoe itself, a crop of related
projects have sprung up, including Tahoe frontends for Windows and
Macintosh, two front-ends written in JavaScript, a Tahoe plugin for
duplicity, a Tahoe plugin for TiddlyWiki, a project to create a new
backup tool, CIFS/SMB integration, an iPhone app, and three incomplete
Tahoe frontends for FUSE. See Related Projects on the wiki: [4].


COMPATIBILITY

The version 1 branch of Tahoe is the basis of the consumer backup
product from Allmydata, Inc. -- http://allmydata.com .

Tahoe v1.3 is fully compatible with the version 1 branch of Tahoe.
Files written by v1.3 clients can be read by clients of all versions
back to v1.0 unless the file is too large -- files greater than about
12 GiB (depending on the configuration) can't be read by older clients.
v1.3 clients can read files produced by clients of all versions since
v1.0.  v1.3 servers can serve clients of all versions back to v1.0 and
v1.3 clients can use servers of all versions back to v1.0 (but can't
upload large files to them).

This is the fourth release in the version 1 series.  We believe that
this version of Tahoe is stable enough to rely on as a permanent store
of valuable data.  The version 1 branch of Tahoe will be actively
supported and maintained for the forseeable future, and future versions
of Tahoe will retain the ability to read files and directories produced
by Tahoe v1 for the forseeable future.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the entire filesystem continues to be available, thanks to
the remaining computers.  You can also share your files with other
users, using a simple and flexible access control scheme.

Because this software is new, we do not categorically recommend it as
the sole repository of data which is extremely confidential or
precious.  However, we believe that erasure coding, strong encryption,
Free/Open Source Software and careful engineering make Tahoe safer than
common alternatives, such as RAID, removable drive, tape, or "on-line
storage" or "Cloud storage" systems.

This software comes with extensive unit tests [5], and there are no
known security flaws which would compromise confidentiality or data
integrity.  (For all currently known issues please see the
known_issues.txt file [2].)

This release of Tahoe is suitable for the "friendnet" use case [6] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share disk space and files.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
[7] for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1.0.  The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to wait for
up to twelve months after you redistribute a derived work before
releasing the source code of your derived work. See the file
"COPYING.TGPPL.html" [8] for the terms of the Transitive Grace Period
Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris, and
probably most other systems.  Start with "docs/install.html" [9].


HACKING AND COMMUNITY

Please join us on the mailing list [10].  Patches that extend and
improve Tahoe are gratefully accepted -- the RoadMap page [11] shows
the next improvements that we plan to make and CREDITS [12] lists the
names of people who've contributed to the project.  The wiki Dev page
[13] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [14], a provider of commercial
backup services.  Allmydata, Inc. created the Tahoe project, and
contributes hardware, software, ideas, bug reports, suggestions,
demands, and money (employing several Tahoe hackers and instructing
them to spend part of their work time on this Free Software project).
Also they award customized t-shirts to hackers who find security flaws
in Tahoe (see http://hacktahoe.org ).  Thank you to Allmydata, Inc. for
their generous and public-spirited support.


Zooko Wilcox-O'Hearn
on behalf of the allmydata.org team

Special acknowledgment goes to Brian Warner, whose superb engineering
skills and dedication are primarily responsible for the Tahoe
implementation, and largely responsible for the Tahoe design as well,
not to mention most of the docs and many other things besides.

February 13, 2009
Boulder, Colorado, USA

[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=2789
[2] http://allmydata.org/trac/tahoe/browser/NEWS
[3] http://allmydata.org/trac/tahoe/browser/docs/known_issues.txt
[4] http://allmydata.org/trac/tahoe/wiki/RelatedProjects
[5] http://allmydata.org/trac/tahoe/wiki/Dev
[6] http://allmydata.org/trac/tahoe/wiki/UseCases
[7] http://allmydata.org/trac/tahoe/browser/COPYING.GPL
[8] http://allmydata.org/source/tahoe/trunk/COPYING.TGPPL.html
[9] http://allmydata.org/source/tahoe/trunk/docs/install.html
[10] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[11] http://allmydata.org/trac/tahoe/roadmap
[12] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=2677
[13] http://allmydata.org/trac/tahoe/wiki/Dev
[14] http://allmydata.com



From hoechtl at in.tum.de  Sun Feb 15 11:20:53 2009
From: hoechtl at in.tum.de (=?ISO-8859-15?Q?Johann_H=F6chtl?=)
Date: Sun, 15 Feb 2009 17:20:53 +0100
Subject: [Twisted-Python] Communication with Async Java NIO Socketchannel
Message-ID: <499840E5.9090306@in.tum.de>

Is it possible to communicate with a nonblocking Java SocketChannel from 
Java.nio?
What has to be attended?



From exarkun at divmod.com  Sun Feb 15 11:30:07 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 15 Feb 2009 11:30:07 -0500
Subject: [Twisted-Python] Communication with Async Java NIO Socketchannel
In-Reply-To: <499840E5.9090306@in.tum.de>
Message-ID: <20090215163007.12853.588588135.divmod.quotient.10576@henry.divmod.com>

On Sun, 15 Feb 2009 17:20:53 +0100, Johann H?chtl <hoechtl at in.tum.de> wrote:
>Is it possible to communicate with a nonblocking Java SocketChannel from 
>Java.nio?
>What has to be attended?

Are you certain you have the correct mailing list?  This doesn't sound like
a question which is related to Twisted.

Jean-Paul



From hoechtl at in.tum.de  Sun Feb 15 12:48:31 2009
From: hoechtl at in.tum.de (=?ISO-8859-15?Q?Johann_H=F6chtl?=)
Date: Sun, 15 Feb 2009 18:48:31 +0100
Subject: [Twisted-Python] Communication with Async Java NIO, Socketchannel
Message-ID: <4998556F.8010109@in.tum.de>

On Sun, 15 Feb 2009 17:20:53 +0100, Johann H??chtl <hoechtl at in.tum.de> wrote:

> >Is it possible to communicate with a nonblocking Java SocketChannel from 
> >Java.nio?
> >What has to be attended?
>   

>Are you certain you have the correct mailing list?  This doesn't sound like
>a question which is related to Twisted.
>
>Jean-Paul


Dear Jean Paul,
Yes I'm quite sure about this mailinglist. As I read in a Python book, 
twisted is the framework, which I should use for asynchronous network 
communication.

Jo



From exarkun at divmod.com  Sun Feb 15 14:02:00 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 15 Feb 2009 14:02:00 -0500
Subject: [Twisted-Python] Communication with Async Java NIO, Socketchannel
In-Reply-To: <4998556F.8010109@in.tum.de>
Message-ID: <20090215190200.12853.1191885626.divmod.quotient.10626@henry.divmod.com>

On Sun, 15 Feb 2009 18:48:31 +0100, Johann H?chtl <hoechtl at in.tum.de> wrote:
>On Sun, 15 Feb 2009 17:20:53 +0100, Johann H??chtl <hoechtl at in.tum.de> 
>wrote:
>> >Is it possible to communicate with a nonblocking Java SocketChannel from 
>> >Java.nio?
>> >What has to be attended?
>>
>
>>Are you certain you have the correct mailing list?  This doesn't sound like
>>a question which is related to Twisted.
>>
>>Jean-Paul
>
>
>Dear Jean Paul,
>Yes I'm quite sure about this mailinglist. As I read in a Python book, 
>twisted is the framework, which I should use for asynchronous network 
>communication.

If you want to write an application with Twisted which communicates with
an application written in Java, it doesn't matter which socket APIs the
Java application is using (just as it doesn't matter to the Java app that
you're using Twisted).

http://twistedmatrix.com/projects/core/documentation/howto/index.html links
to a number of introductory documents about Twisted.  One or more of them
should help you get started.

Jean-Paul



From luper.rouch at gmail.com  Mon Feb 16 23:19:21 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Tue, 17 Feb 2009 05:19:21 +0100
Subject: [Twisted-Python] Correct pattern to do SSH forwarding in a GUI
Message-ID: <499A3AC9.3040700@gmail.com>

I am using twisted in a GUI application to do port forwarding over an 
SSH connection. All the network connections of the application 
(database, etc...) are routed through this connection, to simplify 
server configuration and secure things.

My first attempt was to run the reactor in the main thread, but the 
application was "freezing" when e.g. doing a SELECT with 
SQLAlchemy/psycopg2 (I guess because psycopg2 just waits for data and 
blocks the twisted reactor). So I put reactor.run() in a thread and it 
works, but I'm getting strange issues on some platforms (for example I 
can't connect at all on *some* OSX computers, getting a "reactor 
stopping" log from twisted without any further error), and I feel I'm 
doing the whole thing terribly wrong.

So my question is, how to do proper SSH port forwarding with conch in an 
application that also uses the tunnels not the asynchronous way ? If 
running the reactor in a thread is OK, are there particular things to 
watch out for ?



From glyph at divmod.com  Tue Feb 17 10:13:49 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 17 Feb 2009 15:13:49 -0000
Subject: [Twisted-Python] Correct pattern to do SSH forwarding in a GUI
In-Reply-To: <499A3AC9.3040700@gmail.com>
References: <499A3AC9.3040700@gmail.com>
Message-ID: <20090217151349.12555.1954884716.divmod.xquotient.4409@weber.divmod.com>

On 04:19 am, luper.rouch at gmail.com wrote:
>My first attempt was to run the reactor in the main thread, but the 
>application was "freezing" when e.g. doing a SELECT with 
>SQLAlchemy/psycopg2 (I guess because psycopg2 just waits for data and 
>blocks the twisted reactor). So I put reactor.run() in a thread and it 
>works, but I'm getting strange issues on some platforms (for example I 
>can't connect at all on *some* OSX computers, getting a "reactor 
>stopping" log from twisted without any further error), and I feel I'm 
>doing the whole thing terribly wrong.

These errors sound like you are making Twisted API calls from threads 
other than the reactor thread by accident.  There's no obvious fix 
except for "don't do that" :).

My suggestion would be to move the SQLAlchemy/psycopg2 into threads, 
with e.g. deferToThread, rather than putting the reactor into a thread. 
Then the reactor won't freeze while the blocking SQL stuff happens.
>So my question is, how to do proper SSH port forwarding with conch in 
>an application that also uses the tunnels not the asynchronous way ? If 
>running the reactor in a thread is OK, are there particular things to 
>watch out for ?

There's no reason that running the reactor in a thread shouldn't work; 
it's just generally tricky (especially if you're working with an 
existing codebase) to completely avoid calling Twisted APIs from other 
threads.



From itamar at itamarst.org  Tue Feb 17 13:04:36 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 17 Feb 2009 13:04:36 -0500
Subject: [Twisted-Python] Test, please ignore
Message-ID: <1234893876.13141.23.camel@pintsize>






From luper.rouch at gmail.com  Tue Feb 17 13:05:03 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Tue, 17 Feb 2009 19:05:03 +0100
Subject: [Twisted-Python] Correct pattern to do SSH forwarding in a GUI
In-Reply-To: <20090217151349.12555.1954884716.divmod.xquotient.4409@weber.divmod.com>
References: <499A3AC9.3040700@gmail.com>
	<20090217151349.12555.1954884716.divmod.xquotient.4409@weber.divmod.com>
Message-ID: <499AFC4F.1010105@gmail.com>

glyph at divmod.com wrote:
> On 04:19 am, luper.rouch at gmail.com wrote:
>> My first attempt was to run the reactor in the main thread, but the 
>> application was "freezing" when e.g. doing a SELECT with 
>> SQLAlchemy/psycopg2 (I guess because psycopg2 just waits for data and 
>> blocks the twisted reactor). So I put reactor.run() in a thread and it 
>> works, but I'm getting strange issues on some platforms (for example I 
>> can't connect at all on *some* OSX computers, getting a "reactor 
>> stopping" log from twisted without any further error), and I feel I'm 
>> doing the whole thing terribly wrong.
> 
> These errors sound like you are making Twisted API calls from threads 
> other than the reactor thread by accident.  There's no obvious fix 
> except for "don't do that" :).

Yes, I did not pay attention to separate Twisted from the main thread at 
all, apart from putting reactor.run() in another thread.

> 
> My suggestion would be to move the SQLAlchemy/psycopg2 into threads, 
> with e.g. deferToThread, rather than putting the reactor into a thread. 
> Then the reactor won't freeze while the blocking SQL stuff happens.
>> So my question is, how to do proper SSH port forwarding with conch in 
>> an application that also uses the tunnels not the asynchronous way ? 
>> If running the reactor in a thread is OK, are there particular things 
>> to watch out for ?
> 
> There's no reason that running the reactor in a thread shouldn't work; 
> it's just generally tricky (especially if you're working with an 
> existing codebase) to completely avoid calling Twisted APIs from other 
> threads.
> 

This implies too much modifications in my code, I think I will put the 
whole Twisted stuff in a separate process and interact with it via 
simple IPC, as I don't use that much of Twisted in the GUI code anyway.



From itamar at itamarst.org  Tue Feb 17 13:15:12 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 17 Feb 2009 13:15:12 -0500
Subject: [Twisted-Python] Available for short-term Twisted consulting,
 e.g. training, design (but not coding)
Message-ID: <1234894512.13141.25.camel@pintsize>

Need help with Twisted, distributed systems or or just plain old 
software architecture?

Due to a repetitive strain injury I am unable to type much (though
I am slowly improving), and so I'm taking time off of work to recover.
As a result I am available for short-term consulting until I recover,
e.g. training or design work, assuming of course it does not involve
any typing.

I've worked on Twisted itself, as well as projects ranging from 
high-performance distributed C++ servers, to an access control framework
for an airline reservation system, to a multimedia kiosk system for the 
Israel Museum in Jerusalem:
http://itamarst.org/resume.html

Send me an e-mail if you're interested.

-- Itamar Shtull-Trauring





From adelagon at gmail.com  Tue Feb 17 23:00:47 2009
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 18 Feb 2009 12:00:47 +0800
Subject: [Twisted-Python] twisted.web benchmarks
Message-ID: <7a01f6c00902172000i72fcba5m20efeb484be5933e@mail.gmail.com>

Hello All,

First of all thanks for all the pointers in the #twisted about twisted.web
being able to use threadpool. Here's the benchmark between cherryPy 3.0 and
twisted.web that I promised. I hope this could serve as a reference in the
future.

*Testing parameters:*
- Office PC: Intel(R) Pentium(R) D CPU 2.80GHz with 1GB RAM
- Apache bench set to 500 concurrent attempts within 30 secs
- LinuxMint Elyssa/Python 2.5.2/Twisted 2.5
- Twisted using SelectReactor
- Webservers just returning "Hello!" after some mathematical calculation:

            result = 0
            for i in range(random.randint(100, 300)):
                angle = math.radians(random.randint(0, 45))
                result += math.tanh(angle)/math.cosh(angle)

*
CherryPy Results:*
Concurrency Level:      500
Time taken for tests:   30.1441 seconds
Complete requests:      *6421*
Failed requests:        0
Write errors:           0
Total transferred:      834990 bytes
HTML transferred:       38538 bytes
Requests per second:    214.02 [#/sec] (mean)
Time per request:       2336.197 [ms] (mean)
Time per request:       4.672 [ms] (mean, across all concurrent requests)
Transfer rate:          27.17 [Kbytes/sec] received
*
twisted-web Results (no threading):*
Concurrency Level:      500
Time taken for tests:   30.35509 seconds
Complete requests:      *10051*
Failed requests:        0
Write errors:           0
Total transferred:      502600 bytes
HTML transferred:       60312 bytes
Requests per second:    334.64 [#/sec] (mean)
Time per request:       1494.155 [ms] (mean)
Time per request:       2.988 [ms] (mean, across all concurrent requests)
Transfer rate:          16.31 [Kbytes/sec] received


*twisted-web Results (with threading, threadpool [min=100, max=400]):*
Concurrency Level:      500
Time taken for tests:   30.16998 seconds
Complete requests:      *11068*
Failed requests:        0
Write errors:           0
Total transferred:      553450 bytes
HTML transferred:       66414 bytes
Requests per second:    368.72 [#/sec] (mean)
Time per request:       1356.026 [ms] (mean)
Time per request:       2.712 [ms] (mean, across all concurrent requests)
Transfer rate:          17.99 [Kbytes/sec] received


*Source Listing (using Twisted):
*
#!/usr/bin/python
from twisted.internet import reactor
from twisted.web import http
from twisted.python.threadpool import ThreadPool
import random, math, sys

class HTTPProtocol(http.Request):
    def process(self):
        def process_finish():
            result = 0
            for i in range(random.randint(100, 300)):
                angle = math.radians(random.randint(0, 45))
                result += math.tanh(angle)/math.cosh(angle)
            self.setHeader('Content-Type', 'text/html')
            self.write("Hello!")
            self.finish()
        if self.channel.factory.app.threads_enabled:
            print("Using threads")
            reactor.callFromThread(process_finish)
        else:
            print("Not using threads")
            process_finish()

class HTTPChannel(http.HTTPChannel):
    requestFactory = HTTPProtocol

class HTTPFactory(http.HTTPFactory):
    protocol = HTTPChannel
    def __init__(self, app):
        self.app = app

    def start(self, port=8080):
        reactor.listenTCP(port, self)

class BenchmarkApplication():
    def __init__(self):
        self.httpfactory = None
        self.pool = None
        self.threads_enabled = False

    def start(self):
        try:
            minthreads = int(sys.argv[1])
            maxthreads = int(sys.argv[2])
            self.pool = ThreadPool(minthreads, maxthreads)
            self.pool.start()
            self.threads_enabled = True
            print "Threads enabled: MIN:%d MAX:%d" % (minthreads,
maxthreads)
        except Exception, e:
            print("minthreads and maxthreads is not set or malformed.
Threading will be disabled")
        self.httpfactory = HTTPFactory(self)
        self.httpfactory.start()
        return (True)

    def end(self):
        if self.pool != None:
            self.pool.stop()

if __name__ == "__main__":
    gba = BenchmarkApplication()
    if gba.start():
        reactor.run()
    gba.end()*

Source Listing (using CherryPy):
*#!/usr/bin/python
import cherrypy
from amazilia import *
from amazilia import base
from amazilia import mysql
import random, math

class Root:
    def index(self):
    result = 0
        for i in range(random.randint(100, 300)):
            angle = math.radians(random.randint(0, 45))
            result += math.tanh(angle)/math.cosh(angle)
        return "Hello!"
    index.exposed = True

root = Root()
cherrypy.quickstart(root)*


*I haven't had much time to tinker with CherryPy. Threre might be some ways
to increase its performance. :)

---
Alvin
-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090218/c5c9d81f/attachment.htm 

From gabriel.rossetti at arimaz.com  Wed Feb 18 06:14:01 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 18 Feb 2009 12:14:01 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
Message-ID: <499BED79.5010007@arimaz.com>

Hello,

I wrote some code to transform a raw XML string into a domish.Element, 
and I keep on getting char encoding/decoding errors :

    class __RawXmlToElement(object):
       
        def __call__(self, s):
            self.result = None
            def onStart(el):
                self.result = el
            def onEnd():
                pass
            def onElement(el):
                self.result.addChild(el)
               
            parser = domish.elementStream()
            parser.DocumentStartEvent = onStart
            parser.ElementEvent = onElement
            parser.DocumentEndEvent = onEnd
            tmp = domish.Element(("", "s"))
            tmp.addRawXml(s)
            parser.parse(tmp.toXml())
           
            return self.result.firstChildElement()

    rawXmlToElement = __RawXmlToElement()


Here's a test raw XML string :

     >>> u"<t>re?u</t>"
    u'<t>re\xe7u</t>'

     >>> u"<t>re?u</t>".encode("utf-8")
    '<t>re\xc3\xa7u</t>'

     >>> "<t>re?u</t>"
    '<t>re\xc3\xa7u</t>'


As you can see my system encodes strings in UTF-8, I tried the following 
but I
keep on getting errors :

     >>> rawXmlToElement("<t>re?u</t>")
    raw xml adder error : 'ascii' codec can't decode byte 0xc3 in
    position 5: ordinal not in range(128)

     >>> rawXmlToElement(u"<t>re?u</t>")
    parser error : 'ascii' codec can't encode character u'\xe7' in
    position 8: ordinal not in range(128)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "<stdin>", line 26, in __call__
    AttributeError: 'NoneType' object has no attribute 'firstChildElement'

     >>> rawXmlToElement(unicode("<t>re?u</t>", "utf-8"))
    parser error : 'ascii' codec can't encode character u'\xe7' in
    position 8: ordinal not in range(128)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "<stdin>", line 26, in __call__
    AttributeError: 'NoneType' object has no attribute 'firstChildElement'


If I try it with ASCII encodable chars it works correctly :

     >>> rawXmlToElement("<t>toto</t>").toXml()
    u'<t>toto</t>'

     >>> rawXmlToElement(u"<t>toto</t>").toXml()
    u'<t>toto</t>'

     >>> rawXmlToElement(unicode("<t>toto</t>", " utf-8")).toXml()
    u'<t>toto</t>'


Does anyone have an idea on what I'm doing wrong here? Thank you!



From gabriel.rossetti at arimaz.com  Wed Feb 18 08:41:05 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 18 Feb 2009 14:41:05 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
	: OT
In-Reply-To: <499BED79.5010007@arimaz.com>
References: <499BED79.5010007@arimaz.com>
Message-ID: <499C0FF1.4090407@arimaz.com>

Gabriel Rossetti wrote:
> Hello,
>
> I wrote some code to transform a raw XML string into a domish.Element, 
> and I keep on getting char encoding/decoding errors :
>
>    class __RawXmlToElement(object):
>              def __call__(self, s):
>            self.result = None
>            def onStart(el):
>                self.result = el
>            def onEnd():
>                pass
>            def onElement(el):
>                self.result.addChild(el)
>                          parser = domish.elementStream()
>            parser.DocumentStartEvent = onStart
>            parser.ElementEvent = onElement
>            parser.DocumentEndEvent = onEnd
>            tmp = domish.Element(("", "s"))
>            tmp.addRawXml(s)
>            parser.parse(tmp.toXml())
>                      return self.result.firstChildElement()
>
>    rawXmlToElement = __RawXmlToElement()
>
>
> Here's a test raw XML string :
>
>     >>> u"<t>re?u</t>"
>    u'<t>re\xe7u</t>'
>
>     >>> u"<t>re?u</t>".encode("utf-8")
>    '<t>re\xc3\xa7u</t>'
>
>     >>> "<t>re?u</t>"
>    '<t>re\xc3\xa7u</t>'
>
>
> As you can see my system encodes strings in UTF-8, I tried the 
> following but I
> keep on getting errors :
>
>     >>> rawXmlToElement("<t>re?u</t>")
>    raw xml adder error : 'ascii' codec can't decode byte 0xc3 in
>    position 5: ordinal not in range(128)
>
>     >>> rawXmlToElement(u"<t>re?u</t>")
>    parser error : 'ascii' codec can't encode character u'\xe7' in
>    position 8: ordinal not in range(128)
>    Traceback (most recent call last):
>      File "<stdin>", line 1, in <module>
>      File "<stdin>", line 26, in __call__
>    AttributeError: 'NoneType' object has no attribute 'firstChildElement'
>
>     >>> rawXmlToElement(unicode("<t>re?u</t>", "utf-8"))
>    parser error : 'ascii' codec can't encode character u'\xe7' in
>    position 8: ordinal not in range(128)
>    Traceback (most recent call last):
>      File "<stdin>", line 1, in <module>
>      File "<stdin>", line 26, in __call__
>    AttributeError: 'NoneType' object has no attribute 'firstChildElement'
>
>
> If I try it with ASCII encodable chars it works correctly :
>
>     >>> rawXmlToElement("<t>toto</t>").toXml()
>    u'<t>toto</t>'
>
>     >>> rawXmlToElement(u"<t>toto</t>").toXml()
>    u'<t>toto</t>'
>
>     >>> rawXmlToElement(unicode("<t>toto</t>", " utf-8")).toXml()
>    u'<t>toto</t>'
>
>
> Does anyone have an idea on what I'm doing wrong here? Thank you!
>
I think this is an Python environment problem and not a Twisted problem. 
If I run the attached example in Eclipse, it works, if I run it from a 
terminal, it doesn't. This is now off topic, but if anyone has an Idea 
I'd be grateful... I'm also going to post this on the Python mailing list.

Thank you,
Gabriel
-------------- next part --------------
A non-text attachment was scrubbed...
Name: xml_parser_test.py
Type: text/x-python
Size: 812 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090218/b55f0a66/attachment.py 

From twisted at ralphm.ik.nu  Wed Feb 18 08:51:05 2009
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Wed, 18 Feb 2009 14:51:05 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <499BED79.5010007@arimaz.com>
References: <499BED79.5010007@arimaz.com>
Message-ID: <499C1249.6010405@ralphm.ik.nu>

On 2009-02-18 12:14, Gabriel Rossetti wrote:
> Hello,
> 
> I wrote some code to transform a raw XML string into a domish.Element, 
> and I keep on getting char encoding/decoding errors :
> 
> [..]
>            parser.parse(tmp.toXml())
 > [..]

Parser input is expected to be a string, not unicode. Try this instead:

   parser.parse(tmp.toXml().encode('utf-8'))

ralphm



From gabriel.rossetti at arimaz.com  Wed Feb 18 08:57:56 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 18 Feb 2009 14:57:56 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <499C1249.6010405@ralphm.ik.nu>
References: <499BED79.5010007@arimaz.com> <499C1249.6010405@ralphm.ik.nu>
Message-ID: <499C13E4.5080002@arimaz.com>

Ralph Meijer wrote:
> On 2009-02-18 12:14, Gabriel Rossetti wrote:
>> Hello,
>>
>> I wrote some code to transform a raw XML string into a 
>> domish.Element, and I keep on getting char encoding/decoding errors :
>>
>> [..]
>>            parser.parse(tmp.toXml())
> > [..]
>
> Parser input is expected to be a string, not unicode. Try this instead:
>
>   parser.parse(tmp.toXml().encode('utf-8'))
>
> ralphm
>
Hello Ralphm,

yes, I had fixed that in the code attached in my last msg, it only works 
in Eclipse though.

Gabriel



From twisted at ralphm.ik.nu  Wed Feb 18 09:14:20 2009
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Wed, 18 Feb 2009 15:14:20 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <499C13E4.5080002@arimaz.com>
References: <499BED79.5010007@arimaz.com> <499C1249.6010405@ralphm.ik.nu>
	<499C13E4.5080002@arimaz.com>
Message-ID: <499C17BC.3030905@ralphm.ik.nu>

On 2009-02-18 14:57, Gabriel Rossetti wrote:
> Ralph Meijer wrote:
>> On 2009-02-18 12:14, Gabriel Rossetti wrote:
>> [..]
 >>
>> Parser input is expected to be a string, not unicode. Try this instead:
>>
>>   parser.parse(tmp.toXml().encode('utf-8'))
>>
>> ralphm
>>
> Hello Ralphm,
> 
> yes, I had fixed that in the code attached in my last msg, it only works 
> in Eclipse though.

Ah, but in /that/ code, you typed:

     res = rawXmlToElement("<t>re?u</t>")

While you should have:

     res = rawXmlToElement(u"<t>re?u</t>")

ralphm



From gabriel.rossetti at arimaz.com  Wed Feb 18 09:26:09 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 18 Feb 2009 15:26:09 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <499C17BC.3030905@ralphm.ik.nu>
References: <499BED79.5010007@arimaz.com>
	<499C1249.6010405@ralphm.ik.nu>	<499C13E4.5080002@arimaz.com>
	<499C17BC.3030905@ralphm.ik.nu>
Message-ID: <499C1A81.4090101@arimaz.com>

Ralph Meijer wrote:
> On 2009-02-18 14:57, Gabriel Rossetti wrote:
>> Ralph Meijer wrote:
>>> On 2009-02-18 12:14, Gabriel Rossetti wrote:
>>> [..]
> >>
>>> Parser input is expected to be a string, not unicode. Try this instead:
>>>
>>>   parser.parse(tmp.toXml().encode('utf-8'))
>>>
>>> ralphm
>>>
>> Hello Ralphm,
>>
>> yes, I had fixed that in the code attached in my last msg, it only 
>> works in Eclipse though.
>
> Ah, but in /that/ code, you typed:
>
>     res = rawXmlToElement("<t>re?u</t>")
>
> While you should have:
>
>     res = rawXmlToElement(u"<t>re?u</t>")
>
> ralphm
>
Ahh, yes, I see my error, thanks :-) I'm glad everything is unicode in 
python 3....

Gabriel



From glyph at divmod.com  Wed Feb 18 21:40:11 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 19 Feb 2009 02:40:11 -0000
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <499C1A81.4090101@arimaz.com>
References: <499BED79.5010007@arimaz.com> <499C1249.6010405@ralphm.ik.nu>
	<499C13E4.5080002@arimaz.com> <499C17BC.3030905@ralphm.ik.nu>
	<499C1A81.4090101@arimaz.com>
Message-ID: <20090219024011.12555.582926845.divmod.xquotient.4417@weber.divmod.com>




On 18 Feb, 02:26 pm, gabriel.rossetti at arimaz.com wrote:
>Ahh, yes, I see my error, thanks :-) I'm glad everything is unicode in 
>python 3....

Erm, input to the parser will still be bytes in python 3.  The failure 
mode will hopefully be more obvious, but it's not that "everything" is 
unicode :).

See the FAQ: http://is.gd/k2XF



From luper.rouch at gmail.com  Wed Feb 18 23:16:34 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Thu, 19 Feb 2009 05:16:34 +0100
Subject: [Twisted-Python] KeyError when an errback is triggered within a
	conch TCP tunnel
Message-ID: <499CDD22.4000802@gmail.com>

Sorry I have not been able to find a better title, please see the 
attached example which may be more descriptive.

Here is what it does:
  * set up an SSH connection
  * open a TCP forwarding channel through this connection
  * do something through the tunnel that will trigger an errback (in the
    example, try to do an XMLRPC call with no one listening on the
    tunnel's end)

This scenario gives me the following traceback (tested with Twisted 
8.1.0 and 8.2.0):

-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/log.py", 
line 84, in callWithLogger
     return callWithContext({"system": lp}, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/log.py", 
line 69, in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/context.py", 
line 59, in callWithContext
     return self.currentContext().callWithContext(ctx, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/context.py", 
line 37, in callWithContext
     return func(*args,**kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/selectreactor.py", 
line 156, in _doReadOrWrite
     self._disconnectSelectable(selectable, why, method=="doRead")
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/posixbase.py", 
line 193, in _disconnectSelectable
     selectable.connectionLost(f)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/tcp.py", 
line 520, in connectionLost
     protocol.connectionLost(reason)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/forwarding.py", 
line 129, in connectionLost
     self.channel.loseConnection()
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/channel.py", 
line 253, in loseConnection
     self.conn.sendClose(self)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/connection.py", 
line 491, in sendClose
     self.channelsToRemoteChannel[channel]))
exceptions.KeyError: 
<twisted.conch.ssh.forwarding.SSHListenClientForwardingChannel instance 
at 0x972048c>
-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

It works well in the other cases, i.e.:
  * the errback is triggered but the tunnel is not used (comment line 57,
    uncomment line 59)
  * the errback is not triggered (start the XMLRPC server by uncommenting
    line 100), using the tunnel or not

You get the error only when the tunnel is used AND the errback is triggered.

To run the example execute it with an user name that can login using ssh 
on your host, e.g. 'python test.py someuser' and enter its password.

Cheers,
Luper
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.py
Type: text/x-python
Size: 3121 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090219/d11384ce/attachment.py 

From luper.rouch at gmail.com  Wed Feb 18 23:24:28 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Thu, 19 Feb 2009 05:24:28 +0100
Subject: [Twisted-Python] KeyError when an errback is triggered within a
	conch TCP tunnel
Message-ID: <499CDEFC.6000609@gmail.com>

(posting it a second time with the example code inlined as pipermail did 
not like the attachment)

Sorry I have not been able to find a better title, please see the 
attached example which may be more descriptive.

Here is what it does:
  * set up an SSH connection
  * open a TCP forwarding channel through this connection
  * do something through the tunnel that will trigger an errback (in the
    example, try to do an XMLRPC call with no one listening on the
    tunnel's end)

This scenario gives me the following traceback (tested with Twisted 
8.1.0 and 8.2.0):

-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/log.py", 
line 84, in callWithLogger
     return callWithContext({"system": lp}, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/log.py", 
line 69, in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/context.py", 
line 59, in callWithContext
     return self.currentContext().callWithContext(ctx, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/context.py", 
line 37, in callWithContext
     return func(*args,**kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/selectreactor.py", 
line 156, in _doReadOrWrite
     self._disconnectSelectable(selectable, why, method=="doRead")
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/posixbase.py", 
line 193, in _disconnectSelectable
     selectable.connectionLost(f)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/tcp.py", 
line 520, in connectionLost
     protocol.connectionLost(reason)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/forwarding.py", 
line 129, in connectionLost
     self.channel.loseConnection()
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/channel.py", 
line 253, in loseConnection
     self.conn.sendClose(self)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/connection.py", 
line 491, in sendClose
     self.channelsToRemoteChannel[channel]))
exceptions.KeyError: 
<twisted.conch.ssh.forwarding.SSHListenClientForwardingChannel instance 
at 0x972048c>
-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

It works well in the other cases, i.e.:
  * the errback is triggered but the tunnel is not used (comment line 57,
    uncomment line 59)
  * the errback is not triggered (start the XMLRPC server by uncommenting
    line 100), using the tunnel or not

You get the error only when the tunnel is used AND the errback is triggered.

To run the example execute it with an user name that can login using ssh 
on your host, e.g. 'python test.py someuser' and enter its password.

Cheers,
Luper


Example code:

-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
#!/usr/bin/env python

import sys
from getpass import getpass
from twisted.python import log
from twisted.conch.ssh import connection, transport, userauth, keys, \
         forwarding, channel
from twisted.conch.ssh.common import NS
from twisted.internet import defer, protocol, reactor
from twisted.web import server, xmlrpc
from twisted.web.xmlrpc import Proxy


conn = None


def connect(user, host, port=22):
     return reactor.connectTCP(host, port, Factory(user, Transport))


class Factory(protocol.ClientFactory):
     def __init__(self, user, protocol):
         self.user = user
         self.protocol = protocol

     def buildProtocol(self, addr):
         p = self.protocol(self.user)
         p.factory = self
         return p


class Transport(transport.SSHClientTransport):
     def __init__(self, user):
         self.user = user

     def verifyHostKey(self, pubkey, fingerprint):
         return defer.succeed(1)

     def connectionSecure(self):
         self.requestService(UserAuth(self.user, Connection()))


class UserAuth(userauth.SSHUserAuthClient):
     def getPassword(self, prompt=None):
         return defer.succeed(getpass("password: "))


class Connection(connection.SSHConnection):
     def __init__(self, *args, **kwargs):
         connection.SSHConnection.__init__(self, *args, **kwargs)
         self.forwarding_sockets = []

     def serviceStarted(self):
         # Create a tunnel from 12345 to 54321
         self.forward_port(12345, 54321)
         # Do something through the tunnel
         p = Proxy('http://localhost:12345/')    # passing through the 
tunnel,
                                                 # triggers the KeyError
         #p = Proxy('http://localhost:54321/')   # not using the tunnel, 
works
         print "ping...",
         d = p.callRemote("ping")
         def stop_ok(response):
             print response
             conn.disconnect()
             reactor.stop()
         def stop_error(error):
             print "error", error
             conn.disconnect()
             reactor.stop()
         d.addCallback(stop_ok)
         d.addErrback(stop_error)

     def serviceStopped(self):
         # Stop forwarding sockets
         for socket in self.forwarding_sockets:
             socket.stopListening()

     def forward_port(self, local_port, remote_port):
         print "forwarding %d => %d" % (local_port, remote_port)
         socket = reactor.listenTCP(local_port,
                 forwarding.SSHListenForwardingFactory(self,
                     ("localhost", remote_port),
                     forwarding.SSHListenClientForwardingChannel))
         self.forwarding_sockets.append(socket)


class DummyServer(xmlrpc.XMLRPC):
     def xmlrpc_ping(self):
         return "pong"


if __name__ == "__main__":
     if len(sys.argv) != 2:
         print "usage: test.py user"
         sys.exit(1)
     #log.startLogging(sys.stdout)

     # If the server is not running, stop_error() errback is triggered 
and we
     # have the KeyError when passing through the tunnel
     #reactor.listenTCP(54321, server.Site(DummyServer()))

     conn = connect(sys.argv[1], "localhost")
     reactor.run()
-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-



From gabriel.rossetti at arimaz.com  Thu Feb 19 02:06:49 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 19 Feb 2009 08:06:49 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <20090219024011.12555.582926845.divmod.xquotient.4417@weber.divmod.com>
References: <499BED79.5010007@arimaz.com>
	<499C1249.6010405@ralphm.ik.nu>	<499C13E4.5080002@arimaz.com>
	<499C17BC.3030905@ralphm.ik.nu>	<499C1A81.4090101@arimaz.com>
	<20090219024011.12555.582926845.divmod.xquotient.4417@weber.divmod.com>
Message-ID: <499D0509.9020701@arimaz.com>

glyph at divmod.com wrote:
>
>
>
> On 18 Feb, 02:26 pm, gabriel.rossetti at arimaz.com wrote:
>> Ahh, yes, I see my error, thanks :-) I'm glad everything is unicode 
>> in python 3....
>
> Erm, input to the parser will still be bytes in python 3.  The failure 
> mode will hopefully be more obvious, but it's not that "everything" is 
> unicode :).
>
> See the FAQ: http://is.gd/k2XF
>
Ok, I see now, thanks. Those links are nice too.



From luper.rouch at gmail.com  Thu Feb 19 05:17:07 2009
From: luper.rouch at gmail.com (flupke)
Date: Thu, 19 Feb 2009 11:17:07 +0100
Subject: [Twisted-Python] Correct pattern to do SSH forwarding in a GUI
In-Reply-To: <20090217151349.12555.1954884716.divmod.xquotient.4409@weber.divmod.com>
References: <499A3AC9.3040700@gmail.com>
	<20090217151349.12555.1954884716.divmod.xquotient.4409@weber.divmod.com>
Message-ID: <22BFAE8E-02C6-42E3-9FD0-E89984522FAB@gmail.com>

> On 04:19 am, luper.rouch at gmail.com wrote:
>> My first attempt was to run the reactor in the main thread, but the  
>> application was "freezing" when e.g. doing a SELECT with SQLAlchemy/ 
>> psycopg2 (I guess because psycopg2 just waits for data and blocks  
>> the twisted reactor). So I put reactor.run() in a thread and it  
>> works, but I'm getting strange issues on some platforms (for  
>> example I can't connect at all on *some* OSX computers, getting a  
>> "reactor stopping" log from twisted without any further error), and  
>> I feel I'm doing the whole thing terribly wrong.
>
> These errors sound like you are making Twisted API calls from  
> threads other than the reactor thread by accident.  There's no  
> obvious fix except for "don't do that" :).
>
> My suggestion would be to move the SQLAlchemy/psycopg2 into threads,  
> with e.g. deferToThread, rather than putting the reactor into a  
> thread. Then the reactor won't freeze while the blocking SQL stuff  
> happens.
>> So my question is, how to do proper SSH port forwarding with conch  
>> in an application that also uses the tunnels not the asynchronous  
>> way ? If running the reactor in a thread is OK, are there  
>> particular things to watch out for ?
>
> There's no reason that running the reactor in a thread shouldn't  
> work; it's just generally tricky (especially if you're working with  
> an existing codebase) to completely avoid calling Twisted APIs from  
> other threads.

Just wanted to thank you, I isolated the Twisted part of my  
application using the 'multiprocessing' module, and all the weird  
issues are gone, it seems I was mixing threads somewhere ...

So executing the reactor in a child process was a good solution for my  
problem, no need to use deferToThread everywhere or to do tedious  
research about what is called from where.

Cheers,
Luper



From isahn74 at gmail.com  Thu Feb 19 06:49:54 2009
From: isahn74 at gmail.com (Michele -)
Date: Thu, 19 Feb 2009 11:49:54 +0000
Subject: [Twisted-Python] monitoring twisted services / processes
Message-ID: <539234cb0902190349q36ef3d6v4e38137be80f971@mail.gmail.com>

Hi,

background:

I'm currently working on a PoC with twisted, Python, to prove the
technology as an alternative to more
established enterprise choices (java app servers, etc..).

The idea is to build lightweight services to process atomic "chunks"
of business processes, that can scale
horizontally as much as needed proven that the common persistence
layer (a db) scales.
The idea is already working in a non python approach, so the attempt
is to prove that it's quicker and easier to maintain
if built with twisted/python.

So,
the question is: if I have N number of processes running in a M number
of machines, given that there are no network restriction,
and that at least http and hhtps are always available, how these
services would be efficiently monitored?

is there a twisted application/plugin/framework to do so? are you just
create 'polling' requests that an existing monitoring tool (i.e.
Nagios)
parses and interprets? How would you build a "console" to manage
services status?
In a nutshell, what I'm trying to find out if there is already around
a "container-like" twisted based application that can be used to
manage/monitor
twisted applications provided that they adhere to a given interface

Thanks for your help

Micc



From esteve at sindominio.net  Thu Feb 19 12:07:02 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 18:07:02 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
Message-ID: <200902191807.02663.esteve@sindominio.net>

Hi all, I'm using HTTPAuthSessionWrapper to wrap a portal, which uses our own 
checker against an internal service to authenticate users and I'm having 
trouble to pass extra information to sub resources.

I've read about the mind object and I think that's where all that information 
should go. However, HTTPAuthSessionWrapper passes None as its mind to 
portal.login, so I either have to override _login() or write a method that 
generates "minds" which can be overriden in subclasses to return something 
else than None. I prefer the latter, though.

Anyway, I could be mistaken and "mind" wouldn't be appropriate in this case, 
so I wanted to ask first here, since the mind argument seems to be rarely 
used.

Cheers.



From exarkun at divmod.com  Thu Feb 19 12:28:59 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 19 Feb 2009 12:28:59 -0500
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <200902191807.02663.esteve@sindominio.net>
Message-ID: <20090219172859.12853.2137347686.divmod.quotient.11860@henry.divmod.com>

On Thu, 19 Feb 2009 18:07:02 +0100, Esteve Fernandez <esteve at sindominio.net> wrote:
>Hi all, I'm using HTTPAuthSessionWrapper to wrap a portal, which uses our own
>checker against an internal service to authenticate users and I'm having
>trouble to pass extra information to sub resources.
>
>I've read about the mind object and I think that's where all that information
>should go. However, HTTPAuthSessionWrapper passes None as its mind to
>portal.login, so I either have to override _login() or write a method that
>generates "minds" which can be overriden in subclasses to return something
>else than None. I prefer the latter, though.
>
>Anyway, I could be mistaken and "mind" wouldn't be appropriate in this case,
>so I wanted to ask first here, since the mind argument seems to be rarely
>used.

What kind of "extra information" are you trying to pass?  Generally, all
information belongs with the avatar object.  The mind should be used to
interact with the protocol's notion of the user (as the avatar is used to
interact with the realm's notion of the user).

Jean-Paul



From esteve at sindominio.net  Thu Feb 19 12:47:37 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 18:47:37 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <20090219172859.12853.2137347686.divmod.quotient.11860@henry.divmod.com>
References: <20090219172859.12853.2137347686.divmod.quotient.11860@henry.divmod.com>
Message-ID: <200902191847.38057.esteve@sindominio.net>

On Thursday 19 February 2009 18:28:59 Jean-Paul Calderone wrote:
> What kind of "extra information" are you trying to pass?  Generally, all
> information belongs with the avatar object.  The mind should be used to
> interact with the protocol's notion of the user (as the avatar is used to
> interact with the realm's notion of the user).

Our checker generates a session per successful login, and all subsequent calls 
use that session to authenticate requests. The way I thought for using a mind 
is to create an empty object and populate it with the remote session object 
once the user has logged in successfully.

Is a mind the right place to put that session?

Cheers.



From esteve at sindominio.net  Thu Feb 19 12:55:58 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 18:55:58 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <200902191847.38057.esteve@sindominio.net>
References: <20090219172859.12853.2137347686.divmod.quotient.11860@henry.divmod.com>
	<200902191847.38057.esteve@sindominio.net>
Message-ID: <200902191855.58970.esteve@sindominio.net>

On Thursday 19 February 2009 18:47:37 Esteve Fernandez wrote:
> On Thursday 19 February 2009 18:28:59 Jean-Paul Calderone wrote:
> > What kind of "extra information" are you trying to pass?  Generally, all
> > information belongs with the avatar object.  The mind should be used to
> > interact with the protocol's notion of the user (as the avatar is used to
> > interact with the realm's notion of the user).
>
> Our checker generates a session per successful login, and all subsequent

Argh, I meant that the remote service *generates* the session and returns it 
if the user logged in successfully.

Cheers.



From exarkun at divmod.com  Thu Feb 19 12:57:29 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 19 Feb 2009 12:57:29 -0500
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <200902191847.38057.esteve@sindominio.net>
Message-ID: <20090219175729.12853.206443327.divmod.quotient.11866@henry.divmod.com>

On Thu, 19 Feb 2009 18:47:37 +0100, Esteve Fernandez <esteve at sindominio.net> wrote:
>On Thursday 19 February 2009 18:28:59 Jean-Paul Calderone wrote:
>> What kind of "extra information" are you trying to pass?  Generally, all
>> information belongs with the avatar object.  The mind should be used to
>> interact with the protocol's notion of the user (as the avatar is used to
>> interact with the realm's notion of the user).
>
>Our checker generates a session per successful login, and all subsequent calls
>use that session to authenticate requests. The way I thought for using a mind
>is to create an empty object and populate it with the remote session object
>once the user has logged in successfully.
>
>Is a mind the right place to put that session?

It doesn't seem like a good use of the mind to me.  I'd put the session
inside the avatar.  You may need a wider interface than IResource for
this, if you want to inspect the session from anywhere other than the
avatar itself (since the avatar's interface is IResource in this case),
or you may just want to use the session in order to implement getChild
and render appropriately.

For example, if a user is allowed to access /foo, then you might represent
that by including {'foo': True} in the session somehow.  Then, your can
have a getChild method which looks at that information if it is asked for
the "foo" child.  If 'foo' is not associated with True, you can reject the
request, otherwise you can process it.

You can also use multiple different avatar classes to represent this.
Instead of keeping a session and referring to it when deciding whether
a particular request is acceptable, you may want to have a FooAvatar and
a NoFooAvatar.  FooAvatar's getChild would always give back a resource
when asked for "foo", and NoFooAvatar never would.  The only checking would
be in your realm, where you decide what kind of avatar to give back from
requestAvatar.  This might imply that your realm is the right place to
keep your session data.

There are lots more possible approaches, of course, but these are two of
the most common.

Jean-Paul



From esteve at sindominio.net  Thu Feb 19 13:39:48 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 19:39:48 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <20090219175729.12853.206443327.divmod.quotient.11866@henry.divmod.com>
References: <20090219175729.12853.206443327.divmod.quotient.11866@henry.divmod.com>
Message-ID: <200902191939.48807.esteve@sindominio.net>

On Thursday 19 February 2009 18:57:29 Jean-Paul Calderone wrote:
> On Thu, 19 Feb 2009 18:47:37 +0100, Esteve Fernandez <esteve at sindominio.net> 
wrote:
> >On Thursday 19 February 2009 18:28:59 Jean-Paul Calderone wrote:
> >> What kind of "extra information" are you trying to pass?  Generally, all
> >> information belongs with the avatar object.  The mind should be used to
> >> interact with the protocol's notion of the user (as the avatar is used
> >> to interact with the realm's notion of the user).
> >
> >Our checker generates a session per successful login, and all subsequent
> > calls use that session to authenticate requests. The way I thought for
> > using a mind is to create an empty object and populate it with the remote
> > session object once the user has logged in successfully.
> >
> >Is a mind the right place to put that session?
>
> It doesn't seem like a good use of the mind to me.  I'd put the session
> inside the avatar.  You may need a wider interface than IResource for
> this, if you want to inspect the session from anywhere other than the
> avatar itself (since the avatar's interface is IResource in this case),
> or you may just want to use the session in order to implement getChild
> and render appropriately.

But, in our case, requestAvatar can only return something based on what the 
checker returns. I mean, requestAvatar receives an avatarId (as a result of 
Checker#requestAvatarId), a mind and a bunch of interfaces, but the realm 
doesn't have any other information.

What our checker does to authenticate an user, is to call a method on a remote 
service and get back an object (a token) that represents the state of a 
conversation between a client and that remote service. Then, the client may 
issue more remote calls using the previously received token.

We're using Twisted.web only as a front end to a remote service, and we'd like 
to make it as decoupled as possible, as there will be other frontends.

I tried to mimic PB's behaviour, in the sense that (as the cred documentation 
puts out):

"it is an object which serves an important role - any notifications which are 
to be relayed to an authenticated client are passed through a 'mind'. In 
addition, it allows passing more information to the realm during login in 
addition to the avatar ID."

Actually, our resources are pretty dumb, as they only issue remote calls to an 
external service and don't hold any information. And, since our realm can't 
figure out whether a user can issue a particular call or not without actually 
sending a token to the remote service, a mind object seemed the right place 
to me... but I'd happy to be wrong :-)

Anyway, sorry if I sound as if I'm trying to get a positive opinion for a 
decision we already made :-P it's just that I don't see how the other options 
would completely fit our architecture (which could be broken in the first 
case, of course).

Cheers.



From exarkun at divmod.com  Thu Feb 19 13:46:59 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 19 Feb 2009 13:46:59 -0500
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <200902191939.48807.esteve@sindominio.net>
Message-ID: <20090219184659.12853.303297799.divmod.quotient.11872@henry.divmod.com>

On Thu, 19 Feb 2009 19:39:48 +0100, Esteve Fernandez <esteve at sindominio.net> wrote:
>On Thursday 19 February 2009 18:57:29 Jean-Paul Calderone wrote:
>> On Thu, 19 Feb 2009 18:47:37 +0100, Esteve Fernandez <esteve at sindominio.net>
>wrote:
>> >On Thursday 19 February 2009 18:28:59 Jean-Paul Calderone wrote:
>> >> What kind of "extra information" are you trying to pass?  Generally, all
>> >> information belongs with the avatar object.  The mind should be used to
>> >> interact with the protocol's notion of the user (as the avatar is used
>> >> to interact with the realm's notion of the user).
>> >
>> >Our checker generates a session per successful login, and all subsequent
>> > calls use that session to authenticate requests. The way I thought for
>> > using a mind is to create an empty object and populate it with the remote
>> > session object once the user has logged in successfully.
>> >
>> >Is a mind the right place to put that session?
>>
>> It doesn't seem like a good use of the mind to me.  I'd put the session
>> inside the avatar.  You may need a wider interface than IResource for
>> this, if you want to inspect the session from anywhere other than the
>> avatar itself (since the avatar's interface is IResource in this case),
>> or you may just want to use the session in order to implement getChild
>> and render appropriately.
>
>But, in our case, requestAvatar can only return something based on what the
>checker returns. I mean, requestAvatar receives an avatarId (as a result of
>Checker#requestAvatarId), a mind and a bunch of interfaces, but the realm
>doesn't have any other information.
>
>What our checker does to authenticate an user, is to call a method on a remote
>service and get back an object (a token) that represents the state of a
>conversation between a client and that remote service. Then, the client may
>issue more remote calls using the previously received token.
>
>We're using Twisted.web only as a front end to a remote service, and we'd like
>to make it as decoupled as possible, as there will be other frontends.

What if you use the token as the avatarId?

>
>I tried to mimic PB's behaviour, in the sense that (as the cred documentation
>puts out):
>
>"it is an object which serves an important role - any notifications which are
>to be relayed to an authenticated client are passed through a 'mind'. In
>addition, it allows passing more information to the realm during login in
>addition to the avatar ID."

This is technically true but as far as I know no one has ever actually used
it that way.  I'm trying to think of an authentication scheme which would
benefit from it (let alone require it), but I'm drawing a blank.  PB just
has enough expressive power already to really need this.

>
>Actually, our resources are pretty dumb, as they only issue remote calls to an
>external service and don't hold any information. And, since our realm can't
>figure out whether a user can issue a particular call or not without actually
>sending a token to the remote service, a mind object seemed the right place
>to me... but I'd happy to be wrong :-)
>
>Anyway, sorry if I sound as if I'm trying to get a positive opinion for a
>decision we already made :-P it's just that I don't see how the other options
>would completely fit our architecture (which could be broken in the first
>case, of course).

No problem.  Hope this has helped in some way, at least.

Jean-Paul



From esteve at sindominio.net  Thu Feb 19 14:22:30 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 20:22:30 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <20090219184659.12853.303297799.divmod.quotient.11872@henry.divmod.com>
References: <20090219184659.12853.303297799.divmod.quotient.11872@henry.divmod.com>
Message-ID: <200902192022.30377.esteve@sindominio.net>

On Thursday 19 February 2009 19:46:59 Jean-Paul Calderone wrote:
> >But, in our case, requestAvatar can only return something based on what
> > the checker returns. I mean, requestAvatar receives an avatarId (as a
> > result of Checker#requestAvatarId), a mind and a bunch of interfaces, but
> > the realm doesn't have any other information.
> >
> >What our checker does to authenticate an user, is to call a method on a
> > remote service and get back an object (a token) that represents the state
> > of a conversation between a client and that remote service. Then, the
> > client may issue more remote calls using the previously received token.
> >
> >We're using Twisted.web only as a front end to a remote service, and we'd
> > like to make it as decoupled as possible, as there will be other
> > frontends.
>
> What if you use the token as the avatarId?

But the general contract for requestAvatarId is to return a string identifying 
the user. From ICredentialsChecker#requestAvatarId documentation:

"Returns - a Deferred which will fire a string which identifies an avatar, an 
empty tuple to specify an authenticated anonymous user (provided as 
checkers.ANONYMOUS) or fire a Failure(UnauthorizedLogin). Alternatively, 
return the result itself."

If so, our problem is that the token is an object that contains more 
information (a timestamp, a cryptographic signature, etc.), so serializing 
and deserializing it everytime we need that information is a bit cumbersome. 
The remote service checks that token everytime it receives a call, and 
responds with an appropiate response.

> >I tried to mimic PB's behaviour, in the sense that (as the cred
> > documentation puts out):
> >
> >"it is an object which serves an important role - any notifications which
> > are to be relayed to an authenticated client are passed through a 'mind'.
> > In addition, it allows passing more information to the realm during login
> > in addition to the avatar ID."
>
> This is technically true but as far as I know no one has ever actually used
> it that way.  I'm trying to think of an authentication scheme which would
> benefit from it (let alone require it), but I'm drawing a blank.  PB just
> has enough expressive power already to really need this.

In that case, (although we might not actually need a mind in the end), would 
PB have the same problem with HTTPAuthSessionWrapper? The mind argument is 
always None (in HTTPAuthSessionWrapper#_login):

    def _login(self, credentials):
        d = self._portal.login(credentials, None, IResource)
        d.addCallbacks(self._loginSucceeded, self._loginFailed)
        return d

So, I think HTTPAuthSessionWrapper should have a method (e.g. 
createMind(self)), which would return None by default and that could be 
overridden by subclasses if they need to return something else. I'll gladly 
file an issue, provide a patch and a test case, if you think it's a valid 
issue.

> No problem.  Hope this has helped in some way, at least.

Thanks!



From exarkun at divmod.com  Thu Feb 19 14:59:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 19 Feb 2009 14:59:19 -0500
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <200902192022.30377.esteve@sindominio.net>
Message-ID: <20090219195919.12853.1845224976.divmod.quotient.11884@henry.divmod.com>

On Thu, 19 Feb 2009 20:22:30 +0100, Esteve Fernandez <esteve at sindominio.net> wrote:
>On Thursday 19 February 2009 19:46:59 Jean-Paul Calderone wrote:
>> >But, in our case, requestAvatar can only return something based on what
>> > the checker returns. I mean, requestAvatar receives an avatarId (as a
>> > result of Checker#requestAvatarId), a mind and a bunch of interfaces, but
>> > the realm doesn't have any other information.
>> >
>> >What our checker does to authenticate an user, is to call a method on a
>> > remote service and get back an object (a token) that represents the state
>> > of a conversation between a client and that remote service. Then, the
>> > client may issue more remote calls using the previously received token.
>> >
>> >We're using Twisted.web only as a front end to a remote service, and we'd
>> > like to make it as decoupled as possible, as there will be other
>> > frontends.
>>
>> What if you use the token as the avatarId?
>
>But the general contract for requestAvatarId is to return a string identifying
>the user. From ICredentialsChecker#requestAvatarId documentation:
>
>"Returns - a Deferred which will fire a string which identifies an avatar, an
>empty tuple to specify an authenticated anonymous user (provided as
>checkers.ANONYMOUS) or fire a Failure(UnauthorizedLogin). Alternatively,
>return the result itself."
>
>If so, our problem is that the token is an object that contains more
>information (a timestamp, a cryptographic signature, etc.), so serializing
>and deserializing it everytime we need that information is a bit cumbersome.
>The remote service checks that token everytime it receives a call, and
>responds with an appropiate response.

The convention is for avatarId to be a string, but as the anonymous case
indicates, that's not strictly required. :)  The real requirement is that
the realm be able to interpret the avatarId.  The way this generally works
is by making it a username string, but you're in charge of the realm, so it
can be whatever you like.  Of course, this makes it harder to re-use either
your checker or your realm with different components, but sometimes that's
okay.  It might be nice if this were explained in some document somewhere
but I don't think the current cred document should cover it, since going
into complex and subtle points like this tends to make it harder to get
the basic idea.  An advanced cred howto of some sort might be merited.

>> >I tried to mimic PB's behaviour, in the sense that (as the cred
>> > documentation puts out):
>> >
>> >"it is an object which serves an important role - any notifications which
>> > are to be relayed to an authenticated client are passed through a 'mind'.
>> > In addition, it allows passing more information to the realm during login
>> > in addition to the avatar ID."
>>
>> This is technically true but as far as I know no one has ever actually used
>> it that way.  I'm trying to think of an authentication scheme which would
>> benefit from it (let alone require it), but I'm drawing a blank.  PB just
>> has enough expressive power already to really need this.
>
>In that case, (although we might not actually need a mind in the end), would
>PB have the same problem with HTTPAuthSessionWrapper? The mind argument is
>always None (in HTTPAuthSessionWrapper#_login):

I'm not quite sure what you mean here - how should I equate PB and
HTTPAuthSessionWrapper?

>    def _login(self, credentials):
>        d = self._portal.login(credentials, None, IResource)
>        d.addCallbacks(self._loginSucceeded, self._loginFailed)
>        return d
>
>So, I think HTTPAuthSessionWrapper should have a method (e.g.
>createMind(self)), which would return None by default and that could be
>overridden by subclasses if they need to return something else. I'll gladly
>file an issue, provide a patch and a test case, if you think it's a valid
>issue.

It probably *is* a good idea to allow the mind to be created somehow.  It
was only omitted because no obvious use-cases presented themselves at the
time.  I'm still not really convinced that this use case is a good one
though, so I'm not sure I'd be in favor of adding the hook now in order
to support this. ;)

In general, the mind feature of cred is underutilized, underdocumented,
and poorly understood.  Fixing these problems is great, but it may also
be the case that the mind is such an obscure use-case that most people
really just don't care about it.

Jean-Paul



From esteve at sindominio.net  Thu Feb 19 16:35:48 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 22:35:48 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <20090219195919.12853.1845224976.divmod.quotient.11884@henry.divmod.com>
References: <20090219195919.12853.1845224976.divmod.quotient.11884@henry.divmod.com>
Message-ID: <200902192235.48615.esteve@sindominio.net>

On Thursday 19 February 2009 20:59:19 Jean-Paul Calderone wrote:
> The convention is for avatarId to be a string, but as the anonymous case
> indicates, that's not strictly required. :)  The real requirement is that
> the realm be able to interpret the avatarId.  The way this generally works

Heh, want to hear a funny thing? That's what my current code already did :-) I 
was porting this chunk of code from Web2 to Web and while re-reading the cred 
documentation, I noticed that little bit about returning a string. So, if 
it's kosher to use the avatarId in some other way, I'm happy not having to 
tinker with minds.

> I'm not quite sure what you mean here - how should I equate PB and
> HTTPAuthSessionWrapper?

I'm probably wrong, but if I had to wrap a mind-aware portal (as it's the case 
of PB), I think I would have trouble with it. Anyway, I'm a PB noob, so I'm 
sure I'm mistaken.

> It probably *is* a good idea to allow the mind to be created somehow.  It
> was only omitted because no obvious use-cases presented themselves at the
> time.  I'm still not really convinced that this use case is a good one
> though, so I'm not sure I'd be in favor of adding the hook now in order
> to support this. ;)

:-)

However, I still think it's a problem (although I must agree that it would 
probably be rarely used), since the only way to create a mind is to override 
the entire method, which is a bit cumbersome. But, as you said, minds are so 
obscure, that probably nobody would ever notice it.

Cheers.



From chris.yan at saybot.com  Fri Feb 20 05:08:24 2009
From: chris.yan at saybot.com (Chris)
Date: Fri, 20 Feb 2009 18:08:24 +0800
Subject: [Twisted-Python] How to use ampoule?
Message-ID: <499E8118.7000303@saybot.com>

Hi everyone,
I am using twisted to build a server,and the computing request maybe
costs lot of cpu resources.I have checked the maillist,it seems I can
use ampoule plugin to create another process ,I have checked the
website,and downloaded the source code.It seems there is no any document
for it.I did find a example dir,after checking the code,I was
confused.There should be two files,one for client and one for server,am
I right?the client will send the request to the server(could be in
another machine?),and the server responses.but I can't find anything
which matches what I thought.Can anyone explain a little bit to me?Or if
there is some code that would be better.
And the twisted server will receive lot of binary data from the
client,if I use ampoule,I have to send the same data to the ampoule
server again(now the twisted server acts as the ampoule client).Is the
ampoule suitable for such a kind of task? Or I should just use twisted
process module?
I don't know my understanding is correct or not,please correct me.

Best Wishes
Chris




From luper.rouch at gmail.com  Fri Feb 20 13:56:54 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Fri, 20 Feb 2009 19:56:54 +0100
Subject: [Twisted-Python] Debugging Twisted
Message-ID: <499EFCF6.3060807@gmail.com>

I would like to investigate on the conch error I mentionned in my 
previous message ("KeyError when an errback is triggered within a conch 
TCP tunnel").

My problem is Twisted catches the exceptions and the debugger won't stop 
on them, how could I avoid that ? Is there a "debug" reactor ?



From exarkun at divmod.com  Fri Feb 20 14:04:55 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 20 Feb 2009 14:04:55 -0500
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <499EFCF6.3060807@gmail.com>
Message-ID: <20090220190455.12853.1519432547.divmod.quotient.12188@henry.divmod.com>

On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch <luper.rouch at gmail.com> wrote:
>I would like to investigate on the conch error I mentionned in my previous 
>message ("KeyError when an errback is triggered within a conch TCP tunnel").
>
>My problem is Twisted catches the exceptions and the debugger won't stop on 
>them, how could I avoid that ? Is there a "debug" reactor ?

Try the --debug option to twistd.

Jean-Paul



From ellisonbg.net at gmail.com  Fri Feb 20 14:11:24 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 20 Feb 2009 11:11:24 -0800
Subject: [Twisted-Python] Twisted slow in Mac OS X fast on Windows
Message-ID: <6ce0ac130902201111u6063d100j891a04f73d99db0b@mail.gmail.com>

Hi,

We use Twisted extensively in the IPython project for parallel and
distributed computing.  We have an extensive test suite that uses
trial to test our servers and clients.  Everything works
great...but...the test suite takes much longer to run on OS X than
windows.  Here is what I mean:

1.  2.53 Ghz Intel Core 2 Duo, Mac OS X 10.5.  Test suite takes 67 seconds

2.  *Same machine*, running Windows XP as VM in VMWare.  Test suite
takes 17 seconds.

I have verified that all the tests are being run on Windows.  This is
very surprising to me as I would expect, if anything, the Windows VM
to be a bit slower, not 3x faster.  This is the same hardware, the
same code, the only thing that I can think of that is different is the
reactor implementation.  I am using the default reactor on both
platforms.

Questions:

* Is the Windows reactor really that fast?
* Is the default (I think it is select) reactor on OS X really that slow?
* Why else would it be that slow on OS X?
* What can I do to speed this up?

Cheers,

Brian



From luper.rouch at gmail.com  Fri Feb 20 14:15:02 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Fri, 20 Feb 2009 20:15:02 +0100
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <20090220190455.12853.1519432547.divmod.quotient.12188@henry.divmod.com>
References: <20090220190455.12853.1519432547.divmod.quotient.12188@henry.divmod.com>
Message-ID: <499F0136.1010907@gmail.com>

Jean-Paul Calderone wrote :
> On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch <luper.rouch at gmail.com> 
> wrote:
>> I would like to investigate on the conch error I mentionned in my 
>> previous message ("KeyError when an errback is triggered within a 
>> conch TCP tunnel").
>>
>> My problem is Twisted catches the exceptions and the debugger won't 
>> stop on them, how could I avoid that ? Is there a "debug" reactor ?
> 
> Try the --debug option to twistd.
> 
> Jean-Paul
> 

My application is a client, how can I run it with twistd ?



From exarkun at divmod.com  Fri Feb 20 14:19:06 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 20 Feb 2009 14:19:06 -0500
Subject: [Twisted-Python] Twisted slow in Mac OS X fast on Windows
In-Reply-To: <6ce0ac130902201111u6063d100j891a04f73d99db0b@mail.gmail.com>
Message-ID: <20090220191906.12853.608668455.divmod.quotient.12193@henry.divmod.com>

On Fri, 20 Feb 2009 11:11:24 -0800, Brian Granger <ellisonbg.net at gmail.com> wrote:
>Hi,
>
>We use Twisted extensively in the IPython project for parallel and
>distributed computing.  We have an extensive test suite that uses
>trial to test our servers and clients.  Everything works
>great...but...the test suite takes much longer to run on OS X than
>windows.  Here is what I mean:
>
>1.  2.53 Ghz Intel Core 2 Duo, Mac OS X 10.5.  Test suite takes 67 seconds
>
>2.  *Same machine*, running Windows XP as VM in VMWare.  Test suite
>takes 17 seconds.
>
>I have verified that all the tests are being run on Windows.  This is
>very surprising to me as I would expect, if anything, the Windows VM
>to be a bit slower, not 3x faster.  This is the same hardware, the
>same code, the only thing that I can think of that is different is the
>reactor implementation.  I am using the default reactor on both
>platforms.
>
>Questions:
>
>* Is the Windows reactor really that fast?

Probably not.  But it depends what your test suite does.

>* Is the default (I think it is select) reactor on OS X really that slow?

Probably not.  But it depends what your test suite does.

>* Why else would it be that slow on OS X?
>* What can I do to speed this up?

The only thing that comes to mind is that some hostname lookup functions
used to be pretty slow on OS X.  I have no idea if this is still the case.
I suggest profiling the suite on OS X and Windows and comparing the results
to get a better idea of where to look for the problem.

Jean-Paul



From exarkun at divmod.com  Fri Feb 20 14:25:24 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 20 Feb 2009 14:25:24 -0500
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <499F0136.1010907@gmail.com>
Message-ID: <20090220192524.12853.1039011078.divmod.quotient.12197@henry.divmod.com>

On Fri, 20 Feb 2009 20:15:02 +0100, Luper Rouch <luper.rouch at gmail.com> wrote:
>Jean-Paul Calderone wrote :
>>On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch <luper.rouch at gmail.com> 
>>wrote:
>>>I would like to investigate on the conch error I mentionned in my previous 
>>>message ("KeyError when an errback is triggered within a conch TCP 
>>>tunnel").
>>>
>>>My problem is Twisted catches the exceptions and the debugger won't stop 
>>>on them, how could I avoid that ? Is there a "debug" reactor ?
>>
>>Try the --debug option to twistd.
>>
>>Jean-Paul
>
>My application is a client, how can I run it with twistd ?

See http://twistedmatrix.com/projects/core/documentation/howto/tap.html

Jean-Paul



From exarkun at divmod.com  Fri Feb 20 17:35:36 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 20 Feb 2009 17:35:36 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>
Message-ID: <20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>

On Thu, 5 Feb 2009 16:56:51 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>On Mon, 26 Jan 2009 18:10:32 -0500, Jean-Paul Calderone <exarkun at divmod.com> 
>wrote:
>>Hello All,
>>
>>I'd like to organize another Twisted sprint in Cambridge, MA in February.
>>As with previous sprints, this is an all day event, most likely hosted at
>>the Divmod office in Porter Square, for Twisted hacking.  The two topics
>>which have been raised thus far for this sprint are documentation - in
>>particular, looking at Twisted documentation from a high-level and coming
>>up with a coherent overall strategy for improving it - and deprecation
>>(looking for old, bad APIs in Twisted which we should get rid of).  Of
>>course, other topics are welcome as well.
>
>The sprint will be held on February 22nd.  All are welcome.  If you need
>details on how to get to the sprint, please contact me off-list.
>

Just a reminder, the sprint is this Sunday.  If you don't come, Twisted
will be sad.

Jean-Paul



From dialtone at gmail.com  Fri Feb 20 18:07:58 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Fri, 20 Feb 2009 15:07:58 -0800
Subject: [Twisted-Python] How to use ampoule?
In-Reply-To: <499E8118.7000303@saybot.com>
References: <499E8118.7000303@saybot.com>
Message-ID: <B8CD398A-F138-4F77-A9E9-A0B073A34EEE@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Feb 20, 2009, at 2:08 AM, Chris wrote:

> Hi everyone,
> I am using twisted to build a server,and the computing request maybe
> costs lot of cpu resources.I have checked the maillist,it seems I can
> use ampoule plugin to create another process ,I have checked the
> website,and downloaded the source code.It seems there is no any  
> document
> for it.I did find a example dir,after checking the code,I was
> confused.There should be two files,one for client and one for  
> server,am
> I right?the client will send the request to the server(could be in
> another machine?),and the server responses.but I can't find anything
> which matches what I thought.Can anyone explain a little bit to me? 
> Or if
> there is some code that would be better.

I don't have much time to write documentation, I basically spend most of
the time in documenting the code itself, in testing it and I attached  
some of
the examples that one can use to learn the basics by himself but...

You don't need 2 files, you need the code you want to run on both sides
of the connection, Ampoule doesn't support shipping functions, although
one might implement it on top of what ampoule offers, albeit not  
recommended.

AMPoule uses AMP as a communication protocol between the caller and the
process pool, this means that they talk to each other using  
twisted.protocols.amp
and that for the abstraction sake they work as 2 separate networked  
services
that make RPC calls to each other. Again this also means that in order  
to
develop a process pool you will use AMP abstractions and classes on top
of what AMPoule offers by default.

Let's look at the simplest example: examples/pid.py

What you need is a set of commands that a child process should be able
to answer to, in pid.py this set is made of just a single command and  
that
is:

from twisted.protocols import amp

class Pid(amp.Command):
     response = [("pid", amp.Integer())]

Once you define a command that you want to be able to run in a process
pool you need to define a child process that is able to answer to the  
Pid
command. Defining this also defines what every worker in the process
pool will be able to answer to.

In the example this is done with the following lines:

from ampoule import child

class MyChild(child.AMPChild):
     @Pid.responder
     def pid(self):
         import os
         return {"pid": os.getpid()}

We define a child of the process pool called MyChild and using AMP
machinery we set the method pid as the responder for the command
Pid. Unsurprisingly this command gets the pid and returns it.

Now we need to run this code and use it. So far we have defined
the server (ProcessPool) side of things.

[NOTE: In order to run everything in a single file using "python  
filename.py"
to start it we need to hack around python's import system, this is why
util.mainpoint exist, only to allow the script to import itself,  
you'll notice
that a script's name when started with "python filename.py" is not
filename but __main__.]

Here's the code

@util.mainpoint
def main(args):
     import sys
     from twisted.internet import reactor, defer
     from twisted.python import log
     log.startLogging(sys.stdout)

     from ampoule import pool

     @defer.inlineCallbacks
     def _run():
         pp = pool.ProcessPool(MyChild, min=1, max=1)
         yield pp.start()
         result = yield pp.doWork(Pid)
         print "The Child process PID is:", result['pid']
         yield pp.stop()
         reactor.stop()

     reactor.callLater(1, _run)
     reactor.run()

Besides all the standard twisted imports and 'boilerplate' code
the core of the client is inside the _run function.

It creates the process pool telling it to use MyChild as a specification
for its children, we also tell it that the minimum size of the pool is 1
as well as the maximum size of the pool. Then the code proceeds
to start it and once it's tarted we can submit commands and this is
done with:

result = yield pp.doWork(Pid)

or

result = yield pp.callRemote(Pid)

The script then prints the result, stops the pool and exits.

Strictly speaking the client of the process pool only needs to know
the commands that he wants to execute, and which pool (if there
is more than one) can execute it.

This however is only true when the server is started separately from
the client using "twistd ampoule" plugin. If your clients starts the
pool by itself it needs to know also the class that defines the children
protocol.

The twistd ampoule plugin does nothing more than taking a child and
parent class (the parent class defines what the master of the process
pool can speak so that children can make calls against it if needed)
and using some hacks exposes the same exact interface across the
network using the parameters that you pass in the cli.

> And the twisted server will receive lot of binary data from the
> client,if I use ampoule,I have to send the same data to the ampoule
> server again(now the twisted server acts as the ampoule client).Is the

Correct. I don't see any other way to do this except maybe if you have
a distributed filesystem, in which case you might want to just save
the data on the server and then make the right calls on the remote
pools that have access to this distributed filesystem so that they can
process the shards that they have access to.

> ampoule suitable for such a kind of task? Or I should just use twisted
> process module?

Using the process module is not really different, the only issue you
might find is related to the limit imposed by AMP of 64KB of data
that can be transmitted in a single call to a given child. So for  
example

pool.callRemote(Command, argument="I'm a bit string of more than 64KB")

won't work but:

pool.callRemote(Command, argument="I'm a bit string of LESS than 64KB")

will. There are multiple ways in which you can solve this issue but  
essentially
I wouldn't use ampoule to transport big quantities of data, you'd  
better use
a distributed filesystem or actually an http server where you store data
from the server and each worker grabs data from.

> I don't know my understanding is correct or not,please correct me.


It seems you got it right.

HTH

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkmfN88ACgkQ9Llz28widGXE9ACgk2OAlXK0cVP5/5tINoFAD70C
Zc8Anig2L8GCNklG83a6la4x/hksFozW
=SS7Z
-----END PGP SIGNATURE-----



From glyph at divmod.com  Fri Feb 20 18:50:42 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 20 Feb 2009 23:50:42 -0000
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>
References: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>
	<20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>
Message-ID: <20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>


On 10:35 pm, exarkun at divmod.com wrote:
>Just a reminder, the sprint is this Sunday.  If you don't come, Twisted
>will be sad.

The sprint will officially begin at 10AM, and continue until nobody is 
interested in continuing.  Typically, this ends up being 6-7PM, at which 
point we adjourn to a local restaurant for dinner.

However, regardless of official timing, if you're coming, please drop a 
message in response so we can expect you and let you in when you show 
up!  Sometimes the sprint has been known to wander off for lunch and 
leave latecomers literally out in the cold.

If you can't make it to Massachusetts, please feel free to join in on 
the #twisted IRC channel on chat.freenode.net and sprint with us 
virtually.

I'll be coming.  See you there!



From jml at mumak.net  Fri Feb 20 18:45:11 2009
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 21 Feb 2009 10:45:11 +1100
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
References: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>
	<20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>
	<20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
Message-ID: <d06a5cd30902201545r21c05395pa6d42cd44d2b9183@mail.gmail.com>

On Sat, Feb 21, 2009 at 10:50 AM,  <glyph at divmod.com> wrote:
> If you can't make it to Massachusetts, please feel free to join in on the
> #twisted IRC channel on chat.freenode.net and sprint with us virtually.
>
> I'll be coming.  See you there!

Have fun guys!

The sprint starts 2AM Monday morning my time, so I won't be attended
virtually or otherwise.

jml



From ellisonbg.net at gmail.com  Fri Feb 20 18:44:59 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 20 Feb 2009 15:44:59 -0800
Subject: [Twisted-Python] Twisted slow in Mac OS X fast on Windows
In-Reply-To: <20090220191906.12853.608668455.divmod.quotient.12193@henry.divmod.com>
References: <6ce0ac130902201111u6063d100j891a04f73d99db0b@mail.gmail.com>
	<20090220191906.12853.608668455.divmod.quotient.12193@henry.divmod.com>
Message-ID: <6ce0ac130902201544p6f37feb8y6cdc7bc4fd9cf19e@mail.gmail.com>

Hi,

I think it may just be the built-in Python on Leopard:

On OS X:

In [1]: def f():
   ...:     for i in range(100000):
   ...:         a = 1 + i
In [2]: %timeit f()
100 loops, best of 3: 11.8 ms per loop

Same hardware, but Windows:

In [1]: def f():
   ...:     for i in range(100000):
   ...:         a = 1 + i
In [2]: %timeit f()
100 loops, best of 3: 8.33 ms per loop

That's depressing...

Cheers,

Brian


On Fri, Feb 20, 2009 at 11:19 AM, Jean-Paul Calderone
<exarkun at divmod.com> wrote:
> On Fri, 20 Feb 2009 11:11:24 -0800, Brian Granger <ellisonbg.net at gmail.com>
> wrote:
>>
>> Hi,
>>
>> We use Twisted extensively in the IPython project for parallel and
>> distributed computing.  We have an extensive test suite that uses
>> trial to test our servers and clients.  Everything works
>> great...but...the test suite takes much longer to run on OS X than
>> windows.  Here is what I mean:
>>
>> 1.  2.53 Ghz Intel Core 2 Duo, Mac OS X 10.5.  Test suite takes 67 seconds
>>
>> 2.  *Same machine*, running Windows XP as VM in VMWare.  Test suite
>> takes 17 seconds.
>>
>> I have verified that all the tests are being run on Windows.  This is
>> very surprising to me as I would expect, if anything, the Windows VM
>> to be a bit slower, not 3x faster.  This is the same hardware, the
>> same code, the only thing that I can think of that is different is the
>> reactor implementation.  I am using the default reactor on both
>> platforms.
>>
>> Questions:
>>
>> * Is the Windows reactor really that fast?
>
> Probably not.  But it depends what your test suite does.
>
>> * Is the default (I think it is select) reactor on OS X really that slow?
>
> Probably not.  But it depends what your test suite does.
>
>> * Why else would it be that slow on OS X?
>> * What can I do to speed this up?
>
> The only thing that comes to mind is that some hostname lookup functions
> used to be pretty slow on OS X.  I have no idea if this is still the case.
> I suggest profiling the suite on OS X and Windows and comparing the results
> to get a better idea of where to look for the problem.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at twistedmatrix.com  Fri Feb 20 19:15:10 2009
From: exarkun at twistedmatrix.com (exarkun)
Date: Sat, 21 Feb 2009 05:35:10 0480
Subject: [Twisted-Python] 123912652  C-A-N-A-D-l-A-N   P-H-A-R-M-A-C-Y
Message-ID: <05da01c993a3$1b34fea0$834e4a42@pc_user>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090221/3d3ed135/attachment.htm 
-------------- next part --------------
About this mailing:
You are receiving this e-mail because you subscribed to MSN Featured Offers. Microsoft respects your privacy. If you do not wish to receive this MSN Featured Offers e-mail, please click the "Unsubscribe" link below. This will not unsubscribe you from e-mail communications from third-party advertisers that may appear in MSN Feature Offers. This shall not constitute an offer by MSN. MSN shall not be responsible or liable for the advertisers' content nor any of the goods or service advertised. Prices and item availability subject to change without notice.

?2009 Microsoft | Unsubscribe at http://wonnucul.cn | More news at http://wonnucul.cn | Prvacy at http://wonnucul.cn
Microsoft Corporation, One Microsoft Way, Redmond, WA 98052

From radix at twistedmatrix.com  Sat Feb 21 04:37:31 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 21 Feb 2009 09:37:31 +0000
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
References: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>
	<20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>
	<20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
Message-ID: <60ed19d40902210137u4bd2a2e4me3b2db112bb257c7@mail.gmail.com>

On Fri, Feb 20, 2009 at 11:50 PM,  <glyph at divmod.com> wrote:
>
> On 10:35 pm, exarkun at divmod.com wrote:
>>
>> Just a reminder, the sprint is this Sunday.  If you don't come, Twisted
>> will be sad.
> However, regardless of official timing, if you're coming, please drop a
> message in response so we can expect you and let you in when you show up!

I'll be back in Boston some time in the next twelve hours. Assuming
I'm not completely zonked from jetlag, I'll be there on Sunday.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From paulswartz at gmail.com  Sat Feb 21 11:49:59 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Sat, 21 Feb 2009 11:49:59 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
References: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>
	<20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>
	<20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
Message-ID: <324cfb540902210849i4c4333f6l86f55bcdc8ac93d7@mail.gmail.com>

On Fri, Feb 20, 2009 at 6:50 PM,  <glyph at divmod.com> wrote:
>
> On 10:35 pm, exarkun at divmod.com wrote:
>>
>> Just a reminder, the sprint is this Sunday.  If you don't come, Twisted
>> will be sad.
>
> The sprint will officially begin at 10AM, and continue until nobody is
> interested in continuing.  Typically, this ends up being 6-7PM, at which
> point we adjourn to a local restaurant for dinner.
>
> However, regardless of official timing, if you're coming, please drop a
> message in response so we can expect you and let you in when you show up!
>  Sometimes the sprint has been known to wander off for lunch and leave
> latecomers literally out in the cold.

I'll be there, time depending on when I wake up Sunday morning.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin



From terry at jon.es  Sat Feb 21 22:41:12 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 22 Feb 2009 04:41:12 +0100
Subject: [Twisted-Python] What to do when a service fails to start, also, 
	deferred and startService
In-Reply-To: Your message at 08:20:32 on Sunday, 21 December 2008
References: <18734.54780.97710.644648@jon.es>
	<20081128140217.12555.360367893.divmod.xquotient.628@weber.divmod.com>
	<18736.4217.759501.381840@jon.es>
	<20081221082032.12555.570369233.divmod.xquotient.2379@weber.divmod.com>
Message-ID: <18848.51544.210828.667334@jon.es>

Hi again Glyph

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> On 28 Nov, 03:38 pm, terry at jon.es wrote:
>> Thanks for the detailed reply.

glyph> No problem, sorry it took so long to get back to this; I definitely
glyph> left the conversation halfway through.

And this followup is even slower, sorry.  Here's a summary of the
conversation I'd like to continue:

>> So in my case I want to indicate to twistd that the service that my
>> class creates a makeService method to create, but which I do not set in
>> motion, has failed to start and that twistd should exit, or do something
>> other than cheerfully tell me that there's been an Unhandled Error.

>> Does that make more sense? Sorry, I should have said I was using 
>> twistd.

glyph> Yes.  And I think that this is a good use-case for making IService a
glyph> bit deeper than it is.

glyph> My previous messages were basically saying "you can't do what you
glyph> want with IService".  i.e. you can't write your own code to do
glyph> something clever and somehow have dependencies and notifications to
glyph> users of "twistd" fall out of that.  But that shouldn't be taken as
glyph> an indication that twistd itself shouldn't be improved.

glyph> It's not that you've failed to understand something - you have
glyph> correctly identified that there is nothing to understand :).  You
glyph> need to go find that thing ("whatever it is" ;-)) in twistd that's
glyph> invoking the very first call to IService.startService (and
glyph> privilegedStartService as well) and propose a concrete way to make
glyph> it smarter.

OK, here's a concrete proposal. Let's forget about twistd for the time
being and just address the central things I'm trying to do:

  1. I want a service to be able to initialize itself using code that
  receives deferreds. Right now, startService is not expected to return
  anything. I can go ahead and call a deferred-returning function in
  startService but I wont know that it's done unless I set a flag somewhere
  in a callback, and the rest of the methods in my service have to check
  that flag to see if the initialization is complete. In case it's not
  clear, I'm imagining the case of a MultiService, one Service of which
  performs the start and stop for the overall service.

  2. Because the other Services in the MultiService depend on the
  successful execution of the initialization, I'd rather they didn't get
  started at all if the initialization fails.

  3. It would be nice to get my hands on a deferred that had errbacked as a
  result of an unsuccessful start or stop.


You say: "making IService a bit deeper than it is" and then "you can't do
what you want with IService".

And Esteve Fernandez has already pointed me to this:

> "duuuuuude. don't. inherit. multiservice."

But it turns out you can do exactly what I want with a very simple subclass
(or rewriting of) MultiService.  BTW, this code is not tested - I want to
float the idea before doing more. Here's the simple version:

    class GuardedMultiService(service.MultiService):
        implements(service.IServiceCollection)

        def __init__(self, initService):
            service.MultiService.__init__(self)
            self.initService = initService

        def startService(self):
            d = defer.maybeDeferred(self.initService.startService)
            d.addCallback(lambda _: service.MultiService.startService)

        def stopService(self):
            d = service.MultiService.stopService()
            d.addCallback(lambda _: self.initService.stopService)
            return d

This, I believe, solves 1 and 2 above. It has the nice property that all
the regular services add to this class will not be started until after the
possibly deferred-returning initService.startService is done. So there's no
need for any checking later to see that you really are initialized.

And to solve 3, you can add (all defaulting to None) args to __init__ to
specify two errback functions and their arguments, and use addErrback to
attach these to the deferreds in startService and stopService.  If we also
make initService have a default of None, the result will be backward
compatible with the existing MultiService, and could just replace it. The
new version simply gives a way to deal with 1, 2 and 3, if you need it.

BTW, in your original reply you wrote

glyph> This might seem a bit inconsistent, since stopService uses the
glyph> return of a Deferred.  However, this is for a very specific reason,
glyph> not a generalized error-handling case: you may need to prevent the
glyph> *rest* of the system (specifically, the reactor) from completely
glyph> shutting down

My #2 above is like the flip side of this: if the initialization of a
service fails, you may need to prevent the *rest* of the system from coming
up, and (if you can't fix things in the errback) you might want to stop the
reactor. I say this specifically with regard to services launched by twistd.

Terry



From exarkun at twistedmatrix.com  Sun Feb 22 00:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Feb 2009 05:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1235279111.36.1705088246@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090222/03a9b131/attachment.htm 

From esteve at sindominio.net  Sun Feb 22 04:51:22 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sun, 22 Feb 2009 10:51:22 +0100
Subject: [Twisted-Python] What to do when a service fails to start, also,
	deferred and startService
In-Reply-To: <18848.51544.210828.667334@jon.es>
References: <18734.54780.97710.644648@jon.es>
	<20081221082032.12555.570369233.divmod.xquotient.2379@weber.divmod.com>
	<18848.51544.210828.667334@jon.es>
Message-ID: <200902221051.23304.esteve@sindominio.net>

On Sunday 22 February 2009 04:41:12 Terry Jones wrote:
> And Esteve Fernandez has already pointed me to this:
> > "duuuuuude. don't. inherit. multiservice."

But I didn't say that, I was actually quoting this:

http://www.twistedmatrix.com/pipermail/twisted-python/2005-May/010400.html

Cheers.



From tarjei at nu.no  Mon Feb 23 04:34:53 2009
From: tarjei at nu.no (tarjei)
Date: Mon, 23 Feb 2009 10:34:53 +0100
Subject: [Twisted-Python] monitoring twisted services / processes
In-Reply-To: <539234cb0902190349q36ef3d6v4e38137be80f971@mail.gmail.com>
References: <539234cb0902190349q36ef3d6v4e38137be80f971@mail.gmail.com>
Message-ID: <49A26DBD.8040706@nu.no>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,
> 
> I'm currently working on a PoC with twisted, Python, to prove the
> technology as an alternative to more
> established enterprise choices (java app servers, etc..).

> the question is: if I have N number of processes running in a M number
> of machines, given that there are no network restriction,
> and that at least http and hhtps are always available, how these
> services would be efficiently monitored?

I've been planning to blog(done [1]) about this. What I do is to have
the service listen to a http connection that returns some monitoring
data. Something like the one below.

Then I use a custom Nagios plugin to request this url and Nagios-PNP to
make graphs of whatever datapoints the monitor produces.

The plugin setup is done by providing an url (say
http://myservice:893/monitor) to monitor. The plugin will then both
monitor the application and graph it.

I have also added an extra field for "errors" that I use to report odd
exceptions or other types of failures that are non-fatal but should be
investigated. If the error count exceeds a set level the may also go
into the reporting.

http://www.kraken.no/blog/?q=node/9


Regards,
Tarjei

class Monitor(rend.Page):
    """
    Basic monitoring interface todo: make it even more general.
    Format:

    <itemname value="int" critical="int" warning="int" unit="UOM"
label="itemname"
    min="0" max="300"
    />
    UOM (unit of measurement) is one of:
      no unit specified - assume a number (int or float) of things (eg,
users, processes, load averages)
      s - seconds (also us, ms)
      % - percentage
      B - bytes (also KB, MB, TB)
      c - a continous counter (such as bytes transmitted on an interface)

    """
    def __init__(self, config):
        self.isLeaf = True
        self.config = config

    def renderHTTP(self, ctx):
        inevow.IRequest(ctx).setHeader('Content-Type', 'text/xml;
charset=UTF-8')

        #que_length = str(len(getter.get_ids(0, -1)))
        #num_updated = str(get_nr_updated_last_day(self.config.get_db()))
        num_errors = str(len(self.config.getErrors()))

        _root = ET.Element('status', {'service' : 'PDFIndexer'})
        if 'total' in self.config.stats:
            _doc = ET.SubElement(_root,'total', {'value':
str(self.config.stats['total']) })

        _doc = ET.SubElement(_root,'runnerStatus', {'value':
str(self.config.checksStatus()) })
        #_doc = ET.SubElement(_root,'itemsAddedlast24', {'value':
num_updated})
        _errors = ET.SubElement(_root,'errors', {'value': num_errors,
'critical': "3" , 'warning': "2"})

        for error in self.config.getErrors():
            t = ET.SubElement(_errors, 'error', text = error)

        _xmlcontainer = StringIO()
        ET.ElementTree(_root).write(_xmlcontainer, encoding="UTF-8")
        return _xmlcontainer.getvalue()




> 
> is there a twisted application/plugin/framework to do so? are you just
> create 'polling' requests that an existing monitoring tool (i.e.
> Nagios)
> parses and interprets? How would you build a "console" to manage
> services status?
> In a nutshell, what I'm trying to find out if there is already around
> a "container-like" twisted based application that can be used to
> manage/monitor
> twisted applications provided that they adhere to a given interface
> 
> Thanks for your help
> 
> Micc
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFJom29YVRKCnSvzfIRAo0XAKCCOhwp1qIi0Qx2Dae0hn5gHkt5rwCfc8fn
XYXuTUrB2c/eR8ex870rXAc=
=pqNc
-----END PGP SIGNATURE-----



From esteve at sindominio.net  Mon Feb 23 05:48:04 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Mon, 23 Feb 2009 11:48:04 +0100
Subject: [Twisted-Python] official packaging
Message-ID: <200902231148.04217.esteve@sindominio.net>

Hi all,

I recently came across this issue [1], and Glyph commented about official 
packaging.

We're using Ubuntu Hardy and created packages for Twisted 8.2.0, as Ubuntu LTS 
is our platform of choice. Those packages were accepted by their official 
maintainer (Matthias Klose, doko at debian.org) and uploaded to Ubuntu Jaunty 
and Debian unstable.

Sadly, the official packages now use python-central (>=0.6.11), which isn't 
available in Hardy, so we'll have to stick to the packages in our PPA [2] In 
any case, we'll update them when Twisted 9.0 is released, but I think it 
would be better to upload them to a PPA repository officially approved by the 
Twisted team.

Anyway, it would be great to have recent packages of Twisted for distributions 
that offer some kind of long term support contracts (Ubuntu, RHEL, etc.), but 
that tend to get a bit outdated.

Cheers.

1 - http://twistedmatrix.com/trac/ticket/3102
2 - https://launchpad.net/~fluidinfo/+archive/ppa



From luper.rouch at gmail.com  Mon Feb 23 09:11:15 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Mon, 23 Feb 2009 15:11:15 +0100
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <20090220192524.12853.1039011078.divmod.quotient.12197@henry.divmod.com>
References: <20090220192524.12853.1039011078.divmod.quotient.12197@henry.divmod.com>
Message-ID: <49A2AE83.8040901@gmail.com>

Jean-Paul Calderone a ?crit :
> On Fri, 20 Feb 2009 20:15:02 +0100, Luper Rouch <luper.rouch at gmail.com> 
> wrote:
>> Jean-Paul Calderone wrote :
>>> On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch 
>>> <luper.rouch at gmail.com> wrote:
>>>> I would like to investigate on the conch error I mentionned in my 
>>>> previous message ("KeyError when an errback is triggered within a 
>>>> conch TCP tunnel").
>>>>
>>>> My problem is Twisted catches the exceptions and the debugger won't 
>>>> stop on them, how could I avoid that ? Is there a "debug" reactor ?
>>>
>>> Try the --debug option to twistd.
>>>
>>> Jean-Paul
>>
>> My application is a client, how can I run it with twistd ?
> 
> See http://twistedmatrix.com/projects/core/documentation/howto/tap.html
> 

Sorry but I don't understand how to run a _client_ application using 
twistd, I know how to create servers, but the code I would like to debug 
only uses conch to connect to a SSH server (OpenSSH, not Twisted).

Luper



From exarkun at divmod.com  Mon Feb 23 09:14:18 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 23 Feb 2009 09:14:18 -0500
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <49A2AE83.8040901@gmail.com>
Message-ID: <20090223141418.12853.1555685494.divmod.quotient.13186@henry.divmod.com>

On Mon, 23 Feb 2009 15:11:15 +0100, Luper Rouch <luper.rouch at gmail.com> wrote:
>Jean-Paul Calderone a ?crit :
>>On Fri, 20 Feb 2009 20:15:02 +0100, Luper Rouch <luper.rouch at gmail.com> 
>>wrote:
>>>Jean-Paul Calderone wrote :
>>>>On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch <luper.rouch at gmail.com> 
>>>>wrote:
>>>>>I would like to investigate on the conch error I mentionned in my 
>>>>>previous message ("KeyError when an errback is triggered within a conch 
>>>>>TCP tunnel").
>>>>>
>>>>>My problem is Twisted catches the exceptions and the debugger won't stop 
>>>>>on them, how could I avoid that ? Is there a "debug" reactor ?
>>>>
>>>>Try the --debug option to twistd.
>>>>
>>>>Jean-Paul
>>>
>>>My application is a client, how can I run it with twistd ?
>>
>>See http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
>Sorry but I don't understand how to run a _client_ application using twistd, 
>I know how to create servers, but the code I would like to debug only uses 
>conch to connect to a SSH server (OpenSSH, not Twisted).

There is no significant difference between servers and clients in this
respect.  If you know how to create a server, you know how to create a
client - just use the client APIs instead of the server APIs.

Jean-Paul



From exarkun at divmod.com  Mon Feb 23 10:05:34 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 23 Feb 2009 10:05:34 -0500
Subject: [Twisted-Python] Development Process Failure
In-Reply-To: 0
Message-ID: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>

Hey all,

Recently I've been bothered by a systematic shortcoming of the Twisted
development process.  When changes are made in response to a review,
they are generally made in a way which is difficult to inspect.  The
value of a review is lost if the valid points raised by it are not
addressed before the changes are applied to trunk.  Often, there's no
problem here, but it sometimes happens that /not/ all of the review
points are addressed before a ticket is re-submitted for review.  In
these cases, one of two things happens.  The re-reviewer might go back
to the previous review and verify that all of the points raised in it
have been addressed.  This is a time consuming process, though it can
be made easier if the author responds to each review point (and even
easier if a changeset is linked in each response).  Or, the re-reviewer
might assume that the author addressed all points and just look over the
branch for anything missed in the previous review.

In either of these cases, time is being wasted, but in the latter case,
time is being wasted /and/ bad code is being added to trunk.  I would
like to consider how we might address this shortcoming of the development
process.

One possibility is to explicitly adjust the review guidelines and direct
reviewers always to verify that previous review points have actually been
addressed.  What ideas do other people have?

Jean-Paul



From luper.rouch at gmail.com  Mon Feb 23 10:17:07 2009
From: luper.rouch at gmail.com (luper rouch)
Date: Mon, 23 Feb 2009 16:17:07 +0100
Subject: [Twisted-Python] Re: KeyError when an errback is triggered within a
	conch TCP tunnel
In-Reply-To: <499CDEFC.6000609@gmail.com>
References: <499CDEFC.6000609@gmail.com>
Message-ID: <4e0636f40902230717p66f7eb96m44608ad8336542e9@mail.gmail.com>

Running the example in the debugger, neither ssh_CHANNEL_OPEN() nor
ssh_CHANNEL_OPEN_CONFIRMATION() method of
twisted.conch.ssh.connection.SSHConnection is called, so
self.channelsToRemoteChannel dict is empty when sendClose() is called,
thus the error.

I am not sure if I should file a bug as I'm new to Twisted, does
anyone see an obvious mistake in my code ?

Cheers,
Luper



From luper.rouch at gmail.com  Mon Feb 23 10:21:34 2009
From: luper.rouch at gmail.com (luper rouch)
Date: Mon, 23 Feb 2009 16:21:34 +0100
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <20090223141418.12853.1555685494.divmod.quotient.13186@henry.divmod.com>
References: <49A2AE83.8040901@gmail.com>
	<20090223141418.12853.1555685494.divmod.quotient.13186@henry.divmod.com>
Message-ID: <4e0636f40902230721pa9390e6iebefdaddd72ea64e@mail.gmail.com>

2009/2/23 Jean-Paul Calderone <exarkun at divmod.com>:
> On Mon, 23 Feb 2009 15:11:15 +0100, Luper Rouch <luper.rouch at gmail.com>
> wrote:
>>
>> Jean-Paul Calderone a ?crit :
>>>
>>> On Fri, 20 Feb 2009 20:15:02 +0100, Luper Rouch <luper.rouch at gmail.com>
>>> wrote:
>>>>
>>>> Jean-Paul Calderone wrote :
>>>>>
>>>>> On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch <luper.rouch at gmail.com>
>>>>> wrote:
>>>>>>
>>>>>> I would like to investigate on the conch error I mentionned in my
>>>>>> previous message ("KeyError when an errback is triggered within a conch TCP
>>>>>> tunnel").
>>>>>>
>>>>>> My problem is Twisted catches the exceptions and the debugger won't
>>>>>> stop on them, how could I avoid that ? Is there a "debug" reactor ?
>>>>>
>>>>> Try the --debug option to twistd.
>>>>>
>>>>> Jean-Paul
>>>>
>>>> My application is a client, how can I run it with twistd ?
>>>
>>> See http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>>
>> Sorry but I don't understand how to run a _client_ application using
>> twistd, I know how to create servers, but the code I would like to debug
>> only uses conch to connect to a SSH server (OpenSSH, not Twisted).
>
> There is no significant difference between servers and clients in this
> respect.  If you know how to create a server, you know how to create a
> client - just use the client APIs instead of the server APIs.
>
> Jean-Paul
>

Sorry I had missed TCPClient in the documentation, it works now thanks.

Luper



From itamar at itamarst.org  Mon Feb 23 13:12:08 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Feb 2009 13:12:08 -0500
Subject: [Twisted-Python] Twisted developers: please donate your time!
Message-ID: <1235412728.2733.2.camel@pintsize>

As part of the TSF's fundraising efforts, we are trying to get upfront
donations of time you will spend developing Twisted. It will then get
matched by a donor, if we are successful in getting this grant. So if
you're planning on working on Twisted anyway this year, your work will
count twice as much!

So, if you're interested, please reply, saying something like "I will
spend two weeks working on Gopher support over the next year."

-Itamar




From dripton at ripton.net  Mon Feb 23 15:47:25 2009
From: dripton at ripton.net (David Ripton)
Date: Mon, 23 Feb 2009 12:47:25 -0800
Subject: [Twisted-Python] Twisted developers: please donate your time!
In-Reply-To: <1235412728.2733.2.camel@pintsize>
References: <1235412728.2733.2.camel@pintsize>
Message-ID: <20090223204725.GC16541@vidar.dreamhost.com>

On 2009.02.23 13:12:08 -0500, Itamar Shtull-Trauring wrote:
> As part of the TSF's fundraising efforts, we are trying to get upfront
> donations of time you will spend developing Twisted. It will then get
> matched by a donor, if we are successful in getting this grant. So if
> you're planning on working on Twisted anyway this year, your work will
> count twice as much!
> 
> So, if you're interested, please reply, saying something like "I will
> spend two weeks working on Gopher support over the next year."

I will spend one week working on IPv6 support over the next year.

-- 
David Ripton    dripton at ripton.net



From jml at mumak.net  Mon Feb 23 16:39:04 2009
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 24 Feb 2009 08:39:04 +1100
Subject: [Twisted-Python] Development Process Failure
In-Reply-To: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
References: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
Message-ID: <d06a5cd30902231339i21e7dde5le9b486a0b6993ffe@mail.gmail.com>

On Tue, Feb 24, 2009 at 2:05 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> One possibility is to explicitly adjust the review guidelines and direct
> reviewers always to verify that previous review points have actually been
> addressed.  What ideas do other people have?
>

In the Launchpad team, we replying to review mails just like usenet
posts, and there is a convention that each point raised by the
reviewer has to be addressed. When looking at someone's reply to your
review, the mail quoting makes it obvious if someone has missed a
point.

Given Trac, maybe numbering review points + being direct about the
change would make it easier to inspect replies, which must in turn
mention the numbered points. For this to work, the reviewer would have
to clearly distinguish between "I would like you to change X" and
"Looking at A inspires the though B."

Finally, Launchpad has an arrangement such that branches with over 500
lines of diff need to have their reviews arranged specially (you have
to find a reviewer who will agree to it, and we're allowed to say
"no"). Everything is easier when the diff is smaller.

jml



From glyph at divmod.com  Mon Feb 23 17:27:14 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 23 Feb 2009 22:27:14 -0000
Subject: [Twisted-Python] Development Process Failure
In-Reply-To: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
References: 0
	<20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
Message-ID: <20090223222714.12555.2061659747.divmod.xquotient.4941@weber.divmod.com>

On 03:05 pm, exarkun at divmod.com wrote:
>One possibility is to explicitly adjust the review guidelines and 
>direct
>reviewers always to verify that previous review points have actually 
>been
>addressed.  What ideas do other people have?

For starters, I think we should have a division between process 
"recommendations" and process "requirements".  It would be nice to make 
the requirements page as lightweight as possible, and then have a large 
library of recommendations (like these) for developers to peruse.

Even if we encourage that everyone follow the recommendations as well as 
the requirements, "requirements" sounds like an imposition but 
"recommendations" sounds helpful ;-).

On to the issue at hand: reviewers should always check to make sure that 
previous points have been addressed.  I always try to do that already. 
As you said, the value of the review is lost if the author fails to 
respond to it.  In fact, re-reviewers should take care to avoid adding 
unnecessary *new* work; one should prefer verifying the previous review 
points to doing new analysis.  Obviously there are always issues that 
can arise in a re-review, but especially in the case of bug fixes, it's 
always possible to keep recommending better and better ways to fix it in 
the review.  It's better to just diligently enforce the first review, 
unless the first reviewer missed a requirement (coding standard 
violation, missing test coverage, missing doc coverage, compatibility 
breakage).  Design issues, especially those spotted past the first 
review, should generally be deferred to later tickets.

However, I think the author should really help the reviewer.  It's a lot 
easier for the author to enumerate their responses to review points than 
for the reviewer to look at the diff, the HEAD, or the revision history 
of the branch.

A few times, when responding to a review, I've tried to address each 
review point with an individual commit, and a 're #XXXX' ticket comment 
in the commit message.  You alluded to such an approach.  If the author 
does this, then verifying that the points have been addressed is 
relatively easy.  exarkun, you've done the same thing, and when 
reviewing those tickets I can say that I *really* appreciated it.  It's 
a good habit to get into.

Actually, it would be nice if the "re #XXXX" weren't necessary.  Ideally 
every branch would have the commit history of all of its branches 
interspersed in its comment log.  But that's more trac hackery and 
possibly not worth it.

If it's too difficult for the reviewer to identify where the author has 
responded to feedback, I think the reviewer should feel free to reject 
the re-review by saying "please make a list of revisions where you've 
addressed each of these points and put this back into review".

However, as implied by my suggestion for requirement/recommendation 
division, I don't think the author should necessarily *have* to do this. 
In many cases I've found it pretty easy to verify that the review has 
been addressed.  They should just be responsible for doing it in the 
case that the reviewer needs it :).  For example, patches in the tracker 
tend to be smaller than branches, and I've rarely needed this level of 
detail in the tracker.

Also I think we should take it up with authors after the fact, outside 
the bounds of the review process :).  Too often we (and I am very 
consciously including myself in "we" here, I've done this a bunch of 
times) treat a ticket as "over" if it's managed to make its way through 
the review process, and doesn't cause any buildbot failures or otherwise 
need to be reverted.  We should conduct post-hoc meta-reviews in more 
specific cases rather than waiting for general impressions to bother us.

I'm starting to think that we should have a separate mailing list for 
such discussions, or maybe even join one that already exists.  There 
must be a million blogs, forums, and lists for talking about development 
processes.

As for communicating the results of these discussions, the wiki is good 
for recording conclusions, but we can also use labs.twistedmatrix.com 
for drawing attention to process updates and tools, techniques, and tips 
for working on Twisted.



From glyph at divmod.com  Mon Feb 23 18:07:06 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 23 Feb 2009 23:07:06 -0000
Subject: [Twisted-Python] Development Process Failure
In-Reply-To: <d06a5cd30902231339i21e7dde5le9b486a0b6993ffe@mail.gmail.com>
References: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
	<d06a5cd30902231339i21e7dde5le9b486a0b6993ffe@mail.gmail.com>
Message-ID: <20090223230706.12555.249159647.divmod.xquotient.4948@weber.divmod.com>


On 09:39 pm, jml at mumak.net wrote:
>Given Trac, maybe numbering review points + being direct about the
>change would make it easier to inspect replies, which must in turn
>mention the numbered points. For this to work, the reviewer would have
>to clearly distinguish between "I would like you to change X" and
>"Looking at A inspires the though B."

Here's a thought: every review should have 3 sections.  "According to 
process requirements, you must change XYZ", "I would like you to change 
XYZ", and "here are some things to think about".

I know that as I respond to a review, I know I'd like to have those 
things clearly separated out.



From jml at mumak.net  Mon Feb 23 18:07:51 2009
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 24 Feb 2009 10:07:51 +1100
Subject: [Twisted-Python] Development Process Failure
In-Reply-To: <20090223230706.12555.249159647.divmod.xquotient.4948@weber.divmod.com>
References: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
	<d06a5cd30902231339i21e7dde5le9b486a0b6993ffe@mail.gmail.com>
	<20090223230706.12555.249159647.divmod.xquotient.4948@weber.divmod.com>
Message-ID: <d06a5cd30902231507g15e5e18fxe6048547f4c4fcb2@mail.gmail.com>

On Tue, Feb 24, 2009 at 10:07 AM,  <glyph at divmod.com> wrote:
>
> On 09:39 pm, jml at mumak.net wrote:
>>
>> Given Trac, maybe numbering review points + being direct about the
>> change would make it easier to inspect replies, which must in turn
>> mention the numbered points. For this to work, the reviewer would have
>> to clearly distinguish between "I would like you to change X" and
>> "Looking at A inspires the though B."
>
> Here's a thought: every review should have 3 sections.  "According to
> process requirements, you must change XYZ", "I would like you to change
> XYZ", and "here are some things to think about".
>
> I know that as I respond to a review, I know I'd like to have those things
> clearly separated out.
>

As long as they are clearly communicated, I don't care about the ordering.

jml



From adelagon at gmail.com  Tue Feb 24 02:24:25 2009
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 24 Feb 2009 15:24:25 +0800
Subject: [Twisted-Python] Twisted developers: please donate your time!
In-Reply-To: <20090223204725.GC16541@vidar.dreamhost.com>
References: <1235412728.2733.2.camel@pintsize>
	<20090223204725.GC16541@vidar.dreamhost.com>
Message-ID: <7a01f6c00902232324u7fc55708ofc982415d0493cb6@mail.gmail.com>

Will spend one week on Yahoo Messenger (YMSG) support for twisted.words next
month.

---
Alvin

On Tue, Feb 24, 2009 at 4:47 AM, David Ripton <dripton at ripton.net> wrote:

> On 2009.02.23 13:12:08 -0500, Itamar Shtull-Trauring wrote:
> > As part of the TSF's fundraising efforts, we are trying to get upfront
> > donations of time you will spend developing Twisted. It will then get
> > matched by a donor, if we are successful in getting this grant. So if
> > you're planning on working on Twisted anyway this year, your work will
> > count twice as much!
> >
> > So, if you're interested, please reply, saying something like "I will
> > spend two weeks working on Gopher support over the next year."
>
> I will spend one week working on IPv6 support over the next year.
>
> --
> David Ripton    dripton at ripton.net
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090224/2c96deb1/attachment.htm 

From micahel at gmail.com  Tue Feb 24 03:25:57 2009
From: micahel at gmail.com (Michael Hudson)
Date: Tue, 24 Feb 2009 21:25:57 +1300
Subject: [Twisted-Python] Twisted developers: please donate your time!
In-Reply-To: <1235412728.2733.2.camel@pintsize>
References: <1235412728.2733.2.camel@pintsize>
Message-ID: <aa0dfd860902240025h464a286ap7ddbbd92937d0381@mail.gmail.com>

2009/2/24 Itamar Shtull-Trauring <itamar at itamarst.org>:
> As part of the TSF's fundraising efforts, we are trying to get upfront
> donations of time you will spend developing Twisted. It will then get
> matched by a donor, if we are successful in getting this grant. So if
> you're planning on working on Twisted anyway this year, your work will
> count twice as much!
>
> So, if you're interested, please reply, saying something like "I will
> spend two weeks working on Gopher support over the next year."

I don't entirely understand, but I will commit to spending the
equivalent of two working weeks as a general review monkey over the
next year.  Is that the sort of thing you wanted to hear?

Cheers,
mwh



From ntoper at gmail.com  Tue Feb 24 04:23:49 2009
From: ntoper at gmail.com (Nicolas Toper)
Date: Tue, 24 Feb 2009 10:23:49 +0100
Subject: [Twisted-Python] Twisted developers: please donate your time!
In-Reply-To: <aa0dfd860902240025h464a286ap7ddbbd92937d0381@mail.gmail.com>
References: <1235412728.2733.2.camel@pintsize>
	<aa0dfd860902240025h464a286ap7ddbbd92937d0381@mail.gmail.com>
Message-ID: <fcbb46050902240123q3053a8b8w6ca02bb6ab9d864f@mail.gmail.com>

Hi,
I will spend two weeks improving SMTP libraries.

Best,
Nicolas


On Tue, Feb 24, 2009 at 9:25 AM, Michael Hudson <micahel at gmail.com> wrote:

> 2009/2/24 Itamar Shtull-Trauring <itamar at itamarst.org>:
> > As part of the TSF's fundraising efforts, we are trying to get upfront
> > donations of time you will spend developing Twisted. It will then get
> > matched by a donor, if we are successful in getting this grant. So if
> > you're planning on working on Twisted anyway this year, your work will
> > count twice as much!
> >
> > So, if you're interested, please reply, saying something like "I will
> > spend two weeks working on Gopher support over the next year."
>
> I don't entirely understand, but I will commit to spending the
> equivalent of two working weeks as a general review monkey over the
> next year.  Is that the sort of thing you wanted to hear?
>
> Cheers,
> mwh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090224/c634fb9b/attachment.htm 

From gabriel.rossetti at arimaz.com  Tue Feb 24 05:49:13 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Feb 2009 11:49:13 +0100
Subject: [Twisted-Python] Twisted plugins and py2exe
Message-ID: <49A3D0A9.3040209@arimaz.com>

Hello everyone!

I used py2exe on a Twisted app of mine and I get this exception :


Traceback (most recent call last):
  File "proj\service.pyc", line 1308, in connectionMade

  File "proj\service.pyc", line 1640, in _register

  File "proj\service.pyc", line 504, in loadPlugins

  File "twisted\plugin.pyc", line 200, in getPlugins

--- <exception caught here> ---
  File "twisted\plugin.pyc", line 179, in getCache

exceptions.AttributeError: ZipPath instance has no attribute 'setContent'

Has anyone ever had this problem while using plugins with Twisted and 
py2exe?

Thank you,
Gabriel



From exarkun at divmod.com  Tue Feb 24 10:15:18 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 24 Feb 2009 10:15:18 -0500
Subject: [Twisted-Python] Twisted plugins and py2exe
In-Reply-To: <49A3D0A9.3040209@arimaz.com>
Message-ID: <20090224151518.12853.1231452302.divmod.quotient.13481@henry.divmod.com>

On Tue, 24 Feb 2009 11:49:13 +0100, Gabriel Rossetti <gabriel.rossetti at arimaz.com> wrote:
>Hello everyone!
>
>I used py2exe on a Twisted app of mine and I get this exception :
>
>
>Traceback (most recent call last):
>  File "proj\service.pyc", line 1308, in connectionMade
>
>  File "proj\service.pyc", line 1640, in _register
>
>  File "proj\service.pyc", line 504, in loadPlugins
>
>  File "twisted\plugin.pyc", line 200, in getPlugins
>
>--- <exception caught here> ---
>  File "twisted\plugin.pyc", line 179, in getCache
>
>exceptions.AttributeError: ZipPath instance has no attribute 'setContent'
>
>Has anyone ever had this problem while using plugins with Twisted and 
>py2exe?

No, but from the traceback, it seems fairly clear that the plugin system
is trying to write a plugin cache file into your py2exe-created zip file
of Python source.  This won't work, of course.  You could try making sure
the cache file is up to date and including it in the zip file, but I have
no idea if this will actually produce sensible behavior.  The other
possibility is to actually teach the plugin system about zip files (ie,
contribute a patch to Twisted to support this case).

Jean-Paul



From gabriel.rossetti at arimaz.com  Tue Feb 24 11:35:14 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Feb 2009 17:35:14 +0100
Subject: [Twisted-Python] Twisted plugins and py2exe
In-Reply-To: <20090224151518.12853.1231452302.divmod.quotient.13481@henry.divmod.com>
References: <20090224151518.12853.1231452302.divmod.quotient.13481@henry.divmod.com>
Message-ID: <49A421C2.4010600@arimaz.com>

Jean-Paul Calderone wrote:
> On Tue, 24 Feb 2009 11:49:13 +0100, Gabriel Rossetti 
> <gabriel.rossetti at arimaz.com> wrote:
>> Hello everyone!
>>
>> I used py2exe on a Twisted app of mine and I get this exception :
>>
>>
>> Traceback (most recent call last):
>>  File "proj\service.pyc", line 1308, in connectionMade
>>
>>  File "proj\service.pyc", line 1640, in _register
>>
>>  File "proj\service.pyc", line 504, in loadPlugins
>>
>>  File "twisted\plugin.pyc", line 200, in getPlugins
>>
>> --- <exception caught here> ---
>>  File "twisted\plugin.pyc", line 179, in getCache
>>
>> exceptions.AttributeError: ZipPath instance has no attribute 
>> 'setContent'
>>
>> Has anyone ever had this problem while using plugins with Twisted and 
>> py2exe?
>
> No, but from the traceback, it seems fairly clear that the plugin system
> is trying to write a plugin cache file into your py2exe-created zip file
> of Python source.  This won't work, of course.  You could try making sure
> the cache file is up to date and including it in the zip file, but I have
> no idea if this will actually produce sensible behavior.  The other
> possibility is to actually teach the plugin system about zip files (ie,
> contribute a patch to Twisted to support this case).
>
> Jean-Paul
>
Ok, I could do this, teach it abot zip files and have it update it's 
cache in the zip file, but in certain cases, like mine actually, if you 
tell py2exe to include the zip file in the exec, then it won't work. How 
about adding the possibility to specify where the cache is to be written?

Gabriel



From exarkun at divmod.com  Tue Feb 24 11:55:27 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 24 Feb 2009 11:55:27 -0500
Subject: [Twisted-Python] Twisted plugins and py2exe
In-Reply-To: <49A421C2.4010600@arimaz.com>
Message-ID: <20090224165527.12853.1836778921.divmod.quotient.13499@henry.divmod.com>

 Tue, 24 Feb 2009 17:35:14 +0100, Gabriel Rossetti <gabriel.rossetti at arimaz.com> wrote:
>Jean-Paul Calderone wrote:
>>On Tue, 24 Feb 2009 11:49:13 +0100, Gabriel Rossetti 
>><gabriel.rossetti at arimaz.com> wrote:
>>>Hello everyone!
>>>
>>>I used py2exe on a Twisted app of mine and I get this exception :
>>>
>>>
>>>Traceback (most recent call last):
>>>  File "proj\service.pyc", line 1308, in connectionMade
>>>
>>>  File "proj\service.pyc", line 1640, in _register
>>>
>>>  File "proj\service.pyc", line 504, in loadPlugins
>>>
>>>  File "twisted\plugin.pyc", line 200, in getPlugins
>>>
>>>--- <exception caught here> ---
>>>  File "twisted\plugin.pyc", line 179, in getCache
>>>
>>>exceptions.AttributeError: ZipPath instance has no attribute 'setContent'
>>>
>>>Has anyone ever had this problem while using plugins with Twisted and 
>>>py2exe?
>>
>>No, but from the traceback, it seems fairly clear that the plugin system
>>is trying to write a plugin cache file into your py2exe-created zip file
>>of Python source.  This won't work, of course.  You could try making sure
>>the cache file is up to date and including it in the zip file, but I have
>>no idea if this will actually produce sensible behavior.  The other
>>possibility is to actually teach the plugin system about zip files (ie,
>>contribute a patch to Twisted to support this case).
>>
>>Jean-Paul
>Ok, I could do this, teach it abot zip files and have it update it's cache 
>in the zip file, but in certain cases, like mine actually, if you tell 
>py2exe to include the zip file in the exec, then it won't work. How about 
>adding the possibility to specify where the cache is to be written?

Updating the cache in the zip file probably isn't the right thing to do.
Just skipping cache generation would probably make more sense.  It should
be easier to implement, anyway.

As far as I can tell, it doesn't make sense to allow the cache location to
be specified as configuration, though.  Skipping cache file generation should
be fine.

Jean-Paul



From glyph at divmod.com  Tue Feb 24 14:55:05 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 24 Feb 2009 19:55:05 -0000
Subject: [Twisted-Python] Twisted plugins and py2exe
In-Reply-To: <20090224165527.12853.1836778921.divmod.quotient.13499@henry.divmod.com>
References: <49A421C2.4010600@arimaz.com>
	<20090224165527.12853.1836778921.divmod.quotient.13499@henry.divmod.com>
Message-ID: <20090224195505.12555.1349207332.divmod.xquotient.5060@weber.divmod.com>


On 04:55 pm, exarkun at divmod.com wrote:
>Tue, 24 Feb 2009 17:35:14 +0100, Gabriel Rossetti 
><gabriel.rossetti at arimaz.com> wrote:
>>Jean-Paul Calderone wrote:
>>>On Tue, 24 Feb 2009 11:49:13 +0100, Gabriel Rossetti 
>>><gabriel.rossetti at arimaz.com> wrote:

>>>>Has anyone ever had this problem while using plugins with Twisted 
>>>>and py2exe?

>>>No, but from the traceback, it seems fairly clear that the plugin 
>>>system
>>>is trying to write a plugin cache file into your py2exe-created zip 
>>>file
>>>of Python source.

>>Ok, I could do this, teach it abot zip files and have it update it's 
>>cache in the zip file, but in certain cases, like mine actually, if 
>>you tell py2exe to include the zip file in the exec, then it won't 
>>work. How about adding the possibility to specify where the cache is 
>>to be written?

This is almost certainly the wrong solution to your problem, but if you 
disagree with this assessment please feel free to update this ticket:

    http://twistedmatrix.com/trac/ticket/3348

Several people have requested this feature and nobody has really made a 
good case for why it should be implemented.  (I don't think it should 
be, I just think we should record all the reasons why not on that ticket 
:)).
>Updating the cache in the zip file probably isn't the right thing to 
>do.
>Just skipping cache generation would probably make more sense.  It 
>should
>be easier to implement, anyway.

Skipping the cache generation is like skipping bytecode compilation. 
It's not a catastrophic error, everything should still work, but it will 
result in more unnecessary work being done at runtime.

IMHO the right solution in this particular case would be to get py2exe 
(or some part of the setup process in py2exe, which I believe is 
implemented using distutils) to generate a cache file as part of the 
built zip file.  Presumably .pyc files are also created and included in 
the zip file.  The appropriate procedure for forcibly generating the 
cache is described here:

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3

A cache generated in this manner will be suitable for packaging into a 
zip file.

Another part of the solution would be to implement setContent on 
ZipPath.  However, there are still likely to be erroneous deployment 
scenarios where the ZipPath is not available for writing, just as an 
installation path is frequently not available for writing now.  So an 
initial implementation of setContent on ZipPath could just raise the 
same exception that an unwritable FilePath would, for consistency in 
error handling.

For the issue of quieting the mostly-harmless error message now produced 
by a failure to write the cache file, see here:

    http://twistedmatrix.com/trac/ticket/2409



From terry at jon.es  Thu Feb 26 07:25:46 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 26 Feb 2009 13:25:46 +0100
Subject: [Twisted-Python] What to do when a service fails to start, also, 
	deferred and startService
In-Reply-To: Your message at 04:41:12 on Sunday, 22 February 2009
References: <18734.54780.97710.644648@jon.es>
	<20081128140217.12555.360367893.divmod.xquotient.628@weber.divmod.com>
	<18736.4217.759501.381840@jon.es>
	<20081221082032.12555.570369233.divmod.xquotient.2379@weber.divmod.com>
	<18848.51544.210828.667334@jon.es>
Message-ID: <18854.35402.437237.503676@jon.es>

Following up on myself....  Here's an updated/working version of the
MultiService subclass I proposed the other day:

    class GuardedMultiService(service.MultiService):

        def __init__(self, guardService):
            service.MultiService.__init__(self)
            self.guardService = guardService
            self.startDeferred = defer.Deferred()
            self.stopDeferred = defer.Deferred()

        def startService(self):
            def startOthers(_):
                log.msg("Guard service startup succeeded. Starting other services.")
                service.MultiService.startService(self)
            def initFailed(f):
                log.msg("Guard service startup failed.")
                return f
            d = defer.maybeDeferred(self.guardService.startService)
            d.addCallbacks(startOthers, initFailed)
            d.chainDeferred(self.startDeferred)

        def stopService(self):
            d = service.MultiService.stopService(self)
            d.addCallback(lambda _: self.guardService.stopService())
            d.chainDeferred(self.stopDeferred)
            return self.stopDeferred


This is pretty much as I described earlier.

I've added self.startDeferred and self.stopDeferred deferreds.  These give
the programmer using this class (who, I imagine, is probably doing so in
the context of writing a Twistd plugin - i.e., writing the makeService
method in a class implementing IServiceMaker and IPlugin) the chance to add
callbacks to the chain of events that happen when the service is started
and stopped. Their use is optional.

It's easy to see how to make guardService default to None, which would make
it possible to merge the above into MultiService itself.

If there's any interest at all in this, I'm happy to open a ticket, run
tests, submit a patch, etc.

Terry



From hasham_james_007 at yahoo.com  Thu Feb 26 14:46:21 2009
From: hasham_james_007 at yahoo.com (khawar hasham)
Date: Thu, 26 Feb 2009 11:46:21 -0800 (PST)
Subject: [Twisted-Python] server client in one code
Message-ID: <304487.43230.qm@web53505.mail.re2.yahoo.com>

I am trying to use twisted to build an application that can act as server as well as client at the same time.

I need this application to send and receive messages back and forth between two of its instances.



I used the reactor.run() to start listen and connectTCP. My problem is
that I need to run server or client module from other program. Moreover, I cannot put the
calling module on hold because reactor.run() stops every other
execution of your code. To make it work, I started the reactor.run in a
separate thread with installSignalHanlder=0.



I have got the success to transfer messages between two instances if
one is acting as server and other as client. However, I could not send
messages if both instances started as servers and then start sending
the messages to each other. I tried to google around but could not find
the solution. Can you help me in this?



I can not start server as independent module. I have to start it from
other python script that will use my module to act as server as well as
client to send and receive the messages.


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090226/7ab4159e/attachment.htm 

From mkeller at cs.au.dk  Fri Feb 27 09:26:43 2009
From: mkeller at cs.au.dk (Marcel Keller)
Date: Fri, 27 Feb 2009 15:26:43 +0100
Subject: [Twisted-Python] Reentrant reactor iteration
Message-ID: <49A7F823.5010704@cs.au.dk>

Hi,

I am working on the VIFF project (viff.dk) which uses Twisted. I found 
out that our code is sometimes inefficient because we are generating 
many deferreds (maybe about 10000) in a callback. While doing that, no 
network communication is performed. Therefore, I investigated the 
possibility of adding a function to the reactor which is called every 
iteration and from which the iteration could be called safely. Then, we 
could generate all deferreds in that function and activate the reactor 
from to time. See the attached patch for details.

Some of our code runs twice as fast when using that hack. Are there any 
chances something similar might be included in Twisted? Or does anyone 
have a better solution for the described problem?

Furthermore, I have a question, which is probably related. The 
documentation of IReactorCore says about the iterate() function:

"The reactor must have been started (via the run() method) prior to any 
invocations of this method. It must also be stopped manually after the 
last call to this method (via the stop() method). This method is not 
re-entrant: you must not call it recursively; in particular, you must 
not call it while the reactor is running."

This looks to me as if the reactor needs to be running and not running 
at the same time so that iterate() can be called. Is there an error in 
my reasoning?

Best regards,
Marcel Keller


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: twisted-hack.patch
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090227/4f7c94aa/attachment.txt 

From exarkun at divmod.com  Fri Feb 27 11:27:23 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 27 Feb 2009 11:27:23 -0500
Subject: [Twisted-Python] Reentrant reactor iteration
In-Reply-To: <49A7F823.5010704@cs.au.dk>
Message-ID: <20090227162723.12853.1884927660.divmod.quotient.14670@henry.divmod.com>

On Fri, 27 Feb 2009 15:26:43 +0100, Marcel Keller <mkeller at cs.au.dk> wrote:
>Hi,
>
>I am working on the VIFF project (viff.dk) which uses Twisted. I found out 
>that our code is sometimes inefficient because we are generating many 
>deferreds (maybe about 10000) in a callback. While doing that, no network 
>communication is performed. Therefore, I investigated the possibility of 
>adding a function to the reactor which is called every iteration and from 
>which the iteration could be called safely. Then, we could generate all 
>deferreds in that function and activate the reactor from to time. See the 
>attached patch for details.

So you're doing a ton of work all at once now and you want to split up that
ton of work into smaller pieces and do it a little at a time?

If that's the case, then you don't need to modify the reactor, you just
need to split up the work your code is going.  There are a lot of techniques
for doing this.  coiterate and inlineCallbacks are two solutions which are
closest to "cookie cutter" (ie, you have the least flexibility in deciding
how to use them).

>Some of our code runs twice as fast when using that hack. Are there any 
>chances something similar might be included in Twisted? Or does anyone have 
>a better solution for the described problem?

Give coiterate or inlineCallbacks a try.  If you need help applying either
of these to your problem, please ask. :)  I can't make any specific
suggestions now because I can only guess at how you're using the reactor
modification you attached.

You have a very long, steep, uphill battle to convince me that adding support
for re-entrant iteration is a good idea.

>Furthermore, I have a question, which is probably related. The documentation 
>of IReactorCore says about the iterate() function:
>
>"The reactor must have been started (via the run() method) prior to any 
>invocations of this method. It must also be stopped manually after the last 
>call to this method (via the stop() method). This method is not re-entrant: 
>you must not call it recursively; in particular, you must not call it while 
>the reactor is running."
>
>This looks to me as if the reactor needs to be running and not running at 
>the same time so that iterate() can be called. Is there an error in my 
>reasoning?

It's very subtle and intentionally written to sound impossible to use (maybe
that is a stupid idea, but that was my intent when I wrote it ;).  What
you're missing is that there is a way to make reactor.run() return without
stopping the reactor.

Jean-Paul



From conradwinchester at me.com  Sat Feb 28 08:21:06 2009
From: conradwinchester at me.com (Conrad Winchester)
Date: Sat, 28 Feb 2009 13:21:06 +0000
Subject: [Twisted-Python] Why do I get an AlreadyCalledError?
Message-ID: <B032864B-BD17-4DAD-ACB7-B32B9DA34C81@me.com>

Hi all,

I  am writing a restful twisted (8.1.0) server and am trying to return  
useful error statuses from requests. The problem is that even  
following the documentation extremely carefully I am getting an  
AlreadyCalled Error every time I generate a failure. Here is my main  
class (leaving out code that I feel is not relevant to the question:

from xml.dom import minidom
from twisted.web import server, resource

from FWGException import FWGException

class DeferredPostHandler(resource.Resource,minidom.Document):

     NOT_IMPLEMENTED = 501
     BAD_REQUEST = 400
	
     def writeError(self, failure, request, *args, **kw):
         failure.trap(FWGException)
         request.setResponseCode(self.errorCode)
         request.write("Error handling request: %s" %  
failure.getErrorMessage())
         request.finish()

     def writeResult(self, result, request, *args, **kw):
         self.writexml(request)
         request.finish()

     def render_GET(self, request):
         self.process=self.db.runInteraction(self.processForm,request)
         self.process.addCallbacks(self.writeResult, self.writeError,  
[request], {}, [request], {})
         return server.NOT_DONE_YET


I have a handler that extends this

from DeferredPostHandler import DeferredPostHandler
from twisted.web import http
from twisted.python.failure import Failure
from FWGException import FWGException

class CollectionAdminHandler(DeferredPostHandler):

     def __init__(self, task, db, config):
         DeferredPostHandler.__init__(self,db)
         self.config = config
         self.task = task
         self.errorCode = http.OK

     def processForm(self, cursor, request):

         if self.task == 'add':
             self.addCollection(cursor, request)

         elif self.task == 'delete':
             self.deleteCollection(cursor, request)

         else:
             self.errorCode = DeferredPostHandler.NOT_IMPLEMENTED
             fail = Failure(FWGException("Unsupported Task"))
             self.process.errback(fail)

     def addCollection(self, cursor, request):
         fail = None
         if self.isValidAddRequest(request):
             pass
         else:
             self.errorCode = DeferredPostHandler.BAD_REQUEST
             fail = Failure(FWGException("Missing Parameter"))

         if fail:
             self.process.errback(fail);

     def deleteCollection(self, cursor, request):
         print 'Delete Collection'

     def isValidAddRequest(self, request):
         return 'title' in request.args and 'category' in request.args  
and 'date' in request.args


Unfortunately whenever I call


self.process.errback(fail)

I get the following stack trace in my log


Traceback (most recent call last):
   File "startserver.py", line 23, in <module>
     reactor.run()
   File "/Library/Python/2.5/site-packages/Twisted-8.1.0-py2.5- 
macosx-10.5-i386.egg/twisted/internet/base.py", line 1048, in run
     self.mainLoop()
   File "/Library/Python/2.5/site-packages/Twisted-8.1.0-py2.5- 
macosx-10.5-i386.egg/twisted/internet/base.py", line 1057, in mainLoop
     self.runUntilCurrent()
--- <exception caught here> ---
   File "/Library/Python/2.5/site-packages/Twisted-8.1.0-py2.5- 
macosx-10.5-i386.egg/twisted/internet/base.py", line 677, in  
runUntilCurrent
     f(*a, **kw)
   File "/Library/Python/2.5/site-packages/Twisted-8.1.0-py2.5- 
macosx-10.5-i386.egg/twisted/internet/defer.py", line 243, in callback
     self._startRunCallbacks(result)
   File "/Library/Python/2.5/site-packages/Twisted-8.1.0-py2.5- 
macosx-10.5-i386.egg/twisted/internet/defer.py", line 298, in  
_startRunCallbacks
     raise AlreadyCalledError
twisted.internet.defer.AlreadyCalledError:


I can not understand why this is happening :-( Can anybody help?

BTW I am using POST instead of PUT because my client can't do PUT

Conrad Winchester



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090228/31fabaf3/attachment.htm 

From exarkun at divmod.com  Sat Feb 28 09:16:30 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 28 Feb 2009 09:16:30 -0500
Subject: [Twisted-Python] Why do I get an AlreadyCalledError?
In-Reply-To: <B032864B-BD17-4DAD-ACB7-B32B9DA34C81@me.com>
Message-ID: <20090228141630.12853.1235986472.divmod.quotient.15283@henry.divmod.com>

On Sat, 28 Feb 2009 13:21:06 +0000, Conrad Winchester <conradwinchester at me.com> wrote:
>Hi all,
>
>I  am writing a restful twisted (8.1.0) server and am trying to return 
>useful error statuses from requests. The problem is that even  following the 
>documentation extremely carefully I am getting an  AlreadyCalled Error every 
>time I generate a failure. Here is my main  class (leaving out code that I 
>feel is not relevant to the question:
>
>from xml.dom import minidom
>from twisted.web import server, resource
>
>from FWGException import FWGException
>
>class DeferredPostHandler(resource.Resource,minidom.Document):
>
>     NOT_IMPLEMENTED = 501
>     BAD_REQUEST = 400
>
>     def writeError(self, failure, request, *args, **kw):
>         failure.trap(FWGException)
>         request.setResponseCode(self.errorCode)
>         request.write("Error handling request: %s" % 
>failure.getErrorMessage())
>         request.finish()
>
>     def writeResult(self, result, request, *args, **kw):
>         self.writexml(request)
>         request.finish()
>
>     def render_GET(self, request):
>         self.process=self.db.runInteraction(self.processForm,request)

I think that self.db is a ConnectionPool instance.  This means that here,
you're starting self.processForm in a thread.  I'm not sure if this is
the reason you're having difficulties, but it may be.  See below.

>         self.process.addCallbacks(self.writeResult, self.writeError, 
>[request], {}, [request], {})
>         return server.NOT_DONE_YET
>
>
>I have a handler that extends this
>
>from DeferredPostHandler import DeferredPostHandler
>from twisted.web import http
>from twisted.python.failure import Failure
>from FWGException import FWGException
>
>class CollectionAdminHandler(DeferredPostHandler):
>
>     def __init__(self, task, db, config):
>         DeferredPostHandler.__init__(self,db)
>         self.config = config
>         self.task = task
>         self.errorCode = http.OK
>
>     def processForm(self, cursor, request):
>
>         if self.task == 'add':
>             self.addCollection(cursor, request)
>
>         elif self.task == 'delete':
>             self.deleteCollection(cursor, request)
>
>         else:
>             self.errorCode = DeferredPostHandler.NOT_IMPLEMENTED
>             fail = Failure(FWGException("Unsupported Task"))
>             self.process.errback(fail)

Here you're creating a Failure and errbacking a Deferred in a thread, since
processForm is running in a thread.  This isn't allowed.  Twisted APIs are
generally not safe to be called in any thread except the reactor thread.

>
>     def addCollection(self, cursor, request):
>         fail = None
>         if self.isValidAddRequest(request):
>             pass
>         else:
>             self.errorCode = DeferredPostHandler.BAD_REQUEST
>             fail = Failure(FWGException("Missing Parameter"))
>
>         if fail:
>             self.process.errback(fail);

Likewise here.

>
>     def deleteCollection(self, cursor, request):
>         print 'Delete Collection'
>
>     def isValidAddRequest(self, request):
>         return 'title' in request.args and 'category' in request.args  and 
>'date' in request.args
>
>
>Unfortunately whenever I call
>
>
>self.process.errback(fail)
>

To remove the incorrect calls to Twisted APIs from a thread, you should
probably just raise an exception where you're currently errbacking that
Deferred.  In render_GET, or in writeError, you can handle the failure
which will result from that.

Ah, and now I see your problem.  self.process is the Deferred returned
by runInteraction.  You're not supposed to errback that Deferred (or
callback it either).  A pretty good rule of thumb is that if you create
a Deferred, then you get to fire it.  In this case, runInteraction is
creating it, so runInteraction gets to fire it.  runInteraction will
fire it with the result of processForm, so that's why you get the error.
You're firing that Deferred and runInteraction is firing it.

Jean-Paul



From conradwinchester at me.com  Sat Feb 28 09:57:33 2009
From: conradwinchester at me.com (Conrad Winchester)
Date: Sat, 28 Feb 2009 14:57:33 +0000
Subject: [Twisted-Python] Why do I get an AlreadyCalledError?
In-Reply-To: <20090228141630.12853.1235986472.divmod.quotient.15283@henry.divmod.com>
References: <20090228141630.12853.1235986472.divmod.quotient.15283@henry.divmod.com>
Message-ID: <EAED0465-9458-44D2-8AC1-B6F4EBFD57E8@me.com>

Thanks Jean-Paul,

Useful information, but then I am confused -

If I am running in a deferred how do I cause the errback to be called  
instead of the normal (non-error) callback?  How do I pass a failure  
object to the error handler? How should I do the  
self.process.errback(fail)?

All of this has to happen inside of the deferred doesn't it, because  
it is the deferred that is doing the work and where the errors will  
occur?

Conrad

On 28 Feb 2009, at 14:16, Jean-Paul Calderone wrote:

> On Sat, 28 Feb 2009 13:21:06 +0000, Conrad Winchester <conradwinchester at me.com 
> > wrote:
>> Hi all,
>>
>> I  am writing a restful twisted (8.1.0) server and am trying to  
>> return useful error statuses from requests. The problem is that  
>> even  following the documentation extremely carefully I am getting  
>> an  AlreadyCalled Error every time I generate a failure. Here is my  
>> main  class (leaving out code that I feel is not relevant to the  
>> question:
>>
>> from xml.dom import minidom
>> from twisted.web import server, resource
>>
>> from FWGException import FWGException
>>
>> class DeferredPostHandler(resource.Resource,minidom.Document):
>>
>>    NOT_IMPLEMENTED = 501
>>    BAD_REQUEST = 400
>>
>>    def writeError(self, failure, request, *args, **kw):
>>        failure.trap(FWGException)
>>        request.setResponseCode(self.errorCode)
>>        request.write("Error handling request: %s" %  
>> failure.getErrorMessage())
>>        request.finish()
>>
>>    def writeResult(self, result, request, *args, **kw):
>>        self.writexml(request)
>>        request.finish()
>>
>>    def render_GET(self, request):
>>        self.process=self.db.runInteraction(self.processForm,request)
>
> I think that self.db is a ConnectionPool instance.  This means that  
> here,
> you're starting self.processForm in a thread.  I'm not sure if this is
> the reason you're having difficulties, but it may be.  See below.
>
>>        self.process.addCallbacks(self.writeResult, self.writeError,  
>> [request], {}, [request], {})
>>        return server.NOT_DONE_YET
>>
>>
>> I have a handler that extends this
>>
>> from DeferredPostHandler import DeferredPostHandler
>> from twisted.web import http
>> from twisted.python.failure import Failure
>> from FWGException import FWGException
>>
>> class CollectionAdminHandler(DeferredPostHandler):
>>
>>    def __init__(self, task, db, config):
>>        DeferredPostHandler.__init__(self,db)
>>        self.config = config
>>        self.task = task
>>        self.errorCode = http.OK
>>
>>    def processForm(self, cursor, request):
>>
>>        if self.task == 'add':
>>            self.addCollection(cursor, request)
>>
>>        elif self.task == 'delete':
>>            self.deleteCollection(cursor, request)
>>
>>        else:
>>            self.errorCode = DeferredPostHandler.NOT_IMPLEMENTED
>>            fail = Failure(FWGException("Unsupported Task"))
>>            self.process.errback(fail)
>
> Here you're creating a Failure and errbacking a Deferred in a  
> thread, since
> processForm is running in a thread.  This isn't allowed.  Twisted  
> APIs are
> generally not safe to be called in any thread except the reactor  
> thread.
>
>>
>>    def addCollection(self, cursor, request):
>>        fail = None
>>        if self.isValidAddRequest(request):
>>            pass
>>        else:
>>            self.errorCode = DeferredPostHandler.BAD_REQUEST
>>            fail = Failure(FWGException("Missing Parameter"))
>>
>>        if fail:
>>            self.process.errback(fail);
>
> Likewise here.
>
>>
>>    def deleteCollection(self, cursor, request):
>>        print 'Delete Collection'
>>
>>    def isValidAddRequest(self, request):
>>        return 'title' in request.args and 'category' in  
>> request.args  and 'date' in request.args
>>
>>
>> Unfortunately whenever I call
>>
>>
>> self.process.errback(fail)
>>
>
> To remove the incorrect calls to Twisted APIs from a thread, you  
> should
> probably just raise an exception where you're currently errbacking  
> that
> Deferred.  In render_GET, or in writeError, you can handle the failure
> which will result from that.
>
> Ah, and now I see your problem.  self.process is the Deferred returned
> by runInteraction.  You're not supposed to errback that Deferred (or
> callback it either).  A pretty good rule of thumb is that if you  
> create
> a Deferred, then you get to fire it.  In this case, runInteraction is
> creating it, so runInteraction gets to fire it.  runInteraction will
> fire it with the result of processForm, so that's why you get the  
> error.
> You're firing that Deferred and runInteraction is firing it.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Sat Feb 28 22:06:22 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 28 Feb 2009 22:06:22 -0500
Subject: [Twisted-Python] Why do I get an AlreadyCalledError?
In-Reply-To: <EAED0465-9458-44D2-8AC1-B6F4EBFD57E8@me.com>
Message-ID: <20090301030622.12853.1384554830.divmod.quotient.15613@henry.divmod.com>

On Sat, 28 Feb 2009 14:57:33 +0000, Conrad Winchester <conradwinchester at me.com> wrote:
>Thanks Jean-Paul,
>
>Useful information, but then I am confused -
>
>If I am running in a deferred how do I cause the errback to be called 
>instead of the normal (non-error) callback?  How do I pass a failure  object 
>to the error handler? How should I do the  self.process.errback(fail)?
>
>All of this has to happen inside of the deferred doesn't it, because  it is 
>the deferred that is doing the work and where the errors will  occur?

If a Deferred is a container, it is a container for callbacks and results,
not for executing code.  So I wouldn't think about it in terms of "happening
inside of a Deferred".  Instead, consider this definition of a function like
runInteraction (but which doesn't involve databases or threads):

    def execute(callable, *args):
        d = Deferred()
        try:
            result = callable(*args)
        except:
             d.errback()
        else:
             d.callback(result)
        return d

In its handling of Deferreds and results, this is largely what runInteraction
does.  Notice how any exception raised by `callable? will be given to the
Deferred to be passed to any registered errbacks (in an "except" suite,
Deferred.errback with no arguments uses sys.exc_info() to find the current
exception).  This is a property of the implementation of `execute?, though,
not a property of Deferred.  (However, the code which executes the callbacks
or errbacks attached to a Deferred is similar to this.)

So in your case, if you just raise an exception, the errbacks you add to
the Deferred returned by runInteraction will have it passed to them as a
failure.  (Sorry for the somewhat disjointed nature of this response, I
started writing this email hours ago and I just noticed I hadn't finished
it, but wanted to send it before I go to bed).

Jean-Paul



From ishimoto at gembook.org  Mon Feb  2 03:48:50 2009
From: ishimoto at gembook.org (Atsuo Ishimoto)
Date: Mon, 2 Feb 2009 19:48:50 +0900
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from the
	client side?
In-Reply-To: <797440730901310118j2d423510pac4dc206ba51a1e4@mail.gmail.com>
References: <797440730901310118j2d423510pac4dc206ba51a1e4@mail.gmail.com>
Message-ID: <797440730902020248t30042234ob6b12b325804bdd4@mail.gmail.com>

Investigating further, I found this is not SSL related problem, but in
my code may have bug. In the following script, I expect that reactor
stops in 2 secs after it started, but connectionLost() is not fired at
all.

Is this a bug in Twisted? Or Am I missing something?


=========================================
from twisted.protocols import basic
from twisted.internet import protocol, reactor

serverfactory = protocol.Factory()
serverfactory.protocol = basic.LineOnlyReceiver
port = reactor.listenTCP(9084, serverfactory, interface='127.0.0.1')

CANCELED = False
class Client(basic.LineReceiver):
    def connectionMade(self):
        class dmyfile:
            def read(self, n):
                if CANCELED:
                    return
                else:
                    return '1'

        s = basic.FileSender()
        print "start sending"

        def f1(lastChunk):
            print "finished"

        def f2(reason):
            print "failed"
            print reason

        s.beginFileTransfer(
            dmyfile(), self.transport, None
        ).addCallbacks(f1, f2)

    def connectionLost(self, conn, reason=protocol.connectionDone):
        print "protocol:connectionlost"


class Factory(protocol.ClientFactory):
    protocol = Client

    def clientConnectionLost(self, conn, reason):
        print "clientConnectionLost"
        reactor.stop()

conn = reactor.connectTCP('127.0.0.1', 9084, Factory())

def cancel():
    print "cancel", conn.state
    global CANCELED
    CANCELED = True
    conn.disconnect()

reactor.callLater(2, cancel) # disconnect 2 sec later
reactor.run()



From exarkun at divmod.com  Mon Feb  2 06:18:42 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 2 Feb 2009 08:18:42 -0500
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from
	the client side?
In-Reply-To: <797440730902020248t30042234ob6b12b325804bdd4@mail.gmail.com>
Message-ID: <20090202131842.12853.2121882667.divmod.quotient.2216@henry.divmod.com>

On Mon, 2 Feb 2009 19:48:50 +0900, Atsuo Ishimoto <ishimoto at gembook.org> wrote:
>Investigating further, I found this is not SSL related problem, but in
>my code may have bug. In the following script, I expect that reactor
>stops in 2 secs after it started, but connectionLost() is not fired at
>all.
>
>Is this a bug in Twisted? Or Am I missing something?
>

This does look like a bug in Twisted.  Could you file a ticket for it?

In the mean time, you can work around this by using a simpler cancel
technique.  Get rid of the "conn.disconnect()" call in cancel and
instead call the protocol's transport's loseConnection method in f1
and f2 if CANCEL is set.

Jean-Paul



From johann.borck at densedata.com  Mon Feb  2 06:45:40 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Mon, 02 Feb 2009 14:45:40 +0100
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from
	the	client side?
In-Reply-To: <797440730902020248t30042234ob6b12b325804bdd4@mail.gmail.com>
References: <797440730901310118j2d423510pac4dc206ba51a1e4@mail.gmail.com>
	<797440730902020248t30042234ob6b12b325804bdd4@mail.gmail.com>
Message-ID: <4986F904.8000309@densedata.com>

Atsuo Ishimoto wrote:

...
> class Client(basic.LineReceiver):
>     def connectionMade(self):
>         class dmyfile:
>             def read(self, n):
>                 if CANCELED:
>                     return
>                 else:
>                     return '1'
>
>         s = basic.FileSender()
>         print "start sending"
>
>         def f1(lastChunk):
>             print "finished"
>
>   
...
> def cancel():
>     print "cancel", conn.state
>     global CANCELED
>     CANCELED = True
>     conn.disconnect()
>
>   
I think the problem is that you call conn.disconnect before the 
FileSender has a chance to call unregisterProducer on the transport (in 
real life before it has sent the whole file). If the producer is not 
unregistered, the doWrite() method called from the reactor doesn't even 
check if the connection is in 'disconnecting' state, assumes there's 
more data to come, and since no further events occur on the channel, the 
connection just remains open. You can check that by manually writing one 
more byte to the transport in f1, after FileSender has unregistered 
itself. The correct way is to call 
conn.disconnect()/transport.loseConnection() in f1 instead of in cancel.

from t.i.abstract.FileDescriptor.loseConnection.__doc__:
"... If you have a producer registered, the connection won't be closed 
until the producer is finished. Therefore, make sure you unregister your 
producer when it's finished, or the connection willnever close ..."

hth, Johann
> reactor.callLater(2, cancel) # disconnect 2 sec later
> reactor.run()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   




From exarkun at divmod.com  Mon Feb  2 07:35:31 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 2 Feb 2009 09:35:31 -0500
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from
	the	client side?
In-Reply-To: <4986F904.8000309@densedata.com>
Message-ID: <20090202143531.12853.926748917.divmod.quotient.2249@henry.divmod.com>

On Mon, 02 Feb 2009 14:45:40 +0100, Johann Borck <johann.borck at densedata.com> wrote:
>
>[snip]
>The correct way 
>is to call conn.disconnect()/transport.loseConnection() in f1 instead of in 
>cancel.

It's "correct" in that it works around the bug in Twisted.  However, this
*is* a bug in Twisted which should be fixed.  Then it will be just as
correct to do it one way as the other.

Jean-Paul



From ishimoto at gembook.org  Mon Feb  2 07:50:39 2009
From: ishimoto at gembook.org (Atsuo Ishimoto)
Date: Mon, 2 Feb 2009 23:50:39 +0900
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from the
	client side?
In-Reply-To: <20090202131842.12853.2121882667.divmod.quotient.2216@henry.divmod.com>
References: <797440730902020248t30042234ob6b12b325804bdd4@mail.gmail.com>
	<20090202131842.12853.2121882667.divmod.quotient.2216@henry.divmod.com>
Message-ID: <797440730902020650v2a1ba18fxb14b61c3c58a7656@mail.gmail.com>

> This does look like a bug in Twisted.  Could you file a ticket for it?

Done. #3644.

>
> In the mean time, you can work around this by using a simpler cancel
> technique.  Get rid of the "conn.disconnect()" call in cancel and
> instead call the protocol's transport's loseConnection method in f1
> and f2 if CANCEL is set.
>

Thank you for your comment, Jean-Paul , Johann. Now my application
working right!



From johann.borck at densedata.com  Mon Feb  2 08:15:16 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Mon, 02 Feb 2009 16:15:16 +0100
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from
	the	client side?
In-Reply-To: <20090202143531.12853.926748917.divmod.quotient.2249@henry.divmod.com>
References: <20090202143531.12853.926748917.divmod.quotient.2249@henry.divmod.com>
Message-ID: <49870E04.70506@densedata.com>

Jean-Paul Calderone wrote:
> On Mon, 02 Feb 2009 14:45:40 +0100, Johann Borck 
> <johann.borck at densedata.com> wrote:
>>
>> [snip]
>> The correct way is to call 
>> conn.disconnect()/transport.loseConnection() in f1 instead of in cancel.
>
> It's "correct" in that it works around the bug in Twisted.  However, this
> *is* a bug in Twisted which should be fixed.  Then it will be just as
> correct to do it one way as the other.
I personally find it counterintuitive to have an open connection after 
an explicit call to disconnect, but assumed it is intended behavior 
since it's explicitly mentioned in the docstring. However for the given 
example I'd still say the above is the only correct way unless Atsuo 
intends to break the connection before the transfer has finished.

Johann




From exarkun at divmod.com  Mon Feb  2 09:51:38 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 2 Feb 2009 11:51:38 -0500
Subject: [Twisted-Python] Re: How can I disconnect ssl connection from
	the	client side?
In-Reply-To: <49870E04.70506@densedata.com>
Message-ID: <20090202165138.12853.167805191.divmod.quotient.2312@henry.divmod.com>

On Mon, 02 Feb 2009 16:15:16 +0100, Johann Borck <johann.borck at densedata.com> wrote:
>Jean-Paul Calderone wrote:
>>On Mon, 02 Feb 2009 14:45:40 +0100, Johann Borck 
>><johann.borck at densedata.com> wrote:
>>>
>>>[snip]
>>>The correct way is to call conn.disconnect()/transport.loseConnection() in 
>>>f1 instead of in cancel.
>>
>>It's "correct" in that it works around the bug in Twisted.  However, this
>>*is* a bug in Twisted which should be fixed.  Then it will be just as
>>correct to do it one way as the other.
>I personally find it counterintuitive to have an open connection after an 
>explicit call to disconnect, but assumed it is intended behavior since it's 
>explicitly mentioned in the docstring. However for the given example I'd 
>still say the above is the only correct way unless Atsuo intends to break 
>the connection before the transfer has finished.

Since that contradicts the documentation, I don't know why you'd say it.
Are you trying to make some point other than that you think the documented
behavior is bad?

Jean-Paul



From rayjohnterrill at gmail.com  Mon Feb  2 12:22:01 2009
From: rayjohnterrill at gmail.com (ray terrill)
Date: Mon, 2 Feb 2009 13:22:01 -0600
Subject: [Twisted-Python] Twisted Conch SSH timeout
Message-ID: <557a21f40902021122q29bec5a3jff6ffef60899343c@mail.gmail.com>

I've got a Twisted Conch/SSH script that I inherited which I'm using to run
commands remotely on some servers.  I'd like to add a timeout for servers
that are down, etc (the script currently hangs on these), but I'm not sure
where to add that functionality.

Any help would be appreciated.
Thanks,
-Ray

=========Script Follows=========

#!/usr/bin/python

from twisted.conch import error
from twisted.conch.ssh import transport, connection, keys, userauth,
channel, common
from twisted.internet import defer, protocol, reactor

#a class to store the data returned from the ssh client code
class SSHData():
   data = ''

class ClientCommandTransport(transport.SSHClientTransport):
   def __init__(self, username, password, command):
      self.username = username
      self.password = password
      self.command = command

   def verifyHostKey(self, pubKey, fingerprint):
      # in a real app, you should verify that the fingerprint matches
      # the one you expected to get from this server
      return defer.succeed(True)

   def connectionSecure(self):
      self.requestService(
         PasswordAuth(self.username, self.password,
            ClientConnection(self.command)))

class PasswordAuth(userauth.SSHUserAuthClient):
   def __init__(self, user, password, connection):
      userauth.SSHUserAuthClient.__init__(self, user, connection)
      self.password = password

   def getPassword(self, prompt=None):
      return defer.succeed(self.password)

class ClientConnection(connection.SSHConnection):
   def __init__(self, cmd, *args, **kwargs):
      connection.SSHConnection.__init__(self)
      self.command = cmd

   def serviceStarted(self):
      self.openChannel(CommandChannel(self.command, conn=self))

class CommandChannel(channel.SSHChannel):
   name = 'session'

   def __init__(self, command, *args, **kwargs):
      channel.SSHChannel.__init__(self, *args, **kwargs)
      self.command = command

   def channelOpen(self, data):
      self.conn.sendRequest(
         self, 'exec', common.NS(self.command), wantReply=True).addCallback(
         self._gotResponse)

   def _gotResponse(self, _):
      self.conn.sendEOF(self)

   def dataReceived(self, data):
      SSHData.data = data

   def closed(self):
      reactor.stop()

class ClientCommandFactory(protocol.ClientFactory):
   def __init__(self, username, password, command):
      self.username = username
      self.password = password
      self.command = command
      self.deferred = defer.Deferred()

   def buildProtocol(self, addr):
      protocol = ClientCommandTransport(
      self.username, self.password, self.command)
      return protocol

def testConnect(username, password, command, server):
   testFactory = ClientCommandFactory(username, password, command)
   reactor.connectTCP(server, 22, testFactory)
   return testFactory.deferred

def handleSuccess(result, port):
   print "Connected to port %i" % port
   reactor.stop()

def handleFailure(failure, port):
   print "Error connecting to port %i: %s" % (
      port, failure.getErrorMessage())
   reactor.stop()

if __name__ == "__main__":
   import sys, getpass

   server = sys.argv[1]
   command = sys.argv[2]
   username = raw_input("Username: ")
   password = getpass.getpass("Password: ")

   connecting = testConnect(username, password, command, server)
   #connecting.addCallback(handleSuccess, server)
   #connecting.addErrback(handleFailure, server)
   connecting.setTimeout(1, handleError)
   reactor.run()

   print "The data I got back from the ssh client is " + SSHData.data
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090202/bbde2fc8/attachment.html>

From andrewfr_ice at yahoo.com  Mon Feb  2 15:47:47 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 2 Feb 2009 14:47:47 -0800 (PST)
Subject: [Twisted-Python] Maximum Recursion Depth Error with Twisted
	8.2/Stackless 2.6.1
Message-ID: <579294.777.qm@web34203.mail.mud.yahoo.com>

Hi Colleagues:

I recently updated to Stackless 2.6.1 and Twisted 8.2. I executed the following programme that works fine under Stackless 2.5.2 and Twisted (including 8.2) and I received the following error:

traceback (most recent call last):
          File "ToyProcessor5.py", line 60, in twistedReactor
            reactor.run()
          File "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
, line 1048, in run
            self.mainLoop()
        --- <exception caught here> ---
          File "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
, line 1057, in mainLoop
            self.runUntilCurrent()
          File "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
, line 707, in runUntilCurrent
            log.deferr()
          File "/usr/local/lib/python2.6/site-packages/twisted/python/log.py", l
ine 153, in err
            _stuff = failure.Failure()
          File "/usr/local/lib/python2.6/site-packages/twisted/python/failure.py
", line 265, in __init__
            parentCs = reflect.allYourBase(self.type)
", line 542, in allYourBase
            accumulateBases(classObj, l, baseClass)
          File "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py", line 550, in accumulateBases
            accumulateBases(base, l, baseClass)
          File "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py", line 550, in accumulateBases
            accumulateBases(base, l, baseClass)
          File "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py", line 550, in accumulateBases
            accumulateBases(base, l, baseClass)
          File "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py", line 550, in accumulateBases
            accumulateBases(base, l, baseClass)
        exceptions.RuntimeError: maximum recursion depth exceeded

Similarily written programmes fail in the same fashion. What is suspicious is that there is no recursion in the offending section. Even if I create one worker tasklet, I get the same error.

def twistedReactor():
    l = task.LoopingCall(stackless.schedule)
    l.start(.01)
    reactor.run()

however, if I change

l = task.LoopingCall(stackless.schedule)

to

l = task.LoopingCall(tick)

and tick is

def tick():
    stackless.schedule()

the programme works. Although a work around, I would like to find the real problem.

What particular worries me is when I created small test examples, I was not  able to recreate the problem. Something else is going on....

What I would appreciate is some hints as to what may be happening.  

- I normally don't expect "Maximum Recursion Depth" errors in Stackless. 
- What is the reflect.allYourBases stuff? 
- What is log.deferr? (I don't recall seeing that method).

If I get few clues, it would make it easier for me to write new tests and zero in on the problem. Hopefully the problem is with my code rather than Stackless 2.6.1 and/or Twisted 8.2

I have included some sample code. Unfortunately ToyProcessor5.py is a bit large (I have newer code that is smaller but requires more files)

Cheers,
Andrew












      
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ToyProcessor5.py
Type: text/x-python
Size: 13450 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090202/8ecf9fca/attachment-0006.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Bad.py
Type: text/x-python
Size: 1486 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090202/8ecf9fca/attachment-0007.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Good.py
Type: text/x-python
Size: 1444 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090202/8ecf9fca/attachment-0008.py>

From paulswartz at gmail.com  Mon Feb  2 18:32:43 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Mon, 2 Feb 2009 20:32:43 -0500
Subject: [Twisted-Python] Twisted Conch SSH timeout
In-Reply-To: <557a21f40902021122q29bec5a3jff6ffef60899343c@mail.gmail.com>
References: <557a21f40902021122q29bec5a3jff6ffef60899343c@mail.gmail.com>
Message-ID: <324cfb540902021732y1736baeam45335382ca1e5f02@mail.gmail.com>

On Mon, Feb 2, 2009 at 2:22 PM, ray terrill <rayjohnterrill at gmail.com> wrote:
> I've got a Twisted Conch/SSH script that I inherited which I'm using to run
> commands remotely on some servers.  I'd like to add a timeout for servers
> that are down, etc (the script currently hangs on these), but I'm not sure
> where to add that functionality.

It's probably hanging because you're not handling connectionLost() in
the Channel or the Transport.  One of those should get called when the
connection stops (including via TCP timeout).

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin



From wthie at thiengineering.ch  Wed Feb  4 03:04:26 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 04 Feb 2009 11:04:26 +0100
Subject: [Twisted-Python] Traceback on loseConnection
In-Reply-To: <579294.777.qm@web34203.mail.mud.yahoo.com>
References: <579294.777.qm@web34203.mail.mud.yahoo.com>
Message-ID: <4989682A.3070100@thiengineering.ch>

Hi all

My users are complaining that they get the odd disconnect while using my 
  site built with nevow/athena on FreeBSD 7.1 with the poll reactor. I 
recently switched to twisted 8.2 release and am now observing 199 
'Unhandled Error' out of 298436 logged requests with the following 
traceback.

Any clues?

TIA, Werner

2009-02-04 05:21:29+0100 [ProxyClient,client] Unhandled Error
         Traceback (most recent call last):
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/application/app.py", 
line 348, in runReactorWithLogging
             reactor.run()
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/base.py", 
line 1148, in run
             self.mainLoop()
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/base.py", 
line 1160, in mainLoop
             self.doIteration(t)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/pollreactor.py", 
line 165, in doPoll
             log.callWithLogger(selectable, _drdw, selectable, fd, event)
         --- <exception caught here> ---
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/python/log.py", 
line 84, in callWithLogger
             return callWithContext({"system": lp}, func, *args, **kw)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/python/log.py", 
line 69, in callWithContext
             return context.call({ILogContext: newCtx}, func, *args, **kw)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/python/context.py", 
line 59, in callWithContext
             return self.currentContext().callWithContext(ctx, func, 
*args, **kw)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/python/context.py", 
line 37, in callWithContext
             return func(*args,**kw)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/pollreactor.py", 
line 189, in _doReadOrWrite
             self._disconnectSelectable(selectable, why, inRead)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/posixbase.py", 
line 194, in _disconnectSelectable
             selectable.connectionLost(failure.Failure(why))
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/tcp.py", 
line 676, in connectionLost
             Connection.connectionLost(self, reason)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/internet/tcp.py", 
line 518, in connectionLost
             protocol.connectionLost(reason)
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/web/http.py", 
line 426, in connectionLost
             self.handleResponseEnd()
           File 
"/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128-py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/web/proxy.py", 
line 79, in handleResponseEnd
             self.father.channel.transport.loseConnection()
         exceptions.AttributeError: 'NoneType' object has no attribute 
'transport'







From gabriel.rossetti at arimaz.com  Wed Feb  4 03:15:38 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 04 Feb 2009 11:15:38 +0100
Subject: [Twisted-Python] redefine signal handlers
Message-ID: <49896ACA.1090005@arimaz.com>

Hello everyone,

I would like to run some cleanup code when my Twisted app receives a 
signal (SIGINT/SIGBREAK/SIGTERM).

I saw that "_SignalReactorMixin" sets the handlers and that 
"ReactorBase" defines the default handlers :

     def sigInt(self, *args):
        """Handle a SIGINT interrupt.
        """
        log.msg("Received SIGINT, shutting down.")
        self.callFromThread(self.stop)

    def sigBreak(self, *args):
        """Handle a SIGBREAK interrupt.
        """
        log.msg("Received SIGBREAK, shutting down.")
        self.callFromThread(self.stop)

    def sigTerm(self, *args):
        """Handle a SIGTERM interrupt.
        """
        log.msg("Received SIGTERM, shutting down.")
        self.callFromThread(self.stop)

My question is how can I redefine them, other than monkey patching or 
inheriting the reactor and over-riding them (which I'd rather not do 
since some of my code uses the windows reactor when on windows since I 
was having problems with windows event)? Is there such a mechanism, 
something like setDefaultSig("SIGINT, mySigIntHandler)?

Thank you,
Gabriel




From reza at getpeer.com  Wed Feb  4 03:32:19 2009
From: reza at getpeer.com (Reza Lotun)
Date: Wed, 4 Feb 2009 10:32:19 +0000
Subject: [Twisted-Python] redefine signal handlers
In-Reply-To: <49896ACA.1090005@arimaz.com>
References: <49896ACA.1090005@arimaz.com>
Message-ID: <356e30830902040232y30bb0442s356f3a2514ac7ad1@mail.gmail.com>

Hi Gabriel,

On Wed, Feb 4, 2009 at 10:15 AM, Gabriel Rossetti
<gabriel.rossetti at arimaz.com> wrote:
> Hello everyone,
>
> I would like to run some cleanup code when my Twisted app receives a signal
> (SIGINT/SIGBREAK/SIGTERM).
>
> I saw that "_SignalReactorMixin" sets the handlers and that "ReactorBase"
> defines the default handlers : ...
> My question is how can I redefine them, other than monkey patching or
> inheriting the reactor and over-riding them (which I'd rather not do since
> some of my code uses the windows reactor when on windows since I was having
> problems with windows event)? Is there such a mechanism, something like
> setDefaultSig("SIGINT, mySigIntHandler)?

One easy way to do it is to reactor.run(installSignalHandlers=False)
and then manually install your own signal handlers in the usual way
(using the python signal library).

Cheers,
Reza


-- 
Reza Lotun
Senior Software Engineer
Peer Technologies Limited
reza at getpeer.com



From arie.lakeman at gmail.com  Wed Feb  4 06:35:59 2009
From: arie.lakeman at gmail.com (Arie Lakeman)
Date: Wed, 4 Feb 2009 13:35:59 +0000
Subject: [Twisted-Python] installation help
Message-ID: <6352c2fb0902040535p4f3bac06x8838a4a921f631e8@mail.gmail.com>

Hi,
I've taken an interest in event driven programming, I came across twisted
and liked the look of it, I've tried downloading the .dmg from
twistedmatrix/trac unfortunately after trying multiple installations
including direct installation to both the folder where python is found
(under system/frameworks...) and by changing the sys.path to another
directory I fail to be able to import twisted in the interactive prompt.  I
have a hunch I may be missing OpenSSL (occassional errors) but I don't know
enough about this (after googling) to be able to resolve this.

Essentially I'm interested in writing local event-driven code, whereby I
write specific objects that are capable of interaction in a more natural
manner than Python would permit by threading and classes, so I'm perfectly
happy with any solution that allows me to only locally program event-driven
code.

I would really appreciate any help whatsoever on how to resolve this
installation problem!

thanks,

Arie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090204/01259fa7/attachment.html>

From andrewfr_ice at yahoo.com  Wed Feb  4 07:20:19 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 4 Feb 2009 06:20:19 -0800 (PST)
Subject: [Twisted-Python] RE: [Stackless] Maximum Recursion Depth Error with
	Twisted 8.2/Stackless 2.6.1
In-Reply-To: <930F189C8A437347B80DF2C156F7EC7F04DB227AD5@exchis.ccp.ad.local>
Message-ID: <109248.54007.qm@web34206.mail.mud.yahoo.com>

Hi Kristjan:

Thanks for the explanation and the effort. Tomorrow, I'll hunt down a few things on my end. If you find ToyProcessor5 too convoluted, I'll post the code for another prototype that should be easier to follow.

Cheers,
Andrew


--- On Tue, 2/3/09, Kristján Valur Jónsson <kristjan at ccpgames.com> wrote:

> From: Kristján Valur Jónsson <kristjan at ccpgames.com>
> Subject: RE: [Stackless] Maximum Recursion Depth Error with Twisted 8.2/Stackless 2.6.1
> To: "Andrew Francis" <andrewfr_ice at yahoo.com>, "twisted-python at twistedmatrix.com" <twisted-python at twistedmatrix.com>
> Cc: "stackless at stackless.com" <stackless at stackless.com>
> Date: Tuesday, February 3, 2009, 1:49 AM
> Stackless does stack copying if it senses that the C stack
> has grown to deep.  But it still tries to maintain the
> recursion depth limit set in "sys".  There is
> probably a bug somewhere in the bookkeeping of this.
> I'll try trawling through the code for the
> corresponding stuff If I find the time today.
> K
> 
> -----Original Message-----
> From: stackless-bounces at stackless.com
> [mailto:stackless-bounces at stackless.com] On Behalf Of Andrew
> Francis
> Sent: 2. febrúar 2009 22:48
> To: twisted-python at twistedmatrix.com
> Cc: stackless at stackless.com
> Subject: [Stackless] Maximum Recursion Depth Error with
> Twisted 8.2/Stackless 2.6.1
> 
> Hi Colleagues:
> 
> I recently updated to Stackless 2.6.1 and Twisted 8.2. I
> executed the following programme that works fine under
> Stackless 2.5.2 and Twisted (including 8.2) and I received
> the following error:
> 
> traceback (most recent call last):
>           File "ToyProcessor5.py", line 60, in
> twistedReactor
>             reactor.run()
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
> , line 1048, in run
>             self.mainLoop()
>         --- <exception caught here> ---
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
> , line 1057, in mainLoop
>             self.runUntilCurrent()
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/internet/base.py"
> , line 707, in runUntilCurrent
>             log.deferr()
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/log.py",
> l ine 153, in err
>             _stuff = failure.Failure()
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/failure.py
> ", line 265, in __init__
>             parentCs = reflect.allYourBase(self.type)
> ", line 542, in allYourBase
>             accumulateBases(classObj, l, baseClass)
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py",
> line 550, in accumulateBases
>             accumulateBases(base, l, baseClass)
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py",
> line 550, in accumulateBases
>             accumulateBases(base, l, baseClass)
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py",
> line 550, in accumulateBases
>             accumulateBases(base, l, baseClass)
>           File
> "/usr/local/lib/python2.6/site-packages/twisted/python/reflect.py",
> line 550, in accumulateBases
>             accumulateBases(base, l, baseClass)
>         exceptions.RuntimeError: maximum recursion depth
> exceeded
> 
> Similarily written programmes fail in the same fashion.
> What is suspicious is that there is no recursion in the
> offending section. Even if I create one worker tasklet, I
> get the same error.
> 
> def twistedReactor():
>     l = task.LoopingCall(stackless.schedule)
>     l.start(.01)
>     reactor.run()
> 
> however, if I change
> 
> l = task.LoopingCall(stackless.schedule)
> 
> to
> 
> l = task.LoopingCall(tick)
> 
> and tick is
> 
> def tick():
>     stackless.schedule()
> 
> the programme works. Although a work around, I would like
> to find the real problem.
> 
> What particular worries me is when I created small test
> examples, I was not  able to recreate the problem. Something
> else is going on....
> 
> What I would appreciate is some hints as to what may be
> happening.  
> 
> - I normally don't expect "Maximum Recursion
> Depth" errors in Stackless. 
> - What is the reflect.allYourBases stuff? 
> - What is log.deferr? (I don't recall seeing that
> method).
> 
> If I get few clues, it would make it easier for me to write
> new tests and zero in on the problem. Hopefully the problem
> is with my code rather than Stackless 2.6.1 and/or Twisted
> 8.2
> 
> I have included some sample code. Unfortunately
> ToyProcessor5.py is a bit large (I have newer code that is
> smaller but requires more files)
> 
> Cheers,
> Andrew


      



From exarkun at divmod.com  Wed Feb  4 07:55:24 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 4 Feb 2009 09:55:24 -0500
Subject: [Twisted-Python] redefine signal handlers
In-Reply-To: <356e30830902040232y30bb0442s356f3a2514ac7ad1@mail.gmail.com>
Message-ID: <20090204145524.12853.84309023.divmod.quotient.3392@henry.divmod.com>

On Wed, 4 Feb 2009 10:32:19 +0000, Reza Lotun <reza at getpeer.com> wrote:
>Hi Gabriel,
>
>On Wed, Feb 4, 2009 at 10:15 AM, Gabriel Rossetti
><gabriel.rossetti at arimaz.com> wrote:
>> Hello everyone,
>>
>> I would like to run some cleanup code when my Twisted app receives a signal
>> (SIGINT/SIGBREAK/SIGTERM).
>>
>> I saw that "_SignalReactorMixin" sets the handlers and that "ReactorBase"
>> defines the default handlers : ...
>> My question is how can I redefine them, other than monkey patching or
>> inheriting the reactor and over-riding them (which I'd rather not do since
>> some of my code uses the windows reactor when on windows since I was having
>> problems with windows event)? Is there such a mechanism, something like
>> setDefaultSig("SIGINT, mySigIntHandler)?
>
>One easy way to do it is to reactor.run(installSignalHandlers=False)
>and then manually install your own signal handlers in the usual way
>(using the python signal library).

If you do this, you'll break spawnProcess.  Fortunately, if you just
install a SIGINT handler, Twisted won't stomp on it:

    exarkun at charm:~$ python
    Python 2.5.2 (r252:60911, Jul 31 2008, 17:28:52) 
    [GCC 4.2.3 (Ubuntu 4.2.3-2ubuntu7)] on linux2
    Type "help", "copyright", "credits" or "license" for more information.
    >>> def f(*a):
    ...     print 'sigint'
    ... 
    >>> import signal
    >>> signal.signal(signal.SIGINT, f)
    <built-in function default_int_handler>
    >>> from twisted.internet import reactor
    >>> reactor.run()
    sigint
    sigint
    sigint
    Quit
    exarkun at charm:~$ 

Jean-Paul



From exarkun at divmod.com  Wed Feb  4 07:56:48 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 4 Feb 2009 09:56:48 -0500
Subject: [Twisted-Python] installation help
In-Reply-To: <6352c2fb0902040535p4f3bac06x8838a4a921f631e8@mail.gmail.com>
Message-ID: <20090204145648.12853.1122602576.divmod.quotient.3393@henry.divmod.com>

On Wed, 4 Feb 2009 13:35:59 +0000, Arie Lakeman <arie.lakeman at gmail.com> wrote:
>Hi,
>I've taken an interest in event driven programming, I came across twisted
>and liked the look of it, I've tried downloading the .dmg from
>twistedmatrix/trac unfortunately after trying multiple installations
>including direct installation to both the folder where python is found
>(under system/frameworks...) and by changing the sys.path to another
>directory I fail to be able to import twisted in the interactive prompt.  I
>have a hunch I may be missing OpenSSL (occassional errors) but I don't know
>enough about this (after googling) to be able to resolve this.

I've never tried to install Twisted on OS X except by using setup.py to do
a single-user installation.  However, I'm pretty sure that if you provide
more details about how exactly the installation process fails you'll be
more likely to get someone else who does have a clue to help you out.

Be detailed in what steps you took and what the consequences were.  Where
there are errors, include them verbatim.

Jean-Paul



From exarkun at divmod.com  Wed Feb  4 07:59:12 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 4 Feb 2009 09:59:12 -0500
Subject: [Twisted-Python] Traceback on loseConnection
In-Reply-To: <4989682A.3070100@thiengineering.ch>
Message-ID: <20090204145912.12853.199041922.divmod.quotient.3395@henry.divmod.com>

On Wed, 04 Feb 2009 11:04:26 +0100, Werner Thie <wthie at thiengineering.ch> wrote:
>Hi all
>
>My users are complaining that they get the odd disconnect while using my 
>site built with nevow/athena on FreeBSD 7.1 with the poll reactor. I 
>recently switched to twisted 8.2 release and am now observing 199 'Unhandled 
>Error' out of 298436 logged requests with the following traceback.
>
>Any clues?
>
>TIA, Werner
>
> [snip]
>           File "/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128- 
>py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/web/proxy.py", line 79, in 
>handleResponseEnd
>             self.father.channel.transport.loseConnection()
>         exceptions.AttributeError: 'NoneType' object has no attribute 
>'transport'
>

Anywhere there are that many dots in a single expression, there's bound to
be trouble. :)

It's probably something rather simple, like the connection being lost near
when the response ends.  It's probably also pretty easy to fix (by being
more careful in how lost connections are handled).  If you can create a
short example which reproduces the problem, that'll go a long way towards
helping it get fixed.  I suggest instrumenting the codepath that sets the
"channel" attribute to None and watching to see what happens.

Jean-Paul



From gabriel.rossetti at arimaz.com  Wed Feb  4 09:19:43 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 04 Feb 2009 17:19:43 +0100
Subject: [Twisted-Python] redefine signal handlers
In-Reply-To: <20090204145524.12853.84309023.divmod.quotient.3392@henry.divmod.com>
References: <20090204145524.12853.84309023.divmod.quotient.3392@henry.divmod.com>
Message-ID: <4989C01F.5070308@arimaz.com>

Jean-Paul Calderone wrote:
> On Wed, 4 Feb 2009 10:32:19 +0000, Reza Lotun <reza at getpeer.com> wrote:
>> Hi Gabriel,
>>
>> On Wed, Feb 4, 2009 at 10:15 AM, Gabriel Rossetti
>> <gabriel.rossetti at arimaz.com> wrote:
>>> Hello everyone,
>>>
>>> I would like to run some cleanup code when my Twisted app receives a 
>>> signal
>>> (SIGINT/SIGBREAK/SIGTERM).
>>>
>>> I saw that "_SignalReactorMixin" sets the handlers and that 
>>> "ReactorBase"
>>> defines the default handlers : ...
>>> My question is how can I redefine them, other than monkey patching or
>>> inheriting the reactor and over-riding them (which I'd rather not do 
>>> since
>>> some of my code uses the windows reactor when on windows since I was 
>>> having
>>> problems with windows event)? Is there such a mechanism, something like
>>> setDefaultSig("SIGINT, mySigIntHandler)?
>>
>> One easy way to do it is to reactor.run(installSignalHandlers=False)
>> and then manually install your own signal handlers in the usual way
>> (using the python signal library).
>
> If you do this, you'll break spawnProcess.  Fortunately, if you just
> install a SIGINT handler, Twisted won't stomp on it:
>
>    exarkun at charm:~$ python
>    Python 2.5.2 (r252:60911, Jul 31 2008, 17:28:52)    [GCC 4.2.3 
> (Ubuntu 4.2.3-2ubuntu7)] on linux2
>    Type "help", "copyright", "credits" or "license" for more information.
>    >>> def f(*a):
>    ...     print 'sigint'
>    ...    >>> import signal
>    >>> signal.signal(signal.SIGINT, f)
>    <built-in function default_int_handler>
>    >>> from twisted.internet import reactor
>    >>> reactor.run()
>    sigint
>    sigint
>    sigint
>    Quit
>    exarkun at charm:~$
> Jean-Paul
>
Ok, this is what I have been doing, but I suspect that it is the reason 
that my reactor won't stop sometimes (when SIGINT is sent). It usually 
happens with code using threads or wxpython support. I was wondering if 
my redefining handlers wasn't messing things up somehow...

Gabriel



From rayjohnterrill at gmail.com  Wed Feb  4 09:49:44 2009
From: rayjohnterrill at gmail.com (ray terrill)
Date: Wed, 4 Feb 2009 10:49:44 -0600
Subject: [Twisted-Python] Twisted Conch SSH timeout
In-Reply-To: <324cfb540902021732y1736baeam45335382ca1e5f02@mail.gmail.com>
References: <557a21f40902021122q29bec5a3jff6ffef60899343c@mail.gmail.com>
	<324cfb540902021732y1736baeam45335382ca1e5f02@mail.gmail.com>
Message-ID: <557a21f40902040849u6c0ba6d4r61a954b8fa510f96@mail.gmail.com>

Could you give me an example of how handling the connectionLost() could be
accomplished?  I'm not sure where I need to integrate that into what I've
already got.

-Ray

On Mon, Feb 2, 2009 at 7:32 PM, Paul Swartz <paulswartz at gmail.com> wrote:

> On Mon, Feb 2, 2009 at 2:22 PM, ray terrill <rayjohnterrill at gmail.com>
> wrote:
> > I've got a Twisted Conch/SSH script that I inherited which I'm using to
> run
> > commands remotely on some servers.  I'd like to add a timeout for servers
> > that are down, etc (the script currently hangs on these), but I'm not
> sure
> > where to add that functionality.
>
> It's probably hanging because you're not handling connectionLost() in
> the Channel or the Transport.  One of those should get called when the
> connection stops (including via TCP timeout).
>
> -p
> --
> Paul Swartz
> paulswartz at gmail dot com
> http://paulswartz.net/
> AIM: z3penguin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090204/9119d281/attachment.html>

From arie.lakeman at gmail.com  Wed Feb  4 11:03:30 2009
From: arie.lakeman at gmail.com (Arie Lakeman)
Date: Wed, 4 Feb 2009 18:03:30 +0000
Subject: [Twisted-Python] installation help
In-Reply-To: <20090204145648.12853.1122602576.divmod.quotient.3393@henry.divmod.com>
References: <6352c2fb0902040535p4f3bac06x8838a4a921f631e8@mail.gmail.com>
	<20090204145648.12853.1122602576.divmod.quotient.3393@henry.divmod.com>
Message-ID: <6352c2fb0902041003m6336ece7vb2946bc80992c337@mail.gmail.com>

Hi,
Firstly, I either use the built-in version of Idle on mac which is 2.5, or
I'm using ActivePython 2.6, I'm not familiar with binaries so to save time
this is what I used.  I then install the .dmg of twisted to a file I create
on my desktop, then go into sys.path and add /Users/username/Desktop, then
trying 'import twisted' I get the following error:

Traceback (most recent call last):
  File "<pyshell#3>", line 1, in <module>
    import twisted
  File "/Users/arielakeman/Desktop/twisted/__init__.py", line 11, in
<module>
    import rand, crypto, SSL, tsafe
ImportError: No module named OpenSSL.crypto

I looked for but could not find an install.py file, and reading the readme
which accompanies twisted under installation it simply says: 'see INSTALL'.
 I'm running Mac OS 10.5.6 and would massively appreciate any help getting
twisted working, be it binaries or dmg!

Thanks

Arie

On Wed, Feb 4, 2009 at 2:56 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Wed, 4 Feb 2009 13:35:59 +0000, Arie Lakeman <arie.lakeman at gmail.com>
> wrote:
>
>> Hi,
>> I've taken an interest in event driven programming, I came across twisted
>> and liked the look of it, I've tried downloading the .dmg from
>> twistedmatrix/trac unfortunately after trying multiple installations
>> including direct installation to both the folder where python is found
>> (under system/frameworks...) and by changing the sys.path to another
>> directory I fail to be able to import twisted in the interactive prompt.
>>  I
>> have a hunch I may be missing OpenSSL (occassional errors) but I don't
>> know
>> enough about this (after googling) to be able to resolve this.
>>
>
> I've never tried to install Twisted on OS X except by using setup.py to do
> a single-user installation.  However, I'm pretty sure that if you provide
> more details about how exactly the installation process fails you'll be
> more likely to get someone else who does have a clue to help you out.
>
> Be detailed in what steps you took and what the consequences were.  Where
> there are errors, include them verbatim.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090204/522a97a3/attachment.html>

From matusis at yahoo.com  Wed Feb  4 17:37:04 2009
From: matusis at yahoo.com (Alec Matusis)
Date: Wed, 4 Feb 2009 16:37:04 -0800
Subject: [Twisted-Python] most efficient new connection rate limiting?
Message-ID: <013001c98729$e18b4720$a4a1d560$@com>

We need to limit the new connection rate from a given IP, such that for
example 10.10.1.10 cannot connect more often than 10 times per minute.

This is a high-volume TCP Twisted server, with about 500 new distinct IP
connections per second in the normal state (and we run 8 of these on each 8
core server, so ~4000 new conns/sec per box).

I am trying to find the least CPU intensive approach for this.

1) Create an dictionary {ip1:count1, ip2: count2, .} in the server, and
check the counts for each incoming connection. 
Disconnect with transport.loseConnection() if the threshold for ip:count is
exceeded.
Reset this dictionary to empty dict {} every minute with reactor.callLater
timer.

2) Use some Twisted rate limiter API that I am not familiar with?

3) Use iptables rate-limiting module like so:
iptables -I INPUT -p tcp --dport 8888 -i eth0 -m state --state NEW -m recent
--set
iptables -I INPUT -p tcp --dport 8888 -i eth0 -m state --state NEW -m recent
--update --seconds 60 --hitcount 10 -j DROP

Which one of these approaches would you recommend?




From paulswartz at gmail.com  Wed Feb  4 20:50:20 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Wed, 4 Feb 2009 22:50:20 -0500
Subject: [Twisted-Python] Twisted Conch SSH timeout
In-Reply-To: <557a21f40902040849u6c0ba6d4r61a954b8fa510f96@mail.gmail.com>
References: <557a21f40902021122q29bec5a3jff6ffef60899343c@mail.gmail.com>
	<324cfb540902021732y1736baeam45335382ca1e5f02@mail.gmail.com>
	<557a21f40902040849u6c0ba6d4r61a954b8fa510f96@mail.gmail.com>
Message-ID: <324cfb540902041950v72b994a3u6e5154cad2c815e5@mail.gmail.com>

On Wed, Feb 4, 2009 at 11:49 AM, ray terrill <rayjohnterrill at gmail.com> wrote:
> Could you give me an example of how handling the connectionLost() could be
> accomplished?  I'm not sure where I need to integrate that into what I've
> already got.

For example:

class ClientCommandTransport(
transport.SSHClientTransport):
   def __init__(self, username, password, command):
      self.username = username
      self.password = password
      self.command = command

   def verifyHostKey(self, pubKey, fingerprint):
      # in a real app, you should verify that the fingerprint matches
      # the one you expected to get from this server
      return defer.succeed(True)

   def connectionSecure(self):
      self.requestService(
         PasswordAuth(self.username, self.password,
            ClientConnection(self.command)))

    def connectionLost(self, reason):
        print 'do something because the connection went away'

HTH,
-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin



From stephen at thorne.id.au  Thu Feb  5 00:25:08 2009
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 5 Feb 2009 17:25:08 +1000
Subject: [Twisted-Python] most efficient new connection rate limiting?
In-Reply-To: <013001c98729$e18b4720$a4a1d560$@com>
References: <013001c98729$e18b4720$a4a1d560$@com>
Message-ID: <20090205072508.GA27714@thorne.id.au>

On 2009-02-04, Alec Matusis wrote:
> 1) Create an dictionary {ip1:count1, ip2: count2, .} in the server, and
> check the counts for each incoming connection. 
> Disconnect with transport.loseConnection() if the threshold for ip:count is
> exceeded.
> Reset this dictionary to empty dict {} every minute with reactor.callLater
> timer.
> 
> 2) Use some Twisted rate limiter API that I am not familiar with?
> 
> 3) Use iptables rate-limiting module like so:
> iptables -I INPUT -p tcp --dport 8888 -i eth0 -m state --state NEW -m recent
> --set
> iptables -I INPUT -p tcp --dport 8888 -i eth0 -m state --state NEW -m recent
> --update --seconds 60 --hitcount 10 -j DROP

I would recommend approach (3) because approach (1) will do an accept()
of the connection and then drop it, giving the host on the other end a
syn/ack transaction followed by a closed connection, and then it will
probably attempt to reconnect immediately.

Whereas (3) relies on the tcp/ip stack of the connecting host to send a
bunch of syn packets until it gets through, or times out and follows its
timeout logic.

-- 
Regards,
Stephen Thorne
Development Engineer
NetBox Blue - 1300 737 060

NetBox Blue is proud to be a sponsor and exhibitor at IBM's Solutions 
Showcase 2009 events. These are held in Perth, Adelaide, Brisbane, Sydney and 
Melbourne in February and March. 
For more details and to register please visit: 
http://www.ibm.com/solutionsshowcase/au


Scanned by the NetBox from NetBox Blue
(http://netboxblue.com/)




From wthie at thiengineering.ch  Thu Feb  5 03:34:05 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Thu, 05 Feb 2009 11:34:05 +0100
Subject: [Twisted-Python] Traceback on loseConnection
In-Reply-To: <20090204145912.12853.199041922.divmod.quotient.3395@henry.divmod.com>
References: <20090204145912.12853.199041922.divmod.quotient.3395@henry.divmod.com>
Message-ID: <498AC09D.9000508@thiengineering.ch>

Hi Jean-Paul

Sorry for coming back...

Just to be a little more precise:

This is a nevow/athena site I therefore have little done in the bowels 
of twisted and specially no artwork in handling loseConnection.

Site running on twisted SVN 25479 (appr 8.1.0) shows absolutely no problems.

Site running on twisted SVN 26124 (appr 8.2.0) shows this problem, which 
definitely means that something in the guts of twisted is now barfing at me.

But its only about 700 SVN commits in between, I think I will do a SA 
approach to figure out where this barfing starts and try to nail it to 
the relevant commit.

I would be more than thankful if somebody could spare me this effort by 
throwing in an educated guess.

Thxs, Werner

PS I like the one about the dots, that's why I'm not working with Java



Jean-Paul Calderone wrote:
> On Wed, 04 Feb 2009 11:04:26 +0100, Werner Thie 
> <wthie at thiengineering.ch> wrote:
>> Hi all
>>
>> My users are complaining that they get the odd disconnect while using 
>> my site built with nevow/athena on FreeBSD 7.1 with the poll reactor. 
>> I recently switched to twisted 8.2 release and am now observing 199 
>> 'Unhandled Error' out of 298436 logged requests with the following 
>> traceback.
>>
>> Any clues?
>>
>> TIA, Werner
>>
>> [snip]
>>           File 
>> "/usr/local/lib/python2.5/site-packages/Twisted-8.2.0_r26128- 
>> py2.5-freebsd-7.1-RELEASE-amd64.egg/twisted/web/proxy.py", line 79, in 
>> handleResponseEnd
>>             self.father.channel.transport.loseConnection()
>>         exceptions.AttributeError: 'NoneType' object has no attribute 
>> 'transport'
>>
> 
> Anywhere there are that many dots in a single expression, there's bound to
> be trouble. :)
> 
> It's probably something rather simple, like the connection being lost near
> when the response ends.  It's probably also pretty easy to fix (by being
> more careful in how lost connections are handled).  If you can create a
> short example which reproduces the problem, that'll go a long way towards
> helping it get fixed.  I suggest instrumenting the codepath that sets the
> "channel" attribute to None and watching to see what happens.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at divmod.com  Thu Feb  5 06:17:09 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 5 Feb 2009 08:17:09 -0500
Subject: [Twisted-Python] Traceback on loseConnection
In-Reply-To: <498AC09D.9000508@thiengineering.ch>
Message-ID: <20090205131709.12853.1865389699.divmod.quotient.3844@henry.divmod.com>

On Thu, 05 Feb 2009 11:34:05 +0100, Werner Thie <wthie at thiengineering.ch> wrote:
>Hi Jean-Paul
>
>Sorry for coming back...
>
>Just to be a little more precise:
>
>This is a nevow/athena site I therefore have little done in the bowels of 
>twisted and specially no artwork in handling loseConnection.
>
>Site running on twisted SVN 25479 (appr 8.1.0) shows absolutely no problems.
>
>Site running on twisted SVN 26124 (appr 8.2.0) shows this problem, which 
>definitely means that something in the guts of twisted is now barfing at me.

There must be something else involved.  The error is coming from
twisted.web.proxy, but that code isn't used by a plain Nevow/Athena
app.  How is the proxy code getting involved?

Jean-Paul



From exarkun at divmod.com  Thu Feb  5 14:56:51 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 5 Feb 2009 16:56:51 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090126231032.24460.1915218214.divmod.quotient.2295@henry.divmod.com>
Message-ID: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>

On Mon, 26 Jan 2009 18:10:32 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>Hello All,
>
>I'd like to organize another Twisted sprint in Cambridge, MA in February.
>As with previous sprints, this is an all day event, most likely hosted at
>the Divmod office in Porter Square, for Twisted hacking.  The two topics
>which have been raised thus far for this sprint are documentation - in
>particular, looking at Twisted documentation from a high-level and coming
>up with a coherent overall strategy for improving it - and deprecation
>(looking for old, bad APIs in Twisted which we should get rid of).  Of
>course, other topics are welcome as well.
>

The sprint will be held on February 22nd.  All are welcome.  If you need
details on how to get to the sprint, please contact me off-list.

Jean-Paul



From wthie at thiengineering.ch  Fri Feb  6 03:37:31 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Fri, 06 Feb 2009 11:37:31 +0100
Subject: [Twisted-Python] Traceback on loseConnection
In-Reply-To: <20090205131709.12853.1865389699.divmod.quotient.3844@henry.divmod.com>
References: <20090205131709.12853.1865389699.divmod.quotient.3844@henry.divmod.com>
Message-ID: <498C12EB.4080104@thiengineering.ch>

Hello Jean-Paul

> There must be something else involved.  The error is coming from
> twisted.web.proxy, but that code isn't used by a plain Nevow/Athena
> app.  How is the proxy code getting involved?

That remains a mistery to me, I'm certainly not doing any proxying in my 
source. The only thing I have is a redirect but this is via a fully 
qualified URI in case of my app going back to its root page which is a 
static page. In this particular case it's a util.Redirect().

Will have to try and build a test case how this pattern can be triggered.

Thanks for your help, Werner



From wthie at thiengineering.ch  Fri Feb  6 04:02:16 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Fri, 06 Feb 2009 12:02:16 +0100
Subject: [Twisted-Python] Bad file descriptor traceback when deamonnizing
 kqueue reactorwith twistd
In-Reply-To: <498C12EB.4080104@thiengineering.ch>
References: <20090205131709.12853.1865389699.divmod.quotient.3844@henry.divmod.com>
	<498C12EB.4080104@thiengineering.ch>
Message-ID: <498C18B8.8040407@thiengineering.ch>

Hi

When I run the following command (as root) on FreeBSD all is well with

twistd -rpoll -o ftp

I get a running ftp server process on port 2121.

Everything is also up and running (no daemonizing) after

twistd -rkqueue -no ftp

Not so with (daemonized)

twistd -rkqueue -o ftp

The process dies with the attached traceback in twisted.log

Shall I file a ticket for this?

Thanks, Werner

2009-02-06 11:45:01+0100 [-] Log opened.
2009-02-06 11:45:01+0100 [-] twistd 8.2.0 (/usr/local/bin/python 2.5.2) 
starting up.
2009-02-06 11:45:01+0100 [-] reactor class: 
twisted.internet.kqreactor.KQueueReactor.
2009-02-06 11:45:01+0100 [-] twisted.protocols.ftp.FTPFactory starting 
on 2121
2009-02-06 11:45:01+0100 [-] Starting factory 
<twisted.protocols.ftp.FTPFactory instance at 0x803d7ff38>
2009-02-06 11:45:01+0100 [-] Traceback (most recent call last):
2009-02-06 11:45:01+0100 [-]   File "/usr/local/bin/twistd", line 21, in 
<module>
2009-02-06 11:45:01+0100 [-]     run()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/scripts/twistd.py", line 
27, in run
2009-02-06 11:45:01+0100 [-]     app.run(runApp, ServerOptions)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/application/app.py", 
line 694, in run
2009-02-06 11:45:01+0100 [-]     runApp(config)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/scripts/twistd.py", line 
23, in runApp
2009-02-06 11:45:01+0100 [-]     _SomeApplicationRunner(config).run()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/application/app.py", 
line 423, in run
2009-02-06 11:45:01+0100 [-]     self.postApplication()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/scripts/_twistd_unix.py", 
line 206, in postApplication
2009-02-06 11:45:01+0100 [-]     self.startApplication(self.application)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/scripts/_twistd_unix.py", 
line 311, in startApplication
2009-02-06 11:45:01+0100 [-] 
service.IService(application).privilegedStartService()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/application/service.py", 
line 273, in privilegedStartService
2009-02-06 11:45:01+0100 [-]     service.privilegedStartService()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/application/internet.py", 
line 85, in privilegedStartService
2009-02-06 11:45:01+0100 [-]     self._port = self._getPort()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/application/internet.py", 
line 116, in _getPort
2009-02-06 11:45:01+0100 [-]     *self.args, **self.kwargs)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/posixbase.py", 
line 356, in listenTCP
2009-02-06 11:45:01+0100 [-]     p.startListening()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", line 
875, in startListening
2009-02-06 11:45:01+0100 [-]     self.startReading()
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/abstract.py", 
line 262, in startReading
2009-02-06 11:45:01+0100 [-]     self.reactor.addReader(self)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/kqreactor.py", 
line 125, in addReader
2009-02-06 11:45:01+0100 [-]     self._updateRegistration(fd, 
EVFILT_READ, EV_ADD)
2009-02-06 11:45:01+0100 [-]   File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/kqreactor.py", 
line 116, in _updateRegistration
2009-02-06 11:45:01+0100 [-]     self._kq.kevent([kevent(*args)], 0, 0)
2009-02-06 11:45:01+0100 [-] OSError: [Errno 9] Bad file descriptor



From thebbzoo at gmail.com  Fri Feb  6 09:30:19 2009
From: thebbzoo at gmail.com (B. B.)
Date: Fri, 6 Feb 2009 17:30:19 +0100
Subject: [Twisted-Python] Perspective Broker and thread safe!
Message-ID: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>

Hello, I am relative new to twisted, though I have manage to make a simple
client server solution ( using perspective broker ) that I am now try to
refactor a little.

The solution is now something like :

Using perspective broker, clients connects to the server ( setting up a
remote reference to each other ).
Via a PB call, each client can request the server do some processing. The
result of  the processing is distributed to each connected client - and the
client asking for the request gets a simple status report!

This solution works quite well, the only bottleneck is that all the
"thread-safe" processing on the server is done in the mainloop of the server
reactor. I want to do concurrent processing on the server!

The function doing the processing on the server, also distribute the result
to all the connected clients, and returns the result to the klient asking
for the request.

My question is :
If I just "defer" that function "toThread" ( like  threads.deferToThread(
myServerProcessingFunction ) ). Do I have potential problems, when several
threads try to distribute its result to the connecting clients???


If I have a problem:
Can I make a quick fix as follows:  Within each thread ( started with the
threads.deferToThread function ), I do the distributing to the clients by
using the "reactor.callFromThread"
( like reactor.callFromThread( distributeToAllClient , myResult ) where the
function distributeToAllClient are using the remoteReference for each client
to send the "myResult" )


Or is the only solution, to let the myServerProcessingFunction returns the
"myResult" to be distributed to all connected clients, and do the
distribution in the reactor mainthread???


Thank you!


Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090206/5fd2a31a/attachment.html>

From ellisonbg.net at gmail.com  Fri Feb  6 11:40:10 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 6 Feb 2009 18:40:10 +0000
Subject: [Twisted-Python] Problems with signalProcess on Windows
Message-ID: <6ce0ac130902061040q7c7d6105wf2af7da98bf2aa5f@mail.gmail.com>

Hi,

[take a deep breath and try to get over how much I dislike Windows]

So, I am using Twisted's external process capabilities in a
cross-platform setting.  Almost everything is working now in Windows.
But, when I try to stop the external program (using
signalProcess("INT")) that I starting using reactor.spawnProcess, I
get the following traceback:

            self.process_transport.signalProcess(sig)
          File "C:\Python25\lib\site-packages\twisted\internet\_dumbwin32proc.py
", line 247, in signalProcess
            win32process.TerminateProcess(self.hProcess, 1)
        pywintypes.error: (5, 'TerminateProcess', 'Access is denied.')

The odd thing is that the process stops just fine.  That is, it tells
me that it has received SIGINT and is shutting down.

Any thoughts on why this would happen?  I have no idea where to even
begin looking.

Thanks in advanced.

Cheers,

Brian



From exarkun at divmod.com  Fri Feb  6 12:04:02 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 6 Feb 2009 14:04:02 -0500
Subject: [Twisted-Python] Problems with signalProcess on Windows
In-Reply-To: <6ce0ac130902061040q7c7d6105wf2af7da98bf2aa5f@mail.gmail.com>
Message-ID: <20090206190402.12853.1156642581.divmod.quotient.5103@henry.divmod.com>

On Fri, 6 Feb 2009 18:40:10 +0000, Brian Granger <ellisonbg.net at gmail.com> wrote:
>Hi,
>
>[take a deep breath and try to get over how much I dislike Windows]
>
>So, I am using Twisted's external process capabilities in a
>cross-platform setting.  Almost everything is working now in Windows.
>But, when I try to stop the external program (using
>signalProcess("INT")) that I starting using reactor.spawnProcess, I
>get the following traceback:
>
>            self.process_transport.signalProcess(sig)
>          File "C:\Python25\lib\site-packages\twisted\internet\_dumbwin32proc.py
>", line 247, in signalProcess
>            win32process.TerminateProcess(self.hProcess, 1)
>        pywintypes.error: (5, 'TerminateProcess', 'Access is denied.')
>
>The odd thing is that the process stops just fine.  That is, it tells
>me that it has received SIGINT and is shutting down.
>
>Any thoughts on why this would happen?  I have no idea where to even
>begin looking.
>
>Thanks in advanced.

I think this is a long standing problem with Twisted's support of processes
on Windows.  I thought there was a ticket for this, but it seems the closest
thing I can find is <http://twistedmatrix.com/trac/ticket/2726>, the scope
of which is a bit broader than just making signalProcess work.

It has been suggested that it is necessary to first OpenProcess to get a
handle to pass to TerminateProcess.  The only reason this hasn't been
implemented is lack of interest (and, as you alluded, the unpleasantness
of doing anything related to Windows).

Jean-Paul



From ellisonbg.net at gmail.com  Fri Feb  6 12:07:58 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 6 Feb 2009 19:07:58 +0000
Subject: [Twisted-Python] Re: Problems with signalProcess on Windows
In-Reply-To: <6ce0ac130902061040q7c7d6105wf2af7da98bf2aa5f@mail.gmail.com>
References: <6ce0ac130902061040q7c7d6105wf2af7da98bf2aa5f@mail.gmail.com>
Message-ID: <6ce0ac130902061107r62a1f6baw49e9ed07c2885b11@mail.gmail.com>

OK, it looks like I solved this.  My external program is a python
program.  I was starting it without the "-u" flag to Python, which
turns on unbuffered output.  Adding the "-u" flag made the error go
away.

I found this tip in the docstrings of the _dumbwin32proc.py Twisted module.

Whoever put that note there, thanks!!!

Cheers,

Brian



> [take a deep breath and try to get over how much I dislike Windows]
>
> So, I am using Twisted's external process capabilities in a
> cross-platform setting.  Almost everything is working now in Windows.
> But, when I try to stop the external program (using
> signalProcess("INT")) that I starting using reactor.spawnProcess, I
> get the following traceback:
>
>            self.process_transport.signalProcess(sig)
>          File "C:\Python25\lib\site-packages\twisted\internet\_dumbwin32proc.py
> ", line 247, in signalProcess
>            win32process.TerminateProcess(self.hProcess, 1)
>        pywintypes.error: (5, 'TerminateProcess', 'Access is denied.')
>
> The odd thing is that the process stops just fine.  That is, it tells
> me that it has received SIGINT and is shutting down.
>
> Any thoughts on why this would happen?  I have no idea where to even
> begin looking.
>
> Thanks in advanced.
>
> Cheers,
>
> Brian
>



From exarkun at divmod.com  Fri Feb  6 12:29:51 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 6 Feb 2009 14:29:51 -0500
Subject: [Twisted-Python] Perspective Broker and thread safe!
In-Reply-To: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>
Message-ID: <20090206192951.12853.983604487.divmod.quotient.5113@henry.divmod.com>

On Fri, 6 Feb 2009 17:30:19 +0100, "B. B." <thebbzoo at gmail.com> wrote:
>Hello, I am relative new to twisted, though I have manage to make a simple
>client server solution ( using perspective broker ) that I am now try to
>refactor a little.
>
>The solution is now something like :
>
>Using perspective broker, clients connects to the server ( setting up a
>remote reference to each other ).
>Via a PB call, each client can request the server do some processing. The
>result of  the processing is distributed to each connected client - and the
>client asking for the request gets a simple status report!
>
>This solution works quite well, the only bottleneck is that all the
>"thread-safe" processing on the server is done in the mainloop of the server
>reactor. I want to do concurrent processing on the server!

That requires that your server be capable of doing the processing
concurrently.  If the processing is CPU bound, then you need multiple
CPUs.  If it is disk I/O bound, you need multiple disks.  etc.

>The function doing the processing on the server, also distribute the result
>to all the connected clients, and returns the result to the klient asking
>for the request.
>
>My question is :
>If I just "defer" that function "toThread" ( like  threads.deferToThread(
>myServerProcessingFunction ) ). Do I have potential problems, when several
>threads try to distribute its result to the connecting clients???

If you use deferToThread with your "processing" function, then the function
must be thread-safe.  Since nearly no Twisted APIs are thread-safe, it cannot
use them directly.  It may only use reactor.callFromThread to send events
back to the reactor thread.  So, in general, yes, the potential for problems
exists.

>
>If I have a problem:
>Can I make a quick fix as follows:  Within each thread ( started with the
>threads.deferToThread function ), I do the distributing to the clients by
>using the "reactor.callFromThread"
>( like reactor.callFromThread( distributeToAllClient , myResult ) where the
>function distributeToAllClient are using the remoteReference for each client
>to send the "myResult" )

This may work.

>Or is the only solution, to let the myServerProcessingFunction returns the
>"myResult" to be distributed to all connected clients, and do the
>distribution in the reactor mainthread???

There are always lots of possible solutions.  Since you are particularly
interested in performance, it will probably be necessary for you to create
a way to measure how well your application is performing and then repeat
these measurements using different implementation techniques.  That is the
only way you'll know which one is best.

Jean-Paul



From general at eepatents.com  Fri Feb  6 19:54:59 2009
From: general at eepatents.com (Ed Suominen)
Date: Fri, 06 Feb 2009 18:54:59 -0800
Subject: [Twisted-Python] Perspective Broker and thread safe!
In-Reply-To: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>
References: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>
Message-ID: <498CF803.1040700@eepatents.com>

This sort of thing is exactly what I wrote AsynCluster to do. See 
http://foss.eepatents.com/AsynCluster.

Best regards, Ed

B. B. wrote:
> Hello, I am relative new to twisted, though I have manage to make a 
> simple client server solution ( using perspective broker ) that I am now 
> try to refactor a little.
> 
> The solution is now something like :
> 
> Using perspective broker, clients connects to the server ( setting up a 
> remote reference to each other ).
> Via a PB call, each client can request the server do some processing. 
> The result of  the processing is distributed to each connected client - 
> and the client asking for the request gets a simple status report!
> 
> This solution works quite well, the only bottleneck is that all the 
> "thread-safe" processing on the server is done in the mainloop of the 
> server reactor. I want to do concurrent processing on the server!
> 
> The function doing the processing on the server, also distribute the 
> result to all the connected clients, and returns the result to the 
> klient asking for the request.
> 
> My question is : 
> If I just "defer" that function "toThread" ( like  
> threads.deferToThread( myServerProcessingFunction ) ). Do I have 
> potential problems, when several threads try to distribute its result to 
> the connecting clients??? 
> 
> 
> If I have a problem:
> Can I make a quick fix as follows:  Within each thread ( started with 
> the threads.deferToThread function ), I do the distributing to the 
> clients by using the "reactor.callFromThread"
> ( like reactor.callFromThread( distributeToAllClient , myResult ) where 
> the function distributeToAllClient are using the remoteReference for 
> each client to send the "myResult" )
> 
> 
> Or is the only solution, to let the myServerProcessingFunction returns 
> the "myResult" to be distributed to all connected clients, and do the 
> distribution in the reactor mainthread???
> 
> 
> Thank you!
> 
> 
> Brian
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 



From thebbzoo at gmail.com  Sat Feb  7 04:47:31 2009
From: thebbzoo at gmail.com (B. B.)
Date: Sat, 7 Feb 2009 12:47:31 +0100
Subject: [Twisted-Python] Perspective Broker and thread safe!
In-Reply-To: <20090206192951.12853.983604487.divmod.quotient.5113@henry.divmod.com>
References: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>
	<20090206192951.12853.983604487.divmod.quotient.5113@henry.divmod.com>
Message-ID: <fb67087a0902070347y25a9d617oa75b96711fe2ad9f@mail.gmail.com>

Thank you very much for you answer. Maybe the twisted details removed my
focus from the "big picture".
I have one followup question, added next to its context below..

On Fri, Feb 6, 2009 at 8:29 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Fri, 6 Feb 2009 17:30:19 +0100, "B. B." <thebbzoo at gmail.com> wrote:
>
>> Hello, I am relative new to twisted, though I have manage to make a simple
>> client server solution ( using perspective broker ) that I am now try to
>> refactor a little.
>>
>> The solution is now something like :
>>
>> Using perspective broker, clients connects to the server ( setting up a
>> remote reference to each other ).
>> Via a PB call, each client can request the server do some processing. The
>> result of  the processing is distributed to each connected client - and
>> the
>> client asking for the request gets a simple status report!
>>
>> This solution works quite well, the only bottleneck is that all the
>> "thread-safe" processing on the server is done in the mainloop of the
>> server
>> reactor. I want to do concurrent processing on the server!
>>
>
> That requires that your server be capable of doing the processing
> concurrently.  If the processing is CPU bound, then you need multiple
> CPUs.  If it is disk I/O bound, you need multiple disks.  etc.


Actually I use a quadcore processor and there is only a litte diskusage. But
thanks to your reply, I am thinking on the famous "Global Interpreter Lock"
in python.
Since allmost all processing is happing in pure python, does'nt the GIL
prevent me to obtain any remarkable performance gain by doing concurrent
processing in pure python???
( At least as long as I only use one process for the threads )

>
>
>  The function doing the processing on the server, also distribute the
>> result
>> to all the connected clients, and returns the result to the klient asking
>> for the request.
>>
>> My question is :
>> If I just "defer" that function "toThread" ( like  threads.deferToThread(
>> myServerProcessingFunction ) ). Do I have potential problems, when several
>> threads try to distribute its result to the connecting clients???
>>
>
> If you use deferToThread with your "processing" function, then the function
> must be thread-safe.  Since nearly no Twisted APIs are thread-safe, it
> cannot
> use them directly.  It may only use reactor.callFromThread to send events
> back to the reactor thread.  So, in general, yes, the potential for
> problems
> exists.
>
>
>> If I have a problem:
>> Can I make a quick fix as follows:  Within each thread ( started with the
>> threads.deferToThread function ), I do the distributing to the clients by
>> using the "reactor.callFromThread"
>> ( like reactor.callFromThread( distributeToAllClient , myResult ) where
>> the
>> function distributeToAllClient are using the remoteReference for each
>> client
>> to send the "myResult" )
>>
>
> This may work.
>
>  Or is the only solution, to let the myServerProcessingFunction returns the
>> "myResult" to be distributed to all connected clients, and do the
>> distribution in the reactor mainthread???
>>
>
> There are always lots of possible solutions.  Since you are particularly
> interested in performance, it will probably be necessary for you to create
> a way to measure how well your application is performing and then repeat
> these measurements using different implementation techniques.  That is the
> only way you'll know which one is best.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090207/f7949542/attachment.html>

From thebbzoo at gmail.com  Sat Feb  7 05:03:42 2009
From: thebbzoo at gmail.com (B. B.)
Date: Sat, 7 Feb 2009 13:03:42 +0100
Subject: [Twisted-Python] Perspective Broker and thread safe!
In-Reply-To: <498CF803.1040700@eepatents.com>
References: <fb67087a0902060830s6b96df3fkf5c1337f5f4b5af0@mail.gmail.com>
	<498CF803.1040700@eepatents.com>
Message-ID: <fb67087a0902070403w72459ebet4c22d1b9a4f260ea@mail.gmail.com>

Thank you for noticing. I gave it a short look, long enough to know I will
look more closely later! :-)

BR.

Brian...

On Sat, Feb 7, 2009 at 3:54 AM, Ed Suominen <general at eepatents.com> wrote:

> This sort of thing is exactly what I wrote AsynCluster to do. See
> http://foss.eepatents.com/AsynCluster.
>
> Best regards, Ed
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090207/2a922585/attachment.html>

From exarkun at twistedmatrix.com  Sat Feb  7 22:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Feb 2009 05:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1234069513.02.438451038@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090208/a5734788/attachment.html>

From ioscas at gmail.com  Tue Feb 10 20:43:07 2009
From: ioscas at gmail.com (=?GB2312?B?wfjvxw==?=)
Date: Wed, 11 Feb 2009 11:43:07 +0800
Subject: [Twisted-Python] need help for twisted FTPClient
Message-ID: <b486cc990902101943h4c1790c8m58c1f9caa8cab74d@mail.gmail.com>

hello, everyone:

    I'm new to twisted and ftp protocol. for some purpose, i need a python
ftp client to do list, get, put, remove operations upon a FTP server which
is implemented with twisted.
    here is my codes, testing for 'get' passed, but 'put' failed. i checked
the api of storeFile, abd got these:

'''
 *def storeFile(self, path, offset=0): **(source)
*<http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/protocols/ftp.py#L2389>
**
*Store a file at the given path.*
 *This method issues the 'STOR' FTP command. *  *Returns* *A tuple of two **
Deferred*<http://twistedmatrix.com/documents/current/api/twisted.internet.defer.Deferred.html>
*s: *

   - *Deferred*<http://twistedmatrix.com/documents/current/api/twisted.internet.defer.Deferred.html>
   * **IFinishableConsumer*<http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IFinishableConsumer.html>
   *. You must call the finish method on the IFinishableConsumer when the
   file is completely transferred. *
   - *Deferred*<http://twistedmatrix.com/documents/current/api/twisted.internet.defer.Deferred.html>
   * list of control-connection responses. *

'''
 but i don't know how to handle it, :)
 sorry for the rubbish codes, but i really need help from you guys, it's
hard to find some useful info from twisted official doc,
 Any suggestion on how to write a nice ftp client with twisted is welcome.
 Thanks in advance.

IOSCAS

______________________________________________________________________________

from twisted.protocols.ftp import FTPClient, FTPFileListProtocol
from twisted.internet.protocol import Protocol, ClientCreator
from twisted.python import usage
from twisted.internet import reactor, defer

class SaveFile(Protocol):
    '''
    save the ftp file to local filesystem
    '''
    def __init__(self, output):
        self.fout = open(output, 'w')

    def dataReceived(self, data):
        self.fout.write(data)
        self.fout.close()

class FTP:
    '''
    a simple ftp client
    '''
    def __init__(self, host, port):
        '''
        init
        '''
        self.__host = host
        self.__port = port
        self.__username = 'aaa'
        self.__passwd = 'bbb'
        self.__passive = 1

    def __get(self, ftp_client, src, des):
        '''
        '''
        save_file = SaveFile(des)
        d = ftp_client.retrieveFile(src, save_file)
        d = ftp_client.quit()
        d.addCallback(lambda result: reactor.stop())
        return d

    def get(self, src, des):
        '''
        get src file from ftp server, store it in des
        '''
        creator = ClientCreator(reactor, FTPClient, self.__username,
self.__passwd, self.__passive)
        defer = creator.connectTCP(self.__host,
self.__port).addCallback(self.__get, src, des)
        reactor.run()
        return defer.result

    def __put(self, ftp_client, src, des):
        '''
        '''
        source_file = os.path.basename(src)
        target_dir = os.path.dirname(des)
        ftp_client.changeDirectory(target_dir)
        d = ftp_client.storeFile(src)
        d = ftp_client.quit()
        d.addCallback(lambda result: reactor.stop())
        return d

   def put(self, src, des):
        '''
        put src file to ftp server, store it in des
        '''
        creator = ClientCreator(reactor, FTPClient, self.__username,
self.__passwd, self.__passive)
        defer = creator.connectTCP(self.__host,
self.__port).addCallback(self.__put, src, des)
        reactor.run()
        return defer.result
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090211/8d0403f9/attachment.html>

From george at ringdevelopment.com  Wed Feb 11 06:54:44 2009
From: george at ringdevelopment.com (George Pauly)
Date: Wed, 11 Feb 2009 08:54:44 -0500
Subject: [Twisted-Python] need help for twisted FTPClient
In-Reply-To: <b486cc990902101943h4c1790c8m58c1f9caa8cab74d@mail.gmail.com>
References: <b486cc990902101943h4c1790c8m58c1f9caa8cab74d@mail.gmail.com>
Message-ID: <1234360484.10480.83.camel@localhost.localdomain>

Ioscas,

I don't know much about FTP, but your code doesn't look much like the
example
(http://twistedmatrix.com/projects/core/documentation/examples/) .

This page wasn't hard for me to find.  I used "ftp twisted example" in
search.yahoo.com.

-George



On Wed, 2009-02-11 at 11:43 +0800, 柳锴 wrote:
> hello, everyone:
>  
>     I'm new to twisted and ftp protocol. for some purpose, i need a
> python ftp client to do list, get, put, remove operations upon a FTP
> server which is implemented with twisted. 
>     here is my codes, testing for 'get' passed, but 'put' failed. i
> checked the api of storeFile, abd got these:
>  
> '''
> def storeFile(self, path, offset=0): (source) 
>  
> Store a file at the given path.
> This method issues the 'STOR' FTP command. 
> Returns
> A tuple of two Deferreds: 
>       * Deferred
>         IFinishableConsumer. You
>         must call the finish method
>         on the IFinishableConsumer
>         when the file is completely
>         transferred. 
>       * Deferred list of
>         control-connection
>         responses. 
> '''
>  but i don't know how to handle it, :)
>  sorry for the rubbish codes, but i really need help from you guys,
> it's hard to find some useful info from twisted official doc,
>  Any suggestion on how to write a nice ftp client with twisted is
> welcome. 
>  Thanks in advance. 
>  
> IOSCAS
>  
> ______________________________________________________________________________
>  
> from twisted.protocols.ftp import FTPClient, FTPFileListProtocol
> from twisted.internet.protocol import Protocol, ClientCreator
> from twisted.python import usage
> from twisted.internet import reactor, defer
>  
> class SaveFile(Protocol):
>     '''
>     save the ftp file to local filesystem
>     '''
>     def __init__(self, output):
>         self.fout = open(output, 'w')
>         
>     def dataReceived(self, data):
>         self.fout.write(data)
>         self.fout.close()
>  
> class FTP:
>     '''
>     a simple ftp client
>     '''
>     def __init__(self, host, port):
>         ''' 
>         init 
>         '''
>         self.__host = host
>         self.__port = port
>         self.__username = 'aaa'
>         self.__passwd = 'bbb'
>         self.__passive = 1
>  
>     def __get(self, ftp_client, src, des):
>         '''
>         '''
>         save_file = SaveFile(des)
>         d = ftp_client.retrieveFile(src, save_file)
>         d = ftp_client.quit()
>         d.addCallback(lambda result: reactor.stop())
>         return d
>    
>     def get(self, src, des):
>         '''
>         get src file from ftp server, store it in des
>         '''
>         creator = ClientCreator(reactor, FTPClient, self.__username,
> self.__passwd, self.__passive)
>         defer = creator.connectTCP(self.__host,
> self.__port).addCallback(self.__get, src, des)
>         reactor.run()
>         return defer.result 
>  
>     def __put(self, ftp_client, src, des):
>         '''
>         '''
>         source_file = os.path.basename(src)
>         target_dir = os.path.dirname(des)
>         ftp_client.changeDirectory(target_dir)
>         d = ftp_client.storeFile(src)
>         d = ftp_client.quit()
>         d.addCallback(lambda result: reactor.stop())
>         return d
>    
>    def put(self, src, des):
>         '''
>         put src file to ftp server, store it in des
>         '''
>         creator = ClientCreator(reactor, FTPClient, self.__username,
> self.__passwd, self.__passive)
>         defer = creator.connectTCP(self.__host,
> self.__port).addCallback(self.__put, src, des)
>         reactor.run()
>         return defer.result
>  
>  
>  
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From junk at themilkyway.com  Wed Feb 11 08:30:53 2009
From: junk at themilkyway.com (Jonathan Marshall)
Date: Wed, 11 Feb 2009 15:30:53 +0000
Subject: [Twisted-Python] Bad signature using conch ssh
Message-ID: <BB63650B-7399-4200-B189-539076CA90DD@themilkyway.com>

I'm receiving 'Bad signature' when trying to connect to an SSH server,  
however I'm able to connect OK using OpenSSH. I'm hoping that somebody  
here can help me get to the bottom of this!

Using twisted:
$ python -m twisted.conch.scripts.conch -v xxx
[-] Log opened.
[-] Starting factory <twisted.conch.client.unix.SSHUnixClientFactory  
instance at 0x707a30>
[-] Stopping factory <twisted.conch.client.unix.SSHUnixClientFactory  
instance at 0x707a30>
[-] Starting factory <twisted.conch.client.direct.SSHClientFactory  
instance at 0x707a58>
[SSHClientTransport,client] kex alg, key alg: diffie-hellman-group- 
exchange-sha1 ssh-rsa
[SSHClientTransport,client] outgoing: aes256-cbc hmac-sha1 none
[SSHClientTransport,client] incoming: aes256-cbc hmac-sha1 none
[SSHClientTransport,client] Disconnecting with error, code 3
	reason: bad signature
[SSHClientTransport,client] connection lost
[SSHClientTransport,client] Stopping factory  
<twisted.conch.client.direct.SSHClientFactory instance at 0x707a58>
[-] Main loop terminated.
Connection to xxx closed.
conch: exiting with error [Failure instance: Traceback (failure with  
no frames): <class 'twisted.conch.error.ConchError'>: ('bad  
signature', 3)



Using ssh (some lines removed for brevity):
$ ssh -vvv xxx
OpenSSH_5.1p1, OpenSSL 0.9.7l 28 Sep 2006
debug1: Remote protocol version 2.0, remote software version 0.0
debug1: no match: 0.0
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_5.1
debug2: fd 3 setting O_NONBLOCK
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug2: kex_parse_kexinit: diffie-hellman-group-exchange-sha256,diffie- 
hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman- 
group1-sha1
debug2: kex_parse_kexinit: ssh-rsa,ssh-dss
debug2: kex_parse_kexinit: aes128-cbc,3des-cbc,blowfish-cbc,cast128- 
cbc,arcfour128,arcfour256,arcfour,aes192-cbc,aes256-cbc,rijndael-cbc at lysator.liu.se 
,aes128-ctr,aes192-ctr,aes256-ctr
debug2: kex_parse_kexinit: hmac-md5,hmac-sha1,umac-64 at openssh.com,hmac- 
ripemd160,hmac-ripemd160 at openssh.com,hmac-sha1-96,hmac-md5-96
debug2: kex_parse_kexinit: none,zlib at openssh.com,zlib
debug2: kex_parse_kexinit:
debug2: kex_parse_kexinit: first_kex_follows 0
debug2: kex_parse_kexinit: reserved 0
debug2: kex_parse_kexinit: diffie-hellman-group1-sha1,diffie-hellman- 
group-exchange-sha1
debug2: kex_parse_kexinit: ssh-rsa
debug2: kex_parse_kexinit: aes256-cbc,aes192-cbc,aes128-cbc,twofish- 
cbc,blowfish-cbc,3des-cbc,arcfour
debug2: kex_parse_kexinit: hmac-sha1,hmac-sha1-96,hmac-md5,hmac-md5-96
debug2: kex_parse_kexinit: zlib,none
debug2: kex_parse_kexinit:
debug2: kex_parse_kexinit: first_kex_follows 0
debug2: kex_parse_kexinit: reserved 0
debug2: mac_setup: found hmac-md5
debug1: kex: server->client aes128-cbc hmac-md5 none
debug2: mac_setup: found hmac-md5
debug1: kex: client->server aes128-cbc hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024<1024<8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug2: dh_gen_key: priv key bits set: 132/256
debug2: bits set: 515/1025
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug3: check_host_in_hostfile: filename /Users/jon/.ssh/known_hosts
debug3: check_host_in_hostfile: match line 13
debug1: Host 'xxx' is known and matches the RSA host key.
debug1: Found key in /Users/jon/.ssh/known_hosts:13
debug2: bits set: 521/1025
debug1: ssh_rsa_verify: signature correct
debug2: kex_derive_keys
debug2: set_newkeys: mode 1
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug2: set_newkeys: mode 0
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug2: key: /Users/jon/.ssh/id_rsa (0x107ec0)
debug2: key: /Users/jon/.ssh/identity (0x0)
debug2: key: /Users/jon/.ssh/id_dsa (0x0)
debug3: input_userauth_banner





From exarkun at divmod.com  Wed Feb 11 08:32:36 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 11 Feb 2009 10:32:36 -0500
Subject: [Twisted-Python] need help for twisted FTPClient
In-Reply-To: <b486cc990902101943h4c1790c8m58c1f9caa8cab74d@mail.gmail.com>
Message-ID: <20090211153236.12853.623254964.divmod.quotient.8883@henry.divmod.com>

On Wed, 11 Feb 2009 11:43:07 +0800, 柳锴 <ioscas at gmail.com> wrote:
>hello, everyone:
>
>    I'm new to twisted and ftp protocol. for some purpose, i need a python
>ftp client to do list, get, put, remove operations upon a FTP server which
>is implemented with twisted.
>    here is my codes, testing for 'get' passed, but 'put' failed. i checked
>the api of storeFile, abd got these:
>
> [snip]
>
> but i don't know how to handle it, :)
> sorry for the rubbish codes, but i really need help from you guys, it's
>hard to find some useful info from twisted official doc,
> Any suggestion on how to write a nice ftp client with twisted is welcome.
> Thanks in advance.

The most obvious problem with the code is that it uses reactor.run and
reactor.stop too much.  You can start and stop the reactor exactly once.

>IOSCAS
>
>______________________________________________________________________________
>
>from twisted.protocols.ftp import FTPClient, FTPFileListProtocol
>from twisted.internet.protocol import Protocol, ClientCreator
>from twisted.python import usage
>from twisted.internet import reactor, defer
>
>class SaveFile(Protocol):
>    '''
>    save the ftp file to local filesystem
>    '''
>    def __init__(self, output):
>        self.fout = open(output, 'w')
>
>    def dataReceived(self, data):
>        self.fout.write(data)
>        self.fout.close()

This is also probably wrong.  dataReceived may be called multiple times.
You can't close the output file until you've received all the data.  I'm
not sure, but connectionLost is probably called when all data has been
received (or if there is an error receiving the data).

>class FTP:
>    '''
>    a simple ftp client
>    '''
>    def __init__(self, host, port):
>        '''
>        init
>        '''
>        self.__host = host
>        self.__port = port
>        self.__username = 'aaa'
>        self.__passwd = 'bbb'
>        self.__passive = 1
>
>    def __get(self, ftp_client, src, des):
>        '''
>        '''
>        save_file = SaveFile(des)
>        d = ftp_client.retrieveFile(src, save_file)
>        d = ftp_client.quit()
>        d.addCallback(lambda result: reactor.stop())
>        return d

Don't stop the reactor here.  Stopping the reactor means your program is
basically done and you don't want to do anything else with Twisted.

>    def get(self, src, des):
>        '''
>        get src file from ftp server, store it in des
>        '''
>        creator = ClientCreator(reactor, FTPClient, self.__username,
>self.__passwd, self.__passive)
>        defer = creator.connectTCP(self.__host,
>self.__port).addCallback(self.__get, src, des)
>        reactor.run()
>        return defer.result

Don't start the reactor here.  Start the reactor in the "main" part of your
program.  Also, don't access "defer.result".  Instead, just return "defer".

>
>    def __put(self, ftp_client, src, des):
>        '''
>        '''
>        source_file = os.path.basename(src)
>        target_dir = os.path.dirname(des)
>        ftp_client.changeDirectory(target_dir)
>        d = ftp_client.storeFile(src)
>        d = ftp_client.quit()
>        d.addCallback(lambda result: reactor.stop())
>        return d

Again, don't use stop here.

>   def put(self, src, des):
>        '''
>        put src file to ftp server, store it in des
>        '''
>        creator = ClientCreator(reactor, FTPClient, self.__username,
>self.__passwd, self.__passive)
>        defer = creator.connectTCP(self.__host,
>self.__port).addCallback(self.__put, src, des)
>        reactor.run()
>        return defer.result
>

And don't use run or .result here.

Jean-Paul



From ioscas at gmail.com  Thu Feb 12 02:53:28 2009
From: ioscas at gmail.com (=?GB2312?B?wfjvxw==?=)
Date: Thu, 12 Feb 2009 17:53:28 +0800
Subject: [Twisted-Python] need help for twisted FTPClient
In-Reply-To: <20090211153236.12853.623254964.divmod.quotient.8883@henry.divmod.com>
References: <b486cc990902101943h4c1790c8m58c1f9caa8cab74d@mail.gmail.com>
	<20090211153236.12853.623254964.divmod.quotient.8883@henry.divmod.com>
Message-ID: <b486cc990902120153v24204ac3k211a0ae1e12eedf3@mail.gmail.com>

thanks for your reply, i will check the codes..

2009/2/11 Jean-Paul Calderone <exarkun at divmod.com>

> On Wed, 11 Feb 2009 11:43:07 +0800, 柳锴 <ioscas at gmail.com> wrote:
>
>> hello, everyone:
>>
>>   I'm new to twisted and ftp protocol. for some purpose, i need a python
>> ftp client to do list, get, put, remove operations upon a FTP server which
>> is implemented with twisted.
>>   here is my codes, testing for 'get' passed, but 'put' failed. i checked
>> the api of storeFile, abd got these:
>>
>> [snip]
>>
>> but i don't know how to handle it, :)
>> sorry for the rubbish codes, but i really need help from you guys, it's
>> hard to find some useful info from twisted official doc,
>> Any suggestion on how to write a nice ftp client with twisted is welcome.
>> Thanks in advance.
>>
>
> The most obvious problem with the code is that it uses reactor.run and
> reactor.stop too much.  You can start and stop the reactor exactly once.
>
>  IOSCAS
>>
>>
>> ______________________________________________________________________________
>>
>> from twisted.protocols.ftp import FTPClient, FTPFileListProtocol
>> from twisted.internet.protocol import Protocol, ClientCreator
>> from twisted.python import usage
>> from twisted.internet import reactor, defer
>>
>> class SaveFile(Protocol):
>>   '''
>>   save the ftp file to local filesystem
>>   '''
>>   def __init__(self, output):
>>       self.fout = open(output, 'w')
>>
>>   def dataReceived(self, data):
>>       self.fout.write(data)
>>       self.fout.close()
>>
>
> This is also probably wrong.  dataReceived may be called multiple times.
> You can't close the output file until you've received all the data.  I'm
> not sure, but connectionLost is probably called when all data has been
> received (or if there is an error receiving the data).
>
>  class FTP:
>>   '''
>>   a simple ftp client
>>   '''
>>   def __init__(self, host, port):
>>       '''
>>       init
>>       '''
>>       self.__host = host
>>       self.__port = port
>>       self.__username = 'aaa'
>>       self.__passwd = 'bbb'
>>       self.__passive = 1
>>
>>   def __get(self, ftp_client, src, des):
>>       '''
>>       '''
>>       save_file = SaveFile(des)
>>       d = ftp_client.retrieveFile(src, save_file)
>>       d = ftp_client.quit()
>>       d.addCallback(lambda result: reactor.stop())
>>       return d
>>
>
> Don't stop the reactor here.  Stopping the reactor means your program is
> basically done and you don't want to do anything else with Twisted.
>
>    def get(self, src, des):
>>       '''
>>       get src file from ftp server, store it in des
>>       '''
>>       creator = ClientCreator(reactor, FTPClient, self.__username,
>> self.__passwd, self.__passive)
>>       defer = creator.connectTCP(self.__host,
>> self.__port).addCallback(self.__get, src, des)
>>       reactor.run()
>>       return defer.result
>>
>
> Don't start the reactor here.  Start the reactor in the "main" part of your
> program.  Also, don't access "defer.result".  Instead, just return "defer".
>
>
>>   def __put(self, ftp_client, src, des):
>>       '''
>>       '''
>>       source_file = os.path.basename(src)
>>       target_dir = os.path.dirname(des)
>>       ftp_client.changeDirectory(target_dir)
>>       d = ftp_client.storeFile(src)
>>       d = ftp_client.quit()
>>       d.addCallback(lambda result: reactor.stop())
>>       return d
>>
>
> Again, don't use stop here.
>
>   def put(self, src, des):
>>       '''
>>       put src file to ftp server, store it in des
>>       '''
>>       creator = ClientCreator(reactor, FTPClient, self.__username,
>> self.__passwd, self.__passive)
>>       defer = creator.connectTCP(self.__host,
>> self.__port).addCallback(self.__put, src, des)
>>       reactor.run()
>>       return defer.result
>>
>>
> And don't use run or .result here.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090212/44a9d504/attachment.html>

From esteve at sindominio.net  Thu Feb 12 14:32:24 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 12 Feb 2009 22:32:24 +0100
Subject: [Twisted-Python] GSoC
Message-ID: <200902122232.25033.esteve@sindominio.net>

Hi all,

the GSoC FAQ was recently published [1] and I wondered if Twisted could be a 
mentoring organization for the next installment of the GSoC program.

I think it's a good opportunity to bring new developers to Twisted by having a 
mentor. I was a GSoC student last year and it was pretty fun.

I'd offer my help to mentor a student, but I think I couldn't become an 
official mentor (though I'd like to be one) as I'm not a Twisted developer. 
In any case, I could bring my experience as an ex-student :-)

Anyway, some areas a student could give a helping hand are:

- porting some Twisted.web2 feature(s) to Twisted.web
- improving support for Twisted in Jython or IronPython
- porting Amp to Java, C++, etc.
- adding or improving support for Twisted in an external library (e.g. Thrift, 
Amazon services, Storm, Protocol Buffers, etc.)

What do you think?

Cheers.

1 - http://code.google.com/opensource/gsoc/2009/faqs.html



From ntoper at gmail.com  Thu Feb 12 14:42:33 2009
From: ntoper at gmail.com (Nicolas Toper)
Date: Thu, 12 Feb 2009 22:42:33 +0100
Subject: [Twisted-Python] GSoC
In-Reply-To: <200902122232.25033.esteve@sindominio.net>
References: <200902122232.25033.esteve@sindominio.net>
Message-ID: <fcbb46050902121342k705753b1qe8143ce47f71654@mail.gmail.com>

Hi,

I think it's a great idea. I'm also an ex-student in this program and I use
Twisted quite a lot in my work. I am willing to help mentor if you need me.

Best,
Nicolas

On Thu, Feb 12, 2009 at 10:32 PM, Esteve Fernandez <esteve at sindominio.net>wrote:

> Hi all,
>
> the GSoC FAQ was recently published [1] and I wondered if Twisted could be
> a
> mentoring organization for the next installment of the GSoC program.
>
> I think it's a good opportunity to bring new developers to Twisted by
> having a
> mentor. I was a GSoC student last year and it was pretty fun.
>
> I'd offer my help to mentor a student, but I think I couldn't become an
> official mentor (though I'd like to be one) as I'm not a Twisted developer.
> In any case, I could bring my experience as an ex-student :-)
>
> Anyway, some areas a student could give a helping hand are:
>
> - porting some Twisted.web2 feature(s) to Twisted.web
> - improving support for Twisted in Jython or IronPython
> - porting Amp to Java, C++, etc.
> - adding or improving support for Twisted in an external library (e.g.
> Thrift,
> Amazon services, Storm, Protocol Buffers, etc.)
>
> What do you think?
>
> Cheers.
>
> 1 - http://code.google.com/opensource/gsoc/2009/faqs.html
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
A+
Nico
http://www.deviant-abstraction.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090212/228d277f/attachment.html>

From gabriel.rossetti at arimaz.com  Fri Feb 13 01:37:02 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Fri, 13 Feb 2009 09:37:02 +0100
Subject: [Twisted-Python] thread + signal + reactor.stop problem
Message-ID: <4995312E.2010807@arimaz.com>

Hello everyone,

I was able to write a small example that reproduces my problem, when I 
redefine signal and I have threads and I try to stop the reactor, it 
hangs. I wasn't sure if it was loopingCall or callLater or threads at 
first, but from my tests it's the threads that cause the problem. I 
attached the example, it's a modified version of the Twisted echo 
server/client example. Run the server, run the client, press Ctrl + C in 
the client's terminal (or Ctrl + break on windows) and it doesn't quit. 
I still have to test if it's caused by the signal redefinition at all or 
not.

Thank you,
Gabriel Rossetti
-------------- next part --------------
A non-text attachment was scrubbed...
Name: echoclient.py
Type: text/x-python
Size: 2432 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090213/ebc52ba7/attachment-0004.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: echoserv.py
Type: text/x-python
Size: 611 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090213/ebc52ba7/attachment-0005.py>

From newptcai at gmail.com  Fri Feb 13 01:54:46 2009
From: newptcai at gmail.com (Peter Cai)
Date: Fri, 13 Feb 2009 16:54:46 +0800
Subject: [Twisted-Python] SQLAlchemy and Twisted
In-Reply-To: <c893b8530805081839y401b2652l593151ddb67d588f@mail.gmail.com>
References: <d272f0690805081503x12c18b68lc70c22ea4172e51c@mail.gmail.com>
	<c893b8530805081839y401b2652l593151ddb67d588f@mail.gmail.com>
Message-ID: <befee6d80902130054w3b45ab03qea04b2c1048b1a82@mail.gmail.com>

Hi,

Thanks for this insightful comments on Sqlalchmy and Twisted.


I hope I had read your mail before I start my current project.

At that time, I simply thought using deferToThread would solve
everything since the twisted.enterprise.adbapi simply use
threads.deferToThreadPool
to make database interface asynchronous.

Today, I suddenly feel that, as sqlalchemy is not thread safe, using
deferToThread might cause unexpected problems.
And I found this mail and it seems that all the code I wrote this week is
going to be useless.

But, I got another question:

Since adbapi uses deferToThreadPool to make db api asynchronous, does this
mean that all python db apis are *thread safe*?

BTW: what does 'query generator' means?  Is it a software genrating SQLs?

On Fri, May 9, 2008 at 9:39 AM, Valentino Volonghi <dialtone at gmail.com>wrote:

> On Thu, May 8, 2008 at 3:03 PM, alex clemesha <clemesha at gmail.com> wrote:
> > But, I hoping to solve some immediate problems with Twisted and
> > SQLAlchemy, so ...
>
> I've long worked on trying to integrate sqlalchemy and twisted in a
> useful way but that can only be done when using simple queries. There
> are countless reasons behind this limitation, like the fact that
> sqlalchemy objects can do a lot of stuff behind the scenes or because
> code that you write in other places might use some assumptions because
> it's sync rather than async, and there are also problems with possible
> bugs and assumptions within sqlalchemy itself. Basically it's not safe
> and I wouldn't recommend it for anyone to use the orm together within
> a Twisted process.
>
> What I ended up doing is creating subprocesses that have fairly
> complex logic and usually spend more than a few seconds doing their
> job. By doing this I simply use sqlalchemy synchronously and without
> any problems (I was starting to go completely crazy while trying to
> debug time-dependent errors when I decided to refactor my code to use
> subprocesses instead, everything started working smoothly without any
> relevant change in the logic or in the test code and now I can also
> run the subprocess as a system script to check and verify stuff or
> debug (with pdb)).
>
> Considering that an ORM is only useful (?) for very complex logic I
> consider my approach completely sane. Use the query generator for
> everything and reserve the orm for long running tasks.
>
> nadbapi and storm-twisted tries to solve the orm problem in a similar
> way but nadbapi is no longer maintained, anyway both currently suffer
> from an incredible number of deferreds that they generate making the
> use of defgen an absolute requirement (and thus lowering overall
> performance). If you look hard enough in glyph's old blog or in this
> list (I can't remember where exactly) you can find a post about
> letting the database deal with concurrency and not spread it in
> application code (aka having tons of deferreds). It is true that not
> using threads increases speed and memory usage but for this particular
> case 99% of the time you are not going to need neither of them anyway.
>
> closing: I recently refactored some code that used sqlalchemy orm into
> using just the query generator and instead of taking 17 seconds it now
> takes 7 seconds and memory usage has decreased considerably. It's not
> really just because an orm is slower than simply executing queries,
> but rather because querying the db was so easy; it was basically done
> "recklessly" without thinking too much about the performance hit of
> going back and forth to the database. This is basically why I'd rather
> not use ORMs unless forced by legacy code or because generating a
> query would introduce so much complexity to make it an application in
> itself (very rare case IMHO).
>
> --
> Valentino Volonghi aka Dialtone
> Now running MacOS X 10.5
> Home Page: http://www.twisted.it
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
今天实在是没有任何遗憾的地方，可以拉上被子睡觉了。
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090213/c6f00d9a/attachment.html>

From reza at getpeer.com  Fri Feb 13 02:59:42 2009
From: reza at getpeer.com (Reza Lotun)
Date: Fri, 13 Feb 2009 09:59:42 +0000
Subject: [Twisted-Python] thread + signal + reactor.stop problem
In-Reply-To: <4995312E.2010807@arimaz.com>
References: <4995312E.2010807@arimaz.com>
Message-ID: <356e30830902130159l1f25770ck90d45c318bc74738@mail.gmail.com>

Hi Gabriel,

There's two problems from what I can see.

1) You have a method run in a thread

    def __myLoop(self):
        while True:
            self.transport.write("Thread")
            time.sleep(1)

but since it's being run in a thread, you need to schedule the call
into the reactor like so:

    def __myLoop(self):
        while True:
            reactor.callFromThread(self.transport.write, "Thread")
            time.sleep(1)

2) Your loop in that thread will run forever no matter what. It isn't
a daemon thread so there needs to be some sort of stopping criterion
(there's no way to kill Python threads externally):

    def __myLoop(self):
        while self.factory.running:
            reactor.callFromThread(self.transport.write, "Thread")
            time.sleep(1)

By setting an attribute on the factory in the __init__ called
'running' to True, then in the signal handler code we can set it to
False, providing a quick and dirty way to bail out of that thread.

I made the modifications and sending a cntrl-C made the program exit just fine.

Cheers,
Reza


On Fri, Feb 13, 2009 at 8:37 AM, Gabriel Rossetti
<gabriel.rossetti at arimaz.com> wrote:
> Hello everyone,
>
> I was able to write a small example that reproduces my problem, when I
> redefine signal and I have threads and I try to stop the reactor, it hangs.
> I wasn't sure if it was loopingCall or callLater or threads at first, but
> from my tests it's the threads that cause the problem. I attached the
> example, it's a modified version of the Twisted echo server/client example.
> Run the server, run the client, press Ctrl + C in the client's terminal (or
> Ctrl + break on windows) and it doesn't quit. I still have to test if it's
> caused by the signal redefinition at all or not.
>
> Thank you,
> Gabriel Rossetti
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Reza Lotun
Senior Software Engineer
Peer Technologies Limited
reza at getpeer.com



From gabriel.rossetti at arimaz.com  Fri Feb 13 03:21:20 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Fri, 13 Feb 2009 11:21:20 +0100
Subject: [Twisted-Python] thread + signal + reactor.stop problem
In-Reply-To: <356e30830902130159l1f25770ck90d45c318bc74738@mail.gmail.com>
References: <4995312E.2010807@arimaz.com>
	<356e30830902130159l1f25770ck90d45c318bc74738@mail.gmail.com>
Message-ID: <499549A0.1020406@arimaz.com>

Reza Lotun wrote:
> Hi Gabriel,
>   
Hello Reza,
> There's two problems from what I can see.
>
> 1) You have a method run in a thread
>
>     def __myLoop(self):
>         while True:
>             self.transport.write("Thread")
>             time.sleep(1)
>
> but since it's being run in a thread, you need to schedule the call
> into the reactor like so:
>
>     def __myLoop(self):
>         while True:
>             reactor.callFromThread(self.transport.write, "Thread")
>             time.sleep(1)
>
>   

Yes, I forgot to do that in the example, silly me, I do do that in my 
real code though.

> 2) Your loop in that thread will run forever no matter what. It isn't
> a daemon thread so there needs to be some sort of stopping criterion
> (there's no way to kill Python threads externally):
>
>     def __myLoop(self):
>         while self.factory.running:
>             reactor.callFromThread(self.transport.write, "Thread")
>             time.sleep(1)
>
> By setting an attribute on the factory in the __init__ called
> 'running' to True, then in the signal handler code we can set it to
> False, providing a quick and dirty way to bail out of that thread.
>
>   

Ahh, ok, I though Twisted would stop them somehow, That must be it then 
one of my threads must not exit and thus runs forever and Twisted waits 
on it.

> I made the modifications and sending a cntrl-C made the program exit just fine.
>
> Cheers,
> Reza
>   

Thank you!
Gabriel

>
> On Fri, Feb 13, 2009 at 8:37 AM, Gabriel Rossetti
> <gabriel.rossetti at arimaz.com> wrote:
>   
>> Hello everyone,
>>
>> I was able to write a small example that reproduces my problem, when I
>> redefine signal and I have threads and I try to stop the reactor, it hangs.
>> I wasn't sure if it was loopingCall or callLater or threads at first, but
>> from my tests it's the threads that cause the problem. I attached the
>> example, it's a modified version of the Twisted echo server/client example.
>> Run the server, run the client, press Ctrl + C in the client's terminal (or
>> Ctrl + break on windows) and it doesn't quit. I still have to test if it's
>> caused by the signal redefinition at all or not.
>>
>> Thank you,
>> Gabriel Rossetti
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>>     
>
>
>
>   



From denis.bilenko at gmail.com  Fri Feb 13 07:35:33 2009
From: denis.bilenko at gmail.com (Denis Bilenko)
Date: Fri, 13 Feb 2009 20:35:33 +0600
Subject: [Twisted-Python] half-closing SSL connection,
	unexpected connectionLost() error
Message-ID: <95d6e98c0902130635i70393743p6c873974c9e38bb5@mail.gmail.com>

Hi,

What's the correct way to call loseWriteConnection on SSL connection?
I keep getting "Connection was closed in a non-clean fashion" errors
when I do that.

Here's a minimal server and a client that trigger the error. Note that
the server
does not implement IHalfCloseableProtocol and I'd like to keep it that way
(primarily because I'm building a client, not a server, so I'd like my client to
work with as many servers as possible)

---------------------------------------------------------------------------
server.py

from twisted.internet.protocol import Factory, Protocol
from twisted.internet import reactor

class MyProtocol(Protocol):

    def connectionMade(self):
        print self.transport.getHost(), self.transport.getPeer()

    def connectionLost(self, reason):
        print 'connectionLost %r' % reason.value

class MyFactory(Factory):
    protocol = MyProtocol

from twisted.internet import ssl
contextFactory = ssl.DefaultOpenSSLContextFactory('valid.key',
'valid.crt', sslmethod=ssl.SSL.SSLv3_METHOD)
reactor.listenSSL(10000, MyFactory(), contextFactory)
reactor.run()


---------------------------------------------------------------------------
client.py

import sys
from zope.interface import implements

from twisted.internet.protocol import ClientFactory, Protocol
from twisted.internet.interfaces import IHalfCloseableProtocol
from twisted.internet import reactor

class MyProtocol(Protocol):

    implements(IHalfCloseableProtocol)

    def connectionMade(self):
        print 'connectionMade %s -> %s' % (self.transport.getHost(),
self.transport.getPeer())
        self.transport.loseWriteConnection()

    def readConnectionLost(self):
        print 'readConnectionLost'

    def writeConnectionLost(self):
        print 'writeConnectionLost'

    def connectionLost(self, reason):
        print 'connectionLost %r' % reason.value

class MyFactory(ClientFactory):
    protocol = MyProtocol

    def clientConnectionFailed(self, connector, err):
        print err.value
        reactor.stop()

from twisted.internet import ssl
contextFactory = ssl.ClientContextFactory()
reactor.connectSSL(sys.argv[1], int(sys.argv[2]), MyFactory(), contextFactory)
reactor.run()


---------------------------------------------------------------------------
console1

$ python server.py
IPv4Address(TCP, '127.0.0.1', 10000) IPv4Address(TCP, '127.0.0.1', 40291)
connectionLost ConnectionDone()


---------------------------------------------------------------------------
console2

$ python client.py localhost 10000
connectionMade IPv4Address(TCP, '127.0.0.1', 40291) ->
IPv4Address(TCP, 'localhost', 10000)
writeConnectionLost
connectionLost ConnectionLost()

The question is why it's not ConnectionDone but ConnectionLost that
client receives
in connectionLost callback?
If I convert the examples to use TCP, I get ConnectionDone, as expected.

Thank you for your time.



From tg.mufcnotforsale at gmail.com  Fri Feb 13 07:58:52 2009
From: tg.mufcnotforsale at gmail.com (Thomas Greenwood)
Date: Fri, 13 Feb 2009 14:58:52 +0000
Subject: [Twisted-Python] Slow Performance of Twisted Script
Message-ID: <6e6ffb0e0902130658m718817acgf4582b827308b6ca@mail.gmail.com>

Hi everyone,

I have been developing my first python script and jumped straight into the
world of twisted. I like the concept but I seem to be doing something very
wrong. The script takes an NZB file and parses it (using HellaNZB's parser)
and then makes a specified number of connections to the news server and
checks that all articles are there using the STAT command. I also know
nothing about newsservers or nntp so this script is a complete shot in the
dark. First time with python, first time with twisted and first time with
nntp seems to equal disaster!

The problem is that the script is very slow, even with 20 simultaneous
connections to the internet I only produce 111k or so of traffic and only
achieve 2 article checks per connection per second. On a 24meg connection I
can download the whole thing quicker than checking it with my script! Any
ideas why it is so slow?

I have attached the script.

Thanks for any help.

Tom Greenwood
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090213/d5c5fac5/attachment.html>
-------------- next part --------------
#!/usr/bin/python
from twisted.internet import reactor    
from twisted.internet import protocol
from NZBHellaParser import NZBParser,  parseNZB
from twisted.news.nntp import NNTPClient
import sys,traceback,time

results = None
allClients = None

class NNTPStatCheck(NNTPClient):
    "Class to check if the server has all the articles required using as little bandwidth as possible."
    nextMessageID = None
    def __init__(self, _username, _password,  _newsgroup):
        NNTPClient.__init__(self)
        self.username = _username
        self.password = _password
        self.newsgroup = _newsgroup
        self.nextMessageID = 0
        self.currMessageID = None
        #self.lastTime = 0
        
    def getStat(self):
        #print "Stating for " + self.currMessageID
        #self.startTime = time.time()
        self.sendLine('STAT <%s>' % (self.currMessageID, ))
        self._newState(None, self.getStatFailed, self._stateStat)
        
    def connectionLost(self, error):
        NNTPClient.connectionLost(self)
        if self.nextMessageID >= len(results):
            self.factory.readyToStop = True;
            for client in allClients:
                if client.readyToStop == False:
                    return
            reactor.stop()
        else:
            print "Unexpected Connection Loss, Should we try again?? " + str(self.nextMessageID) + "/" + str(len(results))
                 
    def connectionMade(self):
        NNTPClient.connectionMade(self)
        print 'Connection made, logging in..'
        self.authInfo()
    
    def gotGroup(self, group):
        #print "GOT GROUP "  + str(group) + "\n"
        self.statNext()
        
    def gotStat(self, stat):
        #print "GOT STAT %s\n" % str(stat)
        results[self.currMessageID][self.newsgroup] = True
        #FIXME: Don't need to check the rest of the groups if we have it
        
    def _stateStat(self, (code, message)):
        #print str(allClients.index(self.factory)) + " " + str(time.time() - self.startTime) + " " + str(time.time() - self.lastTime)
        #self.lastTime = time.time()
        if code == 223:
            self.gotStat((code, message))
            self._endState()
            self.tryNext()
        else:
            self.getStatFailed("%s %s" % (str(code) , str(message)))
            
    def statNext(self):
        if self.nextMessageID < len(results):
            self.currMessageID = results.keys()[self.nextMessageID]
            self.nextMessageID = (self.nextMessageID + 1)
            if results[self.currMessageID] [self.newsgroup] is None:
                self.getStat()
	    else:
                self.nextMessageID = (self.nextMessageID + 1)
                self.statNext()
        else:
	    # FIXME: Should now be fixed but sometimes the client got into an unknown state
            print "Finished, disconnecting from server."
            self.quit()
            
    def tryNext(self):
        if self.nextMessageID < len(results):
            self.fetchGroup(self.newsgroup)
        else:
            print "Finished, disconnecting from server."
            self.quit()
                
    def getStatFailed(self, error):
        print str(time.time() - self.startTime)
        try:
            (code, message) = error.split(" ", 1)
        except AttributeError:
            print 'Unknown reply structure: %s\n' % str(error)
        if code == "430":
             self.messageDoesNotExist(error)
        else:
            print 'Error occured after stat: %s\n' % str(error)
        results[self.currMessageID][self.newsgroup] = False
        self.tryNext()
        
    def messageDoesNotExist(self, error):
        print 'Message ' + self.currMessageID + ' does not exist in group ' + self.newsgroup + '\n'
    
    def authInfo(self):
        self.sendLine('AUTHINFO USER ' + self.username)
        self._newState(None, self.authInfoFailed, self._authInfoUserResponse)

    def _authInfoUserResponse(self, (code, message)):
        if code == 381:
            self.sendLine('AUTHINFO PASS ' + self.password)
            self._newState(None, self.authInfoFailed, self._authInfoPassResponse)
        else:
            self.authInfoFailed('%d %s' % (code, message))
        self._endState()

    def _authInfoPassResponse(self, (code, message)):
        if code == 281:
            self.gotauthInfoOk('%d %s' % (code, message))
        else:
            self.authInfoFailed('%d %s' % (code, message))
        self._endState()

    def gotauthInfoOk(self, message):
        print 'Logged in, starting stat checks..'
        self.fetchGroup(self.newsgroup)

    def authInfoFailed(self, error):
        # FIXME: We use reactor.stop so we dont try and auth incorrectly for ever
        print 'Error occured whilst attempting auth: %s\n' % error
        reactor.stop()

        
class NNTPVerifyFactory(protocol.ClientFactory):
    readyToStop = False
    
    def __init__(self, _username, _password, _newsgroup):
        self.username = _username
        self.password = _password
        self.newsgroup = _newsgroup
        
    def clientConnectionFailed(self, connector,  reason):
        print 'Failed to connect using connector: ' + str(connector) + " because " + str(reason)
        reactor.stop()
        
    def buildProtocol(self, addr):
        p = NNTPStatCheck(self.username, self.password, self.newsgroup)
        p.factory = self
        return p
        
def checkFoundArticle(groups):
    "If Article found returns group found, if not found returns false, if failed returns None"
    for group, value in groups.iteritems():
        if value == True:
          return group
        elif value == False:
            return False;
    return None
    
def createDictionaryFromList(list):
    retVal = {}
    for item in list:
        retVal[item] = None
    return retVal

def calcConnections(numGroups,maxConn):
    if numGroups == 0:
        return 0
    if maxConn == 0:
        return 0

    if maxConn < numGroups:
        return 0        
    else:
        if (maxConn / numGroups) >= 1:
            return (maxConn / numGroups)
	else:
            return 1
	    
def printUsage():
        print "Usage: NZBVerify.py maxConnections nzbFile"
        print "  e.g: NZBVerify.py 20 test.nzb"
        print "\n"
        print "NZBVerify will distribute the connections between the groups specified in the NZB"
        print "Your usenet provider will be able to tell you how many maximum connection you can use"
        print "The value of maxConnections must be at least equal to the number of groups"
        print "There is very little error handling so if you think its got stuck, it probably has!"

def main():
    global results,  allClients
    results = {}
    allClients = []

    if len(sys.argv) < 3:
        printUsage()
        return

    try:
        maxConns = int(sys.argv[1])
    except ValueError:
        print "Please enter a valid integer for maxConnections"
        printUsage()
        return

    print "Max connections set to " + str(maxConns)    

    print "Loading NZB File from " + sys.argv[2]
    try:
        groups, messageIDs = parseNZB(sys.argv[2])
    except IOError:
        print "There was an IO error loading the NZB File. The error follows:\n"
        print traceback.print_exc()
        return

    print "Parsed NZB File with " + str(len(messageIDs)) + " articles from " + str(len(groups)) + " groups."

    connectionsPerGroup = calcConnections(len(groups),maxConns)

    print "Using " + str(connectionsPerGroup) + " connections per group."
    
    if connectionsPerGroup == 0:
        print "Finished. Can't do anything with no connections per group!"
        return

    for currMessageID in messageIDs:
        # FIXME: Need to check if we need to create a new Dictionary instance for each message or if python is clever enough to work it out itself.
        results[currMessageID] = createDictionaryFromList(groups)

    #FIXME: Can only have as many groups as connections                
    for group in groups:
	for i in range(connectionsPerGroup):
            verifier = NNTPVerifyFactory("tgreenwood at pp.newsgroups.user", "tomwap1986", str(group))
            allClients.append(verifier)
            reactor.connectTCP("us.usenet-news.net", 119, verifier)
        
    print "Connecting to server.."
    reactor.run()
    print "Got required data from server, analysing.."
    totalArticles = len(results)
    totalFound = 0
    totalNotChecked = 0
    for currMessageID,  _groups in results.iteritems():
        result = checkFoundArticle(_groups)
        if result is None:
            print "Article Not Checked: " + currMessageID
            totalNotChecked = (totalNotChecked + 1)
        elif result is False:
            print "Article Not Found: " + currMessageID
        else:
            print "Found Article: " + currMessageID + " in " + result
            totalFound = (totalFound + 1)
    print "Don't take the groups listed above as gospel, it only means that you newsserver said it had it on the server - it may not have cared that we asked for the article in a particular group!"
    print "All Finished."
    print "Found " + str(totalFound) + ", Not Found " + str(totalArticles - (totalFound+totalNotChecked)) + ", Not checked " + str(totalNotChecked)
    sys.exit(0)
  
if __name__ == '__main__':
    main()
  
-------------- next part --------------
from xml.sax import make_parser
from xml.sax.handler import ContentHandler, feature_external_ges, feature_namespaces

def parseNZB(fileName):
    """ Initialize the queue from the specified nzb file """
    # Create a parser
    parser = make_parser()
    
    # No XML namespaces here
    parser.setFeature(feature_namespaces, 0)
    parser.setFeature(feature_external_ges, 0)
    
    # Create the handler
    dh = NZBParser()
    
    # Tell the parser to use it
    parser.setContentHandler(dh)

    # Parse the input
    parser.parse(fileName)

    return (dh.groups, dh.queue)
        
class NZBParser(ContentHandler):
    """ Parse an NZB 1.0 file into a list of msgids
    http://www.newzbin.com/DTD/nzb/nzb-1.0.dtd """
    def __init__(self):
        # downloading queue to add NZB segments to
        self.queue = []

        # nzb file to parse
        #self.nzb = nzb
        self.groups = []

        # parsing variables
        self.file = None
        self.bytes = None
        self.number = None
        self.chars = None
        self.fileNeedsDownload = None
        
        self.fileCount = 0
        self.segmentCount = 0
        
    def startElement(self, name, attrs):
        if name == 'file':
            subject = self.parseUnicode(attrs.get('subject'))
            poster = self.parseUnicode(attrs.get('poster'))

            self.fileCount += 1
                
        elif name == 'group':
            self.chars = []
                        
        elif name == 'segment':
            self.bytes = int(attrs.get('bytes'))
            self.number = int(attrs.get('number'))
                        
            self.chars = []
        
    def characters(self, content):
        if self.chars is not None:
            self.chars.append(content)
        
    def endElement(self, name):
        if name == 'file':
            self.file = None
            self.fileNeedsDownload = None
                
        elif name == 'group':
            newsgroup = self.parseUnicode(''.join(self.chars))
            
            if newsgroup not in self.groups:
                self.groups.append(newsgroup)
                        
            self.chars = None
                
        elif name == 'segment':
            self.segmentCount += 1

            messageId = self.parseUnicode(''.join(self.chars))
            self.queue.append(messageId)

            self.chars = None
            self.number = None
            self.bytes = None    

    def parseUnicode(self, unicodeOrStr):
        if isinstance(unicodeOrStr, unicode):
            return unicodeOrStr.encode('latin-1')
        return unicodeOrStr

From glyph at divmod.com  Fri Feb 13 09:39:58 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 13 Feb 2009 16:39:58 -0000
Subject: [Twisted-Python] half-closing SSL connection,
	unexpected connectionLost() error
In-Reply-To: <95d6e98c0902130635i70393743p6c873974c9e38bb5@mail.gmail.com>
References: <95d6e98c0902130635i70393743p6c873974c9e38bb5@mail.gmail.com>
Message-ID: <20090213163958.12555.1193248565.divmod.xquotient.4375@weber.divmod.com>


On 02:35 pm, denis.bilenko at gmail.com wrote:
>What's the correct way to call loseWriteConnection on SSL connection?

It is illegal, according to the specification.

    http://tools.ietf.org/html/rfc4346#section-7.2.1

   [upon receiving a close_notify] ... The other party MUST respond with 
a close_notify alert of its own and close down the connection 
immediately, discarding any pending writes.



From exarkun at twistedmatrix.com  Sat Feb 14 22:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Feb 2009 05:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1234674313.47.1334737555@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090215/66029d7c/attachment.html>

From zooko at zooko.com  Sun Feb 15 08:14:14 2009
From: zooko at zooko.com (zooko)
Date: Sun, 15 Feb 2009 08:14:14 -0700
Subject: [Twisted-Python] ANNOUNCING allmydata.org "Tahoe",
	the Least-Authority Filesystem, v1.3 
Message-ID: <91479565-70B8-4A3E-A2BA-5DE6A66614BA@zooko.com>

Folks:

This project is all based on Twisted, and many of the Related  
Projects that are springing up (see below) are, too.  Thanks to  
everyone for making Twisted into such a high-quality tool!

Regards,

Zooko

ANNOUNCING allmydata.org "Tahoe", the Least-Authority Filesystem, v1.3

We are pleased to announce the release of version 1.3.0 of "Tahoe", the
Least Authority Filesystem.

Tahoe-LAFS is a secure, decentralized, fault-tolerant filesystem.  All
of the source code is available under a choice of two Free Software,
Open Source licences.

This filesystem is encrypted and distributed over multiple peers in
such a way it continues to function even when some of the peers are
unavailable, malfunctioning, or malicious.

Here is the one-page explanation of the security and fault-tolerance
properties that it offers:

http://allmydata.org/source/tahoe/trunk/docs/about.html

This is the successor to v1.2, which was released July 21, 2008 [1].
This is a major new release, adding a repairer, an efficient backup
command, support for large files, an (S)FTP server, and much more.

See the NEWS file [2] and the known_issues.txt file [3] for more
information.

In addition to the many new features of Tahoe itself, a crop of related
projects have sprung up, including Tahoe frontends for Windows and
Macintosh, two front-ends written in JavaScript, a Tahoe plugin for
duplicity, a Tahoe plugin for TiddlyWiki, a project to create a new
backup tool, CIFS/SMB integration, an iPhone app, and three incomplete
Tahoe frontends for FUSE. See Related Projects on the wiki: [4].


COMPATIBILITY

The version 1 branch of Tahoe is the basis of the consumer backup
product from Allmydata, Inc. -- http://allmydata.com .

Tahoe v1.3 is fully compatible with the version 1 branch of Tahoe.
Files written by v1.3 clients can be read by clients of all versions
back to v1.0 unless the file is too large -- files greater than about
12 GiB (depending on the configuration) can't be read by older clients.
v1.3 clients can read files produced by clients of all versions since
v1.0.  v1.3 servers can serve clients of all versions back to v1.0 and
v1.3 clients can use servers of all versions back to v1.0 (but can't
upload large files to them).

This is the fourth release in the version 1 series.  We believe that
this version of Tahoe is stable enough to rely on as a permanent store
of valuable data.  The version 1 branch of Tahoe will be actively
supported and maintained for the forseeable future, and future versions
of Tahoe will retain the ability to read files and directories produced
by Tahoe v1 for the forseeable future.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the entire filesystem continues to be available, thanks to
the remaining computers.  You can also share your files with other
users, using a simple and flexible access control scheme.

Because this software is new, we do not categorically recommend it as
the sole repository of data which is extremely confidential or
precious.  However, we believe that erasure coding, strong encryption,
Free/Open Source Software and careful engineering make Tahoe safer than
common alternatives, such as RAID, removable drive, tape, or "on-line
storage" or "Cloud storage" systems.

This software comes with extensive unit tests [5], and there are no
known security flaws which would compromise confidentiality or data
integrity.  (For all currently known issues please see the
known_issues.txt file [2].)

This release of Tahoe is suitable for the "friendnet" use case [6] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share disk space and files.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
[7] for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1.0.  The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to wait for
up to twelve months after you redistribute a derived work before
releasing the source code of your derived work. See the file
"COPYING.TGPPL.html" [8] for the terms of the Transitive Grace Period
Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris, and
probably most other systems.  Start with "docs/install.html" [9].


HACKING AND COMMUNITY

Please join us on the mailing list [10].  Patches that extend and
improve Tahoe are gratefully accepted -- the RoadMap page [11] shows
the next improvements that we plan to make and CREDITS [12] lists the
names of people who've contributed to the project.  The wiki Dev page
[13] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [14], a provider of commercial
backup services.  Allmydata, Inc. created the Tahoe project, and
contributes hardware, software, ideas, bug reports, suggestions,
demands, and money (employing several Tahoe hackers and instructing
them to spend part of their work time on this Free Software project).
Also they award customized t-shirts to hackers who find security flaws
in Tahoe (see http://hacktahoe.org ).  Thank you to Allmydata, Inc. for
their generous and public-spirited support.


Zooko Wilcox-O'Hearn
on behalf of the allmydata.org team

Special acknowledgment goes to Brian Warner, whose superb engineering
skills and dedication are primarily responsible for the Tahoe
implementation, and largely responsible for the Tahoe design as well,
not to mention most of the docs and many other things besides.

February 13, 2009
Boulder, Colorado, USA

[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=2789
[2] http://allmydata.org/trac/tahoe/browser/NEWS
[3] http://allmydata.org/trac/tahoe/browser/docs/known_issues.txt
[4] http://allmydata.org/trac/tahoe/wiki/RelatedProjects
[5] http://allmydata.org/trac/tahoe/wiki/Dev
[6] http://allmydata.org/trac/tahoe/wiki/UseCases
[7] http://allmydata.org/trac/tahoe/browser/COPYING.GPL
[8] http://allmydata.org/source/tahoe/trunk/COPYING.TGPPL.html
[9] http://allmydata.org/source/tahoe/trunk/docs/install.html
[10] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[11] http://allmydata.org/trac/tahoe/roadmap
[12] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=2677
[13] http://allmydata.org/trac/tahoe/wiki/Dev
[14] http://allmydata.com



From hoechtl at in.tum.de  Sun Feb 15 09:20:53 2009
From: hoechtl at in.tum.de (=?ISO-8859-15?Q?Johann_H=F6chtl?=)
Date: Sun, 15 Feb 2009 17:20:53 +0100
Subject: [Twisted-Python] Communication with Async Java NIO Socketchannel
Message-ID: <499840E5.9090306@in.tum.de>

Is it possible to communicate with a nonblocking Java SocketChannel from 
Java.nio?
What has to be attended?



From exarkun at divmod.com  Sun Feb 15 09:30:07 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 15 Feb 2009 11:30:07 -0500
Subject: [Twisted-Python] Communication with Async Java NIO Socketchannel
In-Reply-To: <499840E5.9090306@in.tum.de>
Message-ID: <20090215163007.12853.588588135.divmod.quotient.10576@henry.divmod.com>

On Sun, 15 Feb 2009 17:20:53 +0100, Johann Höchtl <hoechtl at in.tum.de> wrote:
>Is it possible to communicate with a nonblocking Java SocketChannel from 
>Java.nio?
>What has to be attended?

Are you certain you have the correct mailing list?  This doesn't sound like
a question which is related to Twisted.

Jean-Paul



From hoechtl at in.tum.de  Sun Feb 15 10:48:31 2009
From: hoechtl at in.tum.de (=?ISO-8859-15?Q?Johann_H=F6chtl?=)
Date: Sun, 15 Feb 2009 18:48:31 +0100
Subject: [Twisted-Python] Communication with Async Java NIO, Socketchannel
Message-ID: <4998556F.8010109@in.tum.de>

On Sun, 15 Feb 2009 17:20:53 +0100, Johann HÃ¶chtl <hoechtl at in.tum.de> wrote:

> >Is it possible to communicate with a nonblocking Java SocketChannel from 
> >Java.nio?
> >What has to be attended?
>   

>Are you certain you have the correct mailing list?  This doesn't sound like
>a question which is related to Twisted.
>
>Jean-Paul


Dear Jean Paul,
Yes I'm quite sure about this mailinglist. As I read in a Python book, 
twisted is the framework, which I should use for asynchronous network 
communication.

Jo



From exarkun at divmod.com  Sun Feb 15 12:02:00 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 15 Feb 2009 14:02:00 -0500
Subject: [Twisted-Python] Communication with Async Java NIO, Socketchannel
In-Reply-To: <4998556F.8010109@in.tum.de>
Message-ID: <20090215190200.12853.1191885626.divmod.quotient.10626@henry.divmod.com>

On Sun, 15 Feb 2009 18:48:31 +0100, Johann Höchtl <hoechtl at in.tum.de> wrote:
>On Sun, 15 Feb 2009 17:20:53 +0100, Johann HÃ¶chtl <hoechtl at in.tum.de> 
>wrote:
>> >Is it possible to communicate with a nonblocking Java SocketChannel from 
>> >Java.nio?
>> >What has to be attended?
>>
>
>>Are you certain you have the correct mailing list?  This doesn't sound like
>>a question which is related to Twisted.
>>
>>Jean-Paul
>
>
>Dear Jean Paul,
>Yes I'm quite sure about this mailinglist. As I read in a Python book, 
>twisted is the framework, which I should use for asynchronous network 
>communication.

If you want to write an application with Twisted which communicates with
an application written in Java, it doesn't matter which socket APIs the
Java application is using (just as it doesn't matter to the Java app that
you're using Twisted).

http://twistedmatrix.com/projects/core/documentation/howto/index.html links
to a number of introductory documents about Twisted.  One or more of them
should help you get started.

Jean-Paul



From luper.rouch at gmail.com  Mon Feb 16 21:19:21 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Tue, 17 Feb 2009 05:19:21 +0100
Subject: [Twisted-Python] Correct pattern to do SSH forwarding in a GUI
Message-ID: <499A3AC9.3040700@gmail.com>

I am using twisted in a GUI application to do port forwarding over an 
SSH connection. All the network connections of the application 
(database, etc...) are routed through this connection, to simplify 
server configuration and secure things.

My first attempt was to run the reactor in the main thread, but the 
application was "freezing" when e.g. doing a SELECT with 
SQLAlchemy/psycopg2 (I guess because psycopg2 just waits for data and 
blocks the twisted reactor). So I put reactor.run() in a thread and it 
works, but I'm getting strange issues on some platforms (for example I 
can't connect at all on *some* OSX computers, getting a "reactor 
stopping" log from twisted without any further error), and I feel I'm 
doing the whole thing terribly wrong.

So my question is, how to do proper SSH port forwarding with conch in an 
application that also uses the tunnels not the asynchronous way ? If 
running the reactor in a thread is OK, are there particular things to 
watch out for ?



From glyph at divmod.com  Tue Feb 17 08:13:49 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 17 Feb 2009 15:13:49 -0000
Subject: [Twisted-Python] Correct pattern to do SSH forwarding in a GUI
In-Reply-To: <499A3AC9.3040700@gmail.com>
References: <499A3AC9.3040700@gmail.com>
Message-ID: <20090217151349.12555.1954884716.divmod.xquotient.4409@weber.divmod.com>

On 04:19 am, luper.rouch at gmail.com wrote:
>My first attempt was to run the reactor in the main thread, but the 
>application was "freezing" when e.g. doing a SELECT with 
>SQLAlchemy/psycopg2 (I guess because psycopg2 just waits for data and 
>blocks the twisted reactor). So I put reactor.run() in a thread and it 
>works, but I'm getting strange issues on some platforms (for example I 
>can't connect at all on *some* OSX computers, getting a "reactor 
>stopping" log from twisted without any further error), and I feel I'm 
>doing the whole thing terribly wrong.

These errors sound like you are making Twisted API calls from threads 
other than the reactor thread by accident.  There's no obvious fix 
except for "don't do that" :).

My suggestion would be to move the SQLAlchemy/psycopg2 into threads, 
with e.g. deferToThread, rather than putting the reactor into a thread. 
Then the reactor won't freeze while the blocking SQL stuff happens.
>So my question is, how to do proper SSH port forwarding with conch in 
>an application that also uses the tunnels not the asynchronous way ? If 
>running the reactor in a thread is OK, are there particular things to 
>watch out for ?

There's no reason that running the reactor in a thread shouldn't work; 
it's just generally tricky (especially if you're working with an 
existing codebase) to completely avoid calling Twisted APIs from other 
threads.



From itamar at itamarst.org  Tue Feb 17 11:04:36 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 17 Feb 2009 13:04:36 -0500
Subject: [Twisted-Python] Test, please ignore
Message-ID: <1234893876.13141.23.camel@pintsize>






From luper.rouch at gmail.com  Tue Feb 17 11:05:03 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Tue, 17 Feb 2009 19:05:03 +0100
Subject: [Twisted-Python] Correct pattern to do SSH forwarding in a GUI
In-Reply-To: <20090217151349.12555.1954884716.divmod.xquotient.4409@weber.divmod.com>
References: <499A3AC9.3040700@gmail.com>
	<20090217151349.12555.1954884716.divmod.xquotient.4409@weber.divmod.com>
Message-ID: <499AFC4F.1010105@gmail.com>

glyph at divmod.com wrote:
> On 04:19 am, luper.rouch at gmail.com wrote:
>> My first attempt was to run the reactor in the main thread, but the 
>> application was "freezing" when e.g. doing a SELECT with 
>> SQLAlchemy/psycopg2 (I guess because psycopg2 just waits for data and 
>> blocks the twisted reactor). So I put reactor.run() in a thread and it 
>> works, but I'm getting strange issues on some platforms (for example I 
>> can't connect at all on *some* OSX computers, getting a "reactor 
>> stopping" log from twisted without any further error), and I feel I'm 
>> doing the whole thing terribly wrong.
> 
> These errors sound like you are making Twisted API calls from threads 
> other than the reactor thread by accident.  There's no obvious fix 
> except for "don't do that" :).

Yes, I did not pay attention to separate Twisted from the main thread at 
all, apart from putting reactor.run() in another thread.

> 
> My suggestion would be to move the SQLAlchemy/psycopg2 into threads, 
> with e.g. deferToThread, rather than putting the reactor into a thread. 
> Then the reactor won't freeze while the blocking SQL stuff happens.
>> So my question is, how to do proper SSH port forwarding with conch in 
>> an application that also uses the tunnels not the asynchronous way ? 
>> If running the reactor in a thread is OK, are there particular things 
>> to watch out for ?
> 
> There's no reason that running the reactor in a thread shouldn't work; 
> it's just generally tricky (especially if you're working with an 
> existing codebase) to completely avoid calling Twisted APIs from other 
> threads.
> 

This implies too much modifications in my code, I think I will put the 
whole Twisted stuff in a separate process and interact with it via 
simple IPC, as I don't use that much of Twisted in the GUI code anyway.



From itamar at itamarst.org  Tue Feb 17 11:15:12 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 17 Feb 2009 13:15:12 -0500
Subject: [Twisted-Python] Available for short-term Twisted consulting,
 e.g. training, design (but not coding)
Message-ID: <1234894512.13141.25.camel@pintsize>

Need help with Twisted, distributed systems or or just plain old 
software architecture?

Due to a repetitive strain injury I am unable to type much (though
I am slowly improving), and so I'm taking time off of work to recover.
As a result I am available for short-term consulting until I recover,
e.g. training or design work, assuming of course it does not involve
any typing.

I've worked on Twisted itself, as well as projects ranging from 
high-performance distributed C++ servers, to an access control framework
for an airline reservation system, to a multimedia kiosk system for the 
Israel Museum in Jerusalem:
http://itamarst.org/resume.html

Send me an e-mail if you're interested.

-- Itamar Shtull-Trauring





From adelagon at gmail.com  Tue Feb 17 21:00:47 2009
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 18 Feb 2009 12:00:47 +0800
Subject: [Twisted-Python] twisted.web benchmarks
Message-ID: <7a01f6c00902172000i72fcba5m20efeb484be5933e@mail.gmail.com>

Hello All,

First of all thanks for all the pointers in the #twisted about twisted.web
being able to use threadpool. Here's the benchmark between cherryPy 3.0 and
twisted.web that I promised. I hope this could serve as a reference in the
future.

*Testing parameters:*
- Office PC: Intel(R) Pentium(R) D CPU 2.80GHz with 1GB RAM
- Apache bench set to 500 concurrent attempts within 30 secs
- LinuxMint Elyssa/Python 2.5.2/Twisted 2.5
- Twisted using SelectReactor
- Webservers just returning "Hello!" after some mathematical calculation:

            result = 0
            for i in range(random.randint(100, 300)):
                angle = math.radians(random.randint(0, 45))
                result += math.tanh(angle)/math.cosh(angle)

*
CherryPy Results:*
Concurrency Level:      500
Time taken for tests:   30.1441 seconds
Complete requests:      *6421*
Failed requests:        0
Write errors:           0
Total transferred:      834990 bytes
HTML transferred:       38538 bytes
Requests per second:    214.02 [#/sec] (mean)
Time per request:       2336.197 [ms] (mean)
Time per request:       4.672 [ms] (mean, across all concurrent requests)
Transfer rate:          27.17 [Kbytes/sec] received
*
twisted-web Results (no threading):*
Concurrency Level:      500
Time taken for tests:   30.35509 seconds
Complete requests:      *10051*
Failed requests:        0
Write errors:           0
Total transferred:      502600 bytes
HTML transferred:       60312 bytes
Requests per second:    334.64 [#/sec] (mean)
Time per request:       1494.155 [ms] (mean)
Time per request:       2.988 [ms] (mean, across all concurrent requests)
Transfer rate:          16.31 [Kbytes/sec] received


*twisted-web Results (with threading, threadpool [min=100, max=400]):*
Concurrency Level:      500
Time taken for tests:   30.16998 seconds
Complete requests:      *11068*
Failed requests:        0
Write errors:           0
Total transferred:      553450 bytes
HTML transferred:       66414 bytes
Requests per second:    368.72 [#/sec] (mean)
Time per request:       1356.026 [ms] (mean)
Time per request:       2.712 [ms] (mean, across all concurrent requests)
Transfer rate:          17.99 [Kbytes/sec] received


*Source Listing (using Twisted):
*
#!/usr/bin/python
from twisted.internet import reactor
from twisted.web import http
from twisted.python.threadpool import ThreadPool
import random, math, sys

class HTTPProtocol(http.Request):
    def process(self):
        def process_finish():
            result = 0
            for i in range(random.randint(100, 300)):
                angle = math.radians(random.randint(0, 45))
                result += math.tanh(angle)/math.cosh(angle)
            self.setHeader('Content-Type', 'text/html')
            self.write("Hello!")
            self.finish()
        if self.channel.factory.app.threads_enabled:
            print("Using threads")
            reactor.callFromThread(process_finish)
        else:
            print("Not using threads")
            process_finish()

class HTTPChannel(http.HTTPChannel):
    requestFactory = HTTPProtocol

class HTTPFactory(http.HTTPFactory):
    protocol = HTTPChannel
    def __init__(self, app):
        self.app = app

    def start(self, port=8080):
        reactor.listenTCP(port, self)

class BenchmarkApplication():
    def __init__(self):
        self.httpfactory = None
        self.pool = None
        self.threads_enabled = False

    def start(self):
        try:
            minthreads = int(sys.argv[1])
            maxthreads = int(sys.argv[2])
            self.pool = ThreadPool(minthreads, maxthreads)
            self.pool.start()
            self.threads_enabled = True
            print "Threads enabled: MIN:%d MAX:%d" % (minthreads,
maxthreads)
        except Exception, e:
            print("minthreads and maxthreads is not set or malformed.
Threading will be disabled")
        self.httpfactory = HTTPFactory(self)
        self.httpfactory.start()
        return (True)

    def end(self):
        if self.pool != None:
            self.pool.stop()

if __name__ == "__main__":
    gba = BenchmarkApplication()
    if gba.start():
        reactor.run()
    gba.end()*

Source Listing (using CherryPy):
*#!/usr/bin/python
import cherrypy
from amazilia import *
from amazilia import base
from amazilia import mysql
import random, math

class Root:
    def index(self):
    result = 0
        for i in range(random.randint(100, 300)):
            angle = math.radians(random.randint(0, 45))
            result += math.tanh(angle)/math.cosh(angle)
        return "Hello!"
    index.exposed = True

root = Root()
cherrypy.quickstart(root)*


*I haven't had much time to tinker with CherryPy. Threre might be some ways
to increase its performance. :)

---
Alvin
-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090218/c5c9d81f/attachment.html>

From gabriel.rossetti at arimaz.com  Wed Feb 18 04:14:01 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 18 Feb 2009 12:14:01 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
Message-ID: <499BED79.5010007@arimaz.com>

Hello,

I wrote some code to transform a raw XML string into a domish.Element, 
and I keep on getting char encoding/decoding errors :

    class __RawXmlToElement(object):
       
        def __call__(self, s):
            self.result = None
            def onStart(el):
                self.result = el
            def onEnd():
                pass
            def onElement(el):
                self.result.addChild(el)
               
            parser = domish.elementStream()
            parser.DocumentStartEvent = onStart
            parser.ElementEvent = onElement
            parser.DocumentEndEvent = onEnd
            tmp = domish.Element(("", "s"))
            tmp.addRawXml(s)
            parser.parse(tmp.toXml())
           
            return self.result.firstChildElement()

    rawXmlToElement = __RawXmlToElement()


Here's a test raw XML string :

     >>> u"<t>reçu</t>"
    u'<t>re\xe7u</t>'

     >>> u"<t>reçu</t>".encode("utf-8")
    '<t>re\xc3\xa7u</t>'

     >>> "<t>reçu</t>"
    '<t>re\xc3\xa7u</t>'


As you can see my system encodes strings in UTF-8, I tried the following 
but I
keep on getting errors :

     >>> rawXmlToElement("<t>reçu</t>")
    raw xml adder error : 'ascii' codec can't decode byte 0xc3 in
    position 5: ordinal not in range(128)

     >>> rawXmlToElement(u"<t>reçu</t>")
    parser error : 'ascii' codec can't encode character u'\xe7' in
    position 8: ordinal not in range(128)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "<stdin>", line 26, in __call__
    AttributeError: 'NoneType' object has no attribute 'firstChildElement'

     >>> rawXmlToElement(unicode("<t>reçu</t>", "utf-8"))
    parser error : 'ascii' codec can't encode character u'\xe7' in
    position 8: ordinal not in range(128)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "<stdin>", line 26, in __call__
    AttributeError: 'NoneType' object has no attribute 'firstChildElement'


If I try it with ASCII encodable chars it works correctly :

     >>> rawXmlToElement("<t>toto</t>").toXml()
    u'<t>toto</t>'

     >>> rawXmlToElement(u"<t>toto</t>").toXml()
    u'<t>toto</t>'

     >>> rawXmlToElement(unicode("<t>toto</t>", " utf-8")).toXml()
    u'<t>toto</t>'


Does anyone have an idea on what I'm doing wrong here? Thank you!



From gabriel.rossetti at arimaz.com  Wed Feb 18 06:41:05 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 18 Feb 2009 14:41:05 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
	: OT
In-Reply-To: <499BED79.5010007@arimaz.com>
References: <499BED79.5010007@arimaz.com>
Message-ID: <499C0FF1.4090407@arimaz.com>

Gabriel Rossetti wrote:
> Hello,
>
> I wrote some code to transform a raw XML string into a domish.Element, 
> and I keep on getting char encoding/decoding errors :
>
>    class __RawXmlToElement(object):
>              def __call__(self, s):
>            self.result = None
>            def onStart(el):
>                self.result = el
>            def onEnd():
>                pass
>            def onElement(el):
>                self.result.addChild(el)
>                          parser = domish.elementStream()
>            parser.DocumentStartEvent = onStart
>            parser.ElementEvent = onElement
>            parser.DocumentEndEvent = onEnd
>            tmp = domish.Element(("", "s"))
>            tmp.addRawXml(s)
>            parser.parse(tmp.toXml())
>                      return self.result.firstChildElement()
>
>    rawXmlToElement = __RawXmlToElement()
>
>
> Here's a test raw XML string :
>
>     >>> u"<t>reçu</t>"
>    u'<t>re\xe7u</t>'
>
>     >>> u"<t>reçu</t>".encode("utf-8")
>    '<t>re\xc3\xa7u</t>'
>
>     >>> "<t>reçu</t>"
>    '<t>re\xc3\xa7u</t>'
>
>
> As you can see my system encodes strings in UTF-8, I tried the 
> following but I
> keep on getting errors :
>
>     >>> rawXmlToElement("<t>reçu</t>")
>    raw xml adder error : 'ascii' codec can't decode byte 0xc3 in
>    position 5: ordinal not in range(128)
>
>     >>> rawXmlToElement(u"<t>reçu</t>")
>    parser error : 'ascii' codec can't encode character u'\xe7' in
>    position 8: ordinal not in range(128)
>    Traceback (most recent call last):
>      File "<stdin>", line 1, in <module>
>      File "<stdin>", line 26, in __call__
>    AttributeError: 'NoneType' object has no attribute 'firstChildElement'
>
>     >>> rawXmlToElement(unicode("<t>reçu</t>", "utf-8"))
>    parser error : 'ascii' codec can't encode character u'\xe7' in
>    position 8: ordinal not in range(128)
>    Traceback (most recent call last):
>      File "<stdin>", line 1, in <module>
>      File "<stdin>", line 26, in __call__
>    AttributeError: 'NoneType' object has no attribute 'firstChildElement'
>
>
> If I try it with ASCII encodable chars it works correctly :
>
>     >>> rawXmlToElement("<t>toto</t>").toXml()
>    u'<t>toto</t>'
>
>     >>> rawXmlToElement(u"<t>toto</t>").toXml()
>    u'<t>toto</t>'
>
>     >>> rawXmlToElement(unicode("<t>toto</t>", " utf-8")).toXml()
>    u'<t>toto</t>'
>
>
> Does anyone have an idea on what I'm doing wrong here? Thank you!
>
I think this is an Python environment problem and not a Twisted problem. 
If I run the attached example in Eclipse, it works, if I run it from a 
terminal, it doesn't. This is now off topic, but if anyone has an Idea 
I'd be grateful... I'm also going to post this on the Python mailing list.

Thank you,
Gabriel
-------------- next part --------------
A non-text attachment was scrubbed...
Name: xml_parser_test.py
Type: text/x-python
Size: 812 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090218/b55f0a66/attachment-0002.py>

From twisted at ralphm.ik.nu  Wed Feb 18 06:51:05 2009
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Wed, 18 Feb 2009 14:51:05 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <499BED79.5010007@arimaz.com>
References: <499BED79.5010007@arimaz.com>
Message-ID: <499C1249.6010405@ralphm.ik.nu>

On 2009-02-18 12:14, Gabriel Rossetti wrote:
> Hello,
> 
> I wrote some code to transform a raw XML string into a domish.Element, 
> and I keep on getting char encoding/decoding errors :
> 
> [..]
>            parser.parse(tmp.toXml())
 > [..]

Parser input is expected to be a string, not unicode. Try this instead:

   parser.parse(tmp.toXml().encode('utf-8'))

ralphm



From gabriel.rossetti at arimaz.com  Wed Feb 18 06:57:56 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 18 Feb 2009 14:57:56 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <499C1249.6010405@ralphm.ik.nu>
References: <499BED79.5010007@arimaz.com> <499C1249.6010405@ralphm.ik.nu>
Message-ID: <499C13E4.5080002@arimaz.com>

Ralph Meijer wrote:
> On 2009-02-18 12:14, Gabriel Rossetti wrote:
>> Hello,
>>
>> I wrote some code to transform a raw XML string into a 
>> domish.Element, and I keep on getting char encoding/decoding errors :
>>
>> [..]
>>            parser.parse(tmp.toXml())
> > [..]
>
> Parser input is expected to be a string, not unicode. Try this instead:
>
>   parser.parse(tmp.toXml().encode('utf-8'))
>
> ralphm
>
Hello Ralphm,

yes, I had fixed that in the code attached in my last msg, it only works 
in Eclipse though.

Gabriel



From twisted at ralphm.ik.nu  Wed Feb 18 07:14:20 2009
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Wed, 18 Feb 2009 15:14:20 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <499C13E4.5080002@arimaz.com>
References: <499BED79.5010007@arimaz.com> <499C1249.6010405@ralphm.ik.nu>
	<499C13E4.5080002@arimaz.com>
Message-ID: <499C17BC.3030905@ralphm.ik.nu>

On 2009-02-18 14:57, Gabriel Rossetti wrote:
> Ralph Meijer wrote:
>> On 2009-02-18 12:14, Gabriel Rossetti wrote:
>> [..]
 >>
>> Parser input is expected to be a string, not unicode. Try this instead:
>>
>>   parser.parse(tmp.toXml().encode('utf-8'))
>>
>> ralphm
>>
> Hello Ralphm,
> 
> yes, I had fixed that in the code attached in my last msg, it only works 
> in Eclipse though.

Ah, but in /that/ code, you typed:

     res = rawXmlToElement("<t>reçu</t>")

While you should have:

     res = rawXmlToElement(u"<t>reçu</t>")

ralphm



From gabriel.rossetti at arimaz.com  Wed Feb 18 07:26:09 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 18 Feb 2009 15:26:09 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <499C17BC.3030905@ralphm.ik.nu>
References: <499BED79.5010007@arimaz.com>
	<499C1249.6010405@ralphm.ik.nu>	<499C13E4.5080002@arimaz.com>
	<499C17BC.3030905@ralphm.ik.nu>
Message-ID: <499C1A81.4090101@arimaz.com>

Ralph Meijer wrote:
> On 2009-02-18 14:57, Gabriel Rossetti wrote:
>> Ralph Meijer wrote:
>>> On 2009-02-18 12:14, Gabriel Rossetti wrote:
>>> [..]
> >>
>>> Parser input is expected to be a string, not unicode. Try this instead:
>>>
>>>   parser.parse(tmp.toXml().encode('utf-8'))
>>>
>>> ralphm
>>>
>> Hello Ralphm,
>>
>> yes, I had fixed that in the code attached in my last msg, it only 
>> works in Eclipse though.
>
> Ah, but in /that/ code, you typed:
>
>     res = rawXmlToElement("<t>reçu</t>")
>
> While you should have:
>
>     res = rawXmlToElement(u"<t>reçu</t>")
>
> ralphm
>
Ahh, yes, I see my error, thanks :-) I'm glad everything is unicode in 
python 3....

Gabriel



From glyph at divmod.com  Wed Feb 18 19:40:11 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 19 Feb 2009 02:40:11 -0000
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <499C1A81.4090101@arimaz.com>
References: <499BED79.5010007@arimaz.com> <499C1249.6010405@ralphm.ik.nu>
	<499C13E4.5080002@arimaz.com> <499C17BC.3030905@ralphm.ik.nu>
	<499C1A81.4090101@arimaz.com>
Message-ID: <20090219024011.12555.582926845.divmod.xquotient.4417@weber.divmod.com>




On 18 Feb, 02:26 pm, gabriel.rossetti at arimaz.com wrote:
>Ahh, yes, I see my error, thanks :-) I'm glad everything is unicode in 
>python 3....

Erm, input to the parser will still be bytes in python 3.  The failure 
mode will hopefully be more obvious, but it's not that "everything" is 
unicode :).

See the FAQ: http://is.gd/k2XF



From luper.rouch at gmail.com  Wed Feb 18 21:16:34 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Thu, 19 Feb 2009 05:16:34 +0100
Subject: [Twisted-Python] KeyError when an errback is triggered within a
	conch TCP tunnel
Message-ID: <499CDD22.4000802@gmail.com>

Sorry I have not been able to find a better title, please see the 
attached example which may be more descriptive.

Here is what it does:
  * set up an SSH connection
  * open a TCP forwarding channel through this connection
  * do something through the tunnel that will trigger an errback (in the
    example, try to do an XMLRPC call with no one listening on the
    tunnel's end)

This scenario gives me the following traceback (tested with Twisted 
8.1.0 and 8.2.0):

-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/log.py", 
line 84, in callWithLogger
     return callWithContext({"system": lp}, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/log.py", 
line 69, in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/context.py", 
line 59, in callWithContext
     return self.currentContext().callWithContext(ctx, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/context.py", 
line 37, in callWithContext
     return func(*args,**kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/selectreactor.py", 
line 156, in _doReadOrWrite
     self._disconnectSelectable(selectable, why, method=="doRead")
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/posixbase.py", 
line 193, in _disconnectSelectable
     selectable.connectionLost(f)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/tcp.py", 
line 520, in connectionLost
     protocol.connectionLost(reason)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/forwarding.py", 
line 129, in connectionLost
     self.channel.loseConnection()
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/channel.py", 
line 253, in loseConnection
     self.conn.sendClose(self)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/connection.py", 
line 491, in sendClose
     self.channelsToRemoteChannel[channel]))
exceptions.KeyError: 
<twisted.conch.ssh.forwarding.SSHListenClientForwardingChannel instance 
at 0x972048c>
-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

It works well in the other cases, i.e.:
  * the errback is triggered but the tunnel is not used (comment line 57,
    uncomment line 59)
  * the errback is not triggered (start the XMLRPC server by uncommenting
    line 100), using the tunnel or not

You get the error only when the tunnel is used AND the errback is triggered.

To run the example execute it with an user name that can login using ssh 
on your host, e.g. 'python test.py someuser' and enter its password.

Cheers,
Luper
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.py
Type: text/x-python
Size: 3121 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090219/d11384ce/attachment-0002.py>

From luper.rouch at gmail.com  Wed Feb 18 21:24:28 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Thu, 19 Feb 2009 05:24:28 +0100
Subject: [Twisted-Python] KeyError when an errback is triggered within a
	conch TCP tunnel
Message-ID: <499CDEFC.6000609@gmail.com>

(posting it a second time with the example code inlined as pipermail did 
not like the attachment)

Sorry I have not been able to find a better title, please see the 
attached example which may be more descriptive.

Here is what it does:
  * set up an SSH connection
  * open a TCP forwarding channel through this connection
  * do something through the tunnel that will trigger an errback (in the
    example, try to do an XMLRPC call with no one listening on the
    tunnel's end)

This scenario gives me the following traceback (tested with Twisted 
8.1.0 and 8.2.0):

-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/log.py", 
line 84, in callWithLogger
     return callWithContext({"system": lp}, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/log.py", 
line 69, in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/context.py", 
line 59, in callWithContext
     return self.currentContext().callWithContext(ctx, func, *args, **kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/python/context.py", 
line 37, in callWithContext
     return func(*args,**kw)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/selectreactor.py", 
line 156, in _doReadOrWrite
     self._disconnectSelectable(selectable, why, method=="doRead")
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/posixbase.py", 
line 193, in _disconnectSelectable
     selectable.connectionLost(f)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/internet/tcp.py", 
line 520, in connectionLost
     protocol.connectionLost(reason)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/forwarding.py", 
line 129, in connectionLost
     self.channel.loseConnection()
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/channel.py", 
line 253, in loseConnection
     self.conn.sendClose(self)
   File 
"/usr/lib/python2.5/site-packages/Twisted-8.2.0-py2.5-linux-i686.egg/twisted/conch/ssh/connection.py", 
line 491, in sendClose
     self.channelsToRemoteChannel[channel]))
exceptions.KeyError: 
<twisted.conch.ssh.forwarding.SSHListenClientForwardingChannel instance 
at 0x972048c>
-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

It works well in the other cases, i.e.:
  * the errback is triggered but the tunnel is not used (comment line 57,
    uncomment line 59)
  * the errback is not triggered (start the XMLRPC server by uncommenting
    line 100), using the tunnel or not

You get the error only when the tunnel is used AND the errback is triggered.

To run the example execute it with an user name that can login using ssh 
on your host, e.g. 'python test.py someuser' and enter its password.

Cheers,
Luper


Example code:

-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
#!/usr/bin/env python

import sys
from getpass import getpass
from twisted.python import log
from twisted.conch.ssh import connection, transport, userauth, keys, \
         forwarding, channel
from twisted.conch.ssh.common import NS
from twisted.internet import defer, protocol, reactor
from twisted.web import server, xmlrpc
from twisted.web.xmlrpc import Proxy


conn = None


def connect(user, host, port=22):
     return reactor.connectTCP(host, port, Factory(user, Transport))


class Factory(protocol.ClientFactory):
     def __init__(self, user, protocol):
         self.user = user
         self.protocol = protocol

     def buildProtocol(self, addr):
         p = self.protocol(self.user)
         p.factory = self
         return p


class Transport(transport.SSHClientTransport):
     def __init__(self, user):
         self.user = user

     def verifyHostKey(self, pubkey, fingerprint):
         return defer.succeed(1)

     def connectionSecure(self):
         self.requestService(UserAuth(self.user, Connection()))


class UserAuth(userauth.SSHUserAuthClient):
     def getPassword(self, prompt=None):
         return defer.succeed(getpass("password: "))


class Connection(connection.SSHConnection):
     def __init__(self, *args, **kwargs):
         connection.SSHConnection.__init__(self, *args, **kwargs)
         self.forwarding_sockets = []

     def serviceStarted(self):
         # Create a tunnel from 12345 to 54321
         self.forward_port(12345, 54321)
         # Do something through the tunnel
         p = Proxy('http://localhost:12345/')    # passing through the 
tunnel,
                                                 # triggers the KeyError
         #p = Proxy('http://localhost:54321/')   # not using the tunnel, 
works
         print "ping...",
         d = p.callRemote("ping")
         def stop_ok(response):
             print response
             conn.disconnect()
             reactor.stop()
         def stop_error(error):
             print "error", error
             conn.disconnect()
             reactor.stop()
         d.addCallback(stop_ok)
         d.addErrback(stop_error)

     def serviceStopped(self):
         # Stop forwarding sockets
         for socket in self.forwarding_sockets:
             socket.stopListening()

     def forward_port(self, local_port, remote_port):
         print "forwarding %d => %d" % (local_port, remote_port)
         socket = reactor.listenTCP(local_port,
                 forwarding.SSHListenForwardingFactory(self,
                     ("localhost", remote_port),
                     forwarding.SSHListenClientForwardingChannel))
         self.forwarding_sockets.append(socket)


class DummyServer(xmlrpc.XMLRPC):
     def xmlrpc_ping(self):
         return "pong"


if __name__ == "__main__":
     if len(sys.argv) != 2:
         print "usage: test.py user"
         sys.exit(1)
     #log.startLogging(sys.stdout)

     # If the server is not running, stop_error() errback is triggered 
and we
     # have the KeyError when passing through the tunnel
     #reactor.listenTCP(54321, server.Site(DummyServer()))

     conn = connect(sys.argv[1], "localhost")
     reactor.run()
-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-



From gabriel.rossetti at arimaz.com  Thu Feb 19 00:06:49 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Thu, 19 Feb 2009 08:06:49 +0100
Subject: [Twisted-Python] raw xml to element, char encoding/decoding error
In-Reply-To: <20090219024011.12555.582926845.divmod.xquotient.4417@weber.divmod.com>
References: <499BED79.5010007@arimaz.com>
	<499C1249.6010405@ralphm.ik.nu>	<499C13E4.5080002@arimaz.com>
	<499C17BC.3030905@ralphm.ik.nu>	<499C1A81.4090101@arimaz.com>
	<20090219024011.12555.582926845.divmod.xquotient.4417@weber.divmod.com>
Message-ID: <499D0509.9020701@arimaz.com>

glyph at divmod.com wrote:
>
>
>
> On 18 Feb, 02:26 pm, gabriel.rossetti at arimaz.com wrote:
>> Ahh, yes, I see my error, thanks :-) I'm glad everything is unicode 
>> in python 3....
>
> Erm, input to the parser will still be bytes in python 3.  The failure 
> mode will hopefully be more obvious, but it's not that "everything" is 
> unicode :).
>
> See the FAQ: http://is.gd/k2XF
>
Ok, I see now, thanks. Those links are nice too.



From luper.rouch at gmail.com  Thu Feb 19 03:17:07 2009
From: luper.rouch at gmail.com (flupke)
Date: Thu, 19 Feb 2009 11:17:07 +0100
Subject: [Twisted-Python] Correct pattern to do SSH forwarding in a GUI
In-Reply-To: <20090217151349.12555.1954884716.divmod.xquotient.4409@weber.divmod.com>
References: <499A3AC9.3040700@gmail.com>
	<20090217151349.12555.1954884716.divmod.xquotient.4409@weber.divmod.com>
Message-ID: <22BFAE8E-02C6-42E3-9FD0-E89984522FAB@gmail.com>

> On 04:19 am, luper.rouch at gmail.com wrote:
>> My first attempt was to run the reactor in the main thread, but the  
>> application was "freezing" when e.g. doing a SELECT with SQLAlchemy/ 
>> psycopg2 (I guess because psycopg2 just waits for data and blocks  
>> the twisted reactor). So I put reactor.run() in a thread and it  
>> works, but I'm getting strange issues on some platforms (for  
>> example I can't connect at all on *some* OSX computers, getting a  
>> "reactor stopping" log from twisted without any further error), and  
>> I feel I'm doing the whole thing terribly wrong.
>
> These errors sound like you are making Twisted API calls from  
> threads other than the reactor thread by accident.  There's no  
> obvious fix except for "don't do that" :).
>
> My suggestion would be to move the SQLAlchemy/psycopg2 into threads,  
> with e.g. deferToThread, rather than putting the reactor into a  
> thread. Then the reactor won't freeze while the blocking SQL stuff  
> happens.
>> So my question is, how to do proper SSH port forwarding with conch  
>> in an application that also uses the tunnels not the asynchronous  
>> way ? If running the reactor in a thread is OK, are there  
>> particular things to watch out for ?
>
> There's no reason that running the reactor in a thread shouldn't  
> work; it's just generally tricky (especially if you're working with  
> an existing codebase) to completely avoid calling Twisted APIs from  
> other threads.

Just wanted to thank you, I isolated the Twisted part of my  
application using the 'multiprocessing' module, and all the weird  
issues are gone, it seems I was mixing threads somewhere ...

So executing the reactor in a child process was a good solution for my  
problem, no need to use deferToThread everywhere or to do tedious  
research about what is called from where.

Cheers,
Luper



From isahn74 at gmail.com  Thu Feb 19 04:49:54 2009
From: isahn74 at gmail.com (Michele -)
Date: Thu, 19 Feb 2009 11:49:54 +0000
Subject: [Twisted-Python] monitoring twisted services / processes
Message-ID: <539234cb0902190349q36ef3d6v4e38137be80f971@mail.gmail.com>

Hi,

background:

I'm currently working on a PoC with twisted, Python, to prove the
technology as an alternative to more
established enterprise choices (java app servers, etc..).

The idea is to build lightweight services to process atomic "chunks"
of business processes, that can scale
horizontally as much as needed proven that the common persistence
layer (a db) scales.
The idea is already working in a non python approach, so the attempt
is to prove that it's quicker and easier to maintain
if built with twisted/python.

So,
the question is: if I have N number of processes running in a M number
of machines, given that there are no network restriction,
and that at least http and hhtps are always available, how these
services would be efficiently monitored?

is there a twisted application/plugin/framework to do so? are you just
create 'polling' requests that an existing monitoring tool (i.e.
Nagios)
parses and interprets? How would you build a "console" to manage
services status?
In a nutshell, what I'm trying to find out if there is already around
a "container-like" twisted based application that can be used to
manage/monitor
twisted applications provided that they adhere to a given interface

Thanks for your help

Micc



From esteve at sindominio.net  Thu Feb 19 10:07:02 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 18:07:02 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
Message-ID: <200902191807.02663.esteve@sindominio.net>

Hi all, I'm using HTTPAuthSessionWrapper to wrap a portal, which uses our own 
checker against an internal service to authenticate users and I'm having 
trouble to pass extra information to sub resources.

I've read about the mind object and I think that's where all that information 
should go. However, HTTPAuthSessionWrapper passes None as its mind to 
portal.login, so I either have to override _login() or write a method that 
generates "minds" which can be overriden in subclasses to return something 
else than None. I prefer the latter, though.

Anyway, I could be mistaken and "mind" wouldn't be appropriate in this case, 
so I wanted to ask first here, since the mind argument seems to be rarely 
used.

Cheers.



From exarkun at divmod.com  Thu Feb 19 10:28:59 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 19 Feb 2009 12:28:59 -0500
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <200902191807.02663.esteve@sindominio.net>
Message-ID: <20090219172859.12853.2137347686.divmod.quotient.11860@henry.divmod.com>

On Thu, 19 Feb 2009 18:07:02 +0100, Esteve Fernandez <esteve at sindominio.net> wrote:
>Hi all, I'm using HTTPAuthSessionWrapper to wrap a portal, which uses our own
>checker against an internal service to authenticate users and I'm having
>trouble to pass extra information to sub resources.
>
>I've read about the mind object and I think that's where all that information
>should go. However, HTTPAuthSessionWrapper passes None as its mind to
>portal.login, so I either have to override _login() or write a method that
>generates "minds" which can be overriden in subclasses to return something
>else than None. I prefer the latter, though.
>
>Anyway, I could be mistaken and "mind" wouldn't be appropriate in this case,
>so I wanted to ask first here, since the mind argument seems to be rarely
>used.

What kind of "extra information" are you trying to pass?  Generally, all
information belongs with the avatar object.  The mind should be used to
interact with the protocol's notion of the user (as the avatar is used to
interact with the realm's notion of the user).

Jean-Paul



From esteve at sindominio.net  Thu Feb 19 10:47:37 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 18:47:37 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <20090219172859.12853.2137347686.divmod.quotient.11860@henry.divmod.com>
References: <20090219172859.12853.2137347686.divmod.quotient.11860@henry.divmod.com>
Message-ID: <200902191847.38057.esteve@sindominio.net>

On Thursday 19 February 2009 18:28:59 Jean-Paul Calderone wrote:
> What kind of "extra information" are you trying to pass?  Generally, all
> information belongs with the avatar object.  The mind should be used to
> interact with the protocol's notion of the user (as the avatar is used to
> interact with the realm's notion of the user).

Our checker generates a session per successful login, and all subsequent calls 
use that session to authenticate requests. The way I thought for using a mind 
is to create an empty object and populate it with the remote session object 
once the user has logged in successfully.

Is a mind the right place to put that session?

Cheers.



From esteve at sindominio.net  Thu Feb 19 10:55:58 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 18:55:58 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <200902191847.38057.esteve@sindominio.net>
References: <20090219172859.12853.2137347686.divmod.quotient.11860@henry.divmod.com>
	<200902191847.38057.esteve@sindominio.net>
Message-ID: <200902191855.58970.esteve@sindominio.net>

On Thursday 19 February 2009 18:47:37 Esteve Fernandez wrote:
> On Thursday 19 February 2009 18:28:59 Jean-Paul Calderone wrote:
> > What kind of "extra information" are you trying to pass?  Generally, all
> > information belongs with the avatar object.  The mind should be used to
> > interact with the protocol's notion of the user (as the avatar is used to
> > interact with the realm's notion of the user).
>
> Our checker generates a session per successful login, and all subsequent

Argh, I meant that the remote service *generates* the session and returns it 
if the user logged in successfully.

Cheers.



From exarkun at divmod.com  Thu Feb 19 10:57:29 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 19 Feb 2009 12:57:29 -0500
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <200902191847.38057.esteve@sindominio.net>
Message-ID: <20090219175729.12853.206443327.divmod.quotient.11866@henry.divmod.com>

On Thu, 19 Feb 2009 18:47:37 +0100, Esteve Fernandez <esteve at sindominio.net> wrote:
>On Thursday 19 February 2009 18:28:59 Jean-Paul Calderone wrote:
>> What kind of "extra information" are you trying to pass?  Generally, all
>> information belongs with the avatar object.  The mind should be used to
>> interact with the protocol's notion of the user (as the avatar is used to
>> interact with the realm's notion of the user).
>
>Our checker generates a session per successful login, and all subsequent calls
>use that session to authenticate requests. The way I thought for using a mind
>is to create an empty object and populate it with the remote session object
>once the user has logged in successfully.
>
>Is a mind the right place to put that session?

It doesn't seem like a good use of the mind to me.  I'd put the session
inside the avatar.  You may need a wider interface than IResource for
this, if you want to inspect the session from anywhere other than the
avatar itself (since the avatar's interface is IResource in this case),
or you may just want to use the session in order to implement getChild
and render appropriately.

For example, if a user is allowed to access /foo, then you might represent
that by including {'foo': True} in the session somehow.  Then, your can
have a getChild method which looks at that information if it is asked for
the "foo" child.  If 'foo' is not associated with True, you can reject the
request, otherwise you can process it.

You can also use multiple different avatar classes to represent this.
Instead of keeping a session and referring to it when deciding whether
a particular request is acceptable, you may want to have a FooAvatar and
a NoFooAvatar.  FooAvatar's getChild would always give back a resource
when asked for "foo", and NoFooAvatar never would.  The only checking would
be in your realm, where you decide what kind of avatar to give back from
requestAvatar.  This might imply that your realm is the right place to
keep your session data.

There are lots more possible approaches, of course, but these are two of
the most common.

Jean-Paul



From esteve at sindominio.net  Thu Feb 19 11:39:48 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 19:39:48 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <20090219175729.12853.206443327.divmod.quotient.11866@henry.divmod.com>
References: <20090219175729.12853.206443327.divmod.quotient.11866@henry.divmod.com>
Message-ID: <200902191939.48807.esteve@sindominio.net>

On Thursday 19 February 2009 18:57:29 Jean-Paul Calderone wrote:
> On Thu, 19 Feb 2009 18:47:37 +0100, Esteve Fernandez <esteve at sindominio.net> 
wrote:
> >On Thursday 19 February 2009 18:28:59 Jean-Paul Calderone wrote:
> >> What kind of "extra information" are you trying to pass?  Generally, all
> >> information belongs with the avatar object.  The mind should be used to
> >> interact with the protocol's notion of the user (as the avatar is used
> >> to interact with the realm's notion of the user).
> >
> >Our checker generates a session per successful login, and all subsequent
> > calls use that session to authenticate requests. The way I thought for
> > using a mind is to create an empty object and populate it with the remote
> > session object once the user has logged in successfully.
> >
> >Is a mind the right place to put that session?
>
> It doesn't seem like a good use of the mind to me.  I'd put the session
> inside the avatar.  You may need a wider interface than IResource for
> this, if you want to inspect the session from anywhere other than the
> avatar itself (since the avatar's interface is IResource in this case),
> or you may just want to use the session in order to implement getChild
> and render appropriately.

But, in our case, requestAvatar can only return something based on what the 
checker returns. I mean, requestAvatar receives an avatarId (as a result of 
Checker#requestAvatarId), a mind and a bunch of interfaces, but the realm 
doesn't have any other information.

What our checker does to authenticate an user, is to call a method on a remote 
service and get back an object (a token) that represents the state of a 
conversation between a client and that remote service. Then, the client may 
issue more remote calls using the previously received token.

We're using Twisted.web only as a front end to a remote service, and we'd like 
to make it as decoupled as possible, as there will be other frontends.

I tried to mimic PB's behaviour, in the sense that (as the cred documentation 
puts out):

"it is an object which serves an important role - any notifications which are 
to be relayed to an authenticated client are passed through a 'mind'. In 
addition, it allows passing more information to the realm during login in 
addition to the avatar ID."

Actually, our resources are pretty dumb, as they only issue remote calls to an 
external service and don't hold any information. And, since our realm can't 
figure out whether a user can issue a particular call or not without actually 
sending a token to the remote service, a mind object seemed the right place 
to me... but I'd happy to be wrong :-)

Anyway, sorry if I sound as if I'm trying to get a positive opinion for a 
decision we already made :-P it's just that I don't see how the other options 
would completely fit our architecture (which could be broken in the first 
case, of course).

Cheers.



From exarkun at divmod.com  Thu Feb 19 11:46:59 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 19 Feb 2009 13:46:59 -0500
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <200902191939.48807.esteve@sindominio.net>
Message-ID: <20090219184659.12853.303297799.divmod.quotient.11872@henry.divmod.com>

On Thu, 19 Feb 2009 19:39:48 +0100, Esteve Fernandez <esteve at sindominio.net> wrote:
>On Thursday 19 February 2009 18:57:29 Jean-Paul Calderone wrote:
>> On Thu, 19 Feb 2009 18:47:37 +0100, Esteve Fernandez <esteve at sindominio.net>
>wrote:
>> >On Thursday 19 February 2009 18:28:59 Jean-Paul Calderone wrote:
>> >> What kind of "extra information" are you trying to pass?  Generally, all
>> >> information belongs with the avatar object.  The mind should be used to
>> >> interact with the protocol's notion of the user (as the avatar is used
>> >> to interact with the realm's notion of the user).
>> >
>> >Our checker generates a session per successful login, and all subsequent
>> > calls use that session to authenticate requests. The way I thought for
>> > using a mind is to create an empty object and populate it with the remote
>> > session object once the user has logged in successfully.
>> >
>> >Is a mind the right place to put that session?
>>
>> It doesn't seem like a good use of the mind to me.  I'd put the session
>> inside the avatar.  You may need a wider interface than IResource for
>> this, if you want to inspect the session from anywhere other than the
>> avatar itself (since the avatar's interface is IResource in this case),
>> or you may just want to use the session in order to implement getChild
>> and render appropriately.
>
>But, in our case, requestAvatar can only return something based on what the
>checker returns. I mean, requestAvatar receives an avatarId (as a result of
>Checker#requestAvatarId), a mind and a bunch of interfaces, but the realm
>doesn't have any other information.
>
>What our checker does to authenticate an user, is to call a method on a remote
>service and get back an object (a token) that represents the state of a
>conversation between a client and that remote service. Then, the client may
>issue more remote calls using the previously received token.
>
>We're using Twisted.web only as a front end to a remote service, and we'd like
>to make it as decoupled as possible, as there will be other frontends.

What if you use the token as the avatarId?

>
>I tried to mimic PB's behaviour, in the sense that (as the cred documentation
>puts out):
>
>"it is an object which serves an important role - any notifications which are
>to be relayed to an authenticated client are passed through a 'mind'. In
>addition, it allows passing more information to the realm during login in
>addition to the avatar ID."

This is technically true but as far as I know no one has ever actually used
it that way.  I'm trying to think of an authentication scheme which would
benefit from it (let alone require it), but I'm drawing a blank.  PB just
has enough expressive power already to really need this.

>
>Actually, our resources are pretty dumb, as they only issue remote calls to an
>external service and don't hold any information. And, since our realm can't
>figure out whether a user can issue a particular call or not without actually
>sending a token to the remote service, a mind object seemed the right place
>to me... but I'd happy to be wrong :-)
>
>Anyway, sorry if I sound as if I'm trying to get a positive opinion for a
>decision we already made :-P it's just that I don't see how the other options
>would completely fit our architecture (which could be broken in the first
>case, of course).

No problem.  Hope this has helped in some way, at least.

Jean-Paul



From esteve at sindominio.net  Thu Feb 19 12:22:30 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 20:22:30 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <20090219184659.12853.303297799.divmod.quotient.11872@henry.divmod.com>
References: <20090219184659.12853.303297799.divmod.quotient.11872@henry.divmod.com>
Message-ID: <200902192022.30377.esteve@sindominio.net>

On Thursday 19 February 2009 19:46:59 Jean-Paul Calderone wrote:
> >But, in our case, requestAvatar can only return something based on what
> > the checker returns. I mean, requestAvatar receives an avatarId (as a
> > result of Checker#requestAvatarId), a mind and a bunch of interfaces, but
> > the realm doesn't have any other information.
> >
> >What our checker does to authenticate an user, is to call a method on a
> > remote service and get back an object (a token) that represents the state
> > of a conversation between a client and that remote service. Then, the
> > client may issue more remote calls using the previously received token.
> >
> >We're using Twisted.web only as a front end to a remote service, and we'd
> > like to make it as decoupled as possible, as there will be other
> > frontends.
>
> What if you use the token as the avatarId?

But the general contract for requestAvatarId is to return a string identifying 
the user. From ICredentialsChecker#requestAvatarId documentation:

"Returns - a Deferred which will fire a string which identifies an avatar, an 
empty tuple to specify an authenticated anonymous user (provided as 
checkers.ANONYMOUS) or fire a Failure(UnauthorizedLogin). Alternatively, 
return the result itself."

If so, our problem is that the token is an object that contains more 
information (a timestamp, a cryptographic signature, etc.), so serializing 
and deserializing it everytime we need that information is a bit cumbersome. 
The remote service checks that token everytime it receives a call, and 
responds with an appropiate response.

> >I tried to mimic PB's behaviour, in the sense that (as the cred
> > documentation puts out):
> >
> >"it is an object which serves an important role - any notifications which
> > are to be relayed to an authenticated client are passed through a 'mind'.
> > In addition, it allows passing more information to the realm during login
> > in addition to the avatar ID."
>
> This is technically true but as far as I know no one has ever actually used
> it that way.  I'm trying to think of an authentication scheme which would
> benefit from it (let alone require it), but I'm drawing a blank.  PB just
> has enough expressive power already to really need this.

In that case, (although we might not actually need a mind in the end), would 
PB have the same problem with HTTPAuthSessionWrapper? The mind argument is 
always None (in HTTPAuthSessionWrapper#_login):

    def _login(self, credentials):
        d = self._portal.login(credentials, None, IResource)
        d.addCallbacks(self._loginSucceeded, self._loginFailed)
        return d

So, I think HTTPAuthSessionWrapper should have a method (e.g. 
createMind(self)), which would return None by default and that could be 
overridden by subclasses if they need to return something else. I'll gladly 
file an issue, provide a patch and a test case, if you think it's a valid 
issue.

> No problem.  Hope this has helped in some way, at least.

Thanks!



From exarkun at divmod.com  Thu Feb 19 12:59:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 19 Feb 2009 14:59:19 -0500
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <200902192022.30377.esteve@sindominio.net>
Message-ID: <20090219195919.12853.1845224976.divmod.quotient.11884@henry.divmod.com>

On Thu, 19 Feb 2009 20:22:30 +0100, Esteve Fernandez <esteve at sindominio.net> wrote:
>On Thursday 19 February 2009 19:46:59 Jean-Paul Calderone wrote:
>> >But, in our case, requestAvatar can only return something based on what
>> > the checker returns. I mean, requestAvatar receives an avatarId (as a
>> > result of Checker#requestAvatarId), a mind and a bunch of interfaces, but
>> > the realm doesn't have any other information.
>> >
>> >What our checker does to authenticate an user, is to call a method on a
>> > remote service and get back an object (a token) that represents the state
>> > of a conversation between a client and that remote service. Then, the
>> > client may issue more remote calls using the previously received token.
>> >
>> >We're using Twisted.web only as a front end to a remote service, and we'd
>> > like to make it as decoupled as possible, as there will be other
>> > frontends.
>>
>> What if you use the token as the avatarId?
>
>But the general contract for requestAvatarId is to return a string identifying
>the user. From ICredentialsChecker#requestAvatarId documentation:
>
>"Returns - a Deferred which will fire a string which identifies an avatar, an
>empty tuple to specify an authenticated anonymous user (provided as
>checkers.ANONYMOUS) or fire a Failure(UnauthorizedLogin). Alternatively,
>return the result itself."
>
>If so, our problem is that the token is an object that contains more
>information (a timestamp, a cryptographic signature, etc.), so serializing
>and deserializing it everytime we need that information is a bit cumbersome.
>The remote service checks that token everytime it receives a call, and
>responds with an appropiate response.

The convention is for avatarId to be a string, but as the anonymous case
indicates, that's not strictly required. :)  The real requirement is that
the realm be able to interpret the avatarId.  The way this generally works
is by making it a username string, but you're in charge of the realm, so it
can be whatever you like.  Of course, this makes it harder to re-use either
your checker or your realm with different components, but sometimes that's
okay.  It might be nice if this were explained in some document somewhere
but I don't think the current cred document should cover it, since going
into complex and subtle points like this tends to make it harder to get
the basic idea.  An advanced cred howto of some sort might be merited.

>> >I tried to mimic PB's behaviour, in the sense that (as the cred
>> > documentation puts out):
>> >
>> >"it is an object which serves an important role - any notifications which
>> > are to be relayed to an authenticated client are passed through a 'mind'.
>> > In addition, it allows passing more information to the realm during login
>> > in addition to the avatar ID."
>>
>> This is technically true but as far as I know no one has ever actually used
>> it that way.  I'm trying to think of an authentication scheme which would
>> benefit from it (let alone require it), but I'm drawing a blank.  PB just
>> has enough expressive power already to really need this.
>
>In that case, (although we might not actually need a mind in the end), would
>PB have the same problem with HTTPAuthSessionWrapper? The mind argument is
>always None (in HTTPAuthSessionWrapper#_login):

I'm not quite sure what you mean here - how should I equate PB and
HTTPAuthSessionWrapper?

>    def _login(self, credentials):
>        d = self._portal.login(credentials, None, IResource)
>        d.addCallbacks(self._loginSucceeded, self._loginFailed)
>        return d
>
>So, I think HTTPAuthSessionWrapper should have a method (e.g.
>createMind(self)), which would return None by default and that could be
>overridden by subclasses if they need to return something else. I'll gladly
>file an issue, provide a patch and a test case, if you think it's a valid
>issue.

It probably *is* a good idea to allow the mind to be created somehow.  It
was only omitted because no obvious use-cases presented themselves at the
time.  I'm still not really convinced that this use case is a good one
though, so I'm not sure I'd be in favor of adding the hook now in order
to support this. ;)

In general, the mind feature of cred is underutilized, underdocumented,
and poorly understood.  Fixing these problems is great, but it may also
be the case that the mind is such an obscure use-case that most people
really just don't care about it.

Jean-Paul



From esteve at sindominio.net  Thu Feb 19 14:35:48 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Thu, 19 Feb 2009 22:35:48 +0100
Subject: [Twisted-Python] mind, twisted.cred and HTTPAuthSessionWrapper
In-Reply-To: <20090219195919.12853.1845224976.divmod.quotient.11884@henry.divmod.com>
References: <20090219195919.12853.1845224976.divmod.quotient.11884@henry.divmod.com>
Message-ID: <200902192235.48615.esteve@sindominio.net>

On Thursday 19 February 2009 20:59:19 Jean-Paul Calderone wrote:
> The convention is for avatarId to be a string, but as the anonymous case
> indicates, that's not strictly required. :)  The real requirement is that
> the realm be able to interpret the avatarId.  The way this generally works

Heh, want to hear a funny thing? That's what my current code already did :-) I 
was porting this chunk of code from Web2 to Web and while re-reading the cred 
documentation, I noticed that little bit about returning a string. So, if 
it's kosher to use the avatarId in some other way, I'm happy not having to 
tinker with minds.

> I'm not quite sure what you mean here - how should I equate PB and
> HTTPAuthSessionWrapper?

I'm probably wrong, but if I had to wrap a mind-aware portal (as it's the case 
of PB), I think I would have trouble with it. Anyway, I'm a PB noob, so I'm 
sure I'm mistaken.

> It probably *is* a good idea to allow the mind to be created somehow.  It
> was only omitted because no obvious use-cases presented themselves at the
> time.  I'm still not really convinced that this use case is a good one
> though, so I'm not sure I'd be in favor of adding the hook now in order
> to support this. ;)

:-)

However, I still think it's a problem (although I must agree that it would 
probably be rarely used), since the only way to create a mind is to override 
the entire method, which is a bit cumbersome. But, as you said, minds are so 
obscure, that probably nobody would ever notice it.

Cheers.



From chris.yan at saybot.com  Fri Feb 20 03:08:24 2009
From: chris.yan at saybot.com (Chris)
Date: Fri, 20 Feb 2009 18:08:24 +0800
Subject: [Twisted-Python] How to use ampoule?
Message-ID: <499E8118.7000303@saybot.com>

Hi everyone,
I am using twisted to build a server,and the computing request maybe
costs lot of cpu resources.I have checked the maillist,it seems I can
use ampoule plugin to create another process ,I have checked the
website,and downloaded the source code.It seems there is no any document
for it.I did find a example dir,after checking the code,I was
confused.There should be two files,one for client and one for server,am
I right?the client will send the request to the server(could be in
another machine?),and the server responses.but I can't find anything
which matches what I thought.Can anyone explain a little bit to me?Or if
there is some code that would be better.
And the twisted server will receive lot of binary data from the
client,if I use ampoule,I have to send the same data to the ampoule
server again(now the twisted server acts as the ampoule client).Is the
ampoule suitable for such a kind of task? Or I should just use twisted
process module?
I don't know my understanding is correct or not,please correct me.

Best Wishes
Chris




From luper.rouch at gmail.com  Fri Feb 20 11:56:54 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Fri, 20 Feb 2009 19:56:54 +0100
Subject: [Twisted-Python] Debugging Twisted
Message-ID: <499EFCF6.3060807@gmail.com>

I would like to investigate on the conch error I mentionned in my 
previous message ("KeyError when an errback is triggered within a conch 
TCP tunnel").

My problem is Twisted catches the exceptions and the debugger won't stop 
on them, how could I avoid that ? Is there a "debug" reactor ?



From exarkun at divmod.com  Fri Feb 20 12:04:55 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 20 Feb 2009 14:04:55 -0500
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <499EFCF6.3060807@gmail.com>
Message-ID: <20090220190455.12853.1519432547.divmod.quotient.12188@henry.divmod.com>

On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch <luper.rouch at gmail.com> wrote:
>I would like to investigate on the conch error I mentionned in my previous 
>message ("KeyError when an errback is triggered within a conch TCP tunnel").
>
>My problem is Twisted catches the exceptions and the debugger won't stop on 
>them, how could I avoid that ? Is there a "debug" reactor ?

Try the --debug option to twistd.

Jean-Paul



From ellisonbg.net at gmail.com  Fri Feb 20 12:11:24 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 20 Feb 2009 11:11:24 -0800
Subject: [Twisted-Python] Twisted slow in Mac OS X fast on Windows
Message-ID: <6ce0ac130902201111u6063d100j891a04f73d99db0b@mail.gmail.com>

Hi,

We use Twisted extensively in the IPython project for parallel and
distributed computing.  We have an extensive test suite that uses
trial to test our servers and clients.  Everything works
great...but...the test suite takes much longer to run on OS X than
windows.  Here is what I mean:

1.  2.53 Ghz Intel Core 2 Duo, Mac OS X 10.5.  Test suite takes 67 seconds

2.  *Same machine*, running Windows XP as VM in VMWare.  Test suite
takes 17 seconds.

I have verified that all the tests are being run on Windows.  This is
very surprising to me as I would expect, if anything, the Windows VM
to be a bit slower, not 3x faster.  This is the same hardware, the
same code, the only thing that I can think of that is different is the
reactor implementation.  I am using the default reactor on both
platforms.

Questions:

* Is the Windows reactor really that fast?
* Is the default (I think it is select) reactor on OS X really that slow?
* Why else would it be that slow on OS X?
* What can I do to speed this up?

Cheers,

Brian



From luper.rouch at gmail.com  Fri Feb 20 12:15:02 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Fri, 20 Feb 2009 20:15:02 +0100
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <20090220190455.12853.1519432547.divmod.quotient.12188@henry.divmod.com>
References: <20090220190455.12853.1519432547.divmod.quotient.12188@henry.divmod.com>
Message-ID: <499F0136.1010907@gmail.com>

Jean-Paul Calderone wrote :
> On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch <luper.rouch at gmail.com> 
> wrote:
>> I would like to investigate on the conch error I mentionned in my 
>> previous message ("KeyError when an errback is triggered within a 
>> conch TCP tunnel").
>>
>> My problem is Twisted catches the exceptions and the debugger won't 
>> stop on them, how could I avoid that ? Is there a "debug" reactor ?
> 
> Try the --debug option to twistd.
> 
> Jean-Paul
> 

My application is a client, how can I run it with twistd ?



From exarkun at divmod.com  Fri Feb 20 12:19:06 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 20 Feb 2009 14:19:06 -0500
Subject: [Twisted-Python] Twisted slow in Mac OS X fast on Windows
In-Reply-To: <6ce0ac130902201111u6063d100j891a04f73d99db0b@mail.gmail.com>
Message-ID: <20090220191906.12853.608668455.divmod.quotient.12193@henry.divmod.com>

On Fri, 20 Feb 2009 11:11:24 -0800, Brian Granger <ellisonbg.net at gmail.com> wrote:
>Hi,
>
>We use Twisted extensively in the IPython project for parallel and
>distributed computing.  We have an extensive test suite that uses
>trial to test our servers and clients.  Everything works
>great...but...the test suite takes much longer to run on OS X than
>windows.  Here is what I mean:
>
>1.  2.53 Ghz Intel Core 2 Duo, Mac OS X 10.5.  Test suite takes 67 seconds
>
>2.  *Same machine*, running Windows XP as VM in VMWare.  Test suite
>takes 17 seconds.
>
>I have verified that all the tests are being run on Windows.  This is
>very surprising to me as I would expect, if anything, the Windows VM
>to be a bit slower, not 3x faster.  This is the same hardware, the
>same code, the only thing that I can think of that is different is the
>reactor implementation.  I am using the default reactor on both
>platforms.
>
>Questions:
>
>* Is the Windows reactor really that fast?

Probably not.  But it depends what your test suite does.

>* Is the default (I think it is select) reactor on OS X really that slow?

Probably not.  But it depends what your test suite does.

>* Why else would it be that slow on OS X?
>* What can I do to speed this up?

The only thing that comes to mind is that some hostname lookup functions
used to be pretty slow on OS X.  I have no idea if this is still the case.
I suggest profiling the suite on OS X and Windows and comparing the results
to get a better idea of where to look for the problem.

Jean-Paul



From exarkun at divmod.com  Fri Feb 20 12:25:24 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 20 Feb 2009 14:25:24 -0500
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <499F0136.1010907@gmail.com>
Message-ID: <20090220192524.12853.1039011078.divmod.quotient.12197@henry.divmod.com>

On Fri, 20 Feb 2009 20:15:02 +0100, Luper Rouch <luper.rouch at gmail.com> wrote:
>Jean-Paul Calderone wrote :
>>On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch <luper.rouch at gmail.com> 
>>wrote:
>>>I would like to investigate on the conch error I mentionned in my previous 
>>>message ("KeyError when an errback is triggered within a conch TCP 
>>>tunnel").
>>>
>>>My problem is Twisted catches the exceptions and the debugger won't stop 
>>>on them, how could I avoid that ? Is there a "debug" reactor ?
>>
>>Try the --debug option to twistd.
>>
>>Jean-Paul
>
>My application is a client, how can I run it with twistd ?

See http://twistedmatrix.com/projects/core/documentation/howto/tap.html

Jean-Paul



From exarkun at divmod.com  Fri Feb 20 15:35:36 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 20 Feb 2009 17:35:36 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>
Message-ID: <20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>

On Thu, 5 Feb 2009 16:56:51 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>On Mon, 26 Jan 2009 18:10:32 -0500, Jean-Paul Calderone <exarkun at divmod.com> 
>wrote:
>>Hello All,
>>
>>I'd like to organize another Twisted sprint in Cambridge, MA in February.
>>As with previous sprints, this is an all day event, most likely hosted at
>>the Divmod office in Porter Square, for Twisted hacking.  The two topics
>>which have been raised thus far for this sprint are documentation - in
>>particular, looking at Twisted documentation from a high-level and coming
>>up with a coherent overall strategy for improving it - and deprecation
>>(looking for old, bad APIs in Twisted which we should get rid of).  Of
>>course, other topics are welcome as well.
>
>The sprint will be held on February 22nd.  All are welcome.  If you need
>details on how to get to the sprint, please contact me off-list.
>

Just a reminder, the sprint is this Sunday.  If you don't come, Twisted
will be sad.

Jean-Paul



From dialtone at gmail.com  Fri Feb 20 16:07:58 2009
From: dialtone at gmail.com (Valentino Volonghi)
Date: Fri, 20 Feb 2009 15:07:58 -0800
Subject: [Twisted-Python] How to use ampoule?
In-Reply-To: <499E8118.7000303@saybot.com>
References: <499E8118.7000303@saybot.com>
Message-ID: <B8CD398A-F138-4F77-A9E9-A0B073A34EEE@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Feb 20, 2009, at 2:08 AM, Chris wrote:

> Hi everyone,
> I am using twisted to build a server,and the computing request maybe
> costs lot of cpu resources.I have checked the maillist,it seems I can
> use ampoule plugin to create another process ,I have checked the
> website,and downloaded the source code.It seems there is no any  
> document
> for it.I did find a example dir,after checking the code,I was
> confused.There should be two files,one for client and one for  
> server,am
> I right?the client will send the request to the server(could be in
> another machine?),and the server responses.but I can't find anything
> which matches what I thought.Can anyone explain a little bit to me? 
> Or if
> there is some code that would be better.

I don't have much time to write documentation, I basically spend most of
the time in documenting the code itself, in testing it and I attached  
some of
the examples that one can use to learn the basics by himself but...

You don't need 2 files, you need the code you want to run on both sides
of the connection, Ampoule doesn't support shipping functions, although
one might implement it on top of what ampoule offers, albeit not  
recommended.

AMPoule uses AMP as a communication protocol between the caller and the
process pool, this means that they talk to each other using  
twisted.protocols.amp
and that for the abstraction sake they work as 2 separate networked  
services
that make RPC calls to each other. Again this also means that in order  
to
develop a process pool you will use AMP abstractions and classes on top
of what AMPoule offers by default.

Let's look at the simplest example: examples/pid.py

What you need is a set of commands that a child process should be able
to answer to, in pid.py this set is made of just a single command and  
that
is:

from twisted.protocols import amp

class Pid(amp.Command):
     response = [("pid", amp.Integer())]

Once you define a command that you want to be able to run in a process
pool you need to define a child process that is able to answer to the  
Pid
command. Defining this also defines what every worker in the process
pool will be able to answer to.

In the example this is done with the following lines:

from ampoule import child

class MyChild(child.AMPChild):
     @Pid.responder
     def pid(self):
         import os
         return {"pid": os.getpid()}

We define a child of the process pool called MyChild and using AMP
machinery we set the method pid as the responder for the command
Pid. Unsurprisingly this command gets the pid and returns it.

Now we need to run this code and use it. So far we have defined
the server (ProcessPool) side of things.

[NOTE: In order to run everything in a single file using "python  
filename.py"
to start it we need to hack around python's import system, this is why
util.mainpoint exist, only to allow the script to import itself,  
you'll notice
that a script's name when started with "python filename.py" is not
filename but __main__.]

Here's the code

@util.mainpoint
def main(args):
     import sys
     from twisted.internet import reactor, defer
     from twisted.python import log
     log.startLogging(sys.stdout)

     from ampoule import pool

     @defer.inlineCallbacks
     def _run():
         pp = pool.ProcessPool(MyChild, min=1, max=1)
         yield pp.start()
         result = yield pp.doWork(Pid)
         print "The Child process PID is:", result['pid']
         yield pp.stop()
         reactor.stop()

     reactor.callLater(1, _run)
     reactor.run()

Besides all the standard twisted imports and 'boilerplate' code
the core of the client is inside the _run function.

It creates the process pool telling it to use MyChild as a specification
for its children, we also tell it that the minimum size of the pool is 1
as well as the maximum size of the pool. Then the code proceeds
to start it and once it's tarted we can submit commands and this is
done with:

result = yield pp.doWork(Pid)

or

result = yield pp.callRemote(Pid)

The script then prints the result, stops the pool and exits.

Strictly speaking the client of the process pool only needs to know
the commands that he wants to execute, and which pool (if there
is more than one) can execute it.

This however is only true when the server is started separately from
the client using "twistd ampoule" plugin. If your clients starts the
pool by itself it needs to know also the class that defines the children
protocol.

The twistd ampoule plugin does nothing more than taking a child and
parent class (the parent class defines what the master of the process
pool can speak so that children can make calls against it if needed)
and using some hacks exposes the same exact interface across the
network using the parameters that you pass in the cli.

> And the twisted server will receive lot of binary data from the
> client,if I use ampoule,I have to send the same data to the ampoule
> server again(now the twisted server acts as the ampoule client).Is the

Correct. I don't see any other way to do this except maybe if you have
a distributed filesystem, in which case you might want to just save
the data on the server and then make the right calls on the remote
pools that have access to this distributed filesystem so that they can
process the shards that they have access to.

> ampoule suitable for such a kind of task? Or I should just use twisted
> process module?

Using the process module is not really different, the only issue you
might find is related to the limit imposed by AMP of 64KB of data
that can be transmitted in a single call to a given child. So for  
example

pool.callRemote(Command, argument="I'm a bit string of more than 64KB")

won't work but:

pool.callRemote(Command, argument="I'm a bit string of LESS than 64KB")

will. There are multiple ways in which you can solve this issue but  
essentially
I wouldn't use ampoule to transport big quantities of data, you'd  
better use
a distributed filesystem or actually an http server where you store data
from the server and each worker grabs data from.

> I don't know my understanding is correct or not,please correct me.


It seems you got it right.

HTH

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkmfN88ACgkQ9Llz28widGXE9ACgk2OAlXK0cVP5/5tINoFAD70C
Zc8Anig2L8GCNklG83a6la4x/hksFozW
=SS7Z
-----END PGP SIGNATURE-----



From glyph at divmod.com  Fri Feb 20 16:50:42 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 20 Feb 2009 23:50:42 -0000
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>
References: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>
	<20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>
Message-ID: <20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>


On 10:35 pm, exarkun at divmod.com wrote:
>Just a reminder, the sprint is this Sunday.  If you don't come, Twisted
>will be sad.

The sprint will officially begin at 10AM, and continue until nobody is 
interested in continuing.  Typically, this ends up being 6-7PM, at which 
point we adjourn to a local restaurant for dinner.

However, regardless of official timing, if you're coming, please drop a 
message in response so we can expect you and let you in when you show 
up!  Sometimes the sprint has been known to wander off for lunch and 
leave latecomers literally out in the cold.

If you can't make it to Massachusetts, please feel free to join in on 
the #twisted IRC channel on chat.freenode.net and sprint with us 
virtually.

I'll be coming.  See you there!



From jml at mumak.net  Fri Feb 20 16:45:11 2009
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 21 Feb 2009 10:45:11 +1100
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
References: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>
	<20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>
	<20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
Message-ID: <d06a5cd30902201545r21c05395pa6d42cd44d2b9183@mail.gmail.com>

On Sat, Feb 21, 2009 at 10:50 AM,  <glyph at divmod.com> wrote:
> If you can't make it to Massachusetts, please feel free to join in on the
> #twisted IRC channel on chat.freenode.net and sprint with us virtually.
>
> I'll be coming.  See you there!

Have fun guys!

The sprint starts 2AM Monday morning my time, so I won't be attended
virtually or otherwise.

jml



From ellisonbg.net at gmail.com  Fri Feb 20 16:44:59 2009
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 20 Feb 2009 15:44:59 -0800
Subject: [Twisted-Python] Twisted slow in Mac OS X fast on Windows
In-Reply-To: <20090220191906.12853.608668455.divmod.quotient.12193@henry.divmod.com>
References: <6ce0ac130902201111u6063d100j891a04f73d99db0b@mail.gmail.com>
	<20090220191906.12853.608668455.divmod.quotient.12193@henry.divmod.com>
Message-ID: <6ce0ac130902201544p6f37feb8y6cdc7bc4fd9cf19e@mail.gmail.com>

Hi,

I think it may just be the built-in Python on Leopard:

On OS X:

In [1]: def f():
   ...:     for i in range(100000):
   ...:         a = 1 + i
In [2]: %timeit f()
100 loops, best of 3: 11.8 ms per loop

Same hardware, but Windows:

In [1]: def f():
   ...:     for i in range(100000):
   ...:         a = 1 + i
In [2]: %timeit f()
100 loops, best of 3: 8.33 ms per loop

That's depressing...

Cheers,

Brian


On Fri, Feb 20, 2009 at 11:19 AM, Jean-Paul Calderone
<exarkun at divmod.com> wrote:
> On Fri, 20 Feb 2009 11:11:24 -0800, Brian Granger <ellisonbg.net at gmail.com>
> wrote:
>>
>> Hi,
>>
>> We use Twisted extensively in the IPython project for parallel and
>> distributed computing.  We have an extensive test suite that uses
>> trial to test our servers and clients.  Everything works
>> great...but...the test suite takes much longer to run on OS X than
>> windows.  Here is what I mean:
>>
>> 1.  2.53 Ghz Intel Core 2 Duo, Mac OS X 10.5.  Test suite takes 67 seconds
>>
>> 2.  *Same machine*, running Windows XP as VM in VMWare.  Test suite
>> takes 17 seconds.
>>
>> I have verified that all the tests are being run on Windows.  This is
>> very surprising to me as I would expect, if anything, the Windows VM
>> to be a bit slower, not 3x faster.  This is the same hardware, the
>> same code, the only thing that I can think of that is different is the
>> reactor implementation.  I am using the default reactor on both
>> platforms.
>>
>> Questions:
>>
>> * Is the Windows reactor really that fast?
>
> Probably not.  But it depends what your test suite does.
>
>> * Is the default (I think it is select) reactor on OS X really that slow?
>
> Probably not.  But it depends what your test suite does.
>
>> * Why else would it be that slow on OS X?
>> * What can I do to speed this up?
>
> The only thing that comes to mind is that some hostname lookup functions
> used to be pretty slow on OS X.  I have no idea if this is still the case.
> I suggest profiling the suite on OS X and Windows and comparing the results
> to get a better idea of where to look for the problem.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at twistedmatrix.com  Fri Feb 20 17:15:10 2009
From: exarkun at twistedmatrix.com (exarkun)
Date: Sat, 21 Feb 2009 05:35:10 0480
Subject: [Twisted-Python] 123912652  C-A-N-A-D-l-A-N   P-H-A-R-M-A-C-Y
Message-ID: <05da01c993a3$1b34fea0$834e4a42@pc_user>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090221/3d3ed135/attachment.html>
-------------- next part --------------
About this mailing:
You are receiving this e-mail because you subscribed to MSN Featured Offers. Microsoft respects your privacy. If you do not wish to receive this MSN Featured Offers e-mail, please click the "Unsubscribe" link below. This will not unsubscribe you from e-mail communications from third-party advertisers that may appear in MSN Feature Offers. This shall not constitute an offer by MSN. MSN shall not be responsible or liable for the advertisers' content nor any of the goods or service advertised. Prices and item availability subject to change without notice.

©2009 Microsoft | Unsubscribe at http://wonnucul.cn | More news at http://wonnucul.cn | Prvacy at http://wonnucul.cn
Microsoft Corporation, One Microsoft Way, Redmond, WA 98052

From radix at twistedmatrix.com  Sat Feb 21 02:37:31 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 21 Feb 2009 09:37:31 +0000
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
References: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>
	<20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>
	<20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
Message-ID: <60ed19d40902210137u4bd2a2e4me3b2db112bb257c7@mail.gmail.com>

On Fri, Feb 20, 2009 at 11:50 PM,  <glyph at divmod.com> wrote:
>
> On 10:35 pm, exarkun at divmod.com wrote:
>>
>> Just a reminder, the sprint is this Sunday.  If you don't come, Twisted
>> will be sad.
> However, regardless of official timing, if you're coming, please drop a
> message in response so we can expect you and let you in when you show up!

I'll be back in Boston some time in the next twelve hours. Assuming
I'm not completely zonked from jetlag, I'll be there on Sunday.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From paulswartz at gmail.com  Sat Feb 21 09:49:59 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Sat, 21 Feb 2009 11:49:59 -0500
Subject: [Twisted-Python] Twisted Sprint in February
In-Reply-To: <20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
References: <20090205215651.12853.1431074204.divmod.quotient.4024@henry.divmod.com>
	<20090220223536.12853.820758742.divmod.quotient.12229@henry.divmod.com>
	<20090220235042.12555.8773775.divmod.xquotient.4633@weber.divmod.com>
Message-ID: <324cfb540902210849i4c4333f6l86f55bcdc8ac93d7@mail.gmail.com>

On Fri, Feb 20, 2009 at 6:50 PM,  <glyph at divmod.com> wrote:
>
> On 10:35 pm, exarkun at divmod.com wrote:
>>
>> Just a reminder, the sprint is this Sunday.  If you don't come, Twisted
>> will be sad.
>
> The sprint will officially begin at 10AM, and continue until nobody is
> interested in continuing.  Typically, this ends up being 6-7PM, at which
> point we adjourn to a local restaurant for dinner.
>
> However, regardless of official timing, if you're coming, please drop a
> message in response so we can expect you and let you in when you show up!
>  Sometimes the sprint has been known to wander off for lunch and leave
> latecomers literally out in the cold.

I'll be there, time depending on when I wake up Sunday morning.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin



From terry at jon.es  Sat Feb 21 20:41:12 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 22 Feb 2009 04:41:12 +0100
Subject: [Twisted-Python] What to do when a service fails to start, also, 
	deferred and startService
In-Reply-To: Your message at 08:20:32 on Sunday, 21 December 2008
References: <18734.54780.97710.644648@jon.es>
	<20081128140217.12555.360367893.divmod.xquotient.628@weber.divmod.com>
	<18736.4217.759501.381840@jon.es>
	<20081221082032.12555.570369233.divmod.xquotient.2379@weber.divmod.com>
Message-ID: <18848.51544.210828.667334@jon.es>

Hi again Glyph

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> On 28 Nov, 03:38 pm, terry at jon.es wrote:
>> Thanks for the detailed reply.

glyph> No problem, sorry it took so long to get back to this; I definitely
glyph> left the conversation halfway through.

And this followup is even slower, sorry.  Here's a summary of the
conversation I'd like to continue:

>> So in my case I want to indicate to twistd that the service that my
>> class creates a makeService method to create, but which I do not set in
>> motion, has failed to start and that twistd should exit, or do something
>> other than cheerfully tell me that there's been an Unhandled Error.

>> Does that make more sense? Sorry, I should have said I was using 
>> twistd.

glyph> Yes.  And I think that this is a good use-case for making IService a
glyph> bit deeper than it is.

glyph> My previous messages were basically saying "you can't do what you
glyph> want with IService".  i.e. you can't write your own code to do
glyph> something clever and somehow have dependencies and notifications to
glyph> users of "twistd" fall out of that.  But that shouldn't be taken as
glyph> an indication that twistd itself shouldn't be improved.

glyph> It's not that you've failed to understand something - you have
glyph> correctly identified that there is nothing to understand :).  You
glyph> need to go find that thing ("whatever it is" ;-)) in twistd that's
glyph> invoking the very first call to IService.startService (and
glyph> privilegedStartService as well) and propose a concrete way to make
glyph> it smarter.

OK, here's a concrete proposal. Let's forget about twistd for the time
being and just address the central things I'm trying to do:

  1. I want a service to be able to initialize itself using code that
  receives deferreds. Right now, startService is not expected to return
  anything. I can go ahead and call a deferred-returning function in
  startService but I wont know that it's done unless I set a flag somewhere
  in a callback, and the rest of the methods in my service have to check
  that flag to see if the initialization is complete. In case it's not
  clear, I'm imagining the case of a MultiService, one Service of which
  performs the start and stop for the overall service.

  2. Because the other Services in the MultiService depend on the
  successful execution of the initialization, I'd rather they didn't get
  started at all if the initialization fails.

  3. It would be nice to get my hands on a deferred that had errbacked as a
  result of an unsuccessful start or stop.


You say: "making IService a bit deeper than it is" and then "you can't do
what you want with IService".

And Esteve Fernandez has already pointed me to this:

> "duuuuuude. don't. inherit. multiservice."

But it turns out you can do exactly what I want with a very simple subclass
(or rewriting of) MultiService.  BTW, this code is not tested - I want to
float the idea before doing more. Here's the simple version:

    class GuardedMultiService(service.MultiService):
        implements(service.IServiceCollection)

        def __init__(self, initService):
            service.MultiService.__init__(self)
            self.initService = initService

        def startService(self):
            d = defer.maybeDeferred(self.initService.startService)
            d.addCallback(lambda _: service.MultiService.startService)

        def stopService(self):
            d = service.MultiService.stopService()
            d.addCallback(lambda _: self.initService.stopService)
            return d

This, I believe, solves 1 and 2 above. It has the nice property that all
the regular services add to this class will not be started until after the
possibly deferred-returning initService.startService is done. So there's no
need for any checking later to see that you really are initialized.

And to solve 3, you can add (all defaulting to None) args to __init__ to
specify two errback functions and their arguments, and use addErrback to
attach these to the deferreds in startService and stopService.  If we also
make initService have a default of None, the result will be backward
compatible with the existing MultiService, and could just replace it. The
new version simply gives a way to deal with 1, 2 and 3, if you need it.

BTW, in your original reply you wrote

glyph> This might seem a bit inconsistent, since stopService uses the
glyph> return of a Deferred.  However, this is for a very specific reason,
glyph> not a generalized error-handling case: you may need to prevent the
glyph> *rest* of the system (specifically, the reactor) from completely
glyph> shutting down

My #2 above is like the flip side of this: if the initialization of a
service fails, you may need to prevent the *rest* of the system from coming
up, and (if you can't fix things in the errback) you might want to stop the
reactor. I say this specifically with regard to services launched by twistd.

Terry



From exarkun at twistedmatrix.com  Sat Feb 21 22:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Feb 2009 05:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1235279111.36.1705088246@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090222/03a9b131/attachment.html>

From esteve at sindominio.net  Sun Feb 22 02:51:22 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Sun, 22 Feb 2009 10:51:22 +0100
Subject: [Twisted-Python] What to do when a service fails to start, also,
	deferred and startService
In-Reply-To: <18848.51544.210828.667334@jon.es>
References: <18734.54780.97710.644648@jon.es>
	<20081221082032.12555.570369233.divmod.xquotient.2379@weber.divmod.com>
	<18848.51544.210828.667334@jon.es>
Message-ID: <200902221051.23304.esteve@sindominio.net>

On Sunday 22 February 2009 04:41:12 Terry Jones wrote:
> And Esteve Fernandez has already pointed me to this:
> > "duuuuuude. don't. inherit. multiservice."

But I didn't say that, I was actually quoting this:

http://www.twistedmatrix.com/pipermail/twisted-python/2005-May/010400.html

Cheers.



From tarjei at nu.no  Mon Feb 23 02:34:53 2009
From: tarjei at nu.no (tarjei)
Date: Mon, 23 Feb 2009 10:34:53 +0100
Subject: [Twisted-Python] monitoring twisted services / processes
In-Reply-To: <539234cb0902190349q36ef3d6v4e38137be80f971@mail.gmail.com>
References: <539234cb0902190349q36ef3d6v4e38137be80f971@mail.gmail.com>
Message-ID: <49A26DBD.8040706@nu.no>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,
> 
> I'm currently working on a PoC with twisted, Python, to prove the
> technology as an alternative to more
> established enterprise choices (java app servers, etc..).

> the question is: if I have N number of processes running in a M number
> of machines, given that there are no network restriction,
> and that at least http and hhtps are always available, how these
> services would be efficiently monitored?

I've been planning to blog(done [1]) about this. What I do is to have
the service listen to a http connection that returns some monitoring
data. Something like the one below.

Then I use a custom Nagios plugin to request this url and Nagios-PNP to
make graphs of whatever datapoints the monitor produces.

The plugin setup is done by providing an url (say
http://myservice:893/monitor) to monitor. The plugin will then both
monitor the application and graph it.

I have also added an extra field for "errors" that I use to report odd
exceptions or other types of failures that are non-fatal but should be
investigated. If the error count exceeds a set level the may also go
into the reporting.

http://www.kraken.no/blog/?q=node/9


Regards,
Tarjei

class Monitor(rend.Page):
    """
    Basic monitoring interface todo: make it even more general.
    Format:

    <itemname value="int" critical="int" warning="int" unit="UOM"
label="itemname"
    min="0" max="300"
    />
    UOM (unit of measurement) is one of:
      no unit specified - assume a number (int or float) of things (eg,
users, processes, load averages)
      s - seconds (also us, ms)
      % - percentage
      B - bytes (also KB, MB, TB)
      c - a continous counter (such as bytes transmitted on an interface)

    """
    def __init__(self, config):
        self.isLeaf = True
        self.config = config

    def renderHTTP(self, ctx):
        inevow.IRequest(ctx).setHeader('Content-Type', 'text/xml;
charset=UTF-8')

        #que_length = str(len(getter.get_ids(0, -1)))
        #num_updated = str(get_nr_updated_last_day(self.config.get_db()))
        num_errors = str(len(self.config.getErrors()))

        _root = ET.Element('status', {'service' : 'PDFIndexer'})
        if 'total' in self.config.stats:
            _doc = ET.SubElement(_root,'total', {'value':
str(self.config.stats['total']) })

        _doc = ET.SubElement(_root,'runnerStatus', {'value':
str(self.config.checksStatus()) })
        #_doc = ET.SubElement(_root,'itemsAddedlast24', {'value':
num_updated})
        _errors = ET.SubElement(_root,'errors', {'value': num_errors,
'critical': "3" , 'warning': "2"})

        for error in self.config.getErrors():
            t = ET.SubElement(_errors, 'error', text = error)

        _xmlcontainer = StringIO()
        ET.ElementTree(_root).write(_xmlcontainer, encoding="UTF-8")
        return _xmlcontainer.getvalue()




> 
> is there a twisted application/plugin/framework to do so? are you just
> create 'polling' requests that an existing monitoring tool (i.e.
> Nagios)
> parses and interprets? How would you build a "console" to manage
> services status?
> In a nutshell, what I'm trying to find out if there is already around
> a "container-like" twisted based application that can be used to
> manage/monitor
> twisted applications provided that they adhere to a given interface
> 
> Thanks for your help
> 
> Micc
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFJom29YVRKCnSvzfIRAo0XAKCCOhwp1qIi0Qx2Dae0hn5gHkt5rwCfc8fn
XYXuTUrB2c/eR8ex870rXAc=
=pqNc
-----END PGP SIGNATURE-----



From esteve at sindominio.net  Mon Feb 23 03:48:04 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Mon, 23 Feb 2009 11:48:04 +0100
Subject: [Twisted-Python] official packaging
Message-ID: <200902231148.04217.esteve@sindominio.net>

Hi all,

I recently came across this issue [1], and Glyph commented about official 
packaging.

We're using Ubuntu Hardy and created packages for Twisted 8.2.0, as Ubuntu LTS 
is our platform of choice. Those packages were accepted by their official 
maintainer (Matthias Klose, doko at debian.org) and uploaded to Ubuntu Jaunty 
and Debian unstable.

Sadly, the official packages now use python-central (>=0.6.11), which isn't 
available in Hardy, so we'll have to stick to the packages in our PPA [2] In 
any case, we'll update them when Twisted 9.0 is released, but I think it 
would be better to upload them to a PPA repository officially approved by the 
Twisted team.

Anyway, it would be great to have recent packages of Twisted for distributions 
that offer some kind of long term support contracts (Ubuntu, RHEL, etc.), but 
that tend to get a bit outdated.

Cheers.

1 - http://twistedmatrix.com/trac/ticket/3102
2 - https://launchpad.net/~fluidinfo/+archive/ppa



From luper.rouch at gmail.com  Mon Feb 23 07:11:15 2009
From: luper.rouch at gmail.com (Luper Rouch)
Date: Mon, 23 Feb 2009 15:11:15 +0100
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <20090220192524.12853.1039011078.divmod.quotient.12197@henry.divmod.com>
References: <20090220192524.12853.1039011078.divmod.quotient.12197@henry.divmod.com>
Message-ID: <49A2AE83.8040901@gmail.com>

Jean-Paul Calderone a écrit :
> On Fri, 20 Feb 2009 20:15:02 +0100, Luper Rouch <luper.rouch at gmail.com> 
> wrote:
>> Jean-Paul Calderone wrote :
>>> On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch 
>>> <luper.rouch at gmail.com> wrote:
>>>> I would like to investigate on the conch error I mentionned in my 
>>>> previous message ("KeyError when an errback is triggered within a 
>>>> conch TCP tunnel").
>>>>
>>>> My problem is Twisted catches the exceptions and the debugger won't 
>>>> stop on them, how could I avoid that ? Is there a "debug" reactor ?
>>>
>>> Try the --debug option to twistd.
>>>
>>> Jean-Paul
>>
>> My application is a client, how can I run it with twistd ?
> 
> See http://twistedmatrix.com/projects/core/documentation/howto/tap.html
> 

Sorry but I don't understand how to run a _client_ application using 
twistd, I know how to create servers, but the code I would like to debug 
only uses conch to connect to a SSH server (OpenSSH, not Twisted).

Luper



From exarkun at divmod.com  Mon Feb 23 07:14:18 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 23 Feb 2009 09:14:18 -0500
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <49A2AE83.8040901@gmail.com>
Message-ID: <20090223141418.12853.1555685494.divmod.quotient.13186@henry.divmod.com>

On Mon, 23 Feb 2009 15:11:15 +0100, Luper Rouch <luper.rouch at gmail.com> wrote:
>Jean-Paul Calderone a écrit :
>>On Fri, 20 Feb 2009 20:15:02 +0100, Luper Rouch <luper.rouch at gmail.com> 
>>wrote:
>>>Jean-Paul Calderone wrote :
>>>>On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch <luper.rouch at gmail.com> 
>>>>wrote:
>>>>>I would like to investigate on the conch error I mentionned in my 
>>>>>previous message ("KeyError when an errback is triggered within a conch 
>>>>>TCP tunnel").
>>>>>
>>>>>My problem is Twisted catches the exceptions and the debugger won't stop 
>>>>>on them, how could I avoid that ? Is there a "debug" reactor ?
>>>>
>>>>Try the --debug option to twistd.
>>>>
>>>>Jean-Paul
>>>
>>>My application is a client, how can I run it with twistd ?
>>
>>See http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
>Sorry but I don't understand how to run a _client_ application using twistd, 
>I know how to create servers, but the code I would like to debug only uses 
>conch to connect to a SSH server (OpenSSH, not Twisted).

There is no significant difference between servers and clients in this
respect.  If you know how to create a server, you know how to create a
client - just use the client APIs instead of the server APIs.

Jean-Paul



From exarkun at divmod.com  Mon Feb 23 08:05:34 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 23 Feb 2009 10:05:34 -0500
Subject: [Twisted-Python] Development Process Failure
In-Reply-To: 0
Message-ID: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>

Hey all,

Recently I've been bothered by a systematic shortcoming of the Twisted
development process.  When changes are made in response to a review,
they are generally made in a way which is difficult to inspect.  The
value of a review is lost if the valid points raised by it are not
addressed before the changes are applied to trunk.  Often, there's no
problem here, but it sometimes happens that /not/ all of the review
points are addressed before a ticket is re-submitted for review.  In
these cases, one of two things happens.  The re-reviewer might go back
to the previous review and verify that all of the points raised in it
have been addressed.  This is a time consuming process, though it can
be made easier if the author responds to each review point (and even
easier if a changeset is linked in each response).  Or, the re-reviewer
might assume that the author addressed all points and just look over the
branch for anything missed in the previous review.

In either of these cases, time is being wasted, but in the latter case,
time is being wasted /and/ bad code is being added to trunk.  I would
like to consider how we might address this shortcoming of the development
process.

One possibility is to explicitly adjust the review guidelines and direct
reviewers always to verify that previous review points have actually been
addressed.  What ideas do other people have?

Jean-Paul



From luper.rouch at gmail.com  Mon Feb 23 08:17:07 2009
From: luper.rouch at gmail.com (luper rouch)
Date: Mon, 23 Feb 2009 16:17:07 +0100
Subject: [Twisted-Python] Re: KeyError when an errback is triggered within a
	conch TCP tunnel
In-Reply-To: <499CDEFC.6000609@gmail.com>
References: <499CDEFC.6000609@gmail.com>
Message-ID: <4e0636f40902230717p66f7eb96m44608ad8336542e9@mail.gmail.com>

Running the example in the debugger, neither ssh_CHANNEL_OPEN() nor
ssh_CHANNEL_OPEN_CONFIRMATION() method of
twisted.conch.ssh.connection.SSHConnection is called, so
self.channelsToRemoteChannel dict is empty when sendClose() is called,
thus the error.

I am not sure if I should file a bug as I'm new to Twisted, does
anyone see an obvious mistake in my code ?

Cheers,
Luper



From luper.rouch at gmail.com  Mon Feb 23 08:21:34 2009
From: luper.rouch at gmail.com (luper rouch)
Date: Mon, 23 Feb 2009 16:21:34 +0100
Subject: [Twisted-Python] Debugging Twisted
In-Reply-To: <20090223141418.12853.1555685494.divmod.quotient.13186@henry.divmod.com>
References: <49A2AE83.8040901@gmail.com>
	<20090223141418.12853.1555685494.divmod.quotient.13186@henry.divmod.com>
Message-ID: <4e0636f40902230721pa9390e6iebefdaddd72ea64e@mail.gmail.com>

2009/2/23 Jean-Paul Calderone <exarkun at divmod.com>:
> On Mon, 23 Feb 2009 15:11:15 +0100, Luper Rouch <luper.rouch at gmail.com>
> wrote:
>>
>> Jean-Paul Calderone a écrit :
>>>
>>> On Fri, 20 Feb 2009 20:15:02 +0100, Luper Rouch <luper.rouch at gmail.com>
>>> wrote:
>>>>
>>>> Jean-Paul Calderone wrote :
>>>>>
>>>>> On Fri, 20 Feb 2009 19:56:54 +0100, Luper Rouch <luper.rouch at gmail.com>
>>>>> wrote:
>>>>>>
>>>>>> I would like to investigate on the conch error I mentionned in my
>>>>>> previous message ("KeyError when an errback is triggered within a conch TCP
>>>>>> tunnel").
>>>>>>
>>>>>> My problem is Twisted catches the exceptions and the debugger won't
>>>>>> stop on them, how could I avoid that ? Is there a "debug" reactor ?
>>>>>
>>>>> Try the --debug option to twistd.
>>>>>
>>>>> Jean-Paul
>>>>
>>>> My application is a client, how can I run it with twistd ?
>>>
>>> See http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>>
>> Sorry but I don't understand how to run a _client_ application using
>> twistd, I know how to create servers, but the code I would like to debug
>> only uses conch to connect to a SSH server (OpenSSH, not Twisted).
>
> There is no significant difference between servers and clients in this
> respect.  If you know how to create a server, you know how to create a
> client - just use the client APIs instead of the server APIs.
>
> Jean-Paul
>

Sorry I had missed TCPClient in the documentation, it works now thanks.

Luper



From itamar at itamarst.org  Mon Feb 23 11:12:08 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 23 Feb 2009 13:12:08 -0500
Subject: [Twisted-Python] Twisted developers: please donate your time!
Message-ID: <1235412728.2733.2.camel@pintsize>

As part of the TSF's fundraising efforts, we are trying to get upfront
donations of time you will spend developing Twisted. It will then get
matched by a donor, if we are successful in getting this grant. So if
you're planning on working on Twisted anyway this year, your work will
count twice as much!

So, if you're interested, please reply, saying something like "I will
spend two weeks working on Gopher support over the next year."

-Itamar




From dripton at ripton.net  Mon Feb 23 13:47:25 2009
From: dripton at ripton.net (David Ripton)
Date: Mon, 23 Feb 2009 12:47:25 -0800
Subject: [Twisted-Python] Twisted developers: please donate your time!
In-Reply-To: <1235412728.2733.2.camel@pintsize>
References: <1235412728.2733.2.camel@pintsize>
Message-ID: <20090223204725.GC16541@vidar.dreamhost.com>

On 2009.02.23 13:12:08 -0500, Itamar Shtull-Trauring wrote:
> As part of the TSF's fundraising efforts, we are trying to get upfront
> donations of time you will spend developing Twisted. It will then get
> matched by a donor, if we are successful in getting this grant. So if
> you're planning on working on Twisted anyway this year, your work will
> count twice as much!
> 
> So, if you're interested, please reply, saying something like "I will
> spend two weeks working on Gopher support over the next year."

I will spend one week working on IPv6 support over the next year.

-- 
David Ripton    dripton at ripton.net



From jml at mumak.net  Mon Feb 23 14:39:04 2009
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 24 Feb 2009 08:39:04 +1100
Subject: [Twisted-Python] Development Process Failure
In-Reply-To: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
References: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
Message-ID: <d06a5cd30902231339i21e7dde5le9b486a0b6993ffe@mail.gmail.com>

On Tue, Feb 24, 2009 at 2:05 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> One possibility is to explicitly adjust the review guidelines and direct
> reviewers always to verify that previous review points have actually been
> addressed.  What ideas do other people have?
>

In the Launchpad team, we replying to review mails just like usenet
posts, and there is a convention that each point raised by the
reviewer has to be addressed. When looking at someone's reply to your
review, the mail quoting makes it obvious if someone has missed a
point.

Given Trac, maybe numbering review points + being direct about the
change would make it easier to inspect replies, which must in turn
mention the numbered points. For this to work, the reviewer would have
to clearly distinguish between "I would like you to change X" and
"Looking at A inspires the though B."

Finally, Launchpad has an arrangement such that branches with over 500
lines of diff need to have their reviews arranged specially (you have
to find a reviewer who will agree to it, and we're allowed to say
"no"). Everything is easier when the diff is smaller.

jml



From glyph at divmod.com  Mon Feb 23 15:27:14 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 23 Feb 2009 22:27:14 -0000
Subject: [Twisted-Python] Development Process Failure
In-Reply-To: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
References: 0
	<20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
Message-ID: <20090223222714.12555.2061659747.divmod.xquotient.4941@weber.divmod.com>

On 03:05 pm, exarkun at divmod.com wrote:
>One possibility is to explicitly adjust the review guidelines and 
>direct
>reviewers always to verify that previous review points have actually 
>been
>addressed.  What ideas do other people have?

For starters, I think we should have a division between process 
"recommendations" and process "requirements".  It would be nice to make 
the requirements page as lightweight as possible, and then have a large 
library of recommendations (like these) for developers to peruse.

Even if we encourage that everyone follow the recommendations as well as 
the requirements, "requirements" sounds like an imposition but 
"recommendations" sounds helpful ;-).

On to the issue at hand: reviewers should always check to make sure that 
previous points have been addressed.  I always try to do that already. 
As you said, the value of the review is lost if the author fails to 
respond to it.  In fact, re-reviewers should take care to avoid adding 
unnecessary *new* work; one should prefer verifying the previous review 
points to doing new analysis.  Obviously there are always issues that 
can arise in a re-review, but especially in the case of bug fixes, it's 
always possible to keep recommending better and better ways to fix it in 
the review.  It's better to just diligently enforce the first review, 
unless the first reviewer missed a requirement (coding standard 
violation, missing test coverage, missing doc coverage, compatibility 
breakage).  Design issues, especially those spotted past the first 
review, should generally be deferred to later tickets.

However, I think the author should really help the reviewer.  It's a lot 
easier for the author to enumerate their responses to review points than 
for the reviewer to look at the diff, the HEAD, or the revision history 
of the branch.

A few times, when responding to a review, I've tried to address each 
review point with an individual commit, and a 're #XXXX' ticket comment 
in the commit message.  You alluded to such an approach.  If the author 
does this, then verifying that the points have been addressed is 
relatively easy.  exarkun, you've done the same thing, and when 
reviewing those tickets I can say that I *really* appreciated it.  It's 
a good habit to get into.

Actually, it would be nice if the "re #XXXX" weren't necessary.  Ideally 
every branch would have the commit history of all of its branches 
interspersed in its comment log.  But that's more trac hackery and 
possibly not worth it.

If it's too difficult for the reviewer to identify where the author has 
responded to feedback, I think the reviewer should feel free to reject 
the re-review by saying "please make a list of revisions where you've 
addressed each of these points and put this back into review".

However, as implied by my suggestion for requirement/recommendation 
division, I don't think the author should necessarily *have* to do this. 
In many cases I've found it pretty easy to verify that the review has 
been addressed.  They should just be responsible for doing it in the 
case that the reviewer needs it :).  For example, patches in the tracker 
tend to be smaller than branches, and I've rarely needed this level of 
detail in the tracker.

Also I think we should take it up with authors after the fact, outside 
the bounds of the review process :).  Too often we (and I am very 
consciously including myself in "we" here, I've done this a bunch of 
times) treat a ticket as "over" if it's managed to make its way through 
the review process, and doesn't cause any buildbot failures or otherwise 
need to be reverted.  We should conduct post-hoc meta-reviews in more 
specific cases rather than waiting for general impressions to bother us.

I'm starting to think that we should have a separate mailing list for 
such discussions, or maybe even join one that already exists.  There 
must be a million blogs, forums, and lists for talking about development 
processes.

As for communicating the results of these discussions, the wiki is good 
for recording conclusions, but we can also use labs.twistedmatrix.com 
for drawing attention to process updates and tools, techniques, and tips 
for working on Twisted.



From glyph at divmod.com  Mon Feb 23 16:07:06 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 23 Feb 2009 23:07:06 -0000
Subject: [Twisted-Python] Development Process Failure
In-Reply-To: <d06a5cd30902231339i21e7dde5le9b486a0b6993ffe@mail.gmail.com>
References: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
	<d06a5cd30902231339i21e7dde5le9b486a0b6993ffe@mail.gmail.com>
Message-ID: <20090223230706.12555.249159647.divmod.xquotient.4948@weber.divmod.com>


On 09:39 pm, jml at mumak.net wrote:
>Given Trac, maybe numbering review points + being direct about the
>change would make it easier to inspect replies, which must in turn
>mention the numbered points. For this to work, the reviewer would have
>to clearly distinguish between "I would like you to change X" and
>"Looking at A inspires the though B."

Here's a thought: every review should have 3 sections.  "According to 
process requirements, you must change XYZ", "I would like you to change 
XYZ", and "here are some things to think about".

I know that as I respond to a review, I know I'd like to have those 
things clearly separated out.



From jml at mumak.net  Mon Feb 23 16:07:51 2009
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 24 Feb 2009 10:07:51 +1100
Subject: [Twisted-Python] Development Process Failure
In-Reply-To: <20090223230706.12555.249159647.divmod.xquotient.4948@weber.divmod.com>
References: <20090223150534.12853.1226335320.divmod.quotient.13199@henry.divmod.com>
	<d06a5cd30902231339i21e7dde5le9b486a0b6993ffe@mail.gmail.com>
	<20090223230706.12555.249159647.divmod.xquotient.4948@weber.divmod.com>
Message-ID: <d06a5cd30902231507g15e5e18fxe6048547f4c4fcb2@mail.gmail.com>

On Tue, Feb 24, 2009 at 10:07 AM,  <glyph at divmod.com> wrote:
>
> On 09:39 pm, jml at mumak.net wrote:
>>
>> Given Trac, maybe numbering review points + being direct about the
>> change would make it easier to inspect replies, which must in turn
>> mention the numbered points. For this to work, the reviewer would have
>> to clearly distinguish between "I would like you to change X" and
>> "Looking at A inspires the though B."
>
> Here's a thought: every review should have 3 sections.  "According to
> process requirements, you must change XYZ", "I would like you to change
> XYZ", and "here are some things to think about".
>
> I know that as I respond to a review, I know I'd like to have those things
> clearly separated out.
>

As long as they are clearly communicated, I don't care about the ordering.

jml



From adelagon at gmail.com  Tue Feb 24 00:24:25 2009
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 24 Feb 2009 15:24:25 +0800
Subject: [Twisted-Python] Twisted developers: please donate your time!
In-Reply-To: <20090223204725.GC16541@vidar.dreamhost.com>
References: <1235412728.2733.2.camel@pintsize>
	<20090223204725.GC16541@vidar.dreamhost.com>
Message-ID: <7a01f6c00902232324u7fc55708ofc982415d0493cb6@mail.gmail.com>

Will spend one week on Yahoo Messenger (YMSG) support for twisted.words next
month.

---
Alvin

On Tue, Feb 24, 2009 at 4:47 AM, David Ripton <dripton at ripton.net> wrote:

> On 2009.02.23 13:12:08 -0500, Itamar Shtull-Trauring wrote:
> > As part of the TSF's fundraising efforts, we are trying to get upfront
> > donations of time you will spend developing Twisted. It will then get
> > matched by a donor, if we are successful in getting this grant. So if
> > you're planning on working on Twisted anyway this year, your work will
> > count twice as much!
> >
> > So, if you're interested, please reply, saying something like "I will
> > spend two weeks working on Gopher support over the next year."
>
> I will spend one week working on IPv6 support over the next year.
>
> --
> David Ripton    dripton at ripton.net
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090224/2c96deb1/attachment.html>

From micahel at gmail.com  Tue Feb 24 01:25:57 2009
From: micahel at gmail.com (Michael Hudson)
Date: Tue, 24 Feb 2009 21:25:57 +1300
Subject: [Twisted-Python] Twisted developers: please donate your time!
In-Reply-To: <1235412728.2733.2.camel@pintsize>
References: <1235412728.2733.2.camel@pintsize>
Message-ID: <aa0dfd860902240025h464a286ap7ddbbd92937d0381@mail.gmail.com>

2009/2/24 Itamar Shtull-Trauring <itamar at itamarst.org>:
> As part of the TSF's fundraising efforts, we are trying to get upfront
> donations of time you will spend developing Twisted. It will then get
> matched by a donor, if we are successful in getting this grant. So if
> you're planning on working on Twisted anyway this year, your work will
> count twice as much!
>
> So, if you're interested, please reply, saying something like "I will
> spend two weeks working on Gopher support over the next year."

I don't entirely understand, but I will commit to spending the
equivalent of two working weeks as a general review monkey over the
next year.  Is that the sort of thing you wanted to hear?

Cheers,
mwh



From ntoper at gmail.com  Tue Feb 24 02:23:49 2009
From: ntoper at gmail.com (Nicolas Toper)
Date: Tue, 24 Feb 2009 10:23:49 +0100
Subject: [Twisted-Python] Twisted developers: please donate your time!
In-Reply-To: <aa0dfd860902240025h464a286ap7ddbbd92937d0381@mail.gmail.com>
References: <1235412728.2733.2.camel@pintsize>
	<aa0dfd860902240025h464a286ap7ddbbd92937d0381@mail.gmail.com>
Message-ID: <fcbb46050902240123q3053a8b8w6ca02bb6ab9d864f@mail.gmail.com>

Hi,
I will spend two weeks improving SMTP libraries.

Best,
Nicolas


On Tue, Feb 24, 2009 at 9:25 AM, Michael Hudson <micahel at gmail.com> wrote:

> 2009/2/24 Itamar Shtull-Trauring <itamar at itamarst.org>:
> > As part of the TSF's fundraising efforts, we are trying to get upfront
> > donations of time you will spend developing Twisted. It will then get
> > matched by a donor, if we are successful in getting this grant. So if
> > you're planning on working on Twisted anyway this year, your work will
> > count twice as much!
> >
> > So, if you're interested, please reply, saying something like "I will
> > spend two weeks working on Gopher support over the next year."
>
> I don't entirely understand, but I will commit to spending the
> equivalent of two working weeks as a general review monkey over the
> next year.  Is that the sort of thing you wanted to hear?
>
> Cheers,
> mwh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090224/c634fb9b/attachment.html>

From gabriel.rossetti at arimaz.com  Tue Feb 24 03:49:13 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Feb 2009 11:49:13 +0100
Subject: [Twisted-Python] Twisted plugins and py2exe
Message-ID: <49A3D0A9.3040209@arimaz.com>

Hello everyone!

I used py2exe on a Twisted app of mine and I get this exception :


Traceback (most recent call last):
  File "proj\service.pyc", line 1308, in connectionMade

  File "proj\service.pyc", line 1640, in _register

  File "proj\service.pyc", line 504, in loadPlugins

  File "twisted\plugin.pyc", line 200, in getPlugins

--- <exception caught here> ---
  File "twisted\plugin.pyc", line 179, in getCache

exceptions.AttributeError: ZipPath instance has no attribute 'setContent'

Has anyone ever had this problem while using plugins with Twisted and 
py2exe?

Thank you,
Gabriel



From exarkun at divmod.com  Tue Feb 24 08:15:18 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 24 Feb 2009 10:15:18 -0500
Subject: [Twisted-Python] Twisted plugins and py2exe
In-Reply-To: <49A3D0A9.3040209@arimaz.com>
Message-ID: <20090224151518.12853.1231452302.divmod.quotient.13481@henry.divmod.com>

On Tue, 24 Feb 2009 11:49:13 +0100, Gabriel Rossetti <gabriel.rossetti at arimaz.com> wrote:
>Hello everyone!
>
>I used py2exe on a Twisted app of mine and I get this exception :
>
>
>Traceback (most recent call last):
>  File "proj\service.pyc", line 1308, in connectionMade
>
>  File "proj\service.pyc", line 1640, in _register
>
>  File "proj\service.pyc", line 504, in loadPlugins
>
>  File "twisted\plugin.pyc", line 200, in getPlugins
>
>--- <exception caught here> ---
>  File "twisted\plugin.pyc", line 179, in getCache
>
>exceptions.AttributeError: ZipPath instance has no attribute 'setContent'
>
>Has anyone ever had this problem while using plugins with Twisted and 
>py2exe?

No, but from the traceback, it seems fairly clear that the plugin system
is trying to write a plugin cache file into your py2exe-created zip file
of Python source.  This won't work, of course.  You could try making sure
the cache file is up to date and including it in the zip file, but I have
no idea if this will actually produce sensible behavior.  The other
possibility is to actually teach the plugin system about zip files (ie,
contribute a patch to Twisted to support this case).

Jean-Paul



From gabriel.rossetti at arimaz.com  Tue Feb 24 09:35:14 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Feb 2009 17:35:14 +0100
Subject: [Twisted-Python] Twisted plugins and py2exe
In-Reply-To: <20090224151518.12853.1231452302.divmod.quotient.13481@henry.divmod.com>
References: <20090224151518.12853.1231452302.divmod.quotient.13481@henry.divmod.com>
Message-ID: <49A421C2.4010600@arimaz.com>

Jean-Paul Calderone wrote:
> On Tue, 24 Feb 2009 11:49:13 +0100, Gabriel Rossetti 
> <gabriel.rossetti at arimaz.com> wrote:
>> Hello everyone!
>>
>> I used py2exe on a Twisted app of mine and I get this exception :
>>
>>
>> Traceback (most recent call last):
>>  File "proj\service.pyc", line 1308, in connectionMade
>>
>>  File "proj\service.pyc", line 1640, in _register
>>
>>  File "proj\service.pyc", line 504, in loadPlugins
>>
>>  File "twisted\plugin.pyc", line 200, in getPlugins
>>
>> --- <exception caught here> ---
>>  File "twisted\plugin.pyc", line 179, in getCache
>>
>> exceptions.AttributeError: ZipPath instance has no attribute 
>> 'setContent'
>>
>> Has anyone ever had this problem while using plugins with Twisted and 
>> py2exe?
>
> No, but from the traceback, it seems fairly clear that the plugin system
> is trying to write a plugin cache file into your py2exe-created zip file
> of Python source.  This won't work, of course.  You could try making sure
> the cache file is up to date and including it in the zip file, but I have
> no idea if this will actually produce sensible behavior.  The other
> possibility is to actually teach the plugin system about zip files (ie,
> contribute a patch to Twisted to support this case).
>
> Jean-Paul
>
Ok, I could do this, teach it abot zip files and have it update it's 
cache in the zip file, but in certain cases, like mine actually, if you 
tell py2exe to include the zip file in the exec, then it won't work. How 
about adding the possibility to specify where the cache is to be written?

Gabriel



From exarkun at divmod.com  Tue Feb 24 09:55:27 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 24 Feb 2009 11:55:27 -0500
Subject: [Twisted-Python] Twisted plugins and py2exe
In-Reply-To: <49A421C2.4010600@arimaz.com>
Message-ID: <20090224165527.12853.1836778921.divmod.quotient.13499@henry.divmod.com>

 Tue, 24 Feb 2009 17:35:14 +0100, Gabriel Rossetti <gabriel.rossetti at arimaz.com> wrote:
>Jean-Paul Calderone wrote:
>>On Tue, 24 Feb 2009 11:49:13 +0100, Gabriel Rossetti 
>><gabriel.rossetti at arimaz.com> wrote:
>>>Hello everyone!
>>>
>>>I used py2exe on a Twisted app of mine and I get this exception :
>>>
>>>
>>>Traceback (most recent call last):
>>>  File "proj\service.pyc", line 1308, in connectionMade
>>>
>>>  File "proj\service.pyc", line 1640, in _register
>>>
>>>  File "proj\service.pyc", line 504, in loadPlugins
>>>
>>>  File "twisted\plugin.pyc", line 200, in getPlugins
>>>
>>>--- <exception caught here> ---
>>>  File "twisted\plugin.pyc", line 179, in getCache
>>>
>>>exceptions.AttributeError: ZipPath instance has no attribute 'setContent'
>>>
>>>Has anyone ever had this problem while using plugins with Twisted and 
>>>py2exe?
>>
>>No, but from the traceback, it seems fairly clear that the plugin system
>>is trying to write a plugin cache file into your py2exe-created zip file
>>of Python source.  This won't work, of course.  You could try making sure
>>the cache file is up to date and including it in the zip file, but I have
>>no idea if this will actually produce sensible behavior.  The other
>>possibility is to actually teach the plugin system about zip files (ie,
>>contribute a patch to Twisted to support this case).
>>
>>Jean-Paul
>Ok, I could do this, teach it abot zip files and have it update it's cache 
>in the zip file, but in certain cases, like mine actually, if you tell 
>py2exe to include the zip file in the exec, then it won't work. How about 
>adding the possibility to specify where the cache is to be written?

Updating the cache in the zip file probably isn't the right thing to do.
Just skipping cache generation would probably make more sense.  It should
be easier to implement, anyway.

As far as I can tell, it doesn't make sense to allow the cache location to
be specified as configuration, though.  Skipping cache file generation should
be fine.

Jean-Paul



From glyph at divmod.com  Tue Feb 24 12:55:05 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 24 Feb 2009 19:55:05 -0000
Subject: [Twisted-Python] Twisted plugins and py2exe
In-Reply-To: <20090224165527.12853.1836778921.divmod.quotient.13499@henry.divmod.com>
References: <49A421C2.4010600@arimaz.com>
	<20090224165527.12853.1836778921.divmod.quotient.13499@henry.divmod.com>
Message-ID: <20090224195505.12555.1349207332.divmod.xquotient.5060@weber.divmod.com>


On 04:55 pm, exarkun at divmod.com wrote:
>Tue, 24 Feb 2009 17:35:14 +0100, Gabriel Rossetti 
><gabriel.rossetti at arimaz.com> wrote:
>>Jean-Paul Calderone wrote:
>>>On Tue, 24 Feb 2009 11:49:13 +0100, Gabriel Rossetti 
>>><gabriel.rossetti at arimaz.com> wrote:

>>>>Has anyone ever had this problem while using plugins with Twisted 
>>>>and py2exe?

>>>No, but from the traceback, it seems fairly clear that the plugin 
>>>system
>>>is trying to write a plugin cache file into your py2exe-created zip 
>>>file
>>>of Python source.

>>Ok, I could do this, teach it abot zip files and have it update it's 
>>cache in the zip file, but in certain cases, like mine actually, if 
>>you tell py2exe to include the zip file in the exec, then it won't 
>>work. How about adding the possibility to specify where the cache is 
>>to be written?

This is almost certainly the wrong solution to your problem, but if you 
disagree with this assessment please feel free to update this ticket:

    http://twistedmatrix.com/trac/ticket/3348

Several people have requested this feature and nobody has really made a 
good case for why it should be implemented.  (I don't think it should 
be, I just think we should record all the reasons why not on that ticket 
:)).
>Updating the cache in the zip file probably isn't the right thing to 
>do.
>Just skipping cache generation would probably make more sense.  It 
>should
>be easier to implement, anyway.

Skipping the cache generation is like skipping bytecode compilation. 
It's not a catastrophic error, everything should still work, but it will 
result in more unnecessary work being done at runtime.

IMHO the right solution in this particular case would be to get py2exe 
(or some part of the setup process in py2exe, which I believe is 
implemented using distutils) to generate a cache file as part of the 
built zip file.  Presumably .pyc files are also created and included in 
the zip file.  The appropriate procedure for forcibly generating the 
cache is described here:

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3

A cache generated in this manner will be suitable for packaging into a 
zip file.

Another part of the solution would be to implement setContent on 
ZipPath.  However, there are still likely to be erroneous deployment 
scenarios where the ZipPath is not available for writing, just as an 
installation path is frequently not available for writing now.  So an 
initial implementation of setContent on ZipPath could just raise the 
same exception that an unwritable FilePath would, for consistency in 
error handling.

For the issue of quieting the mostly-harmless error message now produced 
by a failure to write the cache file, see here:

    http://twistedmatrix.com/trac/ticket/2409



From terry at jon.es  Thu Feb 26 05:25:46 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 26 Feb 2009 13:25:46 +0100
Subject: [Twisted-Python] What to do when a service fails to start, also, 
	deferred and startService
In-Reply-To: Your message at 04:41:12 on Sunday, 22 February 2009
References: <18734.54780.97710.644648@jon.es>
	<20081128140217.12555.360367893.divmod.xquotient.628@weber.divmod.com>
	<18736.4217.759501.381840@jon.es>
	<20081221082032.12555.570369233.divmod.xquotient.2379@weber.divmod.com>
	<18848.51544.210828.667334@jon.es>
Message-ID: <18854.35402.437237.503676@jon.es>

Following up on myself....  Here's an updated/working version of the
MultiService subclass I proposed the other day:

    class GuardedMultiService(service.MultiService):

        def __init__(self, guardService):
            service.MultiService.__init__(self)
            self.guardService = guardService
            self.startDeferred = defer.Deferred()
            self.stopDeferred = defer.Deferred()

        def startService(self):
            def startOthers(_):
                log.msg("Guard service startup succeeded. Starting other services.")
                service.MultiService.startService(self)
            def initFailed(f):
                log.msg("Guard service startup failed.")
                return f
            d = defer.maybeDeferred(self.guardService.startService)
            d.addCallbacks(startOthers, initFailed)
            d.chainDeferred(self.startDeferred)

        def stopService(self):
            d = service.MultiService.stopService(self)
            d.addCallback(lambda _: self.guardService.stopService())
            d.chainDeferred(self.stopDeferred)
            return self.stopDeferred


This is pretty much as I described earlier.

I've added self.startDeferred and self.stopDeferred deferreds.  These give
the programmer using this class (who, I imagine, is probably doing so in
the context of writing a Twistd plugin - i.e., writing the makeService
method in a class implementing IServiceMaker and IPlugin) the chance to add
callbacks to the chain of events that happen when the service is started
and stopped. Their use is optional.

It's easy to see how to make guardService default to None, which would make
it possible to merge the above into MultiService itself.

If there's any interest at all in this, I'm happy to open a ticket, run
tests, submit a patch, etc.

Terry



From hasham_james_007 at yahoo.com  Thu Feb 26 12:46:21 2009
From: hasham_james_007 at yahoo.com (khawar hasham)
Date: Thu, 26 Feb 2009 11:46:21 -0800 (PST)
Subject: [Twisted-Python] server client in one code
Message-ID: <304487.43230.qm@web53505.mail.re2.yahoo.com>

I am trying to use twisted to build an application that can act as server as well as client at the same time.

I need this application to send and receive messages back and forth between two of its instances.



I used the reactor.run() to start listen and connectTCP. My problem is
that I need to run server or client module from other program. Moreover, I cannot put the
calling module on hold because reactor.run() stops every other
execution of your code. To make it work, I started the reactor.run in a
separate thread with installSignalHanlder=0.



I have got the success to transfer messages between two instances if
one is acting as server and other as client. However, I could not send
messages if both instances started as servers and then start sending
the messages to each other. I tried to google around but could not find
the solution. Can you help me in this?



I can not start server as independent module. I have to start it from
other python script that will use my module to act as server as well as
client to send and receive the messages.


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090226/7ab4159e/attachment.html>

From mkeller at cs.au.dk  Fri Feb 27 07:26:43 2009
From: mkeller at cs.au.dk (Marcel Keller)
Date: Fri, 27 Feb 2009 15:26:43 +0100
Subject: [Twisted-Python] Reentrant reactor iteration
Message-ID: <49A7F823.5010704@cs.au.dk>

Hi,

I am working on the VIFF project (viff.dk) which uses Twisted. I found 
out that our code is sometimes inefficient because we are generating 
many deferreds (maybe about 10000) in a callback. While doing that, no 
network communication is performed. Therefore, I investigated the 
possibility of adding a function to the reactor which is called every 
iteration and from which the iteration could be called safely. Then, we 
could generate all deferreds in that function and activate the reactor 
from to time. See the attached patch for details.

Some of our code runs twice as fast when using that hack. Are there any 
chances something similar might be included in Twisted? Or does anyone 
have a better solution for the described problem?

Furthermore, I have a question, which is probably related. The 
documentation of IReactorCore says about the iterate() function:

"The reactor must have been started (via the run() method) prior to any 
invocations of this method. It must also be stopped manually after the 
last call to this method (via the stop() method). This method is not 
re-entrant: you must not call it recursively; in particular, you must 
not call it while the reactor is running."

This looks to me as if the reactor needs to be running and not running 
at the same time so that iterate() can be called. Is there an error in 
my reasoning?

Best regards,
Marcel Keller


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: twisted-hack.patch
URL: </pipermail/twisted-python/attachments/20090227/4f7c94aa/attachment.ksh>

From exarkun at divmod.com  Fri Feb 27 09:27:23 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 27 Feb 2009 11:27:23 -0500
Subject: [Twisted-Python] Reentrant reactor iteration
In-Reply-To: <49A7F823.5010704@cs.au.dk>
Message-ID: <20090227162723.12853.1884927660.divmod.quotient.14670@henry.divmod.com>

On Fri, 27 Feb 2009 15:26:43 +0100, Marcel Keller <mkeller at cs.au.dk> wrote:
>Hi,
>
>I am working on the VIFF project (viff.dk) which uses Twisted. I found out 
>that our code is sometimes inefficient because we are generating many 
>deferreds (maybe about 10000) in a callback. While doing that, no network 
>communication is performed. Therefore, I investigated the possibility of 
>adding a function to the reactor which is called every iteration and from 
>which the iteration could be called safely. Then, we could generate all 
>deferreds in that function and activate the reactor from to time. See the 
>attached patch for details.

So you're doing a ton of work all at once now and you want to split up that
ton of work into smaller pieces and do it a little at a time?

If that's the case, then you don't need to modify the reactor, you just
need to split up the work your code is going.  There are a lot of techniques
for doing this.  coiterate and inlineCallbacks are two solutions which are
closest to "cookie cutter" (ie, you have the least flexibility in deciding
how to use them).

>Some of our code runs twice as fast when using that hack. Are there any 
>chances something similar might be included in Twisted? Or does anyone have 
>a better solution for the described problem?

Give coiterate or inlineCallbacks a try.  If you need help applying either
of these to your problem, please ask. :)  I can't make any specific
suggestions now because I can only guess at how you're using the reactor
modification you attached.

You have a very long, steep, uphill battle to convince me that adding support
for re-entrant iteration is a good idea.

>Furthermore, I have a question, which is probably related. The documentation 
>of IReactorCore says about the iterate() function:
>
>"The reactor must have been started (via the run() method) prior to any 
>invocations of this method. It must also be stopped manually after the last 
>call to this method (via the stop() method). This method is not re-entrant: 
>you must not call it recursively; in particular, you must not call it while 
>the reactor is running."
>
>This looks to me as if the reactor needs to be running and not running at 
>the same time so that iterate() can be called. Is there an error in my 
>reasoning?

It's very subtle and intentionally written to sound impossible to use (maybe
that is a stupid idea, but that was my intent when I wrote it ;).  What
you're missing is that there is a way to make reactor.run() return without
stopping the reactor.

Jean-Paul



From conradwinchester at me.com  Sat Feb 28 06:21:06 2009
From: conradwinchester at me.com (Conrad Winchester)
Date: Sat, 28 Feb 2009 13:21:06 +0000
Subject: [Twisted-Python] Why do I get an AlreadyCalledError?
Message-ID: <B032864B-BD17-4DAD-ACB7-B32B9DA34C81@me.com>

Hi all,

I  am writing a restful twisted (8.1.0) server and am trying to return  
useful error statuses from requests. The problem is that even  
following the documentation extremely carefully I am getting an  
AlreadyCalled Error every time I generate a failure. Here is my main  
class (leaving out code that I feel is not relevant to the question:

from xml.dom import minidom
from twisted.web import server, resource

from FWGException import FWGException

class DeferredPostHandler(resource.Resource,minidom.Document):

     NOT_IMPLEMENTED = 501
     BAD_REQUEST = 400
	
     def writeError(self, failure, request, *args, **kw):
         failure.trap(FWGException)
         request.setResponseCode(self.errorCode)
         request.write("Error handling request: %s" %  
failure.getErrorMessage())
         request.finish()

     def writeResult(self, result, request, *args, **kw):
         self.writexml(request)
         request.finish()

     def render_GET(self, request):
         self.process=self.db.runInteraction(self.processForm,request)
         self.process.addCallbacks(self.writeResult, self.writeError,  
[request], {}, [request], {})
         return server.NOT_DONE_YET


I have a handler that extends this

from DeferredPostHandler import DeferredPostHandler
from twisted.web import http
from twisted.python.failure import Failure
from FWGException import FWGException

class CollectionAdminHandler(DeferredPostHandler):

     def __init__(self, task, db, config):
         DeferredPostHandler.__init__(self,db)
         self.config = config
         self.task = task
         self.errorCode = http.OK

     def processForm(self, cursor, request):

         if self.task == 'add':
             self.addCollection(cursor, request)

         elif self.task == 'delete':
             self.deleteCollection(cursor, request)

         else:
             self.errorCode = DeferredPostHandler.NOT_IMPLEMENTED
             fail = Failure(FWGException("Unsupported Task"))
             self.process.errback(fail)

     def addCollection(self, cursor, request):
         fail = None
         if self.isValidAddRequest(request):
             pass
         else:
             self.errorCode = DeferredPostHandler.BAD_REQUEST
             fail = Failure(FWGException("Missing Parameter"))

         if fail:
             self.process.errback(fail);

     def deleteCollection(self, cursor, request):
         print 'Delete Collection'

     def isValidAddRequest(self, request):
         return 'title' in request.args and 'category' in request.args  
and 'date' in request.args


Unfortunately whenever I call


self.process.errback(fail)

I get the following stack trace in my log


Traceback (most recent call last):
   File "startserver.py", line 23, in <module>
     reactor.run()
   File "/Library/Python/2.5/site-packages/Twisted-8.1.0-py2.5- 
macosx-10.5-i386.egg/twisted/internet/base.py", line 1048, in run
     self.mainLoop()
   File "/Library/Python/2.5/site-packages/Twisted-8.1.0-py2.5- 
macosx-10.5-i386.egg/twisted/internet/base.py", line 1057, in mainLoop
     self.runUntilCurrent()
--- <exception caught here> ---
   File "/Library/Python/2.5/site-packages/Twisted-8.1.0-py2.5- 
macosx-10.5-i386.egg/twisted/internet/base.py", line 677, in  
runUntilCurrent
     f(*a, **kw)
   File "/Library/Python/2.5/site-packages/Twisted-8.1.0-py2.5- 
macosx-10.5-i386.egg/twisted/internet/defer.py", line 243, in callback
     self._startRunCallbacks(result)
   File "/Library/Python/2.5/site-packages/Twisted-8.1.0-py2.5- 
macosx-10.5-i386.egg/twisted/internet/defer.py", line 298, in  
_startRunCallbacks
     raise AlreadyCalledError
twisted.internet.defer.AlreadyCalledError:


I can not understand why this is happening :-( Can anybody help?

BTW I am using POST instead of PUT because my client can't do PUT

Conrad Winchester



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090228/31fabaf3/attachment.html>

From exarkun at divmod.com  Sat Feb 28 07:16:30 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 28 Feb 2009 09:16:30 -0500
Subject: [Twisted-Python] Why do I get an AlreadyCalledError?
In-Reply-To: <B032864B-BD17-4DAD-ACB7-B32B9DA34C81@me.com>
Message-ID: <20090228141630.12853.1235986472.divmod.quotient.15283@henry.divmod.com>

On Sat, 28 Feb 2009 13:21:06 +0000, Conrad Winchester <conradwinchester at me.com> wrote:
>Hi all,
>
>I  am writing a restful twisted (8.1.0) server and am trying to return 
>useful error statuses from requests. The problem is that even  following the 
>documentation extremely carefully I am getting an  AlreadyCalled Error every 
>time I generate a failure. Here is my main  class (leaving out code that I 
>feel is not relevant to the question:
>
>from xml.dom import minidom
>from twisted.web import server, resource
>
>from FWGException import FWGException
>
>class DeferredPostHandler(resource.Resource,minidom.Document):
>
>     NOT_IMPLEMENTED = 501
>     BAD_REQUEST = 400
>
>     def writeError(self, failure, request, *args, **kw):
>         failure.trap(FWGException)
>         request.setResponseCode(self.errorCode)
>         request.write("Error handling request: %s" % 
>failure.getErrorMessage())
>         request.finish()
>
>     def writeResult(self, result, request, *args, **kw):
>         self.writexml(request)
>         request.finish()
>
>     def render_GET(self, request):
>         self.process=self.db.runInteraction(self.processForm,request)

I think that self.db is a ConnectionPool instance.  This means that here,
you're starting self.processForm in a thread.  I'm not sure if this is
the reason you're having difficulties, but it may be.  See below.

>         self.process.addCallbacks(self.writeResult, self.writeError, 
>[request], {}, [request], {})
>         return server.NOT_DONE_YET
>
>
>I have a handler that extends this
>
>from DeferredPostHandler import DeferredPostHandler
>from twisted.web import http
>from twisted.python.failure import Failure
>from FWGException import FWGException
>
>class CollectionAdminHandler(DeferredPostHandler):
>
>     def __init__(self, task, db, config):
>         DeferredPostHandler.__init__(self,db)
>         self.config = config
>         self.task = task
>         self.errorCode = http.OK
>
>     def processForm(self, cursor, request):
>
>         if self.task == 'add':
>             self.addCollection(cursor, request)
>
>         elif self.task == 'delete':
>             self.deleteCollection(cursor, request)
>
>         else:
>             self.errorCode = DeferredPostHandler.NOT_IMPLEMENTED
>             fail = Failure(FWGException("Unsupported Task"))
>             self.process.errback(fail)

Here you're creating a Failure and errbacking a Deferred in a thread, since
processForm is running in a thread.  This isn't allowed.  Twisted APIs are
generally not safe to be called in any thread except the reactor thread.

>
>     def addCollection(self, cursor, request):
>         fail = None
>         if self.isValidAddRequest(request):
>             pass
>         else:
>             self.errorCode = DeferredPostHandler.BAD_REQUEST
>             fail = Failure(FWGException("Missing Parameter"))
>
>         if fail:
>             self.process.errback(fail);

Likewise here.

>
>     def deleteCollection(self, cursor, request):
>         print 'Delete Collection'
>
>     def isValidAddRequest(self, request):
>         return 'title' in request.args and 'category' in request.args  and 
>'date' in request.args
>
>
>Unfortunately whenever I call
>
>
>self.process.errback(fail)
>

To remove the incorrect calls to Twisted APIs from a thread, you should
probably just raise an exception where you're currently errbacking that
Deferred.  In render_GET, or in writeError, you can handle the failure
which will result from that.

Ah, and now I see your problem.  self.process is the Deferred returned
by runInteraction.  You're not supposed to errback that Deferred (or
callback it either).  A pretty good rule of thumb is that if you create
a Deferred, then you get to fire it.  In this case, runInteraction is
creating it, so runInteraction gets to fire it.  runInteraction will
fire it with the result of processForm, so that's why you get the error.
You're firing that Deferred and runInteraction is firing it.

Jean-Paul



From conradwinchester at me.com  Sat Feb 28 07:57:33 2009
From: conradwinchester at me.com (Conrad Winchester)
Date: Sat, 28 Feb 2009 14:57:33 +0000
Subject: [Twisted-Python] Why do I get an AlreadyCalledError?
In-Reply-To: <20090228141630.12853.1235986472.divmod.quotient.15283@henry.divmod.com>
References: <20090228141630.12853.1235986472.divmod.quotient.15283@henry.divmod.com>
Message-ID: <EAED0465-9458-44D2-8AC1-B6F4EBFD57E8@me.com>

Thanks Jean-Paul,

Useful information, but then I am confused -

If I am running in a deferred how do I cause the errback to be called  
instead of the normal (non-error) callback?  How do I pass a failure  
object to the error handler? How should I do the  
self.process.errback(fail)?

All of this has to happen inside of the deferred doesn't it, because  
it is the deferred that is doing the work and where the errors will  
occur?

Conrad

On 28 Feb 2009, at 14:16, Jean-Paul Calderone wrote:

> On Sat, 28 Feb 2009 13:21:06 +0000, Conrad Winchester <conradwinchester at me.com 
> > wrote:
>> Hi all,
>>
>> I  am writing a restful twisted (8.1.0) server and am trying to  
>> return useful error statuses from requests. The problem is that  
>> even  following the documentation extremely carefully I am getting  
>> an  AlreadyCalled Error every time I generate a failure. Here is my  
>> main  class (leaving out code that I feel is not relevant to the  
>> question:
>>
>> from xml.dom import minidom
>> from twisted.web import server, resource
>>
>> from FWGException import FWGException
>>
>> class DeferredPostHandler(resource.Resource,minidom.Document):
>>
>>    NOT_IMPLEMENTED = 501
>>    BAD_REQUEST = 400
>>
>>    def writeError(self, failure, request, *args, **kw):
>>        failure.trap(FWGException)
>>        request.setResponseCode(self.errorCode)
>>        request.write("Error handling request: %s" %  
>> failure.getErrorMessage())
>>        request.finish()
>>
>>    def writeResult(self, result, request, *args, **kw):
>>        self.writexml(request)
>>        request.finish()
>>
>>    def render_GET(self, request):
>>        self.process=self.db.runInteraction(self.processForm,request)
>
> I think that self.db is a ConnectionPool instance.  This means that  
> here,
> you're starting self.processForm in a thread.  I'm not sure if this is
> the reason you're having difficulties, but it may be.  See below.
>
>>        self.process.addCallbacks(self.writeResult, self.writeError,  
>> [request], {}, [request], {})
>>        return server.NOT_DONE_YET
>>
>>
>> I have a handler that extends this
>>
>> from DeferredPostHandler import DeferredPostHandler
>> from twisted.web import http
>> from twisted.python.failure import Failure
>> from FWGException import FWGException
>>
>> class CollectionAdminHandler(DeferredPostHandler):
>>
>>    def __init__(self, task, db, config):
>>        DeferredPostHandler.__init__(self,db)
>>        self.config = config
>>        self.task = task
>>        self.errorCode = http.OK
>>
>>    def processForm(self, cursor, request):
>>
>>        if self.task == 'add':
>>            self.addCollection(cursor, request)
>>
>>        elif self.task == 'delete':
>>            self.deleteCollection(cursor, request)
>>
>>        else:
>>            self.errorCode = DeferredPostHandler.NOT_IMPLEMENTED
>>            fail = Failure(FWGException("Unsupported Task"))
>>            self.process.errback(fail)
>
> Here you're creating a Failure and errbacking a Deferred in a  
> thread, since
> processForm is running in a thread.  This isn't allowed.  Twisted  
> APIs are
> generally not safe to be called in any thread except the reactor  
> thread.
>
>>
>>    def addCollection(self, cursor, request):
>>        fail = None
>>        if self.isValidAddRequest(request):
>>            pass
>>        else:
>>            self.errorCode = DeferredPostHandler.BAD_REQUEST
>>            fail = Failure(FWGException("Missing Parameter"))
>>
>>        if fail:
>>            self.process.errback(fail);
>
> Likewise here.
>
>>
>>    def deleteCollection(self, cursor, request):
>>        print 'Delete Collection'
>>
>>    def isValidAddRequest(self, request):
>>        return 'title' in request.args and 'category' in  
>> request.args  and 'date' in request.args
>>
>>
>> Unfortunately whenever I call
>>
>>
>> self.process.errback(fail)
>>
>
> To remove the incorrect calls to Twisted APIs from a thread, you  
> should
> probably just raise an exception where you're currently errbacking  
> that
> Deferred.  In render_GET, or in writeError, you can handle the failure
> which will result from that.
>
> Ah, and now I see your problem.  self.process is the Deferred returned
> by runInteraction.  You're not supposed to errback that Deferred (or
> callback it either).  A pretty good rule of thumb is that if you  
> create
> a Deferred, then you get to fire it.  In this case, runInteraction is
> creating it, so runInteraction gets to fire it.  runInteraction will
> fire it with the result of processForm, so that's why you get the  
> error.
> You're firing that Deferred and runInteraction is firing it.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Sat Feb 28 20:06:22 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 28 Feb 2009 22:06:22 -0500
Subject: [Twisted-Python] Why do I get an AlreadyCalledError?
In-Reply-To: <EAED0465-9458-44D2-8AC1-B6F4EBFD57E8@me.com>
Message-ID: <20090301030622.12853.1384554830.divmod.quotient.15613@henry.divmod.com>

On Sat, 28 Feb 2009 14:57:33 +0000, Conrad Winchester <conradwinchester at me.com> wrote:
>Thanks Jean-Paul,
>
>Useful information, but then I am confused -
>
>If I am running in a deferred how do I cause the errback to be called 
>instead of the normal (non-error) callback?  How do I pass a failure  object 
>to the error handler? How should I do the  self.process.errback(fail)?
>
>All of this has to happen inside of the deferred doesn't it, because  it is 
>the deferred that is doing the work and where the errors will  occur?

If a Deferred is a container, it is a container for callbacks and results,
not for executing code.  So I wouldn't think about it in terms of "happening
inside of a Deferred".  Instead, consider this definition of a function like
runInteraction (but which doesn't involve databases or threads):

    def execute(callable, *args):
        d = Deferred()
        try:
            result = callable(*args)
        except:
             d.errback()
        else:
             d.callback(result)
        return d

In its handling of Deferreds and results, this is largely what runInteraction
does.  Notice how any exception raised by `callable´ will be given to the
Deferred to be passed to any registered errbacks (in an "except" suite,
Deferred.errback with no arguments uses sys.exc_info() to find the current
exception).  This is a property of the implementation of `execute´, though,
not a property of Deferred.  (However, the code which executes the callbacks
or errbacks attached to a Deferred is similar to this.)

So in your case, if you just raise an exception, the errbacks you add to
the Deferred returned by runInteraction will have it passed to them as a
failure.  (Sorry for the somewhat disjointed nature of this response, I
started writing this email hours ago and I just noticed I hadn't finished
it, but wanted to send it before I go to bed).

Jean-Paul



From exarkun at twistedmatrix.com  Sat Feb 28 22:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Mar 2009 05:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1235883911.4.219651606@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090301/b00be57f/attachment.html>

