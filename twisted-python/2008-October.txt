From mforbes at physics.ubc.ca  Wed Oct  1 14:00:29 2008
From: mforbes at physics.ubc.ca (Michael McNeil Forbes)
Date: Wed, 1 Oct 2008 12:00:29 -0600
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
Message-ID: <DA02E65B-BB9C-46F8-A31F-83EAEAA915BF@physics.ubc.ca>

Several places in the documentation refer to the method writeSomeData 
() returning a negative integer if the connection is lost.  (In  
particular /api/ 
twisted.internet.abstract.FileDescriptor.html#writeSomeData.)

However, twisted.internet.main.CONNECTION_LOST is often returned  
which is not an integer.

The documentation and code should be brought into sync unless there  
is a more up-to-date reference that I am missing.

Thanks,
Michael.



From exarkun at divmod.com  Wed Oct  1 14:04:12 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 1 Oct 2008 14:04:12 -0400
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <DA02E65B-BB9C-46F8-A31F-83EAEAA915BF@physics.ubc.ca>
Message-ID: <20081001180412.29191.1979321832.divmod.quotient.32732@ohm>

On Wed, 1 Oct 2008 12:00:29 -0600, Michael McNeil Forbes <mforbes at physics.ubc.ca> wrote:
>Several places in the documentation refer to the method writeSomeData () 
>returning a negative integer if the connection is lost.  (In  particular 
>/api/ twisted.internet.abstract.FileDescriptor.html#writeSomeData.)
>
>However, twisted.internet.main.CONNECTION_LOST is often returned  which is 
>not an integer.
>
>The documentation and code should be brought into sync unless there  is a 
>more up-to-date reference that I am missing.

Hardly anyone actually needs `writeSomeData`.  It's mostly an implementation
detail of a certain group of reactors.

However, if you'd like, please feel free to open a ticket in the issue
tracker and attach a documentation patch.  Suggestions or patches on the
mailing list will typically be forgotten.

Jean-Paul



From glyph at divmod.com  Wed Oct  1 14:11:36 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 01 Oct 2008 18:11:36 -0000
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <DA02E65B-BB9C-46F8-A31F-83EAEAA915BF@physics.ubc.ca>
References: <DA02E65B-BB9C-46F8-A31F-83EAEAA915BF@physics.ubc.ca>
Message-ID: <20081001181136.31635.1329316808.divmod.xquotient.843@weber.divmod.com>


On 06:00 pm, mforbes at physics.ubc.ca wrote:
>The documentation and code should be brought into sync unless there  is 
>a more up-to-date reference that I am missing.

Hi Michael,

Do you think you can file a ticket in our tracker (perhaps attaching a 
patch?) at <http://twistedmatrix.com/> for this issue?  Issues reported 
on the mailing list are likely to get lost over time.



From dialtone at gmail.com  Wed Oct  1 17:07:59 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 1 Oct 2008 14:07:59 -0700
Subject: [Twisted-Python] Ampoule - 0.0.3
Message-ID: <7EFD8068-81D4-4F26-A95D-8DB7A7E93538@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Today I release a new minor release for ampoule, my
Twisted Matrix process pool.

What's new:

Ampoule 0.0.3 (2008-10-01)
==========================

Features
- --------
  - Added a Twisted Matrix plugin to run a process pool service that
    can be used over the network using an AMP client.

  - Added ability to change the reactor used to run the children

Changes
- -------
  - If you wrote your own bootstrap code for the pool you should change
    the way it works because now it takes 2 arguments, sys.argv[1] is
    the reactor short name while sys.argv[2] is still the AMPChild path.
    If you don't use startAMPProcess you probably have nothing to worry
    about.

Fixes
- -----
  - Now the process pool doesn't raise an error when you use a command
    that doesn't require an answer.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjj5q8ACgkQ9Llz28widGW8IgCg1tFrlzIEolmIgP223FvGU+Ha
nUwAn13pUxZpQDZr+WTcfcQuB0PS/Msg
=2jex
-----END PGP SIGNATURE-----



From dialtone at gmail.com  Wed Oct  1 17:13:55 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 1 Oct 2008 14:13:55 -0700
Subject: [Twisted-Python] Re: Ampoule - 0.0.3
In-Reply-To: <7EFD8068-81D4-4F26-A95D-8DB7A7E93538@gmail.com>
References: <7EFD8068-81D4-4F26-A95D-8DB7A7E93538@gmail.com>
Message-ID: <D5934D57-AEDE-402B-BEC1-08FABD471DCA@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Oct 1, 2008, at 2:07 PM, Valentino Volonghi wrote:

Of course I was totally forgetting URLs:

http://pypi.python.org/pypi/ampoule
https://launchpad.net/ampoule/ampoule

Have fun!

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjj6BMACgkQ9Llz28widGW0xACeMi0nelCaF8G8FwHbzT/Kh154
yloAoI8AFFu83gm8tDOYErsNuWyj5EN5
=6awn
-----END PGP SIGNATURE-----



From mforbes at physics.ubc.ca  Wed Oct  1 17:24:05 2008
From: mforbes at physics.ubc.ca (Michael McNeil Forbes)
Date: Wed, 1 Oct 2008 15:24:05 -0600
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <20081001180412.29191.1979321832.divmod.quotient.32732@ohm>
References: <20081001180412.29191.1979321832.divmod.quotient.32732@ohm>
Message-ID: <22A5C458-9651-4295-85D6-B57404BFBEB2@physics.ubc.ca>

On Oct 1, 2008, at 12:04 PM, Jean-Paul Calderone wrote:

> On Wed, 1 Oct 2008 12:00:29 -0600, Michael McNeil Forbes  
> <mforbes at physics.ubc.ca> wrote:
>> Several places in the documentation refer to the method  
>> writeSomeData () returning a negative integer if the connection is  
>> lost.  (In  particular /api/  
>> twisted.internet.abstract.FileDescriptor.html#writeSomeData.)
>>
>> However, twisted.internet.main.CONNECTION_LOST is often returned   
>> which is not an integer.
...
> Hardly anyone actually needs `writeSomeData`.  It's mostly an  
> implementation
> detail of a certain group of reactors.

I have opened a ticket.  A question then that is sure to expose my  
ignorance of twisted...

Why does writeSomeData not simply raise CONNECTION_LOST as an  
exception?  Checking return values is quite un-pythonic.  Is there a  
deep reason for this?

Michael.

P.S. I came across this because I was trying to use twisted running  
in a thread to write data resulting from a long computation that I  
have not yet turned into a producer.  The more conventional "write"  
method was failing if the socket backed up, and provided no simple  
way of determining if data was being dropped.  My solution was to  
used writeSomeData, and then have the computation decide to throw out  
some of the data if it is being produced too rapidly, but I need to  
know how much has been sent so I can decide what to throw away...




From glyph at divmod.com  Wed Oct  1 17:40:59 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 01 Oct 2008 21:40:59 -0000
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <22A5C458-9651-4295-85D6-B57404BFBEB2@physics.ubc.ca>
References: <20081001180412.29191.1979321832.divmod.quotient.32732@ohm>
	<22A5C458-9651-4295-85D6-B57404BFBEB2@physics.ubc.ca>
Message-ID: <20081001214059.31635.762369639.divmod.xquotient.852@weber.divmod.com>

On 09:24 pm, mforbes at physics.ubc.ca wrote:
>Why does writeSomeData not simply raise CONNECTION_LOST as an 
>exception? Checking return values is quite un-pythonic.  Is there a 
>deep reason for this?

writeSomeData is an internal API that nobody should really use, so it's 
not factored for convenience; it's also deep down in the guts of the 
reactor's innermost loop, so it pays a lot of attention to efficiency. 
Raising exceptions is really, really slow, at least by the standards of 
that kind of code.
>P.S. I came across this because I was trying to use twisted running  in 
>a thread to write data resulting from a long computation that I  have 
>not yet turned into a producer.  The more conventional "write"  method 
>was failing if the socket backed up, and provided no simple  way of 
>determining if data was being dropped.  My solution was to  used 
>writeSomeData, and then have the computation decide to throw out  some 
>of the data if it is being produced too rapidly, but I need to  know 
>how much has been sent so I can decide what to throw away...

You do know that Twisted APIs are not thread safe, right?  You can't 
call write() from a thread?



From exarkun at divmod.com  Wed Oct  1 17:44:33 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 1 Oct 2008 17:44:33 -0400
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <22A5C458-9651-4295-85D6-B57404BFBEB2@physics.ubc.ca>
Message-ID: <20081001214433.29191.2045241972.divmod.quotient.32801@ohm>

On Wed, 1 Oct 2008 15:24:05 -0600, Michael McNeil Forbes <mforbes at physics.ubc.ca> wrote:
>On Oct 1, 2008, at 12:04 PM, Jean-Paul Calderone wrote:
>>On Wed, 1 Oct 2008 12:00:29 -0600, Michael McNeil Forbes 
>><mforbes at physics.ubc.ca> wrote:
>>>Several places in the documentation refer to the method  writeSomeData () 
>>>returning a negative integer if the connection is  lost.  (In  particular 
>>>/api/  twisted.internet.abstract.FileDescriptor.html#writeSomeData.)
>>>
>>>However, twisted.internet.main.CONNECTION_LOST is often returned   which 
>>>is not an integer.
>...
>>Hardly anyone actually needs `writeSomeData`.  It's mostly an 
>>implementation
>>detail of a certain group of reactors.
>
>I have opened a ticket.  A question then that is sure to expose my 
>ignorance of twisted...

Thanks. :)

>Why does writeSomeData not simply raise CONNECTION_LOST as an  exception? 
>Checking return values is quite un-pythonic.  Is there a  deep reason for 
>this?

The reason is probably that whoever wrote it thought that raising an
exception would be enough slower than returning a special value that
it would be worth doing something slightly unusual.  Compared to
returning a value, raising an exception is expensive in CPython, but
I doubt there is any surviving benchmark which demonstrates that it
makes a difference here.

However, it's a very low-level API and since it isn't intended to be
used by application code, it doesn't seem like a very high priority
to make it less confusing.

>
>P.S. I came across this because I was trying to use twisted running  in a 
>thread to write data resulting from a long computation that I  have not yet 
>turned into a producer.  The more conventional "write"  method was failing 
>if the socket backed up, and provided no simple  way of determining if data 
>was being dropped.  My solution was to  used writeSomeData, and then have 
>the computation decide to throw out  some of the data if it is being 
>produced too rapidly, but I need to  know how much has been sent so I can 
>decide what to throw away...
>

This seems more interesting than the main point of your email. :) You
should probably just do the work to turn the computation into a producer.
This because:

  * writeSomeData is low level and crufty, as you've discovered
  * Not all reactors have this API, so your program will break based on
    the reactor selected to run it
  * producers give you all the same information

Since you mentioned threads, I'll also point out that Twisted APIs are not
safe to use from non-reactor threads without reactor.callFromThread.  If
you aren't using callFromThread, that would explain bad behavior from the
write method.

Jean-Paul



From mforbes at physics.ubc.ca  Wed Oct  1 18:37:47 2008
From: mforbes at physics.ubc.ca (Michael McNeil Forbes)
Date: Wed, 1 Oct 2008 16:37:47 -0600
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <20081001214433.29191.2045241972.divmod.quotient.32801@ohm>
References: <20081001214433.29191.2045241972.divmod.quotient.32801@ohm>
Message-ID: <6EE85919-4455-4B36-86F9-3E032CCFF0D8@physics.ubc.ca>

> On Oct 1, 2008, at 3:44 PM, Jean-Paul Calderone wrote:
...
>> Why does writeSomeData not simply raise CONNECTION_LOST as an   
>> exception? Checking return values is quite un-pythonic.  Is there  
>> a  deep reason for this?
>
> The reason is probably that whoever wrote it thought that raising an
> exception would be enough slower than returning a special value that
> it would be worth doing something slightly unusual.  Compared to
> returning a value, raising an exception is expensive in CPython, but
> I doubt there is any surviving benchmark which demonstrates that it
> makes a difference here.
>
> However, it's a very low-level API and since it isn't intended to be
> used by application code, it doesn't seem like a very high priority
> to make it less confusing.

By the way, is there any convention by which "high level" API  
routines are distinguished from "low level" routines?  It is really  
not that clear from the docs... (writeSomeData comes first in the  
listing etc.)

>> P.S. I came across this because I was trying to use twisted  
>> running  in a thread to write data resulting from a long  
>> computation that I  have not yet turned into a producer.  The more  
>> conventional "write"  method was failing if the socket backed up,  
>> and provided no simple  way of determining if data was being  
>> dropped.  My solution was to  used writeSomeData, and then have  
>> the computation decide to throw out  some of the data if it is  
>> being produced too rapidly, but I need to  know how much has been  
>> sent so I can decide what to throw away...
>>
>
> This seems more interesting than the main point of your email. :) You
> should probably just do the work to turn the computation into a  
> producer.
> This because:
>
>  * writeSomeData is low level and crufty, as you've discovered
>  * Not all reactors have this API, so your program will break based on
>    the reactor selected to run it
>  * producers give you all the same information
>
> Since you mentioned threads, I'll also point out that Twisted APIs  
> are not
> safe to use from non-reactor threads without  
> reactor.callFromThread.  If
> you aren't using callFromThread, that would explain bad behavior  
> from the
> write method.

I know that and am using callFromThread: The reason I am having bad  
behavior is because the socket is backing up.  Once I put in the  
logic to throw out data, it works fine... but the lack of reactor  
support concerns me somewhat.  I don't want the computation to stop,  
but think I could put an intermediate "push producer" that stops by  
discarding the data.

I am threading because the computation is the main task, and the  
network stuff is simply a window into the state of the computation.   
I want the computation to run continually, and it needs to do so in a  
blocking sort of way, periodically checking and pushing the partial  
results (like once every 30 minutes or so).

I want the calculation code to function on its own, with or without  
the twisted components and I don't see a simple way of doing this if  
twisted is in complete control without some type of threading.

My current design is to write my calculation as if twisted did not  
exist, and just push the current results onto a Queue periodically.   
Then I run twisted in a separate thread with clients that  
periodically check the queue, pop stuff off and dispatch it to any  
clients who happen to connect and want the data.

Is there a simpler way to do this all with twisted without using  
threads?  (The main goal is having an extremely minimal set of hooks  
for the people writing the computational code, and having the  
computational code run as fast as possible.)

Thanks for all of the suggestions and prompt comments!  (And for one  
very "twisted" library;-)
Michael.



From shweta3230 at gmail.com  Thu Oct  2 02:10:52 2008
From: shweta3230 at gmail.com (shweta mani)
Date: Thu, 2 Oct 2008 11:40:52 +0530
Subject: [Twisted-Python] Re: DOUBTS PLEASE SOLVE
In-Reply-To: <20080930160428.29191.46084701.divmod.quotient.32247@ohm>
References: <d13e157d0809300854n6799f385l87d851c096befc7d@mail.gmail.com>
	<20080930160428.29191.46084701.divmod.quotient.32247@ohm>
Message-ID: <d13e157d0810012310x45557d12o5682ce7ffafa7628@mail.gmail.com>

hi all i got the solution of listing all ls -l files in a listbox .
Next problem is to use recurrsively ls -l command again if a user selects a
directory.
Can we use multiple in Linux commands within a program withoy using pipe.
i am forwarding the code.
i need to use ls -l command dependng on whether he chooses a directory.

#!/usr/bin/env python
from twisted.conch.ssh import transport, userauth, connection, common, keys,
channel
from twisted.internet import defer, protocol, reactor
from twisted.python import log
import struct, sys, getpass, os
import re
import Tkinter
from Tkinter import *
from tkMessageBox import *
from os.path import exists
from Tkinter import *
import commands
#from DT import demo
import shutil
from os.path import exists
import ftplib
import sys
from ftplib import FTP
from tkMessageBox import *
from tkFileDialog import asksaveasfilename
import string
from os import popen
from re import split
import Tkinter
import os
USER = 'cteam'  # replace this with a valid username
HOST = '10.144.17.2' # and a valid host

class SimpleTransport(transport.SSHClientTransport):
    def verifyHostKey(self, hostKey, fingerprint):
        print 'host key fingerprint: %s' % fingerprint
        return defer.succeed(1)
    def connectionSecure(self):
        self.requestService(
            SimpleUserAuth(USER,
                SimpleConnection()))
class SimpleUserAuth(userauth.SSHUserAuthClient):
    def getPassword(self):
        return defer.succeed(getpass.getpass("%s@%s's password: " % (USER,
HOST)))
    def getGenericAnswers(self, name, instruction, questions):
        print name
        print instruction
        answers = []
        for prompt, echo in questions:
            if echo:
                answer = raw_input(prompt)
            else:
                answer = getpass.getpass(prompt)
            answers.append(answer)
        return defer.succeed(answers)

    def getPublicKey(self):
        path = os.path.expanduser('~/.ssh/id_dsa')
        # this works with rsa too
        # just change the name here and in getPrivateKey
        if not os.path.exists(path) or self.lastPublicKey:
            # the file doesn't exist, or we've tried a public key
            return
        return keys.getPublicKeyString(path+'.pub')
    def getPrivateKey(self):
        path = os.path.expanduser('~/.ssh/id_dsa')
        return defer.succeed(keys.getPrivateKeyObject(path))
class SimpleConnection(connection.SSHConnection):
    def serviceStarted(self):
        self.openChannel(TrueChannel(2**16, 2**15, self))
        self.openChannel(FalseChannel(2**16, 2**15, self))
        self.openChannel(CatChannel(2**16, 2**15, self))
class TrueChannel(channel.SSHChannel):
    name = 'session' # needed for commands
    def openFailed(self, reason):
        print 'true failed', reason

    def channelOpen(self, ignoredData):
        self.conn.sendRequest(self, 'exec', common.NS('true'))
    def request_exit_status(self, data):
        status = struct.unpack('>L', data)[0]
        print 'true status was: %s' % status
        self.loseConnection()
class FalseChannel(channel.SSHChannel):
    name = 'session'
    def openFailed(self, reason):
        print 'false failed', reason
    def channelOpen(self, ignoredData):
        self.conn.sendRequest(self, 'exec', common.NS('false'))
    def request_exit_status(self, data):
        status = struct.unpack('>L', data)[0]
        print 'false status was: %s' % status
        self.loseConnection()
class CatChannel(channel.SSHChannel):
    name = 'session'
    def openFailed(self, reason):
        print 'echo failed', reason
    def channelOpen(self, ignoredData):
        self.data = ''
        d = self.conn.sendRequest(self, 'exec', common.NS('ls -l'),
wantReply = 1)
        d.addCallback(self._cbRequest)

    def _cbRequest(self, ignored):
        self.write('hello conch\n')
        self.conn.sendEOF(self)
    def dataReceived(self, data):
        self.data=self.data+data

    def closed(self):
        win = Tkinter.Tk();
        Label(win,text='CARD UPLOAD UTILITY').pack(side=TOP)

        dirfm = Frame(win)
        dirsa=Scrollbar(dirfm)
        dirsb= Scrollbar(dirfm)
        dirsb.pack(side = RIGHT, fill =Y)

        dirs = Listbox(dirfm,height = 50, width = 70, yscrollcommand =
dirsb.set)
        textsfile = Entry(dirfm)
        print 'got data from listing: %s' % self.data
        recs=self.data.split('\n')
        '''p4 = re.sub('[]''""['']','','%s'%recs)
        print 'p4[0]',p4[0]'''

        print 'shweta',recs
        var=StringVar();
        for line in recs[1:]:

            p4 = re.sub('[]''""['']','','%s'%line)
            print p4[0]

            p2 = string.split(p4)
            print 'p2',p2
            p5 = []
            p5 = p5.append(p2[8])
            print line
            w=p4[0] # d r _
            dirs.insert(END,line)
        var=StringVar();
        #dirs.bind('<Double-1>', listd)

        textsfile.pack( side = BOTTOM)
        dirsb.config(command=dirs.yview)
        dirs.pack(side=LEFT,fill=BOTH)
        c=textsfile.get()
        dirfm.pack()
        self.loseConnection()
        reactor.stop()


protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST, 22)
reactor.run()



the next problem is to execute a script from the server which accepts inputs
from the user and processes it.
for eg sh test1.sh
On Tue, Sep 30, 2008 at 9:34 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Tue, 30 Sep 2008 21:24:03 +0530, shweta mani <shweta3230 at gmail.com>
> wrote:
>
>> [snip]
>>
>
> This isn't the right way to use Tk with Twisted.
>
> See
> http://twistedmatrix.com/projects/core/documentation/howto/choosing-reactor.html#auto14
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081002/b6b08aff/attachment.htm 

From george at ringdevelopment.com  Thu Oct  2 11:58:42 2008
From: george at ringdevelopment.com (George Pauly)
Date: Thu, 02 Oct 2008 11:58:42 -0400
Subject: [Twisted-Python] Re: DOUBTS PLEASE SOLVE
In-Reply-To: <d13e157d0810012310x45557d12o5682ce7ffafa7628@mail.gmail.com>
References: <d13e157d0809300854n6799f385l87d851c096befc7d@mail.gmail.com>
	<20080930160428.29191.46084701.divmod.quotient.32247@ohm>
	<d13e157d0810012310x45557d12o5682ce7ffafa7628@mail.gmail.com>
Message-ID: <1222963122.12900.40.camel@localhost.localdomain>

Would 'ls -l -R' do the trick?

-George

On Thu, 2008-10-02 at 11:40 +0530, shweta mani wrote:

> hi all i got the solution of listing all ls -l files in a listbox .
> Next problem is to use recurrsively ls -l command again if a user
> selects a directory. Can we use multiple in Linux commands within a
> program withoy using pipe. i am forwarding the code. i need to use ls
> -l command dependng on whether he chooses a directory.
> 
> ..........
> 
>         d = self.conn.sendRequest(self, 'exec', common.NS('ls -l'),
> wantReply = 1) 
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From bernat at luffy.cx  Thu Oct  2 17:12:44 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Thu, 02 Oct 2008 23:12:44 +0200
Subject: [Twisted-Python] Twisted and SNMP
Message-ID: <m31vyyaegj.fsf@neo.luffy.cx>

Hi folks!

For people  wanting to use  Twisted to do  some SNMP queries,  there are
actually several solutions:
 - TwistedSNMP that depends on PySNMP, a pure Python implementation
 - pynetsnmp, a ctypes based implementation

I was using pynetsnmp but it segfaults on Python 2.4, even with a recent
ctypes. I have  then rewrite something similar in pure  C. It works fine
for me and people are free to use it:
 https://trac.luffy.cx/wiremaps/wiki/SnmpLibrary

It is  feature limited:  GET, GETNEXT and  GETBULK only (not  even SET),
SNMPv1 and SNMPv2 only, no walking, etc.  But it works fine and I use it
for grabbing very large sets of data without any problem.
-- 
Format a program to help the reader understand it.
            - The Elements of Programming Style (Kernighan & Plauger)



From wiki at littlewiki.in  Fri Oct  3 02:17:53 2008
From: wiki at littlewiki.in (little wiki)
Date: Fri, 3 Oct 2008 11:47:53 +0530
Subject: [Twisted-Python] Implementing an efficient IMAP client using
	connection pooling
Message-ID: <d8ecebdd0810022317w2a807144wddc3f04002c7f074@mail.gmail.com>

Hi Folks,

I'm implementing a web based interface to an IMAP server.My idea is simple
as in my web client sending a request to the python script in cgi-bin
running apache .The python script in turn fetches from the IMAP and sends
back JSON data to the web client.

Here I want my python script to use twisted's IMAP's implementation .In
general ,everytime I send a request to the IMAP server, it sends the data of
the entire folder back which becomes a memory /bandwidth hog.What I'm
looking for is something like the connection pool in the adbapi module.I did
take deferred into consideration but what I'm looking for is a way to reduce
the number of connections being open to the IMAP server and trying to reuse
the same old connection instead of opening a new connection every time a
folder is refreshed   .The reason is that our IMAP severs run on very slow
compuers and I don't want the IMAP server to thrash the entire hard disk.

If the same could be done by deferred ,how would it be ?

Regards,
Wiki
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081003/876693ff/attachment.htm 

From mrsalty0 at gmail.com  Fri Oct  3 10:17:08 2008
From: mrsalty0 at gmail.com (J Davis)
Date: Fri, 3 Oct 2008 10:17:08 -0400
Subject: [Twisted-Python] Twisted and SNMP
In-Reply-To: <m31vyyaegj.fsf@neo.luffy.cx>
References: <m31vyyaegj.fsf@neo.luffy.cx>
Message-ID: <a26b6f030810030717n18825373h5eec8ab5976d76a1@mail.gmail.com>

This is exactly what I've been looking for. thank you!



On Thu, Oct 2, 2008 at 5:12 PM, Vincent Bernat <bernat at luffy.cx> wrote:

> Hi folks!
>
> For people  wanting to use  Twisted to do  some SNMP queries,  there are
> actually several solutions:
>  - TwistedSNMP that depends on PySNMP, a pure Python implementation
>  - pynetsnmp, a ctypes based implementation
>
> I was using pynetsnmp but it segfaults on Python 2.4, even with a recent
> ctypes. I have  then rewrite something similar in pure  C. It works fine
> for me and people are free to use it:
>  https://trac.luffy.cx/wiremaps/wiki/SnmpLibrary
>
> It is  feature limited:  GET, GETNEXT and  GETBULK only (not  even SET),
> SNMPv1 and SNMPv2 only, no walking, etc.  But it works fine and I use it
> for grabbing very large sets of data without any problem.
> --
> Format a program to help the reader understand it.
>            - The Elements of Programming Style (Kernighan & Plauger)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081003/b5104f66/attachment.htm 

From exarkun at divmod.com  Fri Oct  3 11:01:35 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Oct 2008 11:01:35 -0400
Subject: [Twisted-Python] Implementing an efficient IMAP client using
	connection pooling
In-Reply-To: <d8ecebdd0810022317w2a807144wddc3f04002c7f074@mail.gmail.com>
Message-ID: <20081003150135.29191.1959633255.divmod.quotient.33337@ohm>

On Fri, 3 Oct 2008 11:47:53 +0530, little wiki <wiki at littlewiki.in> wrote:
>Hi Folks,
>
>I'm implementing a web based interface to an IMAP server.My idea is simple
>as in my web client sending a request to the python script in cgi-bin
>running apache .The python script in turn fetches from the IMAP and sends
>back JSON data to the web client.
>
>Here I want my python script to use twisted's IMAP's implementation .In
>general ,everytime I send a request to the IMAP server, it sends the data of
>the entire folder back which becomes a memory /bandwidth hog.

I don't think you're going to find a good solution as long as your client is
running from a CGI.  The way to reduce load on an IMAP4 server is to make
fewer connections and open fewer mailboxes (generally speaking.  Different
IMAP4 servers have different performance characteristics; you should learn
about yours and avoid the requests it specifically cannot satisfy efficiently).

Jean-Paul



From shweta3230 at gmail.com  Fri Oct  3 11:43:22 2008
From: shweta3230 at gmail.com (shweta mani)
Date: Fri, 3 Oct 2008 21:13:22 +0530
Subject: [Twisted-Python] Re: DOUBTS PLEASE SOLVE
In-Reply-To: <1222963122.12900.40.camel@localhost.localdomain>
References: <d13e157d0809300854n6799f385l87d851c096befc7d@mail.gmail.com>
	<20080930160428.29191.46084701.divmod.quotient.32247@ohm>
	<d13e157d0810012310x45557d12o5682ce7ffafa7628@mail.gmail.com>
	<1222963122.12900.40.camel@localhost.localdomain>
Message-ID: <d13e157d0810030843t58f4d22do7618c62e01c193fc@mail.gmail.com>

hi all it really helped.

On Thu, Oct 2, 2008 at 9:28 PM, George Pauly <george at ringdevelopment.com>wrote:

> Would 'ls -l -R' do the trick?
>
> -George
>
> On Thu, 2008-10-02 at 11:40 +0530, shweta mani wrote:
>
> > hi all i got the solution of listing all ls -l files in a listbox .
> > Next problem is to use recurrsively ls -l command again if a user
> > selects a directory. Can we use multiple in Linux commands within a
> > program withoy using pipe. i am forwarding the code. i need to use ls
> > -l command dependng on whether he chooses a directory.
> >
> > ..........
> >
> >         d = self.conn.sendRequest(self, 'exec', common.NS('ls -l'),
> > wantReply = 1)
> --
> George Pauly
> Ring Development
> www.ringdevelopment.com
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081003/fca119de/attachment.htm 

From glyph at divmod.com  Fri Oct  3 19:25:46 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 03 Oct 2008 23:25:46 -0000
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <6EE85919-4455-4B36-86F9-3E032CCFF0D8@physics.ubc.ca>
References: <20081001214433.29191.2045241972.divmod.quotient.32801@ohm>
	<6EE85919-4455-4B36-86F9-3E032CCFF0D8@physics.ubc.ca>
Message-ID: <20081003232546.31635.1433291076.divmod.xquotient.981@weber.divmod.com>

On 1 Oct, 10:37 pm, mforbes at physics.ubc.ca wrote:
>>On Oct 1, 2008, at 3:44 PM, Jean-Paul Calderone wrote:

>>However, it's a very low-level API and since it isn't intended to be
>>used by application code, it doesn't seem like a very high priority
>>to make it less confusing.
>
>By the way, is there any convention by which "high level" API  routines 
>are distinguished from "low level" routines?  It is really  not that 
>clear from the docs... (writeSomeData comes first in the  listing etc.)

writeSomeData only comes first if you're looking at the documentation 
for "Connection", which is itself kind of an internal thing.  The 
internals definitely aren't as cleanly separated from the public / 
application interface as they should be, but a good rule of thumb is 
that high level stuff is what's covered in the tutorial documentation. 
For example, none of 
<http://twistedmatrix.com/projects/core/documentation/howto/producers.html>, 
<http://twistedmatrix.com/projects/core/documentation/howto/servers.html>, 
or 
<http://twistedmatrix.com/projects/core/documentation/howto/clients.html> 
covers writeSomeData.  Another rule of thumb is that the high-level 
stuff is on explicitly specified interfaces, such as 
<http://twistedmatrix.com/documents/8.1.0/api/twisted.internet.interfaces.ITransport.html>. 
Of course there are some low-level interfaces too, for example 
<http://twistedmatrix.com/documents/8.1.0/api/twisted.internet.interfaces.IWriteDescriptor.html> 
but their documentation is typically not as expository.

But the ultimate rule is that high-level interfaces are convenient, and 
the low-level ones (as you have noticed about writeSomeData) are not :).
>I know that and am using callFromThread: The reason I am having bad 
>behavior is because the socket is backing up.  Once I put in the  logic 
>to throw out data, it works fine... but the lack of reactor  support 
>concerns me somewhat.

What do you mean by "backing up"?  That doesn't really make sense.  When 
a transport "backs up" in Twisted, it just allocates a larger and larger 
buffer to store the data that is queued to be sent.

And what is the "lack of reactor support" you're talking about?  It 
seems to me that the reactor supports everything you need.
>I don't want the computation to stop,  but think I could put an 
>intermediate "push producer" that stops by  discarding the data.

I don't *really* understand what you're trying to accomplish here; it 
soudns to me like you actually want a pull producer that just always 
sends the latest state in resumeProducing(), assuming it's always 
changing.  Of course the "every 30 minutes" timeframe confuses that 
somewhat.  However, using some kind of producer is definitely the way to 
go.
>Is there a simpler way to do this all with twisted without using 
>threads? (The main goal is having an extremely minimal set of hooks 
>for the people writing the computational code, and having the 
>computational code run as fast as possible.)

You could use subprocesses.  Valentino Volonghi is working on a 
convenient process-pool for use with Twisted: 
<https://launchpad.net/ampoule/>.  I don't think that would actually 
help you that much though, since you'd still need to have application- 
specific buffering logic (it's a slightly unusual requirement to throw 
away intermediary state depending on the buffer saturation).



From warner at lothar.com  Fri Oct  3 21:26:18 2008
From: warner at lothar.com (Brian Warner)
Date: Fri, 3 Oct 2008 18:26:18 -0700
Subject: [Twisted-Python] troubles with FTP server and async file writing
Message-ID: <20081003182618.3750a70a@fluxx.allmydata.com>

Howdy all.. who's interested in the VFS or FTP code these days?

I'm in the process of writing an FTP frontend for Tahoe[1], and the STOR
command is causing me problems. Tahoe is a virtual filesystem that spreads
files and directories over a grid of backend servers to achieve high
reliability and availability. Once the STOR command finishes transferring the
file (over the separate DTP connection), the Tahoe node springs into action:
encrypting, hashing, erasure-coding, uploading, and finally modifying a
parent directory (which is also distributed) to reference the new child. This
whole process takes time, maybe a second or two for a small file, potentially
minutes if you're uploading a large file over a slow network. Naturally, the
Tahoe upload() method returns a Deferred, that fires when the whole process
is complete.

The trouble is, it looks like Twisted's FTP server is not designed to handle
asynchronous uploads. The specific problem is in the way that
twisted.protocols.ftp.FTP.ftp_STOR() interacts with the IConsumer that it
gets.. the sequence goes like this:

 1: ftp_STOR fetches an IWriteFile instance  (via Deferred)
 2: cbOpened() calls IWriteFile.receive to get an IConsumer (via Deferred)
 3: cbConsumer() hands it to dtpInstance.registerConsumer (via Deferred)
 4: FTP.registerConsumer() sends it a registerProducer() (synchronous)
    it returns the self._onConnLost Deferred
 5: data is sent over the DTP connection, written to the consumer
 6: the DTP connection is closed, _onConnLost is fired
 7:  DTP._unregConsumer sends unregisterProducer(), and ignores the result
 8:  FTP.cbConsumer()'s chain regains control, runs cbSent (via Deferred)
 9:  cbSent returns 226 Transfer Complete
 10: the Deferred chain finally unwinds, firing the Deferred that was
     returned from ftp_STOR, which sends the 226 back to the client

Most of these steps use Deferreds, so the opening of the file can take as
long as we need, but since DTP._unregConsumer ignores the result of
consumer.unregisterProducer in step #7, there's no way for the backend to
stall the delivery of the 226 until the file has actually been uploaded.

We need something to address this, because FTP clients are correctly assuming
that once they get the 226 Transfer Complete, the file will be in place.


I'm not sure how to best fix this. It seems like something needs to interact
with either the IConsumer or the IWriteFile to ask "are you done uploading
yet". If it wouldn't be so horribly wrong I'd suggest redefining IConsumer's
unregisterProducer() to return a Deferred, and then modify the FTP client (in
DTP._unregConsumer) to pass that Deferred back to the chain, something like:

--- twisted/protocols/ftp.py    (revision 24956)
+++ twisted/protocols/ftp.py    (working copy)
@@ -451,10 +451,10 @@
             self._buffer.append(bytes)
 
     def _unregConsumer(self, ignored):
-        self._cons.unregisterProducer()
+        d = defer.maybeDeferred(self._cons.unregisterProducer)
         self._cons = None
         del self._onConnLost
-        return ignored
+        return d


But, as far as I can tell, IConsumers aren't meant to work this way:
detaching a producer doesn't really mean that there won't be more data at
some point in the future, just that this particular producer is no longer
useful.

IFinishableConsumer, though, has a 'finish' method, which is actually used in
a couple of other places in twisted/protocols/ftp.py . So Plan B would be:

 * declare that IWriteFile.receive() must return an IFinishableConsumer
   instead of merely an IConsumer
 * document that IFinishableConsumer.finish() will be called after
   unregisterProducer, and document what happens in the case of exceptions
 * redefine IFinishableConsumer.finish() to be allowed to return a Deferred
 * modify FTP.ftp_STOR.cbConsumer to wait for this Deferred before sending
   the 226 response, something like:

--- twisted/protocols/ftp.py    (revision 24956)
+++ twisted/protocols/ftp.py    (working copy)
@@ -1049,6 +1049,7 @@
                 cons = ASCIIConsumerWrapper(cons)
 
             d = self.dtpInstance.registerConsumer(cons)
+            d.addCallback(lambda res: cons.finish())
             d.addCallbacks(cbSent, ebSent)
 
             # Tell them what to doooo

But it doesn't look like IFinishableConsumer.finish() is meant to be used
this way either: the docstring has no mention of return value, or if/when it
gets called, and the FTP client is the only code in all of Twisted that uses
it (and all that does is a synchronous transport.loseConnection).

I guess Plan C would be to involve the IWriteFile instance, adding a finish()
method of some sort, making this an FTP-specific solution.


So, any thoughts? Something like this just at the VFS level would allow
backends to use asynchronous-writes, which feels like a significant gap in
the current functionality. It might be better to address it at the IConsumer
level, but that would touch more (and better-established) code.


cheers,
 -Brian


[1]: http://allmydata.org/



From mforbes at physics.ubc.ca  Sat Oct  4 21:12:20 2008
From: mforbes at physics.ubc.ca (Michael McNeil Forbes)
Date: Sat, 4 Oct 2008 19:12:20 -0600
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <20081003232546.31635.1433291076.divmod.xquotient.981@weber.divmod.com>
References: <20081001214433.29191.2045241972.divmod.quotient.32801@ohm>
	<6EE85919-4455-4B36-86F9-3E032CCFF0D8@physics.ubc.ca>
	<20081003232546.31635.1433291076.divmod.xquotient.981@weber.divmod.com>
Message-ID: <4EF32C31-C102-4677-A3B0-D8ED9D2B9D8E@physics.ubc.ca>


On Oct 3, 2008, at 5:25 PM, glyph at divmod.com wrote:
>> I know that and am using callFromThread: The reason I am having  
>> bad behavior is because the socket is backing up.  Once I put in  
>> the  logic to throw out data, it works fine... but the lack of  
>> reactor  support concerns me somewhat.
>
> What do you mean by "backing up"? That doesn't really make sense.   
> When a transport "backs up" in Twisted, it just allocates a larger  
> and larger buffer to store the data that is queued to be sent.
I thought that the socket buffer was backing up, but now see that  
write() does buffer.  I incorrectly attributed some problems with  
data arriving out of order and/or getting lost with this... I will  
have to look deeper into what is causing these problems.  I am using  
a push producer now and the server seems to be sending things fine.   
As far as I can tell, however, the receiver is sometimes getting the  
data out of order when data comes in too fast on the client side.  I  
have to look into that and see what the cause is... maybe I am not  
being careful enough with the threads.

(On the client side, I want the user to have full access to a python  
interpreter with readline functionality etc. and the ability to plot  
things with matplotlib using Tkinter.  As far as I can see, I can't  
get readline functionality with a manhole or similar interface  
controlled by twisted, so again I have to run twisted in a separate  
thread.)

> And what is the "lack of reactor support" you're talking about?
Oh, the "lack of support" for writeSomeData by some reactors bothered  
me and prompted me to use write;-)

>> I don't want the computation to stop,  but think I could put an  
>> intermediate "push producer" that stops by  discarding the data.
>
> I don't *really* understand what you're trying to accomplish here;  
> it soudns to me like you actually want a pull producer that just  
> always sends the latest state in resumeProducing(), assuming it's  
> always changing.  Of course the "every 30 minutes" timeframe  
> confuses that somewhat.  However, using some kind of producer is  
> definitely the way to go.
The point here is that there are two forms of usage: one is when the  
computation is fast and the data is coming so fast that the client  
will have to drop some of it.  I agree that this should be more of a  
pull producer, but the other form of usage is where the computation  
takes about 30 minutes before new data is ready.  This should be  
implemented as a push producer.

>> Is there a simpler way to do this all with twisted without using  
>> threads? (The main goal is having an extremely minimal set of  
>> hooks for the people writing the computational code, and having  
>> the computational code run as fast as possible.)
>
> You could use subprocesses.  Valentino Volonghi is working on a  
> convenient process-pool for use with Twisted: <https:// 
> launchpad.net/ampoule/>.  I don't think that would actually help  
> you that much though, since you'd still need to have application-  
> specific buffering logic (it's a slightly unusual requirement to  
> throw away intermediary state depending on the buffer saturation).

Thanks for the suggestions and help.
Michael.




From exarkun at twistedmatrix.com  Sun Oct  5 00:05:17 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Oct 2008 04:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1223179517.1.475456981@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081005/a991a3b7/attachment.htm 

From shweta3230 at gmail.com  Sun Oct  5 02:16:34 2008
From: shweta3230 at gmail.com (shweta mani)
Date: Sun, 5 Oct 2008 11:46:34 +0530
Subject: [Twisted-Python] Re:got stuck again
Message-ID: <d13e157d0810042316l338cab91k390d02b3d245d1dc@mail.gmail.com>

hi all
again got stuck folks!
this time it is as follows
i need to execute a script called test1.sh which acepts a name from a user .
this is done in a Unix server.
sh test1.sh if executed will ask for a input. user will enter a name.
then user's name will be displayed in the output form
this should be done Python twisted ssh. in my case it is not accepting any
input


On Fri, Oct 3, 2008 at 9:13 PM, shweta mani <shweta3230 at gmail.com> wrote:

>  hi all it really helped.
>
>   On Thu, Oct 2, 2008 at 9:28 PM, George Pauly <george at ringdevelopment.com
> > wrote:
>
>> Would 'ls -l -R' do the trick?
>>
>> -George
>>
>> On Thu, 2008-10-02 at 11:40 +0530, shweta mani wrote:
>>
>> > hi all i got the solution of listing all ls -l files in a listbox .
>> > Next problem is to use recurrsively ls -l command again if a user
>> > selects a directory. Can we use multiple in Linux commands within a
>> > program withoy using pipe. i am forwarding the code. i need to use ls
>> > -l command dependng on whether he chooses a directory.
>> >
>> > ..........
>> >
>> >         d = self.conn.sendRequest(self, 'exec', common.NS('ls -l'),
>> > wantReply = 1)
>> --
>> George Pauly
>> Ring Development
>> www.ringdevelopment.com
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081005/be3e5c0f/attachment.htm 

From hackgou at gmail.com  Sun Oct  5 09:12:10 2008
From: hackgou at gmail.com (HG)
Date: Sun, 5 Oct 2008 21:12:10 +0800
Subject: [Twisted-Python] Syslog Listener UDP
In-Reply-To: <a33934630809281118y34e23dfdq769c5ea2ab8e9acd@mail.gmail.com>
References: <a33934630809281118y34e23dfdq769c5ea2ab8e9acd@mail.gmail.com>
Message-ID: <774f50bd0810050612g791d7d8dy8f00ba5f2c6baad4@mail.gmail.com>

I'm interested with this.
any more progress?
thanks
HG

On Mon, Sep 29, 2008 at 2:18 AM, Marc Byrd <dr.marc.byrd at gmail.com> wrote:

> Hi,
>
> I would like to build a syslog(udp port 514) listener in twisted.  The goal
> is to make it compatible with syslog and syslog-ng, which may be configured
> on a "client" to send log entries (as they occur) via udp (fire and forget)
> to a remote server (my twisted server).
>
> Is there already something out there that would do this or that would be a
> good start?
>
> Thanks,
>
>
> Marc
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081005/8cbed961/attachment.htm 

From george at ringdevelopment.com  Sun Oct  5 14:19:01 2008
From: george at ringdevelopment.com (George Pauly)
Date: Sun, 05 Oct 2008 14:19:01 -0400
Subject: [Twisted-Python] Re:got stuck again
In-Reply-To: <d13e157d0810042316l338cab91k390d02b3d245d1dc@mail.gmail.com>
References: <d13e157d0810042316l338cab91k390d02b3d245d1dc@mail.gmail.com>
Message-ID: <1223230741.5174.142.camel@localhost.localdomain>

Perhaps if we had more information about your assignment it would help.

It would be nice to know where Twisted is being used.

-George

On Sun, 2008-10-05 at 11:46 +0530, shweta mani wrote:
> 
> hi all
> again got stuck folks!
> this time it is as follows
> i need to execute a script called test1.sh which acepts a name from a
> user .
> this is done in a Unix server.
> sh test1.sh if executed will ask for a input. user will enter a name.
> then user's name will be displayed in the output form
> this should be done Python twisted ssh. in my case it is not accepting
> any input
> 
>  
> On Fri, Oct 3, 2008 at 9:13 PM, shweta mani <shweta3230 at gmail.com>
> wrote:
>         hi all it really helped.
>         
>         
>         
>         On Thu, Oct 2, 2008 at 9:28 PM, George Pauly
>         <george at ringdevelopment.com> wrote:
>                 Would 'ls -l -R' do the trick?
>                 
>                 -George
>                 
>                 On Thu, 2008-10-02 at 11:40 +0530, shweta mani wrote:
>                 
>                 > hi all i got the solution of listing all ls -l files
>                 in a listbox .
>                 > Next problem is to use recurrsively ls -l command
>                 again if a user
>                 > selects a directory. Can we use multiple in Linux
>                 commands within a
>                 > program withoy using pipe. i am forwarding the code.
>                 i need to use ls
>                 > -l command dependng on whether he chooses a
>                 directory.
>                 >
>                 
>                 > ..........
>                 >
>                 >         d = self.conn.sendRequest(self, 'exec',
>                 common.NS('ls -l'),
>                 > wantReply = 1)
>                 
>                 --
>                 George Pauly
>                 Ring Development
>                 www.ringdevelopment.com
>                 
>                 
>                 
>                 _______________________________________________
>                 Twisted-Python mailing list
>                 Twisted-Python at twistedmatrix.com
>                 http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>                 
>         
>         
> 
> 
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From exarkun at divmod.com  Mon Oct  6 16:40:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 6 Oct 2008 16:40:36 -0400
Subject: [Twisted-Python] troubles with FTP server and async file writing
In-Reply-To: <20081003182618.3750a70a@fluxx.allmydata.com>
Message-ID: <20081006204036.29191.263766891.divmod.quotient.34725@ohm>

On Fri, 3 Oct 2008 18:26:18 -0700, Brian Warner <warner at lothar.com> wrote:
>[snip]
>The specific problem is in the way that
>twisted.protocols.ftp.FTP.ftp_STOR() interacts with the IConsumer that it
>gets.. the sequence goes like this:
>
> [snip]
> 6: the DTP connection is closed, _onConnLost is fired
> 7:  DTP._unregConsumer sends unregisterProducer(), and ignores the result
> 8:  FTP.cbConsumer()'s chain regains control, runs cbSent (via Deferred)
> 9:  cbSent returns 226 Transfer Complete
> [snip]
>
>Most of these steps use Deferreds, so the opening of the file can take as
>long as we need, but since DTP._unregConsumer ignores the result of
>consumer.unregisterProducer in step #7, there's no way for the backend to
>stall the delivery of the 226 until the file has actually been uploaded.
>
>We need something to address this, because FTP clients are correctly assuming
>that once they get the 226 Transfer Complete, the file will be in place.
>

Yep.  You're right that the FTP server protocol implementation currently
assumes that once it has written the last chunk to the consumer that the
file is successfully uploaded.  It would be a good enhancement to server
to allow application code to insert one more Deferred into processing of
uploads after the last write and before the success notification.

Unfortunately, there's no way to signal this with `IConsumer`.  Likewise
(as you pointed out) `IFinishableConsumer.finish` doesn't have very well
defined semantics.  In particular, there's no way to infer from its docs
that a Deferred might be returned.

>
>I guess Plan C would be to involve the IWriteFile instance, adding a finish()
>method of some sort, making this an FTP-specific solution.
>
>So, any thoughts? Something like this just at the VFS level would allow
>backends to use asynchronous-writes, which feels like a significant gap in
>the current functionality. It might be better to address it at the IConsumer
>level, but that would touch more (and better-established) code.
>

Trying to solve this in VFS before it has been solved for any specific use
case would be premature.  Similarly, making a change to `IConsumer` before
implementing the idea even once should be avoided.  I would suggest adding
a new (optional) interface to the FTP server implementation which supports
the close hook that's needed here.  Once something is working, then we can
try to generalize it.

Jean-Paul



From warner at lothar.com  Mon Oct  6 21:51:18 2008
From: warner at lothar.com (Brian Warner)
Date: Mon, 6 Oct 2008 18:51:18 -0700
Subject: [Twisted-Python] troubles with FTP server and async file writing
In-Reply-To: <20081006204036.29191.263766891.divmod.quotient.34725@ohm>
References: <20081003182618.3750a70a@fluxx.allmydata.com>
	<20081006204036.29191.263766891.divmod.quotient.34725@ohm>
Message-ID: <20081006185118.20e36e04@fluxx.allmydata.com>

On Mon, 6 Oct 2008 16:40:36 -0400
Jean-Paul Calderone <exarkun at divmod.com> wrote:

> I would suggest adding a new (optional) interface to the FTP server
> implementation which supports the close hook that's needed here. Once
> something is working, then we can try to generalize it.


Ok, I've created #3462 and attached a patch for your consideration:

  http://twistedmatrix.com/trac/ticket/3462

With this patch, I'm able to make Tahoe do what I need it to do.

thanks,
 -Brian



From vvangelovski at gmail.com  Tue Oct  7 04:38:36 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Tue, 7 Oct 2008 10:38:36 +0200
Subject: [Twisted-Python] alternative to tac
Message-ID: <406b9fda0810070138l233695d4h7064857ef430b3e8@mail.gmail.com>

Which is the simplest way to put a service under and application to
listen on a port and behave similarly to the way it behaves when run
with twistd -noy script.tac but directly from a standard python
module? Lets assume I don't have access to the tac command and want to
emulate the behaveour.



From wthie at thiengineering.ch  Tue Oct  7 05:18:28 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 07 Oct 2008 11:18:28 +0200
Subject: [Twisted-Python] alternative to tac
In-Reply-To: <406b9fda0810070138l233695d4h7064857ef430b3e8@mail.gmail.com>
References: <406b9fda0810070138l233695d4h7064857ef430b3e8@mail.gmail.com>
Message-ID: <48EB2964.2000108@thiengineering.ch>

Hi Vasil

I use something along the code below whoch serves dual purpose, use it 
with twistd -noy xxx.tac and also python xxx.tac.

I was undecided almost a year ago whether I should use config files too, 
but then found that the .tac files work great as config files too.

I mainly develop on MSW XP and Vista and routinely deploy to OpenBSD.

HTH, Werner

PS: some refs in the code are generalized

import sys, os, gc

from twisted.enterprise import adbapi

from twisted.application import service, strports, internet
from twisted.cred import portal, credentials, checkers
from twisted.internet import protocol, reactor
#from twisted.conch import manhole, manhole_ssh
from twisted.python import log

from nevow import appserver, inevow

from theproject import web, i18n, plugin, ourguard

if sys.platform != 'win32':
   import psyco
   psyco.full()

   UID = 67
   GID = 67
   os.environ['PYTHON_EGG_CACHE'] = '/tmp'

DB_DRIVER = "MySQLdb"
DB_ARGS = {
     'host': 'xxx.xxx.xxx.xxx',
     'db': 'somedb',
     'user': 'someuser',
     'passwd': 'somepwd',
     'cp_reconnect': True
     }

application = service.Application("appname")

print
print 'available userstores:'
for userstore in plugin.userstores():
   print userstore.name

UserstoreName  = 'dbonly'
#UserstoreName  = 'memonly'
[Userstore] = [x for x in plugin.userstores() if x.name == UserstoreName]
print 'selected: %s' % Userstore.name

userstore = Userstore(DB_DRIVER, **DB_ARGS)

#additional style locations to be put into second arg, third arg is 
#redirect to in case of not knowing where to go
theportal = portal.Portal(web.Realm(web.Root('style_loc', [], 
'www.google.com'), userstore))

theportal.registerChecker(checkers.AllowAnonymousAccess(), 
credentials.IAnonymous)

thersrc = ourguard.TheSessionWrapper(theportal, mindFactory=web.Mind)
site = appserver.NevowSite(thersrc)

webserver = strports.service("tcp:7999", site)
webserver.setServiceParent(application)

def main():
   log.startLogging(sys.stdout)
   reactor.listenTCP(7999, site) #start only the web svc when debugging
   reactor.run()
##  print gc.get_objects()

if __name__ == '__main__':
   main()
##  import cProfile, pstats
##  p = cProfile.Profile()
##  p.run('main()')
##  s = pstats.Stats(p)
##  s.strip_dirs()
##  s.sort_stats('call', 'cum', 'name').print_stats().print_callers()



Vasil Vangelovski wrote:
> Which is the simplest way to put a service under and application to
> listen on a port and behave similarly to the way it behaves when run
> with twistd -noy script.tac but directly from a standard python
> module? Lets assume I don't have access to the tac command and want to
> emulate the behaveour.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From vvangelovski at gmail.com  Tue Oct  7 05:27:27 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Tue, 7 Oct 2008 11:27:27 +0200
Subject: [Twisted-Python] alternative to tac
In-Reply-To: <48EB2964.2000108@thiengineering.ch>
References: <406b9fda0810070138l233695d4h7064857ef430b3e8@mail.gmail.com>
	<48EB2964.2000108@thiengineering.ch>
Message-ID: <406b9fda0810070227p240a69dcnf21d669e928f0733@mail.gmail.com>

Thanks. I'll try it out.

On Tue, Oct 7, 2008 at 11:18 AM, Werner Thie <wthie at thiengineering.ch> wrote:
> Hi Vasil
>
> I use something along the code below whoch serves dual purpose, use it with
> twistd -noy xxx.tac and also python xxx.tac.
>
> I was undecided almost a year ago whether I should use config files too, but
> then found that the .tac files work great as config files too.
>
> I mainly develop on MSW XP and Vista and routinely deploy to OpenBSD.
>
> HTH, Werner
>
> PS: some refs in the code are generalized
>
> import sys, os, gc
>
> from twisted.enterprise import adbapi
>
> from twisted.application import service, strports, internet
> from twisted.cred import portal, credentials, checkers
> from twisted.internet import protocol, reactor
> #from twisted.conch import manhole, manhole_ssh
> from twisted.python import log
>
> from nevow import appserver, inevow
>
> from theproject import web, i18n, plugin, ourguard
>
> if sys.platform != 'win32':
>  import psyco
>  psyco.full()
>
>  UID = 67
>  GID = 67
>  os.environ['PYTHON_EGG_CACHE'] = '/tmp'
>
> DB_DRIVER = "MySQLdb"
> DB_ARGS = {
>    'host': 'xxx.xxx.xxx.xxx',
>    'db': 'somedb',
>    'user': 'someuser',
>    'passwd': 'somepwd',
>    'cp_reconnect': True
>    }
>
> application = service.Application("appname")
>
> print
> print 'available userstores:'
> for userstore in plugin.userstores():
>  print userstore.name
>
> UserstoreName  = 'dbonly'
> #UserstoreName  = 'memonly'
> [Userstore] = [x for x in plugin.userstores() if x.name == UserstoreName]
> print 'selected: %s' % Userstore.name
>
> userstore = Userstore(DB_DRIVER, **DB_ARGS)
>
> #additional style locations to be put into second arg, third arg is
> #redirect to in case of not knowing where to go
> theportal = portal.Portal(web.Realm(web.Root('style_loc', [],
> 'www.google.com'), userstore))
>
> theportal.registerChecker(checkers.AllowAnonymousAccess(),
> credentials.IAnonymous)
>
> thersrc = ourguard.TheSessionWrapper(theportal, mindFactory=web.Mind)
> site = appserver.NevowSite(thersrc)
>
> webserver = strports.service("tcp:7999", site)
> webserver.setServiceParent(application)
>
> def main():
>  log.startLogging(sys.stdout)
>  reactor.listenTCP(7999, site) #start only the web svc when debugging
>  reactor.run()
> ##  print gc.get_objects()
>
> if __name__ == '__main__':
>  main()
> ##  import cProfile, pstats
> ##  p = cProfile.Profile()
> ##  p.run('main()')
> ##  s = pstats.Stats(p)
> ##  s.strip_dirs()
> ##  s.sort_stats('call', 'cum', 'name').print_stats().print_callers()
>
>
>
> Vasil Vangelovski wrote:
>>
>> Which is the simplest way to put a service under and application to
>> listen on a port and behave similarly to the way it behaves when run
>> with twistd -noy script.tac but directly from a standard python
>> module? Lets assume I don't have access to the tac command and want to
>> emulate the behaveour.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From phil at bubblehouse.org  Tue Oct  7 11:16:13 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 7 Oct 2008 11:16:13 -0400
Subject: [Twisted-Python] alternative to tac
In-Reply-To: <48EB2964.2000108@thiengineering.ch>
References: <406b9fda0810070138l233695d4h7064857ef430b3e8@mail.gmail.com>
	<48EB2964.2000108@thiengineering.ch>
Message-ID: <A1E5E4FE-161A-4589-BD69-AC541D2B337A@bubblehouse.org>


On Oct 7, 2008, at 5:18 AM, Werner Thie wrote:
> Vasil Vangelovski wrote:
>> Which is the simplest way to put a service under and application to
>> listen on a port and behave similarly to the way it behaves when run
>> with twistd -noy script.tac but directly from a standard python
>> module? Lets assume I don't have access to the tac command and want  
>> to
>> emulate the behaveour.
>
> Hi Vasil
>
> I use something along the code below whoch serves dual purpose, use  
> it with twistd -noy xxx.tac and also python xxx.tac.

[snip]

> def main():
>  log.startLogging(sys.stdout)
>  reactor.listenTCP(7999, site) #start only the web svc when debugging
>  reactor.run()
> ##  print gc.get_objects()
>
> if __name__ == '__main__':
>  main()

[snip]

I don't think this really emulates twistd's behavior very well. twistd  
does roughly one trillion other things during startup that won't  
happen here.

Maybe you don't need any of this stuff, but I'll add my two cents  
about how I've dealt with this, which is to use twistd plugins, and  
call twistd's script functions directly:

from twisted.scripts import twistd

config = twistd.ServerOptions()
args = ['--pidfile', 'mytwistd.pid', '-l', 'mytwistd.log', 'myplugin']
config.parseOptions(args)
twistd.runApp(config)

This lets me easily specify configuration details, but should be  
reasonably forward-compatible. Also, I can keep all my code inside a  
package, and as long as it's in the system path, my plugin will be  
available to twistd.

There was some talk ages ago about making twistd a little more  
developer-friendly (so that you could more easily pick and choose the  
parts of it you wanted to use) but I don't remember the details, or if  
any progress was made.

-phil



From exarkun at divmod.com  Tue Oct  7 15:09:18 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 7 Oct 2008 15:09:18 -0400
Subject: [Twisted-Python] Buildbot history
In-Reply-To: 0
Message-ID: <20081007190918.29191.1277749036.divmod.quotient.35224@ohm>

Hey all,

Due to some unfortunate behavior which began after I upgraded our build
master to 0.7.8, I've just removed all of the history from our buildbot.
This means all old links to build results are broken now.  Hopefully this
won't cause any major problems.

Jean-Paul



From wthie at thiengineering.ch  Wed Oct  8 12:57:51 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 08 Oct 2008 18:57:51 +0200
Subject: [Twisted-Python] Socket error 22,
	Invalid Argument in twisted/internet/tcp.py
In-Reply-To: <20081007190918.29191.1277749036.divmod.quotient.35224@ohm>
References: <20081007190918.29191.1277749036.divmod.quotient.35224@ohm>
Message-ID: <48ECE68F.4040705@thiengineering.ch>

As I wrote in post 
http://www.mail-archive.com/twisted-web at twistedmatrix.com/msg01701.html
I'm still observing this socket error 22 problem but was not able to dig 
into it any further until now.

I found the following post from the python mailing list, which seems 
related to my problem:

http://mail.python.org/pipermail/python-bugs-list/2006-August/034667.html

Attchached to this post is a small script, which I extended somehow and 
tried out on various platforms:

import socket

socket.setdefaulttimeout(30)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

#nothing is listening on port 9999
try:
   s.connect(('127.0.0.1', 9999))
except socket.error, msg:
   print msg
   print s.getsockname()

Win32 XP & VISTA:
(10061, 'Connection refused')
('0.0.0.0', 2071)  << socket# seems to be random

Linux Fedora 9:
(111, 'Connection refused')
('0.0.0.0', 47521)  << socket# counting up when script run again

Mac OSX 10.5:
(61, 'Connection refused')
('127.0.0.1', 49169)  << socket# counting up when script run again

FreeBSD 7.0:
(61, 'Connection refused')
('127.0.0.1', 0)  << socket# remains 0 when script run again

OpenBSD 4.3:
(61, 'Connection refused')
Traceback (most recent call last):
   File "socket22error.py", line 8, in <module>
     print s.getsockname()
   File "<string>", line 1, in getsockname
socket.error: (22, 'Invalid argument')

All the OS's seem to agree more or less how this particular situation 
should be handled except OpenBSD.

I agree that this is an Python/OS related question, but what happens 
with the reactor when such an error is thrown?

Is it harmless or does the system loose resources, wait for timeouts?

Is a try/except with a normalized answer in the embracing function in 
twisted/internet/tcp.py a possible cure?

I ask because I experience an unexplainable 'hickup' behavior where the 
odd request which usually triggers an instantaneous response takes up to 
30secs until a response is seen on the client in a local and clean net 
enviroment.

Thxs, Werner

PS:
- Yes, I know trial.
- Yes, I am able to set up a build slave for OpenBSD and in fact did so.
- Yes, I requested the creds from exarkun at divmod.com for connecting this 
buildslave on 03.July 2008 17:37 but got no answer
- Yes, I'm willing to recreate the bot which was in the meantime used in 
another project
- No, I don't know if there exists an automated test case for the 
problem given above




From exarkun at divmod.com  Wed Oct  8 13:59:01 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 8 Oct 2008 13:59:01 -0400
Subject: [Twisted-Python] Socket error 22,
	Invalid Argument in twisted/internet/tcp.py
In-Reply-To: <48ECE68F.4040705@thiengineering.ch>
Message-ID: <20081008175901.29191.435977663.divmod.quotient.35741@ohm>

On Wed, 08 Oct 2008 18:57:51 +0200, Werner Thie <wthie at thiengineering.ch> wrote:
>As I wrote in post http://www.mail-archive.com/twisted- 
>web at twistedmatrix.com/msg01701.html
>I'm still observing this socket error 22 problem but was not able to dig 
>into it any further until now.
>
>I found the following post from the python mailing list, which seems related 
>to my problem:
>
>http://mail.python.org/pipermail/python-bugs-list/2006-August/034667.html
>
>Attchached to this post is a small script, which I extended somehow and 
>tried out on various platforms:
>
> [snip]
>

It looks like these are slightly different cases.  The traceback from
Twisted Web comes from using getsockname on a connection the server
accepted.  The script you attached calls getsockname on a socket which
has failed to make an outgoing connection.  Perhaps they are demonstrating
the same feature/behavior/bug of OpenBSD, but not necessarily.  I vaguely
recall trying to investigate the Twisted Web case when you initially raised
it, but I can't remember if I learned anything (I think I recall that I was
not able to reproduce it).

> [snip]
>
>I agree that this is an Python/OS related question, but what happens with 
>the reactor when such an error is thrown?
>
>Is it harmless or does the system loose resources, wait for timeouts?

When a protocol's dataReceived method raises an exception, the connection
is closed.  It seems that this exception is getting all the way from the
request handling code up to beyond the HTTP protocol implementation's
dataReceived method, so that should be what happens for this case. That
means it's probably harmless, but since I don't actually understand the
circumstances under which it happens, I can't say for sure.

>
>Is a try/except with a normalized answer in the embracing function in 
>twisted/internet/tcp.py a possible cure?

You mean in the implementation of getHost()?  Maybe, maybe not.  I'd like
to understand what OpenBSD thinks it is telling us when it returns EINVAL
here.

>
>I ask because I experience an unexplainable 'hickup' behavior where the odd 
>request which usually triggers an instantaneous response takes up to 30secs 
>until a response is seen on the client in a local and clean net enviroment.

It could be that this exception is preventing a request from being processed,
or there could be some other problem, I don't know.

Jean-Paul



From nimag at rogers.com  Wed Oct  8 18:51:57 2008
From: nimag at rogers.com (Nima Ghanavatian)
Date: Wed, 8 Oct 2008 15:51:57 -0700 (PDT)
Subject: [Twisted-Python] Packet Fragmentation
Message-ID: <515736.1947.qm@web88103.mail.re2.yahoo.com>

Hi,

I'm using TCP to pass large files back and fourth.  So far I've follow and expanded on the twisted code examples for a simple server/client.  
Everything works fine for me until the packets get large enough that fragmentation kicks in.

>From one side, I'm sending packets like so:

class EchoClient(protocol.Protocol):
    def connectionMade(self):
        data = ""
        while len(data) < 10000:
                data=data+'a'
        self.transport.write(data)


and on the receiving end:

def dataReceived(self, data):
    print data


I noticed after multiple iterations the data buffer fills up to the total 10000 bytes, but this takes 3 iterations of dataReceived().  Common sense suggests to have a simple "if len(data) == totalPacketSize" to solve my problem, but I have different sized packets coming in all the time, and can't hardcode this part.

I was wondering if there's any way in Twisted/Python to handle packet fragmentation.  Can I access the last fragment flag in the TCP packet somehow? Or is there a total packet size sent with the packet automatically?
If not, what would be the best way to solve this?

thanks,

Nima
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081008/fde32246/attachment.htm 

From glyph at divmod.com  Wed Oct  8 19:13:18 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 08 Oct 2008 23:13:18 -0000
Subject: [Twisted-Python] Packet Fragmentation
In-Reply-To: <515736.1947.qm@web88103.mail.re2.yahoo.com>
References: <515736.1947.qm@web88103.mail.re2.yahoo.com>
Message-ID: <20081008231318.420.211901639.divmod.xquotient.57@weber.divmod.com>


On 10:51 pm, nimag at rogers.com wrote:
>I was wondering if there's any way in Twisted/Python to handle packet 
>fragmentation.  Can I access the last fragment flag in the TCP packet 
>somehow? Or is there a total packet size sent with the packet 
>automatically?
>If not, what would be the best way to solve this?

What you're dealing with here is not packet fragmentation.  TCP packet 
fragmentation is a very specific phenomenon that occurs at a lower level 
than Twisted (and your application).

When you send a large message over a TCP stream, it can get broken up 
into multiple segments.  That's not the same as an individual packet 
getting fragmented.  There's no way to re-assemble the message to 
discover the original boundaries of the "write" call that you used to 
emit it.

In other words, your data stream needs to have message boundaries in it. 
TCP, at the application level, is a stream of octets, *not* a sequence 
of packets.

There are numerous examples of this in Twisted; for example, 
twisted.protocols.basic includes NetstringReceiver, LineReceiver and 
(various subclasses of) IntNStringReceiver, each of which is a different 
strategy for breaking up a TCP stream into a discrete sequence of 
messages.



From bernat at luffy.cx  Thu Oct  9 07:27:51 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Thu, 09 Oct 2008 13:27:51 +0200
Subject: [Twisted-Python] Packet Fragmentation
In-Reply-To: <515736.1947.qm@web88103.mail.re2.yahoo.com> (Nima Ghanavatian's
	message of "Wed, 8 Oct 2008 15:51:57 -0700 (PDT)")
References: <515736.1947.qm@web88103.mail.re2.yahoo.com>
Message-ID: <m363o22eko.fsf@neo.luffy.cx>

OoO En  cette nuit nuageuse du  jeudi 09 octobre 2008,  vers 00:51, Nima
Ghanavatian <nimag at rogers.com> disait?:

> I was wondering if there's any way in Twisted/Python to handle packet
> fragmentation.  Can I access the last fragment flag in the TCP packet somehow?
> Or is there a total packet size sent with the packet automatically?
> If not, what would be the best way to solve this?

You can also use a protocol  that keeps message boundaries like UDP. UDP
is   reliable    and   deliver   messages   in   order    if   used   on
localhost. Otherwise,  there are protocoles like SCTP  that are reliable
and keep message boundaries. However, I think there is no support for it
in Twisted.
-- 
BOFH excuse #93:
Feature not yet implimented



From exarkun at divmod.com  Thu Oct  9 08:30:14 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 9 Oct 2008 08:30:14 -0400
Subject: [Twisted-Python] Packet Fragmentation
In-Reply-To: <m363o22eko.fsf@neo.luffy.cx>
Message-ID: <20081009123014.29191.863966049.divmod.quotient.36156@ohm>

On Thu, 09 Oct 2008 13:27:51 +0200, Vincent Bernat <bernat at luffy.cx> wrote:
>OoO En  cette nuit nuageuse du  jeudi 09 octobre 2008,  vers 00:51, Nima
>Ghanavatian <nimag at rogers.com> disait?:
>
>> I was wondering if there's any way in Twisted/Python to handle packet
>> fragmentation.  Can I access the last fragment flag in the TCP packet somehow?
>> Or is there a total packet size sent with the packet automatically?
>> If not, what would be the best way to solve this?
>
>You can also use a protocol  that keeps message boundaries like UDP. UDP
>is   reliable    and   deliver   messages   in   order    if   used   on
>localhost.

UDP is *not* reliable and will *not* necessarily deliver messages in order,
*even* if used on localhost.  Please refer to Glyph's post.

Jean-Paul



From fantix.king at gmail.com  Thu Oct  9 09:16:48 2008
From: fantix.king at gmail.com (Fantix King)
Date: Thu, 9 Oct 2008 21:16:48 +0800
Subject: [Twisted-Python] Translation for the Documentation
Message-ID: <5d0e41c60810090616t7ab2db61oae4d1697709f52c4@mail.gmail.com>

Hi,

Just new to here, but been using Twisted for one year. Some of the articles
in the documentation is really good. So I started some work to translate the
Core Documentation into my main language.

The project was hosted on googlecode, but obviously it is not the best place
to deal with translation works, especially team work. So I want to move it
to launchpad. Problem here is the launchpad people prefer a whole twisted
project other than seperate translation projects. So here I am to request
some help, mostly about turning on the translation module on launchpad for
the project of twisted. Also, RFC on the method I intend to deal with the
translation work.

Here's some rough idea about translating the documentation. Now that
launchpad uses PO format for translation, thus PO would be the better way. I
found a tool named 'po4a' a really good stuff. It can "gettextize" the
original xhtml document (aka master doc) to generate the POT file needed by
launchpad, and 'translate' the master doc with PO files which are translated
though launchpad. Meanwhile, po4a is pretty configurable and easy to use.


Best regards,
Fantix.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081009/623c8a47/attachment.htm 

From bernat at luffy.cx  Thu Oct  9 10:37:35 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Thu, 09 Oct 2008 16:37:35 +0200
Subject: [Twisted-Python] Packet Fragmentation
In-Reply-To: <20081009123014.29191.863966049.divmod.quotient.36156@ohm>
	(Jean-Paul Calderone's message of "Thu, 9 Oct 2008 08:30:14 -0400")
References: <20081009123014.29191.863966049.divmod.quotient.36156@ohm>
Message-ID: <m31vyp3kcw.fsf@neo.luffy.cx>

OoO  En ce d?but  d'apr?s-midi nuageux  du jeudi  09 octobre  2008, vers
14:30, Jean-Paul Calderone <exarkun at divmod.com> disait?:

>> You can also use a protocol  that keeps message boundaries like UDP. UDP
>> is   reliable    and   deliver   messages   in   order    if   used   on
>> localhost.

> UDP is *not* reliable and will *not* necessarily deliver messages in order,
> *even* if used on localhost.  Please refer to Glyph's post.

Sorry for the bad information. I have checked again and in fact, this is
datagram unix socket that have those properties (on most Unixes).
-- 
BOFH excuse #225: It's those computer people in X {city of world}.  They
keep stuffing things up.



From zmola at acm.org  Thu Oct  9 10:44:21 2008
From: zmola at acm.org (Carl Zmola)
Date: Thu, 09 Oct 2008 10:44:21 -0400
Subject: [Twisted-Python] Packet Fragmentation
In-Reply-To: <20081009123014.29191.863966049.divmod.quotient.36156@ohm>
References: <20081009123014.29191.863966049.divmod.quotient.36156@ohm>
Message-ID: <20081009104421.7jvecd8c84ogkw88@webmail.zmolac.4java.ca>

Nima,

The easiest way to do what you want is to put a count at the beginning  
of your message and read that many bytes. The protocols that Glyph  
suggested do this.

With TCP, you are responsible for keeping boundaries in the message.   
TCP delivers a reliable two way STREAM of data.  It hides all the  
packets and handshakes from the programmer.  Since it is reliable, the  
easiest way to make messages is to add a count to the beginning of  
your message.


Carl

Quoting Jean-Paul Calderone <exarkun at divmod.com>:

> On Thu, 09 Oct 2008 13:27:51 +0200, Vincent Bernat <bernat at luffy.cx> wrote:
>> OoO En  cette nuit nuageuse du  jeudi 09 octobre 2008,  vers 00:51, Nima
>> Ghanavatian <nimag at rogers.com> disait :
>>
>>> I was wondering if there's any way in Twisted/Python to handle packet
>>> fragmentation.  Can I access the last fragment flag in the TCP   
>>> packet somehow?
>>> Or is there a total packet size sent with the packet automatically?
>>> If not, what would be the best way to solve this?
>>
>> You can also use a protocol  that keeps message boundaries like UDP. UDP
>> is   reliable    and   deliver   messages   in   order    if   used   on
>> localhost.
>
> UDP is *not* reliable and will *not* necessarily deliver messages in order,
> *even* if used on localhost.  Please refer to Glyph's post.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From nimag at rogers.com  Thu Oct  9 12:25:10 2008
From: nimag at rogers.com (Nima Ghanavatian)
Date: Thu, 9 Oct 2008 09:25:10 -0700 (PDT)
Subject: [Twisted-Python] Packet Fragmentation
Message-ID: <125448.90897.qm@web88102.mail.re2.yahoo.com>

Thanks for the detailed information!

I tried it out with LineReceiver and everything worked great!


-Nima


----- Original Message ----
From: "glyph at divmod.com" <glyph at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, October 8, 2008 4:13:18 PM
Subject: Re: [Twisted-Python] Packet Fragmentation


On 10:51 pm, nimag at rogers.com wrote:
>I was wondering if there's any way in Twisted/Python to handle packet 
>fragmentation.  Can I access the last fragment flag in the TCP packet 
>somehow? Or is there a total packet size sent with the packet 
>automatically?
>If not, what would be the best way to solve this?

What you're dealing with here is not packet fragmentation.  TCP packet 
fragmentation is a very specific phenomenon that occurs at a lower level 
than Twisted (and your application).

When you send a large message over a TCP stream, it can get broken up 
into multiple segments.  That's not the same as an individual packet 
getting fragmented.  There's no way to re-assemble the message to 
discover the original boundaries of the "write" call that you used to 
emit it.

In other words, your data stream needs to have message boundaries in it. 
TCP, at the application level, is a stream of octets, *not* a sequence 
of packets.

There are numerous examples of this in Twisted; for example, 
twisted.protocols.basic includes NetstringReceiver, LineReceiver and 
(various subclasses of) IntNStringReceiver, each of which is a different 
strategy for breaking up a TCP stream into a discrete sequence of 
messages.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081009/4485ce1c/attachment.htm 

From kehander at myrealbox.com  Thu Oct  9 14:36:49 2008
From: kehander at myrealbox.com (Kevin Anderson)
Date: Thu, 09 Oct 2008 14:36:49 -0400
Subject: [Twisted-Python] Another tutorial?
Message-ID: <1223577409.80007a9ckehander@myrealbox.com>

Greetings,

Stepping through the mailing list archives a little, I can see that I am not the first who has read about Twisted and has gained some appreciation of how powerful and useful it is, but finds the tutorial documentation to be kind of lacking.

I would take a stab at trying to improve the finger tutorial myself (that is, to explain the rationale behind some of the decisions and why they're useful), but is someone already in the process of doing so?

(By the way, is there some way to submit patches for the documentation?  I still see depreciated references to mktap, particularly in the "Using Twisted Web" howto, even though there are already old tickets about removing references to it.)

-K




From exarkun at divmod.com  Thu Oct  9 14:53:22 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 9 Oct 2008 14:53:22 -0400
Subject: [Twisted-Python] Another tutorial?
In-Reply-To: <1223577409.80007a9ckehander@myrealbox.com>
Message-ID: <20081009185322.29191.1660826216.divmod.quotient.36276@ohm>

On Thu, 09 Oct 2008 14:36:49 -0400, Kevin Anderson <kehander at myrealbox.com> wrote:
>Greetings,
>
>Stepping through the mailing list archives a little, I can see that I am not the first who has read about Twisted and has gained some appreciation of how powerful and useful it is, but finds the tutorial documentation to be kind of lacking.
>
>I would take a stab at trying to improve the finger tutorial myself (that is, to explain the rationale behind some of the decisions and why they're useful), but is someone already in the process of doing so?
>
>(By the way, is there some way to submit patches for the documentation?  I still see depreciated references to mktap, particularly in the "Using Twisted Web" howto, even though there are already old tickets about removing references to it.)

We use the same issue tracker for code and documentation issues.  A lot of
the documentation issues have the keyword "documentation".  You can do a
query based on this.  For example:

  http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&keywords=~documentation&order=priority

If you want to fix something for which there is already a ticket, attach
a patch to the ticket, set the owner to no one, and add the "review"
keyword.

You should also take a look at <http://twistedmatrix.com/trac/wiki/TwistedDevelopment>.

You might also want to drop by IRC and discuss what you have in mind.

Jean-Paul



From lists at collab.nl  Thu Oct  9 15:01:20 2008
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Thu, 9 Oct 2008 20:01:20 +0100
Subject: [Twisted-Python] Another tutorial?
In-Reply-To: <1223577409.80007a9ckehander@myrealbox.com>
References: <1223577409.80007a9ckehander@myrealbox.com>
Message-ID: <C8654E76-5763-44AE-A6AC-ED2A7677D4FE@collab.nl>

Hi Kevin,

> I would take a stab at trying to improve the finger tutorial myself  
> (that is, to explain the rationale behind some of the decisions and  
> why they're useful), but is someone already in the process of doing  
> so?

There have been suggestions, see:

http://twistedmatrix.com/trac/ticket/2281
http://twistedmatrix.com/trac/ticket/2110
http://twistedmatrix.com/trac/ticket/626
http://twistedmatrix.com/trac/ticket/532

> (By the way, is there some way to submit patches for the  
> documentation?  I still see depreciated references to mktap,  
> particularly in the "Using Twisted Web" howto, even though there are  
> already old tickets about removing references to it.)

See:

http://twistedmatrix.com/trac/ticket/3393
http://twistedmatrix.com/trac/ticket/3247
http://twistedmatrix.com/trac/ticket/3246

Feel free to steal those tickets from me. If you're going to provide  
patches, make sure to read http://twistedmatrix.com/trac/wiki/TwistedDevelopment
and http://twistedmatrix.com/trac/wiki/TwistedDevelopment#Policies

Cheers,

Thijs
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20081009/fad31fd9/attachment.pgp 

From fantix.king at gmail.com  Thu Oct  9 23:41:39 2008
From: fantix.king at gmail.com (Fantix King)
Date: Fri, 10 Oct 2008 11:41:39 +0800
Subject: [Twisted-Python] Re: Translation for the Documentation
In-Reply-To: <5d0e41c60810090616t7ab2db61oae4d1697709f52c4@mail.gmail.com>
References: <5d0e41c60810090616t7ab2db61oae4d1697709f52c4@mail.gmail.com>
Message-ID: <5d0e41c60810092041tc4cbed8waa31dc3f1773927d@mail.gmail.com>

>
> So here I am to request some help, mostly about turning on the translation
> module on launchpad for the project of twisted.
>

Here's the howto to do this:
https://help.launchpad.net/Translations/YourProject#Getting
started

Much thanks!

BR,
Fantix.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081010/8e0af9fd/attachment.htm 

From wthie at thiengineering.ch  Fri Oct 10 06:07:31 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Fri, 10 Oct 2008 12:07:31 +0200
Subject: [Twisted-Python] Socket error 22,
	Invalid Argument in twisted/internet/tcp.py
In-Reply-To: <20081008175901.29191.435977663.divmod.quotient.35741@ohm>
References: <20081008175901.29191.435977663.divmod.quotient.35741@ohm>
Message-ID: <48EF2963.10501@thiengineering.ch>

>> Is a try/except with a normalized answer in the embracing function in 
>> twisted/internet/tcp.py a possible cure?
> 
> You mean in the implementation of getHost()?  Maybe, maybe not.  I'd like
> to understand what OpenBSD thinks it is telling us when it returns EINVAL
> here.

According to several 10 Gig of logfiles the error occurs in all kind of
situations be it POST or GET and always with the same traceback. What I
also see is that errors are more frequent when loads are higher, which
leads me to the conclusion that this might be a resource dependency
specially the fd count per process which we currently have at 8192 as I
already suspected in our previous discussion end of April.

I agree with you that my test script is not exactly the same situation
and the test you sent (just for the sake of completeness) me was 
inconclusive:

---- Paul's code ------------------------------------------------------
I wonder if OpenBSD gives back EINVAL for getsockname(2) when the peer
has done a shutdown of the socket.  Can you tell me what this program does?

    from socket import socket
    port = socket()
    port.bind(('', 0))
    port.listen(1)
    client = socket()
    client.setblocking(False)
    client.connect_ex(port.getsockname())
    server, clientAddr = port.accept()
    print 'Before close', server.getsockname()
    client.close()
    print 'After close', server.getsockname()

If it finishes without error, try it with a time.sleep(5) before the
final line.
---- end of Paul's code ------------------------------------------------

After a lot of googling there seems to be a possible onset of the 
problem dating back to 2006 shortly before the 4.3 release. There are 
other users reporting similar 'hickups' I experience on SSH and FTP, but 
none of those reports actually lead to a fix probably because everybody 
is used to a 'slow login', a typein hickup or a failed ftp.

One might speculate that this could be a hardware related error but us 
having several servers with very different HW under similar loads and 
observing those errors it might be a race condition in the kernel driver.

Also odd enough that the man pages for OpenBSD are the only one among 
the **xes who do not mention EINVAL as a possible return value but in 
fact do return it.

I'll try to file a bug with OpenBSD but doubt that it will get much 
attention being so impossible to trigger it.

Does somebody which is more fit on TCP/IP have an additional idea how to 
trigger such a behavior as described in my previous posts. Traceback 
below for completeness

Thxs, Werner

Running on twisted 2.5 OpenBSD I see the following traceback in the logs 
every twenty minutes with up to 200 athena/LivePages connected:

         Traceback (most recent call last):
         --- <exception caught here> ---
File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/selectreactor.py", 
line 148, in _doReadOrWrite
             why = getattr(selectable, method)()

File "/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", 
line 362, in doRead
             return self.protocol.dataReceived(data)

File 
"/usr/local/lib/python2.5/site-packages/twisted/protocols/basic.py", 
line 233, in dataReceived
             why = self.lineReceived(line)

File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 
1069, in lineReceived
             self.allContentReceived()

File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 
1110, in allContentReceived
             req.requestReceived(command, path, version)

File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 
603, in requestReceived
            self.host = self.channel.transport.getHost()

File "/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", 
line 672, in getHost return address.IPv4Address('TCP', 
*(self.socket.getsockname() + ('INET',)))
           File "<string>", line 1, in getsockname

         socket.error: (22, 'Invalid argument')







From johnaherne at rocs.co.uk  Fri Oct 10 06:21:57 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Fri, 10 Oct 2008 11:21:57 +0100
Subject: [Twisted-Python] Using deferreds when writing across unreliable
	network
Message-ID: <faf2d7810810100321i4d1737f7jcc7060fcc25e4266@mail.gmail.com>

I have been trying out twisted(2.5 for python 2.4 XPSP2) over the past few
weeks and have some code running connecting with some mobile devices over
GPRS. It works. But I am having problems with deferreds - which I find
tricky to understand.

I have setup a tcpserver which the mobile devices connect to and I send
answers back and occasionally unsolicited messages out.

I have made an assumption that I should use a defer to write back across the
network. Maybe I am wrong.

I have a function in which I set up the transport.write to send a message
out. This I make a deferred and return the deferred and add my callBack and
errBack functions. I can see them when I print out the callbacks so I know
they are there.

As far as I can see from my logs, the deferred runs but neither the callback
nor the errback are fired. Possibly an error occurs that stops them but I
have not yet found a way to pin this down. I see there is a setDebugging
option but I have not yet worked out how I would use this.

So before I start trying any more incorrect assumptions, what I would like
to confirm is that I should expect my callback or errback functions to be
called automatically when my deferred has executed and returned.

If successful, it would return fairly promptly. If it fails it could take a
number of minutes to fail. But that is another problem.

So should my callback or errback fire without me having to initiate any
action other than setting up the deferred. And should I be using a deferred
at all for this situation.

If I know that the basis of what I am doing is correct and I am still having
problems I can try and put together a small bit of code that reproduces the
problem on the assumption that my code is probably wrong.

Thanks for any pointers. I'm afraid that everytime I read the documentation
on deferreds and go through the examples on using them I come to different
conclusions on what I should be doing. So any help would be much
appreciated.

One example I looked at was the getPage example. Apart from doing a read it
seems to be much along the lines of what I want to do. I am writing using
straight TCP rather than HTTP. But that example fires the callback and
errback without any problems. So it makes me think that my deferreds have
something wrong with them.


John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081010/8b8bbe33/attachment.htm 

From mg at daimi.au.dk  Fri Oct 10 07:23:46 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Fri, 10 Oct 2008 13:23:46 +0200
Subject: [Twisted-Python] Re: Using deferreds when writing across unreliable
	network
In-Reply-To: <faf2d7810810100321i4d1737f7jcc7060fcc25e4266@mail.gmail.com>
	(John Aherne's message of "Fri\, 10 Oct 2008 11\:21\:57 +0100")
References: <faf2d7810810100321i4d1737f7jcc7060fcc25e4266@mail.gmail.com>
Message-ID: <w1bmyhc7kxp.fsf@thyra02.daimi.au.dk>

"John Aherne" <johnaherne at rocs.co.uk> writes:

Hi John

I have no concrete solution to what you describe, but I can try and
explain how Deferreds work.

> So should my callback or errback fire without me having to initiate
> any action other than setting up the deferred. And should I be using
> a deferred at all for this situation.

First, a Deferred is an amazingly powerful concept, but the
implementation is surpricingly simple. I once posted a simple
explaination for my own project:

  http://article.gmane.org/gmane.comp.cryptography.viff.devel/26

The basic idea is that a Deferred is a container for event handling
functions, called callbacks in Twisted. Python has function pointers,
so it is easy to make such a class:

  class MiniDeferred:
      def __init__(self):
          self.callbacks = []
          self.value = None

      def addCallback(self, func, *extra_args):
          self.callbacks.append((func, extra_args))

      def callback(self, initial_value):
          self.value = initial_value
          for func, extra_args in self.callbacks:
              self.value = func(self.value, *extra_args)
          return self.value

      def __str__(self):
          if self.value is None:
              return "MiniDeferred (no value yet)"
          else:
              return "MiniDeferred (value: %s)" % (self.value,)

This class skips the error handling (errbacks), but I believe it
illustrates the core ideas of a Deferred. You can use it like this:

  >>> x = MiniDeferred()
  >>> print x
  MiniDeferred (no value yet)
  >>> x.addCallback(lambda value: value**3)
  >>> x.callback(-3)
  >>> print x
  MiniDeferred (value: -27)

The crucial thing is that "someone" or "something" must call the
callback method on your Deferred. The general rule to follow is that
it is the code that creates a Deferrred which has the reponsibility of
calling the callback method at the correct time.

So when you use the getPage function you get a Deferred back. Behind
the scenes the getPage function has setup things in such a way that
the callback method of the returned Deferred is called when the page
has arrived -- you must not invole callback yourself in this case.

But if you create a Deferred yourself, then it is up to you to make a
call to the callback method when ready.

And example could be this mini implementation of the DeferredList
class:

  class MiniDeferredList(MiniDeferred):
      def __init__(self, deferreds):
          MiniDeferred.__init__(self)
          self.results = [None] * len(deferreds)
          self.missing_results = len(deferreds)
          for index, deferred in enumerate(deferreds):
              deferred.addCallback(self._callback_fired, index)

      def _callback_fired(self, result, index):
           self.results[index] = result
           self.missing_results -= 1
           if self.missing_results == 0:
               self.callback(self.results)
           return result

Here the _callback_fired method invokes the callback method when all
deferreds have fired.

I hope this helps a bit -- it helped me to look at the implementation
in defer.py and see that it was less scary than I had imagined :-)


-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multiparty Computation) to Python. See: http://viff.dk/.



From johnaherne at rocs.co.uk  Fri Oct 10 08:00:10 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Fri, 10 Oct 2008 13:00:10 +0100
Subject: [Twisted-Python] Using deferreds when writing across unreliable
	network
Message-ID: <faf2d7810810100500k5761c9a4s8671aa8b9e920054@mail.gmail.com>

> I have no concrete solution to what you describe, but I can try and
> explain how Deferreds work.
>
> The crucial thing is that "someone" or "something" must call the
> callback method on your Deferred. The general rule to follow is that
> it is the code that creates a Deferrred which has the reponsibility of
> calling the callback method at the correct time.
>
> So when you use the getPage function you get a Deferred back. Behind
> the scenes the getPage function has setup things in such a way that
> the callback method of the returned Deferred is called when the page
> has arrived -- you must not invole callback yourself in this case.
>
> But if you create a Deferred yourself, then it is up to you to make a
> call to the callback method when ready.
>
>
> I hope this helps a bit -- it helped me to look at the implementation
> in defer.py and see that it was less scary than I had imagined :-)
>
>
> --
> Martin Geisler
>

Martin

Thanks for the reply.

That does clarify that I need to fire off my own deferreds.

The problem it leaves me at the moment is:

How do I tell when my transport.write has completed. The ACKs for my
messages happen at the TCP level. Does this mean that for writes and reads I
have to work at the application level to register when the write has been
successful and fire my callback then.

By the way I did find your example, but I could not reconcile why some
deferred examples had 'automatic' callbacks and other fired their own.

Yes. I have looked through the defer.py code to see what was going on. It is
certainly well laid out and easy to follow - just the basic concept needed
clearing up.

Thanks

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081010/93b8c8c7/attachment.htm 

From mg at daimi.au.dk  Fri Oct 10 08:32:09 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Fri, 10 Oct 2008 14:32:09 +0200
Subject: [Twisted-Python] Re: Using deferreds when writing across unreliable
	network
In-Reply-To: <faf2d7810810100500k5761c9a4s8671aa8b9e920054@mail.gmail.com>
	(John Aherne's message of "Fri\, 10 Oct 2008 13\:00\:10 +0100")
References: <faf2d7810810100500k5761c9a4s8671aa8b9e920054@mail.gmail.com>
Message-ID: <w1bej2o7hrq.fsf@thyra02.daimi.au.dk>

"John Aherne" <johnaherne at rocs.co.uk> writes:

> Martin
>
> Thanks for the reply.
>
> That does clarify that I need to fire off my own deferreds.

Excellent! :-)

> The problem it leaves me at the moment is:
>
> How do I tell when my transport.write has completed. The ACKs for my
> messages happen at the TCP level. Does this mean that for writes and
> reads I have to work at the application level to register when the
> write has been successful and fire my callback then.

I think so -- you wont be told when the actual bytes have been pushed
onto the network, nor when they have arrived succesfully at their
destination. You have to add such logic yourself, maybe by having the
recepient send back a confirmation.

So one way to structure this is to let the code that calls
transport.write return a Deferred, call it d. Before returning it, the
code stores d in a well-known place, something like

  transport.write(...)
  d = Deferred()
  outstanding requests[some_id] = d
  return d

The code that handles incoming data will then have to recognize the
confirmation and will invoke the callback method on d:

  def dataReceived(self, data):
      id, payload = unpack(data)
      d = outstanding_requests[id]
      d.callback(payload)

This is sort of how my code works in the VIFF project.

> By the way I did find your example, but I could not reconcile why
> some deferred examples had 'automatic' callbacks and other fired
> their own.

That is because of the different ways they are used: Defered is the
basic building block, but DeferredList combines several Deferreds into
one.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multiparty Computation) to Python. See: http://viff.dk/.



From johnaherne at rocs.co.uk  Fri Oct 10 08:48:21 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Fri, 10 Oct 2008 13:48:21 +0100
Subject: [Twisted-Python] Using deferreds when writing across unreliable
	network
Message-ID: <faf2d7810810100548w4b49124fo63a45633688d5be1@mail.gmail.com>

I think so -- you wont be told when the actual bytes have been pushed
onto the network, nor when they have arrived succesfully at their
destination. You have to add such logic yourself, maybe by having the
recepient send back a confirmation.

So one way to structure this is to let the code that calls
transport.write return a Deferred, call it d. Before returning it, the
code stores d in a well-known place, something like

 transport.write(...)
 d = Deferred()
 outstanding requests[some_id] = d
 return d

The code that handles incoming data will then have to recognize the
confirmation and will invoke the callback method on d:

 def dataReceived(self, data):
     id, payload = unpack(data)
     d = outstanding_requests[id]
     d.callback(payload)

This is sort of how my code works in the VIFF project.

> By the way I did find your example, but I could not reconcile why
> some deferred examples had 'automatic' callbacks and other fired
> their own.

That is because of the different ways they are used: Defered is the
basic building block, but DeferredList combines several Deferreds into
one.

Martin

Thankyou very much for your replies.

I have a feeling that I now know what I am doing or going to do.

I also think your min-deferred example will be very useful.

Thanks once again.

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081010/71c0f76d/attachment.htm 

From shweta3230 at gmail.com  Fri Oct 10 12:11:22 2008
From: shweta3230 at gmail.com (shweta mani)
Date: Fri, 10 Oct 2008 21:41:22 +0530
Subject: [Twisted-Python] Re: DOUBTS PLEASE SOLVE
In-Reply-To: <d13e157d0810030843t58f4d22do7618c62e01c193fc@mail.gmail.com>
References: <d13e157d0809300854n6799f385l87d851c096befc7d@mail.gmail.com>
	<20080930160428.29191.46084701.divmod.quotient.32247@ohm>
	<d13e157d0810012310x45557d12o5682ce7ffafa7628@mail.gmail.com>
	<1222963122.12900.40.camel@localhost.localdomain>
	<d13e157d0810030843t58f4d22do7618c62e01c193fc@mail.gmail.com>
Message-ID: <d13e157d0810100911u3829ba7em33e7449f98acfad@mail.gmail.com>

hi folks
i need to execute a shell script file through SSH twisted or paramiko. if it
is a normal file then directly with the command  sh <filename>.sh it is
getting executed.            self.conn.sendRequest(self, 'exec',
common.NS(sh test1.sh), wantReply = 1)
but if a shell scripts asks for user input, this particular way does not
wait for user input. it just print the echo part .
is there any way so that interactive type of scripts can be executed in
Paramiko or Twisted Conch in a windows machine (remote login in a unix
machine through Paramiko SSH or Twisted)

i did try with another way in Paramiko which helps in opening a remote
window by creating an instance of SSHClient and invoking the method
invoke_shell(with some parametes) but remote shell window is not opening.
the method specifies starts a terminal shell window in SSH server.
i am forwarding the code

On Fri, Oct 3, 2008 at 9:13 PM, shweta mani <shweta3230 at gmail.com> wrote:

>  hi all it really helped.
>
>   On Thu, Oct 2, 2008 at 9:28 PM, George Pauly <george at ringdevelopment.com
> > wrote:
>
>> Would 'ls -l -R' do the trick?
>>
>> -George
>>
>> On Thu, 2008-10-02 at 11:40 +0530, shweta mani wrote:
>>
>> > hi all i got the solution of listing all ls -l files in a listbox .
>> > Next problem is to use recurrsively ls -l command again if a user
>> > selects a directory. Can we use multiple in Linux commands within a
>> > program withoy using pipe. i am forwarding the code. i need to use ls
>> > -l command dependng on whether he chooses a directory.
>> >
>> > ..........
>> >
>> >         d = self.conn.sendRequest(self, 'exec', common.NS('ls -l'),
>> > wantReply = 1)
>> --
>> George Pauly
>> Ring Development
>> www.ringdevelopment.com
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081010/8e028caa/attachment.htm 

From godson.g at gmail.com  Sat Oct 11 11:12:38 2008
From: godson.g at gmail.com (Godson Gera)
Date: Sat, 11 Oct 2008 20:42:38 +0530
Subject: [Twisted-Python] ANN: starpy-1.0.0a13
Message-ID: <f9822b400810110812q32cbfb1fhf8cd2d62c7f1cbf9@mail.gmail.com>

Hi All,

         I am happy to announce new release of starpy (Asterisk protocols
for Twisted http://starpy.sf.net ) on behalf of starpy team.

         starpy-1.0.0a13 can be downloaded from here
https://sourceforge.net/project/showfiles.php?group_id=164040

This release contains addition of many manager commands to manager API.
Following is a list of newly added commands.


   1. agentLogoff
   2. dbGet
   3. dbPut
   4. extensionState
   5. getConfig
   6. meetmeMute
   7. meetmeUnmute
   8. park
   9. pauseMonitor
   10. playDTMF
   11. queuePause
   12. sipShowPeers
   13. unpauseMonitor
   14. updateConfig (read AMI documentation before using this )
   15. userEvent
   16. waitEvent
   17. zapDNDoff
   18. zapDNDon
   19. zapDialOffhook
   20. zapHangup
   21. zapRestart
   22. zapShowChannels
   23. zapTransfer


   - Those are all the new manager Actions that were added. Queues action is
   there but it won't work cause AMI returns improperly formatted lines, same
   case with IAXPeers action, as AgentCallbackLogin is deprecated and is not
   functioning properly it was not included.
   - Bug fix in queueStatus manager API, in collectDeferred argument
   'QueueStatusEnd' is changed to 'QueueStatusComplete'. Now the deferred fires
   properly.
   - Bug fix in fastagi playback (not a standard AGI command, was created by
   Mike as a workaround for buggy streamFile command back in Asterisk 1.2 days.
   Now streamFile is working properly so you might not be using this playback
   ).


Those are all the changes that are involved in this release if you find any
bugs or hope for any new features let me know.

Have fun with starpy,
Godson Gera
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081011/f70c6794/attachment.htm 

From exarkun at twistedmatrix.com  Sun Oct 12 00:05:09 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Oct 2008 04:05:09 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1223784309.4.1121086479@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081012/73ad6e3a/attachment.htm 

From shweta3230 at gmail.com  Sun Oct 12 01:04:17 2008
From: shweta3230 at gmail.com (shweta mani)
Date: Sun, 12 Oct 2008 10:34:17 +0530
Subject: [Twisted-Python] what to do!
Message-ID: <d13e157d0810112204i45699c56td4b3f19c61053613@mail.gmail.com>

i need to execute a shell script file through SSH twisted or paramiko. if it
is a normal file then directly with the command  sh <filename>.sh it is
getting executed.            self.conn.sendRequest(self, 'exec',
common.NS(sh test1.sh), wantReply = 1)
but if a shell scripts asks for user input, this particular way does not
wait for user input. it just print the echo part .
is there any way so that interactive type of scripts can be executed in
Paramiko or Twisted Conch in a windows machine (remote login in a unix
machine through Paramiko SSH or Twisted)
i did try with another way in Paramiko which helps in opening a remote
window by creating an instance of SSHClient and invoking the method
invoke_shell(with some parametes) but remote shell window is not opening.the
method specifies starts a terminal shell window in SSH server.
To my interpretation it is somewaht opening a terminal window like putty.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081012/5be5d3f9/attachment.htm 

From pjacobi.de at googlemail.com  Mon Oct 13 10:49:03 2008
From: pjacobi.de at googlemail.com (Peter Jacobi)
Date: Mon, 13 Oct 2008 16:49:03 +0200
Subject: [Twisted-Python] Basic question about the architecture of
	twisted.internet
Message-ID: <2dcdf68e0810130749n1e45b108y5b6cadcdced2a710@mail.gmail.com>

Dear All,


I've just started diving into Twisted, read the docs, run the samples, wrote
some tests, but:

I'm rather clueless about some architectural decisions in Twisted Core, and
perhaps somebody can clarify whether these are just hictorical accidents or
serve a purpose I didn't get yet.

Specifically I don't understand why the Factory classes in internet/protocols.py
rely on class variables instead of instance variables for, most
importantly "protocol",
but also for "noisy" and "numPorts"?

Won't this introduce an unwanted coupling between different instances
of Factory,
and effectively make the creation of more than instance of any Factory-derived
class pointless (or even incorrect). Sort of a singleton pattern relying on the
trust principle?


Regards,
Peter



From exarkun at divmod.com  Mon Oct 13 10:53:27 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 13 Oct 2008 10:53:27 -0400
Subject: [Twisted-Python] Basic question about the architecture of
	twisted.internet
In-Reply-To: <2dcdf68e0810130749n1e45b108y5b6cadcdced2a710@mail.gmail.com>
Message-ID: <20081013145327.29191.2067519399.divmod.quotient.38100@ohm>

On Mon, 13 Oct 2008 16:49:03 +0200, Peter Jacobi <pjacobi.de at googlemail.com> wrote:
>Dear All,
>
>
>I've just started diving into Twisted, read the docs, run the samples, wrote
>some tests, but:
>
>I'm rather clueless about some architectural decisions in Twisted Core, and
>perhaps somebody can clarify whether these are just hictorical accidents or
>serve a purpose I didn't get yet.
>
>Specifically I don't understand why the Factory classes in internet/protocols.py
>rely on class variables instead of instance variables for, most
>importantly "protocol",
>but also for "noisy" and "numPorts"?
>
>Won't this introduce an unwanted coupling between different instances
>of Factory,
>and effectively make the creation of more than instance of any Factory-derived
>class pointless (or even incorrect). Sort of a singleton pattern relying on the
>trust principle?
>

Factories don't "rely" on class *attributes*.  Attribute lookup on instances
in Python first checks the instance dictionary then the class dictionary.  If
an attribute is found on the instance, then the class is ignored.  So when
you are setting attributes such as `noisy? or `protocol?, if you want the
change to only modify the behavior of one instance, then set the attribute
on an instance, not on the class.

Jean-Paul



From exarkun at divmod.com  Mon Oct 13 12:22:43 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 13 Oct 2008 12:22:43 -0400
Subject: [Twisted-Python] what to do!
In-Reply-To: <d13e157d0810112204i45699c56td4b3f19c61053613@mail.gmail.com>
Message-ID: <20081013162243.29191.567174986.divmod.quotient.38134@ohm>

On Sun, 12 Oct 2008 10:34:17 +0530, shweta mani <shweta3230 at gmail.com> wrote:
>i need to execute a shell script file through SSH twisted or paramiko. if it
>is a normal file then directly with the command  sh <filename>.sh it is
>getting executed.            self.conn.sendRequest(self, 'exec',
>common.NS(sh test1.sh), wantReply = 1)
>but if a shell scripts asks for user input, this particular way does not
>wait for user input. it just print the echo part .
>is there any way so that interactive type of scripts can be executed in
>Paramiko or Twisted Conch in a windows machine (remote login in a unix
>machine through Paramiko SSH or Twisted)
>i did try with another way in Paramiko which helps in opening a remote
>window by creating an instance of SSHClient and invoking the method
>invoke_shell(with some parametes) but remote shell window is not opening.the
>method specifies starts a terminal shell window in SSH server.
>To my interpretation it is somewaht opening a terminal window like putty.
>

I'm not sure anyone can understand your question.  I know that I can't.
You might want to try clarifying it, perhaps by sharing a minimal example
of how you've attempted to solve the problem along with a good description
of how that example's behavior differs from the behavior you are trying to
implement.  Also, please don't send me mail off-list, especially copies of
messages you've already sent to the list.

Jean-Paul



From george at ringdevelopment.com  Mon Oct 13 15:00:30 2008
From: george at ringdevelopment.com (George Pauly)
Date: Mon, 13 Oct 2008 15:00:30 -0400
Subject: [Twisted-Python] what to do!
In-Reply-To: <d13e157d0810112204i45699c56td4b3f19c61053613@mail.gmail.com>
References: <d13e157d0810112204i45699c56td4b3f19c61053613@mail.gmail.com>
Message-ID: <1223924430.6887.47.camel@localhost.localdomain>

Shweta,

Might VNC not meet your needs?

We know so little about your situation that any suggestion amounts to
shooting in the dark.

-George

On Sun, 2008-10-12 at 10:34 +0530, shweta mani wrote:
> i need to execute a shell script file through SSH twisted or paramiko.
> if it is a normal file then directly with the command  sh
> <filename>.sh it is getting executed.
> self.conn.sendRequest(self, 'exec', common.NS(sh test1.sh), wantReply
> = 1)
> but if a shell scripts asks for user input, this particular way does
> not wait for user input. it just print the echo part .
> is there any way so that interactive type of scripts can be executed
> in Paramiko or Twisted Conch in a windows machine (remote login in a
> unix machine through Paramiko SSH or Twisted)
> i did try with another way in Paramiko which helps in opening a remote
> window by creating an instance of SSHClient and invoking the method
> invoke_shell(with some parametes) but remote shell window is not
> opening.the method specifies starts a terminal shell window in SSH
> server. 
> To my interpretation it is somewaht opening a terminal window like
> putty.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From pf_moore at yahoo.co.uk  Mon Oct 13 16:12:17 2008
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Mon, 13 Oct 2008 21:12:17 +0100
Subject: [Twisted-Python] Win32 binaries for Python 2.6
Message-ID: <gd0a2i$87n$1@ger.gmane.org>

Does anyone know when Twisted installers for Python 2.6 on Windows are 
likely to be available?

Thanks,
Paul




From glyph at divmod.com  Mon Oct 13 18:49:01 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 13 Oct 2008 22:49:01 -0000
Subject: [Twisted-Python] Win32 binaries for Python 2.6
In-Reply-To: <gd0a2i$87n$1@ger.gmane.org>
References: <gd0a2i$87n$1@ger.gmane.org>
Message-ID: <20081013224901.6400.1491462343.divmod.xquotient.21@weber.divmod.com>


On 08:12 pm, pf_moore at yahoo.co.uk wrote:
>Does anyone know when Twisted installers for Python 2.6 on Windows are 
>likely to be available?

Sometime after a version of Twisted exists which supports Python 2.6. 
Right now, the latest supported version is 2.5.

There are three things that need to happen for a particular Python 
version to be supported:

  * There needs to be a buildbot for that python version.  Right now, the 
only python 2.6 buildbot on 
<http://buildbot.twistedmatrix.com/waterfall> is for ubuntu64; there 
needs to be one for Windows if you want to have an official windows 
installer.

  * The tests actually need to pass under that buildbot, i.e. they need 
to be green.  You can see that this is not the case for our only 2.6 
builder here: 
<http://buildbot.twistedmatrix.com/builders/ubuntu64-python2.6-select/builds/0> 
(although I'm not sure what the deal is with that particular error). 
Luckily, there is probably less work to do for python 2.6 than any other 
Python release in recent memory.

  * We need to do a Twisted release.  Rumour has it that the release 
manager is planning one in the next couple of weeks, but unless a 2.6 
buildbot shows up before then it will not be a supported platform for 
that release.

If you would like to help with some of these, I'm sure we could do a 
little bit of research and provide you with links to specific tickets 
:).



From cayson.z at gmail.com  Mon Oct 13 21:39:21 2008
From: cayson.z at gmail.com (Boern)
Date: Tue, 14 Oct 2008 09:39:21 +0800
Subject: [Twisted-Python] how to make output file include xml declaration in
	nevow web framework?
Message-ID: <be0f6540810131839m36142c9em10e86539ebad6263@mail.gmail.com>

Hi,all:
   I am a newbie for nevow and now I write a wap page ,but the output file
don`t include xml declaration ,eg: <?xml version="1.0" encoding="utf-8"?> .
how to resolve ?   my wap browser need it to  parse the xml context and how
I make output file include xml declaration?

-- 
Boern Parx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081014/cbaeed87/attachment.htm 

From matusis at yahoo.com  Mon Oct 13 22:49:01 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Mon, 13 Oct 2008 19:49:01 -0700
Subject: [Twisted-Python] How to make twistd print to stdout
Message-ID: <04eb01c92da7$6dee9370$49cbba50$@com>

I have an application that is start from a command line by a shell script
that has this:

/usr/local/bin/twistd --no_save --reactor=epoll --pidfile=logs/serv.pid
--logfile=logs/serv.log --python=serv.py

serv.py:

application =
twisted.application.service.Application('serv',uid=config.server_uid,gid=con
fig.server_gid)

my_service = service.MyService()
my_service.setServiceParent(application)

.


In MyService class I have:

def startService(self):
	if bad_config_file:
		#I want to print to stdout here end quit immediately??
		twisted.internet.reactor.callLater(0,
twisted.internet.reactor.stop)


I cannot force twistd to print to stdout after that comment line, probably
because it's daemonized by then. 
print 'bad error' writes it to --logfile=logs/serv.log
I tried sys.stdout/stderr.write('bad error') - it's not written anywhere,
not even to the logfile.
sys.exit('bad error') exits, but does not print anywhere either.

How do I make it print to stdout?
		




From wthie at thiengineering.ch  Tue Oct 14 01:16:18 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 14 Oct 2008 07:16:18 +0200
Subject: [Twisted-Python] Win32 binaries for Python 2.6
In-Reply-To: <gd0a2i$87n$1@ger.gmane.org>
References: <gd0a2i$87n$1@ger.gmane.org>
Message-ID: <48F42B22.9090404@thiengineering.ch>

If you're simply interested in using twisted as a package for 
development then create a file with the name twisted.pth with the 
following single line

'C:\proj\twisted'

in your

'C:\Python26\Lib\site-packages' directory

If you plan to use the twistd script then additionally create a file 
with the name twistd.bat with the content

@echo off
C:\Python26\python.exe C:\proj\twisted\bin\twistd %1 %2 %3 %4 %5 %6 %7 %8 %9

in your

'C:\Python26\Scripts'

assuming that the twistd distribution is hanging out at 'C:\proj\twisted'

For additional scripts do accordingly and make sure that the PATH 
variable contains 'C:\Python26\Scripts'

I rarely install packages into my python distributions these days, one 
exception being some basic binary ones like zope interfaces and the 
win32 extensions and doing all my Python development on MSW with Aptana 
Studio/PyDev and distributing code mostly to OpenBSD or FreeBSD

HTH, Werner

Paul Moore wrote:
> Does anyone know when Twisted installers for Python 2.6 on Windows are 
> likely to be available?
> 
> Thanks,
> Paul
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From manuel at vikingosegundo.de  Tue Oct 14 09:13:20 2008
From: manuel at vikingosegundo.de (Manuel Meyer)
Date: Tue, 14 Oct 2008 16:13:20 +0300
Subject: [Twisted-Python] irc server run by twisted and (probably) django
Message-ID: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>

Hi,

I am new to twisted - so I am not very into it yet.

I want to create a IRC Server that reacts a little bit different  
compared to others:
* only registered users will be able to /list channels and /join them.
* /list only returns channels the user registered
* /join is only apply-able on those channels, too
* /join new-channel won't work
* Registering and channel-creation is done not in IRC but in a  
website, probably driven by django.

Any comment on this is welcomed
* where should I start?
* readings?
* examples?
* existing similar projects?

Thanks, Manuel



From exarkun at divmod.com  Tue Oct 14 12:10:37 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Oct 2008 12:10:37 -0400
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
Message-ID: <20081014161037.29191.858172161.divmod.quotient.38494@ohm>

On Tue, 14 Oct 2008 16:13:20 +0300, Manuel Meyer <manuel at vikingosegundo.de> wrote:
>Hi,
>
>I am new to twisted - so I am not very into it yet.
>
>I want to create a IRC Server that reacts a little bit different  compared 
>to others:
>* only registered users will be able to /list channels and /join them.
>* /list only returns channels the user registered
>* /join is only apply-able on those channels, too
>* /join new-channel won't work
>* Registering and channel-creation is done not in IRC but in a  website, 
>probably driven by django.
>
>Any comment on this is welcomed
>* where should I start?
>* readings?
>* examples?
>* existing similar projects?
>

Twisted includes an implementation of the IRC server protocol.  It's fairly
basic, so it probably will only save you from having to find line delimiters
and split up IRC commands into tokens.  Twisted Words includes a user/group
model, but it's not quite the one you described.  It might be useful for you
to take a look at it, but I don't know if any of the code will be re-usable.

The good news is that nothing in the IRC server protocol implementation will
prevent you from implementing the user/group model you described above.

You can find most of the implementation of the existing IRC server here:

http://twistedmatrix.com/trac/browser/trunk/twisted/words/service.py

There's not really any documentation for it aside from the docstrings.  You
can run the server it implements using `twistd words [options]?.

Jean-Paul



From bernat at luffy.cx  Tue Oct 14 12:13:37 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Tue, 14 Oct 2008 18:13:37 +0200
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de> (Manuel
	Meyer's message of "Tue, 14 Oct 2008 16:13:20 +0300")
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
Message-ID: <m3prm3noi6.fsf@neo.luffy.cx>

OoO En ce  d?but d'apr?s-midi ensoleill? du mardi  14 octobre 2008, vers
15:13, Manuel Meyer <manuel at vikingosegundo.de> disait?:

> I want to create a IRC Server that reacts a little bit different
> compared to others:
> * only registered users will be able to /list channels and /join them.
> * /list only returns channels the user registered
> * /join is only apply-able on those channels, too
> * /join new-channel won't work
> * Registering and channel-creation is done not in IRC but in a
> website, probably driven by django.

Using  Twisted  Web  or  Nevow  will allow  to  tightly  integrate  your
application  and the  web  server. The  "event  loop" of  Django is  not
compatible with Twisted reactor. You  will need some extra stuff to make
your Django application communicate with  your IRC server. One way would
be to just use the database.
-- 
I WILL NOT TEACH OTHERS TO FLY
I WILL NOT TEACH OTHERS TO FLY
I WILL NOT TEACH OTHERS TO FLY
-+- Bart Simpson on chalkboard in episode 9F05



From drew.smathers at gmail.com  Tue Oct 14 13:18:50 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 14 Oct 2008 13:18:50 -0400
Subject: [Twisted-Python] How to make twistd print to stdout
In-Reply-To: <04eb01c92da7$6dee9370$49cbba50$@com>
References: <04eb01c92da7$6dee9370$49cbba50$@com>
Message-ID: <368574aa0810141018n48f567d0t62941fe81acbea1c@mail.gmail.com>

On Mon, Oct 13, 2008 at 10:49 PM, Alec Matusis <matusis at yahoo.com> wrote:
> I have an application that is start from a command line by a shell script
> that has this:
>
> /usr/local/bin/twistd --no_save --reactor=epoll --pidfile=logs/serv.pid
> --logfile=logs/serv.log --python=serv.py
>
> serv.py:
>
> application =
> twisted.application.service.Application('serv',uid=config.server_uid,gid=con
> fig.server_gid)
>
> my_service = service.MyService()
> my_service.setServiceParent(application)
>
> .
>
>
> In MyService class I have:
>
> def startService(self):
>        if bad_config_file:
>                #I want to print to stdout here end quit immediately??
>                twisted.internet.reactor.callLater(0,
> twisted.internet.reactor.stop)
>
>
> I cannot force twistd to print to stdout after that comment line, probably
> because it's daemonized by then.
> print 'bad error' writes it to --logfile=logs/serv.log
> I tried sys.stdout/stderr.write('bad error') - it's not written anywhere,
> not even to the logfile.
> sys.exit('bad error') exits, but does not print anywhere either.
>
> How do I make it print to stdout?
>
>

You want to print to stdout before you become a daemon - in
makeService(), rather than startService(), for example.  A unix daemon
should attach stdin, stdout, stderr to /dev/null.



From pf_moore at yahoo.co.uk  Tue Oct 14 14:58:49 2008
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Tue, 14 Oct 2008 19:58:49 +0100
Subject: [Twisted-Python] Re: Win32 binaries for Python 2.6
In-Reply-To: <20081013224901.6400.1491462343.divmod.xquotient.21@weber.divmod.com>
References: <gd0a2i$87n$1@ger.gmane.org>
	<20081013224901.6400.1491462343.divmod.xquotient.21@weber.divmod.com>
Message-ID: <gd2q4o$2ch$1@ger.gmane.org>

glyph at divmod.com wrote:
> On 08:12 pm, pf_moore at yahoo.co.uk wrote:
>> Does anyone know when Twisted installers for Python 2.6 on Windows are 
>> likely to be available?
> 
> Sometime after a version of Twisted exists which supports Python 2.6. 
> Right now, the latest supported version is 2.5.

Thanks. In many cases, projects "just work" with 2.6, so it's just a 
matter of someone finding time to build the binaries (or me doing it 
myself, if there are no hairy external dependencies, and it builds with 
mingw :-)) Knowing that there are actual issues to resolve, gives me a 
better idea of what to expect.

> If you would like to help with some of these, I'm sure we could do a 
> little bit of research and provide you with links to specific tickets :).

:-) I'm not sure how much help I could be - I wouldn't class myself as a 
heavy Twisted user, and I certainly don't know much about the internals. 
But if I do get a chance, I'll see if there's anything I can look at.

Paul.




From exarkun at divmod.com  Tue Oct 14 15:17:17 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Oct 2008 15:17:17 -0400
Subject: [Twisted-Python] Re: Win32 binaries for Python 2.6
In-Reply-To: <gd2q4o$2ch$1@ger.gmane.org>
Message-ID: <20081014191717.29191.508121037.divmod.quotient.38557@ohm>

On Tue, 14 Oct 2008 19:58:49 +0100, Paul Moore <pf_moore at yahoo.co.uk> wrote:
>glyph at divmod.com wrote:
>>On 08:12 pm, pf_moore at yahoo.co.uk wrote:
>>>Does anyone know when Twisted installers for Python 2.6 on Windows are 
>>>likely to be available?
>>
>>Sometime after a version of Twisted exists which supports Python 2.6. Right 
>>now, the latest supported version is 2.5.
>
>Thanks. In many cases, projects "just work" with 2.6, so it's just a matter 
>of someone finding time to build the binaries (or me doing it myself, if 
>there are no hairy external dependencies, and it builds with mingw :-)) 
>Knowing that there are actual issues to resolve, gives me a better idea of 
>what to expect.
>>If you would like to help with some of these, I'm sure we could do a little 
>>bit of research and provide you with links to specific tickets :).
>
>:-) I'm not sure how much help I could be - I wouldn't class myself as a 
>heavy Twisted user, and I certainly don't know much about the internals. But 
>if I do get a chance, I'll see if there's anything I can look at.
>

The only ticket for a Python 2.6 issue remaining in trunk at HEAD is
<http://twistedmatrix.com/trac/ticket/2605>, I believe, although there
are several other tickets in the Python 2.6 milestone which would be
nice to have, but perhaps are not necessary for a Python 2.6-supporting
release: http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&milestone=Python-2.6

Jean-Paul



From matusis at yahoo.com  Tue Oct 14 18:10:23 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Tue, 14 Oct 2008 15:10:23 -0700
Subject: [Twisted-Python] How to make twistd print to stdout
In-Reply-To: <368574aa0810141018n48f567d0t62941fe81acbea1c@mail.gmail.com>
References: <04eb01c92da7$6dee9370$49cbba50$@com>
	<368574aa0810141018n48f567d0t62941fe81acbea1c@mail.gmail.com>
Message-ID: <02c801c92e49$ad3ee3c0$07bcab40$@com>

> You want to print to stdout before you become a daemon - in
> makeService(), rather than startService(), for example.  A unix daemon
> should attach stdin, stdout, stderr to /dev/null.

I am not sure still how to do it:
When I run 

twistd --python=serv.py --logfile=serv.log

anything that I put in serv.py is executed after the process has already been daemonized: even if I print or sys.stdout on the first line in serv.py file, the output never goes into stdout.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Drew Smathers
> Sent: Tuesday, October 14, 2008 10:19 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] How to make twistd print to stdout
> 
> On Mon, Oct 13, 2008 at 10:49 PM, Alec Matusis <matusis at yahoo.com>
> wrote:
> > I have an application that is start from a command line by a shell
> script
> > that has this:
> >
> > /usr/local/bin/twistd --no_save --reactor=epoll --
> pidfile=logs/serv.pid
> > --logfile=logs/serv.log --python=serv.py
> >
> > serv.py:
> >
> > application =
> >
> twisted.application.service.Application('serv',uid=config.server_uid,gi
> d=con
> > fig.server_gid)
> >
> > my_service = service.MyService()
> > my_service.setServiceParent(application)
> >
> > .
> >
> >
> > In MyService class I have:
> >
> > def startService(self):
> >        if bad_config_file:
> >                #I want to print to stdout here end quit immediately??
> >                twisted.internet.reactor.callLater(0,
> > twisted.internet.reactor.stop)
> >
> >
> > I cannot force twistd to print to stdout after that comment line,
> probably
> > because it's daemonized by then.
> > print 'bad error' writes it to --logfile=logs/serv.log
> > I tried sys.stdout/stderr.write('bad error') - it's not written
> anywhere,
> > not even to the logfile.
> > sys.exit('bad error') exits, but does not print anywhere either.
> >
> > How do I make it print to stdout?
> >
> >
> 
> You want to print to stdout before you become a daemon - in
> makeService(), rather than startService(), for example.  A unix daemon
> should attach stdin, stdout, stderr to /dev/null.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From krokodil at gmail.com  Tue Oct 14 21:14:47 2008
From: krokodil at gmail.com (Vadim Zaliva)
Date: Tue, 14 Oct 2008 18:14:47 -0700
Subject: [Twisted-Python] mystery exception
Message-ID: <3d7addec0810141814l7f8446e5n784a81d80168088e@mail.gmail.com>

I am writing network proxy, based on proxy.py code. I am also using
getPage() and deffered. From time to time I am getting this mystery
exception, the source of which I could not track. Does anybody knows
what could be causing it? I am pretty sure I am not closing any sokets
twice in my code. The code writing 'x' seems weird to me.


      Traceback (most recent call last):
         File "/usr/lib64/python2.5/threading.py", line 460, in __bootstrap
           self.run()
         File "/usr/lib64/python2.5/threading.py", line 440, in run
           self.__target(*self.__args, **self.__kwargs)
       --- <exception caught here> ---
         File "/usr/lib/python2.5/site-packages/twisted/python/threadpool.py",
 line 161, in _worker
           context.call(ctx, function, *args, **kwargs)
         File "/usr/lib/python2.5/site-packages/twisted/python/context.py", li
ne 59, in callWithContext
           return self.currentContext().callWithContext(ctx, func, *args, **kw
)
         File "/usr/lib/python2.5/site-packages/twisted/python/context.py", li
ne 37, in callWithContext
           return func(*args,**kw)
         File "/usr/lib/python2.5/site-packages/twisted/internet/threads.py",
line 29, in _putResultInDeferred
           reactor.callFromThread(deferred.callback, result)
         File "/usr/lib/python2.5/site-packages/twisted/internet/base.py",
line 824, in callFromThread
           self.wakeUp()
         File "/usr/lib/python2.5/site-packages/twisted/internet/base.py",
line 443, in wakeUp
           self.waker.wakeUp()
         File "/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py",
line 138, in wakeUp
           util.untilConcludes(os.write, self.o, 'x')
         File "/usr/lib/python2.5/site-packages/twisted/python/util.py",
line 757, in untilConcludes
           return f(*a, **kw)
       exceptions.OSError: [Errno 32] Broken pipe

My OS is:

Linux xxxx 2.6.23.1-42.fc8 #1 SMP Tue Oct 30 13:18:33 EDT 2007 x86_64
x86_64 x86_64 GNU/Linux

and I am using latest version of Twisted.

Sincerely,
Vadim



From exarkun at divmod.com  Tue Oct 14 22:15:08 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Oct 2008 22:15:08 -0400
Subject: [Twisted-Python] mystery exception
In-Reply-To: <3d7addec0810141814l7f8446e5n784a81d80168088e@mail.gmail.com>
Message-ID: <20081015021508.29191.848160231.divmod.quotient.38693@ohm>

On Tue, 14 Oct 2008 18:14:47 -0700, Vadim Zaliva <krokodil at gmail.com> wrote:
>I am writing network proxy, based on proxy.py code. I am also using
>getPage() and deffered. From time to time I am getting this mystery
>exception, the source of which I could not track. Does anybody knows
>what could be causing it? I am pretty sure I am not closing any sokets
>twice in my code. The code writing 'x' seems weird to me.
>

Something in your program broke the reactor.  Or you found a bug in the
reactor which causes it to break itself.  It doesn't seem likely anyone
will be able to figure out which or how without seeing your actually
source, though.  If you can provide a minimal example of this, and it's
a bug in Twisted, we should be able to fix it.  This is a pretty central
piece of functionality, though, and it gets exercised all the time, so
chances are good that there's something in your program that's causing it.

The specific problem is that a pipe file descriptor, internal to the
reactor, has been closed.  The reactor is not expecting this to happen,
and it shouldn't, since it never closes it.

Jean-Paul



From krokodil at gmail.com  Tue Oct 14 23:31:04 2008
From: krokodil at gmail.com (Vadim Zaliva)
Date: Tue, 14 Oct 2008 20:31:04 -0700
Subject: [Twisted-Python] mystery exception
In-Reply-To: <20081015021508.29191.848160231.divmod.quotient.38693@ohm>
References: <20081015021508.29191.848160231.divmod.quotient.38693@ohm>
Message-ID: <4EC51052-45FD-4C2F-8D1C-D32EEC75CD20@gmail.com>


On Oct 14, 2008, at 19:15, Jean-Paul Calderone wrote:

> The specific problem is that a pipe file descriptor, internal to the
> reactor, has been closed.  The reactor is not expecting this to  
> happen,
> and it shouldn't, since it never closes it.

Could it be related to permissions? I am demonizing my program
standard way, closing all open descriptors, chdir(/), etc.
Where the FIFO is created normally?

Sincerely,
Vadim



From krokodil at gmail.com  Tue Oct 14 23:40:56 2008
From: krokodil at gmail.com (Vadim Zaliva)
Date: Tue, 14 Oct 2008 20:40:56 -0700
Subject: [Twisted-Python] mystery exception
In-Reply-To: <4EC51052-45FD-4C2F-8D1C-D32EEC75CD20@gmail.com>
References: <20081015021508.29191.848160231.divmod.quotient.38693@ohm>
	<4EC51052-45FD-4C2F-8D1C-D32EEC75CD20@gmail.com>
Message-ID: <42DAA120-95DD-4986-93ED-F4C7CE335FE5@gmail.com>


On Oct 14, 2008, at 20:31, Vadim Zaliva wrote:

>> The specific problem is that a pipe file descriptor, internal to the
>> reactor, has been closed.  The reactor is not expecting this to  
>> happen,
>> and it shouldn't, since it never closes it.
>
> Could it be related to permissions? I am demonizing my program
> standard way, closing all open descriptors, chdir(/), etc.
> Where the FIFO is created normally?

This is the daemonisation code I am using:

http://pastebin.com/mf54c5cd

It seems that it is causing the problem.

Vadim



From bernat at luffy.cx  Tue Oct 14 23:53:22 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Wed, 15 Oct 2008 05:53:22 +0200
Subject: [Twisted-Python] How to make twistd print to stdout
In-Reply-To: <02c801c92e49$ad3ee3c0$07bcab40$@com> (Alec Matusis's message of
	"Tue, 14 Oct 2008 15:10:23 -0700")
References: <04eb01c92da7$6dee9370$49cbba50$@com>
	<368574aa0810141018n48f567d0t62941fe81acbea1c@mail.gmail.com>
	<02c801c92e49$ad3ee3c0$07bcab40$@com>
Message-ID: <m3d4i2o6od.fsf@neo.luffy.cx>

OoO  En cette nuit  nuageuse du  mercredi 15  octobre 2008,  vers 00:10,
"Alec Matusis" <matusis at yahoo.com> disait?:

> I am not sure still how to do it:
> When I run 

> twistd --python=serv.py --logfile=serv.log

> anything  that I  put in  serv.py is  executed after  the  process has
> already been  daemonized: even if I  print or sys.stdout  on the first
> line in serv.py file, the output never goes into stdout.

You need to save sys.stdout in  serv.py and use this saved value. I have
not tested it, but maybe you need to get the file descriptor instead and
reopen it (fd=sys.stdout.fileno() and os.fdopen(fd, 'w')).
-- 
Make sure input cannot violate the limits of the program.
            - The Elements of Programming Style (Kernighan & Plauger)



From glyph at divmod.com  Wed Oct 15 02:29:00 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 15 Oct 2008 06:29:00 -0000
Subject: [Twisted-Python] mystery exception
In-Reply-To: <42DAA120-95DD-4986-93ED-F4C7CE335FE5@gmail.com>
References: <20081015021508.29191.848160231.divmod.quotient.38693@ohm>
	<4EC51052-45FD-4C2F-8D1C-D32EEC75CD20@gmail.com>
	<42DAA120-95DD-4986-93ED-F4C7CE335FE5@gmail.com>
Message-ID: <20081015062900.6400.556740215.divmod.xquotient.41@weber.divmod.com>


On 03:40 am, krokodil at gmail.com wrote:
>
>On Oct 14, 2008, at 20:31, Vadim Zaliva wrote:
>>>The specific problem is that a pipe file descriptor, internal to the
>>>reactor, has been closed.  The reactor is not expecting this to 
>>>happen,
>>>and it shouldn't, since it never closes it.
>>
>>Could it be related to permissions? I am demonizing my program
>>standard way, closing all open descriptors, chdir(/), etc.
>>Where the FIFO is created normally?
>
>This is the daemonisation code I am using:
>
>http://pastebin.com/mf54c5cd
>
>It seems that it is causing the problem.

The "twistd" tool included with Twisted has many features, including 
daemonization.  You shouldn't need to use something like this to get a 
twisted daemon running.



From terry at jon.es  Thu Oct 16 00:48:15 2008
From: terry at jon.es (Terry Jones)
Date: Thu, 16 Oct 2008 06:48:15 +0200
Subject: [Twisted-Python] A deferred class that keeps and can log its
	call/errback history
Message-ID: <18678.51087.888440.54544@jon.es>

A few days ago I thought it might be nice to augment the Deferred class to
allow you to look at the callback/errback chain to see what's going on.

Tonight I went to do it. I was nearly done in about 15 minutes, and then it
took another 4 hours to finish....  :-)

It's still a bit rough, but it seems to work.

The code comes with a history logging function that you can insert into a
callback chain. When it's run, it prints the history of the chain,
including also printing the history of any deferreds that were returned
along the way, and then prints the call/errback functions yet to be called.
You get to see the initial result passed to the first call/errback, and the
results along the way.

Output is still grungy. Here's what you get from the attached test code:

        History for deferred <TDeferred at 0xbf1e60  current result: 45>
        Initial result = True
        --- ALREADY FIRED ---
        CALLBACK:
          func   <history>
          result = True
        ERRBACK: <same as CALLBACK>
        CALLBACK:
          func   = <function d at 0xbf46e0>
          args   = '()'
          kwargs = '{}'
          result = <TDeferred at 0xbf6290  current result: 45>
        ERRBACK:
          func   <pass>

                History for deferred <TDeferred at 0xbf6290  current result: 45>
                Initial result = 33
                --- ALREADY FIRED ---
                CALLBACK:
                  func   = <function d2 at 0xbf4758>
                  args   = '()'
                  kwargs = '{}'
                  result = 45
                ERRBACK:
                  func   <pass>
        --- STILL TO BE FIRED ---
        CALLBACK:
          func   = <function ok at 0xbf41b8>
          args   = "('hello',)"
          kwargs = "{'color': 'black'}"
        ERRBACK:
          func   <pass>
        CALLBACK:
          func   <pass>
        ERRBACK:
          func   = <function nok at 0xbf47d0>
          args   = '()'
          kwargs = '{}'
        CALLBACK:
          func   = <function ok2 at 0xbf4668>
          args   = '()'
          kwargs = '{}'
        ERRBACK:
          func   <pass>
        CALLBACK:
          func   <history>
        ERRBACK: <same as CALLBACK>
        CALLBACK:
          func   = <function stop at 0xbf4848>
          args   = '()'
          kwargs = '{}'
        ERRBACK: <same as CALLBACK>

If you examine this you'll see that I'm using <pass> and <history> to
indicate uninteresting call/errbacks (these correspond to the
defer.passthru and the history function itself).  When the errback is the
same as the callback (due to d.addBoth), that's indicated.

If you look at the attached code you'll see I also do a bit of hiding of
housekeeping callbacks: the _continue and my own (perhaps unnecessary)
_historyPop. Those are things the caller isn't aware of, and they're just
clutter, so I don't print them.

I made the logDeferredHistory function be standalone (not a class method)
to make it easier to log any deferred (not just the current instance) and
also because it's then simpler to identify when the callback is the history
function itself (to be able to print that concisely).

You use the logging callback pretty much like any other. E.g.:

    if __name__ == '__main__':
        log.startLogging(sys.stdout)
        x = funcReturningADeferred()
        x.addCallback(d)
        x.addBoth(logDeferredHistory, x)
        x.addCallback(ok, 'hello', color='black')
        x.addBoth(logDeferredHistory, x)

Right now it logs the history. But you could pass it a file descriptor
or something else, like a list.

It would be nice to be able to make this a trivial drop-in replacement for
normal Deferreds for when you're debugging. In that case logDeferredHistory
could test to see if its deferred arg is an instance of a history deferred
and if not just act as a passthrough. Then people might be able to do
something like this when debugging:

    from twisted..... import historyDeffered as defer

and otherwise not alter their code.  Or we could add an optional argument
to Deferred.__init__ indicating that the deferred should maintain its
history. It doesn't involve much extra work - mainly just pushing things
onto a list during _runCallbacks.

Terry


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tdefer.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081016/328d318d/attachment.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tdefer_test.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081016/328d318d/attachment-0001.txt 

From chris at sidwells.com  Thu Oct 16 03:12:24 2008
From: chris at sidwells.com (Chris Dew)
Date: Thu, 16 Oct 2008 08:12:24 +0100
Subject: [Twisted-Python] Status of twisted-pair and python-eunuchs.
Message-ID: <e6a690760810160012k7677e25ay858993f8b423b2b0@mail.gmail.com>

I'm trying some network programming using tun interfaces to tunnel WAN
traffic through user-space programmes at each end, which will perform
compression and other magic on tcp streams.  The userspace programmes then
communicate across the WAN, using less bandwidth than the uncompressed data
would have.

Looking at the documentation for twisted-pair and python-eunuchs it looks as
if they haven't been maintained for years - eunuchs last changed about 5-6
years ago.

Is it going to make my life easier to mock things up in Twisted, to get
things algorithmically correct, before porting partly/entirely to C for
performance (if necessary)?  (I'm looking at supporting >10Mbit/s on Core2
processors, with >100 simultaneous connections.)

If Twisted would cause me to spend a large amount of time wrestling with
Twisted-pair/Eunuchs problems, I'm probably better of starting with C.  (I'm
familiar with both Twisted and C, but not the tun interface, nor the
innerworkings of the tcp protocol yet - I was hoping that the source of
twisted-pair might help educate me.)

Has anyone used these packages recently (2.6 kernel)?

Thanks,

Chris.

P.S. Can anyone recommend any good articles on using the tun interface and
interpreting/processing tcp packets?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081016/2968c50b/attachment.htm 

From cmsdew at googlemail.com  Thu Oct 16 08:40:10 2008
From: cmsdew at googlemail.com (Chris Dew)
Date: Thu, 16 Oct 2008 13:40:10 +0100
Subject: [Twisted-Python] Status of twisted-pair and python-eunuchs.
In-Reply-To: <e6a690760810160012k7677e25ay858993f8b423b2b0@mail.gmail.com>
References: <e6a690760810160012k7677e25ay858993f8b423b2b0@mail.gmail.com>
Message-ID: <e6a690760810160540y6e551ae4rb4d209c48bc14cc0@mail.gmail.com>

I'm trying some network programming using tun interfaces to tunnel WAN
traffic through user-space programmes at each end, which will perform
compression and other magic on tcp streams.  The userspace programmes then
communicate across the WAN, using less bandwidth than the uncompressed data
would have.

Looking at the documentation for twisted-pair and python-eunuchs it looks as
if they haven't been maintained for years - eunuchs last changed about 5-6
years ago.

Is it going to make my life easier to mock things up in Twisted, to get
things algorithmically correct, before porting partly/entirely to C for
performance (if necessary)?  (I'm looking at supporting >10Mbit/s on Core2
processors, with >100 simultaneous connections.)

If Twisted would cause me to spend a large amount of time wrestling with
Twisted-pair/Eunuchs problems, I'm probably better of starting with C.  (I'm
familiar with both Twisted and C, but not the tun interface, nor the
innerworkings of the tcp protocol yet - I was hoping that the source of
twisted-pair might help educate me.)

Has anyone used these packages recently (2.6 kernel)?

Thanks,

Chris.

P.S. Can anyone recommend any good articles on using the tun interface and
interpreting/processing tcp packets?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081016/ec00b6d6/attachment.htm 

From davyzhang at gmail.com  Thu Oct 16 09:21:35 2008
From: davyzhang at gmail.com (davy zhang)
Date: Thu, 16 Oct 2008 21:21:35 +0800
Subject: [Twisted-Python] problem with Twisted and Processing
Message-ID: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>

I used Processing package for python 2.5 which became an official
package of python 2.6 named multipleprocess. 'Cause the twisted for
python 2.6 is not ready, I'm still using python 2.5 on windows
Here's the problem the code below is pretty simple and works fine
until I tried to get access of the first element in the list, I can
even print the whole list, but i just can not get the elements inside.
I guess there's something get conflicted in these two packages, anyone
knows why?

To reproduce the error, run the code below with twisted and processing
package and python 2.5, open a telnet client to open the localhost
9999,send the message ,hit carriage return.

thanks a lot for any hints


from twisted.protocols import basic
from twisted.internet import reactor
import time

from processing import Process,Manager

def sender(list):
    while 1:
        if len(list) > 0:
            print list[0]
        time.sleep(1)



class MyChat(basic.LineReceiver):
    def connectionMade(self):
        print "Got new client!"
        self.factory.clients.append(self)

    def connectionLost(self, reason):
        print "Lost a client!"
        self.factory.clients.remove(self)

    def lineReceived(self, line):
        print "received", repr(line)
        for c in self.factory.clients:
            c.message(line)
        d = {'client':self,'msg':line}
        msgList.append(d)

    def message(self, message):
        self.transport.write(message + '\n')


from twisted.internet import protocol
from twisted.application import service, internet

if __name__  == '__main__':
    factory = protocol.ServerFactory()
    factory.protocol = MyChat
    factory.clients = []
    reactor.listenTCP(9999,factory)

    manager = Manager()
    msgList = manager.list()

    p = Process(target=sender,args=(msgList,))
    p.start()
    reactor.run()



From dripton at ripton.net  Thu Oct 16 13:09:33 2008
From: dripton at ripton.net (David Ripton)
Date: Thu, 16 Oct 2008 10:09:33 -0700
Subject: [Twisted-Python] problem with Twisted and Processing
In-Reply-To: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
References: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
Message-ID: <20081016170933.GA1053@vidar.dreamhost.com>

On 2008.10.16 21:21:35 +0800, davy zhang wrote:
> I used Processing package for python 2.5 which became an official
> package of python 2.6 named multipleprocess. 

multiprocessing

> Here's the problem the code below is pretty simple and works fine
> until I tried to get access of the first element in the list, I can
> even print the whole list, but i just can not get the elements inside.
> I guess there's something get conflicted in these two packages, anyone
> knows why?

This is not a Twisted problem.  You're just using Processing wrong.

You're trying to shove a MyChat instance inside your Manager list.  But
Manager only supports a few types by default.  So you either need a
BaseManager subclass with a handler for MyChat, or you need to convert
your MyChat objects to a supported type (for example, by calling str()
on them) before passing them across shared memory.

-- 
David Ripton    dripton at ripton.net



From p.mayers at imperial.ac.uk  Thu Oct 16 13:19:58 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 16 Oct 2008 18:19:58 +0100
Subject: [Twisted-Python] problem with Twisted and Processing
In-Reply-To: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
References: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
Message-ID: <48F777BE.6030007@imperial.ac.uk>

davy zhang wrote:
> I used Processing package for python 2.5 which became an official
> package of python 2.6 named multipleprocess. 'Cause the twisted for
> python 2.6 is not ready, I'm still using python 2.5 on windows

AFAICT the "processing" module does things like "fork"ing a running 
python interpreter and then not immediately exec()ing.

I'm pretty sure that'll cause Twisted (and maybe lots of other apps) to 
explode. However I note you're on Windows (which lacks fork()) so I'm 
not sure what it does there.

Also, the Processing module communicates over pipes/fifos which will 
conflict with Twisted and block the reactor (or the reactor will block 
Processing).

In short - nice though it looks, I don't think you can use Processing 
with Twisted, or will ever be able to. It's a shame more attention 
wasn't paid to this during development.

You could look at:

  http://pypi.python.org/pypi/ampoule
  http://foss.eepatents.com/trac/AsynQueue

Having either of these implementations inside Twisted would be excellent 
IMHO.



From nimag at rogers.com  Thu Oct 16 13:47:59 2008
From: nimag at rogers.com (Nima Ghanavatian)
Date: Thu, 16 Oct 2008 10:47:59 -0700 (PDT)
Subject: [Twisted-Python] waiting for results from tcp
Message-ID: <178342.57812.qm@web88101.mail.re2.yahoo.com>

Hi,

I have a server which can handle multiple connections.  At any given time, I want to send out a ping to see who is still listening to this server.

For this I scan through my list of ip's and send out a msg with

     factory = ClientFactory()
     factory.protocol = caller
     factory.message = self.message
     factory.alive = 0
     reactor.connectTCP(self.ip, self.port, factory)

and wait on the response.  This is done from within an application daemon, so no reactor.run() is required.  

How can I send a message out and wait for the response before proceeding?  I tried using deferreds a bunch of different ways but I can't seem to get it going.  
Oh and I should clarify I want the response to be in the original stream, not in the thread created by connectTCP/dataReceived/etc...

thanks,

Nima
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081016/d3430820/attachment.htm 

From exarkun at divmod.com  Thu Oct 16 14:02:01 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 16 Oct 2008 14:02:01 -0400
Subject: [Twisted-Python] waiting for results from tcp
In-Reply-To: <178342.57812.qm@web88101.mail.re2.yahoo.com>
Message-ID: <20081016180201.29191.218462226.divmod.quotient.39213@ohm>

On Thu, 16 Oct 2008 10:47:59 -0700 (PDT), Nima Ghanavatian <nimag at rogers.com> wrote:
>Hi,
>
>I have a server which can handle multiple connections.  At any given time, I want to send out a ping to see who is still listening to this server.
>
>For this I scan through my list of ip's and send out a msg with
>
>     factory = ClientFactory()
>     factory.protocol = caller
>     factory.message = self.message
>     factory.alive = 0
>     reactor.connectTCP(self.ip, self.port, factory)
>
>and wait on the response.  This is done from within an application daemon, so no reactor.run() is required.

I'm not sure I understand.  You have a server, but you're making outgoing
connects from it to other servers.  This will tell you what other servers
are still listening.  Is that what "to see who is still listening to this
server" means?

>
>How can I send a message out and wait for the response before proceeding?  I tried using deferreds a bunch of different ways but I can't seem to get it going.
>Oh and I should clarify I want the response to be in the original stream, not in the thread created by connectTCP/dataReceived/etc...
>

There are only two or three APIs in Twisted which will run your code in a
thread other than the reactor thread.  None of the connection setup APIs
or the network event APIs do this.  However, I'm confused by your comparison
of "the original stream" to "the thread created ...".  These aren't really
comparable things.

When you set up a TCP connection with reactor.connectTCP, data received
via the resulting connection is passed to the dataReceived method of the
protocol instance returned by the factory's buildProtocol method.  If you
want the data, that's how you get it: implement dataReceived to handle it
in the manner you wish.  For example, you could create a Deferred which
fires with all the data received over a single connection after that
connection closes:

    from twisted.internet.protocol import Protocol, ClientFactory
    from twisted.internet.defer import Deferred
    from twisted.python.log import err

    class GatherOutput(Protocol):
        def connectionMade(self):
            self.output = []
        def dataReceived(self, data):
            self.output.append(data)
        def connectionLost(self, reason):
            self.factory.dataDeferred.callback(self.output)

    f = ClientFactory()
    f.dataDeferred = Deferred()
    f.protocol = GatherOutput
    reactor.connectTCP(host, port, f)
    def gotData(data):
        print 'Got data', data
    f.dataDeferred.addCallback(gotData)
    f.dataDeferred.addErrback(err)
    reactor.run()

Deferreds are the most common way for dealing with potentially long-running
(or long-waiting) operations in Twisted.

Jean-Paul



From manuel at vikingosegundo.de  Thu Oct 16 16:26:48 2008
From: manuel at vikingosegundo.de (Manuel Meyer)
Date: Thu, 16 Oct 2008 23:26:48 +0300
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <m3prm3noi6.fsf@neo.luffy.cx>
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
	<m3prm3noi6.fsf@neo.luffy.cx>
Message-ID: <59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>

I expected that. But I am already using django in several projects and  
heard yesterday the first time of nevow and t-web.
I thought of writing a standalone IRCServer and connect to the db of  
django - actually I have this part already working. and with the  
manager of django
But I don't know how to inform IRCServer about changes in the site/db.  
Maybe by adding another network protocol to the twisted application,  
where django's signals could leave a note?

Manuel
Am 14.10.2008 um 19:13 schrieb Vincent Bernat:

> OoO En ce  d?but d'apr?s-midi ensoleill? du mardi  14 octobre 2008,  
> vers
> 15:13, Manuel Meyer <manuel at vikingosegundo.de> disait :
>
>> I want to create a IRC Server that reacts a little bit different
>> compared to others:
>> * only registered users will be able to /list channels and /join  
>> them.
>> * /list only returns channels the user registered
>> * /join is only apply-able on those channels, too
>> * /join new-channel won't work
>> * Registering and channel-creation is done not in IRC but in a
>> website, probably driven by django.
>
> Using  Twisted  Web  or  Nevow  will allow  to  tightly  integrate   
> your
> application  and the  web  server. The  "event  loop" of  Django is   
> not
> compatible with Twisted reactor. You  will need some extra stuff to  
> make
> your Django application communicate with  your IRC server. One way  
> would
> be to just use the database.
> -- 
> I WILL NOT TEACH OTHERS TO FLY
> I WILL NOT TEACH OTHERS TO FLY
> I WILL NOT TEACH OTHERS TO FLY
> -+- Bart Simpson on chalkboard in episode 9F05
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081016/1997db1b/attachment.htm 

From phil at bubblehouse.org  Thu Oct 16 16:56:15 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 16 Oct 2008 16:56:15 -0400
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
	<m3prm3noi6.fsf@neo.luffy.cx>
	<59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>
Message-ID: <050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>

On Oct 16, 2008, at 4:26 PM, Manuel Meyer wrote:
> But I don't know how to inform IRCServer about changes in the site/ 
> db. Maybe by adding another network protocol to the twisted  
> application, where django's signals could leave a note?

I may be missing something, but if you keep all your data in the DB,  
there's no need to notify the irc server of changes to the DB.

The only time you'll need this user information (it seems) is while  
responding to /join and /list requests. Just read the DB at that time.

What's nice about this is the DB takes care of most if not all of your  
synchronization requirements, so you have far fewer concurrency issues  
to think about than if you were broadcasting changes from the web app  
to the irc server.

-phil



From davyzhang at gmail.com  Fri Oct 17 09:20:42 2008
From: davyzhang at gmail.com (davy zhang)
Date: Fri, 17 Oct 2008 21:20:42 +0800
Subject: [Twisted-Python] problem with Twisted and Processing
In-Reply-To: <20081016170933.GA1053@vidar.dreamhost.com>
References: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
	<20081016170933.GA1053@vidar.dreamhost.com>
Message-ID: <81f2badd0810170620m1b42382fv8e239abb7427bd3f@mail.gmail.com>

thanks a lot for your help!

On Fri, Oct 17, 2008 at 1:09 AM, David Ripton <dripton at ripton.net> wrote:
> On 2008.10.16 21:21:35 +0800, davy zhang wrote:
>> I used Processing package for python 2.5 which became an official
>> package of python 2.6 named multipleprocess.
>
> multiprocessing

thanks again!

>
>> Here's the problem the code below is pretty simple and works fine
>> until I tried to get access of the first element in the list, I can
>> even print the whole list, but i just can not get the elements inside.
>> I guess there's something get conflicted in these two packages, anyone
>> knows why?
>
> This is not a Twisted problem.  You're just using Processing wrong.
>
> You're trying to shove a MyChat instance inside your Manager list.  But
> Manager only supports a few types by default.  So you either need a
> BaseManager subclass with a handler for MyChat, or you need to convert
> your MyChat objects to a supported type (for example, by calling str()
> on them) before passing them across shared memory.
>

so if there's another unsupported object in MyChat like
MyChat.transport, should I made an another manager for transport too?


> --
> David Ripton    dripton at ripton.net
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From davyzhang at gmail.com  Fri Oct 17 09:25:47 2008
From: davyzhang at gmail.com (davy zhang)
Date: Fri, 17 Oct 2008 21:25:47 +0800
Subject: [Twisted-Python] problem with Twisted and Processing
In-Reply-To: <48F777BE.6030007@imperial.ac.uk>
References: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
	<48F777BE.6030007@imperial.ac.uk>
Message-ID: <81f2badd0810170625s5d3be721hf62ea890f075e8af@mail.gmail.com>

On Fri, Oct 17, 2008 at 1:19 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> davy zhang wrote:
>>
>> I used Processing package for python 2.5 which became an official
>> package of python 2.6 named multipleprocess. 'Cause the twisted for
>> python 2.6 is not ready, I'm still using python 2.5 on windows
>
> AFAICT the "processing" module does things like "fork"ing a running python
> interpreter and then not immediately exec()ing.
>
> I'm pretty sure that'll cause Twisted (and maybe lots of other apps) to
> explode. However I note you're on Windows (which lacks fork()) so I'm not
> sure what it does there.
>
> Also, the Processing module communicates over pipes/fifos which will
> conflict with Twisted and block the reactor (or the reactor will block
> Processing).
>
> In short - nice though it looks, I don't think you can use Processing with
> Twisted, or will ever be able to. It's a shame more attention wasn't paid to
> this during development.
>
> You could look at:
>
>  http://pypi.python.org/pypi/ampoule
>  http://foss.eepatents.com/trac/AsynQueue

thanks so much for the advise!

I just want one process to recv the message from the clinents ,and one
process to send message back

both processes shared a same queue seems to work, but.... is there any
idea of that?

if in other language thread will make that possible, but in python
thread can not get benefit  from multi-core cpus

so I turn to processes

>
> Having either of these implementations inside Twisted would be excellent
> IMHO.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From hoadley at gmail.com  Sat Oct 18 01:30:27 2008
From: hoadley at gmail.com (Rob Hoadley)
Date: Fri, 17 Oct 2008 22:30:27 -0700
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
	<m3prm3noi6.fsf@neo.luffy.cx>
	<59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>
	<050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>
Message-ID: <9bb390e70810172230x104a2cf7ufd13536d1f7bd9a6@mail.gmail.com>

I've done a similar type project but with a mailserver built using
twisted.mail. I used django.contrib.admin to help manage the db for
the mailserver config. From the mailservers, I was able to get by with
5 min Looping Calls to the database to build the required config data
and just cached the data until the next successful db call .  While
not entirely applicable to your problem,  I wanted to bring it up
because of the slightly different choice I made on how to gather data
out of the database. As the previous poster mentioned, I didn't want
to mess around with concurrency and decided that my mailservers (2 of
them now) would not care about each other and just get their config
data out of the database.

Where I also differ is I couldn't afford a sql query per each
connections MAIL FROM or RCPT TO. So I had to make it slightly more
flexible while still meeting the requirement of a database stored
config.  I basically choose a delayed Pull approach.  One upshot is I
coded the sql calls so that the config data survives a database
failure and just keeps working with it's previous data grab.  I also
coded a twisted.web service administration page that allows for a
manual reload of the data on the individual server if an emergency
came up and I absolutely needed the config to change.  It's a
different flavor you can use if you know your data is fairly static
and the number of people changing the data is low.

Now back to your problem... I've also used the spread toolkit before
(no not the twisted.spread.. and yes... OSS name collision). If I were
writing such an app, and thought I'd be using a number of servers for
the service; I'd consider using spread to keep things the same on all
servers and for anything else I needed quickly.  You'd still want a
database, you just aren't always using sql to pull data that you need.
 You are using the spread bus and your IRC twisted app (more likely a
service within your twisted app) is just listening for the data that
you deem high priority.   Commonly referred to as a Push approach.
http://www.spread.org

Someone out there has done some work with spread and twisted.  I don't
know how well the code works. As for django, it'd be pretty easy to
send a spread message.
http://anarkystic.com/devdev/spreader-intro

Hope you get some ideas.

-rob

On Thu, Oct 16, 2008 at 1:56 PM, Phil Christensen <phil at bubblehouse.org> wrote:
> On Oct 16, 2008, at 4:26 PM, Manuel Meyer wrote:
>>
>> But I don't know how to inform IRCServer about changes in the site/db.
>> Maybe by adding another network protocol to the twisted application, where
>> django's signals could leave a note?
>
> I may be missing something, but if you keep all your data in the DB, there's
> no need to notify the irc server of changes to the DB.
>
> The only time you'll need this user information (it seems) is while
> responding to /join and /list requests. Just read the DB at that time.
>
> What's nice about this is the DB takes care of most if not all of your
> synchronization requirements, so you have far fewer concurrency issues to
> think about than if you were broadcasting changes from the web app to the
> irc server.
>
> -phil
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jkakar at kakar.ca  Sat Oct 18 16:34:46 2008
From: jkakar at kakar.ca (Jamu Kakar)
Date: Sat, 18 Oct 2008 13:34:46 -0700
Subject: [Twisted-Python] Deferred in C++
Message-ID: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>

Hi,

I've implemented Deferred in C++.  There is room for improvement and
optimization, but the basic core works.  My focus has been on trying
to make the best possible API experience for users.  The internal
implementation is confusing and full of complexity unrelated to the
problems being solved.  For example, because the implementation
relies on templates so heavily, order-of-definition is an issue.
Luckily most of the complexity stays hidden away leaving a mostly
easy-to-use API, even in tricky cases such as callback pipelines
that change the result type being passed from one callback to
another by the Deferred:

  int convert_string(std::string result) {
      std::cout << "Converting string " << result << std::endl;
      return ion::Convert::to_integer<int>(result);
  }

  int add_ten(int result) {
      std::cout << "Adding 10 to " << result
                << " and returning " << result + 10 << std::endl;
      return result + 10;
  }

  Deferred deferred = Deferred::create_deferred<std::string>();
  deferred.add_callback(&convert_string);
  deferred.add_callback(&add_ten);
  std::cout << "Calling succeed" << std::endl;
  deferred.succeed(std::string("13"));
  std::cout << "Callbacks finished" << std::endl;

Running this code will produce the following output:

  Calling succeed
  Converting string 13
  Adding ten to 13 and returning 23
  Callbacks finished

It's possible to use method pointers as callbacks, too:

  class CallbackHandler {
  public:
      int handle_result(int result) {
          std::cout << "Handling " << result << std::endl;
          return result;
      }
  };

  CallbackHandler handler;
  deferred.add_callback(&handler, &CallbackHandler::handle_result);

One of the constraints that the API mostly hides is that the return
and parameter types of every callback in the pipeline need to be
known at compile time.  add_callbacks, add_callback and add_errback
are template methods that provide implementations for different
combinations of function and method pointers.  They infer return and
parameter types, based on the inputs passed in, and use them to
create internal structures.

Inferring types breaks down when adding a callback that returns a
Deferred because there's no way to infer the result type of a
Deferred that may not exist yet.  In such cases, the result type of
the Deferred must be explicitly stated:

  class DeferredCallback {
  public:
      DeferredCallback()
          : deferred(Deferred::create_deferred<int>) {}

      Deferred get_deferred(int) {
          std::cout << "Returning deferred" << std::endl;
          return this->deferred;
      }

      Deferred deferred;
  };

  Deferred deferred = Deferred::create_deferred<std::string>();
  DeferredCallback callback;
  // Notice the explicit result type here:
  deferred.add_callback<int>(&callback, DeferredCallback::get_deferred);
  deferred.add_callback(&add_ten);
  std::cout << "Calling succeed" << std::endl;
  deferred.succeed(std::string("13"));
  std::cerr << "Calling deferred" << std::endl;
  callback.deferred.succeed(6)
  std::cout << "Callbacks finished" << std::endl;

Running this code will produce the following output:

  Calling succeed
  Returning deferred
  Calling deferred
  Adding ten to 6 and returning 16
  Callbacks finished

When a callback returns a Deferred, processing of the pipeline
pauses until a result comes available, which is why add_ten is only
called after the inner Deferred succeeds.  If you forget the
explicit result type when adding a Deferred returning callback
you'll get a compile-time error:

../../ion/defer.h: In member function 'void
ion::Deferred::add_callbacks(Instance*, ion::Deferred
(Instance::*)(Param), ion::Deferred
(Instance::*)(ion::trule<ion::Failure, ion::DeallocObject>)) [with
Instance = ion::tests::DeferredMethodHandler, Param = int32_t]':
test-defer.cpp:416:   instantiated from here
../../ion/defer.h:773: error: no matching function for call to
'ion::CompileTimeAssertion<false>::CompileTimeAssertion(ion::Deferred::add_callbacks(Instance*,
ion::Deferred (Instance::*)(Param), ion::Deferred
(Instance::*)(ion::trule<ion::Failure, ion::DeallocObject>)) [with
Instance = ion::tests::DeferredMethodHandler, Param =
int32_t]::STATIC_ASSERT_Deferred_result_type_must_be_specified&)'
../../ion/debug.h:164: note: candidates are:
ion::CompileTimeAssertion<false>::CompileTimeAssertion()
../../ion/debug.h:164: note:
ion::CompileTimeAssertion<false>::CompileTimeAssertion(const
ion::CompileTimeAssertion<false>&)
../../ion/defer.h: At global scope:
../../ion/defer.h:772: warning: unused parameter 'instance'
../../ion/defer.h:772: warning: unused parameter 'method_callback'
../../ion/defer.h:772: warning: unused parameter 'method_errback'

If you look *really* hard you'll see some helpful information
starting with STATIC_ASSERT.  Yes, that's a feature.

I've implemented a Failure object, but failure handling over all is
not very good.  Exceptions are tricky because, unless you're
expecting a particular kind of exception, their types become opaque
as soon as they're thrown.  There's room for improvement but there's
no obvious path to a good solution yet.

The behaviour of errbacks is slightly different than in the Python
implementation.  Errbacks receive a trule<Failure> (a scoped pointer
that the errback owns) and return a result suitable for the next
callback.  They can either (a) recover from the error and return a
result, (b) raise an exception to indicate a new error or (c) raise
an UnhandledFailureError exception with the failure object.
Callback processing continues after (a), while errback processing
continues after (b) or (c).  A new Failure object is created when
(b) occurs.

  int recover(trule<Failure>) {
      std::cout << "Recovering from failure" << std::endl;
      return 43;
  }

  Deferred deferred = Deferred::create_deferred<int>();

  deferred.add_errback(&recover);
  deferred.add_callback(&add_ten);
  std::cout << "Calling fail" << std::endl;
  deferred.fail(Exception("Error message!"));
  std::cout << "Callbacks finished" << std::endl;

Running this code will produce the following output:

  Calling fail
  Recovering from failure
  Adding ten to 43 and returning 53
  Callbacks finished

I'm not sure how practical this component would be in a non-trivial
application.  The reliance on templates would negatively affect
compile time, for one thing.  More importantly, I've found
deciphering the error messages produced by simple mistakes can be
tricky.  Nonetheless, my main motivation was to see if it was
possible at all and so I'm pleased that it works in the end.

In the future, I'd like to see what the performance difference is
between this version and the Python version, but I haven't
investigated that at all.  There are also memory-management related
features that could be added to ease using this in C++ that would be
interesting to explore.  Porting to Windows is another item on the
list of things that I'd like to do.

The code is part of a project called ion (I/O and Networking
library), which I use for experiments like this.  I haven't merged
the deferred branch yet, but will soon.  Until it's merged, it's on
Launchpad:

https://code.edge.launchpad.net/~jkakar/ion/deferred

It will most likely only build on Ubuntu Intrepid right now.

Thanks,
J.



From exarkun at twistedmatrix.com  Sun Oct 19 00:05:09 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Oct 2008 04:05:09 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1224389109.68.704500062@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081019/943db0da/attachment.htm 

From davyzhang at gmail.com  Sun Oct 19 07:38:04 2008
From: davyzhang at gmail.com (davy zhang)
Date: Sun, 19 Oct 2008 19:38:04 +0800
Subject: [Twisted-Python] Serious performance problem of twisted
Message-ID: <81f2badd0810190438u4f86a2abof596192f0d927822@mail.gmail.com>

a very simple server and multi-process code, I found there's about 500
milliseconds delay for every msg I sent to client I just don't why,
did I made something wrong ?

the code below using a process to handle the data and in the shared
taskList, after done put the data to the shared msgList,  a thread in
main process to read the msg and send to the clients.

the msg delay is significant, you can even see it with your eyes in
telnet client I checked the time in the client, it's approximate to
0.5 secs

first I tested in java using the same logic with MINA, BlockingQueue
stuff, the msg traveled from client to server and back is 0, so I
pretty much sure the problem here is in the  server side

then I printed time in the server code, I found everything is as fast
as it suppose to be, until the c.transport.write. After the write
operation the client need 0.5secs to get the msg


the code is below

#!/usr/bin/env python
#coding=utf-8

from twisted.internet.protocol import Factory,Protocol
from twisted.internet import reactor
from twisted.internet import error
import cPickle
import time
from processing import Manager,Process
import thread
from time import time

"""flash policy file request"""
policyRequest = "<policy-file-request/>" + chr(0)
policyReturn = """<cross-domain-policy>
                <allow-access-from  domain="*"  to-ports="*"  />
                </cross-domain-policy>""" + chr(0)

def handler(taskList,msgList):
    while 1:
        item = cPickle.loads(taskList.get())
        print time()
        print 'item before handle ', item
        item['msg'] += ' hanlded done \r\n'
        msgList.put(cPickle.dumps(item))

def sender():
    global msgList
    while 1:
        item = cPickle.loads(msgList.get())
        print time()
        c = clients[item['cid']]
        c.transport.write(item['msg'] )

class DTProtocol(Protocol):
    global clients
    def connectionMade(self):
        clients.append(self)
        print "a new customer!"

    def dataReceived(self, data):
        global clients
        global taskList
        print 'msg received ',data
        if data == policyRequest:
            self.transport.write(policyReturn)
            self.transport.loseConnection()
        else:
            d = {'cid':clients.index(self),'msg':data,'done':False,'sent':False}
            taskList.put(cPickle.dumps(d))
            print time()
            #self.transport.write(data)

    def connectionLost(self, reason):
        print reason
        if self in clients:
            clients.remove(self)
        print "bye!"

    def message(self,msg):
        self.transport.write(msg)

class DTFactory(Factory):
    protocol  = DTProtocol

if __name__ == '__main__':

    port = 80
    reactor.listenTCP(80,DTFactory())

    clients = []
    manager = Manager()

    taskList = manager.Queue()
    msgList = manager.Queue()


    h = Process(target=handler,args=(taskList,msgList))
    h.start()

    thread.start_new_thread(sender,())

    print 'server is runing at ',port
    reactor.run()



From therve at free.fr  Sun Oct 19 08:03:03 2008
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sun, 19 Oct 2008 14:03:03 +0200
Subject: [Twisted-Python] Serious performance problem of twisted
In-Reply-To: <81f2badd0810190438u4f86a2abof596192f0d927822@mail.gmail.com>
References: <81f2badd0810190438u4f86a2abof596192f0d927822@mail.gmail.com>
Message-ID: <1224417783.7335.2.camel@brainwave>

Le dimanche 19 octobre 2008 ? 19:38 +0800, davy zhang a ?crit :
> a very simple server and multi-process code, I found there's about 500
> milliseconds delay for every msg I sent to client I just don't why,
> did I made something wrong ?

Short answer:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#WhydoesittakealongtimefordataIsendwithtransport.writetoarriveattheothersideoftheconnection

A bit more elaborated: yes, you did something wrong. The Twisted APIs
are not threadsafe, thus you must not call any Twisted method from a
thread, except reactor.callFromThread. See
http://twistedmatrix.com/projects/core/documentation/howto/threading.html for more information.


-- 
Thomas




From davyzhang at gmail.com  Sun Oct 19 08:49:33 2008
From: davyzhang at gmail.com (davy zhang)
Date: Sun, 19 Oct 2008 20:49:33 +0800
Subject: [Twisted-Python] Serious performance problem of twisted
In-Reply-To: <1224417783.7335.2.camel@brainwave>
References: <81f2badd0810190438u4f86a2abof596192f0d927822@mail.gmail.com>
	<1224417783.7335.2.camel@brainwave>
Message-ID: <81f2badd0810190549r6c404017la050b42e15bb1f63@mail.gmail.com>

- - oh..... Thanks a lot - -.... I nearly want to start my own server
code ...I should read that faq before I started my project.:p

thanks again~!

On Sun, Oct 19, 2008 at 8:03 PM, Thomas Herv? <therve at free.fr> wrote:
> Le dimanche 19 octobre 2008 ? 19:38 +0800, davy zhang a ?crit :
>> a very simple server and multi-process code, I found there's about 500
>> milliseconds delay for every msg I sent to client I just don't why,
>> did I made something wrong ?
>
> Short answer:
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#WhydoesittakealongtimefordataIsendwithtransport.writetoarriveattheothersideoftheconnection
>
> A bit more elaborated: yes, you did something wrong. The Twisted APIs
> are not threadsafe, thus you must not call any Twisted method from a
> thread, except reactor.callFromThread. See
> http://twistedmatrix.com/projects/core/documentation/howto/threading.html for more information.
>
>
> --
> Thomas
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Sun Oct 19 12:55:35 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 19 Oct 2008 12:55:35 -0400
Subject: [Twisted-Python] Serious performance problem of twisted
In-Reply-To: <1224417783.7335.2.camel@brainwave>
References: <81f2badd0810190438u4f86a2abof596192f0d927822@mail.gmail.com>
	<1224417783.7335.2.camel@brainwave>
Message-ID: <1224435335.19469.204.camel@localhost.localdomain>

On Sun, 2008-10-19 at 14:03 +0200, Thomas Herv? wrote:

> A bit more elaborated: yes, you did something wrong. The Twisted APIs
> are not threadsafe, thus you must not call any Twisted method from a
> thread, except reactor.callFromThread. See
> http://twistedmatrix.com/projects/core/documentation/howto/threading.html for more information.
> 
> 

In fact, you needn't use threads at all, most of the time.




From exarkun at divmod.com  Sun Oct 19 15:37:21 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 19 Oct 2008 15:37:21 -0400
Subject: [Twisted-Python] October 26 Sprint Reminder
In-Reply-To: 0
Message-ID: <20081019193721.29191.1578254984.divmod.quotient.41713@ohm>


There will be a Twisted sprint on Sunday, October 26 at the Divmod office in Porter Squarel, Cambridge, MA.  The sprint will run from 10 AM until people get sick of it.  Lunch will be provided, thanks to the generous contributions of the sponsors listed on the website.

The sprint will focus on anything attendees like, but there will probably be at least some emphasis on tasks related to release automation.

Jean-Paul



From amauryfa at gmail.com  Tue Oct 21 12:14:43 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Tue, 21 Oct 2008 18:14:43 +0200
Subject: [Twisted-Python] Deferred in C++
In-Reply-To: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
References: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
Message-ID: <e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>

Hello,

On Sat, Oct 18, 2008 at 22:34, Jamu Kakar <jkakar at kakar.ca> wrote:
> Hi,
>
> I've implemented Deferred in C++.  There is room for improvement and
> optimization, but the basic core works.

Wonderful! Awesome!
So I am not the only one who tries to use Twisted concepts in C++.

I did write some kind of a Deferred class in C++ myself, together with
a re-implementation of a Twisted framework (two reactors featuring TCP
client & server, callLater, callInThread...; a selectReactor and a
native MFC reactor that merges nicely in a Windows application, yes,
there are some; Protocols, LineReceiver, HttpClient & server...)
and I already have a running business application that uses all of it
on Windows.

The Deferred part was really hard to implement, and may be the reason
why it was never done before. It really pushed me out of my C++
knowledge.
I tried to convert my code to use your class, which seems easier to
use than mine. Great job!

> I'm not sure how practical this component would be in a non-trivial
> application.

Here are random comments about the changes I had to make, when
confronted to a real application using nested deferreds, DeferredList,
various error handling...

- First, good news, your code almost compiles on Windows (VS 2005). I
had to typedef int32_t (why don't you simply use int?), comment out
the StackFrameFactory, and declare some functions/classes with
__declspec(dllexport) (with the help of a macro) so we can build a
DLL.

- In my eyes, the notation "addCallback" is more readable than
"add_callback" (and it's the one used by twisted python), but that's a
matter of taste. On the other hand I found disturbing at first to fire
deferreds with the methods "succeed()" and "fail()" (instead of
callback() and errback()

- I found that my callbacks often have a void result, and deferred are
sometimes fired without a value. For example, a twisted DeferredList
often just waits for its children to finish. The results may be
gathered somewhere, but the callbacks return None.
I took the liberty to change your code and add *a lot* of template
specializations for the "void" ReturnType or ResultType.
I suggest that when a callback takes no parameter, it can be added to
any Deferred, whatever its current state (and the current value is
simply discarded).

- In some cases my callbacks take additional arguments (the twisted
"callbackArgs"). To make it possible I used the
boost::bind functions, and a wrapper class that converts any
boost::function to a ion::ICallback.

- Several times I had a "Can't add invalid callback" error, and I
found it difficult to figure which type was in the deferred state (the
previous callback returned a Deferred, and so on...) So I extended
ITypeInfo with a "const char* typename" member, that I fill with
"typeid(Object).name()". Much easier to see with the debugger...

- I tried to implement a DeferredList. I almost succeeded, except that
it simply inherit from Deferred and it seems a bad idea: when the
DeferredList is returned as a plain Deferred, all state is lost... and
the application crashes.
Maybe Deferred should be a kind of "shared pointer" to the real
object: DeferredState or DeferredListState

- Errr... I'm not sure I understood the "trule" concept. When do you
use it? What are its semantics regarding ownership? is it similar to
std::auto_ptr?

- How is one supposed to get the content of a Failure? I use code like
this, but it seems too long for this simple task:
  void MyProcess::displayError(ion::trule<ion::Failure> failure)
  {
    std::string message = ion::ptr<ion::Failure>(failure)->get_message();
    [...]
    throw ion::UnhandledFailureError(failure);
  }

- likewise, it should be possible to simply
    throw Failure("Some error message");

> The reliance on templates would negatively affect
> compile time, for one thing.  More importantly, I've found
> deciphering the error messages produced by simple mistakes can be
> tricky.

I confirm: it is.

> Nonetheless, my main motivation was to see if it was
> possible at all and so I'm pleased that it works in the end.

I think my program can be considered as a non-trivial application (I
cannot show its code, though, except for the non-business framework)
It is definitely possible to implement a Twisted framework in C++. The
hard part is to make it nice for the developer. Programming with
callbacks already twists your mind, it becomes very difficult if the
language syntax hides the important part of the code.

The "ion" project seems promising! What extend do you intend to give it?

-- 
Amaury Forgeot d'Arc



From matt at madebykite.com  Tue Oct 21 12:23:06 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Tue, 21 Oct 2008 17:23:06 +0100
Subject: [Twisted-Python] Deferred in C++
In-Reply-To: <e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
References: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
	<e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
Message-ID: <2005065D-9B05-47A2-9ED4-6F5B3C3B4432@madebykite.com>

On 21 Oct 2008, at 17:14, Amaury Forgeot d'Arc wrote:

> On Sat, Oct 18, 2008 at 22:34, Jamu Kakar <jkakar at kakar.ca> wrote:
>> Hi,
>>
>> I've implemented Deferred in C++.  There is room for improvement and
>> optimization, but the basic core works.
>
> Wonderful! Awesome!
> So I am not the only one who tries to use Twisted concepts in C++.


Browsing the squid source code the other day, I noticed that it too  
uses a deferred like device.
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244





From lars.reimann at googlemail.com  Tue Oct 21 14:47:31 2008
From: lars.reimann at googlemail.com (Lars Reimann)
Date: Tue, 21 Oct 2008 20:47:31 +0200
Subject: [Twisted-Python] RAW Sockets, IP in UDP
Message-ID: <59acdf910810211147k2a2a5bddo1252f2114fc85a50@mail.gmail.com>

Hi all,

I am new to this list, but I have some hopefully simple questions for you.

I need to implement a listening RAW sockets which gives me all packets
at that particular interface. Next, I need to put this data into a
normal UDP container to send it to another host, where it is unpacked
again.

I am studying all the docs now, but any hints would be greatly appreciated!

Thx in advance.



From amauryfa at gmail.com  Tue Oct 21 15:06:23 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Tue, 21 Oct 2008 21:06:23 +0200
Subject: [Twisted-Python] Deferred in C++
In-Reply-To: <2005065D-9B05-47A2-9ED4-6F5B3C3B4432@madebykite.com>
References: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
	<e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
	<2005065D-9B05-47A2-9ED4-6F5B3C3B4432@madebykite.com>
Message-ID: <e27efe130810211206r6359a9bi1251b8054f0a067c@mail.gmail.com>

On Tue, Oct 21, 2008 at 18:23, Matthew Glubb wrote:
> On 21 Oct 2008, at 17:14, Amaury Forgeot d'Arc wrote:
>
>> On Sat, Oct 18, 2008 at 22:34, Jamu Kakar <jkakar at kakar.ca> wrote:
>>>
>>> Hi,
>>>
>>> I've implemented Deferred in C++.  There is room for improvement and
>>> optimization, but the basic core works.
>>
>> Wonderful! Awesome!
>> So I am not the only one who tries to use Twisted concepts in C++.
>
>
> Browsing the squid source code the other day, I noticed that it too uses a
> deferred like device.

Do you know where it is? a class or function name? I could only find a
"DeferredRead" class,
which seems to be a wrapper around an asynchronous socket.

Twisted's (and Jamu's!) deferreds are much more versatile and apply to anything.

-- 
Amaury Forgeot d'Arc



From matt at madebykite.com  Tue Oct 21 15:52:46 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Tue, 21 Oct 2008 20:52:46 +0100
Subject: [Twisted-Python] Deferred in C++
In-Reply-To: <e27efe130810211206r6359a9bi1251b8054f0a067c@mail.gmail.com>
References: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
	<e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
	<2005065D-9B05-47A2-9ED4-6F5B3C3B4432@madebykite.com>
	<e27efe130810211206r6359a9bi1251b8054f0a067c@mail.gmail.com>
Message-ID: <9BFDAE58-86C0-47A2-A4C1-F29A536ED6C1@madebykite.com>

Ah. Sorry, I didn't delve into it that deeply. Just raised an eyebrow  
and moved on. I might have been mistaken.

I was looking at the 2.7 source if it's any help.

Matt

On 21 Oct 2008, at 20:06, Amaury Forgeot d'Arc wrote:

> On Tue, Oct 21, 2008 at 18:23, Matthew Glubb wrote:
>> On 21 Oct 2008, at 17:14, Amaury Forgeot d'Arc wrote:
>>
>>> On Sat, Oct 18, 2008 at 22:34, Jamu Kakar <jkakar at kakar.ca> wrote:
>>>>
>>>> Hi,
>>>>
>>>> I've implemented Deferred in C++.  There is room for improvement  
>>>> and
>>>> optimization, but the basic core works.
>>>
>>> Wonderful! Awesome!
>>> So I am not the only one who tries to use Twisted concepts in C++.
>>
>>
>> Browsing the squid source code the other day, I noticed that it too  
>> uses a
>> deferred like device.
>
> Do you know where it is? a class or function name? I could only find a
> "DeferredRead" class,
> which seems to be a wrapper around an asynchronous socket.
>
> Twisted's (and Jamu's!) deferreds are much more versatile and apply  
> to anything.
>
> -- 
> Amaury Forgeot d'Arc
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From itamar at itamarst.org  Tue Oct 21 16:45:46 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 21 Oct 2008 16:45:46 -0400
Subject: [Twisted-Python] Available for short-term (non-typing) consulting
Message-ID: <48FE3F7A.2050703@itamarst.org>

Need help with Twisted, distributed systems or or just plain old 
software architecture?

Due to a repetitive strain injury I am unable to type, and so I'm taking 
some time off of work to recover (I'm writing this e-mail using voice 
dictation, thanks to Dragon NaturallySpeaking). As a result I am 
available for short-term consulting, training or design work for the 
next month, assuming of course it does not involve any typing.

I've worked on Twisted itself, as well as projects ranging from 
high-performance distributed C++ servers, to an access control framework 
for an airline reservation system, to a multimedia kiosk system for the 
Israel Museum in Jerusalem:
http://itamarst.org/resume.html

And for the next month, I can help you! Send me an e-mail (if possible 
including a phone number so I don't have to use the computer to reply) 
if you're interested.

-- Itamar



From jkakar at kakar.ca  Wed Oct 22 05:05:43 2008
From: jkakar at kakar.ca (Jamu Kakar)
Date: Wed, 22 Oct 2008 10:05:43 +0100
Subject: [Twisted-Python] Deferred in C++
In-Reply-To: <e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
References: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
	<e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
Message-ID: <aa66e7aa0810220205h719a136jd40f2937c2e4fae6@mail.gmail.com>

Hi Amaury,

On Tue, Oct 21, 2008 at 5:14 PM, Amaury Forgeot d'Arc
<amauryfa at gmail.com> wrote:
> So I am not the only one who tries to use Twisted concepts in C++.

Heh, it's lonely being a C++ nerd, isn't it. ;) I'm mostly
interested in seeing what's possible and trying to understand how to
port very interesting APIs from Python to C++.

> I did write some kind of a Deferred class in C++ myself, together with
> a re-implementation of a Twisted framework (two reactors featuring TCP
> client & server, callLater, callInThread...; a selectReactor and a
> native MFC reactor that merges nicely in a Windows application, yes,
> there are some; Protocols, LineReceiver, HttpClient & server...)
> and I already have a running business application that uses all of it
> on Windows.
>
> The Deferred part was really hard to implement, and may be the reason
> why it was never done before. It really pushed me out of my C++
> knowledge.
> I tried to convert my code to use your class, which seems easier to
> use than mine. Great job!

The most difficult part for me was dealing with Deferred-returning
callbacks and getting the pausing/unpausing behaviour to work
correctly.  The difficult part was that all the template functions
caused order of definition issues.  The DeferredTypeInfo was
introduced for this case to make Deferred a template parameter and,
therefore, work around the ordering issues.  It's really heinously
complicated inside and I have to decipher it each time I look at it.
It's always a bad sign when you're the author of the code you can't
comprehend. :)

> - First, good news, your code almost compiles on Windows (VS 2005). I
> had to typedef int32_t (why don't you simply use int?), comment out
> the StackFrameFactory, and declare some functions/classes with
> __declspec(dllexport) (with the help of a macro) so we can build a
> DLL.

Cool, glad to hear it.  I didn't expect problems, but just haven't
had time to port it (and also have VS2005 as my base target compiler
for Windows).  I plan to s/int32_t/int/, but haven't gotten around
to it.  It's a historic artifact in that code from many years ago
that I've continued for the time being to keep things consistent.

> - In my eyes, the notation "addCallback" is more readable than
> "add_callback" (and it's the one used by twisted python), but that's a
> matter of taste. On the other hand I found disturbing at first to fire
> deferreds with the methods "succeed()" and "fail()" (instead of
> callback() and errback()

The style issue is entirely personal, so yeah, I can see why you
feel that way.  As far as succeed() and fail() vs. callback() and
errback(), this change was a suggestion from Christopher Armstrong.
Apparently, a lot of Twisted users have been confused by callback
(the callable you add to a Deferred) vs callback (the method you
call to fire the Deferred), and similar for errback.

> - I found that my callbacks often have a void result, and deferred are
> sometimes fired without a value. For example, a twisted DeferredList
> often just waits for its children to finish. The results may be
> gathered somewhere, but the callbacks return None.
> I took the liberty to change your code and add *a lot* of template
> specializations for the "void" ReturnType or ResultType.
> I suggest that when a callback takes no parameter, it can be added to
> any Deferred, whatever its current state (and the current value is
> simply discarded).

This is on my list of things to add, but haven't gotten around to it
yet.  My plan is to throw a NoResultError or something whenever a
callback is added to a Deferred that already has void-returning
callback at the end of the chain.  Though, hmm... I guess you might
still want to add an errback to handle errors from the
void-returning callback.

> - In some cases my callbacks take additional arguments (the twisted
> "callbackArgs"). To make it possible I used the
> boost::bind functions, and a wrapper class that converts any
> boost::function to a ion::ICallback.

Ah, nice.  Yeah, I was wondering about that and have been
considering implementing a specialized ICallback that can store
arguments.

> - Several times I had a "Can't add invalid callback" error, and I
> found it difficult to figure which type was in the deferred state (the
> previous callback returned a Deferred, and so on...) So I extended
> ITypeInfo with a "const char* typename" member, that I fill with
> "typeid(Object).name()". Much easier to see with the debugger...

Good call.  Yeah, I've had the same issue interpreting
InvalidCallbackError's.

> - I tried to implement a DeferredList. I almost succeeded, except that
> it simply inherit from Deferred and it seems a bad idea: when the
> DeferredList is returned as a plain Deferred, all state is lost... and
> the application crashes.
> Maybe Deferred should be a kind of "shared pointer" to the real
> object: DeferredState or DeferredListState

Deferred is a "shared pointer" to DeferredState...?  Maybe I'm not
understanding your point?

> - Errr... I'm not sure I understood the "trule" concept. When do you
> use it? What are its semantics regarding ownership? is it similar to
> std::auto_ptr?

This is an implementation of the Holder/Trule pattern described in
Josuttis' "C++ Templates" book.  There is a reason, which I can't
recall right now, that makes returning a ptr (or auto_ptr) from a
function potentially dangerous (and also passing one in) that trule
fixes.

My plan is to migrate to the Boost pointers that will become part of
the standard library in C++0x.  This will make working with smart
pointers in ion much nicer.  The ptr/trule pattern is quite
cumbersome, especially when templates are involved.

> - How is one supposed to get the content of a Failure? I use code like
> this, but it seems too long for this simple task:
>  void MyProcess::displayError(ion::trule<ion::Failure> failure)
>  {
>    std::string message = ion::ptr<ion::Failure>(failure)->get_message();
>    [...]
>    throw ion::UnhandledFailureError(failure);
>  }
>
> - likewise, it should be possible to simply
>    throw Failure("Some error message");

The displayError above is what you're expected to do, so far.  If
there's a better way I'd love to hear it.  There's actually a deeper
issue that makes Failure/error handling in this implementation kind
of crappy.  The type of an exception is lost when caught in a catch
block for a base class of the thrown exception.  Which means that
it's not possible, currently, to determine the concrete exception
type from a Failure.  One thing I've been considering is making the
ion::Exception class provide some extra functionality to make this
possible, but I'm unhappy that doing that will make implementing
custom ion::Exception's harder.

Being able to throw a Failure with a string message is a good idea.

>> The reliance on templates would negatively affect
>> compile time, for one thing.  More importantly, I've found
>> deciphering the error messages produced by simple mistakes can be
>> tricky.
>
> I confirm: it is.

Heh. :)

>> Nonetheless, my main motivation was to see if it was
>> possible at all and so I'm pleased that it works in the end.
>
> I think my program can be considered as a non-trivial application (I
> cannot show its code, though, except for the non-business framework)
> It is definitely possible to implement a Twisted framework in C++. The
> hard part is to make it nice for the developer. Programming with
> callbacks already twists your mind, it becomes very difficult if the
> language syntax hides the important part of the code.

This "make it nice for the developer" is the primary goal I have
with this effort.

> The "ion" project seems promising! What extend do you intend to give it?

I'm interested in getting to the point where there's a Twisted-style
reactor and, eventually, support for using AMP-based protocols.

Thanks,
J.



From jakamkon at gmail.com  Wed Oct 22 10:08:17 2008
From: jakamkon at gmail.com (Kuba Konczyk)
Date: Wed, 22 Oct 2008 15:08:17 +0100
Subject: [Twisted-Python] RAW Sockets, IP in UDP
In-Reply-To: <59acdf910810211147k2a2a5bddo1252f2114fc85a50@mail.gmail.com>
References: <59acdf910810211147k2a2a5bddo1252f2114fc85a50@mail.gmail.com>
Message-ID: <2e947fbb0810220708p1747e468r6e7f82e60bf851e3@mail.gmail.com>

Hi,

2008/10/21 Lars Reimann <lars.reimann at googlemail.com>:
> Hi all,
>
> I need to implement a listening RAW sockets which gives me all packets
> at that particular interface. Next, I need to put this data into a
> normal UDP container to send it to another host, where it is unpacked
> again.

Low level packet handling part of Twisted (twisted.pair) isn't really
usable for your use case and hasn't been updated for a quite a long
time.

As it comes to receiving and sending raw packets you have a few
options to choose from.If you don't care about portability you can
just use AF_PACKET socket from  python's standard library which is
supported only on linux.Otherwise you need to use one of many python
libpcap wrappers like  pypcap, pylibcap or python-pcapy.Not all of
them support sending packets.If you choose one that doesn't you can
always use python bindings for libdnet.

After all that you still have to choose packet parsing/contruction
library like dpkt, umit umpa or scapy.

--
Kuba



From terry at jon.es  Fri Oct 24 11:25:29 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 24 Oct 2008 17:25:29 +0200
Subject: [Twisted-Python] Consensus on speed of deferred call/errback-style
	execution?
Message-ID: <18689.59625.326096.492013@jon.es>

Last year someone mentioned to me that using defer.inlineCallbacks (versus
writing a bunch of independent standalone callback functions) incurs some
sort of (significant) speed penalty during execution.

How accurate is that?


More generally, there are many styles one can use to write and add
callbacks to a deferred. Is there any consensus on the "best" way to do it,
or are there rules of thumb that people have figured out, etc?

I sometimes use defer.inlineCallbacks and then have a bunch of yields in a
function. That saves writing and naming and addCallbacking a bunch of
callback functions and can make for much nicer and easier to understand
code.  But the comment that using inlineCallbacks is slower sticks in my
mind.

Very briefly, you can add a bunch of callbacks to a deferred in multiple
ways. E.g.,

 1. A bunch of top-level functions
 2. A top-level function that nests callbacks that nest callbacks...
 3. A bunch of top-level class methods
 4. A top-level class method that nests callbacks...

This is deliberately simplistic, and all the above can of course also be
mixed.

I wrote a little timing code to play with this (via timing a function that
uses inlineCallbacks that yields a single passed deferred) but decided to
ask here before going much further as there are lots of different avenues
that could be explored.

Terry



From donwsmith at gmail.com  Fri Oct 24 11:36:47 2008
From: donwsmith at gmail.com (Don Smith)
Date: Fri, 24 Oct 2008 08:36:47 -0700
Subject: [Twisted-Python] SOAP Client?
Message-ID: <24f63c200810240836s20a6aa68k7b7ae09d8f2b6c61@mail.gmail.com>

Is there a SOAP client available in Twisted, or one that would be
recommended to use with Twisted?

Thanks,

Don Smith
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081024/52a8e78e/attachment.htm 

From ntoper at gmail.com  Fri Oct 24 11:40:12 2008
From: ntoper at gmail.com (Nicolas Toper)
Date: Fri, 24 Oct 2008 17:40:12 +0200
Subject: [Twisted-Python] SOAP Client?
In-Reply-To: <24f63c200810240836s20a6aa68k7b7ae09d8f2b6c61@mail.gmail.com>
References: <24f63c200810240836s20a6aa68k7b7ae09d8f2b6c61@mail.gmail.com>
Message-ID: <fcbb46050810240840g3fdedda4wc2c0e513a5a830ea@mail.gmail.com>

Hi,

There is SoapPy already included.

On Fri, Oct 24, 2008 at 5:36 PM, Don Smith <donwsmith at gmail.com> wrote:

> Is there a SOAP client available in Twisted, or one that would be
> recommended to use with Twisted?
>
> Thanks,
>
> Don Smith
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
A+
Nico
http://www.deviant-abstraction.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081024/8d562a28/attachment.htm 

From exarkun at divmod.com  Fri Oct 24 11:41:21 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 24 Oct 2008 11:41:21 -0400
Subject: [Twisted-Python] Consensus on speed of deferred
	call/errback-style execution?
In-Reply-To: <18689.59625.326096.492013@jon.es>
Message-ID: <20081024154121.29191.747387544.divmod.quotient.44219@ohm>

On Fri, 24 Oct 2008 17:25:29 +0200, Terry Jones <terry at jon.es> wrote:
>Last year someone mentioned to me that using defer.inlineCallbacks (versus
>writing a bunch of independent standalone callback functions) incurs some
>sort of (significant) speed penalty during execution.
>
>How accurate is that?
>

Dunno.

> [snip]
>
>Very briefly, you can add a bunch of callbacks to a deferred in multiple
>ways. E.g.,
>
> 1. A bunch of top-level functions
> 2. A top-level function that nests callbacks that nest callbacks...
> 3. A bunch of top-level class methods
> 4. A top-level class method that nests callbacks...
>
>This is deliberately simplistic, and all the above can of course also be
>mixed.
>
>I wrote a little timing code to play with this (via timing a function that
>uses inlineCallbacks that yields a single passed deferred) but decided to
>ask here before going much further as there are lots of different avenues
>that could be explored.
>

A suite of benchmarks for Deferred has been on my to-do list for a long
time.  Aside from knowing which usage patterns are more efficient, this
needs to be part of our testing process so we can evaluate optimization
of Deferred and be aware of performance regressions we might introduce.

I don't know if anyone else has done this already, but if you end up
writing something, it'd be great if it were in a form which could be
run automatically as part of our build process.

Jean-Paul



From exarkun at divmod.com  Fri Oct 24 11:43:10 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 24 Oct 2008 11:43:10 -0400
Subject: [Twisted-Python] SOAP Client?
In-Reply-To: <24f63c200810240836s20a6aa68k7b7ae09d8f2b6c61@mail.gmail.com>
Message-ID: <20081024154310.29191.2020992455.divmod.quotient.44221@ohm>

On Fri, 24 Oct 2008 08:36:47 -0700, Don Smith <donwsmith at gmail.com> wrote:
>Is there a SOAP client available in Twisted, or one that would be
>recommended to use with Twisted?

Aside from twisted.web.soap, ZSI includes Twisted support.  Last time I
looked at it, the implementation was... well, I'd call it wrong.  But
perhaps it works well enough for some cases.  My understanding is that
ZSI is the best SOAP library available for Python; based on that, I'd
really like to see some support in Twisted for SOAP which was based on
it.

Jean-Paul



From glyph at divmod.com  Fri Oct 24 12:03:39 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 24 Oct 2008 16:03:39 -0000
Subject: [Twisted-Python] Consensus on speed of deferred call/errback-style
	execution?
In-Reply-To: <18689.59625.326096.492013@jon.es>
References: <18689.59625.326096.492013@jon.es>
Message-ID: <20081024160339.6400.1373873889.divmod.xquotient.395@weber.divmod.com>




On 03:25 pm, terry at jon.es wrote:
>Last year someone mentioned to me that using defer.inlineCallbacks 
>(versus
>writing a bunch of independent standalone callback functions) incurs 
>some
>sort of (significant) speed penalty during execution.
>
>How accurate is that?

I don't believe there's been any extensive profiling of inlineCallbacks. 
At least, none that I'm aware of.  I think what you are remembering is 
that inlineCallbacks generally results in an (often implicit, sometimes 
unintentional) loss of parallelism.  For example, consider this 
idiomatic code:

    xd = foo()
    yd = foo()
    zd = foo()
    def myCallback(x, y, z):
        doStuff(x) + doStuff(y) / doStuff(z)
    gatherResults([x, y, z]).addCallback(myCallback)

That does all three 'foo' operations in parallel, which is generally 
faster.  But the idiomatic inlineCallbacks version:

    doStuff(yield foo()) + doStuff(yield foo()) / doStuff(yield foo())

while making all kinds of sexy use of expressions rather than 
statements, loses that parallelism: you don't get to the second foo() 
call until the first one has completed and its results have been 
processed.  If each foo() call has a 500ms latency this can really add 
up.  Of course you can work around this:

    xd = foo()
    yd = foo()
    zd = foo()
    doStuff(yield xd) + doStuff(yield yd) / doStuff(yield zd)

but it can be difficult to remember to do so, and it starts looking a 
lot more like regular callback-style code.

I think inlineCallbacks is neat, but its strength is really operations 
that are truly conversational; where the calling end of the conversation 
actually does need to wait for each step of an asynchronous conversation 
to complete before moving on to the next one.  A dead giveaway that it's 
going to be awkward to make your inlineCallbacks appropriately parallel 
is if you start writing a 'for' loop that yields a Deferred in its body.



From paulswartz at gmail.com  Fri Oct 24 13:32:26 2008
From: paulswartz at gmail.com (Paul Swartz)
Date: Fri, 24 Oct 2008 13:32:26 -0400
Subject: [Twisted-Python] sending signal through SSHChannel
In-Reply-To: <8cc9d3030809300906u1db77d9ag2abb2e5257ab6a57@mail.gmail.com>
References: <8cc9d3030809300906u1db77d9ag2abb2e5257ab6a57@mail.gmail.com>
Message-ID: <324cfb540810241032n850f076j7b278ab382d9a26e@mail.gmail.com>

On Tue, Sep 30, 2008 at 12:06 PM, Frans M?rtensson
<frans.martensson at gmail.com> wrote:
> Hello!
>
> I have written a python program that executes shell scripts on remote
> computers using the twisted conch SSHChannel. Several shell scripts
> are executed at once on several machines and the scripts range in
> execution time from minutes to hours.
>
> My question is regarding the behavior of Conch when it is shut down.
> What i would like to do is to send a SIGINT or SIGKILL to the remote
> script so that it can terminate in an orderly fashion. I am using the
> channel.SSHChannel as a base class for my task. Is there a mechanism
> in Conch for sending this signal?

There's a mechanism for sending signals in SSH, although Conch doesn't
expose it directly.  The code looks something like this:

    channel.conn.sendRequest(channel, 'signal', NS('KILL'))

For more information on what kinds of signal names you can send and on
the 'signal' request generally, you should read RFC4254 section 6.9

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.jot.com/
AIM: z3penguin

From terry at jon.es  Fri Oct 24 15:40:01 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 24 Oct 2008 21:40:01 +0200
Subject: [Twisted-Python] Consensus on speed of deferred call/errback-style
	execution?
In-Reply-To: Your message at 16:03:39 on Friday, 24 October 2008
References: <18689.59625.326096.492013@jon.es>
	<20081024160339.6400.1373873889.divmod.xquotient.395@weber.divmod.com>
Message-ID: <18690.9361.886966.761432@jon.es>

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> I don't believe there's been any extensive profiling of
glyph> inlineCallbacks.  At least, none that I'm aware of.  I think what
glyph> you are remembering is that inlineCallbacks generally results in an
glyph> (often implicit, sometimes unintentional) loss of parallelism.

Yes, it's possible that the person I heard from informally was thinking of
this of had heard something along these lines, etc.

It's funny, Esteve and I were talking about code like your example just a
few days ago.  You have to know what you're doing. I agree the
best/simplest example is where you have some form of loop and you should
use a DeferredList, else you're implicitly serializing things that could be
launched virtually all at once and finishing in any order at all.

I'm interested not in those cases though, but in whether there's some
mechanical (due to Python) advantage to one style of coding versus another.

I might play a little more. I was going to write some code to generate
different varieties of behaviorally-equivalent but differently structured
code. In fact I think it wouldn't be hard to write something that could
write your code for you in a variety of ways. E.g., you could write
pseudo-code like

  a = A()
  if a < 45:
     b = B()
     c = a + b.hey() - C()
     if c:
       return D(12, c)
     else:
       return E()
  return F(a)

and something digs through this code, figures out (maybe via a decorator
used on functions returning a deferred - ugh, but it's just one suggestion)
which of A, B, C, D and E return deferreds and spits out code to handle
things for you.

I could say more, but I'm sure no-one would reply :-)

Thanks!

Terry



From exarkun at divmod.com  Fri Oct 24 16:27:05 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 24 Oct 2008 16:27:05 -0400
Subject: [Twisted-Python] Consensus on speed of deferred
	call/errback-style execution?
In-Reply-To: <18690.9361.886966.761432@jon.es>
Message-ID: <20081024202705.29191.1505350548.divmod.quotient.44313@ohm>

On Fri, 24 Oct 2008 21:40:01 +0200, Terry Jones <terry at jon.es> wrote:
> [snip]
>
>I might play a little more. I was going to write some code to generate
>different varieties of behaviorally-equivalent but differently structured
>code. In fact I think it wouldn't be hard to write something that could
>write your code for you in a variety of ways. E.g., you could write
>pseudo-code like
>
>  a = A()
>  if a < 45:
>     b = B()
>     c = a + b.hey() - C()
>     if c:
>       return D(12, c)
>     else:
>       return E()
>  return F(a)
>
>and something digs through this code, figures out (maybe via a decorator
>used on functions returning a deferred - ugh, but it's just one suggestion)
>which of A, B, C, D and E return deferreds and spits out code to handle
>things for you.

Possibly, but maybe trickier than you hope.  This is basically what is
called the "stackless transform" in PyPy.  It's about a thousand lines
for them to implement, and it only works on RPython, not Python.

Jean-Paul



From terry at jon.es  Fri Oct 24 16:46:16 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 24 Oct 2008 22:46:16 +0200
Subject: [Twisted-Python] Consensus on speed of deferred
	call/errback-style execution?
In-Reply-To: Your message at 16:27:05 on Friday, 24 October 2008
References: <18690.9361.886966.761432@jon.es>
	<20081024202705.29191.1505350548.divmod.quotient.44313@ohm>
Message-ID: <18690.13336.969162.404282@jon.es>

Hi JP

>>>>> "JP" == Jean-Paul Calderone <exarkun at divmod.com> writes:
JP> Possibly, but maybe trickier than you hope.  This is basically what is
JP> called the "stackless transform" in PyPy.  It's about a thousand lines
JP> for them to implement, and it only works on RPython, not Python.

Unfortunately, everything is trickier than I hope :-)

Thanks - I keep meaning to play with PyPy, but I never have. One day...

T



From daedalus at eigenmagic.com  Sat Oct 25 20:46:08 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Sun, 26 Oct 2008 11:46:08 +1100
Subject: [Twisted-Python] RAW Sockets, IP in UDP
In-Reply-To: <59acdf910810211147k2a2a5bddo1252f2114fc85a50@mail.gmail.com>
References: <59acdf910810211147k2a2a5bddo1252f2114fc85a50@mail.gmail.com>
Message-ID: <1224981968.29387.36.camel@fnord>

On Tue, 2008-10-21 at 20:47 +0200, Lars Reimann wrote:
> Hi all,
> 
> I am new to this list, but I have some hopefully simple questions for you.
> 
> I need to implement a listening RAW sockets which gives me all packets
> at that particular interface. Next, I need to put this data into a
> normal UDP container to send it to another host, where it is unpacked
> again.
> 
> I am studying all the docs now, but any hints would be greatly appreciated!

Hi Lars,

I had similar issues with the twisted.pair code, so I wrote up my own
implementation to do ICMP using Twisted.

Grab this file:
http://www.seafelt.com/software/sources/seafelt-backend_2.1.2-1.tar.gz

extract it, and look at lib/seafelt/icmp.py for some code you might be
able to use.

-- 
Justin Warren <daedalus at eigenmagic.com>




From exarkun at twistedmatrix.com  Sun Oct 26 00:05:11 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Oct 2008 04:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1224993911.89.1703512819@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081026/6772c837/attachment.htm 

From andrewfr_ice at yahoo.com  Sun Oct 26 04:49:31 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 26 Oct 2008 01:49:31 -0700 (PDT)
Subject: [Twisted-Python] Re: Consensus on speed of deferred
	call/errback-style execution?
In-Reply-To: <E1KtlYa-0007ea-Gw@cube.twistedmatrix.com>
Message-ID: <404645.46308.qm@web34203.mail.mud.yahoo.com>

Hi Glyph:

> I think inlineCallbacks is neat,

InlineCallbacks are neat! InlineCallbacks perform much of what I do with Stackless Python and Twisted. One of these days, I would like to run tests to compare the two. I suspect there is additional overhead (from what I recall, I see stuff in the code like unwinding stacks/checks for infinite recursion)

>but its strength is really operations  that are truly conversational; >where the calling end of the conversation actually does need to wait for >each step of an asynchronous conversation to complete before moving on to >the next one. 

And a lot of the new Web APIs are conversational in nature! I think inlineCallbacks will grow in importance as web programmes move from mashups to orchestrations/choreographies.

Cheers,
Andrew


      



From b.levin at hvcc.edu  Tue Oct 28 10:42:49 2008
From: b.levin at hvcc.edu (Brian Levin)
Date: Tue, 28 Oct 2008 10:42:49 -0400 (EDT)
Subject: [Twisted-Python] Passing revieved rata and erroring out bad
 passowrds
Message-ID: <20081028104249.ALB71124@mpoint.hvcc.edu>

I apologizes if these are simple questions.  I am a complete newb when it comes to python and twisted.  I am trying to pass a command via ssh to a server.  I am having 2 problems.  I am hoping that someone can help me.  I have been unable to find answers in "the google".  

Problem 1: I am unable to pass the received data to a variable without creating a global.  As a general rule it is my understanding that the use of globals in python should be avoided.  If there is a better method for passing the data variable out of the dataReceived method I would prefer to use it.

Problem 2:  A bad password or username causes and infinite loop.  I need to find a way to cause an error or return a false value when the password or username is bad.

I have included my code below.  Any help would be most appreciated.  Thank you in advance

--Brian Levin

<code>

from twisted.conch.ssh import transport, userauth, connection, channel
from twisted.conch.ssh.common import NS
from twisted.internet import defer, protocol, reactor
from twisted.python import log
from getpass import getpass


class Transport(transport.SSHClientTransport):
    def verifyHostKey(self, hostKey, fingerprint):
        print 'host key fingerprint: %s' % fingerprint
        return defer.succeed(1)

    def connectionSecure(self):
        self.requestService(UserAuth(USER, Connection()))

class UserAuth(userauth.SSHUserAuthClient):
    def getPassword(self):
        return defer.succeed(getpass("password: "))
    def getPublicKey(self):
        return  # Empty implementation: always use password auth
class Connection(connection.SSHConnection):
    def serviceStarted(self):
        self.openChannel(Channel(2**16, 2**15, self))

class Channel(channel.SSHChannel):
	name = 'session'    # must use this exact string
	def openFailed(self, reason):
		print '"%s" failed: %s' % (CMD,reason)
	def channelOpen(self, data):
		self.welcome = data   # Might display/process welcome screen
		d = self.conn.sendRequest(self,'exec',NS(CMD),wantReply=1)
		
	def dataReceived(self, data):
		global test
		test = data

	def closed(self):
		self.loseConnection()
		reactor.stop()

USER = raw_input('User: ')
HOST = raw_input('Host: ')
CMD = raw_input('CMD: ')
protocol.ClientCreator(reactor, Transport).connectTCP(HOST, 22)
reactor.run()
print test

</code>



From exarkun at divmod.com  Tue Oct 28 11:19:55 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Oct 2008 10:19:55 -0500
Subject: [Twisted-Python] Passing revieved rata and erroring out bad
	passowrds
In-Reply-To: <20081028104249.ALB71124@mpoint.hvcc.edu>
Message-ID: <20081028151955.29191.1818215149.divmod.quotient.45883@ohm>

On Tue, 28 Oct 2008 10:42:49 -0400 (EDT), Brian Levin <b.levin at hvcc.edu> wrote:
>I apologizes if these are simple questions.  I am a complete newb when it comes to python and twisted.  I am trying to pass a command via ssh to a server.  I am having 2 problems.  I am hoping that someone can help me.  I have been unable to find answers in "the google".
>
>Problem 1: I am unable to pass the received data to a variable without creating a global.  As a general rule it is my understanding that the use of globals in python should be avoided.  If there is a better method for passing the data variable out of the dataReceived method I would prefer to use it.

I'm not sure what you mean by "pass the received data to a variable".  In
general, I think that it only makes sense to pass objects to functions.
What you do to variables is set them.  From looking at your code, I'm not
sure what you want to accomplish.  Your code sets a global variable and
later, when your program is done and about to exit, prints the value.  If
that's all you want to do, you could just print the value instead of setting
a variable to it.  I suspect you want to do something else, but I don't
know what.  Whatever it is, it will probably involve calling a function or
method of some object, probably passing the data you received (or some
transformation of it) as an argument.

>
>Problem 2:  A bad password or username causes and infinite loop.  I need to find a way to cause an error or return a false value when the password or username is bad.

I'm not sure about this one.

Jean-Paul



From Andy at newworldelectric.com  Tue Oct 28 15:36:13 2008
From: Andy at newworldelectric.com (Andy Fundinger)
Date: Tue, 28 Oct 2008 15:36:13 -0400
Subject: [Twisted-Python] Passing revieved rata and erroring out bad
	passowrds
In-Reply-To: <20081028151955.29191.1818215149.divmod.quotient.45883@ohm>
References: <20081028104249.ALB71124@mpoint.hvcc.edu>
	<20081028151955.29191.1818215149.divmod.quotient.45883@ohm>
Message-ID: <37d49ed40810281236h6c2d918alca85069c0f401f3@mail.gmail.com>

For the password problem, I think what you want to do is raise an
exception, which will in turn cause your defereds to call their error
backs.  In the error back you can handle the particular error however
you need to.  That's probably something you need to either setup in
the getpass module, alternatively, that may be setup already and just
waiting for you to addErrback() on it.

- Andy Fundinger

On Tue, Oct 28, 2008 at 11:19 AM, Jean-Paul Calderone
<exarkun at divmod.com> wrote:
> On Tue, 28 Oct 2008 10:42:49 -0400 (EDT), Brian Levin <b.levin at hvcc.edu>
> wrote:
>>
>> I apologizes if these are simple questions.  I am a complete newb when it
>> comes to python and twisted.  I am trying to pass a command via ssh to a
>> server.  I am having 2 problems.  I am hoping that someone can help me.  I
>> have been unable to find answers in "the google".
>>
>> Problem 2:  A bad password or username causes and infinite loop.  I need
>> to find a way to cause an error or return a false value when the password or
>> username is bad.
>
> I'm not sure about this one.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

Watch out for the invisible man.



From kevin.horn at gmail.com  Tue Oct 28 17:08:52 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 28 Oct 2008 16:08:52 -0500
Subject: [Twisted-Python] Passing revieved rata and erroring out bad
	passowrds
In-Reply-To: <37d49ed40810281236h6c2d918alca85069c0f401f3@mail.gmail.com>
References: <20081028104249.ALB71124@mpoint.hvcc.edu>
	<20081028151955.29191.1818215149.divmod.quotient.45883@ohm>
	<37d49ed40810281236h6c2d918alca85069c0f401f3@mail.gmail.com>
Message-ID: <562bcc10810281408j4442ed59x33c4a9202a710a3a@mail.gmail.com>

Assuming the getpass is the one the from the std lib, I don't see why you're
overriding getPassword at all.

according to the API docs, you should be able to get a custom prompt just by
adding a prompt parameter:
http://twistedmatrix.com/documents/8.1.0/api/twisted.conch.ssh.userauth.SSHUserAuthClient.html#getPassword

and you probably don't want to call succeed() on the deferred you are
returning, since that likely screws up the whole auth calback chain

if you were looking at this example:
http://www.devshed.com/c/a/Python/SSH-with-Twisted/4/
realize that it might be misleading, as the author overrides the __init__ of
his SSHUserAuthClient and passes the password in directly
(he does not prompt the user for it)

...or I could be misunderstanding the way the module works... :)

Good Luck!

Kevin Horn

On Tue, Oct 28, 2008 at 2:36 PM, Andy Fundinger
<Andy at newworldelectric.com>wrote:

> For the password problem, I think what you want to do is raise an
> exception, which will in turn cause your defereds to call their error
> backs.  In the error back you can handle the particular error however
> you need to.  That's probably something you need to either setup in
> the getpass module, alternatively, that may be setup already and just
> waiting for you to addErrback() on it.
>
> - Andy Fundinger
>
> On Tue, Oct 28, 2008 at 11:19 AM, Jean-Paul Calderone
> <exarkun at divmod.com> wrote:
> > On Tue, 28 Oct 2008 10:42:49 -0400 (EDT), Brian Levin <b.levin at hvcc.edu>
> > wrote:
> >>
> >> I apologizes if these are simple questions.  I am a complete newb when
> it
> >> comes to python and twisted.  I am trying to pass a command via ssh to a
> >> server.  I am having 2 problems.  I am hoping that someone can help me.
>  I
> >> have been unable to find answers in "the google".
> >>
> >> Problem 2:  A bad password or username causes and infinite loop.  I need
> >> to find a way to cause an error or return a false value when the
> password or
> >> username is bad.
> >
> > I'm not sure about this one.
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> Blog:  http://channel3b.wordpress.com
> Second Life Name:  Ciemaar Flintoff
>
> Watch out for the invisible man.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20081028/6b03f45e/attachment.htm 

From matusis at yahoo.com  Wed Oct 29 02:40:38 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Tue, 28 Oct 2008 23:40:38 -0700
Subject: [Twisted-Python] Shared memory for multiple twisted servers
Message-ID: <01ff01c93991$41cd1410$c5673c30$@com>

I am thinking of writing 8 identical twisted servers that would run on an 8
core machine and would have shared memory objects (lists or maybe
dictionaries), that they can all access and modify. Perhaps somewhat similar
to multiprocessing module in python 2.6.

What is the best way of doing this? 




From glyph at divmod.com  Wed Oct 29 03:02:40 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 29 Oct 2008 07:02:40 -0000
Subject: [Twisted-Python] Shared memory for multiple twisted servers
In-Reply-To: <01ff01c93991$41cd1410$c5673c30$@com>
References: <01ff01c93991$41cd1410$c5673c30$@com>
Message-ID: <20081029070240.6400.1988208918.divmod.xquotient.508@weber.divmod.com>


On 06:40 am, matusis at yahoo.com wrote:
>I am thinking of writing 8 identical twisted servers that would run on 
>an 8
>core machine and would have shared memory objects (lists or maybe
>dictionaries), that they can all access and modify. Perhaps somewhat 
>similar
>to multiprocessing module in python 2.6.
>
>What is the best way of doing this?

You might consider having a look at this:

    https://launchpad.net/ampoule

I haven't personally gotten to use it yet, but I've been following its 
development with great interest.  Assuming it does what it says on the 
tin, I think it is likely to be folded in to Twisted proper at some 
point.



From manuel at vikingosegundo.de  Wed Oct 29 12:57:03 2008
From: manuel at vikingosegundo.de (Manuel Meyer)
Date: Wed, 29 Oct 2008 18:57:03 +0200
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
	<m3prm3noi6.fsf@neo.luffy.cx>
	<59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>
	<050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>
Message-ID: <21F89D3F-B066-4F0B-9B0A-BA8F1CD36793@vikingosegundo.de>

>
>> But I don't know how to inform IRCServer about changes in the site/ 
>> db. Maybe by adding another network protocol to the twisted  
>> application, where django's signals could leave a note?
>
> I may be missing something, but if you keep all your data in the DB,  
> there's no need to notify the irc server of changes to the DB.
>
> The only time you'll need this user information (it seems) is while  
> responding to /join and /list requests. Just read the DB at that time.
>
> What's nice about this is the DB takes care of most if not all of  
> your synchronization requirements, so you have far fewer concurrency  
> issues to think about than if you were broadcasting changes from the  
> web app to the irc server.

I couldn't come online for quite awhile....

No, you didnt miss anything, I missed to explain new thoughts I came  
up with:

If the irc server is already connected with the django site, why not  
offer users the possibility of chatting via js-powered chat like in  
facebook. But therefor the irc server must be informed somehow.

Manuel



From manuel at vikingosegundo.de  Wed Oct 29 12:59:05 2008
From: manuel at vikingosegundo.de (Manuel Meyer)
Date: Wed, 29 Oct 2008 18:59:05 +0200
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <9bb390e70810172230x104a2cf7ufd13536d1f7bd9a6@mail.gmail.com>
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
	<m3prm3noi6.fsf@neo.luffy.cx>
	<59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>
	<050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>
	<9bb390e70810172230x104a2cf7ufd13536d1f7bd9a6@mail.gmail.com>
Message-ID: <455E37F9-B9A2-45D6-8F2B-5261BDAAF69D@vikingosegundo.de>

Thanks for you great reply! I will have a look on it!

> I've done a similar type project but with a mailserver built using
> twisted.mail. I used django.contrib.admin to help manage the db for
> the mailserver config. From the mailservers, I was able to get by with
> 5 min Looping Calls to the database to build the required config data
> and just cached the data until the next successful db call .  While
> not entirely applicable to your problem,  I wanted to bring it up
> because of the slightly different choice I made on how to gather data
> out of the database. As the previous poster mentioned, I didn't want
> to mess around with concurrency and decided that my mailservers (2 of
> them now) would not care about each other and just get their config
> data out of the database.
>
> Where I also differ is I couldn't afford a sql query per each
> connections MAIL FROM or RCPT TO. So I had to make it slightly more
> flexible while still meeting the requirement of a database stored
> config.  I basically choose a delayed Pull approach.  One upshot is I
> coded the sql calls so that the config data survives a database
> failure and just keeps working with it's previous data grab.  I also
> coded a twisted.web service administration page that allows for a
> manual reload of the data on the individual server if an emergency
> came up and I absolutely needed the config to change.  It's a
> different flavor you can use if you know your data is fairly static
> and the number of people changing the data is low.
>
> Now back to your problem... I've also used the spread toolkit before
> (no not the twisted.spread.. and yes... OSS name collision). If I were
> writing such an app, and thought I'd be using a number of servers for
> the service; I'd consider using spread to keep things the same on all
> servers and for anything else I needed quickly.  You'd still want a
> database, you just aren't always using sql to pull data that you need.
> You are using the spread bus and your IRC twisted app (more likely a
> service within your twisted app) is just listening for the data that
> you deem high priority.   Commonly referred to as a Push approach.
> http://www.spread.org
>
> Someone out there has done some work with spread and twisted.  I don't
> know how well the code works. As for django, it'd be pretty easy to
> send a spread message.
> http://anarkystic.com/devdev/spreader-intro
>
> Hope you get some ideas.
>
> -rob
>
> On Thu, Oct 16, 2008 at 1:56 PM, Phil Christensen <phil at bubblehouse.org 
> > wrote:
>> On Oct 16, 2008, at 4:26 PM, Manuel Meyer wrote:
>>>
>>> But I don't know how to inform IRCServer about changes in the site/ 
>>> db.
>>> Maybe by adding another network protocol to the twisted  
>>> application, where
>>> django's signals could leave a note?
>>
>> I may be missing something, but if you keep all your data in the  
>> DB, there's
>> no need to notify the irc server of changes to the DB.
>>
>> The only time you'll need this user information (it seems) is while
>> responding to /join and /list requests. Just read the DB at that  
>> time.
>>
>> What's nice about this is the DB takes care of most if not all of  
>> your
>> synchronization requirements, so you have far fewer concurrency  
>> issues to
>> think about than if you were broadcasting changes from the web app  
>> to the
>> irc server.
>>
>> -phil
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From esteve at fluidinfo.com  Wed Oct 29 17:29:11 2008
From: esteve at fluidinfo.com (Esteve Fernandez)
Date: Wed, 29 Oct 2008 22:29:11 +0100
Subject: [Twisted-Python] txAMQP 0.2 released, now with Thrift superpowers
Message-ID: <200810292229.11444.esteve@fluidinfo.com>

Hi all,

I'm pleased to announce that Fluidinfo is releasing txAMQP 0.2, 
(codenamed "Peanut butter and chocolate") [1] which includes support for 
Thrift, and various minor fixes.

What does this mean? Well, it makes easier to build a high performance [2]
massively scalable [3] RPC [4] architecture in Python.

We hope you'll enjoy it!

PS: you'll need to apply the patch at [5] to Thrift to add support for
Twisted

1 - txAMQP http://launchpad.net/txamqp
2 - thanks to Twisted http://www.twistedmatrix.com
3 - thanks to AMQP http://www.amqp.org
4 - thanks to Thrift http://incubator.apache.org/thrift
5 - https://issues.apache.org/jira/browse/THRIFT-148



From newptcai at gmail.com  Thu Oct 30 09:17:07 2008
From: newptcai at gmail.com (Peter Cai)
Date: Thu, 30 Oct 2008 21:17:07 +0800
Subject: [Twisted-Python] Change A UDP based server to TCP based
Message-ID: <befee6d80810300617r272becc6gc5a48a94ce1a2b0f@mail.gmail.com>

Hi all,

I found twisted have a module called SIP which implements parts of
RFC3261, Session Initial Protocol.

As I am going to write an experimental SIP server, this module seems
to be very useful for me.

But, one problem : it's based on UDP.

I skimmed the code and I think maybe I can "Cut and Copy" some code of
this module to implement my own TCP SIP server.

But the idea of "cut and copy" is really annoying.

What will you do in my situation?

BTW, if you are going to write a protocol which supports both UDP and TCP,

what is your design going to be like?



From washort at twistedmatrix.com  Thu Oct 30 09:55:18 2008
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 30 Oct 2008 09:55:18 -0400
Subject: [Twisted-Python] SIP TCP support
In-Reply-To: <befee6d80810300617r272becc6gc5a48a94ce1a2b0f@mail.gmail.com>
References: <befee6d80810300617r272becc6gc5a48a94ce1a2b0f@mail.gmail.com>
Message-ID: <20081030135518.GK22704@divmod.org>

On Thu, Oct 30, 2008 at 09:17:07PM +0800, Peter Cai wrote:
> Hi all,
> 
> I found twisted have a module called SIP which implements parts of
> RFC3261, Session Initial Protocol.

Most of the SIP code in Twisted is based on the obsolete RFC 2543. A
more compliant version has been developed here:
http://divmod.org/trac/browser/trunk/Sine

At some point this code will be moved into Twisted.


> As I am going to write an experimental SIP server, this module seems
> to be very useful for me.
> 
> But, one problem : it's based on UDP.
> 
> I skimmed the code and I think maybe I can "Cut and Copy" some code of
> this module to implement my own TCP SIP server.

It's more complicated than that -- the protocol behaviour for SIP is
different when transported over TCP instead of UDP. (See section
10.5.2 in RFC 3261.) But much of the code can be shared between the
two.
 
> But the idea of "cut and copy" is really annoying.
> 
> What will you do in my situation?

Contribute to Sine -- sine.sip.SIPTransport inherits from
DatagramProtocol and so is UDP-only at the moment. Ideally, most of
its behaviour could move to a mixin that a TCP SIP transport class
could inherit from as well.
 
> BTW, if you are going to write a protocol which supports both UDP and TCP,
> 
> what is your design going to be like?

As I described above, write a protocol class for UDP and for TCP that
inherits from a common mixin class.



From pjacobi.de at googlemail.com  Thu Oct 30 18:45:00 2008
From: pjacobi.de at googlemail.com (Peter Jacobi)
Date: Thu, 30 Oct 2008 23:45:00 +0100
Subject: [Twisted-Python] callLater -- only when idle
Message-ID: <2dcdf68e0810301545j3b9e62c1n91c848d280d885e2@mail.gmail.com>

I'd like to schedule a delayed call for being done after n seconds of
idling, i.e. n seconds after the last event was dispatched.

I assume this can be done by resetting  the delayed call from every
event handler, but this seems to be a silly solution.

Any suggestions for a better solution?


Regards,
Peter



From exarkun at divmod.com  Thu Oct 30 18:52:37 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 30 Oct 2008 17:52:37 -0500
Subject: [Twisted-Python] callLater -- only when idle
In-Reply-To: <2dcdf68e0810301545j3b9e62c1n91c848d280d885e2@mail.gmail.com>
Message-ID: <20081030225237.29191.978512341.divmod.quotient.47082@ohm>

On Thu, 30 Oct 2008 23:45:00 +0100, Peter Jacobi <pjacobi.de at googlemail.com> wrote:
>I'd like to schedule a delayed call for being done after n seconds of
>idling, i.e. n seconds after the last event was dispatched.
>
>I assume this can be done by resetting  the delayed call from every
>event handler, but this seems to be a silly solution.
>
>Any suggestions for a better solution?
>

This doesn't work very well.  There are events that are purely internal
to reactor implementations.  There's no guarantee that these won't happen
at least every N seconds, preventing your code from every running.  There
are events that are internal to protocol implementations or other higher
level APIs - for example, many protocols implement idle timeouts, so
they are sources of additional timing events which you can't directly
observe; as an optimization, the Twisted Web server uses a timing event
that fires once a second to manage the timestamp string is needs to write
to the request log.

You really need to specify the set of event sources inclusively, not
globally.  Fortunately this doesn't mean you need to add code to every
event handler you have.  You can wrap each event handler in a general
purpose object which resets your timer and then forwards the event to
the original handler.  Just wrap the handlers which should reset your
countdown and all the other stuff that's going on won't get in your way.

Jean-Paul



From newptcai at gmail.com  Thu Oct 30 22:24:56 2008
From: newptcai at gmail.com (Peter Cai)
Date: Fri, 31 Oct 2008 10:24:56 +0800
Subject: [Twisted-Python] SIP TCP support
In-Reply-To: <20081030135518.GK22704@divmod.org>
References: <befee6d80810300617r272becc6gc5a48a94ce1a2b0f@mail.gmail.com>
	<20081030135518.GK22704@divmod.org>
Message-ID: <befee6d80810301924x448755ebx148458f2e59ef46f@mail.gmail.com>

Hi, thanks for your useful information.

But from the change log, the project sine has not been modified for a
least 4 month.

Have you tried it?  Could it work now?

On Thu, Oct 30, 2008 at 9:55 PM, Allen Short <washort at twistedmatrix.com> wrote:
> On Thu, Oct 30, 2008 at 09:17:07PM +0800, Peter Cai wrote:
>> Hi all,
>>
>> I found twisted have a module called SIP which implements parts of
>> RFC3261, Session Initial Protocol.
>
> Most of the SIP code in Twisted is based on the obsolete RFC 2543. A
> more compliant version has been developed here:
> http://divmod.org/trac/browser/trunk/Sine
>
> At some point this code will be moved into Twisted.
>
>
>> As I am going to write an experimental SIP server, this module seems
>> to be very useful for me.
>>
>> But, one problem : it's based on UDP.
>>
>> I skimmed the code and I think maybe I can "Cut and Copy" some code of
>> this module to implement my own TCP SIP server.
>
> It's more complicated than that -- the protocol behaviour for SIP is
> different when transported over TCP instead of UDP. (See section
> 10.5.2 in RFC 3261.) But much of the code can be shared between the
> two.
>
>> But the idea of "cut and copy" is really annoying.
>>
>> What will you do in my situation?
>
> Contribute to Sine -- sine.sip.SIPTransport inherits from
> DatagramProtocol and so is UDP-only at the moment. Ideally, most of
> its behaviour could move to a mixin that a TCP SIP transport class
> could inherit from as well.
>
>> BTW, if you are going to write a protocol which supports both UDP and TCP,
>>
>> what is your design going to be like?
>
> As I described above, write a protocol class for UDP and for TCP that
> inherits from a common mixin class.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
???????????DNA?????????????????????????????????????????????????????????????????????????????????????????

From blair.bethwaite at gmail.com  Fri Oct 31 01:52:26 2008
From: blair.bethwaite at gmail.com (Blair Bethwaite)
Date: Fri, 31 Oct 2008 16:52:26 +1100
Subject: [Twisted-Python] Event notification and general RPC in Twisted...
Message-ID: <ab42a7c0810302252k576137d1ub2a39246ef6cdac4@mail.gmail.com>

Hi all,

I'm thinking about using Twisted to rewrite some communications in a
Grid computing application.
E.g.:

[JobServer]1 ---------- *[Proxy]1 ----------- *[Agents]

Agents get jobs, report status, results, etc through Proxy to
JobServer. Agents are often distributed across a private network that
has no external interface, hence the proxy, which is run on a machine
between the private network and internet. Also, the proxy may do some
caching/queuing of particular messages - especially where the number
of agents behind it is large.

What we have at present is a TCP socket server however we're starting
to hit scalability issues and on top of that our future plans
necessitate a notification framework. I've been digging around on
twistedmatrix.com and in the book but so far am having trouble finding
any guidance or the level of detail that tells me whether Twisted has
what we need, some bits of which are:

- we'd like to use a persistent stream/connection, at least between
the JobServer and Proxy (traffic frequency will be reasonably high)
- it needs to be interoperable with java (is there PB for java?)
- each end of the connection should be able to register for and get
notifications from the other (e.g. Agent gives a heartbeat, JobServer
tells Agent to stop)
- sometimes the Proxy might be behind a firewall and only able to
connect out, we need to be able to use that connection to go back as
above
- we want to dynamically configure streaming connections between Proxies

Hopefully that's enough context for you to point at modules and tell
whether these are appropriate questions:
Can I re-use a TCP stream for multiple XML-RPC or PB operations?
If so, would it make sense to have the client (e.g. Proxy or Agent)
initiate the connection and then make a rpc (e.g. "notify me of
anything relevant") to the server which would eventually return when
something relevant came along - triggering a callback in the client...
wash, rinse, repeat?

Sorry if I'm overlooking something that already answers this, it
doesn't seem like something too unique to have not been asked
before...

Regards,
-Blair

-- 
In science one tries to tell people, in such a way
as to be understood by everyone, something that
no one ever knew before. But in poetry, it's the
exact opposite.
 - Paul Dirac



From py.adriano at gmail.com  Fri Oct 31 05:18:21 2008
From: py.adriano at gmail.com (Adriano Marques)
Date: Fri, 31 Oct 2008 10:18:21 +0100
Subject: [Twisted-Python] Passing arguments while running a twistd
	application
Message-ID: <29ec21540810310218g56501613i338159c5e622e86d@mail.gmail.com>

Hello folks,

I have a twisted application, which formely was run with command line
arguments which were used during runtime, eg: I was passing the path
to the log file as argument. Then, I decided to make my app run
through twistd as a tac file but then I'm not able to pass command
line arguments anymore. Is there any way to overcome this issue?

I'm running something like this:

$ twistd -y my_twisted_script.tac my_program_arguments

Then twistd is returning the following:

<twistd_help />
twistd: Unknown command: my_program_arguments


Cheers!

-- 
Adriano Monteiro Marques

http://adriano-marques.blogspot.com
http://www.umitproject.org
http://www.pythonbenelux.org

"Don't stay in bed, unless you can make money in bed." - George Burns



From terry at jon.es  Fri Oct 31 07:42:52 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 31 Oct 2008 12:42:52 +0100
Subject: [Twisted-Python] Passing arguments while running a twistd
	application
In-Reply-To: Your message at 10:18:21 on Friday, 31 October 2008
References: <29ec21540810310218g56501613i338159c5e622e86d@mail.gmail.com>
Message-ID: <18698.61244.704425.437134@jon.es>

>>>>> "Adriano" == Adriano Marques <py.adriano at gmail.com> writes:
Adriano> I have a twisted application, which formely was run with command
Adriano> line arguments which were used during runtime, eg: I was passing
Adriano> the path to the log file as argument. Then, I decided to make my
Adriano> app run through twistd as a tac file but then I'm not able to pass
Adriano> command line arguments anymore. Is there any way to overcome this
Adriano> issue?

I also ran into this, and asked for some way to pass args but got told
(paraphrasing, from memory) that that's not the way to do it...

The way to do it seems to be to convert your application to be a Twisted
plugin. It's not too hard.  Then you make sure there's a twisted/plugins
dir accessible from your path (with no __init__.py files in/under it). Then
twistd will find your plugin (just run twistd with no options and you
should see your plugin name listed at the bottom among the commands). Then
you can add options processing by subclassing the Options class in
twisted.python.usage.

Sorry to be so terse - no time. The above does work though, and seems to be
the Twisted way. Rough (untested) guideline code below.

Terry

---

from zope.interface import implements
from twisted.python import usage
from twisted.plugin import IPlugin
from twisted.application.service import IServiceMaker
from ???? import myservice

class Options(usage.Options):
    optFlags = [
        ['verbose', None, 'If True, be verbose.'],
    ]
    optParameters = [
        ['port', 'p', '0', 'The port number to listen on.'],
    ]

class MyServiceMaker(object):
    implements(IServiceMaker, IPlugin)
    # The tapname will appear in the output of twistd when run with no args.
    # Use twistd -n my-plugin-name
    # to invoke it.
    tapname = 'my-plugin-name'
    description = 'My snazzy service.'
    options = Options

    def makeService(self, options):
        return myservice(
            options['port'], options['verbose'])

serviceMaker = MyServiceMaker()



From exarkun at divmod.com  Fri Oct 31 09:12:19 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 31 Oct 2008 08:12:19 -0500
Subject: [Twisted-Python] Passing arguments while running a twistd
	application
In-Reply-To: <18698.61244.704425.437134@jon.es>
Message-ID: <20081031131219.29191.45950424.divmod.quotient.47384@ohm>

On Fri, 31 Oct 2008 12:42:52 +0100, Terry Jones <terry at jon.es> wrote:
>>>>>> "Adriano" == Adriano Marques <py.adriano at gmail.com> writes:
>Adriano> I have a twisted application, which formely was run with command
>Adriano> line arguments which were used during runtime, eg: I was passing
>Adriano> the path to the log file as argument. Then, I decided to make my
>Adriano> app run through twistd as a tac file but then I'm not able to pass
>Adriano> command line arguments anymore. Is there any way to overcome this
>Adriano> issue?
>
>I also ran into this, and asked for some way to pass args but got told
>(paraphrasing, from memory) that that's not the way to do it...

To add slightly to this correct answer:

The "tac" in a .tac file stands for "Twisted Application Configuration".
The reason you cannot pass extra arguments on the command line when using
a .tac file is that the intent is for all configuration to be in the .tac
file.  So if this isn't appropriate for your application, a twistd plugin
is probably a better solution.

>The way to do it seems to be to convert your application to be a Twisted
>plugin. It's not too hard.  Then you make sure there's a twisted/plugins
>dir accessible from your path (with no __init__.py files in/under it). Then
>twistd will find your plugin (just run twistd with no options and you
>should see your plugin name listed at the bottom among the commands). Then
>you can add options processing by subclassing the Options class in
>twisted.python.usage.
>
>Sorry to be so terse - no time. The above does work though, and seems to be
>the Twisted way. Rough (untested) guideline code below.
>
>Terry
>
>---
>
>from zope.interface import implements
>from twisted.python import usage
>from twisted.plugin import IPlugin
>from twisted.application.service import IServiceMaker
>from ???? import myservice
>
>class Options(usage.Options):
>    optFlags = [
>        ['verbose', None, 'If True, be verbose.'],
>    ]
>    optParameters = [
>        ['port', 'p', '0', 'The port number to listen on.'],
>    ]
>
>class MyServiceMaker(object):
>    implements(IServiceMaker, IPlugin)
>    # The tapname will appear in the output of twistd when run with no args.
>    # Use twistd -n my-plugin-name
>    # to invoke it.
>    tapname = 'my-plugin-name'
>    description = 'My snazzy service.'
>    options = Options
>
>    def makeService(self, options):
>        return myservice(
>            options['port'], options['verbose'])
>
>serviceMaker = MyServiceMaker()
>

Fortunately, in case the above misses anything or you'd like any parts
of it explained, there is documentation about writing plugins. :)

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
http://twistedmatrix.com/projects/core/documentation/howto/tap.html

Jean-Paul



From dripton at ripton.net  Fri Oct 31 12:14:10 2008
From: dripton at ripton.net (David Ripton)
Date: Fri, 31 Oct 2008 09:14:10 -0700
Subject: [Twisted-Python] Event notification and general RPC in Twisted...
In-Reply-To: <ab42a7c0810302252k576137d1ub2a39246ef6cdac4@mail.gmail.com>
References: <ab42a7c0810302252k576137d1ub2a39246ef6cdac4@mail.gmail.com>
Message-ID: <20081031161410.GA6794@vidar.dreamhost.com>

On 2008.10.31 16:52:26 +1100, Blair Bethwaite wrote:
> I'm thinking about using Twisted to rewrite some communications in a
> Grid computing application.
> E.g.:
> 
> [JobServer]1 ---------- *[Proxy]1 ----------- *[Agents]
> 
> Agents get jobs, report status, results, etc through Proxy to
> JobServer. Agents are often distributed across a private network that
> has no external interface, hence the proxy, which is run on a machine
> between the private network and internet. Also, the proxy may do some
> caching/queuing of particular messages - especially where the number
> of agents behind it is large.
> 
> What we have at present is a TCP socket server however we're starting
> to hit scalability issues and on top of that our future plans
> necessitate a notification framework. I've been digging around on
> twistedmatrix.com and in the book but so far am having trouble finding
> any guidance or the level of detail that tells me whether Twisted has
> what we need, some bits of which are:
> 
> - we'd like to use a persistent stream/connection, at least between
> the JobServer and Proxy (traffic frequency will be reasonably high)
> - it needs to be interoperable with java (is there PB for java?)

There is a Java version of PB.  http://itamarst.org/software/twistedjava/

I've never used the Java version, so I can't say whether it works well.
The Python version is excellent.

> - each end of the connection should be able to register for and get
> notifications from the other (e.g. Agent gives a heartbeat, JobServer
> tells Agent to stop)
> - sometimes the Proxy might be behind a firewall and only able to
> connect out, we need to be able to use that connection to go back as
> above

PB allows both ends of the connection to send and receive at any time,
over a single connection.  I use it for a game where multiple clients
connect via TCP to a server, and then the clients send messages to the
server whenever they want, and the server sends messages to one or more
clients whenever it wants (over the original connections initiated by
the clients, so the clients don't need to open any holes in their
firewalls), and everything just stinking works.

> - we want to dynamically configure streaming connections between Proxies

Yes, you can add more connections at any time.  You have to write your
own simple routing code.

> Hopefully that's enough context for you to point at modules and tell
> whether these are appropriate questions:
> Can I re-use a TCP stream for multiple XML-RPC or PB operations?

PB, yes.

That's not the way XML-RPC is typically done.  Clearly you could make a
protocol that uses XML-RPC payload over a persistent connection.  But
you'd lose the ability to use arbitrary XML-RPC libraries unmodified,
which is probably the main benefit of choosing XML-RPC.

Also, XML-RPC is an inherently rigid request/response protocol and thus
fails some of your other requirements.  If the client and server are
both asynchronously initiating requests over the same connection, you
need additional information to distinguish a new request from a response
to the other side's last request.  And if you send multiple requests
over the same connection without waiting for a response to the first,
you need to send more information correlating requests with responses.
All doable, but not XML-RPC anymore.

> If so, would it make sense to have the client (e.g. Proxy or Agent)
> initiate the connection and then make a rpc (e.g. "notify me of
> anything relevant") to the server which would eventually return when
> something relevant came along - triggering a callback in the client...
> wash, rinse, repeat?

Yes, you make a remote call which returns a deferred.  You attach
a callback and an errback to the deferred.  When the remote call
finishes, either your callback or your errback fires, with your return
value or exception information.

I recommend writing something like a small chat system first, using the
exact protocol you're considering, before tackling your real problem.
If you can get Java clients and Python clients chatting through a chat
proxy that can forward through other chat proxies, then you know you can
make it work.  When you write a little chatbot and run lots of instances
in parallel and nothing chokes, then you know you can make it scale.

If not for the Java requirement, I would say that Twisted is a good fit,
and that you could use either PB or AMP, depending on whether you want
to pass around complex types or simple ones.  But if you need Java,
I don't know.

-- 
David Ripton    dripton at ripton.net



From mforbes at physics.ubc.ca  Wed Oct  1 12:00:29 2008
From: mforbes at physics.ubc.ca (Michael McNeil Forbes)
Date: Wed, 1 Oct 2008 12:00:29 -0600
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
Message-ID: <DA02E65B-BB9C-46F8-A31F-83EAEAA915BF@physics.ubc.ca>

Several places in the documentation refer to the method writeSomeData 
() returning a negative integer if the connection is lost.  (In  
particular /api/ 
twisted.internet.abstract.FileDescriptor.html#writeSomeData.)

However, twisted.internet.main.CONNECTION_LOST is often returned  
which is not an integer.

The documentation and code should be brought into sync unless there  
is a more up-to-date reference that I am missing.

Thanks,
Michael.



From exarkun at divmod.com  Wed Oct  1 12:04:12 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 1 Oct 2008 14:04:12 -0400
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <DA02E65B-BB9C-46F8-A31F-83EAEAA915BF@physics.ubc.ca>
Message-ID: <20081001180412.29191.1979321832.divmod.quotient.32732@ohm>

On Wed, 1 Oct 2008 12:00:29 -0600, Michael McNeil Forbes <mforbes at physics.ubc.ca> wrote:
>Several places in the documentation refer to the method writeSomeData () 
>returning a negative integer if the connection is lost.  (In  particular 
>/api/ twisted.internet.abstract.FileDescriptor.html#writeSomeData.)
>
>However, twisted.internet.main.CONNECTION_LOST is often returned  which is 
>not an integer.
>
>The documentation and code should be brought into sync unless there  is a 
>more up-to-date reference that I am missing.

Hardly anyone actually needs `writeSomeData`.  It's mostly an implementation
detail of a certain group of reactors.

However, if you'd like, please feel free to open a ticket in the issue
tracker and attach a documentation patch.  Suggestions or patches on the
mailing list will typically be forgotten.

Jean-Paul



From glyph at divmod.com  Wed Oct  1 12:11:36 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 01 Oct 2008 18:11:36 -0000
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <DA02E65B-BB9C-46F8-A31F-83EAEAA915BF@physics.ubc.ca>
References: <DA02E65B-BB9C-46F8-A31F-83EAEAA915BF@physics.ubc.ca>
Message-ID: <20081001181136.31635.1329316808.divmod.xquotient.843@weber.divmod.com>


On 06:00 pm, mforbes at physics.ubc.ca wrote:
>The documentation and code should be brought into sync unless there  is 
>a more up-to-date reference that I am missing.

Hi Michael,

Do you think you can file a ticket in our tracker (perhaps attaching a 
patch?) at <http://twistedmatrix.com/> for this issue?  Issues reported 
on the mailing list are likely to get lost over time.



From dialtone at gmail.com  Wed Oct  1 15:07:59 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 1 Oct 2008 14:07:59 -0700
Subject: [Twisted-Python] Ampoule - 0.0.3
Message-ID: <7EFD8068-81D4-4F26-A95D-8DB7A7E93538@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Today I release a new minor release for ampoule, my
Twisted Matrix process pool.

What's new:

Ampoule 0.0.3 (2008-10-01)
==========================

Features
- --------
  - Added a Twisted Matrix plugin to run a process pool service that
    can be used over the network using an AMP client.

  - Added ability to change the reactor used to run the children

Changes
- -------
  - If you wrote your own bootstrap code for the pool you should change
    the way it works because now it takes 2 arguments, sys.argv[1] is
    the reactor short name while sys.argv[2] is still the AMPChild path.
    If you don't use startAMPProcess you probably have nothing to worry
    about.

Fixes
- -----
  - Now the process pool doesn't raise an error when you use a command
    that doesn't require an answer.

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjj5q8ACgkQ9Llz28widGW8IgCg1tFrlzIEolmIgP223FvGU+Ha
nUwAn13pUxZpQDZr+WTcfcQuB0PS/Msg
=2jex
-----END PGP SIGNATURE-----



From dialtone at gmail.com  Wed Oct  1 15:13:55 2008
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 1 Oct 2008 14:13:55 -0700
Subject: [Twisted-Python] Re: Ampoule - 0.0.3
In-Reply-To: <7EFD8068-81D4-4F26-A95D-8DB7A7E93538@gmail.com>
References: <7EFD8068-81D4-4F26-A95D-8DB7A7E93538@gmail.com>
Message-ID: <D5934D57-AEDE-402B-BEC1-08FABD471DCA@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Oct 1, 2008, at 2:07 PM, Valentino Volonghi wrote:

Of course I was totally forgetting URLs:

http://pypi.python.org/pypi/ampoule
https://launchpad.net/ampoule/ampoule

Have fun!

- --
Valentino Volonghi aka Dialtone
Now running MacOS X 10.5
Home Page: http://www.twisted.it
http://www.adroll.com

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iEYEARECAAYFAkjj6BMACgkQ9Llz28widGW0xACeMi0nelCaF8G8FwHbzT/Kh154
yloAoI8AFFu83gm8tDOYErsNuWyj5EN5
=6awn
-----END PGP SIGNATURE-----



From mforbes at physics.ubc.ca  Wed Oct  1 15:24:05 2008
From: mforbes at physics.ubc.ca (Michael McNeil Forbes)
Date: Wed, 1 Oct 2008 15:24:05 -0600
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <20081001180412.29191.1979321832.divmod.quotient.32732@ohm>
References: <20081001180412.29191.1979321832.divmod.quotient.32732@ohm>
Message-ID: <22A5C458-9651-4295-85D6-B57404BFBEB2@physics.ubc.ca>

On Oct 1, 2008, at 12:04 PM, Jean-Paul Calderone wrote:

> On Wed, 1 Oct 2008 12:00:29 -0600, Michael McNeil Forbes  
> <mforbes at physics.ubc.ca> wrote:
>> Several places in the documentation refer to the method  
>> writeSomeData () returning a negative integer if the connection is  
>> lost.  (In  particular /api/  
>> twisted.internet.abstract.FileDescriptor.html#writeSomeData.)
>>
>> However, twisted.internet.main.CONNECTION_LOST is often returned   
>> which is not an integer.
...
> Hardly anyone actually needs `writeSomeData`.  It's mostly an  
> implementation
> detail of a certain group of reactors.

I have opened a ticket.  A question then that is sure to expose my  
ignorance of twisted...

Why does writeSomeData not simply raise CONNECTION_LOST as an  
exception?  Checking return values is quite un-pythonic.  Is there a  
deep reason for this?

Michael.

P.S. I came across this because I was trying to use twisted running  
in a thread to write data resulting from a long computation that I  
have not yet turned into a producer.  The more conventional "write"  
method was failing if the socket backed up, and provided no simple  
way of determining if data was being dropped.  My solution was to  
used writeSomeData, and then have the computation decide to throw out  
some of the data if it is being produced too rapidly, but I need to  
know how much has been sent so I can decide what to throw away...




From glyph at divmod.com  Wed Oct  1 15:40:59 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 01 Oct 2008 21:40:59 -0000
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <22A5C458-9651-4295-85D6-B57404BFBEB2@physics.ubc.ca>
References: <20081001180412.29191.1979321832.divmod.quotient.32732@ohm>
	<22A5C458-9651-4295-85D6-B57404BFBEB2@physics.ubc.ca>
Message-ID: <20081001214059.31635.762369639.divmod.xquotient.852@weber.divmod.com>

On 09:24 pm, mforbes at physics.ubc.ca wrote:
>Why does writeSomeData not simply raise CONNECTION_LOST as an 
>exception? Checking return values is quite un-pythonic.  Is there a 
>deep reason for this?

writeSomeData is an internal API that nobody should really use, so it's 
not factored for convenience; it's also deep down in the guts of the 
reactor's innermost loop, so it pays a lot of attention to efficiency. 
Raising exceptions is really, really slow, at least by the standards of 
that kind of code.
>P.S. I came across this because I was trying to use twisted running  in 
>a thread to write data resulting from a long computation that I  have 
>not yet turned into a producer.  The more conventional "write"  method 
>was failing if the socket backed up, and provided no simple  way of 
>determining if data was being dropped.  My solution was to  used 
>writeSomeData, and then have the computation decide to throw out  some 
>of the data if it is being produced too rapidly, but I need to  know 
>how much has been sent so I can decide what to throw away...

You do know that Twisted APIs are not thread safe, right?  You can't 
call write() from a thread?



From exarkun at divmod.com  Wed Oct  1 15:44:33 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 1 Oct 2008 17:44:33 -0400
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <22A5C458-9651-4295-85D6-B57404BFBEB2@physics.ubc.ca>
Message-ID: <20081001214433.29191.2045241972.divmod.quotient.32801@ohm>

On Wed, 1 Oct 2008 15:24:05 -0600, Michael McNeil Forbes <mforbes at physics.ubc.ca> wrote:
>On Oct 1, 2008, at 12:04 PM, Jean-Paul Calderone wrote:
>>On Wed, 1 Oct 2008 12:00:29 -0600, Michael McNeil Forbes 
>><mforbes at physics.ubc.ca> wrote:
>>>Several places in the documentation refer to the method  writeSomeData () 
>>>returning a negative integer if the connection is  lost.  (In  particular 
>>>/api/  twisted.internet.abstract.FileDescriptor.html#writeSomeData.)
>>>
>>>However, twisted.internet.main.CONNECTION_LOST is often returned   which 
>>>is not an integer.
>...
>>Hardly anyone actually needs `writeSomeData`.  It's mostly an 
>>implementation
>>detail of a certain group of reactors.
>
>I have opened a ticket.  A question then that is sure to expose my 
>ignorance of twisted...

Thanks. :)

>Why does writeSomeData not simply raise CONNECTION_LOST as an  exception? 
>Checking return values is quite un-pythonic.  Is there a  deep reason for 
>this?

The reason is probably that whoever wrote it thought that raising an
exception would be enough slower than returning a special value that
it would be worth doing something slightly unusual.  Compared to
returning a value, raising an exception is expensive in CPython, but
I doubt there is any surviving benchmark which demonstrates that it
makes a difference here.

However, it's a very low-level API and since it isn't intended to be
used by application code, it doesn't seem like a very high priority
to make it less confusing.

>
>P.S. I came across this because I was trying to use twisted running  in a 
>thread to write data resulting from a long computation that I  have not yet 
>turned into a producer.  The more conventional "write"  method was failing 
>if the socket backed up, and provided no simple  way of determining if data 
>was being dropped.  My solution was to  used writeSomeData, and then have 
>the computation decide to throw out  some of the data if it is being 
>produced too rapidly, but I need to  know how much has been sent so I can 
>decide what to throw away...
>

This seems more interesting than the main point of your email. :) You
should probably just do the work to turn the computation into a producer.
This because:

  * writeSomeData is low level and crufty, as you've discovered
  * Not all reactors have this API, so your program will break based on
    the reactor selected to run it
  * producers give you all the same information

Since you mentioned threads, I'll also point out that Twisted APIs are not
safe to use from non-reactor threads without reactor.callFromThread.  If
you aren't using callFromThread, that would explain bad behavior from the
write method.

Jean-Paul



From mforbes at physics.ubc.ca  Wed Oct  1 16:37:47 2008
From: mforbes at physics.ubc.ca (Michael McNeil Forbes)
Date: Wed, 1 Oct 2008 16:37:47 -0600
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <20081001214433.29191.2045241972.divmod.quotient.32801@ohm>
References: <20081001214433.29191.2045241972.divmod.quotient.32801@ohm>
Message-ID: <6EE85919-4455-4B36-86F9-3E032CCFF0D8@physics.ubc.ca>

> On Oct 1, 2008, at 3:44 PM, Jean-Paul Calderone wrote:
...
>> Why does writeSomeData not simply raise CONNECTION_LOST as an   
>> exception? Checking return values is quite un-pythonic.  Is there  
>> a  deep reason for this?
>
> The reason is probably that whoever wrote it thought that raising an
> exception would be enough slower than returning a special value that
> it would be worth doing something slightly unusual.  Compared to
> returning a value, raising an exception is expensive in CPython, but
> I doubt there is any surviving benchmark which demonstrates that it
> makes a difference here.
>
> However, it's a very low-level API and since it isn't intended to be
> used by application code, it doesn't seem like a very high priority
> to make it less confusing.

By the way, is there any convention by which "high level" API  
routines are distinguished from "low level" routines?  It is really  
not that clear from the docs... (writeSomeData comes first in the  
listing etc.)

>> P.S. I came across this because I was trying to use twisted  
>> running  in a thread to write data resulting from a long  
>> computation that I  have not yet turned into a producer.  The more  
>> conventional "write"  method was failing if the socket backed up,  
>> and provided no simple  way of determining if data was being  
>> dropped.  My solution was to  used writeSomeData, and then have  
>> the computation decide to throw out  some of the data if it is  
>> being produced too rapidly, but I need to  know how much has been  
>> sent so I can decide what to throw away...
>>
>
> This seems more interesting than the main point of your email. :) You
> should probably just do the work to turn the computation into a  
> producer.
> This because:
>
>  * writeSomeData is low level and crufty, as you've discovered
>  * Not all reactors have this API, so your program will break based on
>    the reactor selected to run it
>  * producers give you all the same information
>
> Since you mentioned threads, I'll also point out that Twisted APIs  
> are not
> safe to use from non-reactor threads without  
> reactor.callFromThread.  If
> you aren't using callFromThread, that would explain bad behavior  
> from the
> write method.

I know that and am using callFromThread: The reason I am having bad  
behavior is because the socket is backing up.  Once I put in the  
logic to throw out data, it works fine... but the lack of reactor  
support concerns me somewhat.  I don't want the computation to stop,  
but think I could put an intermediate "push producer" that stops by  
discarding the data.

I am threading because the computation is the main task, and the  
network stuff is simply a window into the state of the computation.   
I want the computation to run continually, and it needs to do so in a  
blocking sort of way, periodically checking and pushing the partial  
results (like once every 30 minutes or so).

I want the calculation code to function on its own, with or without  
the twisted components and I don't see a simple way of doing this if  
twisted is in complete control without some type of threading.

My current design is to write my calculation as if twisted did not  
exist, and just push the current results onto a Queue periodically.   
Then I run twisted in a separate thread with clients that  
periodically check the queue, pop stuff off and dispatch it to any  
clients who happen to connect and want the data.

Is there a simpler way to do this all with twisted without using  
threads?  (The main goal is having an extremely minimal set of hooks  
for the people writing the computational code, and having the  
computational code run as fast as possible.)

Thanks for all of the suggestions and prompt comments!  (And for one  
very "twisted" library;-)
Michael.



From shweta3230 at gmail.com  Thu Oct  2 00:10:52 2008
From: shweta3230 at gmail.com (shweta mani)
Date: Thu, 2 Oct 2008 11:40:52 +0530
Subject: [Twisted-Python] Re: DOUBTS PLEASE SOLVE
In-Reply-To: <20080930160428.29191.46084701.divmod.quotient.32247@ohm>
References: <d13e157d0809300854n6799f385l87d851c096befc7d@mail.gmail.com>
	<20080930160428.29191.46084701.divmod.quotient.32247@ohm>
Message-ID: <d13e157d0810012310x45557d12o5682ce7ffafa7628@mail.gmail.com>

hi all i got the solution of listing all ls -l files in a listbox .
Next problem is to use recurrsively ls -l command again if a user selects a
directory.
Can we use multiple in Linux commands within a program withoy using pipe.
i am forwarding the code.
i need to use ls -l command dependng on whether he chooses a directory.

#!/usr/bin/env python
from twisted.conch.ssh import transport, userauth, connection, common, keys,
channel
from twisted.internet import defer, protocol, reactor
from twisted.python import log
import struct, sys, getpass, os
import re
import Tkinter
from Tkinter import *
from tkMessageBox import *
from os.path import exists
from Tkinter import *
import commands
#from DT import demo
import shutil
from os.path import exists
import ftplib
import sys
from ftplib import FTP
from tkMessageBox import *
from tkFileDialog import asksaveasfilename
import string
from os import popen
from re import split
import Tkinter
import os
USER = 'cteam'  # replace this with a valid username
HOST = '10.144.17.2' # and a valid host

class SimpleTransport(transport.SSHClientTransport):
    def verifyHostKey(self, hostKey, fingerprint):
        print 'host key fingerprint: %s' % fingerprint
        return defer.succeed(1)
    def connectionSecure(self):
        self.requestService(
            SimpleUserAuth(USER,
                SimpleConnection()))
class SimpleUserAuth(userauth.SSHUserAuthClient):
    def getPassword(self):
        return defer.succeed(getpass.getpass("%s@%s's password: " % (USER,
HOST)))
    def getGenericAnswers(self, name, instruction, questions):
        print name
        print instruction
        answers = []
        for prompt, echo in questions:
            if echo:
                answer = raw_input(prompt)
            else:
                answer = getpass.getpass(prompt)
            answers.append(answer)
        return defer.succeed(answers)

    def getPublicKey(self):
        path = os.path.expanduser('~/.ssh/id_dsa')
        # this works with rsa too
        # just change the name here and in getPrivateKey
        if not os.path.exists(path) or self.lastPublicKey:
            # the file doesn't exist, or we've tried a public key
            return
        return keys.getPublicKeyString(path+'.pub')
    def getPrivateKey(self):
        path = os.path.expanduser('~/.ssh/id_dsa')
        return defer.succeed(keys.getPrivateKeyObject(path))
class SimpleConnection(connection.SSHConnection):
    def serviceStarted(self):
        self.openChannel(TrueChannel(2**16, 2**15, self))
        self.openChannel(FalseChannel(2**16, 2**15, self))
        self.openChannel(CatChannel(2**16, 2**15, self))
class TrueChannel(channel.SSHChannel):
    name = 'session' # needed for commands
    def openFailed(self, reason):
        print 'true failed', reason

    def channelOpen(self, ignoredData):
        self.conn.sendRequest(self, 'exec', common.NS('true'))
    def request_exit_status(self, data):
        status = struct.unpack('>L', data)[0]
        print 'true status was: %s' % status
        self.loseConnection()
class FalseChannel(channel.SSHChannel):
    name = 'session'
    def openFailed(self, reason):
        print 'false failed', reason
    def channelOpen(self, ignoredData):
        self.conn.sendRequest(self, 'exec', common.NS('false'))
    def request_exit_status(self, data):
        status = struct.unpack('>L', data)[0]
        print 'false status was: %s' % status
        self.loseConnection()
class CatChannel(channel.SSHChannel):
    name = 'session'
    def openFailed(self, reason):
        print 'echo failed', reason
    def channelOpen(self, ignoredData):
        self.data = ''
        d = self.conn.sendRequest(self, 'exec', common.NS('ls -l'),
wantReply = 1)
        d.addCallback(self._cbRequest)

    def _cbRequest(self, ignored):
        self.write('hello conch\n')
        self.conn.sendEOF(self)
    def dataReceived(self, data):
        self.data=self.data+data

    def closed(self):
        win = Tkinter.Tk();
        Label(win,text='CARD UPLOAD UTILITY').pack(side=TOP)

        dirfm = Frame(win)
        dirsa=Scrollbar(dirfm)
        dirsb= Scrollbar(dirfm)
        dirsb.pack(side = RIGHT, fill =Y)

        dirs = Listbox(dirfm,height = 50, width = 70, yscrollcommand =
dirsb.set)
        textsfile = Entry(dirfm)
        print 'got data from listing: %s' % self.data
        recs=self.data.split('\n')
        '''p4 = re.sub('[]''""['']','','%s'%recs)
        print 'p4[0]',p4[0]'''

        print 'shweta',recs
        var=StringVar();
        for line in recs[1:]:

            p4 = re.sub('[]''""['']','','%s'%line)
            print p4[0]

            p2 = string.split(p4)
            print 'p2',p2
            p5 = []
            p5 = p5.append(p2[8])
            print line
            w=p4[0] # d r _
            dirs.insert(END,line)
        var=StringVar();
        #dirs.bind('<Double-1>', listd)

        textsfile.pack( side = BOTTOM)
        dirsb.config(command=dirs.yview)
        dirs.pack(side=LEFT,fill=BOTH)
        c=textsfile.get()
        dirfm.pack()
        self.loseConnection()
        reactor.stop()


protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST, 22)
reactor.run()



the next problem is to execute a script from the server which accepts inputs
from the user and processes it.
for eg sh test1.sh
On Tue, Sep 30, 2008 at 9:34 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Tue, 30 Sep 2008 21:24:03 +0530, shweta mani <shweta3230 at gmail.com>
> wrote:
>
>> [snip]
>>
>
> This isn't the right way to use Tk with Twisted.
>
> See
> http://twistedmatrix.com/projects/core/documentation/howto/choosing-reactor.html#auto14
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081002/b6b08aff/attachment.html>

From george at ringdevelopment.com  Thu Oct  2 09:58:42 2008
From: george at ringdevelopment.com (George Pauly)
Date: Thu, 02 Oct 2008 11:58:42 -0400
Subject: [Twisted-Python] Re: DOUBTS PLEASE SOLVE
In-Reply-To: <d13e157d0810012310x45557d12o5682ce7ffafa7628@mail.gmail.com>
References: <d13e157d0809300854n6799f385l87d851c096befc7d@mail.gmail.com>
	<20080930160428.29191.46084701.divmod.quotient.32247@ohm>
	<d13e157d0810012310x45557d12o5682ce7ffafa7628@mail.gmail.com>
Message-ID: <1222963122.12900.40.camel@localhost.localdomain>

Would 'ls -l -R' do the trick?

-George

On Thu, 2008-10-02 at 11:40 +0530, shweta mani wrote:

> hi all i got the solution of listing all ls -l files in a listbox .
> Next problem is to use recurrsively ls -l command again if a user
> selects a directory. Can we use multiple in Linux commands within a
> program withoy using pipe. i am forwarding the code. i need to use ls
> -l command dependng on whether he chooses a directory.
> 
> ..........
> 
>         d = self.conn.sendRequest(self, 'exec', common.NS('ls -l'),
> wantReply = 1) 
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From bernat at luffy.cx  Thu Oct  2 15:12:44 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Thu, 02 Oct 2008 23:12:44 +0200
Subject: [Twisted-Python] Twisted and SNMP
Message-ID: <m31vyyaegj.fsf@neo.luffy.cx>

Hi folks!

For people  wanting to use  Twisted to do  some SNMP queries,  there are
actually several solutions:
 - TwistedSNMP that depends on PySNMP, a pure Python implementation
 - pynetsnmp, a ctypes based implementation

I was using pynetsnmp but it segfaults on Python 2.4, even with a recent
ctypes. I have  then rewrite something similar in pure  C. It works fine
for me and people are free to use it:
 https://trac.luffy.cx/wiremaps/wiki/SnmpLibrary

It is  feature limited:  GET, GETNEXT and  GETBULK only (not  even SET),
SNMPv1 and SNMPv2 only, no walking, etc.  But it works fine and I use it
for grabbing very large sets of data without any problem.
-- 
Format a program to help the reader understand it.
            - The Elements of Programming Style (Kernighan & Plauger)



From wiki at littlewiki.in  Fri Oct  3 00:17:53 2008
From: wiki at littlewiki.in (little wiki)
Date: Fri, 3 Oct 2008 11:47:53 +0530
Subject: [Twisted-Python] Implementing an efficient IMAP client using
	connection pooling
Message-ID: <d8ecebdd0810022317w2a807144wddc3f04002c7f074@mail.gmail.com>

Hi Folks,

I'm implementing a web based interface to an IMAP server.My idea is simple
as in my web client sending a request to the python script in cgi-bin
running apache .The python script in turn fetches from the IMAP and sends
back JSON data to the web client.

Here I want my python script to use twisted's IMAP's implementation .In
general ,everytime I send a request to the IMAP server, it sends the data of
the entire folder back which becomes a memory /bandwidth hog.What I'm
looking for is something like the connection pool in the adbapi module.I did
take deferred into consideration but what I'm looking for is a way to reduce
the number of connections being open to the IMAP server and trying to reuse
the same old connection instead of opening a new connection every time a
folder is refreshed   .The reason is that our IMAP severs run on very slow
compuers and I don't want the IMAP server to thrash the entire hard disk.

If the same could be done by deferred ,how would it be ?

Regards,
Wiki
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081003/876693ff/attachment.html>

From mrsalty0 at gmail.com  Fri Oct  3 08:17:08 2008
From: mrsalty0 at gmail.com (J Davis)
Date: Fri, 3 Oct 2008 10:17:08 -0400
Subject: [Twisted-Python] Twisted and SNMP
In-Reply-To: <m31vyyaegj.fsf@neo.luffy.cx>
References: <m31vyyaegj.fsf@neo.luffy.cx>
Message-ID: <a26b6f030810030717n18825373h5eec8ab5976d76a1@mail.gmail.com>

This is exactly what I've been looking for. thank you!



On Thu, Oct 2, 2008 at 5:12 PM, Vincent Bernat <bernat at luffy.cx> wrote:

> Hi folks!
>
> For people  wanting to use  Twisted to do  some SNMP queries,  there are
> actually several solutions:
>  - TwistedSNMP that depends on PySNMP, a pure Python implementation
>  - pynetsnmp, a ctypes based implementation
>
> I was using pynetsnmp but it segfaults on Python 2.4, even with a recent
> ctypes. I have  then rewrite something similar in pure  C. It works fine
> for me and people are free to use it:
>  https://trac.luffy.cx/wiremaps/wiki/SnmpLibrary
>
> It is  feature limited:  GET, GETNEXT and  GETBULK only (not  even SET),
> SNMPv1 and SNMPv2 only, no walking, etc.  But it works fine and I use it
> for grabbing very large sets of data without any problem.
> --
> Format a program to help the reader understand it.
>            - The Elements of Programming Style (Kernighan & Plauger)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081003/b5104f66/attachment.html>

From exarkun at divmod.com  Fri Oct  3 09:01:35 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Oct 2008 11:01:35 -0400
Subject: [Twisted-Python] Implementing an efficient IMAP client using
	connection pooling
In-Reply-To: <d8ecebdd0810022317w2a807144wddc3f04002c7f074@mail.gmail.com>
Message-ID: <20081003150135.29191.1959633255.divmod.quotient.33337@ohm>

On Fri, 3 Oct 2008 11:47:53 +0530, little wiki <wiki at littlewiki.in> wrote:
>Hi Folks,
>
>I'm implementing a web based interface to an IMAP server.My idea is simple
>as in my web client sending a request to the python script in cgi-bin
>running apache .The python script in turn fetches from the IMAP and sends
>back JSON data to the web client.
>
>Here I want my python script to use twisted's IMAP's implementation .In
>general ,everytime I send a request to the IMAP server, it sends the data of
>the entire folder back which becomes a memory /bandwidth hog.

I don't think you're going to find a good solution as long as your client is
running from a CGI.  The way to reduce load on an IMAP4 server is to make
fewer connections and open fewer mailboxes (generally speaking.  Different
IMAP4 servers have different performance characteristics; you should learn
about yours and avoid the requests it specifically cannot satisfy efficiently).

Jean-Paul



From shweta3230 at gmail.com  Fri Oct  3 09:43:22 2008
From: shweta3230 at gmail.com (shweta mani)
Date: Fri, 3 Oct 2008 21:13:22 +0530
Subject: [Twisted-Python] Re: DOUBTS PLEASE SOLVE
In-Reply-To: <1222963122.12900.40.camel@localhost.localdomain>
References: <d13e157d0809300854n6799f385l87d851c096befc7d@mail.gmail.com>
	<20080930160428.29191.46084701.divmod.quotient.32247@ohm>
	<d13e157d0810012310x45557d12o5682ce7ffafa7628@mail.gmail.com>
	<1222963122.12900.40.camel@localhost.localdomain>
Message-ID: <d13e157d0810030843t58f4d22do7618c62e01c193fc@mail.gmail.com>

hi all it really helped.

On Thu, Oct 2, 2008 at 9:28 PM, George Pauly <george at ringdevelopment.com>wrote:

> Would 'ls -l -R' do the trick?
>
> -George
>
> On Thu, 2008-10-02 at 11:40 +0530, shweta mani wrote:
>
> > hi all i got the solution of listing all ls -l files in a listbox .
> > Next problem is to use recurrsively ls -l command again if a user
> > selects a directory. Can we use multiple in Linux commands within a
> > program withoy using pipe. i am forwarding the code. i need to use ls
> > -l command dependng on whether he chooses a directory.
> >
> > ..........
> >
> >         d = self.conn.sendRequest(self, 'exec', common.NS('ls -l'),
> > wantReply = 1)
> --
> George Pauly
> Ring Development
> www.ringdevelopment.com
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081003/fca119de/attachment.html>

From glyph at divmod.com  Fri Oct  3 17:25:46 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 03 Oct 2008 23:25:46 -0000
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <6EE85919-4455-4B36-86F9-3E032CCFF0D8@physics.ubc.ca>
References: <20081001214433.29191.2045241972.divmod.quotient.32801@ohm>
	<6EE85919-4455-4B36-86F9-3E032CCFF0D8@physics.ubc.ca>
Message-ID: <20081003232546.31635.1433291076.divmod.xquotient.981@weber.divmod.com>

On 1 Oct, 10:37 pm, mforbes at physics.ubc.ca wrote:
>>On Oct 1, 2008, at 3:44 PM, Jean-Paul Calderone wrote:

>>However, it's a very low-level API and since it isn't intended to be
>>used by application code, it doesn't seem like a very high priority
>>to make it less confusing.
>
>By the way, is there any convention by which "high level" API  routines 
>are distinguished from "low level" routines?  It is really  not that 
>clear from the docs... (writeSomeData comes first in the  listing etc.)

writeSomeData only comes first if you're looking at the documentation 
for "Connection", which is itself kind of an internal thing.  The 
internals definitely aren't as cleanly separated from the public / 
application interface as they should be, but a good rule of thumb is 
that high level stuff is what's covered in the tutorial documentation. 
For example, none of 
<http://twistedmatrix.com/projects/core/documentation/howto/producers.html>, 
<http://twistedmatrix.com/projects/core/documentation/howto/servers.html>, 
or 
<http://twistedmatrix.com/projects/core/documentation/howto/clients.html> 
covers writeSomeData.  Another rule of thumb is that the high-level 
stuff is on explicitly specified interfaces, such as 
<http://twistedmatrix.com/documents/8.1.0/api/twisted.internet.interfaces.ITransport.html>. 
Of course there are some low-level interfaces too, for example 
<http://twistedmatrix.com/documents/8.1.0/api/twisted.internet.interfaces.IWriteDescriptor.html> 
but their documentation is typically not as expository.

But the ultimate rule is that high-level interfaces are convenient, and 
the low-level ones (as you have noticed about writeSomeData) are not :).
>I know that and am using callFromThread: The reason I am having bad 
>behavior is because the socket is backing up.  Once I put in the  logic 
>to throw out data, it works fine... but the lack of reactor  support 
>concerns me somewhat.

What do you mean by "backing up"?  That doesn't really make sense.  When 
a transport "backs up" in Twisted, it just allocates a larger and larger 
buffer to store the data that is queued to be sent.

And what is the "lack of reactor support" you're talking about?  It 
seems to me that the reactor supports everything you need.
>I don't want the computation to stop,  but think I could put an 
>intermediate "push producer" that stops by  discarding the data.

I don't *really* understand what you're trying to accomplish here; it 
soudns to me like you actually want a pull producer that just always 
sends the latest state in resumeProducing(), assuming it's always 
changing.  Of course the "every 30 minutes" timeframe confuses that 
somewhat.  However, using some kind of producer is definitely the way to 
go.
>Is there a simpler way to do this all with twisted without using 
>threads? (The main goal is having an extremely minimal set of hooks 
>for the people writing the computational code, and having the 
>computational code run as fast as possible.)

You could use subprocesses.  Valentino Volonghi is working on a 
convenient process-pool for use with Twisted: 
<https://launchpad.net/ampoule/>.  I don't think that would actually 
help you that much though, since you'd still need to have application- 
specific buffering logic (it's a slightly unusual requirement to throw 
away intermediary state depending on the buffer saturation).



From warner at lothar.com  Fri Oct  3 19:26:18 2008
From: warner at lothar.com (Brian Warner)
Date: Fri, 3 Oct 2008 18:26:18 -0700
Subject: [Twisted-Python] troubles with FTP server and async file writing
Message-ID: <20081003182618.3750a70a@fluxx.allmydata.com>

Howdy all.. who's interested in the VFS or FTP code these days?

I'm in the process of writing an FTP frontend for Tahoe[1], and the STOR
command is causing me problems. Tahoe is a virtual filesystem that spreads
files and directories over a grid of backend servers to achieve high
reliability and availability. Once the STOR command finishes transferring the
file (over the separate DTP connection), the Tahoe node springs into action:
encrypting, hashing, erasure-coding, uploading, and finally modifying a
parent directory (which is also distributed) to reference the new child. This
whole process takes time, maybe a second or two for a small file, potentially
minutes if you're uploading a large file over a slow network. Naturally, the
Tahoe upload() method returns a Deferred, that fires when the whole process
is complete.

The trouble is, it looks like Twisted's FTP server is not designed to handle
asynchronous uploads. The specific problem is in the way that
twisted.protocols.ftp.FTP.ftp_STOR() interacts with the IConsumer that it
gets.. the sequence goes like this:

 1: ftp_STOR fetches an IWriteFile instance  (via Deferred)
 2: cbOpened() calls IWriteFile.receive to get an IConsumer (via Deferred)
 3: cbConsumer() hands it to dtpInstance.registerConsumer (via Deferred)
 4: FTP.registerConsumer() sends it a registerProducer() (synchronous)
    it returns the self._onConnLost Deferred
 5: data is sent over the DTP connection, written to the consumer
 6: the DTP connection is closed, _onConnLost is fired
 7:  DTP._unregConsumer sends unregisterProducer(), and ignores the result
 8:  FTP.cbConsumer()'s chain regains control, runs cbSent (via Deferred)
 9:  cbSent returns 226 Transfer Complete
 10: the Deferred chain finally unwinds, firing the Deferred that was
     returned from ftp_STOR, which sends the 226 back to the client

Most of these steps use Deferreds, so the opening of the file can take as
long as we need, but since DTP._unregConsumer ignores the result of
consumer.unregisterProducer in step #7, there's no way for the backend to
stall the delivery of the 226 until the file has actually been uploaded.

We need something to address this, because FTP clients are correctly assuming
that once they get the 226 Transfer Complete, the file will be in place.


I'm not sure how to best fix this. It seems like something needs to interact
with either the IConsumer or the IWriteFile to ask "are you done uploading
yet". If it wouldn't be so horribly wrong I'd suggest redefining IConsumer's
unregisterProducer() to return a Deferred, and then modify the FTP client (in
DTP._unregConsumer) to pass that Deferred back to the chain, something like:

--- twisted/protocols/ftp.py    (revision 24956)
+++ twisted/protocols/ftp.py    (working copy)
@@ -451,10 +451,10 @@
             self._buffer.append(bytes)
 
     def _unregConsumer(self, ignored):
-        self._cons.unregisterProducer()
+        d = defer.maybeDeferred(self._cons.unregisterProducer)
         self._cons = None
         del self._onConnLost
-        return ignored
+        return d


But, as far as I can tell, IConsumers aren't meant to work this way:
detaching a producer doesn't really mean that there won't be more data at
some point in the future, just that this particular producer is no longer
useful.

IFinishableConsumer, though, has a 'finish' method, which is actually used in
a couple of other places in twisted/protocols/ftp.py . So Plan B would be:

 * declare that IWriteFile.receive() must return an IFinishableConsumer
   instead of merely an IConsumer
 * document that IFinishableConsumer.finish() will be called after
   unregisterProducer, and document what happens in the case of exceptions
 * redefine IFinishableConsumer.finish() to be allowed to return a Deferred
 * modify FTP.ftp_STOR.cbConsumer to wait for this Deferred before sending
   the 226 response, something like:

--- twisted/protocols/ftp.py    (revision 24956)
+++ twisted/protocols/ftp.py    (working copy)
@@ -1049,6 +1049,7 @@
                 cons = ASCIIConsumerWrapper(cons)
 
             d = self.dtpInstance.registerConsumer(cons)
+            d.addCallback(lambda res: cons.finish())
             d.addCallbacks(cbSent, ebSent)
 
             # Tell them what to doooo

But it doesn't look like IFinishableConsumer.finish() is meant to be used
this way either: the docstring has no mention of return value, or if/when it
gets called, and the FTP client is the only code in all of Twisted that uses
it (and all that does is a synchronous transport.loseConnection).

I guess Plan C would be to involve the IWriteFile instance, adding a finish()
method of some sort, making this an FTP-specific solution.


So, any thoughts? Something like this just at the VFS level would allow
backends to use asynchronous-writes, which feels like a significant gap in
the current functionality. It might be better to address it at the IConsumer
level, but that would touch more (and better-established) code.


cheers,
 -Brian


[1]: http://allmydata.org/



From mforbes at physics.ubc.ca  Sat Oct  4 19:12:20 2008
From: mforbes at physics.ubc.ca (Michael McNeil Forbes)
Date: Sat, 4 Oct 2008 19:12:20 -0600
Subject: [Twisted-Python] CONNECTION_LOST not an integer (docstring error?)
In-Reply-To: <20081003232546.31635.1433291076.divmod.xquotient.981@weber.divmod.com>
References: <20081001214433.29191.2045241972.divmod.quotient.32801@ohm>
	<6EE85919-4455-4B36-86F9-3E032CCFF0D8@physics.ubc.ca>
	<20081003232546.31635.1433291076.divmod.xquotient.981@weber.divmod.com>
Message-ID: <4EF32C31-C102-4677-A3B0-D8ED9D2B9D8E@physics.ubc.ca>


On Oct 3, 2008, at 5:25 PM, glyph at divmod.com wrote:
>> I know that and am using callFromThread: The reason I am having  
>> bad behavior is because the socket is backing up.  Once I put in  
>> the  logic to throw out data, it works fine... but the lack of  
>> reactor  support concerns me somewhat.
>
> What do you mean by "backing up"? That doesn't really make sense.   
> When a transport "backs up" in Twisted, it just allocates a larger  
> and larger buffer to store the data that is queued to be sent.
I thought that the socket buffer was backing up, but now see that  
write() does buffer.  I incorrectly attributed some problems with  
data arriving out of order and/or getting lost with this... I will  
have to look deeper into what is causing these problems.  I am using  
a push producer now and the server seems to be sending things fine.   
As far as I can tell, however, the receiver is sometimes getting the  
data out of order when data comes in too fast on the client side.  I  
have to look into that and see what the cause is... maybe I am not  
being careful enough with the threads.

(On the client side, I want the user to have full access to a python  
interpreter with readline functionality etc. and the ability to plot  
things with matplotlib using Tkinter.  As far as I can see, I can't  
get readline functionality with a manhole or similar interface  
controlled by twisted, so again I have to run twisted in a separate  
thread.)

> And what is the "lack of reactor support" you're talking about?
Oh, the "lack of support" for writeSomeData by some reactors bothered  
me and prompted me to use write;-)

>> I don't want the computation to stop,  but think I could put an  
>> intermediate "push producer" that stops by  discarding the data.
>
> I don't *really* understand what you're trying to accomplish here;  
> it soudns to me like you actually want a pull producer that just  
> always sends the latest state in resumeProducing(), assuming it's  
> always changing.  Of course the "every 30 minutes" timeframe  
> confuses that somewhat.  However, using some kind of producer is  
> definitely the way to go.
The point here is that there are two forms of usage: one is when the  
computation is fast and the data is coming so fast that the client  
will have to drop some of it.  I agree that this should be more of a  
pull producer, but the other form of usage is where the computation  
takes about 30 minutes before new data is ready.  This should be  
implemented as a push producer.

>> Is there a simpler way to do this all with twisted without using  
>> threads? (The main goal is having an extremely minimal set of  
>> hooks for the people writing the computational code, and having  
>> the computational code run as fast as possible.)
>
> You could use subprocesses.  Valentino Volonghi is working on a  
> convenient process-pool for use with Twisted: <https:// 
> launchpad.net/ampoule/>.  I don't think that would actually help  
> you that much though, since you'd still need to have application-  
> specific buffering logic (it's a slightly unusual requirement to  
> throw away intermediary state depending on the buffer saturation).

Thanks for the suggestions and help.
Michael.




From exarkun at twistedmatrix.com  Sat Oct  4 22:05:17 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Oct 2008 04:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1223179517.1.475456981@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081005/a991a3b7/attachment.html>

From shweta3230 at gmail.com  Sun Oct  5 00:16:34 2008
From: shweta3230 at gmail.com (shweta mani)
Date: Sun, 5 Oct 2008 11:46:34 +0530
Subject: [Twisted-Python] Re:got stuck again
Message-ID: <d13e157d0810042316l338cab91k390d02b3d245d1dc@mail.gmail.com>

hi all
again got stuck folks!
this time it is as follows
i need to execute a script called test1.sh which acepts a name from a user .
this is done in a Unix server.
sh test1.sh if executed will ask for a input. user will enter a name.
then user's name will be displayed in the output form
this should be done Python twisted ssh. in my case it is not accepting any
input


On Fri, Oct 3, 2008 at 9:13 PM, shweta mani <shweta3230 at gmail.com> wrote:

>  hi all it really helped.
>
>   On Thu, Oct 2, 2008 at 9:28 PM, George Pauly <george at ringdevelopment.com
> > wrote:
>
>> Would 'ls -l -R' do the trick?
>>
>> -George
>>
>> On Thu, 2008-10-02 at 11:40 +0530, shweta mani wrote:
>>
>> > hi all i got the solution of listing all ls -l files in a listbox .
>> > Next problem is to use recurrsively ls -l command again if a user
>> > selects a directory. Can we use multiple in Linux commands within a
>> > program withoy using pipe. i am forwarding the code. i need to use ls
>> > -l command dependng on whether he chooses a directory.
>> >
>> > ..........
>> >
>> >         d = self.conn.sendRequest(self, 'exec', common.NS('ls -l'),
>> > wantReply = 1)
>> --
>> George Pauly
>> Ring Development
>> www.ringdevelopment.com
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081005/be3e5c0f/attachment.html>

From hackgou at gmail.com  Sun Oct  5 07:12:10 2008
From: hackgou at gmail.com (HG)
Date: Sun, 5 Oct 2008 21:12:10 +0800
Subject: [Twisted-Python] Syslog Listener UDP
In-Reply-To: <a33934630809281118y34e23dfdq769c5ea2ab8e9acd@mail.gmail.com>
References: <a33934630809281118y34e23dfdq769c5ea2ab8e9acd@mail.gmail.com>
Message-ID: <774f50bd0810050612g791d7d8dy8f00ba5f2c6baad4@mail.gmail.com>

I'm interested with this.
any more progress?
thanks
HG

On Mon, Sep 29, 2008 at 2:18 AM, Marc Byrd <dr.marc.byrd at gmail.com> wrote:

> Hi,
>
> I would like to build a syslog(udp port 514) listener in twisted.  The goal
> is to make it compatible with syslog and syslog-ng, which may be configured
> on a "client" to send log entries (as they occur) via udp (fire and forget)
> to a remote server (my twisted server).
>
> Is there already something out there that would do this or that would be a
> good start?
>
> Thanks,
>
>
> Marc
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081005/8cbed961/attachment.html>

From george at ringdevelopment.com  Sun Oct  5 12:19:01 2008
From: george at ringdevelopment.com (George Pauly)
Date: Sun, 05 Oct 2008 14:19:01 -0400
Subject: [Twisted-Python] Re:got stuck again
In-Reply-To: <d13e157d0810042316l338cab91k390d02b3d245d1dc@mail.gmail.com>
References: <d13e157d0810042316l338cab91k390d02b3d245d1dc@mail.gmail.com>
Message-ID: <1223230741.5174.142.camel@localhost.localdomain>

Perhaps if we had more information about your assignment it would help.

It would be nice to know where Twisted is being used.

-George

On Sun, 2008-10-05 at 11:46 +0530, shweta mani wrote:
> 
> hi all
> again got stuck folks!
> this time it is as follows
> i need to execute a script called test1.sh which acepts a name from a
> user .
> this is done in a Unix server.
> sh test1.sh if executed will ask for a input. user will enter a name.
> then user's name will be displayed in the output form
> this should be done Python twisted ssh. in my case it is not accepting
> any input
> 
>  
> On Fri, Oct 3, 2008 at 9:13 PM, shweta mani <shweta3230 at gmail.com>
> wrote:
>         hi all it really helped.
>         
>         
>         
>         On Thu, Oct 2, 2008 at 9:28 PM, George Pauly
>         <george at ringdevelopment.com> wrote:
>                 Would 'ls -l -R' do the trick?
>                 
>                 -George
>                 
>                 On Thu, 2008-10-02 at 11:40 +0530, shweta mani wrote:
>                 
>                 > hi all i got the solution of listing all ls -l files
>                 in a listbox .
>                 > Next problem is to use recurrsively ls -l command
>                 again if a user
>                 > selects a directory. Can we use multiple in Linux
>                 commands within a
>                 > program withoy using pipe. i am forwarding the code.
>                 i need to use ls
>                 > -l command dependng on whether he chooses a
>                 directory.
>                 >
>                 
>                 > ..........
>                 >
>                 >         d = self.conn.sendRequest(self, 'exec',
>                 common.NS('ls -l'),
>                 > wantReply = 1)
>                 
>                 --
>                 George Pauly
>                 Ring Development
>                 www.ringdevelopment.com
>                 
>                 
>                 
>                 _______________________________________________
>                 Twisted-Python mailing list
>                 Twisted-Python at twistedmatrix.com
>                 http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>                 
>         
>         
> 
> 
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From exarkun at divmod.com  Mon Oct  6 14:40:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 6 Oct 2008 16:40:36 -0400
Subject: [Twisted-Python] troubles with FTP server and async file writing
In-Reply-To: <20081003182618.3750a70a@fluxx.allmydata.com>
Message-ID: <20081006204036.29191.263766891.divmod.quotient.34725@ohm>

On Fri, 3 Oct 2008 18:26:18 -0700, Brian Warner <warner at lothar.com> wrote:
>[snip]
>The specific problem is in the way that
>twisted.protocols.ftp.FTP.ftp_STOR() interacts with the IConsumer that it
>gets.. the sequence goes like this:
>
> [snip]
> 6: the DTP connection is closed, _onConnLost is fired
> 7:  DTP._unregConsumer sends unregisterProducer(), and ignores the result
> 8:  FTP.cbConsumer()'s chain regains control, runs cbSent (via Deferred)
> 9:  cbSent returns 226 Transfer Complete
> [snip]
>
>Most of these steps use Deferreds, so the opening of the file can take as
>long as we need, but since DTP._unregConsumer ignores the result of
>consumer.unregisterProducer in step #7, there's no way for the backend to
>stall the delivery of the 226 until the file has actually been uploaded.
>
>We need something to address this, because FTP clients are correctly assuming
>that once they get the 226 Transfer Complete, the file will be in place.
>

Yep.  You're right that the FTP server protocol implementation currently
assumes that once it has written the last chunk to the consumer that the
file is successfully uploaded.  It would be a good enhancement to server
to allow application code to insert one more Deferred into processing of
uploads after the last write and before the success notification.

Unfortunately, there's no way to signal this with `IConsumer`.  Likewise
(as you pointed out) `IFinishableConsumer.finish` doesn't have very well
defined semantics.  In particular, there's no way to infer from its docs
that a Deferred might be returned.

>
>I guess Plan C would be to involve the IWriteFile instance, adding a finish()
>method of some sort, making this an FTP-specific solution.
>
>So, any thoughts? Something like this just at the VFS level would allow
>backends to use asynchronous-writes, which feels like a significant gap in
>the current functionality. It might be better to address it at the IConsumer
>level, but that would touch more (and better-established) code.
>

Trying to solve this in VFS before it has been solved for any specific use
case would be premature.  Similarly, making a change to `IConsumer` before
implementing the idea even once should be avoided.  I would suggest adding
a new (optional) interface to the FTP server implementation which supports
the close hook that's needed here.  Once something is working, then we can
try to generalize it.

Jean-Paul



From warner at lothar.com  Mon Oct  6 19:51:18 2008
From: warner at lothar.com (Brian Warner)
Date: Mon, 6 Oct 2008 18:51:18 -0700
Subject: [Twisted-Python] troubles with FTP server and async file writing
In-Reply-To: <20081006204036.29191.263766891.divmod.quotient.34725@ohm>
References: <20081003182618.3750a70a@fluxx.allmydata.com>
	<20081006204036.29191.263766891.divmod.quotient.34725@ohm>
Message-ID: <20081006185118.20e36e04@fluxx.allmydata.com>

On Mon, 6 Oct 2008 16:40:36 -0400
Jean-Paul Calderone <exarkun at divmod.com> wrote:

> I would suggest adding a new (optional) interface to the FTP server
> implementation which supports the close hook that's needed here. Once
> something is working, then we can try to generalize it.


Ok, I've created #3462 and attached a patch for your consideration:

  http://twistedmatrix.com/trac/ticket/3462

With this patch, I'm able to make Tahoe do what I need it to do.

thanks,
 -Brian



From vvangelovski at gmail.com  Tue Oct  7 02:38:36 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Tue, 7 Oct 2008 10:38:36 +0200
Subject: [Twisted-Python] alternative to tac
Message-ID: <406b9fda0810070138l233695d4h7064857ef430b3e8@mail.gmail.com>

Which is the simplest way to put a service under and application to
listen on a port and behave similarly to the way it behaves when run
with twistd -noy script.tac but directly from a standard python
module? Lets assume I don't have access to the tac command and want to
emulate the behaveour.



From wthie at thiengineering.ch  Tue Oct  7 03:18:28 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 07 Oct 2008 11:18:28 +0200
Subject: [Twisted-Python] alternative to tac
In-Reply-To: <406b9fda0810070138l233695d4h7064857ef430b3e8@mail.gmail.com>
References: <406b9fda0810070138l233695d4h7064857ef430b3e8@mail.gmail.com>
Message-ID: <48EB2964.2000108@thiengineering.ch>

Hi Vasil

I use something along the code below whoch serves dual purpose, use it 
with twistd -noy xxx.tac and also python xxx.tac.

I was undecided almost a year ago whether I should use config files too, 
but then found that the .tac files work great as config files too.

I mainly develop on MSW XP and Vista and routinely deploy to OpenBSD.

HTH, Werner

PS: some refs in the code are generalized

import sys, os, gc

from twisted.enterprise import adbapi

from twisted.application import service, strports, internet
from twisted.cred import portal, credentials, checkers
from twisted.internet import protocol, reactor
#from twisted.conch import manhole, manhole_ssh
from twisted.python import log

from nevow import appserver, inevow

from theproject import web, i18n, plugin, ourguard

if sys.platform != 'win32':
   import psyco
   psyco.full()

   UID = 67
   GID = 67
   os.environ['PYTHON_EGG_CACHE'] = '/tmp'

DB_DRIVER = "MySQLdb"
DB_ARGS = {
     'host': 'xxx.xxx.xxx.xxx',
     'db': 'somedb',
     'user': 'someuser',
     'passwd': 'somepwd',
     'cp_reconnect': True
     }

application = service.Application("appname")

print
print 'available userstores:'
for userstore in plugin.userstores():
   print userstore.name

UserstoreName  = 'dbonly'
#UserstoreName  = 'memonly'
[Userstore] = [x for x in plugin.userstores() if x.name == UserstoreName]
print 'selected: %s' % Userstore.name

userstore = Userstore(DB_DRIVER, **DB_ARGS)

#additional style locations to be put into second arg, third arg is 
#redirect to in case of not knowing where to go
theportal = portal.Portal(web.Realm(web.Root('style_loc', [], 
'www.google.com'), userstore))

theportal.registerChecker(checkers.AllowAnonymousAccess(), 
credentials.IAnonymous)

thersrc = ourguard.TheSessionWrapper(theportal, mindFactory=web.Mind)
site = appserver.NevowSite(thersrc)

webserver = strports.service("tcp:7999", site)
webserver.setServiceParent(application)

def main():
   log.startLogging(sys.stdout)
   reactor.listenTCP(7999, site) #start only the web svc when debugging
   reactor.run()
##  print gc.get_objects()

if __name__ == '__main__':
   main()
##  import cProfile, pstats
##  p = cProfile.Profile()
##  p.run('main()')
##  s = pstats.Stats(p)
##  s.strip_dirs()
##  s.sort_stats('call', 'cum', 'name').print_stats().print_callers()



Vasil Vangelovski wrote:
> Which is the simplest way to put a service under and application to
> listen on a port and behave similarly to the way it behaves when run
> with twistd -noy script.tac but directly from a standard python
> module? Lets assume I don't have access to the tac command and want to
> emulate the behaveour.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From vvangelovski at gmail.com  Tue Oct  7 03:27:27 2008
From: vvangelovski at gmail.com (Vasil Vangelovski)
Date: Tue, 7 Oct 2008 11:27:27 +0200
Subject: [Twisted-Python] alternative to tac
In-Reply-To: <48EB2964.2000108@thiengineering.ch>
References: <406b9fda0810070138l233695d4h7064857ef430b3e8@mail.gmail.com>
	<48EB2964.2000108@thiengineering.ch>
Message-ID: <406b9fda0810070227p240a69dcnf21d669e928f0733@mail.gmail.com>

Thanks. I'll try it out.

On Tue, Oct 7, 2008 at 11:18 AM, Werner Thie <wthie at thiengineering.ch> wrote:
> Hi Vasil
>
> I use something along the code below whoch serves dual purpose, use it with
> twistd -noy xxx.tac and also python xxx.tac.
>
> I was undecided almost a year ago whether I should use config files too, but
> then found that the .tac files work great as config files too.
>
> I mainly develop on MSW XP and Vista and routinely deploy to OpenBSD.
>
> HTH, Werner
>
> PS: some refs in the code are generalized
>
> import sys, os, gc
>
> from twisted.enterprise import adbapi
>
> from twisted.application import service, strports, internet
> from twisted.cred import portal, credentials, checkers
> from twisted.internet import protocol, reactor
> #from twisted.conch import manhole, manhole_ssh
> from twisted.python import log
>
> from nevow import appserver, inevow
>
> from theproject import web, i18n, plugin, ourguard
>
> if sys.platform != 'win32':
>  import psyco
>  psyco.full()
>
>  UID = 67
>  GID = 67
>  os.environ['PYTHON_EGG_CACHE'] = '/tmp'
>
> DB_DRIVER = "MySQLdb"
> DB_ARGS = {
>    'host': 'xxx.xxx.xxx.xxx',
>    'db': 'somedb',
>    'user': 'someuser',
>    'passwd': 'somepwd',
>    'cp_reconnect': True
>    }
>
> application = service.Application("appname")
>
> print
> print 'available userstores:'
> for userstore in plugin.userstores():
>  print userstore.name
>
> UserstoreName  = 'dbonly'
> #UserstoreName  = 'memonly'
> [Userstore] = [x for x in plugin.userstores() if x.name == UserstoreName]
> print 'selected: %s' % Userstore.name
>
> userstore = Userstore(DB_DRIVER, **DB_ARGS)
>
> #additional style locations to be put into second arg, third arg is
> #redirect to in case of not knowing where to go
> theportal = portal.Portal(web.Realm(web.Root('style_loc', [],
> 'www.google.com'), userstore))
>
> theportal.registerChecker(checkers.AllowAnonymousAccess(),
> credentials.IAnonymous)
>
> thersrc = ourguard.TheSessionWrapper(theportal, mindFactory=web.Mind)
> site = appserver.NevowSite(thersrc)
>
> webserver = strports.service("tcp:7999", site)
> webserver.setServiceParent(application)
>
> def main():
>  log.startLogging(sys.stdout)
>  reactor.listenTCP(7999, site) #start only the web svc when debugging
>  reactor.run()
> ##  print gc.get_objects()
>
> if __name__ == '__main__':
>  main()
> ##  import cProfile, pstats
> ##  p = cProfile.Profile()
> ##  p.run('main()')
> ##  s = pstats.Stats(p)
> ##  s.strip_dirs()
> ##  s.sort_stats('call', 'cum', 'name').print_stats().print_callers()
>
>
>
> Vasil Vangelovski wrote:
>>
>> Which is the simplest way to put a service under and application to
>> listen on a port and behave similarly to the way it behaves when run
>> with twistd -noy script.tac but directly from a standard python
>> module? Lets assume I don't have access to the tac command and want to
>> emulate the behaveour.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From phil at bubblehouse.org  Tue Oct  7 09:16:13 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 7 Oct 2008 11:16:13 -0400
Subject: [Twisted-Python] alternative to tac
In-Reply-To: <48EB2964.2000108@thiengineering.ch>
References: <406b9fda0810070138l233695d4h7064857ef430b3e8@mail.gmail.com>
	<48EB2964.2000108@thiengineering.ch>
Message-ID: <A1E5E4FE-161A-4589-BD69-AC541D2B337A@bubblehouse.org>


On Oct 7, 2008, at 5:18 AM, Werner Thie wrote:
> Vasil Vangelovski wrote:
>> Which is the simplest way to put a service under and application to
>> listen on a port and behave similarly to the way it behaves when run
>> with twistd -noy script.tac but directly from a standard python
>> module? Lets assume I don't have access to the tac command and want  
>> to
>> emulate the behaveour.
>
> Hi Vasil
>
> I use something along the code below whoch serves dual purpose, use  
> it with twistd -noy xxx.tac and also python xxx.tac.

[snip]

> def main():
>  log.startLogging(sys.stdout)
>  reactor.listenTCP(7999, site) #start only the web svc when debugging
>  reactor.run()
> ##  print gc.get_objects()
>
> if __name__ == '__main__':
>  main()

[snip]

I don't think this really emulates twistd's behavior very well. twistd  
does roughly one trillion other things during startup that won't  
happen here.

Maybe you don't need any of this stuff, but I'll add my two cents  
about how I've dealt with this, which is to use twistd plugins, and  
call twistd's script functions directly:

from twisted.scripts import twistd

config = twistd.ServerOptions()
args = ['--pidfile', 'mytwistd.pid', '-l', 'mytwistd.log', 'myplugin']
config.parseOptions(args)
twistd.runApp(config)

This lets me easily specify configuration details, but should be  
reasonably forward-compatible. Also, I can keep all my code inside a  
package, and as long as it's in the system path, my plugin will be  
available to twistd.

There was some talk ages ago about making twistd a little more  
developer-friendly (so that you could more easily pick and choose the  
parts of it you wanted to use) but I don't remember the details, or if  
any progress was made.

-phil



From exarkun at divmod.com  Tue Oct  7 13:09:18 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 7 Oct 2008 15:09:18 -0400
Subject: [Twisted-Python] Buildbot history
In-Reply-To: 0
Message-ID: <20081007190918.29191.1277749036.divmod.quotient.35224@ohm>

Hey all,

Due to some unfortunate behavior which began after I upgraded our build
master to 0.7.8, I've just removed all of the history from our buildbot.
This means all old links to build results are broken now.  Hopefully this
won't cause any major problems.

Jean-Paul



From wthie at thiengineering.ch  Wed Oct  8 10:57:51 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 08 Oct 2008 18:57:51 +0200
Subject: [Twisted-Python] Socket error 22,
	Invalid Argument in twisted/internet/tcp.py
In-Reply-To: <20081007190918.29191.1277749036.divmod.quotient.35224@ohm>
References: <20081007190918.29191.1277749036.divmod.quotient.35224@ohm>
Message-ID: <48ECE68F.4040705@thiengineering.ch>

As I wrote in post 
http://www.mail-archive.com/twisted-web at twistedmatrix.com/msg01701.html
I'm still observing this socket error 22 problem but was not able to dig 
into it any further until now.

I found the following post from the python mailing list, which seems 
related to my problem:

http://mail.python.org/pipermail/python-bugs-list/2006-August/034667.html

Attchached to this post is a small script, which I extended somehow and 
tried out on various platforms:

import socket

socket.setdefaulttimeout(30)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

#nothing is listening on port 9999
try:
   s.connect(('127.0.0.1', 9999))
except socket.error, msg:
   print msg
   print s.getsockname()

Win32 XP & VISTA:
(10061, 'Connection refused')
('0.0.0.0', 2071)  << socket# seems to be random

Linux Fedora 9:
(111, 'Connection refused')
('0.0.0.0', 47521)  << socket# counting up when script run again

Mac OSX 10.5:
(61, 'Connection refused')
('127.0.0.1', 49169)  << socket# counting up when script run again

FreeBSD 7.0:
(61, 'Connection refused')
('127.0.0.1', 0)  << socket# remains 0 when script run again

OpenBSD 4.3:
(61, 'Connection refused')
Traceback (most recent call last):
   File "socket22error.py", line 8, in <module>
     print s.getsockname()
   File "<string>", line 1, in getsockname
socket.error: (22, 'Invalid argument')

All the OS's seem to agree more or less how this particular situation 
should be handled except OpenBSD.

I agree that this is an Python/OS related question, but what happens 
with the reactor when such an error is thrown?

Is it harmless or does the system loose resources, wait for timeouts?

Is a try/except with a normalized answer in the embracing function in 
twisted/internet/tcp.py a possible cure?

I ask because I experience an unexplainable 'hickup' behavior where the 
odd request which usually triggers an instantaneous response takes up to 
30secs until a response is seen on the client in a local and clean net 
enviroment.

Thxs, Werner

PS:
- Yes, I know trial.
- Yes, I am able to set up a build slave for OpenBSD and in fact did so.
- Yes, I requested the creds from exarkun at divmod.com for connecting this 
buildslave on 03.July 2008 17:37 but got no answer
- Yes, I'm willing to recreate the bot which was in the meantime used in 
another project
- No, I don't know if there exists an automated test case for the 
problem given above




From exarkun at divmod.com  Wed Oct  8 11:59:01 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 8 Oct 2008 13:59:01 -0400
Subject: [Twisted-Python] Socket error 22,
	Invalid Argument in twisted/internet/tcp.py
In-Reply-To: <48ECE68F.4040705@thiengineering.ch>
Message-ID: <20081008175901.29191.435977663.divmod.quotient.35741@ohm>

On Wed, 08 Oct 2008 18:57:51 +0200, Werner Thie <wthie at thiengineering.ch> wrote:
>As I wrote in post http://www.mail-archive.com/twisted- 
>web at twistedmatrix.com/msg01701.html
>I'm still observing this socket error 22 problem but was not able to dig 
>into it any further until now.
>
>I found the following post from the python mailing list, which seems related 
>to my problem:
>
>http://mail.python.org/pipermail/python-bugs-list/2006-August/034667.html
>
>Attchached to this post is a small script, which I extended somehow and 
>tried out on various platforms:
>
> [snip]
>

It looks like these are slightly different cases.  The traceback from
Twisted Web comes from using getsockname on a connection the server
accepted.  The script you attached calls getsockname on a socket which
has failed to make an outgoing connection.  Perhaps they are demonstrating
the same feature/behavior/bug of OpenBSD, but not necessarily.  I vaguely
recall trying to investigate the Twisted Web case when you initially raised
it, but I can't remember if I learned anything (I think I recall that I was
not able to reproduce it).

> [snip]
>
>I agree that this is an Python/OS related question, but what happens with 
>the reactor when such an error is thrown?
>
>Is it harmless or does the system loose resources, wait for timeouts?

When a protocol's dataReceived method raises an exception, the connection
is closed.  It seems that this exception is getting all the way from the
request handling code up to beyond the HTTP protocol implementation's
dataReceived method, so that should be what happens for this case. That
means it's probably harmless, but since I don't actually understand the
circumstances under which it happens, I can't say for sure.

>
>Is a try/except with a normalized answer in the embracing function in 
>twisted/internet/tcp.py a possible cure?

You mean in the implementation of getHost()?  Maybe, maybe not.  I'd like
to understand what OpenBSD thinks it is telling us when it returns EINVAL
here.

>
>I ask because I experience an unexplainable 'hickup' behavior where the odd 
>request which usually triggers an instantaneous response takes up to 30secs 
>until a response is seen on the client in a local and clean net enviroment.

It could be that this exception is preventing a request from being processed,
or there could be some other problem, I don't know.

Jean-Paul



From nimag at rogers.com  Wed Oct  8 16:51:57 2008
From: nimag at rogers.com (Nima Ghanavatian)
Date: Wed, 8 Oct 2008 15:51:57 -0700 (PDT)
Subject: [Twisted-Python] Packet Fragmentation
Message-ID: <515736.1947.qm@web88103.mail.re2.yahoo.com>

Hi,

I'm using TCP to pass large files back and fourth.  So far I've follow and expanded on the twisted code examples for a simple server/client.  
Everything works fine for me until the packets get large enough that fragmentation kicks in.

>From one side, I'm sending packets like so:

class EchoClient(protocol.Protocol):
    def connectionMade(self):
        data = ""
        while len(data) < 10000:
                data=data+'a'
        self.transport.write(data)


and on the receiving end:

def dataReceived(self, data):
    print data


I noticed after multiple iterations the data buffer fills up to the total 10000 bytes, but this takes 3 iterations of dataReceived().  Common sense suggests to have a simple "if len(data) == totalPacketSize" to solve my problem, but I have different sized packets coming in all the time, and can't hardcode this part.

I was wondering if there's any way in Twisted/Python to handle packet fragmentation.  Can I access the last fragment flag in the TCP packet somehow? Or is there a total packet size sent with the packet automatically?
If not, what would be the best way to solve this?

thanks,

Nima
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081008/fde32246/attachment.html>

From glyph at divmod.com  Wed Oct  8 17:13:18 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 08 Oct 2008 23:13:18 -0000
Subject: [Twisted-Python] Packet Fragmentation
In-Reply-To: <515736.1947.qm@web88103.mail.re2.yahoo.com>
References: <515736.1947.qm@web88103.mail.re2.yahoo.com>
Message-ID: <20081008231318.420.211901639.divmod.xquotient.57@weber.divmod.com>


On 10:51 pm, nimag at rogers.com wrote:
>I was wondering if there's any way in Twisted/Python to handle packet 
>fragmentation.  Can I access the last fragment flag in the TCP packet 
>somehow? Or is there a total packet size sent with the packet 
>automatically?
>If not, what would be the best way to solve this?

What you're dealing with here is not packet fragmentation.  TCP packet 
fragmentation is a very specific phenomenon that occurs at a lower level 
than Twisted (and your application).

When you send a large message over a TCP stream, it can get broken up 
into multiple segments.  That's not the same as an individual packet 
getting fragmented.  There's no way to re-assemble the message to 
discover the original boundaries of the "write" call that you used to 
emit it.

In other words, your data stream needs to have message boundaries in it. 
TCP, at the application level, is a stream of octets, *not* a sequence 
of packets.

There are numerous examples of this in Twisted; for example, 
twisted.protocols.basic includes NetstringReceiver, LineReceiver and 
(various subclasses of) IntNStringReceiver, each of which is a different 
strategy for breaking up a TCP stream into a discrete sequence of 
messages.



From bernat at luffy.cx  Thu Oct  9 05:27:51 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Thu, 09 Oct 2008 13:27:51 +0200
Subject: [Twisted-Python] Packet Fragmentation
In-Reply-To: <515736.1947.qm@web88103.mail.re2.yahoo.com> (Nima Ghanavatian's
	message of "Wed, 8 Oct 2008 15:51:57 -0700 (PDT)")
References: <515736.1947.qm@web88103.mail.re2.yahoo.com>
Message-ID: <m363o22eko.fsf@neo.luffy.cx>

OoO En  cette nuit nuageuse du  jeudi 09 octobre 2008,  vers 00:51, Nima
Ghanavatian <nimag at rogers.com> disait :

> I was wondering if there's any way in Twisted/Python to handle packet
> fragmentation.  Can I access the last fragment flag in the TCP packet somehow?
> Or is there a total packet size sent with the packet automatically?
> If not, what would be the best way to solve this?

You can also use a protocol  that keeps message boundaries like UDP. UDP
is   reliable    and   deliver   messages   in   order    if   used   on
localhost. Otherwise,  there are protocoles like SCTP  that are reliable
and keep message boundaries. However, I think there is no support for it
in Twisted.
-- 
BOFH excuse #93:
Feature not yet implimented



From exarkun at divmod.com  Thu Oct  9 06:30:14 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 9 Oct 2008 08:30:14 -0400
Subject: [Twisted-Python] Packet Fragmentation
In-Reply-To: <m363o22eko.fsf@neo.luffy.cx>
Message-ID: <20081009123014.29191.863966049.divmod.quotient.36156@ohm>

On Thu, 09 Oct 2008 13:27:51 +0200, Vincent Bernat <bernat at luffy.cx> wrote:
>OoO En  cette nuit nuageuse du  jeudi 09 octobre 2008,  vers 00:51, Nima
>Ghanavatian <nimag at rogers.com> disait :
>
>> I was wondering if there's any way in Twisted/Python to handle packet
>> fragmentation.  Can I access the last fragment flag in the TCP packet somehow?
>> Or is there a total packet size sent with the packet automatically?
>> If not, what would be the best way to solve this?
>
>You can also use a protocol  that keeps message boundaries like UDP. UDP
>is   reliable    and   deliver   messages   in   order    if   used   on
>localhost.

UDP is *not* reliable and will *not* necessarily deliver messages in order,
*even* if used on localhost.  Please refer to Glyph's post.

Jean-Paul



From fantix.king at gmail.com  Thu Oct  9 07:16:48 2008
From: fantix.king at gmail.com (Fantix King)
Date: Thu, 9 Oct 2008 21:16:48 +0800
Subject: [Twisted-Python] Translation for the Documentation
Message-ID: <5d0e41c60810090616t7ab2db61oae4d1697709f52c4@mail.gmail.com>

Hi,

Just new to here, but been using Twisted for one year. Some of the articles
in the documentation is really good. So I started some work to translate the
Core Documentation into my main language.

The project was hosted on googlecode, but obviously it is not the best place
to deal with translation works, especially team work. So I want to move it
to launchpad. Problem here is the launchpad people prefer a whole twisted
project other than seperate translation projects. So here I am to request
some help, mostly about turning on the translation module on launchpad for
the project of twisted. Also, RFC on the method I intend to deal with the
translation work.

Here's some rough idea about translating the documentation. Now that
launchpad uses PO format for translation, thus PO would be the better way. I
found a tool named 'po4a' a really good stuff. It can "gettextize" the
original xhtml document (aka master doc) to generate the POT file needed by
launchpad, and 'translate' the master doc with PO files which are translated
though launchpad. Meanwhile, po4a is pretty configurable and easy to use.


Best regards,
Fantix.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081009/623c8a47/attachment.html>

From bernat at luffy.cx  Thu Oct  9 08:37:35 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Thu, 09 Oct 2008 16:37:35 +0200
Subject: [Twisted-Python] Packet Fragmentation
In-Reply-To: <20081009123014.29191.863966049.divmod.quotient.36156@ohm>
	(Jean-Paul Calderone's message of "Thu, 9 Oct 2008 08:30:14 -0400")
References: <20081009123014.29191.863966049.divmod.quotient.36156@ohm>
Message-ID: <m31vyp3kcw.fsf@neo.luffy.cx>

OoO  En ce début  d'après-midi nuageux  du jeudi  09 octobre  2008, vers
14:30, Jean-Paul Calderone <exarkun at divmod.com> disait :

>> You can also use a protocol  that keeps message boundaries like UDP. UDP
>> is   reliable    and   deliver   messages   in   order    if   used   on
>> localhost.

> UDP is *not* reliable and will *not* necessarily deliver messages in order,
> *even* if used on localhost.  Please refer to Glyph's post.

Sorry for the bad information. I have checked again and in fact, this is
datagram unix socket that have those properties (on most Unixes).
-- 
BOFH excuse #225: It's those computer people in X {city of world}.  They
keep stuffing things up.



From zmola at acm.org  Thu Oct  9 08:44:21 2008
From: zmola at acm.org (Carl Zmola)
Date: Thu, 09 Oct 2008 10:44:21 -0400
Subject: [Twisted-Python] Packet Fragmentation
In-Reply-To: <20081009123014.29191.863966049.divmod.quotient.36156@ohm>
References: <20081009123014.29191.863966049.divmod.quotient.36156@ohm>
Message-ID: <20081009104421.7jvecd8c84ogkw88@webmail.zmolac.4java.ca>

Nima,

The easiest way to do what you want is to put a count at the beginning  
of your message and read that many bytes. The protocols that Glyph  
suggested do this.

With TCP, you are responsible for keeping boundaries in the message.   
TCP delivers a reliable two way STREAM of data.  It hides all the  
packets and handshakes from the programmer.  Since it is reliable, the  
easiest way to make messages is to add a count to the beginning of  
your message.


Carl

Quoting Jean-Paul Calderone <exarkun at divmod.com>:

> On Thu, 09 Oct 2008 13:27:51 +0200, Vincent Bernat <bernat at luffy.cx> wrote:
>> OoO En  cette nuit nuageuse du  jeudi 09 octobre 2008,  vers 00:51, Nima
>> Ghanavatian <nimag at rogers.com> disait :
>>
>>> I was wondering if there's any way in Twisted/Python to handle packet
>>> fragmentation.  Can I access the last fragment flag in the TCP   
>>> packet somehow?
>>> Or is there a total packet size sent with the packet automatically?
>>> If not, what would be the best way to solve this?
>>
>> You can also use a protocol  that keeps message boundaries like UDP. UDP
>> is   reliable    and   deliver   messages   in   order    if   used   on
>> localhost.
>
> UDP is *not* reliable and will *not* necessarily deliver messages in order,
> *even* if used on localhost.  Please refer to Glyph's post.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From nimag at rogers.com  Thu Oct  9 10:25:10 2008
From: nimag at rogers.com (Nima Ghanavatian)
Date: Thu, 9 Oct 2008 09:25:10 -0700 (PDT)
Subject: [Twisted-Python] Packet Fragmentation
Message-ID: <125448.90897.qm@web88102.mail.re2.yahoo.com>

Thanks for the detailed information!

I tried it out with LineReceiver and everything worked great!


-Nima


----- Original Message ----
From: "glyph at divmod.com" <glyph at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, October 8, 2008 4:13:18 PM
Subject: Re: [Twisted-Python] Packet Fragmentation


On 10:51 pm, nimag at rogers.com wrote:
>I was wondering if there's any way in Twisted/Python to handle packet 
>fragmentation.  Can I access the last fragment flag in the TCP packet 
>somehow? Or is there a total packet size sent with the packet 
>automatically?
>If not, what would be the best way to solve this?

What you're dealing with here is not packet fragmentation.  TCP packet 
fragmentation is a very specific phenomenon that occurs at a lower level 
than Twisted (and your application).

When you send a large message over a TCP stream, it can get broken up 
into multiple segments.  That's not the same as an individual packet 
getting fragmented.  There's no way to re-assemble the message to 
discover the original boundaries of the "write" call that you used to 
emit it.

In other words, your data stream needs to have message boundaries in it. 
TCP, at the application level, is a stream of octets, *not* a sequence 
of packets.

There are numerous examples of this in Twisted; for example, 
twisted.protocols.basic includes NetstringReceiver, LineReceiver and 
(various subclasses of) IntNStringReceiver, each of which is a different 
strategy for breaking up a TCP stream into a discrete sequence of 
messages.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081009/4485ce1c/attachment.html>

From kehander at myrealbox.com  Thu Oct  9 12:36:49 2008
From: kehander at myrealbox.com (Kevin Anderson)
Date: Thu, 09 Oct 2008 14:36:49 -0400
Subject: [Twisted-Python] Another tutorial?
Message-ID: <1223577409.80007a9ckehander@myrealbox.com>

Greetings,

Stepping through the mailing list archives a little, I can see that I am not the first who has read about Twisted and has gained some appreciation of how powerful and useful it is, but finds the tutorial documentation to be kind of lacking.

I would take a stab at trying to improve the finger tutorial myself (that is, to explain the rationale behind some of the decisions and why they're useful), but is someone already in the process of doing so?

(By the way, is there some way to submit patches for the documentation?  I still see depreciated references to mktap, particularly in the "Using Twisted Web" howto, even though there are already old tickets about removing references to it.)

-K




From exarkun at divmod.com  Thu Oct  9 12:53:22 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 9 Oct 2008 14:53:22 -0400
Subject: [Twisted-Python] Another tutorial?
In-Reply-To: <1223577409.80007a9ckehander@myrealbox.com>
Message-ID: <20081009185322.29191.1660826216.divmod.quotient.36276@ohm>

On Thu, 09 Oct 2008 14:36:49 -0400, Kevin Anderson <kehander at myrealbox.com> wrote:
>Greetings,
>
>Stepping through the mailing list archives a little, I can see that I am not the first who has read about Twisted and has gained some appreciation of how powerful and useful it is, but finds the tutorial documentation to be kind of lacking.
>
>I would take a stab at trying to improve the finger tutorial myself (that is, to explain the rationale behind some of the decisions and why they're useful), but is someone already in the process of doing so?
>
>(By the way, is there some way to submit patches for the documentation?  I still see depreciated references to mktap, particularly in the "Using Twisted Web" howto, even though there are already old tickets about removing references to it.)

We use the same issue tracker for code and documentation issues.  A lot of
the documentation issues have the keyword "documentation".  You can do a
query based on this.  For example:

  http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&keywords=~documentation&order=priority

If you want to fix something for which there is already a ticket, attach
a patch to the ticket, set the owner to no one, and add the "review"
keyword.

You should also take a look at <http://twistedmatrix.com/trac/wiki/TwistedDevelopment>.

You might also want to drop by IRC and discuss what you have in mind.

Jean-Paul



From lists at collab.nl  Thu Oct  9 13:01:20 2008
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Thu, 9 Oct 2008 20:01:20 +0100
Subject: [Twisted-Python] Another tutorial?
In-Reply-To: <1223577409.80007a9ckehander@myrealbox.com>
References: <1223577409.80007a9ckehander@myrealbox.com>
Message-ID: <C8654E76-5763-44AE-A6AC-ED2A7677D4FE@collab.nl>

Hi Kevin,

> I would take a stab at trying to improve the finger tutorial myself  
> (that is, to explain the rationale behind some of the decisions and  
> why they're useful), but is someone already in the process of doing  
> so?

There have been suggestions, see:

http://twistedmatrix.com/trac/ticket/2281
http://twistedmatrix.com/trac/ticket/2110
http://twistedmatrix.com/trac/ticket/626
http://twistedmatrix.com/trac/ticket/532

> (By the way, is there some way to submit patches for the  
> documentation?  I still see depreciated references to mktap,  
> particularly in the "Using Twisted Web" howto, even though there are  
> already old tickets about removing references to it.)

See:

http://twistedmatrix.com/trac/ticket/3393
http://twistedmatrix.com/trac/ticket/3247
http://twistedmatrix.com/trac/ticket/3246

Feel free to steal those tickets from me. If you're going to provide  
patches, make sure to read http://twistedmatrix.com/trac/wiki/TwistedDevelopment
and http://twistedmatrix.com/trac/wiki/TwistedDevelopment#Policies

Cheers,

Thijs
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20081009/fad31fd9/attachment.sig>

From fantix.king at gmail.com  Thu Oct  9 21:41:39 2008
From: fantix.king at gmail.com (Fantix King)
Date: Fri, 10 Oct 2008 11:41:39 +0800
Subject: [Twisted-Python] Re: Translation for the Documentation
In-Reply-To: <5d0e41c60810090616t7ab2db61oae4d1697709f52c4@mail.gmail.com>
References: <5d0e41c60810090616t7ab2db61oae4d1697709f52c4@mail.gmail.com>
Message-ID: <5d0e41c60810092041tc4cbed8waa31dc3f1773927d@mail.gmail.com>

>
> So here I am to request some help, mostly about turning on the translation
> module on launchpad for the project of twisted.
>

Here's the howto to do this:
https://help.launchpad.net/Translations/YourProject#Getting
started

Much thanks!

BR,
Fantix.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081010/8e0af9fd/attachment.html>

From wthie at thiengineering.ch  Fri Oct 10 04:07:31 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Fri, 10 Oct 2008 12:07:31 +0200
Subject: [Twisted-Python] Socket error 22,
	Invalid Argument in twisted/internet/tcp.py
In-Reply-To: <20081008175901.29191.435977663.divmod.quotient.35741@ohm>
References: <20081008175901.29191.435977663.divmod.quotient.35741@ohm>
Message-ID: <48EF2963.10501@thiengineering.ch>

>> Is a try/except with a normalized answer in the embracing function in 
>> twisted/internet/tcp.py a possible cure?
> 
> You mean in the implementation of getHost()?  Maybe, maybe not.  I'd like
> to understand what OpenBSD thinks it is telling us when it returns EINVAL
> here.

According to several 10 Gig of logfiles the error occurs in all kind of
situations be it POST or GET and always with the same traceback. What I
also see is that errors are more frequent when loads are higher, which
leads me to the conclusion that this might be a resource dependency
specially the fd count per process which we currently have at 8192 as I
already suspected in our previous discussion end of April.

I agree with you that my test script is not exactly the same situation
and the test you sent (just for the sake of completeness) me was 
inconclusive:

---- Paul's code ------------------------------------------------------
I wonder if OpenBSD gives back EINVAL for getsockname(2) when the peer
has done a shutdown of the socket.  Can you tell me what this program does?

    from socket import socket
    port = socket()
    port.bind(('', 0))
    port.listen(1)
    client = socket()
    client.setblocking(False)
    client.connect_ex(port.getsockname())
    server, clientAddr = port.accept()
    print 'Before close', server.getsockname()
    client.close()
    print 'After close', server.getsockname()

If it finishes without error, try it with a time.sleep(5) before the
final line.
---- end of Paul's code ------------------------------------------------

After a lot of googling there seems to be a possible onset of the 
problem dating back to 2006 shortly before the 4.3 release. There are 
other users reporting similar 'hickups' I experience on SSH and FTP, but 
none of those reports actually lead to a fix probably because everybody 
is used to a 'slow login', a typein hickup or a failed ftp.

One might speculate that this could be a hardware related error but us 
having several servers with very different HW under similar loads and 
observing those errors it might be a race condition in the kernel driver.

Also odd enough that the man pages for OpenBSD are the only one among 
the **xes who do not mention EINVAL as a possible return value but in 
fact do return it.

I'll try to file a bug with OpenBSD but doubt that it will get much 
attention being so impossible to trigger it.

Does somebody which is more fit on TCP/IP have an additional idea how to 
trigger such a behavior as described in my previous posts. Traceback 
below for completeness

Thxs, Werner

Running on twisted 2.5 OpenBSD I see the following traceback in the logs 
every twenty minutes with up to 200 athena/LivePages connected:

         Traceback (most recent call last):
         --- <exception caught here> ---
File 
"/usr/local/lib/python2.5/site-packages/twisted/internet/selectreactor.py", 
line 148, in _doReadOrWrite
             why = getattr(selectable, method)()

File "/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", 
line 362, in doRead
             return self.protocol.dataReceived(data)

File 
"/usr/local/lib/python2.5/site-packages/twisted/protocols/basic.py", 
line 233, in dataReceived
             why = self.lineReceived(line)

File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 
1069, in lineReceived
             self.allContentReceived()

File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 
1110, in allContentReceived
             req.requestReceived(command, path, version)

File "/usr/local/lib/python2.5/site-packages/twisted/web/http.py", line 
603, in requestReceived
            self.host = self.channel.transport.getHost()

File "/usr/local/lib/python2.5/site-packages/twisted/internet/tcp.py", 
line 672, in getHost return address.IPv4Address('TCP', 
*(self.socket.getsockname() + ('INET',)))
           File "<string>", line 1, in getsockname

         socket.error: (22, 'Invalid argument')







From johnaherne at rocs.co.uk  Fri Oct 10 04:21:57 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Fri, 10 Oct 2008 11:21:57 +0100
Subject: [Twisted-Python] Using deferreds when writing across unreliable
	network
Message-ID: <faf2d7810810100321i4d1737f7jcc7060fcc25e4266@mail.gmail.com>

I have been trying out twisted(2.5 for python 2.4 XPSP2) over the past few
weeks and have some code running connecting with some mobile devices over
GPRS. It works. But I am having problems with deferreds - which I find
tricky to understand.

I have setup a tcpserver which the mobile devices connect to and I send
answers back and occasionally unsolicited messages out.

I have made an assumption that I should use a defer to write back across the
network. Maybe I am wrong.

I have a function in which I set up the transport.write to send a message
out. This I make a deferred and return the deferred and add my callBack and
errBack functions. I can see them when I print out the callbacks so I know
they are there.

As far as I can see from my logs, the deferred runs but neither the callback
nor the errback are fired. Possibly an error occurs that stops them but I
have not yet found a way to pin this down. I see there is a setDebugging
option but I have not yet worked out how I would use this.

So before I start trying any more incorrect assumptions, what I would like
to confirm is that I should expect my callback or errback functions to be
called automatically when my deferred has executed and returned.

If successful, it would return fairly promptly. If it fails it could take a
number of minutes to fail. But that is another problem.

So should my callback or errback fire without me having to initiate any
action other than setting up the deferred. And should I be using a deferred
at all for this situation.

If I know that the basis of what I am doing is correct and I am still having
problems I can try and put together a small bit of code that reproduces the
problem on the assumption that my code is probably wrong.

Thanks for any pointers. I'm afraid that everytime I read the documentation
on deferreds and go through the examples on using them I come to different
conclusions on what I should be doing. So any help would be much
appreciated.

One example I looked at was the getPage example. Apart from doing a read it
seems to be much along the lines of what I want to do. I am writing using
straight TCP rather than HTTP. But that example fires the callback and
errback without any problems. So it makes me think that my deferreds have
something wrong with them.


John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081010/8b8bbe33/attachment.html>

From mg at daimi.au.dk  Fri Oct 10 05:23:46 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Fri, 10 Oct 2008 13:23:46 +0200
Subject: [Twisted-Python] Re: Using deferreds when writing across unreliable
	network
In-Reply-To: <faf2d7810810100321i4d1737f7jcc7060fcc25e4266@mail.gmail.com>
	(John Aherne's message of "Fri\, 10 Oct 2008 11\:21\:57 +0100")
References: <faf2d7810810100321i4d1737f7jcc7060fcc25e4266@mail.gmail.com>
Message-ID: <w1bmyhc7kxp.fsf@thyra02.daimi.au.dk>

"John Aherne" <johnaherne at rocs.co.uk> writes:

Hi John

I have no concrete solution to what you describe, but I can try and
explain how Deferreds work.

> So should my callback or errback fire without me having to initiate
> any action other than setting up the deferred. And should I be using
> a deferred at all for this situation.

First, a Deferred is an amazingly powerful concept, but the
implementation is surpricingly simple. I once posted a simple
explaination for my own project:

  http://article.gmane.org/gmane.comp.cryptography.viff.devel/26

The basic idea is that a Deferred is a container for event handling
functions, called callbacks in Twisted. Python has function pointers,
so it is easy to make such a class:

  class MiniDeferred:
      def __init__(self):
          self.callbacks = []
          self.value = None

      def addCallback(self, func, *extra_args):
          self.callbacks.append((func, extra_args))

      def callback(self, initial_value):
          self.value = initial_value
          for func, extra_args in self.callbacks:
              self.value = func(self.value, *extra_args)
          return self.value

      def __str__(self):
          if self.value is None:
              return "MiniDeferred (no value yet)"
          else:
              return "MiniDeferred (value: %s)" % (self.value,)

This class skips the error handling (errbacks), but I believe it
illustrates the core ideas of a Deferred. You can use it like this:

  >>> x = MiniDeferred()
  >>> print x
  MiniDeferred (no value yet)
  >>> x.addCallback(lambda value: value**3)
  >>> x.callback(-3)
  >>> print x
  MiniDeferred (value: -27)

The crucial thing is that "someone" or "something" must call the
callback method on your Deferred. The general rule to follow is that
it is the code that creates a Deferrred which has the reponsibility of
calling the callback method at the correct time.

So when you use the getPage function you get a Deferred back. Behind
the scenes the getPage function has setup things in such a way that
the callback method of the returned Deferred is called when the page
has arrived -- you must not invole callback yourself in this case.

But if you create a Deferred yourself, then it is up to you to make a
call to the callback method when ready.

And example could be this mini implementation of the DeferredList
class:

  class MiniDeferredList(MiniDeferred):
      def __init__(self, deferreds):
          MiniDeferred.__init__(self)
          self.results = [None] * len(deferreds)
          self.missing_results = len(deferreds)
          for index, deferred in enumerate(deferreds):
              deferred.addCallback(self._callback_fired, index)

      def _callback_fired(self, result, index):
           self.results[index] = result
           self.missing_results -= 1
           if self.missing_results == 0:
               self.callback(self.results)
           return result

Here the _callback_fired method invokes the callback method when all
deferreds have fired.

I hope this helps a bit -- it helped me to look at the implementation
in defer.py and see that it was less scary than I had imagined :-)


-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multiparty Computation) to Python. See: http://viff.dk/.



From johnaherne at rocs.co.uk  Fri Oct 10 06:00:10 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Fri, 10 Oct 2008 13:00:10 +0100
Subject: [Twisted-Python] Using deferreds when writing across unreliable
	network
Message-ID: <faf2d7810810100500k5761c9a4s8671aa8b9e920054@mail.gmail.com>

> I have no concrete solution to what you describe, but I can try and
> explain how Deferreds work.
>
> The crucial thing is that "someone" or "something" must call the
> callback method on your Deferred. The general rule to follow is that
> it is the code that creates a Deferrred which has the reponsibility of
> calling the callback method at the correct time.
>
> So when you use the getPage function you get a Deferred back. Behind
> the scenes the getPage function has setup things in such a way that
> the callback method of the returned Deferred is called when the page
> has arrived -- you must not invole callback yourself in this case.
>
> But if you create a Deferred yourself, then it is up to you to make a
> call to the callback method when ready.
>
>
> I hope this helps a bit -- it helped me to look at the implementation
> in defer.py and see that it was less scary than I had imagined :-)
>
>
> --
> Martin Geisler
>

Martin

Thanks for the reply.

That does clarify that I need to fire off my own deferreds.

The problem it leaves me at the moment is:

How do I tell when my transport.write has completed. The ACKs for my
messages happen at the TCP level. Does this mean that for writes and reads I
have to work at the application level to register when the write has been
successful and fire my callback then.

By the way I did find your example, but I could not reconcile why some
deferred examples had 'automatic' callbacks and other fired their own.

Yes. I have looked through the defer.py code to see what was going on. It is
certainly well laid out and easy to follow - just the basic concept needed
clearing up.

Thanks

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081010/93b8c8c7/attachment.html>

From mg at daimi.au.dk  Fri Oct 10 06:32:09 2008
From: mg at daimi.au.dk (Martin Geisler)
Date: Fri, 10 Oct 2008 14:32:09 +0200
Subject: [Twisted-Python] Re: Using deferreds when writing across unreliable
	network
In-Reply-To: <faf2d7810810100500k5761c9a4s8671aa8b9e920054@mail.gmail.com>
	(John Aherne's message of "Fri\, 10 Oct 2008 13\:00\:10 +0100")
References: <faf2d7810810100500k5761c9a4s8671aa8b9e920054@mail.gmail.com>
Message-ID: <w1bej2o7hrq.fsf@thyra02.daimi.au.dk>

"John Aherne" <johnaherne at rocs.co.uk> writes:

> Martin
>
> Thanks for the reply.
>
> That does clarify that I need to fire off my own deferreds.

Excellent! :-)

> The problem it leaves me at the moment is:
>
> How do I tell when my transport.write has completed. The ACKs for my
> messages happen at the TCP level. Does this mean that for writes and
> reads I have to work at the application level to register when the
> write has been successful and fire my callback then.

I think so -- you wont be told when the actual bytes have been pushed
onto the network, nor when they have arrived succesfully at their
destination. You have to add such logic yourself, maybe by having the
recepient send back a confirmation.

So one way to structure this is to let the code that calls
transport.write return a Deferred, call it d. Before returning it, the
code stores d in a well-known place, something like

  transport.write(...)
  d = Deferred()
  outstanding requests[some_id] = d
  return d

The code that handles incoming data will then have to recognize the
confirmation and will invoke the callback method on d:

  def dataReceived(self, data):
      id, payload = unpack(data)
      d = outstanding_requests[id]
      d.callback(payload)

This is sort of how my code works in the VIFF project.

> By the way I did find your example, but I could not reconcile why
> some deferred examples had 'automatic' callbacks and other fired
> their own.

That is because of the different ways they are used: Defered is the
basic building block, but DeferredList combines several Deferreds into
one.

-- 
Martin Geisler

VIFF (Virtual Ideal Functionality Framework) brings easy and efficient
SMPC (Secure Multiparty Computation) to Python. See: http://viff.dk/.



From johnaherne at rocs.co.uk  Fri Oct 10 06:48:21 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Fri, 10 Oct 2008 13:48:21 +0100
Subject: [Twisted-Python] Using deferreds when writing across unreliable
	network
Message-ID: <faf2d7810810100548w4b49124fo63a45633688d5be1@mail.gmail.com>

I think so -- you wont be told when the actual bytes have been pushed
onto the network, nor when they have arrived succesfully at their
destination. You have to add such logic yourself, maybe by having the
recepient send back a confirmation.

So one way to structure this is to let the code that calls
transport.write return a Deferred, call it d. Before returning it, the
code stores d in a well-known place, something like

 transport.write(...)
 d = Deferred()
 outstanding requests[some_id] = d
 return d

The code that handles incoming data will then have to recognize the
confirmation and will invoke the callback method on d:

 def dataReceived(self, data):
     id, payload = unpack(data)
     d = outstanding_requests[id]
     d.callback(payload)

This is sort of how my code works in the VIFF project.

> By the way I did find your example, but I could not reconcile why
> some deferred examples had 'automatic' callbacks and other fired
> their own.

That is because of the different ways they are used: Defered is the
basic building block, but DeferredList combines several Deferreds into
one.

Martin

Thankyou very much for your replies.

I have a feeling that I now know what I am doing or going to do.

I also think your min-deferred example will be very useful.

Thanks once again.

John Aherne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081010/71c0f76d/attachment.html>

From shweta3230 at gmail.com  Fri Oct 10 10:11:22 2008
From: shweta3230 at gmail.com (shweta mani)
Date: Fri, 10 Oct 2008 21:41:22 +0530
Subject: [Twisted-Python] Re: DOUBTS PLEASE SOLVE
In-Reply-To: <d13e157d0810030843t58f4d22do7618c62e01c193fc@mail.gmail.com>
References: <d13e157d0809300854n6799f385l87d851c096befc7d@mail.gmail.com>
	<20080930160428.29191.46084701.divmod.quotient.32247@ohm>
	<d13e157d0810012310x45557d12o5682ce7ffafa7628@mail.gmail.com>
	<1222963122.12900.40.camel@localhost.localdomain>
	<d13e157d0810030843t58f4d22do7618c62e01c193fc@mail.gmail.com>
Message-ID: <d13e157d0810100911u3829ba7em33e7449f98acfad@mail.gmail.com>

hi folks
i need to execute a shell script file through SSH twisted or paramiko. if it
is a normal file then directly with the command  sh <filename>.sh it is
getting executed.            self.conn.sendRequest(self, 'exec',
common.NS(sh test1.sh), wantReply = 1)
but if a shell scripts asks for user input, this particular way does not
wait for user input. it just print the echo part .
is there any way so that interactive type of scripts can be executed in
Paramiko or Twisted Conch in a windows machine (remote login in a unix
machine through Paramiko SSH or Twisted)

i did try with another way in Paramiko which helps in opening a remote
window by creating an instance of SSHClient and invoking the method
invoke_shell(with some parametes) but remote shell window is not opening.
the method specifies starts a terminal shell window in SSH server.
i am forwarding the code

On Fri, Oct 3, 2008 at 9:13 PM, shweta mani <shweta3230 at gmail.com> wrote:

>  hi all it really helped.
>
>   On Thu, Oct 2, 2008 at 9:28 PM, George Pauly <george at ringdevelopment.com
> > wrote:
>
>> Would 'ls -l -R' do the trick?
>>
>> -George
>>
>> On Thu, 2008-10-02 at 11:40 +0530, shweta mani wrote:
>>
>> > hi all i got the solution of listing all ls -l files in a listbox .
>> > Next problem is to use recurrsively ls -l command again if a user
>> > selects a directory. Can we use multiple in Linux commands within a
>> > program withoy using pipe. i am forwarding the code. i need to use ls
>> > -l command dependng on whether he chooses a directory.
>> >
>> > ..........
>> >
>> >         d = self.conn.sendRequest(self, 'exec', common.NS('ls -l'),
>> > wantReply = 1)
>> --
>> George Pauly
>> Ring Development
>> www.ringdevelopment.com
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081010/8e028caa/attachment.html>

From godson.g at gmail.com  Sat Oct 11 09:12:38 2008
From: godson.g at gmail.com (Godson Gera)
Date: Sat, 11 Oct 2008 20:42:38 +0530
Subject: [Twisted-Python] ANN: starpy-1.0.0a13
Message-ID: <f9822b400810110812q32cbfb1fhf8cd2d62c7f1cbf9@mail.gmail.com>

Hi All,

         I am happy to announce new release of starpy (Asterisk protocols
for Twisted http://starpy.sf.net ) on behalf of starpy team.

         starpy-1.0.0a13 can be downloaded from here
https://sourceforge.net/project/showfiles.php?group_id=164040

This release contains addition of many manager commands to manager API.
Following is a list of newly added commands.


   1. agentLogoff
   2. dbGet
   3. dbPut
   4. extensionState
   5. getConfig
   6. meetmeMute
   7. meetmeUnmute
   8. park
   9. pauseMonitor
   10. playDTMF
   11. queuePause
   12. sipShowPeers
   13. unpauseMonitor
   14. updateConfig (read AMI documentation before using this )
   15. userEvent
   16. waitEvent
   17. zapDNDoff
   18. zapDNDon
   19. zapDialOffhook
   20. zapHangup
   21. zapRestart
   22. zapShowChannels
   23. zapTransfer


   - Those are all the new manager Actions that were added. Queues action is
   there but it won't work cause AMI returns improperly formatted lines, same
   case with IAXPeers action, as AgentCallbackLogin is deprecated and is not
   functioning properly it was not included.
   - Bug fix in queueStatus manager API, in collectDeferred argument
   'QueueStatusEnd' is changed to 'QueueStatusComplete'. Now the deferred fires
   properly.
   - Bug fix in fastagi playback (not a standard AGI command, was created by
   Mike as a workaround for buggy streamFile command back in Asterisk 1.2 days.
   Now streamFile is working properly so you might not be using this playback
   ).


Those are all the changes that are involved in this release if you find any
bugs or hope for any new features let me know.

Have fun with starpy,
Godson Gera
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081011/f70c6794/attachment.html>

From exarkun at twistedmatrix.com  Sat Oct 11 22:05:09 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Oct 2008 04:05:09 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1223784309.4.1121086479@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081012/73ad6e3a/attachment.html>

From shweta3230 at gmail.com  Sat Oct 11 23:04:17 2008
From: shweta3230 at gmail.com (shweta mani)
Date: Sun, 12 Oct 2008 10:34:17 +0530
Subject: [Twisted-Python] what to do!
Message-ID: <d13e157d0810112204i45699c56td4b3f19c61053613@mail.gmail.com>

i need to execute a shell script file through SSH twisted or paramiko. if it
is a normal file then directly with the command  sh <filename>.sh it is
getting executed.            self.conn.sendRequest(self, 'exec',
common.NS(sh test1.sh), wantReply = 1)
but if a shell scripts asks for user input, this particular way does not
wait for user input. it just print the echo part .
is there any way so that interactive type of scripts can be executed in
Paramiko or Twisted Conch in a windows machine (remote login in a unix
machine through Paramiko SSH or Twisted)
i did try with another way in Paramiko which helps in opening a remote
window by creating an instance of SSHClient and invoking the method
invoke_shell(with some parametes) but remote shell window is not opening.the
method specifies starts a terminal shell window in SSH server.
To my interpretation it is somewaht opening a terminal window like putty.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081012/5be5d3f9/attachment.html>

From pjacobi.de at googlemail.com  Mon Oct 13 08:49:03 2008
From: pjacobi.de at googlemail.com (Peter Jacobi)
Date: Mon, 13 Oct 2008 16:49:03 +0200
Subject: [Twisted-Python] Basic question about the architecture of
	twisted.internet
Message-ID: <2dcdf68e0810130749n1e45b108y5b6cadcdced2a710@mail.gmail.com>

Dear All,


I've just started diving into Twisted, read the docs, run the samples, wrote
some tests, but:

I'm rather clueless about some architectural decisions in Twisted Core, and
perhaps somebody can clarify whether these are just hictorical accidents or
serve a purpose I didn't get yet.

Specifically I don't understand why the Factory classes in internet/protocols.py
rely on class variables instead of instance variables for, most
importantly "protocol",
but also for "noisy" and "numPorts"?

Won't this introduce an unwanted coupling between different instances
of Factory,
and effectively make the creation of more than instance of any Factory-derived
class pointless (or even incorrect). Sort of a singleton pattern relying on the
trust principle?


Regards,
Peter



From exarkun at divmod.com  Mon Oct 13 08:53:27 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 13 Oct 2008 10:53:27 -0400
Subject: [Twisted-Python] Basic question about the architecture of
	twisted.internet
In-Reply-To: <2dcdf68e0810130749n1e45b108y5b6cadcdced2a710@mail.gmail.com>
Message-ID: <20081013145327.29191.2067519399.divmod.quotient.38100@ohm>

On Mon, 13 Oct 2008 16:49:03 +0200, Peter Jacobi <pjacobi.de at googlemail.com> wrote:
>Dear All,
>
>
>I've just started diving into Twisted, read the docs, run the samples, wrote
>some tests, but:
>
>I'm rather clueless about some architectural decisions in Twisted Core, and
>perhaps somebody can clarify whether these are just hictorical accidents or
>serve a purpose I didn't get yet.
>
>Specifically I don't understand why the Factory classes in internet/protocols.py
>rely on class variables instead of instance variables for, most
>importantly "protocol",
>but also for "noisy" and "numPorts"?
>
>Won't this introduce an unwanted coupling between different instances
>of Factory,
>and effectively make the creation of more than instance of any Factory-derived
>class pointless (or even incorrect). Sort of a singleton pattern relying on the
>trust principle?
>

Factories don't "rely" on class *attributes*.  Attribute lookup on instances
in Python first checks the instance dictionary then the class dictionary.  If
an attribute is found on the instance, then the class is ignored.  So when
you are setting attributes such as `noisy´ or `protocol´, if you want the
change to only modify the behavior of one instance, then set the attribute
on an instance, not on the class.

Jean-Paul



From exarkun at divmod.com  Mon Oct 13 10:22:43 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 13 Oct 2008 12:22:43 -0400
Subject: [Twisted-Python] what to do!
In-Reply-To: <d13e157d0810112204i45699c56td4b3f19c61053613@mail.gmail.com>
Message-ID: <20081013162243.29191.567174986.divmod.quotient.38134@ohm>

On Sun, 12 Oct 2008 10:34:17 +0530, shweta mani <shweta3230 at gmail.com> wrote:
>i need to execute a shell script file through SSH twisted or paramiko. if it
>is a normal file then directly with the command  sh <filename>.sh it is
>getting executed.            self.conn.sendRequest(self, 'exec',
>common.NS(sh test1.sh), wantReply = 1)
>but if a shell scripts asks for user input, this particular way does not
>wait for user input. it just print the echo part .
>is there any way so that interactive type of scripts can be executed in
>Paramiko or Twisted Conch in a windows machine (remote login in a unix
>machine through Paramiko SSH or Twisted)
>i did try with another way in Paramiko which helps in opening a remote
>window by creating an instance of SSHClient and invoking the method
>invoke_shell(with some parametes) but remote shell window is not opening.the
>method specifies starts a terminal shell window in SSH server.
>To my interpretation it is somewaht opening a terminal window like putty.
>

I'm not sure anyone can understand your question.  I know that I can't.
You might want to try clarifying it, perhaps by sharing a minimal example
of how you've attempted to solve the problem along with a good description
of how that example's behavior differs from the behavior you are trying to
implement.  Also, please don't send me mail off-list, especially copies of
messages you've already sent to the list.

Jean-Paul



From george at ringdevelopment.com  Mon Oct 13 13:00:30 2008
From: george at ringdevelopment.com (George Pauly)
Date: Mon, 13 Oct 2008 15:00:30 -0400
Subject: [Twisted-Python] what to do!
In-Reply-To: <d13e157d0810112204i45699c56td4b3f19c61053613@mail.gmail.com>
References: <d13e157d0810112204i45699c56td4b3f19c61053613@mail.gmail.com>
Message-ID: <1223924430.6887.47.camel@localhost.localdomain>

Shweta,

Might VNC not meet your needs?

We know so little about your situation that any suggestion amounts to
shooting in the dark.

-George

On Sun, 2008-10-12 at 10:34 +0530, shweta mani wrote:
> i need to execute a shell script file through SSH twisted or paramiko.
> if it is a normal file then directly with the command  sh
> <filename>.sh it is getting executed.
> self.conn.sendRequest(self, 'exec', common.NS(sh test1.sh), wantReply
> = 1)
> but if a shell scripts asks for user input, this particular way does
> not wait for user input. it just print the echo part .
> is there any way so that interactive type of scripts can be executed
> in Paramiko or Twisted Conch in a windows machine (remote login in a
> unix machine through Paramiko SSH or Twisted)
> i did try with another way in Paramiko which helps in opening a remote
> window by creating an instance of SSHClient and invoking the method
> invoke_shell(with some parametes) but remote shell window is not
> opening.the method specifies starts a terminal shell window in SSH
> server. 
> To my interpretation it is somewaht opening a terminal window like
> putty.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From pf_moore at yahoo.co.uk  Mon Oct 13 14:12:17 2008
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Mon, 13 Oct 2008 21:12:17 +0100
Subject: [Twisted-Python] Win32 binaries for Python 2.6
Message-ID: <gd0a2i$87n$1@ger.gmane.org>

Does anyone know when Twisted installers for Python 2.6 on Windows are 
likely to be available?

Thanks,
Paul




From glyph at divmod.com  Mon Oct 13 16:49:01 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 13 Oct 2008 22:49:01 -0000
Subject: [Twisted-Python] Win32 binaries for Python 2.6
In-Reply-To: <gd0a2i$87n$1@ger.gmane.org>
References: <gd0a2i$87n$1@ger.gmane.org>
Message-ID: <20081013224901.6400.1491462343.divmod.xquotient.21@weber.divmod.com>


On 08:12 pm, pf_moore at yahoo.co.uk wrote:
>Does anyone know when Twisted installers for Python 2.6 on Windows are 
>likely to be available?

Sometime after a version of Twisted exists which supports Python 2.6. 
Right now, the latest supported version is 2.5.

There are three things that need to happen for a particular Python 
version to be supported:

  * There needs to be a buildbot for that python version.  Right now, the 
only python 2.6 buildbot on 
<http://buildbot.twistedmatrix.com/waterfall> is for ubuntu64; there 
needs to be one for Windows if you want to have an official windows 
installer.

  * The tests actually need to pass under that buildbot, i.e. they need 
to be green.  You can see that this is not the case for our only 2.6 
builder here: 
<http://buildbot.twistedmatrix.com/builders/ubuntu64-python2.6-select/builds/0> 
(although I'm not sure what the deal is with that particular error). 
Luckily, there is probably less work to do for python 2.6 than any other 
Python release in recent memory.

  * We need to do a Twisted release.  Rumour has it that the release 
manager is planning one in the next couple of weeks, but unless a 2.6 
buildbot shows up before then it will not be a supported platform for 
that release.

If you would like to help with some of these, I'm sure we could do a 
little bit of research and provide you with links to specific tickets 
:).



From cayson.z at gmail.com  Mon Oct 13 19:39:21 2008
From: cayson.z at gmail.com (Boern)
Date: Tue, 14 Oct 2008 09:39:21 +0800
Subject: [Twisted-Python] how to make output file include xml declaration in
	nevow web framework?
Message-ID: <be0f6540810131839m36142c9em10e86539ebad6263@mail.gmail.com>

Hi,all:
   I am a newbie for nevow and now I write a wap page ,but the output file
don`t include xml declaration ,eg: <?xml version="1.0" encoding="utf-8"?> .
how to resolve ?   my wap browser need it to  parse the xml context and how
I make output file include xml declaration?

-- 
Boern Parx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081014/cbaeed87/attachment.html>

From matusis at yahoo.com  Mon Oct 13 20:49:01 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Mon, 13 Oct 2008 19:49:01 -0700
Subject: [Twisted-Python] How to make twistd print to stdout
Message-ID: <04eb01c92da7$6dee9370$49cbba50$@com>

I have an application that is start from a command line by a shell script
that has this:

/usr/local/bin/twistd --no_save --reactor=epoll --pidfile=logs/serv.pid
--logfile=logs/serv.log --python=serv.py

serv.py:

application =
twisted.application.service.Application('serv',uid=config.server_uid,gid=con
fig.server_gid)

my_service = service.MyService()
my_service.setServiceParent(application)

.


In MyService class I have:

def startService(self):
	if bad_config_file:
		#I want to print to stdout here end quit immediately??
		twisted.internet.reactor.callLater(0,
twisted.internet.reactor.stop)


I cannot force twistd to print to stdout after that comment line, probably
because it's daemonized by then. 
print 'bad error' writes it to --logfile=logs/serv.log
I tried sys.stdout/stderr.write('bad error') - it's not written anywhere,
not even to the logfile.
sys.exit('bad error') exits, but does not print anywhere either.

How do I make it print to stdout?
		




From wthie at thiengineering.ch  Mon Oct 13 23:16:18 2008
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 14 Oct 2008 07:16:18 +0200
Subject: [Twisted-Python] Win32 binaries for Python 2.6
In-Reply-To: <gd0a2i$87n$1@ger.gmane.org>
References: <gd0a2i$87n$1@ger.gmane.org>
Message-ID: <48F42B22.9090404@thiengineering.ch>

If you're simply interested in using twisted as a package for 
development then create a file with the name twisted.pth with the 
following single line

'C:\proj\twisted'

in your

'C:\Python26\Lib\site-packages' directory

If you plan to use the twistd script then additionally create a file 
with the name twistd.bat with the content

@echo off
C:\Python26\python.exe C:\proj\twisted\bin\twistd %1 %2 %3 %4 %5 %6 %7 %8 %9

in your

'C:\Python26\Scripts'

assuming that the twistd distribution is hanging out at 'C:\proj\twisted'

For additional scripts do accordingly and make sure that the PATH 
variable contains 'C:\Python26\Scripts'

I rarely install packages into my python distributions these days, one 
exception being some basic binary ones like zope interfaces and the 
win32 extensions and doing all my Python development on MSW with Aptana 
Studio/PyDev and distributing code mostly to OpenBSD or FreeBSD

HTH, Werner

Paul Moore wrote:
> Does anyone know when Twisted installers for Python 2.6 on Windows are 
> likely to be available?
> 
> Thanks,
> Paul
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From manuel at vikingosegundo.de  Tue Oct 14 07:13:20 2008
From: manuel at vikingosegundo.de (Manuel Meyer)
Date: Tue, 14 Oct 2008 16:13:20 +0300
Subject: [Twisted-Python] irc server run by twisted and (probably) django
Message-ID: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>

Hi,

I am new to twisted - so I am not very into it yet.

I want to create a IRC Server that reacts a little bit different  
compared to others:
* only registered users will be able to /list channels and /join them.
* /list only returns channels the user registered
* /join is only apply-able on those channels, too
* /join new-channel won't work
* Registering and channel-creation is done not in IRC but in a  
website, probably driven by django.

Any comment on this is welcomed
* where should I start?
* readings?
* examples?
* existing similar projects?

Thanks, Manuel



From exarkun at divmod.com  Tue Oct 14 10:10:37 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Oct 2008 12:10:37 -0400
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
Message-ID: <20081014161037.29191.858172161.divmod.quotient.38494@ohm>

On Tue, 14 Oct 2008 16:13:20 +0300, Manuel Meyer <manuel at vikingosegundo.de> wrote:
>Hi,
>
>I am new to twisted - so I am not very into it yet.
>
>I want to create a IRC Server that reacts a little bit different  compared 
>to others:
>* only registered users will be able to /list channels and /join them.
>* /list only returns channels the user registered
>* /join is only apply-able on those channels, too
>* /join new-channel won't work
>* Registering and channel-creation is done not in IRC but in a  website, 
>probably driven by django.
>
>Any comment on this is welcomed
>* where should I start?
>* readings?
>* examples?
>* existing similar projects?
>

Twisted includes an implementation of the IRC server protocol.  It's fairly
basic, so it probably will only save you from having to find line delimiters
and split up IRC commands into tokens.  Twisted Words includes a user/group
model, but it's not quite the one you described.  It might be useful for you
to take a look at it, but I don't know if any of the code will be re-usable.

The good news is that nothing in the IRC server protocol implementation will
prevent you from implementing the user/group model you described above.

You can find most of the implementation of the existing IRC server here:

http://twistedmatrix.com/trac/browser/trunk/twisted/words/service.py

There's not really any documentation for it aside from the docstrings.  You
can run the server it implements using `twistd words [options]´.

Jean-Paul



From bernat at luffy.cx  Tue Oct 14 10:13:37 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Tue, 14 Oct 2008 18:13:37 +0200
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de> (Manuel
	Meyer's message of "Tue, 14 Oct 2008 16:13:20 +0300")
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
Message-ID: <m3prm3noi6.fsf@neo.luffy.cx>

OoO En ce  début d'après-midi ensoleillé du mardi  14 octobre 2008, vers
15:13, Manuel Meyer <manuel at vikingosegundo.de> disait :

> I want to create a IRC Server that reacts a little bit different
> compared to others:
> * only registered users will be able to /list channels and /join them.
> * /list only returns channels the user registered
> * /join is only apply-able on those channels, too
> * /join new-channel won't work
> * Registering and channel-creation is done not in IRC but in a
> website, probably driven by django.

Using  Twisted  Web  or  Nevow  will allow  to  tightly  integrate  your
application  and the  web  server. The  "event  loop" of  Django is  not
compatible with Twisted reactor. You  will need some extra stuff to make
your Django application communicate with  your IRC server. One way would
be to just use the database.
-- 
I WILL NOT TEACH OTHERS TO FLY
I WILL NOT TEACH OTHERS TO FLY
I WILL NOT TEACH OTHERS TO FLY
-+- Bart Simpson on chalkboard in episode 9F05



From drew.smathers at gmail.com  Tue Oct 14 11:18:50 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 14 Oct 2008 13:18:50 -0400
Subject: [Twisted-Python] How to make twistd print to stdout
In-Reply-To: <04eb01c92da7$6dee9370$49cbba50$@com>
References: <04eb01c92da7$6dee9370$49cbba50$@com>
Message-ID: <368574aa0810141018n48f567d0t62941fe81acbea1c@mail.gmail.com>

On Mon, Oct 13, 2008 at 10:49 PM, Alec Matusis <matusis at yahoo.com> wrote:
> I have an application that is start from a command line by a shell script
> that has this:
>
> /usr/local/bin/twistd --no_save --reactor=epoll --pidfile=logs/serv.pid
> --logfile=logs/serv.log --python=serv.py
>
> serv.py:
>
> application =
> twisted.application.service.Application('serv',uid=config.server_uid,gid=con
> fig.server_gid)
>
> my_service = service.MyService()
> my_service.setServiceParent(application)
>
> .
>
>
> In MyService class I have:
>
> def startService(self):
>        if bad_config_file:
>                #I want to print to stdout here end quit immediately??
>                twisted.internet.reactor.callLater(0,
> twisted.internet.reactor.stop)
>
>
> I cannot force twistd to print to stdout after that comment line, probably
> because it's daemonized by then.
> print 'bad error' writes it to --logfile=logs/serv.log
> I tried sys.stdout/stderr.write('bad error') - it's not written anywhere,
> not even to the logfile.
> sys.exit('bad error') exits, but does not print anywhere either.
>
> How do I make it print to stdout?
>
>

You want to print to stdout before you become a daemon - in
makeService(), rather than startService(), for example.  A unix daemon
should attach stdin, stdout, stderr to /dev/null.



From pf_moore at yahoo.co.uk  Tue Oct 14 12:58:49 2008
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Tue, 14 Oct 2008 19:58:49 +0100
Subject: [Twisted-Python] Re: Win32 binaries for Python 2.6
In-Reply-To: <20081013224901.6400.1491462343.divmod.xquotient.21@weber.divmod.com>
References: <gd0a2i$87n$1@ger.gmane.org>
	<20081013224901.6400.1491462343.divmod.xquotient.21@weber.divmod.com>
Message-ID: <gd2q4o$2ch$1@ger.gmane.org>

glyph at divmod.com wrote:
> On 08:12 pm, pf_moore at yahoo.co.uk wrote:
>> Does anyone know when Twisted installers for Python 2.6 on Windows are 
>> likely to be available?
> 
> Sometime after a version of Twisted exists which supports Python 2.6. 
> Right now, the latest supported version is 2.5.

Thanks. In many cases, projects "just work" with 2.6, so it's just a 
matter of someone finding time to build the binaries (or me doing it 
myself, if there are no hairy external dependencies, and it builds with 
mingw :-)) Knowing that there are actual issues to resolve, gives me a 
better idea of what to expect.

> If you would like to help with some of these, I'm sure we could do a 
> little bit of research and provide you with links to specific tickets :).

:-) I'm not sure how much help I could be - I wouldn't class myself as a 
heavy Twisted user, and I certainly don't know much about the internals. 
But if I do get a chance, I'll see if there's anything I can look at.

Paul.




From exarkun at divmod.com  Tue Oct 14 13:17:17 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Oct 2008 15:17:17 -0400
Subject: [Twisted-Python] Re: Win32 binaries for Python 2.6
In-Reply-To: <gd2q4o$2ch$1@ger.gmane.org>
Message-ID: <20081014191717.29191.508121037.divmod.quotient.38557@ohm>

On Tue, 14 Oct 2008 19:58:49 +0100, Paul Moore <pf_moore at yahoo.co.uk> wrote:
>glyph at divmod.com wrote:
>>On 08:12 pm, pf_moore at yahoo.co.uk wrote:
>>>Does anyone know when Twisted installers for Python 2.6 on Windows are 
>>>likely to be available?
>>
>>Sometime after a version of Twisted exists which supports Python 2.6. Right 
>>now, the latest supported version is 2.5.
>
>Thanks. In many cases, projects "just work" with 2.6, so it's just a matter 
>of someone finding time to build the binaries (or me doing it myself, if 
>there are no hairy external dependencies, and it builds with mingw :-)) 
>Knowing that there are actual issues to resolve, gives me a better idea of 
>what to expect.
>>If you would like to help with some of these, I'm sure we could do a little 
>>bit of research and provide you with links to specific tickets :).
>
>:-) I'm not sure how much help I could be - I wouldn't class myself as a 
>heavy Twisted user, and I certainly don't know much about the internals. But 
>if I do get a chance, I'll see if there's anything I can look at.
>

The only ticket for a Python 2.6 issue remaining in trunk at HEAD is
<http://twistedmatrix.com/trac/ticket/2605>, I believe, although there
are several other tickets in the Python 2.6 milestone which would be
nice to have, but perhaps are not necessary for a Python 2.6-supporting
release: http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&milestone=Python-2.6

Jean-Paul



From matusis at yahoo.com  Tue Oct 14 16:10:23 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Tue, 14 Oct 2008 15:10:23 -0700
Subject: [Twisted-Python] How to make twistd print to stdout
In-Reply-To: <368574aa0810141018n48f567d0t62941fe81acbea1c@mail.gmail.com>
References: <04eb01c92da7$6dee9370$49cbba50$@com>
	<368574aa0810141018n48f567d0t62941fe81acbea1c@mail.gmail.com>
Message-ID: <02c801c92e49$ad3ee3c0$07bcab40$@com>

> You want to print to stdout before you become a daemon - in
> makeService(), rather than startService(), for example.  A unix daemon
> should attach stdin, stdout, stderr to /dev/null.

I am not sure still how to do it:
When I run 

twistd --python=serv.py --logfile=serv.log

anything that I put in serv.py is executed after the process has already been daemonized: even if I print or sys.stdout on the first line in serv.py file, the output never goes into stdout.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Drew Smathers
> Sent: Tuesday, October 14, 2008 10:19 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] How to make twistd print to stdout
> 
> On Mon, Oct 13, 2008 at 10:49 PM, Alec Matusis <matusis at yahoo.com>
> wrote:
> > I have an application that is start from a command line by a shell
> script
> > that has this:
> >
> > /usr/local/bin/twistd --no_save --reactor=epoll --
> pidfile=logs/serv.pid
> > --logfile=logs/serv.log --python=serv.py
> >
> > serv.py:
> >
> > application =
> >
> twisted.application.service.Application('serv',uid=config.server_uid,gi
> d=con
> > fig.server_gid)
> >
> > my_service = service.MyService()
> > my_service.setServiceParent(application)
> >
> > .
> >
> >
> > In MyService class I have:
> >
> > def startService(self):
> >        if bad_config_file:
> >                #I want to print to stdout here end quit immediately??
> >                twisted.internet.reactor.callLater(0,
> > twisted.internet.reactor.stop)
> >
> >
> > I cannot force twistd to print to stdout after that comment line,
> probably
> > because it's daemonized by then.
> > print 'bad error' writes it to --logfile=logs/serv.log
> > I tried sys.stdout/stderr.write('bad error') - it's not written
> anywhere,
> > not even to the logfile.
> > sys.exit('bad error') exits, but does not print anywhere either.
> >
> > How do I make it print to stdout?
> >
> >
> 
> You want to print to stdout before you become a daemon - in
> makeService(), rather than startService(), for example.  A unix daemon
> should attach stdin, stdout, stderr to /dev/null.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From krokodil at gmail.com  Tue Oct 14 19:14:47 2008
From: krokodil at gmail.com (Vadim Zaliva)
Date: Tue, 14 Oct 2008 18:14:47 -0700
Subject: [Twisted-Python] mystery exception
Message-ID: <3d7addec0810141814l7f8446e5n784a81d80168088e@mail.gmail.com>

I am writing network proxy, based on proxy.py code. I am also using
getPage() and deffered. From time to time I am getting this mystery
exception, the source of which I could not track. Does anybody knows
what could be causing it? I am pretty sure I am not closing any sokets
twice in my code. The code writing 'x' seems weird to me.


      Traceback (most recent call last):
         File "/usr/lib64/python2.5/threading.py", line 460, in __bootstrap
           self.run()
         File "/usr/lib64/python2.5/threading.py", line 440, in run
           self.__target(*self.__args, **self.__kwargs)
       --- <exception caught here> ---
         File "/usr/lib/python2.5/site-packages/twisted/python/threadpool.py",
 line 161, in _worker
           context.call(ctx, function, *args, **kwargs)
         File "/usr/lib/python2.5/site-packages/twisted/python/context.py", li
ne 59, in callWithContext
           return self.currentContext().callWithContext(ctx, func, *args, **kw
)
         File "/usr/lib/python2.5/site-packages/twisted/python/context.py", li
ne 37, in callWithContext
           return func(*args,**kw)
         File "/usr/lib/python2.5/site-packages/twisted/internet/threads.py",
line 29, in _putResultInDeferred
           reactor.callFromThread(deferred.callback, result)
         File "/usr/lib/python2.5/site-packages/twisted/internet/base.py",
line 824, in callFromThread
           self.wakeUp()
         File "/usr/lib/python2.5/site-packages/twisted/internet/base.py",
line 443, in wakeUp
           self.waker.wakeUp()
         File "/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py",
line 138, in wakeUp
           util.untilConcludes(os.write, self.o, 'x')
         File "/usr/lib/python2.5/site-packages/twisted/python/util.py",
line 757, in untilConcludes
           return f(*a, **kw)
       exceptions.OSError: [Errno 32] Broken pipe

My OS is:

Linux xxxx 2.6.23.1-42.fc8 #1 SMP Tue Oct 30 13:18:33 EDT 2007 x86_64
x86_64 x86_64 GNU/Linux

and I am using latest version of Twisted.

Sincerely,
Vadim



From exarkun at divmod.com  Tue Oct 14 20:15:08 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Oct 2008 22:15:08 -0400
Subject: [Twisted-Python] mystery exception
In-Reply-To: <3d7addec0810141814l7f8446e5n784a81d80168088e@mail.gmail.com>
Message-ID: <20081015021508.29191.848160231.divmod.quotient.38693@ohm>

On Tue, 14 Oct 2008 18:14:47 -0700, Vadim Zaliva <krokodil at gmail.com> wrote:
>I am writing network proxy, based on proxy.py code. I am also using
>getPage() and deffered. From time to time I am getting this mystery
>exception, the source of which I could not track. Does anybody knows
>what could be causing it? I am pretty sure I am not closing any sokets
>twice in my code. The code writing 'x' seems weird to me.
>

Something in your program broke the reactor.  Or you found a bug in the
reactor which causes it to break itself.  It doesn't seem likely anyone
will be able to figure out which or how without seeing your actually
source, though.  If you can provide a minimal example of this, and it's
a bug in Twisted, we should be able to fix it.  This is a pretty central
piece of functionality, though, and it gets exercised all the time, so
chances are good that there's something in your program that's causing it.

The specific problem is that a pipe file descriptor, internal to the
reactor, has been closed.  The reactor is not expecting this to happen,
and it shouldn't, since it never closes it.

Jean-Paul



From krokodil at gmail.com  Tue Oct 14 21:31:04 2008
From: krokodil at gmail.com (Vadim Zaliva)
Date: Tue, 14 Oct 2008 20:31:04 -0700
Subject: [Twisted-Python] mystery exception
In-Reply-To: <20081015021508.29191.848160231.divmod.quotient.38693@ohm>
References: <20081015021508.29191.848160231.divmod.quotient.38693@ohm>
Message-ID: <4EC51052-45FD-4C2F-8D1C-D32EEC75CD20@gmail.com>


On Oct 14, 2008, at 19:15, Jean-Paul Calderone wrote:

> The specific problem is that a pipe file descriptor, internal to the
> reactor, has been closed.  The reactor is not expecting this to  
> happen,
> and it shouldn't, since it never closes it.

Could it be related to permissions? I am demonizing my program
standard way, closing all open descriptors, chdir(/), etc.
Where the FIFO is created normally?

Sincerely,
Vadim



From krokodil at gmail.com  Tue Oct 14 21:40:56 2008
From: krokodil at gmail.com (Vadim Zaliva)
Date: Tue, 14 Oct 2008 20:40:56 -0700
Subject: [Twisted-Python] mystery exception
In-Reply-To: <4EC51052-45FD-4C2F-8D1C-D32EEC75CD20@gmail.com>
References: <20081015021508.29191.848160231.divmod.quotient.38693@ohm>
	<4EC51052-45FD-4C2F-8D1C-D32EEC75CD20@gmail.com>
Message-ID: <42DAA120-95DD-4986-93ED-F4C7CE335FE5@gmail.com>


On Oct 14, 2008, at 20:31, Vadim Zaliva wrote:

>> The specific problem is that a pipe file descriptor, internal to the
>> reactor, has been closed.  The reactor is not expecting this to  
>> happen,
>> and it shouldn't, since it never closes it.
>
> Could it be related to permissions? I am demonizing my program
> standard way, closing all open descriptors, chdir(/), etc.
> Where the FIFO is created normally?

This is the daemonisation code I am using:

http://pastebin.com/mf54c5cd

It seems that it is causing the problem.

Vadim



From bernat at luffy.cx  Tue Oct 14 21:53:22 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Wed, 15 Oct 2008 05:53:22 +0200
Subject: [Twisted-Python] How to make twistd print to stdout
In-Reply-To: <02c801c92e49$ad3ee3c0$07bcab40$@com> (Alec Matusis's message of
	"Tue, 14 Oct 2008 15:10:23 -0700")
References: <04eb01c92da7$6dee9370$49cbba50$@com>
	<368574aa0810141018n48f567d0t62941fe81acbea1c@mail.gmail.com>
	<02c801c92e49$ad3ee3c0$07bcab40$@com>
Message-ID: <m3d4i2o6od.fsf@neo.luffy.cx>

OoO  En cette nuit  nuageuse du  mercredi 15  octobre 2008,  vers 00:10,
"Alec Matusis" <matusis at yahoo.com> disait :

> I am not sure still how to do it:
> When I run 

> twistd --python=serv.py --logfile=serv.log

> anything  that I  put in  serv.py is  executed after  the  process has
> already been  daemonized: even if I  print or sys.stdout  on the first
> line in serv.py file, the output never goes into stdout.

You need to save sys.stdout in  serv.py and use this saved value. I have
not tested it, but maybe you need to get the file descriptor instead and
reopen it (fd=sys.stdout.fileno() and os.fdopen(fd, 'w')).
-- 
Make sure input cannot violate the limits of the program.
            - The Elements of Programming Style (Kernighan & Plauger)



From glyph at divmod.com  Wed Oct 15 00:29:00 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 15 Oct 2008 06:29:00 -0000
Subject: [Twisted-Python] mystery exception
In-Reply-To: <42DAA120-95DD-4986-93ED-F4C7CE335FE5@gmail.com>
References: <20081015021508.29191.848160231.divmod.quotient.38693@ohm>
	<4EC51052-45FD-4C2F-8D1C-D32EEC75CD20@gmail.com>
	<42DAA120-95DD-4986-93ED-F4C7CE335FE5@gmail.com>
Message-ID: <20081015062900.6400.556740215.divmod.xquotient.41@weber.divmod.com>


On 03:40 am, krokodil at gmail.com wrote:
>
>On Oct 14, 2008, at 20:31, Vadim Zaliva wrote:
>>>The specific problem is that a pipe file descriptor, internal to the
>>>reactor, has been closed.  The reactor is not expecting this to 
>>>happen,
>>>and it shouldn't, since it never closes it.
>>
>>Could it be related to permissions? I am demonizing my program
>>standard way, closing all open descriptors, chdir(/), etc.
>>Where the FIFO is created normally?
>
>This is the daemonisation code I am using:
>
>http://pastebin.com/mf54c5cd
>
>It seems that it is causing the problem.

The "twistd" tool included with Twisted has many features, including 
daemonization.  You shouldn't need to use something like this to get a 
twisted daemon running.



From terry at jon.es  Wed Oct 15 22:48:15 2008
From: terry at jon.es (Terry Jones)
Date: Thu, 16 Oct 2008 06:48:15 +0200
Subject: [Twisted-Python] A deferred class that keeps and can log its
	call/errback history
Message-ID: <18678.51087.888440.54544@jon.es>

A few days ago I thought it might be nice to augment the Deferred class to
allow you to look at the callback/errback chain to see what's going on.

Tonight I went to do it. I was nearly done in about 15 minutes, and then it
took another 4 hours to finish....  :-)

It's still a bit rough, but it seems to work.

The code comes with a history logging function that you can insert into a
callback chain. When it's run, it prints the history of the chain,
including also printing the history of any deferreds that were returned
along the way, and then prints the call/errback functions yet to be called.
You get to see the initial result passed to the first call/errback, and the
results along the way.

Output is still grungy. Here's what you get from the attached test code:

        History for deferred <TDeferred at 0xbf1e60  current result: 45>
        Initial result = True
        --- ALREADY FIRED ---
        CALLBACK:
          func   <history>
          result = True
        ERRBACK: <same as CALLBACK>
        CALLBACK:
          func   = <function d at 0xbf46e0>
          args   = '()'
          kwargs = '{}'
          result = <TDeferred at 0xbf6290  current result: 45>
        ERRBACK:
          func   <pass>

                History for deferred <TDeferred at 0xbf6290  current result: 45>
                Initial result = 33
                --- ALREADY FIRED ---
                CALLBACK:
                  func   = <function d2 at 0xbf4758>
                  args   = '()'
                  kwargs = '{}'
                  result = 45
                ERRBACK:
                  func   <pass>
        --- STILL TO BE FIRED ---
        CALLBACK:
          func   = <function ok at 0xbf41b8>
          args   = "('hello',)"
          kwargs = "{'color': 'black'}"
        ERRBACK:
          func   <pass>
        CALLBACK:
          func   <pass>
        ERRBACK:
          func   = <function nok at 0xbf47d0>
          args   = '()'
          kwargs = '{}'
        CALLBACK:
          func   = <function ok2 at 0xbf4668>
          args   = '()'
          kwargs = '{}'
        ERRBACK:
          func   <pass>
        CALLBACK:
          func   <history>
        ERRBACK: <same as CALLBACK>
        CALLBACK:
          func   = <function stop at 0xbf4848>
          args   = '()'
          kwargs = '{}'
        ERRBACK: <same as CALLBACK>

If you examine this you'll see that I'm using <pass> and <history> to
indicate uninteresting call/errbacks (these correspond to the
defer.passthru and the history function itself).  When the errback is the
same as the callback (due to d.addBoth), that's indicated.

If you look at the attached code you'll see I also do a bit of hiding of
housekeeping callbacks: the _continue and my own (perhaps unnecessary)
_historyPop. Those are things the caller isn't aware of, and they're just
clutter, so I don't print them.

I made the logDeferredHistory function be standalone (not a class method)
to make it easier to log any deferred (not just the current instance) and
also because it's then simpler to identify when the callback is the history
function itself (to be able to print that concisely).

You use the logging callback pretty much like any other. E.g.:

    if __name__ == '__main__':
        log.startLogging(sys.stdout)
        x = funcReturningADeferred()
        x.addCallback(d)
        x.addBoth(logDeferredHistory, x)
        x.addCallback(ok, 'hello', color='black')
        x.addBoth(logDeferredHistory, x)

Right now it logs the history. But you could pass it a file descriptor
or something else, like a list.

It would be nice to be able to make this a trivial drop-in replacement for
normal Deferreds for when you're debugging. In that case logDeferredHistory
could test to see if its deferred arg is an instance of a history deferred
and if not just act as a passthrough. Then people might be able to do
something like this when debugging:

    from twisted..... import historyDeffered as defer

and otherwise not alter their code.  Or we could add an optional argument
to Deferred.__init__ indicating that the deferred should maintain its
history. It doesn't involve much extra work - mainly just pushing things
onto a list during _runCallbacks.

Terry


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tdefer.py
URL: </pipermail/twisted-python/attachments/20081016/328d318d/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tdefer_test.py
URL: </pipermail/twisted-python/attachments/20081016/328d318d/attachment-0001.ksh>

From chris at sidwells.com  Thu Oct 16 01:12:24 2008
From: chris at sidwells.com (Chris Dew)
Date: Thu, 16 Oct 2008 08:12:24 +0100
Subject: [Twisted-Python] Status of twisted-pair and python-eunuchs.
Message-ID: <e6a690760810160012k7677e25ay858993f8b423b2b0@mail.gmail.com>

I'm trying some network programming using tun interfaces to tunnel WAN
traffic through user-space programmes at each end, which will perform
compression and other magic on tcp streams.  The userspace programmes then
communicate across the WAN, using less bandwidth than the uncompressed data
would have.

Looking at the documentation for twisted-pair and python-eunuchs it looks as
if they haven't been maintained for years - eunuchs last changed about 5-6
years ago.

Is it going to make my life easier to mock things up in Twisted, to get
things algorithmically correct, before porting partly/entirely to C for
performance (if necessary)?  (I'm looking at supporting >10Mbit/s on Core2
processors, with >100 simultaneous connections.)

If Twisted would cause me to spend a large amount of time wrestling with
Twisted-pair/Eunuchs problems, I'm probably better of starting with C.  (I'm
familiar with both Twisted and C, but not the tun interface, nor the
innerworkings of the tcp protocol yet - I was hoping that the source of
twisted-pair might help educate me.)

Has anyone used these packages recently (2.6 kernel)?

Thanks,

Chris.

P.S. Can anyone recommend any good articles on using the tun interface and
interpreting/processing tcp packets?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081016/2968c50b/attachment.html>

From cmsdew at googlemail.com  Thu Oct 16 06:40:10 2008
From: cmsdew at googlemail.com (Chris Dew)
Date: Thu, 16 Oct 2008 13:40:10 +0100
Subject: [Twisted-Python] Status of twisted-pair and python-eunuchs.
In-Reply-To: <e6a690760810160012k7677e25ay858993f8b423b2b0@mail.gmail.com>
References: <e6a690760810160012k7677e25ay858993f8b423b2b0@mail.gmail.com>
Message-ID: <e6a690760810160540y6e551ae4rb4d209c48bc14cc0@mail.gmail.com>

I'm trying some network programming using tun interfaces to tunnel WAN
traffic through user-space programmes at each end, which will perform
compression and other magic on tcp streams.  The userspace programmes then
communicate across the WAN, using less bandwidth than the uncompressed data
would have.

Looking at the documentation for twisted-pair and python-eunuchs it looks as
if they haven't been maintained for years - eunuchs last changed about 5-6
years ago.

Is it going to make my life easier to mock things up in Twisted, to get
things algorithmically correct, before porting partly/entirely to C for
performance (if necessary)?  (I'm looking at supporting >10Mbit/s on Core2
processors, with >100 simultaneous connections.)

If Twisted would cause me to spend a large amount of time wrestling with
Twisted-pair/Eunuchs problems, I'm probably better of starting with C.  (I'm
familiar with both Twisted and C, but not the tun interface, nor the
innerworkings of the tcp protocol yet - I was hoping that the source of
twisted-pair might help educate me.)

Has anyone used these packages recently (2.6 kernel)?

Thanks,

Chris.

P.S. Can anyone recommend any good articles on using the tun interface and
interpreting/processing tcp packets?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081016/ec00b6d6/attachment.html>

From davyzhang at gmail.com  Thu Oct 16 07:21:35 2008
From: davyzhang at gmail.com (davy zhang)
Date: Thu, 16 Oct 2008 21:21:35 +0800
Subject: [Twisted-Python] problem with Twisted and Processing
Message-ID: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>

I used Processing package for python 2.5 which became an official
package of python 2.6 named multipleprocess. 'Cause the twisted for
python 2.6 is not ready, I'm still using python 2.5 on windows
Here's the problem the code below is pretty simple and works fine
until I tried to get access of the first element in the list, I can
even print the whole list, but i just can not get the elements inside.
I guess there's something get conflicted in these two packages, anyone
knows why?

To reproduce the error, run the code below with twisted and processing
package and python 2.5, open a telnet client to open the localhost
9999,send the message ,hit carriage return.

thanks a lot for any hints


from twisted.protocols import basic
from twisted.internet import reactor
import time

from processing import Process,Manager

def sender(list):
    while 1:
        if len(list) > 0:
            print list[0]
        time.sleep(1)



class MyChat(basic.LineReceiver):
    def connectionMade(self):
        print "Got new client!"
        self.factory.clients.append(self)

    def connectionLost(self, reason):
        print "Lost a client!"
        self.factory.clients.remove(self)

    def lineReceived(self, line):
        print "received", repr(line)
        for c in self.factory.clients:
            c.message(line)
        d = {'client':self,'msg':line}
        msgList.append(d)

    def message(self, message):
        self.transport.write(message + '\n')


from twisted.internet import protocol
from twisted.application import service, internet

if __name__  == '__main__':
    factory = protocol.ServerFactory()
    factory.protocol = MyChat
    factory.clients = []
    reactor.listenTCP(9999,factory)

    manager = Manager()
    msgList = manager.list()

    p = Process(target=sender,args=(msgList,))
    p.start()
    reactor.run()



From dripton at ripton.net  Thu Oct 16 11:09:33 2008
From: dripton at ripton.net (David Ripton)
Date: Thu, 16 Oct 2008 10:09:33 -0700
Subject: [Twisted-Python] problem with Twisted and Processing
In-Reply-To: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
References: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
Message-ID: <20081016170933.GA1053@vidar.dreamhost.com>

On 2008.10.16 21:21:35 +0800, davy zhang wrote:
> I used Processing package for python 2.5 which became an official
> package of python 2.6 named multipleprocess. 

multiprocessing

> Here's the problem the code below is pretty simple and works fine
> until I tried to get access of the first element in the list, I can
> even print the whole list, but i just can not get the elements inside.
> I guess there's something get conflicted in these two packages, anyone
> knows why?

This is not a Twisted problem.  You're just using Processing wrong.

You're trying to shove a MyChat instance inside your Manager list.  But
Manager only supports a few types by default.  So you either need a
BaseManager subclass with a handler for MyChat, or you need to convert
your MyChat objects to a supported type (for example, by calling str()
on them) before passing them across shared memory.

-- 
David Ripton    dripton at ripton.net



From p.mayers at imperial.ac.uk  Thu Oct 16 11:19:58 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 16 Oct 2008 18:19:58 +0100
Subject: [Twisted-Python] problem with Twisted and Processing
In-Reply-To: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
References: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
Message-ID: <48F777BE.6030007@imperial.ac.uk>

davy zhang wrote:
> I used Processing package for python 2.5 which became an official
> package of python 2.6 named multipleprocess. 'Cause the twisted for
> python 2.6 is not ready, I'm still using python 2.5 on windows

AFAICT the "processing" module does things like "fork"ing a running 
python interpreter and then not immediately exec()ing.

I'm pretty sure that'll cause Twisted (and maybe lots of other apps) to 
explode. However I note you're on Windows (which lacks fork()) so I'm 
not sure what it does there.

Also, the Processing module communicates over pipes/fifos which will 
conflict with Twisted and block the reactor (or the reactor will block 
Processing).

In short - nice though it looks, I don't think you can use Processing 
with Twisted, or will ever be able to. It's a shame more attention 
wasn't paid to this during development.

You could look at:

  http://pypi.python.org/pypi/ampoule
  http://foss.eepatents.com/trac/AsynQueue

Having either of these implementations inside Twisted would be excellent 
IMHO.



From nimag at rogers.com  Thu Oct 16 11:47:59 2008
From: nimag at rogers.com (Nima Ghanavatian)
Date: Thu, 16 Oct 2008 10:47:59 -0700 (PDT)
Subject: [Twisted-Python] waiting for results from tcp
Message-ID: <178342.57812.qm@web88101.mail.re2.yahoo.com>

Hi,

I have a server which can handle multiple connections.  At any given time, I want to send out a ping to see who is still listening to this server.

For this I scan through my list of ip's and send out a msg with

     factory = ClientFactory()
     factory.protocol = caller
     factory.message = self.message
     factory.alive = 0
     reactor.connectTCP(self.ip, self.port, factory)

and wait on the response.  This is done from within an application daemon, so no reactor.run() is required.  

How can I send a message out and wait for the response before proceeding?  I tried using deferreds a bunch of different ways but I can't seem to get it going.  
Oh and I should clarify I want the response to be in the original stream, not in the thread created by connectTCP/dataReceived/etc...

thanks,

Nima
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081016/d3430820/attachment.html>

From exarkun at divmod.com  Thu Oct 16 12:02:01 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 16 Oct 2008 14:02:01 -0400
Subject: [Twisted-Python] waiting for results from tcp
In-Reply-To: <178342.57812.qm@web88101.mail.re2.yahoo.com>
Message-ID: <20081016180201.29191.218462226.divmod.quotient.39213@ohm>

On Thu, 16 Oct 2008 10:47:59 -0700 (PDT), Nima Ghanavatian <nimag at rogers.com> wrote:
>Hi,
>
>I have a server which can handle multiple connections.  At any given time, I want to send out a ping to see who is still listening to this server.
>
>For this I scan through my list of ip's and send out a msg with
>
>     factory = ClientFactory()
>     factory.protocol = caller
>     factory.message = self.message
>     factory.alive = 0
>     reactor.connectTCP(self.ip, self.port, factory)
>
>and wait on the response.  This is done from within an application daemon, so no reactor.run() is required.

I'm not sure I understand.  You have a server, but you're making outgoing
connects from it to other servers.  This will tell you what other servers
are still listening.  Is that what "to see who is still listening to this
server" means?

>
>How can I send a message out and wait for the response before proceeding?  I tried using deferreds a bunch of different ways but I can't seem to get it going.
>Oh and I should clarify I want the response to be in the original stream, not in the thread created by connectTCP/dataReceived/etc...
>

There are only two or three APIs in Twisted which will run your code in a
thread other than the reactor thread.  None of the connection setup APIs
or the network event APIs do this.  However, I'm confused by your comparison
of "the original stream" to "the thread created ...".  These aren't really
comparable things.

When you set up a TCP connection with reactor.connectTCP, data received
via the resulting connection is passed to the dataReceived method of the
protocol instance returned by the factory's buildProtocol method.  If you
want the data, that's how you get it: implement dataReceived to handle it
in the manner you wish.  For example, you could create a Deferred which
fires with all the data received over a single connection after that
connection closes:

    from twisted.internet.protocol import Protocol, ClientFactory
    from twisted.internet.defer import Deferred
    from twisted.python.log import err

    class GatherOutput(Protocol):
        def connectionMade(self):
            self.output = []
        def dataReceived(self, data):
            self.output.append(data)
        def connectionLost(self, reason):
            self.factory.dataDeferred.callback(self.output)

    f = ClientFactory()
    f.dataDeferred = Deferred()
    f.protocol = GatherOutput
    reactor.connectTCP(host, port, f)
    def gotData(data):
        print 'Got data', data
    f.dataDeferred.addCallback(gotData)
    f.dataDeferred.addErrback(err)
    reactor.run()

Deferreds are the most common way for dealing with potentially long-running
(or long-waiting) operations in Twisted.

Jean-Paul



From manuel at vikingosegundo.de  Thu Oct 16 14:26:48 2008
From: manuel at vikingosegundo.de (Manuel Meyer)
Date: Thu, 16 Oct 2008 23:26:48 +0300
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <m3prm3noi6.fsf@neo.luffy.cx>
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
	<m3prm3noi6.fsf@neo.luffy.cx>
Message-ID: <59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>

I expected that. But I am already using django in several projects and  
heard yesterday the first time of nevow and t-web.
I thought of writing a standalone IRCServer and connect to the db of  
django - actually I have this part already working. and with the  
manager of django
But I don't know how to inform IRCServer about changes in the site/db.  
Maybe by adding another network protocol to the twisted application,  
where django's signals could leave a note?

Manuel
Am 14.10.2008 um 19:13 schrieb Vincent Bernat:

> OoO En ce  début d'après-midi ensoleillé du mardi  14 octobre 2008,  
> vers
> 15:13, Manuel Meyer <manuel at vikingosegundo.de> disait :
>
>> I want to create a IRC Server that reacts a little bit different
>> compared to others:
>> * only registered users will be able to /list channels and /join  
>> them.
>> * /list only returns channels the user registered
>> * /join is only apply-able on those channels, too
>> * /join new-channel won't work
>> * Registering and channel-creation is done not in IRC but in a
>> website, probably driven by django.
>
> Using  Twisted  Web  or  Nevow  will allow  to  tightly  integrate   
> your
> application  and the  web  server. The  "event  loop" of  Django is   
> not
> compatible with Twisted reactor. You  will need some extra stuff to  
> make
> your Django application communicate with  your IRC server. One way  
> would
> be to just use the database.
> -- 
> I WILL NOT TEACH OTHERS TO FLY
> I WILL NOT TEACH OTHERS TO FLY
> I WILL NOT TEACH OTHERS TO FLY
> -+- Bart Simpson on chalkboard in episode 9F05
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081016/1997db1b/attachment.html>

From phil at bubblehouse.org  Thu Oct 16 14:56:15 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 16 Oct 2008 16:56:15 -0400
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
	<m3prm3noi6.fsf@neo.luffy.cx>
	<59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>
Message-ID: <050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>

On Oct 16, 2008, at 4:26 PM, Manuel Meyer wrote:
> But I don't know how to inform IRCServer about changes in the site/ 
> db. Maybe by adding another network protocol to the twisted  
> application, where django's signals could leave a note?

I may be missing something, but if you keep all your data in the DB,  
there's no need to notify the irc server of changes to the DB.

The only time you'll need this user information (it seems) is while  
responding to /join and /list requests. Just read the DB at that time.

What's nice about this is the DB takes care of most if not all of your  
synchronization requirements, so you have far fewer concurrency issues  
to think about than if you were broadcasting changes from the web app  
to the irc server.

-phil



From davyzhang at gmail.com  Fri Oct 17 07:20:42 2008
From: davyzhang at gmail.com (davy zhang)
Date: Fri, 17 Oct 2008 21:20:42 +0800
Subject: [Twisted-Python] problem with Twisted and Processing
In-Reply-To: <20081016170933.GA1053@vidar.dreamhost.com>
References: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
	<20081016170933.GA1053@vidar.dreamhost.com>
Message-ID: <81f2badd0810170620m1b42382fv8e239abb7427bd3f@mail.gmail.com>

thanks a lot for your help!

On Fri, Oct 17, 2008 at 1:09 AM, David Ripton <dripton at ripton.net> wrote:
> On 2008.10.16 21:21:35 +0800, davy zhang wrote:
>> I used Processing package for python 2.5 which became an official
>> package of python 2.6 named multipleprocess.
>
> multiprocessing

thanks again!

>
>> Here's the problem the code below is pretty simple and works fine
>> until I tried to get access of the first element in the list, I can
>> even print the whole list, but i just can not get the elements inside.
>> I guess there's something get conflicted in these two packages, anyone
>> knows why?
>
> This is not a Twisted problem.  You're just using Processing wrong.
>
> You're trying to shove a MyChat instance inside your Manager list.  But
> Manager only supports a few types by default.  So you either need a
> BaseManager subclass with a handler for MyChat, or you need to convert
> your MyChat objects to a supported type (for example, by calling str()
> on them) before passing them across shared memory.
>

so if there's another unsupported object in MyChat like
MyChat.transport, should I made an another manager for transport too?


> --
> David Ripton    dripton at ripton.net
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From davyzhang at gmail.com  Fri Oct 17 07:25:47 2008
From: davyzhang at gmail.com (davy zhang)
Date: Fri, 17 Oct 2008 21:25:47 +0800
Subject: [Twisted-Python] problem with Twisted and Processing
In-Reply-To: <48F777BE.6030007@imperial.ac.uk>
References: <81f2badd0810160621v18ff7307o28c3c5911086fb37@mail.gmail.com>
	<48F777BE.6030007@imperial.ac.uk>
Message-ID: <81f2badd0810170625s5d3be721hf62ea890f075e8af@mail.gmail.com>

On Fri, Oct 17, 2008 at 1:19 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> davy zhang wrote:
>>
>> I used Processing package for python 2.5 which became an official
>> package of python 2.6 named multipleprocess. 'Cause the twisted for
>> python 2.6 is not ready, I'm still using python 2.5 on windows
>
> AFAICT the "processing" module does things like "fork"ing a running python
> interpreter and then not immediately exec()ing.
>
> I'm pretty sure that'll cause Twisted (and maybe lots of other apps) to
> explode. However I note you're on Windows (which lacks fork()) so I'm not
> sure what it does there.
>
> Also, the Processing module communicates over pipes/fifos which will
> conflict with Twisted and block the reactor (or the reactor will block
> Processing).
>
> In short - nice though it looks, I don't think you can use Processing with
> Twisted, or will ever be able to. It's a shame more attention wasn't paid to
> this during development.
>
> You could look at:
>
>  http://pypi.python.org/pypi/ampoule
>  http://foss.eepatents.com/trac/AsynQueue

thanks so much for the advise!

I just want one process to recv the message from the clinents ,and one
process to send message back

both processes shared a same queue seems to work, but.... is there any
idea of that?

if in other language thread will make that possible, but in python
thread can not get benefit  from multi-core cpus

so I turn to processes

>
> Having either of these implementations inside Twisted would be excellent
> IMHO.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From hoadley at gmail.com  Fri Oct 17 23:30:27 2008
From: hoadley at gmail.com (Rob Hoadley)
Date: Fri, 17 Oct 2008 22:30:27 -0700
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
	<m3prm3noi6.fsf@neo.luffy.cx>
	<59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>
	<050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>
Message-ID: <9bb390e70810172230x104a2cf7ufd13536d1f7bd9a6@mail.gmail.com>

I've done a similar type project but with a mailserver built using
twisted.mail. I used django.contrib.admin to help manage the db for
the mailserver config. From the mailservers, I was able to get by with
5 min Looping Calls to the database to build the required config data
and just cached the data until the next successful db call .  While
not entirely applicable to your problem,  I wanted to bring it up
because of the slightly different choice I made on how to gather data
out of the database. As the previous poster mentioned, I didn't want
to mess around with concurrency and decided that my mailservers (2 of
them now) would not care about each other and just get their config
data out of the database.

Where I also differ is I couldn't afford a sql query per each
connections MAIL FROM or RCPT TO. So I had to make it slightly more
flexible while still meeting the requirement of a database stored
config.  I basically choose a delayed Pull approach.  One upshot is I
coded the sql calls so that the config data survives a database
failure and just keeps working with it's previous data grab.  I also
coded a twisted.web service administration page that allows for a
manual reload of the data on the individual server if an emergency
came up and I absolutely needed the config to change.  It's a
different flavor you can use if you know your data is fairly static
and the number of people changing the data is low.

Now back to your problem... I've also used the spread toolkit before
(no not the twisted.spread.. and yes... OSS name collision). If I were
writing such an app, and thought I'd be using a number of servers for
the service; I'd consider using spread to keep things the same on all
servers and for anything else I needed quickly.  You'd still want a
database, you just aren't always using sql to pull data that you need.
 You are using the spread bus and your IRC twisted app (more likely a
service within your twisted app) is just listening for the data that
you deem high priority.   Commonly referred to as a Push approach.
http://www.spread.org

Someone out there has done some work with spread and twisted.  I don't
know how well the code works. As for django, it'd be pretty easy to
send a spread message.
http://anarkystic.com/devdev/spreader-intro

Hope you get some ideas.

-rob

On Thu, Oct 16, 2008 at 1:56 PM, Phil Christensen <phil at bubblehouse.org> wrote:
> On Oct 16, 2008, at 4:26 PM, Manuel Meyer wrote:
>>
>> But I don't know how to inform IRCServer about changes in the site/db.
>> Maybe by adding another network protocol to the twisted application, where
>> django's signals could leave a note?
>
> I may be missing something, but if you keep all your data in the DB, there's
> no need to notify the irc server of changes to the DB.
>
> The only time you'll need this user information (it seems) is while
> responding to /join and /list requests. Just read the DB at that time.
>
> What's nice about this is the DB takes care of most if not all of your
> synchronization requirements, so you have far fewer concurrency issues to
> think about than if you were broadcasting changes from the web app to the
> irc server.
>
> -phil
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jkakar at kakar.ca  Sat Oct 18 14:34:46 2008
From: jkakar at kakar.ca (Jamu Kakar)
Date: Sat, 18 Oct 2008 13:34:46 -0700
Subject: [Twisted-Python] Deferred in C++
Message-ID: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>

Hi,

I've implemented Deferred in C++.  There is room for improvement and
optimization, but the basic core works.  My focus has been on trying
to make the best possible API experience for users.  The internal
implementation is confusing and full of complexity unrelated to the
problems being solved.  For example, because the implementation
relies on templates so heavily, order-of-definition is an issue.
Luckily most of the complexity stays hidden away leaving a mostly
easy-to-use API, even in tricky cases such as callback pipelines
that change the result type being passed from one callback to
another by the Deferred:

  int convert_string(std::string result) {
      std::cout << "Converting string " << result << std::endl;
      return ion::Convert::to_integer<int>(result);
  }

  int add_ten(int result) {
      std::cout << "Adding 10 to " << result
                << " and returning " << result + 10 << std::endl;
      return result + 10;
  }

  Deferred deferred = Deferred::create_deferred<std::string>();
  deferred.add_callback(&convert_string);
  deferred.add_callback(&add_ten);
  std::cout << "Calling succeed" << std::endl;
  deferred.succeed(std::string("13"));
  std::cout << "Callbacks finished" << std::endl;

Running this code will produce the following output:

  Calling succeed
  Converting string 13
  Adding ten to 13 and returning 23
  Callbacks finished

It's possible to use method pointers as callbacks, too:

  class CallbackHandler {
  public:
      int handle_result(int result) {
          std::cout << "Handling " << result << std::endl;
          return result;
      }
  };

  CallbackHandler handler;
  deferred.add_callback(&handler, &CallbackHandler::handle_result);

One of the constraints that the API mostly hides is that the return
and parameter types of every callback in the pipeline need to be
known at compile time.  add_callbacks, add_callback and add_errback
are template methods that provide implementations for different
combinations of function and method pointers.  They infer return and
parameter types, based on the inputs passed in, and use them to
create internal structures.

Inferring types breaks down when adding a callback that returns a
Deferred because there's no way to infer the result type of a
Deferred that may not exist yet.  In such cases, the result type of
the Deferred must be explicitly stated:

  class DeferredCallback {
  public:
      DeferredCallback()
          : deferred(Deferred::create_deferred<int>) {}

      Deferred get_deferred(int) {
          std::cout << "Returning deferred" << std::endl;
          return this->deferred;
      }

      Deferred deferred;
  };

  Deferred deferred = Deferred::create_deferred<std::string>();
  DeferredCallback callback;
  // Notice the explicit result type here:
  deferred.add_callback<int>(&callback, DeferredCallback::get_deferred);
  deferred.add_callback(&add_ten);
  std::cout << "Calling succeed" << std::endl;
  deferred.succeed(std::string("13"));
  std::cerr << "Calling deferred" << std::endl;
  callback.deferred.succeed(6)
  std::cout << "Callbacks finished" << std::endl;

Running this code will produce the following output:

  Calling succeed
  Returning deferred
  Calling deferred
  Adding ten to 6 and returning 16
  Callbacks finished

When a callback returns a Deferred, processing of the pipeline
pauses until a result comes available, which is why add_ten is only
called after the inner Deferred succeeds.  If you forget the
explicit result type when adding a Deferred returning callback
you'll get a compile-time error:

../../ion/defer.h: In member function 'void
ion::Deferred::add_callbacks(Instance*, ion::Deferred
(Instance::*)(Param), ion::Deferred
(Instance::*)(ion::trule<ion::Failure, ion::DeallocObject>)) [with
Instance = ion::tests::DeferredMethodHandler, Param = int32_t]':
test-defer.cpp:416:   instantiated from here
../../ion/defer.h:773: error: no matching function for call to
'ion::CompileTimeAssertion<false>::CompileTimeAssertion(ion::Deferred::add_callbacks(Instance*,
ion::Deferred (Instance::*)(Param), ion::Deferred
(Instance::*)(ion::trule<ion::Failure, ion::DeallocObject>)) [with
Instance = ion::tests::DeferredMethodHandler, Param =
int32_t]::STATIC_ASSERT_Deferred_result_type_must_be_specified&)'
../../ion/debug.h:164: note: candidates are:
ion::CompileTimeAssertion<false>::CompileTimeAssertion()
../../ion/debug.h:164: note:
ion::CompileTimeAssertion<false>::CompileTimeAssertion(const
ion::CompileTimeAssertion<false>&)
../../ion/defer.h: At global scope:
../../ion/defer.h:772: warning: unused parameter 'instance'
../../ion/defer.h:772: warning: unused parameter 'method_callback'
../../ion/defer.h:772: warning: unused parameter 'method_errback'

If you look *really* hard you'll see some helpful information
starting with STATIC_ASSERT.  Yes, that's a feature.

I've implemented a Failure object, but failure handling over all is
not very good.  Exceptions are tricky because, unless you're
expecting a particular kind of exception, their types become opaque
as soon as they're thrown.  There's room for improvement but there's
no obvious path to a good solution yet.

The behaviour of errbacks is slightly different than in the Python
implementation.  Errbacks receive a trule<Failure> (a scoped pointer
that the errback owns) and return a result suitable for the next
callback.  They can either (a) recover from the error and return a
result, (b) raise an exception to indicate a new error or (c) raise
an UnhandledFailureError exception with the failure object.
Callback processing continues after (a), while errback processing
continues after (b) or (c).  A new Failure object is created when
(b) occurs.

  int recover(trule<Failure>) {
      std::cout << "Recovering from failure" << std::endl;
      return 43;
  }

  Deferred deferred = Deferred::create_deferred<int>();

  deferred.add_errback(&recover);
  deferred.add_callback(&add_ten);
  std::cout << "Calling fail" << std::endl;
  deferred.fail(Exception("Error message!"));
  std::cout << "Callbacks finished" << std::endl;

Running this code will produce the following output:

  Calling fail
  Recovering from failure
  Adding ten to 43 and returning 53
  Callbacks finished

I'm not sure how practical this component would be in a non-trivial
application.  The reliance on templates would negatively affect
compile time, for one thing.  More importantly, I've found
deciphering the error messages produced by simple mistakes can be
tricky.  Nonetheless, my main motivation was to see if it was
possible at all and so I'm pleased that it works in the end.

In the future, I'd like to see what the performance difference is
between this version and the Python version, but I haven't
investigated that at all.  There are also memory-management related
features that could be added to ease using this in C++ that would be
interesting to explore.  Porting to Windows is another item on the
list of things that I'd like to do.

The code is part of a project called ion (I/O and Networking
library), which I use for experiments like this.  I haven't merged
the deferred branch yet, but will soon.  Until it's merged, it's on
Launchpad:

https://code.edge.launchpad.net/~jkakar/ion/deferred

It will most likely only build on Ubuntu Intrepid right now.

Thanks,
J.



From exarkun at twistedmatrix.com  Sat Oct 18 22:05:09 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Oct 2008 04:05:09 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1224389109.68.704500062@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081019/943db0da/attachment.html>

From davyzhang at gmail.com  Sun Oct 19 05:38:04 2008
From: davyzhang at gmail.com (davy zhang)
Date: Sun, 19 Oct 2008 19:38:04 +0800
Subject: [Twisted-Python] Serious performance problem of twisted
Message-ID: <81f2badd0810190438u4f86a2abof596192f0d927822@mail.gmail.com>

a very simple server and multi-process code, I found there's about 500
milliseconds delay for every msg I sent to client I just don't why,
did I made something wrong ?

the code below using a process to handle the data and in the shared
taskList, after done put the data to the shared msgList,  a thread in
main process to read the msg and send to the clients.

the msg delay is significant, you can even see it with your eyes in
telnet client I checked the time in the client, it's approximate to
0.5 secs

first I tested in java using the same logic with MINA, BlockingQueue
stuff, the msg traveled from client to server and back is 0, so I
pretty much sure the problem here is in the  server side

then I printed time in the server code, I found everything is as fast
as it suppose to be, until the c.transport.write. After the write
operation the client need 0.5secs to get the msg


the code is below

#!/usr/bin/env python
#coding=utf-8

from twisted.internet.protocol import Factory,Protocol
from twisted.internet import reactor
from twisted.internet import error
import cPickle
import time
from processing import Manager,Process
import thread
from time import time

"""flash policy file request"""
policyRequest = "<policy-file-request/>" + chr(0)
policyReturn = """<cross-domain-policy>
                <allow-access-from  domain="*"  to-ports="*"  />
                </cross-domain-policy>""" + chr(0)

def handler(taskList,msgList):
    while 1:
        item = cPickle.loads(taskList.get())
        print time()
        print 'item before handle ', item
        item['msg'] += ' hanlded done \r\n'
        msgList.put(cPickle.dumps(item))

def sender():
    global msgList
    while 1:
        item = cPickle.loads(msgList.get())
        print time()
        c = clients[item['cid']]
        c.transport.write(item['msg'] )

class DTProtocol(Protocol):
    global clients
    def connectionMade(self):
        clients.append(self)
        print "a new customer!"

    def dataReceived(self, data):
        global clients
        global taskList
        print 'msg received ',data
        if data == policyRequest:
            self.transport.write(policyReturn)
            self.transport.loseConnection()
        else:
            d = {'cid':clients.index(self),'msg':data,'done':False,'sent':False}
            taskList.put(cPickle.dumps(d))
            print time()
            #self.transport.write(data)

    def connectionLost(self, reason):
        print reason
        if self in clients:
            clients.remove(self)
        print "bye!"

    def message(self,msg):
        self.transport.write(msg)

class DTFactory(Factory):
    protocol  = DTProtocol

if __name__ == '__main__':

    port = 80
    reactor.listenTCP(80,DTFactory())

    clients = []
    manager = Manager()

    taskList = manager.Queue()
    msgList = manager.Queue()


    h = Process(target=handler,args=(taskList,msgList))
    h.start()

    thread.start_new_thread(sender,())

    print 'server is runing at ',port
    reactor.run()



From therve at free.fr  Sun Oct 19 06:03:03 2008
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sun, 19 Oct 2008 14:03:03 +0200
Subject: [Twisted-Python] Serious performance problem of twisted
In-Reply-To: <81f2badd0810190438u4f86a2abof596192f0d927822@mail.gmail.com>
References: <81f2badd0810190438u4f86a2abof596192f0d927822@mail.gmail.com>
Message-ID: <1224417783.7335.2.camel@brainwave>

Le dimanche 19 octobre 2008 à 19:38 +0800, davy zhang a écrit :
> a very simple server and multi-process code, I found there's about 500
> milliseconds delay for every msg I sent to client I just don't why,
> did I made something wrong ?

Short answer:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#WhydoesittakealongtimefordataIsendwithtransport.writetoarriveattheothersideoftheconnection

A bit more elaborated: yes, you did something wrong. The Twisted APIs
are not threadsafe, thus you must not call any Twisted method from a
thread, except reactor.callFromThread. See
http://twistedmatrix.com/projects/core/documentation/howto/threading.html for more information.


-- 
Thomas




From davyzhang at gmail.com  Sun Oct 19 06:49:33 2008
From: davyzhang at gmail.com (davy zhang)
Date: Sun, 19 Oct 2008 20:49:33 +0800
Subject: [Twisted-Python] Serious performance problem of twisted
In-Reply-To: <1224417783.7335.2.camel@brainwave>
References: <81f2badd0810190438u4f86a2abof596192f0d927822@mail.gmail.com>
	<1224417783.7335.2.camel@brainwave>
Message-ID: <81f2badd0810190549r6c404017la050b42e15bb1f63@mail.gmail.com>

- - oh..... Thanks a lot - -.... I nearly want to start my own server
code ...I should read that faq before I started my project.:p

thanks again~!

On Sun, Oct 19, 2008 at 8:03 PM, Thomas Hervé <therve at free.fr> wrote:
> Le dimanche 19 octobre 2008 à 19:38 +0800, davy zhang a écrit :
>> a very simple server and multi-process code, I found there's about 500
>> milliseconds delay for every msg I sent to client I just don't why,
>> did I made something wrong ?
>
> Short answer:
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#WhydoesittakealongtimefordataIsendwithtransport.writetoarriveattheothersideoftheconnection
>
> A bit more elaborated: yes, you did something wrong. The Twisted APIs
> are not threadsafe, thus you must not call any Twisted method from a
> thread, except reactor.callFromThread. See
> http://twistedmatrix.com/projects/core/documentation/howto/threading.html for more information.
>
>
> --
> Thomas
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Sun Oct 19 10:55:35 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 19 Oct 2008 12:55:35 -0400
Subject: [Twisted-Python] Serious performance problem of twisted
In-Reply-To: <1224417783.7335.2.camel@brainwave>
References: <81f2badd0810190438u4f86a2abof596192f0d927822@mail.gmail.com>
	<1224417783.7335.2.camel@brainwave>
Message-ID: <1224435335.19469.204.camel@localhost.localdomain>

On Sun, 2008-10-19 at 14:03 +0200, Thomas Hervé wrote:

> A bit more elaborated: yes, you did something wrong. The Twisted APIs
> are not threadsafe, thus you must not call any Twisted method from a
> thread, except reactor.callFromThread. See
> http://twistedmatrix.com/projects/core/documentation/howto/threading.html for more information.
> 
> 

In fact, you needn't use threads at all, most of the time.




From exarkun at divmod.com  Sun Oct 19 13:37:21 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 19 Oct 2008 15:37:21 -0400
Subject: [Twisted-Python] October 26 Sprint Reminder
In-Reply-To: 0
Message-ID: <20081019193721.29191.1578254984.divmod.quotient.41713@ohm>


There will be a Twisted sprint on Sunday, October 26 at the Divmod office in Porter Squarel, Cambridge, MA.  The sprint will run from 10 AM until people get sick of it.  Lunch will be provided, thanks to the generous contributions of the sponsors listed on the website.

The sprint will focus on anything attendees like, but there will probably be at least some emphasis on tasks related to release automation.

Jean-Paul



From amauryfa at gmail.com  Tue Oct 21 10:14:43 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Tue, 21 Oct 2008 18:14:43 +0200
Subject: [Twisted-Python] Deferred in C++
In-Reply-To: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
References: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
Message-ID: <e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>

Hello,

On Sat, Oct 18, 2008 at 22:34, Jamu Kakar <jkakar at kakar.ca> wrote:
> Hi,
>
> I've implemented Deferred in C++.  There is room for improvement and
> optimization, but the basic core works.

Wonderful! Awesome!
So I am not the only one who tries to use Twisted concepts in C++.

I did write some kind of a Deferred class in C++ myself, together with
a re-implementation of a Twisted framework (two reactors featuring TCP
client & server, callLater, callInThread...; a selectReactor and a
native MFC reactor that merges nicely in a Windows application, yes,
there are some; Protocols, LineReceiver, HttpClient & server...)
and I already have a running business application that uses all of it
on Windows.

The Deferred part was really hard to implement, and may be the reason
why it was never done before. It really pushed me out of my C++
knowledge.
I tried to convert my code to use your class, which seems easier to
use than mine. Great job!

> I'm not sure how practical this component would be in a non-trivial
> application.

Here are random comments about the changes I had to make, when
confronted to a real application using nested deferreds, DeferredList,
various error handling...

- First, good news, your code almost compiles on Windows (VS 2005). I
had to typedef int32_t (why don't you simply use int?), comment out
the StackFrameFactory, and declare some functions/classes with
__declspec(dllexport) (with the help of a macro) so we can build a
DLL.

- In my eyes, the notation "addCallback" is more readable than
"add_callback" (and it's the one used by twisted python), but that's a
matter of taste. On the other hand I found disturbing at first to fire
deferreds with the methods "succeed()" and "fail()" (instead of
callback() and errback()

- I found that my callbacks often have a void result, and deferred are
sometimes fired without a value. For example, a twisted DeferredList
often just waits for its children to finish. The results may be
gathered somewhere, but the callbacks return None.
I took the liberty to change your code and add *a lot* of template
specializations for the "void" ReturnType or ResultType.
I suggest that when a callback takes no parameter, it can be added to
any Deferred, whatever its current state (and the current value is
simply discarded).

- In some cases my callbacks take additional arguments (the twisted
"callbackArgs"). To make it possible I used the
boost::bind functions, and a wrapper class that converts any
boost::function to a ion::ICallback.

- Several times I had a "Can't add invalid callback" error, and I
found it difficult to figure which type was in the deferred state (the
previous callback returned a Deferred, and so on...) So I extended
ITypeInfo with a "const char* typename" member, that I fill with
"typeid(Object).name()". Much easier to see with the debugger...

- I tried to implement a DeferredList. I almost succeeded, except that
it simply inherit from Deferred and it seems a bad idea: when the
DeferredList is returned as a plain Deferred, all state is lost... and
the application crashes.
Maybe Deferred should be a kind of "shared pointer" to the real
object: DeferredState or DeferredListState

- Errr... I'm not sure I understood the "trule" concept. When do you
use it? What are its semantics regarding ownership? is it similar to
std::auto_ptr?

- How is one supposed to get the content of a Failure? I use code like
this, but it seems too long for this simple task:
  void MyProcess::displayError(ion::trule<ion::Failure> failure)
  {
    std::string message = ion::ptr<ion::Failure>(failure)->get_message();
    [...]
    throw ion::UnhandledFailureError(failure);
  }

- likewise, it should be possible to simply
    throw Failure("Some error message");

> The reliance on templates would negatively affect
> compile time, for one thing.  More importantly, I've found
> deciphering the error messages produced by simple mistakes can be
> tricky.

I confirm: it is.

> Nonetheless, my main motivation was to see if it was
> possible at all and so I'm pleased that it works in the end.

I think my program can be considered as a non-trivial application (I
cannot show its code, though, except for the non-business framework)
It is definitely possible to implement a Twisted framework in C++. The
hard part is to make it nice for the developer. Programming with
callbacks already twists your mind, it becomes very difficult if the
language syntax hides the important part of the code.

The "ion" project seems promising! What extend do you intend to give it?

-- 
Amaury Forgeot d'Arc



From matt at madebykite.com  Tue Oct 21 10:23:06 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Tue, 21 Oct 2008 17:23:06 +0100
Subject: [Twisted-Python] Deferred in C++
In-Reply-To: <e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
References: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
	<e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
Message-ID: <2005065D-9B05-47A2-9ED4-6F5B3C3B4432@madebykite.com>

On 21 Oct 2008, at 17:14, Amaury Forgeot d'Arc wrote:

> On Sat, Oct 18, 2008 at 22:34, Jamu Kakar <jkakar at kakar.ca> wrote:
>> Hi,
>>
>> I've implemented Deferred in C++.  There is room for improvement and
>> optimization, but the basic core works.
>
> Wonderful! Awesome!
> So I am not the only one who tries to use Twisted concepts in C++.


Browsing the squid source code the other day, I noticed that it too  
uses a deferred like device.
	

Matthew Glubb
Technical Partner

email: matthew.glubb at madebykite.com
phone: 44 (0) 7715 754017
skype: mglubb

Kite
http://madebykite.com

--
GPG: 96FF DE0E 0B7B 37F0 7F8D C54C E285 3D8F 5625 9244





From lars.reimann at googlemail.com  Tue Oct 21 12:47:31 2008
From: lars.reimann at googlemail.com (Lars Reimann)
Date: Tue, 21 Oct 2008 20:47:31 +0200
Subject: [Twisted-Python] RAW Sockets, IP in UDP
Message-ID: <59acdf910810211147k2a2a5bddo1252f2114fc85a50@mail.gmail.com>

Hi all,

I am new to this list, but I have some hopefully simple questions for you.

I need to implement a listening RAW sockets which gives me all packets
at that particular interface. Next, I need to put this data into a
normal UDP container to send it to another host, where it is unpacked
again.

I am studying all the docs now, but any hints would be greatly appreciated!

Thx in advance.



From amauryfa at gmail.com  Tue Oct 21 13:06:23 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Tue, 21 Oct 2008 21:06:23 +0200
Subject: [Twisted-Python] Deferred in C++
In-Reply-To: <2005065D-9B05-47A2-9ED4-6F5B3C3B4432@madebykite.com>
References: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
	<e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
	<2005065D-9B05-47A2-9ED4-6F5B3C3B4432@madebykite.com>
Message-ID: <e27efe130810211206r6359a9bi1251b8054f0a067c@mail.gmail.com>

On Tue, Oct 21, 2008 at 18:23, Matthew Glubb wrote:
> On 21 Oct 2008, at 17:14, Amaury Forgeot d'Arc wrote:
>
>> On Sat, Oct 18, 2008 at 22:34, Jamu Kakar <jkakar at kakar.ca> wrote:
>>>
>>> Hi,
>>>
>>> I've implemented Deferred in C++.  There is room for improvement and
>>> optimization, but the basic core works.
>>
>> Wonderful! Awesome!
>> So I am not the only one who tries to use Twisted concepts in C++.
>
>
> Browsing the squid source code the other day, I noticed that it too uses a
> deferred like device.

Do you know where it is? a class or function name? I could only find a
"DeferredRead" class,
which seems to be a wrapper around an asynchronous socket.

Twisted's (and Jamu's!) deferreds are much more versatile and apply to anything.

-- 
Amaury Forgeot d'Arc



From matt at madebykite.com  Tue Oct 21 13:52:46 2008
From: matt at madebykite.com (Matthew Glubb)
Date: Tue, 21 Oct 2008 20:52:46 +0100
Subject: [Twisted-Python] Deferred in C++
In-Reply-To: <e27efe130810211206r6359a9bi1251b8054f0a067c@mail.gmail.com>
References: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
	<e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
	<2005065D-9B05-47A2-9ED4-6F5B3C3B4432@madebykite.com>
	<e27efe130810211206r6359a9bi1251b8054f0a067c@mail.gmail.com>
Message-ID: <9BFDAE58-86C0-47A2-A4C1-F29A536ED6C1@madebykite.com>

Ah. Sorry, I didn't delve into it that deeply. Just raised an eyebrow  
and moved on. I might have been mistaken.

I was looking at the 2.7 source if it's any help.

Matt

On 21 Oct 2008, at 20:06, Amaury Forgeot d'Arc wrote:

> On Tue, Oct 21, 2008 at 18:23, Matthew Glubb wrote:
>> On 21 Oct 2008, at 17:14, Amaury Forgeot d'Arc wrote:
>>
>>> On Sat, Oct 18, 2008 at 22:34, Jamu Kakar <jkakar at kakar.ca> wrote:
>>>>
>>>> Hi,
>>>>
>>>> I've implemented Deferred in C++.  There is room for improvement  
>>>> and
>>>> optimization, but the basic core works.
>>>
>>> Wonderful! Awesome!
>>> So I am not the only one who tries to use Twisted concepts in C++.
>>
>>
>> Browsing the squid source code the other day, I noticed that it too  
>> uses a
>> deferred like device.
>
> Do you know where it is? a class or function name? I could only find a
> "DeferredRead" class,
> which seems to be a wrapper around an asynchronous socket.
>
> Twisted's (and Jamu's!) deferreds are much more versatile and apply  
> to anything.
>
> -- 
> Amaury Forgeot d'Arc
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From itamar at itamarst.org  Tue Oct 21 14:45:46 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 21 Oct 2008 16:45:46 -0400
Subject: [Twisted-Python] Available for short-term (non-typing) consulting
Message-ID: <48FE3F7A.2050703@itamarst.org>

Need help with Twisted, distributed systems or or just plain old 
software architecture?

Due to a repetitive strain injury I am unable to type, and so I'm taking 
some time off of work to recover (I'm writing this e-mail using voice 
dictation, thanks to Dragon NaturallySpeaking). As a result I am 
available for short-term consulting, training or design work for the 
next month, assuming of course it does not involve any typing.

I've worked on Twisted itself, as well as projects ranging from 
high-performance distributed C++ servers, to an access control framework 
for an airline reservation system, to a multimedia kiosk system for the 
Israel Museum in Jerusalem:
http://itamarst.org/resume.html

And for the next month, I can help you! Send me an e-mail (if possible 
including a phone number so I don't have to use the computer to reply) 
if you're interested.

-- Itamar



From jkakar at kakar.ca  Wed Oct 22 03:05:43 2008
From: jkakar at kakar.ca (Jamu Kakar)
Date: Wed, 22 Oct 2008 10:05:43 +0100
Subject: [Twisted-Python] Deferred in C++
In-Reply-To: <e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
References: <aa66e7aa0810181334o1c42b696gc1da8ba6eec26112@mail.gmail.com>
	<e27efe130810210914p6c64f7ccs129493a565ee4743@mail.gmail.com>
Message-ID: <aa66e7aa0810220205h719a136jd40f2937c2e4fae6@mail.gmail.com>

Hi Amaury,

On Tue, Oct 21, 2008 at 5:14 PM, Amaury Forgeot d'Arc
<amauryfa at gmail.com> wrote:
> So I am not the only one who tries to use Twisted concepts in C++.

Heh, it's lonely being a C++ nerd, isn't it. ;) I'm mostly
interested in seeing what's possible and trying to understand how to
port very interesting APIs from Python to C++.

> I did write some kind of a Deferred class in C++ myself, together with
> a re-implementation of a Twisted framework (two reactors featuring TCP
> client & server, callLater, callInThread...; a selectReactor and a
> native MFC reactor that merges nicely in a Windows application, yes,
> there are some; Protocols, LineReceiver, HttpClient & server...)
> and I already have a running business application that uses all of it
> on Windows.
>
> The Deferred part was really hard to implement, and may be the reason
> why it was never done before. It really pushed me out of my C++
> knowledge.
> I tried to convert my code to use your class, which seems easier to
> use than mine. Great job!

The most difficult part for me was dealing with Deferred-returning
callbacks and getting the pausing/unpausing behaviour to work
correctly.  The difficult part was that all the template functions
caused order of definition issues.  The DeferredTypeInfo was
introduced for this case to make Deferred a template parameter and,
therefore, work around the ordering issues.  It's really heinously
complicated inside and I have to decipher it each time I look at it.
It's always a bad sign when you're the author of the code you can't
comprehend. :)

> - First, good news, your code almost compiles on Windows (VS 2005). I
> had to typedef int32_t (why don't you simply use int?), comment out
> the StackFrameFactory, and declare some functions/classes with
> __declspec(dllexport) (with the help of a macro) so we can build a
> DLL.

Cool, glad to hear it.  I didn't expect problems, but just haven't
had time to port it (and also have VS2005 as my base target compiler
for Windows).  I plan to s/int32_t/int/, but haven't gotten around
to it.  It's a historic artifact in that code from many years ago
that I've continued for the time being to keep things consistent.

> - In my eyes, the notation "addCallback" is more readable than
> "add_callback" (and it's the one used by twisted python), but that's a
> matter of taste. On the other hand I found disturbing at first to fire
> deferreds with the methods "succeed()" and "fail()" (instead of
> callback() and errback()

The style issue is entirely personal, so yeah, I can see why you
feel that way.  As far as succeed() and fail() vs. callback() and
errback(), this change was a suggestion from Christopher Armstrong.
Apparently, a lot of Twisted users have been confused by callback
(the callable you add to a Deferred) vs callback (the method you
call to fire the Deferred), and similar for errback.

> - I found that my callbacks often have a void result, and deferred are
> sometimes fired without a value. For example, a twisted DeferredList
> often just waits for its children to finish. The results may be
> gathered somewhere, but the callbacks return None.
> I took the liberty to change your code and add *a lot* of template
> specializations for the "void" ReturnType or ResultType.
> I suggest that when a callback takes no parameter, it can be added to
> any Deferred, whatever its current state (and the current value is
> simply discarded).

This is on my list of things to add, but haven't gotten around to it
yet.  My plan is to throw a NoResultError or something whenever a
callback is added to a Deferred that already has void-returning
callback at the end of the chain.  Though, hmm... I guess you might
still want to add an errback to handle errors from the
void-returning callback.

> - In some cases my callbacks take additional arguments (the twisted
> "callbackArgs"). To make it possible I used the
> boost::bind functions, and a wrapper class that converts any
> boost::function to a ion::ICallback.

Ah, nice.  Yeah, I was wondering about that and have been
considering implementing a specialized ICallback that can store
arguments.

> - Several times I had a "Can't add invalid callback" error, and I
> found it difficult to figure which type was in the deferred state (the
> previous callback returned a Deferred, and so on...) So I extended
> ITypeInfo with a "const char* typename" member, that I fill with
> "typeid(Object).name()". Much easier to see with the debugger...

Good call.  Yeah, I've had the same issue interpreting
InvalidCallbackError's.

> - I tried to implement a DeferredList. I almost succeeded, except that
> it simply inherit from Deferred and it seems a bad idea: when the
> DeferredList is returned as a plain Deferred, all state is lost... and
> the application crashes.
> Maybe Deferred should be a kind of "shared pointer" to the real
> object: DeferredState or DeferredListState

Deferred is a "shared pointer" to DeferredState...?  Maybe I'm not
understanding your point?

> - Errr... I'm not sure I understood the "trule" concept. When do you
> use it? What are its semantics regarding ownership? is it similar to
> std::auto_ptr?

This is an implementation of the Holder/Trule pattern described in
Josuttis' "C++ Templates" book.  There is a reason, which I can't
recall right now, that makes returning a ptr (or auto_ptr) from a
function potentially dangerous (and also passing one in) that trule
fixes.

My plan is to migrate to the Boost pointers that will become part of
the standard library in C++0x.  This will make working with smart
pointers in ion much nicer.  The ptr/trule pattern is quite
cumbersome, especially when templates are involved.

> - How is one supposed to get the content of a Failure? I use code like
> this, but it seems too long for this simple task:
>  void MyProcess::displayError(ion::trule<ion::Failure> failure)
>  {
>    std::string message = ion::ptr<ion::Failure>(failure)->get_message();
>    [...]
>    throw ion::UnhandledFailureError(failure);
>  }
>
> - likewise, it should be possible to simply
>    throw Failure("Some error message");

The displayError above is what you're expected to do, so far.  If
there's a better way I'd love to hear it.  There's actually a deeper
issue that makes Failure/error handling in this implementation kind
of crappy.  The type of an exception is lost when caught in a catch
block for a base class of the thrown exception.  Which means that
it's not possible, currently, to determine the concrete exception
type from a Failure.  One thing I've been considering is making the
ion::Exception class provide some extra functionality to make this
possible, but I'm unhappy that doing that will make implementing
custom ion::Exception's harder.

Being able to throw a Failure with a string message is a good idea.

>> The reliance on templates would negatively affect
>> compile time, for one thing.  More importantly, I've found
>> deciphering the error messages produced by simple mistakes can be
>> tricky.
>
> I confirm: it is.

Heh. :)

>> Nonetheless, my main motivation was to see if it was
>> possible at all and so I'm pleased that it works in the end.
>
> I think my program can be considered as a non-trivial application (I
> cannot show its code, though, except for the non-business framework)
> It is definitely possible to implement a Twisted framework in C++. The
> hard part is to make it nice for the developer. Programming with
> callbacks already twists your mind, it becomes very difficult if the
> language syntax hides the important part of the code.

This "make it nice for the developer" is the primary goal I have
with this effort.

> The "ion" project seems promising! What extend do you intend to give it?

I'm interested in getting to the point where there's a Twisted-style
reactor and, eventually, support for using AMP-based protocols.

Thanks,
J.



From jakamkon at gmail.com  Wed Oct 22 08:08:17 2008
From: jakamkon at gmail.com (Kuba Konczyk)
Date: Wed, 22 Oct 2008 15:08:17 +0100
Subject: [Twisted-Python] RAW Sockets, IP in UDP
In-Reply-To: <59acdf910810211147k2a2a5bddo1252f2114fc85a50@mail.gmail.com>
References: <59acdf910810211147k2a2a5bddo1252f2114fc85a50@mail.gmail.com>
Message-ID: <2e947fbb0810220708p1747e468r6e7f82e60bf851e3@mail.gmail.com>

Hi,

2008/10/21 Lars Reimann <lars.reimann at googlemail.com>:
> Hi all,
>
> I need to implement a listening RAW sockets which gives me all packets
> at that particular interface. Next, I need to put this data into a
> normal UDP container to send it to another host, where it is unpacked
> again.

Low level packet handling part of Twisted (twisted.pair) isn't really
usable for your use case and hasn't been updated for a quite a long
time.

As it comes to receiving and sending raw packets you have a few
options to choose from.If you don't care about portability you can
just use AF_PACKET socket from  python's standard library which is
supported only on linux.Otherwise you need to use one of many python
libpcap wrappers like  pypcap, pylibcap or python-pcapy.Not all of
them support sending packets.If you choose one that doesn't you can
always use python bindings for libdnet.

After all that you still have to choose packet parsing/contruction
library like dpkt, umit umpa or scapy.

--
Kuba



From terry at jon.es  Fri Oct 24 09:25:29 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 24 Oct 2008 17:25:29 +0200
Subject: [Twisted-Python] Consensus on speed of deferred call/errback-style
	execution?
Message-ID: <18689.59625.326096.492013@jon.es>

Last year someone mentioned to me that using defer.inlineCallbacks (versus
writing a bunch of independent standalone callback functions) incurs some
sort of (significant) speed penalty during execution.

How accurate is that?


More generally, there are many styles one can use to write and add
callbacks to a deferred. Is there any consensus on the "best" way to do it,
or are there rules of thumb that people have figured out, etc?

I sometimes use defer.inlineCallbacks and then have a bunch of yields in a
function. That saves writing and naming and addCallbacking a bunch of
callback functions and can make for much nicer and easier to understand
code.  But the comment that using inlineCallbacks is slower sticks in my
mind.

Very briefly, you can add a bunch of callbacks to a deferred in multiple
ways. E.g.,

 1. A bunch of top-level functions
 2. A top-level function that nests callbacks that nest callbacks...
 3. A bunch of top-level class methods
 4. A top-level class method that nests callbacks...

This is deliberately simplistic, and all the above can of course also be
mixed.

I wrote a little timing code to play with this (via timing a function that
uses inlineCallbacks that yields a single passed deferred) but decided to
ask here before going much further as there are lots of different avenues
that could be explored.

Terry



From donwsmith at gmail.com  Fri Oct 24 09:36:47 2008
From: donwsmith at gmail.com (Don Smith)
Date: Fri, 24 Oct 2008 08:36:47 -0700
Subject: [Twisted-Python] SOAP Client?
Message-ID: <24f63c200810240836s20a6aa68k7b7ae09d8f2b6c61@mail.gmail.com>

Is there a SOAP client available in Twisted, or one that would be
recommended to use with Twisted?

Thanks,

Don Smith
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081024/52a8e78e/attachment.html>

From ntoper at gmail.com  Fri Oct 24 09:40:12 2008
From: ntoper at gmail.com (Nicolas Toper)
Date: Fri, 24 Oct 2008 17:40:12 +0200
Subject: [Twisted-Python] SOAP Client?
In-Reply-To: <24f63c200810240836s20a6aa68k7b7ae09d8f2b6c61@mail.gmail.com>
References: <24f63c200810240836s20a6aa68k7b7ae09d8f2b6c61@mail.gmail.com>
Message-ID: <fcbb46050810240840g3fdedda4wc2c0e513a5a830ea@mail.gmail.com>

Hi,

There is SoapPy already included.

On Fri, Oct 24, 2008 at 5:36 PM, Don Smith <donwsmith at gmail.com> wrote:

> Is there a SOAP client available in Twisted, or one that would be
> recommended to use with Twisted?
>
> Thanks,
>
> Don Smith
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
A+
Nico
http://www.deviant-abstraction.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081024/8d562a28/attachment.html>

From exarkun at divmod.com  Fri Oct 24 09:41:21 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 24 Oct 2008 11:41:21 -0400
Subject: [Twisted-Python] Consensus on speed of deferred
	call/errback-style execution?
In-Reply-To: <18689.59625.326096.492013@jon.es>
Message-ID: <20081024154121.29191.747387544.divmod.quotient.44219@ohm>

On Fri, 24 Oct 2008 17:25:29 +0200, Terry Jones <terry at jon.es> wrote:
>Last year someone mentioned to me that using defer.inlineCallbacks (versus
>writing a bunch of independent standalone callback functions) incurs some
>sort of (significant) speed penalty during execution.
>
>How accurate is that?
>

Dunno.

> [snip]
>
>Very briefly, you can add a bunch of callbacks to a deferred in multiple
>ways. E.g.,
>
> 1. A bunch of top-level functions
> 2. A top-level function that nests callbacks that nest callbacks...
> 3. A bunch of top-level class methods
> 4. A top-level class method that nests callbacks...
>
>This is deliberately simplistic, and all the above can of course also be
>mixed.
>
>I wrote a little timing code to play with this (via timing a function that
>uses inlineCallbacks that yields a single passed deferred) but decided to
>ask here before going much further as there are lots of different avenues
>that could be explored.
>

A suite of benchmarks for Deferred has been on my to-do list for a long
time.  Aside from knowing which usage patterns are more efficient, this
needs to be part of our testing process so we can evaluate optimization
of Deferred and be aware of performance regressions we might introduce.

I don't know if anyone else has done this already, but if you end up
writing something, it'd be great if it were in a form which could be
run automatically as part of our build process.

Jean-Paul



From exarkun at divmod.com  Fri Oct 24 09:43:10 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 24 Oct 2008 11:43:10 -0400
Subject: [Twisted-Python] SOAP Client?
In-Reply-To: <24f63c200810240836s20a6aa68k7b7ae09d8f2b6c61@mail.gmail.com>
Message-ID: <20081024154310.29191.2020992455.divmod.quotient.44221@ohm>

On Fri, 24 Oct 2008 08:36:47 -0700, Don Smith <donwsmith at gmail.com> wrote:
>Is there a SOAP client available in Twisted, or one that would be
>recommended to use with Twisted?

Aside from twisted.web.soap, ZSI includes Twisted support.  Last time I
looked at it, the implementation was... well, I'd call it wrong.  But
perhaps it works well enough for some cases.  My understanding is that
ZSI is the best SOAP library available for Python; based on that, I'd
really like to see some support in Twisted for SOAP which was based on
it.

Jean-Paul



From glyph at divmod.com  Fri Oct 24 10:03:39 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 24 Oct 2008 16:03:39 -0000
Subject: [Twisted-Python] Consensus on speed of deferred call/errback-style
	execution?
In-Reply-To: <18689.59625.326096.492013@jon.es>
References: <18689.59625.326096.492013@jon.es>
Message-ID: <20081024160339.6400.1373873889.divmod.xquotient.395@weber.divmod.com>




On 03:25 pm, terry at jon.es wrote:
>Last year someone mentioned to me that using defer.inlineCallbacks 
>(versus
>writing a bunch of independent standalone callback functions) incurs 
>some
>sort of (significant) speed penalty during execution.
>
>How accurate is that?

I don't believe there's been any extensive profiling of inlineCallbacks. 
At least, none that I'm aware of.  I think what you are remembering is 
that inlineCallbacks generally results in an (often implicit, sometimes 
unintentional) loss of parallelism.  For example, consider this 
idiomatic code:

    xd = foo()
    yd = foo()
    zd = foo()
    def myCallback(x, y, z):
        doStuff(x) + doStuff(y) / doStuff(z)
    gatherResults([x, y, z]).addCallback(myCallback)

That does all three 'foo' operations in parallel, which is generally 
faster.  But the idiomatic inlineCallbacks version:

    doStuff(yield foo()) + doStuff(yield foo()) / doStuff(yield foo())

while making all kinds of sexy use of expressions rather than 
statements, loses that parallelism: you don't get to the second foo() 
call until the first one has completed and its results have been 
processed.  If each foo() call has a 500ms latency this can really add 
up.  Of course you can work around this:

    xd = foo()
    yd = foo()
    zd = foo()
    doStuff(yield xd) + doStuff(yield yd) / doStuff(yield zd)

but it can be difficult to remember to do so, and it starts looking a 
lot more like regular callback-style code.

I think inlineCallbacks is neat, but its strength is really operations 
that are truly conversational; where the calling end of the conversation 
actually does need to wait for each step of an asynchronous conversation 
to complete before moving on to the next one.  A dead giveaway that it's 
going to be awkward to make your inlineCallbacks appropriately parallel 
is if you start writing a 'for' loop that yields a Deferred in its body.



From paulswartz at gmail.com  Fri Oct 24 11:32:26 2008
From: paulswartz at gmail.com (Paul Swartz)
Date: Fri, 24 Oct 2008 13:32:26 -0400
Subject: [Twisted-Python] sending signal through SSHChannel
In-Reply-To: <8cc9d3030809300906u1db77d9ag2abb2e5257ab6a57@mail.gmail.com>
References: <8cc9d3030809300906u1db77d9ag2abb2e5257ab6a57@mail.gmail.com>
Message-ID: <324cfb540810241032n850f076j7b278ab382d9a26e@mail.gmail.com>

On Tue, Sep 30, 2008 at 12:06 PM, Frans Mårtensson
<frans.martensson at gmail.com> wrote:
> Hello!
>
> I have written a python program that executes shell scripts on remote
> computers using the twisted conch SSHChannel. Several shell scripts
> are executed at once on several machines and the scripts range in
> execution time from minutes to hours.
>
> My question is regarding the behavior of Conch when it is shut down.
> What i would like to do is to send a SIGINT or SIGKILL to the remote
> script so that it can terminate in an orderly fashion. I am using the
> channel.SSHChannel as a base class for my task. Is there a mechanism
> in Conch for sending this signal?

There's a mechanism for sending signals in SSH, although Conch doesn't
expose it directly.  The code looks something like this:

    channel.conn.sendRequest(channel, 'signal', NS('KILL'))

For more information on what kinds of signal names you can send and on
the 'signal' request generally, you should read RFC4254 section 6.9

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.jot.com/
AIM: z3penguin

From terry at jon.es  Fri Oct 24 13:40:01 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 24 Oct 2008 21:40:01 +0200
Subject: [Twisted-Python] Consensus on speed of deferred call/errback-style
	execution?
In-Reply-To: Your message at 16:03:39 on Friday, 24 October 2008
References: <18689.59625.326096.492013@jon.es>
	<20081024160339.6400.1373873889.divmod.xquotient.395@weber.divmod.com>
Message-ID: <18690.9361.886966.761432@jon.es>

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> I don't believe there's been any extensive profiling of
glyph> inlineCallbacks.  At least, none that I'm aware of.  I think what
glyph> you are remembering is that inlineCallbacks generally results in an
glyph> (often implicit, sometimes unintentional) loss of parallelism.

Yes, it's possible that the person I heard from informally was thinking of
this of had heard something along these lines, etc.

It's funny, Esteve and I were talking about code like your example just a
few days ago.  You have to know what you're doing. I agree the
best/simplest example is where you have some form of loop and you should
use a DeferredList, else you're implicitly serializing things that could be
launched virtually all at once and finishing in any order at all.

I'm interested not in those cases though, but in whether there's some
mechanical (due to Python) advantage to one style of coding versus another.

I might play a little more. I was going to write some code to generate
different varieties of behaviorally-equivalent but differently structured
code. In fact I think it wouldn't be hard to write something that could
write your code for you in a variety of ways. E.g., you could write
pseudo-code like

  a = A()
  if a < 45:
     b = B()
     c = a + b.hey() - C()
     if c:
       return D(12, c)
     else:
       return E()
  return F(a)

and something digs through this code, figures out (maybe via a decorator
used on functions returning a deferred - ugh, but it's just one suggestion)
which of A, B, C, D and E return deferreds and spits out code to handle
things for you.

I could say more, but I'm sure no-one would reply :-)

Thanks!

Terry



From exarkun at divmod.com  Fri Oct 24 14:27:05 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 24 Oct 2008 16:27:05 -0400
Subject: [Twisted-Python] Consensus on speed of deferred
	call/errback-style execution?
In-Reply-To: <18690.9361.886966.761432@jon.es>
Message-ID: <20081024202705.29191.1505350548.divmod.quotient.44313@ohm>

On Fri, 24 Oct 2008 21:40:01 +0200, Terry Jones <terry at jon.es> wrote:
> [snip]
>
>I might play a little more. I was going to write some code to generate
>different varieties of behaviorally-equivalent but differently structured
>code. In fact I think it wouldn't be hard to write something that could
>write your code for you in a variety of ways. E.g., you could write
>pseudo-code like
>
>  a = A()
>  if a < 45:
>     b = B()
>     c = a + b.hey() - C()
>     if c:
>       return D(12, c)
>     else:
>       return E()
>  return F(a)
>
>and something digs through this code, figures out (maybe via a decorator
>used on functions returning a deferred - ugh, but it's just one suggestion)
>which of A, B, C, D and E return deferreds and spits out code to handle
>things for you.

Possibly, but maybe trickier than you hope.  This is basically what is
called the "stackless transform" in PyPy.  It's about a thousand lines
for them to implement, and it only works on RPython, not Python.

Jean-Paul



From terry at jon.es  Fri Oct 24 14:46:16 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 24 Oct 2008 22:46:16 +0200
Subject: [Twisted-Python] Consensus on speed of deferred
	call/errback-style execution?
In-Reply-To: Your message at 16:27:05 on Friday, 24 October 2008
References: <18690.9361.886966.761432@jon.es>
	<20081024202705.29191.1505350548.divmod.quotient.44313@ohm>
Message-ID: <18690.13336.969162.404282@jon.es>

Hi JP

>>>>> "JP" == Jean-Paul Calderone <exarkun at divmod.com> writes:
JP> Possibly, but maybe trickier than you hope.  This is basically what is
JP> called the "stackless transform" in PyPy.  It's about a thousand lines
JP> for them to implement, and it only works on RPython, not Python.

Unfortunately, everything is trickier than I hope :-)

Thanks - I keep meaning to play with PyPy, but I never have. One day...

T



From daedalus at eigenmagic.com  Sat Oct 25 18:46:08 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Sun, 26 Oct 2008 11:46:08 +1100
Subject: [Twisted-Python] RAW Sockets, IP in UDP
In-Reply-To: <59acdf910810211147k2a2a5bddo1252f2114fc85a50@mail.gmail.com>
References: <59acdf910810211147k2a2a5bddo1252f2114fc85a50@mail.gmail.com>
Message-ID: <1224981968.29387.36.camel@fnord>

On Tue, 2008-10-21 at 20:47 +0200, Lars Reimann wrote:
> Hi all,
> 
> I am new to this list, but I have some hopefully simple questions for you.
> 
> I need to implement a listening RAW sockets which gives me all packets
> at that particular interface. Next, I need to put this data into a
> normal UDP container to send it to another host, where it is unpacked
> again.
> 
> I am studying all the docs now, but any hints would be greatly appreciated!

Hi Lars,

I had similar issues with the twisted.pair code, so I wrote up my own
implementation to do ICMP using Twisted.

Grab this file:
http://www.seafelt.com/software/sources/seafelt-backend_2.1.2-1.tar.gz

extract it, and look at lib/seafelt/icmp.py for some code you might be
able to use.

-- 
Justin Warren <daedalus at eigenmagic.com>




From exarkun at twistedmatrix.com  Sat Oct 25 22:05:11 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Oct 2008 04:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1224993911.89.1703512819@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081026/6772c837/attachment.html>

From andrewfr_ice at yahoo.com  Sun Oct 26 02:49:31 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 26 Oct 2008 01:49:31 -0700 (PDT)
Subject: [Twisted-Python] Re: Consensus on speed of deferred
	call/errback-style execution?
In-Reply-To: <E1KtlYa-0007ea-Gw@cube.twistedmatrix.com>
Message-ID: <404645.46308.qm@web34203.mail.mud.yahoo.com>

Hi Glyph:

> I think inlineCallbacks is neat,

InlineCallbacks are neat! InlineCallbacks perform much of what I do with Stackless Python and Twisted. One of these days, I would like to run tests to compare the two. I suspect there is additional overhead (from what I recall, I see stuff in the code like unwinding stacks/checks for infinite recursion)

>but its strength is really operations  that are truly conversational; >where the calling end of the conversation actually does need to wait for >each step of an asynchronous conversation to complete before moving on to >the next one. 

And a lot of the new Web APIs are conversational in nature! I think inlineCallbacks will grow in importance as web programmes move from mashups to orchestrations/choreographies.

Cheers,
Andrew


      



From b.levin at hvcc.edu  Tue Oct 28 08:42:49 2008
From: b.levin at hvcc.edu (Brian Levin)
Date: Tue, 28 Oct 2008 10:42:49 -0400 (EDT)
Subject: [Twisted-Python] Passing revieved rata and erroring out bad
 passowrds
Message-ID: <20081028104249.ALB71124@mpoint.hvcc.edu>

I apologizes if these are simple questions.  I am a complete newb when it comes to python and twisted.  I am trying to pass a command via ssh to a server.  I am having 2 problems.  I am hoping that someone can help me.  I have been unable to find answers in "the google".  

Problem 1: I am unable to pass the received data to a variable without creating a global.  As a general rule it is my understanding that the use of globals in python should be avoided.  If there is a better method for passing the data variable out of the dataReceived method I would prefer to use it.

Problem 2:  A bad password or username causes and infinite loop.  I need to find a way to cause an error or return a false value when the password or username is bad.

I have included my code below.  Any help would be most appreciated.  Thank you in advance

--Brian Levin

<code>

from twisted.conch.ssh import transport, userauth, connection, channel
from twisted.conch.ssh.common import NS
from twisted.internet import defer, protocol, reactor
from twisted.python import log
from getpass import getpass


class Transport(transport.SSHClientTransport):
    def verifyHostKey(self, hostKey, fingerprint):
        print 'host key fingerprint: %s' % fingerprint
        return defer.succeed(1)

    def connectionSecure(self):
        self.requestService(UserAuth(USER, Connection()))

class UserAuth(userauth.SSHUserAuthClient):
    def getPassword(self):
        return defer.succeed(getpass("password: "))
    def getPublicKey(self):
        return  # Empty implementation: always use password auth
class Connection(connection.SSHConnection):
    def serviceStarted(self):
        self.openChannel(Channel(2**16, 2**15, self))

class Channel(channel.SSHChannel):
	name = 'session'    # must use this exact string
	def openFailed(self, reason):
		print '"%s" failed: %s' % (CMD,reason)
	def channelOpen(self, data):
		self.welcome = data   # Might display/process welcome screen
		d = self.conn.sendRequest(self,'exec',NS(CMD),wantReply=1)
		
	def dataReceived(self, data):
		global test
		test = data

	def closed(self):
		self.loseConnection()
		reactor.stop()

USER = raw_input('User: ')
HOST = raw_input('Host: ')
CMD = raw_input('CMD: ')
protocol.ClientCreator(reactor, Transport).connectTCP(HOST, 22)
reactor.run()
print test

</code>



From exarkun at divmod.com  Tue Oct 28 09:19:55 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Oct 2008 10:19:55 -0500
Subject: [Twisted-Python] Passing revieved rata and erroring out bad
	passowrds
In-Reply-To: <20081028104249.ALB71124@mpoint.hvcc.edu>
Message-ID: <20081028151955.29191.1818215149.divmod.quotient.45883@ohm>

On Tue, 28 Oct 2008 10:42:49 -0400 (EDT), Brian Levin <b.levin at hvcc.edu> wrote:
>I apologizes if these are simple questions.  I am a complete newb when it comes to python and twisted.  I am trying to pass a command via ssh to a server.  I am having 2 problems.  I am hoping that someone can help me.  I have been unable to find answers in "the google".
>
>Problem 1: I am unable to pass the received data to a variable without creating a global.  As a general rule it is my understanding that the use of globals in python should be avoided.  If there is a better method for passing the data variable out of the dataReceived method I would prefer to use it.

I'm not sure what you mean by "pass the received data to a variable".  In
general, I think that it only makes sense to pass objects to functions.
What you do to variables is set them.  From looking at your code, I'm not
sure what you want to accomplish.  Your code sets a global variable and
later, when your program is done and about to exit, prints the value.  If
that's all you want to do, you could just print the value instead of setting
a variable to it.  I suspect you want to do something else, but I don't
know what.  Whatever it is, it will probably involve calling a function or
method of some object, probably passing the data you received (or some
transformation of it) as an argument.

>
>Problem 2:  A bad password or username causes and infinite loop.  I need to find a way to cause an error or return a false value when the password or username is bad.

I'm not sure about this one.

Jean-Paul



From Andy at newworldelectric.com  Tue Oct 28 13:36:13 2008
From: Andy at newworldelectric.com (Andy Fundinger)
Date: Tue, 28 Oct 2008 15:36:13 -0400
Subject: [Twisted-Python] Passing revieved rata and erroring out bad
	passowrds
In-Reply-To: <20081028151955.29191.1818215149.divmod.quotient.45883@ohm>
References: <20081028104249.ALB71124@mpoint.hvcc.edu>
	<20081028151955.29191.1818215149.divmod.quotient.45883@ohm>
Message-ID: <37d49ed40810281236h6c2d918alca85069c0f401f3@mail.gmail.com>

For the password problem, I think what you want to do is raise an
exception, which will in turn cause your defereds to call their error
backs.  In the error back you can handle the particular error however
you need to.  That's probably something you need to either setup in
the getpass module, alternatively, that may be setup already and just
waiting for you to addErrback() on it.

- Andy Fundinger

On Tue, Oct 28, 2008 at 11:19 AM, Jean-Paul Calderone
<exarkun at divmod.com> wrote:
> On Tue, 28 Oct 2008 10:42:49 -0400 (EDT), Brian Levin <b.levin at hvcc.edu>
> wrote:
>>
>> I apologizes if these are simple questions.  I am a complete newb when it
>> comes to python and twisted.  I am trying to pass a command via ssh to a
>> server.  I am having 2 problems.  I am hoping that someone can help me.  I
>> have been unable to find answers in "the google".
>>
>> Problem 2:  A bad password or username causes and infinite loop.  I need
>> to find a way to cause an error or return a false value when the password or
>> username is bad.
>
> I'm not sure about this one.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

Watch out for the invisible man.



From kevin.horn at gmail.com  Tue Oct 28 15:08:52 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 28 Oct 2008 16:08:52 -0500
Subject: [Twisted-Python] Passing revieved rata and erroring out bad
	passowrds
In-Reply-To: <37d49ed40810281236h6c2d918alca85069c0f401f3@mail.gmail.com>
References: <20081028104249.ALB71124@mpoint.hvcc.edu>
	<20081028151955.29191.1818215149.divmod.quotient.45883@ohm>
	<37d49ed40810281236h6c2d918alca85069c0f401f3@mail.gmail.com>
Message-ID: <562bcc10810281408j4442ed59x33c4a9202a710a3a@mail.gmail.com>

Assuming the getpass is the one the from the std lib, I don't see why you're
overriding getPassword at all.

according to the API docs, you should be able to get a custom prompt just by
adding a prompt parameter:
http://twistedmatrix.com/documents/8.1.0/api/twisted.conch.ssh.userauth.SSHUserAuthClient.html#getPassword

and you probably don't want to call succeed() on the deferred you are
returning, since that likely screws up the whole auth calback chain

if you were looking at this example:
http://www.devshed.com/c/a/Python/SSH-with-Twisted/4/
realize that it might be misleading, as the author overrides the __init__ of
his SSHUserAuthClient and passes the password in directly
(he does not prompt the user for it)

...or I could be misunderstanding the way the module works... :)

Good Luck!

Kevin Horn

On Tue, Oct 28, 2008 at 2:36 PM, Andy Fundinger
<Andy at newworldelectric.com>wrote:

> For the password problem, I think what you want to do is raise an
> exception, which will in turn cause your defereds to call their error
> backs.  In the error back you can handle the particular error however
> you need to.  That's probably something you need to either setup in
> the getpass module, alternatively, that may be setup already and just
> waiting for you to addErrback() on it.
>
> - Andy Fundinger
>
> On Tue, Oct 28, 2008 at 11:19 AM, Jean-Paul Calderone
> <exarkun at divmod.com> wrote:
> > On Tue, 28 Oct 2008 10:42:49 -0400 (EDT), Brian Levin <b.levin at hvcc.edu>
> > wrote:
> >>
> >> I apologizes if these are simple questions.  I am a complete newb when
> it
> >> comes to python and twisted.  I am trying to pass a command via ssh to a
> >> server.  I am having 2 problems.  I am hoping that someone can help me.
>  I
> >> have been unable to find answers in "the google".
> >>
> >> Problem 2:  A bad password or username causes and infinite loop.  I need
> >> to find a way to cause an error or return a false value when the
> password or
> >> username is bad.
> >
> > I'm not sure about this one.
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> Blog:  http://channel3b.wordpress.com
> Second Life Name:  Ciemaar Flintoff
>
> Watch out for the invisible man.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081028/6b03f45e/attachment.html>

From matusis at yahoo.com  Wed Oct 29 00:40:38 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Tue, 28 Oct 2008 23:40:38 -0700
Subject: [Twisted-Python] Shared memory for multiple twisted servers
Message-ID: <01ff01c93991$41cd1410$c5673c30$@com>

I am thinking of writing 8 identical twisted servers that would run on an 8
core machine and would have shared memory objects (lists or maybe
dictionaries), that they can all access and modify. Perhaps somewhat similar
to multiprocessing module in python 2.6.

What is the best way of doing this? 




From glyph at divmod.com  Wed Oct 29 01:02:40 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 29 Oct 2008 07:02:40 -0000
Subject: [Twisted-Python] Shared memory for multiple twisted servers
In-Reply-To: <01ff01c93991$41cd1410$c5673c30$@com>
References: <01ff01c93991$41cd1410$c5673c30$@com>
Message-ID: <20081029070240.6400.1988208918.divmod.xquotient.508@weber.divmod.com>


On 06:40 am, matusis at yahoo.com wrote:
>I am thinking of writing 8 identical twisted servers that would run on 
>an 8
>core machine and would have shared memory objects (lists or maybe
>dictionaries), that they can all access and modify. Perhaps somewhat 
>similar
>to multiprocessing module in python 2.6.
>
>What is the best way of doing this?

You might consider having a look at this:

    https://launchpad.net/ampoule

I haven't personally gotten to use it yet, but I've been following its 
development with great interest.  Assuming it does what it says on the 
tin, I think it is likely to be folded in to Twisted proper at some 
point.



From manuel at vikingosegundo.de  Wed Oct 29 10:57:03 2008
From: manuel at vikingosegundo.de (Manuel Meyer)
Date: Wed, 29 Oct 2008 18:57:03 +0200
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
	<m3prm3noi6.fsf@neo.luffy.cx>
	<59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>
	<050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>
Message-ID: <21F89D3F-B066-4F0B-9B0A-BA8F1CD36793@vikingosegundo.de>

>
>> But I don't know how to inform IRCServer about changes in the site/ 
>> db. Maybe by adding another network protocol to the twisted  
>> application, where django's signals could leave a note?
>
> I may be missing something, but if you keep all your data in the DB,  
> there's no need to notify the irc server of changes to the DB.
>
> The only time you'll need this user information (it seems) is while  
> responding to /join and /list requests. Just read the DB at that time.
>
> What's nice about this is the DB takes care of most if not all of  
> your synchronization requirements, so you have far fewer concurrency  
> issues to think about than if you were broadcasting changes from the  
> web app to the irc server.

I couldn't come online for quite awhile....

No, you didnt miss anything, I missed to explain new thoughts I came  
up with:

If the irc server is already connected with the django site, why not  
offer users the possibility of chatting via js-powered chat like in  
facebook. But therefor the irc server must be informed somehow.

Manuel



From manuel at vikingosegundo.de  Wed Oct 29 10:59:05 2008
From: manuel at vikingosegundo.de (Manuel Meyer)
Date: Wed, 29 Oct 2008 18:59:05 +0200
Subject: [Twisted-Python] irc server run by twisted and (probably) django
In-Reply-To: <9bb390e70810172230x104a2cf7ufd13536d1f7bd9a6@mail.gmail.com>
References: <EB043FFF-41CE-4707-BD59-1E3C40A2D956@vikingosegundo.de>
	<m3prm3noi6.fsf@neo.luffy.cx>
	<59327C64-E93E-4915-A73F-3DDDBD0FE9C6@vikingosegundo.de>
	<050EFC83-99BB-4B9E-93EF-2B826A508076@bubblehouse.org>
	<9bb390e70810172230x104a2cf7ufd13536d1f7bd9a6@mail.gmail.com>
Message-ID: <455E37F9-B9A2-45D6-8F2B-5261BDAAF69D@vikingosegundo.de>

Thanks for you great reply! I will have a look on it!

> I've done a similar type project but with a mailserver built using
> twisted.mail. I used django.contrib.admin to help manage the db for
> the mailserver config. From the mailservers, I was able to get by with
> 5 min Looping Calls to the database to build the required config data
> and just cached the data until the next successful db call .  While
> not entirely applicable to your problem,  I wanted to bring it up
> because of the slightly different choice I made on how to gather data
> out of the database. As the previous poster mentioned, I didn't want
> to mess around with concurrency and decided that my mailservers (2 of
> them now) would not care about each other and just get their config
> data out of the database.
>
> Where I also differ is I couldn't afford a sql query per each
> connections MAIL FROM or RCPT TO. So I had to make it slightly more
> flexible while still meeting the requirement of a database stored
> config.  I basically choose a delayed Pull approach.  One upshot is I
> coded the sql calls so that the config data survives a database
> failure and just keeps working with it's previous data grab.  I also
> coded a twisted.web service administration page that allows for a
> manual reload of the data on the individual server if an emergency
> came up and I absolutely needed the config to change.  It's a
> different flavor you can use if you know your data is fairly static
> and the number of people changing the data is low.
>
> Now back to your problem... I've also used the spread toolkit before
> (no not the twisted.spread.. and yes... OSS name collision). If I were
> writing such an app, and thought I'd be using a number of servers for
> the service; I'd consider using spread to keep things the same on all
> servers and for anything else I needed quickly.  You'd still want a
> database, you just aren't always using sql to pull data that you need.
> You are using the spread bus and your IRC twisted app (more likely a
> service within your twisted app) is just listening for the data that
> you deem high priority.   Commonly referred to as a Push approach.
> http://www.spread.org
>
> Someone out there has done some work with spread and twisted.  I don't
> know how well the code works. As for django, it'd be pretty easy to
> send a spread message.
> http://anarkystic.com/devdev/spreader-intro
>
> Hope you get some ideas.
>
> -rob
>
> On Thu, Oct 16, 2008 at 1:56 PM, Phil Christensen <phil at bubblehouse.org 
> > wrote:
>> On Oct 16, 2008, at 4:26 PM, Manuel Meyer wrote:
>>>
>>> But I don't know how to inform IRCServer about changes in the site/ 
>>> db.
>>> Maybe by adding another network protocol to the twisted  
>>> application, where
>>> django's signals could leave a note?
>>
>> I may be missing something, but if you keep all your data in the  
>> DB, there's
>> no need to notify the irc server of changes to the DB.
>>
>> The only time you'll need this user information (it seems) is while
>> responding to /join and /list requests. Just read the DB at that  
>> time.
>>
>> What's nice about this is the DB takes care of most if not all of  
>> your
>> synchronization requirements, so you have far fewer concurrency  
>> issues to
>> think about than if you were broadcasting changes from the web app  
>> to the
>> irc server.
>>
>> -phil
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From esteve at fluidinfo.com  Wed Oct 29 15:29:11 2008
From: esteve at fluidinfo.com (Esteve Fernandez)
Date: Wed, 29 Oct 2008 22:29:11 +0100
Subject: [Twisted-Python] txAMQP 0.2 released, now with Thrift superpowers
Message-ID: <200810292229.11444.esteve@fluidinfo.com>

Hi all,

I'm pleased to announce that Fluidinfo is releasing txAMQP 0.2, 
(codenamed "Peanut butter and chocolate") [1] which includes support for 
Thrift, and various minor fixes.

What does this mean? Well, it makes easier to build a high performance [2]
massively scalable [3] RPC [4] architecture in Python.

We hope you'll enjoy it!

PS: you'll need to apply the patch at [5] to Thrift to add support for
Twisted

1 - txAMQP http://launchpad.net/txamqp
2 - thanks to Twisted http://www.twistedmatrix.com
3 - thanks to AMQP http://www.amqp.org
4 - thanks to Thrift http://incubator.apache.org/thrift
5 - https://issues.apache.org/jira/browse/THRIFT-148



From newptcai at gmail.com  Thu Oct 30 07:17:07 2008
From: newptcai at gmail.com (Peter Cai)
Date: Thu, 30 Oct 2008 21:17:07 +0800
Subject: [Twisted-Python] Change A UDP based server to TCP based
Message-ID: <befee6d80810300617r272becc6gc5a48a94ce1a2b0f@mail.gmail.com>

Hi all,

I found twisted have a module called SIP which implements parts of
RFC3261, Session Initial Protocol.

As I am going to write an experimental SIP server, this module seems
to be very useful for me.

But, one problem : it's based on UDP.

I skimmed the code and I think maybe I can "Cut and Copy" some code of
this module to implement my own TCP SIP server.

But the idea of "cut and copy" is really annoying.

What will you do in my situation?

BTW, if you are going to write a protocol which supports both UDP and TCP,

what is your design going to be like?



From washort at twistedmatrix.com  Thu Oct 30 07:55:18 2008
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 30 Oct 2008 09:55:18 -0400
Subject: [Twisted-Python] SIP TCP support
In-Reply-To: <befee6d80810300617r272becc6gc5a48a94ce1a2b0f@mail.gmail.com>
References: <befee6d80810300617r272becc6gc5a48a94ce1a2b0f@mail.gmail.com>
Message-ID: <20081030135518.GK22704@divmod.org>

On Thu, Oct 30, 2008 at 09:17:07PM +0800, Peter Cai wrote:
> Hi all,
> 
> I found twisted have a module called SIP which implements parts of
> RFC3261, Session Initial Protocol.

Most of the SIP code in Twisted is based on the obsolete RFC 2543. A
more compliant version has been developed here:
http://divmod.org/trac/browser/trunk/Sine

At some point this code will be moved into Twisted.


> As I am going to write an experimental SIP server, this module seems
> to be very useful for me.
> 
> But, one problem : it's based on UDP.
> 
> I skimmed the code and I think maybe I can "Cut and Copy" some code of
> this module to implement my own TCP SIP server.

It's more complicated than that -- the protocol behaviour for SIP is
different when transported over TCP instead of UDP. (See section
10.5.2 in RFC 3261.) But much of the code can be shared between the
two.
 
> But the idea of "cut and copy" is really annoying.
> 
> What will you do in my situation?

Contribute to Sine -- sine.sip.SIPTransport inherits from
DatagramProtocol and so is UDP-only at the moment. Ideally, most of
its behaviour could move to a mixin that a TCP SIP transport class
could inherit from as well.
 
> BTW, if you are going to write a protocol which supports both UDP and TCP,
> 
> what is your design going to be like?

As I described above, write a protocol class for UDP and for TCP that
inherits from a common mixin class.



From pjacobi.de at googlemail.com  Thu Oct 30 16:45:00 2008
From: pjacobi.de at googlemail.com (Peter Jacobi)
Date: Thu, 30 Oct 2008 23:45:00 +0100
Subject: [Twisted-Python] callLater -- only when idle
Message-ID: <2dcdf68e0810301545j3b9e62c1n91c848d280d885e2@mail.gmail.com>

I'd like to schedule a delayed call for being done after n seconds of
idling, i.e. n seconds after the last event was dispatched.

I assume this can be done by resetting  the delayed call from every
event handler, but this seems to be a silly solution.

Any suggestions for a better solution?


Regards,
Peter



From exarkun at divmod.com  Thu Oct 30 16:52:37 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 30 Oct 2008 17:52:37 -0500
Subject: [Twisted-Python] callLater -- only when idle
In-Reply-To: <2dcdf68e0810301545j3b9e62c1n91c848d280d885e2@mail.gmail.com>
Message-ID: <20081030225237.29191.978512341.divmod.quotient.47082@ohm>

On Thu, 30 Oct 2008 23:45:00 +0100, Peter Jacobi <pjacobi.de at googlemail.com> wrote:
>I'd like to schedule a delayed call for being done after n seconds of
>idling, i.e. n seconds after the last event was dispatched.
>
>I assume this can be done by resetting  the delayed call from every
>event handler, but this seems to be a silly solution.
>
>Any suggestions for a better solution?
>

This doesn't work very well.  There are events that are purely internal
to reactor implementations.  There's no guarantee that these won't happen
at least every N seconds, preventing your code from every running.  There
are events that are internal to protocol implementations or other higher
level APIs - for example, many protocols implement idle timeouts, so
they are sources of additional timing events which you can't directly
observe; as an optimization, the Twisted Web server uses a timing event
that fires once a second to manage the timestamp string is needs to write
to the request log.

You really need to specify the set of event sources inclusively, not
globally.  Fortunately this doesn't mean you need to add code to every
event handler you have.  You can wrap each event handler in a general
purpose object which resets your timer and then forwards the event to
the original handler.  Just wrap the handlers which should reset your
countdown and all the other stuff that's going on won't get in your way.

Jean-Paul



From newptcai at gmail.com  Thu Oct 30 20:24:56 2008
From: newptcai at gmail.com (Peter Cai)
Date: Fri, 31 Oct 2008 10:24:56 +0800
Subject: [Twisted-Python] SIP TCP support
In-Reply-To: <20081030135518.GK22704@divmod.org>
References: <befee6d80810300617r272becc6gc5a48a94ce1a2b0f@mail.gmail.com>
	<20081030135518.GK22704@divmod.org>
Message-ID: <befee6d80810301924x448755ebx148458f2e59ef46f@mail.gmail.com>

Hi, thanks for your useful information.

But from the change log, the project sine has not been modified for a
least 4 month.

Have you tried it?  Could it work now?

On Thu, Oct 30, 2008 at 9:55 PM, Allen Short <washort at twistedmatrix.com> wrote:
> On Thu, Oct 30, 2008 at 09:17:07PM +0800, Peter Cai wrote:
>> Hi all,
>>
>> I found twisted have a module called SIP which implements parts of
>> RFC3261, Session Initial Protocol.
>
> Most of the SIP code in Twisted is based on the obsolete RFC 2543. A
> more compliant version has been developed here:
> http://divmod.org/trac/browser/trunk/Sine
>
> At some point this code will be moved into Twisted.
>
>
>> As I am going to write an experimental SIP server, this module seems
>> to be very useful for me.
>>
>> But, one problem : it's based on UDP.
>>
>> I skimmed the code and I think maybe I can "Cut and Copy" some code of
>> this module to implement my own TCP SIP server.
>
> It's more complicated than that -- the protocol behaviour for SIP is
> different when transported over TCP instead of UDP. (See section
> 10.5.2 in RFC 3261.) But much of the code can be shared between the
> two.
>
>> But the idea of "cut and copy" is really annoying.
>>
>> What will you do in my situation?
>
> Contribute to Sine -- sine.sip.SIPTransport inherits from
> DatagramProtocol and so is UDP-only at the moment. Ideally, most of
> its behaviour could move to a mixin that a TCP SIP transport class
> could inherit from as well.
>
>> BTW, if you are going to write a protocol which supports both UDP and TCP,
>>
>> what is your design going to be like?
>
> As I described above, write a protocol class for UDP and for TCP that
> inherits from a common mixin class.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
有一种人，不知道是因为DNA的变异还是前世的夙缘，总是无法安稳下来。他们的生命之流如同咆哮奔涌的大河，没有一刻能够停顿下来。在寂静无人的深夜里，无梦相扰的安睡中，心中也有猛兽会随时醒来，躁动不安，永无宁日。

From blair.bethwaite at gmail.com  Thu Oct 30 23:52:26 2008
From: blair.bethwaite at gmail.com (Blair Bethwaite)
Date: Fri, 31 Oct 2008 16:52:26 +1100
Subject: [Twisted-Python] Event notification and general RPC in Twisted...
Message-ID: <ab42a7c0810302252k576137d1ub2a39246ef6cdac4@mail.gmail.com>

Hi all,

I'm thinking about using Twisted to rewrite some communications in a
Grid computing application.
E.g.:

[JobServer]1 ---------- *[Proxy]1 ----------- *[Agents]

Agents get jobs, report status, results, etc through Proxy to
JobServer. Agents are often distributed across a private network that
has no external interface, hence the proxy, which is run on a machine
between the private network and internet. Also, the proxy may do some
caching/queuing of particular messages - especially where the number
of agents behind it is large.

What we have at present is a TCP socket server however we're starting
to hit scalability issues and on top of that our future plans
necessitate a notification framework. I've been digging around on
twistedmatrix.com and in the book but so far am having trouble finding
any guidance or the level of detail that tells me whether Twisted has
what we need, some bits of which are:

- we'd like to use a persistent stream/connection, at least between
the JobServer and Proxy (traffic frequency will be reasonably high)
- it needs to be interoperable with java (is there PB for java?)
- each end of the connection should be able to register for and get
notifications from the other (e.g. Agent gives a heartbeat, JobServer
tells Agent to stop)
- sometimes the Proxy might be behind a firewall and only able to
connect out, we need to be able to use that connection to go back as
above
- we want to dynamically configure streaming connections between Proxies

Hopefully that's enough context for you to point at modules and tell
whether these are appropriate questions:
Can I re-use a TCP stream for multiple XML-RPC or PB operations?
If so, would it make sense to have the client (e.g. Proxy or Agent)
initiate the connection and then make a rpc (e.g. "notify me of
anything relevant") to the server which would eventually return when
something relevant came along - triggering a callback in the client...
wash, rinse, repeat?

Sorry if I'm overlooking something that already answers this, it
doesn't seem like something too unique to have not been asked
before...

Regards,
-Blair

-- 
In science one tries to tell people, in such a way
as to be understood by everyone, something that
no one ever knew before. But in poetry, it's the
exact opposite.
 - Paul Dirac



From py.adriano at gmail.com  Fri Oct 31 03:18:21 2008
From: py.adriano at gmail.com (Adriano Marques)
Date: Fri, 31 Oct 2008 10:18:21 +0100
Subject: [Twisted-Python] Passing arguments while running a twistd
	application
Message-ID: <29ec21540810310218g56501613i338159c5e622e86d@mail.gmail.com>

Hello folks,

I have a twisted application, which formely was run with command line
arguments which were used during runtime, eg: I was passing the path
to the log file as argument. Then, I decided to make my app run
through twistd as a tac file but then I'm not able to pass command
line arguments anymore. Is there any way to overcome this issue?

I'm running something like this:

$ twistd -y my_twisted_script.tac my_program_arguments

Then twistd is returning the following:

<twistd_help />
twistd: Unknown command: my_program_arguments


Cheers!

-- 
Adriano Monteiro Marques

http://adriano-marques.blogspot.com
http://www.umitproject.org
http://www.pythonbenelux.org

"Don't stay in bed, unless you can make money in bed." - George Burns



From terry at jon.es  Fri Oct 31 05:42:52 2008
From: terry at jon.es (Terry Jones)
Date: Fri, 31 Oct 2008 12:42:52 +0100
Subject: [Twisted-Python] Passing arguments while running a twistd
	application
In-Reply-To: Your message at 10:18:21 on Friday, 31 October 2008
References: <29ec21540810310218g56501613i338159c5e622e86d@mail.gmail.com>
Message-ID: <18698.61244.704425.437134@jon.es>

>>>>> "Adriano" == Adriano Marques <py.adriano at gmail.com> writes:
Adriano> I have a twisted application, which formely was run with command
Adriano> line arguments which were used during runtime, eg: I was passing
Adriano> the path to the log file as argument. Then, I decided to make my
Adriano> app run through twistd as a tac file but then I'm not able to pass
Adriano> command line arguments anymore. Is there any way to overcome this
Adriano> issue?

I also ran into this, and asked for some way to pass args but got told
(paraphrasing, from memory) that that's not the way to do it...

The way to do it seems to be to convert your application to be a Twisted
plugin. It's not too hard.  Then you make sure there's a twisted/plugins
dir accessible from your path (with no __init__.py files in/under it). Then
twistd will find your plugin (just run twistd with no options and you
should see your plugin name listed at the bottom among the commands). Then
you can add options processing by subclassing the Options class in
twisted.python.usage.

Sorry to be so terse - no time. The above does work though, and seems to be
the Twisted way. Rough (untested) guideline code below.

Terry

---

from zope.interface import implements
from twisted.python import usage
from twisted.plugin import IPlugin
from twisted.application.service import IServiceMaker
from ???? import myservice

class Options(usage.Options):
    optFlags = [
        ['verbose', None, 'If True, be verbose.'],
    ]
    optParameters = [
        ['port', 'p', '0', 'The port number to listen on.'],
    ]

class MyServiceMaker(object):
    implements(IServiceMaker, IPlugin)
    # The tapname will appear in the output of twistd when run with no args.
    # Use twistd -n my-plugin-name
    # to invoke it.
    tapname = 'my-plugin-name'
    description = 'My snazzy service.'
    options = Options

    def makeService(self, options):
        return myservice(
            options['port'], options['verbose'])

serviceMaker = MyServiceMaker()



From exarkun at divmod.com  Fri Oct 31 07:12:19 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 31 Oct 2008 08:12:19 -0500
Subject: [Twisted-Python] Passing arguments while running a twistd
	application
In-Reply-To: <18698.61244.704425.437134@jon.es>
Message-ID: <20081031131219.29191.45950424.divmod.quotient.47384@ohm>

On Fri, 31 Oct 2008 12:42:52 +0100, Terry Jones <terry at jon.es> wrote:
>>>>>> "Adriano" == Adriano Marques <py.adriano at gmail.com> writes:
>Adriano> I have a twisted application, which formely was run with command
>Adriano> line arguments which were used during runtime, eg: I was passing
>Adriano> the path to the log file as argument. Then, I decided to make my
>Adriano> app run through twistd as a tac file but then I'm not able to pass
>Adriano> command line arguments anymore. Is there any way to overcome this
>Adriano> issue?
>
>I also ran into this, and asked for some way to pass args but got told
>(paraphrasing, from memory) that that's not the way to do it...

To add slightly to this correct answer:

The "tac" in a .tac file stands for "Twisted Application Configuration".
The reason you cannot pass extra arguments on the command line when using
a .tac file is that the intent is for all configuration to be in the .tac
file.  So if this isn't appropriate for your application, a twistd plugin
is probably a better solution.

>The way to do it seems to be to convert your application to be a Twisted
>plugin. It's not too hard.  Then you make sure there's a twisted/plugins
>dir accessible from your path (with no __init__.py files in/under it). Then
>twistd will find your plugin (just run twistd with no options and you
>should see your plugin name listed at the bottom among the commands). Then
>you can add options processing by subclassing the Options class in
>twisted.python.usage.
>
>Sorry to be so terse - no time. The above does work though, and seems to be
>the Twisted way. Rough (untested) guideline code below.
>
>Terry
>
>---
>
>from zope.interface import implements
>from twisted.python import usage
>from twisted.plugin import IPlugin
>from twisted.application.service import IServiceMaker
>from ???? import myservice
>
>class Options(usage.Options):
>    optFlags = [
>        ['verbose', None, 'If True, be verbose.'],
>    ]
>    optParameters = [
>        ['port', 'p', '0', 'The port number to listen on.'],
>    ]
>
>class MyServiceMaker(object):
>    implements(IServiceMaker, IPlugin)
>    # The tapname will appear in the output of twistd when run with no args.
>    # Use twistd -n my-plugin-name
>    # to invoke it.
>    tapname = 'my-plugin-name'
>    description = 'My snazzy service.'
>    options = Options
>
>    def makeService(self, options):
>        return myservice(
>            options['port'], options['verbose'])
>
>serviceMaker = MyServiceMaker()
>

Fortunately, in case the above misses anything or you'd like any parts
of it explained, there is documentation about writing plugins. :)

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
http://twistedmatrix.com/projects/core/documentation/howto/tap.html

Jean-Paul



From dripton at ripton.net  Fri Oct 31 10:14:10 2008
From: dripton at ripton.net (David Ripton)
Date: Fri, 31 Oct 2008 09:14:10 -0700
Subject: [Twisted-Python] Event notification and general RPC in Twisted...
In-Reply-To: <ab42a7c0810302252k576137d1ub2a39246ef6cdac4@mail.gmail.com>
References: <ab42a7c0810302252k576137d1ub2a39246ef6cdac4@mail.gmail.com>
Message-ID: <20081031161410.GA6794@vidar.dreamhost.com>

On 2008.10.31 16:52:26 +1100, Blair Bethwaite wrote:
> I'm thinking about using Twisted to rewrite some communications in a
> Grid computing application.
> E.g.:
> 
> [JobServer]1 ---------- *[Proxy]1 ----------- *[Agents]
> 
> Agents get jobs, report status, results, etc through Proxy to
> JobServer. Agents are often distributed across a private network that
> has no external interface, hence the proxy, which is run on a machine
> between the private network and internet. Also, the proxy may do some
> caching/queuing of particular messages - especially where the number
> of agents behind it is large.
> 
> What we have at present is a TCP socket server however we're starting
> to hit scalability issues and on top of that our future plans
> necessitate a notification framework. I've been digging around on
> twistedmatrix.com and in the book but so far am having trouble finding
> any guidance or the level of detail that tells me whether Twisted has
> what we need, some bits of which are:
> 
> - we'd like to use a persistent stream/connection, at least between
> the JobServer and Proxy (traffic frequency will be reasonably high)
> - it needs to be interoperable with java (is there PB for java?)

There is a Java version of PB.  http://itamarst.org/software/twistedjava/

I've never used the Java version, so I can't say whether it works well.
The Python version is excellent.

> - each end of the connection should be able to register for and get
> notifications from the other (e.g. Agent gives a heartbeat, JobServer
> tells Agent to stop)
> - sometimes the Proxy might be behind a firewall and only able to
> connect out, we need to be able to use that connection to go back as
> above

PB allows both ends of the connection to send and receive at any time,
over a single connection.  I use it for a game where multiple clients
connect via TCP to a server, and then the clients send messages to the
server whenever they want, and the server sends messages to one or more
clients whenever it wants (over the original connections initiated by
the clients, so the clients don't need to open any holes in their
firewalls), and everything just stinking works.

> - we want to dynamically configure streaming connections between Proxies

Yes, you can add more connections at any time.  You have to write your
own simple routing code.

> Hopefully that's enough context for you to point at modules and tell
> whether these are appropriate questions:
> Can I re-use a TCP stream for multiple XML-RPC or PB operations?

PB, yes.

That's not the way XML-RPC is typically done.  Clearly you could make a
protocol that uses XML-RPC payload over a persistent connection.  But
you'd lose the ability to use arbitrary XML-RPC libraries unmodified,
which is probably the main benefit of choosing XML-RPC.

Also, XML-RPC is an inherently rigid request/response protocol and thus
fails some of your other requirements.  If the client and server are
both asynchronously initiating requests over the same connection, you
need additional information to distinguish a new request from a response
to the other side's last request.  And if you send multiple requests
over the same connection without waiting for a response to the first,
you need to send more information correlating requests with responses.
All doable, but not XML-RPC anymore.

> If so, would it make sense to have the client (e.g. Proxy or Agent)
> initiate the connection and then make a rpc (e.g. "notify me of
> anything relevant") to the server which would eventually return when
> something relevant came along - triggering a callback in the client...
> wash, rinse, repeat?

Yes, you make a remote call which returns a deferred.  You attach
a callback and an errback to the deferred.  When the remote call
finishes, either your callback or your errback fires, with your return
value or exception information.

I recommend writing something like a small chat system first, using the
exact protocol you're considering, before tackling your real problem.
If you can get Java clients and Python clients chatting through a chat
proxy that can forward through other chat proxies, then you know you can
make it work.  When you write a little chatbot and run lots of instances
in parallel and nothing chokes, then you know you can make it scale.

If not for the Java requirement, I would say that Twisted is a good fit,
and that you could use either PB or AMP, depending on whether you want
to pass around complex types or simple ones.  But if you need Java,
I don't know.

-- 
David Ripton    dripton at ripton.net



From cayson.z at gmail.com  Fri Oct 31 22:03:48 2008
From: cayson.z at gmail.com (Boern)
Date: Sat, 1 Nov 2008 12:03:48 +0800
Subject: [Twisted-Python] anybody can recommend the projects based on
	twisted, I need refer, please!
Message-ID: <be0f6540810312103r3bd04463l5d64100f6c4393f1@mail.gmail.com>

Hi,all:
   I am ready to develop a simple network app that the server will be based
on twisted and client will be C＋＋（QT GUI）,so there`s any corresponding
resource or open source projects to refer,thanks!

-- 
Boern Parx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20081101/ca62f460/attachment.html>

From glyph at divmod.com  Fri Oct 31 23:26:14 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 01 Nov 2008 05:26:14 -0000
Subject: [Twisted-Python] Event notification and general RPC in Twisted...
In-Reply-To: <20081031161410.GA6794@vidar.dreamhost.com>
References: <ab42a7c0810302252k576137d1ub2a39246ef6cdac4@mail.gmail.com>
	<20081031161410.GA6794@vidar.dreamhost.com>
Message-ID: <20081101052614.6400.1024818287.divmod.xquotient.538@weber.divmod.com>


On 31 Oct, 04:14 pm, dripton at ripton.net wrote:
>On 2008.10.31 16:52:26 +1100, Blair Bethwaite wrote:

>If not for the Java requirement, I would say that Twisted is a good 
>fit,
>and that you could use either PB or AMP, depending on whether you want
>to pass around complex types or simple ones.  But if you need Java,
>I don't know.

AMP is specifically designed to be easy to implement and extend in 
different languages.  I've already done a basic Java implementation, 
<http://bit.ly/3AGNhs>.  It's not particularly well packaged or 
maintained, but that's mainly because nobody has voiced an interest in 
it yet; the code does work and has been used in production.

If you're voicing such an interest then perhaps someone will step 
forward to clean it up :).



