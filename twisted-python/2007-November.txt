From brendoncolby at gmail.com  Thu Nov  1 10:22:29 2007
From: brendoncolby at gmail.com (Brendon Colby)
Date: Thu, 1 Nov 2007 09:22:29 -0500
Subject: [Twisted-Python] Deferreds and Trial -- getting my timing right
In-Reply-To: <20071031171539.8162.1924538823.divmod.quotient.30171@ohm>
References: <e64b001e0710311001s4ad86f06wa7bd54a28a6c4614@mail.gmail.com>
	<20071031171539.8162.1924538823.divmod.quotient.30171@ohm>
Message-ID: <e64b001e0711010722q7b255146i6f7eddeb9419f551@mail.gmail.com>

On 10/31/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> I dunno.  I can't remember the last time I put any code in a factory's
> __init__ or its startFactory method.  Maybe you could call the
> startFactory
> method in your test?


Hrmm...good idea. I think I know what I need to do now. Thanks for the
pointer.

Brendon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071101/31b2b533/attachment.htm 

From exarkun at twistedmatrix.com  Sun Nov  4 00:05:04 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Nov 2007 04:05:04 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1194149104.43.1150492133@twistedmatrix.com

Bug summary
______________________
Summary for 2007-10-28 through 2007-11-04
Bugs opened: 10    Bugs closed: 15  Total open bugs: 1032 (-5)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +0  |Highest:  -5          |Core:   +1             
|Enhancement:  -4  |High:     +0          |Mail:   +0             
|Task:         +1  |Normal:   +1          |Names:  -1             
                   |Low:      +0          |Trial:  -1             
                   |Lowest:   +1          |Web:    +0             
                                          |Web2:   -2             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2858] test_stdio.StandardInputOutputTestCase.test_lastWriteReceived fails if a warning is printed during the tests (opened by therve) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2858

[#2643] twisted.python.modules does not account for memory/disk inconsistencies when scanning packages (opened by glyph) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2643

[#2858] test_stdio.StandardInputOutputTestCase.test_lastWriteReceived fails if a warning is printed during the tests (opened by therve) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2858

                    ===== High =====
[#2857] test_stdio doesn't correctly pass the reactor to subprocesses (opened by therve)
    defect          core       http://twistedmatrix.com/trac/ticket/2857

[#2859] twisted web FilePath uri-encoding bypass (directory traversal) (opened by jhart) (CLOSED, invalid)
    defect          web        http://twistedmatrix.com/trac/ticket/2859

                    ===== Normal =====
[#2860] Maybe we need assertNotWarns (opened by therve)
    task            core       http://twistedmatrix.com/trac/ticket/2860

[#2863] twisted.protocols.amp.AMP can't find its factory (opened by dripton)
    defect          core       http://twistedmatrix.com/trac/ticket/2863

[#2864] imap tests leave reactor in an unclean state (opened by radix)
    defect          mail       http://twistedmatrix.com/trac/ticket/2864

                    ===== Low =====
[#2861] Deferred cleans Failures more times than it needs to (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2861

                    ===== Lowest =====
[#2862] [PATCH] Tiny doc tweak for twisted.protocols.amp (opened by dripton)
    defect          core       http://twistedmatrix.com/trac/ticket/2862



Closed Bugs
______________________
                    ===== Highest =====
[#2091] Make reactor unclean warnings reported errors (opened by jml, closed by radix, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2091

[#2643] twisted.python.modules does not account for memory/disk inconsistencies when scanning packages (opened by glyph, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2643

[#2266] twisted.mail.test.test_mail.ProcessAliasTestCase leaves the reactor unclean (opened by jml, closed by therve, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2266

[#2849] A reentrant addCallbacks on a Deferred adds to mid-chain (opened by Peaker, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2849

[#2669] Avoid looping to find the next time that divides by interval (opened by Peaker, closed by Peaker, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2669

[#2813] logstr initialization should happen before calling makeConnection in tcp.BaseClient (opened by therve, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2813

[#2492] Unhandled socket error when making DNS query (opened by p1mrx, closed by therve, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/2492

[#2858] test_stdio.StandardInputOutputTestCase.test_lastWriteReceived fails if a warning is printed during the tests (opened by therve, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2858

[#2836] limits of web2.resource.PostableResource can't be customized (opened by therve, closed by therve, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2836

[#2858] test_stdio.StandardInputOutputTestCase.test_lastWriteReceived fails if a warning is printed during the tests (opened by therve, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2858

                    ===== High =====
[#2269] twisted.test.test_pb.NewStyleCachedTestCase leaves the reactor unclean (opened by jml, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2269

[#2859] twisted web FilePath uri-encoding bypass (directory traversal) (opened by jhart, closed by exarkun, invalid)
    defect          web        http://twistedmatrix.com/trac/ticket/2859

                    ===== Normal =====
[#1768] Synchronous Task Queue (opened by edsuom, closed by glyph, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1768

[#2805] Cooperator adds a callback to iterated deferreds which does not pass on the original result (opened by rwall, closed by therve, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/2805

                    ===== Low =====
[#2467] twisted.web2.client.http.testConn is a pretty bad example and doesn't work in the default configuration (opened by tv, closed by therve, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2467



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2864] imap tests leave reactor in an unclean state (since 2007-11-03 18:33:43).

Mean open ticket age: 560 days, 6:32:57.875374.
Median: 462 days, 7:46:03.250374.
Standard deviation: 406 days, 0:27:03.405592.
Interquartile range: 507 days, 3:57:36.

Mean time between ticket creation and ticket resolution: 123 days, 16:29:00.414484.
Median: 15 days, 4:20:02.
Standard deviation is 226 days, 16:11:21.249058.
The interquartile range is 133 days, 4:31:15.

Mean time spent in review: 69 days, 4:50:09.346471.
Median: 4 days, 9:08:37.
Standard deviation: 154 days, 5:04:12.761773.
Interquartile range: 31 days, 7:00:28.

Mean number of times a ticket is reviewed: 2.00223214286.
Median: 1
Standard deviation: 1.6589837734.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    10 unique ticket reporters
    6 unique ticket reviewers
    4 unique ticket resolvers
In the last 24 weeks,
    63 unique ticket reporters
    15 unique ticket reviewers
    13 unique ticket resolvers
In the last 48 weeks,
    152 unique ticket reporters
    18 unique ticket reviewers
    25 unique ticket resolvers




From pf_moore at yahoo.co.uk  Sun Nov  4 12:52:35 2007
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Sun, 04 Nov 2007 17:52:35 +0000
Subject: [Twisted-Python] mktap/twistd in a Windows service
Message-ID: <fgl0q5$70i$1@ger.gmane.org>

I know this is a FAQ, but it's not in the FAQ list and I've had no luck 
finding a good answer via web or list searches (Windows is a lousy 
search term, and service isn't much use in a Twisted context...)

I want to run a tiny non-authoritative DNS server on my PC. I've never 
done this before, but twisted names looks ideal. The documentation 
(http://twistedmatrix.com/projects/names/documentation/howto/names.html) 
says I just need to do

     mktap dns --recursive --cache
     twistd -f dns.tap

and indeed this works fine. I seem to recall some time ago seeing 
postings to the effect that tap format files were out of favour, but I 
don't follow the twisted list much, so I don't know if this is still 
true. Nevertheless, it works so who cares?

However, I want to run this as a Windows service. Ideally, twistd would 
have a --install-service flag or something, but it doesn't so I went 
looking, and found postings covering tap2ntsvc which creates services 
from tap files, but it seems to have been replaced by ntsvc, which only 
handles .tac files :-(

I get the impression that the idea is that .tac files are easy to create 
by hand, but as I know *nothing* about twisted names (and don't really 
want to - all I want is to run a DNS server!) it's not as easy as it 
might be...

So, can someone tell me:

1. What is the currently favoured form for Twisted application files?
2. How do I make one for twisted names (the equivalent of the mktap line 
above) and better still how do I generalise this for any mktap command?
3. How do I run it? (twistd, presumably)
4. How do I make that file run as a Windows service?


I believe, from what I've found, that the answers are:
1. .tac
2. Don't know - not sure there's a generic answer.
3. twistd -noy
4. ntsvc

In which case, the documentation really needs to be updated to explain 
.tac files throughout, instead of mktap. And I need someone to write me 
a dns.tac file :-(

Ideally, this should be written up as a FAQ or HOWTO somewhere. I'll 
volunteer to write it up, as long as someone will maintain it - I'm not 
in a position to do so (I use twisted occasionally, but have no need or 
desire to follow development versions or discussions on the list). I 
don't want to bother doing a write-up, if it won't get included in the 
docs/FAQ and maintained, though...

Thanks in advance for any help,
Paul.




From db3l.net at gmail.com  Sun Nov  4 14:55:23 2007
From: db3l.net at gmail.com (David Bolen)
Date: Sun, 04 Nov 2007 14:55:23 -0500
Subject: [Twisted-Python] Re: mktap/twistd in a Windows service
References: <fgl0q5$70i$1@ger.gmane.org>
Message-ID: <m2fxzllr9w.fsf@valheru.db3l.homeip.net>

Paul Moore <pf_moore at yahoo.co.uk> writes:

> I want to run a tiny non-authoritative DNS server on my PC. I've never
> done this before, but twisted names looks ideal. The documentation
> (http://twistedmatrix.com/projects/names/documentation/howto/names.html)
> says I just need to do
>
>     mktap dns --recursive --cache
>     twistd -f dns.tap
>
> and indeed this works fine. I seem to recall some time ago seeing
> postings to the effect that tap format files were out of favour, but I
> don't follow the twisted list much, so I don't know if this is still
> true. Nevertheless, it works so who cares?
>
> However, I want to run this as a Windows service. Ideally, twistd
> would have a --install-service flag or something, but it doesn't so I
> went looking, and found postings covering tap2ntsvc which creates
> services from tap files, but it seems to have been replaced by ntsvc,
> which only handles .tac files :-(

For what it's worth, I rarely use twistd for my Twisted applications,
and it's not that much work to run Twisted-based code as an NT service
without any external utilities.

You can set things up with the pywin32's service support
(win32service/util), and just have your main entry point run Twisted's
reactor.  The shutdown code stops the reactor and also terminates the
service.  Note that service startup runs the main entry point in a
second thread, but that's the "main" thread from Twisted's
perspective.  It does mix up signal handling under Windows, so I
typically disable that in the reactor.  Also, service control messages
(like stop) are run in the service thread (true application main
thread), so you need to call into Twisted's thread to stop the
reactor.

Here's a tiny startup script that provides service support for some
application - I've removed any special logging initialization and
registry parameter support for clarity.

          - - - - - - - - - - - - - - - - - - - - - - - - -

import os, sys
import win32service,win32serviceutil

from twisted.internet import reactor
from twisted.python import log

# Ensure basic thread support is enabled for twisted
from twisted.python import threadable
threadable.init(1)


class Service(win32serviceutil.ServiceFramework):

    _svc_name_ = '{servicename}'
    _svc_display_name_ = '{Display name for Service}'

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        log.msg('Stopping {server}...')
        reactor.callFromThread(reactor.stop)

    def SvcDoRun(self):

        #
        # ... Initialize application here
        #

        log.msg('{Server} running...')
        reactor.run(installSignalHandlers=0)


if __name__ == "__main__":
    win32serviceutil.HandleCommandLine(Service)

              - - - - - - - - - - - - - - - - - - - - - - - - -

The above provides for install/uninstall based on the default command
line handling in win32serviceutil, and of course normal Windows
control ("net start", "net stop") afterwards.  Registering as a Python
module only runs on the machine with Python/pywin32 installed, but you
can package the above with something like py2exe.

You can then get as complicated as you want from here.  There are some
helper functions in win32serviceutil (Get/SetServiceCustomOption) that
can simplify storing startup information in the registry if you like.

Alternatively, I've implemented my own equivalent to HandleCommandLine
in some cases where I wanted better control (or preferred "--install"
to just "install"), wanted to work in a stdin/stdout debug mode when
run directly, or needed to synchronize startup handling with the
py2exe version, when I packaged the service into an executable.

Note that I'm not sure how the above plays with Twisted's service
framework, as I never got comfortable with using it.  But aside from that
anything beyond the basics above are general python service questions,
and not specific to Twisted applications.

-- David




From exarkun at divmod.com  Sun Nov  4 16:23:52 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 4 Nov 2007 16:23:52 -0500
Subject: [Twisted-Python] mktap/twistd in a Windows service
In-Reply-To: <fgl0q5$70i$1@ger.gmane.org>
Message-ID: <20071104212352.8162.2082903035.divmod.quotient.31594@ohm>

On Sun, 04 Nov 2007 17:52:35 +0000, Paul Moore <pf_moore at yahoo.co.uk> wrote:
>I know this is a FAQ, but it's not in the FAQ list and I've had no luck 
>finding a good answer via web or list searches (Windows is a lousy search 
>term, and service isn't much use in a Twisted context...)
>
>I want to run a tiny non-authoritative DNS server on my PC. I've never done 
>this before, but twisted names looks ideal. The documentation 
>(http://twistedmatrix.com/projects/names/documentation/howto/names.html) 
>says I just need to do
>
>     mktap dns --recursive --cache
>     twistd -f dns.tap
>

In recent versions of Twisted, you can simplify the above to this:

    twistd dns --recursive --cache

This skips the tap phase: it creates the same application mktap would have
created, but instead of putting it in the tap file, it just runs it.

>and indeed this works fine. I seem to recall some time ago seeing postings 
>to the effect that tap format files were out of favour, but I don't follow 
>the twisted list much, so I don't know if this is still true. Nevertheless, 
>it works so who cares?

Quite so.

>
>However, I want to run this as a Windows service. Ideally, twistd would have 
>a --install-service flag or something, but it doesn't so I went looking, and 
>found postings covering tap2ntsvc which creates services from tap files, but 
>it seems to have been replaced by ntsvc, which only handles .tac files :-(

It would be very excellent if twistd had a --install-service flag.  There is
a relatively minimal level of interest in Windows-specific functionality
among the currently active Twisted developers, though.  This means that it
isn't very likely that any of us will undertake to add this feature.

That doesn't mean that we'll never implement it, nor that we wouldn't accept
a patch which implements it from someone else who is more interested in it
than we are.  If someone provides the functionality, with unit tests, then
we'll gladly incorporate and maintain it.  I'm not sure if you would be
interested in doing this work or not;  I'm directing this as much at you as
at all of the other users of Twisted on Windows who I know are out there and
mostly remain silently.

>
>I get the impression that the idea is that .tac files are easy to create by 
>hand, but as I know *nothing* about twisted names (and don't really want to 
>- all I want is to run a DNS server!) it's not as easy as it might be...

They are, more or less, although they are harder to make than tap files. ;)

>
>So, can someone tell me:
>
>1. What is the currently favoured form for Twisted application files?

It all depends on the use-case.  For all of the services distributed with
Twisted itself, tap files offer very little over the persistence-free form
of twistd I gave an example of above.  Since tap files contain pickled data,
they have all the problems of pickle (lack of introspectability, problems
with compatibility, security); if these aren't problems, then tap files
might be okay.  On the other hand, many uses of twistd don't actually need
any persistence, so using tap files doesn't actually provide any benefits.

>2. How do I make one for twisted names (the equivalent of the mktap line 
>above) and better still how do I generalise this for any mktap command?

See twisted.names.tap.makeService - this is the function `mktap dns? is
calling to create the object it will pickle into the tap file.  Your tac
file can call it directly with the desired configuration and add the
resulting service to an application object.  This will give you a tac
which does the same thing as your mktap-produced tap file.  You can
read more about writing tac files here:

  http://twistedmatrix.com/projects/core/documentation/howto/application.html

>3. How do I run it? (twistd, presumably)

As you said below, twistd -noy.

>4. How do I make that file run as a Windows service?
>

I've never used ntsvc, so I can't say if that's right, but presumably
it is at least close.

There isn't any reason that if ntsvc works with tac files it couldn't
also work with tap files, though.  So another solution might be to explore
adding tap file support to ntsvc.  The interface for loading a tac file is
really the same as the interface for loading a tap file, in fact, so I am
slightly surprised ntsvc doesn't work with tap files.

>
>I believe, from what I've found, that the answers are:
>1. .tac
>2. Don't know - not sure there's a generic answer.
>3. twistd -noy
>4. ntsvc
>
>In which case, the documentation really needs to be updated to explain .tac 
>files throughout, instead of mktap. And I need someone to write me a dns.tac 
>file :-(
>
>Ideally, this should be written up as a FAQ or HOWTO somewhere. I'll 
>volunteer to write it up, as long as someone will maintain it - I'm not in a 
>position to do so (I use twisted occasionally, but have no need or desire to 
>follow development versions or discussions on the list). I don't want to 
>bother doing a write-up, if it won't get included in the docs/FAQ and 
>maintained, though...

Anything (accurate, coherent) you want to write up we'd be glad to add to
the Twisted repository and include on the website, in releases, etc.

Jean-Paul



From nitro at dr-code.org  Mon Nov  5 13:05:12 2007
From: nitro at dr-code.org (Nitro)
Date: Mon, 05 Nov 2007 19:05:12 +0100
Subject: [Twisted-Python] Perspective broker and pipes
In-Reply-To: <47288946.8010305@eepatents.com>
References: <op.t01wywmez3pzfc@nitrogenycs2> <47288946.8010305@eepatents.com>
Message-ID: <op.t1by6yq5z3pzfc@nitrogenycs2>

Am 31.10.2007, 14:55 Uhr, schrieb Ed Suominen <general at eepatents.com>:

> The processworker module of my AsynQueue package spawns a process and
> makes a PB connection with it via stdin/stdout. Perhaps you could adapt
> it for your purposes.
>
> http://foss.eepatents.com/trac/AsynQueue/browser/projects/AsynQueue/trunk/asynqueue/processworker.py
>
> Best regards, Ed

Thanks, Ed!

This helped me to get started. I am using a modified version of StdIO  
along with _pollingfile now. It works really nicely!

-Matthias



From manlio_perillo at libero.it  Mon Nov  5 13:49:13 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 05 Nov 2007 19:49:13 +0100
Subject: [Twisted-Python] Perspective broker and pipes
In-Reply-To: <20071031133313.8162.1793855910.divmod.quotient.30097@ohm>
References: <20071031133313.8162.1793855910.divmod.quotient.30097@ohm>
Message-ID: <472F65A9.7040002@libero.it>

Jean-Paul Calderone ha scritto:
> On Wed, 31 Oct 2007 14:24:50 +0100, Nitro <nitro at dr-code.org> wrote:
>>
>> [snip]
>>
>> How big is the actual performance impact? The throughput right now is  
>> ~10- 50 kbyte/s. Is there a better way than pipes? They were just twaitformulipleobjecthe 
>> first thing that came to my mind.
> 
> TCP connections are the thing which is better. ;)  Now that I think of it,
> though, I don't know anything about how pipes are implemented on Windows.
> 

Windows named pipes should be the equivalent of Unix local sockets.
They support overlapped (aka non blocking/asynchronous) access.
http://msdn2.microsoft.com/en-us/library/aa365788.aspx
and an example:
http://msdn2.microsoft.com/en-us/library/aa365603.aspx

If I remember well, MySQL on Windows supports named pipes.

 > [...]


Manlio Perillo



From manlio_perillo at libero.it  Mon Nov  5 13:55:45 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 05 Nov 2007 19:55:45 +0100
Subject: [Twisted-Python] Perspective broker and pipes
In-Reply-To: <20071031133313.8162.1793855910.divmod.quotient.30097@ohm>
References: <20071031133313.8162.1793855910.divmod.quotient.30097@ohm>
Message-ID: <472F6731.5080009@libero.it>

Jean-Paul Calderone ha scritto:
> On Wed, 31 Oct 2007 14:24:50 +0100, Nitro <nitro at dr-code.org> wrote:
>>
>> [snip]
>>
>> How big is the actual performance impact? The throughput right now is  
>> ~10- 50 kbyte/s. Is there a better way than pipes? They were just twaitformulipleobjecthe 
>> first thing that came to my mind.
> 
> TCP connections are the thing which is better. ;)  Now that I think of it,
> though, I don't know anything about how pipes are implemented on Windows.
> 

Windows named pipes should be the equivalent of Unix local sockets.
They support overlapped (aka non blocking/asynchronous) access.
http://msdn2.microsoft.com/en-us/library/aa365788.aspx
and an example:
http://msdn2.microsoft.com/en-us/library/aa365603.aspx

If I remember well, MySQL on Windows supports named pipes.

> [...]


Manlio Perillo



From pf_moore at yahoo.co.uk  Wed Nov  7 18:43:41 2007
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Wed, 07 Nov 2007 23:43:41 +0000
Subject: [Twisted-Python] Re: mktap/twistd in a Windows service
In-Reply-To: <20071104212352.8162.2082903035.divmod.quotient.31594@ohm>
References: <fgl0q5$70i$1@ger.gmane.org>
	<20071104212352.8162.2082903035.divmod.quotient.31594@ohm>
Message-ID: <fgtig2$q07$1@ger.gmane.org>

Jean-Paul Calderone wrote:
>> However, I want to run this as a Windows service. Ideally, twistd 
>> would have a --install-service flag or something, but it doesn't so I 
>> went looking, and found postings covering tap2ntsvc which creates 
>> services from tap files, but it seems to have been replaced by ntsvc, 
>> which only handles .tac files :-(
> 
> It would be very excellent if twistd had a --install-service flag.  
> There is a relatively minimal level of interest in Windows-specific functionality
> among the currently active Twisted developers, though.  This means that it
> isn't very likely that any of us will undertake to add this feature.
> 
> That doesn't mean that we'll never implement it, nor that we wouldn't 
> accept a patch which implements it from someone else who is more interested
 > in it than we are.  If someone provides the functionality, with unit 
tests,
> then we'll gladly incorporate and maintain it.  I'm not sure if you would be
> interested in doing this work or not;  I'm directing this as much at you as
> at all of the other users of Twisted on Windows who I know are out there 
> and mostly remain silently.

Thanks for the information. I would love to say that I would look at 
this, but I really don't have the knowledge of Twisted, or the time to 
do a decent job. I'll certainly add it to my to do list, but although I 
love twisted in theory, in practice, I don't write enough of the type of 
software it's good at, for me to more than dabble. My main use, as I 
hinted at in my original mail, is to just use the prepackaged 
functionality - for which you have my eternal gratitude. (As it happens, 
the need I originally had for a DNS server has passed - I found an 
easier workaround for the specific case I was interested in).

If anyone does want to work on this, I'd certainly be happy to help 
where I can - I have a reasonable amount of Windows coding experience, 
both in Python and otherwise.

Thanks once again for the detailed reply.
Paul.




From matusis at yahoo.com  Thu Nov  8 17:19:54 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Thu, 8 Nov 2007 14:19:54 -0800
Subject: [Twisted-Python] profiling live twisted application
Message-ID: <066a01c82255$7d5276a0$77f763e0$@com>

What is the best non-intrusive way to profile a live twisted application?

 

We have TCP servers with epoll reactors.

We want to optimize them as our usage grows.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071108/efe4d4a3/attachment.htm 

From maarten at treewalker.org  Thu Nov  8 18:40:04 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Fri, 9 Nov 2007 01:40:04 +0200
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <066a01c82255$7d5276a0$77f763e0$@com>
References: <066a01c82255$7d5276a0$77f763e0$@com>
Message-ID: <200711090040.08241.maarten@treewalker.org>

On Thursday 08 November 2007, Alec Matusis wrote:

> What is the best non-intrusive way to profile a live twisted application?

I'm not sure it's possible to do profiling in a non-intrusive way: the more 
detailed measurements you want to take, the more you're going to slow down 
execution. I hear quantum mechanics has similar problems ;)

> We have TCP servers with epoll reactors.
>
> We want to optimize them as our usage grows.

What I did for our web app is add an option to log the time it took to 
handle each page fetch. By looking at the log, you can spot pages that are 
always slow, pages which are slow for certain inputs and pages which vary 
in speed.

There are several profilers available for Python, but their overhead is 
probably too much to use in a live environment. Maybe you can duplicate the 
data sets and requests from the live environment in a test environment 
though and profile your server there.

Here is some example code:

if _timeRender:
	from time import time
if _profileRender:
	from hotshot import Profile

[...]

	if _timeRender:
		start = time()
	if _profileRender:
		profile = Profile('request.prof')
		profile.runcall(page.respond, req)
		profile.close()
	else:
		page.respond(req)
	if _timeRender:
		end = time()
		print 'Responding took %1.3f seconds' % (end - start)

HotShot profile results are binary files, read the Python library 
documentation to learn how you can create human readable output from them.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20071109/ead574a0/attachment.pgp 

From matusis at yahoo.com  Thu Nov  8 19:07:14 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Thu, 8 Nov 2007 16:07:14 -0800
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <200711090040.08241.maarten@treewalker.org>
References: <066a01c82255$7d5276a0$77f763e0$@com>
	<200711090040.08241.maarten@treewalker.org>
Message-ID: <06ba01c82264$7bf49680$73ddc380$@com>

> What I did for our web app is add an option to log the time it took to
> handle each page fetch. By looking at the log, you can spot pages that
> are always slow, pages which are slow for certain inputs and pages
> which vary in speed.


Unfortunately we need more detailed results than this. The bottlenecks are in our code, we would like to know which functions take most time, or even which loop within a function. 

The set of client commands to our TCP server is rather large, and the order of these commands is random, so I modeling in dev environment involves potentially wrong pre-assumptions about which commands/functions are most CPU intensive.

It would be nice to at least get the list of functions with total times spend in each function after say 1 min or server run.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Maarten ter Huurne
> Sent: Thursday, November 08, 2007 3:40 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] profiling live twisted application
> 
> On Thursday 08 November 2007, Alec Matusis wrote:
> 
> > What is the best non-intrusive way to profile a live twisted
> application?
> 
> I'm not sure it's possible to do profiling in a non-intrusive way: the
> more detailed measurements you want to take, the more you're going to
> slow down execution. I hear quantum mechanics has similar problems ;)
> 
> > We have TCP servers with epoll reactors.
> >
> > We want to optimize them as our usage grows.
> 
> What I did for our web app is add an option to log the time it took to
> handle each page fetch. By looking at the log, you can spot pages that
> are always slow, pages which are slow for certain inputs and pages
> which vary in speed.
> 
> There are several profilers available for Python, but their overhead is
> probably too much to use in a live environment. Maybe you can duplicate
> the data sets and requests from the live environment in a test
> environment though and profile your server there.
> 
> Here is some example code:
> 
> if _timeRender:
> 	from time import time
> if _profileRender:
> 	from hotshot import Profile
> 
> [...]
> 
> 	if _timeRender:
> 		start = time()
> 	if _profileRender:
> 		profile = Profile('request.prof')
> 		profile.runcall(page.respond, req)
> 		profile.close()
> 	else:
> 		page.respond(req)
> 	if _timeRender:
> 		end = time()
> 		print 'Responding took %1.3f seconds' % (end - start)
> 
> HotShot profile results are binary files, read the Python library
> documentation to learn how you can create human readable output from
> them.
> 
> Bye,
> 		Maarten




From seadog at sealabs.net  Fri Nov  9 10:01:38 2007
From: seadog at sealabs.net (Giorgos Logiotatidis)
Date: Fri, 09 Nov 2007 17:01:38 +0200
Subject: [Twisted-Python] DirDBM possible bug
Message-ID: <1194620498.19697.13.camel@localhost>

Hello,
	I get an 'RuntimeError: maximum recursion depth exceeded' when
executing the following code. 

#!/usr/bin/env python
from twisted.persisted import dirdbm
from twisted.words.xish import domish

e = domish.Element(('', 'foo'))
d = dirdbm.Shelf("/tmp/foo")
d["200711090000"] = e
l = d["200711090000"]

Have I wrote something wrong or this is a dirdbm bug?

Thanks in advance,
-gl






From itamar at itamarst.org  Fri Nov  9 10:05:09 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 09 Nov 2007 10:05:09 -0500
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <066a01c82255$7d5276a0$77f763e0$@com>
References: <066a01c82255$7d5276a0$77f763e0$@com>
Message-ID: <1194620709.13986.20.camel@localhost.localdomain>


On Thu, 2007-11-08 at 14:19 -0800, Alec Matusis wrote:
> What is the best non-intrusive way to profile a live twisted
> application?

twistd has a --profile option; you can get it to use either profile.py
or hotshot. At some point it will hopefully support cProfile. You could
also just use cProfile directly.

The problem of course is that this doesn't tell you when I/O is a
bottleneck, nor does it tell you which high-level tasks are the problem.





From christopher.zorn at gmail.com  Fri Nov  9 11:20:09 2007
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Fri, 9 Nov 2007 11:20:09 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <1194620498.19697.13.camel@localhost>
References: <1194620498.19697.13.camel@localhost>
Message-ID: <149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>

There is a bug, I have attached a patch. It would be cool if we could get
this fixed upstream. :) I guess I should file a ticket.

On Nov 9, 2007 10:01 AM, Giorgos Logiotatidis <seadog at sealabs.net> wrote:

> Hello,
>        I get an 'RuntimeError: maximum recursion depth exceeded' when
> executing the following code.
>
> #!/usr/bin/env python
> from twisted.persisted import dirdbm
> from twisted.words.xish import domish
>
> e = domish.Element(('', 'foo'))
> d = dirdbm.Shelf("/tmp/foo")
> d["200711090000"] = e
> l = d["200711090000"]
>
> Have I wrote something wrong or this is a dirdbm bug?
>
> Thanks in advance,
> -gl
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071109/c898158f/attachment.htm 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tw.diff
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071109/c898158f/attachment.txt 

From itamar at itamarst.org  Fri Nov  9 11:54:10 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 09 Nov 2007 11:54:10 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>
References: <1194620498.19697.13.camel@localhost>
	<149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>
Message-ID: <1194627251.13986.26.camel@localhost.localdomain>

On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
> There is a bug, I have attached a patch. It would be cool if we could
> get this fixed upstream. :) I guess I should file a ticket. 

Yes, please do.




From exarkun at divmod.com  Fri Nov  9 12:04:59 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Nov 2007 12:04:59 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <1194627251.13986.26.camel@localhost.localdomain>
Message-ID: <20071109170459.8162.318957855.divmod.quotient.33861@ohm>

On Fri, 09 Nov 2007 11:54:10 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
>> There is a bug, I have attached a patch. It would be cool if we could
>> get this fixed upstream. :) I guess I should file a ticket.
>
>Yes, please do.
>

Certainly do, and we'll apply a patch (unit tests are required) as soon as
possible.

However, I would strongly recommend against using DirDBM.  It's not very
good at all.

Jean-Paul



From seadog at sealabs.net  Fri Nov  9 12:09:29 2007
From: seadog at sealabs.net (Giorgos Logiotatidis)
Date: Fri, 09 Nov 2007 19:09:29 +0200
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>
References: <1194620498.19697.13.camel@localhost>
	<149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>
Message-ID: <1194628169.19697.20.camel@localhost>


On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
> There is a bug, I have attached a patch. It would be cool if we could
> get this fixed upstream. :) I guess I should file a ticket. 

Ok works now! 
thanks for patching,
gl




From christopher.zorn at gmail.com  Fri Nov  9 12:23:31 2007
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Fri, 9 Nov 2007 12:23:31 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <20071109170459.8162.318957855.divmod.quotient.33861@ohm>
References: <1194627251.13986.26.camel@localhost.localdomain>
	<20071109170459.8162.318957855.divmod.quotient.33861@ohm>
Message-ID: <149014b90711090923m3fd2ab2jefccbf9117c7fd4c@mail.gmail.com>

On Nov 9, 2007 12:04 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Fri, 09 Nov 2007 11:54:10 -0500, Itamar Shtull-Trauring <
> itamar at itamarst.org> wrote:
> >On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
> >> There is a bug, I have attached a patch. It would be cool if we could
> >> get this fixed upstream. :) I guess I should file a ticket.
> >
> >Yes, please do.
> >
>
> Certainly do, and we'll apply a patch (unit tests are required) as soon as
> possible.
>
> However, I would strongly recommend against using DirDBM.  It's not very
> good at all.
>

Well, this is a bug for pickling domish elements. It is not  exactly a
dirdbm bug.



>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071109/95190439/attachment.htm 

From seadog at sealabs.net  Fri Nov  9 12:27:48 2007
From: seadog at sealabs.net (Giorgos Logiotatidis)
Date: Fri, 09 Nov 2007 19:27:48 +0200
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <20071109170459.8162.318957855.divmod.quotient.33861@ohm>
References: <20071109170459.8162.318957855.divmod.quotient.33861@ohm>
Message-ID: <1194629268.19697.25.camel@localhost>


On Fri, 2007-11-09 at 12:04 -0500, Jean-Paul Calderone wrote:

> However, I would strongly recommend against using DirDBM.  It's not very
> good at all.

Why isn't good? Poor code implemantation? I want to use it on an
embedded system, to store dictionaries on flash memories so I can reduce
memory footprint. Should I implement a different solution?

-gl




From christopher.zorn at gmail.com  Fri Nov  9 12:34:25 2007
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Fri, 9 Nov 2007 12:34:25 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <1194628169.19697.20.camel@localhost>
References: <1194620498.19697.13.camel@localhost>
	<149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>
	<1194628169.19697.20.camel@localhost>
Message-ID: <149014b90711090934l7e8fa427t921cab7dda654387@mail.gmail.com>

On Nov 9, 2007 12:09 PM, Giorgos Logiotatidis <seadog at sealabs.net> wrote:

>
> On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
> > There is a bug, I have attached a patch. It would be cool if we could
> > get this fixed upstream. :) I guess I should file a ticket.
>
> Ok works now!
> thanks for patching,
>

Cool, ticket filed http://twistedmatrix.com/trac/ticket/2880


> gl
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071109/045c4a5e/attachment.htm 

From exarkun at divmod.com  Fri Nov  9 13:34:23 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Nov 2007 13:34:23 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <149014b90711090923m3fd2ab2jefccbf9117c7fd4c@mail.gmail.com>
Message-ID: <20071109183423.8162.209720259.divmod.quotient.33880@ohm>

On Fri, 9 Nov 2007 12:23:31 -0500, Christopher Zorn <christopher.zorn at gmail.com> wrote:
>On Nov 9, 2007 12:04 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>> On Fri, 09 Nov 2007 11:54:10 -0500, Itamar Shtull-Trauring <
>> itamar at itamarst.org> wrote:
>> >On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
>> >> There is a bug, I have attached a patch. It would be cool if we could
>> >> get this fixed upstream. :) I guess I should file a ticket.
>> >
>> >Yes, please do.
>> >
>>
>> Certainly do, and we'll apply a patch (unit tests are required) as soon as
>> possible.
>>
>> However, I would strongly recommend against using DirDBM.  It's not very
>> good at all.
>>
>
>Well, this is a bug for pickling domish elements. It is not  exactly a
>dirdbm bug.
>

Still, I suggest not using DirDBM - or, more generally, anything based on
pickle for long-term persistence of objects.  Pickling is very complex and
there is no guarantee that an object from Twisted (eg, domish.Element) which
is pickled in Twisted X will be unpickleable in Twisted X+1.  If that is not
a problematic constraint, then perhaps using DirDBM is not a catastrophic
decision.

Jean-Paul



From exarkun at divmod.com  Fri Nov  9 13:39:44 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Nov 2007 13:39:44 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <1194629268.19697.25.camel@localhost>
Message-ID: <20071109183944.8162.641687057.divmod.quotient.33882@ohm>

On Fri, 09 Nov 2007 19:27:48 +0200, Giorgos Logiotatidis <seadog at sealabs.net> wrote:
>
>On Fri, 2007-11-09 at 12:04 -0500, Jean-Paul Calderone wrote:
>
>> However, I would strongly recommend against using DirDBM.  It's not very
>> good at all.
>
>Why isn't good? Poor code implemantation? I want to use it on an
>embedded system, to store dictionaries on flash memories so I can reduce
>memory footprint. Should I implement a different solution?

There seems to be a fairly obvious persistence mechanism for
domish.Elements: XML (as a string, in a normal file).

Why bring DirDBM, with the overhead of pickling, into it?

Aside from this, there's no guarantee that Elements you pickle
now will unpickle if you ever switch to a different version of
Twisted.  I suppose that since you are developing for an
embedded system, this may not be a serious concern.  DirDBM still
seems a bit out of the way, though.

There are also issues with the quality of the code and what features
it offers.  DirDBMs cannot be naively moved around in the filesystem,
they have certain undocumented restrictions (keys() relies on you not
adding any extra entries to the DirDBM directory, for example), and so
on.  As persistence systems go, it doesn't have a lot to recommend it.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Nov 11 00:05:03 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Nov 2007 05:05:03 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1194757503.38.1382350187@twistedmatrix.com

Bug summary
______________________
Summary for 2007-11-04 through 2007-11-11
Bugs opened: 17    Bugs closed: 19  Total open bugs: 1030 (-2)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +0  |Highest:  -7          |Conch:    -1           
|Enhancement:  +0  |Normal:   +5          |Core:     +3           
|Task:         -1  |Low:      +1          |Ftp:      +1           
                                          |Mail:     -3           
                                          |Trial:    -1           
                                          |Web:      +0           
                                          |Website:  -1           
                                          |Words:    +1           


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2866] unclean reactor error from test_newStyleCache on with glib2 reactor (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2866

[#2867] unclean reactor error from testPortforward on glib2 reactor (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2867

[#2868] unclean reactor error from testHostAddress on OS X (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2868

[#2869] unclean reactor error from test_asynchronousException on OS X (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2869

[#2870] unclean reactor error from test_producer on glib2 reactor (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2870

[#2871] modules.getModule should be able to find and load .so/.pyd/.dll files (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2871

[#2855] Add tests for ftp.IFTPShell (opened by therve) (CLOSED, fixed)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/2855

                    ===== Normal =====
[#2865] imap tests (especially Timeout) should use a fake clock (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2865

[#2872] "ImportError: No module named web" under CentOS 5.0-x86_64 (opened by robsteele) (CLOSED, worksforme)
    defect          web        http://twistedmatrix.com/trac/ticket/2872

[#2873] "ImportError: No module named web" under CentOS 5.0-x86_64 (opened by robsteele) (CLOSED, worksforme)
    defect          web        http://twistedmatrix.com/trac/ticket/2873

[#2874] _sslverify.problemsFromTransport should be deprecated (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2874

[#2875] IFTPShell access implementations are not complete (opened by therve)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/2875

[#2876] twisted.test.test_pb.NewCredTestCase.test_clientConnectionLost failing on windows (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2876

[#2878] Intermittent unclean errors from twisted.test.test_ftp.FTPServerPasvDataConnectionTestCase.testTwoDirLIST on OS X (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2878

[#2879] twisted.test.test_pb.BrokerTestCase.test_publishable fails on windows sometimes (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2879

[#2880] t.w.xish.domish.Element recursion error (opened by twonds)
    defect          words      http://twistedmatrix.com/trac/ticket/2880

                    ===== Low =====
[#2877] OpenSSL fails to report a SSL error on client side when a certificate is required (sometimes) (opened by therve)
    defect          core       http://twistedmatrix.com/trac/ticket/2877



Closed Bugs
______________________
                    ===== Highest =====
[#2864] imap tests leave reactor in an unclean state (opened by radix, closed by radix, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2864

[#2866] unclean reactor error from test_newStyleCache on with glib2 reactor (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2866

[#2867] unclean reactor error from testPortforward on glib2 reactor (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2867

[#2826] twisted.internet.tcp.Server.repstr wrong when listening on port 0 (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2826

[#2855] Add tests for ftp.IFTPShell (opened by therve, closed by therve, fixed)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/2855

[#1879] Enable PBClientFactory and PBServerFactory to use custom security options. (opened by pgstudy, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1879

[#1795] Trial feature for simulating missing modules for a test run (opened by exarkun, closed by therve, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1795

[#2729] remove Deferred.setTimeout usage from twisted.mail (opened by exarkun, closed by exarkun, fixed)
    task            mail       http://twistedmatrix.com/trac/ticket/2729

[#2766] test_sslverify uses deprecated function log.flushErrors (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2766

[#2855] Add tests for ftp.IFTPShell (opened by therve, closed by therve, fixed)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/2855

[#2547] API Docs has no info about attributes (opened by redbaron, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2547

[#2832] twisted.mail.test.test_smtp.TimeoutTestCase.testSMTPClient fails intermittently due to timing issues (opened by exarkun, closed by therve, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2832

[#2679] twisted.conch.ssh.keys has poor tests. (opened by z3p, closed by z3p, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2679

[#2425] t.i.tcp should not use os.strerror for Windows socket error codes (opened by ghazel, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2425

[#2483] Undesirable garbage collector/spawnProcess interaction (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2483

                    ===== Normal =====
[#2863] twisted.protocols.amp.AMP can't find its factory (opened by dripton, closed by therve, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/2863

[#2872] "ImportError: No module named web" under CentOS 5.0-x86_64 (opened by robsteele, closed by exarkun, worksforme)
    defect          web        http://twistedmatrix.com/trac/ticket/2872

[#2873] "ImportError: No module named web" under CentOS 5.0-x86_64 (opened by robsteele, closed by exarkun, worksforme)
    defect          web        http://twistedmatrix.com/trac/ticket/2873

[#435 ] Refactor PTYProcess to share code with t.i.process.Process (opened by spiv, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/435



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2880] t.w.xish.domish.Element recursion error (since 2007-11-09 12:29:41).

Mean open ticket age: 564 days, 18:21:02.842628.
Median: 467 days, 13:26:47.196997.
Standard deviation: 407 days, 7:27:10.022976.
Interquartile range: 506 days, 23:37:43.

Mean time between ticket creation and ticket resolution: 124 days, 12:18:04.738003.
Median: 15 days, 13:27:30.
Standard deviation is 228 days, 3:44:50.955021.
The interquartile range is 136 days, 12:06:03.

Mean time spent in review: 69 days, 3:13:24.308141.
Median: 4 days, 4:50:20.
Standard deviation: 155 days, 12:00:09.185671.
Interquartile range: 31 days, 6:56:15.

Mean number of times a ticket is reviewed: 2.03719912473.
Median: 1
Standard deviation: 1.70105361537.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    12 unique ticket reporters
    5 unique ticket reviewers
    5 unique ticket resolvers
In the last 24 weeks,
    64 unique ticket reporters
    15 unique ticket reviewers
    12 unique ticket resolvers
In the last 48 weeks,
    148 unique ticket reporters
    17 unique ticket reviewers
    24 unique ticket resolvers




From broehl at gmail.com  Sun Nov 11 09:03:35 2007
From: broehl at gmail.com (Bernie Roehl)
Date: Sun, 11 Nov 2007 09:03:35 -0500
Subject: [Twisted-Python] Two main loops
Message-ID: <1045831b0711110603m6d453a3q18644a59aa9f5cf7@mail.gmail.com>

I've got a 3D game that I've implemented in Python using an existing
game engine.  The engine "owns" the main loop, i.e. I call
engine.run() and it makes callbacks to my application on every frame
(and other game event).

Now I'm adding networking, and I'd like to use Twisted.  However,
Twisted uses the same approach as the game engine -- I call
reactor.run() and it makes callbacks to my application.

So, how do I integrate the two?

My first though is to call reactor.run() in a separate thread, but of
course that adds additional complexity in terms of synchronization.

I notice the docs mention reactor.iterate(), which appears to be
designed for exactly what I'm doing.  However, it's not clear how to
use it, and the method appears to be deprecated.

Any suggestions are appreciated...

-- 
   Bernie Roehl
   Mail: broehl at gmail.com



From nitro at dr-code.org  Sun Nov 11 09:20:46 2007
From: nitro at dr-code.org (Nitro)
Date: Sun, 11 Nov 2007 15:20:46 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <1045831b0711110603m6d453a3q18644a59aa9f5cf7@mail.gmail.com>
References: <1045831b0711110603m6d453a3q18644a59aa9f5cf7@mail.gmail.com>
Message-ID: <op.t1msswy2z3pzfc@nitrogenycs2>

Am 11.11.2007, 15:03 Uhr, schrieb Bernie Roehl <broehl at gmail.com>:

> I've got a 3D game that I've implemented in Python using an existing
> game engine.  The engine "owns" the main loop, i.e. I call
> engine.run() and it makes callbacks to my application on every frame
> (and other game event).
>
> Now I'm adding networking, and I'd like to use Twisted.  However,
> Twisted uses the same approach as the game engine -- I call
> reactor.run() and it makes callbacks to my application.
>
> So, how do I integrate the two?
>
> My first though is to call reactor.run() in a separate thread, but of
> course that adds additional complexity in terms of synchronization.
>
> I notice the docs mention reactor.iterate(), which appears to be
> designed for exactly what I'm doing.  However, it's not clear how to
> use it, and the method appears to be deprecated.
>
> Any suggestions are appreciated...

I am using twisted with our home-brewn 3d engine and I do it like this:

def DoOneLoopIteration():
     engine.RunSingleIteration()
     reactor.callLater(0, DoOneLoopIteration)

reactor.callLater(0, DoOneLoopIteration)
reactor.run()

There are other possibilities like

import twisted.internet.task
scheduleUpdate = twisted.internet.task.LoopingCall(DoOneLoopIteration)
scheduleUpdate.start(0.01, False)   # 100 Hz

They all have in common that twisted is driving the main loop and the 3d  
part of the app only executes the inner part of it's main loop. I tried  
the opposite way before (3d part of the app driving main loop, twisted  
being run with iterate()) but this wasn't really usable.

-Matthias



From itamar at itamarst.org  Sun Nov 11 10:00:21 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 11 Nov 2007 10:00:21 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <op.t1msswy2z3pzfc@nitrogenycs2>
References: <1045831b0711110603m6d453a3q18644a59aa9f5cf7@mail.gmail.com>
	<op.t1msswy2z3pzfc@nitrogenycs2>
Message-ID: <1194793221.13986.47.camel@localhost.localdomain>


On Sun, 2007-11-11 at 15:20 +0100, Nitro wrote:
> > Now I'm adding networking, and I'd like to use Twisted.  However,
> > Twisted uses the same approach as the game engine -- I call
> > reactor.run() and it makes callbacks to my application.
> >
> > So, how do I integrate the two?

> I am using twisted with our home-brewn 3d engine and I do it like this:
> 
> def DoOneLoopIteration():
>      engine.RunSingleIteration()
>      reactor.callLater(0, DoOneLoopIteration)
> 
> reactor.callLater(0, DoOneLoopIteration)
> reactor.run()

Or, if your game event loop supports registering sockets, you could
build your own reactor; that's e.g. how twisted.internet.glib2reactor
works, using glib's event loop and socket notification mechanism.




From broehl at gmail.com  Sun Nov 11 09:51:33 2007
From: broehl at gmail.com (Bernie Roehl)
Date: Sun, 11 Nov 2007 09:51:33 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <op.t1msswy2z3pzfc@nitrogenycs2>
References: <1045831b0711110603m6d453a3q18644a59aa9f5cf7@mail.gmail.com>
	<op.t1msswy2z3pzfc@nitrogenycs2>
Message-ID: <1045831b0711110651w3b4cdddbl815ee7c395069510@mail.gmail.com>

Did you find that passing zero as the first parameter to callLater
cause it to be called often enough?  I really want to make sure the
rendering is happening as quickly as possible.


So does callLater(0, DoOneLoopIteration) call

On Nov 11, 2007 9:20 AM, Nitro <nitro at dr-code.org> wrote:
> Am 11.11.2007, 15:03 Uhr, schrieb Bernie Roehl <broehl at gmail.com>:
>
>
> > I've got a 3D game that I've implemented in Python using an existing
> > game engine.  The engine "owns" the main loop, i.e. I call
> > engine.run() and it makes callbacks to my application on every frame
> > (and other game event).
> >
> > Now I'm adding networking, and I'd like to use Twisted.  However,
> > Twisted uses the same approach as the game engine -- I call
> > reactor.run() and it makes callbacks to my application.
> >
> > So, how do I integrate the two?
> >
> > My first though is to call reactor.run() in a separate thread, but of
> > course that adds additional complexity in terms of synchronization.
> >
> > I notice the docs mention reactor.iterate(), which appears to be
> > designed for exactly what I'm doing.  However, it's not clear how to
> > use it, and the method appears to be deprecated.
> >
> > Any suggestions are appreciated...
>
> I am using twisted with our home-brewn 3d engine and I do it like this:
>
> def DoOneLoopIteration():
>      engine.RunSingleIteration()
>      reactor.callLater(0, DoOneLoopIteration)
>
> reactor.callLater(0, DoOneLoopIteration)
> reactor.run()
>
> There are other possibilities like
>
> import twisted.internet.task
> scheduleUpdate = twisted.internet.task.LoopingCall(DoOneLoopIteration)
> scheduleUpdate.start(0.01, False)   # 100 Hz
>
> They all have in common that twisted is driving the main loop and the 3d
> part of the app only executes the inner part of it's main loop. I tried
> the opposite way before (3d part of the app driving main loop, twisted
> being run with iterate()) but this wasn't really usable.
>
> -Matthias
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
   Bernie Roehl
   Mail: broehl at gmail.com



From exarkun at divmod.com  Sun Nov 11 10:44:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Nov 2007 10:44:21 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <1045831b0711110651w3b4cdddbl815ee7c395069510@mail.gmail.com>
Message-ID: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>

On Sun, 11 Nov 2007 09:51:33 -0500, Bernie Roehl <broehl at gmail.com> wrote:
>Did you find that passing zero as the first parameter to callLater
>cause it to be called often enough?  I really want to make sure the
>rendering is happening as quickly as possible.
>

    exarkun at boson:~$ cat howfastdoesitspin.py

    from twisted.internet import reactor
    from twisted.internet.task import LoopingCall

    class Spinner(object):
        def __init__(self):
            self.count = 0

        def tick(self):
            self.count += 1

    spinner = Spinner()
    call = LoopingCall(spinner.tick)
    call.start(0)
    reactor.callLater(1, reactor.stop)
    reactor.run()
    print spinner.count
    exarkun at boson:~$ python howfastdoesitspin.py
    5448
    exarkun at boson:~$

Practically speaking, you probably don't need to render more than about
3000 frames per second.  ;)

Jean-Paul



From nitro at dr-code.org  Sun Nov 11 11:16:58 2007
From: nitro at dr-code.org (Nitro)
Date: Sun, 11 Nov 2007 17:16:58 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
Message-ID: <op.t1mx6kloz3pzfc@nitrogenycs2>

Am 11.11.2007, 16:44 Uhr, schrieb Jean-Paul Calderone <exarkun at divmod.com>:

> On Sun, 11 Nov 2007 09:51:33 -0500, Bernie Roehl <broehl at gmail.com>  
> wrote:
>> Did you find that passing zero as the first parameter to callLater
>> cause it to be called often enough?  I really want to make sure the
>> rendering is happening as quickly as possible.
>>
>
>     exarkun at boson:~$ cat howfastdoesitspin.py
>
>     from twisted.internet import reactor
>     from twisted.internet.task import LoopingCall
>
>     class Spinner(object):
>         def __init__(self):
>             self.count = 0
>
>         def tick(self):
>             self.count += 1
>
>     spinner = Spinner()
>     call = LoopingCall(spinner.tick)
>     call.start(0)
>     reactor.callLater(1, reactor.stop)
>     reactor.run()
>     print spinner.count
>     exarkun at boson:~$ python howfastdoesitspin.py
>     5448
>     exarkun at boson:~$
>
> Practically speaking, you probably don't need to render more than about
> 3000 frames per second.  ;)

HarHar, I get about 13000 on my win machine ;-)

-Matthias



From broehl at gmail.com  Sun Nov 11 11:31:07 2007
From: broehl at gmail.com (Bernie Roehl)
Date: Sun, 11 Nov 2007 11:31:07 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
References: <1045831b0711110651w3b4cdddbl815ee7c395069510@mail.gmail.com>
	<20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
Message-ID: <1045831b0711110831p54f37916x60a0237214388c7a@mail.gmail.com>

Great -- that should work.

Thanks everyone for your help!



On Nov 11, 2007 10:44 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sun, 11 Nov 2007 09:51:33 -0500, Bernie Roehl <broehl at gmail.com> wrote:
> >Did you find that passing zero as the first parameter to callLater
> >cause it to be called often enough?  I really want to make sure the
> >rendering is happening as quickly as possible.
> >
>
>     exarkun at boson:~$ cat howfastdoesitspin.py
>
>     from twisted.internet import reactor
>     from twisted.internet.task import LoopingCall
>
>     class Spinner(object):
>         def __init__(self):
>             self.count = 0
>
>         def tick(self):
>             self.count += 1
>
>     spinner = Spinner()
>     call = LoopingCall(spinner.tick)
>     call.start(0)
>     reactor.callLater(1, reactor.stop)
>     reactor.run()
>     print spinner.count
>     exarkun at boson:~$ python howfastdoesitspin.py
>     5448
>     exarkun at boson:~$
>
> Practically speaking, you probably don't need to render more than about
> 3000 frames per second.  ;)
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
   Bernie Roehl
   Mail: broehl at gmail.com



From jasper at peak.org  Sun Nov 11 16:06:26 2007
From: jasper at peak.org (Jasper)
Date: Sun, 11 Nov 2007 13:06:26 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
Message-ID: <47376ED2.8010408@peak.org>

Jean-Paul Calderone wrote:
> On Sun, 11 Nov 2007 09:51:33 -0500, Bernie Roehl <broehl at gmail.com> 
> wrote:
>> Did you find that passing zero as the first parameter to callLater
>> cause it to be called often enough?  I really want to make sure the
>> rendering is happening as quickly as possible.
>>
>
>    exarkun at boson:~$ cat howfastdoesitspin.py
>
>    from twisted.internet import reactor
>    from twisted.internet.task import LoopingCall
>
>    class Spinner(object):
>        def __init__(self):
>            self.count = 0
>
>        def tick(self):
>            self.count += 1
>
>    spinner = Spinner()
>    call = LoopingCall(spinner.tick)
>    call.start(0)
>    reactor.callLater(1, reactor.stop)
>    reactor.run()
>    print spinner.count
>    exarkun at boson:~$ python howfastdoesitspin.py
>    5448
>    exarkun at boson:~$
>
> Practically speaking, you probably don't need to render more than about
> 3000 frames per second.  ;)
>
> Jean-Paul

That depends.  When I send moderately sized objects over Twisted, this 
approach causes my frame rate to stop while Twisted is busy, and worse 
makes my GUI non-interactive.  For a game, this is generally unacceptable...

I'm not sure of a good/nice way to deal with this.  Slicing 
transmissions into a sequence of smaller chunks seems like a fair pain 
in the ass, but then again the alternatives are punting to another 
thread/process. :-/

-Jasper




From Marcin.Kasperski at softax.com.pl  Sun Nov 11 15:30:23 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Sun, 11 Nov 2007 21:30:23 +0100
Subject: [Twisted-Python] StdioOnnaStick instance has no attribute 'isatty'
Message-ID: <87prygtti8.fsf@platon.mekk.waw.pl>


I just tried to run some trial tests on ubuntu gutsy (twisted 2.5.0),
just to get the error as in the title (full traceback below).
Does anybody know what is wrong here?

Traceback (most recent call last):
   File "/usr/bin/trial", line 24, in <module>
     run()
   File "/usr/lib/python2.5/site-packages/twisted/scripts/trial.py", line 345, in run
     test_result = trialRunner.run(suite)
   File "/usr/lib/python2.5/site-packages/twisted/trial/runner.py", line 772, in run
     result = self._makeResult()
   File "/usr/lib/python2.5/site-packages/twisted/trial/runner.py", line 712, in _makeResult
     return self.reporterFactory(self.stream, self.tbformat, self.rterrors)
   File "/usr/lib/python2.5/site-packages/twisted/trial/reporter.py", line 555, in __init__
     if colorizer.supported():
   File "/usr/lib/python2.5/site-packages/twisted/trial/reporter.py", line 446, in supported
     if not sys.stderr.isatty():
 AttributeError: StdioOnnaStick instance has no attribute 'isatty'


-- 
----------------------------------------------------------------------
| Marcin Kasperski   |  For waterfall, milestones are commitments.
| http://mekk.waw.pl | For iterative development, they are decision
|                    |               points. (Martin)
----------------------------------------------------------------------




From glyph at divmod.com  Sun Nov 11 17:27:58 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 11 Nov 2007 22:27:58 -0000
Subject: [Twisted-Python] Two main loops
In-Reply-To: <47376ED2.8010408@peak.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
Message-ID: <20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>


On 09:06 pm, jasper at peak.org wrote:
>That depends.  When I send moderately sized objects over Twisted, this 
>approach causes my frame rate to stop while Twisted is busy, and worse 
>makes my GUI non-interactive.  For a game, this is generally 
>unacceptable...

You can't send "objects" over "Twisted".

Are you talking about a particular protocol in Twisted?  Serializing 
large objects through PB might take a long time.  In that case, it's not 
"Twisted" that is busy, but your program which is busy serializing that 
object.
>I'm not sure of a good/nice way to deal with this.  Slicing 
>transmissions into a sequence of smaller chunks seems like a fair pain 
>in the ass, but then again the alternatives are punting to another 
>thread/process. :-/

Actually, punting to another thread or process is still going to slow 
down your rendering, but in a much less deterministic way.  The OS 
scheduler is going to be interrupting the rendering rather than the 
long-running serialization function.  Breaking down the serialization 
work into smaller chunks will allow you to better control what's going 
on.

Sending the work of serializing a large object to another process won't 
work anyway: how are you going to get that large object to the other 
process to serialize in the first place, without serializing it? 
Sending it to another thread probably won't work either, since if the 
object is large it is likely shared (and therefore will involve locking 
large portions of the data structure for long periods of time) and 
Python's GIL will introduce deleterious effects for your framerate 
anyway.

Fundamentally what you are doing here is optimizing your program.  Your 
serialization is slow and it needs to be faster so that it does not 
impact your framerate.  This is a difficult problem, one which is made 
worse by the fact that Python does not have a particularly fast runtime. 
There's no quick answer: you don't need to restructure your main loop, 
you need to think about what your program is spending its time doing.



From maarten at treewalker.org  Sun Nov 11 17:40:30 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 11 Nov 2007 23:40:30 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <47376ED2.8010408@peak.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
Message-ID: <200711112340.34891.maarten@treewalker.org>

On Sunday 11 November 2007, Jasper wrote:
> Jean-Paul Calderone wrote:
> > Practically speaking, you probably don't need to render more than about
> > 3000 frames per second.  ;)
> >
> > Jean-Paul
>
> That depends.  When I send moderately sized objects over Twisted, this
> approach causes my frame rate to stop while Twisted is busy, and worse
> makes my GUI non-interactive.  For a game, this is generally
> unacceptable...

Why would that happen?

Twisted never blocks; if it has to wait for something (such as a 
transmission buffer becoming ready to accept more data), it will register a 
callback and the reactor will continue (and call your rendering code).

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20071111/28570ead/attachment.pgp 

From michaelschneider at current.net  Sun Nov 11 17:57:50 2007
From: michaelschneider at current.net (Michael Schneider)
Date: Sun, 11 Nov 2007 17:57:50 -0500
Subject: [Twisted-Python] Re: glyph changed u'Add a variable in
 twisted.python.runtime to check for	vista'
In-Reply-To: <E1IrL0q-0003NV-Ch@cube.twistedmatrix.com>
References: <E1IrL0q-0003NV-Ch@cube.twistedmatrix.com>
Message-ID: <473788EE.1060509@current.net>

Glyph,

I would have no problem with that.  I created the ticket to log the 
issues.  I verified that twisted's runtime code correctly determines that
the current platform is windows.

That is all that I need to work correctly, and it does.

Therve may know of a use case where this would be a problem.  I have none.

Thanks
Mike
trac at twistedmatrix.com wrote:
> Ticket u'Add a variable in twisted.python.runtime to check for vista' changed by glyph <glyph at divmod.com>:
>
> I am sorely tempted to close this as invalid.  Why does anyone ever need to know the difference between XP and Vista using Twisted?  This seems to me like modifying twisted.python.runtime to have different values to check for Ubuntu 6.06 vs. 7.10.  The only consequence I can see is adding a new way for code to ask "is this a windows machine" that will succeed on XP but fail on Vista (or vice versa).  Shouldn't we leave platform detection of this granularity up to the code which will actually care?  i.e. if you are asking if it's Vista because Vista has a new or changed win32 function, shouldn't you be asking the win32 wrapper?
>
>
> If Twisted needs to make this determination for its own purposes, then this makes sense to me.  Is Twisted going to be making different API calls on Vista and XP?  If not, I'd like to consider them the same platform.
>
> ---------
>
> ---------
> http://twistedmatrix.com/trac/ticket/2881
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>   




From nitro at dr-code.org  Sun Nov 11 19:05:30 2007
From: nitro at dr-code.org (Nitro)
Date: Mon, 12 Nov 2007 01:05:30 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <47376ED2.8010408@peak.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
Message-ID: <op.t1njvgqfz3pzfc@nitrogenycs2>

In a game you usually never send/receive huge objects. For various reasons  
you always try to reduce your bandwidth as much as possible. A low  
bandwidth implies a rather low number of objects and data.
That being said I am using pb for transferring state changes which should  
be guarenteed to arrive (for example a command to load a new game world)  
and using a custom pb-like method based on udp and which uses  
messaging/packaging for things which do not have to be transmitted on a  
guarenteed basis. An example for the latter is updates of the position of  
world objects for instance. If a udp packet is lost, I don't really care  
because a new one will be send very soon anyways.
I am able to render (client) / simulate (server) with more than 200 fps  
this way. So while python might be slow compared to C++ this proves that  
it's actually possible to write python code which performs fast enough. It  
also proves that it's more important to optimize your algorithms and not  
your code. In the case of a game this means to think about ways to reduce  
the data that needs to be transmitted instead of making the  
serialization/network code faster.

-Matthias


Am 11.11.2007, 22:06 Uhr, schrieb Jasper <jasper at peak.org>:

> That depends.  When I send moderately sized objects over Twisted, this  
> approach causes my frame rate to stop while Twisted is busy, and worse  
> makes my GUI non-interactive.  For a game, this is generally  
> unacceptable...
>
> I'm not sure of a good/nice way to deal with this.  Slicing  
> transmissions into a sequence of smaller chunks seems like a fair pain  
> in the ass, but then again the alternatives are punting to another  
> thread/process. :-/
>
> -Jasper



From jasper at peak.org  Mon Nov 12 11:58:55 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 08:58:55 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <200711112340.34891.maarten@treewalker.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>	<47376ED2.8010408@peak.org>
	<200711112340.34891.maarten@treewalker.org>
Message-ID: <4738864F.2020501@peak.org>

Maarten ter Huurne wrote:
> On Sunday 11 November 2007, Jasper wrote:
>   
>> Jean-Paul Calderone wrote:
>>     
>>> Practically speaking, you probably don't need to render more than about
>>> 3000 frames per second.  ;)
>>>
>>> Jean-Paul
>>>       
>> That depends.  When I send moderately sized objects over Twisted, this
>> approach causes my frame rate to stop while Twisted is busy, and worse
>> makes my GUI non-interactive.  For a game, this is generally
>> unacceptable...
>>     
>
> Why would that happen?
>
> Twisted never blocks; if it has to wait for something (such as a 
> transmission buffer becoming ready to accept more data), it will register a 
> callback and the reactor will continue (and call your rendering code).
>
> Bye,
> 		Maarten
>   

Maybe I'm misunderstanding what's going on underneath, but Twisted sure 
seems to block while I send one large chunk of data.

-Jasper



From exarkun at divmod.com  Mon Nov 12 12:13:44 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Nov 2007 12:13:44 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <4738864F.2020501@peak.org>
Message-ID: <20071112171344.8162.303221679.divmod.quotient.34933@ohm>

On Mon, 12 Nov 2007 08:58:55 -0800, Jasper <jasper at peak.org> wrote:
>Maarten ter Huurne wrote:
>>On Sunday 11 November 2007, Jasper wrote:
>>
>>>Jean-Paul Calderone wrote:
>>>
>>>>Practically speaking, you probably don't need to render more than about
>>>>3000 frames per second.  ;)
>>>>
>>>>Jean-Paul
>>>>
>>>That depends.  When I send moderately sized objects over Twisted, this
>>>approach causes my frame rate to stop while Twisted is busy, and worse
>>>makes my GUI non-interactive.  For a game, this is generally
>>>unacceptable...
>>>
>>
>>Why would that happen?
>>
>>Twisted never blocks; if it has to wait for something (such as a 
>>transmission buffer becoming ready to accept more data), it will register a 
>>callback and the reactor will continue (and call your rendering code).
>>
>>Bye,
>>                 Maarten
>>
>
>Maybe I'm misunderstanding what's going on underneath, but Twisted sure 
>seems to block while I send one large chunk of data.

There are a lot of different pieces in any non-trivial program.  There are
also at least a couple different meanings for the word "block".

The network code at the very bottom of Twisted won't ever wait for a
network event to happen before continuing execution.  That's what Maarten
ter Huurne was pointing out.

Some parts of Twisted (for example, the serializers for PB) might spend a
long time using the CPU in order to provide the functionality they are
supposed to provide.

The main difference between these two cases is that in the former, you are
subject to arbitrary delays by other parties whereas in the latter case,
the delays are in response to actions your application has explicitly taken.

The latter case can be solved by asking functions to do less work at a time,
as has been suggested a couple times in this thread.  Since the former case
never happens in Twisted, there's no need to fix it. :)

Jean-Paul



From jasper at peak.org  Mon Nov 12 13:23:06 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 10:23:06 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>	<47376ED2.8010408@peak.org>
	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
Message-ID: <47389A0A.6080504@peak.org>

First off, thanks for the reply!  My responses/questions are inline below.

-Jasper

glyph at divmod.com wrote:
>
> On 09:06 pm, jasper at peak.org wrote:
>> That depends.  When I send moderately sized objects over Twisted, 
>> this approach causes my frame rate to stop while Twisted is busy, and 
>> worse makes my GUI non-interactive.  For a game, this is generally 
>> unacceptable...
> You can't send "objects" over "Twisted".

Sure, not per se.  However, you can essentially send copies of objects 
through PB, provided both sides of the wire have the same class definition.


> Are you talking about a particular protocol in Twisted?  Serializing 
> large objects through PB might take a long time.  In that case, it's 
> not "Twisted" that is busy, but your program which is busy serializing 
> that object.

It comes in the twisted installation package, in the module 
"twisted.spread.pb" ;-)

Anyway, the delay comes in a call to (a) perspective.callRemote().  I 
understand that this isn't a reactor scheduled action, but nonetheless I 
don't have any direct control over how things are jellied without 
hacking Twisted.


>> I'm not sure of a good/nice way to deal with this.  Slicing 
>> transmissions into a sequence of smaller chunks seems like a fair 
>> pain in the ass, but then again the alternatives are punting to 
>> another thread/process. :-/
>
> Actually, punting to another thread or process is still going to slow 
> down your rendering, but in a much less deterministic way.  The OS 
> scheduler is going to be interrupting the rendering rather than the 
> long-running serialization function.  Breaking down the serialization 
> work into smaller chunks will allow you to better control what's going 
> on.
>
> Sending the work of serializing a large object to another process 
> won't work anyway: how are you going to get that large object to the 
> other process to serialize in the first place, without serializing it? 
> Sending it to another thread probably won't work either, since if the 
> object is large it is likely shared (and therefore will involve 
> locking large portions of the data structure for long periods of time) 
> and Python's GIL will introduce deleterious effects for your framerate 
> anyway.

In hindsight I see a separate process won't work (duh!)  However, I was 
thinking a thread might work, since the data I'm sending (players get a 
filtered view of the game's true state) isn't used by anything else, and 
the data isn't /that/ large. ;-)  Am I missing something low level 
here?  Would this end up locking bits other than those being serialized?

I suppose it's a bit moot, as I'm reluctant to fiddle with threading.


> Fundamentally what you are doing here is optimizing your program.  
> Your serialization is slow and it needs to be faster so that it does 
> not impact your framerate.  This is a difficult problem, one which is 
> made worse by the fact that Python does not have a particularly fast 
> runtime. There's no quick answer: you don't need to restructure your 
> main loop, you need to think about what your program is spending its 
> time doing.
 
Optimizing my program (e.g. by sending a bunch of smaller data chunks) 
feels like the wrong way to go...  Wouldn't it make more sense to hack 
PB's callRemote() to do this in a more general manner?  I'm thinking 
somewhere around jelly._Jellier.jelly()'s recursive calls to itself;  
perhaps using generators, although I'm fuzzy on the implications of 
recursion + generators...

Either way it's definitely optimization, so not exactly a pressing issue 
for me to resolve until the end.


-Jasper




From jasper at peak.org  Mon Nov 12 13:47:50 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 10:47:50 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112171344.8162.303221679.divmod.quotient.34933@ohm>
References: <20071112171344.8162.303221679.divmod.quotient.34933@ohm>
Message-ID: <47389FD6.2080000@peak.org>

Jean-Paul Calderone wrote:
> On Mon, 12 Nov 2007 08:58:55 -0800, Jasper <jasper at peak.org> wrote:
>> Maarten ter Huurne wrote:
>>> Why would that happen?
>>>
>>> Twisted never blocks; if it has to wait for something (such as a 
>>> transmission buffer becoming ready to accept more data), it will 
>>> register a callback and the reactor will continue (and call your 
>>> rendering code).
>>>
>>> Bye,
>>>                 Maarten
>>>
>>
>> Maybe I'm misunderstanding what's going on underneath, but Twisted 
>> sure seems to block while I send one large chunk of data.
>
> There are a lot of different pieces in any non-trivial program.  There 
> are
> also at least a couple different meanings for the word "block".
[further elaboration snipped]


I think the confusion here is stemming from us attaching different 
meanings to "Twisted".  I've been meaning the entire package, i.e. the 
modules I got when I installed Twisted.  You (Glyph, Maarten, etc.) seem 
to mean only the lower level inner bits, like reactor.  I'd actually 
understood this when I sent the above, and I apologize for the snarky 
reply. ;-)

To get to the point, I actually do feel that the fault lies with 
Twisted, or more specifically PB.  Code using PB wants to be as unaware 
of the details of network transmission as possible.  It certainly 
doesn't want to slice things into a bazillion chunks for individual 
transmission, and then puzzle them back together on the other end.

IMHO it makes more sense for PB to understand it shouldn't block, and to 
chunk and schedule its serialization (and unserialization) in the same 
manner as the TCP packets sent underneath.  I'm guessing this would make 
for cleaner separation, and more general usefulness.

Also, let me clarify that I'm not suggesting that someone else do this, 
nor bitching and moaning about what I'm getting out of a free project; 
it's something I intend to do myself as I have time.

-Jasper




From nitro at dr-code.org  Mon Nov 12 14:08:29 2007
From: nitro at dr-code.org (Nitro)
Date: Mon, 12 Nov 2007 20:08:29 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <47389FD6.2080000@peak.org>
References: <20071112171344.8162.303221679.divmod.quotient.34933@ohm>
	<47389FD6.2080000@peak.org>
Message-ID: <op.t1o0sfo0z3pzfc@nitrogenycs2>

Am 12.11.2007, 19:47 Uhr, schrieb Jasper <jasper at peak.org>:

> To get to the point, I actually do feel that the fault lies with  
> Twisted, or more specifically PB.  Code using PB wants to be as unaware  
> of the details of network transmission as possible.  It certainly  
> doesn't want to slice things into a bazillion chunks for individual  
> transmission, and then puzzle them back together on the other end.
>
> IMHO it makes more sense for PB to understand it shouldn't block, and to  
> chunk and schedule its serialization (and unserialization) in the same  
> manner as the TCP packets sent underneath.  I'm guessing this would make  
> for cleaner separation, and more general usefulness.

I think this is a) not possible and b) not desirable. It's not possible  
because pb sends a single large chunk of data over tcp. The OS is  
responsible to break everything down into individual tcp packets and  
puzzle them together at the other end. The whole packet thing is not  
visible to pb. So if you want pb to split your data, then do splitted  
callRemotes.
It's not desirable because you don't want your program to be stalled at  
uncontrollable times when the OS decides to send 20 tcp packets at once.  
You want to spread the load as evenly as possible and you'll have to do  
this manually.
Which kind of game are you working on and how many connections/bandwidth  
does it have? I haven't encountered the problems you mention in my project.

-Matthias



From exarkun at divmod.com  Mon Nov 12 15:15:47 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Nov 2007 15:15:47 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <op.t1o0sfo0z3pzfc@nitrogenycs2>
Message-ID: <20071112201547.8162.237583392.divmod.quotient.34987@ohm>

On Mon, 12 Nov 2007 20:08:29 +0100, Nitro <nitro at dr-code.org> wrote:
>Am 12.11.2007, 19:47 Uhr, schrieb Jasper <jasper at peak.org>:
>>To get to the point, I actually do feel that the fault lies with  Twisted, 
>>or more specifically PB.  Code using PB wants to be as unaware  of the 
>>details of network transmission as possible.  It certainly  doesn't want to 
>>slice things into a bazillion chunks for individual  transmission, and then 
>>puzzle them back together on the other end.
>>
>>IMHO it makes more sense for PB to understand it shouldn't block, and to 
>>chunk and schedule its serialization (and unserialization) in the same 
>>manner as the TCP packets sent underneath.  I'm guessing this would make 
>>for cleaner separation, and more general usefulness.
>
>I think this is a) not possible and b) not desirable.

I think it's possible.  It may even be desirable, although whether it is
worth the cost of implementing or not is a question worth considering.

>It's not possible 
>because pb sends a single large chunk of data over tcp.

It doesn't have to be implemented this way.  However, this isn't
particularly relevant.  ITCPTransport.write takes approximately the same
amount of time to execute and return whether you pass it a string which is
one byte long or one million bytes long.

>The OS is 
>responsible to break everything down into individual tcp packets and  puzzle 
>them together at the other end. The whole packet thing is not  visible to 
>pb.

True, but the actual performance bottleneck here is in PB's conversion of
Python objects to strings, which is done by code entirely within Twisted.

>So if you want pb to split your data, then do splitted  callRemotes.
>It's not desirable because you don't want your program to be stalled at 
>uncontrollable times when the OS decides to send 20 tcp packets at once. 

Your program won't ever stall because of this.

>You want to spread the load as evenly as possible and you'll have to do 
>this manually.

PB's serializer could try very hard to avoid running for a long period of
time without giving control back to the reactor.  Of course, someone would
have to implement this.  Whether or not that is worthwhile to implement,
instead of doing what Glyph suggested (manually breaking up the work into
smaller pieces) is a separate question.

Jean-Paul



From nitro at dr-code.org  Mon Nov 12 15:35:05 2007
From: nitro at dr-code.org (Nitro)
Date: Mon, 12 Nov 2007 21:35:05 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112201547.8162.237583392.divmod.quotient.34987@ohm>
References: <20071112201547.8162.237583392.divmod.quotient.34987@ohm>
Message-ID: <op.t1o4srsfz3pzfc@nitrogenycs2>

Am 12.11.2007, 21:15 Uhr, schrieb Jean-Paul Calderone <exarkun at divmod.com>:

>> The OS is responsible to break everything down into individual tcp  
>> packets and  puzzle them together at the other end. The whole packet  
>> thing is not  visible to pb.
>
> True, but the actual performance bottleneck here is in PB's conversion of
> Python objects to strings, which is done by code entirely within Twisted.

Yes.

>> So if you want pb to split your data, then do splitted  callRemotes.
>> It's not desirable because you don't want your program to be stalled at  
>> uncontrollable times when the OS decides to send 20 tcp packets at once.
>
> Your program won't ever stall because of this.

If you do it as Jesper suggested and serialize when packets are about to  
be send then it will stall when you try to send (=serialize) lots of  
packets at once.

>> You want to spread the load as evenly as possible and you'll have to do  
>> this manually.
>
> PB's serializer could try very hard to avoid running for a long period of
> time without giving control back to the reactor.  Of course, someone  
> would
> have to implement this.  Whether or not that is worthwhile to implement,
> instead of doing what Glyph suggested (manually breaking up the work into
> smaller pieces) is a separate question.

Of course you can do it. But does it make sense? If you ask pb to do lots  
of work then you can't be surprised it takes long. If I ask pb to  
serialize things I want it to do it *now*. If pb starts distributing work  
over time itself then I will end up with lags which are bad in my  
situation.
I'd like to hear about the actual situation where twisted is stalling  
because of serialization. As said before I am using pb and a pb-like thing  
which also uses banana for serialization (= even more overhead to generate  
messages and spread them over multiple udp packets). I am serializing lots  
of data and it works like a charm. After all if you have so much data to  
serialize then you are very likely to do something with the data on the  
sending and receiving end. And this processing is much more likely to be a  
performance bottleneck than twisted serialization.
I guess we can discuss a lot about how pb *could* work. We should keep in  
mind real world situations though which tend to shift priorities a lot.

-Matthias



From glyph at divmod.com  Mon Nov 12 16:17:47 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Nov 2007 21:17:47 -0000
Subject: [Twisted-Python] Two main loops
In-Reply-To: <47389A0A.6080504@peak.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
	<47389A0A.6080504@peak.org>
Message-ID: <20071112211747.21558.1724666994.divmod.xquotient.225@joule.divmod.com>

On 06:23 pm, jasper at peak.org wrote:
>glyph at divmod.com wrote:
>>
>>On 09:06 pm, jasper at peak.org wrote:

>>You can't send "objects" over "Twisted".
>
>Sure, not per se.

>It comes in the twisted installation package, in the module 
>"twisted.spread.pb" ;-)

There are a number of other ways to communicate with other programs 
using Twisted, some of which involve "sending objects" through other 
protocols.  Obviously PB is a part of Twisted :).
>In hindsight I see a separate process won't work (duh!)  However, I was 
>thinking a thread might work, since the data I'm sending (players get a 
>filtered view of the game's true state) isn't used by anything else, 
>and the data isn't /that/ large. ;-)  Am I missing something low level 
>here?  Would this end up locking bits other than those being 
>serialized?
>
>I suppose it's a bit moot, as I'm reluctant to fiddle with threading.

If you've got a large object, let's say the state of the game world, and 
you need to lock it for use within a thread, it is likely that other 
things in your program will want to access it before long.  You can only 
have so many "large" objects in a program, after all, and they tend to 
be shared.  The one you referred to, "the game's true state", is 
obviously going to be accessed by a lot of code unless you have a very 
strange game indeed.
>Optimizing my program (e.g. by sending a bunch of smaller data chunks) 
>feels like the wrong way to go...  Wouldn't it make more sense to hack 
>PB's callRemote() to do this in a more general manner?  I'm thinking 
>somewhere around jelly._Jellier.jelly()'s recursive calls to itself; 
>perhaps using generators, although I'm fuzzy on the implications of 
>recursion + generators...

callRemote *can't* do this in a general manner and remain compatible 
with PB's existing semantics.  It would be extraordinarily difficult to 
come up with semantics that would make sense for this.  Consider:

  bob = Mob(hitPoints=3)
  jethro = Player()
  jethro.callRemote("enterSensoryRange", bob)
  bob.hitPoints += 1

How many hit points does Jethro think Bob has?  Probably 3, but if PB 
might be breaking up serialization work into separate reactor turns for 
you behind your back, then maybe 4.  Given that there's no way to know, 
you don't know whether you have to send Jethro an update to bob's hit 
points or not.

If you can figure out how to answer this question in a way that makes 
sense (i.e. never uses the word "maybe") then you might be able to 
implement something very cool and useful.  I certainly can't think of a 
way to do it, though.  Good luck!



From exarkun at divmod.com  Mon Nov 12 17:59:37 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Nov 2007 17:59:37 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112211747.21558.1724666994.divmod.xquotient.225@joule.divmod.com>
Message-ID: <20071112225937.8162.550205058.divmod.quotient.35043@ohm>

On Mon, 12 Nov 2007 21:17:47 -0000, glyph at divmod.com wrote:
>On 06:23 pm, jasper at peak.org wrote:
>>glyph at divmod.com wrote:
>
> [snip]
>
>callRemote *can't* do this in a general manner and remain compatible with 
>PB's existing semantics.  It would be extraordinarily difficult to come up 
>with semantics that would make sense for this.  Consider:
>
>  bob = Mob(hitPoints=3)
>  jethro = Player()
>  jethro.callRemote("enterSensoryRange", bob)
>  bob.hitPoints += 1
>
>How many hit points does Jethro think Bob has?  Probably 3, but if PB might 
>be breaking up serialization work into separate reactor turns for you behind 
>your back, then maybe 4.  Given that there's no way to know, you don't know 
>whether you have to send Jethro an update to bob's hit points or not.
>
>If you can figure out how to answer this question in a way that makes sense 
>(i.e. never uses the word "maybe") then you might be able to implement 
>something very cool and useful.  I certainly can't think of a way to do it, 
>though.  Good luck!
>

It's always possible to provide new behavior - all you have to do is
provide a new API.  For example, RemoteReference.callRemoteAsyncly().

Jean-Paul



From jasper at peak.org  Mon Nov 12 18:18:15 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 15:18:15 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112211747.21558.1724666994.divmod.xquotient.225@joule.divmod.com>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>	<47376ED2.8010408@peak.org>	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>	<47389A0A.6080504@peak.org>
	<20071112211747.21558.1724666994.divmod.xquotient.225@joule.divmod.com>
Message-ID: <4738DF37.4090309@peak.org>

glyph at divmod.com wrote:
> On 06:23 pm, jasper at peak.org wrote:
>> glyph at divmod.com wrote
>> In hindsight I see a separate process won't work (duh!)  However, I 
>> was thinking a thread might work, since the data I'm sending (players 
>> get a filtered view of the game's true state) isn't used by anything 
>> else, and the data isn't /that/ large. ;-)  Am I missing something 
>> low level here?  Would this end up locking bits other than those 
>> being serialized?
>>
>> I suppose it's a bit moot, as I'm reluctant to fiddle with threading.
>
> If you've got a large object, let's say the state of the game world, 
> and you need to lock it for use within a thread, it is likely that 
> other things in your program will want to access it before long.  You 
> can only have so many "large" objects in a program, after all, and 
> they tend to be shared.  The one you referred to, "the game's true 
> state", is obviously going to be accessed by a lot of code unless you 
> have a very strange game indeed.
I don't send the players the "True State", I first calculate a trimmed 
and altered copy of it, according to what they can perceive.  I then 
send this, which in practice isn't used by anything else on the server.


>> Optimizing my program (e.g. by sending a bunch of smaller data 
>> chunks) feels like the wrong way to go...  Wouldn't it make more 
>> sense to hack PB's callRemote() to do this in a more general manner?  
>> I'm thinking somewhere around jelly._Jellier.jelly()'s recursive 
>> calls to itself; perhaps using generators, although I'm fuzzy on the 
>> implications of recursion + generators...
>
> callRemote *can't* do this in a general manner and remain compatible 
> with PB's existing semantics.  It would be extraordinarily difficult 
> to come up with semantics that would make sense for this.  Consider:
>
>  bob = Mob(hitPoints=3)
>  jethro = Player()
>  jethro.callRemote("enterSensoryRange", bob)
>  bob.hitPoints += 1
>
> How many hit points does Jethro think Bob has?  Probably 3, but if PB 
> might be breaking up serialization work into separate reactor turns 
> for you behind your back, then maybe 4.  Given that there's no way to 
> know, you don't know whether you have to send Jethro an update to 
> bob's hit points or not.
>
> If you can figure out how to answer this question in a way that makes 
> sense (i.e. never uses the word "maybe") then you might be able to 
> implement something very cool and useful.  I certainly can't think of 
> a way to do it, though.  Good luck!

For my game, that's actually pretty straight forward, as I don't allow 
such complex situations.  I allow 3 things though PB:
1) Ask for status
2) Request current state
3) send actions for the current turn

Clients never actually /do/ anything (eg "enterSensoryRange), but 
instead schedule actions for the game server to carry out on their 
behalf at a later time (simultaneously with other players' actions).

The only time a client get a large chunk of data is when it's asked for 
it, and clients know enough to wait for a response.  It's possible for 
the client to send actions based on an old turn right before a new turn 
is processed, but these are simply tossed out with a warning that 
they're out of date, and the client should update it's state.

Reworking the above example, Jethro would always see that Bob has 3 
hitpoints on turn X, and 4 hitpoints on turn X+1.  Jethro's 
"enterSensoryRange" attempt would be made for a specific turn, say X.  
If it arrives before turn X+1 is calculated, he gets his result on turn 
X+1.  If it arrives late, well then Jethro was too slow.

For a more general case perhaps it's more complicated...

-Jasper




From jasper at peak.org  Mon Nov 12 18:21:27 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 15:21:27 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112225937.8162.550205058.divmod.quotient.35043@ohm>
References: <20071112225937.8162.550205058.divmod.quotient.35043@ohm>
Message-ID: <4738DFF7.7070601@peak.org>

Jean-Paul Calderone wrote:
> On Mon, 12 Nov 2007 21:17:47 -0000, glyph at divmod.com wrote:
>> If you can figure out how to answer this question in a way that makes 
>> sense (i.e. never uses the word "maybe") then you might be able to 
>> implement something very cool and useful.  I certainly can't think of 
>> a way to do it, though.  Good luck!
>>
>
> It's always possible to provide new behavior - all you have to do is
> provide a new API.  For example, RemoteReference.callRemoteAsyncly().

That's basically what I had in mind.  I wouldn't want to change the 
behavior of callRemote() at all, as that could hit existing programs by 
surprise.

Well, assuming I manage to get you guys to include whatever hack I come 
up with, and it doesn't just live on my SVN'd version. ;-)

-Jasper



From jasper at peak.org  Mon Nov 12 18:29:51 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 15:29:51 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <op.t1o0sfo0z3pzfc@nitrogenycs2>
References: <20071112171344.8162.303221679.divmod.quotient.34933@ohm>	<47389FD6.2080000@peak.org>
	<op.t1o0sfo0z3pzfc@nitrogenycs2>
Message-ID: <4738E1EF.1050404@peak.org>

Nitro wrote:
> Am 12.11.2007, 19:47 Uhr, schrieb Jasper <jasper at peak.org>:
>
>> To get to the point, I actually do feel that the fault lies with 
>> Twisted, or more specifically PB.  Code using PB wants to be as 
>> unaware of the details of network transmission as possible.  It 
>> certainly doesn't want to slice things into a bazillion chunks for 
>> individual transmission, and then puzzle them back together on the 
>> other end.
>>
>> IMHO it makes more sense for PB to understand it shouldn't block, and 
>> to chunk and schedule its serialization (and unserialization) in the 
>> same manner as the TCP packets sent underneath.  I'm guessing this 
>> would make for cleaner separation, and more general usefulness.
>
> I think this is a) not possible and b) not desirable. It's not 
> possible because pb sends a single large chunk of data over tcp. The 
> OS is responsible to break everything down into individual tcp packets 
> and puzzle them together at the other end. The whole packet thing is 
> not visible to pb. So if you want pb to split your data, then do 
> splitted callRemotes.
I'm not thinking of splitting up packets.  I'm merely thinking of 
splitting up serialization, and not splitting the data.

> It's not desirable because you don't want your program to be stalled 
> at uncontrollable times when the OS decides to send 20 tcp packets at 
> once. You want to spread the load as evenly as possible and you'll 
> have to do this manually.
> Which kind of game are you working on and how many 
> connections/bandwidth does it have? I haven't encountered the problems 
> you mention in my project.

Turn based strategy.  Here's the (rather out of date) website if your 
curious:
http://brass-golem.com/

-Jasper




From jasper at peak.org  Mon Nov 12 19:31:59 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 16:31:59 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112201547.8162.237583392.divmod.quotient.34987@ohm>
References: <20071112201547.8162.237583392.divmod.quotient.34987@ohm>
Message-ID: <4738F07F.2010701@peak.org>

Jean-Paul Calderone wrote:
> On Mon, 12 Nov 2007 20:08:29 +0100, Nitro <nitro at dr-code.org> wrote:
>> Am 12.11.2007, 19:47 Uhr, schrieb Jasper <jasper at peak.org>:
>>> To get to the point, I actually do feel that the fault lies with  
>>> Twisted, or more specifically PB.  Code using PB wants to be as 
>>> unaware  of the details of network transmission as possible.  It 
>>> certainly  doesn't want to slice things into a bazillion chunks for 
>>> individual  transmission, and then puzzle them back together on the 
>>> other end.
>>>
>>> IMHO it makes more sense for PB to understand it shouldn't block, 
>>> and to chunk and schedule its serialization (and unserialization) in 
>>> the same manner as the TCP packets sent underneath.  I'm guessing 
>>> this would make for cleaner separation, and more general usefulness.
>>
>> I think this is a) not possible and b) not desirable.
>
> I think it's possible.  It may even be desirable, although whether it is
> worth the cost of implementing or not is a question worth considering.
>
[snip]
>
> PB's serializer could try very hard to avoid running for a long period of
> time without giving control back to the reactor.  Of course, someone 
> would
> have to implement this.  Whether or not that is worthwhile to implement,
> instead of doing what Glyph suggested (manually breaking up the work into
> smaller pieces) is a separate question.

I'm not sure it's worth the cost either, but I'm also not splitting up 
the data into chunks is easier.  Looking through jelly.py, I find the 
places I'd want to split data align pretty closely with the chunking 
already done during jellying; why duplicate this work?

That said, I'm not precisely sure how to keep track of progress between 
time slices, although I nebulously intuit it could be done via nested 
generators.  I'm sure I don't fully understand the implications of this, 
but I've been looking for a practical reason to fiddle with generators 
for a while anyway. ;-)

-Jasper




From theatilla at gmail.com  Tue Nov 13 09:07:21 2007
From: theatilla at gmail.com (Atilla)
Date: Tue, 13 Nov 2007 15:07:21 +0100
Subject: [Twisted-Python] "Old style" classes in Twisted and inheritance
Message-ID: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>

I hope this is the correct place for this question.

I was trying to create a little customized task that sends a (ping)
message to the clients every X seconds. Because I needed some extra
bookkeeping, I implemented it as a class instance with a __call__
method, that is passed to the LoopingCall.

However, I also wanted to automatically start the task on init, so I
thought - it makes a lot of sense to simply Inherit it, call its
constructor and pass self as the parameter. It was then I realized
that the classes in twisted are old-style, when my super() call didn't
work.

Is there any practicular reason for that? Am I wrong to try inherit
the Looping Call ? Basically my code looks like :

class SillyPinger(object):
        def __init__(self, factory):
            self.factory = factory
            self.pingTargets = {}

            pingTask = task.LoopingCall(self)
            pingTask.start(5.0)

        def __call__(self):
            # do stuff
            pass


while I'd like to be doing:

class SillyPinger(task.LoopingCall):
        def __init__(self, factory):
            super(SillyPinger, self).__init__(self)

            self.factory = factory
            self.pingTargets = {}

            self.start(5.0) # get value from .ini here


Should I just switch to calling the LoopingCall constructor in the old
way? I'm not sure I'd like to do that, even if only for consistency
reasons.



From exarkun at divmod.com  Tue Nov 13 09:30:44 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Nov 2007 09:30:44 -0500
Subject: [Twisted-Python] "Old style" classes in Twisted and inheritance
In-Reply-To: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
Message-ID: <20071113143044.8162.55241882.divmod.quotient.35319@ohm>

On Tue, 13 Nov 2007 15:07:21 +0100, Atilla <theatilla at gmail.com> wrote:
>I hope this is the correct place for this question.
>
>I was trying to create a little customized task that sends a (ping)
>message to the clients every X seconds. Because I needed some extra
>bookkeeping, I implemented it as a class instance with a __call__
>method, that is passed to the LoopingCall.

__call__ doesn't have much benefit over a method which a useful name,
for what it's worth.  This isn't really related to your question or
problem, though.

>
>However, I also wanted to automatically start the task on init, so I
>thought - it makes a lot of sense to simply Inherit it, call its
>constructor and pass self as the parameter. It was then I realized
>that the classes in twisted are old-style, when my super() call didn't
>work.

Inheritance makes sense for sharing code.  It doesn't make sense for
the case you're describing.  You could just as easily have your class
create a LoopingCall in its __init__ and start it, rather than making
your class _be_ a LoopingCall.

More generally, some classes in Twisted are classic because they predate
Python's new-style classes.  We can't simply change them all to be new-
style now since there are various incompatibilities between classic and
new-style classes.

Speaking of super() specifically, it isn't even correct to use super()
even if you have new-style classes.  super() is for cooperative multiple
inheritance: all of the classes in the inheritance hierarchy have to agree
to use it.  Even if LoopingCall were new-style, it would also have to
claim that using super() with its __init__ method was supported (actually,
required).  And even then there would be no benefit until you also had
multiple inheritance.

>
>Is there any practicular reason for that? Am I wrong to try inherit
>the Looping Call ? Basically my code looks like :
>
>class SillyPinger(object):
>        def __init__(self, factory):
>            self.factory = factory
>            self.pingTargets = {}
>
>            pingTask = task.LoopingCall(self)
>            pingTask.start(5.0)
>
>        def __call__(self):
>            # do stuff
>            pass
>

The above is good.  Do that.

>
>while I'd like to be doing:
>
>class SillyPinger(task.LoopingCall):
>        def __init__(self, factory):
>            super(SillyPinger, self).__init__(self)
>
>            self.factory = factory
>            self.pingTargets = {}
>
>            self.start(5.0) # get value from .ini here
>

This will always be more fragile, even if you ignore the fact
that super() doesn't work here.

Jean-Paul



From jml at mumak.net  Tue Nov 13 09:32:05 2007
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 13 Nov 2007 09:32:05 -0500
Subject: [Twisted-Python] Weekly Bug Summary
In-Reply-To: <1194149104.43.1150492133@twistedmatrix.com>
References: <1194149104.43.1150492133@twistedmatrix.com>
Message-ID: <d06a5cd30711130632l50199a4ft73d0eb12ab796a1d@mail.gmail.com>

On Nov 3, 2007 11:05 PM,  <exarkun at twistedmatrix.com> wrote:
...
> Ticket Lifetime Stats
> ______________________
> Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
> Newest open ticket - [#2864] imap tests leave reactor in an unclean state (since 2007-11-03 18:33:43).
>
> Mean open ticket age: 560 days, 6:32:57.875374.
> Median: 462 days, 7:46:03.250374.
> Standard deviation: 406 days, 0:27:03.405592.
> Interquartile range: 507 days, 3:57:36.
>
> Mean time between ticket creation and ticket resolution: 123 days, 16:29:00.414484.
> Median: 15 days, 4:20:02.
> Standard deviation is 226 days, 16:11:21.249058.
> The interquartile range is 133 days, 4:31:15.
>
> Mean time spent in review: 69 days, 4:50:09.346471.
> Median: 4 days, 9:08:37.
> Standard deviation: 154 days, 5:04:12.761773.
> Interquartile range: 31 days, 7:00:28.
>
> Mean number of times a ticket is reviewed: 2.00223214286.
> Median: 1
> Standard deviation: 1.6589837734.
> Interquartile range: 1.
>

I only noticed these recently. Thanks to Jean-Paul for including them
in the summary information.

Some suggestions:
- Graphs. Pictures with lines that are green and go up. Graphs make
statistics fun.
- Moving window. With the length of the project and the relative
variability of activity, it makes sense to show statistics for, say,
the last six months, rather than for the lifetime of Twisted.
- "Time between ticket creation and branch creation".

Thoughts?
jml



From Andy at NewWorldElectric.com  Tue Nov 13 09:34:08 2007
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Tue, 13 Nov 2007 09:34:08 -0500
Subject: [Twisted-Python] "Old style" classes in Twisted and inheritance
In-Reply-To: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
References: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
Message-ID: <37d49ed40711130634k3b371da0r339659a70ba41f2e@mail.gmail.com>

I ran into this too, but have had no trouble 'converting' to new style
classes by just adding "object" to the superclass list.  Anyone have reasons
why we can't do that?

-Andy Fundinger

On Nov 13, 2007 9:07 AM, Atilla <theatilla at gmail.com> wrote:

> I hope this is the correct place for this question.
>
> I was trying to create a little customized task that sends a (ping)
> message to the clients every X seconds. Because I needed some extra
> bookkeeping, I implemented it as a class instance with a __call__
> method, that is passed to the LoopingCall.
>
> However, I also wanted to automatically start the task on init, so I
> thought - it makes a lot of sense to simply Inherit it, call its
> constructor and pass self as the parameter. It was then I realized
> that the classes in twisted are old-style, when my super() call didn't
> work.
>
> Is there any practicular reason for that? Am I wrong to try inherit
> the Looping Call ? Basically my code looks like :
>
> class SillyPinger(object):
>        def __init__(self, factory):
>            self.factory = factory
>            self.pingTargets = {}
>
>            pingTask = task.LoopingCall(self)
>            pingTask.start(5.0)
>
>        def __call__(self):
>            # do stuff
>            pass
>
>
> while I'd like to be doing:
>
> class SillyPinger(task.LoopingCall):
>        def __init__(self, factory):
>            super(SillyPinger, self).__init__(self)
>
>            self.factory = factory
>            self.pingTargets = {}
>
>            self.start(5.0) # get value from .ini here
>
>
> Should I just switch to calling the LoopingCall constructor in the old
> way? I'm not sure I'd like to do that, even if only for consistency
> reasons.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071113/8dadfb55/attachment.htm 

From radix at twistedmatrix.com  Tue Nov 13 09:35:01 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 13 Nov 2007 09:35:01 -0500
Subject: [Twisted-Python] "Old style" classes in Twisted and inheritance
In-Reply-To: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
References: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
Message-ID: <60ed19d40711130635v13e2063g173da2854ce518c@mail.gmail.com>

On Nov 13, 2007 9:07 AM, Atilla <theatilla at gmail.com> wrote:
> Is there any practicular reason for that? Am I wrong to try inherit
> the Looping Call ?

Yes. You're not really getting any benefit from inheriting from it. I
suggest you use composition like in your first example.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From theatilla at gmail.com  Tue Nov 13 10:30:13 2007
From: theatilla at gmail.com (Atilla)
Date: Tue, 13 Nov 2007 16:30:13 +0100
Subject: [Twisted-Python] "Old style" classes in Twisted and inheritance
In-Reply-To: <37d49ed40711130634k3b371da0r339659a70ba41f2e@mail.gmail.com>
References: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
	<37d49ed40711130634k3b371da0r339659a70ba41f2e@mail.gmail.com>
Message-ID: <b53c932d0711130730w6f61f6bfpbdaa39de6b2c912@mail.gmail.com>

On 13/11/2007, Andy Fundinger <Andy at newworldelectric.com> wrote:
> I ran into this too, but have had no trouble 'converting' to new style
> classes by just adding "object" to the superclass list.  Anyone have reasons
> why we can't do that?
>
> -Andy Fundinger
>

I actually had problems with that, python complained when I tried to
inherit "object" and LoopingCall together and then use super(), which
doesn't make sense for Old style objects.


Thanks for the responses. I was getting the feeling that I'm just
trying to abuse language features with no real benefit. I'll stick to
the composition I have above, or even clean it up a little bit to be
more clear.



From theatilla at gmail.com  Tue Nov 13 10:33:56 2007
From: theatilla at gmail.com (Atilla)
Date: Tue, 13 Nov 2007 16:33:56 +0100
Subject: [Twisted-Python] Correct way of stopping twistd
Message-ID: <b53c932d0711130733u4ceba008x1b7c4e374ce01ccd@mail.gmail.com>

Is there an accepted method of stopping twistd? I'd like to package my
service as a service with start/stop commands and for now i'm doing
"kill -HUP #pid", where the pid is read from the twistd.pid file.



From exarkun at divmod.com  Tue Nov 13 10:54:10 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Nov 2007 10:54:10 -0500
Subject: [Twisted-Python] Correct way of stopping twistd
In-Reply-To: <b53c932d0711130733u4ceba008x1b7c4e374ce01ccd@mail.gmail.com>
Message-ID: <20071113155410.8162.802042879.divmod.quotient.35354@ohm>

On Tue, 13 Nov 2007 16:33:56 +0100, Atilla <theatilla at gmail.com> wrote:
>Is there an accepted method of stopping twistd? I'd like to package my
>service as a service with start/stop commands and for now i'm doing
>"kill -HUP #pid", where the pid is read from the twistd.pid file.
>

There's been a bit of discussion about adding "twistd stop", but it
hasn't happened yet.

Jean-Paul



From jdawson at io.com  Tue Nov 13 16:43:23 2007
From: jdawson at io.com (John Dawson)
Date: Tue, 13 Nov 2007 15:43:23 -0600
Subject: [Twisted-Python] Calling reactor.run() / reactor.stop() twice
Message-ID: <7e83222c0711131343i69db1e3bqabaddbb4c549f06@mail.gmail.com>

Hi,

The following Twisted code hangs, since the second call to
reactor.stop() doesn't seem to really stop the reactor.  Is this a bug
in Twisted, or is it impermissible to run/stop a reactor more than
once?

#!/opt/local/bin/python2.5

from twisted.internet import reactor

def ping():
    def stop_reactor():
        print "stopping reactor"
        reactor.stop()
    print "Ping: ENTER"
    print "Setting up timer for callback"
    reactor.callLater(0.25, stop_reactor)
    print "Running reactor"
    reactor.run()
    print "Reactor stopped"
    print "Ping: EXIT"

print "ping1"
ping()
print
print "ping2"
ping()


It prints:

$ ./reactor1.py
ping1
Ping: ENTER
Setting up timer for callback
Running reactor
stopping reactor
Reactor stopped
Ping: EXIT

ping2
Ping: ENTER
Setting up timer for callback
Running reactor
stopping reactor

And then hangs.

Any help/advice appreciated.

John

-- 
John Dawson <jdawson at io.com>



From daedalus at eigenmagic.com  Tue Nov 13 17:10:16 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Wed, 14 Nov 2007 09:10:16 +1100
Subject: [Twisted-Python] Calling reactor.run() / reactor.stop() twice
In-Reply-To: <7e83222c0711131343i69db1e3bqabaddbb4c549f06@mail.gmail.com>
References: <7e83222c0711131343i69db1e3bqabaddbb4c549f06@mail.gmail.com>
Message-ID: <1194991816.20835.3.camel@fnord.melbourne.eigenmagic.net>

On Tue, 2007-11-13 at 15:43 -0600, John Dawson wrote:
> Hi,
> 
> The following Twisted code hangs, since the second call to
> reactor.stop() doesn't seem to really stop the reactor.  Is this a bug
> in Twisted, or is it impermissible to run/stop a reactor more than
> once?

The reactor is not restartable. Attempting to restart the reactor will
result in unpredictable behaviour.

Why do you want to do this?

-- 
Justin Warren <daedalus at eigenmagic.com>



From exarkun at divmod.com  Tue Nov 13 17:14:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Nov 2007 17:14:22 -0500
Subject: [Twisted-Python] Calling reactor.run() / reactor.stop() twice
In-Reply-To: <7e83222c0711131343i69db1e3bqabaddbb4c549f06@mail.gmail.com>
Message-ID: <20071113221422.8162.2088546795.divmod.quotient.35467@ohm>

On Tue, 13 Nov 2007 15:43:23 -0600, John Dawson <jdawson at io.com> wrote:
>Hi,
>
>The following Twisted code hangs, since the second call to
>reactor.stop() doesn't seem to really stop the reactor.  Is this a bug
>in Twisted, or is it impermissible to run/stop a reactor more than
>once?

The latter.

Jean-Paul



From jdawson at io.com  Tue Nov 13 17:47:12 2007
From: jdawson at io.com (John Dawson)
Date: Tue, 13 Nov 2007 16:47:12 -0600
Subject: [Twisted-Python] Calling reactor.run() / reactor.stop() twice
In-Reply-To: <1194991816.20835.3.camel@fnord.melbourne.eigenmagic.net>
References: <7e83222c0711131343i69db1e3bqabaddbb4c549f06@mail.gmail.com>
	<1194991816.20835.3.camel@fnord.melbourne.eigenmagic.net>
Message-ID: <7e83222c0711131447x1213c08ao5c43009cefc3675b@mail.gmail.com>

I know it's a bizarre thing to want.  I've got a client/server system
using Twisted.  The client doesn't do anything asynchronously, except,
of course, for its interaction with the server via Perspective Broker.
 The way the code is written right now, the code is only starts up the
reactor and interacts with the server when it needs to send an RPC to
the server.  Until now, it would only ever do (at most) one RPC to the
server.  But I now need to do two.  It would have been simpler to fix
the client code if the reactor were restartable.  But given your
feedback, it looks I'll have to restructure things a bit to
accommodate having a long-running reactor.

The client pseudocode looks something like this:

    def start_server():
        # Fire off an ssh command to run the server on the remote host

    def stop_server():
        # start reactor
        # connect to server
        # send PB message to server to tell it to shut down
        # stop reactor

    def get_server_status():
        # start reactor
        # connect to server
        # stop reactor
        # return True/False of whether connect was successful

    def restart_server():
        if get_server_status():
            stop_server()
        start_server()

But, it's certainly fixable to have just one run/stop of the reactor loop.

Thanks for help!
John


On 11/13/07, Justin Warren <daedalus at eigenmagic.com> wrote:
> On Tue, 2007-11-13 at 15:43 -0600, John Dawson wrote:
> > Hi,
> >
> > The following Twisted code hangs, since the second call to
> > reactor.stop() doesn't seem to really stop the reactor.  Is this a bug
> > in Twisted, or is it impermissible to run/stop a reactor more than
> > once?
>
> The reactor is not restartable. Attempting to restart the reactor will
> result in unpredictable behaviour.
>
> Why do you want to do this?
>
> --
> Justin Warren <daedalus at eigenmagic.com>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
John Dawson <jdawson at io.com>



From jasper at peak.org  Mon Nov 12 11:56:15 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 08:56:15 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <op.t1njvgqfz3pzfc@nitrogenycs2>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>	<47376ED2.8010408@peak.org>
	<op.t1njvgqfz3pzfc@nitrogenycs2>
Message-ID: <473885AF.1040704@peak.org>

Nitro wrote:
> In a game you usually never send/receive huge objects. For various 
> reasons you always try to reduce your bandwidth as much as possible. A 
> low bandwidth implies a rather low number of objects and data.
Actually, in my (and most) turn based strategy games, it's normal to 
send lots of data, every turn.  Not all games are realtime, with data 
that fits easily into small packets.

-Jasper




From zooko at zooko.com  Tue Nov 13 21:50:40 2007
From: zooko at zooko.com (zooko)
Date: Tue, 13 Nov 2007 19:50:40 -0700
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <1194620709.13986.20.camel@localhost.localdomain>
References: <066a01c82255$7d5276a0$77f763e0$@com>
	<1194620709.13986.20.camel@localhost.localdomain>
Message-ID: <A188CF17-4A1E-43B5-BCA9-D8DBC3E802E1@zooko.com>

The cool way to do what you want is to use dtrace-enabled Python:

http://joyeur.com/2007/08/29/using-dtrace-enabled-python-in-a-joyent- 
accelerators

The problem is that it only works on Solaris.

Regards,

Zooko




From ronaldoussoren at mac.com  Wed Nov 14 02:04:23 2007
From: ronaldoussoren at mac.com (Ronald Oussoren)
Date: Wed, 14 Nov 2007 08:04:23 +0100
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <A188CF17-4A1E-43B5-BCA9-D8DBC3E802E1@zooko.com>
References: <066a01c82255$7d5276a0$77f763e0$@com>
	<1194620709.13986.20.camel@localhost.localdomain>
	<A188CF17-4A1E-43B5-BCA9-D8DBC3E802E1@zooko.com>
Message-ID: <446E60BC-CC13-4C99-894B-DA66810E6EAE@mac.com>


On 14 Nov, 2007, at 3:50, zooko wrote:

> The cool way to do what you want is to use dtrace-enabled Python:
>
> http://joyeur.com/2007/08/29/using-dtrace-enabled-python-in-a-joyent-accelerators
>
> The problem is that it only works on Solaris.

OSX 10.5 also has dtrace support, and /usr/bin/python is already  
dtrace enabled.

Ronald

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2224 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20071114/3e413479/attachment.bin 

From sipickles at hotmail.com  Wed Nov 14 03:34:27 2007
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 14 Nov 2007 08:34:27 +0000
Subject: [Twisted-Python] Porting my Win32 Twisted to Linux Twisted
Message-ID: <BAY114-DAV2B55F3499AA3FFE4207B3BE810@phx.gbl>

Okay, my small problem is probably not down to twisted, more likely the 
problem resides somewhere between my seat and the keyboard. Anyway I 
hope one of you more experienced linux/Twisted users can shed some light.

I've built some small Twisted-Python client/server applications on 
Win32. Now I've finally made the break and moved to Ubuntu!

Its very impressive, but I have a few inevitable problems.

I have a server listening on localhost:7001, and a client trying to 
connect (local too). The client doesn't see the server, and keeps making 
connection attempts.

When I run System>Network Tools>Portscan on localhost, I can see port 
7001 is open with a service called 'afs3-callback'.

The odd thing is, once I have run the Portscan, my client suddenly sees 
the server and connects! Am I neglecting to do anything before running 
my python server, like open the port?

Why does Portscan seem to open the port for me?

Many thanks for your help and advice.

S







From Marcin.Kasperski at softax.com.pl  Wed Nov 14 04:51:59 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Wed, 14 Nov 2007 10:51:59 +0100
Subject: [Twisted-Python] Re: Porting my Win32 Twisted to Linux Twisted
References: <BAY114-DAV2B55F3499AA3FFE4207B3BE810@phx.gbl>
Message-ID: <87r6itjgsg.fsf@cauchy.softax.local>

> When I run System>Network Tools>Portscan on localhost, I can see port
> 7001 is open with a service called 'afs3-callback'.

This is somewhat misleading and does not matter anything. Simply, you
have in your /etc/services the info that port 7001 is typically used
by afs3-callback (whatever it is). Similarly the same program will
say that you are using service 'www' if port 80 is open. This is
just popular convention applied by many programs - instead of showing
numerical port, show text assigned to this port in /etc/services.

To truly check what is running on given port, try sth like

   sudo netstat -l --tcp -p

(there surely is some GUI which does the same, but I am not expert in
GUIs, learned command lines before they existed ;-))

You will get the list of all processess listening on TCP ports. In
particular you may see lines like

tcp        0      0 *:4433                  *:*                     LISTEN     26164/apache

(this is from my host, on port 4433 there is some apache process
runing, pid of the process is 26164). To check in more detail what
process do you see, try sth like

   ps 26164

(giving the pid from the line above) and you will see the command
which spawned the process. Of course you can also search for this
pid in some GUI process monitor.


Some alternative way to check some ports is to ... telnet there.
For example

   telnet localhost 7001

You get direct connection to the other side. It may give you some info
(many daemons send some initial string), or ... not. But in particular
it will tell you whether there is any process on the other side (if
not, you get 'Connection refused' error). To leave such session press
Ctrl-] and enter 'quit' after 'telnet>' prompt.

>
> The odd thing is, once I have run the Portscan, my client suddenly
> sees the server and connects!
> (...)
>
> Why does Portscan seem to open the port for me?

The only reasonable guess I can make is that your server misbehaves
somehow, for example incorrectly handles some initial connection(s).
Portscan opens connection to it and closes it, maybe it helps your
server.

Another guess is that maybe you just missed something. For example,
maybe your server works when accessed as localhost but does not work
when accesssed on yourmachinetrueinterface (or reverse)...

If you need to diagnose your network communication in more detail,
you may take a look at wireshark (formerly ethereal) package,
it lets you capture and review the whole network communication.


-- 
----------------------------------------------------------------------
| Marcin Kasperski   | Working overtime sucks the spirit and
| http://mekk.waw.pl |   motivation out of a team. (Wells)
|                    |
----------------------------------------------------------------------




From alan.franzoni.xyz at gmail.com  Wed Nov 14 10:35:09 2007
From: alan.franzoni.xyz at gmail.com (Alan Franzoni)
Date: Wed, 14 Nov 2007 16:35:09 +0100
Subject: [Twisted-Python] Timing problem with PB Broker's connectionReady
Message-ID: <af7fad5b0711140735p4eb369f7x10fba00f77c6082a@mail.gmail.com>

Hello everybody,
I'm running Twisted 2.5 on 32-bit Ubuntu Linux (tested with both Feisty and
Gutsy) and python2.5. All packages are the distro's own ones.

I'm experiencing a small problem with the broker's connectionReady method on
the server side of the PB connection. It's not huge and doesn't cause
problems in real-world applications, but it's making more difficult for me
to write a proper unit test.

 According to the docs, connectionReady is called as soon as Banana
negotiation is done. This is true on the client side; connectionReady gets
called before the client can get the root object from the server.

But this is not true on the server side; as you can see from the printout of
the attached file, the client says it already has got the server's root
object but the connectionready hasn't been called on the server yet.

In order to be sure connectionReady has been called on the server side, I
must trigger an additional callRemote.

I suppose there's some sort of caching or lazy behaviour implied here. Did I
do something wrong? How can I force connectionReady to be called on the
server side *before* the client can actually fetch the root object's
remotereference?

Thanks.

-- 
Alan Franzoni <alan.franzoni.xyz at gmail.com>
-
Togli .xyz dalla mia email per contattarmi.
Remove .xyz from my address in order to contact me.
-
GPG Key Fingerprint (Key ID = FE068F3E):
5C77 9DC3 BD5B 3A28 E7BC 921A 0255 42AA FE06 8F3E
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071114/af325a7c/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testpbserv.py
Type: text/x-python
Size: 2054 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20071114/af325a7c/attachment.py 

From drew.smathers at gmail.com  Wed Nov 14 14:08:22 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 14 Nov 2007 14:08:22 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
Message-ID: <368574aa0711141108oae04315ja76797bef7dc9197@mail.gmail.com>

> Actually, punting to another thread or process is still going to slow
> down your rendering, but in a much less deterministic way.  The OS
> scheduler is going to be interrupting the rendering rather than the
> long-running serialization function.  Breaking down the serialization
> work into smaller chunks will allow you to better control what's going
> on.
>

Holy crap!  I just grew an extra brain cell!  It has tingly sensation like
selson blue.

So let me offer some empirical evidence of this phenomenon which I was not
quite understanding until reading your comment - of course, it makes
complete sense now.  I've been working on a cheesey game in my spare time
called Twisted Wars (yes, the Twisted), and just to amuse myself I decided
to run the reactor normally rather than threaded select and model the
runtime loop as a cooperative iterator - the idea being that eventually the
runtime loop could be many cooiterators, to allow for an actor-based system.


To my surprise, after changing the core runtime to a cooiterator, my frame
rate improved (albeit only about +5 - but this might be more noticeable if I
had a decent frame rate to start with).  I explained to a friend who's also
working on the game and they refused to believe me! Ha!

-Drew
-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071114/b0a7cc7c/attachment.htm 

From drew.smathers at gmail.com  Wed Nov 14 14:15:52 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 14 Nov 2007 14:15:52 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <473885AF.1040704@peak.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org> <op.t1njvgqfz3pzfc@nitrogenycs2>
	<473885AF.1040704@peak.org>
Message-ID: <368574aa0711141115o63abc9bcu47bb73f7e0696847@mail.gmail.com>

On Nov 12, 2007 11:56 AM, Jasper <jasper at peak.org> wrote:

> Nitro wrote:
> > In a game you usually never send/receive huge objects. For various
> > reasons you always try to reduce your bandwidth as much as possible. A
> > low bandwidth implies a rather low number of objects and data.
> Actually, in my (and most) turn based strategy games, it's normal to
> send lots of data, every turn.  Not all games are realtime, with data
> that fits easily into small packets.
>
> -Jasper
> <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
>

For this specific use case, I would expect using a producer/consumer:
http://twistedmatrix.com/projects/core/documentation/howto/producers.html

However, it still seems unlikely that you'd need to transmit that much data
even in a turn-based system.  How many bytes are we talking about?

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071114/136d16a5/attachment.htm 

From exarkun at divmod.com  Wed Nov 14 16:22:14 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 Nov 2007 16:22:14 -0500
Subject: [Twisted-Python] Timing problem with PB Broker's connectionReady
In-Reply-To: <af7fad5b0711140735p4eb369f7x10fba00f77c6082a@mail.gmail.com>
Message-ID: <20071114212214.8162.748263551.divmod.quotient.35874@ohm>

On Wed, 14 Nov 2007 16:35:09 +0100, Alan Franzoni <alan.franzoni.xyz at gmail.com> wrote:
>Hello everybody,
>I'm running Twisted 2.5 on 32-bit Ubuntu Linux (tested with both Feisty and
>Gutsy) and python2.5. All packages are the distro's own ones.
>
>I'm experiencing a small problem with the broker's connectionReady method on
>the server side of the PB connection. It's not huge and doesn't cause
>problems in real-world applications, but it's making more difficult for me
>to write a proper unit test.
>
> According to the docs, connectionReady is called as soon as Banana
>negotiation is done. This is true on the client side; connectionReady gets
>called before the client can get the root object from the server.
>
>But this is not true on the server side; as you can see from the printout of
>the attached file, the client says it already has got the server's root
>object but the connectionready hasn't been called on the server yet.
>
>In order to be sure connectionReady has been called on the server side, I
>must trigger an additional callRemote.
>

It's not triggered by the callRemote - the callRemote just keeps the example
program running long enough so that the server side actually has a chance
to get to connectionReady.

This is because there's no network activity required in between the client's
connectionReady call and the Deferred returned by getRootObject firing.
Since the client gets connectionReady first, without the callRemote (or
something else to prevent the process from exiting right away), the server
never receives the dialect negotiation response, so it never calls
connectionReady - as far as it is concerned, the connection never *is*
ready.

>I suppose there's some sort of caching or lazy behaviour implied here. Did I
>do something wrong? How can I force connectionReady to be called on the
>server side *before* the client can actually fetch the root object's
>remotereference?

You can't, as PB is currently implemented.  I'm not sure you really need
this, though.  Can you describe the difficulty you've had writing unit
tests?

Jean-Paul



From sipickles at hotmail.com  Thu Nov 15 03:01:02 2007
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 15 Nov 2007 08:01:02 +0000
Subject: [Twisted-Python] Re: Porting my Win32 Twisted to Linux Twisted
	[SOLVED]
In-Reply-To: <87r6itjgsg.fsf@cauchy.softax.local>
References: <BAY114-DAV2B55F3499AA3FFE4207B3BE810@phx.gbl>
	<87r6itjgsg.fsf@cauchy.softax.local>
Message-ID: <BAY114-DAV19FA488BBA22664D18E7F8BE820@phx.gbl>

It seems Ubuntu is confused by the use of 7001 for the port. It does 
appear in the 'reserved' ports lists as 'afs3-callback'


Changing this to another unreserved value, 47001 for example, and its 
fine. I guess windows is more sloppy on this front.

Thanks for the advice, Marcin. Wireshark looks interesting too, I just 
have to learn how to comprehend all the output now!



Marcin Kasperski wrote:
>> When I run System>Network Tools>Portscan on localhost, I can see port
>> 7001 is open with a service called 'afs3-callback'.
>>     
>
> This is somewhat misleading and does not matter anything. Simply, you
> have in your /etc/services the info that port 7001 is typically used
> by afs3-callback (whatever it is). Similarly the same program will
> say that you are using service 'www' if port 80 is open. This is
> just popular convention applied by many programs - instead of showing
> numerical port, show text assigned to this port in /etc/services.
>
> To truly check what is running on given port, try sth like
>
>    sudo netstat -l --tcp -p
>
> (there surely is some GUI which does the same, but I am not expert in
> GUIs, learned command lines before they existed ;-))
>
> You will get the list of all processess listening on TCP ports. In
> particular you may see lines like
>
> tcp        0      0 *:4433                  *:*                     LISTEN     26164/apache
>
> (this is from my host, on port 4433 there is some apache process
> runing, pid of the process is 26164). To check in more detail what
> process do you see, try sth like
>
>    ps 26164
>
> (giving the pid from the line above) and you will see the command
> which spawned the process. Of course you can also search for this
> pid in some GUI process monitor.
>
>
> Some alternative way to check some ports is to ... telnet there.
> For example
>
>    telnet localhost 7001
>
> You get direct connection to the other side. It may give you some info
> (many daemons send some initial string), or ... not. But in particular
> it will tell you whether there is any process on the other side (if
> not, you get 'Connection refused' error). To leave such session press
> Ctrl-] and enter 'quit' after 'telnet>' prompt.
>
>   
>> The odd thing is, once I have run the Portscan, my client suddenly
>> sees the server and connects!
>> (...)
>>
>> Why does Portscan seem to open the port for me?
>>     
>
> The only reasonable guess I can make is that your server misbehaves
> somehow, for example incorrectly handles some initial connection(s).
> Portscan opens connection to it and closes it, maybe it helps your
> server.
>
> Another guess is that maybe you just missed something. For example,
> maybe your server works when accessed as localhost but does not work
> when accesssed on yourmachinetrueinterface (or reverse)...
>
> If you need to diagnose your network communication in more detail,
> you may take a look at wireshark (formerly ethereal) package,
> it lets you capture and review the whole network communication.
>
>
>   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071115/70d236ed/attachment.htm 

From jml at mumak.net  Thu Nov 15 10:02:19 2007
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 15 Nov 2007 10:02:19 -0500
Subject: [Twisted-Python] Keeping track of what you're doing
Message-ID: <d06a5cd30711150702g27abad1ex763c3e607b3772d7@mail.gmail.com>

Hey guys,

One of the big problems I've had as a part-time Twisted contributor is
keeping track of what the hell I'm doing, or what I should be doing,
or what I'm waiting for. Between the listing of my local branches/
directory, my assigned tickets and the review queue things can get
confusing.

It turns out that Jean-Paul has set up a couple of useful Trac reports
and features to help. I thought I'd post them to the list, because
they are making my life more pleasant.


1. Review Tickets, By Order You Should Review Them In
http://twistedmatrix.com/trac/report/15

This would be a little better if it excluded branches that you
authored, but at the moment we don't keep this information.


2. Tickets with Branches
This doesn't have a convenient URL. However, you can simply do a
custom query for tickets that are open, owned by you and have 'Branch'
is not ''. Bookmark it.

This is a good way to keep track of the tickets that you have actually
started. If you are like me, you use the "Assigned" state fairly
haphazardly. It's a good idea to review this list and compare it to
the branches in your local directory and the branches in the actual
repository so that you can remove stale or merged branches.


3. My Tickets Awaiting Review
http://twistedmatrix.com/trac/report/17

This shows tickets that you have put up for review.


Thanks to Jean-Paul for setting up these queries and continuing to
make our Trac more helpful.

jml



From glyph at divmod.com  Thu Nov 15 13:40:43 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Nov 2007 18:40:43 -0000
Subject: [Twisted-Python] Two main loops
In-Reply-To: <368574aa0711141108oae04315ja76797bef7dc9197@mail.gmail.com>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
	<368574aa0711141108oae04315ja76797bef7dc9197@mail.gmail.com>
Message-ID: <20071115184043.21558.907313107.divmod.xquotient.1179@joule.divmod.com>

On 14 Nov, 07:08 pm, drew.smathers at gmail.com wrote:
>>Actually, punting to another thread or process is still going to slow
>>down your rendering, but in a much less deterministic way.  The OS
>>scheduler is going to be interrupting the rendering rather than the
>>long-running serialization function.  Breaking down the serialization
>>work into smaller chunks will allow you to better control what's going
>>on.
>
>Holy crap!  I just grew an extra brain cell!  It has tingly sensation 
>like
>selson blue.

Nice to hear that we're helping to increase the transistor density of 
the universe.
>So let me offer some empirical evidence of this phenomenon which I was 
>not
>quite understanding until reading your comment - of course, it makes
>complete sense now.  I've been working on a cheesey game in my spare 
>time
>called Twisted Wars (yes, the Twisted), and just to amuse myself I 
>decided
>to run the reactor normally rather than threaded select and model the
>runtime loop as a cooperative iterator - the idea being that eventually 
>the
>runtime loop could be many cooiterators, to allow for an actor-based 
>system.

I've seen Twisted Wars.  It's flattering, but I hope it's going to 
evolve from beyond its, ahem, "humble" beginnings into something more 
interesting :).  Nice to unveil the mystery of its author, though ...
>To my surprise, after changing the core runtime to a cooiterator, my 
>frame
>rate improved (albeit only about +5 - but this might be more noticeable 
>if I
>had a decent frame rate to start with).  I explained to a friend who's 
>also
>working on the game and they refused to believe me! Ha!

Although I'm glad you've gained some insight into the exciting world of 
improving performance (or not) with parallelism, I wouldn't read too 
much into this.  threadedselectreactor is a particularly poorly-tested 
piece of code and it might have performance bugaboos of its own that 
have nothing to do with concurrency.  Also, as I said, I've tried 
Twisted Wars; one of the things I noticed about it is that the framerate 
seems to degrade slowly over time until the game becomes sluggish and 
unplayable.  It seems like you're leaking computation somewhere.  So 
you've got a lot of factors to consider when measuring your overall 
framerate.



From drew.smathers at gmail.com  Thu Nov 15 14:24:13 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 15 Nov 2007 14:24:13 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071115184043.21558.907313107.divmod.xquotient.1179@joule.divmod.com>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
	<368574aa0711141108oae04315ja76797bef7dc9197@mail.gmail.com>
	<20071115184043.21558.907313107.divmod.xquotient.1179@joule.divmod.com>
Message-ID: <368574aa0711151124n6d2ae7a4w9aa3fc10aac3b401@mail.gmail.com>

> Although I'm glad you've gained some insight into the exciting world of
> improving performance (or not) with parallelism, I wouldn't read too
> much into this.  threadedselectreactor is a particularly poorly-tested
> piece of code and it might have performance bugaboos of its own that
> have nothing to do with concurrency.  Also, as I said, I've tried
> Twisted Wars; one of the things I noticed about it is that the framerate
> seems to degrade slowly over time until the game becomes sluggish and
> unplayable.  It seems like you're leaking computation somewhere.  So
> you've got a lot of factors to consider when measuring your overall
> framerate.
>

Yes, it leaks like a dam in Holland.  That was a bug that cropped up at the
end of the competition.  But that's become the new goal of the game - get as
money as money as possible before your memory is full and you die.

The minor performance boost was observable at the start of the game before
the scenes are flooded with unclaimed TCP rays.  If there is a next game,
I'll probably start from scratch and take more careful steps to prove the
scene artifact management is robust before diving into anything more
complex.

Thanks for your input.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071115/4614195b/attachment.htm 

From dialtone at divmod.com  Thu Nov 15 14:37:48 2007
From: dialtone at divmod.com (dialtone at divmod.com)
Date: Thu, 15 Nov 2007 19:37:48 -0000
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <066a01c82255$7d5276a0$77f763e0$@com>
References: <066a01c82255$7d5276a0$77f763e0$@com>
Message-ID: <20071115193748.21558.759484575.divmod.xquotient.1182@joule.divmod.com>


On 8 Nov, 10:19 pm, matusis at yahoo.com wrote:
>What is the best non-intrusive way to profile a live twisted 
>application?
>
>
>
>We have TCP servers with epoll reactors.
>
>We want to optimize them as our usage grows.

The only real way to do this is to use somthing similar to DTrace.

There is a similar tool called SystemTap for linux but it's not nearly
as refined or tested as DTrace.

DTrace works under FreeBSD, Solaris, QNX Neutrino, OSX and maybe others.
SystemTap only works under Linux AFAIK, and probably only under RedHat.

--
Valentino Volonghi



From zooko at zooko.com  Fri Nov 16 02:43:21 2007
From: zooko at zooko.com (zooko)
Date: Thu, 15 Nov 2007 23:43:21 -0800
Subject: [Twisted-Python] Hack Fest -- this coming Monday evening,
	allmydata.com, San Francisco
Message-ID: <38B1A30B-02EE-4827-A2D5-942E51186401@zooko.com>

Folks:

We're hosting another Hack Fest at allmydata headquarters in San  
Francisco!  This time will be much like last time [1], but with more  
emphasis on Real Live Code on projector screens.  The fun will begin  
after the worker drones clock out of their factories at 5 o'clock  
PM.  The fun will probably end sometime before midnight, when we all  
turn into pumpkins.

So please RSVP by e-mailing zooko at zooko.com and I will give you  
directions to our office and the URL for the planning wiki.  Plan to  
bring some Real Live Code if you have any, preferably open-source and/ 
or peer-to-peer.  You get points for demoing your cool project,  
double-points for demonstrating how you can change the source code  
before our very eyes to make it do something new, and triple points  
for committing the results into your revision control repository  
while the audience watches!

We hope to have two projectors working side by side.

Allmydata.com will provide projectors, pop, packets, pizza, pillows,  
and party-favors.

Regards,

Zooko

[1] http://lists.zooko.com/pipermail/p2p-hackers/2007-November/ 
001412.html




From itamar at itamarst.org  Fri Nov 16 08:58:12 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 16 Nov 2007 08:58:12 -0500
Subject: [Twisted-Python] [Fwd: Last chance for PyCon talk & tutorial
	proposals!]
Message-ID: <1195221493.20233.25.camel@localhost.localdomain>


-- 
Itamar Shtull-Trauring
http://itamarst.org

-------------- next part --------------
An embedded message was scrubbed...
From: unknown sender
Subject: no subject
Date: no date
Size: 6842
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071116/e175ccd8/attachment.eml 

From raja at aonic.net  Fri Nov 16 22:24:48 2007
From: raja at aonic.net (Raja Kapur)
Date: Fri, 16 Nov 2007 22:24:48 -0500
Subject: [Twisted-Python] Problem setting up epollreactor on Leopard
Message-ID: <4d3038af0711161924i4028079bt255789590727f25c@mail.gmail.com>

I'm pretty new to the world of Twisted and Python.

I'm having trouble setting up Twisted with epollreactor on Mac OS X
Leopard, I downloaded the Twisted 2.5.0 tarball which contained all
the components of Twisted.

I installed the package using setup.py, everything seems to be working
fine except epollreactor.

When I do:
   from twisted.internet import epollreactor
   epollreactor.install()

Python says:
   line 1, in <module>
       from twisted.internet import epollreactor
   ImportError: cannot import name epollreactor

I tried Googling around and checking the mailing list archives without
much luck, anyone have any suggestions or ideas?

Thank you!



From drew.smathers at gmail.com  Sat Nov 17 00:27:05 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Sat, 17 Nov 2007 00:27:05 -0500
Subject: [Twisted-Python] Problem setting up epollreactor on Leopard
In-Reply-To: <4d3038af0711161924i4028079bt255789590727f25c@mail.gmail.com>
References: <4d3038af0711161924i4028079bt255789590727f25c@mail.gmail.com>
Message-ID: <368574aa0711162127t7d3e48f9u51bac00208317b95@mail.gmail.com>

> I'm having trouble setting up Twisted with epollreactor on Mac OS X
> Leopard, I downloaded the Twisted 2.5.0 tarball which contained all
> the components of Twisted.


So far as I know, epoll only exists on Linux ... so yeah, you won't have
much luck with that.

-Drew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071117/c685d139/attachment.htm 

From raja at aonic.net  Sat Nov 17 07:35:00 2007
From: raja at aonic.net (Raja Kapur)
Date: Sat, 17 Nov 2007 07:35:00 -0500
Subject: [Twisted-Python] Problem setting up epollreactor on Leopard
In-Reply-To: <368574aa0711162127t7d3e48f9u51bac00208317b95@mail.gmail.com>
References: <4d3038af0711161924i4028079bt255789590727f25c@mail.gmail.com>
	<368574aa0711162127t7d3e48f9u51bac00208317b95@mail.gmail.com>
Message-ID: <4d3038af0711170435v599dca71qbe6ca497ddc3c425@mail.gmail.com>

Well that explains it ;) and apparently the kqreactor only supports
FreeBSD at the moment.

Thank you

On 11/17/07, Drew Smathers <drew.smathers at gmail.com> wrote:
>
>
> > I'm having trouble setting up Twisted with epollreactor on Mac OS X
> > Leopard, I downloaded the Twisted 2.5.0 tarball which contained all
> > the components of Twisted.
>
> So far as I know, epoll only exists on Linux ... so yeah, you won't have
> much luck with that.
>  -Drew
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From alan.franzoni.xyz at gmail.com  Sat Nov 17 12:20:59 2007
From: alan.franzoni.xyz at gmail.com (Alan Franzoni)
Date: Sat, 17 Nov 2007 18:20:59 +0100
Subject: [Twisted-Python] Timing problem with PB Broker's connectionReady
In-Reply-To: <20071114212214.8162.748263551.divmod.quotient.35874@ohm>
References: <af7fad5b0711140735p4eb369f7x10fba00f77c6082a@mail.gmail.com>
	<20071114212214.8162.748263551.divmod.quotient.35874@ohm>
Message-ID: <af7fad5b0711170920o212a590cp6add083f5acdf147@mail.gmail.com>

On Nov 14, 2007 10:22 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> You can't, as PB is currently implemented.  I'm not sure you really need
> this, though.  Can you describe the difficulty you've had writing unit
> tests?

Hello, thanks for replying. Maybe it was me who misunderstood the way PB worked.

My biggest problem at this time is that I don't seem to be able to
create a proper workflow for my PB-based app.

It happens that connectionLost *can* be called on my factory when
connectionReady *has not been called yet* (mostly if something bad
happened during the handshake). I wouldn't have ever expected such a
behaviour.

I will work around this BTW. Thanks!
-- 
Alan Franzoni <alan.franzoni.xyz at gmail.com>
-
Togli .xyz dalla mia email per contattarmi.
Remove .xyz from my address in order to contact me.
-
GPG Key Fingerprint (Key ID = FE068F3E):
5C77 9DC3 BD5B 3A28 E7BC 921A 0255 42AA FE06 8F3E



From exarkun at twistedmatrix.com  Sun Nov 18 00:05:03 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Nov 2007 05:05:03 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1195362303.65.1157789101@twistedmatrix.com

Bug summary
______________________
Summary for 2007-11-11 through 2007-11-18
Bugs opened: 28    Bugs closed: 15  Total open bugs: 1043 (+13)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +2  |Highest:  -1          |Conch:               +1  
|Enhancement: +12  |High:     +1          |Core:                +3  
                   |Normal:  +13          |Release Management: +10  
                   |Low:      +1          |Trial:               +0  
                                          |Vfs:                 -1  
                                          |Web:                 +1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2882] test_process hanging on vista slave (popup)- (opened by bigdog)
    defect          core       http://twistedmatrix.com/trac/ticket/2882

[#2885] Automate version updating (goodly) (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2885

[#2893] assertEqual is hard to read. (opened by jml) (CLOSED, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2893

[#2897] Deprecate visiting test (opened by jml) (CLOSED, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2897

[#2898] Add ITestCase for Trial tests (opened by jml) (CLOSED, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2898

[#2899] addCleanup should run even if setUp fails. (opened by jml) (CLOSED, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2899

[#2906] Provide framework for decorating tests (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2906

[#2882] test_process hanging on vista slave (popup)- (opened by bigdog)
    defect          core       http://twistedmatrix.com/trac/ticket/2882

                    ===== High =====
[#2881] Add a variable in twisted.python.runtime to check for vista (opened by bigdog)
    defect          core       http://twistedmatrix.com/trac/ticket/2881

[#2896] FilePath.exists gives results inconsistent with FilePath.isdir (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2896

                    ===== Normal =====
[#2883] Remove attributes and methods from IReporter that imply text output (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2883

[#2884] Tool to update / generate NEWS file (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2884

[#2886] Need good code for building Twisted release tarballs. (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2886

[#2887] Automated release announcement (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2887

[#2888] Automate uploading tarballs to TMRC (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2888

[#2889] Automate updating the downloads page and the front page when a new release happens (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2889

[#2890] Automate updating the howtos on the twistedmatrix web site (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2890

[#2891] Automate updating the API docs on the twistedmatrix web site (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2891

[#2892] Holistic release automation tool (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2892

[#2894] twisted.test.test_defer.DeferredTestCase.testMaybeDeferred should be faster and four different tests (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2894

[#2895] proxyForInterface should make it possible to specify the attribute name that the wrapped object is assigned to (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2895

[#2901] proxyForInterface should allow upcalls (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2901

[#2902] bad flag value in twisted.conch.ssh.filetransfer (opened by mmoskwa)
    defect          conch      http://twistedmatrix.com/trac/ticket/2902

[#2903] Clean up warnings in twisted.trial tests (opened by jml) (CLOSED, wontfix)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2903

[#2904] assertWarns doesn't handle duplicate warnings properly (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/2904

[#2905] ReverseProxyResource adds an extra '/' which confuses the backend web server (opened by trohed)
    defect          web        http://twistedmatrix.com/trac/ticket/2905

[#2907] "./setup.py install --prefix=relative/path" behaves surprisingly (opened by zooko)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2907

                    ===== Low =====
[#2900] Provide a way to run a series of tests without restarting the reactor (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2900



Closed Bugs
______________________
                    ===== Highest =====
[#2882] test_process hanging on vista slave (popup)- (opened by bigdog, closed by bigdog, )
    defect          core       http://twistedmatrix.com/trac/ticket/2882

[#2857] test_stdio doesn't correctly pass the reactor to subprocesses (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2857

[#2893] assertEqual is hard to read. (opened by jml, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2893

[#2897] Deprecate visiting test (opened by jml, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2897

[#2862] [PATCH] Tiny doc tweak for twisted.protocols.amp (opened by dripton, closed by jml, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2862

[#2899] addCleanup should run even if setUp fails. (opened by jml, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2899

[#1264] twisted.vfs.test.test_ftp is enough to drive a sane man mad (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1264

[#2598] Monkey-patching support code (opened by jml, closed by jml, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2598

[#2180] FilesystemLock needs a method that defers until it can acquire a lock (opened by wsanchez, closed by dreid, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2180

[#2898] Add ITestCase for Trial tests (opened by jml, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2898

                    ===== High =====
[#1781] Remove TestCase._wait from Trial (opened by jml, closed by jml, wontfix)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1781

                    ===== Normal =====
[#2785] twisted.trial.itrial.IReporter is missing addSkip (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2785

[#2735] twisted.vfs.adapters.ftp._FileToConsumerAdapter doesn't fully implement IConsumer (opened by therve, closed by therve, fixed)
    defect          vfs        http://twistedmatrix.com/trac/ticket/2735

[#2903] Clean up warnings in twisted.trial tests (opened by jml, closed by jml, wontfix)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2903

[#1950] PyUnitTestCase.id is redundant and should be removed (opened by glyph, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1950



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2907] "./setup.py install --prefix=relative/path" behaves surprisingly (since 2007-11-16 18:21:31).

Mean open ticket age: 562 days, 4:41:38.242047.
Median: 457 days, 23:55:53.456813.
Standard deviation: 411 days, 11:59:35.412533.
Interquartile range: 509 days, 1:40:22.

Mean time between ticket creation and ticket resolution: 124 days, 23:46:42.342090.
Median: 15 days, 13:27:30.
Standard deviation is 228 days, 8:13:18.325244.
The interquartile range is 136 days, 12:10:27.

Mean time spent in review: 68 days, 13:01:08.836530.
Median: 3 days, 20:59:56.
Standard deviation: 156 days, 6:25:19.237999.
Interquartile range: 29 days, 3:11:52.

Mean number of times a ticket is reviewed: 2.0623655914.
Median: 1
Standard deviation: 1.73960284545.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    13 unique ticket reporters
    5 unique ticket reviewers
    7 unique ticket resolvers
In the last 24 weeks,
    64 unique ticket reporters
    15 unique ticket reviewers
    14 unique ticket resolvers
In the last 48 weeks,
    149 unique ticket reporters
    17 unique ticket reviewers
    24 unique ticket resolvers




From zooko at zooko.com  Sun Nov 18 19:58:34 2007
From: zooko at zooko.com (zooko)
Date: Sun, 18 Nov 2007 16:58:34 -0800
Subject: [Twisted-Python] Hack Fest!  Tomorrow, Monday,
	San Francisco.  Last call.
Message-ID: <B558DE46-8A9A-40E9-AE62-046E60933795@zooko.com>

Folks:

You are invited to attend a Hack Fest at Allmydata Headquarters in  
San Francisco.  The date is tomorrow, Monday, Nov 19, between the end  
of Business Hours and midnight.

My earlier message [1] invited people to bring source code to  
demonstrate live on a projector, preferably open-source and/or peer- 
to-peer source code.  Also, you are welcome to come without source  
code, in order to socialize, eat yummy Goat Hill Pizza (Potrero  
Hill), see other people's open-source and/or peer-to-peer source code  
demonstrated, etc.

How does one demonstrate source code?  Well, we envision having two  
projector screens, one which shows the source code, and one which  
shows the resulting application running, and we see how the behavior  
of the app changes when we change the source code.  Perhaps this will  
lead to submitting patches to our favorite open source projects or  
something.

But in any case, there will definitely be pizza and beer.

Please e-mail zooko at zooko.com.

Regards,

Zooko

[1] http://lists.zooko.com/pipermail/p2p-hackers/2007-November/ 
001441.html




From chezgi at yahoo.com  Mon Nov 19 01:53:58 2007
From: chezgi at yahoo.com (abbas ali chezgi)
Date: Sun, 18 Nov 2007 22:53:58 -0800 (PST)
Subject: [Twisted-Python] thread performance under twisted
Message-ID: <120835.86434.qm@web51002.mail.re2.yahoo.com>

hello dears,
i am working on a VPN project using twisted.
the main section for tunneling data written in C API for performance.
but handshaking is done in twisted and when client authenticated one thread 
is created using deferedToThread and all data encryption and exchange will be done in
C code.
my problem is performance.
how can i tune system (twisted core and threads) to allow created threads run
with high priority than twisted core?
how can i profile my threads?

with best regards,
chezgi


================================= 
chezgi,abbas ali 
MSC student at computer Architecture 
Department of Electronic and Computer Engineering
Isfahan University of Technology 
Isfahan Iran
email: 
chezgi(AT)ec(DOT)iut(DOT)ac(DOT)ir 
=================================
       
---------------------------------
Be a better pen pal. Text or chat with friends inside Yahoo! Mail. See how.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071118/817c6ad9/attachment.htm 

From mark.lachesis at gmail.com  Mon Nov 19 03:44:08 2007
From: mark.lachesis at gmail.com (Mark L)
Date: Mon, 19 Nov 2007 19:44:08 +1100
Subject: [Twisted-Python] Confused about threads
Message-ID: <fe156dd0711190044y602711e3se987d279b228c54c@mail.gmail.com>

Hi,

I'm new to twisted, and have read a few pages, but things are going
over my head and I'm not finding the answer I need.

What I want to do is create a class in my python application which
manages network activity and starts the reactor.  I want to run that
class as a thread.

I've done all of this, except when I get to reactor.run().  Then it
says that signal must be started in main.  If I move the reactor.run()
into main then it starts up fine - but it doesn't run in a separate
thread.  I want the network running in the background in a separate
thread so I can manage other server tasks distinctly.

I realise this is probably a critical misunderstanding on my part of
how twisted is meant to be used - so I'd appreciate any clarifications
on this point that I wasn't able to find in the documentation.  Which,
again, is probably just a critical failure of mine to find.

Thanks,
Mark



From exarkun at divmod.com  Mon Nov 19 07:45:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 19 Nov 2007 07:45:21 -0500
Subject: [Twisted-Python] thread performance under twisted
In-Reply-To: <120835.86434.qm@web51002.mail.re2.yahoo.com>
Message-ID: <20071119124521.8162.1941196275.divmod.quotient.37560@ohm>

On Sun, 18 Nov 2007 22:53:58 -0800 (PST), abbas ali chezgi <chezgi at yahoo.com> wrote:
>hello dears,
>i am working on a VPN project using twisted.
>the main section for tunneling data written in C API for performance.
>but handshaking is done in twisted and when client authenticated one thread
>is created using deferedToThread and all data encryption and exchange will be done in
>C code.
>my problem is performance.
>how can i tune system (twisted core and threads) to allow created threads run
>with high priority than twisted core?
>how can i profile my threads?

This is more of a Python question than a Twisted question.  Python doesn't
support thread priorities.  Python has a profiler, but not one which does
anything special with threads.

Jean-Paul



From exarkun at divmod.com  Mon Nov 19 07:48:25 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 19 Nov 2007 07:48:25 -0500
Subject: [Twisted-Python] Confused about threads
In-Reply-To: <fe156dd0711190044y602711e3se987d279b228c54c@mail.gmail.com>
Message-ID: <20071119124825.8162.1171719036.divmod.quotient.37562@ohm>

On Mon, 19 Nov 2007 19:44:08 +1100, Mark L <mark.lachesis at gmail.com> wrote:
>Hi,
>
>I'm new to twisted, and have read a few pages, but things are going
>over my head and I'm not finding the answer I need.
>
>What I want to do is create a class in my python application which
>manages network activity and starts the reactor.  I want to run that
>class as a thread.
>
>I've done all of this, except when I get to reactor.run().  Then it
>says that signal must be started in main.  If I move the reactor.run()
>into main then it starts up fine - but it doesn't run in a separate
>thread.  I want the network running in the background in a separate
>thread so I can manage other server tasks distinctly.

"so I can manage other server tasks distinctly" doesn't make a lot of
sense as a motivation here.  Maybe that's because you don't have the
right idea about how to write servers with Twisted yet, or maybe it's
just because you haven't explained your requirements sufficiently.

>
>I realise this is probably a critical misunderstanding on my part of
>how twisted is meant to be used - so I'd appreciate any clarifications
>on this point that I wasn't able to find in the documentation.  Which,
>again, is probably just a critical failure of mine to find.

It's possible to run the reactor in a different thread, but the reason
to do so is usually that you already have a second mainloop which you
can't easily integrate with the reactor's mainloop.  In other cases, you
can typically accomplish whatever you need without starting any threads.

Jean-Paul



From sipickles at hotmail.com  Mon Nov 19 08:10:38 2007
From: sipickles at hotmail.com (Simon Pickles)
Date: Mon, 19 Nov 2007 13:10:38 +0000
Subject: [Twisted-Python] Confused about threads
In-Reply-To: <fe156dd0711190044y602711e3se987d279b228c54c@mail.gmail.com>
References: <fe156dd0711190044y602711e3se987d279b228c54c@mail.gmail.com>
Message-ID: <BAY114-DAV3C86D031E03CC20779158BE7E0@phx.gbl>

I certainly don't use the twisted framework for my whole application, 
just the  networking.

For instance, I have an app which is a server to many clients, but also 
a client itself to another server, in order to pass system information. 
Therefore my code looks something like this pseudocode:

    #main thread
    reactor.listenTCP(serverPort, myFactory(max_clients = 0))
    reactor.connectTCP(otherServerHost, otherServerPort, myClientFactory())
    myProcessingThread().start()
    reactor.run()
 
myProcessingThread is a class inheriting from Threading, and processes 
messages stored in queues by the Twisted thread, with the correct 
locking of course (Queues).

I don't doubt that there are many ways to use twisted more. This works 
for me, and allows me to get on with the meat of the project.

hth

Si
 

Mark L wrote:
> Hi,
>
> I'm new to twisted, and have read a few pages, but things are going
> over my head and I'm not finding the answer I need.
>
> What I want to do is create a class in my python application which
> manages network activity and starts the reactor.  I want to run that
> class as a thread.
>
> I've done all of this, except when I get to reactor.run().  Then it
> says that signal must be started in main.  If I move the reactor.run()
> into main then it starts up fine - but it doesn't run in a separate
> thread.  I want the network running in the background in a separate
> thread so I can manage other server tasks distinctly.
>
> I realise this is probably a critical misunderstanding on my part of
> how twisted is meant to be used - so I'd appreciate any clarifications
> on this point that I wasn't able to find in the documentation.  Which,
> again, is probably just a critical failure of mine to find.
>
> Thanks,
> Mark
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>   





From dfarrell at mypublisher.com  Mon Nov 19 18:03:07 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Mon, 19 Nov 2007 18:03:07 -0500
Subject: [Twisted-Python] Using twisted with logging.handlers.sockethandler
Message-ID: <318F79422ADC5041A93343721F84474D3B9314@exchange.mypublisher.local>

Hi all,

 

I've been using Python for awhile, but am new to Twisted. I'm trying to
build a server to handle logging messages from multiple Python processes
via the logging.handlers.sockethandler system. I've got some ideas how
to go about it, but would like some guidance if anyone has some. 

 

One thing I'd like to know is how to handle messages that don't arrive
all at once in the dataReceived() method of the protocol module.

 

Thanks,

Doug

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071119/df4e9932/attachment.htm 

From pbastov at gmail.com  Mon Nov 19 23:37:10 2007
From: pbastov at gmail.com (Pavel)
Date: Tue, 20 Nov 2007 10:37:10 +0600
Subject: [Twisted-Python] Windows Communication Foundation
Message-ID: <eaf39e680711192037i2beab08ft27157d5ff57ef795@mail.gmail.com>

Hi all,

has anyone developed services with Twisted that are to be consumed by
clients based on Windows Communication Foundation?

Paul



From theatilla at gmail.com  Tue Nov 20 08:30:50 2007
From: theatilla at gmail.com (Atilla)
Date: Tue, 20 Nov 2007 14:30:50 +0100
Subject: [Twisted-Python] Using twisted with logging.handlers.sockethandler
In-Reply-To: <318F79422ADC5041A93343721F84474D3B9314@exchange.mypublisher.local>
References: <318F79422ADC5041A93343721F84474D3B9314@exchange.mypublisher.local>
Message-ID: <b53c932d0711200530n32efc226l8ccd00c4d1f879ba@mail.gmail.com>

Correct me if I'm not explaining it correct, but:

dataReceived makes no guarantees how mcuh data you'll get - it depends
on many factors, buffers on the sending and the receiving side, the
size of TCP chunks (if it's TCP), etc.  As stated in the docstrings
for the method - you should make sure your methods works for chunks of
various size, down to the minimum that can come.

What I do is - I model it as a small state-machine that keeps a local
buffer of the data (with an upper bound), trying to construct a
message that's meaningful for my protocol, and when it does - it calls
a method that expects a full protocol packet, that I handle from there
on.

For a good example you can take a look at the lineReceived
implementation, from the actual twisted package. The code and the
docstrings are amazingly useful that way.



From raja at aonic.net  Wed Nov 21 03:03:29 2007
From: raja at aonic.net (Raja Kapur)
Date: Wed, 21 Nov 2007 03:03:29 -0500
Subject: [Twisted-Python] Problem setting up epollreactor on Leopard
In-Reply-To: <4d3038af0711170435v599dca71qbe6ca497ddc3c425@mail.gmail.com>
References: <4d3038af0711161924i4028079bt255789590727f25c@mail.gmail.com>
	<368574aa0711162127t7d3e48f9u51bac00208317b95@mail.gmail.com>
	<4d3038af0711170435v599dca71qbe6ca497ddc3c425@mail.gmail.com>
Message-ID: <4d3038af0711210003l54164308o385fb2800948928@mail.gmail.com>

Just an update to people who might find this in the future. I was able
to get PyKqueue 1.3 (for kqreactor) working on Leopard using the
setup.py script from here:
http://d.hatena.ne.jp/perezvon/20070219/1171890423 and applying the
patch from http://twistedmatrix.com/documents/current/api/twisted.internet.kqreactor.html

setup.py:

# -*- coding: utf-8 -*-
# setup.py
from distutils.core import setup, Extension

setup(
    name="kqsyscall",
    version="1.3",
    ext_modules=[
        Extension("kqsyscall", sources=["kqsyscallmodule.c"])
    ]
)

On 11/17/07, Raja Kapur <raja at aonic.net> wrote:
> Well that explains it ;) and apparently the kqreactor only supports
> FreeBSD at the moment.
>
> Thank you
>
> On 11/17/07, Drew Smathers <drew.smathers at gmail.com> wrote:
> >
> >
> > > I'm having trouble setting up Twisted with epollreactor on Mac OS X
> > > Leopard, I downloaded the Twisted 2.5.0 tarball which contained all
> > > the components of Twisted.
> >
> > So far as I know, epoll only exists on Linux ... so yeah, you won't have
> > much luck with that.
> >  -Drew
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>



From lac at openend.se  Wed Nov 21 10:48:20 2007
From: lac at openend.se (Laura Creighton)
Date: Wed, 21 Nov 2007 16:48:20 +0100
Subject: [Twisted-Python] This showed up in pygame-users@seul.org
Message-ID: <200711211548.lALFmKTW019762@theraft.openend.se>


Anybody want to come explain twisted to somebody who just wants
to network his game?  Alas pygame-users is not a mailman mailing
list, and Activestate seems to have stopped archiving it in August,
so there is no way I know of to read the whole thread.


Laura

------- Forwarded Message

Return-Path: owner-pygame-users at seul.org
Delivery-Date: Wed Nov 21 14:37:43 2007
Return-Path: <owner-pygame-users at seul.org>
To: pygame-users at seul.org
Subject: Re: [pygame] Networking?
In-Reply-To: <6e04113a0711210522s6b4d629y2c6be6b4a13fa0f3 at mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_9402_16396364.1195651869700"


hey, please forgive me for any stupid observations.....it's just
that I've been avoiding testing Twisted because people seem
to be of the opinion that it takes over the main loop. And they
like having control over that.

Can the main reactor be manipulated in such a way that it is
not the main loop?



------- End of Forwarded Message




From dfarrell at mypublisher.com  Wed Nov 21 11:43:14 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Wed, 21 Nov 2007 11:43:14 -0500
Subject: [Twisted-Python] Using twisted with logging.handlers.sockethandler
In-Reply-To: <b53c932d0711200530n32efc226l8ccd00c4d1f879ba@mail.gmail.com>
Message-ID: <318F79422ADC5041A93343721F84474D3B9336@exchange.mypublisher.local>

Thanks for the tip, I'll take a look at the lineReceived method, I think
that will give me a good idea about how to handle the protocol I'm
thinking about.


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Atilla
Sent: Tuesday, November 20, 2007 8:31 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Using twisted with
logging.handlers.sockethandler

Correct me if I'm not explaining it correct, but:

dataReceived makes no guarantees how mcuh data you'll get - it depends
on many factors, buffers on the sending and the receiving side, the
size of TCP chunks (if it's TCP), etc.  As stated in the docstrings
for the method - you should make sure your methods works for chunks of
various size, down to the minimum that can come.

What I do is - I model it as a small state-machine that keeps a local
buffer of the data (with an upper bound), trying to construct a
message that's meaningful for my protocol, and when it does - it calls
a method that expects a full protocol packet, that I handle from there
on.

For a good example you can take a look at the lineReceived
implementation, from the actual twisted package. The code and the
docstrings are amazingly useful that way.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From darran at edmstudio.com  Wed Nov 21 22:10:12 2007
From: darran at edmstudio.com (Darran Edmundson)
Date: Wed, 21 Nov 2007 20:10:12 -0700
Subject: [Twisted-Python] Seeking freelance twisted programmer to work on
	museum exhibit ...
Message-ID: <4744F314.9040604@edmstudio.com>


We are looking for a friendly and talented Twisted programmer to work 
part-time on an interactive museum exhibit.

Some background.  "On April 29, 1903, at 4:10 a.m., 82 million tonnes of 
limestone crashed from the summit of Turtle Mountain and buried a 
portion of the sleeping town of Frank [Alberta] ... The primary cause of 
the Frank Slide was the mountain's unstable structure."  Here's a good 
aerial photo of the mountain and slide debris:
    http://ess.nrcan.gc.ca/rrnh-rran/images/proj1_fig2.jpg

Our exhibit, due to be deployed in January at the Frank Slide 
Interpretive Centre (white building adjacent to debris in above image), 
is tasked with the reason for the collapse.  To do this, we have opted 
to use a virtual time-line with a 65" screen moving electronically along 
a 14ft (4m) industrial slide track.  The visitor, kept back from the 
screen mechanism by a parallel guard rail, controls the screen position 
via a slideable block.  The content, synced with the screen position, 
shows the 150 million-year formation of the mountain and its eventual 
collapse in 1903.

The Twisted work involves ethernet interfacing with a Gemini GV6K 
hardware controller and PB communication with the pyObjC-based Quicktime 
display code.  (An aside, we are also interested in logging visitor 
usage to a local or remote database.)  As my Twisted experience is 
limited, I can only guess that we are looking at 40-80 hours of work in 
total.  While the schedule is flexible, we do need to start coding ASAP 
to meet our first prototype deadline.  Work is remote, connecting by VPN 
to the hardware in question.  As the deployment platform is OS X, 
ideally the programmer would be using a Mac ... this isn't critical.

If you're interested, please contact me directly (darran at edmstudio.com) 
with your resume/experience, hourly rate, and availability.

Cheers,
Darran.

-- 
Darran Edmundson [darran at edmstudio.com]
http://www.edmstudio.com



From Mark.Papazyan at gmx.de  Thu Nov 22 03:27:19 2007
From: Mark.Papazyan at gmx.de (Mark Papazyan)
Date: Thu, 22 Nov 2007 09:27:19 +0100
Subject: [Twisted-Python] connectionLost issue
Message-ID: <20071122082719.126110@gmx.net>

Hello,

i'm currently writing distributed system consisted of several components,
which have both input and output ports. To solve the initial startup
problem i simply use the retry approach: as soon as my components are
initialized the try to connect to their peers in a loop.
The problem is that the connectionLost function is not called for each
Factories independently, but stops callbacking as soon as my component
receives an incoming connection (although, the function belongs to the
class responsible for the outgoing connection). Thus, the component
assumes it has found all its peers, although only incoming connection is
initiated, not the outgoing. Is there a way to tell the framework to
handle the connection lost events for each Factory/Protocol objects
separately?

The code is trivial:


class InputSession(Factory):

   def start(self):
       reactor.listenTCP(self.port, self)

   def startedConnecting(self, connector):
       print 'Started to connect.'


   def buildProtocol(self, addr):
       print 'Connected.'
       self.connector = InputConnector(self)
       return self.connector


   def clientConnectionLost(self, connector, reason):
       print 'Lost connection. Reason:', reason


   def clientConnectionFailed(self, connector, reason):
       print 'Connection failed. Reason:', reason

################################################################################

class InputConnector(Protocol):

   def __init__(self, session):
       self.session = session

   def connectionMade(self):
       print "Connection established"

   def connectionLost(self, reason):
       print "Connection lost"

   def dataReceived(self, input_stream):
       print "Receiving: " + input_stream



################################################################################

class OutputConnector (Protocol):

   def __init__(self, session):
       self.session = session


   def sendStream(self, stream):
       self.transport.writeSomeData(stream)

   def clientConnectionLost(self, connector, reason):
       print 'Lost connection.'# Reason:', reason



################################################################################

class OutputSession(ClientFactory):

   def start(self):
       reactor.connectTCP(self.host, self.port, self)


   def buildProtocol(self, addr):
       print 'Connected.'
       self.curr_tries = 0
       self.connector = OutputConnector(self)

       return self.connector

   def clientConnectionLost(self, connector, reason):
       print 'Lost connection.'# Reason:', reason

       self.curr_tries = self.curr_tries + 1

       print "Trying to reconnect: %d" % self.curr_tries
       connector.connect()

   def clientConnectionFailed(self, connector, reason):
       print 'Connection failed.'# Reason:', reason

       self.curr_tries = self.curr_tries + 1

       connector.connect()


Best Regards,
Mark Papazyan
-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail



From itamar at itamarst.org  Fri Nov 23 11:50:51 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 23 Nov 2007 11:50:51 -0500
Subject: [Twisted-Python] connectionLost issue
In-Reply-To: <20071122082719.126110@gmx.net>
References: <20071122082719.126110@gmx.net>
Message-ID: <1195836652.1197.8.camel@localhost.localdomain>

On Thu, 2007-11-22 at 09:27 +0100, Mark Papazyan wrote:

> Is there a way to tell the framework to
> handle the connection lost events for each Factory/Protocol objects
> separately?

I'm not sure what you're doing wrong, but connectionLost will only be
called on the protocol that actually had its connection lost... not on
others.




From exarkun at divmod.com  Fri Nov 23 12:05:35 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 23 Nov 2007 12:05:35 -0500
Subject: [Twisted-Python] connectionLost issue
In-Reply-To: <20071122082719.126110@gmx.net>
Message-ID: <20071123170535.8162.1483806774.divmod.quotient.39061@ohm>

On Thu, 22 Nov 2007 09:27:19 +0100, Mark Papazyan <mark.papazyan at gmx.de> wrote:
>Hello,
>
> [snip]
>
>class OutputConnector (Protocol):
>
>   def __init__(self, session):
>       self.session = session
>
>
>   def sendStream(self, stream):
>       self.transport.writeSomeData(stream)
>
>   def clientConnectionLost(self, connector, reason):
>       print 'Lost connection.'# Reason:', reason
>
>

I don't know if this is related to your question, but "writeSomeData"
is not the correct method to call on the transport in order to send
bytes.  Instead, use the "write" method.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Nov 25 00:05:04 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Nov 2007 05:05:04 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1195967104.28.944067151@twistedmatrix.com

Bug summary
______________________
Summary for 2007-11-18 through 2007-11-25
Bugs opened: 19    Bugs closed: 11  Total open bugs: 1051 (+8)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +3  |Highest:  -4          |Conch:               +1  
|Enhancement:  +5  |High:     +3          |Core:                +5  
|Task:         +1  |Normal:   +9          |Pb:                  +1  
                   |Low:      +1          |Release Management:  +3  
                                          |Trial:               +1  
                                          |Web:                 -2  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2908] twistd report-profile option doesn't work anywore (opened by therve) (CLOSED, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2908

[#2920] Support for Decimal in twisted.spread.jelly (opened by james at tri-tech.com)
    enhancement     pb         http://twistedmatrix.com/trac/ticket/2920

[#2921] twistd profiling options needs to be tested (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2921

[#2885] Automate version updating (goodly) (opened by radix) (CLOSED, fixed)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2885

                    ===== High =====
[#2912] manhole_ssh emits warnings on import (opened by glyph)
    defect          core       http://twistedmatrix.com/trac/ticket/2912

[#2913] twisted.internet.tcp.Port.startListening after stopListening rebinds the port but doesn't make it usable again (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2913

[#2924] conch gmpy support doesn't work anymore (opened by therve)
    defect          conch      http://twistedmatrix.com/trac/ticket/2924

                    ===== Normal =====
[#2909] XXX Comment Policy (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2909

[#2910] Provide tests for the ITestCase and IReporter interfaces and test all implementations against those (opened by jml)
    task            trial      http://twistedmatrix.com/trac/ticket/2910

[#2911] assertWarns demands that you set the stacklevel one higher than is helpful (opened by jml)
    defect          trial      http://twistedmatrix.com/trac/ticket/2911

[#2914] Memcache server (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2914

[#2916] Tests should create their own temporary working directories, rather than relying on _trial_temp (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2916

[#2917] intermittent twisted.test.test_pbfailure.PBFailureTest.test_deferredSecurity failure on OS X (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2917

[#2918] intermittent twisted.test.test_ssl.SpammyTLSTestCase.testUnTLS failure on OS X (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2918

[#2919] Provide easily testable API for deprecating other APIs (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2919

[#2922] web.ProxyClientFactory does not close request after sending error message (opened by lewq) (CLOSED, duplicate)
    defect          web        http://twistedmatrix.com/trac/ticket/2922

[#2923] admin/release-twisted expects zope tarballs under old names (opened by zooko)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2923

[#2925] Need first-class release documentation generation code (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2925

                    ===== Low =====
[#2915] Provide way of incrementing patch number with date-based versioning (opened by jml)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2915



Closed Bugs
______________________
                    ===== Highest =====
[#2506] Memcached client (opened by therve, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2506

[#2908] twistd report-profile option doesn't work anywore (opened by therve, closed by therve, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2908

[#942 ] plugin unit tests should use directories beneath _trial_temp, not twisted/plugins/ (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/942

[#2885] Automate version updating (goodly) (opened by radix, closed by jml, fixed)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2885

[#2885] Automate version updating (goodly) (opened by radix, closed by jml, fixed)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2885

[#2883] Remove attributes and methods from IReporter that imply text output (opened by jml, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2883

[#238 ] Write tests for twisted.web.proxy (opened by itamarst, closed by therve, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/238

[#2739] explain, document, and test trial's compatibility requirements for other test tools (opened by glyph, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2739

[#2803] findFailure fails to find the correct failure in a more complicated case (opened by Peaker, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2803

                    ===== Normal =====
[#2905] ReverseProxyResource adds an extra '/' which confuses the backend web server (opened by trohed, closed by therve, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2905

[#2922] web.ProxyClientFactory does not close request after sending error message (opened by lewq, closed by therve, duplicate)
    defect          web        http://twistedmatrix.com/trac/ticket/2922



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2925] Need first-class release documentation generation code (since 2007-11-23 22:55:27).

Mean open ticket age: 562 days, 0:39:32.376206.
Median: 458 days, 9:54:02.964218.
Standard deviation: 412 days, 18:57:38.634451.
Interquartile range: 514 days, 15:06:00.

Mean time between ticket creation and ticket resolution: 125 days, 22:53:00.623298.
Median: 15 days, 13:27:30.
Standard deviation is 231 days, 1:56:49.008256.
The interquartile range is 137 days, 14:35:31.

Mean time spent in review: 68 days, 3:02:44.987207.
Median: 3 days, 20:59:56.
Standard deviation: 157 days, 3:28:53.616287.
Interquartile range: 29 days, 1:56:41.

Mean number of times a ticket is reviewed: 2.08033826638.
Median: 1
Standard deviation: 1.75626161316.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    15 unique ticket reporters
    5 unique ticket reviewers
    7 unique ticket resolvers
In the last 24 weeks,
    61 unique ticket reporters
    15 unique ticket reviewers
    13 unique ticket resolvers
In the last 48 weeks,
    147 unique ticket reporters
    17 unique ticket reviewers
    22 unique ticket resolvers




From jml at mumak.net  Mon Nov 26 00:20:52 2007
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 26 Nov 2007 16:20:52 +1100
Subject: [Twisted-Python] Re: glyph changed u'proxyForInterface should allow
	upcalls'
In-Reply-To: <E1IwW4F-0004Ym-QC@cube.twistedmatrix.com>
References: <E1IwW4F-0004Ym-QC@cube.twistedmatrix.com>
Message-ID: <d06a5cd30711252120k222e889cu206408cd7ba3ad48@mail.gmail.com>

On Nov 26, 2007 3:59 PM,  <trac at twistedmatrix.com> wrote:
> Ticket u'proxyForInterface should allow upcalls' changed by glyph <glyph at divmod.com>:
>
> In my experience, once one has a failing TODO test, the rest is easy, and there's no point in creating a second branch :).
>

Which is why we have 19 failing TODOs :)



From k_r_a_j_kumar at yahoo.co.in  Tue Nov 27 00:20:35 2007
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Tue, 27 Nov 2007 10:50:35 +0530 (IST)
Subject: [Twisted-Python] Transfering a file through xml sockets
Message-ID: <907187.68093.qm@web8710.mail.in.yahoo.com>

Hi,
I have a server-client application(by using twisted),communicating through xml sockets.
can any one help me in transferring a file from server to client through xml sockets? At lest some references to how to use  xml sockets in transferring data/files.
Thank you in advance.

RAJ.....




      Chat on a cool, new interface. No download required. Go to http://in.messenger.yahoo.com/webmessengerpromo.php
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071127/16d046df/attachment.htm 

From exarkun at divmod.com  Tue Nov 27 08:10:28 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Nov 2007 08:10:28 -0500
Subject: [Twisted-Python] Transfering a file through xml sockets
In-Reply-To: <907187.68093.qm@web8710.mail.in.yahoo.com>
Message-ID: <20071127131028.8162.639463585.divmod.quotient.40406@ohm>

On Tue, 27 Nov 2007 10:50:35 +0530 (IST), Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>Hi,
>I have a server-client application(by using twisted),communicating through xml sockets.
>can any one help me in transferring a file from server to client through xml sockets? At lest some references to how to use  xml sockets in transferring data/files.

What is an "xml socket"?

Jean-Paul



From theatilla at gmail.com  Tue Nov 27 13:24:28 2007
From: theatilla at gmail.com (Atilla)
Date: Tue, 27 Nov 2007 19:24:28 +0100
Subject: [Twisted-Python] Transfering a file through xml sockets
In-Reply-To: <20071127131028.8162.639463585.divmod.quotient.40406@ohm>
References: <907187.68093.qm@web8710.mail.in.yahoo.com>
	<20071127131028.8162.639463585.divmod.quotient.40406@ohm>
Message-ID: <b53c932d0711271024o6f500e98ve25ee877a613e3a3@mail.gmail.com>

Are you referring to ActionScript's XMLSocket or just some generic TCP
connection that expects XML to be transferred over it? Are you
communicating with something existing and if not - why do you need to
use XML-based communication to transfer a file?

Unless there is some specified format, you can transfer it any way you
find convenient, just make sure you think of the corner cases and the
size of the file. Some XML parsers will not be happy if they have
elements with huge inner data nodes. I guess encapsulating all the
file's details in XML elements would be enough. Send the filename,
file size, a digest of the file for verification and/or debugging,
(the usual md5 should do the trick) and the file content itself,
encoded in a convenient way - say with base64. Mind that this will
have additional overhead when transferring the file.



From lemontea_rocks at yahoo.com  Tue Nov 27 19:54:26 2007
From: lemontea_rocks at yahoo.com (lemon tea)
Date: Tue, 27 Nov 2007 16:54:26 -0800 (PST)
Subject: [Twisted-Python] twisted framework for multiple application server
	herd?
Message-ID: <528067.28136.qm@web52210.mail.re2.yahoo.com>

let's assume that we are building a new Wikimedia-style service where (1) updates to articles will happen far more often and (2) access will be required via various protocols, not just HTTP. In this new service the application server looks like it will be a bottleneck. From a software point of view our application will turn into too much of a pain to add nontraditional servers (e.g., for access via cell phones, where the cell phones are frequently broadcasting their GPS locations). From a systems point of view the response time looks like it will too slow because the Wikimedia application server is a central bottleneck.


To solve this lets  look at a different architecture called an "application server herd", where the multiple application servers communicate directly to each other as well as via the core database and caches. The interserver communications are designed for rapidly-evolving data (e.g., GPS-based locations) whereas the database server will still be used for more stable data that is less-often accessed or that requires transactional semantics. For example, you might have four application servers A, B, C, D such that A talks with B and C, and B and C talk with D, so that if a user's cell phone posts updates about its location to any one of the application servers then the other servers will learn of the change after one or two interserver transmissions, without having to talk to the database.
 how well Twisted is suited for this kind of application and how well will it  really work in practice. In particular,  how easy is it to write applications using Twisted, and how maintainable and reliable those applications will be?what might be the pros n cons of using twisted.
 any comments?

cheers
Pam
       
---------------------------------
Be a better pen pal. Text or chat with friends inside Yahoo! Mail. See how.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071127/e87f4888/attachment.htm 

From adelagon at gmail.com  Tue Nov 27 20:21:46 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 28 Nov 2007 09:21:46 +0800
Subject: [Twisted-Python] Transfering a file through xml sockets
In-Reply-To: <b53c932d0711271024o6f500e98ve25ee877a613e3a3@mail.gmail.com>
References: <907187.68093.qm@web8710.mail.in.yahoo.com>
	<20071127131028.8162.639463585.divmod.quotient.40406@ohm>
	<b53c932d0711271024o6f500e98ve25ee877a613e3a3@mail.gmail.com>
Message-ID: <7a01f6c00711271721p7f1ecfdaqd4bc0a4747a485d0@mail.gmail.com>

He might be talking about jabber xmlstream. Yeah I do agree encapsulating
the file in an xml could introduce overhead (I remember doing this in my
former company where the file in encoded in base64). Why don't you just
transfer the file via http/ftp? Send an xml to the client containing the
address of the file and let the client application do the fetching.

On Nov 28, 2007 2:24 AM, Atilla <theatilla at gmail.com> wrote:

> Are you referring to ActionScript's XMLSocket or just some generic TCP
> connection that expects XML to be transferred over it? Are you
> communicating with something existing and if not - why do you need to
> use XML-based communication to transfer a file?
>
> Unless there is some specified format, you can transfer it any way you
> find convenient, just make sure you think of the corner cases and the
> size of the file. Some XML parsers will not be happy if they have
> elements with huge inner data nodes. I guess encapsulating all the
> file's details in XML elements would be enough. Send the filename,
> file size, a digest of the file for verification and/or debugging,
> (the usual md5 should do the trick) and the file content itself,
> encoded in a convenient way - say with base64. Mind that this will
> have additional overhead when transferring the file.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071128/6d868594/attachment.htm 

From broehl at gmail.com  Tue Nov 27 22:56:26 2007
From: broehl at gmail.com (Bernie Roehl)
Date: Tue, 27 Nov 2007 22:56:26 -0500
Subject: [Twisted-Python] Two main loops, revisited
Message-ID: <1045831b0711271956o340b1fa2kbe9d10683ce547be@mail.gmail.com>

Hi everyone

So, I've been trying the suggestion that was put forward when I asked my
earlier question about having two main loops in my game (one for the
rendering engine, one for Twisted).

Basically, what I'm doing is this:

def renderFrame():
    ogreLock.acquire()
    ogre.WindowEventUtilities.messagePump()
    root.renderOneFrame()
    ogreLock.release()

renderTask = task.LoopingCall(renderFrame)
renderTask.start(0.01, False)
reactor.run()

I'm using the Python implementation of the Project Darkstar client, which is
built around Twisted.

Unfortunately, I'm running into two problems.

The first is that I appear to be losing messages, which makes me wonder if
Twisted isn't getting enough cycles and is somehow missing incoming data.

The second is that my application hangs randomly.  When I call renderFrame()
in a simple loop (no Twisted), everything is rock-solid.

Has anyone done anything like this before (realitime 3D application with
Twisted), or am I breaking new ground here?

Any suggestions would be much appreciated...


-- 
  Bernie Roehl
  Mail: broehl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071127/055c77b2/attachment.htm 

From nitro at dr-code.org  Tue Nov 27 23:12:37 2007
From: nitro at dr-code.org (Nitro)
Date: Wed, 28 Nov 2007 05:12:37 +0100
Subject: [Twisted-Python] Two main loops, revisited
In-Reply-To: <1045831b0711271956o340b1fa2kbe9d10683ce547be@mail.gmail.com>
References: <1045831b0711271956o340b1fa2kbe9d10683ce547be@mail.gmail.com>
Message-ID: <op.t2hhzcxpz3pzfc@nitrogenycs2>

Am 28.11.2007, 04:56 Uhr, schrieb Bernie Roehl <broehl at gmail.com>:

> Hi everyone
>
> So, I've been trying the suggestion that was put forward when I asked my
> earlier question about having two main loops in my game (one for the
> rendering engine, one for Twisted).
>
> Basically, what I'm doing is this:
>
> def renderFrame():
>     ogreLock.acquire()
>     ogre.WindowEventUtilities.messagePump()
>     root.renderOneFrame()
>     ogreLock.release()
>
> renderTask = task.LoopingCall(renderFrame)
> renderTask.start(0.01, False)
> reactor.run()
>
> I'm using the Python implementation of the Project Darkstar client,  
> which is
> built around Twisted.
>
> Unfortunately, I'm running into two problems.
>
> The first is that I appear to be losing messages, which makes me wonder  
> if
> Twisted isn't getting enough cycles and is somehow missing incoming data.
>
> The second is that my application hangs randomly.  When I call  
> renderFrame()
> in a simple loop (no Twisted), everything is rock-solid.
>
> Has anyone done anything like this before (realitime 3D application with
> Twisted), or am I breaking new ground here?

No new ground here, it works with my 3d engine.

> Any suggestions would be much appreciated...

You could try to increase 0.01 to something like 0.5 and see if this helps  
the losing messages. I am not really sure how the default twisted reactor  
(i guess on win it's threadedselect) works, but what might be happening is  
that twisted receives some incoming data during your rendering and does  
some kind of processing or whatever. Maybe this is causing random trouble?

-Matthias



From glyph at divmod.com  Tue Nov 27 23:15:50 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 28 Nov 2007 04:15:50 -0000
Subject: [Twisted-Python] twisted framework for multiple application
	server herd?
In-Reply-To: <528067.28136.qm@web52210.mail.re2.yahoo.com>
References: <528067.28136.qm@web52210.mail.re2.yahoo.com>
Message-ID: <20071128041550.21558.696286620.divmod.xquotient.2188@joule.divmod.com>

On 12:54 am, lemontea_rocks at yahoo.com wrote:
>how well Twisted is suited for this kind of application

Super well!
>and how well will it really work in practice.

Super DUPER well!!!
>In particular,  how easy is it to write applications using Twisted,

2 EASY !!!!!! [1]
>and how maintainable and reliable those applications will be?

A billion kajillion megamaintainotrons and a quintillion reliabinos.
>what might be the pros n cons of using twisted.

Pro: Twisted is great!!!!

Con: Twisted is so great, everything else will seem pretty bad after you 
have used it.
>any comments?

In all seriousness, it sounds like your application is pretty well- 
suited to Twisted's problem domain.  I suspect that you could use it and 
be very successful - probably more successful than if you used something 
else.

However, your applications' success, maintainability, ease of 
implementation and time to market depend on thousands of factors, and 
choice of infrastructure can influence some of them but it hardly 
dominates.  Depending on other issues, you could possibly succeed wildly 
while using a terrible environment, writing everything from your own TCP 
stack on up entirely in assembler, or fail horribly while using Twisted 
and doing everything right.

That's compounded by the fact that your questions are both highly 
subjective and only have meaning in relation to other, similar tools - 
and there are a lot of other tools like Twisted, depending on what you 
think Twisted is like.  Is Twisted good?  Yes.  How good?  More good 
than bad.  You're unlikely to get other answers on this list, after all, 
everyone listening here has most likely decided to use Twisted for one 
reason or another.

Do you have specific aspects of Twisted you intend to use, or 
maintenance tasks that you expect to perform?  What would you like us to 
compare it to?  What other technologies are you considering?  Have you 
implemented anything like this before?  Using what infrastructure?  What 
problems did you have?  How did you solve them?  Are you used to working 
with the open source community?

Sorry I couldn't provide a more useful answer, but I hope I've at least 
explained why I couldn't :).

---
[1]: with apologies to Tim and Eric http://www.youtube.com/watch?v 
=qKA3B-eBIAE



From glyph at divmod.com  Tue Nov 27 23:22:10 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 28 Nov 2007 04:22:10 -0000
Subject: [Twisted-Python] Two main loops, revisited
In-Reply-To: <1045831b0711271956o340b1fa2kbe9d10683ce547be@mail.gmail.com>
References: <1045831b0711271956o340b1fa2kbe9d10683ce547be@mail.gmail.com>
Message-ID: <20071128042210.21558.2020694440.divmod.xquotient.2198@joule.divmod.com>

On 03:56 am, broehl at gmail.com wrote:
>The first is that I appear to be losing messages, which makes me wonder 
>if
>Twisted isn't getting enough cycles and is somehow missing incoming 
>data.

As you've explained it here, that should be impossible under any 
circumstances.

Can you provide a minimal, runnable example that demonstrates what you 
mean by "losing messages"?

Given Twisted's pretty awesome track record in this regard, I'd say that 
it's most likely that your networking code is not dealing with different 
levels of latency very well - a common error is treating a chunk sent to 
dataReceived as a single message (it isn't, it's a randomly-sized chunk 
of data received from the network).
>The second is that my application hangs randomly.  When I call 
>renderFrame()
>in a simple loop (no Twisted), everything is rock-solid.

Most likely an event handler registered on a network socket is doing 
something that blocks or takes a long time to complete.  That isn't 
Twisted, that's your application.  Tools like 'strace' can help you 
figure out what's going on.
>Has anyone done anything like this before (realitime 3D application 
>with
>Twisted), or am I breaking new ground here?

Twisted was originally designed for MMORPGs; its very first commercial 
applications were integrated with a real-time 3D engine (a very distant 
cousin of which, I believe, now powers the game Tabula Rasa).  I had no 
issues with it then, and I don't believe anyone who has used it more 
recently has had problems like the ones you're describing.



From k_r_a_j_kumar at yahoo.co.in  Tue Nov 27 23:50:08 2007
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Wed, 28 Nov 2007 10:20:08 +0530 (IST)
Subject: [Twisted-Python] Transfering a file through ActionScript xml sockets
Message-ID: <460030.41244.qm@web8707.mail.in.yahoo.com>

Sorry for not giving clear information in my previous mail.
I am using action script xml sockets.
Now anyone can help me in transferring a file to client using action script xml sockets.
Thank you in advance.

Raj..


On Tue, 27 Nov 2007 10:50:35 +0530 (IST), Raj kumar
 <k_r_a_j_kumar at yahoo.co.in> wrote:
>Hi,
>I have a server-client application(by using twisted),communicating
 through xml sockets.
>can any one help me in transferring a file from server to client
 through xml sockets? At lest some references to how to use  xml sockets in
 transferring data/files.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






      Get the freedom to save as many mails as you wish. To know how, go to http://help.yahoo.com/l/in/yahoo/mail/yahoomail/tools/tools-08.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071128/4eaff2fc/attachment.htm 

From douglas at paradise.net.nz  Wed Nov 28 15:33:25 2007
From: douglas at paradise.net.nz (Douglas Bagnall)
Date: Thu, 29 Nov 2007 09:33:25 +1300
Subject: [Twisted-Python] Transfering a file through ActionScript xml
	sockets
In-Reply-To: <460030.41244.qm@web8707.mail.in.yahoo.com>
References: <460030.41244.qm@web8707.mail.in.yahoo.com>
Message-ID: <474DD095.9050307@paradise.net.nz>

hi Raj


> I am using action script xml sockets.
> Now anyone can help me in transferring a file to client using action script xml sockets.


Why not just use HTTP? It was invented for transferring files.

Anyway, to use an XMLSocket, you'd use need to be sure your file didn't
contain zero bytes.  Then the server would use a socket class like this:


class FileSender(LineOnlyReceiver):
    delimiter = chr(0)

    def send(self, filename):
        f = open(filename)
        msg = f.read()
        f.close()
        self.transport.write(msg + self.delimiter)


and the Actionscript side would be something like:

   /* within the receiver class */
   this.onData = function(msg:String){
	trace("got the file contents: " + msg);
   }


If it does contain zero bytes you need to get rid of them somehow.  The
easiest way might be to run the string through python's urllib.urlencode
on the server side, followed by actionscript's LoadVars.decode on the
client side.

But really you should use HTTP. It'll be simpler.

Douglas



From phil at bubblehouse.org  Wed Nov 28 16:13:00 2007
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 28 Nov 2007 16:13:00 -0500
Subject: [Twisted-Python] Transfering a file through ActionScript xml
	sockets
In-Reply-To: <460030.41244.qm@web8707.mail.in.yahoo.com>
References: <460030.41244.qm@web8707.mail.in.yahoo.com>
Message-ID: <44FD888E-CF74-41EE-89B0-07867104F662@bubblehouse.org>

On Nov 27, 2007, at 11:50 PM, Raj kumar wrote:
> Sorry for not giving clear information in my previous mail.
> I am using action script xml sockets.
> Now anyone can help me in transferring a file to client using action  
> script xml sockets.
> Thank you in advance.

Despite the name, ActionScript's XMLSockets work just fine as regular  
sockets. If you send XML through them, and it happens to be well- 
formed, it will trigger the XML-specific event handler (i think it's  
onXML), but you can also just use the onData handler instead.

  var buffer = '';
  socket.onData = function(chunk){
	buffer += chunk;
  }

The data will be coming in chunks, so you'll need to buffer it in some  
way until you get the whole file.

Obviously, Flash won't let you save this file, so I'm assuming it's  
some kind of datafile your app needs to parse. If that's the case,  
your life will be easier if you just use loadVars to retrieve a  
urlencoded datafile, which will be parsed and returned to you as an  
anonymous object. I don't have any snippets for this process, but  
loadVars() is a commonly used function, and there's good docs in  
internal Flash Help and on the adobe site.

If either HTTP or custom datafiles won't work for you because of  
various requirements, you're pretty much going to have to write your  
own protocol. This is easy on the Twisted side of things, but  
extremely irritating on the actionscript side, IMO. How you go about  
this has more to do with the requirements of your current application,  
though...

-phil



From theatilla at gmail.com  Wed Nov 28 18:34:19 2007
From: theatilla at gmail.com (Atilla)
Date: Thu, 29 Nov 2007 00:34:19 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
Message-ID: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>

I'm interested in how well Twisted would perform in situations where
there is a very high number of concurrent connections.

The problem: I'm working on a feature that would require me to
distribute small amounts, both in occurrence and size, of packets to a
very large number of connected clients. Think in the terms of a Jabber
or IRC server, but with a lot less traffic. What we're trying to do is
to maximize the number of simultaneous connections a server can run,
to an absolute maximum. It'll be a dedicated system so crippling any
system-wide setting is not going to interfere with other applications.

So far experimenting with the epoll reactor has shown really nice
scalability as numbers grow. Thousands of connections per machine are
no problem at all, but we need to scale out heavily.

At a certain point the memory requirements for keeping open all those
connections in the system grow higher, but those can be minimized by
adjusting system buffer sizes, tcp window sizes and certain other
settings.

Furthermore - more than one instance of the service could be ran per
server, dedicating two or three processes on a 4-core CPU system,
until exhausting the rest of the limits, in case CPU oevrhead becomes
large.

I'm also considering advantages that might come through different I/O
and/or process schedulers. Is there anything that would be beneficial
to my situation, considering the server will be a dedicated machine
with little to nothing else to run on it that might suffer performance
degradation?

Does anyone have any experience with scaling twisted to a very large
number of parallel connections? Are there any limitations that I might
be missing?

We'll start experimenting with a sample service soon to try to
identify any specific limitations that will need to be worked on.

Any tips are wellcome. Cheers,



From matusis at yahoo.com  Wed Nov 28 19:55:51 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Wed, 28 Nov 2007 16:55:51 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
Message-ID: <005401c83222$96a87b40$c3f971c0$@com>

Here is one tip:

If you have a dual Xeon 5140 (4 cores) machine and run 4 twisted epoll servers in a similar (but not exactly similar situation), it chokes at 30000 clients.

The machine is CPU-bound, and the for loop that loops over clients to send your packets is a performance hog.
We are now considering using pyrex for that for loop, or rewriting it with C and libevent.



> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Atilla
> Sent: Wednesday, November 28, 2007 3:34 PM
> To: Twisted general discussion
> Subject: [Twisted-Python] Advise for heavy concurrency
> 
> I'm interested in how well Twisted would perform in situations where
> there is a very high number of concurrent connections.
> 
> The problem: I'm working on a feature that would require me to
> distribute small amounts, both in occurrence and size, of packets to a
> very large number of connected clients. Think in the terms of a Jabber
> or IRC server, but with a lot less traffic. What we're trying to do is
> to maximize the number of simultaneous connections a server can run,
> to an absolute maximum. It'll be a dedicated system so crippling any
> system-wide setting is not going to interfere with other applications.
> 
> So far experimenting with the epoll reactor has shown really nice
> scalability as numbers grow. Thousands of connections per machine are
> no problem at all, but we need to scale out heavily.
> 
> At a certain point the memory requirements for keeping open all those
> connections in the system grow higher, but those can be minimized by
> adjusting system buffer sizes, tcp window sizes and certain other
> settings.
> 
> Furthermore - more than one instance of the service could be ran per
> server, dedicating two or three processes on a 4-core CPU system,
> until exhausting the rest of the limits, in case CPU oevrhead becomes
> large.
> 
> I'm also considering advantages that might come through different I/O
> and/or process schedulers. Is there anything that would be beneficial
> to my situation, considering the server will be a dedicated machine
> with little to nothing else to run on it that might suffer performance
> degradation?
> 
> Does anyone have any experience with scaling twisted to a very large
> number of parallel connections? Are there any limitations that I might
> be missing?
> 
> We'll start experimenting with a sample service soon to try to
> identify any specific limitations that will need to be worked on.
> 
> Any tips are wellcome. Cheers,
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From donwsmith at gmail.com  Thu Nov 29 00:46:27 2007
From: donwsmith at gmail.com (Don Smith)
Date: Wed, 28 Nov 2007 21:46:27 -0800
Subject: [Twisted-Python] how can I Scheduling a command?
Message-ID: <24f63c200711282146r152c2bcbjbf71a7032663eaf5@mail.gmail.com>

Stephane,

I saw a post from you about a year and a half ago that you had built a
scheduler in twisted. I wonder if you would share your source code with me?

http://twistedmatrix.com/pipermail/twisted-python/2006-July/013615.html

Thanks,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071128/d86f3018/attachment.htm 

From manlio_perillo at libero.it  Thu Nov 29 04:31:10 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 29 Nov 2007 10:31:10 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <005401c83222$96a87b40$c3f971c0$@com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com>
Message-ID: <474E86DE.1@libero.it>

Alec Matusis ha scritto:
> Here is one tip:
> 
> If you have a dual Xeon 5140 (4 cores) machine and run 4 twisted epoll servers in a similar (but not exactly similar situation), it chokes at 30000 clients.
> 
> The machine is CPU-bound, and the for loop that loops over clients to send your packets is a performance hog.
> We are now considering using pyrex for that for loop, or rewriting it with C and libevent.
> 

You can also consider nginx, if you want to write a server in C
(or in the D language).

It is a web server, but its core is usable as a framework for generic 
servers (in fact nginx has also a POP3/IMAP4 proxy server).

nginx has many appealing features, like integrated garbage collector, 
and multi process workers.



Manlio Perillo





From itamar at itamarst.org  Thu Nov 29 09:19:49 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Nov 2007 09:19:49 -0500
Subject: [Twisted-Python] how can I Scheduling a command?
In-Reply-To: <24f63c200711282146r152c2bcbjbf71a7032663eaf5@mail.gmail.com>
References: <24f63c200711282146r152c2bcbjbf71a7032663eaf5@mail.gmail.com>
Message-ID: <1196345989.1197.31.camel@localhost.localdomain>


On Wed, 2007-11-28 at 21:46 -0800, Don Smith wrote:

> I saw a post from you about a year and a half ago that you had built a
> scheduler in twisted. I wonder if you would share your source code
> with me?

See http://twistedmatrix.com/projects/core/documentation/howto/time.html

If you want to persist scheduling across restarts, then you need to
write extra code... but that depends on what storage system your program
uses.




From donwsmith at gmail.com  Thu Nov 29 11:57:27 2007
From: donwsmith at gmail.com (Don Smith)
Date: Thu, 29 Nov 2007 08:57:27 -0800
Subject: [Twisted-Python] how can I Scheduling a command?
In-Reply-To: <1196345989.1197.31.camel@localhost.localdomain>
References: <24f63c200711282146r152c2bcbjbf71a7032663eaf5@mail.gmail.com>
	<1196345989.1197.31.camel@localhost.localdomain>
Message-ID: <24f63c200711290857sa607b4by67cf158ff4030973@mail.gmail.com>

Yes, I'm looking more for a cron type scheduler.

Thanks,

Don

On Nov 29, 2007 6:19 AM, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:

>
> On Wed, 2007-11-28 at 21:46 -0800, Don Smith wrote:
>
> > I saw a post from you about a year and a half ago that you had built a
> > scheduler in twisted. I wonder if you would share your source code
> > with me?
>
> See http://twistedmatrix.com/projects/core/documentation/howto/time.html
>
> If you want to persist scheduling across restarts, then you need to
> write extra code... but that depends on what storage system your program
> uses.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071129/a0686d38/attachment.htm 

From drew.smathers at gmail.com  Thu Nov 29 13:13:39 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 29 Nov 2007 13:13:39 -0500
Subject: [Twisted-Python] how can I Scheduling a command?
In-Reply-To: <24f63c200711290857sa607b4by67cf158ff4030973@mail.gmail.com>
References: <24f63c200711282146r152c2bcbjbf71a7032663eaf5@mail.gmail.com>
	<1196345989.1197.31.camel@localhost.localdomain>
	<24f63c200711290857sa607b4by67cf158ff4030973@mail.gmail.com>
Message-ID: <368574aa0711291013l2b949dedp400db144f7e6ed0c@mail.gmail.com>

On Nov 29, 2007 11:57 AM, Don Smith <donwsmith at gmail.com> wrote:

> Yes, I'm looking more for a cron type scheduler.
>

I *think* axiom supports something like this via axiom.scheduler.Schedulerand
axiom.scheduler.SubScheduler.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071129/27a1b7c1/attachment.htm 

From theatilla at gmail.com  Thu Nov 29 13:47:21 2007
From: theatilla at gmail.com (Atilla)
Date: Thu, 29 Nov 2007 19:47:21 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <474E86DE.1@libero.it>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
Message-ID: <b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>

I doubt I'll be running 4 heavy cpu-bound processes on a 4-core
system, I'd prefer to leave 1 core "free" for all the rest of
monitoring/logging tasks.

What causes the CPU overload in such a case? Currently I keep a custom
many-to-many like structure, which has O(1) access time and need to
forward the same message to N clients that are returned from that
structure, for each incoming packet, at worst. I could potentially
pre-pack the exact network message to avoid generating it for each of
them, which at this point is the largest overhead. Although I'm not
sure how much I can save like that.



From Marcin.Kasperski at softax.com.pl  Thu Nov 29 16:13:51 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Thu, 29 Nov 2007 22:13:51 +0100
Subject: [Twisted-Python] Re: StdioOnnaStick instance has no attribute
	'isatty'
References: <87prygtti8.fsf@platon.mekk.waw.pl>
Message-ID: <87y7cg69gw.fsf@platon.mekk.waw.pl>

> I just tried to run some trial tests on ubuntu gutsy (twisted 2.5.0),
> just to get the error as in the title (full traceback below).
> Does anybody know what is wrong here?
>
> (...)
>
> AttributeError: StdioOnnaStick instance has no attribute 'isatty'

For the sake of completeness: I solved the problem. It was caused by
the following line, I added to my test setup for some reason loooong
time ago (well, IIRC I just wanted errors in a file for easier
reading):

   log.startLogging(logfile.LogFile('twisted.log', logdir, 16 * 1024 * 1024))

After I removed this line, trial works again.


-- 
----------------------------------------------------------------------
| Marcin Kasperski   | You have the right to produce quality work
| http://mekk.waw.pl |          at all the times. (Beck)
|                    |
----------------------------------------------------------------------




From mrsalty0 at gmail.com  Thu Nov 29 18:45:27 2007
From: mrsalty0 at gmail.com (J Davis)
Date: Thu, 29 Nov 2007 18:45:27 -0500
Subject: [Twisted-Python] implementing a timeout
Message-ID: <a26b6f030711291545l7704dcd6yedebc1df49d227cd@mail.gmail.com>

Greetings,

I'm a newcomer to twisted and am struggling a little with the learning
curve.
I have an idea for an app that I believe is ideally suited for twisted
though I
could use some help finding the right way to approach it.

It performs a status check by getting a page from a web server.
It calculates the time it took to download the page and also can check that
the
content matches a predefined string.

That part of it is working fine but I'd like to take it a step further.
I need a way to impose a limit on how long it waits to receive a response so
that I can detect
unresponsive hosts. I must say that I'm at a loss as to how to add such a
timeout to my code.
Any pointers or examples would be greatly appreciated.

Here is a simplified version of the function that I'm working with.
---------------------------------------

from twisted.internet import task, reactor
from twisted.web import client
import time

class HTCheck:
    def handleResponse(self, data, start_time):
        response_time = time.time() - start_time
        if data == "It lives!\n":
            Status = "OK"
        else:
            Status = "Test page content mismatch"
    def check(self):
        start_time = time.time()
        d = client.getPage("http://localhost/test.html")
        d.addCallback(self.handleResponse, start_time)
        return d

l = task.LoopingCall(HTCheck().check)
l.start(10.0)
reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071129/ff5f98d7/attachment.htm 

From exarkun at divmod.com  Thu Nov 29 19:30:38 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 29 Nov 2007 19:30:38 -0500
Subject: [Twisted-Python] implementing a timeout
In-Reply-To: <a26b6f030711291545l7704dcd6yedebc1df49d227cd@mail.gmail.com>
Message-ID: <20071130003038.8162.468070766.divmod.quotient.41374@ohm>

On Thu, 29 Nov 2007 18:45:27 -0500, J Davis <mrsalty0 at gmail.com> wrote:
>Greetings,
>
>I'm a newcomer to twisted and am struggling a little with the learning
>curve.
>I have an idea for an app that I believe is ideally suited for twisted
>though I
>could use some help finding the right way to approach it.
>
>It performs a status check by getting a page from a web server.
>It calculates the time it took to download the page and also can check that
>the
>content matches a predefined string.
>
>That part of it is working fine but I'd like to take it a step further.
>I need a way to impose a limit on how long it waits to receive a response so
>that I can detect
>unresponsive hosts. I must say that I'm at a loss as to how to add such a
>timeout to my code.
>Any pointers or examples would be greatly appreciated.

You can pass a timeout keyword argument to getPage.  This will set the
maximum time which is allowed to elapsed between when the TCP connection
is established to the remote host and when the page is completely loaded.

Jean-Paul



From itamar at itamarst.org  Thu Nov 29 21:57:35 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Nov 2007 21:57:35 -0500
Subject: [Twisted-Python] Re: StdioOnnaStick instance has no attribute
	'isatty'
In-Reply-To: <87y7cg69gw.fsf@platon.mekk.waw.pl>
References: <87prygtti8.fsf@platon.mekk.waw.pl>
	<87y7cg69gw.fsf@platon.mekk.waw.pl>
Message-ID: <1196391455.1197.33.camel@localhost.localdomain>


On Thu, 2007-11-29 at 22:13 +0100, Marcin Kasperski wrote:
> > I just tried to run some trial tests on ubuntu gutsy (twisted 2.5.0),
> > just to get the error as in the title (full traceback below).
> > Does anybody know what is wrong here?
> >
> > (...)
> >
> > AttributeError: StdioOnnaStick instance has no attribute 'isatty'

Could you file a bug about this? I suspect someone someday may have same
issue, so we should fix underlying problem.

Thanks!




From francisco.herrero at gmail.com  Fri Nov 30 09:02:41 2007
From: francisco.herrero at gmail.com (Francisco Herrero)
Date: Fri, 30 Nov 2007 11:02:41 -0300
Subject: [Twisted-Python] abstract filedescriptor
Message-ID: <ccac7d280711300602q4c02fe89vef3777a0459bd7c9@mail.gmail.com>

Hello. At first excuse me for my poor English.
I've making a python library for handle the pcican board, using the canlib
library. It works fine.
Now, I have to integrate to a twisted application that I made, for package
encapsulation over tcp/ip. This works fine in serialport using
abstract.filedescriptor and pyserial, but in the canlib case I have no file
descriptor for this.

What can I do for encapsulate like serial protocol, but with canlib methods?

I have to re factorize the pycanlib library to build a file descriptor that
represents, or is a way to readapt the abstract.filedescriptor for that?
The methods that I have is:

Channel.readWait() <- this is persistent
Channel.read() <-this is not persistent. If buffer is empty returns.
Channel.write(<can package attributes>)

More details:

This is the file descriptor I wrote...
----------------
# twisted imports
from twisted.internet import abstract, fdesc, main
import canlib
from canlib import canOPEN_EXCLUSIVE, canWANT_EXTENDED, BAUD_1M,
canDRIVER_NORMAL

class CANConnector(abstract.FileDescriptor):
    """
    Conector para el dispositivo pcican usando pycanlib
    """

    connected = 1

    def __init__(self, protocol, conf, reactor):
        abstract.FileDescriptor.__init__(self, reactor)

        self._channel = canlib.Channel(0)
        self._channel.open(canOPEN_EXCLUSIVE | canWANT_EXTENDED)
    self._channel.setBusOff()

    self._channel.setBusParams(BAUD_1M, 4, 3, 1, 1)
    self._channel.setBusOutputControl(canDRIVER_NORMAL)

    self._channel.setBusOn()

        self.reactor = reactor
        self.protocol = protocol

    self.protocol.makeConnection(self)
        self.startReading()


    def writeSomeData(self, data):
        return self._channel.write(1000, data, 10, 0)

    def doRead(self):
        pack = self._channel.readWait()

        # returns the message of package
        return pack['msg']

    def connectionLost(self, reason=None):
        abstract.FileDescriptor.connectionLost(self, reason)
        self._channel.close()
------------

in the main tac service this is how I use the connector:

---------------
(...)

class ServiceChannel(protocol.Protocol):
    def connectionMade(self):
        print 'Canal conectado'

    def dataReceived(self, data):
        print "datorecibido"

        s.writeOnPort(data)

    def connectionLost(self):
        print 'Canal desconectado'

class SimulatorService(service.Service):
    (...)

    def startChannel(self):
        (...)
        c = ServiceChannel()
        (...)
        self.channel = CANConnector(c, self.conf.channel, reactor)

    (...)
    def writeOnPort(self, data):
        self.factory.instance.transport.write(data)

--------
This application pipes the can comunications whith a tcp ip port.

Then ,when I run:
$ twistd -ny main.tac

2007/11/30 10:52 -0300 [-] Log opened.
2007/11/30 10:52 -0300 [-] twistd 2.5.0 (/usr/bin/python 2.5.1) starting up
2007/11/30 10:52 -0300 [-] reactor class: <class '
twisted.internet.selectreactor.SelectReactor'>
2007/11/30 10:52 -0300 [-] Loading main.tac...
2007/11/30 10:52 -0300 [-] /usr/bin/twistd: option -n not recognized
2007/11/30 10:52 -0300 [-] /usr/bin/twistd: Try --help for usage details.
2007/11/30 10:52 -0300 [-] Loaded.
2007/11/30 10:52 -0300 [-] __builtin__.ServiceFactory starting on 5000
2007/11/30 10:52 -0300 [-] Starting factory <__builtin__.ServiceFactory
instance at 0x84069cc>
2007/11/30 10:52 -0300 [__builtin__.ServiceFactory] {'protocol': 'can',
'number': '0', 'channel': '1'}
2007/11/30 10:52 -0300 [__builtin__.ServiceFactory] Canal conectado
2007/11/30 10:52 -0300 [__builtin__.ServiceFactory] channel
started.................
2007/11/30 10:52 -0300 [__builtin__.ServiceFactory] se generan los archivos
de registro

<... (Connect to 5000 port ) ..>

2007/11/30 10:52 -0300 [__builtin__.ServiceFactory] Conexion establecida
desde IPv4Address(TCP, '192.168.6.38', 5000)
2007/11/30 10:52 -0300 [-] Unhandled Error
        Traceback (most recent call last):
          File
"/usr/lib/python2.5/site-packages/twisted/scripts/_twistd_unix.py", line
214, in postApplication
            app.runReactorWithLogging(self.config, self.oldstdout,
self.oldstderr)
          File
"/usr/lib/python2.5/site-packages/twisted/application/app.py", line 113, in
runReactorWithLogging
            reactor.run()
          File
"/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py", line 220,
in run
            self.mainLoop()
          File
"/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py", line 231,
in mainLoop
            self.doIteration(t)
        --- <exception caught here> ---
          File
"/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py", line
97, in doSelect
            [], timeout)
        exceptions.ValueError: file descriptor cannot be a negative integer
(-1)

2007/11/30 10:52 -0300 [-] Malformed file descriptor found.  Preening lists.
2007/11/30 10:52 -0300 [-] bad descriptor <can.CANConnector object at
0x83e94ec>

Thanks for your attention.

Fran

PD: If anybody is interested in this pycanlib library I pass the source for
liberation.

-- 
"El hombre se descubre cuando se mide con un obst?culo"
(Saint Exup?ry)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20071130/04793c59/attachment.htm 

From andrewfr_ice at yahoo.com  Fri Nov 30 10:10:55 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 30 Nov 2007 07:10:55 -0800 (PST)
Subject: [Twisted-Python] OpenSSL problem
Message-ID: <424161.58065.qm@web34214.mail.mud.yahoo.com>

Hello Folks:

I am using client.getPage with a URL that uses the
https protocol. I get the error

from OpenSSL import SSL
ImportError: No module named OpenSSL

I downloaded the Win32 binary for OpenSSL and
pyOpenSSL. I get the error - 

error - Python was build with Visual Studio 7.1 and
extensions need to be built with same version of
compiler, but it isn't installed.

I don't have Visual Studio 7.1. And I used a
pre-compiled Stackless Python binary. Is there an easy
way to get around this without say, recompiling
Stackless (and compiling OpenSSL) with cygwin gcc?

Cheers,
Andrew






      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From zooko at zooko.com  Fri Nov 30 11:30:25 2007
From: zooko at zooko.com (zooko)
Date: Fri, 30 Nov 2007 09:30:25 -0700
Subject: [Twisted-Python] OpenSSL problem
In-Reply-To: <424161.58065.qm@web34214.mail.mud.yahoo.com>
References: <424161.58065.qm@web34214.mail.mud.yahoo.com>
Message-ID: <7178F18D-0A1A-412B-9E0E-A641CE424D36@zooko.com>

On Nov 30, 2007, at 8:10 AM, Andrew Francis wrote:

> error - Python was build with Visual Studio 7.1 and
> extensions need to be built with same version of
> compiler, but it isn't installed.
>
> I don't have Visual Studio 7.1. And I used a
> pre-compiled Stackless Python binary. Is there an easy
> way to get around this without say, recompiling
> Stackless (and compiling OpenSSL) with cygwin gcc?

The error message is in error.  Here is the Python issue ticket in  
which the message was changed from stating that you have to use the  
same compiler that was used to build Python, to instead stating that  
you have to use a compiler that is compatible with the one that was  
used to build Python:

http://bugs.python.org/issue1257728

In my experience, simply setting "compiler=mingw32" in your distutils  
config file works for all extension modules that I have tried  
*except* for pyOpenSSL.  I don't remember the details, but I have a  
note here which says that I was unable to build pyOpenSSL for  
myself.  Here's a ticket saying that I don't like pyOpenSSL because  
it is unmaintained and I don't know how to build it:

http://allmydata.org/trac/tahoe/ticket/11

Note that there are apparently some problems with using the cygwin  
gcc -mno-cygwin (a.k.a. the mingw32 compiler) to build Python  
extension modules, but these problems are limited to specific kinds  
of interaction between extension modules, namely that you can either  
build your modules so that they can safely exchange std::iostreams  
with the Python executable or with other modules that were built with  
Visual Studio, or you can build your modules so that they can safely  
exchange FILE*'s, but not both.

I haven't experienced this issue myself.  Here is a mailing list  
message describing it:

http://mail.python.org/pipermail/distutils-sig/2007-September/ 
008255.html

Regards,

Zooko




From matusis at yahoo.com  Fri Nov 30 13:49:07 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Fri, 30 Nov 2007 10:49:07 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <474E86DE.1@libero.it>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>
	<474E86DE.1@libero.it>
Message-ID: <064d01c83381$b00aba70$10202f50$@com>

> You can also consider nginx, if you want to write a server in C
> (or in the D language).
> It is a web server, but its core is usable as a framework for generic
> servers (in fact nginx has also a POP3/IMAP4 proxy server).


Do you know if anybody has written general-purpose TCP servers using nginx? It would be interesting to look at.


> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Manlio Perillo
> Sent: Thursday, November 29, 2007 1:31 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Advise for heavy concurrency
> 
> Alec Matusis ha scritto:
> > Here is one tip:
> >
> > If you have a dual Xeon 5140 (4 cores) machine and run 4 twisted
> epoll servers in a similar (but not exactly similar situation), it
> chokes at 30000 clients.
> >
> > The machine is CPU-bound, and the for loop that loops over clients to
> send your packets is a performance hog.
> > We are now considering using pyrex for that for loop, or rewriting it
> with C and libevent.
> >
> 
> You can also consider nginx, if you want to write a server in C
> (or in the D language).
> 
> It is a web server, but its core is usable as a framework for generic
> servers (in fact nginx has also a POP3/IMAP4 proxy server).
> 
> nginx has many appealing features, like integrated garbage collector,
> and multi process workers.
> 
> 
> 
> Manlio Perillo
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From manlio_perillo at libero.it  Fri Nov 30 14:42:48 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Fri, 30 Nov 2007 20:42:48 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <064d01c83381$b00aba70$10202f50$@com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>
	<064d01c83381$b00aba70$10202f50$@com>
Message-ID: <475067B8.7050302@libero.it>

Alec Matusis ha scritto:
>> You can also consider nginx, if you want to write a server in C
>> (or in the D language).
>> It is a web server, but its core is usable as a framework for generic
>> servers (in fact nginx has also a POP3/IMAP4 proxy server).
> 
> 
> Do you know if anybody has written general-purpose TCP servers using nginx? It would be interesting to look at.
> 

There are only an HTTP server and a "mail" proxy (POP3/IMAP4/SMTP), and 
they are quite complex, since there is a lot of boilerplate code.

As an example, for mail support there is one "CORE" module ("mail"), and 
POP3, IMAP4 and SMPT are handled using "sub" modules of this core module.


Each core module boilerplate code has to setup the parsing of 
configuration files and the listening sockets.



Manlio Perillo





From matusis at yahoo.com  Fri Nov 30 18:42:44 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Fri, 30 Nov 2007 15:42:44 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>
	<474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
Message-ID: <072b01c833aa$b4d05c30$1e711490$@com>

> What causes the CPU overload in such a case

It looks like the for loop that loops over connections to send the message is the main source of the load. The biggest problem is not the CPU however. When the process takes more than 70% of the CPU (as displayed by top), python seems to start skipping garbage collection, and the memory size of the process just keeps growing. We have no control over this.

> I doubt I'll be running 4 heavy cpu-bound processes on a 4-core
> system

Running 4 servers on a 4-core box seems fine, it leaves plenty of resources for system tasks and logging, as long as as long as they are not at 99% CPU each, but I doubt you will get them to run at 99% because of the said memory problem.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Atilla
> Sent: Thursday, November 29, 2007 10:47 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Advise for heavy concurrency
> 
> I doubt I'll be running 4 heavy cpu-bound processes on a 4-core
> system, I'd prefer to leave 1 core "free" for all the rest of
> monitoring/logging tasks.
> 
> What causes the CPU overload in such a case? Currently I keep a custom
> many-to-many like structure, which has O(1) access time and need to
> forward the same message to N clients that are returned from that
> structure, for each incoming packet, at worst. I could potentially
> pre-pack the exact network message to avoid generating it for each of
> them, which at this point is the largest overhead. Although I'm not
> sure how much I can save like that.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From jml at mumak.net  Fri Nov 30 21:20:08 2007
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 1 Dec 2007 13:20:08 +1100
Subject: [Twisted-Python] Automating the release
Message-ID: <d06a5cd30711301820x6bb145akb9e34a5697b7ea68@mail.gmail.com>

Hello all,

As you may know, radix and others are working on automating the
Twisted release process so that we can move to a more frequent,
predictable release cycle.

The tickets to do so are here:
http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&component=release+management&milestone=twisted-7.0&order=priority

Our goal is to do a release using the automated tools before the end
of this year.

If you want to help out, there are three things you can do:

1. Help implement one of the release tickets.
The release tickets need coding. Some of the tickets have fairly poor
descriptions -- but that's ok. All that means is that your first step
is hassling radix to clarify what he means.

If you are going to hack on these, it's very important that you do
test-driven development. We want this code to be first-class.

2. Fix tickets more generally.
I *was* going to recommend that you work on some of our tickets with
'high' and 'highest' priority, but it turns out that they represent
one quarter of all open tickets. Still, if that doesn't daunt you then
please start hacking. I promise that the regular developers will be
extra nice and friendly in helping get started with the Twisted code
base.

3. Review branches
All code that goes into Twisted must be reviewed before it lands. It
doesn't really take much arcane knowledge to do a code review. All you
have to do is make sure the code conforms to our conventions, check
the test coverage and then ask questions about any bit you don't
understand. The idea is that if you don't understand it, the code
should be clearer.

Branches up for review are listed here: http://twistedmatrix.com/trac/report/15

There's general information about Twisted development here:
http://twistedmatrix.com/trac/wiki/TwistedDevelopment

Happy hacking,
jml



From brendoncolby at gmail.com  Thu Nov  1 08:22:29 2007
From: brendoncolby at gmail.com (Brendon Colby)
Date: Thu, 1 Nov 2007 09:22:29 -0500
Subject: [Twisted-Python] Deferreds and Trial -- getting my timing right
In-Reply-To: <20071031171539.8162.1924538823.divmod.quotient.30171@ohm>
References: <e64b001e0710311001s4ad86f06wa7bd54a28a6c4614@mail.gmail.com>
	<20071031171539.8162.1924538823.divmod.quotient.30171@ohm>
Message-ID: <e64b001e0711010722q7b255146i6f7eddeb9419f551@mail.gmail.com>

On 10/31/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> I dunno.  I can't remember the last time I put any code in a factory's
> __init__ or its startFactory method.  Maybe you could call the
> startFactory
> method in your test?


Hrmm...good idea. I think I know what I need to do now. Thanks for the
pointer.

Brendon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071101/31b2b533/attachment.html>

From exarkun at twistedmatrix.com  Sat Nov  3 22:05:04 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Nov 2007 04:05:04 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1194149104.43.1150492133@twistedmatrix.com

Bug summary
______________________
Summary for 2007-10-28 through 2007-11-04
Bugs opened: 10    Bugs closed: 15  Total open bugs: 1032 (-5)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +0  |Highest:  -5          |Core:   +1             
|Enhancement:  -4  |High:     +0          |Mail:   +0             
|Task:         +1  |Normal:   +1          |Names:  -1             
                   |Low:      +0          |Trial:  -1             
                   |Lowest:   +1          |Web:    +0             
                                          |Web2:   -2             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2858] test_stdio.StandardInputOutputTestCase.test_lastWriteReceived fails if a warning is printed during the tests (opened by therve) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2858

[#2643] twisted.python.modules does not account for memory/disk inconsistencies when scanning packages (opened by glyph) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2643

[#2858] test_stdio.StandardInputOutputTestCase.test_lastWriteReceived fails if a warning is printed during the tests (opened by therve) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2858

                    ===== High =====
[#2857] test_stdio doesn't correctly pass the reactor to subprocesses (opened by therve)
    defect          core       http://twistedmatrix.com/trac/ticket/2857

[#2859] twisted web FilePath uri-encoding bypass (directory traversal) (opened by jhart) (CLOSED, invalid)
    defect          web        http://twistedmatrix.com/trac/ticket/2859

                    ===== Normal =====
[#2860] Maybe we need assertNotWarns (opened by therve)
    task            core       http://twistedmatrix.com/trac/ticket/2860

[#2863] twisted.protocols.amp.AMP can't find its factory (opened by dripton)
    defect          core       http://twistedmatrix.com/trac/ticket/2863

[#2864] imap tests leave reactor in an unclean state (opened by radix)
    defect          mail       http://twistedmatrix.com/trac/ticket/2864

                    ===== Low =====
[#2861] Deferred cleans Failures more times than it needs to (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2861

                    ===== Lowest =====
[#2862] [PATCH] Tiny doc tweak for twisted.protocols.amp (opened by dripton)
    defect          core       http://twistedmatrix.com/trac/ticket/2862



Closed Bugs
______________________
                    ===== Highest =====
[#2091] Make reactor unclean warnings reported errors (opened by jml, closed by radix, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2091

[#2643] twisted.python.modules does not account for memory/disk inconsistencies when scanning packages (opened by glyph, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2643

[#2266] twisted.mail.test.test_mail.ProcessAliasTestCase leaves the reactor unclean (opened by jml, closed by therve, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2266

[#2849] A reentrant addCallbacks on a Deferred adds to mid-chain (opened by Peaker, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2849

[#2669] Avoid looping to find the next time that divides by interval (opened by Peaker, closed by Peaker, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2669

[#2813] logstr initialization should happen before calling makeConnection in tcp.BaseClient (opened by therve, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2813

[#2492] Unhandled socket error when making DNS query (opened by p1mrx, closed by therve, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/2492

[#2858] test_stdio.StandardInputOutputTestCase.test_lastWriteReceived fails if a warning is printed during the tests (opened by therve, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2858

[#2836] limits of web2.resource.PostableResource can't be customized (opened by therve, closed by therve, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2836

[#2858] test_stdio.StandardInputOutputTestCase.test_lastWriteReceived fails if a warning is printed during the tests (opened by therve, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2858

                    ===== High =====
[#2269] twisted.test.test_pb.NewStyleCachedTestCase leaves the reactor unclean (opened by jml, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2269

[#2859] twisted web FilePath uri-encoding bypass (directory traversal) (opened by jhart, closed by exarkun, invalid)
    defect          web        http://twistedmatrix.com/trac/ticket/2859

                    ===== Normal =====
[#1768] Synchronous Task Queue (opened by edsuom, closed by glyph, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1768

[#2805] Cooperator adds a callback to iterated deferreds which does not pass on the original result (opened by rwall, closed by therve, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/2805

                    ===== Low =====
[#2467] twisted.web2.client.http.testConn is a pretty bad example and doesn't work in the default configuration (opened by tv, closed by therve, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2467



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2864] imap tests leave reactor in an unclean state (since 2007-11-03 18:33:43).

Mean open ticket age: 560 days, 6:32:57.875374.
Median: 462 days, 7:46:03.250374.
Standard deviation: 406 days, 0:27:03.405592.
Interquartile range: 507 days, 3:57:36.

Mean time between ticket creation and ticket resolution: 123 days, 16:29:00.414484.
Median: 15 days, 4:20:02.
Standard deviation is 226 days, 16:11:21.249058.
The interquartile range is 133 days, 4:31:15.

Mean time spent in review: 69 days, 4:50:09.346471.
Median: 4 days, 9:08:37.
Standard deviation: 154 days, 5:04:12.761773.
Interquartile range: 31 days, 7:00:28.

Mean number of times a ticket is reviewed: 2.00223214286.
Median: 1
Standard deviation: 1.6589837734.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    10 unique ticket reporters
    6 unique ticket reviewers
    4 unique ticket resolvers
In the last 24 weeks,
    63 unique ticket reporters
    15 unique ticket reviewers
    13 unique ticket resolvers
In the last 48 weeks,
    152 unique ticket reporters
    18 unique ticket reviewers
    25 unique ticket resolvers




From pf_moore at yahoo.co.uk  Sun Nov  4 10:52:35 2007
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Sun, 04 Nov 2007 17:52:35 +0000
Subject: [Twisted-Python] mktap/twistd in a Windows service
Message-ID: <fgl0q5$70i$1@ger.gmane.org>

I know this is a FAQ, but it's not in the FAQ list and I've had no luck 
finding a good answer via web or list searches (Windows is a lousy 
search term, and service isn't much use in a Twisted context...)

I want to run a tiny non-authoritative DNS server on my PC. I've never 
done this before, but twisted names looks ideal. The documentation 
(http://twistedmatrix.com/projects/names/documentation/howto/names.html) 
says I just need to do

     mktap dns --recursive --cache
     twistd -f dns.tap

and indeed this works fine. I seem to recall some time ago seeing 
postings to the effect that tap format files were out of favour, but I 
don't follow the twisted list much, so I don't know if this is still 
true. Nevertheless, it works so who cares?

However, I want to run this as a Windows service. Ideally, twistd would 
have a --install-service flag or something, but it doesn't so I went 
looking, and found postings covering tap2ntsvc which creates services 
from tap files, but it seems to have been replaced by ntsvc, which only 
handles .tac files :-(

I get the impression that the idea is that .tac files are easy to create 
by hand, but as I know *nothing* about twisted names (and don't really 
want to - all I want is to run a DNS server!) it's not as easy as it 
might be...

So, can someone tell me:

1. What is the currently favoured form for Twisted application files?
2. How do I make one for twisted names (the equivalent of the mktap line 
above) and better still how do I generalise this for any mktap command?
3. How do I run it? (twistd, presumably)
4. How do I make that file run as a Windows service?


I believe, from what I've found, that the answers are:
1. .tac
2. Don't know - not sure there's a generic answer.
3. twistd -noy
4. ntsvc

In which case, the documentation really needs to be updated to explain 
.tac files throughout, instead of mktap. And I need someone to write me 
a dns.tac file :-(

Ideally, this should be written up as a FAQ or HOWTO somewhere. I'll 
volunteer to write it up, as long as someone will maintain it - I'm not 
in a position to do so (I use twisted occasionally, but have no need or 
desire to follow development versions or discussions on the list). I 
don't want to bother doing a write-up, if it won't get included in the 
docs/FAQ and maintained, though...

Thanks in advance for any help,
Paul.




From db3l.net at gmail.com  Sun Nov  4 12:55:23 2007
From: db3l.net at gmail.com (David Bolen)
Date: Sun, 04 Nov 2007 14:55:23 -0500
Subject: [Twisted-Python] Re: mktap/twistd in a Windows service
References: <fgl0q5$70i$1@ger.gmane.org>
Message-ID: <m2fxzllr9w.fsf@valheru.db3l.homeip.net>

Paul Moore <pf_moore at yahoo.co.uk> writes:

> I want to run a tiny non-authoritative DNS server on my PC. I've never
> done this before, but twisted names looks ideal. The documentation
> (http://twistedmatrix.com/projects/names/documentation/howto/names.html)
> says I just need to do
>
>     mktap dns --recursive --cache
>     twistd -f dns.tap
>
> and indeed this works fine. I seem to recall some time ago seeing
> postings to the effect that tap format files were out of favour, but I
> don't follow the twisted list much, so I don't know if this is still
> true. Nevertheless, it works so who cares?
>
> However, I want to run this as a Windows service. Ideally, twistd
> would have a --install-service flag or something, but it doesn't so I
> went looking, and found postings covering tap2ntsvc which creates
> services from tap files, but it seems to have been replaced by ntsvc,
> which only handles .tac files :-(

For what it's worth, I rarely use twistd for my Twisted applications,
and it's not that much work to run Twisted-based code as an NT service
without any external utilities.

You can set things up with the pywin32's service support
(win32service/util), and just have your main entry point run Twisted's
reactor.  The shutdown code stops the reactor and also terminates the
service.  Note that service startup runs the main entry point in a
second thread, but that's the "main" thread from Twisted's
perspective.  It does mix up signal handling under Windows, so I
typically disable that in the reactor.  Also, service control messages
(like stop) are run in the service thread (true application main
thread), so you need to call into Twisted's thread to stop the
reactor.

Here's a tiny startup script that provides service support for some
application - I've removed any special logging initialization and
registry parameter support for clarity.

          - - - - - - - - - - - - - - - - - - - - - - - - -

import os, sys
import win32service,win32serviceutil

from twisted.internet import reactor
from twisted.python import log

# Ensure basic thread support is enabled for twisted
from twisted.python import threadable
threadable.init(1)


class Service(win32serviceutil.ServiceFramework):

    _svc_name_ = '{servicename}'
    _svc_display_name_ = '{Display name for Service}'

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        log.msg('Stopping {server}...')
        reactor.callFromThread(reactor.stop)

    def SvcDoRun(self):

        #
        # ... Initialize application here
        #

        log.msg('{Server} running...')
        reactor.run(installSignalHandlers=0)


if __name__ == "__main__":
    win32serviceutil.HandleCommandLine(Service)

              - - - - - - - - - - - - - - - - - - - - - - - - -

The above provides for install/uninstall based on the default command
line handling in win32serviceutil, and of course normal Windows
control ("net start", "net stop") afterwards.  Registering as a Python
module only runs on the machine with Python/pywin32 installed, but you
can package the above with something like py2exe.

You can then get as complicated as you want from here.  There are some
helper functions in win32serviceutil (Get/SetServiceCustomOption) that
can simplify storing startup information in the registry if you like.

Alternatively, I've implemented my own equivalent to HandleCommandLine
in some cases where I wanted better control (or preferred "--install"
to just "install"), wanted to work in a stdin/stdout debug mode when
run directly, or needed to synchronize startup handling with the
py2exe version, when I packaged the service into an executable.

Note that I'm not sure how the above plays with Twisted's service
framework, as I never got comfortable with using it.  But aside from that
anything beyond the basics above are general python service questions,
and not specific to Twisted applications.

-- David




From exarkun at divmod.com  Sun Nov  4 14:23:52 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 4 Nov 2007 16:23:52 -0500
Subject: [Twisted-Python] mktap/twistd in a Windows service
In-Reply-To: <fgl0q5$70i$1@ger.gmane.org>
Message-ID: <20071104212352.8162.2082903035.divmod.quotient.31594@ohm>

On Sun, 04 Nov 2007 17:52:35 +0000, Paul Moore <pf_moore at yahoo.co.uk> wrote:
>I know this is a FAQ, but it's not in the FAQ list and I've had no luck 
>finding a good answer via web or list searches (Windows is a lousy search 
>term, and service isn't much use in a Twisted context...)
>
>I want to run a tiny non-authoritative DNS server on my PC. I've never done 
>this before, but twisted names looks ideal. The documentation 
>(http://twistedmatrix.com/projects/names/documentation/howto/names.html) 
>says I just need to do
>
>     mktap dns --recursive --cache
>     twistd -f dns.tap
>

In recent versions of Twisted, you can simplify the above to this:

    twistd dns --recursive --cache

This skips the tap phase: it creates the same application mktap would have
created, but instead of putting it in the tap file, it just runs it.

>and indeed this works fine. I seem to recall some time ago seeing postings 
>to the effect that tap format files were out of favour, but I don't follow 
>the twisted list much, so I don't know if this is still true. Nevertheless, 
>it works so who cares?

Quite so.

>
>However, I want to run this as a Windows service. Ideally, twistd would have 
>a --install-service flag or something, but it doesn't so I went looking, and 
>found postings covering tap2ntsvc which creates services from tap files, but 
>it seems to have been replaced by ntsvc, which only handles .tac files :-(

It would be very excellent if twistd had a --install-service flag.  There is
a relatively minimal level of interest in Windows-specific functionality
among the currently active Twisted developers, though.  This means that it
isn't very likely that any of us will undertake to add this feature.

That doesn't mean that we'll never implement it, nor that we wouldn't accept
a patch which implements it from someone else who is more interested in it
than we are.  If someone provides the functionality, with unit tests, then
we'll gladly incorporate and maintain it.  I'm not sure if you would be
interested in doing this work or not;  I'm directing this as much at you as
at all of the other users of Twisted on Windows who I know are out there and
mostly remain silently.

>
>I get the impression that the idea is that .tac files are easy to create by 
>hand, but as I know *nothing* about twisted names (and don't really want to 
>- all I want is to run a DNS server!) it's not as easy as it might be...

They are, more or less, although they are harder to make than tap files. ;)

>
>So, can someone tell me:
>
>1. What is the currently favoured form for Twisted application files?

It all depends on the use-case.  For all of the services distributed with
Twisted itself, tap files offer very little over the persistence-free form
of twistd I gave an example of above.  Since tap files contain pickled data,
they have all the problems of pickle (lack of introspectability, problems
with compatibility, security); if these aren't problems, then tap files
might be okay.  On the other hand, many uses of twistd don't actually need
any persistence, so using tap files doesn't actually provide any benefits.

>2. How do I make one for twisted names (the equivalent of the mktap line 
>above) and better still how do I generalise this for any mktap command?

See twisted.names.tap.makeService - this is the function `mktap dns´ is
calling to create the object it will pickle into the tap file.  Your tac
file can call it directly with the desired configuration and add the
resulting service to an application object.  This will give you a tac
which does the same thing as your mktap-produced tap file.  You can
read more about writing tac files here:

  http://twistedmatrix.com/projects/core/documentation/howto/application.html

>3. How do I run it? (twistd, presumably)

As you said below, twistd -noy.

>4. How do I make that file run as a Windows service?
>

I've never used ntsvc, so I can't say if that's right, but presumably
it is at least close.

There isn't any reason that if ntsvc works with tac files it couldn't
also work with tap files, though.  So another solution might be to explore
adding tap file support to ntsvc.  The interface for loading a tac file is
really the same as the interface for loading a tap file, in fact, so I am
slightly surprised ntsvc doesn't work with tap files.

>
>I believe, from what I've found, that the answers are:
>1. .tac
>2. Don't know - not sure there's a generic answer.
>3. twistd -noy
>4. ntsvc
>
>In which case, the documentation really needs to be updated to explain .tac 
>files throughout, instead of mktap. And I need someone to write me a dns.tac 
>file :-(
>
>Ideally, this should be written up as a FAQ or HOWTO somewhere. I'll 
>volunteer to write it up, as long as someone will maintain it - I'm not in a 
>position to do so (I use twisted occasionally, but have no need or desire to 
>follow development versions or discussions on the list). I don't want to 
>bother doing a write-up, if it won't get included in the docs/FAQ and 
>maintained, though...

Anything (accurate, coherent) you want to write up we'd be glad to add to
the Twisted repository and include on the website, in releases, etc.

Jean-Paul



From nitro at dr-code.org  Mon Nov  5 11:05:12 2007
From: nitro at dr-code.org (Nitro)
Date: Mon, 05 Nov 2007 19:05:12 +0100
Subject: [Twisted-Python] Perspective broker and pipes
In-Reply-To: <47288946.8010305@eepatents.com>
References: <op.t01wywmez3pzfc@nitrogenycs2> <47288946.8010305@eepatents.com>
Message-ID: <op.t1by6yq5z3pzfc@nitrogenycs2>

Am 31.10.2007, 14:55 Uhr, schrieb Ed Suominen <general at eepatents.com>:

> The processworker module of my AsynQueue package spawns a process and
> makes a PB connection with it via stdin/stdout. Perhaps you could adapt
> it for your purposes.
>
> http://foss.eepatents.com/trac/AsynQueue/browser/projects/AsynQueue/trunk/asynqueue/processworker.py
>
> Best regards, Ed

Thanks, Ed!

This helped me to get started. I am using a modified version of StdIO  
along with _pollingfile now. It works really nicely!

-Matthias



From manlio_perillo at libero.it  Mon Nov  5 11:49:13 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 05 Nov 2007 19:49:13 +0100
Subject: [Twisted-Python] Perspective broker and pipes
In-Reply-To: <20071031133313.8162.1793855910.divmod.quotient.30097@ohm>
References: <20071031133313.8162.1793855910.divmod.quotient.30097@ohm>
Message-ID: <472F65A9.7040002@libero.it>

Jean-Paul Calderone ha scritto:
> On Wed, 31 Oct 2007 14:24:50 +0100, Nitro <nitro at dr-code.org> wrote:
>>
>> [snip]
>>
>> How big is the actual performance impact? The throughput right now is  
>> ~10- 50 kbyte/s. Is there a better way than pipes? They were just twaitformulipleobjecthe 
>> first thing that came to my mind.
> 
> TCP connections are the thing which is better. ;)  Now that I think of it,
> though, I don't know anything about how pipes are implemented on Windows.
> 

Windows named pipes should be the equivalent of Unix local sockets.
They support overlapped (aka non blocking/asynchronous) access.
http://msdn2.microsoft.com/en-us/library/aa365788.aspx
and an example:
http://msdn2.microsoft.com/en-us/library/aa365603.aspx

If I remember well, MySQL on Windows supports named pipes.

 > [...]


Manlio Perillo



From manlio_perillo at libero.it  Mon Nov  5 11:55:45 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 05 Nov 2007 19:55:45 +0100
Subject: [Twisted-Python] Perspective broker and pipes
In-Reply-To: <20071031133313.8162.1793855910.divmod.quotient.30097@ohm>
References: <20071031133313.8162.1793855910.divmod.quotient.30097@ohm>
Message-ID: <472F6731.5080009@libero.it>

Jean-Paul Calderone ha scritto:
> On Wed, 31 Oct 2007 14:24:50 +0100, Nitro <nitro at dr-code.org> wrote:
>>
>> [snip]
>>
>> How big is the actual performance impact? The throughput right now is  
>> ~10- 50 kbyte/s. Is there a better way than pipes? They were just twaitformulipleobjecthe 
>> first thing that came to my mind.
> 
> TCP connections are the thing which is better. ;)  Now that I think of it,
> though, I don't know anything about how pipes are implemented on Windows.
> 

Windows named pipes should be the equivalent of Unix local sockets.
They support overlapped (aka non blocking/asynchronous) access.
http://msdn2.microsoft.com/en-us/library/aa365788.aspx
and an example:
http://msdn2.microsoft.com/en-us/library/aa365603.aspx

If I remember well, MySQL on Windows supports named pipes.

> [...]


Manlio Perillo



From pf_moore at yahoo.co.uk  Wed Nov  7 16:43:41 2007
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Wed, 07 Nov 2007 23:43:41 +0000
Subject: [Twisted-Python] Re: mktap/twistd in a Windows service
In-Reply-To: <20071104212352.8162.2082903035.divmod.quotient.31594@ohm>
References: <fgl0q5$70i$1@ger.gmane.org>
	<20071104212352.8162.2082903035.divmod.quotient.31594@ohm>
Message-ID: <fgtig2$q07$1@ger.gmane.org>

Jean-Paul Calderone wrote:
>> However, I want to run this as a Windows service. Ideally, twistd 
>> would have a --install-service flag or something, but it doesn't so I 
>> went looking, and found postings covering tap2ntsvc which creates 
>> services from tap files, but it seems to have been replaced by ntsvc, 
>> which only handles .tac files :-(
> 
> It would be very excellent if twistd had a --install-service flag.  
> There is a relatively minimal level of interest in Windows-specific functionality
> among the currently active Twisted developers, though.  This means that it
> isn't very likely that any of us will undertake to add this feature.
> 
> That doesn't mean that we'll never implement it, nor that we wouldn't 
> accept a patch which implements it from someone else who is more interested
 > in it than we are.  If someone provides the functionality, with unit 
tests,
> then we'll gladly incorporate and maintain it.  I'm not sure if you would be
> interested in doing this work or not;  I'm directing this as much at you as
> at all of the other users of Twisted on Windows who I know are out there 
> and mostly remain silently.

Thanks for the information. I would love to say that I would look at 
this, but I really don't have the knowledge of Twisted, or the time to 
do a decent job. I'll certainly add it to my to do list, but although I 
love twisted in theory, in practice, I don't write enough of the type of 
software it's good at, for me to more than dabble. My main use, as I 
hinted at in my original mail, is to just use the prepackaged 
functionality - for which you have my eternal gratitude. (As it happens, 
the need I originally had for a DNS server has passed - I found an 
easier workaround for the specific case I was interested in).

If anyone does want to work on this, I'd certainly be happy to help 
where I can - I have a reasonable amount of Windows coding experience, 
both in Python and otherwise.

Thanks once again for the detailed reply.
Paul.




From matusis at yahoo.com  Thu Nov  8 15:19:54 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Thu, 8 Nov 2007 14:19:54 -0800
Subject: [Twisted-Python] profiling live twisted application
Message-ID: <066a01c82255$7d5276a0$77f763e0$@com>

What is the best non-intrusive way to profile a live twisted application?

 

We have TCP servers with epoll reactors.

We want to optimize them as our usage grows.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071108/efe4d4a3/attachment.html>

From maarten at treewalker.org  Thu Nov  8 16:40:04 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Fri, 9 Nov 2007 01:40:04 +0200
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <066a01c82255$7d5276a0$77f763e0$@com>
References: <066a01c82255$7d5276a0$77f763e0$@com>
Message-ID: <200711090040.08241.maarten@treewalker.org>

On Thursday 08 November 2007, Alec Matusis wrote:

> What is the best non-intrusive way to profile a live twisted application?

I'm not sure it's possible to do profiling in a non-intrusive way: the more 
detailed measurements you want to take, the more you're going to slow down 
execution. I hear quantum mechanics has similar problems ;)

> We have TCP servers with epoll reactors.
>
> We want to optimize them as our usage grows.

What I did for our web app is add an option to log the time it took to 
handle each page fetch. By looking at the log, you can spot pages that are 
always slow, pages which are slow for certain inputs and pages which vary 
in speed.

There are several profilers available for Python, but their overhead is 
probably too much to use in a live environment. Maybe you can duplicate the 
data sets and requests from the live environment in a test environment 
though and profile your server there.

Here is some example code:

if _timeRender:
	from time import time
if _profileRender:
	from hotshot import Profile

[...]

	if _timeRender:
		start = time()
	if _profileRender:
		profile = Profile('request.prof')
		profile.runcall(page.respond, req)
		profile.close()
	else:
		page.respond(req)
	if _timeRender:
		end = time()
		print 'Responding took %1.3f seconds' % (end - start)

HotShot profile results are binary files, read the Python library 
documentation to learn how you can create human readable output from them.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20071109/ead574a0/attachment.sig>

From matusis at yahoo.com  Thu Nov  8 17:07:14 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Thu, 8 Nov 2007 16:07:14 -0800
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <200711090040.08241.maarten@treewalker.org>
References: <066a01c82255$7d5276a0$77f763e0$@com>
	<200711090040.08241.maarten@treewalker.org>
Message-ID: <06ba01c82264$7bf49680$73ddc380$@com>

> What I did for our web app is add an option to log the time it took to
> handle each page fetch. By looking at the log, you can spot pages that
> are always slow, pages which are slow for certain inputs and pages
> which vary in speed.


Unfortunately we need more detailed results than this. The bottlenecks are in our code, we would like to know which functions take most time, or even which loop within a function. 

The set of client commands to our TCP server is rather large, and the order of these commands is random, so I modeling in dev environment involves potentially wrong pre-assumptions about which commands/functions are most CPU intensive.

It would be nice to at least get the list of functions with total times spend in each function after say 1 min or server run.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Maarten ter Huurne
> Sent: Thursday, November 08, 2007 3:40 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] profiling live twisted application
> 
> On Thursday 08 November 2007, Alec Matusis wrote:
> 
> > What is the best non-intrusive way to profile a live twisted
> application?
> 
> I'm not sure it's possible to do profiling in a non-intrusive way: the
> more detailed measurements you want to take, the more you're going to
> slow down execution. I hear quantum mechanics has similar problems ;)
> 
> > We have TCP servers with epoll reactors.
> >
> > We want to optimize them as our usage grows.
> 
> What I did for our web app is add an option to log the time it took to
> handle each page fetch. By looking at the log, you can spot pages that
> are always slow, pages which are slow for certain inputs and pages
> which vary in speed.
> 
> There are several profilers available for Python, but their overhead is
> probably too much to use in a live environment. Maybe you can duplicate
> the data sets and requests from the live environment in a test
> environment though and profile your server there.
> 
> Here is some example code:
> 
> if _timeRender:
> 	from time import time
> if _profileRender:
> 	from hotshot import Profile
> 
> [...]
> 
> 	if _timeRender:
> 		start = time()
> 	if _profileRender:
> 		profile = Profile('request.prof')
> 		profile.runcall(page.respond, req)
> 		profile.close()
> 	else:
> 		page.respond(req)
> 	if _timeRender:
> 		end = time()
> 		print 'Responding took %1.3f seconds' % (end - start)
> 
> HotShot profile results are binary files, read the Python library
> documentation to learn how you can create human readable output from
> them.
> 
> Bye,
> 		Maarten




From seadog at sealabs.net  Fri Nov  9 08:01:38 2007
From: seadog at sealabs.net (Giorgos Logiotatidis)
Date: Fri, 09 Nov 2007 17:01:38 +0200
Subject: [Twisted-Python] DirDBM possible bug
Message-ID: <1194620498.19697.13.camel@localhost>

Hello,
	I get an 'RuntimeError: maximum recursion depth exceeded' when
executing the following code. 

#!/usr/bin/env python
from twisted.persisted import dirdbm
from twisted.words.xish import domish

e = domish.Element(('', 'foo'))
d = dirdbm.Shelf("/tmp/foo")
d["200711090000"] = e
l = d["200711090000"]

Have I wrote something wrong or this is a dirdbm bug?

Thanks in advance,
-gl






From itamar at itamarst.org  Fri Nov  9 08:05:09 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 09 Nov 2007 10:05:09 -0500
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <066a01c82255$7d5276a0$77f763e0$@com>
References: <066a01c82255$7d5276a0$77f763e0$@com>
Message-ID: <1194620709.13986.20.camel@localhost.localdomain>


On Thu, 2007-11-08 at 14:19 -0800, Alec Matusis wrote:
> What is the best non-intrusive way to profile a live twisted
> application?

twistd has a --profile option; you can get it to use either profile.py
or hotshot. At some point it will hopefully support cProfile. You could
also just use cProfile directly.

The problem of course is that this doesn't tell you when I/O is a
bottleneck, nor does it tell you which high-level tasks are the problem.





From christopher.zorn at gmail.com  Fri Nov  9 09:20:09 2007
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Fri, 9 Nov 2007 11:20:09 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <1194620498.19697.13.camel@localhost>
References: <1194620498.19697.13.camel@localhost>
Message-ID: <149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>

There is a bug, I have attached a patch. It would be cool if we could get
this fixed upstream. :) I guess I should file a ticket.

On Nov 9, 2007 10:01 AM, Giorgos Logiotatidis <seadog at sealabs.net> wrote:

> Hello,
>        I get an 'RuntimeError: maximum recursion depth exceeded' when
> executing the following code.
>
> #!/usr/bin/env python
> from twisted.persisted import dirdbm
> from twisted.words.xish import domish
>
> e = domish.Element(('', 'foo'))
> d = dirdbm.Shelf("/tmp/foo")
> d["200711090000"] = e
> l = d["200711090000"]
>
> Have I wrote something wrong or this is a dirdbm bug?
>
> Thanks in advance,
> -gl
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071109/c898158f/attachment.html>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tw.diff
URL: </pipermail/twisted-python/attachments/20071109/c898158f/attachment.ksh>

From itamar at itamarst.org  Fri Nov  9 09:54:10 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 09 Nov 2007 11:54:10 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>
References: <1194620498.19697.13.camel@localhost>
	<149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>
Message-ID: <1194627251.13986.26.camel@localhost.localdomain>

On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
> There is a bug, I have attached a patch. It would be cool if we could
> get this fixed upstream. :) I guess I should file a ticket. 

Yes, please do.




From exarkun at divmod.com  Fri Nov  9 10:04:59 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Nov 2007 12:04:59 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <1194627251.13986.26.camel@localhost.localdomain>
Message-ID: <20071109170459.8162.318957855.divmod.quotient.33861@ohm>

On Fri, 09 Nov 2007 11:54:10 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
>> There is a bug, I have attached a patch. It would be cool if we could
>> get this fixed upstream. :) I guess I should file a ticket.
>
>Yes, please do.
>

Certainly do, and we'll apply a patch (unit tests are required) as soon as
possible.

However, I would strongly recommend against using DirDBM.  It's not very
good at all.

Jean-Paul



From seadog at sealabs.net  Fri Nov  9 10:09:29 2007
From: seadog at sealabs.net (Giorgos Logiotatidis)
Date: Fri, 09 Nov 2007 19:09:29 +0200
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>
References: <1194620498.19697.13.camel@localhost>
	<149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>
Message-ID: <1194628169.19697.20.camel@localhost>


On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
> There is a bug, I have attached a patch. It would be cool if we could
> get this fixed upstream. :) I guess I should file a ticket. 

Ok works now! 
thanks for patching,
gl




From christopher.zorn at gmail.com  Fri Nov  9 10:23:31 2007
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Fri, 9 Nov 2007 12:23:31 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <20071109170459.8162.318957855.divmod.quotient.33861@ohm>
References: <1194627251.13986.26.camel@localhost.localdomain>
	<20071109170459.8162.318957855.divmod.quotient.33861@ohm>
Message-ID: <149014b90711090923m3fd2ab2jefccbf9117c7fd4c@mail.gmail.com>

On Nov 9, 2007 12:04 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> On Fri, 09 Nov 2007 11:54:10 -0500, Itamar Shtull-Trauring <
> itamar at itamarst.org> wrote:
> >On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
> >> There is a bug, I have attached a patch. It would be cool if we could
> >> get this fixed upstream. :) I guess I should file a ticket.
> >
> >Yes, please do.
> >
>
> Certainly do, and we'll apply a patch (unit tests are required) as soon as
> possible.
>
> However, I would strongly recommend against using DirDBM.  It's not very
> good at all.
>

Well, this is a bug for pickling domish elements. It is not  exactly a
dirdbm bug.



>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071109/95190439/attachment.html>

From seadog at sealabs.net  Fri Nov  9 10:27:48 2007
From: seadog at sealabs.net (Giorgos Logiotatidis)
Date: Fri, 09 Nov 2007 19:27:48 +0200
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <20071109170459.8162.318957855.divmod.quotient.33861@ohm>
References: <20071109170459.8162.318957855.divmod.quotient.33861@ohm>
Message-ID: <1194629268.19697.25.camel@localhost>


On Fri, 2007-11-09 at 12:04 -0500, Jean-Paul Calderone wrote:

> However, I would strongly recommend against using DirDBM.  It's not very
> good at all.

Why isn't good? Poor code implemantation? I want to use it on an
embedded system, to store dictionaries on flash memories so I can reduce
memory footprint. Should I implement a different solution?

-gl




From christopher.zorn at gmail.com  Fri Nov  9 10:34:25 2007
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Fri, 9 Nov 2007 12:34:25 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <1194628169.19697.20.camel@localhost>
References: <1194620498.19697.13.camel@localhost>
	<149014b90711090820o2a059510q9f527150f9271763@mail.gmail.com>
	<1194628169.19697.20.camel@localhost>
Message-ID: <149014b90711090934l7e8fa427t921cab7dda654387@mail.gmail.com>

On Nov 9, 2007 12:09 PM, Giorgos Logiotatidis <seadog at sealabs.net> wrote:

>
> On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
> > There is a bug, I have attached a patch. It would be cool if we could
> > get this fixed upstream. :) I guess I should file a ticket.
>
> Ok works now!
> thanks for patching,
>

Cool, ticket filed http://twistedmatrix.com/trac/ticket/2880


> gl
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071109/045c4a5e/attachment.html>

From exarkun at divmod.com  Fri Nov  9 11:34:23 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Nov 2007 13:34:23 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <149014b90711090923m3fd2ab2jefccbf9117c7fd4c@mail.gmail.com>
Message-ID: <20071109183423.8162.209720259.divmod.quotient.33880@ohm>

On Fri, 9 Nov 2007 12:23:31 -0500, Christopher Zorn <christopher.zorn at gmail.com> wrote:
>On Nov 9, 2007 12:04 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>> On Fri, 09 Nov 2007 11:54:10 -0500, Itamar Shtull-Trauring <
>> itamar at itamarst.org> wrote:
>> >On Fri, 2007-11-09 at 11:20 -0500, Christopher Zorn wrote:
>> >> There is a bug, I have attached a patch. It would be cool if we could
>> >> get this fixed upstream. :) I guess I should file a ticket.
>> >
>> >Yes, please do.
>> >
>>
>> Certainly do, and we'll apply a patch (unit tests are required) as soon as
>> possible.
>>
>> However, I would strongly recommend against using DirDBM.  It's not very
>> good at all.
>>
>
>Well, this is a bug for pickling domish elements. It is not  exactly a
>dirdbm bug.
>

Still, I suggest not using DirDBM - or, more generally, anything based on
pickle for long-term persistence of objects.  Pickling is very complex and
there is no guarantee that an object from Twisted (eg, domish.Element) which
is pickled in Twisted X will be unpickleable in Twisted X+1.  If that is not
a problematic constraint, then perhaps using DirDBM is not a catastrophic
decision.

Jean-Paul



From exarkun at divmod.com  Fri Nov  9 11:39:44 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Nov 2007 13:39:44 -0500
Subject: [Twisted-Python] DirDBM possible bug
In-Reply-To: <1194629268.19697.25.camel@localhost>
Message-ID: <20071109183944.8162.641687057.divmod.quotient.33882@ohm>

On Fri, 09 Nov 2007 19:27:48 +0200, Giorgos Logiotatidis <seadog at sealabs.net> wrote:
>
>On Fri, 2007-11-09 at 12:04 -0500, Jean-Paul Calderone wrote:
>
>> However, I would strongly recommend against using DirDBM.  It's not very
>> good at all.
>
>Why isn't good? Poor code implemantation? I want to use it on an
>embedded system, to store dictionaries on flash memories so I can reduce
>memory footprint. Should I implement a different solution?

There seems to be a fairly obvious persistence mechanism for
domish.Elements: XML (as a string, in a normal file).

Why bring DirDBM, with the overhead of pickling, into it?

Aside from this, there's no guarantee that Elements you pickle
now will unpickle if you ever switch to a different version of
Twisted.  I suppose that since you are developing for an
embedded system, this may not be a serious concern.  DirDBM still
seems a bit out of the way, though.

There are also issues with the quality of the code and what features
it offers.  DirDBMs cannot be naively moved around in the filesystem,
they have certain undocumented restrictions (keys() relies on you not
adding any extra entries to the DirDBM directory, for example), and so
on.  As persistence systems go, it doesn't have a lot to recommend it.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Nov 10 22:05:03 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Nov 2007 05:05:03 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1194757503.38.1382350187@twistedmatrix.com

Bug summary
______________________
Summary for 2007-11-04 through 2007-11-11
Bugs opened: 17    Bugs closed: 19  Total open bugs: 1030 (-2)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +0  |Highest:  -7          |Conch:    -1           
|Enhancement:  +0  |Normal:   +5          |Core:     +3           
|Task:         -1  |Low:      +1          |Ftp:      +1           
                                          |Mail:     -3           
                                          |Trial:    -1           
                                          |Web:      +0           
                                          |Website:  -1           
                                          |Words:    +1           


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2866] unclean reactor error from test_newStyleCache on with glib2 reactor (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2866

[#2867] unclean reactor error from testPortforward on glib2 reactor (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2867

[#2868] unclean reactor error from testHostAddress on OS X (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2868

[#2869] unclean reactor error from test_asynchronousException on OS X (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2869

[#2870] unclean reactor error from test_producer on glib2 reactor (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2870

[#2871] modules.getModule should be able to find and load .so/.pyd/.dll files (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2871

[#2855] Add tests for ftp.IFTPShell (opened by therve) (CLOSED, fixed)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/2855

                    ===== Normal =====
[#2865] imap tests (especially Timeout) should use a fake clock (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2865

[#2872] "ImportError: No module named web" under CentOS 5.0-x86_64 (opened by robsteele) (CLOSED, worksforme)
    defect          web        http://twistedmatrix.com/trac/ticket/2872

[#2873] "ImportError: No module named web" under CentOS 5.0-x86_64 (opened by robsteele) (CLOSED, worksforme)
    defect          web        http://twistedmatrix.com/trac/ticket/2873

[#2874] _sslverify.problemsFromTransport should be deprecated (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2874

[#2875] IFTPShell access implementations are not complete (opened by therve)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/2875

[#2876] twisted.test.test_pb.NewCredTestCase.test_clientConnectionLost failing on windows (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2876

[#2878] Intermittent unclean errors from twisted.test.test_ftp.FTPServerPasvDataConnectionTestCase.testTwoDirLIST on OS X (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2878

[#2879] twisted.test.test_pb.BrokerTestCase.test_publishable fails on windows sometimes (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2879

[#2880] t.w.xish.domish.Element recursion error (opened by twonds)
    defect          words      http://twistedmatrix.com/trac/ticket/2880

                    ===== Low =====
[#2877] OpenSSL fails to report a SSL error on client side when a certificate is required (sometimes) (opened by therve)
    defect          core       http://twistedmatrix.com/trac/ticket/2877



Closed Bugs
______________________
                    ===== Highest =====
[#2864] imap tests leave reactor in an unclean state (opened by radix, closed by radix, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2864

[#2866] unclean reactor error from test_newStyleCache on with glib2 reactor (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2866

[#2867] unclean reactor error from testPortforward on glib2 reactor (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2867

[#2826] twisted.internet.tcp.Server.repstr wrong when listening on port 0 (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2826

[#2855] Add tests for ftp.IFTPShell (opened by therve, closed by therve, fixed)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/2855

[#1879] Enable PBClientFactory and PBServerFactory to use custom security options. (opened by pgstudy, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1879

[#1795] Trial feature for simulating missing modules for a test run (opened by exarkun, closed by therve, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1795

[#2729] remove Deferred.setTimeout usage from twisted.mail (opened by exarkun, closed by exarkun, fixed)
    task            mail       http://twistedmatrix.com/trac/ticket/2729

[#2766] test_sslverify uses deprecated function log.flushErrors (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2766

[#2855] Add tests for ftp.IFTPShell (opened by therve, closed by therve, fixed)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/2855

[#2547] API Docs has no info about attributes (opened by redbaron, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2547

[#2832] twisted.mail.test.test_smtp.TimeoutTestCase.testSMTPClient fails intermittently due to timing issues (opened by exarkun, closed by therve, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2832

[#2679] twisted.conch.ssh.keys has poor tests. (opened by z3p, closed by z3p, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2679

[#2425] t.i.tcp should not use os.strerror for Windows socket error codes (opened by ghazel, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2425

[#2483] Undesirable garbage collector/spawnProcess interaction (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2483

                    ===== Normal =====
[#2863] twisted.protocols.amp.AMP can't find its factory (opened by dripton, closed by therve, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/2863

[#2872] "ImportError: No module named web" under CentOS 5.0-x86_64 (opened by robsteele, closed by exarkun, worksforme)
    defect          web        http://twistedmatrix.com/trac/ticket/2872

[#2873] "ImportError: No module named web" under CentOS 5.0-x86_64 (opened by robsteele, closed by exarkun, worksforme)
    defect          web        http://twistedmatrix.com/trac/ticket/2873

[#435 ] Refactor PTYProcess to share code with t.i.process.Process (opened by spiv, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/435



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2880] t.w.xish.domish.Element recursion error (since 2007-11-09 12:29:41).

Mean open ticket age: 564 days, 18:21:02.842628.
Median: 467 days, 13:26:47.196997.
Standard deviation: 407 days, 7:27:10.022976.
Interquartile range: 506 days, 23:37:43.

Mean time between ticket creation and ticket resolution: 124 days, 12:18:04.738003.
Median: 15 days, 13:27:30.
Standard deviation is 228 days, 3:44:50.955021.
The interquartile range is 136 days, 12:06:03.

Mean time spent in review: 69 days, 3:13:24.308141.
Median: 4 days, 4:50:20.
Standard deviation: 155 days, 12:00:09.185671.
Interquartile range: 31 days, 6:56:15.

Mean number of times a ticket is reviewed: 2.03719912473.
Median: 1
Standard deviation: 1.70105361537.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    12 unique ticket reporters
    5 unique ticket reviewers
    5 unique ticket resolvers
In the last 24 weeks,
    64 unique ticket reporters
    15 unique ticket reviewers
    12 unique ticket resolvers
In the last 48 weeks,
    148 unique ticket reporters
    17 unique ticket reviewers
    24 unique ticket resolvers




From broehl at gmail.com  Sun Nov 11 07:03:35 2007
From: broehl at gmail.com (Bernie Roehl)
Date: Sun, 11 Nov 2007 09:03:35 -0500
Subject: [Twisted-Python] Two main loops
Message-ID: <1045831b0711110603m6d453a3q18644a59aa9f5cf7@mail.gmail.com>

I've got a 3D game that I've implemented in Python using an existing
game engine.  The engine "owns" the main loop, i.e. I call
engine.run() and it makes callbacks to my application on every frame
(and other game event).

Now I'm adding networking, and I'd like to use Twisted.  However,
Twisted uses the same approach as the game engine -- I call
reactor.run() and it makes callbacks to my application.

So, how do I integrate the two?

My first though is to call reactor.run() in a separate thread, but of
course that adds additional complexity in terms of synchronization.

I notice the docs mention reactor.iterate(), which appears to be
designed for exactly what I'm doing.  However, it's not clear how to
use it, and the method appears to be deprecated.

Any suggestions are appreciated...

-- 
   Bernie Roehl
   Mail: broehl at gmail.com



From nitro at dr-code.org  Sun Nov 11 07:20:46 2007
From: nitro at dr-code.org (Nitro)
Date: Sun, 11 Nov 2007 15:20:46 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <1045831b0711110603m6d453a3q18644a59aa9f5cf7@mail.gmail.com>
References: <1045831b0711110603m6d453a3q18644a59aa9f5cf7@mail.gmail.com>
Message-ID: <op.t1msswy2z3pzfc@nitrogenycs2>

Am 11.11.2007, 15:03 Uhr, schrieb Bernie Roehl <broehl at gmail.com>:

> I've got a 3D game that I've implemented in Python using an existing
> game engine.  The engine "owns" the main loop, i.e. I call
> engine.run() and it makes callbacks to my application on every frame
> (and other game event).
>
> Now I'm adding networking, and I'd like to use Twisted.  However,
> Twisted uses the same approach as the game engine -- I call
> reactor.run() and it makes callbacks to my application.
>
> So, how do I integrate the two?
>
> My first though is to call reactor.run() in a separate thread, but of
> course that adds additional complexity in terms of synchronization.
>
> I notice the docs mention reactor.iterate(), which appears to be
> designed for exactly what I'm doing.  However, it's not clear how to
> use it, and the method appears to be deprecated.
>
> Any suggestions are appreciated...

I am using twisted with our home-brewn 3d engine and I do it like this:

def DoOneLoopIteration():
     engine.RunSingleIteration()
     reactor.callLater(0, DoOneLoopIteration)

reactor.callLater(0, DoOneLoopIteration)
reactor.run()

There are other possibilities like

import twisted.internet.task
scheduleUpdate = twisted.internet.task.LoopingCall(DoOneLoopIteration)
scheduleUpdate.start(0.01, False)   # 100 Hz

They all have in common that twisted is driving the main loop and the 3d  
part of the app only executes the inner part of it's main loop. I tried  
the opposite way before (3d part of the app driving main loop, twisted  
being run with iterate()) but this wasn't really usable.

-Matthias



From itamar at itamarst.org  Sun Nov 11 08:00:21 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 11 Nov 2007 10:00:21 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <op.t1msswy2z3pzfc@nitrogenycs2>
References: <1045831b0711110603m6d453a3q18644a59aa9f5cf7@mail.gmail.com>
	<op.t1msswy2z3pzfc@nitrogenycs2>
Message-ID: <1194793221.13986.47.camel@localhost.localdomain>


On Sun, 2007-11-11 at 15:20 +0100, Nitro wrote:
> > Now I'm adding networking, and I'd like to use Twisted.  However,
> > Twisted uses the same approach as the game engine -- I call
> > reactor.run() and it makes callbacks to my application.
> >
> > So, how do I integrate the two?

> I am using twisted with our home-brewn 3d engine and I do it like this:
> 
> def DoOneLoopIteration():
>      engine.RunSingleIteration()
>      reactor.callLater(0, DoOneLoopIteration)
> 
> reactor.callLater(0, DoOneLoopIteration)
> reactor.run()

Or, if your game event loop supports registering sockets, you could
build your own reactor; that's e.g. how twisted.internet.glib2reactor
works, using glib's event loop and socket notification mechanism.




From broehl at gmail.com  Sun Nov 11 07:51:33 2007
From: broehl at gmail.com (Bernie Roehl)
Date: Sun, 11 Nov 2007 09:51:33 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <op.t1msswy2z3pzfc@nitrogenycs2>
References: <1045831b0711110603m6d453a3q18644a59aa9f5cf7@mail.gmail.com>
	<op.t1msswy2z3pzfc@nitrogenycs2>
Message-ID: <1045831b0711110651w3b4cdddbl815ee7c395069510@mail.gmail.com>

Did you find that passing zero as the first parameter to callLater
cause it to be called often enough?  I really want to make sure the
rendering is happening as quickly as possible.


So does callLater(0, DoOneLoopIteration) call

On Nov 11, 2007 9:20 AM, Nitro <nitro at dr-code.org> wrote:
> Am 11.11.2007, 15:03 Uhr, schrieb Bernie Roehl <broehl at gmail.com>:
>
>
> > I've got a 3D game that I've implemented in Python using an existing
> > game engine.  The engine "owns" the main loop, i.e. I call
> > engine.run() and it makes callbacks to my application on every frame
> > (and other game event).
> >
> > Now I'm adding networking, and I'd like to use Twisted.  However,
> > Twisted uses the same approach as the game engine -- I call
> > reactor.run() and it makes callbacks to my application.
> >
> > So, how do I integrate the two?
> >
> > My first though is to call reactor.run() in a separate thread, but of
> > course that adds additional complexity in terms of synchronization.
> >
> > I notice the docs mention reactor.iterate(), which appears to be
> > designed for exactly what I'm doing.  However, it's not clear how to
> > use it, and the method appears to be deprecated.
> >
> > Any suggestions are appreciated...
>
> I am using twisted with our home-brewn 3d engine and I do it like this:
>
> def DoOneLoopIteration():
>      engine.RunSingleIteration()
>      reactor.callLater(0, DoOneLoopIteration)
>
> reactor.callLater(0, DoOneLoopIteration)
> reactor.run()
>
> There are other possibilities like
>
> import twisted.internet.task
> scheduleUpdate = twisted.internet.task.LoopingCall(DoOneLoopIteration)
> scheduleUpdate.start(0.01, False)   # 100 Hz
>
> They all have in common that twisted is driving the main loop and the 3d
> part of the app only executes the inner part of it's main loop. I tried
> the opposite way before (3d part of the app driving main loop, twisted
> being run with iterate()) but this wasn't really usable.
>
> -Matthias
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
   Bernie Roehl
   Mail: broehl at gmail.com



From exarkun at divmod.com  Sun Nov 11 08:44:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Nov 2007 10:44:21 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <1045831b0711110651w3b4cdddbl815ee7c395069510@mail.gmail.com>
Message-ID: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>

On Sun, 11 Nov 2007 09:51:33 -0500, Bernie Roehl <broehl at gmail.com> wrote:
>Did you find that passing zero as the first parameter to callLater
>cause it to be called often enough?  I really want to make sure the
>rendering is happening as quickly as possible.
>

    exarkun at boson:~$ cat howfastdoesitspin.py

    from twisted.internet import reactor
    from twisted.internet.task import LoopingCall

    class Spinner(object):
        def __init__(self):
            self.count = 0

        def tick(self):
            self.count += 1

    spinner = Spinner()
    call = LoopingCall(spinner.tick)
    call.start(0)
    reactor.callLater(1, reactor.stop)
    reactor.run()
    print spinner.count
    exarkun at boson:~$ python howfastdoesitspin.py
    5448
    exarkun at boson:~$

Practically speaking, you probably don't need to render more than about
3000 frames per second.  ;)

Jean-Paul



From nitro at dr-code.org  Sun Nov 11 09:16:58 2007
From: nitro at dr-code.org (Nitro)
Date: Sun, 11 Nov 2007 17:16:58 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
Message-ID: <op.t1mx6kloz3pzfc@nitrogenycs2>

Am 11.11.2007, 16:44 Uhr, schrieb Jean-Paul Calderone <exarkun at divmod.com>:

> On Sun, 11 Nov 2007 09:51:33 -0500, Bernie Roehl <broehl at gmail.com>  
> wrote:
>> Did you find that passing zero as the first parameter to callLater
>> cause it to be called often enough?  I really want to make sure the
>> rendering is happening as quickly as possible.
>>
>
>     exarkun at boson:~$ cat howfastdoesitspin.py
>
>     from twisted.internet import reactor
>     from twisted.internet.task import LoopingCall
>
>     class Spinner(object):
>         def __init__(self):
>             self.count = 0
>
>         def tick(self):
>             self.count += 1
>
>     spinner = Spinner()
>     call = LoopingCall(spinner.tick)
>     call.start(0)
>     reactor.callLater(1, reactor.stop)
>     reactor.run()
>     print spinner.count
>     exarkun at boson:~$ python howfastdoesitspin.py
>     5448
>     exarkun at boson:~$
>
> Practically speaking, you probably don't need to render more than about
> 3000 frames per second.  ;)

HarHar, I get about 13000 on my win machine ;-)

-Matthias



From broehl at gmail.com  Sun Nov 11 09:31:07 2007
From: broehl at gmail.com (Bernie Roehl)
Date: Sun, 11 Nov 2007 11:31:07 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
References: <1045831b0711110651w3b4cdddbl815ee7c395069510@mail.gmail.com>
	<20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
Message-ID: <1045831b0711110831p54f37916x60a0237214388c7a@mail.gmail.com>

Great -- that should work.

Thanks everyone for your help!



On Nov 11, 2007 10:44 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sun, 11 Nov 2007 09:51:33 -0500, Bernie Roehl <broehl at gmail.com> wrote:
> >Did you find that passing zero as the first parameter to callLater
> >cause it to be called often enough?  I really want to make sure the
> >rendering is happening as quickly as possible.
> >
>
>     exarkun at boson:~$ cat howfastdoesitspin.py
>
>     from twisted.internet import reactor
>     from twisted.internet.task import LoopingCall
>
>     class Spinner(object):
>         def __init__(self):
>             self.count = 0
>
>         def tick(self):
>             self.count += 1
>
>     spinner = Spinner()
>     call = LoopingCall(spinner.tick)
>     call.start(0)
>     reactor.callLater(1, reactor.stop)
>     reactor.run()
>     print spinner.count
>     exarkun at boson:~$ python howfastdoesitspin.py
>     5448
>     exarkun at boson:~$
>
> Practically speaking, you probably don't need to render more than about
> 3000 frames per second.  ;)
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
   Bernie Roehl
   Mail: broehl at gmail.com



From jasper at peak.org  Sun Nov 11 14:06:26 2007
From: jasper at peak.org (Jasper)
Date: Sun, 11 Nov 2007 13:06:26 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
Message-ID: <47376ED2.8010408@peak.org>

Jean-Paul Calderone wrote:
> On Sun, 11 Nov 2007 09:51:33 -0500, Bernie Roehl <broehl at gmail.com> 
> wrote:
>> Did you find that passing zero as the first parameter to callLater
>> cause it to be called often enough?  I really want to make sure the
>> rendering is happening as quickly as possible.
>>
>
>    exarkun at boson:~$ cat howfastdoesitspin.py
>
>    from twisted.internet import reactor
>    from twisted.internet.task import LoopingCall
>
>    class Spinner(object):
>        def __init__(self):
>            self.count = 0
>
>        def tick(self):
>            self.count += 1
>
>    spinner = Spinner()
>    call = LoopingCall(spinner.tick)
>    call.start(0)
>    reactor.callLater(1, reactor.stop)
>    reactor.run()
>    print spinner.count
>    exarkun at boson:~$ python howfastdoesitspin.py
>    5448
>    exarkun at boson:~$
>
> Practically speaking, you probably don't need to render more than about
> 3000 frames per second.  ;)
>
> Jean-Paul

That depends.  When I send moderately sized objects over Twisted, this 
approach causes my frame rate to stop while Twisted is busy, and worse 
makes my GUI non-interactive.  For a game, this is generally unacceptable...

I'm not sure of a good/nice way to deal with this.  Slicing 
transmissions into a sequence of smaller chunks seems like a fair pain 
in the ass, but then again the alternatives are punting to another 
thread/process. :-/

-Jasper




From Marcin.Kasperski at softax.com.pl  Sun Nov 11 13:30:23 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Sun, 11 Nov 2007 21:30:23 +0100
Subject: [Twisted-Python] StdioOnnaStick instance has no attribute 'isatty'
Message-ID: <87prygtti8.fsf@platon.mekk.waw.pl>


I just tried to run some trial tests on ubuntu gutsy (twisted 2.5.0),
just to get the error as in the title (full traceback below).
Does anybody know what is wrong here?

Traceback (most recent call last):
   File "/usr/bin/trial", line 24, in <module>
     run()
   File "/usr/lib/python2.5/site-packages/twisted/scripts/trial.py", line 345, in run
     test_result = trialRunner.run(suite)
   File "/usr/lib/python2.5/site-packages/twisted/trial/runner.py", line 772, in run
     result = self._makeResult()
   File "/usr/lib/python2.5/site-packages/twisted/trial/runner.py", line 712, in _makeResult
     return self.reporterFactory(self.stream, self.tbformat, self.rterrors)
   File "/usr/lib/python2.5/site-packages/twisted/trial/reporter.py", line 555, in __init__
     if colorizer.supported():
   File "/usr/lib/python2.5/site-packages/twisted/trial/reporter.py", line 446, in supported
     if not sys.stderr.isatty():
 AttributeError: StdioOnnaStick instance has no attribute 'isatty'


-- 
----------------------------------------------------------------------
| Marcin Kasperski   |  For waterfall, milestones are commitments.
| http://mekk.waw.pl | For iterative development, they are decision
|                    |               points. (Martin)
----------------------------------------------------------------------




From glyph at divmod.com  Sun Nov 11 15:27:58 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 11 Nov 2007 22:27:58 -0000
Subject: [Twisted-Python] Two main loops
In-Reply-To: <47376ED2.8010408@peak.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
Message-ID: <20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>


On 09:06 pm, jasper at peak.org wrote:
>That depends.  When I send moderately sized objects over Twisted, this 
>approach causes my frame rate to stop while Twisted is busy, and worse 
>makes my GUI non-interactive.  For a game, this is generally 
>unacceptable...

You can't send "objects" over "Twisted".

Are you talking about a particular protocol in Twisted?  Serializing 
large objects through PB might take a long time.  In that case, it's not 
"Twisted" that is busy, but your program which is busy serializing that 
object.
>I'm not sure of a good/nice way to deal with this.  Slicing 
>transmissions into a sequence of smaller chunks seems like a fair pain 
>in the ass, but then again the alternatives are punting to another 
>thread/process. :-/

Actually, punting to another thread or process is still going to slow 
down your rendering, but in a much less deterministic way.  The OS 
scheduler is going to be interrupting the rendering rather than the 
long-running serialization function.  Breaking down the serialization 
work into smaller chunks will allow you to better control what's going 
on.

Sending the work of serializing a large object to another process won't 
work anyway: how are you going to get that large object to the other 
process to serialize in the first place, without serializing it? 
Sending it to another thread probably won't work either, since if the 
object is large it is likely shared (and therefore will involve locking 
large portions of the data structure for long periods of time) and 
Python's GIL will introduce deleterious effects for your framerate 
anyway.

Fundamentally what you are doing here is optimizing your program.  Your 
serialization is slow and it needs to be faster so that it does not 
impact your framerate.  This is a difficult problem, one which is made 
worse by the fact that Python does not have a particularly fast runtime. 
There's no quick answer: you don't need to restructure your main loop, 
you need to think about what your program is spending its time doing.



From maarten at treewalker.org  Sun Nov 11 15:40:30 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 11 Nov 2007 23:40:30 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <47376ED2.8010408@peak.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
Message-ID: <200711112340.34891.maarten@treewalker.org>

On Sunday 11 November 2007, Jasper wrote:
> Jean-Paul Calderone wrote:
> > Practically speaking, you probably don't need to render more than about
> > 3000 frames per second.  ;)
> >
> > Jean-Paul
>
> That depends.  When I send moderately sized objects over Twisted, this
> approach causes my frame rate to stop while Twisted is busy, and worse
> makes my GUI non-interactive.  For a game, this is generally
> unacceptable...

Why would that happen?

Twisted never blocks; if it has to wait for something (such as a 
transmission buffer becoming ready to accept more data), it will register a 
callback and the reactor will continue (and call your rendering code).

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20071111/28570ead/attachment.sig>

From michaelschneider at current.net  Sun Nov 11 15:57:50 2007
From: michaelschneider at current.net (Michael Schneider)
Date: Sun, 11 Nov 2007 17:57:50 -0500
Subject: [Twisted-Python] Re: glyph changed u'Add a variable in
 twisted.python.runtime to check for	vista'
In-Reply-To: <E1IrL0q-0003NV-Ch@cube.twistedmatrix.com>
References: <E1IrL0q-0003NV-Ch@cube.twistedmatrix.com>
Message-ID: <473788EE.1060509@current.net>

Glyph,

I would have no problem with that.  I created the ticket to log the 
issues.  I verified that twisted's runtime code correctly determines that
the current platform is windows.

That is all that I need to work correctly, and it does.

Therve may know of a use case where this would be a problem.  I have none.

Thanks
Mike
trac at twistedmatrix.com wrote:
> Ticket u'Add a variable in twisted.python.runtime to check for vista' changed by glyph <glyph at divmod.com>:
>
> I am sorely tempted to close this as invalid.  Why does anyone ever need to know the difference between XP and Vista using Twisted?  This seems to me like modifying twisted.python.runtime to have different values to check for Ubuntu 6.06 vs. 7.10.  The only consequence I can see is adding a new way for code to ask "is this a windows machine" that will succeed on XP but fail on Vista (or vice versa).  Shouldn't we leave platform detection of this granularity up to the code which will actually care?  i.e. if you are asking if it's Vista because Vista has a new or changed win32 function, shouldn't you be asking the win32 wrapper?
>
>
> If Twisted needs to make this determination for its own purposes, then this makes sense to me.  Is Twisted going to be making different API calls on Vista and XP?  If not, I'd like to consider them the same platform.
>
> ---------
>
> ---------
> http://twistedmatrix.com/trac/ticket/2881
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>   




From nitro at dr-code.org  Sun Nov 11 17:05:30 2007
From: nitro at dr-code.org (Nitro)
Date: Mon, 12 Nov 2007 01:05:30 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <47376ED2.8010408@peak.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
Message-ID: <op.t1njvgqfz3pzfc@nitrogenycs2>

In a game you usually never send/receive huge objects. For various reasons  
you always try to reduce your bandwidth as much as possible. A low  
bandwidth implies a rather low number of objects and data.
That being said I am using pb for transferring state changes which should  
be guarenteed to arrive (for example a command to load a new game world)  
and using a custom pb-like method based on udp and which uses  
messaging/packaging for things which do not have to be transmitted on a  
guarenteed basis. An example for the latter is updates of the position of  
world objects for instance. If a udp packet is lost, I don't really care  
because a new one will be send very soon anyways.
I am able to render (client) / simulate (server) with more than 200 fps  
this way. So while python might be slow compared to C++ this proves that  
it's actually possible to write python code which performs fast enough. It  
also proves that it's more important to optimize your algorithms and not  
your code. In the case of a game this means to think about ways to reduce  
the data that needs to be transmitted instead of making the  
serialization/network code faster.

-Matthias


Am 11.11.2007, 22:06 Uhr, schrieb Jasper <jasper at peak.org>:

> That depends.  When I send moderately sized objects over Twisted, this  
> approach causes my frame rate to stop while Twisted is busy, and worse  
> makes my GUI non-interactive.  For a game, this is generally  
> unacceptable...
>
> I'm not sure of a good/nice way to deal with this.  Slicing  
> transmissions into a sequence of smaller chunks seems like a fair pain  
> in the ass, but then again the alternatives are punting to another  
> thread/process. :-/
>
> -Jasper



From jasper at peak.org  Mon Nov 12 09:58:55 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 08:58:55 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <200711112340.34891.maarten@treewalker.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>	<47376ED2.8010408@peak.org>
	<200711112340.34891.maarten@treewalker.org>
Message-ID: <4738864F.2020501@peak.org>

Maarten ter Huurne wrote:
> On Sunday 11 November 2007, Jasper wrote:
>   
>> Jean-Paul Calderone wrote:
>>     
>>> Practically speaking, you probably don't need to render more than about
>>> 3000 frames per second.  ;)
>>>
>>> Jean-Paul
>>>       
>> That depends.  When I send moderately sized objects over Twisted, this
>> approach causes my frame rate to stop while Twisted is busy, and worse
>> makes my GUI non-interactive.  For a game, this is generally
>> unacceptable...
>>     
>
> Why would that happen?
>
> Twisted never blocks; if it has to wait for something (such as a 
> transmission buffer becoming ready to accept more data), it will register a 
> callback and the reactor will continue (and call your rendering code).
>
> Bye,
> 		Maarten
>   

Maybe I'm misunderstanding what's going on underneath, but Twisted sure 
seems to block while I send one large chunk of data.

-Jasper



From exarkun at divmod.com  Mon Nov 12 10:13:44 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Nov 2007 12:13:44 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <4738864F.2020501@peak.org>
Message-ID: <20071112171344.8162.303221679.divmod.quotient.34933@ohm>

On Mon, 12 Nov 2007 08:58:55 -0800, Jasper <jasper at peak.org> wrote:
>Maarten ter Huurne wrote:
>>On Sunday 11 November 2007, Jasper wrote:
>>
>>>Jean-Paul Calderone wrote:
>>>
>>>>Practically speaking, you probably don't need to render more than about
>>>>3000 frames per second.  ;)
>>>>
>>>>Jean-Paul
>>>>
>>>That depends.  When I send moderately sized objects over Twisted, this
>>>approach causes my frame rate to stop while Twisted is busy, and worse
>>>makes my GUI non-interactive.  For a game, this is generally
>>>unacceptable...
>>>
>>
>>Why would that happen?
>>
>>Twisted never blocks; if it has to wait for something (such as a 
>>transmission buffer becoming ready to accept more data), it will register a 
>>callback and the reactor will continue (and call your rendering code).
>>
>>Bye,
>>                 Maarten
>>
>
>Maybe I'm misunderstanding what's going on underneath, but Twisted sure 
>seems to block while I send one large chunk of data.

There are a lot of different pieces in any non-trivial program.  There are
also at least a couple different meanings for the word "block".

The network code at the very bottom of Twisted won't ever wait for a
network event to happen before continuing execution.  That's what Maarten
ter Huurne was pointing out.

Some parts of Twisted (for example, the serializers for PB) might spend a
long time using the CPU in order to provide the functionality they are
supposed to provide.

The main difference between these two cases is that in the former, you are
subject to arbitrary delays by other parties whereas in the latter case,
the delays are in response to actions your application has explicitly taken.

The latter case can be solved by asking functions to do less work at a time,
as has been suggested a couple times in this thread.  Since the former case
never happens in Twisted, there's no need to fix it. :)

Jean-Paul



From jasper at peak.org  Mon Nov 12 11:23:06 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 10:23:06 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>	<47376ED2.8010408@peak.org>
	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
Message-ID: <47389A0A.6080504@peak.org>

First off, thanks for the reply!  My responses/questions are inline below.

-Jasper

glyph at divmod.com wrote:
>
> On 09:06 pm, jasper at peak.org wrote:
>> That depends.  When I send moderately sized objects over Twisted, 
>> this approach causes my frame rate to stop while Twisted is busy, and 
>> worse makes my GUI non-interactive.  For a game, this is generally 
>> unacceptable...
> You can't send "objects" over "Twisted".

Sure, not per se.  However, you can essentially send copies of objects 
through PB, provided both sides of the wire have the same class definition.


> Are you talking about a particular protocol in Twisted?  Serializing 
> large objects through PB might take a long time.  In that case, it's 
> not "Twisted" that is busy, but your program which is busy serializing 
> that object.

It comes in the twisted installation package, in the module 
"twisted.spread.pb" ;-)

Anyway, the delay comes in a call to (a) perspective.callRemote().  I 
understand that this isn't a reactor scheduled action, but nonetheless I 
don't have any direct control over how things are jellied without 
hacking Twisted.


>> I'm not sure of a good/nice way to deal with this.  Slicing 
>> transmissions into a sequence of smaller chunks seems like a fair 
>> pain in the ass, but then again the alternatives are punting to 
>> another thread/process. :-/
>
> Actually, punting to another thread or process is still going to slow 
> down your rendering, but in a much less deterministic way.  The OS 
> scheduler is going to be interrupting the rendering rather than the 
> long-running serialization function.  Breaking down the serialization 
> work into smaller chunks will allow you to better control what's going 
> on.
>
> Sending the work of serializing a large object to another process 
> won't work anyway: how are you going to get that large object to the 
> other process to serialize in the first place, without serializing it? 
> Sending it to another thread probably won't work either, since if the 
> object is large it is likely shared (and therefore will involve 
> locking large portions of the data structure for long periods of time) 
> and Python's GIL will introduce deleterious effects for your framerate 
> anyway.

In hindsight I see a separate process won't work (duh!)  However, I was 
thinking a thread might work, since the data I'm sending (players get a 
filtered view of the game's true state) isn't used by anything else, and 
the data isn't /that/ large. ;-)  Am I missing something low level 
here?  Would this end up locking bits other than those being serialized?

I suppose it's a bit moot, as I'm reluctant to fiddle with threading.


> Fundamentally what you are doing here is optimizing your program.  
> Your serialization is slow and it needs to be faster so that it does 
> not impact your framerate.  This is a difficult problem, one which is 
> made worse by the fact that Python does not have a particularly fast 
> runtime. There's no quick answer: you don't need to restructure your 
> main loop, you need to think about what your program is spending its 
> time doing.
 
Optimizing my program (e.g. by sending a bunch of smaller data chunks) 
feels like the wrong way to go...  Wouldn't it make more sense to hack 
PB's callRemote() to do this in a more general manner?  I'm thinking 
somewhere around jelly._Jellier.jelly()'s recursive calls to itself;  
perhaps using generators, although I'm fuzzy on the implications of 
recursion + generators...

Either way it's definitely optimization, so not exactly a pressing issue 
for me to resolve until the end.


-Jasper




From jasper at peak.org  Mon Nov 12 11:47:50 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 10:47:50 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112171344.8162.303221679.divmod.quotient.34933@ohm>
References: <20071112171344.8162.303221679.divmod.quotient.34933@ohm>
Message-ID: <47389FD6.2080000@peak.org>

Jean-Paul Calderone wrote:
> On Mon, 12 Nov 2007 08:58:55 -0800, Jasper <jasper at peak.org> wrote:
>> Maarten ter Huurne wrote:
>>> Why would that happen?
>>>
>>> Twisted never blocks; if it has to wait for something (such as a 
>>> transmission buffer becoming ready to accept more data), it will 
>>> register a callback and the reactor will continue (and call your 
>>> rendering code).
>>>
>>> Bye,
>>>                 Maarten
>>>
>>
>> Maybe I'm misunderstanding what's going on underneath, but Twisted 
>> sure seems to block while I send one large chunk of data.
>
> There are a lot of different pieces in any non-trivial program.  There 
> are
> also at least a couple different meanings for the word "block".
[further elaboration snipped]


I think the confusion here is stemming from us attaching different 
meanings to "Twisted".  I've been meaning the entire package, i.e. the 
modules I got when I installed Twisted.  You (Glyph, Maarten, etc.) seem 
to mean only the lower level inner bits, like reactor.  I'd actually 
understood this when I sent the above, and I apologize for the snarky 
reply. ;-)

To get to the point, I actually do feel that the fault lies with 
Twisted, or more specifically PB.  Code using PB wants to be as unaware 
of the details of network transmission as possible.  It certainly 
doesn't want to slice things into a bazillion chunks for individual 
transmission, and then puzzle them back together on the other end.

IMHO it makes more sense for PB to understand it shouldn't block, and to 
chunk and schedule its serialization (and unserialization) in the same 
manner as the TCP packets sent underneath.  I'm guessing this would make 
for cleaner separation, and more general usefulness.

Also, let me clarify that I'm not suggesting that someone else do this, 
nor bitching and moaning about what I'm getting out of a free project; 
it's something I intend to do myself as I have time.

-Jasper




From nitro at dr-code.org  Mon Nov 12 12:08:29 2007
From: nitro at dr-code.org (Nitro)
Date: Mon, 12 Nov 2007 20:08:29 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <47389FD6.2080000@peak.org>
References: <20071112171344.8162.303221679.divmod.quotient.34933@ohm>
	<47389FD6.2080000@peak.org>
Message-ID: <op.t1o0sfo0z3pzfc@nitrogenycs2>

Am 12.11.2007, 19:47 Uhr, schrieb Jasper <jasper at peak.org>:

> To get to the point, I actually do feel that the fault lies with  
> Twisted, or more specifically PB.  Code using PB wants to be as unaware  
> of the details of network transmission as possible.  It certainly  
> doesn't want to slice things into a bazillion chunks for individual  
> transmission, and then puzzle them back together on the other end.
>
> IMHO it makes more sense for PB to understand it shouldn't block, and to  
> chunk and schedule its serialization (and unserialization) in the same  
> manner as the TCP packets sent underneath.  I'm guessing this would make  
> for cleaner separation, and more general usefulness.

I think this is a) not possible and b) not desirable. It's not possible  
because pb sends a single large chunk of data over tcp. The OS is  
responsible to break everything down into individual tcp packets and  
puzzle them together at the other end. The whole packet thing is not  
visible to pb. So if you want pb to split your data, then do splitted  
callRemotes.
It's not desirable because you don't want your program to be stalled at  
uncontrollable times when the OS decides to send 20 tcp packets at once.  
You want to spread the load as evenly as possible and you'll have to do  
this manually.
Which kind of game are you working on and how many connections/bandwidth  
does it have? I haven't encountered the problems you mention in my project.

-Matthias



From exarkun at divmod.com  Mon Nov 12 13:15:47 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Nov 2007 15:15:47 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <op.t1o0sfo0z3pzfc@nitrogenycs2>
Message-ID: <20071112201547.8162.237583392.divmod.quotient.34987@ohm>

On Mon, 12 Nov 2007 20:08:29 +0100, Nitro <nitro at dr-code.org> wrote:
>Am 12.11.2007, 19:47 Uhr, schrieb Jasper <jasper at peak.org>:
>>To get to the point, I actually do feel that the fault lies with  Twisted, 
>>or more specifically PB.  Code using PB wants to be as unaware  of the 
>>details of network transmission as possible.  It certainly  doesn't want to 
>>slice things into a bazillion chunks for individual  transmission, and then 
>>puzzle them back together on the other end.
>>
>>IMHO it makes more sense for PB to understand it shouldn't block, and to 
>>chunk and schedule its serialization (and unserialization) in the same 
>>manner as the TCP packets sent underneath.  I'm guessing this would make 
>>for cleaner separation, and more general usefulness.
>
>I think this is a) not possible and b) not desirable.

I think it's possible.  It may even be desirable, although whether it is
worth the cost of implementing or not is a question worth considering.

>It's not possible 
>because pb sends a single large chunk of data over tcp.

It doesn't have to be implemented this way.  However, this isn't
particularly relevant.  ITCPTransport.write takes approximately the same
amount of time to execute and return whether you pass it a string which is
one byte long or one million bytes long.

>The OS is 
>responsible to break everything down into individual tcp packets and  puzzle 
>them together at the other end. The whole packet thing is not  visible to 
>pb.

True, but the actual performance bottleneck here is in PB's conversion of
Python objects to strings, which is done by code entirely within Twisted.

>So if you want pb to split your data, then do splitted  callRemotes.
>It's not desirable because you don't want your program to be stalled at 
>uncontrollable times when the OS decides to send 20 tcp packets at once. 

Your program won't ever stall because of this.

>You want to spread the load as evenly as possible and you'll have to do 
>this manually.

PB's serializer could try very hard to avoid running for a long period of
time without giving control back to the reactor.  Of course, someone would
have to implement this.  Whether or not that is worthwhile to implement,
instead of doing what Glyph suggested (manually breaking up the work into
smaller pieces) is a separate question.

Jean-Paul



From nitro at dr-code.org  Mon Nov 12 13:35:05 2007
From: nitro at dr-code.org (Nitro)
Date: Mon, 12 Nov 2007 21:35:05 +0100
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112201547.8162.237583392.divmod.quotient.34987@ohm>
References: <20071112201547.8162.237583392.divmod.quotient.34987@ohm>
Message-ID: <op.t1o4srsfz3pzfc@nitrogenycs2>

Am 12.11.2007, 21:15 Uhr, schrieb Jean-Paul Calderone <exarkun at divmod.com>:

>> The OS is responsible to break everything down into individual tcp  
>> packets and  puzzle them together at the other end. The whole packet  
>> thing is not  visible to pb.
>
> True, but the actual performance bottleneck here is in PB's conversion of
> Python objects to strings, which is done by code entirely within Twisted.

Yes.

>> So if you want pb to split your data, then do splitted  callRemotes.
>> It's not desirable because you don't want your program to be stalled at  
>> uncontrollable times when the OS decides to send 20 tcp packets at once.
>
> Your program won't ever stall because of this.

If you do it as Jesper suggested and serialize when packets are about to  
be send then it will stall when you try to send (=serialize) lots of  
packets at once.

>> You want to spread the load as evenly as possible and you'll have to do  
>> this manually.
>
> PB's serializer could try very hard to avoid running for a long period of
> time without giving control back to the reactor.  Of course, someone  
> would
> have to implement this.  Whether or not that is worthwhile to implement,
> instead of doing what Glyph suggested (manually breaking up the work into
> smaller pieces) is a separate question.

Of course you can do it. But does it make sense? If you ask pb to do lots  
of work then you can't be surprised it takes long. If I ask pb to  
serialize things I want it to do it *now*. If pb starts distributing work  
over time itself then I will end up with lags which are bad in my  
situation.
I'd like to hear about the actual situation where twisted is stalling  
because of serialization. As said before I am using pb and a pb-like thing  
which also uses banana for serialization (= even more overhead to generate  
messages and spread them over multiple udp packets). I am serializing lots  
of data and it works like a charm. After all if you have so much data to  
serialize then you are very likely to do something with the data on the  
sending and receiving end. And this processing is much more likely to be a  
performance bottleneck than twisted serialization.
I guess we can discuss a lot about how pb *could* work. We should keep in  
mind real world situations though which tend to shift priorities a lot.

-Matthias



From glyph at divmod.com  Mon Nov 12 14:17:47 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Nov 2007 21:17:47 -0000
Subject: [Twisted-Python] Two main loops
In-Reply-To: <47389A0A.6080504@peak.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
	<47389A0A.6080504@peak.org>
Message-ID: <20071112211747.21558.1724666994.divmod.xquotient.225@joule.divmod.com>

On 06:23 pm, jasper at peak.org wrote:
>glyph at divmod.com wrote:
>>
>>On 09:06 pm, jasper at peak.org wrote:

>>You can't send "objects" over "Twisted".
>
>Sure, not per se.

>It comes in the twisted installation package, in the module 
>"twisted.spread.pb" ;-)

There are a number of other ways to communicate with other programs 
using Twisted, some of which involve "sending objects" through other 
protocols.  Obviously PB is a part of Twisted :).
>In hindsight I see a separate process won't work (duh!)  However, I was 
>thinking a thread might work, since the data I'm sending (players get a 
>filtered view of the game's true state) isn't used by anything else, 
>and the data isn't /that/ large. ;-)  Am I missing something low level 
>here?  Would this end up locking bits other than those being 
>serialized?
>
>I suppose it's a bit moot, as I'm reluctant to fiddle with threading.

If you've got a large object, let's say the state of the game world, and 
you need to lock it for use within a thread, it is likely that other 
things in your program will want to access it before long.  You can only 
have so many "large" objects in a program, after all, and they tend to 
be shared.  The one you referred to, "the game's true state", is 
obviously going to be accessed by a lot of code unless you have a very 
strange game indeed.
>Optimizing my program (e.g. by sending a bunch of smaller data chunks) 
>feels like the wrong way to go...  Wouldn't it make more sense to hack 
>PB's callRemote() to do this in a more general manner?  I'm thinking 
>somewhere around jelly._Jellier.jelly()'s recursive calls to itself; 
>perhaps using generators, although I'm fuzzy on the implications of 
>recursion + generators...

callRemote *can't* do this in a general manner and remain compatible 
with PB's existing semantics.  It would be extraordinarily difficult to 
come up with semantics that would make sense for this.  Consider:

  bob = Mob(hitPoints=3)
  jethro = Player()
  jethro.callRemote("enterSensoryRange", bob)
  bob.hitPoints += 1

How many hit points does Jethro think Bob has?  Probably 3, but if PB 
might be breaking up serialization work into separate reactor turns for 
you behind your back, then maybe 4.  Given that there's no way to know, 
you don't know whether you have to send Jethro an update to bob's hit 
points or not.

If you can figure out how to answer this question in a way that makes 
sense (i.e. never uses the word "maybe") then you might be able to 
implement something very cool and useful.  I certainly can't think of a 
way to do it, though.  Good luck!



From exarkun at divmod.com  Mon Nov 12 15:59:37 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Nov 2007 17:59:37 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112211747.21558.1724666994.divmod.xquotient.225@joule.divmod.com>
Message-ID: <20071112225937.8162.550205058.divmod.quotient.35043@ohm>

On Mon, 12 Nov 2007 21:17:47 -0000, glyph at divmod.com wrote:
>On 06:23 pm, jasper at peak.org wrote:
>>glyph at divmod.com wrote:
>
> [snip]
>
>callRemote *can't* do this in a general manner and remain compatible with 
>PB's existing semantics.  It would be extraordinarily difficult to come up 
>with semantics that would make sense for this.  Consider:
>
>  bob = Mob(hitPoints=3)
>  jethro = Player()
>  jethro.callRemote("enterSensoryRange", bob)
>  bob.hitPoints += 1
>
>How many hit points does Jethro think Bob has?  Probably 3, but if PB might 
>be breaking up serialization work into separate reactor turns for you behind 
>your back, then maybe 4.  Given that there's no way to know, you don't know 
>whether you have to send Jethro an update to bob's hit points or not.
>
>If you can figure out how to answer this question in a way that makes sense 
>(i.e. never uses the word "maybe") then you might be able to implement 
>something very cool and useful.  I certainly can't think of a way to do it, 
>though.  Good luck!
>

It's always possible to provide new behavior - all you have to do is
provide a new API.  For example, RemoteReference.callRemoteAsyncly().

Jean-Paul



From jasper at peak.org  Mon Nov 12 16:18:15 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 15:18:15 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112211747.21558.1724666994.divmod.xquotient.225@joule.divmod.com>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>	<47376ED2.8010408@peak.org>	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>	<47389A0A.6080504@peak.org>
	<20071112211747.21558.1724666994.divmod.xquotient.225@joule.divmod.com>
Message-ID: <4738DF37.4090309@peak.org>

glyph at divmod.com wrote:
> On 06:23 pm, jasper at peak.org wrote:
>> glyph at divmod.com wrote
>> In hindsight I see a separate process won't work (duh!)  However, I 
>> was thinking a thread might work, since the data I'm sending (players 
>> get a filtered view of the game's true state) isn't used by anything 
>> else, and the data isn't /that/ large. ;-)  Am I missing something 
>> low level here?  Would this end up locking bits other than those 
>> being serialized?
>>
>> I suppose it's a bit moot, as I'm reluctant to fiddle with threading.
>
> If you've got a large object, let's say the state of the game world, 
> and you need to lock it for use within a thread, it is likely that 
> other things in your program will want to access it before long.  You 
> can only have so many "large" objects in a program, after all, and 
> they tend to be shared.  The one you referred to, "the game's true 
> state", is obviously going to be accessed by a lot of code unless you 
> have a very strange game indeed.
I don't send the players the "True State", I first calculate a trimmed 
and altered copy of it, according to what they can perceive.  I then 
send this, which in practice isn't used by anything else on the server.


>> Optimizing my program (e.g. by sending a bunch of smaller data 
>> chunks) feels like the wrong way to go...  Wouldn't it make more 
>> sense to hack PB's callRemote() to do this in a more general manner?  
>> I'm thinking somewhere around jelly._Jellier.jelly()'s recursive 
>> calls to itself; perhaps using generators, although I'm fuzzy on the 
>> implications of recursion + generators...
>
> callRemote *can't* do this in a general manner and remain compatible 
> with PB's existing semantics.  It would be extraordinarily difficult 
> to come up with semantics that would make sense for this.  Consider:
>
>  bob = Mob(hitPoints=3)
>  jethro = Player()
>  jethro.callRemote("enterSensoryRange", bob)
>  bob.hitPoints += 1
>
> How many hit points does Jethro think Bob has?  Probably 3, but if PB 
> might be breaking up serialization work into separate reactor turns 
> for you behind your back, then maybe 4.  Given that there's no way to 
> know, you don't know whether you have to send Jethro an update to 
> bob's hit points or not.
>
> If you can figure out how to answer this question in a way that makes 
> sense (i.e. never uses the word "maybe") then you might be able to 
> implement something very cool and useful.  I certainly can't think of 
> a way to do it, though.  Good luck!

For my game, that's actually pretty straight forward, as I don't allow 
such complex situations.  I allow 3 things though PB:
1) Ask for status
2) Request current state
3) send actions for the current turn

Clients never actually /do/ anything (eg "enterSensoryRange), but 
instead schedule actions for the game server to carry out on their 
behalf at a later time (simultaneously with other players' actions).

The only time a client get a large chunk of data is when it's asked for 
it, and clients know enough to wait for a response.  It's possible for 
the client to send actions based on an old turn right before a new turn 
is processed, but these are simply tossed out with a warning that 
they're out of date, and the client should update it's state.

Reworking the above example, Jethro would always see that Bob has 3 
hitpoints on turn X, and 4 hitpoints on turn X+1.  Jethro's 
"enterSensoryRange" attempt would be made for a specific turn, say X.  
If it arrives before turn X+1 is calculated, he gets his result on turn 
X+1.  If it arrives late, well then Jethro was too slow.

For a more general case perhaps it's more complicated...

-Jasper




From jasper at peak.org  Mon Nov 12 16:21:27 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 15:21:27 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112225937.8162.550205058.divmod.quotient.35043@ohm>
References: <20071112225937.8162.550205058.divmod.quotient.35043@ohm>
Message-ID: <4738DFF7.7070601@peak.org>

Jean-Paul Calderone wrote:
> On Mon, 12 Nov 2007 21:17:47 -0000, glyph at divmod.com wrote:
>> If you can figure out how to answer this question in a way that makes 
>> sense (i.e. never uses the word "maybe") then you might be able to 
>> implement something very cool and useful.  I certainly can't think of 
>> a way to do it, though.  Good luck!
>>
>
> It's always possible to provide new behavior - all you have to do is
> provide a new API.  For example, RemoteReference.callRemoteAsyncly().

That's basically what I had in mind.  I wouldn't want to change the 
behavior of callRemote() at all, as that could hit existing programs by 
surprise.

Well, assuming I manage to get you guys to include whatever hack I come 
up with, and it doesn't just live on my SVN'd version. ;-)

-Jasper



From jasper at peak.org  Mon Nov 12 16:29:51 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 15:29:51 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <op.t1o0sfo0z3pzfc@nitrogenycs2>
References: <20071112171344.8162.303221679.divmod.quotient.34933@ohm>	<47389FD6.2080000@peak.org>
	<op.t1o0sfo0z3pzfc@nitrogenycs2>
Message-ID: <4738E1EF.1050404@peak.org>

Nitro wrote:
> Am 12.11.2007, 19:47 Uhr, schrieb Jasper <jasper at peak.org>:
>
>> To get to the point, I actually do feel that the fault lies with 
>> Twisted, or more specifically PB.  Code using PB wants to be as 
>> unaware of the details of network transmission as possible.  It 
>> certainly doesn't want to slice things into a bazillion chunks for 
>> individual transmission, and then puzzle them back together on the 
>> other end.
>>
>> IMHO it makes more sense for PB to understand it shouldn't block, and 
>> to chunk and schedule its serialization (and unserialization) in the 
>> same manner as the TCP packets sent underneath.  I'm guessing this 
>> would make for cleaner separation, and more general usefulness.
>
> I think this is a) not possible and b) not desirable. It's not 
> possible because pb sends a single large chunk of data over tcp. The 
> OS is responsible to break everything down into individual tcp packets 
> and puzzle them together at the other end. The whole packet thing is 
> not visible to pb. So if you want pb to split your data, then do 
> splitted callRemotes.
I'm not thinking of splitting up packets.  I'm merely thinking of 
splitting up serialization, and not splitting the data.

> It's not desirable because you don't want your program to be stalled 
> at uncontrollable times when the OS decides to send 20 tcp packets at 
> once. You want to spread the load as evenly as possible and you'll 
> have to do this manually.
> Which kind of game are you working on and how many 
> connections/bandwidth does it have? I haven't encountered the problems 
> you mention in my project.

Turn based strategy.  Here's the (rather out of date) website if your 
curious:
http://brass-golem.com/

-Jasper




From jasper at peak.org  Mon Nov 12 17:31:59 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 16:31:59 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071112201547.8162.237583392.divmod.quotient.34987@ohm>
References: <20071112201547.8162.237583392.divmod.quotient.34987@ohm>
Message-ID: <4738F07F.2010701@peak.org>

Jean-Paul Calderone wrote:
> On Mon, 12 Nov 2007 20:08:29 +0100, Nitro <nitro at dr-code.org> wrote:
>> Am 12.11.2007, 19:47 Uhr, schrieb Jasper <jasper at peak.org>:
>>> To get to the point, I actually do feel that the fault lies with  
>>> Twisted, or more specifically PB.  Code using PB wants to be as 
>>> unaware  of the details of network transmission as possible.  It 
>>> certainly  doesn't want to slice things into a bazillion chunks for 
>>> individual  transmission, and then puzzle them back together on the 
>>> other end.
>>>
>>> IMHO it makes more sense for PB to understand it shouldn't block, 
>>> and to chunk and schedule its serialization (and unserialization) in 
>>> the same manner as the TCP packets sent underneath.  I'm guessing 
>>> this would make for cleaner separation, and more general usefulness.
>>
>> I think this is a) not possible and b) not desirable.
>
> I think it's possible.  It may even be desirable, although whether it is
> worth the cost of implementing or not is a question worth considering.
>
[snip]
>
> PB's serializer could try very hard to avoid running for a long period of
> time without giving control back to the reactor.  Of course, someone 
> would
> have to implement this.  Whether or not that is worthwhile to implement,
> instead of doing what Glyph suggested (manually breaking up the work into
> smaller pieces) is a separate question.

I'm not sure it's worth the cost either, but I'm also not splitting up 
the data into chunks is easier.  Looking through jelly.py, I find the 
places I'd want to split data align pretty closely with the chunking 
already done during jellying; why duplicate this work?

That said, I'm not precisely sure how to keep track of progress between 
time slices, although I nebulously intuit it could be done via nested 
generators.  I'm sure I don't fully understand the implications of this, 
but I've been looking for a practical reason to fiddle with generators 
for a while anyway. ;-)

-Jasper




From theatilla at gmail.com  Tue Nov 13 07:07:21 2007
From: theatilla at gmail.com (Atilla)
Date: Tue, 13 Nov 2007 15:07:21 +0100
Subject: [Twisted-Python] "Old style" classes in Twisted and inheritance
Message-ID: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>

I hope this is the correct place for this question.

I was trying to create a little customized task that sends a (ping)
message to the clients every X seconds. Because I needed some extra
bookkeeping, I implemented it as a class instance with a __call__
method, that is passed to the LoopingCall.

However, I also wanted to automatically start the task on init, so I
thought - it makes a lot of sense to simply Inherit it, call its
constructor and pass self as the parameter. It was then I realized
that the classes in twisted are old-style, when my super() call didn't
work.

Is there any practicular reason for that? Am I wrong to try inherit
the Looping Call ? Basically my code looks like :

class SillyPinger(object):
        def __init__(self, factory):
            self.factory = factory
            self.pingTargets = {}

            pingTask = task.LoopingCall(self)
            pingTask.start(5.0)

        def __call__(self):
            # do stuff
            pass


while I'd like to be doing:

class SillyPinger(task.LoopingCall):
        def __init__(self, factory):
            super(SillyPinger, self).__init__(self)

            self.factory = factory
            self.pingTargets = {}

            self.start(5.0) # get value from .ini here


Should I just switch to calling the LoopingCall constructor in the old
way? I'm not sure I'd like to do that, even if only for consistency
reasons.



From exarkun at divmod.com  Tue Nov 13 07:30:44 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Nov 2007 09:30:44 -0500
Subject: [Twisted-Python] "Old style" classes in Twisted and inheritance
In-Reply-To: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
Message-ID: <20071113143044.8162.55241882.divmod.quotient.35319@ohm>

On Tue, 13 Nov 2007 15:07:21 +0100, Atilla <theatilla at gmail.com> wrote:
>I hope this is the correct place for this question.
>
>I was trying to create a little customized task that sends a (ping)
>message to the clients every X seconds. Because I needed some extra
>bookkeeping, I implemented it as a class instance with a __call__
>method, that is passed to the LoopingCall.

__call__ doesn't have much benefit over a method which a useful name,
for what it's worth.  This isn't really related to your question or
problem, though.

>
>However, I also wanted to automatically start the task on init, so I
>thought - it makes a lot of sense to simply Inherit it, call its
>constructor and pass self as the parameter. It was then I realized
>that the classes in twisted are old-style, when my super() call didn't
>work.

Inheritance makes sense for sharing code.  It doesn't make sense for
the case you're describing.  You could just as easily have your class
create a LoopingCall in its __init__ and start it, rather than making
your class _be_ a LoopingCall.

More generally, some classes in Twisted are classic because they predate
Python's new-style classes.  We can't simply change them all to be new-
style now since there are various incompatibilities between classic and
new-style classes.

Speaking of super() specifically, it isn't even correct to use super()
even if you have new-style classes.  super() is for cooperative multiple
inheritance: all of the classes in the inheritance hierarchy have to agree
to use it.  Even if LoopingCall were new-style, it would also have to
claim that using super() with its __init__ method was supported (actually,
required).  And even then there would be no benefit until you also had
multiple inheritance.

>
>Is there any practicular reason for that? Am I wrong to try inherit
>the Looping Call ? Basically my code looks like :
>
>class SillyPinger(object):
>        def __init__(self, factory):
>            self.factory = factory
>            self.pingTargets = {}
>
>            pingTask = task.LoopingCall(self)
>            pingTask.start(5.0)
>
>        def __call__(self):
>            # do stuff
>            pass
>

The above is good.  Do that.

>
>while I'd like to be doing:
>
>class SillyPinger(task.LoopingCall):
>        def __init__(self, factory):
>            super(SillyPinger, self).__init__(self)
>
>            self.factory = factory
>            self.pingTargets = {}
>
>            self.start(5.0) # get value from .ini here
>

This will always be more fragile, even if you ignore the fact
that super() doesn't work here.

Jean-Paul



From jml at mumak.net  Tue Nov 13 07:32:05 2007
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 13 Nov 2007 09:32:05 -0500
Subject: [Twisted-Python] Weekly Bug Summary
In-Reply-To: <1194149104.43.1150492133@twistedmatrix.com>
References: <1194149104.43.1150492133@twistedmatrix.com>
Message-ID: <d06a5cd30711130632l50199a4ft73d0eb12ab796a1d@mail.gmail.com>

On Nov 3, 2007 11:05 PM,  <exarkun at twistedmatrix.com> wrote:
...
> Ticket Lifetime Stats
> ______________________
> Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
> Newest open ticket - [#2864] imap tests leave reactor in an unclean state (since 2007-11-03 18:33:43).
>
> Mean open ticket age: 560 days, 6:32:57.875374.
> Median: 462 days, 7:46:03.250374.
> Standard deviation: 406 days, 0:27:03.405592.
> Interquartile range: 507 days, 3:57:36.
>
> Mean time between ticket creation and ticket resolution: 123 days, 16:29:00.414484.
> Median: 15 days, 4:20:02.
> Standard deviation is 226 days, 16:11:21.249058.
> The interquartile range is 133 days, 4:31:15.
>
> Mean time spent in review: 69 days, 4:50:09.346471.
> Median: 4 days, 9:08:37.
> Standard deviation: 154 days, 5:04:12.761773.
> Interquartile range: 31 days, 7:00:28.
>
> Mean number of times a ticket is reviewed: 2.00223214286.
> Median: 1
> Standard deviation: 1.6589837734.
> Interquartile range: 1.
>

I only noticed these recently. Thanks to Jean-Paul for including them
in the summary information.

Some suggestions:
- Graphs. Pictures with lines that are green and go up. Graphs make
statistics fun.
- Moving window. With the length of the project and the relative
variability of activity, it makes sense to show statistics for, say,
the last six months, rather than for the lifetime of Twisted.
- "Time between ticket creation and branch creation".

Thoughts?
jml



From Andy at NewWorldElectric.com  Tue Nov 13 07:34:08 2007
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Tue, 13 Nov 2007 09:34:08 -0500
Subject: [Twisted-Python] "Old style" classes in Twisted and inheritance
In-Reply-To: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
References: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
Message-ID: <37d49ed40711130634k3b371da0r339659a70ba41f2e@mail.gmail.com>

I ran into this too, but have had no trouble 'converting' to new style
classes by just adding "object" to the superclass list.  Anyone have reasons
why we can't do that?

-Andy Fundinger

On Nov 13, 2007 9:07 AM, Atilla <theatilla at gmail.com> wrote:

> I hope this is the correct place for this question.
>
> I was trying to create a little customized task that sends a (ping)
> message to the clients every X seconds. Because I needed some extra
> bookkeeping, I implemented it as a class instance with a __call__
> method, that is passed to the LoopingCall.
>
> However, I also wanted to automatically start the task on init, so I
> thought - it makes a lot of sense to simply Inherit it, call its
> constructor and pass self as the parameter. It was then I realized
> that the classes in twisted are old-style, when my super() call didn't
> work.
>
> Is there any practicular reason for that? Am I wrong to try inherit
> the Looping Call ? Basically my code looks like :
>
> class SillyPinger(object):
>        def __init__(self, factory):
>            self.factory = factory
>            self.pingTargets = {}
>
>            pingTask = task.LoopingCall(self)
>            pingTask.start(5.0)
>
>        def __call__(self):
>            # do stuff
>            pass
>
>
> while I'd like to be doing:
>
> class SillyPinger(task.LoopingCall):
>        def __init__(self, factory):
>            super(SillyPinger, self).__init__(self)
>
>            self.factory = factory
>            self.pingTargets = {}
>
>            self.start(5.0) # get value from .ini here
>
>
> Should I just switch to calling the LoopingCall constructor in the old
> way? I'm not sure I'd like to do that, even if only for consistency
> reasons.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071113/8dadfb55/attachment.html>

From radix at twistedmatrix.com  Tue Nov 13 07:35:01 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 13 Nov 2007 09:35:01 -0500
Subject: [Twisted-Python] "Old style" classes in Twisted and inheritance
In-Reply-To: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
References: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
Message-ID: <60ed19d40711130635v13e2063g173da2854ce518c@mail.gmail.com>

On Nov 13, 2007 9:07 AM, Atilla <theatilla at gmail.com> wrote:
> Is there any practicular reason for that? Am I wrong to try inherit
> the Looping Call ?

Yes. You're not really getting any benefit from inheriting from it. I
suggest you use composition like in your first example.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From theatilla at gmail.com  Tue Nov 13 08:30:13 2007
From: theatilla at gmail.com (Atilla)
Date: Tue, 13 Nov 2007 16:30:13 +0100
Subject: [Twisted-Python] "Old style" classes in Twisted and inheritance
In-Reply-To: <37d49ed40711130634k3b371da0r339659a70ba41f2e@mail.gmail.com>
References: <b53c932d0711130607l599f2e9bsaf265ec37349ddba@mail.gmail.com>
	<37d49ed40711130634k3b371da0r339659a70ba41f2e@mail.gmail.com>
Message-ID: <b53c932d0711130730w6f61f6bfpbdaa39de6b2c912@mail.gmail.com>

On 13/11/2007, Andy Fundinger <Andy at newworldelectric.com> wrote:
> I ran into this too, but have had no trouble 'converting' to new style
> classes by just adding "object" to the superclass list.  Anyone have reasons
> why we can't do that?
>
> -Andy Fundinger
>

I actually had problems with that, python complained when I tried to
inherit "object" and LoopingCall together and then use super(), which
doesn't make sense for Old style objects.


Thanks for the responses. I was getting the feeling that I'm just
trying to abuse language features with no real benefit. I'll stick to
the composition I have above, or even clean it up a little bit to be
more clear.



From theatilla at gmail.com  Tue Nov 13 08:33:56 2007
From: theatilla at gmail.com (Atilla)
Date: Tue, 13 Nov 2007 16:33:56 +0100
Subject: [Twisted-Python] Correct way of stopping twistd
Message-ID: <b53c932d0711130733u4ceba008x1b7c4e374ce01ccd@mail.gmail.com>

Is there an accepted method of stopping twistd? I'd like to package my
service as a service with start/stop commands and for now i'm doing
"kill -HUP #pid", where the pid is read from the twistd.pid file.



From exarkun at divmod.com  Tue Nov 13 08:54:10 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Nov 2007 10:54:10 -0500
Subject: [Twisted-Python] Correct way of stopping twistd
In-Reply-To: <b53c932d0711130733u4ceba008x1b7c4e374ce01ccd@mail.gmail.com>
Message-ID: <20071113155410.8162.802042879.divmod.quotient.35354@ohm>

On Tue, 13 Nov 2007 16:33:56 +0100, Atilla <theatilla at gmail.com> wrote:
>Is there an accepted method of stopping twistd? I'd like to package my
>service as a service with start/stop commands and for now i'm doing
>"kill -HUP #pid", where the pid is read from the twistd.pid file.
>

There's been a bit of discussion about adding "twistd stop", but it
hasn't happened yet.

Jean-Paul



From jdawson at io.com  Tue Nov 13 14:43:23 2007
From: jdawson at io.com (John Dawson)
Date: Tue, 13 Nov 2007 15:43:23 -0600
Subject: [Twisted-Python] Calling reactor.run() / reactor.stop() twice
Message-ID: <7e83222c0711131343i69db1e3bqabaddbb4c549f06@mail.gmail.com>

Hi,

The following Twisted code hangs, since the second call to
reactor.stop() doesn't seem to really stop the reactor.  Is this a bug
in Twisted, or is it impermissible to run/stop a reactor more than
once?

#!/opt/local/bin/python2.5

from twisted.internet import reactor

def ping():
    def stop_reactor():
        print "stopping reactor"
        reactor.stop()
    print "Ping: ENTER"
    print "Setting up timer for callback"
    reactor.callLater(0.25, stop_reactor)
    print "Running reactor"
    reactor.run()
    print "Reactor stopped"
    print "Ping: EXIT"

print "ping1"
ping()
print
print "ping2"
ping()


It prints:

$ ./reactor1.py
ping1
Ping: ENTER
Setting up timer for callback
Running reactor
stopping reactor
Reactor stopped
Ping: EXIT

ping2
Ping: ENTER
Setting up timer for callback
Running reactor
stopping reactor

And then hangs.

Any help/advice appreciated.

John

-- 
John Dawson <jdawson at io.com>



From daedalus at eigenmagic.com  Tue Nov 13 15:10:16 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Wed, 14 Nov 2007 09:10:16 +1100
Subject: [Twisted-Python] Calling reactor.run() / reactor.stop() twice
In-Reply-To: <7e83222c0711131343i69db1e3bqabaddbb4c549f06@mail.gmail.com>
References: <7e83222c0711131343i69db1e3bqabaddbb4c549f06@mail.gmail.com>
Message-ID: <1194991816.20835.3.camel@fnord.melbourne.eigenmagic.net>

On Tue, 2007-11-13 at 15:43 -0600, John Dawson wrote:
> Hi,
> 
> The following Twisted code hangs, since the second call to
> reactor.stop() doesn't seem to really stop the reactor.  Is this a bug
> in Twisted, or is it impermissible to run/stop a reactor more than
> once?

The reactor is not restartable. Attempting to restart the reactor will
result in unpredictable behaviour.

Why do you want to do this?

-- 
Justin Warren <daedalus at eigenmagic.com>



From exarkun at divmod.com  Tue Nov 13 15:14:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Nov 2007 17:14:22 -0500
Subject: [Twisted-Python] Calling reactor.run() / reactor.stop() twice
In-Reply-To: <7e83222c0711131343i69db1e3bqabaddbb4c549f06@mail.gmail.com>
Message-ID: <20071113221422.8162.2088546795.divmod.quotient.35467@ohm>

On Tue, 13 Nov 2007 15:43:23 -0600, John Dawson <jdawson at io.com> wrote:
>Hi,
>
>The following Twisted code hangs, since the second call to
>reactor.stop() doesn't seem to really stop the reactor.  Is this a bug
>in Twisted, or is it impermissible to run/stop a reactor more than
>once?

The latter.

Jean-Paul



From jdawson at io.com  Tue Nov 13 15:47:12 2007
From: jdawson at io.com (John Dawson)
Date: Tue, 13 Nov 2007 16:47:12 -0600
Subject: [Twisted-Python] Calling reactor.run() / reactor.stop() twice
In-Reply-To: <1194991816.20835.3.camel@fnord.melbourne.eigenmagic.net>
References: <7e83222c0711131343i69db1e3bqabaddbb4c549f06@mail.gmail.com>
	<1194991816.20835.3.camel@fnord.melbourne.eigenmagic.net>
Message-ID: <7e83222c0711131447x1213c08ao5c43009cefc3675b@mail.gmail.com>

I know it's a bizarre thing to want.  I've got a client/server system
using Twisted.  The client doesn't do anything asynchronously, except,
of course, for its interaction with the server via Perspective Broker.
 The way the code is written right now, the code is only starts up the
reactor and interacts with the server when it needs to send an RPC to
the server.  Until now, it would only ever do (at most) one RPC to the
server.  But I now need to do two.  It would have been simpler to fix
the client code if the reactor were restartable.  But given your
feedback, it looks I'll have to restructure things a bit to
accommodate having a long-running reactor.

The client pseudocode looks something like this:

    def start_server():
        # Fire off an ssh command to run the server on the remote host

    def stop_server():
        # start reactor
        # connect to server
        # send PB message to server to tell it to shut down
        # stop reactor

    def get_server_status():
        # start reactor
        # connect to server
        # stop reactor
        # return True/False of whether connect was successful

    def restart_server():
        if get_server_status():
            stop_server()
        start_server()

But, it's certainly fixable to have just one run/stop of the reactor loop.

Thanks for help!
John


On 11/13/07, Justin Warren <daedalus at eigenmagic.com> wrote:
> On Tue, 2007-11-13 at 15:43 -0600, John Dawson wrote:
> > Hi,
> >
> > The following Twisted code hangs, since the second call to
> > reactor.stop() doesn't seem to really stop the reactor.  Is this a bug
> > in Twisted, or is it impermissible to run/stop a reactor more than
> > once?
>
> The reactor is not restartable. Attempting to restart the reactor will
> result in unpredictable behaviour.
>
> Why do you want to do this?
>
> --
> Justin Warren <daedalus at eigenmagic.com>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
John Dawson <jdawson at io.com>



From jasper at peak.org  Mon Nov 12 09:56:15 2007
From: jasper at peak.org (Jasper)
Date: Mon, 12 Nov 2007 08:56:15 -0800
Subject: [Twisted-Python] Two main loops
In-Reply-To: <op.t1njvgqfz3pzfc@nitrogenycs2>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>	<47376ED2.8010408@peak.org>
	<op.t1njvgqfz3pzfc@nitrogenycs2>
Message-ID: <473885AF.1040704@peak.org>

Nitro wrote:
> In a game you usually never send/receive huge objects. For various 
> reasons you always try to reduce your bandwidth as much as possible. A 
> low bandwidth implies a rather low number of objects and data.
Actually, in my (and most) turn based strategy games, it's normal to 
send lots of data, every turn.  Not all games are realtime, with data 
that fits easily into small packets.

-Jasper




From zooko at zooko.com  Tue Nov 13 19:50:40 2007
From: zooko at zooko.com (zooko)
Date: Tue, 13 Nov 2007 19:50:40 -0700
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <1194620709.13986.20.camel@localhost.localdomain>
References: <066a01c82255$7d5276a0$77f763e0$@com>
	<1194620709.13986.20.camel@localhost.localdomain>
Message-ID: <A188CF17-4A1E-43B5-BCA9-D8DBC3E802E1@zooko.com>

The cool way to do what you want is to use dtrace-enabled Python:

http://joyeur.com/2007/08/29/using-dtrace-enabled-python-in-a-joyent- 
accelerators

The problem is that it only works on Solaris.

Regards,

Zooko




From ronaldoussoren at mac.com  Wed Nov 14 00:04:23 2007
From: ronaldoussoren at mac.com (Ronald Oussoren)
Date: Wed, 14 Nov 2007 08:04:23 +0100
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <A188CF17-4A1E-43B5-BCA9-D8DBC3E802E1@zooko.com>
References: <066a01c82255$7d5276a0$77f763e0$@com>
	<1194620709.13986.20.camel@localhost.localdomain>
	<A188CF17-4A1E-43B5-BCA9-D8DBC3E802E1@zooko.com>
Message-ID: <446E60BC-CC13-4C99-894B-DA66810E6EAE@mac.com>


On 14 Nov, 2007, at 3:50, zooko wrote:

> The cool way to do what you want is to use dtrace-enabled Python:
>
> http://joyeur.com/2007/08/29/using-dtrace-enabled-python-in-a-joyent-accelerators
>
> The problem is that it only works on Solaris.

OSX 10.5 also has dtrace support, and /usr/bin/python is already  
dtrace enabled.

Ronald

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2224 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20071114/3e413479/attachment-0002.bin>

From sipickles at hotmail.com  Wed Nov 14 01:34:27 2007
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 14 Nov 2007 08:34:27 +0000
Subject: [Twisted-Python] Porting my Win32 Twisted to Linux Twisted
Message-ID: <BAY114-DAV2B55F3499AA3FFE4207B3BE810@phx.gbl>

Okay, my small problem is probably not down to twisted, more likely the 
problem resides somewhere between my seat and the keyboard. Anyway I 
hope one of you more experienced linux/Twisted users can shed some light.

I've built some small Twisted-Python client/server applications on 
Win32. Now I've finally made the break and moved to Ubuntu!

Its very impressive, but I have a few inevitable problems.

I have a server listening on localhost:7001, and a client trying to 
connect (local too). The client doesn't see the server, and keeps making 
connection attempts.

When I run System>Network Tools>Portscan on localhost, I can see port 
7001 is open with a service called 'afs3-callback'.

The odd thing is, once I have run the Portscan, my client suddenly sees 
the server and connects! Am I neglecting to do anything before running 
my python server, like open the port?

Why does Portscan seem to open the port for me?

Many thanks for your help and advice.

S







From Marcin.Kasperski at softax.com.pl  Wed Nov 14 02:51:59 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Wed, 14 Nov 2007 10:51:59 +0100
Subject: [Twisted-Python] Re: Porting my Win32 Twisted to Linux Twisted
References: <BAY114-DAV2B55F3499AA3FFE4207B3BE810@phx.gbl>
Message-ID: <87r6itjgsg.fsf@cauchy.softax.local>

> When I run System>Network Tools>Portscan on localhost, I can see port
> 7001 is open with a service called 'afs3-callback'.

This is somewhat misleading and does not matter anything. Simply, you
have in your /etc/services the info that port 7001 is typically used
by afs3-callback (whatever it is). Similarly the same program will
say that you are using service 'www' if port 80 is open. This is
just popular convention applied by many programs - instead of showing
numerical port, show text assigned to this port in /etc/services.

To truly check what is running on given port, try sth like

   sudo netstat -l --tcp -p

(there surely is some GUI which does the same, but I am not expert in
GUIs, learned command lines before they existed ;-))

You will get the list of all processess listening on TCP ports. In
particular you may see lines like

tcp        0      0 *:4433                  *:*                     LISTEN     26164/apache

(this is from my host, on port 4433 there is some apache process
runing, pid of the process is 26164). To check in more detail what
process do you see, try sth like

   ps 26164

(giving the pid from the line above) and you will see the command
which spawned the process. Of course you can also search for this
pid in some GUI process monitor.


Some alternative way to check some ports is to ... telnet there.
For example

   telnet localhost 7001

You get direct connection to the other side. It may give you some info
(many daemons send some initial string), or ... not. But in particular
it will tell you whether there is any process on the other side (if
not, you get 'Connection refused' error). To leave such session press
Ctrl-] and enter 'quit' after 'telnet>' prompt.

>
> The odd thing is, once I have run the Portscan, my client suddenly
> sees the server and connects!
> (...)
>
> Why does Portscan seem to open the port for me?

The only reasonable guess I can make is that your server misbehaves
somehow, for example incorrectly handles some initial connection(s).
Portscan opens connection to it and closes it, maybe it helps your
server.

Another guess is that maybe you just missed something. For example,
maybe your server works when accessed as localhost but does not work
when accesssed on yourmachinetrueinterface (or reverse)...

If you need to diagnose your network communication in more detail,
you may take a look at wireshark (formerly ethereal) package,
it lets you capture and review the whole network communication.


-- 
----------------------------------------------------------------------
| Marcin Kasperski   | Working overtime sucks the spirit and
| http://mekk.waw.pl |   motivation out of a team. (Wells)
|                    |
----------------------------------------------------------------------




From alan.franzoni.xyz at gmail.com  Wed Nov 14 08:35:09 2007
From: alan.franzoni.xyz at gmail.com (Alan Franzoni)
Date: Wed, 14 Nov 2007 16:35:09 +0100
Subject: [Twisted-Python] Timing problem with PB Broker's connectionReady
Message-ID: <af7fad5b0711140735p4eb369f7x10fba00f77c6082a@mail.gmail.com>

Hello everybody,
I'm running Twisted 2.5 on 32-bit Ubuntu Linux (tested with both Feisty and
Gutsy) and python2.5. All packages are the distro's own ones.

I'm experiencing a small problem with the broker's connectionReady method on
the server side of the PB connection. It's not huge and doesn't cause
problems in real-world applications, but it's making more difficult for me
to write a proper unit test.

 According to the docs, connectionReady is called as soon as Banana
negotiation is done. This is true on the client side; connectionReady gets
called before the client can get the root object from the server.

But this is not true on the server side; as you can see from the printout of
the attached file, the client says it already has got the server's root
object but the connectionready hasn't been called on the server yet.

In order to be sure connectionReady has been called on the server side, I
must trigger an additional callRemote.

I suppose there's some sort of caching or lazy behaviour implied here. Did I
do something wrong? How can I force connectionReady to be called on the
server side *before* the client can actually fetch the root object's
remotereference?

Thanks.

-- 
Alan Franzoni <alan.franzoni.xyz at gmail.com>
-
Togli .xyz dalla mia email per contattarmi.
Remove .xyz from my address in order to contact me.
-
GPG Key Fingerprint (Key ID = FE068F3E):
5C77 9DC3 BD5B 3A28 E7BC 921A 0255 42AA FE06 8F3E
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071114/af325a7c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testpbserv.py
Type: text/x-python
Size: 2055 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20071114/af325a7c/attachment-0002.py>

From drew.smathers at gmail.com  Wed Nov 14 12:08:22 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 14 Nov 2007 14:08:22 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
Message-ID: <368574aa0711141108oae04315ja76797bef7dc9197@mail.gmail.com>

> Actually, punting to another thread or process is still going to slow
> down your rendering, but in a much less deterministic way.  The OS
> scheduler is going to be interrupting the rendering rather than the
> long-running serialization function.  Breaking down the serialization
> work into smaller chunks will allow you to better control what's going
> on.
>

Holy crap!  I just grew an extra brain cell!  It has tingly sensation like
selson blue.

So let me offer some empirical evidence of this phenomenon which I was not
quite understanding until reading your comment - of course, it makes
complete sense now.  I've been working on a cheesey game in my spare time
called Twisted Wars (yes, the Twisted), and just to amuse myself I decided
to run the reactor normally rather than threaded select and model the
runtime loop as a cooperative iterator - the idea being that eventually the
runtime loop could be many cooiterators, to allow for an actor-based system.


To my surprise, after changing the core runtime to a cooiterator, my frame
rate improved (albeit only about +5 - but this might be more noticeable if I
had a decent frame rate to start with).  I explained to a friend who's also
working on the game and they refused to believe me! Ha!

-Drew
-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071114/b0a7cc7c/attachment.html>

From drew.smathers at gmail.com  Wed Nov 14 12:15:52 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 14 Nov 2007 14:15:52 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <473885AF.1040704@peak.org>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org> <op.t1njvgqfz3pzfc@nitrogenycs2>
	<473885AF.1040704@peak.org>
Message-ID: <368574aa0711141115o63abc9bcu47bb73f7e0696847@mail.gmail.com>

On Nov 12, 2007 11:56 AM, Jasper <jasper at peak.org> wrote:

> Nitro wrote:
> > In a game you usually never send/receive huge objects. For various
> > reasons you always try to reduce your bandwidth as much as possible. A
> > low bandwidth implies a rather low number of objects and data.
> Actually, in my (and most) turn based strategy games, it's normal to
> send lots of data, every turn.  Not all games are realtime, with data
> that fits easily into small packets.
>
> -Jasper
> <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
>

For this specific use case, I would expect using a producer/consumer:
http://twistedmatrix.com/projects/core/documentation/howto/producers.html

However, it still seems unlikely that you'd need to transmit that much data
even in a turn-based system.  How many bytes are we talking about?

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071114/136d16a5/attachment.html>

From exarkun at divmod.com  Wed Nov 14 14:22:14 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 Nov 2007 16:22:14 -0500
Subject: [Twisted-Python] Timing problem with PB Broker's connectionReady
In-Reply-To: <af7fad5b0711140735p4eb369f7x10fba00f77c6082a@mail.gmail.com>
Message-ID: <20071114212214.8162.748263551.divmod.quotient.35874@ohm>

On Wed, 14 Nov 2007 16:35:09 +0100, Alan Franzoni <alan.franzoni.xyz at gmail.com> wrote:
>Hello everybody,
>I'm running Twisted 2.5 on 32-bit Ubuntu Linux (tested with both Feisty and
>Gutsy) and python2.5. All packages are the distro's own ones.
>
>I'm experiencing a small problem with the broker's connectionReady method on
>the server side of the PB connection. It's not huge and doesn't cause
>problems in real-world applications, but it's making more difficult for me
>to write a proper unit test.
>
> According to the docs, connectionReady is called as soon as Banana
>negotiation is done. This is true on the client side; connectionReady gets
>called before the client can get the root object from the server.
>
>But this is not true on the server side; as you can see from the printout of
>the attached file, the client says it already has got the server's root
>object but the connectionready hasn't been called on the server yet.
>
>In order to be sure connectionReady has been called on the server side, I
>must trigger an additional callRemote.
>

It's not triggered by the callRemote - the callRemote just keeps the example
program running long enough so that the server side actually has a chance
to get to connectionReady.

This is because there's no network activity required in between the client's
connectionReady call and the Deferred returned by getRootObject firing.
Since the client gets connectionReady first, without the callRemote (or
something else to prevent the process from exiting right away), the server
never receives the dialect negotiation response, so it never calls
connectionReady - as far as it is concerned, the connection never *is*
ready.

>I suppose there's some sort of caching or lazy behaviour implied here. Did I
>do something wrong? How can I force connectionReady to be called on the
>server side *before* the client can actually fetch the root object's
>remotereference?

You can't, as PB is currently implemented.  I'm not sure you really need
this, though.  Can you describe the difficulty you've had writing unit
tests?

Jean-Paul



From sipickles at hotmail.com  Thu Nov 15 01:01:02 2007
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 15 Nov 2007 08:01:02 +0000
Subject: [Twisted-Python] Re: Porting my Win32 Twisted to Linux Twisted
	[SOLVED]
In-Reply-To: <87r6itjgsg.fsf@cauchy.softax.local>
References: <BAY114-DAV2B55F3499AA3FFE4207B3BE810@phx.gbl>
	<87r6itjgsg.fsf@cauchy.softax.local>
Message-ID: <BAY114-DAV19FA488BBA22664D18E7F8BE820@phx.gbl>

It seems Ubuntu is confused by the use of 7001 for the port. It does 
appear in the 'reserved' ports lists as 'afs3-callback'


Changing this to another unreserved value, 47001 for example, and its 
fine. I guess windows is more sloppy on this front.

Thanks for the advice, Marcin. Wireshark looks interesting too, I just 
have to learn how to comprehend all the output now!



Marcin Kasperski wrote:
>> When I run System>Network Tools>Portscan on localhost, I can see port
>> 7001 is open with a service called 'afs3-callback'.
>>     
>
> This is somewhat misleading and does not matter anything. Simply, you
> have in your /etc/services the info that port 7001 is typically used
> by afs3-callback (whatever it is). Similarly the same program will
> say that you are using service 'www' if port 80 is open. This is
> just popular convention applied by many programs - instead of showing
> numerical port, show text assigned to this port in /etc/services.
>
> To truly check what is running on given port, try sth like
>
>    sudo netstat -l --tcp -p
>
> (there surely is some GUI which does the same, but I am not expert in
> GUIs, learned command lines before they existed ;-))
>
> You will get the list of all processess listening on TCP ports. In
> particular you may see lines like
>
> tcp        0      0 *:4433                  *:*                     LISTEN     26164/apache
>
> (this is from my host, on port 4433 there is some apache process
> runing, pid of the process is 26164). To check in more detail what
> process do you see, try sth like
>
>    ps 26164
>
> (giving the pid from the line above) and you will see the command
> which spawned the process. Of course you can also search for this
> pid in some GUI process monitor.
>
>
> Some alternative way to check some ports is to ... telnet there.
> For example
>
>    telnet localhost 7001
>
> You get direct connection to the other side. It may give you some info
> (many daemons send some initial string), or ... not. But in particular
> it will tell you whether there is any process on the other side (if
> not, you get 'Connection refused' error). To leave such session press
> Ctrl-] and enter 'quit' after 'telnet>' prompt.
>
>   
>> The odd thing is, once I have run the Portscan, my client suddenly
>> sees the server and connects!
>> (...)
>>
>> Why does Portscan seem to open the port for me?
>>     
>
> The only reasonable guess I can make is that your server misbehaves
> somehow, for example incorrectly handles some initial connection(s).
> Portscan opens connection to it and closes it, maybe it helps your
> server.
>
> Another guess is that maybe you just missed something. For example,
> maybe your server works when accessed as localhost but does not work
> when accesssed on yourmachinetrueinterface (or reverse)...
>
> If you need to diagnose your network communication in more detail,
> you may take a look at wireshark (formerly ethereal) package,
> it lets you capture and review the whole network communication.
>
>
>   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071115/70d236ed/attachment.html>

From jml at mumak.net  Thu Nov 15 08:02:19 2007
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 15 Nov 2007 10:02:19 -0500
Subject: [Twisted-Python] Keeping track of what you're doing
Message-ID: <d06a5cd30711150702g27abad1ex763c3e607b3772d7@mail.gmail.com>

Hey guys,

One of the big problems I've had as a part-time Twisted contributor is
keeping track of what the hell I'm doing, or what I should be doing,
or what I'm waiting for. Between the listing of my local branches/
directory, my assigned tickets and the review queue things can get
confusing.

It turns out that Jean-Paul has set up a couple of useful Trac reports
and features to help. I thought I'd post them to the list, because
they are making my life more pleasant.


1. Review Tickets, By Order You Should Review Them In
http://twistedmatrix.com/trac/report/15

This would be a little better if it excluded branches that you
authored, but at the moment we don't keep this information.


2. Tickets with Branches
This doesn't have a convenient URL. However, you can simply do a
custom query for tickets that are open, owned by you and have 'Branch'
is not ''. Bookmark it.

This is a good way to keep track of the tickets that you have actually
started. If you are like me, you use the "Assigned" state fairly
haphazardly. It's a good idea to review this list and compare it to
the branches in your local directory and the branches in the actual
repository so that you can remove stale or merged branches.


3. My Tickets Awaiting Review
http://twistedmatrix.com/trac/report/17

This shows tickets that you have put up for review.


Thanks to Jean-Paul for setting up these queries and continuing to
make our Trac more helpful.

jml



From glyph at divmod.com  Thu Nov 15 11:40:43 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Nov 2007 18:40:43 -0000
Subject: [Twisted-Python] Two main loops
In-Reply-To: <368574aa0711141108oae04315ja76797bef7dc9197@mail.gmail.com>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
	<368574aa0711141108oae04315ja76797bef7dc9197@mail.gmail.com>
Message-ID: <20071115184043.21558.907313107.divmod.xquotient.1179@joule.divmod.com>

On 14 Nov, 07:08 pm, drew.smathers at gmail.com wrote:
>>Actually, punting to another thread or process is still going to slow
>>down your rendering, but in a much less deterministic way.  The OS
>>scheduler is going to be interrupting the rendering rather than the
>>long-running serialization function.  Breaking down the serialization
>>work into smaller chunks will allow you to better control what's going
>>on.
>
>Holy crap!  I just grew an extra brain cell!  It has tingly sensation 
>like
>selson blue.

Nice to hear that we're helping to increase the transistor density of 
the universe.
>So let me offer some empirical evidence of this phenomenon which I was 
>not
>quite understanding until reading your comment - of course, it makes
>complete sense now.  I've been working on a cheesey game in my spare 
>time
>called Twisted Wars (yes, the Twisted), and just to amuse myself I 
>decided
>to run the reactor normally rather than threaded select and model the
>runtime loop as a cooperative iterator - the idea being that eventually 
>the
>runtime loop could be many cooiterators, to allow for an actor-based 
>system.

I've seen Twisted Wars.  It's flattering, but I hope it's going to 
evolve from beyond its, ahem, "humble" beginnings into something more 
interesting :).  Nice to unveil the mystery of its author, though ...
>To my surprise, after changing the core runtime to a cooiterator, my 
>frame
>rate improved (albeit only about +5 - but this might be more noticeable 
>if I
>had a decent frame rate to start with).  I explained to a friend who's 
>also
>working on the game and they refused to believe me! Ha!

Although I'm glad you've gained some insight into the exciting world of 
improving performance (or not) with parallelism, I wouldn't read too 
much into this.  threadedselectreactor is a particularly poorly-tested 
piece of code and it might have performance bugaboos of its own that 
have nothing to do with concurrency.  Also, as I said, I've tried 
Twisted Wars; one of the things I noticed about it is that the framerate 
seems to degrade slowly over time until the game becomes sluggish and 
unplayable.  It seems like you're leaking computation somewhere.  So 
you've got a lot of factors to consider when measuring your overall 
framerate.



From drew.smathers at gmail.com  Thu Nov 15 12:24:13 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 15 Nov 2007 14:24:13 -0500
Subject: [Twisted-Python] Two main loops
In-Reply-To: <20071115184043.21558.907313107.divmod.xquotient.1179@joule.divmod.com>
References: <20071111154421.8162.1752192342.divmod.quotient.34521@ohm>
	<47376ED2.8010408@peak.org>
	<20071111222758.21558.1359870515.divmod.xquotient.192@joule.divmod.com>
	<368574aa0711141108oae04315ja76797bef7dc9197@mail.gmail.com>
	<20071115184043.21558.907313107.divmod.xquotient.1179@joule.divmod.com>
Message-ID: <368574aa0711151124n6d2ae7a4w9aa3fc10aac3b401@mail.gmail.com>

> Although I'm glad you've gained some insight into the exciting world of
> improving performance (or not) with parallelism, I wouldn't read too
> much into this.  threadedselectreactor is a particularly poorly-tested
> piece of code and it might have performance bugaboos of its own that
> have nothing to do with concurrency.  Also, as I said, I've tried
> Twisted Wars; one of the things I noticed about it is that the framerate
> seems to degrade slowly over time until the game becomes sluggish and
> unplayable.  It seems like you're leaking computation somewhere.  So
> you've got a lot of factors to consider when measuring your overall
> framerate.
>

Yes, it leaks like a dam in Holland.  That was a bug that cropped up at the
end of the competition.  But that's become the new goal of the game - get as
money as money as possible before your memory is full and you die.

The minor performance boost was observable at the start of the game before
the scenes are flooded with unclaimed TCP rays.  If there is a next game,
I'll probably start from scratch and take more careful steps to prove the
scene artifact management is robust before diving into anything more
complex.

Thanks for your input.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071115/4614195b/attachment.html>

From dialtone at divmod.com  Thu Nov 15 12:37:48 2007
From: dialtone at divmod.com (dialtone at divmod.com)
Date: Thu, 15 Nov 2007 19:37:48 -0000
Subject: [Twisted-Python] profiling live twisted application
In-Reply-To: <066a01c82255$7d5276a0$77f763e0$@com>
References: <066a01c82255$7d5276a0$77f763e0$@com>
Message-ID: <20071115193748.21558.759484575.divmod.xquotient.1182@joule.divmod.com>


On 8 Nov, 10:19 pm, matusis at yahoo.com wrote:
>What is the best non-intrusive way to profile a live twisted 
>application?
>
>
>
>We have TCP servers with epoll reactors.
>
>We want to optimize them as our usage grows.

The only real way to do this is to use somthing similar to DTrace.

There is a similar tool called SystemTap for linux but it's not nearly
as refined or tested as DTrace.

DTrace works under FreeBSD, Solaris, QNX Neutrino, OSX and maybe others.
SystemTap only works under Linux AFAIK, and probably only under RedHat.

--
Valentino Volonghi



From zooko at zooko.com  Fri Nov 16 00:43:21 2007
From: zooko at zooko.com (zooko)
Date: Thu, 15 Nov 2007 23:43:21 -0800
Subject: [Twisted-Python] Hack Fest -- this coming Monday evening,
	allmydata.com, San Francisco
Message-ID: <38B1A30B-02EE-4827-A2D5-942E51186401@zooko.com>

Folks:

We're hosting another Hack Fest at allmydata headquarters in San  
Francisco!  This time will be much like last time [1], but with more  
emphasis on Real Live Code on projector screens.  The fun will begin  
after the worker drones clock out of their factories at 5 o'clock  
PM.  The fun will probably end sometime before midnight, when we all  
turn into pumpkins.

So please RSVP by e-mailing zooko at zooko.com and I will give you  
directions to our office and the URL for the planning wiki.  Plan to  
bring some Real Live Code if you have any, preferably open-source and/ 
or peer-to-peer.  You get points for demoing your cool project,  
double-points for demonstrating how you can change the source code  
before our very eyes to make it do something new, and triple points  
for committing the results into your revision control repository  
while the audience watches!

We hope to have two projectors working side by side.

Allmydata.com will provide projectors, pop, packets, pizza, pillows,  
and party-favors.

Regards,

Zooko

[1] http://lists.zooko.com/pipermail/p2p-hackers/2007-November/ 
001412.html




From itamar at itamarst.org  Fri Nov 16 06:58:12 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 16 Nov 2007 08:58:12 -0500
Subject: [Twisted-Python] [Fwd: Last chance for PyCon talk & tutorial
	proposals!]
Message-ID: <1195221493.20233.25.camel@localhost.localdomain>


-- 
Itamar Shtull-Trauring
http://itamarst.org

-------------- next part --------------
An embedded message was scrubbed...
From: unknown sender
Subject: no subject
Date: no date
Size: 6842
URL: </pipermail/twisted-python/attachments/20071116/e175ccd8/attachment.mht>

From raja at aonic.net  Fri Nov 16 20:24:48 2007
From: raja at aonic.net (Raja Kapur)
Date: Fri, 16 Nov 2007 22:24:48 -0500
Subject: [Twisted-Python] Problem setting up epollreactor on Leopard
Message-ID: <4d3038af0711161924i4028079bt255789590727f25c@mail.gmail.com>

I'm pretty new to the world of Twisted and Python.

I'm having trouble setting up Twisted with epollreactor on Mac OS X
Leopard, I downloaded the Twisted 2.5.0 tarball which contained all
the components of Twisted.

I installed the package using setup.py, everything seems to be working
fine except epollreactor.

When I do:
   from twisted.internet import epollreactor
   epollreactor.install()

Python says:
   line 1, in <module>
       from twisted.internet import epollreactor
   ImportError: cannot import name epollreactor

I tried Googling around and checking the mailing list archives without
much luck, anyone have any suggestions or ideas?

Thank you!



From drew.smathers at gmail.com  Fri Nov 16 22:27:05 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Sat, 17 Nov 2007 00:27:05 -0500
Subject: [Twisted-Python] Problem setting up epollreactor on Leopard
In-Reply-To: <4d3038af0711161924i4028079bt255789590727f25c@mail.gmail.com>
References: <4d3038af0711161924i4028079bt255789590727f25c@mail.gmail.com>
Message-ID: <368574aa0711162127t7d3e48f9u51bac00208317b95@mail.gmail.com>

> I'm having trouble setting up Twisted with epollreactor on Mac OS X
> Leopard, I downloaded the Twisted 2.5.0 tarball which contained all
> the components of Twisted.


So far as I know, epoll only exists on Linux ... so yeah, you won't have
much luck with that.

-Drew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071117/c685d139/attachment.html>

From raja at aonic.net  Sat Nov 17 05:35:00 2007
From: raja at aonic.net (Raja Kapur)
Date: Sat, 17 Nov 2007 07:35:00 -0500
Subject: [Twisted-Python] Problem setting up epollreactor on Leopard
In-Reply-To: <368574aa0711162127t7d3e48f9u51bac00208317b95@mail.gmail.com>
References: <4d3038af0711161924i4028079bt255789590727f25c@mail.gmail.com>
	<368574aa0711162127t7d3e48f9u51bac00208317b95@mail.gmail.com>
Message-ID: <4d3038af0711170435v599dca71qbe6ca497ddc3c425@mail.gmail.com>

Well that explains it ;) and apparently the kqreactor only supports
FreeBSD at the moment.

Thank you

On 11/17/07, Drew Smathers <drew.smathers at gmail.com> wrote:
>
>
> > I'm having trouble setting up Twisted with epollreactor on Mac OS X
> > Leopard, I downloaded the Twisted 2.5.0 tarball which contained all
> > the components of Twisted.
>
> So far as I know, epoll only exists on Linux ... so yeah, you won't have
> much luck with that.
>  -Drew
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From alan.franzoni.xyz at gmail.com  Sat Nov 17 10:20:59 2007
From: alan.franzoni.xyz at gmail.com (Alan Franzoni)
Date: Sat, 17 Nov 2007 18:20:59 +0100
Subject: [Twisted-Python] Timing problem with PB Broker's connectionReady
In-Reply-To: <20071114212214.8162.748263551.divmod.quotient.35874@ohm>
References: <af7fad5b0711140735p4eb369f7x10fba00f77c6082a@mail.gmail.com>
	<20071114212214.8162.748263551.divmod.quotient.35874@ohm>
Message-ID: <af7fad5b0711170920o212a590cp6add083f5acdf147@mail.gmail.com>

On Nov 14, 2007 10:22 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> You can't, as PB is currently implemented.  I'm not sure you really need
> this, though.  Can you describe the difficulty you've had writing unit
> tests?

Hello, thanks for replying. Maybe it was me who misunderstood the way PB worked.

My biggest problem at this time is that I don't seem to be able to
create a proper workflow for my PB-based app.

It happens that connectionLost *can* be called on my factory when
connectionReady *has not been called yet* (mostly if something bad
happened during the handshake). I wouldn't have ever expected such a
behaviour.

I will work around this BTW. Thanks!
-- 
Alan Franzoni <alan.franzoni.xyz at gmail.com>
-
Togli .xyz dalla mia email per contattarmi.
Remove .xyz from my address in order to contact me.
-
GPG Key Fingerprint (Key ID = FE068F3E):
5C77 9DC3 BD5B 3A28 E7BC 921A 0255 42AA FE06 8F3E



From exarkun at twistedmatrix.com  Sat Nov 17 22:05:03 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Nov 2007 05:05:03 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1195362303.65.1157789101@twistedmatrix.com

Bug summary
______________________
Summary for 2007-11-11 through 2007-11-18
Bugs opened: 28    Bugs closed: 15  Total open bugs: 1043 (+13)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +2  |Highest:  -1          |Conch:               +1  
|Enhancement: +12  |High:     +1          |Core:                +3  
                   |Normal:  +13          |Release Management: +10  
                   |Low:      +1          |Trial:               +0  
                                          |Vfs:                 -1  
                                          |Web:                 +1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2882] test_process hanging on vista slave (popup)- (opened by bigdog)
    defect          core       http://twistedmatrix.com/trac/ticket/2882

[#2885] Automate version updating (goodly) (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2885

[#2893] assertEqual is hard to read. (opened by jml) (CLOSED, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2893

[#2897] Deprecate visiting test (opened by jml) (CLOSED, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2897

[#2898] Add ITestCase for Trial tests (opened by jml) (CLOSED, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2898

[#2899] addCleanup should run even if setUp fails. (opened by jml) (CLOSED, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2899

[#2906] Provide framework for decorating tests (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2906

[#2882] test_process hanging on vista slave (popup)- (opened by bigdog)
    defect          core       http://twistedmatrix.com/trac/ticket/2882

                    ===== High =====
[#2881] Add a variable in twisted.python.runtime to check for vista (opened by bigdog)
    defect          core       http://twistedmatrix.com/trac/ticket/2881

[#2896] FilePath.exists gives results inconsistent with FilePath.isdir (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2896

                    ===== Normal =====
[#2883] Remove attributes and methods from IReporter that imply text output (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2883

[#2884] Tool to update / generate NEWS file (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2884

[#2886] Need good code for building Twisted release tarballs. (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2886

[#2887] Automated release announcement (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2887

[#2888] Automate uploading tarballs to TMRC (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2888

[#2889] Automate updating the downloads page and the front page when a new release happens (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2889

[#2890] Automate updating the howtos on the twistedmatrix web site (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2890

[#2891] Automate updating the API docs on the twistedmatrix web site (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2891

[#2892] Holistic release automation tool (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2892

[#2894] twisted.test.test_defer.DeferredTestCase.testMaybeDeferred should be faster and four different tests (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2894

[#2895] proxyForInterface should make it possible to specify the attribute name that the wrapped object is assigned to (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2895

[#2901] proxyForInterface should allow upcalls (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2901

[#2902] bad flag value in twisted.conch.ssh.filetransfer (opened by mmoskwa)
    defect          conch      http://twistedmatrix.com/trac/ticket/2902

[#2903] Clean up warnings in twisted.trial tests (opened by jml) (CLOSED, wontfix)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2903

[#2904] assertWarns doesn't handle duplicate warnings properly (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/2904

[#2905] ReverseProxyResource adds an extra '/' which confuses the backend web server (opened by trohed)
    defect          web        http://twistedmatrix.com/trac/ticket/2905

[#2907] "./setup.py install --prefix=relative/path" behaves surprisingly (opened by zooko)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2907

                    ===== Low =====
[#2900] Provide a way to run a series of tests without restarting the reactor (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2900



Closed Bugs
______________________
                    ===== Highest =====
[#2882] test_process hanging on vista slave (popup)- (opened by bigdog, closed by bigdog, )
    defect          core       http://twistedmatrix.com/trac/ticket/2882

[#2857] test_stdio doesn't correctly pass the reactor to subprocesses (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2857

[#2893] assertEqual is hard to read. (opened by jml, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2893

[#2897] Deprecate visiting test (opened by jml, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2897

[#2862] [PATCH] Tiny doc tweak for twisted.protocols.amp (opened by dripton, closed by jml, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2862

[#2899] addCleanup should run even if setUp fails. (opened by jml, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2899

[#1264] twisted.vfs.test.test_ftp is enough to drive a sane man mad (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1264

[#2598] Monkey-patching support code (opened by jml, closed by jml, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2598

[#2180] FilesystemLock needs a method that defers until it can acquire a lock (opened by wsanchez, closed by dreid, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2180

[#2898] Add ITestCase for Trial tests (opened by jml, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2898

                    ===== High =====
[#1781] Remove TestCase._wait from Trial (opened by jml, closed by jml, wontfix)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1781

                    ===== Normal =====
[#2785] twisted.trial.itrial.IReporter is missing addSkip (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2785

[#2735] twisted.vfs.adapters.ftp._FileToConsumerAdapter doesn't fully implement IConsumer (opened by therve, closed by therve, fixed)
    defect          vfs        http://twistedmatrix.com/trac/ticket/2735

[#2903] Clean up warnings in twisted.trial tests (opened by jml, closed by jml, wontfix)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2903

[#1950] PyUnitTestCase.id is redundant and should be removed (opened by glyph, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1950



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2907] "./setup.py install --prefix=relative/path" behaves surprisingly (since 2007-11-16 18:21:31).

Mean open ticket age: 562 days, 4:41:38.242047.
Median: 457 days, 23:55:53.456813.
Standard deviation: 411 days, 11:59:35.412533.
Interquartile range: 509 days, 1:40:22.

Mean time between ticket creation and ticket resolution: 124 days, 23:46:42.342090.
Median: 15 days, 13:27:30.
Standard deviation is 228 days, 8:13:18.325244.
The interquartile range is 136 days, 12:10:27.

Mean time spent in review: 68 days, 13:01:08.836530.
Median: 3 days, 20:59:56.
Standard deviation: 156 days, 6:25:19.237999.
Interquartile range: 29 days, 3:11:52.

Mean number of times a ticket is reviewed: 2.0623655914.
Median: 1
Standard deviation: 1.73960284545.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    13 unique ticket reporters
    5 unique ticket reviewers
    7 unique ticket resolvers
In the last 24 weeks,
    64 unique ticket reporters
    15 unique ticket reviewers
    14 unique ticket resolvers
In the last 48 weeks,
    149 unique ticket reporters
    17 unique ticket reviewers
    24 unique ticket resolvers




From zooko at zooko.com  Sun Nov 18 17:58:34 2007
From: zooko at zooko.com (zooko)
Date: Sun, 18 Nov 2007 16:58:34 -0800
Subject: [Twisted-Python] Hack Fest!  Tomorrow, Monday,
	San Francisco.  Last call.
Message-ID: <B558DE46-8A9A-40E9-AE62-046E60933795@zooko.com>

Folks:

You are invited to attend a Hack Fest at Allmydata Headquarters in  
San Francisco.  The date is tomorrow, Monday, Nov 19, between the end  
of Business Hours and midnight.

My earlier message [1] invited people to bring source code to  
demonstrate live on a projector, preferably open-source and/or peer- 
to-peer source code.  Also, you are welcome to come without source  
code, in order to socialize, eat yummy Goat Hill Pizza (Potrero  
Hill), see other people's open-source and/or peer-to-peer source code  
demonstrated, etc.

How does one demonstrate source code?  Well, we envision having two  
projector screens, one which shows the source code, and one which  
shows the resulting application running, and we see how the behavior  
of the app changes when we change the source code.  Perhaps this will  
lead to submitting patches to our favorite open source projects or  
something.

But in any case, there will definitely be pizza and beer.

Please e-mail zooko at zooko.com.

Regards,

Zooko

[1] http://lists.zooko.com/pipermail/p2p-hackers/2007-November/ 
001441.html




From chezgi at yahoo.com  Sun Nov 18 23:53:58 2007
From: chezgi at yahoo.com (abbas ali chezgi)
Date: Sun, 18 Nov 2007 22:53:58 -0800 (PST)
Subject: [Twisted-Python] thread performance under twisted
Message-ID: <120835.86434.qm@web51002.mail.re2.yahoo.com>

hello dears,
i am working on a VPN project using twisted.
the main section for tunneling data written in C API for performance.
but handshaking is done in twisted and when client authenticated one thread 
is created using deferedToThread and all data encryption and exchange will be done in
C code.
my problem is performance.
how can i tune system (twisted core and threads) to allow created threads run
with high priority than twisted core?
how can i profile my threads?

with best regards,
chezgi


================================= 
chezgi,abbas ali 
MSC student at computer Architecture 
Department of Electronic and Computer Engineering
Isfahan University of Technology 
Isfahan Iran
email: 
chezgi(AT)ec(DOT)iut(DOT)ac(DOT)ir 
=================================
       
---------------------------------
Be a better pen pal. Text or chat with friends inside Yahoo! Mail. See how.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071118/817c6ad9/attachment.html>

From mark.lachesis at gmail.com  Mon Nov 19 01:44:08 2007
From: mark.lachesis at gmail.com (Mark L)
Date: Mon, 19 Nov 2007 19:44:08 +1100
Subject: [Twisted-Python] Confused about threads
Message-ID: <fe156dd0711190044y602711e3se987d279b228c54c@mail.gmail.com>

Hi,

I'm new to twisted, and have read a few pages, but things are going
over my head and I'm not finding the answer I need.

What I want to do is create a class in my python application which
manages network activity and starts the reactor.  I want to run that
class as a thread.

I've done all of this, except when I get to reactor.run().  Then it
says that signal must be started in main.  If I move the reactor.run()
into main then it starts up fine - but it doesn't run in a separate
thread.  I want the network running in the background in a separate
thread so I can manage other server tasks distinctly.

I realise this is probably a critical misunderstanding on my part of
how twisted is meant to be used - so I'd appreciate any clarifications
on this point that I wasn't able to find in the documentation.  Which,
again, is probably just a critical failure of mine to find.

Thanks,
Mark



From exarkun at divmod.com  Mon Nov 19 05:45:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 19 Nov 2007 07:45:21 -0500
Subject: [Twisted-Python] thread performance under twisted
In-Reply-To: <120835.86434.qm@web51002.mail.re2.yahoo.com>
Message-ID: <20071119124521.8162.1941196275.divmod.quotient.37560@ohm>

On Sun, 18 Nov 2007 22:53:58 -0800 (PST), abbas ali chezgi <chezgi at yahoo.com> wrote:
>hello dears,
>i am working on a VPN project using twisted.
>the main section for tunneling data written in C API for performance.
>but handshaking is done in twisted and when client authenticated one thread
>is created using deferedToThread and all data encryption and exchange will be done in
>C code.
>my problem is performance.
>how can i tune system (twisted core and threads) to allow created threads run
>with high priority than twisted core?
>how can i profile my threads?

This is more of a Python question than a Twisted question.  Python doesn't
support thread priorities.  Python has a profiler, but not one which does
anything special with threads.

Jean-Paul



From exarkun at divmod.com  Mon Nov 19 05:48:25 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 19 Nov 2007 07:48:25 -0500
Subject: [Twisted-Python] Confused about threads
In-Reply-To: <fe156dd0711190044y602711e3se987d279b228c54c@mail.gmail.com>
Message-ID: <20071119124825.8162.1171719036.divmod.quotient.37562@ohm>

On Mon, 19 Nov 2007 19:44:08 +1100, Mark L <mark.lachesis at gmail.com> wrote:
>Hi,
>
>I'm new to twisted, and have read a few pages, but things are going
>over my head and I'm not finding the answer I need.
>
>What I want to do is create a class in my python application which
>manages network activity and starts the reactor.  I want to run that
>class as a thread.
>
>I've done all of this, except when I get to reactor.run().  Then it
>says that signal must be started in main.  If I move the reactor.run()
>into main then it starts up fine - but it doesn't run in a separate
>thread.  I want the network running in the background in a separate
>thread so I can manage other server tasks distinctly.

"so I can manage other server tasks distinctly" doesn't make a lot of
sense as a motivation here.  Maybe that's because you don't have the
right idea about how to write servers with Twisted yet, or maybe it's
just because you haven't explained your requirements sufficiently.

>
>I realise this is probably a critical misunderstanding on my part of
>how twisted is meant to be used - so I'd appreciate any clarifications
>on this point that I wasn't able to find in the documentation.  Which,
>again, is probably just a critical failure of mine to find.

It's possible to run the reactor in a different thread, but the reason
to do so is usually that you already have a second mainloop which you
can't easily integrate with the reactor's mainloop.  In other cases, you
can typically accomplish whatever you need without starting any threads.

Jean-Paul



From sipickles at hotmail.com  Mon Nov 19 06:10:38 2007
From: sipickles at hotmail.com (Simon Pickles)
Date: Mon, 19 Nov 2007 13:10:38 +0000
Subject: [Twisted-Python] Confused about threads
In-Reply-To: <fe156dd0711190044y602711e3se987d279b228c54c@mail.gmail.com>
References: <fe156dd0711190044y602711e3se987d279b228c54c@mail.gmail.com>
Message-ID: <BAY114-DAV3C86D031E03CC20779158BE7E0@phx.gbl>

I certainly don't use the twisted framework for my whole application, 
just the  networking.

For instance, I have an app which is a server to many clients, but also 
a client itself to another server, in order to pass system information. 
Therefore my code looks something like this pseudocode:

    #main thread
    reactor.listenTCP(serverPort, myFactory(max_clients = 0))
    reactor.connectTCP(otherServerHost, otherServerPort, myClientFactory())
    myProcessingThread().start()
    reactor.run()
 
myProcessingThread is a class inheriting from Threading, and processes 
messages stored in queues by the Twisted thread, with the correct 
locking of course (Queues).

I don't doubt that there are many ways to use twisted more. This works 
for me, and allows me to get on with the meat of the project.

hth

Si
 

Mark L wrote:
> Hi,
>
> I'm new to twisted, and have read a few pages, but things are going
> over my head and I'm not finding the answer I need.
>
> What I want to do is create a class in my python application which
> manages network activity and starts the reactor.  I want to run that
> class as a thread.
>
> I've done all of this, except when I get to reactor.run().  Then it
> says that signal must be started in main.  If I move the reactor.run()
> into main then it starts up fine - but it doesn't run in a separate
> thread.  I want the network running in the background in a separate
> thread so I can manage other server tasks distinctly.
>
> I realise this is probably a critical misunderstanding on my part of
> how twisted is meant to be used - so I'd appreciate any clarifications
> on this point that I wasn't able to find in the documentation.  Which,
> again, is probably just a critical failure of mine to find.
>
> Thanks,
> Mark
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>   





From dfarrell at mypublisher.com  Mon Nov 19 16:03:07 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Mon, 19 Nov 2007 18:03:07 -0500
Subject: [Twisted-Python] Using twisted with logging.handlers.sockethandler
Message-ID: <318F79422ADC5041A93343721F84474D3B9314@exchange.mypublisher.local>

Hi all,

 

I've been using Python for awhile, but am new to Twisted. I'm trying to
build a server to handle logging messages from multiple Python processes
via the logging.handlers.sockethandler system. I've got some ideas how
to go about it, but would like some guidance if anyone has some. 

 

One thing I'd like to know is how to handle messages that don't arrive
all at once in the dataReceived() method of the protocol module.

 

Thanks,

Doug

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071119/df4e9932/attachment.html>

From pbastov at gmail.com  Mon Nov 19 21:37:10 2007
From: pbastov at gmail.com (Pavel)
Date: Tue, 20 Nov 2007 10:37:10 +0600
Subject: [Twisted-Python] Windows Communication Foundation
Message-ID: <eaf39e680711192037i2beab08ft27157d5ff57ef795@mail.gmail.com>

Hi all,

has anyone developed services with Twisted that are to be consumed by
clients based on Windows Communication Foundation?

Paul



From theatilla at gmail.com  Tue Nov 20 06:30:50 2007
From: theatilla at gmail.com (Atilla)
Date: Tue, 20 Nov 2007 14:30:50 +0100
Subject: [Twisted-Python] Using twisted with logging.handlers.sockethandler
In-Reply-To: <318F79422ADC5041A93343721F84474D3B9314@exchange.mypublisher.local>
References: <318F79422ADC5041A93343721F84474D3B9314@exchange.mypublisher.local>
Message-ID: <b53c932d0711200530n32efc226l8ccd00c4d1f879ba@mail.gmail.com>

Correct me if I'm not explaining it correct, but:

dataReceived makes no guarantees how mcuh data you'll get - it depends
on many factors, buffers on the sending and the receiving side, the
size of TCP chunks (if it's TCP), etc.  As stated in the docstrings
for the method - you should make sure your methods works for chunks of
various size, down to the minimum that can come.

What I do is - I model it as a small state-machine that keeps a local
buffer of the data (with an upper bound), trying to construct a
message that's meaningful for my protocol, and when it does - it calls
a method that expects a full protocol packet, that I handle from there
on.

For a good example you can take a look at the lineReceived
implementation, from the actual twisted package. The code and the
docstrings are amazingly useful that way.



From raja at aonic.net  Wed Nov 21 01:03:29 2007
From: raja at aonic.net (Raja Kapur)
Date: Wed, 21 Nov 2007 03:03:29 -0500
Subject: [Twisted-Python] Problem setting up epollreactor on Leopard
In-Reply-To: <4d3038af0711170435v599dca71qbe6ca497ddc3c425@mail.gmail.com>
References: <4d3038af0711161924i4028079bt255789590727f25c@mail.gmail.com>
	<368574aa0711162127t7d3e48f9u51bac00208317b95@mail.gmail.com>
	<4d3038af0711170435v599dca71qbe6ca497ddc3c425@mail.gmail.com>
Message-ID: <4d3038af0711210003l54164308o385fb2800948928@mail.gmail.com>

Just an update to people who might find this in the future. I was able
to get PyKqueue 1.3 (for kqreactor) working on Leopard using the
setup.py script from here:
http://d.hatena.ne.jp/perezvon/20070219/1171890423 and applying the
patch from http://twistedmatrix.com/documents/current/api/twisted.internet.kqreactor.html

setup.py:

# -*- coding: utf-8 -*-
# setup.py
from distutils.core import setup, Extension

setup(
    name="kqsyscall",
    version="1.3",
    ext_modules=[
        Extension("kqsyscall", sources=["kqsyscallmodule.c"])
    ]
)

On 11/17/07, Raja Kapur <raja at aonic.net> wrote:
> Well that explains it ;) and apparently the kqreactor only supports
> FreeBSD at the moment.
>
> Thank you
>
> On 11/17/07, Drew Smathers <drew.smathers at gmail.com> wrote:
> >
> >
> > > I'm having trouble setting up Twisted with epollreactor on Mac OS X
> > > Leopard, I downloaded the Twisted 2.5.0 tarball which contained all
> > > the components of Twisted.
> >
> > So far as I know, epoll only exists on Linux ... so yeah, you won't have
> > much luck with that.
> >  -Drew
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>



From lac at openend.se  Wed Nov 21 08:48:20 2007
From: lac at openend.se (Laura Creighton)
Date: Wed, 21 Nov 2007 16:48:20 +0100
Subject: [Twisted-Python] This showed up in pygame-users@seul.org
Message-ID: <200711211548.lALFmKTW019762@theraft.openend.se>


Anybody want to come explain twisted to somebody who just wants
to network his game?  Alas pygame-users is not a mailman mailing
list, and Activestate seems to have stopped archiving it in August,
so there is no way I know of to read the whole thread.


Laura

------- Forwarded Message

Return-Path: owner-pygame-users at seul.org
Delivery-Date: Wed Nov 21 14:37:43 2007
Return-Path: <owner-pygame-users at seul.org>
To: pygame-users at seul.org
Subject: Re: [pygame] Networking?
In-Reply-To: <6e04113a0711210522s6b4d629y2c6be6b4a13fa0f3 at mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_9402_16396364.1195651869700"


hey, please forgive me for any stupid observations.....it's just
that I've been avoiding testing Twisted because people seem
to be of the opinion that it takes over the main loop. And they
like having control over that.

Can the main reactor be manipulated in such a way that it is
not the main loop?



------- End of Forwarded Message




From dfarrell at mypublisher.com  Wed Nov 21 09:43:14 2007
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Wed, 21 Nov 2007 11:43:14 -0500
Subject: [Twisted-Python] Using twisted with logging.handlers.sockethandler
In-Reply-To: <b53c932d0711200530n32efc226l8ccd00c4d1f879ba@mail.gmail.com>
Message-ID: <318F79422ADC5041A93343721F84474D3B9336@exchange.mypublisher.local>

Thanks for the tip, I'll take a look at the lineReceived method, I think
that will give me a good idea about how to handle the protocol I'm
thinking about.


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Atilla
Sent: Tuesday, November 20, 2007 8:31 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Using twisted with
logging.handlers.sockethandler

Correct me if I'm not explaining it correct, but:

dataReceived makes no guarantees how mcuh data you'll get - it depends
on many factors, buffers on the sending and the receiving side, the
size of TCP chunks (if it's TCP), etc.  As stated in the docstrings
for the method - you should make sure your methods works for chunks of
various size, down to the minimum that can come.

What I do is - I model it as a small state-machine that keeps a local
buffer of the data (with an upper bound), trying to construct a
message that's meaningful for my protocol, and when it does - it calls
a method that expects a full protocol packet, that I handle from there
on.

For a good example you can take a look at the lineReceived
implementation, from the actual twisted package. The code and the
docstrings are amazingly useful that way.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From darran at edmstudio.com  Wed Nov 21 20:10:12 2007
From: darran at edmstudio.com (Darran Edmundson)
Date: Wed, 21 Nov 2007 20:10:12 -0700
Subject: [Twisted-Python] Seeking freelance twisted programmer to work on
	museum exhibit ...
Message-ID: <4744F314.9040604@edmstudio.com>


We are looking for a friendly and talented Twisted programmer to work 
part-time on an interactive museum exhibit.

Some background.  "On April 29, 1903, at 4:10 a.m., 82 million tonnes of 
limestone crashed from the summit of Turtle Mountain and buried a 
portion of the sleeping town of Frank [Alberta] ... The primary cause of 
the Frank Slide was the mountain's unstable structure."  Here's a good 
aerial photo of the mountain and slide debris:
    http://ess.nrcan.gc.ca/rrnh-rran/images/proj1_fig2.jpg

Our exhibit, due to be deployed in January at the Frank Slide 
Interpretive Centre (white building adjacent to debris in above image), 
is tasked with the reason for the collapse.  To do this, we have opted 
to use a virtual time-line with a 65" screen moving electronically along 
a 14ft (4m) industrial slide track.  The visitor, kept back from the 
screen mechanism by a parallel guard rail, controls the screen position 
via a slideable block.  The content, synced with the screen position, 
shows the 150 million-year formation of the mountain and its eventual 
collapse in 1903.

The Twisted work involves ethernet interfacing with a Gemini GV6K 
hardware controller and PB communication with the pyObjC-based Quicktime 
display code.  (An aside, we are also interested in logging visitor 
usage to a local or remote database.)  As my Twisted experience is 
limited, I can only guess that we are looking at 40-80 hours of work in 
total.  While the schedule is flexible, we do need to start coding ASAP 
to meet our first prototype deadline.  Work is remote, connecting by VPN 
to the hardware in question.  As the deployment platform is OS X, 
ideally the programmer would be using a Mac ... this isn't critical.

If you're interested, please contact me directly (darran at edmstudio.com) 
with your resume/experience, hourly rate, and availability.

Cheers,
Darran.

-- 
Darran Edmundson [darran at edmstudio.com]
http://www.edmstudio.com



From Mark.Papazyan at gmx.de  Thu Nov 22 01:27:19 2007
From: Mark.Papazyan at gmx.de (Mark Papazyan)
Date: Thu, 22 Nov 2007 09:27:19 +0100
Subject: [Twisted-Python] connectionLost issue
Message-ID: <20071122082719.126110@gmx.net>

Hello,

i'm currently writing distributed system consisted of several components,
which have both input and output ports. To solve the initial startup
problem i simply use the retry approach: as soon as my components are
initialized the try to connect to their peers in a loop.
The problem is that the connectionLost function is not called for each
Factories independently, but stops callbacking as soon as my component
receives an incoming connection (although, the function belongs to the
class responsible for the outgoing connection). Thus, the component
assumes it has found all its peers, although only incoming connection is
initiated, not the outgoing. Is there a way to tell the framework to
handle the connection lost events for each Factory/Protocol objects
separately?

The code is trivial:


class InputSession(Factory):

   def start(self):
       reactor.listenTCP(self.port, self)

   def startedConnecting(self, connector):
       print 'Started to connect.'


   def buildProtocol(self, addr):
       print 'Connected.'
       self.connector = InputConnector(self)
       return self.connector


   def clientConnectionLost(self, connector, reason):
       print 'Lost connection. Reason:', reason


   def clientConnectionFailed(self, connector, reason):
       print 'Connection failed. Reason:', reason

################################################################################

class InputConnector(Protocol):

   def __init__(self, session):
       self.session = session

   def connectionMade(self):
       print "Connection established"

   def connectionLost(self, reason):
       print "Connection lost"

   def dataReceived(self, input_stream):
       print "Receiving: " + input_stream



################################################################################

class OutputConnector (Protocol):

   def __init__(self, session):
       self.session = session


   def sendStream(self, stream):
       self.transport.writeSomeData(stream)

   def clientConnectionLost(self, connector, reason):
       print 'Lost connection.'# Reason:', reason



################################################################################

class OutputSession(ClientFactory):

   def start(self):
       reactor.connectTCP(self.host, self.port, self)


   def buildProtocol(self, addr):
       print 'Connected.'
       self.curr_tries = 0
       self.connector = OutputConnector(self)

       return self.connector

   def clientConnectionLost(self, connector, reason):
       print 'Lost connection.'# Reason:', reason

       self.curr_tries = self.curr_tries + 1

       print "Trying to reconnect: %d" % self.curr_tries
       connector.connect()

   def clientConnectionFailed(self, connector, reason):
       print 'Connection failed.'# Reason:', reason

       self.curr_tries = self.curr_tries + 1

       connector.connect()


Best Regards,
Mark Papazyan
-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail



From itamar at itamarst.org  Fri Nov 23 09:50:51 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 23 Nov 2007 11:50:51 -0500
Subject: [Twisted-Python] connectionLost issue
In-Reply-To: <20071122082719.126110@gmx.net>
References: <20071122082719.126110@gmx.net>
Message-ID: <1195836652.1197.8.camel@localhost.localdomain>

On Thu, 2007-11-22 at 09:27 +0100, Mark Papazyan wrote:

> Is there a way to tell the framework to
> handle the connection lost events for each Factory/Protocol objects
> separately?

I'm not sure what you're doing wrong, but connectionLost will only be
called on the protocol that actually had its connection lost... not on
others.




From exarkun at divmod.com  Fri Nov 23 10:05:35 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 23 Nov 2007 12:05:35 -0500
Subject: [Twisted-Python] connectionLost issue
In-Reply-To: <20071122082719.126110@gmx.net>
Message-ID: <20071123170535.8162.1483806774.divmod.quotient.39061@ohm>

On Thu, 22 Nov 2007 09:27:19 +0100, Mark Papazyan <mark.papazyan at gmx.de> wrote:
>Hello,
>
> [snip]
>
>class OutputConnector (Protocol):
>
>   def __init__(self, session):
>       self.session = session
>
>
>   def sendStream(self, stream):
>       self.transport.writeSomeData(stream)
>
>   def clientConnectionLost(self, connector, reason):
>       print 'Lost connection.'# Reason:', reason
>
>

I don't know if this is related to your question, but "writeSomeData"
is not the correct method to call on the transport in order to send
bytes.  Instead, use the "write" method.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Nov 24 22:05:04 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Nov 2007 05:05:04 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1195967104.28.944067151@twistedmatrix.com

Bug summary
______________________
Summary for 2007-11-18 through 2007-11-25
Bugs opened: 19    Bugs closed: 11  Total open bugs: 1051 (+8)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +3  |Highest:  -4          |Conch:               +1  
|Enhancement:  +5  |High:     +3          |Core:                +5  
|Task:         +1  |Normal:   +9          |Pb:                  +1  
                   |Low:      +1          |Release Management:  +3  
                                          |Trial:               +1  
                                          |Web:                 -2  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2908] twistd report-profile option doesn't work anywore (opened by therve) (CLOSED, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2908

[#2920] Support for Decimal in twisted.spread.jelly (opened by james at tri-tech.com)
    enhancement     pb         http://twistedmatrix.com/trac/ticket/2920

[#2921] twistd profiling options needs to be tested (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2921

[#2885] Automate version updating (goodly) (opened by radix) (CLOSED, fixed)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2885

                    ===== High =====
[#2912] manhole_ssh emits warnings on import (opened by glyph)
    defect          core       http://twistedmatrix.com/trac/ticket/2912

[#2913] twisted.internet.tcp.Port.startListening after stopListening rebinds the port but doesn't make it usable again (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2913

[#2924] conch gmpy support doesn't work anymore (opened by therve)
    defect          conch      http://twistedmatrix.com/trac/ticket/2924

                    ===== Normal =====
[#2909] XXX Comment Policy (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2909

[#2910] Provide tests for the ITestCase and IReporter interfaces and test all implementations against those (opened by jml)
    task            trial      http://twistedmatrix.com/trac/ticket/2910

[#2911] assertWarns demands that you set the stacklevel one higher than is helpful (opened by jml)
    defect          trial      http://twistedmatrix.com/trac/ticket/2911

[#2914] Memcache server (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2914

[#2916] Tests should create their own temporary working directories, rather than relying on _trial_temp (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2916

[#2917] intermittent twisted.test.test_pbfailure.PBFailureTest.test_deferredSecurity failure on OS X (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2917

[#2918] intermittent twisted.test.test_ssl.SpammyTLSTestCase.testUnTLS failure on OS X (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2918

[#2919] Provide easily testable API for deprecating other APIs (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2919

[#2922] web.ProxyClientFactory does not close request after sending error message (opened by lewq) (CLOSED, duplicate)
    defect          web        http://twistedmatrix.com/trac/ticket/2922

[#2923] admin/release-twisted expects zope tarballs under old names (opened by zooko)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2923

[#2925] Need first-class release documentation generation code (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2925

                    ===== Low =====
[#2915] Provide way of incrementing patch number with date-based versioning (opened by jml)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2915



Closed Bugs
______________________
                    ===== Highest =====
[#2506] Memcached client (opened by therve, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2506

[#2908] twistd report-profile option doesn't work anywore (opened by therve, closed by therve, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2908

[#942 ] plugin unit tests should use directories beneath _trial_temp, not twisted/plugins/ (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/942

[#2885] Automate version updating (goodly) (opened by radix, closed by jml, fixed)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2885

[#2885] Automate version updating (goodly) (opened by radix, closed by jml, fixed)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2885

[#2883] Remove attributes and methods from IReporter that imply text output (opened by jml, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2883

[#238 ] Write tests for twisted.web.proxy (opened by itamarst, closed by therve, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/238

[#2739] explain, document, and test trial's compatibility requirements for other test tools (opened by glyph, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2739

[#2803] findFailure fails to find the correct failure in a more complicated case (opened by Peaker, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2803

                    ===== Normal =====
[#2905] ReverseProxyResource adds an extra '/' which confuses the backend web server (opened by trohed, closed by therve, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2905

[#2922] web.ProxyClientFactory does not close request after sending error message (opened by lewq, closed by therve, duplicate)
    defect          web        http://twistedmatrix.com/trac/ticket/2922



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2925] Need first-class release documentation generation code (since 2007-11-23 22:55:27).

Mean open ticket age: 562 days, 0:39:32.376206.
Median: 458 days, 9:54:02.964218.
Standard deviation: 412 days, 18:57:38.634451.
Interquartile range: 514 days, 15:06:00.

Mean time between ticket creation and ticket resolution: 125 days, 22:53:00.623298.
Median: 15 days, 13:27:30.
Standard deviation is 231 days, 1:56:49.008256.
The interquartile range is 137 days, 14:35:31.

Mean time spent in review: 68 days, 3:02:44.987207.
Median: 3 days, 20:59:56.
Standard deviation: 157 days, 3:28:53.616287.
Interquartile range: 29 days, 1:56:41.

Mean number of times a ticket is reviewed: 2.08033826638.
Median: 1
Standard deviation: 1.75626161316.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    15 unique ticket reporters
    5 unique ticket reviewers
    7 unique ticket resolvers
In the last 24 weeks,
    61 unique ticket reporters
    15 unique ticket reviewers
    13 unique ticket resolvers
In the last 48 weeks,
    147 unique ticket reporters
    17 unique ticket reviewers
    22 unique ticket resolvers




From jml at mumak.net  Sun Nov 25 22:20:52 2007
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 26 Nov 2007 16:20:52 +1100
Subject: [Twisted-Python] Re: glyph changed u'proxyForInterface should allow
	upcalls'
In-Reply-To: <E1IwW4F-0004Ym-QC@cube.twistedmatrix.com>
References: <E1IwW4F-0004Ym-QC@cube.twistedmatrix.com>
Message-ID: <d06a5cd30711252120k222e889cu206408cd7ba3ad48@mail.gmail.com>

On Nov 26, 2007 3:59 PM,  <trac at twistedmatrix.com> wrote:
> Ticket u'proxyForInterface should allow upcalls' changed by glyph <glyph at divmod.com>:
>
> In my experience, once one has a failing TODO test, the rest is easy, and there's no point in creating a second branch :).
>

Which is why we have 19 failing TODOs :)



From k_r_a_j_kumar at yahoo.co.in  Mon Nov 26 22:20:35 2007
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Tue, 27 Nov 2007 10:50:35 +0530 (IST)
Subject: [Twisted-Python] Transfering a file through xml sockets
Message-ID: <907187.68093.qm@web8710.mail.in.yahoo.com>

Hi,
I have a server-client application(by using twisted),communicating through xml sockets.
can any one help me in transferring a file from server to client through xml sockets? At lest some references to how to use  xml sockets in transferring data/files.
Thank you in advance.

RAJ.....




      Chat on a cool, new interface. No download required. Go to http://in.messenger.yahoo.com/webmessengerpromo.php
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071127/16d046df/attachment.html>

From exarkun at divmod.com  Tue Nov 27 06:10:28 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Nov 2007 08:10:28 -0500
Subject: [Twisted-Python] Transfering a file through xml sockets
In-Reply-To: <907187.68093.qm@web8710.mail.in.yahoo.com>
Message-ID: <20071127131028.8162.639463585.divmod.quotient.40406@ohm>

On Tue, 27 Nov 2007 10:50:35 +0530 (IST), Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>Hi,
>I have a server-client application(by using twisted),communicating through xml sockets.
>can any one help me in transferring a file from server to client through xml sockets? At lest some references to how to use  xml sockets in transferring data/files.

What is an "xml socket"?

Jean-Paul



From theatilla at gmail.com  Tue Nov 27 11:24:28 2007
From: theatilla at gmail.com (Atilla)
Date: Tue, 27 Nov 2007 19:24:28 +0100
Subject: [Twisted-Python] Transfering a file through xml sockets
In-Reply-To: <20071127131028.8162.639463585.divmod.quotient.40406@ohm>
References: <907187.68093.qm@web8710.mail.in.yahoo.com>
	<20071127131028.8162.639463585.divmod.quotient.40406@ohm>
Message-ID: <b53c932d0711271024o6f500e98ve25ee877a613e3a3@mail.gmail.com>

Are you referring to ActionScript's XMLSocket or just some generic TCP
connection that expects XML to be transferred over it? Are you
communicating with something existing and if not - why do you need to
use XML-based communication to transfer a file?

Unless there is some specified format, you can transfer it any way you
find convenient, just make sure you think of the corner cases and the
size of the file. Some XML parsers will not be happy if they have
elements with huge inner data nodes. I guess encapsulating all the
file's details in XML elements would be enough. Send the filename,
file size, a digest of the file for verification and/or debugging,
(the usual md5 should do the trick) and the file content itself,
encoded in a convenient way - say with base64. Mind that this will
have additional overhead when transferring the file.



From lemontea_rocks at yahoo.com  Tue Nov 27 17:54:26 2007
From: lemontea_rocks at yahoo.com (lemon tea)
Date: Tue, 27 Nov 2007 16:54:26 -0800 (PST)
Subject: [Twisted-Python] twisted framework for multiple application server
	herd?
Message-ID: <528067.28136.qm@web52210.mail.re2.yahoo.com>

let's assume that we are building a new Wikimedia-style service where (1) updates to articles will happen far more often and (2) access will be required via various protocols, not just HTTP. In this new service the application server looks like it will be a bottleneck. From a software point of view our application will turn into too much of a pain to add nontraditional servers (e.g., for access via cell phones, where the cell phones are frequently broadcasting their GPS locations). From a systems point of view the response time looks like it will too slow because the Wikimedia application server is a central bottleneck.


To solve this lets  look at a different architecture called an "application server herd", where the multiple application servers communicate directly to each other as well as via the core database and caches. The interserver communications are designed for rapidly-evolving data (e.g., GPS-based locations) whereas the database server will still be used for more stable data that is less-often accessed or that requires transactional semantics. For example, you might have four application servers A, B, C, D such that A talks with B and C, and B and C talk with D, so that if a user's cell phone posts updates about its location to any one of the application servers then the other servers will learn of the change after one or two interserver transmissions, without having to talk to the database.
 how well Twisted is suited for this kind of application and how well will it  really work in practice. In particular,  how easy is it to write applications using Twisted, and how maintainable and reliable those applications will be?what might be the pros n cons of using twisted.
 any comments?

cheers
Pam
       
---------------------------------
Be a better pen pal. Text or chat with friends inside Yahoo! Mail. See how.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071127/e87f4888/attachment.html>

From adelagon at gmail.com  Tue Nov 27 18:21:46 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 28 Nov 2007 09:21:46 +0800
Subject: [Twisted-Python] Transfering a file through xml sockets
In-Reply-To: <b53c932d0711271024o6f500e98ve25ee877a613e3a3@mail.gmail.com>
References: <907187.68093.qm@web8710.mail.in.yahoo.com>
	<20071127131028.8162.639463585.divmod.quotient.40406@ohm>
	<b53c932d0711271024o6f500e98ve25ee877a613e3a3@mail.gmail.com>
Message-ID: <7a01f6c00711271721p7f1ecfdaqd4bc0a4747a485d0@mail.gmail.com>

He might be talking about jabber xmlstream. Yeah I do agree encapsulating
the file in an xml could introduce overhead (I remember doing this in my
former company where the file in encoded in base64). Why don't you just
transfer the file via http/ftp? Send an xml to the client containing the
address of the file and let the client application do the fetching.

On Nov 28, 2007 2:24 AM, Atilla <theatilla at gmail.com> wrote:

> Are you referring to ActionScript's XMLSocket or just some generic TCP
> connection that expects XML to be transferred over it? Are you
> communicating with something existing and if not - why do you need to
> use XML-based communication to transfer a file?
>
> Unless there is some specified format, you can transfer it any way you
> find convenient, just make sure you think of the corner cases and the
> size of the file. Some XML parsers will not be happy if they have
> elements with huge inner data nodes. I guess encapsulating all the
> file's details in XML elements would be enough. Send the filename,
> file size, a digest of the file for verification and/or debugging,
> (the usual md5 should do the trick) and the file content itself,
> encoded in a convenient way - say with base64. Mind that this will
> have additional overhead when transferring the file.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071128/6d868594/attachment.html>

From broehl at gmail.com  Tue Nov 27 20:56:26 2007
From: broehl at gmail.com (Bernie Roehl)
Date: Tue, 27 Nov 2007 22:56:26 -0500
Subject: [Twisted-Python] Two main loops, revisited
Message-ID: <1045831b0711271956o340b1fa2kbe9d10683ce547be@mail.gmail.com>

Hi everyone

So, I've been trying the suggestion that was put forward when I asked my
earlier question about having two main loops in my game (one for the
rendering engine, one for Twisted).

Basically, what I'm doing is this:

def renderFrame():
    ogreLock.acquire()
    ogre.WindowEventUtilities.messagePump()
    root.renderOneFrame()
    ogreLock.release()

renderTask = task.LoopingCall(renderFrame)
renderTask.start(0.01, False)
reactor.run()

I'm using the Python implementation of the Project Darkstar client, which is
built around Twisted.

Unfortunately, I'm running into two problems.

The first is that I appear to be losing messages, which makes me wonder if
Twisted isn't getting enough cycles and is somehow missing incoming data.

The second is that my application hangs randomly.  When I call renderFrame()
in a simple loop (no Twisted), everything is rock-solid.

Has anyone done anything like this before (realitime 3D application with
Twisted), or am I breaking new ground here?

Any suggestions would be much appreciated...


-- 
  Bernie Roehl
  Mail: broehl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071127/055c77b2/attachment.html>

From nitro at dr-code.org  Tue Nov 27 21:12:37 2007
From: nitro at dr-code.org (Nitro)
Date: Wed, 28 Nov 2007 05:12:37 +0100
Subject: [Twisted-Python] Two main loops, revisited
In-Reply-To: <1045831b0711271956o340b1fa2kbe9d10683ce547be@mail.gmail.com>
References: <1045831b0711271956o340b1fa2kbe9d10683ce547be@mail.gmail.com>
Message-ID: <op.t2hhzcxpz3pzfc@nitrogenycs2>

Am 28.11.2007, 04:56 Uhr, schrieb Bernie Roehl <broehl at gmail.com>:

> Hi everyone
>
> So, I've been trying the suggestion that was put forward when I asked my
> earlier question about having two main loops in my game (one for the
> rendering engine, one for Twisted).
>
> Basically, what I'm doing is this:
>
> def renderFrame():
>     ogreLock.acquire()
>     ogre.WindowEventUtilities.messagePump()
>     root.renderOneFrame()
>     ogreLock.release()
>
> renderTask = task.LoopingCall(renderFrame)
> renderTask.start(0.01, False)
> reactor.run()
>
> I'm using the Python implementation of the Project Darkstar client,  
> which is
> built around Twisted.
>
> Unfortunately, I'm running into two problems.
>
> The first is that I appear to be losing messages, which makes me wonder  
> if
> Twisted isn't getting enough cycles and is somehow missing incoming data.
>
> The second is that my application hangs randomly.  When I call  
> renderFrame()
> in a simple loop (no Twisted), everything is rock-solid.
>
> Has anyone done anything like this before (realitime 3D application with
> Twisted), or am I breaking new ground here?

No new ground here, it works with my 3d engine.

> Any suggestions would be much appreciated...

You could try to increase 0.01 to something like 0.5 and see if this helps  
the losing messages. I am not really sure how the default twisted reactor  
(i guess on win it's threadedselect) works, but what might be happening is  
that twisted receives some incoming data during your rendering and does  
some kind of processing or whatever. Maybe this is causing random trouble?

-Matthias



From glyph at divmod.com  Tue Nov 27 21:15:50 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 28 Nov 2007 04:15:50 -0000
Subject: [Twisted-Python] twisted framework for multiple application
	server herd?
In-Reply-To: <528067.28136.qm@web52210.mail.re2.yahoo.com>
References: <528067.28136.qm@web52210.mail.re2.yahoo.com>
Message-ID: <20071128041550.21558.696286620.divmod.xquotient.2188@joule.divmod.com>

On 12:54 am, lemontea_rocks at yahoo.com wrote:
>how well Twisted is suited for this kind of application

Super well!
>and how well will it really work in practice.

Super DUPER well!!!
>In particular,  how easy is it to write applications using Twisted,

2 EASY !!!!!! [1]
>and how maintainable and reliable those applications will be?

A billion kajillion megamaintainotrons and a quintillion reliabinos.
>what might be the pros n cons of using twisted.

Pro: Twisted is great!!!!

Con: Twisted is so great, everything else will seem pretty bad after you 
have used it.
>any comments?

In all seriousness, it sounds like your application is pretty well- 
suited to Twisted's problem domain.  I suspect that you could use it and 
be very successful - probably more successful than if you used something 
else.

However, your applications' success, maintainability, ease of 
implementation and time to market depend on thousands of factors, and 
choice of infrastructure can influence some of them but it hardly 
dominates.  Depending on other issues, you could possibly succeed wildly 
while using a terrible environment, writing everything from your own TCP 
stack on up entirely in assembler, or fail horribly while using Twisted 
and doing everything right.

That's compounded by the fact that your questions are both highly 
subjective and only have meaning in relation to other, similar tools - 
and there are a lot of other tools like Twisted, depending on what you 
think Twisted is like.  Is Twisted good?  Yes.  How good?  More good 
than bad.  You're unlikely to get other answers on this list, after all, 
everyone listening here has most likely decided to use Twisted for one 
reason or another.

Do you have specific aspects of Twisted you intend to use, or 
maintenance tasks that you expect to perform?  What would you like us to 
compare it to?  What other technologies are you considering?  Have you 
implemented anything like this before?  Using what infrastructure?  What 
problems did you have?  How did you solve them?  Are you used to working 
with the open source community?

Sorry I couldn't provide a more useful answer, but I hope I've at least 
explained why I couldn't :).

---
[1]: with apologies to Tim and Eric http://www.youtube.com/watch?v 
=qKA3B-eBIAE



From glyph at divmod.com  Tue Nov 27 21:22:10 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 28 Nov 2007 04:22:10 -0000
Subject: [Twisted-Python] Two main loops, revisited
In-Reply-To: <1045831b0711271956o340b1fa2kbe9d10683ce547be@mail.gmail.com>
References: <1045831b0711271956o340b1fa2kbe9d10683ce547be@mail.gmail.com>
Message-ID: <20071128042210.21558.2020694440.divmod.xquotient.2198@joule.divmod.com>

On 03:56 am, broehl at gmail.com wrote:
>The first is that I appear to be losing messages, which makes me wonder 
>if
>Twisted isn't getting enough cycles and is somehow missing incoming 
>data.

As you've explained it here, that should be impossible under any 
circumstances.

Can you provide a minimal, runnable example that demonstrates what you 
mean by "losing messages"?

Given Twisted's pretty awesome track record in this regard, I'd say that 
it's most likely that your networking code is not dealing with different 
levels of latency very well - a common error is treating a chunk sent to 
dataReceived as a single message (it isn't, it's a randomly-sized chunk 
of data received from the network).
>The second is that my application hangs randomly.  When I call 
>renderFrame()
>in a simple loop (no Twisted), everything is rock-solid.

Most likely an event handler registered on a network socket is doing 
something that blocks or takes a long time to complete.  That isn't 
Twisted, that's your application.  Tools like 'strace' can help you 
figure out what's going on.
>Has anyone done anything like this before (realitime 3D application 
>with
>Twisted), or am I breaking new ground here?

Twisted was originally designed for MMORPGs; its very first commercial 
applications were integrated with a real-time 3D engine (a very distant 
cousin of which, I believe, now powers the game Tabula Rasa).  I had no 
issues with it then, and I don't believe anyone who has used it more 
recently has had problems like the ones you're describing.



From k_r_a_j_kumar at yahoo.co.in  Tue Nov 27 21:50:08 2007
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Wed, 28 Nov 2007 10:20:08 +0530 (IST)
Subject: [Twisted-Python] Transfering a file through ActionScript xml sockets
Message-ID: <460030.41244.qm@web8707.mail.in.yahoo.com>

Sorry for not giving clear information in my previous mail.
I am using action script xml sockets.
Now anyone can help me in transferring a file to client using action script xml sockets.
Thank you in advance.

Raj..


On Tue, 27 Nov 2007 10:50:35 +0530 (IST), Raj kumar
 <k_r_a_j_kumar at yahoo.co.in> wrote:
>Hi,
>I have a server-client application(by using twisted),communicating
 through xml sockets.
>can any one help me in transferring a file from server to client
 through xml sockets? At lest some references to how to use  xml sockets in
 transferring data/files.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






      Get the freedom to save as many mails as you wish. To know how, go to http://help.yahoo.com/l/in/yahoo/mail/yahoomail/tools/tools-08.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071128/4eaff2fc/attachment.html>

From douglas at paradise.net.nz  Wed Nov 28 13:33:25 2007
From: douglas at paradise.net.nz (Douglas Bagnall)
Date: Thu, 29 Nov 2007 09:33:25 +1300
Subject: [Twisted-Python] Transfering a file through ActionScript xml
	sockets
In-Reply-To: <460030.41244.qm@web8707.mail.in.yahoo.com>
References: <460030.41244.qm@web8707.mail.in.yahoo.com>
Message-ID: <474DD095.9050307@paradise.net.nz>

hi Raj


> I am using action script xml sockets.
> Now anyone can help me in transferring a file to client using action script xml sockets.


Why not just use HTTP? It was invented for transferring files.

Anyway, to use an XMLSocket, you'd use need to be sure your file didn't
contain zero bytes.  Then the server would use a socket class like this:


class FileSender(LineOnlyReceiver):
    delimiter = chr(0)

    def send(self, filename):
        f = open(filename)
        msg = f.read()
        f.close()
        self.transport.write(msg + self.delimiter)


and the Actionscript side would be something like:

   /* within the receiver class */
   this.onData = function(msg:String){
	trace("got the file contents: " + msg);
   }


If it does contain zero bytes you need to get rid of them somehow.  The
easiest way might be to run the string through python's urllib.urlencode
on the server side, followed by actionscript's LoadVars.decode on the
client side.

But really you should use HTTP. It'll be simpler.

Douglas



From phil at bubblehouse.org  Wed Nov 28 14:13:00 2007
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 28 Nov 2007 16:13:00 -0500
Subject: [Twisted-Python] Transfering a file through ActionScript xml
	sockets
In-Reply-To: <460030.41244.qm@web8707.mail.in.yahoo.com>
References: <460030.41244.qm@web8707.mail.in.yahoo.com>
Message-ID: <44FD888E-CF74-41EE-89B0-07867104F662@bubblehouse.org>

On Nov 27, 2007, at 11:50 PM, Raj kumar wrote:
> Sorry for not giving clear information in my previous mail.
> I am using action script xml sockets.
> Now anyone can help me in transferring a file to client using action  
> script xml sockets.
> Thank you in advance.

Despite the name, ActionScript's XMLSockets work just fine as regular  
sockets. If you send XML through them, and it happens to be well- 
formed, it will trigger the XML-specific event handler (i think it's  
onXML), but you can also just use the onData handler instead.

  var buffer = '';
  socket.onData = function(chunk){
	buffer += chunk;
  }

The data will be coming in chunks, so you'll need to buffer it in some  
way until you get the whole file.

Obviously, Flash won't let you save this file, so I'm assuming it's  
some kind of datafile your app needs to parse. If that's the case,  
your life will be easier if you just use loadVars to retrieve a  
urlencoded datafile, which will be parsed and returned to you as an  
anonymous object. I don't have any snippets for this process, but  
loadVars() is a commonly used function, and there's good docs in  
internal Flash Help and on the adobe site.

If either HTTP or custom datafiles won't work for you because of  
various requirements, you're pretty much going to have to write your  
own protocol. This is easy on the Twisted side of things, but  
extremely irritating on the actionscript side, IMO. How you go about  
this has more to do with the requirements of your current application,  
though...

-phil



From theatilla at gmail.com  Wed Nov 28 16:34:19 2007
From: theatilla at gmail.com (Atilla)
Date: Thu, 29 Nov 2007 00:34:19 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
Message-ID: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>

I'm interested in how well Twisted would perform in situations where
there is a very high number of concurrent connections.

The problem: I'm working on a feature that would require me to
distribute small amounts, both in occurrence and size, of packets to a
very large number of connected clients. Think in the terms of a Jabber
or IRC server, but with a lot less traffic. What we're trying to do is
to maximize the number of simultaneous connections a server can run,
to an absolute maximum. It'll be a dedicated system so crippling any
system-wide setting is not going to interfere with other applications.

So far experimenting with the epoll reactor has shown really nice
scalability as numbers grow. Thousands of connections per machine are
no problem at all, but we need to scale out heavily.

At a certain point the memory requirements for keeping open all those
connections in the system grow higher, but those can be minimized by
adjusting system buffer sizes, tcp window sizes and certain other
settings.

Furthermore - more than one instance of the service could be ran per
server, dedicating two or three processes on a 4-core CPU system,
until exhausting the rest of the limits, in case CPU oevrhead becomes
large.

I'm also considering advantages that might come through different I/O
and/or process schedulers. Is there anything that would be beneficial
to my situation, considering the server will be a dedicated machine
with little to nothing else to run on it that might suffer performance
degradation?

Does anyone have any experience with scaling twisted to a very large
number of parallel connections? Are there any limitations that I might
be missing?

We'll start experimenting with a sample service soon to try to
identify any specific limitations that will need to be worked on.

Any tips are wellcome. Cheers,



From matusis at yahoo.com  Wed Nov 28 17:55:51 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Wed, 28 Nov 2007 16:55:51 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
Message-ID: <005401c83222$96a87b40$c3f971c0$@com>

Here is one tip:

If you have a dual Xeon 5140 (4 cores) machine and run 4 twisted epoll servers in a similar (but not exactly similar situation), it chokes at 30000 clients.

The machine is CPU-bound, and the for loop that loops over clients to send your packets is a performance hog.
We are now considering using pyrex for that for loop, or rewriting it with C and libevent.



> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Atilla
> Sent: Wednesday, November 28, 2007 3:34 PM
> To: Twisted general discussion
> Subject: [Twisted-Python] Advise for heavy concurrency
> 
> I'm interested in how well Twisted would perform in situations where
> there is a very high number of concurrent connections.
> 
> The problem: I'm working on a feature that would require me to
> distribute small amounts, both in occurrence and size, of packets to a
> very large number of connected clients. Think in the terms of a Jabber
> or IRC server, but with a lot less traffic. What we're trying to do is
> to maximize the number of simultaneous connections a server can run,
> to an absolute maximum. It'll be a dedicated system so crippling any
> system-wide setting is not going to interfere with other applications.
> 
> So far experimenting with the epoll reactor has shown really nice
> scalability as numbers grow. Thousands of connections per machine are
> no problem at all, but we need to scale out heavily.
> 
> At a certain point the memory requirements for keeping open all those
> connections in the system grow higher, but those can be minimized by
> adjusting system buffer sizes, tcp window sizes and certain other
> settings.
> 
> Furthermore - more than one instance of the service could be ran per
> server, dedicating two or three processes on a 4-core CPU system,
> until exhausting the rest of the limits, in case CPU oevrhead becomes
> large.
> 
> I'm also considering advantages that might come through different I/O
> and/or process schedulers. Is there anything that would be beneficial
> to my situation, considering the server will be a dedicated machine
> with little to nothing else to run on it that might suffer performance
> degradation?
> 
> Does anyone have any experience with scaling twisted to a very large
> number of parallel connections? Are there any limitations that I might
> be missing?
> 
> We'll start experimenting with a sample service soon to try to
> identify any specific limitations that will need to be worked on.
> 
> Any tips are wellcome. Cheers,
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From donwsmith at gmail.com  Wed Nov 28 22:46:27 2007
From: donwsmith at gmail.com (Don Smith)
Date: Wed, 28 Nov 2007 21:46:27 -0800
Subject: [Twisted-Python] how can I Scheduling a command?
Message-ID: <24f63c200711282146r152c2bcbjbf71a7032663eaf5@mail.gmail.com>

Stephane,

I saw a post from you about a year and a half ago that you had built a
scheduler in twisted. I wonder if you would share your source code with me?

http://twistedmatrix.com/pipermail/twisted-python/2006-July/013615.html

Thanks,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071128/d86f3018/attachment.html>

From manlio_perillo at libero.it  Thu Nov 29 02:31:10 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 29 Nov 2007 10:31:10 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <005401c83222$96a87b40$c3f971c0$@com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com>
Message-ID: <474E86DE.1@libero.it>

Alec Matusis ha scritto:
> Here is one tip:
> 
> If you have a dual Xeon 5140 (4 cores) machine and run 4 twisted epoll servers in a similar (but not exactly similar situation), it chokes at 30000 clients.
> 
> The machine is CPU-bound, and the for loop that loops over clients to send your packets is a performance hog.
> We are now considering using pyrex for that for loop, or rewriting it with C and libevent.
> 

You can also consider nginx, if you want to write a server in C
(or in the D language).

It is a web server, but its core is usable as a framework for generic 
servers (in fact nginx has also a POP3/IMAP4 proxy server).

nginx has many appealing features, like integrated garbage collector, 
and multi process workers.



Manlio Perillo





From itamar at itamarst.org  Thu Nov 29 07:19:49 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Nov 2007 09:19:49 -0500
Subject: [Twisted-Python] how can I Scheduling a command?
In-Reply-To: <24f63c200711282146r152c2bcbjbf71a7032663eaf5@mail.gmail.com>
References: <24f63c200711282146r152c2bcbjbf71a7032663eaf5@mail.gmail.com>
Message-ID: <1196345989.1197.31.camel@localhost.localdomain>


On Wed, 2007-11-28 at 21:46 -0800, Don Smith wrote:

> I saw a post from you about a year and a half ago that you had built a
> scheduler in twisted. I wonder if you would share your source code
> with me?

See http://twistedmatrix.com/projects/core/documentation/howto/time.html

If you want to persist scheduling across restarts, then you need to
write extra code... but that depends on what storage system your program
uses.




From donwsmith at gmail.com  Thu Nov 29 09:57:27 2007
From: donwsmith at gmail.com (Don Smith)
Date: Thu, 29 Nov 2007 08:57:27 -0800
Subject: [Twisted-Python] how can I Scheduling a command?
In-Reply-To: <1196345989.1197.31.camel@localhost.localdomain>
References: <24f63c200711282146r152c2bcbjbf71a7032663eaf5@mail.gmail.com>
	<1196345989.1197.31.camel@localhost.localdomain>
Message-ID: <24f63c200711290857sa607b4by67cf158ff4030973@mail.gmail.com>

Yes, I'm looking more for a cron type scheduler.

Thanks,

Don

On Nov 29, 2007 6:19 AM, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:

>
> On Wed, 2007-11-28 at 21:46 -0800, Don Smith wrote:
>
> > I saw a post from you about a year and a half ago that you had built a
> > scheduler in twisted. I wonder if you would share your source code
> > with me?
>
> See http://twistedmatrix.com/projects/core/documentation/howto/time.html
>
> If you want to persist scheduling across restarts, then you need to
> write extra code... but that depends on what storage system your program
> uses.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071129/a0686d38/attachment.html>

From drew.smathers at gmail.com  Thu Nov 29 11:13:39 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 29 Nov 2007 13:13:39 -0500
Subject: [Twisted-Python] how can I Scheduling a command?
In-Reply-To: <24f63c200711290857sa607b4by67cf158ff4030973@mail.gmail.com>
References: <24f63c200711282146r152c2bcbjbf71a7032663eaf5@mail.gmail.com>
	<1196345989.1197.31.camel@localhost.localdomain>
	<24f63c200711290857sa607b4by67cf158ff4030973@mail.gmail.com>
Message-ID: <368574aa0711291013l2b949dedp400db144f7e6ed0c@mail.gmail.com>

On Nov 29, 2007 11:57 AM, Don Smith <donwsmith at gmail.com> wrote:

> Yes, I'm looking more for a cron type scheduler.
>

I *think* axiom supports something like this via axiom.scheduler.Schedulerand
axiom.scheduler.SubScheduler.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071129/27a1b7c1/attachment.html>

From theatilla at gmail.com  Thu Nov 29 11:47:21 2007
From: theatilla at gmail.com (Atilla)
Date: Thu, 29 Nov 2007 19:47:21 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <474E86DE.1@libero.it>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>
	<005401c83222$96a87b40$c3f971c0$@com> <474E86DE.1@libero.it>
Message-ID: <b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>

I doubt I'll be running 4 heavy cpu-bound processes on a 4-core
system, I'd prefer to leave 1 core "free" for all the rest of
monitoring/logging tasks.

What causes the CPU overload in such a case? Currently I keep a custom
many-to-many like structure, which has O(1) access time and need to
forward the same message to N clients that are returned from that
structure, for each incoming packet, at worst. I could potentially
pre-pack the exact network message to avoid generating it for each of
them, which at this point is the largest overhead. Although I'm not
sure how much I can save like that.



From Marcin.Kasperski at softax.com.pl  Thu Nov 29 14:13:51 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Thu, 29 Nov 2007 22:13:51 +0100
Subject: [Twisted-Python] Re: StdioOnnaStick instance has no attribute
	'isatty'
References: <87prygtti8.fsf@platon.mekk.waw.pl>
Message-ID: <87y7cg69gw.fsf@platon.mekk.waw.pl>

> I just tried to run some trial tests on ubuntu gutsy (twisted 2.5.0),
> just to get the error as in the title (full traceback below).
> Does anybody know what is wrong here?
>
> (...)
>
> AttributeError: StdioOnnaStick instance has no attribute 'isatty'

For the sake of completeness: I solved the problem. It was caused by
the following line, I added to my test setup for some reason loooong
time ago (well, IIRC I just wanted errors in a file for easier
reading):

   log.startLogging(logfile.LogFile('twisted.log', logdir, 16 * 1024 * 1024))

After I removed this line, trial works again.


-- 
----------------------------------------------------------------------
| Marcin Kasperski   | You have the right to produce quality work
| http://mekk.waw.pl |          at all the times. (Beck)
|                    |
----------------------------------------------------------------------




From mrsalty0 at gmail.com  Thu Nov 29 16:45:27 2007
From: mrsalty0 at gmail.com (J Davis)
Date: Thu, 29 Nov 2007 18:45:27 -0500
Subject: [Twisted-Python] implementing a timeout
Message-ID: <a26b6f030711291545l7704dcd6yedebc1df49d227cd@mail.gmail.com>

Greetings,

I'm a newcomer to twisted and am struggling a little with the learning
curve.
I have an idea for an app that I believe is ideally suited for twisted
though I
could use some help finding the right way to approach it.

It performs a status check by getting a page from a web server.
It calculates the time it took to download the page and also can check that
the
content matches a predefined string.

That part of it is working fine but I'd like to take it a step further.
I need a way to impose a limit on how long it waits to receive a response so
that I can detect
unresponsive hosts. I must say that I'm at a loss as to how to add such a
timeout to my code.
Any pointers or examples would be greatly appreciated.

Here is a simplified version of the function that I'm working with.
---------------------------------------

from twisted.internet import task, reactor
from twisted.web import client
import time

class HTCheck:
    def handleResponse(self, data, start_time):
        response_time = time.time() - start_time
        if data == "It lives!\n":
            Status = "OK"
        else:
            Status = "Test page content mismatch"
    def check(self):
        start_time = time.time()
        d = client.getPage("http://localhost/test.html")
        d.addCallback(self.handleResponse, start_time)
        return d

l = task.LoopingCall(HTCheck().check)
l.start(10.0)
reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071129/ff5f98d7/attachment.html>

From exarkun at divmod.com  Thu Nov 29 17:30:38 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 29 Nov 2007 19:30:38 -0500
Subject: [Twisted-Python] implementing a timeout
In-Reply-To: <a26b6f030711291545l7704dcd6yedebc1df49d227cd@mail.gmail.com>
Message-ID: <20071130003038.8162.468070766.divmod.quotient.41374@ohm>

On Thu, 29 Nov 2007 18:45:27 -0500, J Davis <mrsalty0 at gmail.com> wrote:
>Greetings,
>
>I'm a newcomer to twisted and am struggling a little with the learning
>curve.
>I have an idea for an app that I believe is ideally suited for twisted
>though I
>could use some help finding the right way to approach it.
>
>It performs a status check by getting a page from a web server.
>It calculates the time it took to download the page and also can check that
>the
>content matches a predefined string.
>
>That part of it is working fine but I'd like to take it a step further.
>I need a way to impose a limit on how long it waits to receive a response so
>that I can detect
>unresponsive hosts. I must say that I'm at a loss as to how to add such a
>timeout to my code.
>Any pointers or examples would be greatly appreciated.

You can pass a timeout keyword argument to getPage.  This will set the
maximum time which is allowed to elapsed between when the TCP connection
is established to the remote host and when the page is completely loaded.

Jean-Paul



From itamar at itamarst.org  Thu Nov 29 19:57:35 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Nov 2007 21:57:35 -0500
Subject: [Twisted-Python] Re: StdioOnnaStick instance has no attribute
	'isatty'
In-Reply-To: <87y7cg69gw.fsf@platon.mekk.waw.pl>
References: <87prygtti8.fsf@platon.mekk.waw.pl>
	<87y7cg69gw.fsf@platon.mekk.waw.pl>
Message-ID: <1196391455.1197.33.camel@localhost.localdomain>


On Thu, 2007-11-29 at 22:13 +0100, Marcin Kasperski wrote:
> > I just tried to run some trial tests on ubuntu gutsy (twisted 2.5.0),
> > just to get the error as in the title (full traceback below).
> > Does anybody know what is wrong here?
> >
> > (...)
> >
> > AttributeError: StdioOnnaStick instance has no attribute 'isatty'

Could you file a bug about this? I suspect someone someday may have same
issue, so we should fix underlying problem.

Thanks!




From francisco.herrero at gmail.com  Fri Nov 30 07:02:41 2007
From: francisco.herrero at gmail.com (Francisco Herrero)
Date: Fri, 30 Nov 2007 11:02:41 -0300
Subject: [Twisted-Python] abstract filedescriptor
Message-ID: <ccac7d280711300602q4c02fe89vef3777a0459bd7c9@mail.gmail.com>

Hello. At first excuse me for my poor English.
I've making a python library for handle the pcican board, using the canlib
library. It works fine.
Now, I have to integrate to a twisted application that I made, for package
encapsulation over tcp/ip. This works fine in serialport using
abstract.filedescriptor and pyserial, but in the canlib case I have no file
descriptor for this.

What can I do for encapsulate like serial protocol, but with canlib methods?

I have to re factorize the pycanlib library to build a file descriptor that
represents, or is a way to readapt the abstract.filedescriptor for that?
The methods that I have is:

Channel.readWait() <- this is persistent
Channel.read() <-this is not persistent. If buffer is empty returns.
Channel.write(<can package attributes>)

More details:

This is the file descriptor I wrote...
----------------
# twisted imports
from twisted.internet import abstract, fdesc, main
import canlib
from canlib import canOPEN_EXCLUSIVE, canWANT_EXTENDED, BAUD_1M,
canDRIVER_NORMAL

class CANConnector(abstract.FileDescriptor):
    """
    Conector para el dispositivo pcican usando pycanlib
    """

    connected = 1

    def __init__(self, protocol, conf, reactor):
        abstract.FileDescriptor.__init__(self, reactor)

        self._channel = canlib.Channel(0)
        self._channel.open(canOPEN_EXCLUSIVE | canWANT_EXTENDED)
    self._channel.setBusOff()

    self._channel.setBusParams(BAUD_1M, 4, 3, 1, 1)
    self._channel.setBusOutputControl(canDRIVER_NORMAL)

    self._channel.setBusOn()

        self.reactor = reactor
        self.protocol = protocol

    self.protocol.makeConnection(self)
        self.startReading()


    def writeSomeData(self, data):
        return self._channel.write(1000, data, 10, 0)

    def doRead(self):
        pack = self._channel.readWait()

        # returns the message of package
        return pack['msg']

    def connectionLost(self, reason=None):
        abstract.FileDescriptor.connectionLost(self, reason)
        self._channel.close()
------------

in the main tac service this is how I use the connector:

---------------
(...)

class ServiceChannel(protocol.Protocol):
    def connectionMade(self):
        print 'Canal conectado'

    def dataReceived(self, data):
        print "datorecibido"

        s.writeOnPort(data)

    def connectionLost(self):
        print 'Canal desconectado'

class SimulatorService(service.Service):
    (...)

    def startChannel(self):
        (...)
        c = ServiceChannel()
        (...)
        self.channel = CANConnector(c, self.conf.channel, reactor)

    (...)
    def writeOnPort(self, data):
        self.factory.instance.transport.write(data)

--------
This application pipes the can comunications whith a tcp ip port.

Then ,when I run:
$ twistd -ny main.tac

2007/11/30 10:52 -0300 [-] Log opened.
2007/11/30 10:52 -0300 [-] twistd 2.5.0 (/usr/bin/python 2.5.1) starting up
2007/11/30 10:52 -0300 [-] reactor class: <class '
twisted.internet.selectreactor.SelectReactor'>
2007/11/30 10:52 -0300 [-] Loading main.tac...
2007/11/30 10:52 -0300 [-] /usr/bin/twistd: option -n not recognized
2007/11/30 10:52 -0300 [-] /usr/bin/twistd: Try --help for usage details.
2007/11/30 10:52 -0300 [-] Loaded.
2007/11/30 10:52 -0300 [-] __builtin__.ServiceFactory starting on 5000
2007/11/30 10:52 -0300 [-] Starting factory <__builtin__.ServiceFactory
instance at 0x84069cc>
2007/11/30 10:52 -0300 [__builtin__.ServiceFactory] {'protocol': 'can',
'number': '0', 'channel': '1'}
2007/11/30 10:52 -0300 [__builtin__.ServiceFactory] Canal conectado
2007/11/30 10:52 -0300 [__builtin__.ServiceFactory] channel
started.................
2007/11/30 10:52 -0300 [__builtin__.ServiceFactory] se generan los archivos
de registro

<... (Connect to 5000 port ) ..>

2007/11/30 10:52 -0300 [__builtin__.ServiceFactory] Conexion establecida
desde IPv4Address(TCP, '192.168.6.38', 5000)
2007/11/30 10:52 -0300 [-] Unhandled Error
        Traceback (most recent call last):
          File
"/usr/lib/python2.5/site-packages/twisted/scripts/_twistd_unix.py", line
214, in postApplication
            app.runReactorWithLogging(self.config, self.oldstdout,
self.oldstderr)
          File
"/usr/lib/python2.5/site-packages/twisted/application/app.py", line 113, in
runReactorWithLogging
            reactor.run()
          File
"/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py", line 220,
in run
            self.mainLoop()
          File
"/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py", line 231,
in mainLoop
            self.doIteration(t)
        --- <exception caught here> ---
          File
"/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py", line
97, in doSelect
            [], timeout)
        exceptions.ValueError: file descriptor cannot be a negative integer
(-1)

2007/11/30 10:52 -0300 [-] Malformed file descriptor found.  Preening lists.
2007/11/30 10:52 -0300 [-] bad descriptor <can.CANConnector object at
0x83e94ec>

Thanks for your attention.

Fran

PD: If anybody is interested in this pycanlib library I pass the source for
liberation.

-- 
"El hombre se descubre cuando se mide con un obstáculo"
(Saint Exupéry)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20071130/04793c59/attachment.html>

From andrewfr_ice at yahoo.com  Fri Nov 30 08:10:55 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 30 Nov 2007 07:10:55 -0800 (PST)
Subject: [Twisted-Python] OpenSSL problem
Message-ID: <424161.58065.qm@web34214.mail.mud.yahoo.com>

Hello Folks:

I am using client.getPage with a URL that uses the
https protocol. I get the error

from OpenSSL import SSL
ImportError: No module named OpenSSL

I downloaded the Win32 binary for OpenSSL and
pyOpenSSL. I get the error - 

error - Python was build with Visual Studio 7.1 and
extensions need to be built with same version of
compiler, but it isn't installed.

I don't have Visual Studio 7.1. And I used a
pre-compiled Stackless Python binary. Is there an easy
way to get around this without say, recompiling
Stackless (and compiling OpenSSL) with cygwin gcc?

Cheers,
Andrew






      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From zooko at zooko.com  Fri Nov 30 09:30:25 2007
From: zooko at zooko.com (zooko)
Date: Fri, 30 Nov 2007 09:30:25 -0700
Subject: [Twisted-Python] OpenSSL problem
In-Reply-To: <424161.58065.qm@web34214.mail.mud.yahoo.com>
References: <424161.58065.qm@web34214.mail.mud.yahoo.com>
Message-ID: <7178F18D-0A1A-412B-9E0E-A641CE424D36@zooko.com>

On Nov 30, 2007, at 8:10 AM, Andrew Francis wrote:

> error - Python was build with Visual Studio 7.1 and
> extensions need to be built with same version of
> compiler, but it isn't installed.
>
> I don't have Visual Studio 7.1. And I used a
> pre-compiled Stackless Python binary. Is there an easy
> way to get around this without say, recompiling
> Stackless (and compiling OpenSSL) with cygwin gcc?

The error message is in error.  Here is the Python issue ticket in  
which the message was changed from stating that you have to use the  
same compiler that was used to build Python, to instead stating that  
you have to use a compiler that is compatible with the one that was  
used to build Python:

http://bugs.python.org/issue1257728

In my experience, simply setting "compiler=mingw32" in your distutils  
config file works for all extension modules that I have tried  
*except* for pyOpenSSL.  I don't remember the details, but I have a  
note here which says that I was unable to build pyOpenSSL for  
myself.  Here's a ticket saying that I don't like pyOpenSSL because  
it is unmaintained and I don't know how to build it:

http://allmydata.org/trac/tahoe/ticket/11

Note that there are apparently some problems with using the cygwin  
gcc -mno-cygwin (a.k.a. the mingw32 compiler) to build Python  
extension modules, but these problems are limited to specific kinds  
of interaction between extension modules, namely that you can either  
build your modules so that they can safely exchange std::iostreams  
with the Python executable or with other modules that were built with  
Visual Studio, or you can build your modules so that they can safely  
exchange FILE*'s, but not both.

I haven't experienced this issue myself.  Here is a mailing list  
message describing it:

http://mail.python.org/pipermail/distutils-sig/2007-September/ 
008255.html

Regards,

Zooko




From matusis at yahoo.com  Fri Nov 30 11:49:07 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Fri, 30 Nov 2007 10:49:07 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <474E86DE.1@libero.it>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>
	<474E86DE.1@libero.it>
Message-ID: <064d01c83381$b00aba70$10202f50$@com>

> You can also consider nginx, if you want to write a server in C
> (or in the D language).
> It is a web server, but its core is usable as a framework for generic
> servers (in fact nginx has also a POP3/IMAP4 proxy server).


Do you know if anybody has written general-purpose TCP servers using nginx? It would be interesting to look at.


> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Manlio Perillo
> Sent: Thursday, November 29, 2007 1:31 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Advise for heavy concurrency
> 
> Alec Matusis ha scritto:
> > Here is one tip:
> >
> > If you have a dual Xeon 5140 (4 cores) machine and run 4 twisted
> epoll servers in a similar (but not exactly similar situation), it
> chokes at 30000 clients.
> >
> > The machine is CPU-bound, and the for loop that loops over clients to
> send your packets is a performance hog.
> > We are now considering using pyrex for that for loop, or rewriting it
> with C and libevent.
> >
> 
> You can also consider nginx, if you want to write a server in C
> (or in the D language).
> 
> It is a web server, but its core is usable as a framework for generic
> servers (in fact nginx has also a POP3/IMAP4 proxy server).
> 
> nginx has many appealing features, like integrated garbage collector,
> and multi process workers.
> 
> 
> 
> Manlio Perillo
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From manlio_perillo at libero.it  Fri Nov 30 12:42:48 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Fri, 30 Nov 2007 20:42:48 +0100
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <064d01c83381$b00aba70$10202f50$@com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>	<474E86DE.1@libero.it>
	<064d01c83381$b00aba70$10202f50$@com>
Message-ID: <475067B8.7050302@libero.it>

Alec Matusis ha scritto:
>> You can also consider nginx, if you want to write a server in C
>> (or in the D language).
>> It is a web server, but its core is usable as a framework for generic
>> servers (in fact nginx has also a POP3/IMAP4 proxy server).
> 
> 
> Do you know if anybody has written general-purpose TCP servers using nginx? It would be interesting to look at.
> 

There are only an HTTP server and a "mail" proxy (POP3/IMAP4/SMTP), and 
they are quite complex, since there is a lot of boilerplate code.

As an example, for mail support there is one "CORE" module ("mail"), and 
POP3, IMAP4 and SMPT are handled using "sub" modules of this core module.


Each core module boilerplate code has to setup the parsing of 
configuration files and the listening sockets.



Manlio Perillo





From matusis at yahoo.com  Fri Nov 30 16:42:44 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Fri, 30 Nov 2007 15:42:44 -0800
Subject: [Twisted-Python] Advise for heavy concurrency
In-Reply-To: <b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
References: <b53c932d0711281534i587d05f3j9e86ab1d1bf1d270@mail.gmail.com>	<005401c83222$96a87b40$c3f971c0$@com>
	<474E86DE.1@libero.it>
	<b53c932d0711291047t4a36c581l2e8e6f248361cc1c@mail.gmail.com>
Message-ID: <072b01c833aa$b4d05c30$1e711490$@com>

> What causes the CPU overload in such a case

It looks like the for loop that loops over connections to send the message is the main source of the load. The biggest problem is not the CPU however. When the process takes more than 70% of the CPU (as displayed by top), python seems to start skipping garbage collection, and the memory size of the process just keeps growing. We have no control over this.

> I doubt I'll be running 4 heavy cpu-bound processes on a 4-core
> system

Running 4 servers on a 4-core box seems fine, it leaves plenty of resources for system tasks and logging, as long as as long as they are not at 99% CPU each, but I doubt you will get them to run at 99% because of the said memory problem.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Atilla
> Sent: Thursday, November 29, 2007 10:47 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Advise for heavy concurrency
> 
> I doubt I'll be running 4 heavy cpu-bound processes on a 4-core
> system, I'd prefer to leave 1 core "free" for all the rest of
> monitoring/logging tasks.
> 
> What causes the CPU overload in such a case? Currently I keep a custom
> many-to-many like structure, which has O(1) access time and need to
> forward the same message to N clients that are returned from that
> structure, for each incoming packet, at worst. I could potentially
> pre-pack the exact network message to avoid generating it for each of
> them, which at this point is the largest overhead. Although I'm not
> sure how much I can save like that.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From jml at mumak.net  Fri Nov 30 19:20:08 2007
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 1 Dec 2007 13:20:08 +1100
Subject: [Twisted-Python] Automating the release
Message-ID: <d06a5cd30711301820x6bb145akb9e34a5697b7ea68@mail.gmail.com>

Hello all,

As you may know, radix and others are working on automating the
Twisted release process so that we can move to a more frequent,
predictable release cycle.

The tickets to do so are here:
http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&component=release+management&milestone=twisted-7.0&order=priority

Our goal is to do a release using the automated tools before the end
of this year.

If you want to help out, there are three things you can do:

1. Help implement one of the release tickets.
The release tickets need coding. Some of the tickets have fairly poor
descriptions -- but that's ok. All that means is that your first step
is hassling radix to clarify what he means.

If you are going to hack on these, it's very important that you do
test-driven development. We want this code to be first-class.

2. Fix tickets more generally.
I *was* going to recommend that you work on some of our tickets with
'high' and 'highest' priority, but it turns out that they represent
one quarter of all open tickets. Still, if that doesn't daunt you then
please start hacking. I promise that the regular developers will be
extra nice and friendly in helping get started with the Twisted code
base.

3. Review branches
All code that goes into Twisted must be reviewed before it lands. It
doesn't really take much arcane knowledge to do a code review. All you
have to do is make sure the code conforms to our conventions, check
the test coverage and then ask questions about any bit you don't
understand. The idea is that if you don't understand it, the code
should be clearer.

Branches up for review are listed here: http://twistedmatrix.com/trac/report/15

There's general information about Twisted development here:
http://twistedmatrix.com/trac/wiki/TwistedDevelopment

Happy hacking,
jml



