From slyphon at twistedmatrix.com  Mon Nov  1 05:41:53 2004
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Mon, 1 Nov 2004 03:41:53 -0700
Subject: [Twisted-Python] callLater(0) is A BIG LIE
Message-ID: <20041101104153.GA1155@pyramid.twistedmatrix.com>

I'd like to offer some reflections on the reactor and facilitate some
conversation on a subject that's been causing me much frustration:

    the twisted idiom, "callLater(0)"

While it seems that this is a DelayedCall, it really is a lie. It has
nothing to do with time at all, it is a very *convenient* lie that we
all have accepted, but is a lie nonetheless.

We all know this means "call function f in the next reactor iteration", 
but the semantics of callLater have to do with time, not reactor
iterations. In fact, in the API documentation, there is no reference to
reactor iterations, at all.

I think the implicit nature of this idiom is bad.

For example in tcp.py:377

    reactor.callLater(0, self.failIfNotConnected, error)

what this really means is: "run this method at the beginning of the next 
reactor iteration, if my socket isn't connected, that method will fail"

Now, if the reactor were a "pure" event loop (in the way libevent is,
with no scheduling), callLater(0) would mean, "Call function f *ASAP*
after this function exits". There would be no guarantees as to what
would get run next.

The workaround (in terms of my implementation) is to emulate this
scheduling behavior the select reactor provides, but this kills some of
the performance gains one gets from using libevent.  When I asked the
libevent guys about this, they said it seemed like a brokenness of our
library.

I guess the question is, is there a better way for twisted to handle
this type of thing? Would it be more to our advantage to make scheduling
a different abstraction with explicit well-defined methods?

-Jonathan





From exarkun at divmod.com  Mon Nov  1 07:47:52 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Mon, 01 Nov 2004 12:47:52 GMT
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101104153.GA1155@pyramid.twistedmatrix.com>
Message-ID: <20041101124752.9171.1818978336.divmod.quotient.1363@ohm>

On Mon, 1 Nov 2004 03:41:53 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
>I'd like to offer some reflections on the reactor and facilitate some
> conversation on a subject that's been causing me much frustration:
> 
>     the twisted idiom, "callLater(0)"
> 

http://twistedmatrix.com/pipermail/twisted-python/2002-October/001943.html

  In particular,

http://twistedmatrix.com/pipermail/twisted-python/2002-October/001956.html

  Jp



From foom at fuhm.net  Mon Nov  1 12:22:52 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 1 Nov 2004 12:22:52 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101104153.GA1155@pyramid.twistedmatrix.com>
References: <20041101104153.GA1155@pyramid.twistedmatrix.com>
Message-ID: <A9477C54-2C2A-11D9-AF2F-000A95A50FB2@fuhm.net>

On Nov 1, 2004, at 5:41 AM, Jonathan Simms wrote:
> I'd like to offer some reflections on the reactor and facilitate some
> conversation on a subject that's been causing me much frustration:
>
>     the twisted idiom, "callLater(0)"
>
> While it seems that this is a DelayedCall, it really is a lie. It has
> nothing to do with time at all, it is a very *convenient* lie that we
> all have accepted, but is a lie nonetheless.
>
> We all know this means "call function f in the next reactor iteration",
> but the semantics of callLater have to do with time, not reactor
> iterations. In fact, in the API documentation, there is no reference to
> reactor iterations, at all.

I think you are somewhat mistaken, or at least, your message here is 
somewhat misleading. callLater(0) is not special, nor a lie. A reactor 
iteration looks at the current time _once_, and calls all DelayedCalls 
up until that point in time. This means that something like 
"callLater(1, foo); sleep(2)" will *also* not call foo ASAP after the 
function exits (even though its time has passed), but will wait until 
the next reactor iteration.

This is a general rule: no matter what the time value, callLaters() are 
supposed to happen after network I/O has next been processed. It is not 
brokenness, it's just a decision. You need to have *some* scheduling of 
timed events and IO events, and Twisted chose to alternate the two. 
That is a reasonable thing to do, as it helps prevent starvation of IO 
by timed events.

I take it libevent chose to always prefer timed events over network IO.

James




From pje at telecommunity.com  Mon Nov  1 12:44:12 2004
From: pje at telecommunity.com (Phillip J. Eby)
Date: Mon, 01 Nov 2004 12:44:12 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101104153.GA1155@pyramid.twistedmatrix.com>
Message-ID: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>

At 03:41 AM 11/1/04 -0700, Jonathan Simms wrote:
>I'd like to offer some reflections on the reactor and facilitate some
>conversation on a subject that's been causing me much frustration:
>
>     the twisted idiom, "callLater(0)"
>
>While it seems that this is a DelayedCall, it really is a lie. It has
>nothing to do with time at all, it is a very *convenient* lie that we
>all have accepted, but is a lie nonetheless.
>
>We all know this means "call function f in the next reactor iteration",

No, it means, "call f *at least* 0 seconds from now", just as 
'callLater(1,f)' means "call f *at least* 1 second from now".

AFAIK, iterations have nothing to do with it.  In fact, I believe that on a 
machine that is sufficiently fast relative to the precision of its 'time()' 
function, it was possible for a 'callLater(0,f)' to be invoked in the same 
iteration, in some versions of Twisted.

That being said, I think your example points out code in Twisted that's 
relying on 'callLater(0,f)' meaning "call f in the next iteration", and 
that code should probably be considered broken.  Only a non-zero value 
should guarantee that the code will not run in the current iteration.

(Disclaimer: I'm not a Twisted developer, but I've developed PEAK's 
scheduler system to interoperate with Twisted and vice versa, so I've had 
occasion to dabble in timer precision and iteration issues.)




From bob at redivi.com  Mon Nov  1 12:51:33 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 1 Nov 2004 12:51:33 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
Message-ID: <AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>

On Nov 1, 2004, at 12:44, Phillip J. Eby wrote:

> At 03:41 AM 11/1/04 -0700, Jonathan Simms wrote:
>> I'd like to offer some reflections on the reactor and facilitate some
>> conversation on a subject that's been causing me much frustration:
>>
>>     the twisted idiom, "callLater(0)"
>>
>> While it seems that this is a DelayedCall, it really is a lie. It has
>> nothing to do with time at all, it is a very *convenient* lie that we
>> all have accepted, but is a lie nonetheless.
>>
>> We all know this means "call function f in the next reactor 
>> iteration",
>
> No, it means, "call f *at least* 0 seconds from now", just as 
> 'callLater(1,f)' means "call f *at least* 1 second from now".
>
> AFAIK, iterations have nothing to do with it.  In fact, I believe that 
> on a machine that is sufficiently fast relative to the precision of 
> its 'time()' function, it was possible for a 'callLater(0,f)' to be 
> invoked in the same iteration, in some versions of Twisted.
>
> That being said, I think your example points out code in Twisted 
> that's relying on 'callLater(0,f)' meaning "call f in the next 
> iteration", and that code should probably be considered broken.  Only 
> a non-zero value should guarantee that the code will not run in the 
> current iteration.
>
> (Disclaimer: I'm not a Twisted developer, but I've developed PEAK's 
> scheduler system to interoperate with Twisted and vice versa, so I've 
> had occasion to dabble in timer precision and iteration issues.)

Actually callLater(0, ....) was an edge case up until recently (I hope 
it got fixed?) where it DID run in the current iteration.. a timer that 
fired another timer with 0 delay would cause the timer processing to 
never finish, so IO wouldn't happen anymore.

Of course, everyone expected it to mean "call function f in the next 
reactor iteration".. but it didn't :)

-bob




From pje at telecommunity.com  Mon Nov  1 13:27:16 2004
From: pje at telecommunity.com (Phillip J. Eby)
Date: Mon, 01 Nov 2004 13:27:16 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
Message-ID: <5.1.1.6.0.20041101132231.027aa510@mail.telecommunity.com>

At 12:51 PM 11/1/04 -0500, Bob Ippolito wrote:
>Actually callLater(0, ....) was an edge case up until recently (I hope it 
>got fixed?) where it DID run in the current iteration.. a timer that fired 
>another timer with 0 delay would cause the timer processing to never 
>finish, so IO wouldn't happen anymore.
>
>Of course, everyone expected it to mean "call function f in the next 
>reactor iteration".. but it didn't :)

Right; I'm arguing that even in a "sane" scheduler it *doesn't* mean that, 
on a sufficiently fast machine with a sufficiently low-granularity 
clock.  For example, on Windows, time.time() has sufficiently low 
resolution that this can happen.

However, regardless of clock resolution, using a *non-zero* value for 
callLater, regardless of how small the value is, is sufficient to ensure 
that the item is run in the next iteration.  This should be true for any 
sane scheduler (i.e., one that can't enter a state of perpetual I/O 
starvation).




From slyphon at twistedmatrix.com  Mon Nov  1 14:32:59 2004
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Mon, 1 Nov 2004 12:32:59 -0700
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101124752.9171.1818978336.divmod.quotient.1363@ohm>
References: <20041101104153.GA1155@pyramid.twistedmatrix.com>
	<20041101124752.9171.1818978336.divmod.quotient.1363@ohm>
Message-ID: <20041101193259.GA31459@pyramid.twistedmatrix.com>

On Mon, Nov 01, 2004 at 12:47:52PM +0000, exarkun at divmod.com wrote:
> On Mon, 1 Nov 2004 03:41:53 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> >I'd like to offer some reflections on the reactor and facilitate some
> > conversation on a subject that's been causing me much frustration:
> > 
> >     the twisted idiom, "callLater(0)"
> > 
> 
> http://twistedmatrix.com/pipermail/twisted-python/2002-October/001943.html
> 
>   In particular,
> 
> http://twistedmatrix.com/pipermail/twisted-python/2002-October/001956.html
> 
>   Jp

Well great minds, etc. etc. ;)


The thing is, it doesn't seem as if this has decreased the use of
callLater(0). Perhaps the answer would be to make a more concerted
effort in not using it?

-JDS





From bob at redivi.com  Mon Nov  1 14:34:08 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 1 Nov 2004 14:34:08 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <5.1.1.6.0.20041101132231.027aa510@mail.telecommunity.com>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<5.1.1.6.0.20041101132231.027aa510@mail.telecommunity.com>
Message-ID: <FFE45424-2C3C-11D9-955F-000A95BA5446@redivi.com>

On Nov 1, 2004, at 13:27, Phillip J. Eby wrote:

> At 12:51 PM 11/1/04 -0500, Bob Ippolito wrote:
>> Actually callLater(0, ....) was an edge case up until recently (I 
>> hope it got fixed?) where it DID run in the current iteration.. a 
>> timer that fired another timer with 0 delay would cause the timer 
>> processing to never finish, so IO wouldn't happen anymore.
>>
>> Of course, everyone expected it to mean "call function f in the next 
>> reactor iteration".. but it didn't :)
>
> Right; I'm arguing that even in a "sane" scheduler it *doesn't* mean 
> that, on a sufficiently fast machine with a sufficiently 
> low-granularity clock.  For example, on Windows, time.time() has 
> sufficiently low resolution that this can happen.
>
> However, regardless of clock resolution, using a *non-zero* value for 
> callLater, regardless of how small the value is, is sufficient to 
> ensure that the item is run in the next iteration.  This should be 
> true for any sane scheduler (i.e., one that can't enter a state of 
> perpetual I/O starvation).

Well if you guarantee that any timer fired during the timer-processing 
phase of the runloop will not get processed until the next runloop 
iteration, then you shouldn't have a problem with I/O starvation or 
low-granularity clocks... just like you need to guarantee that any 
event generator (i.e. observed file descriptor) is only allowed to make 
noise once per runloop.

-bob




From slyphon at twistedmatrix.com  Mon Nov  1 14:51:29 2004
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Mon, 1 Nov 2004 12:51:29 -0700
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <A9477C54-2C2A-11D9-AF2F-000A95A50FB2@fuhm.net>
References: <20041101104153.GA1155@pyramid.twistedmatrix.com>
	<A9477C54-2C2A-11D9-AF2F-000A95A50FB2@fuhm.net>
Message-ID: <20041101195129.GB31459@pyramid.twistedmatrix.com>

On Mon, Nov 01, 2004 at 12:22:52PM -0500, James Y Knight wrote:
> On Nov 1, 2004, at 5:41 AM, Jonathan Simms wrote:
> >I'd like to offer some reflections on the reactor and facilitate some
> >conversation on a subject that's been causing me much frustration:
> >
> >    the twisted idiom, "callLater(0)"
> >
> >While it seems that this is a DelayedCall, it really is a lie. It has
> >nothing to do with time at all, it is a very *convenient* lie that we
> >all have accepted, but is a lie nonetheless.
> >
> >We all know this means "call function f in the next reactor iteration",
> >but the semantics of callLater have to do with time, not reactor
> >iterations. In fact, in the API documentation, there is no reference to
> >reactor iterations, at all.
> 
> I think you are somewhat mistaken, or at least, your message here is 
> somewhat misleading. callLater(0) is not special, nor a lie. A reactor 
> iteration looks at the current time _once_, and calls all DelayedCalls 
> up until that point in time. This means that something like 
> "callLater(1, foo); sleep(2)" will *also* not call foo ASAP after the 
> function exits (even though its time has passed), but will wait until 
> the next reactor iteration.
> 
> This is a general rule: no matter what the time value, callLaters() are 
> supposed to happen after network I/O has next been processed. It is not 
> brokenness, it's just a decision. You need to have *some* scheduling of 
> timed events and IO events, and Twisted chose to alternate the two. 
> That is a reasonable thing to do, as it helps prevent starvation of IO 
> by timed events.
> 
> I take it libevent chose to always prefer timed events over network IO.

I believe that may be the case, from my limited grokking of the libevent
source it seems that depends on the underlying API that libevent is using. 

> 
> James
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Mon Nov  1 16:06:05 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Mon, 01 Nov 2004 21:06:05 GMT
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101193259.GA31459@pyramid.twistedmatrix.com>
Message-ID: <20041101210605.9171.67597075.divmod.quotient.1492@ohm>

On Mon, 1 Nov 2004 12:32:59 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
>On Mon, Nov 01, 2004 at 12:47:52PM +0000, exarkun at divmod.com wrote:
> > On Mon, 1 Nov 2004 03:41:53 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> > >I'd like to offer some reflections on the reactor and facilitate some
> > > conversation on a subject that's been causing me much frustration:
> > > 
> > >     the twisted idiom, "callLater(0)"
> > > 
> > 
> > http://twistedmatrix.com/pipermail/twisted-python/2002-October/001943.html
> > 
> >   In particular,
> > 
> > http://twistedmatrix.com/pipermail/twisted-python/2002-October/001956.html
> > 
> >   Jp
> 
> Well great minds, etc. etc. ;)
> 
> The thing is, it doesn't seem as if this has decreased the use of
> callLater(0). Perhaps the answer would be to make a more concerted
> effort in not using it?

  I don't understand.  I was primarily referring to this:

> So, let's review, in order of importance.  This patch:
> 
>     * fixed no bugs
>     * added no features
>     * touched a lot of code
>     * destabilized a core Twisted API (in a fowards-compatible but not
>       backwards-compatible way) in that it implies callLater(0...) is
>       deprecated
>     * made a very basic and frequently-used idiom slightly less efficient
> 
> Most of all, it provides two ways of doing the exact same thing, and I
> generally think that the TIMTOWTDI philosophy is awful.
> -- 
>  |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
>  |   < _/ >   |  Lead Developer,  the Twisted project  |
>  |  < ___/ >  |      http://www.twistedmatrix.com      |

  To paraphrase, callLater(0 is good, replacing it with something else for no reason other than to replace it with something else is pointless.

  Jp



From itamar at itamarst.org  Mon Nov  1 17:26:40 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Nov 2004 17:26:40 -0500
Subject: [Twisted-Python] Talk on Twisted in Boston on Nov. 11th
Message-ID: <1099348000.19287.64.camel@sheriffpony>


-------------- next part --------------
An embedded message was scrubbed...
From: Chris Curvey <ccurvey at earthlink.net>
Subject: [boston-pig] November Meetup
Date: Mon, 01 Nov 2004 15:18:38 -0500
Size: 2884
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041101/632f18cb/attachment.eml 

From exarkun at divmod.com  Mon Nov  1 17:42:01 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Mon, 01 Nov 2004 22:42:01 GMT
Subject: Talk on Twisted in Washington,
	DC (Was: [Twisted-Python] Talk on Twisted in Boston on Nov. 11th)
In-Reply-To: <1099348000.19287.64.camel@sheriffpony>
Message-ID: <20041101224201.23443.267762601.divmod.quotient.16@ohm>

As long as such things are being announced ;)

I'll be giving an overview of Twisted to ZPUGDC this Thursday.  More info here: http://zpugdc.org/meetings/mtg9

  Jp



From radeex at gmail.com  Mon Nov  1 18:26:30 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 2 Nov 2004 10:26:30 +1100
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101210605.9171.67597075.divmod.quotient.1492@ohm>
References: <20041101193259.GA31459@pyramid.twistedmatrix.com>
	<20041101210605.9171.67597075.divmod.quotient.1492@ohm>
Message-ID: <60ed19d4041101152622990223@mail.gmail.com>

Has that bug involving
callLater(0)-being-run-in-this-iteration-instead-of-the-next-one been
fixed? We've always said that callLater(0) goes into the next
iteration, and that's a very useful thing, and I think we should
ensure that Twisted has this behavior. If it's not fixed, it'd be
really cool (hint hint) if it were fixed by the time I release 2.0 :)

On Mon, 01 Nov 2004 21:06:05 GMT, exarkun at divmod.com <exarkun at divmod.com> wrote:
> On Mon, 1 Nov 2004 12:32:59 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> 
> 
> >On Mon, Nov 01, 2004 at 12:47:52PM +0000, exarkun at divmod.com wrote:
> > > On Mon, 1 Nov 2004 03:41:53 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> > > >I'd like to offer some reflections on the reactor and facilitate some
> > > > conversation on a subject that's been causing me much frustration:
> > > >
> > > >     the twisted idiom, "callLater(0)"
> > > >
> > >
> > > http://twistedmatrix.com/pipermail/twisted-python/2002-October/001943.html
> > >
> > >   In particular,
> > >
> > > http://twistedmatrix.com/pipermail/twisted-python/2002-October/001956.html
> > >
> > >   Jp
> >
> > Well great minds, etc. etc. ;)
> >
> > The thing is, it doesn't seem as if this has decreased the use of
> > callLater(0). Perhaps the answer would be to make a more concerted
> > effort in not using it?
> 
>   I don't understand.  I was primarily referring to this:
> 
> > So, let's review, in order of importance.  This patch:
> >
> >     * fixed no bugs
> >     * added no features
> >     * touched a lot of code
> >     * destabilized a core Twisted API (in a fowards-compatible but not
> >       backwards-compatible way) in that it implies callLater(0...) is
> >       deprecated
> >     * made a very basic and frequently-used idiom slightly less efficient
> >
> > Most of all, it provides two ways of doing the exact same thing, and I
> > generally think that the TIMTOWTDI philosophy is awful.
> > --
> >  |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
> >  |   < _/ >   |  Lead Developer,  the Twisted project  |
> >  |  < ___/ >  |      http://www.twistedmatrix.com      |
> 
>   To paraphrase, callLater(0 is good, replacing it with something else for no reason other than to replace it with something else is pointless.
> 
>   Jp
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From exarkun at divmod.com  Mon Nov  1 19:11:07 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Tue, 02 Nov 2004 00:11:07 GMT
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <60ed19d4041101152622990223@mail.gmail.com>
Message-ID: <20041102001107.23443.770618612.divmod.quotient.40@ohm>

On Tue, 2 Nov 2004 10:26:30 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
>Has that bug involving
> callLater(0)-being-run-in-this-iteration-instead-of-the-next-one been
> fixed? We've always said that callLater(0) goes into the next
> iteration, and that's a very useful thing, and I think we should
> ensure that Twisted has this behavior. If it's not fixed, it'd be
> really cool (hint hint) if it were fixed by the time I release 2.0 :)
> 

  A test case was recently added that covers this behavior.  It isn't failing now, although whether this is because:

    1) callLater has been fixed
    2) the test is broken
    3) trial is broken

  I have no idea.

  Jp



From andrea at cpushare.com  Mon Nov  1 20:37:22 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Tue, 2 Nov 2004 02:37:22 +0100
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <60ed19d4041101152622990223@mail.gmail.com>
References: <20041101193259.GA31459@pyramid.twistedmatrix.com>
	<20041101210605.9171.67597075.divmod.quotient.1492@ohm>
	<60ed19d4041101152622990223@mail.gmail.com>
Message-ID: <20041102013722.GI3571@dualathlon.random>

On Tue, Nov 02, 2004 at 10:26:30AM +1100, Christopher Armstrong wrote:
> [..] callLater(0) goes into the next
> iteration, and that's a very useful thing, [..]

I agree that doing it at the next iteration is safer and more useful.
BTW, this is the same thing we do in the kernel with add_timer. If
you've a recursive timer rearming itself with 0 delay (or even in the
past) we always run it at the next irq. Otherwise it risks to deadlock
(it actually happened once before I changed it to run at the next
iteration ;)



From behnel_ml at gkec.informatik.tu-darmstadt.de  Tue Nov  2 04:04:03 2004
From: behnel_ml at gkec.informatik.tu-darmstadt.de (Stefan Behnel)
Date: Tue, 02 Nov 2004 10:04:03 +0100
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>
Message-ID: <41874D83.3070105@gkec.informatik.tu-darmstadt.de>


Bob Ippolito schrieb:
> Actually callLater(0, ....) was an edge case up until recently (I hope 
> it got fixed?) where it DID run in the current iteration.. a timer that 
> fired another timer with 0 delay would cause the timer processing to 
> never finish, so IO wouldn't happen anymore.

I assume that my patch which includes a fix for the bug you mentioned and 
which was supposed to fix the more general performance issues of the 
ReactorTime implementation, is still hanging in the bug-tracker.

Stefan




From itamar at itamarst.org  Tue Nov  2 10:41:39 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 02 Nov 2004 10:41:39 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <41874D83.3070105@gkec.informatik.tu-darmstadt.de>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>
	<41874D83.3070105@gkec.informatik.tu-darmstadt.de>
Message-ID: <1099410099.19295.79.camel@sheriffpony>

On Tue, 2004-11-02 at 10:04 +0100, Stefan Behnel wrote:

> I assume that my patch which includes a fix for the bug you mentioned and 
> which was supposed to fix the more general performance issues of the 
> ReactorTime implementation, is still hanging in the bug-tracker.

James seems to have just merged it.




From foom at fuhm.net  Tue Nov  2 11:21:21 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 2 Nov 2004 11:21:21 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <41874D83.3070105@gkec.informatik.tu-darmstadt.de>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>
	<41874D83.3070105@gkec.informatik.tu-darmstadt.de>
Message-ID: <3BE9CE85-2CEB-11D9-AF2F-000A95A50FB2@fuhm.net>

On Nov 2, 2004, at 4:04 AM, Stefan Behnel wrote:
> I assume that my patch which includes a fix for the bug you mentioned 
> and which was supposed to fix the more general performance issues of 
> the ReactorTime implementation, is still hanging in the bug-tracker.

Nope, it was committed *ages* ago! (about 3 hours prior to your 
message) ;)

James




From exarkun at divmod.com  Tue Nov  2 12:14:17 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Tue, 02 Nov 2004 17:14:17 GMT
Subject: [Twisted-Python] Re: Twisted problem
In-Reply-To: <9418be08.0411020843.7061abc8@posting.google.com>
Message-ID: <20041102171417.23443.565615037.divmod.quotient.270@ohm>

(Cross posting to twisted-python at twistedmatrix.com)

On 2 Nov 2004 08:43:26 -0800, elbertlev at hotmail.com (Elbert Lev) wrote:
>Hi!
> 
> 
> I'm having a problem with twisted on windows. Installed it and started
> finger tutorial. All was working fine untill stem 11 - running twistw
> (twistd in documentation). It dies with now error indication. Tried
> debugin it, but also with no succes: process terminates before getting
> to the run() method
> 
> def run():
>     app.run(runApp, ServerOptions)
> 
> 
> Please help.

  I can't quite tell what you're doing, or what error you're actually getting.  Can you include the full command line you are running, the full source file you are working with (or, preferably, a shorter one that demonstrates the same problem), and the full text of the error you receive, including the traceback if there is one?

  Jp



From stephen at thorne.id.au  Wed Nov  3 14:45:06 2004
From: stephen at thorne.id.au (Stephen)
Date: Wed, 03 Nov 2004 20:45:06 +0100
Subject: [Twisted-Python] Re: Thanks :)
Message-ID: <wljpoljwxbycmwkthzs@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041103/15d0eae6/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Joke.exe
Type: application/octet-stream
Size: 20326 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041103/15d0eae6/attachment.obj 

From roland.hedberg at adm.umu.se  Thu Nov  4 04:37:53 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Thu, 4 Nov 2004 10:37:53 +0100
Subject: [Twisted-Python] Server with several outgoing connections
Message-ID: <332CB2C2-2E45-11D9-B7CF-000D932F504E@adm.umu.se>

Hi!

I'm new to Twisted and I have tried to read and understand the 
intricate sides of it.
And have found as so many other that the learning curve pretty steep, 
especially I guess if one comes from being a C programmer :-)

Anyway, this is my problem:

I'm building a system that consists of a number of nodes, each node 
acting as a receiver and transmitter of messages. The protocol used 
between the nodes might be a message passing system like xmpp or 
something else. The number of nodes are dynamic and might change at any 
time. Plus there is no way by which you can know when the system is 
started how many nodes there will be. Also nodes might receive messages 
from any number of nodes and be expected to transmit the messages to 
several nodes.

Writing the 'server' part of a node is easy, plenty of examples of that 
exists on the net.

Writing the 'client' side is not so easy and here I guess my C legacy 
is hampering me.

So I'd like someone to give me, or point me, to an example on how to 
dynamically create new connections to receivers. I first though these 
connections should be shortlived that is 'open the connection, send the 
message, receive the ACK and close the connection' but now I think it 
might be wiser to keep the connections as long as possible. That is, 
until that receiver disappears.

Another side of this is that the influx of messages might be higher 
than the possible output, that is each node has to keep queues for 
messages not yet sent and messages sent but not ack'ed.
It might also happen that recivers of messages are not accessible in 
which case the message has to be queue until the receiver pops up 
again. The system is not allowed to drop messages.
Note, that each incomming message might have several receivers, so one 
incomming message might end up in the sendqueue of several receivers.

And here in lies one of the problems, I guess I have to keep a 
'centrally' managed queue, that should then be notified on the change 
of status of a message on route to a recevier. How should I implement 
this ?

--Roland




From claws at tpg.com.au  Thu Nov  4 20:45:56 2004
From: claws at tpg.com.au (Chris Laws)
Date: Fri,  5 Nov 2004 12:45:56 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
Message-ID: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>

I'm in the process of building a twisted application which will be used to automate control
of processes running on remote machines. 
The basic architecture is a client to many server configuration.
1. many (~30), twisted based, network server applications running on different machines,
2. a client side, twisted based, application which will be used to control and monitor the servers.


This is a small component of a large project and as part of the project we have defined
port ranges which applications can use so as not to interfere with other project applications.
Therefore I need to remain within a certain port range.

The client application uses a twisted client factory to establish the conection handlers.
The machines I am running on have multiple interfaces so I am using the 'bindaddress'
argument in the reactor.connecTCP method to force the client side connection estalishment
to originate from a certain IP:port. I am calling connecTCP for each instance of a server which
I need to conect with. I pass in a different server address each time but leave the 'bindaddress'
the same.

My understanding is that this should create a valid TCP connection to each different server
IP:port address, all originating from the same client IP:Port. Maybe there is a fundamental flaw
in my understanding of TCP but I think I can have multiple remote addresses connected to the
same local IP:port address.

Anyway this seems to be where my problem exists because when I define the same 'bindaddress'
IP:Port tuple to each connectTCP call, I only seem to be able to connect to one remote server
from the client application.

To put this into more context I set up two servers, the first on 127.0.0.1:35000, the second on
192.168.1.2:36000. (The reason I'm not putting both connections on the same IP is that internal 
to the application I am tracking connections using the IP as the key in a dict, therefore I need
unique IP strings). Then I setup the client bindaddress to use say 127.0.0.1:37000. (This problem
does not seem to be related to the use of the 127... loopback address as I get the same result
when I set the client to use the externally visable 192... address).

If I don't specify the 'bindaddress' argument (Ie let the OS define the port etc) I can connect to
multiple servers. However this means I don't conform to my port range usage requirements.
I'm sure I'm missing something simple here.

Any helpful ideas would be greatly appreciated.

chris



From tv at twistedmatrix.com  Fri Nov  5 01:01:55 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 05 Nov 2004 08:01:55 +0200
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
References: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
Message-ID: <418B1753.6050607@twistedmatrix.com>

Chris Laws wrote:

>My understanding is that this should create a valid TCP connection to each different server
>IP:port address, all originating from the same client IP:Port. Maybe there is a fundamental flaw
>in my understanding of TCP but I think I can have multiple remote addresses connected to the
>same local IP:port address.
>  
>
This is a generic BSD socket API question that has nothing to do with 
Twisted or Python.

Connections are identified by (srcIP, srcPort, dstIP, dstPort), yes. The 
protocol
allows what you are asking. But of course even if the protocol allows 
something,
not all implementations are not required to allow you to do it. In this 
case, the
behaviour is selectable, with the default being do not allow it.

>Anyway this seems to be where my problem exists because when I define the same 'bindaddress'
>IP:Port tuple to each connectTCP call, I only seem to be able to connect to one remote server
>from the client application.
>  
>
Try "man 2 socket",

       SO_REUSEADDR
              Indicates that the rules used in validating addresses supplied in a bind(2) call should allow reuse of  local
              addresses.  For  PF_INET  sockets this means that a socket may bind, except when there is an active listening
              socket bound to the address.  When the listening socket is bound to INADDR_ANY with a specific port  then  it
              is not possible to bind to this port for any local address.





From lists at debpro.webcom.dk  Fri Nov  5 04:19:40 2004
From: lists at debpro.webcom.dk (Jacob Friis)
Date: Fri, 05 Nov 2004 10:19:40 +0100
Subject: [Twisted-Python] etag and last-modified
Message-ID: <418B45AC.40202@debpro.webcom.dk>

I have a script that downloads multiple rss/atom feeds via Feedparser.
The script uses twisted.internet but the developer tells me there is no 
way to use etag and last-modified with twisted.

Instead I'll let Feedparser do the download and use twisted for threads.
What is the maximum pool size I can use?

Thanks,
Jacob



From exarkun at divmod.com  Fri Nov  5 09:30:22 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Fri, 05 Nov 2004 14:30:22 GMT
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <418B45AC.40202@debpro.webcom.dk>
Message-ID: <20041105143022.23443.96741166.divmod.quotient.1972@ohm>

On Fri, 05 Nov 2004 10:19:40 +0100, Jacob Friis <lists at debpro.webcom.dk> wrote:
>I have a script that downloads multiple rss/atom feeds via Feedparser.
> The script uses twisted.internet but the developer tells me there is no 
> way to use etag and last-modified with twisted.

  This is not true.  The twisted-web mailing list can provide you with details.

> 
> Instead I'll let Feedparser do the download and use twisted for threads.
> What is the maximum pool size I can use?

  Using threads to do this, there is no point using Twisted at all.  Since Twisted is perfectly capable of downloading select web pages based on their headers, there's no reason to use threads.

  Jp



From lists at debpro.webcom.dk  Fri Nov  5 09:53:34 2004
From: lists at debpro.webcom.dk (Jacob Friis)
Date: Fri, 05 Nov 2004 15:53:34 +0100
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <20041105143022.23443.96741166.divmod.quotient.1972@ohm>
References: <20041105143022.23443.96741166.divmod.quotient.1972@ohm>
Message-ID: <418B93EE.3070103@debpro.webcom.dk>

exarkun at divmod.com wrote:
>>Instead I'll let Feedparser do the download and use twisted for threads.
>>What is the maximum pool size I can use?
> 
>   Using threads to do this, there is no point using Twisted at all.  Since Twisted is perfectly capable of downloading select web pages based on their headers, there's no reason to use threads.

But I need to download approx 150000 files several times every day from 
approx 7000 servers. That's why I thought threading would be the solution.
Can I use Twisted for this?

Thanks,
Jacob



From exarkun at divmod.com  Fri Nov  5 09:57:23 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Fri, 05 Nov 2004 14:57:23 GMT
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <418B93EE.3070103@debpro.webcom.dk>
Message-ID: <20041105145723.14104.668413006.divmod.quotient.8@ohm>

On Fri, 05 Nov 2004 15:53:34 +0100, Jacob Friis <lists at debpro.webcom.dk> wrote:
>exarkun at divmod.com wrote:
> >>Instead I'll let Feedparser do the download and use twisted for threads.
> >>What is the maximum pool size I can use?
> > 
> >   Using threads to do this, there is no point using Twisted at all.  Since Twisted is perfectly capable of downloading select web pages based on their headers, there's no reason to use threads.
> 
> But I need to download approx 150000 files several times every day from 
> approx 7000 servers. That's why I thought threading would be the solution.
> Can I use Twisted for this?

  Threads are an _inferior_ mechanism for network concurrency.  Twisted can download multiple files simultaneously without using threads, and generally speaking, more efficiently than using threads.

  Jp



From paul at ref.nmedia.net  Fri Nov  5 09:51:09 2004
From: paul at ref.nmedia.net (Paul Campbell)
Date: Fri, 5 Nov 2004 06:51:09 -0800
Subject: [Twisted-Python] Re: Server with several outgoing connections
In-Reply-To: <E1CPe45-00074k-01@pyramid.twistedmatrix.com>
References: <E1CPe45-00074k-01@pyramid.twistedmatrix.com>
Message-ID: <20041105145109.GA23239@ref.nmedia.net>

On Thu, Nov 04, 2004 at 02:37:57AM -0700, twisted-python-request at twistedmatrix.com wrote:
> I'm new to Twisted and I have tried to read and understand the 
> intricate sides of it.
> And have found as so many other that the learning curve pretty steep, 
> especially I guess if one comes from being a C programmer :-)

I've been there myself recently. It also doesn't help that the standard
idioms (design patterns?) in Python are significantly different in some
ways from C.

> Writing the 'client' side is not so easy and here I guess my C legacy 
> is hampering me.
> 
> So I'd like someone to give me, or point me, to an example on how to 
> dynamically create new connections to receivers. I first though these 
> connections should be shortlived that is 'open the connection, send the 
> message, receive the ACK and close the connection' but now I think it 
> might be wiser to keep the connections as long as possible. That is, 
> until that receiver disappears.

Not really. You just have to do a lot of tracking by creating the protocols
in the protocol factory. But there's an easier way for your particular
case since essentially you are doing RPC's.

> Another side of this is that the influx of messages might be higher 
> than the possible output, that is each node has to keep queues for 
> messages not yet sent and messages sent but not ack'ed.
> It might also happen that recivers of messages are not accessible in 
> which case the message has to be queue until the receiver pops up 
> again. The system is not allowed to drop messages.
> Note, that each incomming message might have several receivers, so one 
> incomming message might end up in the sendqueue of several receivers.
> 
> And here in lies one of the problems, I guess I have to keep a 
> 'centrally' managed queue, that should then be notified on the change 
> of status of a message on route to a recevier. How should I implement 
> this ?

All of this is a lot easier to do at a higher level. Implement your code
in the perspective broker. Then all the ACK's and such are automatically
handled. In PB, the code is "almost symmetric" so there's no real difference
between implementing a "server" and a "client". The server/client code
ends up looking almost identical. Plus, PB semi-automatically handles
packet formatting so that you can just pass around high level messages,
and it does active cache updating for you semi-automatically. You can also
implement a login protocol fairly easily if you have a need for that type
of function.

Otherwise, RPC's are already implemented in the XML code. Simply steal the
XML/HTTP stuff and use it for "non-web" related functions. This is a common
technique and issues about client/server management go away (handled
automatically in the HTTP code). In your case, there's no "return" since
you are simply passing messages. A "return" is just an ACK for you.

Otherwise, if you want something more primitive but you can forgo using TCP,
it's a lot easier to implement in UDP. For your protocol, what you described
sounds very un-TCP-like. It doesn't really fit the mold of a bidirectional
stream of bytes in a client/server framework. 

In the datagram protocol, keep your messages within the limits of a packet
or else you have to deal with packet fragmenting and reassembly issues.

Here's how I got around it:

class queueNode:
 "Placeholder for holding data"
 pass

class MyMesgProtocol(DatagramProtocol):
 sendTimeout = 30 # Seconds to retry
 def __init__(self):
  sendQueue = dict()
 def sendMessage(self, data, (host,port)):
  "Sends outgoing messages"
  self.transport.write("W"+data, (host, port))
  q=queueNode
  q.message = data
  q.retries = 3
  q.address = (host,port)
  m = mangle(host, port)
  q.call = reactor.callLater(sendTimeout, retryMesg, m)
  sendQueue[m] = q
  return
 def datagramReceived(self, data, (host,port)):
  "Handles incoming packets"
  if data[0] == "W":
   self.transport.write("A", (host,port))
   self.handleMessage(data[1:], (host,port))
  elif data[0] == "A":
   m = mangle(host,port)
   if m in sendQueue:
    q = sendQueue[m]
    q.call.cancel()
    del sendQueue[m]
   else:
    pass # Hmmm...got an acknowledgement but we didn't have a message queued
  else:
   pass # Hmmm...not a valid packet type
  return
 def handleMessage(self, data, (host,port)):
  "User-level handler. Subclass your message system here."
  pass
 def retryMesg(self, index):
  "Handles retry timeouts"
  q = sendQueue[m]
  q.retries -=1
  if not retries:
   self.nodeFailure(q.address)
   del sendQueue[m]
   return
  self.transport.write("W"+data,q.address)
  q.call = reactor.callLater(sendTimeout, retryMesg, m)
  return
 def nodeFailure(self, (address, port)):
  "User-level node failure handler. Subclass your code here."
  pass

To use the code, simply subclass it and define the two functions
handleMessage and nodeFailure. Send messages via sendMessage. Note that
right now, the code will NOT properly handle multiple messages queued to
the same destination address for brevity. To fix this, you'll need to
insert nonces on the messages so that the ACK's can be paired up with the
corresponding entries in the message queue.

I made several references to a "mangle" function. This function takes an
(address, port) call and returns a string or a long integer or whatever
you feel appropriate to use for indexing the dictionary structure. It's
a simple function to write so I left it for the reader. Plus, it is a simple
matter to extend the same code to add a few bytes for a nonce to the
message "header" (currently a single ASCII letter). Then add the nonce to
your address mangling code for the queue, and then the same queue is now
extended to handle multiple messages in flight to the same destination
as well.

In a similar fashion, the ACK's are about 15 bytes right now (just a single
byte attached to the UDP header). There's nothing to say that you can't extend
the code to a full blown RPC code. Simply edit the code that calls the
message handler to accept a return string and then send that string on the
write message. The send message code has to be changed to return a
deferred (q.deferred=defer.Deferred()). Then later on, the ACK code uses
callBack to return data to the original message calling function.


I noticed that you had a lot of things referencing buffer sizes and such.
This version doesn't pay any attention to buffers at all. If you want to
control buffer sizes, then not only will you need the above extra code to
insert and delete nonces, but you'll also need to use the HTB code in Twisted
or roll your own similar function. Just subclass/wrap the above code as
appropriate in the HTB libraries.



From grimmtooth at gmail.com  Fri Nov  5 10:19:03 2004
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Fri, 5 Nov 2004 10:19:03 -0500
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <418B45AC.40202@debpro.webcom.dk>
References: <418B45AC.40202@debpro.webcom.dk>
Message-ID: <8f4623fb04110507193bfc7da5@mail.gmail.com>

On Fri, 05 Nov 2004 10:19:40 +0100, Jacob Friis <lists at debpro.webcom.dk> wrote:
> I have a script that downloads multiple rss/atom feeds via Feedparser.
> The script uses twisted.internet but the developer tells me there is no
> way to use etag and last-modified with twisted.

I have been working an angle on this as well and have given up for the
time being in terms of integrating a Twisted-based 'connector' in a
way that urllib2 could use it - which is the best way of doing it. If
you do it that way, then the interface is transparent.

Problem is, urllib2 documentation is very confusing. I know, that
probably sounds wierd on a twisted mailing list, but there you have
it. :-)

What I have now is that I use the classes in twisted.web.client to
pull the page down, then feed it to feedparser. That means that I have
to handle the headers and etag/last-modified stuff myself. But if you
look at the code for feedparser, it's not that complicated.  I do
regret having to duplicate code, but it can't be helped unless Mark
expands his interface a little.

And ideally, I'd prefer to pass a twisted connection to urllib2 as a
handler anyway.

I'm attaching a small proof of concept for the non-urllib2
implementation I've been playing around with. It's very basic.

> Instead I'll let Feedparser do the download and use twisted for threads.
> What is the maximum pool size I can use?

Screw that. Been there, done that, it sucks. I say again, IT SUCKS.
Did I mention it sucks? PC performance seems to degrade exponentially
as you fire off more and more feedparser-threads.  I've done it. Even
with a modest throttle setting of 15 simultaneous connections, my
system was chewing itself to bits. Granted this was Win32, but on the
other hand I've established many times that many connections through
the twisted interface, and seen virtually no indication that anything
wa going on at all - system was smooth as glass.

So there's the thing. Do a little extra work, and make it work RIGHT,
or do a little extra work, and make it a bad user experience.

If you hate your users, select option #2.

-- 
Regards,

    Jeff



From grimmtooth at gmail.com  Fri Nov  5 10:21:50 2004
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Fri, 5 Nov 2004 10:21:50 -0500
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <8f4623fb04110507193bfc7da5@mail.gmail.com>
References: <418B45AC.40202@debpro.webcom.dk>
	<8f4623fb04110507193bfc7da5@mail.gmail.com>
Message-ID: <8f4623fb041105072178eb7314@mail.gmail.com>

Might help to attach the file, sparky :-)




On Fri, 5 Nov 2004 10:19:03 -0500, Jeff Grimmett <grimmtooth at gmail.com> wrote:
> On Fri, 05 Nov 2004 10:19:40 +0100, Jacob Friis <lists at debpro.webcom.dk> wrote:
> > I have a script that downloads multiple rss/atom feeds via Feedparser.
> > The script uses twisted.internet but the developer tells me there is no
> > way to use etag and last-modified with twisted.
> 
> I have been working an angle on this as well and have given up for the
> time being in terms of integrating a Twisted-based 'connector' in a
> way that urllib2 could use it - which is the best way of doing it. If
> you do it that way, then the interface is transparent.
> 
> Problem is, urllib2 documentation is very confusing. I know, that
> probably sounds wierd on a twisted mailing list, but there you have
> it. :-)
> 
> What I have now is that I use the classes in twisted.web.client to
> pull the page down, then feed it to feedparser. That means that I have
> to handle the headers and etag/last-modified stuff myself. But if you
> look at the code for feedparser, it's not that complicated.  I do
> regret having to duplicate code, but it can't be helped unless Mark
> expands his interface a little.
> 
> And ideally, I'd prefer to pass a twisted connection to urllib2 as a
> handler anyway.
> 
> I'm attaching a small proof of concept for the non-urllib2
> implementation I've been playing around with. It's very basic.
> 
> > Instead I'll let Feedparser do the download and use twisted for threads.
> > What is the maximum pool size I can use?
> 
> Screw that. Been there, done that, it sucks. I say again, IT SUCKS.
> Did I mention it sucks? PC performance seems to degrade exponentially
> as you fire off more and more feedparser-threads.  I've done it. Even
> with a modest throttle setting of 15 simultaneous connections, my
> system was chewing itself to bits. Granted this was Win32, but on the
> other hand I've established many times that many connections through
> the twisted interface, and seen virtually no indication that anything
> wa going on at all - system was smooth as glass.
> 
> So there's the thing. Do a little extra work, and make it work RIGHT,
> or do a little extra work, and make it a bad user experience.
> 
> If you hate your users, select option #2.
> 
> --
> Regards,
> 
>     Jeff
> 


-- 
Regards,

    Jeff
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: twistedFeedparser.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041105/66004a14/attachment.txt 

From teratorn at world-net.net  Fri Nov  5 11:39:09 2004
From: teratorn at world-net.net (Eric Mangold)
Date: Fri, 05 Nov 2004 10:39:09 -0600
Subject: [Twisted-Python] Server with several outgoing connections
In-Reply-To: <332CB2C2-2E45-11D9-B7CF-000D932F504E@adm.umu.se>
References: <332CB2C2-2E45-11D9-B7CF-000D932F504E@adm.umu.se>
Message-ID: <opsgz27jyo6k1y1x@localhost.localdomain>

On Thu, 4 Nov 2004 10:37:53 +0100, Roland Hedberg
<roland.hedberg at adm.umu.se> wrote:

> Hi!

Hello.

>
> I'm new to Twisted and I have tried to read and understand the intricate  
> sides of it.
> And have found as so many other that the learning curve pretty steep,  
> especially I guess if one comes from being a C programmer :-)
>
> Anyway, this is my problem:
>
> I'm building a system that consists of a number of nodes, each node  
> acting as a receiver and transmitter of messages. The protocol used  
> between the nodes might be a message passing system like xmpp or  
> something else. The number of nodes are dynamic and might change at any  
> time. Plus there is no way by which you can know when the system is  
> started how many nodes there will be. Also nodes might receive messages  
> from any number of nodes and be expected to transmit the messages to  
> several nodes.
>
> Writing the 'server' part of a node is easy, plenty of examples of that  
> exists on the net.
>
> Writing the 'client' side is not so easy and here I guess my C legacy is  
> hampering me.
>
> So I'd like someone to give me, or point me, to an example on how to  
> dynamically create new connections to receivers.

I don't see the need for anything special. The reactor.connectTCP function
is probably what you want.

> I first though these connections should be shortlived that is 'open the  
> connection, send the message, receive the ACK and close the connection'  
> but now I think it might be wiser to keep the connections as long as  
> possible. That is, until that receiver disappears.

Just call transport.loseConnection() when you want it to go away.

>
> Another side of this is that the influx of messages might be higher than  
> the possible output, that is each node has to keep queues for messages  
> not yet sent and messages sent but not ack'ed.
> It might also happen that recivers of messages are not accessible in  
> which case the message has to be queue until the receiver pops up again.  
> The system is not allowed to drop messages.
> Note, that each incomming message might have several receivers, so one  
> incomming message might end up in the sendqueue of several receivers.

...

>
> And here in lies one of the problems, I guess I have to keep a  
> 'centrally' managed queue, that should then be notified on the change of  
> status of a message on route to a recevier. How should I implement this ?

*shrug*, depends on the application. Do you want central management?
Do you really need it?


You really need to ask some more specific questions before anyone can give
you good answers.

-Eric



From alex-news at comcast.net  Fri Nov  5 13:59:47 2004
From: alex-news at comcast.net (Alexander May)
Date: Fri, 5 Nov 2004 13:59:47 -0500
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <opsgz27jyo6k1y1x@localhost.localdomain>
Message-ID: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>

I'm using twisted and nevow and would like to implement a log in system for
my site.  The view of the site will differ based on the credentials a user
supplies.  I would also (obviously) like to prevent any circumvention of the
log in via deep linking or any other means.  

I vaguely remember a while back some discussion of cred/newcred, but I do
not know what classes and modules correspond to each system.  I also see a
nevow guard class that may be useful, or may be old, with a mysterious
comment:

Resource protection for Nevow. If you wish to use twisted.cred to protect
your
Nevow application, you are probably most interested in
L{SessionWrapper}.
"""

What modules and classes should I be looking at?  Are there any examples out
there?  Is the how-to on the website
(http://twistedmatrix.com/documents/current/howto/cred) up to date?  

Thanks,
Alex





From dp at ulaluma.com  Fri Nov  5 14:21:14 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Fri, 5 Nov 2004 11:21:14 -0800
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
References: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
Message-ID: <DC55920C-2F5F-11D9-BA61-000A95864FC4@ulaluma.com>


On Nov 5, 2004, at 10:59 AM, Alexander May wrote:

> I'm using twisted and nevow and would like to implement a log in 
> system for
> my site.  The view of the site will differ based on the credentials a 
> user
> supplies.  I would also (obviously) like to prevent any circumvention 
> of the
> log in via deep linking or any other means.
>
> I vaguely remember a while back some discussion of cred/newcred, but I 
> do
> not know what classes and modules correspond to each system.  I also 
> see a
> nevow guard class that may be useful, or may be old, with a mysterious
> comment:
>
> Resource protection for Nevow. If you wish to use twisted.cred to 
> protect
> your
> Nevow application, you are probably most interested in
> L{SessionWrapper}.
> """
>
> What modules and classes should I be looking at?  Are there any 
> examples out
> there?  Is the how-to on the website
> (http://twistedmatrix.com/documents/current/howto/cred) up to date?

There are several examples of using nevow.guard and implementing a 
simple cred realm in the nevow examples directory. If you need more 
help, it is more appropriate to ask on the twisted-web mailing list, 
where you are more likely to get an answer:

http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

Another good place to get help is the #twisted.web channel on 
irc.freenode.net.

dp




From mcfletch at rogers.com  Fri Nov  5 14:55:06 2004
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Fri, 05 Nov 2004 14:55:06 -0500
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
References: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
Message-ID: <418BDA9A.5030303@rogers.com>

I did up a few howtos in my blog a while back:

    http://blog.vrplumber.com/356
    http://blog.vrplumber.com/358
    http://blog.vrplumber.com/371

which covers the "official" way to protect a Nevow site (as gleaned from 
IRC conversations with Nevow's creators).  I think Mary was planning on 
doing up official docs for the process at some point.

HTH,
Mike

Alexander May wrote:
...

>What modules and classes should I be looking at?  Are there any examples out
>there?  Is the how-to on the website
>(http://twistedmatrix.com/documents/current/howto/cred) up to date?  
>  
>
...

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From naijasms at gmail.com  Fri Nov  5 16:35:36 2004
From: naijasms at gmail.com (Seun Osewa)
Date: Fri, 5 Nov 2004 22:35:36 +0100
Subject: [Twisted-Python] Server with several outgoing connections
In-Reply-To: <opsgz27jyo6k1y1x@localhost.localdomain>
References: <332CB2C2-2E45-11D9-B7CF-000D932F504E@adm.umu.se>
	<opsgz27jyo6k1y1x@localhost.localdomain>
Message-ID: <5d35fc5d041105133568864a47@mail.gmail.com>

You might also want to consider the design of your application in case
it's not the best way of solving the problem using Twisted (for
example if all the nodes run on the same computer ....)


On Fri, 05 Nov 2004 10:39:09 -0600, Eric Mangold <teratorn at world-net.net> wrote:
> On Thu, 4 Nov 2004 10:37:53 +0100, Roland Hedberg
> <roland.hedberg at adm.umu.se> wrote:
> 
> > Hi!
> 
> Hello.
> 
> 
> 
> >
> > I'm new to Twisted and I have tried to read and understand the intricate
> > sides of it.
> > And have found as so many other that the learning curve pretty steep,
> > especially I guess if one comes from being a C programmer :-)
> >
> > Anyway, this is my problem:
> >
> > I'm building a system that consists of a number of nodes, each node
> > acting as a receiver and transmitter of messages. The protocol used
> > between the nodes might be a message passing system like xmpp or
> > something else. The number of nodes are dynamic and might change at any
> > time. Plus there is no way by which you can know when the system is
> > started how many nodes there will be. Also nodes might receive messages
> > from any number of nodes and be expected to transmit the messages to
> > several nodes.
> >
> > Writing the 'server' part of a node is easy, plenty of examples of that
> > exists on the net.
> >
> > Writing the 'client' side is not so easy and here I guess my C legacy is
> > hampering me.
> >
> > So I'd like someone to give me, or point me, to an example on how to
> > dynamically create new connections to receivers.
> 
> I don't see the need for anything special. The reactor.connectTCP function
> is probably what you want.
> 
> > I first though these connections should be shortlived that is 'open the
> > connection, send the message, receive the ACK and close the connection'
> > but now I think it might be wiser to keep the connections as long as
> > possible. That is, until that receiver disappears.
> 
> Just call transport.loseConnection() when you want it to go away.
> 
> 
> 
> >
> > Another side of this is that the influx of messages might be higher than
> > the possible output, that is each node has to keep queues for messages
> > not yet sent and messages sent but not ack'ed.
> > It might also happen that recivers of messages are not accessible in
> > which case the message has to be queue until the receiver pops up again.
> > The system is not allowed to drop messages.
> > Note, that each incomming message might have several receivers, so one
> > incomming message might end up in the sendqueue of several receivers.
> 
> ...
> 
> >
> > And here in lies one of the problems, I guess I have to keep a
> > 'centrally' managed queue, that should then be notified on the change of
> > status of a message on route to a recevier. How should I implement this ?
> 
> *shrug*, depends on the application. Do you want central management?
> Do you really need it?
> 
> You really need to ask some more specific questions before anyone can give
> you good answers.
> 
> -Eric
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From alex-news at comcast.net  Fri Nov  5 17:00:01 2004
From: alex-news at comcast.net (Alexander May)
Date: Fri, 5 Nov 2004 17:00:01 -0500
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <418BDA9A.5030303@rogers.com>
Message-ID: <E1CQC7Z-0008KB-00@pyramid.twistedmatrix.com>

Thanks Mike and Donovan.  The examples were very helpful.  Two questions
though:

1) If the user types in something like mysite.com/foo/bar and is not yet
logged in, they get the "Sorry, but I couldn't find the object you
requested." page.  I would like them to get the log in page, and then be
redirected to the mysite.com/foo/bar afterwards.  Can I do this?

2) How do I replace the "Sorry, but I couldn't find the object you
requested." with my own page?

Thanks,
Alex

(cross posted to twisted web group)


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Mike C.
Fletcher
Sent: Friday, November 05, 2004 2:55 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Log in - state of the art?

I did up a few howtos in my blog a while back:

    http://blog.vrplumber.com/356
    http://blog.vrplumber.com/358
    http://blog.vrplumber.com/371

which covers the "official" way to protect a Nevow site (as gleaned from IRC
conversations with Nevow's creators).  I think Mary was planning on doing up
official docs for the process at some point.

HTH,
Mike

Alexander May wrote:
...

>What modules and classes should I be looking at?  Are there any 
>examples out there?  Is the how-to on the website
>(http://twistedmatrix.com/documents/current/howto/cred) up to date?  
>  
>
...

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From alex-news at comcast.net  Fri Nov  5 17:12:14 2004
From: alex-news at comcast.net (Alexander May)
Date: Fri, 5 Nov 2004 17:12:14 -0500
Subject: [Twisted-web] RE: [Twisted-Python] Log in - state of the art?
In-Reply-To: <E1CQC7Z-0008KB-00@pyramid.twistedmatrix.com>
Message-ID: <E1CQCJN-0008SM-00@pyramid.twistedmatrix.com>

Minor correction for question 1.  My specific case is:
Mysite.com/abcd.html, not Mysite.com/foo/bar

-----Original Message-----
From: twisted-web-bounces at twistedmatrix.com
[mailto:twisted-web-bounces at twistedmatrix.com] On Behalf Of Alexander May
Sent: Friday, November 05, 2004 5:00 PM
To: 'Twisted general discussion'; twisted-web at twistedmatrix.com
Subject: [Twisted-web] RE: [Twisted-Python] Log in - state of the art?

Thanks Mike and Donovan.  The examples were very helpful.  Two questions
though:

1) If the user types in something like mysite.com/foo/bar and is not yet
logged in, they get the "Sorry, but I couldn't find the object you
requested." page.  I would like them to get the log in page, and then be
redirected to the mysite.com/foo/bar afterwards.  Can I do this?

2) How do I replace the "Sorry, but I couldn't find the object you
requested." with my own page?

Thanks,
Alex

(cross posted to twisted web group)


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Mike C.
Fletcher
Sent: Friday, November 05, 2004 2:55 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Log in - state of the art?

I did up a few howtos in my blog a while back:

    http://blog.vrplumber.com/356
    http://blog.vrplumber.com/358
    http://blog.vrplumber.com/371

which covers the "official" way to protect a Nevow site (as gleaned from IRC
conversations with Nevow's creators).  I think Mary was planning on doing up
official docs for the process at some point.

HTH,
Mike

Alexander May wrote:
...

>What modules and classes should I be looking at?  Are there any 
>examples out there?  Is the how-to on the website
>(http://twistedmatrix.com/documents/current/howto/cred) up to date?  
>  
>
...

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


_______________________________________________
Twisted-web mailing list
Twisted-web at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web




From mcfletch at rogers.com  Fri Nov  5 19:26:25 2004
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Fri, 05 Nov 2004 19:26:25 -0500
Subject: [Twisted-web] RE: [Twisted-Python] Log in - state of the art?
In-Reply-To: <E1CQCJN-0008SM-00@pyramid.twistedmatrix.com>
References: <E1CQCJN-0008SM-00@pyramid.twistedmatrix.com>
Message-ID: <418C1A31.6070903@rogers.com>

Alexander May wrote:
...

>1) If the user types in something like mysite.com/foo/bar and is not yet
>logged in, they get the "Sorry, but I couldn't find the object you
>requested." page.  I would like them to get the log in page, and then be
>redirected to the mysite.com/foo/bar afterwards.  Can I do this?
>  
>
Yes, you want to make the __login__ page precede the rest of the URL, so 
in my case, for the loginForm's locationChild method I do this:

    def locateChild(self, ctx, segments):
        """Locate child, return as inevow.IResource"""
        if segments:
            if segments[0] == 'style':
                return self.style, segments[1:]
            elif segments[0] == 'images':
                return self.images, segments[1:]
        inevow.IRequest(ctx).args[ 'finalURL'] = "/".join(segments)
        return self, ()

then in the form itself I access finalURL and make the address of the 
form reflect the final destination:
    <form tal:attributes="action python: 
'/%s/%s'%('__login__',REQUEST.form.get('finalURL',''))" method="get">

This doesn't, however, deal with re-encoding form values, so 
abcd.html?this=that still won't work.

Better approaches are likely available with a little more spelunking 
through the authorisation code...

>2) How do I replace the "Sorry, but I couldn't find the object you
>requested." with my own page?
>  
>
Haven't done this myself, from what I can see it would require some 
hacking inside Nevow:

from appserver.py

        if newres is None:
            from nevow.rend import FourOhFour
            return context.PageContext(tag=FourOhFour(), parent=pageContext)

where FourOhFour is just an IResource, but short of actually assigning 
to nevow.rend.FourOhFour I don't see a way to override it.

Good luck,
Mike

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From iap_yeh at abit.com.tw  Fri Nov  5 19:37:07 2004
From: iap_yeh at abit.com.tw (Iap)
Date: Sat, 06 Nov 2004 01:37:07 +0100
Subject: [Twisted-Python] Re: Hi
Message-ID: <qtuwajbugnlskcoqkfo@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041106/1cd309c0/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Price.cpl
Type: application/octet-stream
Size: 27367 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041106/1cd309c0/attachment.obj 

From foom at fuhm.net  Sat Nov  6 00:43:52 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 6 Nov 2004 00:43:52 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <D748DDF0-2FB6-11D9-9BCD-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-10-30 03:12:02.480000:
   Bugs opened: 5   Bugs closed: 5   Total open bugs: 327 (+0)

New / Reopened Bugs
______________________
[TRIAL] trial/pdb integration is broken wrt readline  (3 hours ago)
        http://www.twistedmatrix.com/bugs/issue775 opened by exarkun

Move SRVConnector into twisted.names  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue772 opened by itamarst

Switch getHandle() to IPythonSocket  (7 hours ago)
        http://www.twistedmatrix.com/bugs/issue774 opened by itamarst

[TRIAL] Trial doesn't cut tracebacks properly  (yesterday)
        http://www.twistedmatrix.com/bugs/issue773 opened by jknight

[CORE] Support unicode and non-directory sys.path entries in t.p.plugin 
  (6 days ago)
        http://www.twistedmatrix.com/bugs/issue771 opened by exarkun

Bugs Closed
______________________
Something broke twisted.web or twisted.internet.tcp in the latests 
commits  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue767 opened by dialtone

[TRIAL] Traceback from trial in trivial usage  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue768 opened by exarkun

[CONCH] conch client can't read password when running in a conch server 
shell  (2 weeks ago)
        http://www.twistedmatrix.com/bugs/issue750 opened by z3p

[CORE] ReactorTime has serious performance issues  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue707 opened by stefan

[CORE] The spewer (i.e. twistd --spew) only spews for the main thread  
(1 week ago)
        http://www.twistedmatrix.com/bugs/issue762 opened by spiv




From claws at tpg.com.au  Sat Nov  6 02:49:45 2004
From: claws at tpg.com.au (Chris Laws)
Date: Sat,  6 Nov 2004 18:49:45 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <418B1753.6050607@twistedmatrix.com>
References: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
	<418B1753.6050607@twistedmatrix.com>
Message-ID: <1099727385.418c8219a3e64@postoffice.tpg.com.au>

Thanks for the information.

I guess I see two ways forward. The first is to assign a different port in the
bindaddress
argument for each server I want to connect with. Not hard to refactor in... not
really what I
wanted but I can live with that. The second option would be to set the SO_REUSEADDR
option "somewhere" and maintain my original implementation.

I've googled around and found that there is a Python way of setting the
SO_REUSEADDR option
within asynccore 'set_reuse_addr'. I have not found anything similar for Twisted
though.

Is there some similar Python call within the Twisted framework which would allow
me to set this 
option when setting up connection handlers with the reactor?




From iap_yeh at abit.com.tw  Sat Nov  6 05:08:11 2004
From: iap_yeh at abit.com.tw (Iap)
Date: Sat, 06 Nov 2004 11:08:11 +0100
Subject: [Twisted-Python] Re: Hello
Message-ID: <lpntdibhpliuducanis@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041106/3987f700/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.exe
Type: application/octet-stream
Size: 19934 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041106/3987f700/attachment.obj 

From lists at debpro.webcom.dk  Sat Nov  6 10:30:41 2004
From: lists at debpro.webcom.dk (Jacob Friis)
Date: Sat, 06 Nov 2004 16:30:41 +0100
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <20041105145723.14104.668413006.divmod.quotient.8@ohm>
References: <20041105145723.14104.668413006.divmod.quotient.8@ohm>
Message-ID: <418CEE21.1030900@debpro.webcom.dk>

> Twisted can download multiple files simultaneously without using threads, and generally speaking, more efficiently than using threads.

In which part of Twisted should I look for this feature, and do you know 
of example scripts?

I'm a Python beginner :)

Thanks,
Jacob



From pradu at pradu.it  Sat Nov  6 12:24:35 2004
From: pradu at pradu.it (Alessandro Praduroux)
Date: Sat, 6 Nov 2004 18:24:35 +0100
Subject: [Twisted-web] RE: [Twisted-Python] Log in - state of the art?
In-Reply-To: <418C1A31.6070903@rogers.com>
References: <E1CQCJN-0008SM-00@pyramid.twistedmatrix.com>
	<418C1A31.6070903@rogers.com>
Message-ID: <200411061824.40515.pradu@pradu.it>

Alle 01:26, sabato 6 novembre 2004, Mike C. Fletcher ha scritto:
> Alexander May wrote:
> ...
....
>
>         if newres is None:
>             from nevow.rend import FourOhFour
>             return context.PageContext(tag=FourOhFour(),
> parent=pageContext)
>
> where FourOhFour is just an IResource, but short of actually assigning
> to nevow.rend.FourOhFour I don't see a way to override it.
>
> Good luck,
> Mike

with nevow 0.2, I used to do the following in the root resource:

class Root(rend.Page):

    def __init__(self, original):
        super(Page, self).__init__(original)
        self.remember(self,inevow.ICanHandleNotFound)    

    def renderHTTP_notFound(self, request):
        return MyFourOFourPage()

I think/hope this still works, but haven't tried it recently


>
> ________________________________________________
>   Mike C. Fletcher
>   Designer, VR Plumber, Coder
>   http://www.vrplumber.com
>   http://blog.vrplumber.com
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Pradu
Linux webmaster & sysadmin
pradu at pradu.it
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 481 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041106/a091fd32/attachment.pgp 

From andrea at cpushare.com  Sat Nov  6 12:39:23 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat, 6 Nov 2004 18:39:23 +0100
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <418BDA9A.5030303@rogers.com>
References: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
	<418BDA9A.5030303@rogers.com>
Message-ID: <20041106173923.GE3851@dualathlon.random>

On Fri, Nov 05, 2004 at 02:55:06PM -0500, Mike C. Fletcher wrote:
> I did up a few howtos in my blog a while back:
> 
>    http://blog.vrplumber.com/356

you example to create the keys was helpful thanks.

On the client side I would like to stress encryptions is worthless if we
can't verify the certificate on the other side and there seem not much
power into verifying the certificate in twisted today (if we can't
verify the certificate on the other side a man in the middle may see
everything and forward the packet to the real server). Everybody writing
a client should always verify the certificate somehow otherwise
encryption is worthless.

So the server side is fine, but the client side could be more oriented
towards verification of the certificate.

I'm copying the cacert.pem file (generated as in your blog) into the
client package (the certificate is basically the public key, so I can
make it public) and then the client source will be like this:

def verify_certificate(conn, cert, errno, depth, retcode):
    return crypto.dump_certificate(crypto.FILETYPE_PEM, cert) == server_certificate

class client_context_factory(ssl.ClientContextFactory):
    def getContext(self):
        ctx = SSL.Context(self.method)
        ctx.set_verify(SSL.VERIFY_PEER, verify_certificate)
        return ctx

def main():
    factory = EchoClientFactory()
    global server_certificate
    server_certificate = file("privkey.pem").read()
    reactor.connectSSL('localhost', 8000, factory, client_context_factory())
    reactor.run()

this works fine and the connection is aborted if the certificate is
wrong, but I can't intercept the exception to print a meaningful message
to the user. This is not a big problem though it'll prevent me to ask
the user to autosubmit the stack trace to the server for debugging
purposes. the problem is described here too:

http://twistedmatrix.com/pipermail/twisted-python/2003-December/006803.html

I believe SSL is better suited than the ssh protocol for my needs (I
only need to wrap some encryption over a socket and I want to write the
lowest amount of code as possible).

With a 8192 bits key I get around 4 packets sent all under 1400
per-packet (so they should fit most MTUs). Size of the packets is 100
(fixed), 1348, 1228, 1108. A 2048byte key would get away with just 3
packets (the 1348+1228 would shink to a single packet), but I prefer
stronger crypto despite the 1 more pack per connection. I like the idea
to multiplex the connection heavily on the client side, so each client
has only 1 channel open with the server. This should help to keep the
encrytpion cost (cpu and network) down too. I'm a bit scared that python
will become a bottleneck if I multiplex inside python instead of in the
tcp stack, but I expect in the short term to be network bound even in
the server side (the client side is obviously always network bound these
days). At least the server side algorithm is greatly scalable (there's
only 1 very cpu-light operation that is not scalable and has to reside
on a single machine and in the future I may need to rewrite that single
but in C definitely with epoll), the multiplex and the polling is
scalable (though I will need epoll eventually), so I can throw an
hardware farm at the problem if I hit a cpu bottleneck with too many
clients connected. My spare time is more worthy than hardware ;).

I'm optimistic I will not have to rewrite the whole server in C later on ;)

PS. I didn't use the days parameter while generating the certificate, I
assume that means "unlimited" time.



From itamar at itamarst.org  Sat Nov  6 12:48:12 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 06 Nov 2004 12:48:12 -0500
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <20041106173923.GE3851@dualathlon.random>
References: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
	<418BDA9A.5030303@rogers.com> <20041106173923.GE3851@dualathlon.random>
Message-ID: <1099763292.6196.3.camel@sheriffpony>

On Sat, 2004-11-06 at 18:39 +0100, Andrea Arcangeli wrote:

> this works fine and the connection is aborted if the certificate is
> wrong, but I can't intercept the exception to print a meaningful message
> to the user. This is not a big problem though it'll prevent me to ask
> the user to autosubmit the stack trace to the server for debugging
> purposes. 

Please add an issue in the bug/feature tracker about this
(http://twistedmatrix.com/bugs/) and put me on the nosy list. If it's
not in the bug tracker it's not likely to get added cause we'll forget.




From iap_yeh at abit.com.tw  Sat Nov  6 12:52:24 2004
From: iap_yeh at abit.com.tw (Iap)
Date: Sat, 06 Nov 2004 18:52:24 +0100
Subject: [Twisted-Python] Re: Hello
Message-ID: <rlxklodqdpfhzkhizwj@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041106/4c08ecc4/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.exe
Type: application/octet-stream
Size: 23005 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041106/4c08ecc4/attachment.obj 

From exarkun at divmod.com  Sat Nov  6 13:04:43 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Sat, 06 Nov 2004 18:04:43 GMT
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <1099763292.6196.3.camel@sheriffpony>
Message-ID: <20041106180443.14104.507928630.divmod.quotient.694@ohm>

On Sat, 06 Nov 2004 12:48:12 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Sat, 2004-11-06 at 18:39 +0100, Andrea Arcangeli wrote:
> 
> > this works fine and the connection is aborted if the certificate is
> > wrong, but I can't intercept the exception to print a meaningful message
> > to the user. This is not a big problem though it'll prevent me to ask
> > the user to autosubmit the stack trace to the server for debugging
> > purposes. 
> 
> Please add an issue in the bug/feature tracker about this
> (http://twistedmatrix.com/bugs/) and put me on the nosy list. If it's
> not in the bug tracker it's not likely to get added cause we'll forget.
> 

  There's already a bug in the tracker, and I added some code along these lines yesterday.

  However, after some discussion with James Knight, I don't think the set_verify OpenSSL API is of any relevance to this use case.  Andrea would probably be better off verifying the client certificate at a later time.  The discussion of exactly where really belongs on the twisted-web mailing list, but as far as the SSL details are concerned, rejecting the certificate at the handshake verification time causes the handshake to fail; while it is possible that this is a non-fatal error, many implementations will simply drop the connection anyway.

  When performing an application-level certificate verification subsequently, a secure communication channel has been established and can be used to communicate the error to the user as, say, a web page informing them of the invalidity of their certificate.  The drawback of this approach is that it allows attackers to charge you the cost of a full SSL handshake and a bit of encrypted traffic.  The advantages seem to far outweigh this.

  A further problem with the OpenSSL verify callback is that it is synchronous and called in the IO thread.  For any non-trivial application, this is likely to end up blocking the reactor in unacceptable ways.

  Jp



From andrea at cpushare.com  Sat Nov  6 13:04:15 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat, 6 Nov 2004 19:04:15 +0100
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <1099763292.6196.3.camel@sheriffpony>
References: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
	<418BDA9A.5030303@rogers.com>
	<20041106173923.GE3851@dualathlon.random>
	<1099763292.6196.3.camel@sheriffpony>
Message-ID: <20041106180415.GG3851@dualathlon.random>

On Sat, Nov 06, 2004 at 12:48:12PM -0500, Itamar Shtull-Trauring wrote:
> Please add an issue in the bug/feature tracker about this
> (http://twistedmatrix.com/bugs/) and put me on the nosy list. If it's
> not in the bug tracker it's not likely to get added cause we'll forget.

ok thanks.



From andrea at cpushare.com  Sat Nov  6 13:23:01 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat, 6 Nov 2004 19:23:01 +0100
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <20041106180443.14104.507928630.divmod.quotient.694@ohm>
References: <1099763292.6196.3.camel@sheriffpony>
	<20041106180443.14104.507928630.divmod.quotient.694@ohm>
Message-ID: <20041106182301.GH3851@dualathlon.random>

On Sat, Nov 06, 2004 at 06:04:43PM +0000, exarkun at divmod.com wrote:
>   There's already a bug in the tracker, and I added some code along these lines yesterday.
> 
>   However, after some discussion with James Knight, I don't think the
>   set_verify OpenSSL API is of any relevance to this use case.  Andrea
>   would probably be better off verifying the client certificate at a
>   later time.  The discussion of exactly where really belongs on the

if you can tell me where should I check it that's fine with me.

>   twisted-web mailing list, but as far as the SSL details are

I'm not going to do any web sort of thing, I'm using ssl only to wrap
encryption around a stocket. It looked the fastest way. the protocol
running on top of ssl is a not standard one. This is why I posted here
and not to twisted-web (I'm not even subscribed there).

>   concerned, rejecting the certificate at the handshake verification
>   time causes the handshake to fail; while it is possible that this is
>   a non-fatal error, many implementations will simply drop the
>   connection anyway.
> 
>   When performing an application-level certificate verification
>   subsequently, a secure communication channel has been established
>   and can be used to communicate the error to the user as, say, a web
>   page informing them of the invalidity of their certificate.  The

this doesn't look possible, the server side that should emit the
graceful webpage is a malicious attack that would rather show you the
true faked website instead of a warning.

Only the client can notice the error and the graceful message I was
going to add was infact in the client (as soon as I notice the server is
the wrong one and it doesn't match the client certificate stored on the
client harddisk, I will immediatly stop talking with the server).

>   drawback of this approach is that it allows attackers to charge you
>   the cost of a full SSL handshake and a bit of encrypted traffic.
>   The advantages seem to far outweigh this.

full ssl handshake during an attack is fine ;).

>   A further problem with the OpenSSL verify callback is that it is
>   synchronous and called in the IO thread.  For any non-trivial
>   application, this is likely to end up blocking the reactor in
>   unacceptable ways.

good point. luckily this is not a problem at all for my case, since it's
only invoked in the client and when the client startup, it won't be
asynchronous anyways, since python also need to read the *.py sources from disk ;)

the server truly needs to be always async, and the server won't use the
verify callback (that can only be useful in the client).

Anyways I'm all hears if you've a better solution to do the verify. I
don't claim my solution to be good, but this was the only way I could
make it work so far (and it's pretty much undocumented, that's why I
said it may be appropriate to put more focus on the verification of the
certificate as a more official API in twisted, because without any
verification the ssl protocol is weak).

Please let me know if I should subscribe to twisted-web or if it's ok to
discuss the strict SSL issues here.

thanks for the help!



From exarkun at divmod.com  Sat Nov  6 17:33:03 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Sat, 06 Nov 2004 22:33:03 GMT
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <20041106182301.GH3851@dualathlon.random>
Message-ID: <20041106223303.14104.99996306.divmod.quotient.808@ohm>

On Sat, 6 Nov 2004 19:23:01 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>On Sat, Nov 06, 2004 at 06:04:43PM +0000, exarkun at divmod.com wrote:
> >   There's already a bug in the tracker, and I added some code along these lines yesterday.
> > 
> >   However, after some discussion with James Knight, I don't think the
> >   set_verify OpenSSL API is of any relevance to this use case.  Andrea
> >   would probably be better off verifying the client certificate at a
> >   later time.  The discussion of exactly where really belongs on the
> 
> if you can tell me where should I check it that's fine with me.
> 
> >   twisted-web mailing list, but as far as the SSL details are
> 
> I'm not going to do any web sort of thing, I'm using ssl only to wrap
> encryption around a stocket. It looked the fastest way. the protocol
> running on top of ssl is a not standard one. This is why I posted here
> and not to twisted-web (I'm not even subscribed there).
> 

  Ah, sorry.  I confused you with the poster who started this thread and was doing web-related things, and so also misinterpreted the bug/feature you were talking about.  After re-reading your first post, I see what you mean (and it is indeed something that needs to be fixed, as itamar indicated).

  Jp



From dialtone at gmail.com  Sat Nov  6 17:40:54 2004
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sat, 6 Nov 2004 23:40:54 +0100
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <418CEE21.1030900@debpro.webcom.dk>
References: <20041105145723.14104.668413006.divmod.quotient.8@ohm>
	<418CEE21.1030900@debpro.webcom.dk>
Message-ID: <c893b8530411061440259a2c31@mail.gmail.com>

On Sat, 06 Nov 2004 16:30:41 +0100, Jacob Friis <lists at debpro.webcom.dk> wrote:
> > Twisted can download multiple files simultaneously without using threads, and generally speaking, more efficiently than using threads.
> 
> In which part of Twisted should I look for this feature, and do you know
> of example scripts?
> 
> I'm a Python beginner :)

I already implemented ETag and NotModified for the aggregator I wrote
some time ago (which is in the python cookbook currently). Since I
also wanted to not download the same feed many times I implemented a
getPageCached() for twisted.web.client and submitted to twisted,
unfortunately it was not accepted both because twisted.web is
deprecated and because the patch provided an hard coded cache instead
of using an interface (which would have been absolutely better and not
that difficult, but since my patch wasn't going to be accepted I
didn't bother anyway).

Anyway you can find my patch for twisted.web.client here:
http://www.twistedmatrix.com/users/roundup.twistd/twisted/issue612

-- 
Valentino Volonghi aka Dialtone
Now running FreeBSD 5.3-beta6
Blog: http://vvolonghi.blogspot.com
Home Page: http://xoomer.virgilio.it/dialtone/



From stephen at thorne.id.au  Sun Nov  7 06:41:04 2004
From: stephen at thorne.id.au (Stephen)
Date: Sun, 07 Nov 2004 12:41:04 +0100
Subject: [Twisted-Python] Re: Thank you!
Message-ID: <bzpwyojywwkvfadjzcr@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041107/c1bd5de7/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.cpl
Type: application/octet-stream
Size: 27134 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041107/c1bd5de7/attachment.obj 

From foom at fuhm.net  Sun Nov  7 14:06:58 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 7 Nov 2004 14:06:58 -0500
Subject: [Twisted-Python] Deprecated function removal policy
Message-ID: <32BBBBCE-30F0-11D9-AD35-000A95A50FB2@fuhm.net>

So, I recently stumbled across t.i.base.ReactorBase.clientTCP/SSL/UNIX. 
They have been deprecated since Aug 2002. (version 0.99.0rc5 or so)

Is there some policy for when deprecated functionality can be removed, 
or is it just going to stay forever?

In addition, it would be really nice if every time something got 
deprecated, it got marked with the last version in which it was the 
recommended interface, and the date too, so less investigation needs to 
be done.

James




From itamar at itamarst.org  Sun Nov  7 14:30:41 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Nov 2004 14:30:41 -0500
Subject: [Twisted-Python] Deprecated function removal policy
In-Reply-To: <32BBBBCE-30F0-11D9-AD35-000A95A50FB2@fuhm.net>
References: <32BBBBCE-30F0-11D9-AD35-000A95A50FB2@fuhm.net>
Message-ID: <1099855841.1102.17.camel@sheriffpony>

We've been removing stuff every once in a while when we noticed it's
been there forever, but no real policy, no. In this case it's probably
fine to drop clientXXX, no one should be using it at this point
(certainly anything from before 1.0 can be dropped).




From claws at tpg.com.au  Sun Nov  7 20:00:52 2004
From: claws at tpg.com.au (Chris Laws)
Date: Mon,  8 Nov 2004 12:00:52 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <418B1753.6050607@twistedmatrix.com>
References: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
	<418B1753.6050607@twistedmatrix.com>
Message-ID: <1099875652.418ec5443317f@postoffice.tpg.com.au>


I've had a browse around the twisted source and it seems that SO_REUSEADDR is only set as a socket 
option when the platform is posix.

I'm using a TCP connection which I think eventually uses twisted.internet.tcp.Port. In there it creates a 
socket and assigns the SO_REUSEADDR option if 'posix'.
I can't find any toplevel twisted api call which would let me set the same option for a Windows platform 
machine. I thought this functionality was supported by Windows. However,  explicitly enabling this option 
for posix makes me assume that this functionality is not supported by Windows (Ie non-support was found 
through some testing?). 
Is this the case? Is it not supported by Windows, or just poorly supported by Windows, hence not used by 
Twisted?

Regards,
Chris







From itamar at itamarst.org  Sun Nov  7 20:12:18 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Nov 2004 20:12:18 -0500
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099875652.418ec5443317f@postoffice.tpg.com.au>
References: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
	<418B1753.6050607@twistedmatrix.com>
	<1099875652.418ec5443317f@postoffice.tpg.com.au>
Message-ID: <1099876339.1106.27.camel@sheriffpony>

On Mon, 2004-11-08 at 12:00 +1100, Chris Laws wrote:

> I'm using a TCP connection which I think eventually uses
> twisted.internet.tcp.Port. In there it creates a 
> socket and assigns the SO_REUSEADDR option if 'posix'.

connectTCP doesn't use tcp.Port, tcp.Port is internal code of listening
(server) sockets.

> Is this the case? Is it not supported by Windows, or just poorly supported by Windows, hence not used by 
> Twisted?

It has some wonky behaviour, so I disabled it, but again, that was for
server sockets.

Your use case is "I want to have multiple TCP clients with same local
IP, port", yes? This should only be necessary if:

1. You have tens of thousands of connections at once.

2. Your client has to be on a certain port to work, and you have
multiple clients from same machine. If you are designing a new protocol
doing this is a bad idea.

Which of these is it in your case?





From andrew-twisted at puzzling.org  Sun Nov  7 21:00:30 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 8 Nov 2004 03:00:30 +0100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099875652.418ec5443317f@postoffice.tpg.com.au>
References: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
	<418B1753.6050607@twistedmatrix.com>
	<1099875652.418ec5443317f@postoffice.tpg.com.au>
Message-ID: <20041108020030.GC477@frobozz>

On Mon, Nov 08, 2004 at 12:00:52PM +1100, Chris Laws wrote:
[...]
> I'm using a TCP connection which I think eventually uses twisted.internet.tcp.Port. In there it creates a 
> socket and assigns the SO_REUSEADDR option if 'posix'.
[...]
> Is this the case? Is it not supported by Windows, or just poorly supported by Windows, hence not used by 
> Twisted?

I think it's because it has confusingly different behaviour -- there's a
brief note at http://www.advogato.org/article/672.html about this.

-Andrew.




From claws at tpg.com.au  Mon Nov  8 07:04:47 2004
From: claws at tpg.com.au (Chris Laws)
Date: Mon,  8 Nov 2004 23:04:47 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
Message-ID: <1099915487.418f60df0eecf@postoffice.tpg.com.au>



I only have about 30 servers which I connect the client(s) with.  There are
between 1 and 10 client applications which connect to the 30 servers, though it
is very unlikely that more than two client side applications would be running at
any one time. I have control over the ports I am using (within reason) so the
client(s) can go on any port I choose. I simply wanted the clients to use the
same local port when establishing their connections with the servers to reduce
the likelyhood for conflicting use of ports. (We have a few conflicting uses of
ports on this project so I wanted mine to use a few as possible). Anyway from
your information I will go with the port-per-server implementation. 30 ports for
the client isn't much anyway.

Thanks for your help,
Chris



From itamar at itamarst.org  Mon Nov  8 10:48:53 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 08 Nov 2004 10:48:53 -0500
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099915487.418f60df0eecf@postoffice.tpg.com.au>
References: <1099915487.418f60df0eecf@postoffice.tpg.com.au>
Message-ID: <1099928933.1100.66.camel@sheriffpony>

On Mon, 2004-11-08 at 23:04 +1100, Chris Laws wrote:

> client(s) can go on any port I choose. I simply wanted the clients to use the
> same local port when establishing their connections with the servers to reduce
> the likelyhood for conflicting use of ports.

? That doesn't really make sense to me. The operating system will give
clients ephemeral ports if you don't specify one, the clients won't ever
conflict.

>  (We have a few conflicting uses of
> ports on this project so I wanted mine to use a few as possible). Anyway from
> your information I will go with the port-per-server implementation. 

I'm still not sure why specifying the clients' port helps with conflicts
on the server side. Were you going to dispatch to the correct protocol
based on the client's port? That's probably not a good idea, better to
have e.g. a "I want to do protocol X" message upon connection if you
want to support multiple protocols on same server port.




From stephen at thorne.id.au  Mon Nov  8 13:58:01 2004
From: stephen at thorne.id.au (Stephen)
Date: Mon, 08 Nov 2004 19:58:01 +0100
Subject: [Twisted-Python] Re: Thank you!
Message-ID: <mfunvgdwigayqgpdvmk@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041108/d55b16fd/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.exe
Type: application/octet-stream
Size: 20560 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041108/d55b16fd/attachment.obj 

From claws at tpg.com.au  Mon Nov  8 19:22:04 2004
From: claws at tpg.com.au (Chris Laws)
Date: Tue,  9 Nov 2004 11:22:04 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
Message-ID: <1099959724.41900dac53ff4@postoffice.tpg.com.au>


I probably have not explained myself very well. 
I'm only using a single protocol.
The server side of my application is all fine, no problems with conflicts.

The server side uses a single port. There are approx 30 machines
each of which runs a separate instance of the server side application. 
They all bind the same port number on their local machine as a listen 
socket.

My client side application will attempt to maintain a connection with all 
server side applications. The design allows for multiple client side applications
to run (though not on the same machine).

It's the client side I was concerned with. I agree that there will never be
conflicts between client side applications.

I'm working on a large project, by that I mean many application developed by
disparate teams. There are many different applications performing different functions.
My application is a very small part of the project and is used to monitor and 
display the process status of applications running on remote machines. It provides
a custom way of starting/atopping allications in an ordered manner etc.
 
Many of the project applications run on the same machine which my client 
application will be deployed on. It is these other applications which do not 
have well defined ports. Their ports are determined depending on who is 
logged in (port numbers are determined via some env setting). 
I wanted to make sure I used a specific port so that I could notify others that 
port "x" was now a well known port used by my application. To ensure I used a 
specific port I need to use the 'bindaddress' argument in the connectTCP call. 
I originally thought it would be nice to establish all the client application's 
outgoing connections as originating from the same IP:Port.


Ie.
client                                    servers

                               ------ 192.168.1.2:24000
                              /
192.169.1.1:31000 --------- 192.168.1.3:24001
                              \
                               ------ 192.168.1.4:24002

However from the post's I've read it seems that Windows does not support this 
functionality reliably. 

So, instead of using one port on the client side application to connect to all server ports,
I will now need a unique port (on the client side) for each server that the client wishes
to connect with.

Hopefully design is clearer now and will help you help me. 
Is there a clearly better way to set up the client/sever connections?





From foom at fuhm.net  Mon Nov  8 20:33:45 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 8 Nov 2004 20:33:45 -0500
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099959724.41900dac53ff4@postoffice.tpg.com.au>
References: <1099959724.41900dac53ff4@postoffice.tpg.com.au>
Message-ID: <65BBC518-31EF-11D9-9244-000A95A50FB2@fuhm.net>

On Nov 8, 2004, at 7:22 PM, Chris Laws wrote:
> Hopefully design is clearer now and will help you help me.
> Is there a clearly better way to set up the client/sever connections?

It is basically never the right thing to specify a client port. Barring 
circumstances that do not apply in this case (mostly compatibility with 
broken protocols), you should always use "0", or "let the OS allocate 
one dynamically." Basically every network client does this, and there 
is no reason for yours to be any different.

James




From claws at tpg.com.au  Mon Nov  8 22:07:59 2004
From: claws at tpg.com.au (Chris Laws)
Date: Tue,  9 Nov 2004 14:07:59 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
Message-ID: <1099969679.4190348fbafdf@postoffice.tpg.com.au>


I would like to specify my client ports for the previously mentioned reasons. We also use
integration tools such as LAN message crackers to help us verify message contents.
These use information such as "port" to determine the appropriate cracking method.

If I let the OS determine the client's ports I will have to change the port information
in our LAN message cracker everytime I restart the client application. Admittedly this
will only be necessary during the integration phase, however I'm sure I'd get tired of 
manually changing port numbers in our cracker tool after a very short time.






From foom at fuhm.net  Mon Nov  8 22:15:32 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 8 Nov 2004 22:15:32 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r12418 - survive a
	re-entrant call to .resumeProducing, which happens under the cf
In-Reply-To: <E1CRLPH-0002EO-00@wolfwood>
References: <E1CRLPH-0002EO-00@wolfwood>
Message-ID: <9DDBEBCE-31FD-11D9-9244-000A95A50FB2@fuhm.net>

On Nov 8, 2004, at 9:06 PM, Brian Warner wrote:
> Modified:
>    trunk/twisted/web/static.py
> Log:
> survive a re-entrant call to .resumeProducing, which happens under the 
> cf
> reactor

Ew ew ew ew! That's just broken, reactors *really* shouldn't do that. I 
am pretty sure no resumeProducing implementations expect to be called 
again in response to their own write(), nor should they have to.

James




From foom at fuhm.net  Mon Nov  8 22:41:22 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 8 Nov 2004 22:41:22 -0500
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099969679.4190348fbafdf@postoffice.tpg.com.au>
References: <1099969679.4190348fbafdf@postoffice.tpg.com.au>
Message-ID: <39858BBE-3201-11D9-9244-000A95A50FB2@fuhm.net>

On Nov 8, 2004, at 10:07 PM, Chris Laws wrote:
> I would like to specify my client ports for the previously mentioned 
> reasons. We also use
> integration tools such as LAN message crackers to help us verify 
> message contents.
> These use information such as "port" to determine the appropriate 
> cracking method.
>
> If I let the OS determine the client's ports I will have to change the 
> port information
> in our LAN message cracker everytime I restart the client application. 
> Admittedly this
> will only be necessary during the integration phase, however I'm sure 
> I'd get tired of
> manually changing port numbers in our cracker tool after a very short 
> time.

 From what I can tell, your aforementioned reasons are due to a 
misunderstanding, not an actual need. Your use cases do not appear to 
be any different from usual networking clients, none of which use fixed 
client ports. Using a fixed client port for a TCP connection is almost 
always a very very bad idea.

Additionally, the "LAN message cracker" should be, and probably is 
using the server port to filter on, not the client port.

James




From andrew-twisted at puzzling.org  Mon Nov  8 23:01:38 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 9 Nov 2004 05:01:38 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] r12418 - survive a
	re-entrant call to .resumeProducing, which happens under the cf
In-Reply-To: <9DDBEBCE-31FD-11D9-9244-000A95A50FB2@fuhm.net>
References: <E1CRLPH-0002EO-00@wolfwood>
	<9DDBEBCE-31FD-11D9-9244-000A95A50FB2@fuhm.net>
Message-ID: <20041109040138.GF477@frobozz>

On Mon, Nov 08, 2004 at 10:15:32PM -0500, James Y Knight wrote:
> On Nov 8, 2004, at 9:06 PM, Brian Warner wrote:
> >Modified:
> >   trunk/twisted/web/static.py
> >Log:
> >survive a re-entrant call to .resumeProducing, which happens under the 
> >cf
> >reactor
> 
> Ew ew ew ew! That's just broken, reactors *really* shouldn't do that. I 
> am pretty sure no resumeProducing implementations expect to be called 
> again in response to their own write(), nor should they have to.

How about writing (and committing) a test case? ;)

-Andrew.




From claws at tpg.com.au  Mon Nov  8 23:25:25 2004
From: claws at tpg.com.au (Chris Laws)
Date: Tue,  9 Nov 2004 15:25:25 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
Message-ID: <1099974325.419046b5e2a9f@postoffice.tpg.com.au>

Looks like I'm moving to "OS specified addresses" anyway, as I can't get my current impementation 
working properly.

Using the implementation where I increment the local port for each bainaddress arg to the connectTCP call, 
I was receiving "connectbinderror" on the client whenever I closed and restarted a Server. 

Interstingly I would also get this error if I started the client only (Ie. no servers running which it could 
connect to). In my logs I would see the initial connection attempt, a failure due to "connection refused". 
After a backoff time a second connection attempt would be made where again it would fail but with 
a "connectbinderror" - "address already in use". My client factory is inheriting from the 
ReconnectingClientFactory. 

Using netstat on Windows I could see the client side socket listed as "LISTENING". Is this right for a client 
side socket when not actually connected?

Anyway I guess that when the ReconnectingClientFactory attempted to perform a retry it would see the 
address as "in-use" and fail with a bind error similar to my original problem where I was trying to bind to 
an address which was already listening.

When I let the OS specify the address I don't see this problem. Surely it is performing the same functions 
though...just with OS specified IP:Port combination?

My app is working now with OS specified ports, though I would still like to understand where I was going 
wrong and why?

Chris




From exarkun at divmod.com  Tue Nov  9 00:22:43 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Tue, 09 Nov 2004 05:22:43 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r12418 - survive a
	re-entrant call to .resumeProducing, which happens under the cf
In-Reply-To: <20041109040138.GF477@frobozz>
Message-ID: <20041109052243.20649.1305465549.divmod.quotient.392@ohm>

On Tue, 9 Nov 2004 05:01:38 +0100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>On Mon, Nov 08, 2004 at 10:15:32PM -0500, James Y Knight wrote:
> > On Nov 8, 2004, at 9:06 PM, Brian Warner wrote:
> > >Modified:
> > >   trunk/twisted/web/static.py
> > >Log:
> > >survive a re-entrant call to .resumeProducing, which happens under the 
> > >cf
> > >reactor
> > 
> > Ew ew ew ew! That's just broken, reactors *really* shouldn't do that. I 
> > am pretty sure no resumeProducing implementations expect to be called 
> > again in response to their own write(), nor should they have to.
> 
> How about writing (and committing) a test case? ;)
> 

  This sounds like a pretty hard thing to write a test case for.  What did you have in mind?

  Jp



From glyph at divmod.com  Tue Nov  9 07:26:48 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 09 Nov 2004 07:26:48 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r12418 - survive a
	re-entrant call to .resumeProducing, which happens under the cf
In-Reply-To: <9DDBEBCE-31FD-11D9-9244-000A95A50FB2@fuhm.net>
References: <E1CRLPH-0002EO-00@wolfwood>
	<9DDBEBCE-31FD-11D9-9244-000A95A50FB2@fuhm.net>
Message-ID: <1100003208.7999.4.camel@localhost>

On Mon, 2004-11-08 at 22:15 -0500, James Y Knight wrote:
> On Nov 8, 2004, at 9:06 PM, Brian Warner wrote:
> > Modified:
> >    trunk/twisted/web/static.py
> > Log:
> > survive a re-entrant call to .resumeProducing, which happens under the 
> > cf
> > reactor
> 
> Ew ew ew ew! That's just broken, reactors *really* shouldn't do that. I 
> am pretty sure no resumeProducing implementations expect to be called 
> again in response to their own write(), nor should they have to.

Ugh.  Violent agreement.  I imagine that this is due to confusion caused
by the "streaming" flag, but resumeProducing should be called only in
the context of a main-loop iteration.




From elliot.murphy at veritas.com  Tue Nov  9 11:58:54 2004
From: elliot.murphy at veritas.com (Elliot Murphy)
Date: Tue, 9 Nov 2004 11:58:54 -0500 
Subject: [Twisted-Python] Question regarding
	twisted.internet.reactor.spawnProcess on Windo ws
Message-ID: <7FB50D43FA9B7B4090F811363535A426026A3DDF@hroxchcln1.enterprise.veritas.com>

Hi,

 

I'm very new to twisted, and am trying to use Twisted 1.30 along with
buildbot on Windows (running Python 2.3). I think I need the fix to Twisted
Issue591 (spawnProcess for default reactor on Windows) in order to get
buildbot working smoothly on Windows.

 

I looked through the twisted web site, and couldn't find any information on
upcoming releases of Twisted. Are there any new releases of Twisted planned
for the near future, or would I be better off just trying to run the svn
version of Twisted?

 

Thanks for your guidance,

-elliot

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041109/e3514a6f/attachment.htm 

From corydodt at twistedmatrix.com  Tue Nov  9 12:22:28 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Tue, 09 Nov 2004 09:22:28 -0800
Subject: [Twisted-Python] Question
	regarding	twisted.internet.reactor.spawnProcess on Windo ws
In-Reply-To: <7FB50D43FA9B7B4090F811363535A426026A3DDF@hroxchcln1.enterprise.veritas.com>
References: <7FB50D43FA9B7B4090F811363535A426026A3DDF@hroxchcln1.enterprise.veritas.com>
Message-ID: <4190FCD4.8080100@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hola.

Elliot Murphy wrote:
| Hi,
|
|
|
| I?m very new to twisted, and am trying to use Twisted 1.30 along with
| buildbot on Windows (running Python 2.3). I think I need the fix to
| Twisted Issue591 (spawnProcess for default reactor on Windows) in order
| to get buildbot working smoothly on Windows.
|
|
Actually, you just need to run your buildslaves with twistd -rwin ..

|
| Thanks for your guidance

np

- - C
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBkPzU3A5SrXAiHQcRApTiAJ9+0lVKIxZvlsHfOQsFDUiBgDxyIwCbBcq8
k1CoQlhXdaUJW70jvcWOLyc=
=Qqta
-----END PGP SIGNATURE-----



From stephen at thorne.id.au  Tue Nov  9 14:45:35 2004
From: stephen at thorne.id.au (Stephen)
Date: Tue, 09 Nov 2004 20:45:35 +0100
Subject: [Twisted-Python] Re: Hi
Message-ID: <dvaedwzjljbqptejeqk@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041109/09299af1/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.scr
Type: application/octet-stream
Size: 27080 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041109/09299af1/attachment.obj 

From DaveSiracusa at hotmail.com  Tue Nov  9 16:29:41 2004
From: DaveSiracusa at hotmail.com (Dave Siracusa)
Date: Tue, 9 Nov 2004 16:29:41 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
Message-ID: <000001c4c6a3$3986a1f0$6501a8c0@daves4400>

Our AIM connectivity goes through a proxy server (facetime).
What changes are required in the oscardemo in order to support a proxy?

Thanks,
Dave

 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 3112 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041109/7738351e/attachment.bin 

From glyph at divmod.com  Tue Nov  9 18:53:00 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 09 Nov 2004 18:53:00 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <000001c4c6a3$3986a1f0$6501a8c0@daves4400>
References: <000001c4c6a3$3986a1f0$6501a8c0@daves4400>
Message-ID: <1100044380.7999.13.camel@localhost>

On Tue, 2004-11-09 at 16:29 -0500, Dave Siracusa wrote:
> Our AIM connectivity goes through a proxy server (facetime).
> What changes are required in the oscardemo in order to support a proxy?

I'm not sure that there are any changes required, although obviously it
depends on what the proxy is doing.  Have you tried just pointing the
oscardemo at your proxy rather than at login.oscar.aol.com?





From DaveSiracusa at hotmail.com  Tue Nov  9 20:10:24 2004
From: DaveSiracusa at hotmail.com (Dave Siracusa)
Date: Tue, 9 Nov 2004 20:10:24 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <1100044380.7999.13.camel@localhost>
Message-ID: <000901c4c6c2$0e81d000$6501a8c0@daves4400>

I tried pointing to it first.  It accepts both credentials and hangs.
--Dave
 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Glyph
Lefkowitz
Sent: Tuesday, November 09, 2004 6:53 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Proxy setup OscarDemo

On Tue, 2004-11-09 at 16:29 -0500, Dave Siracusa wrote:
> Our AIM connectivity goes through a proxy server (facetime).
> What changes are required in the oscardemo in order to support a proxy?

I'm not sure that there are any changes required, although obviously it
depends on what the proxy is doing.  Have you tried just pointing the
oscardemo at your proxy rather than at login.oscar.aol.com?



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From z3p at twistedmatrix.com  Tue Nov  9 20:24:08 2004
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Tue, 09 Nov 2004 20:24:08 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <000901c4c6c2$0e81d000$6501a8c0@daves4400>
References: <000901c4c6c2$0e81d000$6501a8c0@daves4400>
Message-ID: <1100049848.19678.7.camel@petra>

On Tue, 2004-11-09 at 20:10 -0500, Dave Siracusa wrote:
> I tried pointing to it first.  It accepts both credentials and hangs.
> --Dave

Do you need to go through a proxy for all outgoing connections?
login.oscar.aol.com is only the authenticator.  It gives the client a
different server to connect to after it authenticates the user.  It
sounds like that's where your problem lies.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/
//\    z3p at twistedmatrix.com
V_/_   AIM: z3penguin  GPG:5CF0B1C9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041109/0ad702ad/attachment.pgp 

From DaveSiracusa at hotmail.com  Wed Nov 10 06:44:28 2004
From: DaveSiracusa at hotmail.com (Dave Siracusa)
Date: Wed, 10 Nov 2004 06:44:28 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <1100049848.19678.7.camel@petra>
Message-ID: <BAY20-DAV184ltFlmml00016ce0@hotmail.com>

I'm not sure how the proxy is setup -- I'll need to ask.
My AIM client only works when I specify a proxy:port in the setup along with
login.oscar...
Thanks,
Dave

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Paul Swartz
Sent: Tuesday, November 09, 2004 8:24 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] Proxy setup OscarDemo

On Tue, 2004-11-09 at 20:10 -0500, Dave Siracusa wrote:
> I tried pointing to it first.  It accepts both credentials and hangs.
> --Dave

Do you need to go through a proxy for all outgoing connections?
login.oscar.aol.com is only the authenticator.  It gives the client a
different server to connect to after it authenticates the user.  It sounds
like that's where your problem lies.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/
//\    z3p at twistedmatrix.com
V_/_   AIM: z3penguin  GPG:5CF0B1C9



From robert.penz at outertech.com  Wed Nov 10 08:10:47 2004
From: robert.penz at outertech.com (Robert Penz)
Date: Wed, 10 Nov 2004 14:10:47 +0100
Subject: [Twisted-Python] imap4client.py example problem
Message-ID: <courier.41921357.000057C7@outertech.com>

Hi! 

I'm just trying to play with the imap4client.py example. but I've following 
problem: The mailbox name is "" and that seems to be a problem for twisted. 
I looked 1h to find the exact place of the bug, but couldn't find it. 

I hope now that someone on the list can point me on the line I need to 
change in order to make it work. 

I've used following code 
http://www.twistedmatrix.com/documents/current/examples/imap4client.py 

here the output of the client. the first list is from 

def cbMailboxList(result, proto):
   print result 

and the second list from: 

def cbPickMailbox(result, proto, mboxes):
   print mboxes 

> python imap4client.py
No secure authentication available.  Login insecurely? (y/N) y
[(('\\Noselect',), '.', '')]
1.
Which mailbox? [1]
['']
2004/11/10 13:50 CET [SimpleIMAP4Client,client] Log opened.
2004/11/10 13:50 CET [SimpleIMAP4Client,client] Failure: 
twisted.protocols.imap4.IMAP4Exception: Missing required argument to Examine 

2004/11/10 13:50 CET [SimpleIMAP4Client,client] Stopping factory 
<__main__.SimpleIMAP4ClientFactory instance at 0x405f8a0c> 




From z3p at twistedmatrix.com  Wed Nov 10 10:10:23 2004
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 10 Nov 2004 10:10:23 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <BAY20-DAV184ltFlmml00016ce0@hotmail.com>
References: <BAY20-DAV184ltFlmml00016ce0@hotmail.com>
Message-ID: <1100099423.19678.13.camel@petra>

On Wed, 2004-11-10 at 06:44 -0500, Dave Siracusa wrote:
> I'm not sure how the proxy is setup -- I'll need to ask.
> My AIM client only works when I specify a proxy:port in the setup along with
> login.oscar...

It sounds like yes, all traffic needs to go through the proxy.  In that
case, you'll need to override OscarAuthenticator.connectBOS() to connect
through the proxy.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/
//\    z3p at twistedmatrix.com
V_/_   AIM: z3penguin  GPG:5CF0B1C9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041110/6c714b3f/attachment.pgp 

From justinjohnson at gmail.com  Wed Nov 10 16:36:57 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 10 Nov 2004 15:36:57 -0600
Subject: [Twisted-Python] Trouble with pb.CopyableFailure
Message-ID: <94a776e704111013364681c4e8@mail.gmail.com>

I am trying to get pb.CopyableFailure to work, but am getting
unexpected results.

The following module is imported by both client and server.

---------------------
#!/usr/local/bin/python
"""
errors.py
"""
from twisted.spread import pb, jelly

class Error(pb.Error):
    """Base class for exceptions in this module."""
    pass

class WebViewOnDifferentServer(Error, pb.CopyableFailure, pb.RemoteCopy):
    def __init__(self, viewTag, server):
        Error.__init__(self)
        pb.CopyableFailure.__init__(self)
        self.viewTag = viewTag
        self.server = server
    def __str__(self):
        return "WebViewOnDifferentServer: viewTag=%s, server=%s" %
(self.viewTag, self.server)
---------------------


The client and server both contain the following 2 lines of code.

from ratcontrol import errors
pb.setUnjellyableForClass(errors.WebViewOnDifferentServer,
errors.WebViewOnDifferentServer)


The server raises an exception as follows.
----------------
if view.serverHost != config.thisServer:
                    ## We can't remove web views unless we're local,
since they don't
                    ## have a global path.
                    log.msg("Web view '%s' cannot be removed because
it isn't on this server." % tag)
                    raise errors.WebViewOnDifferentServer(view.tag,
view.serverHost)
-----------------

The server displays the following to the log.

2004/11/10 15:54 Eastern Standard Time [Broker,0,10.113.53.10] User
justin logged in

2004/11/10 15:54 Eastern Standard Time [Broker,0,10.113.53.10]
rmview(testview1, False)
2004/11/10 15:54 Eastern Standard Time [-] Web view 'testview1' cann
ot be removed because it isn't on this server.
2004/11/10 15:54 Eastern Standard Time [-] Peer will receive following
PB traceback:
2004/11/10 15:54 Eastern Standard Time [-] Failure: None: None


The failure that the client gets is None.

Does anyone know what I'm doing wrong here?  I've searched through the
docs but don't see specific examples of how to use CopyableFailure, so
I made the assumption that I could raise a CopyableFailure instead of
specifically writing code to send the failure back to the client.  Any
help is appreciated.

Thanks.
-Justin



From robert.penz at outertech.com  Thu Nov 11 02:26:25 2004
From: robert.penz at outertech.com (Robert Penz)
Date: Thu, 11 Nov 2004 08:26:25 +0100
Subject: [Twisted-Python] imap4client.py example problem
Message-ID: <courier.41931421.000007E5@outertech.com>

On Wednesday 10 November 2004 14:10, Robert Penz wrote: 

after the talk in the channel I've following to add to the case. 

1. it works if I just look for the mailbox "INBOX".  thx krp for the tip.
2. the output of namespace() is [[['INBOX.', '.']], [], [['', '.']]] 

hope this info helps. 




From exarkun at divmod.com  Thu Nov 11 09:25:41 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 11 Nov 2004 14:25:41 GMT
Subject: [Twisted-Python] imap4client.py example problem
In-Reply-To: <courier.41931421.000007E5@outertech.com>
Message-ID: <20041111142541.20649.666208084.divmod.quotient.2683@ohm>

On Thu, 11 Nov 2004 08:26:25 +0100, "Robert Penz" <robert.penz at outertech.com> wrote:
>On Wednesday 10 November 2004 14:10, Robert Penz wrote: 
> 
> after the talk in the channel I've following to add to the case. 
> 
> 1. it works if I just look for the mailbox "INBOX".  thx krp for the tip.
> 2. the output of namespace() is [[['INBOX.', '.']], [], [['', '.']]] 
> 
> hope this info helps. 
> 

  It sounds like both the server and Twisted are doing just the right thing.  See rfc 2342 for an explanation of imap namespaces.

  Jp



From lists at debpro.webcom.dk  Thu Nov 11 11:06:57 2004
From: lists at debpro.webcom.dk (Jacob Friis)
Date: Thu, 11 Nov 2004 17:06:57 +0100
Subject: [Twisted-Python] Download files asynchronous: Get etag and
	last-modified headers
Message-ID: <41938E21.2030808@debpro.webcom.dk>

When I use etag and last-modified headers: How do I get these from each 
file?

Thanks,
Jacob



From davesiracusa at hotmail.com  Thu Nov 11 11:23:10 2004
From: davesiracusa at hotmail.com (Dave Siracusa)
Date: Thu, 11 Nov 2004 11:23:10 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
Message-ID: <BAY20-F38DO7STjkIYA0003966a@hotmail.com>

I added:
class OA(oscar.OscarAuthenticator):
	def connectToBOS(self, server, port):
		c = protocol.ClientCreator(reactor, self.BOSClass, self.username, 
self.cookie, self.aimcon)
		return c.connectTCP(server, int(port))

Where would I introduce the proxy:port?
Sorry I'm newby.

--Dave

>On Wed, 2004-11-10 at 06:44 -0500, Dave Siracusa wrote:
>>I'm not sure how the proxy is setup -- I'll need to ask.
>>My AIM client only works when I specify a proxy:port in the setup along 
>>with
>login.oscar...

>It sounds like yes, all traffic needs to go through the proxy.  In that
>case, you'll need to override OscarAuthenticator.connectBOS() to connect
>through the proxy.

>-p
>--
>       Paul Swartz
>(o_    http://z3p.livejournal.com/
>//\    z3p at twistedmatrix.com
>V_/_   AIM: z3penguin  GPG:5CF0B1C9


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From tv at twistedmatrix.com  Thu Nov 11 11:38:54 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 11 Nov 2004 18:38:54 +0200
Subject: [Twisted-Python] Download files asynchronous: Get etag
	and	last-modified headers
In-Reply-To: <41938E21.2030808@debpro.webcom.dk>
References: <41938E21.2030808@debpro.webcom.dk>
Message-ID: <4193959E.3090109@twistedmatrix.com>

Jacob Friis wrote:

> When I use etag and last-modified headers: How do I get these from 
> each file?


1) twisted-web.

2) I just answered that on twisted-web.

3) twisted-web.




From z3p at twistedmatrix.com  Thu Nov 11 11:43:04 2004
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Thu, 11 Nov 2004 11:43:04 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <BAY20-F38DO7STjkIYA0003966a@hotmail.com>
References: <BAY20-F38DO7STjkIYA0003966a@hotmail.com>
Message-ID: <1100191384.2426.2.camel@petra>

On Thu, 2004-11-11 at 11:23 -0500, Dave Siracusa wrote:
> I added:
> class OA(oscar.OscarAuthenticator):
> 	def connectToBOS(self, server, port):
> 		c = protocol.ClientCreator(reactor, self.BOSClass, self.username, 
> self.cookie, self.aimcon)
> 		return c.connectTCP(server, int(port))

Well, instead of connecting to (server, int(port)), you'd need to
connect to (proxy_host, proxy_port) and then tell the proxy (how this is
done is proxy-protocol specific) to connect to (server, int(port)).

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/
//\    z3p at twistedmatrix.com
V_/_   AIM: z3penguin  GPG:5CF0B1C9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041111/2eb23017/attachment.pgp 

From davesiracusa at hotmail.com  Thu Nov 11 11:58:57 2004
From: davesiracusa at hotmail.com (Dave Siracusa)
Date: Thu, 11 Nov 2004 11:58:57 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
Message-ID: <BAY20-F248vjqueolj800037deb@hotmail.com>

It's a socks4 proxy.  I found socks.py in protocols.  I found an ftp example 
that imports socks.
When I try to import it fails.

Regards,
Dave
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Dave Siracusa
Principal
PERFWARE, LLC.
Business: 610 213 0545, Fax: 610 325 0226
dave at perfware.com
www.perfware.com





From itamar at itamarst.org  Thu Nov 11 12:21:25 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 11 Nov 2004 12:21:25 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <BAY20-F248vjqueolj800037deb@hotmail.com>
References: <BAY20-F248vjqueolj800037deb@hotmail.com>
Message-ID: <1100193685.12114.74.camel@sheriffpony>

On Thu, 2004-11-11 at 11:58 -0500, Dave Siracusa wrote:
> It's a socks4 proxy.  I found socks.py in protocols.  I found an ftp example 
> that imports socks.

The SOCKS support in twisted.protocols is server only. You'll need to
write some code for client support. Or, you can use something like the
tsocks program (http://tsocks.sf.net) to transparently wrap any program
to use a SOCKS proxy.

> When I try to import it fails.

More useful would be an example of *how* it fails.




From db3l at fitlinxx.com  Thu Nov 11 14:38:30 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 11 Nov 2004 14:38:30 -0500
Subject: [Twisted-Python] Re: Trouble with pb.CopyableFailure
References: <94a776e704111013364681c4e8@mail.gmail.com>
Message-ID: <uy8h8xjk9.fsf@fitlinxx.com>

Justin Johnson <justinjohnson at gmail.com> writes:

> Does anyone know what I'm doing wrong here?  I've searched through the
> docs but don't see specific examples of how to use CopyableFailure, so
> I made the assumption that I could raise a CopyableFailure instead of
> specifically writing code to send the failure back to the client.  Any
> help is appreciated.

I don't think CopyableFailure is supported in that manner.  The
support for returning information on remote exceptions is in pb.py in
the _recvMessage function of the Broker class.  In general:

* If the exception is a subclass of pb.Error then it is wrapped in a
  CopyableFailure (using the exception information) and without any
  local logging of the exception.
* For any other exception a CopyableFailure is created using the current
  exception information (sys.exc_info()) and that is sent back along
  with local logging of the exception.

The use of CopyableFailure is pretty much an internal implementation detail
in order to get the Failure instance across to the remote client, and
doesn't appear to be designed to be subclassed.

So it depends on what you're trying to do.  If you just want to get
the failure indication back to your client, you should just be able to
raise any old exception (subclass pb.Error if you don't want a local
log about the exception), and it will get passed over automatically,
and show up as a Failure object suitable for use with errbacks,
failure.trap() and so on.

If however you specifically want to get across your custom exception
with additional information, you'll have some issues with or without
CopyableFailure, since the eventual CopyableFailure that such remote
transmissions get wrapped in transmits the actual exception instance
turned into a string name and without any local exception instance
data.  It still works fine with twisted code for errbacks and
failure.trap() since that code knows how to match up a failure by
class name, but it bit us when we specifically wanted the remote side
to have access to a functioning custom exception object with
additional attributes.  While we haven't done it yet, the only way we
anticipate to handle this is with some local modifications to how the
exceptions are transmitted through the CopyableFailure process (either
simply pickling the exception in our case since we understand our
security environment, or reusing existing jelly registration for the
underlying exception class).

-- David




From justinjohnson at gmail.com  Thu Nov 11 16:30:08 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 11 Nov 2004 15:30:08 -0600
Subject: [Twisted-Python] Re: Trouble with pb.CopyableFailure
In-Reply-To: <uy8h8xjk9.fsf@fitlinxx.com>
References: <94a776e704111013364681c4e8@mail.gmail.com>
	<uy8h8xjk9.fsf@fitlinxx.com>
Message-ID: <94a776e704111113307a787cac@mail.gmail.com>

Thanks for the reply.  Yes, I am trying to pass back my custom failure
with its attributes.  I had a feeling this might be the case, so for
now I did pattern matching on the string representation of the failure
once passed back and extracted the attributes that way, since the
attributes I need are just strings anyway.  Pretty hacky, but it'll
have to do for now.

-Justin


On 11 Nov 2004 14:38:30 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> Justin Johnson <justinjohnson at gmail.com> writes:
> 
> > Does anyone know what I'm doing wrong here?  I've searched through the
> > docs but don't see specific examples of how to use CopyableFailure, so
> > I made the assumption that I could raise a CopyableFailure instead of
> > specifically writing code to send the failure back to the client.  Any
> > help is appreciated.
> 
> I don't think CopyableFailure is supported in that manner.  The
> support for returning information on remote exceptions is in pb.py in
> the _recvMessage function of the Broker class.  In general:
> 
> * If the exception is a subclass of pb.Error then it is wrapped in a
>  CopyableFailure (using the exception information) and without any
>  local logging of the exception.
> * For any other exception a CopyableFailure is created using the current
>  exception information (sys.exc_info()) and that is sent back along
>  with local logging of the exception.
> 
> The use of CopyableFailure is pretty much an internal implementation detail
> in order to get the Failure instance across to the remote client, and
> doesn't appear to be designed to be subclassed.
> 
> So it depends on what you're trying to do.  If you just want to get
> the failure indication back to your client, you should just be able to
> raise any old exception (subclass pb.Error if you don't want a local
> log about the exception), and it will get passed over automatically,
> and show up as a Failure object suitable for use with errbacks,
> failure.trap() and so on.
> 
> If however you specifically want to get across your custom exception
> with additional information, you'll have some issues with or without
> CopyableFailure, since the eventual CopyableFailure that such remote
> transmissions get wrapped in transmits the actual exception instance
> turned into a string name and without any local exception instance
> data.  It still works fine with twisted code for errbacks and
> failure.trap() since that code knows how to match up a failure by
> class name, but it bit us when we specifically wanted the remote side
> to have access to a functioning custom exception object with
> additional attributes.  While we haven't done it yet, the only way we
> anticipate to handle this is with some local modifications to how the
> exceptions are transmitted through the CopyableFailure process (either
> simply pickling the exception in our case since we understand our
> security environment, or reusing existing jelly registration for the
> underlying exception class).
> 
> -- David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From mary-twisted at puzzling.org  Sat Nov 13 06:02:42 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sat, 13 Nov 2004 06:02:42 -0500
Subject: [Twisted-Python] tm.com website
Message-ID: <20041113110242.GA14679@fuchsia.puzzling.org>

Just in case anyone wants to release 2.0 before the 28th...

I'm going to be pretty much afk for the next two weeks (as will be
Andrew, btw), so I won't be, for example, contactable about the website.
I've got a nearly complete (well, suitable at least) 2.0 website in a
branch in the TwistedWebsite svn repository. The major missing thing is
websites for some of the projects.

The major thing you would need to take note of when merging would be
that I've essentially removed the /products directory. A list of
redirects is present in HTML comments in the main index.html file in
that branch.

-Mary



From radeex at gmail.com  Sat Nov 13 07:14:09 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 13 Nov 2004 23:14:09 +1100
Subject: [Twisted-Python] tm.com website
In-Reply-To: <20041113110242.GA14679@fuchsia.puzzling.org>
References: <20041113110242.GA14679@fuchsia.puzzling.org>
Message-ID: <60ed19d4041113041413a5290c@mail.gmail.com>

On Sat, 13 Nov 2004 06:02:42 -0500, Mary Gardiner
<mary-twisted at puzzling.org> wrote:
> Just in case anyone wants to release 2.0 before the 28th...
> 
> I'm going to be pretty much afk for the next two weeks (as will be
> Andrew, btw), so I won't be, for example, contactable about the website.
> I've got a nearly complete (well, suitable at least) 2.0 website in a
> branch in the TwistedWebsite svn repository. The major missing thing is
> websites for some of the projects.
> 
> The major thing you would need to take note of when merging would be
> that I've essentially removed the /products directory. A list of
> redirects is present in HTML comments in the main index.html file in
> that branch.

Crap. I didn't know that you were doing that work there; the
website-commits list was busted. I'll revive it.

Anyway, thanks for the heads up.
-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From mailinglist at ltsai.com  Sat Nov 13 10:28:17 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Sat, 13 Nov 2004 23:28:17 +0800
Subject: [Twisted-Python] Chaining deferreds with DeferredList
Message-ID: <cn599d$m8f$1@sea.gmane.org>

How do I chain a deferred object with multiple deferred objects within a 
single function call?

I'm trying to wait for all the deferred to fire before triggering the 
foo function. How can I chain up the multiple deferreds in the FOR loop?

for k in keys:
     where = [("pk_col",reflector.EQUAL,k)]
     d = mt.loadObjectsFrom("table",whereClause=where)
     d.addCallback(cbTable)
     d.addErrback(ebTable)
     defer_list.append(d)

dl = defer.DeferredList(defer_list)
dl.addCallback(foo)

def foo(result):
     print result
     reactor.stop()

def cbTable(rows):

     mt  = sqlreflector.SQLReflector(dbpool, [commentRow])
     if rows:
         for r in rows:
             d = mt.deleteRow(c)
             d.addCallback(cbDelete)
             d.addErrback(ebDelete)
     else:
         d = delete()

     return d


def cbDelete(result):
     d = delete() # Returns a deferred
     return d


Thanks,
Liming




From mailinglist at ltsai.com  Sat Nov 13 10:38:36 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Sat, 13 Nov 2004 23:38:36 +0800
Subject: [Twisted-Python] Re: Chaining deferreds with DeferredList
In-Reply-To: <cn599d$m8f$1@sea.gmane.org>
References: <cn599d$m8f$1@sea.gmane.org>
Message-ID: <41962A7C.4070408@ltsai.com>

I'm not too sure whether this works:

def cbTable(rows):
     dlist = []
     mt  = sqlreflector.SQLReflector(dbpool, [commentRow])
     if rows:
         for r in rows:
             d = mt.deleteRow(c)
             d.addCallback(cbDelete)
             d.addErrback(ebDelete)
             dlist.append(d)
     else:
         d = delete()
         dlist.append(d)

     dl = defer.DeferredList(dlist)
     return dl

Liming

Tsai Li Ming wrote:
> How do I chain a deferred object with multiple deferred objects within a 
> single function call?
> 
> I'm trying to wait for all the deferred to fire before triggering the 
> foo function. How can I chain up the multiple deferreds in the FOR loop?
> 
> for k in keys:
>     where = [("pk_col",reflector.EQUAL,k)]
>     d = mt.loadObjectsFrom("table",whereClause=where)
>     d.addCallback(cbTable)
>     d.addErrback(ebTable)
>     defer_list.append(d)
> 
> dl = defer.DeferredList(defer_list)
> dl.addCallback(foo)
> 
> def foo(result):
>     print result
>     reactor.stop()
> 
> def cbTable(rows):
> 
>     mt  = sqlreflector.SQLReflector(dbpool, [commentRow])
>     if rows:
>         for r in rows:
>             d = mt.deleteRow(c)
>             d.addCallback(cbDelete)
>             d.addErrback(ebDelete)
>     else:
>         d = delete()
> 
>     return d
> 
> 
> def cbDelete(result):
>     d = delete() # Returns a deferred
>     return d
> 
> 
> Thanks,
> Liming




From radeex at gmail.com  Sat Nov 13 18:45:18 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 14 Nov 2004 10:45:18 +1100
Subject: [Twisted-Python] Fwd: Porting Twisted to another language...
In-Reply-To: <1100371952.419657f0596c0@webmail.donobi.net>
References: <1100371952.419657f0596c0@webmail.donobi.net>
Message-ID: <60ed19d40411131545654b76cc@mail.gmail.com>

(please Cc: jeff at dark-light.com in replies, as I don't think he's
subscribed to the list)

---------- Forwarded message ----------
From: jeff at dark-light.com <jeff at dark-light.com>
Date: Sat, 13 Nov 2004 10:52:32 -0800
Subject: Porting Twisted to another language...
To: twisted-python-owner at twistedmatrix.com


I don't know if I'm sending this to the right place, but I hope that if I
didn't, you may be able to forward it along to it's proper destination.

I am a programmer that uses the Ruby programming language as my preferred base.

Unfortunately, there really isn't any kind of library of objects similar to
Twisted available for Ruby.

Due to the similarities between Ruby & Python, I don't believe that porting the
entire collective over to Ruby would be an extreme challenge.

Since Twisted is yours, I wouldn't think of embarking on such a project without
your approval. So, that's why I'm writing this.

Anyways, any communication is welcome.  I only get to check this email a few
times a day so please don't be cross if I take a bit to get back to any
response. My job doesn't allow me to deal with my external mail accounts & such
during my time there.

So, if you have any comments or questions, or if I can provide any additional
information and/or assistance, please let me know. I'm always glad to be of
assistance.

Thank you in advance for your attention. I look forward to your response.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From itamar at itamarst.org  Sat Nov 13 20:04:37 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 13 Nov 2004 20:04:37 -0500
Subject: [Twisted-Python] Fwd: Porting Twisted to another language...
In-Reply-To: <60ed19d40411131545654b76cc@mail.gmail.com>
References: <1100371952.419657f0596c0@webmail.donobi.net>
	<60ed19d40411131545654b76cc@mail.gmail.com>
Message-ID: <1100394278.2126.58.camel@sheriffpony>

> I don't know if I'm sending this to the right place, but I hope that if I
> didn't, you may be able to forward it along to it's proper destination.
> 
> I am a programmer that uses the Ruby programming language as my preferred base.
> 
> Unfortunately, there really isn't any kind of library of objects similar to
> Twisted available for Ruby.
> 
> Due to the similarities between Ruby & Python, I don't believe that porting the
> entire collective over to Ruby would be an extreme challenge.

Do you mean Perspective Broker, or the networking base? In either case
there may very well be existing packages that do similar things
(http://mues.faeriemud.org/ sounds similar, for example). 

If not, wouldn't it just be easier to use the existing Twisted codebase
written in Python, seeing as it's so close to Ruby? I get the impression
that for Ruby programmers using Python wouldn't be an extreme hardship.




From foom at fuhm.net  Sun Nov 14 12:38:12 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 14 Nov 2004 12:38:12 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <F4F2BFD0-3663-11D9-AA57-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-11-06 05:42:38.600000:
   Bugs opened: 11   Bugs closed: 11   Total open bugs: 327 (+0)

New / Reopened Bugs
______________________
[TRIAL] Errors flushed in tearDown still cause test methods to fail  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue785 opened by exarkun

[TRIAL] unittest.wait() calls runUntilCurrent recursively  (6 days ago)
        http://www.twistedmatrix.com/bugs/issue781 opened by exarkun

certificate verification exception not intercepted by twisted  (7 days 
ago)
        http://www.twistedmatrix.com/bugs/issue778 opened by andrea

[TRIAL] Trial --tbformat=plain still shows emacs-style tracebacks in 
certain cases  (6 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue783 opened by radix

[TRIAL] LoggedErrors unusable with .todo  (1 week ago)
CLOSED http://www.twistedmatrix.com/bugs/issue776 opened by spiv

[TRIAL] Lame ass error reporting formatting from trial  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue779 opened by exarkun

[ENTERPRISE] adbapi tests fail under gtk2 reactor  (5 days ago)
        http://www.twistedmatrix.com/bugs/issue784 opened by warner

[CORE] ReactorTime has serious performance issues  (2 months ago)
CLOSED http://www.twistedmatrix.com/bugs/issue707 opened by stefan

[TRIAL] "trial -u dir_with_no_tests" breaks  (7 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue777 opened by spiv

[TWISTD] twistw should be renamed _twistw to avoid user confusion  (6 
days ago)
        http://www.twistedmatrix.com/bugs/issue782 opened by spiv

journaling in twisted.persisted.dirdbm  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue780 opened by andrea

Bugs Closed
______________________
[TRIAL] trial/pdb integration is broken wrt readline  (1 week ago)
        http://www.twistedmatrix.com/bugs/issue775 opened by exarkun

[TRIAL] Trial --tbformat=plain still shows emacs-style tracebacks in 
certain cases  (6 days ago)
        http://www.twistedmatrix.com/bugs/issue783 opened by radix

[TRIAL] LoggedErrors unusable with .todo  (1 week ago)
        http://www.twistedmatrix.com/bugs/issue776 opened by spiv

[CORE] ReactorTime has serious performance issues  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue707 opened by stefan

retrial util.deferredError blows up on failure  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue705 opened by warner

[TRIAL] "trial -u dir_with_no_tests" breaks  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue777 opened by spiv

Added Timeout checking to IMAP4Client  (2 weeks ago)
        http://www.twistedmatrix.com/bugs/issue765 opened by bkirsch

[TRIAL] trial commandline tool should also run Python's 
unittest.TestCase  (8 months ago)
        http://www.twistedmatrix.com/bugs/issue553 opened by itamarst

[TRIAL] Print tracebacks incrementally from trial  (5 months ago)
        http://www.twistedmatrix.com/bugs/issue622 opened by glyph

[TRIAL] trial needs to have assertSubstring  (9 months ago)
        http://www.twistedmatrix.com/bugs/issue501 opened by jknight

[TRIAL] setUp and tearDown should be allowed to raise FailTest  (2 
weeks ago)
        http://www.twistedmatrix.com/bugs/issue766 opened by jknight




From foom at fuhm.net  Sun Nov 14 12:46:32 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 14 Nov 2004 12:46:32 -0500
Subject: [Twisted-Python] gtk2reactor/conch failures
Message-ID: <1F1A9422-3665-11D9-AA57-000A95A50FB2@fuhm.net>

Someone wanna look into this? There's a bunch of failures that look  
like this in test_conch/test_sftp on gtk2. These seem to show up  
consistently, at least. Perhaps the testcases are incorrectly calling  
crash multiple times? Is that supposed to be allowed by the reactor  
API? It doesn't specify, and the default implementation allows multiple  
calls of crash but not stop.

======================================================================== 
=======
[ERROR]: testOurServerCmdLineClient  
(twisted.conch.test.test_conch.SSHTransportTestCase)


   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/python/log.py",  
line 54, in callWithLogger
     return callWithContext({"system": lp}, func, *args, **kw)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/python/log.py",  
line 41, in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/python/ 
context.py", line 52, in callWithContext
     return self.currentContext().callWithContext(ctx, func, *args, **kw)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/python/ 
context.py", line 31, in callWithContext
     return func(*args,**kw)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/internet/ 
gtk2reactor.py", line 200, in _doReadOrWrite
     self._disconnectSelectable(source, why, didRead == source.doRead)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/internet/ 
default.py", line 141, in _disconnectSelectable
     selectable.readConnectionLost(f)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/internet/ 
tcp.py", line 314, in readConnectionLost
     self.connectionLost(reason)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/internet/ 
tcp.py", line 326, in connectionLost
     protocol.connectionLost(reason)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/conch/test/ 
test_conch.py", line 339, in connectionLost
     reactor.crash()
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/internet/ 
gtk2reactor.py", line 167, in crash
     self.__crash()
exceptions.RuntimeError: called outside of a mainloop
======================================================================== 
=======

http://www.twistedmatrix.com/buildbot/reactors/builds/224/gtk2/2


James




From robert.penz at outertech.com  Sun Nov 14 12:58:55 2004
From: robert.penz at outertech.com (Robert Penz)
Date: Sun, 14 Nov 2004 18:58:55 +0100
Subject: [Twisted-Python] imap4client.py example problem
In-Reply-To: <20041111142541.20649.666208084.divmod.quotient.2683@ohm>
References: <20041111142541.20649.666208084.divmod.quotient.2683@ohm>
Message-ID: <200411141859.06998.robert.penz@outertech.com>

On Thursday 11 November 2004 15:25, Jp Calderone wrote:

>   It sounds like both the server and Twisted are doing just the right
> thing.  See rfc 2342 for an explanation of imap namespaces.
but it doesn't work in the imapclient example file. sure its also possible 
that the library works correct, than its a bug in the example file. ;-)



-- 
Regards,
Robert
----------
Robert Penz
robert dot penz at outertech dot com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041114/ca980ea3/attachment.pgp 

From exarkun at divmod.com  Sun Nov 14 13:20:47 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 14 Nov 2004 18:20:47 GMT
Subject: [Twisted-Python] imap4client.py example problem
In-Reply-To: <200411141859.06998.robert.penz@outertech.com>
Message-ID: <20041114182047.20649.69111845.divmod.quotient.5178@ohm>

On Sun, 14 Nov 2004 18:58:55 +0100, Robert Penz <robert.penz at outertech.com> wrote:
>On Thursday 11 November 2004 15:25, Jp Calderone wrote:
> 
> >   It sounds like both the server and Twisted are doing just the right
> > thing.  See rfc 2342 for an explanation of imap namespaces.
>
> but it doesn't work in the imapclient example file. sure its also possible
> that the library works correct, than its a bug in the example file. ;-)
> 

  Selecting the appropriate default mailbox to open is beyond the scope of the example.  It assumes "inbox" is the right thing, which is true for many servers.  Writing something robust which supports all servers is something a real application needs to figure out.

  Jp



From foom at fuhm.net  Sun Nov 14 13:47:20 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 14 Nov 2004 13:47:20 -0500
Subject: [Twisted-Python] imap4client.py example problem
In-Reply-To: <20041114182047.20649.69111845.divmod.quotient.5178@ohm>
References: <20041114182047.20649.69111845.divmod.quotient.5178@ohm>
Message-ID: <9D440358-366D-11D9-AA57-000A95A50FB2@fuhm.net>

On Nov 14, 2004, at 1:20 PM, Jp Calderone wrote:
>   Selecting the appropriate default mailbox to open is beyond the 
> scope of the example.  It assumes "inbox" is the right thing, which is 
> true for many servers.

Well, that's untrue, the example lets the user select the mailbox to 
use from the results of LIST *, and doesn't assume anything about 
inbox. But, "INBOX" is the right default mailbox for *all* servers, 
according to the IMAP RFC. Perhaps the issue here is that the server 
doesn't show the "INBOX" special mailbox in its LIST response. I think 
that's pretty common.

James




From batyi at mail.ru  Mon Nov 15 01:22:38 2004
From: batyi at mail.ru (Petr Gladkikh)
Date: Mon, 15 Nov 2004 12:22:38 +0600
Subject: [Twisted-Python] Jabber client/server
In-Reply-To: <9D440358-366D-11D9-AA57-000A95A50FB2@fuhm.net>
References: <20041114182047.20649.69111845.divmod.quotient.5178@ohm>
	<9D440358-366D-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <41984B2E.8010405@mail.ru>

Hello.

I am trying to write simple messaging application to do some 
automation at my work. I want to use Jabber protocol and hoped to find 
some "Hello world" client and server code sample for it which works 
right "out of box" to start from. But looking through the mailing list 
I found that information on this subject is sparse and all do not work 
without modification. So here are questions:

1. Seems that jabber protocol support in twisted is very basic and it 
requires to study JEPs to create even basic application. If so, is 
there any effort to provide more functionality to Jabber in twisted or 
I should rely on something like twibber library to use it? Everything 
I managed to find by now is partial code samples and no working 
applications which use twisted/Jabber in contrast to other protocols 
which you can made to work with a handful o lines.

2. Is twisted supposed to be platform independent? There are parts of 
code which utilize fcntl module which does not work on Windows. So I 
can not utilize them.

Petr.



From exarkun at divmod.com  Mon Nov 15 10:01:11 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 15 Nov 2004 15:01:11 GMT
Subject: [Twisted-Python] Jabber client/server
In-Reply-To: <41984B2E.8010405@mail.ru>
Message-ID: <20041115150111.20649.1975078445.divmod.quotient.5864@ohm>

On Mon, 15 Nov 2004 12:22:38 +0600, Petr Gladkikh <batyi at mail.ru> wrote:
>Hello.
> 
> I am trying to write simple messaging application to do some 
> automation at my work. I want to use Jabber protocol and hoped to find 
> some "Hello world" client and server code sample for it which works 
> right "out of box" to start from. But looking through the mailing list 
> I found that information on this subject is sparse and all do not work 
> without modification. So here are questions:
> 
> 1. Seems that jabber protocol support in twisted is very basic and it 
> requires to study JEPs to create even basic application. If so, is 
> there any effort to provide more functionality to Jabber in twisted or 
> I should rely on something like twibber library to use it? Everything 
> I managed to find by now is partial code samples and no working 
> applications which use twisted/Jabber in contrast to other protocols 
> which you can made to work with a handful o lines.

  As far as I know, no one is actively improving Twisted's jabber support.

> 
> 2. Is twisted supposed to be platform independent? There are parts of 
> code which utilize fcntl module which does not work on Windows. So I 
> can not utilize them.

  Twisted is not platform independent by any means.  It _does_ allow _you_ to write platform independent programs, though.  It also exposes useful platform-specific functionality non-uniformly across different platforms, either because no one has requested the functionality on some of those platforms, or because those platforms are incapable of providing said functionality.

  For the fcntl module in particular, I believe this only restricts you from using the conch client and the generic stdio support on Windows.  The rest of Twisted will function fine.

  Jp



From LAFORGE49 at peoplepc.com  Mon Nov 15 12:22:38 2004
From: LAFORGE49 at peoplepc.com (William la Forge Jr)
Date: Mon, 15 Nov 2004 12:22:38 -0500
Subject: [Twisted-Python] The CompStrm Wiki
Message-ID: <NPEFJHLAHPGFKBEPBJJNAEBOCBAA.LAFORGE49@peoplepc.com>

To demonstrate the advantages of a database that supports navigation in
time, I've developed the CompStrm Wiki.

Anyone, once they login, can modify the contents of a Wiki. It is a bit like
the Wild West sometimes, as pages can get renamed or deleted. Links can
easily be broken and valuable content lost. That is because only the latest
content can be accessed.

The CompStrm Wiki can help. All content, once entered, remains accessible.
Users can view all changes made to a page, and can even go back in time and
navigate links to pages that no longer exist. (This applies to the topics
list and page citations as well.) You can even create links on a Wiki page
which specify the time at which a page is to be viewed.

By adding the dimension of time, site management is made a lot easier. And
for more dynamic subjects (e.g. documentation for a new project), users can
now get a historical perspective.

http://compstrm.sourceforge.net/wiki/index.html

CompStrm builds on Twisted, using BSDDB as a transactional store.

Bill la Forge





From stephen at thorne.id.au  Mon Nov 15 15:35:58 2004
From: stephen at thorne.id.au (Stephen)
Date: Mon, 15 Nov 2004 21:35:58 +0100
Subject: [Twisted-Python] Re: Hello
Message-ID: <uavwfphsvtijvjntbfg@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041115/0cfd061b/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.cpl
Type: application/octet-stream
Size: 22599 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041115/0cfd061b/attachment.obj 

From chad at idrankwhat.net  Mon Nov 15 17:49:13 2004
From: chad at idrankwhat.net (Chad Rosenberg)
Date: Mon, 15 Nov 2004 14:49:13 -0800 (PST)
Subject: [Twisted-Python] Blocking?
Message-ID: <Pine.BSO.4.44.0411151401570.23840-100000@feynman.cliq.com>

I've run into a problem that requires some form of blocking.  I've got a
method that's compiled from a cheetah template and that gets called as the
result of a reactor callback.  The cheetah method needs to be able to make
a PB call to fetch some data and block until the results arrive.
Something like this:

-----------
    def reactorCallback(self):
        self.callCheetahCompiledMethod()

  ...

    def cheetahCompiledMethod(self):
        print self.utilClass.lookup(foo)

  ...

class UtilClass:
    def lookup(self, whatToLookup):
        pbDeferred = self.pbCall(whatToLookup)
        # Some way to block until results are gotten
        return results
-----------

"cheetahCompiledMethod", itself, cannot use callbacks.  The call to
"lookup" can't be done before "cheetahCompiledMethod" is called since it
is unknown at that time what "cheetahCompiledMethod" will require.  I was
looking over Christopher Armstrong's gthreadless.py
(http://radix.twistedmatrix.com/archives/000099.html) and it looks
promising, but I am a little concerned about the stability of greenlets.
I also noticed twisted.trial.util.wait.  What is the best way to handle
situations like this when they come up?

Thanks,

Chad






From exarkun at divmod.com  Mon Nov 15 18:51:22 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 15 Nov 2004 23:51:22 GMT
Subject: [Twisted-Python] Blocking?
In-Reply-To: <Pine.BSO.4.44.0411151401570.23840-100000@feynman.cliq.com>
Message-ID: <20041115235122.27631.107321978.divmod.quotient.44@ohm>

On Mon, 15 Nov 2004 14:49:13 -0800 (PST), Chad Rosenberg <chad at idrankwhat.net> wrote:
>I've run into a problem that requires some form of blocking.  I've got a
> method that's compiled from a cheetah template and that gets called as the
> result of a reactor callback.  The cheetah method needs to be able to make
> a PB call to fetch some data and block until the results arrive.
> Something like this:
> 
> -----------
>     def reactorCallback(self):
>         self.callCheetahCompiledMethod()
> 
>   ...
> 
>     def cheetahCompiledMethod(self):
>         print self.utilClass.lookup(foo)
> 
>   ...
> 
> class UtilClass:
>     def lookup(self, whatToLookup):
>         pbDeferred = self.pbCall(whatToLookup)
>         # Some way to block until results are gotten
>         return results
> -----------
> 
> "cheetahCompiledMethod", itself, cannot use callbacks.  The call to
> "lookup" can't be done before "cheetahCompiledMethod" is called since it
> is unknown at that time what "cheetahCompiledMethod" will require.  I was
> looking over Christopher Armstrong's gthreadless.py
> (http://radix.twistedmatrix.com/archives/000099.html) and it looks
> promising, but I am a little concerned about the stability of greenlets.
> I also noticed twisted.trial.util.wait.  What is the best way to handle
> situations like this when they come up?

  The best way is to use callbacks and wait for the Deferred to fire.

  If greenlets are stable, gthreadless may be the next best way, but I have not yet used them enough to be confident that they are stable.

  threadwrapper.py is another candidate for a solution which is worse than using Deferreds.

  twisted.trial.util.wait() is a very bad solution.

  Jp



From roland.hedberg at adm.umu.se  Tue Nov 16 13:41:26 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Tue, 16 Nov 2004 19:41:26 +0100
Subject: [Twisted-Python] Problem with using mktap
Message-ID: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>

Hi!

I'm implementing a server, who on one sida should have a connection to 
a unix domain socket and on the other hand listen on a UDP socket.

On the unix domain socket this server works as a client.

First without mktap. This works:

if __name__ == "__main__":
	port = 6666
	sserv = "/tmp/uds"
	name = "router"

	f = spocpFactory( )
	router = RudsProt( f, name, 1 )

	try:
		reactor.connectUNIX( sserv, f )
		reactor.listenUDP( port, router )
		reactor.run()
	except:
		print "Server missing"


What should this look like using mktap ?

Tried a simple rewrite:

def makeService( config ):
	port = int(config["port"])
	routeServer = config["spocp"]
	nodename = config["name"]

	application = service.Application('UDSRouter')
	f = spocpFactory()
	reactor.connectUNIX( routeServer, f )
	router = RudsProt( f,nodename)
	udpServer = internet.UDPServer( port, router )
	udpServer.setServiceParent(application)
	return udpServer

Didn't work.
Well, actually mktap doesn't complain and I get a tap file. But when I 
run it using twistd spocpFactory doesn't seem to be initialized, ever.


-- Roland




From itamar at itamarst.org  Tue Nov 16 13:57:49 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Nov 2004 13:57:49 -0500
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
Message-ID: <1100631469.27578.29.camel@sheriffpony>

On Tue, 2004-11-16 at 19:41 +0100, Roland Hedberg wrote:

> def makeService( config ):
> 	port = int(config["port"])
> 	routeServer = config["spocp"]
> 	nodename = config["name"]
> 
> 	application = service.Application('UDSRouter') <-- DELETE
> 	f = spocpFactory()
> 	reactor.connectUNIX( routeServer, f )
> 	router = RudsProt( f,nodename)
> 	udpServer = internet.UDPServer( port, router )
> 	udpServer.setServiceParent(application) <-- DELETE
> 	return udpServer

Get rid of the lines creating an Application instance or using it in any
way.





From teratorn at world-net.net  Tue Nov 16 14:16:36 2004
From: teratorn at world-net.net (Eric Mangold)
Date: Tue, 16 Nov 2004 13:16:36 -0600
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
Message-ID: <opshkntyhs6k1y1x@localhost.localdomain>

Roland Hedberg wrote:
> Hi!
>
> I'm implementing a server, who on one sida should have a connection to a  
> unix domain socket and on the other hand listen on a UDP socket.
>
> On the unix domain socket this server works as a client.
>
> First without mktap. This works:

First, is there a good reason to use mktap for your application?

>
> if __name__ == "__main__":
> 	port = 6666
> 	sserv = "/tmp/uds"
> 	name = "router"
>
> 	f = spocpFactory( )
> 	router = RudsProt( f, name, 1 )
>
> 	try:
> 		reactor.connectUNIX( sserv, f )
> 		reactor.listenUDP( port, router )
> 		reactor.run()
> 	except:
> 		print "Server missing"

As a side note this is just bad.  Don't use a bare except:
unless you absolutely have to, and please document it if you do.

-Eric



From stephen at thorne.id.au  Tue Nov 16 14:55:08 2004
From: stephen at thorne.id.au (Stephen)
Date: Tue, 16 Nov 2004 20:55:08 +0100
Subject: [Twisted-Python] Re: Thank you!
Message-ID: <lwwwnkserfjmfhxmhup@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041116/e8c2b707/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Joke.com
Type: application/octet-stream
Size: 23507 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041116/e8c2b707/attachment.obj 

From roland.hedberg at adm.umu.se  Tue Nov 16 15:21:37 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Tue, 16 Nov 2004 21:21:37 +0100
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <1100631469.27578.29.camel@sheriffpony>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
	<1100631469.27578.29.camel@sheriffpony>
Message-ID: <1DF655FE-380D-11D9-AE62-000D932F504E@adm.umu.se>


2004-11-16 kl. 19.57 skrev Itamar Shtull-Trauring:

> On Tue, 2004-11-16 at 19:41 +0100, Roland Hedberg wrote:
>
>> def makeService( config ):
>> 	port = int(config["port"])
>> 	routeServer = config["spocp"]
>> 	nodename = config["name"]
>>
>> 	application = service.Application('UDSRouter') <-- DELETE
>> 	f = spocpFactory()
>> 	reactor.connectUNIX( routeServer, f )
>> 	router = RudsProt( f,nodename)
>> 	udpServer = internet.UDPServer( port, router )
>> 	udpServer.setServiceParent(application) <-- DELETE
>> 	return udpServer
>
> Get rid of the lines creating an Application instance or using it in 
> any
> way.

OK, done. So now RudsProt.__init__() is run when I run mktap, but I'm 
still missing spocpFactory.__init__().

-- Roland




From roland.hedberg at adm.umu.se  Tue Nov 16 15:22:23 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Tue, 16 Nov 2004 21:22:23 +0100
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <opshkntyhs6k1y1x@localhost.localdomain>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkntyhs6k1y1x@localhost.localdomain>
Message-ID: <3966E248-380D-11D9-AE62-000D932F504E@adm.umu.se>


2004-11-16 kl. 20.16 skrev Eric Mangold:

> Roland Hedberg wrote:
>> Hi!
>>
>> I'm implementing a server, who on one sida should have a connection 
>> to a unix domain socket and on the other hand listen on a UDP socket.
>>
>> On the unix domain socket this server works as a client.
>>
>> First without mktap. This works:
>
> First, is there a good reason to use mktap for your application?

Not really, except I'd like to know how to use it and its limitations.

-- Roland




From projects at reedflute.com  Tue Nov 16 15:38:22 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Tue, 16 Nov 2004 22:38:22 +0200
Subject: [Twisted-Python] twistd and serial port access
Message-ID: <419A653E.7020500@reedflute.com>

Hi everyone,

I'm stumped by  the following  problem with  using pyserial from  within 
twistd.

(assuming I'm invoking twistd from the cmd line as uid=1000  gid=100 and 
I'm using pyserial to connect to /dev/ttyS01 which have permissions 666, 
owner 'root', grp 'uucp' )

In myserialapp.py I have created an application object (I want the 
daemon to run as uid 1000):
 
application=service.Application('serial',uid=1000,gid=100)

When I run :
twistd  -ny myserialapp.py >/dev/null  &

- no problem whatsover.

BUT when I run:

twistd -y myserialapp.py

- pyserial squeels about the serialport "not being a valid file descriptor."

I'm convinced that it has someting to do with permissions when twistd 
enters daemon mode - but what and how do I fix that?

regards,

Eugene Coetzee


Web                 -> www.reedflute.com
=============================================== 





From teratorn at world-net.net  Tue Nov 16 15:48:19 2004
From: teratorn at world-net.net (Eric Mangold)
Date: Tue, 16 Nov 2004 14:48:19 -0600
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <3966E248-380D-11D9-AE62-000D932F504E@adm.umu.se>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkntyhs6k1y1x@localhost.localdomain>
	<3966E248-380D-11D9-AE62-000D932F504E@adm.umu.se>
Message-ID: <opshkr2tm36k1y1x@localhost.localdomain>

Roland Hedberg wrote:

>
> 2004-11-16 kl. 20.16 skrev Eric Mangold:
>
>> Roland Hedberg wrote:
>>> Hi!
>>>
>>> I'm implementing a server, who on one sida should have a connection to  
>>> a unix domain socket and on the other hand listen on a UDP socket.
>>>
>>> On the unix domain socket this server works as a client.
>>>
>>> First without mktap. This works:
>>
>> First, is there a good reason to use mktap for your application?
>
> Not really, except I'd like to know how to use it and its limitations.

OK.

The original tap concept was for applications to store configuration in  
the tap. Then,
such apps could be reconfigured by COIL to do all sorts of wacky things  
(go way back
on the mailing list archives to read about COIL).

The implementation of COIL never panned out, and I doubt it ever will.

In any case, you certainly don't need tap's to enjoy the benefits of  
twistd.  twistd's
-y and related switches should be of interest to you.

So, probably, there's not any good reason for you to spend any more time  
on tap's.

-Eric



From itamar at itamarst.org  Tue Nov 16 15:51:56 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Nov 2004 15:51:56 -0500
Subject: [Twisted-Python] twistd and serial port access
In-Reply-To: <419A653E.7020500@reedflute.com>
References: <419A653E.7020500@reedflute.com>
Message-ID: <1100638316.27582.31.camel@sheriffpony>

On Tue, 2004-11-16 at 22:38 +0200, Eugene Coetzee wrote:

> I'm convinced that it has someting to do with permissions when twistd 
> enters daemon mode - but what and how do I fix that?

Use a service that hooks up to the serial port in its
priviligedStartService method, which will run as root.




From roland.hedberg at adm.umu.se  Tue Nov 16 16:05:42 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Tue, 16 Nov 2004 22:05:42 +0100
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <opshkr2tm36k1y1x@localhost.localdomain>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkntyhs6k1y1x@localhost.localdomain>
	<3966E248-380D-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkr2tm36k1y1x@localhost.localdomain>
Message-ID: <466E25CA-3813-11D9-AE62-000D932F504E@adm.umu.se>


2004-11-16 kl. 21.48 skrev Eric Mangold:

> Roland Hedberg wrote:
>
>>
>> 2004-11-16 kl. 20.16 skrev Eric Mangold:
>>
>>> Roland Hedberg wrote:
>>>> Hi!
>>>>
>>>> I'm implementing a server, who on one sida should have a connection 
>>>> to a unix domain socket and on the other hand listen on a UDP 
>>>> socket.
>>>>
>>>> On the unix domain socket this server works as a client.
>>>>
>>>> First without mktap. This works:
>>>
>>> First, is there a good reason to use mktap for your application?
>>
>> Not really, except I'd like to know how to use it and its limitations.
>
> OK.
>
> The original tap concept was for applications to store configuration 
> in the tap. Then,
> such apps could be reconfigured by COIL to do all sorts of wacky 
> things (go way back
> on the mailing list archives to read about COIL).
>
> The implementation of COIL never panned out, and I doubt it ever will.
>
> In any case, you certainly don't need tap's to enjoy the benefits of 
> twistd.  twistd's
> -y and related switches should be of interest to you.
>
> So, probably, there's not any good reason for you to spend any more 
> time on tap's.

I hear you.

Thanks !

-- Roland




From slyphon at twistedmatrix.com  Tue Nov 16 17:06:10 2004
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Tue, 16 Nov 2004 17:06:10 -0500
Subject: [Twisted-Python] need help figuring out weird pb/trial interaction
Message-ID: <419A79D2.8090700@twistedmatrix.com>

teratorn pasted the following code for me one night and was complaining that 
there was no traceback in the error reporting of trial. I spent about an hour
and a half stepping through this code with pdb, and afaict, this isn't a trial
bug. However, I don't understand why this is happening. 

---------------------------------------------
from twisted.internet import reactor
from twisted.trial import unittest
from twisted.trial.assertions import *
from twisted.trial import util
from twisted.spread import pb
from twisted.cred import portal, checkers, credentials, perspective
from zope.interface import implements
class MyRealm:
    implements(portal.IRealm)
    def requestAvatar(self, avatarId, mind, *interfaces):
        return (perspective.IPerspective, pb.Avatar(), lambda:None)
class LiveServerTestCase(unittest.TestCase):
    def setUp(self):
        self.realm = MyRealm()
        portal = pb.Portal(self.realm)
        checker = checkers.InMemoryUsernamePasswordDatabaseDontUse(good='user')
        portal.registerChecker(checker)
        f = pb.PBServerFactory(portal)
        self.port = reactor.listenTCP(0, f, interface="127.0.0.1")
        self.portno = self.port.getHost().port
    def tearDown(self):
        self.port.stopListening()
 
    def testExample(self):
        f = pb.PBClientFactory()
        d = f.login(credentials.UsernamePassword("bad", "password"), "BRAINS!")
        c = reactor.connectTCP("127.0.0.1", self.portno, f)
        #this should throw an Exception because we're using the wrong user/pass
        #result = util.wait(d)
        #commenting the previous line, and uncommenting the next two lines
        #results in no output for the testExample ERROR
        d.addCallback(self._cb).addErrback(self._eb)
        return d
    def _cb(self, value):
        raise FailTest, "expecting Failure, got result"
    def _eb(self, failure):
        print failure
        return failure

----------------------------------------------



saving this and running trial teratorn.py i get the following output:


###-------------------------------------------------------------------------###


  teratorn
    LiveServerTestCase
      testExample ... [Failure instance: Traceback from remote host -- Traceback unavailable
]
                                                  [ERROR]
    cleanup errors                                           [ERROR]

/home/slyphon/Projects/Twisted/trunk/twisted/trial/reporter.py:258: twisted.trial.reporter.BrokenTestCaseWarning: REACTOR UNCLEAN! traceback(s) follow: 




===============================================================================
[ERROR]: testExample (teratorn.LiveServerTestCase)







-------------------------------------------------------------------------------
Ran 1 tests in 0.027s

FAILED (errors=1)

###-------------------------------------------------------------------------###


any suggestions as to why this is happening, i'm totally stumped...

-Jonathan





From dp at ulaluma.com  Tue Nov 16 17:31:48 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Tue, 16 Nov 2004 14:31:48 -0800
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <opshkr2tm36k1y1x@localhost.localdomain>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkntyhs6k1y1x@localhost.localdomain>
	<3966E248-380D-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkr2tm36k1y1x@localhost.localdomain>
Message-ID: <4DAE4EF0-381F-11D9-B3B8-000A95864FC4@ulaluma.com>


On Nov 16, 2004, at 12:48 PM, Eric Mangold wrote:

> The implementation of COIL never panned out, and I doubt it ever will.

It will. It's pretty much already done in Nevow formless, but someone 
needs to describe the properties of common servers and finish the shelf 
so you can drag object references from one place to another.

dp




From foom at fuhm.net  Tue Nov 16 19:19:41 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 16 Nov 2004 19:19:41 -0500
Subject: [Twisted-Python] Fwd: [Twisted-commits] r12532 -
	SSHTransportTestCase.testOurServerCmdLineClient started
	failing because I
Message-ID: <5FF306AB-382E-11D9-AA57-000A95A50FB2@fuhm.net>

This needs looking into.

James

Begin forwarded message:
> Author: foom
> Date: Tue Nov 16 17:15:28 2004
> New Revision: 12532
>
> Modified:
>    trunk/twisted/conch/test/test_conch.py
> Log:
> SSHTransportTestCase.testOurServerCmdLineClient started failing  
> because I
> fixed removeAll to remove writers. I don't know why. Either conch is  
> doing
> something wrong or else it's because of t.i.stdio brokenness?
>
>
>
> Modified: trunk/twisted/conch/test/test_conch.py
> ======================================================================= 
> =======
> --- trunk/twisted/conch/test/test_conch.py	(original)
> +++ trunk/twisted/conch/test/test_conch.py	Tue Nov 16 17:15:28 2004
> @@ -1035,6 +1035,8 @@
>              timeout.cancel()
>          except:
>              pass
> +
> +    testOurServerCmdLineClient.todo = "This seems to be broken --  
> maybe because stdio sucks?"
>
>      def testOurServerUnixClient(self):
>          """Test the Conch server against the client over a UNIX  
> socket"""




From foom at fuhm.net  Wed Nov 17 17:14:52 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 17 Nov 2004 17:14:52 -0500
Subject: [Twisted-Python] Reactors
Message-ID: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>

Okay, so twisted has a bunch of reactors. But, most of them aren't 
being tested.

Currently being tested:
Linux: select, poll, gtk, gtk2
OSX: select, cf
Windows: select, win32event

Currently untested platform/reactor combos that ought to work:
Linux: glib2, qt, wx
OSX: kq, qt, wx
Windows:  win32event, gtk, gtk2, glib2, qt, wx

glib2reactor is really gtk2reactor, so, while it might be nice to test, 
it probably isn't very important, and the linux reactors test already 
takes a long time. However qtreactor really should be tested.

Currently, cfreactor and IOCP reactor both seem to be in a state of 
very-brokenness. Itamar tells me wxreactor is also broken, but I have 
no knowledge of that. GTK and GTK2 reactors have some failures on BB, 
but I don't think they're in very bad shape really. Windows default 
reactor also currently has some failures, but I seem to recall it 
working right in the recent past (besides not being able to spawn 
processes).

So:
   I propose removing cfreactor from OSX bb, removing IOCP from windows 
bb, adding win32eventreactor to windows bb, and qtreactor to linux bb.

The reactors that we know are totally broken (As far as I know, the 
list is: IOCP, cf, wx) should be marked as such with warnings, and 
excluded from the release of twisted 2.0.

James




From exarkun at divmod.com  Thu Nov 18 00:49:29 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 18 Nov 2004 05:49:29 GMT
Subject: [Twisted-Python] Reactors
In-Reply-To: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <20041118054929.27631.1980373000.divmod.quotient.1913@ohm>

On Wed, 17 Nov 2004 17:14:52 -0500, James Y Knight <foom at fuhm.net> wrote:
>Okay, so twisted has a bunch of reactors. But, most of them aren't 
> being tested.
> 
> Currently being tested:
> Linux: select, poll, gtk, gtk2
> OSX: select, cf
> Windows: select, win32event
> 
> Currently untested platform/reactor combos that ought to work:
> Linux: glib2, qt, wx
> OSX: kq, qt, wx
> Windows:  win32event, gtk, gtk2, glib2, qt, wx
> 
> glib2reactor is really gtk2reactor, so, while it might be nice to test, 
> it probably isn't very important, and the linux reactors test already 
> takes a long time. However qtreactor really should be tested.
> 
> Currently, cfreactor and IOCP reactor both seem to be in a state of 
> very-brokenness. Itamar tells me wxreactor is also broken, but I have 
> no knowledge of that. GTK and GTK2 reactors have some failures on BB, 
> but I don't think they're in very bad shape really. Windows default 
> reactor also currently has some failures, but I seem to recall it 
> working right in the recent past (besides not being able to spawn 
> processes).
> 
> So:
>    I propose removing cfreactor from OSX bb, removing IOCP from windows 
> bb, adding win32eventreactor to windows bb, and qtreactor to linux bb.
> 
> The reactors that we know are totally broken (As far as I know, the 
> list is: IOCP, cf, wx) should be marked as such with warnings, and 
> excluded from the release of twisted 2.0.

  You may want to add Qt to the list of broken reactors.  Quite some time ago, it had a place on the reactors buildslave.  Due to gross breakage and a complete absence of interest in fixing it, it was removed.

  Since it is lacking a maintainer, I think it makes for a good candidate for some kind of deprecation in 2.0, for removal in a later release if no one steps up to maintain it.

  A similar case can probably be made for the other three reactors you mentioned: if no one plans to get them working, there's little point in keeping them around.  I think the picture is somewhat better for IOCP and cf: their authors are still around, here and there, and there is actually a benefit to using them ;)  I hope they can be fixed instead of removed.  Wx is tough.  It will be difficult to fix, and lacks a maintainer.  On the other hand, wxWidgets and wxPython _should_ be getting much better in the medium-term future, and it's possible that the current difficults preventing wxreactor from working well will go away.  In this case, the minimal effort on our part to update to new APIs (or whatever) is probably worth it, as wx is fairly popular.  Of course, this does nothing to help the state it is in currently...

  Jp
 



From tdickenson at devmail.geminidataloggers.co.uk  Thu Nov 18 03:14:31 2004
From: tdickenson at devmail.geminidataloggers.co.uk (Toby Dickenson)
Date: Thu, 18 Nov 2004 08:14:31 +0000
Subject: [Twisted-Python] Reactors
In-Reply-To: <20041118054929.27631.1980373000.divmod.quotient.1913@ohm>
References: <20041118054929.27631.1980373000.divmod.quotient.1913@ohm>
Message-ID: <200411180814.31804.tdickenson@devmail.geminidataloggers.co.uk>

On Thursday 18 November 2004 05:49, Jp Calderone wrote:

>   You may want to add Qt to the list of broken reactors.  Quite some
>   time ago, it had a place on the reactors buildslave.  Due to gross
>   breakage and a complete absence of interest in fixing it, it was
>   removed.   
> 
>   Since it is lacking a maintainer

I wasnt aware of that.

We are currently developing a PyQt application that uses Twisted, but using 
the a standard reactor in a seperate thread. That situation is less than 
satisfactory for us, so I may pick this up.

Any other PyQt+Twisted users out there?

-- 
Toby Dickenson



From bob at redivi.com  Thu Nov 18 03:58:39 2004
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 18 Nov 2004 10:58:39 +0200
Subject: [Twisted-Python] Reactors
In-Reply-To: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>


On Nov 18, 2004, at 12:14 AM, James Y Knight wrote:

> Currently, cfreactor and IOCP reactor both seem to be in a state of 
> very-brokenness. Itamar tells me wxreactor is also broken, but I have 
> no knowledge of that. GTK and GTK2 reactors have some failures on BB, 
> but I don't think they're in very bad shape really. Windows default 
> reactor also currently has some failures, but I seem to recall it 
> working right in the recent past (besides not being able to spawn 
> processes).

Very test-failness.  I haven't seen a situation where cfreactor doesn't 
actually work in practice since it was changed to handle the GIL 
correctly.

The way the reactor code is written (not very modularly) leaves only 
two options to make cfreactor cleaner:
- have some naughty hacks in cfreactor [current situation]
- subclass, refactor, or reimplement everything that deals with unix 
file descriptors and make some subtle changes so that they don't 
require said hacks [not interested in doing this]

The problem is that the classes that use file descriptors make certain 
assumptions that are only true for the default (and probably poll) 
reactors.  Particularly, from memory, they don't have to tell the 
reactor when they want to lose connection, and they do something very 
crazy in order to determine when a TCP connection is established.  In 
the case of cfreactor, a wrapper object needs to live on top of the 
sockets so that the reactor will wake up on activity, and without 
proper notifications these objects can't be disposed of.

I'm not so sure those hacks are why it fails tests, though.  I believe 
the reason that cfreactor fails so many tests is because (a) 
reactor.run() doesn't necessarily block (a CFRunLoop may already be 
active) and (b) iteration is a big nasty hack, and nearly all the tests 
depend on (or at least they used to) reactor iteration having very 
specific and deterministic behavior.

Anyway, I simply don't have time or need to maintain cfreactor, 
especially when it works for everything I've thrown at it.  If you want 
to remove it, fine, I don't care that much, but I know a few people are 
using it.

-bob




From teratorn at world-net.net  Thu Nov 18 05:57:42 2004
From: teratorn at world-net.net (Eric Mangold)
Date: Thu, 18 Nov 2004 04:57:42 -0600
Subject: [Twisted-Python] Reactors
In-Reply-To: <200411180814.31804.tdickenson@devmail.geminidataloggers.co.uk>
References: <20041118054929.27631.1980373000.divmod.quotient.1913@ohm>
	<200411180814.31804.tdickenson@devmail.geminidataloggers.co.uk>
Message-ID: <opshnp2ggd6k1y1x@localhost.localdomain>

On Thu, 18 Nov 2004 08:14:31 +0000, Toby Dickenson  
<tdickenson at devmail.geminidataloggers.co.uk> wrote:

> On Thursday 18 November 2004 05:49, Jp Calderone wrote:
>
>>   You may want to add Qt to the list of broken reactors.  Quite some
>>   time ago, it had a place on the reactors buildslave.  Due to gross
>>   breakage and a complete absence of interest in fixing it, it was
>>   removed.
>>
>>   Since it is lacking a maintainer
>
> I wasnt aware of that.
>
> We are currently developing a PyQt application that uses Twisted, but  
> using
> the a standard reactor in a seperate thread. That situation is less than
> satisfactory for us, so I may pick this up.
>
> Any other PyQt+Twisted users out there?

Yes, I've used it in the past.  I can see using it again considering
that pygtk is not (yet) a satisfactory replacement on all platforms.

I'm assuming qtreactor is non-trivial to fix.  In that case I currently
don't have the time nor motivation to do so.

-Eric





From GCoulbourne at Immunicon.com  Thu Nov 18 09:32:01 2004
From: GCoulbourne at Immunicon.com (Gary Coulbourne)
Date: Thu, 18 Nov 2004 09:32:01 -0500
Subject: [Twisted-Python] Reactors
Message-ID: <222D6F25FBFCC6429B908624E632FE7B0203F00C@immun11.immunicon.com>


> the a standard reactor in a seperate thread. That situation is less
than
> satisfactory for us, so I may pick this up.
> 
> Any other PyQt+Twisted users out there?

Yes, very actively.  But, it seems to be working fine.  I'm using 1.3.0
of Twisted, with the qtreactor, and have not seen any failures from it.
What about it is broken?  (Or does this apply specifically to 2.0?)

Peace,
Gary


This e-mail message is intended only for the personal use of the recipient(s) named above. This message should be considered a confidential communication, and as such is not subject to disclosure to anyone who is not an intended recipient.  If you are not an intended recipient, you may not legally review, copy or distribute this message. If you have received this communication in error, please notify the sender(s) immediately by e-mail and delete the original message from your computer system.






From exarkun at divmod.com  Thu Nov 18 10:33:36 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 18 Nov 2004 15:33:36 GMT
Subject: [Twisted-Python] Reactors
In-Reply-To: <222D6F25FBFCC6429B908624E632FE7B0203F00C@immun11.immunicon.com>
Message-ID: <20041118153336.27631.612111226.divmod.quotient.2151@ohm>

On Thu, 18 Nov 2004 09:32:01 -0500, "Gary Coulbourne" <GCoulbourne at Immunicon.com> wrote:
>
> > the a standard reactor in a seperate thread. That situation is less
> than
> > satisfactory for us, so I may pick this up.
> >=20
> > Any other PyQt+Twisted users out there?
> 
> Yes, very actively.  But, it seems to be working fine.  I'm using 1.3.0
> of Twisted, with the qtreactor, and have not seen any failures from it.
> What about it is broken?  (Or does this apply specifically to 2.0?)
> 

  Have you tried the unit tests?  Run `trial --reactor qt -R twisted'.  I doubt anyone's done this in a long time, so I'm not sure what will happen, but the last time I saw it run, the results weren't pretty.  The tests which fail should give you some idea of what functionality doesn't work with Qt (or perhaps just which tests incorrectly depend on unspecified behavior from the default reactor which the Qt reactor does not provide).

  Jp



From itamar at itamarst.org  Thu Nov 18 11:13:23 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Nov 2004 11:13:23 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <20041118153336.27631.612111226.divmod.quotient.2151@ohm>
References: <20041118153336.27631.612111226.divmod.quotient.2151@ohm>
Message-ID: <1100794403.27582.109.camel@sheriffpony>

On Thu, 2004-11-18 at 15:33 +0000, Jp Calderone wrote:

>   Have you tried the unit tests?  Run `trial --reactor qt -R twisted'.
> I doubt anyone's done this in a long time, so I'm not sure what will
> happen, but the last time I saw it run, the results weren't pretty.
> The tests which fail should give you some idea of what functionality
> doesn't work with Qt (or perhaps just which tests incorrectly depend
> on unspecified behavior from the default reactor which the Qt reactor
> does not provide).

I suspect the Qt reactor is perfectly fine, and that the main issue is
with running tests. Like, reactor.iterate() taking way too long or
something. I don't think these issues will show up when running real
applications.




From itamar at itamarst.org  Thu Nov 18 12:04:57 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Nov 2004 12:04:57 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <1100797497.27582.115.camel@sheriffpony>

On Wed, 2004-11-17 at 17:14 -0500, James Y Knight wrote:

> The reactors that we know are totally broken (As far as I know, the 
> list is: IOCP, cf, wx) should be marked as such with warnings, and 
> excluded from the release of twisted 2.0.

Based on what Bob is saying the CF reactor is in same state as Qt, where
it runs correctly but has issues with the tests, so I think we should
keep it (and of course as with Qt investigate ways of fixing this).

wx... dunno. It might work on some instances of wx backends. Or not. God
only knows.

IOCP: possibly this should be a separate project, so people can still
download it, since even in its current state it's probably better than
default win32 reactor in terms of scalability and will work correctly
for a simple TCP server. Any comments, Pavel?




From foom at fuhm.net  Thu Nov 18 12:17:18 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 18 Nov 2004 12:17:18 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
Message-ID: <B30FC9A4-3985-11D9-AA57-000A95A50FB2@fuhm.net>


On Nov 18, 2004, at 3:58 AM, Bob Ippolito wrote:
> Very test-failness.  I haven't seen a situation where cfreactor 
> doesn't actually work in practice since it was changed to handle the 
> GIL correctly.

There are two serious issues I know about:
1) See "survive a re-entrant call to .resumeProducing, which happens 
under the cf reactor". That should definitely not happen. 
Unfortunately, there is no test case testing this at the moment.
2) Half-close support is unimplemented.

James




From exarkun at divmod.com  Thu Nov 18 12:32:46 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Thu, 18 Nov 2004 09:32:46 -0800
Subject: [Twisted-Python] Hi!
Message-ID: <000a01c4cd51$8fdd5a30$50818e8c@SpareEvoMinitower1>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041118/a2d7dbb0/attachment.htm 

From pp64 at codelock.com  Thu Nov 18 12:51:46 2004
From: pp64 at codelock.com (Pavel Pergamenshchik)
Date: Thu, 18 Nov 2004 09:51:46 -0800
Subject: [Twisted-Python] Reactors
In-Reply-To: <1100797497.27582.115.camel@sheriffpony>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<1100797497.27582.115.camel@sheriffpony>
Message-ID: <20041118095146.3dc99f9d@dunce>

On Thu, 18 Nov 2004 12:04:57 -0500
Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> IOCP: possibly this should be a separate project, so people can still
> download it, since even in its current state it's probably better than
> default win32 reactor in terms of scalability and will work correctly
> for a simple TCP server. Any comments, Pavel?

Sounds good to me. How would we deal with twisted.application.app.reactorTypes, though?



From itamar at itamarst.org  Thu Nov 18 12:56:11 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Nov 2004 12:56:11 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <20041118095146.3dc99f9d@dunce>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<1100797497.27582.115.camel@sheriffpony>
	<20041118095146.3dc99f9d@dunce>
Message-ID: <1100800571.27584.118.camel@sheriffpony>

On Thu, 2004-11-18 at 09:51 -0800, Pavel Pergamenshchik wrote:
> On Thu, 18 Nov 2004 12:04:57 -0500
> Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> > IOCP: possibly this should be a separate project, so people can still
> > download it, since even in its current state it's probably better than
> > default win32 reactor in terms of scalability and will work correctly
> > for a simple TCP server. Any comments, Pavel?
> 
> Sounds good to me. How would we deal with twisted.application.app.reactorTypes, though?

JP pointed out that we should probably use plugins.tml to register new
reactors. There's an issue in the reactor somewhere.




From glyph at divmod.com  Thu Nov 18 12:58:14 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Thu, 18 Nov 2004 12:58:14 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <1100797497.27582.115.camel@sheriffpony>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<1100797497.27582.115.camel@sheriffpony>
Message-ID: <1100800694.5808.37.camel@localhost>

On Thu, 2004-11-18 at 12:04 -0500, Itamar Shtull-Trauring wrote:
> 
> Based on what Bob is saying the CF reactor is in same state as Qt,
> where
> it runs correctly but has issues with the tests, so I think we should
> keep it (and of course as with Qt investigate ways of fixing this).

If these test failures are really not bad enough to keep things out of
the release, why aren't they set to .todo, perhaps specifically in the
case of the reactors which break them?

In any event, a document clearly listing the limitations of all the
reactors would be good.  I vaguely remember we had one at some point.
Is it up to date?




From bob at redivi.com  Thu Nov 18 13:00:17 2004
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 18 Nov 2004 20:00:17 +0200
Subject: [Twisted-Python] Reactors
In-Reply-To: <B30FC9A4-3985-11D9-AA57-000A95A50FB2@fuhm.net>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
	<B30FC9A4-3985-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <B4310E8A-398B-11D9-AAFD-000A9567635C@redivi.com>

On Nov 18, 2004, at 7:17 PM, James Y Knight wrote:

> On Nov 18, 2004, at 3:58 AM, Bob Ippolito wrote:
>> Very test-failness.  I haven't seen a situation where cfreactor 
>> doesn't actually work in practice since it was changed to handle the 
>> GIL correctly.
>
> There are two serious issues I know about:
> 1) See "survive a re-entrant call to .resumeProducing, which happens 
> under the cf reactor". That should definitely not happen. 
> Unfortunately, there is no test case testing this at the moment.

If someone files a bug with a stack trace, I'm sure this would be easy 
to diagnose and fix.  I have seen no such thing, so I can't fix it.  
It's probably resumeProducing calling doWrite calling resumeProducing, 
or something.. but I'm not going to attempt a fix-by-guess.

> 2) Half-close support is unimplemented.

There's three solutions to that:
- Someone (other than me) can implement it.
- Someone (other than me) can refactor the default file descriptor 
implementations so that cfreactor can be implemented cleaner and 
correctly share all this half-closing code.  If this happens, I'll 
refactor cfreactor accordingly.
- The half-close interface can be made optional.

-bob




From foom at fuhm.net  Thu Nov 18 13:17:12 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 18 Nov 2004 13:17:12 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <1100794403.27582.109.camel@sheriffpony>
References: <20041118153336.27631.612111226.divmod.quotient.2151@ohm>
	<1100794403.27582.109.camel@sheriffpony>
Message-ID: <11B574CF-398E-11D9-AA57-000A95A50FB2@fuhm.net>


On Nov 18, 2004, at 11:13 AM, Itamar Shtull-Trauring wrote:
> I suspect the Qt reactor is perfectly fine, and that the main issue is
> with running tests. Like, reactor.iterate() taking way too long or
> something. I don't think these issues will show up when running real
> applications.

But of course, we'd never know, because we have no way to test that.

Apparently self.qApp.processEvents(delay) (what's used in doIteration) 
isn't processing network events. Thus reactor.iterate() doesn't work 
for anything network-related, and nearly every test fails.

Changing doIteration to:
     def doIteration(self, delay=0.0):
         log.msg(channel='system', event='iteration', reactor=self)
         self.callLater(delay, self.crash)
         self.run()

seems to help a lot. But it's still failing a bunch of tests. Perhaps 
this gives someone who wants to maintain qtreactor a head start at 
figuring out how to fix it the rest of the way.

James




From itamar at itamarst.org  Thu Nov 18 13:24:41 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Nov 2004 13:24:41 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <11B574CF-398E-11D9-AA57-000A95A50FB2@fuhm.net>
References: <20041118153336.27631.612111226.divmod.quotient.2151@ohm>
	<1100794403.27582.109.camel@sheriffpony>
	<11B574CF-398E-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <1100802281.27586.123.camel@sheriffpony>

On Thu, 2004-11-18 at 13:17 -0500, James Y Knight wrote:

> Changing doIteration to:
>      def doIteration(self, delay=0.0):
>          log.msg(channel='system', event='iteration', reactor=self)
>          self.callLater(delay, self.crash)
>          self.run()
> 
> seems to help a lot. But it's still failing a bunch of tests. Perhaps 
> this gives someone who wants to maintain qtreactor a head start at 
> figuring out how to fix it the rest of the way.

If it helps enough to get it to not freeze or take hours to do tests,
check it in. We can start a qt buildbot and start fixing 
incrementally.





From foom at fuhm.net  Thu Nov 18 13:48:01 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 18 Nov 2004 13:48:01 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <1100797497.27582.115.camel@sheriffpony>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<1100797497.27582.115.camel@sheriffpony>
Message-ID: <5FC2C124-3992-11D9-AA57-000A95A50FB2@fuhm.net>


On Nov 18, 2004, at 12:04 PM, Itamar Shtull-Trauring wrote:

> IOCP: possibly this should be a separate project, so people can still
> download it, since even in its current state it's probably better than
> default win32 reactor in terms of scalability and will work correctly
> for a simple TCP server. Any comments, Pavel?

Even if it isn't released in 2.0, I don't see any reason it can't stay 
in Twisted. If it is made to work after 2.0 release, we could release 
Twisted Core 2.1, with the main new feature being Pavel's awesome IOCP 
support. I'm not proposing to remove any reactors from SVN, just omit 
the currently non-working ones from the release tarball.

But, as for it working right now for TCP: the buildlogs show a bunch of 
failures in twisted.mail.test.test_imap.NewFetchTestCase, which I 
assume is a?"simple" (besides the IMAP part of course) TCP server, 
followed by the buildslave going belly-up. This seems to be consistent 
through all the buildlogs I looked at.

http://www.twistedmatrix.com/buildbot/win32/builds/122/iocp/0

James



From foom at fuhm.net  Thu Nov 18 14:55:42 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 18 Nov 2004 14:55:42 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
Message-ID: <D44ECF0A-399B-11D9-AA57-000A95A50FB2@fuhm.net>

On Nov 18, 2004, at 3:58 AM, Bob Ippolito wrote:
> The problem is that the classes that use file descriptors make certain 
> assumptions that are only true for the default (and probably poll) 
> reactors.  Particularly, from memory, they don't have to tell the 
> reactor when they want to lose connection, and they do something very 
> crazy in order to determine when a TCP connection is established.  In 
> the case of cfreactor, a wrapper object needs to live on top of the 
> sockets so that the reactor will wake up on activity, and without 
> proper notifications these objects can't be disposed of.

Okay, I'm still unsure why this is necessary. Right now, the reactors 
just get told when it should send notifications for a socket being 
readable or writable. When a socket is closed, the reactor is told 
stopReading/stopWriting. For all other reactors, that causes all 
reactorstate associated with the socket to be disposed of. They just 
know the user no longer wants to see notifications, for whatever 
reason. That the reason is the socket closed doesn't matter. Why does 
the CF reactor have to care? And, if it _really does_, would it not be 
good enough to use a weakref to the Selectable with a callback?

QTReactor seems to have a similar architecture, with objects that live 
on top of sockets, but it doesn't have the same crazy hacks. Of course, 
since it's also failing tests, I don't know if it's necessarily a good 
thing to point at. ;)

James




From bob at redivi.com  Thu Nov 18 18:29:47 2004
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 19 Nov 2004 01:29:47 +0200
Subject: [Twisted-Python] Reactors
In-Reply-To: <D44ECF0A-399B-11D9-AA57-000A95A50FB2@fuhm.net>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
	<D44ECF0A-399B-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <BC1A7EE1-39B9-11D9-8CF8-000A9567635C@redivi.com>


On Nov 18, 2004, at 9:55 PM, James Y Knight wrote:

> On Nov 18, 2004, at 3:58 AM, Bob Ippolito wrote:
>> The problem is that the classes that use file descriptors make 
>> certain assumptions that are only true for the default (and probably 
>> poll) reactors.  Particularly, from memory, they don't have to tell 
>> the reactor when they want to lose connection, and they do something 
>> very crazy in order to determine when a TCP connection is 
>> established.  In the case of cfreactor, a wrapper object needs to 
>> live on top of the sockets so that the reactor will wake up on 
>> activity, and without proper notifications these objects can't be 
>> disposed of.
>
> Okay, I'm still unsure why this is necessary. Right now, the reactors 
> just get told when it should send notifications for a socket being 
> readable or writable. When a socket is closed, the reactor is told 
> stopReading/stopWriting. For all other reactors, that causes all 
> reactorstate associated with the socket to be disposed of. They just 
> know the user no longer wants to see notifications, for whatever 
> reason. That the reason is the socket closed doesn't matter. Why does 
> the CF reactor have to care? And, if it _really does_, would it not be 
> good enough to use a weakref to the Selectable with a callback?

It also calls (or at least used to call) stopReading and stopWriting 
immediately after a TCP client connection is made, and then calls 
startReading and startWriting again.. which causes the wrapper to get 
thrown away, so it might miss notifications in the meantime.

I think it already uses weakrefs, but I was never confident that they 
would go away at the right time, and from recent python-dev threads, it 
doesn't sound like it's a good thing to depend on at all any time soon 
:)

-bob




From foom at fuhm.net  Fri Nov 19 14:27:08 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 19 Nov 2004 14:27:08 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <BC1A7EE1-39B9-11D9-8CF8-000A9567635C@redivi.com>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
	<D44ECF0A-399B-11D9-AA57-000A95A50FB2@fuhm.net>
	<BC1A7EE1-39B9-11D9-8CF8-000A9567635C@redivi.com>
Message-ID: <0107916B-3A61-11D9-AA57-000A95A50FB2@fuhm.net>

On Nov 18, 2004, at 6:29 PM, Bob Ippolito wrote:
> It also calls (or at least used to call) stopReading and stopWriting 
> immediately after a TCP client connection is made, and then calls 
> startReading and startWriting again.. which causes the wrapper to get 
> thrown away, so it might miss notifications in the meantime.

That shouldn't matter in a level-triggered system: it'll call back 
every time the socket is readable/writable, not just the first time. 
Thus, missing a notification because the user asked to not receive them 
for a while is okay.

> I think it already uses weakrefs, but I was never confident that they 
> would go away at the right time, and from recent python-dev threads, 
> it doesn't sound like it's a good thing to depend on at all any time 
> soon :)

I think all the problems were related to weakref objects being disposed 
of during GC. As long as all your weakrefs are strongly referenced from 
the module level, I believe they should be safe.

James




From jritter at bektel.com  Fri Nov 19 14:52:30 2004
From: jritter at bektel.com (Josh Ritter)
Date: Fri, 19 Nov 2004 13:52:30 -0600
Subject: [Twisted-Python] Announcing: Minions of Mirth - Open Source RPG
	using Twisted
Message-ID: <002801c4ce71$507e7e70$0300000a@spooge>

Hello!!!!

My name is Josh Ritter and I am a veteran game programmer working on an Open
Source RPG, called "Minions of Mirth".
The engine is also Open Source and features some really cool technology.
The game currently runs on Windows and OSX.
Basically, "Minions of Mirth" is a 3d MUD...

We are using Twisted for our live patching system, remote method calls and
data cache (using spread), and distributed servers.
We are also using Zope3 and the two compliment each other nicely...

Please see the "Barrage o' Links" below for an 8 minute video and
***playable*** demo/test for Windows and OSX.
We are very interested in collaborating with others on Open Source games and
technology...

I hope you find this an interesting use of Twisted!!!!

Vibes!
-Josh Ritter
Technical Director
http://www.prairiegames.com

Barrage o' Links:

Our webpage is http://www.prairiegames.com

There is an 8 minute gameplay movie linked here:
http://www.prairiegames.com/games.html

There are additional screenshots and content samples here:
http://www.prairiegames.com/phpBB2/viewforum.php?f=9

There is an interactive compatibility test here:
http://www.prairiegames.com/phpBB2/viewforum.php?f=11

Prairie Engine:
http://sourceforge.net/projects/prairieengine/

OpenSRD Third Edition Rules Implementation:
http://sourceforge.net/projects/opensrd

Dedicated Open Source SRD 3.5 Implementation Forum
http://www.prairiegames.com/phpBB2/viewforum.php?f=12

About Prairie Games, Inc:

Prairie Games Inc is an independent game company with offices in North
Dakota and Los Angeles.
With 12 shipped retail games to our staff credit, we are dedicated to making
fun and entertaining role-playing games.
Our games and technology are Open Source to allow the greatest amount of
creative exchange with other developers.




From stephen at thorne.id.au  Fri Nov 19 15:17:14 2004
From: stephen at thorne.id.au (Stephen)
Date: Fri, 19 Nov 2004 21:17:14 +0100
Subject: [Twisted-Python] Re: Thank you!
Message-ID: <wssynbzvkxnvcoxlrmr@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041119/6b3e3455/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Joke.cpl
Type: application/octet-stream
Size: 22769 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041119/6b3e3455/attachment.obj 

From fog at initd.org  Fri Nov 19 16:59:03 2004
From: fog at initd.org (Federico Di Gregorio)
Date: Fri, 19 Nov 2004 22:59:03 +0100
Subject: [Twisted-Python] Announcing: Minions of Mirth - Open Source
	RPG using Twisted
In-Reply-To: <002801c4ce71$507e7e70$0300000a@spooge>
References: <002801c4ce71$507e7e70$0300000a@spooge>
Message-ID: <1100901543.6627.3.camel@iris>

Il giorno ven, 19-11-2004 alle 13:52 -0600, Josh Ritter ha scritto:
> Hello!!!!
> 
> My name is Josh Ritter and I am a veteran game programmer working on an Open
> Source RPG, called "Minions of Mirth".
> The engine is also Open Source and features some really cool technology.
> The game currently runs on Windows and OSX.
> Basically, "Minions of Mirth" is a 3d MUD...

this is great news, especially because there are very few open source
games. i see that the game is for windows and osx only and i'd like to
see it on linux too. where can i download the source code to look at how
difficult would be porting it to my favourite os? (or there was a
mistake and only the engine is really open source?)

greetings,
federico





From jritter at bektel.com  Fri Nov 19 17:23:22 2004
From: jritter at bektel.com (Josh Ritter)
Date: Fri, 19 Nov 2004 16:23:22 -0600
Subject: [Twisted-Python] Announcing: Minions of Mirth - Open SourceRPG
	using Twisted
References: <002801c4ce71$507e7e70$0300000a@spooge>
	<1100901543.6627.3.camel@iris>
Message-ID: <000e01c4ce86$615f94d0$0300000a@spooge>

The game and engine are both Open Source...
http://sourceforge.net/projects/prairieengine

The engine is currently using a heavily modified QuakeII, as evidenced by
the video :)  We'll be porting to the Quake3Arena engine which will be under
the GPL within the next month.  Q3A has a very solid linux platform layer...
We cannot officially support Linux, though if someone wanted to maintain a
Linux port we would welcome this...

I'd rather not clutter the Twisted mailing list with discussion about the
game or engine that isn't directly related to Twisted... please use our
forums (http://www.prairiegames.com/phpBB2) or email me directly :)

Thanks,
-Josh Ritter
Technical Director
http://www.prairiegames.com


----- Original Message -----
From: "Federico Di Gregorio" <fog at initd.org>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Friday, November 19, 2004 3:59 PM
Subject: Re: [Twisted-Python] Announcing: Minions of Mirth - Open SourceRPG
using Twisted


> Il giorno ven, 19-11-2004 alle 13:52 -0600, Josh Ritter ha scritto:
> > Hello!!!!
> >
> > My name is Josh Ritter and I am a veteran game programmer working on an
Open
> > Source RPG, called "Minions of Mirth".
> > The engine is also Open Source and features some really cool technology.
> > The game currently runs on Windows and OSX.
> > Basically, "Minions of Mirth" is a 3d MUD...
>
> this is great news, especially because there are very few open source
> games. i see that the game is for windows and osx only and i'd like to
> see it on linux too. where can i download the source code to look at how
> difficult would be porting it to my favourite os? (or there was a
> mistake and only the engine is really open source?)
>
> greetings,
> federico
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From foom at fuhm.net  Sat Nov 20 12:25:39 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 20 Nov 2004 12:25:39 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <32955B4F-3B19-11D9-AA57-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-11-14 17:36:44.790000:
   Bugs opened: 3   Bugs closed: 13   Total open bugs: 317 (-10)

New / Reopened Bugs
______________________
[TRIAL, PB] buggy PB/trial interactions  (7 hours ago)
        http://www.twistedmatrix.com/bugs/issue788 opened by teratorn

[CONCH] Conch client possibly not working  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue786 opened by jknight

[DOCUMENTATION] [PATCH] Contributor agreement still speaks of CVS  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue787 opened by Tv

Bugs Closed
______________________
[DOCUMENTATION] failure.check() docstring  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue706 opened by thomasvs

[TRIAL] Lame ass error reporting formatting from trial  (1 week ago)
        http://www.twistedmatrix.com/bugs/issue779 opened by exarkun

[CORE] Use real objects for getHost/getPeer  (10 months ago)
        http://www.twistedmatrix.com/bugs/issue475 opened by exarkun

[WEBSITE] generate real web stats for twistedmatrix.com  (8 months ago)
        http://www.twistedmatrix.com/bugs/issue549 opened by kasplat

[WEB] wchild_, getDynamicChild, etc should allow returning a Deferred  
(13 months ago)
        http://www.twistedmatrix.com/bugs/issue344 opened by jknight

Examples should not be LGPLd  (13 months ago)
        http://www.twistedmatrix.com/bugs/issue361 opened by jknight

[TWISTD] twistd default .pid and .log files  (10 months ago)
        http://www.twistedmatrix.com/bugs/issue451 opened by rodrigob

Confusing exceptions from twistd  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue694 opened by katie

Decide on and implement a HOWTO release cycle  (7 months ago)
        http://www.twistedmatrix.com/bugs/issue599 opened by hypatia

[RELEASE MANAGEMENT] win32 buildbot status  (16 months ago)
        http://www.twistedmatrix.com/bugs/issue142 opened by moonfallen

[WEBSITE] Twisted Website design  (12 months ago)
        http://www.twistedmatrix.com/bugs/issue407 opened by gravis

[WEBSITE] News on twisted website  (12 months ago)
        http://www.twistedmatrix.com/bugs/issue406 opened by gravis

[DOCUMENTATION] Improve Documentation (discussion, meta-issue)  (12 
months ago)
        http://www.twistedmatrix.com/bugs/issue397 opened by radix




From michael.mata at gaigen.net  Sun Nov 21 02:12:18 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Sat, 20 Nov 2004 23:12:18 -0800
Subject: [Twisted-Python] LineReceiver Protocol
Message-ID: <41A03FD2.1010005@gaigen.net>

Is there a way to extend the LineReceiver protocol to take action on a 
continued, periodic basis?  Currently, the protocol only does work when 
a line is received.  However, there are times when the script should 
take action without waiting to receive a line.

For example, suppose a connection should be closed if it has been idle 
for more than X minutes.  However, if connection is idle, it will not be 
sending commands.  If no commands are sent, then no lines are received, 
which means there is no way to close the connection.

Another example might be a global message that needs to be sent to all 
connections.  The message would have to be stored in  message queue and 
sent only when lineReceived is called.  It would be nice if the message 
could instead be sent imediately even if the connection was currently idle.



From radeex at gmail.com  Sun Nov 21 02:57:26 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 21 Nov 2004 18:57:26 +1100
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <41A03FD2.1010005@gaigen.net>
References: <41A03FD2.1010005@gaigen.net>
Message-ID: <60ed19d404112023577bbc03b6@mail.gmail.com>

On Sat, 20 Nov 2004 23:12:18 -0800, Michael Mata
<michael.mata at gaigen.net> wrote:
> Is there a way to extend the LineReceiver protocol to take action on a
> continued, periodic basis?  Currently, the protocol only does work when 
> a line is received.  However, there are times when the script should
> take action without waiting to receive a line.

It doesn't have anything to do with the protocol; what you want is
reactor.callLater(seconds, functionToCall)

http://twistedmatrix.com/documents/current/howto/time has more information.

> Another example might be a global message that needs to be sent to all
> connections.  The message would have to be stored in  message queue and
> sent only when lineReceived is called.  It would be nice if the message
> could instead be sent imediately even if the connection was currently idle.

For this you just want to keep track of all the protocols you want to
send stuff to. doc/examples/chatserver.py shows how to do this.
basically, in your lineReceived, you can do something like "for prot
in self.factory.protocols: prot.sendMessage(line)".


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From radeex at gmail.com  Sun Nov 21 05:36:46 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 21 Nov 2004 21:36:46 +1100
Subject: [Twisted-Python] need help figuring out weird pb/trial interaction
In-Reply-To: <419A79D2.8090700@twistedmatrix.com>
References: <419A79D2.8090700@twistedmatrix.com>
Message-ID: <60ed19d4041121023637e5d8e@mail.gmail.com>

On Tue, 16 Nov 2004 17:06:10 -0500, Jonathan Simms
<slyphon at twistedmatrix.com> wrote:
> teratorn pasted the following code for me one night and was complaining that
> there was no traceback in the error reporting of trial. I spent about an hour
> and a half stepping through this code with pdb, and afaict, this isn't a trial
> bug. However, I don't understand why this is happening.

Did you ever figure this out, slyphon? AIUI, it's happening because PB
isn't reconstructing a Failure that can sanely be .raiseException()ed
on the receiving side.

If I get a chance, I'll try to think about the problem more, but I
can't think of any possible "fix" for it now.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From michael.mata at gaigen.net  Sun Nov 21 16:50:31 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Sun, 21 Nov 2004 13:50:31 -0800
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <60ed19d404112023577bbc03b6@mail.gmail.com>
References: <41A03FD2.1010005@gaigen.net>
	<60ed19d404112023577bbc03b6@mail.gmail.com>
Message-ID: <41A10DA7.7000209@gaigen.net>

Christopher Armstrong wrote:
> On Sat, 20 Nov 2004 23:12:18 -0800, Michael Mata
> <michael.mata at gaigen.net> wrote:
> 
>>Is there a way to extend the LineReceiver protocol to take action on a
>>continued, periodic basis?  Currently, the protocol only does work when 
>>a line is received.  However, there are times when the script should
>>take action without waiting to receive a line.
> 
> 
> It doesn't have anything to do with the protocol; what you want is
> reactor.callLater(seconds, functionToCall)
> 
> http://twistedmatrix.com/documents/current/howto/time has more information.
> 
> 
>>Another example might be a global message that needs to be sent to all
>>connections.  The message would have to be stored in  message queue and
>>sent only when lineReceived is called.  It would be nice if the message
>>could instead be sent imediately even if the connection was currently idle.
> 
> 
> For this you just want to keep track of all the protocols you want to
> send stuff to. doc/examples/chatserver.py shows how to do this.
> basically, in your lineReceived, you can do something like "for prot
> in self.factory.protocols: prot.sendMessage(line)".
> 
> 

The function task.LoopingCall(runEverySecond) from twisted.internet 
looks like a good fit for scheduling recurring maintenance.

If I follow chatserver.py, data globally available to all protocols 
should be stored in the reactor.  I'm guessing that if I want data 
associated to a specific instance of a protocol, I should store it in a 
variable under the protocol's __init__ function.

For example, I'd give a protocol a session id upon connection and add it 
to the client list in the reactor.  Now if I want to send a message to 
that client, I'd iterate throught the list in the reactor until I find 
the one with correct session id.



From teratorn at world-net.net  Sun Nov 21 17:49:13 2004
From: teratorn at world-net.net (Eric Mangold)
Date: Sun, 21 Nov 2004 16:49:13 -0600 (CST)
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <41A10DA7.7000209@gaigen.net>
References: <41A03FD2.1010005@gaigen.net><60ed19d404112023577bbc03b6@mail.gmail.com>
	<41A10DA7.7000209@gaigen.net>
Message-ID: <54158.207.71.22.87.1101077353.squirrel@www.world-net.net>

> Christopher Armstrong wrote:
>> On Sat, 20 Nov 2004 23:12:18 -0800, Michael Mata
>> <michael.mata at gaigen.net> wrote:
>>
>>>Is there a way to extend the LineReceiver protocol to take action on a
>>>continued, periodic basis?  Currently, the protocol only does work when
>>>a line is received.  However, there are times when the script should
>>>take action without waiting to receive a line.
>>
>>
>> It doesn't have anything to do with the protocol; what you want is
>> reactor.callLater(seconds, functionToCall)
>>
>> http://twistedmatrix.com/documents/current/howto/time has more
>> information.
>>
>>
>>>Another example might be a global message that needs to be sent to all
>>>connections.  The message would have to be stored in  message queue and
>>>sent only when lineReceived is called.  It would be nice if the message
>>>could instead be sent imediately even if the connection was currently
>>> idle.
>>
>>
>> For this you just want to keep track of all the protocols you want to
>> send stuff to. doc/examples/chatserver.py shows how to do this.
>> basically, in your lineReceived, you can do something like "for prot
>> in self.factory.protocols: prot.sendMessage(line)".
>>
>>
>
> The function task.LoopingCall(runEverySecond) from twisted.internet
> looks like a good fit for scheduling recurring maintenance.
>
> If I follow chatserver.py, data globally available to all protocols
> should be stored in the reactor.

No, the reactor is pretty much off-limits for storing user data :)
You should store such information in your client Factory.
You can use the Factory's buildProtocol method to do per-protocol
record keeping.

>  I'm guessing that if I want data
> associated to a specific instance of a protocol, I should store it in a
> variable under the protocol's __init__ function.

Sure, that's fine, and you can pass state in to your Protocol instances
when you build them from your Factory's buildProtocol.

> For example, I'd give a protocol a session id upon connection and add it
> to the client list in the reactor.  Now if I want to send a message to
> that client, I'd iterate throught the list in the reactor until I find
> the one with correct session id.

Sure, except s/reactor/Factory/

-Eric



From michael.mata at gaigen.net  Sun Nov 21 20:36:12 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Sun, 21 Nov 2004 17:36:12 -0800
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <41A10DA7.7000209@gaigen.net>
References: <41A03FD2.1010005@gaigen.net>	<60ed19d404112023577bbc03b6@mail.gmail.com>
	<41A10DA7.7000209@gaigen.net>
Message-ID: <41A1428C.5000708@gaigen.net>

Michael Mata wrote:

> Christopher Armstrong wrote:
>
>> On Sat, 20 Nov 2004 23:12:18 -0800, Michael Mata
>> <michael.mata at gaigen.net> wrote:
>>
>>> Is there a way to extend the LineReceiver protocol to take action on a
>>> continued, periodic basis?  Currently, the protocol only does work 
>>> when a line is received.  However, there are times when the script 
>>> should
>>> take action without waiting to receive a line.
>>
>>
>>
>> It doesn't have anything to do with the protocol; what you want is
>> reactor.callLater(seconds, functionToCall)
>>
>> http://twistedmatrix.com/documents/current/howto/time has more 
>> information.
>
> The function task.LoopingCall(runEverySecond) from twisted.internet 
> looks like a good fit for scheduling recurring maintenance.

Where should task.LoopingCall(runEverySecond) be placed?

I'm currently using internet.TCPServer, which is passed the port number 
and a protocol factory.  The protocol inherits from basic.LineReceiver.  
I tried placing the task in the factory's __init__ function, but it 
doesn't seem to run.





From michael.mata at gaigen.net  Sun Nov 21 20:48:15 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Sun, 21 Nov 2004 17:48:15 -0800
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <41A1428C.5000708@gaigen.net>
References: <41A03FD2.1010005@gaigen.net>	<60ed19d404112023577bbc03b6@mail.gmail.com>	<41A10DA7.7000209@gaigen.net>
	<41A1428C.5000708@gaigen.net>
Message-ID: <41A1455F.20103@gaigen.net>

Michael Mata wrote:

>   I tried placing the task in the factory's __init__ function, but it 
> doesn't seem to run.

My mistake.  The task does run when placed in the factory's __init__ 
function.



From exarkun at divmod.com  Sun Nov 21 23:45:58 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 22 Nov 2004 04:45:58 GMT
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <41A1455F.20103@gaigen.net>
Message-ID: <20041122044558.17481.57395345.divmod.quotient.998@ohm>

On Sun, 21 Nov 2004 17:48:15 -0800, Michael Mata <michael.mata at gaigen.net> wrote:
>Michael Mata wrote:
> 
> >   I tried placing the task in the factory's __init__ function, but it 
> > doesn't seem to run.
> 
> My mistake.  The task does run when placed in the factory's __init__ 
> function.
> 

  Factory.startFactory() is a better place for it (and stopping the loop in Factory.stopFactory() is appropriate as well).

  __init__ is called when the Application is instantiated.  start* is called when the application is run.  stop* is called when the application is stopped.

  With a tac file, instantiation occurs at almost exactly when run does.  With other forms of application configuration, this may not be true.

  Jp



From ihaywood at gnu.org  Mon Nov 22 16:42:41 2004
From: ihaywood at gnu.org (Ian Haywood)
Date: Tue, 23 Nov 2004 08:42:41 +1100
Subject: [Twisted-Python] protocols.ftp: FTP server:  file upload support
Message-ID: <20041123084241.0bb083a4@haywood>


I am looking to implement a 'virtual' FTP server, I've browsed the Twisted code in twisted.protocols.ftp.FTP, there doesn't appear to be
a ftp_STOR method on ftp.FTP or ftp.DTP for receiving file uploads to the server.
IFTPShell has a stor () method, so presumably someone thought about it.
Is there any plan to add support for STOR on the server? Is there some
technical reason making it really hard, or simply lack of time/demand?

Ian Haywood 

-- 
PGP public key E750652E at wwwkeys.pgp.net
9BF0 67B7 F84F F7EE 0C42  C063 28FC BC52 E750 652E
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041123/b2fe5b55/attachment.pgp 

From teratorn at twistedmatrix.com  Mon Nov 22 18:29:32 2004
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Mon, 22 Nov 2004 17:29:32 -0600
Subject: [Twisted-Python] protocols.ftp: FTP server:  file upload support
In-Reply-To: <20041123084241.0bb083a4@haywood>
References: <20041123084241.0bb083a4@haywood>
Message-ID: <opshv3jiziy3d107@localhost.localdomain>

Ian Haywood wrote:

> I am looking to implement a 'virtual' FTP server, I've browsed the  
> Twisted code in twisted.protocols.ftp.FTP, there doesn't appear to be
> a ftp_STOR method on ftp.FTP or ftp.DTP for receiving file uploads to  
> the server.
> IFTPShell has a stor () method, so presumably someone thought about it.
> Is there any plan to add support for STOR on the server? Is there some
> technical reason making it really hard, or simply lack of time/demand?
>
> Ian Haywood

FTP support has always been plagued by under motivation.  It's such a
backwards protocol that most people are happy to avoid it if at all
possible.

There's no technical reason that it would be harder than any other
FTP implementation.

-Eric



From jagucpu at 126.com  Tue Nov 23 00:24:49 2004
From: jagucpu at 126.com (jacky lee)
Date: Tue, 23 Nov 2004 13:24:49 +0800
Subject: [Twisted-Python] I want to use 2 reactors in same program, help me
Message-ID: <002101c4d11c$c788fe70$c902a8c0@jacky>

My server used reactor to listen clients's requests.
and at client side, I used reactor to connect to server

Now I want to use 2 reactors in server side,
the server will listen some clients's requests,
and it will run a thread to connect to an other server,
at the same time
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041123/ee8fa4ec/attachment.htm 

From radeex at gmail.com  Tue Nov 23 01:12:15 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 23 Nov 2004 17:12:15 +1100
Subject: [Twisted-Python] I want to use 2 reactors in same program, help me
In-Reply-To: <002101c4d11c$c788fe70$c902a8c0@jacky>
References: <002101c4d11c$c788fe70$c902a8c0@jacky>
Message-ID: <60ed19d4041122221222944e6c@mail.gmail.com>

On Tue, 23 Nov 2004 13:24:49 +0800, jacky lee <jagucpu at 126.com> wrote:
>  
> My server used reactor to listen clients's requests. 
> and at client side, I used reactor to connect to server 
>   
> Now I want to use 2 reactors in server side, 
> the server will listen some clients's requests, 
> and it will run a thread to connect to an other server, 
> at the same time 

Jacky,

You don't need to run a new reactor for every type of connection. You
can run connectTCP and listenTCP on the same reactor. You don't need
threads, and you don't need multiple reactors.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From roland.hedberg at adm.umu.se  Wed Nov 24 03:27:55 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Wed, 24 Nov 2004 09:27:55 +0100
Subject: [Twisted-Python] XML-RPC, LineReceiver and defer
Message-ID: <BD4BB620-3DF2-11D9-85D0-000D932F504E@adm.umu.se>

Hi!

I'm having problems with defer again :-(
There is something about defer's that I just don't get, obviously.

Anyway, I'd like to get tips on how to solve this problem:

I have a module who on one side listens on XML-RPC and on the other 
uses the LineReceiver protocol to find some information it needs, to 
service the XML-RFC function.

If I have understood it correctly xmlrpc.XMLRFC can return a defer and 
have the XMLRPC layer hold the reply until some event has happend.

Now, the LineReceiver protocol has one function for sending a lines and
another function for receiving them.

So how do I make XMLRPC wait for the right line.

The XML-RPC server should of course be able to handle serveral requests 
at the same time, so there might be more than one outstanding reply on 
the lineReceiver side.

Knowing which reply that is connected to which sent line is doable by 
keeping a queue and using IDs ( the protocol on the LineReceiver side, 
which is no standard protocol, allows for having tags on queries and 
replies).

But how do I keep the connection between the XML-RPC request and the 
line received ?

I though about having defer checking for the change of a value in a 
dictonary, but I don't know if that is doable, is it ?

And finally I don't want to use callLater if I can avoid it. I'd like 
the performance to be as high as possible. That is, the XMLRPC reply 
should be sent as soon as the LineReceiver has gotten the reply.
I also don't want to setup and tear down a connection on the 
LineReceiver side for every request that comes in on the XMLRPC side. 
There is one server on the LineReceiver side that gets all the 
questions, so I liked to be able to have one connection going.

-- Roland




From andrea at cpushare.com  Wed Nov 24 04:35:28 2004
From: andrea at cpushare.com (andrea at cpushare.com)
Date: Wed, 24 Nov 2004 10:35:28 +0100
Subject: [Twisted-Python] pollreactor 1sec timeout
Message-ID: <20041124093528.GB10782@dualathlon.random>

Hello,

Why is the pollreactor rescheduling once per second? I modified it like
this and it still works so far.

--- Twisted/twisted/internet/pollreactor.py.~1~	2004-11-23 03:48:21.000000000 +0100
+++ Twisted/twisted/internet/pollreactor.py	2004-11-24 07:59:30.508119608 +0100
@@ -120,9 +120,7 @@ class PollReactor(default.PosixReactorBa
                POLLIN=select.POLLIN,
                POLLOUT=select.POLLOUT):
         """Poll the poller for new events."""
-        if timeout is None:
-            timeout = 1000
-        else:
+        if timeout is not None:
             timeout = int(timeout * 1000) # convert seconds to milliseconds
 
         try:



From foom at fuhm.net  Wed Nov 24 09:15:26 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 24 Nov 2004 09:15:26 -0500
Subject: [Twisted-Python] pollreactor 1sec timeout
In-Reply-To: <20041124093528.GB10782@dualathlon.random>
References: <20041124093528.GB10782@dualathlon.random>
Message-ID: <498C86F8-3E23-11D9-96B0-000A95A50FB2@fuhm.net>

On Nov 24, 2004, at 4:35 AM, andrea at cpushare.com wrote:
> Hello,
>
> Why is the pollreactor rescheduling once per second? I modified it like
> this and it still works so far.

I can see no reason to think that's necessary, and will remove it if no 
one comes up with a reason.

James




From exarkun at divmod.com  Wed Nov 24 09:28:07 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 24 Nov 2004 14:28:07 GMT
Subject: [Twisted-Python] XML-RPC, LineReceiver and defer
In-Reply-To: <BD4BB620-3DF2-11D9-85D0-000D932F504E@adm.umu.se>
Message-ID: <20041124142807.17481.404442608.divmod.quotient.3484@ohm>

On Wed, 24 Nov 2004 09:27:55 +0100, Roland Hedberg <roland.hedberg at adm.umu.se> wrote:
>Hi!
> 
> I'm having problems with defer again :-(
> There is something about defer's that I just don't get, obviously.
> 
> Anyway, I'd like to get tips on how to solve this problem:
> 
> I have a module who on one side listens on XML-RPC and on the other 
> uses the LineReceiver protocol to find some information it needs, to 
> service the XML-RFC function.
> 
> If I have understood it correctly xmlrpc.XMLRFC can return a defer and 
> have the XMLRPC layer hold the reply until some event has happend.

  Yep.

> 
> Now, the LineReceiver protocol has one function for sending a lines and
> another function for receiving them.
> 
> So how do I make XMLRPC wait for the right line.
> 
> The XML-RPC server should of course be able to handle serveral requests 
> at the same time, so there might be more than one outstanding reply on 
> the lineReceiver side.
> 
> Knowing which reply that is connected to which sent line is doable by 
> keeping a queue and using IDs ( the protocol on the LineReceiver side, 
> which is no standard protocol, allows for having tags on queries and 
> replies).
> 
> But how do I keep the connection between the XML-RPC request and the 
> line received ?
> 
> I though about having defer checking for the change of a value in a 
> dictonary, but I don't know if that is doable, is it ?

  Hopefully you already have something like this:

    from twisted.protocols import basic

    class SimpleRequestProtocol(basic.LineReciever):
        def connectionMade(self):
            self.outstanding = {}
            self.counter = 0

        def request(self, query):
            d = self.outstanding[self.counter] = defer.Deferred()
            self.sendLine('%d %s' % (self.counter, query))
            self.counter += 1
            return d

        def lineReceived(self, response):
            tag, rest = response.split(None, 1)
            self.outstanding.pop(int(tag)).callback(rest)

  Letting the XML-RPC side just call `request' and get back a Deferred that fires whenever the response arrives.

> 
> And finally I don't want to use callLater if I can avoid it. I'd like 
> the performance to be as high as possible. That is, the XMLRPC reply 
> should be sent as soon as the LineReceiver has gotten the reply.
> I also don't want to setup and tear down a connection on the 
> LineReceiver side for every request that comes in on the XMLRPC side. 
> There is one server on the LineReceiver side that gets all the 
> questions, so I liked to be able to have one connection going.
> 

  So, first, you want to be able to get a connected instance:

    from twisted.internet import reactor, protocol

    def getConnectedProto(host, port):
        f = protocol.ClientCreator(reactor, SimpleRequestProtocol)
        return f.connectTCP(host, port)

  This returns a Deferred that fires with the instance once the connection is made.  You can call it from your XML-RPC code, add a callback to the result, and in the callback invoke .request() with whatever args is appropriate.

  But you also don't want a connection per request.  So you want to cache the connection:

    from twisted.internet import defer

    class ConnCache:
        def __init__(self):
            self._cache = {}

        def getConnectedProto(self, host, port)
            try:
                return defer.succeed(self._cache[host, port])
            except KeyError:
                d = self._makeConn(host, port)
                d.addCallback(self._cacheConn, host, port)
                return d

        def _makeConn(self, host, port):
            f = protocol.ClientCreator(reactor, SimpleRequestProtocol)
            return f.connectTCP(host, port)

        def _cacheConn(self, protoInstance, host, port):
            self._cache[host, port] = protoInstance
            return protoInstance

  So from your XML-RPC server, you can instantiate ConnCache and store the instance.  When you need to do something with your SimpleRequestProtocol, you can just call .getConnectedProto() on it.  If there's a connection, it'll be quick; if there's not, it'll go make one and save it for next time, too.

  Hope this helps,

  Jp



From itamar at itamarst.org  Wed Nov 24 10:05:01 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Nov 2004 10:05:01 -0500
Subject: [Twisted-Python] pollreactor 1sec timeout
In-Reply-To: <20041124093528.GB10782@dualathlon.random>
References: <20041124093528.GB10782@dualathlon.random>
Message-ID: <1101308701.10667.72.camel@sheriffpony>

On Wed, 2004-11-24 at 10:35 +0100, andrea at cpushare.com wrote:

> Why is the pollreactor rescheduling once per second? I modified it like
> this and it still works so far.

This might be a leftover from  before signal handlers used wakeUp()
(they all use wakeUp now I hope). I remember a similar reason for
timeouts on windows, again probably because we weren't using wakeUp.

(wakeUp is our method name for using the self-pipe trick).




From andrea at cpushare.com  Wed Nov 24 17:42:32 2004
From: andrea at cpushare.com (andrea at cpushare.com)
Date: Wed, 24 Nov 2004 23:42:32 +0100
Subject: [Twisted-Python] pollreactor 1sec timeout
In-Reply-To: <1101308701.10667.72.camel@sheriffpony>
References: <20041124093528.GB10782@dualathlon.random>
	<1101308701.10667.72.camel@sheriffpony>
Message-ID: <20041124224232.GI10782@dualathlon.random>

Hello,

On Wed, Nov 24, 2004 at 10:05:01AM -0500, Itamar Shtull-Trauring wrote:
> (wakeUp is our method name for using the self-pipe trick).

So basically you write a byte into the pipe from the signal, so poll
will return, right?

1sec latency for a signal would been pretty huge anyway btw ;), so I
guess for the longer term it's better to risk a visible deadlock than
risk silent bad latency.



From itamar at itamarst.org  Wed Nov 24 18:58:25 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Nov 2004 18:58:25 -0500
Subject: [Twisted-Python] pollreactor 1sec timeout
In-Reply-To: <20041124224232.GI10782@dualathlon.random>
References: <20041124093528.GB10782@dualathlon.random>
	<1101308701.10667.72.camel@sheriffpony>
	<20041124224232.GI10782@dualathlon.random>
Message-ID: <1101340706.10666.90.camel@sheriffpony>

On Wed, 2004-11-24 at 23:42 +0100, andrea at cpushare.com wrote:

> So basically you write a byte into the pipe from the signal, so poll
> will return, right?

Yeah.

> 1sec latency for a signal would been pretty huge anyway btw ;), so I
> guess for the longer term it's better to risk a visible deadlock than
> risk silent bad latency.

That's one way to look at it, yes :)




From paul.moore at atosorigin.com  Thu Nov 25 10:24:57 2004
From: paul.moore at atosorigin.com (Paul Moore)
Date: Thu, 25 Nov 2004 15:24:57 +0000 (UTC)
Subject: [Twisted-Python] Re: twisted and threading
References: <20040818021851.GA18404@mit.edu> <4122CAA3.70704@divmod.com>
Message-ID: <loom.20041125T161928-456@post.gmane.org>

Jp Calderone <exarkun <at> divmod.com> writes:

> twisted-10152003 <at> atlas.lcs.mit.edu wrote:
> > 
> > Ah, but that doesn't work.  As I stated the c library (not mine) calls
> > potentially block forever (or at least longer than I want to wait to
> > shutdown the twisted server).  The thread created by deferTothread may
> > never complete which makes shutting down the server gracefully
> > impossible (or so I thought?).
> > 
> 
>    There is no portable way to terminate a thread without its 
> assistance.  Python supports no API for this - save one, the 
> ridiculously named "setDaemon" Thread method.  Twisted doesn't expose 
> this, nor call it internally, as it can lead to segfaults.
> 
>    Perhaps this should be parameterizable (defaulting to the current 
> behavior, of course), so that poorly behaved libraries can be dealt with?
> 
>    Alternatively, since daemonized threads might lead to this anyway, 
> perhaps you should just add a shutdown event os.kill(os.getpid(), 9) 
> <wwinkink>.

Sorry this is from long ago, possibly the OP has found a solution by now, but I 
thought I'd share my approach in case it was of more general interest...

I have hit the same problem recently (C library calls that might hang, and I 
want to give up and quit regardless in the end). What I came up with was a 
function deferToDaemonThread, which put the call in a daemon thread (one that 
the Python main thread will not wait for). It steals a lot of code from 
deferToThread, but creates a dedicated daemon thread for the call rather than 
using the thread pool.

Hope it's of interest,
Paul.

------------------------------------------------------------------------------

from twisted.internet import reactor
from twisted.python import failure
from twisted.internet import defer
from threading import Thread

def deferToDaemonThread(f, *args, **kw):
    """Run function in thread and return result as Deferred."""

    def putResultInDeferred(d, f, args, kw):
	"""Run a function and give results to a Deferred."""
	try:
	    result = f(*args, **kw)
	except:
	    f = failure.Failure()
	    reactor.callFromThread(d.errback, f)
	else:
	    reactor.callFromThread(d.callback, result)

    d = defer.Deferred()
    thread = Thread(target=putResultInDeferred,
	            args=(d, f, args, kw))
    thread.setDaemon(1)
    thread.start()
    return d





From glyph at divmod.com  Thu Nov 25 15:43:20 2004
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 25 Nov 2004 20:43:20 GMT
Subject: [Twisted-Python] Re: twisted and threading
In-Reply-To: <loom.20041125T161928-456@post.gmane.org>
Message-ID: <20041125204320.17481.1175607788.divmod.quotient.5552@ohm>

On Thu, 25 Nov 2004 15:24:57 +0000 (UTC), Paul Moore <paul.moore at atosorigin.com> wrote:
>Jp Calderone <exarkun <at> divmod.com> writes:

> >    There is no portable way to terminate a thread without its 
> > assistance.  Python supports no API for this - save one, the 
> > ridiculously named "setDaemon" Thread method.  Twisted doesn't expose 
> > this, nor call it internally, as it can lead to segfaults.

> I have hit the same problem recently (C library calls that might hang, and I 
> want to give up and quit regardless in the end). What I came up with was a 
> function deferToDaemonThread, which put the call in a daemon thread (one that 
> the Python main thread will not wait for). It steals a lot of code from 
> deferToThread, but creates a dedicated daemon thread for the call rather than 
> using the thread pool.

IMHO, if a library is _that_ poorly behaved, you ought to be communicating with it over a socket or pipe.  Anybody up for writing a 'deferToPythonSubprocess'?



From pf_moore at yahoo.co.uk  Fri Nov 26 03:12:33 2004
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Fri, 26 Nov 2004 08:12:33 +0000
Subject: [Twisted-Python] Re: twisted and threading
References: <loom.20041125T161928-456@post.gmane.org>
	<20041125204320.17481.1175607788.divmod.quotient.5552@ohm>
Message-ID: <uu0rdxc3y.fsf@yahoo.co.uk>

glyph at divmod.com writes:

> IMHO, if a library is _that_ poorly behaved, you ought to be
> communicating with it over a socket or pipe. Anybody up for writing
> a 'deferToPythonSubprocess'?

Not a bad idea - I might have a go (although as I work on Windows, I
don't have a particularly good reactor with process support...)

Paul
-- 
"Bother," said the Borg, "We've assimilated Pooh."




From bostik at stinghorn.com  Fri Nov 26 04:04:44 2004
From: bostik at stinghorn.com (Mika Bostrom)
Date: Fri, 26 Nov 2004 11:04:44 +0200
Subject: [Twisted-Python] Simple multiplex-relayer with
	twisted.protocols.smtp?
Message-ID: <20041126090444.GB2779@borg.intra.stinghorn.com>

  Good day, hackers.

  I'm trying to implement a rather simple, localhost-bound mail relay
with Twisted. The setup is follows:

Internet --- MTA -> multiplexer (*) -> parallel filters -> MTA -> dest.

  Multiplexer marked with (*) is my doing. Filters are independent
systems which accept mail according to destination domain and do their
magic according to domain-wide settings. Different domains can have
completely separate configs and even backends.

  I have read and tried to use existing sample from
http://twistedmatrix.com/pipermail/twisted-python/2003-October/005885.html
and the surrounding thread, but unfortunately have not been so far able
to get the system working.

  Basically the system should be rather trivial: accept everything,
regardless of sender or recipient (frontal MTA has already bounced
incorrect mails). Check recipient and forward to matching filter set.
Use smtp.ESMTP for inbound, smtp.SMTPClient for outbound. However, the
code snippet below freaks out. It now accepts unconditionally both
sender and recipient but issuing DATA causes an immediate stacktrace
with the following last error:

File "/usr/lib/python2.3/site-packages/twisted/protocols/smtp.py",
line 625, in do_DATA
    assert self.delivery
  exceptions.AssertionError: 

  Tracing the problem, it is apparent that there is no delivery method
in use and incidentally, this was apparently the bugging reason in the
original (a year old now) problem. Call me stupid but I couldn't fix
this by following the example and responses.

  Version of Twisted in use: 1.3, as packaged for Debian. (In time we'll
get 2.0 as well.) Any help will be appreaciated. The leap from very
simple Finger examples to smtp parts is rather long and steep...

  Code:

[--snip--]
#!/usr/bin/python

from twisted.internet import reactor, protocol, defer
from twisted.protocols import smtp
from twisted.python import log
import sys


class RelayUtility:
  """Utility class for holding runtime values"""
  
  def __init__(self):
    self.maxconns = 20
    self.active = 0
  
class RelayMessage(smtp.IMessage):
  def __init__(self):
    smtp.IMessage.__init__(self)
    self.msg = []

  

class RelayProtocol(smtp.ESMTP):
  """Relayer; sucks the mail in"""
  
  def __init__(self):
    self.util = util
    # Normal operations
    smtp.ESMTP.__init__(self)
    self.host = "nowhere.dot.invalid"

  def connectionLost(self, reason):
    self.util.active -= 1

  def connectionMade(self):
    # The easiest way. Increments upon connection, decrements
    # upon disconnection; In case of full queue, just kick the client
    self.util.active += 1
    if (self.util.active <= self.util.maxconns):
      smtp.ESMTP.connectionMade(self)
    else:
      self.sendCode(430, "Queue full. Try again later.")
      self.transport.loseConnection()

    
  # This can't be right
  def validateFrom(self, helo, origin):
    return smtp.Address(origin, None)

  # This is certainly not right, DATA barks
  def validateTo(self, user):
    return RelayMessage

class RelayFactory(smtp.SMTPFactory):
  protocol = RelayProtocol


util = RelayUtility()
log.startLogging(sys.stdout)
reactor.listenTCP(10025, RelayFactory())
reactor.run()

[--snap--]

-- 
 Mika Bostr?m         \-/  "World peace will be achieved
 Bostik at stinghorn.com  X    when the last man has killed
 Software slave       /-\   the second-to-last." -anon?



From roland.hedberg at adm.umu.se  Fri Nov 26 09:54:06 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Fri, 26 Nov 2004 15:54:06 +0100
Subject: [Twisted-Python] twistd profiling
Message-ID: <053D4D09-3FBB-11D9-AC6C-000D932F504E@adm.umu.se>

Hi!

Need to profile a twisted based application, way too slow !

twistd -p <file> produces profiling data in the named file

If hotshot is available it's used ?

Are there any nice tools for viewing profiling data ?

Since it's the system that is slow and it contains several separate 
servers I'd also would like to
have timestamps on events (preferably with a subsecond resolution) so I 
could trace flows. How can I ackomplish that ? Any support in twisted 
for it ?

-- Roland




From exarkun at divmod.com  Fri Nov 26 12:57:35 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 26 Nov 2004 17:57:35 GMT
Subject: [Twisted-Python] Simple multiplex-relayer with
In-Reply-To: <20041126090444.GB2779@borg.intra.stinghorn.com>
Message-ID: <20041126175735.17481.1563398971.divmod.quotient.6835@ohm>

On Fri, 26 Nov 2004 11:04:44 +0200, bostik at stinghorn.com (Mika Bostrom) wrote:
>  Good day, hackers.
> 
>   I'm trying to implement a rather simple, localhost-bound mail relay
> with Twisted. The setup is follows:
> 
> [snip]
> 
>   Code:
> 
> [--snip--]
> #!/usr/bin/python
> 
> from twisted.internet import reactor, protocol, defer
> from twisted.protocols import smtp
> from twisted.python import log
> import sys
> 
> 
> class RelayUtility:
>   """Utility class for holding runtime values"""
>   
>   def __init__(self):
>     self.maxconns =3D 20
>     self.active =3D 0
>   
> class RelayMessage(smtp.IMessage):
>   def __init__(self):
>     smtp.IMessage.__init__(self)
>     self.msg =3D []
> 

  The above class is the most obvious problem I see here.  Interfaces are not meant to be subclassed in this manner.  What you really want is something more like:

    class RelayMessage:
        __implements__ = smtp.IMessage

        def lineReceived(self, line):
            # Do something with the line; perhaps buffer it in memory,
            # perhaps try and send it to another connection.

        def eomReceived(self):
            # The message has been fully received; flush the buffer or take
            # whatever other action is appropriate to ensure message delivery.
            # Return a Deferred that fires when the message has been successfully
            # delivered.

        def connectionLost(self):
            # Discard message content, delivery is a failure

>   
> 
> class RelayProtocol(smtp.ESMTP):
>   """Relayer; sucks the mail in"""
>   
>   def __init__(self):
>     self.util =3D util
>     # Normal operations
>     smtp.ESMTP.__init__(self)
>     self.host =3D "nowhere.dot.invalid"
> 
>   def connectionLost(self, reason):
>     self.util.active -=3D 1
> 
>   def connectionMade(self):
>     # The easiest way. Increments upon connection, decrements
>     # upon disconnection; In case of full queue, just kick the client
>     self.util.active +=3D 1
>     if (self.util.active <=3D self.util.maxconns):
>       smtp.ESMTP.connectionMade(self)
>     else:
>       self.sendCode(430, "Queue full. Try again later.")
>       self.transport.loseConnection()
> 
>     
>   # This can't be right
>   def validateFrom(self, helo, origin):
>     return smtp.Address(origin, None)
> 
>   # This is certainly not right, DATA barks
>   def validateTo(self, user):
>     return RelayMessage

  You _could_ do things this way, but a preferable way is probably:

    class RelayDeliveryFactory:
        __implements__ = smtp.IMessageDeliveryFactory

        def getMessageDelivery(self):
            return RelayDelivery()

    class RelayDelivery:
        __implements__ = smtp.IMessageDelivery

        def receivedHeader(self, helo, origin, recipients):
            return "Received: something"

        def validateFrom(self, helo, origin):
            return origin

        def validateTo(self, user):
            return RelayMessage

> 
> class RelayFactory(smtp.SMTPFactory):
>   protocol =3D RelayProtocol
> 

  Then add this buildProtocol method:

    def buildProtocol(self, addr):
        p = smtp.SMTPFactory.buildProtocol(self, addr)
        p.deliveryFactory = RelayDeliveryFactory()
        return p

  ESMTP will call getMessageDelivery on its deliveryFactory attribute, now that it isn't None.  On the object it returns, it will call receivedHeader, validateFrom, and validateTo.  And on the object returned by calling the object returned by validateTo, it will pass the contents of the message being delivered, letting you relay it wherever is appropriate.

  Hope this helps,

  Jp



From patrick.mezard at ifrance.com  Fri Nov 26 02:49:15 2004
From: patrick.mezard at ifrance.com (=?ISO-8859-1?Q?Patrick_M=E9zard?=)
Date: Fri, 26 Nov 2004 08:49:15 +0100
Subject: [Twisted-Python] Re: twisted and threading
In-Reply-To: <loom.20041125T161928-456@post.gmane.org>
References: <20040818021851.GA18404@mit.edu> <4122CAA3.70704@divmod.com>
	<loom.20041125T161928-456@post.gmane.org>
Message-ID: <co6n56$ic7$1@sea.gmane.org>

> Sorry this is from long ago, possibly the OP has found a solution by now, but I 
> thought I'd share my approach in case it was of more general interest...
> 
> I have hit the same problem recently (C library calls that might hang, and I 
> want to give up and quit regardless in the end). What I came up with was a 
> function deferToDaemonThread, which put the call in a daemon thread (one that 
> the Python main thread will not wait for). It steals a lot of code from 
> deferToThread, but creates a dedicated daemon thread for the call rather than 
> using the thread pool.

Have you no way to terminate the blocking call from the C library itself 
? For instance, if your working python thread is waiting on a mutex in 
the C library, destroying the mutex (or something else depending on the 
threading API) may release it.

In this case, you can add a cleanup function to the library cancelling 
all blocking calls. And call it during the reactor shutdown sequence (I 
do not know where exactly, I am not an expert in this area yet, but I 
remember there are tons of handlers everywhere to perform cleanup. I 
hope there are some called before threads shutdown attempts). It means 
that you actually need a thread-pool but can terminate the blocking 
operations safely.

Or am I missing something ?

Patrick M?zard




From exarkun at divmod.com  Sat Nov 27 17:29:31 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 27 Nov 2004 22:29:31 GMT
Subject: [Twisted-Python] Twisted and Python 2.4c1
In-Reply-To: 0
Message-ID: <20041127222931.17481.1811808349.divmod.quotient.8568@ohm>


  Attached is the output from a trial run using Python 2.4c1.  There seems to be a new problem in trial's signal handling code.

  Jp
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: trial.txt
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041127/731fb1a7/attachment.txt 

From warner at lothar.com  Sat Nov 27 19:35:43 2004
From: warner at lothar.com (Brian Warner)
Date: Sat, 27 Nov 2004 16:35:43 -0800 (PST)
Subject: [Twisted-Python] Twisted and Python 2.4c1
Message-ID: <20041127.163543.94940857.warner@lothar.com>

Jp Calderone <exarkun at divmod.com> writes:

>   Attached is the output from a trial run using Python 2.4c1. There seems
>   to be a new problem in trial's signal handling code.

Got it. Some of the signal-handling code was trying to setup a SIGKILL
handler, which is an error at the C level but wasn't reported at the python
level until 2.4.

The tests are running again, 3 failures and 9 errors, all in test_trial.
Sample attached. The buildslave is using 2.4c1 all the time now, right?

cheers,
 -Brian


===============================================================================
[ERROR]: testBrokenTearDown (twisted.trial.test.test_trial.FunctionalTest)


  File "/home/buildbot/run/full2.4/Twisted/twisted/internet/defer.py", line 117, in maybeDeferred
    result = f(*args, **kw)
  File "/home/buildbot/run/full2.4/Twisted/twisted/trial/test/test_trial.py", line 126, in testBrokenTearDown
    imi = itrial.IMethodInfo(self.reporter.udeMethod)
exceptions.AttributeError: 'BogusReporter' object has no attribute 'udeMethod'


  File "/home/buildbot/run/full2.4/Twisted/twisted/internet/defer.py", line 117, in maybeDeferred
    result = f(*args, **kw)
  File "/home/buildbot/run/full2.4/Twisted/twisted/trial/test/common.py", line 170, in tearDown
    self.reporter.verify(self.failIfImportErrors, self.checkReporterSetup)
  File "/home/buildbot/run/full2.4/Twisted/twisted/trial/test/common.py", line 113, in verify
    assert_(getattr(self, v), 'self.%s did not evaluate to non-zero' % (v,))
  File "/home/buildbot/run/full2.4/Twisted/twisted/trial/assertions.py", line 45, in failUnless
    raise FailTest, msg
twisted.trial.assertions.FailTest: self.setUpReporterCalled did not evaluate to non-zero



From exarkun at divmod.com  Sat Nov 27 19:44:45 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 28 Nov 2004 00:44:45 GMT
Subject: [Twisted-Python] Twisted and Python 2.4c1
In-Reply-To: <20041127.163543.94940857.warner@lothar.com>
Message-ID: <20041128004445.17481.1539917434.divmod.quotient.8706@ohm>

On Sat, 27 Nov 2004 16:35:43 -0800 (PST), Brian Warner <warner at lothar.com> wrote:
>Jp Calderone <exarkun at divmod.com> writes:
> 
> >   Attached is the output from a trial run using Python 2.4c1. There seems
> >   to be a new problem in trial's signal handling code.
> 
> Got it. Some of the signal-handling code was trying to setup a SIGKILL
> handler, which is an error at the C level but wasn't reported at the python
> level until 2.4.

  Thanks

> 
> The tests are running again, 3 failures and 9 errors, all in test_trial.
> Sample attached. The buildslave is using 2.4c1 all the time now, right?
> 

  Yep.

  Jp



From mary-twisted at puzzling.org  Sat Nov 27 19:12:01 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sun, 28 Nov 2004 11:12:01 +1100
Subject: [Twisted-Python] tm.com website
In-Reply-To: <20041113110242.GA14679@fuchsia.puzzling.org>
References: <20041113110242.GA14679@fuchsia.puzzling.org>
Message-ID: <20041128001201.GG19073@titus.home.puzzling.org>

On Sat, Nov 13, 2004, Mary Gardiner wrote:
> Just in case anyone wants to release 2.0 before the 28th...
> 
> I'm going to be pretty much afk for the next two weeks (as will be
> Andrew, btw), so I won't be, for example, contactable about the website.
> I've got a nearly complete (well, suitable at least) 2.0 website in a
> branch in the TwistedWebsite svn repository. The major missing thing is
> websites for some of the projects.

OK, back now, I'll try to progress this further in the next week.

-Mary



From itamar at itamarst.org  Sun Nov 28 22:39:00 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 28 Nov 2004 22:39:00 -0500
Subject: [Twisted-Python] tm.com website
In-Reply-To: <20041128001201.GG19073@titus.home.puzzling.org>
References: <20041113110242.GA14679@fuchsia.puzzling.org>
	<20041128001201.GG19073@titus.home.puzzling.org>
Message-ID: <1101699540.8588.11.camel@sheriffpony>

On Sun, 2004-11-28 at 11:12 +1100, Mary Gardiner wrote:

> OK, back now, I'll try to progress this further in the next week.

You are teh awesome.




From square.erica at msa.hinet.net  Sun Nov 28 22:43:19 2004
From: square.erica at msa.hinet.net (Leon)
Date: Mon, 29 Nov 2004 11:43:19 +0800
Subject: [Twisted-Python] How to use .rpy do upload ?
Message-ID: <00a101c4d5c5$92fdb2b0$974210ac@thecus.com>

I  am a beginner,how can use .rpy do upload ???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041129/3ef0be25/attachment.htm 

From michael.mata at gaigen.net  Mon Nov 29 01:02:25 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Sun, 28 Nov 2004 22:02:25 -0800
Subject: [Twisted-Python] Multiple delimiters in linereceiver
Message-ID: <41AABB71.9030200@gaigen.net>

Is it possible to use the LineReceiver protocol with multiple delimiters?

I've run into situations where clients use either '\r\n' or a '\n'.  To 
handle either situation, I set the delimiter as '\n' and just filter out 
the '\r' from lineReceived().  This fix works, but it sure is ugly.

Has anyone run into a more elegant solution?







From bostik at stinghorn.com  Mon Nov 29 03:08:15 2004
From: bostik at stinghorn.com (Mika Bostrom)
Date: Mon, 29 Nov 2004 10:08:15 +0200
Subject: [Twisted-Python] Simple multiplex-relayer with
In-Reply-To: <20041126175735.17481.1563398971.divmod.quotient.6835@ohm>
References: <20041126090444.GB2779@borg.intra.stinghorn.com>
	<20041126175735.17481.1563398971.divmod.quotient.6835@ohm>
Message-ID: <20041129080815.GA7549@borg.intra.stinghorn.com>

On Fri, 26 Nov 2004, Jp Calderone wrote:
> On Fri, 26 Nov 2004 11:04:44 +0200, bostik at stinghorn.com (Mika Bostrom) wrote:
> > class RelayMessage(smtp.IMessage):
> >   def __init__(self):
> >     smtp.IMessage.__init__(self)
> >     self.msg =3D []
> > 
> 
>   The above class is the most obvious problem I see here.  Interfaces
>   are not meant to be subclassed in this manner.  What you really want
>   is something more like:

  [codelet snipped]

  Thank you, this was indeed the case. You also gave a a very solid rule
of thumb which will come in handy later on. "Interfaces are not meant to
be subclassed." (Yes, cut short; on purpose, as that will be easier to
remember.)

  Your advice also makes a nice example of how to use smtp module as a
base.
  
>   ESMTP will call getMessageDelivery on its deliveryFactory attribute,
>   now that it isn't None.  On the object it returns, it will call
>   receivedHeader, validateFrom, and validateTo.  And on the object
>   returned by calling the object returned by validateTo, it will pass
>   the contents of the message being delivered, letting you relay it
>   wherever is appropriate.

  This part felt a little like black magic, and my first reaction was
that of a scarred Delphi programmer: smelled a bit like excessive
nesting. Until I get a better grasp of what actually happens beneath the
hood, I'll just consider this a necessary evil.

  However, at least by your example and fixes the actual reception
works. I can carry on experimenting with what/how to do with the mail
from thereon.

>   Hope this helps,

  It certainly did. Thank you so much. I may return to list with
additional questions if your examples and hints have failed to enlighten
me after all.

  Take care,

-- 
 Mika Bostr?m         \-/  "World peace will be achieved
 Bostik at stinghorn.com  X    when the last man has killed
 Software slave       /-\   the second-to-last." -anon?



From square.erica at msa.hinet.net  Mon Nov 29 04:35:40 2004
From: square.erica at msa.hinet.net (Leon)
Date: Mon, 29 Nov 2004 17:35:40 +0800
Subject: [Twisted-Python] How to use .rpy do upload ?
Message-ID: <005c01c4d5f6$ccadcd70$974210ac@thecus.com>

<!--upload page-->
<form method="POST" enctype="multipart/form-data" action="test.rpy">
                <input type="file" name="filename">
                <input type="submit">
</form>

#rpy script
from twisted.web.resource import Resource
class test(Resource):
        def render_POST(self,request):
                f = open("/root/basic_daemon/htdocs/test/test.txt","wb") #absolute path,the path must use chmod modify authorization
                f.write(request.args.get('filename')[0])
                f.close()
                return "<html><body>" + 'success' + "</body></html>"
resource = test()

----by Leon----
  ----- Original Message ----- 
  From: Iap, Singuan 
  To: leon_lee at thecus.com 
  Sent: Monday, November 29, 2004 4:56 PM
  Subject: FW: [Twisted-Python] How to use .rpy do upload ?


  If you got answer. 
  Why not answer yourself onto the post?

  singuan



------------------------------------------------------------------------------
  From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Leon
  Sent: Monday, November 29, 2004 11:43 AM
  To: twisted-python at twistedmatrix.com
  Subject: [Twisted-Python] How to use .rpy do upload ?


  I  am a beginner,how can use .rpy do upload ???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041129/38ae207b/attachment.htm 

From petri.savolainen at iki.fi  Mon Nov 29 09:55:42 2004
From: petri.savolainen at iki.fi (Petri Savolainen)
Date: Mon, 29 Nov 2004 16:55:42 +0200
Subject: [Twisted-Python] PyMedia & Tk - based mp3 sound recorder
Message-ID: <cofd1i$k30$1@sea.gmane.org>

I've tried to write a simple sound recorder for python. Basically, it 
just reads sound from mic or line in, and encodes it to mp3 on the fly. 
See http://pymedia.org/tut/src/voice_recorder.py.html for a simple 
example I've taken the pymedia recorder code from. Works nicely - but no 
GUI etc. of course.

I've added a very simple Tk-base GUI using twisted, using 
task.LoopingCall to drive the recorder loop that reads chunks data from 
sound device and encodes them.

The problem is that the sound is now garbled - it sounds as if the loop 
is not fast enough or it's dropping some sound data. Apart from twisted 
and Tk integration, the code should be essentially the same as the 
original example that works fine.

I''ve tried with different task looping frequencies and even added Psyco 
optiomization to the code, and all this has made but tiny difference 
-and my PC is an AMD 2400+ with plenty of memory so I would think speed 
is not the issue here; the encoding preferences are mono, 22050Hz and 
64kbit/s.

The source code (about 120 lines in all) is attached - any advice or 
improvement suggestions would be greatly appreciated.

Thanks,

  Petri
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: recorderGUI.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041129/9900ba62/attachment.txt 

From itamar at itamarst.org  Mon Nov 29 10:55:12 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 29 Nov 2004 10:55:12 -0500
Subject: [Twisted-Python] PyMedia & Tk - based mp3 sound recorder
In-Reply-To: <cofd1i$k30$1@sea.gmane.org>
References: <cofd1i$k30$1@sea.gmane.org>
Message-ID: <1101743712.10755.3.camel@sheriffpony>

On Mon, 2004-11-29 at 16:55 +0200, Petri Savolainen wrote:

> I've added a very simple Tk-base GUI using twisted, using 
> task.LoopingCall to drive the recorder loop that reads chunks data from 
> sound device and encodes them.

LoopingCall has a max resolution dependent on the clock resolution. E.g.
on Linux 2.6 LoopingCall is good up to 1ms resolution (0.001 seconds),
on 2.4 by default 10ms and 2ms on redhat boxes, but that's about it.




From exarkun at divmod.com  Mon Nov 29 11:10:21 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 29 Nov 2004 16:10:21 GMT
Subject: [Twisted-Python] PyMedia & Tk - based mp3 sound recorder
In-Reply-To: <cofd1i$k30$1@sea.gmane.org>
Message-ID: <20041129161021.17481.229429193.divmod.quotient.11237@ohm>

On Mon, 29 Nov 2004 16:55:42 +0200, Petri Savolainen <petri.savolainen at iki.fi> wrote:
>I've tried to write a simple sound recorder for python. Basically, it 
> just reads sound from mic or line in, and encodes it to mp3 on the fly. 
> See http://pymedia.org/tut/src/voice_recorder.py.html for a simple 
> example I've taken the pymedia recorder code from. Works nicely - but no 
> GUI etc. of course.
> 
> I've added a very simple Tk-base GUI using twisted, using 
> task.LoopingCall to drive the recorder loop that reads chunks data from 
> sound device and encodes them.
> 
> The problem is that the sound is now garbled - it sounds as if the loop 
> is not fast enough or it's dropping some sound data. Apart from twisted 
> and Tk integration, the code should be essentially the same as the 
> original example that works fine.
> 
> I''ve tried with different task looping frequencies and even added Psyco 
> optiomization to the code, and all this has made but tiny difference 
> -and my PC is an AMD 2400+ with plenty of memory so I would think speed 
> is not the issue here; the encoding preferences are mono, 22050Hz and 
> 64kbit/s.

  You may want to look at how Shtoom gets its audio input.  It uses Twisted and seems to have audio handling down pretty well.

    http://www.divmod.org/Home/Projects/Shtoom/

  Jp



From petri.savolainen at iki.fi  Mon Nov 29 12:05:09 2004
From: petri.savolainen at iki.fi (Petri Savolainen)
Date: Mon, 29 Nov 2004 19:05:09 +0200
Subject: [Twisted-Python] Re: PyMedia & Tk - based mp3 sound recorder
In-Reply-To: <1101743712.10755.3.camel@sheriffpony>
References: <cofd1i$k30$1@sea.gmane.org> <1101743712.10755.3.camel@sheriffpony>
Message-ID: <cofkk8$em6$1@sea.gmane.org>

Itamar Shtull-Trauring wrote:
> On Mon, 2004-11-29 at 16:55 +0200, Petri Savolainen wrote:
> 
> 
>>I've added a very simple Tk-base GUI using twisted, using 
>>task.LoopingCall to drive the recorder loop that reads chunks data from 
>>sound device and encodes them.
> 
> 
> LoopingCall has a max resolution dependent on the clock resolution. E.g.
> on Linux 2.6 LoopingCall is good up to 1ms resolution (0.001 seconds),
> on 2.4 by default 10ms and 2ms on redhat boxes, but that's about it.

Good to know - I was wondering what's the maximum. I've tried quite a 
few different values for the resolution, ranging from 0.05 to about 
0.00001 or so, with no significant variation to audio quality.

  Petri




From thomas.weholt at gmail.com  Mon Nov 29 12:59:59 2004
From: thomas.weholt at gmail.com (Thomas Weholt)
Date: Mon, 29 Nov 2004 18:59:59 +0100
Subject: [Twisted-Python] WebDav example?
Message-ID: <ffb7b7f8041129095958b3e033@mail.gmail.com>

Hi,

I've seen the akadav twisted-based webdav module, but there's no
documentation or examples in the archive. Can anybody show me how to
use it to server files from a specificed directory?

-- 
Mvh/Best regards,
Thomas Weholt
http://www.weholt.org



From foom at fuhm.net  Mon Nov 29 13:03:17 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 29 Nov 2004 13:03:17 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <F23B22B8-4230-11D9-96B0-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-11-20 17:24:10.440000:
   Bugs opened: 17   Bugs closed: 19   Total open bugs: 315 (-2)

New / Reopened Bugs
______________________
make epydoc stop ignoring zope interfaces  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue794 opened by radix

[TRIAL] Unhandled exception in trial at result reporting time  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue800 opened by exarkun

Intermittent twisted.trial.test.test_util.TestMktemp failure  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue799 opened by exarkun

[TRIAL] Intermittent 
twisted.trial.test.test_adapters.TestFailureFormatting failure  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue798 opened by exarkun

[TRIAL] t.trial.util.wait deprecates, but doesn't replace  (yesterday)
        http://www.twistedmatrix.com/bugs/issue795 opened by teratorn

[TRIAL] trial inconsistently reporting ERROR's  (yesterday)
        http://www.twistedmatrix.com/bugs/issue796 opened by teratorn

[CORE] gtkreactor fixing  (an hour ago)
        http://www.twistedmatrix.com/bugs/issue805 opened by jknight

qtreactor dont works with threads!!  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue793 opened by nahu

[TRIAL] 'trial --until-failure twisted.abc' spews forever  (yesterday)
        http://www.twistedmatrix.com/bugs/issue804 opened by exarkun

[MKTAP] mktap man page out of sync  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue802 opened by doko

[MKTAP] mktap news is broken  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue803 opened by doko

t.names.client.ThreadedResolver should be in core?  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue790 opened by jknight

[MKTAP] "mktap -t source" broken  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue797 opened by teratorn

reapAllProcesses occassionally, as apparently signal delivery is 
unreliable  (6 days ago)
        http://www.twistedmatrix.com/bugs/issue791 opened by itamarst

[TWISTD, CORE] twistd --interactive (or something) that starts up an 
async REPL  (1 week ago)
        http://www.twistedmatrix.com/bugs/issue789 opened by radix

[TRIAL] trial warning suppression tests should be less noisy  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue801 opened by exarkun

Reactor that complains when non-threadsafe APIs are called from a 
thread  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue792 opened by itamarst

Bugs Closed
______________________
Move SRVConnector into twisted.names  (3 weeks ago)
        http://www.twistedmatrix.com/bugs/issue772 opened by itamarst, 
closed by radix

[WIN32] win32 twistd.bat only accepts 9 arguments  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue747 opened by warner, 
closed by teratorn

mktap argument and man page  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue755 opened by opq, closed 
by teratorn

[MKTAP] mktap man page out of sync  (yesterday)
        http://www.twistedmatrix.com/bugs/issue802 opened by doko, 
closed by teratorn

[MKTAP] mktap news is broken  (yesterday)
        http://www.twistedmatrix.com/bugs/issue803 opened by doko, 
closed by teratorn

[MKTAP] "mktap -t source" broken  (yesterday)
        http://www.twistedmatrix.com/bugs/issue797 opened by teratorn, 
closed by teratorn

twistd --version failed on windows? I'm using 1.3.0  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue742 opened by maoy, 
closed by teratorn

[CORE] tksupport raises bogus error when Tk() object destroyed  (7 
months ago)
        http://www.twistedmatrix.com/bugs/issue588 opened by edsuom, 
closed by itamarst

[CORE] Reactor should remove references to already called callbacks 
added by addSystemEventTrigger  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue752 opened by itamarst, 
closed by itamarst

Add ClientCreator example to TCP Client howto  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue708 opened by mcfletch, 
closed by itamarst

[MAIL] test_mail fails on Windows  (12 months ago)
        http://www.twistedmatrix.com/bugs/issue409 opened by 
PenguinOfDoom, closed by exarkun

[CORE] reactor.installResolver doesn't work correctly  (8 months ago)
        http://www.twistedmatrix.com/bugs/issue570 opened by spiv, 
closed by exarkun

[MAIL] SMTP errors during IMessage.eomReceived are hidden  (9 months 
ago)
        http://www.twistedmatrix.com/bugs/issue503 opened by warner, 
closed by exarkun

mktap arguments  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue753 opened by kyle, 
closed by exarkun

[TWISTD] twistw should be renamed _twistw to avoid user confusion  (3 
weeks ago)
        http://www.twistedmatrix.com/bugs/issue782 opened by spiv, 
closed by radix

cfreactor and listenUDP crashes in pyobjc application  (5 months ago)
        http://www.twistedmatrix.com/bugs/issue648 opened by burris, 
closed by radix

[PATCH] added timeout and error checking logic to smtp.py  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue756 opened by bkirsch, 
closed by exarkun

[MAIL] plusWildcard for mktap mail  (13 months ago)
        http://www.twistedmatrix.com/bugs/issue366 opened by 
alexjacobson, closed by exarkun

[WEB] Resource.render should allow returning a Deferred  (14 months ago)
        http://www.twistedmatrix.com/bugs/issue253 opened by jknight, 
closed by jknight




From iap_yeh at abit.com.tw  Mon Nov 29 22:38:14 2004
From: iap_yeh at abit.com.tw (Iap)
Date: Tue, 30 Nov 2004 11:38:14 +0800
Subject: [Twisted-Python] want to freeze twisted
Message-ID: <200411300333.iAU3XqkR012046@mail.thecus.com>

I have a twistd-based web server by running a web.tap file like this:
 
$twistd -o -f web.tap -l /var/log/twistd.log
 
Great, it works. Then, I use cx_freeze to freeze  it.
 
$FreezePython --install-dir freeze_twistd twistd
 
That is ok, lots of *.so have been copied into freeze_twistd/*.
After moving those all into another machine, and run the executable
 
$freeze_twistd/twistd
 
I got complains on missing some modules.
I realized that those twisted/* don't be freezed.
 
Then, I try:
$FreezePython --include-modules=cgi,calendar,twisted
--install-dir=freeze_twistd twistd
 
That is ok too. But twisted still not been included.
Any suggestion?
 
Thanks in advance.
 
Iap.
BTW: I searched google with keywords "twisted freeze", "twistd freeze". Not
so many hits.
 
 
 
 
 
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20041130/f3caaa65/attachment.htm 

From bostik at stinghorn.com  Tue Nov 30 09:18:15 2004
From: bostik at stinghorn.com (Mika Bostrom)
Date: Tue, 30 Nov 2004 16:18:15 +0200
Subject: [Twisted-Python] Simple multiplex-relayer with
In-Reply-To: <20041129080815.GA7549@borg.intra.stinghorn.com>
References: <20041126090444.GB2779@borg.intra.stinghorn.com>
	<20041126175735.17481.1563398971.divmod.quotient.6835@ohm>
	<20041129080815.GA7549@borg.intra.stinghorn.com>
Message-ID: <20041130141815.GI7549@borg.intra.stinghorn.com>

On Mon, 29 Nov 2004, Mika Bostrom wrote:
> On Fri, 26 Nov 2004, Jp Calderone wrote:
> >   ESMTP will call getMessageDelivery on its deliveryFactory attribute,
> >   now that it isn't None.  On the object it returns, it will call
> >   receivedHeader, validateFrom, and validateTo.  And on the object
> >   returned by calling the object returned by validateTo, it will pass
> >   the contents of the message being delivered, letting you relay it
> >   wherever is appropriate.
> 
>   This part felt a little like black magic, [...]

  This part still feels a little voodooish, but I have figured out at
least something. I don't need to use SMTPClient at all; just use
smtp.sendmail() to forward the mail to next point of entry.

  However, since my intention was to multiplex outgoing mails to
different scanning engines, just forwarding blindly is not exactly
productive. Let's assume I have 5 or 6 different scanning engines
running in localhost, all of them accepting inbound mail via SMTP in
irregular ports. smtp.sendmail() uses the standard port, so I came up
with this:

[--snip--]
diff -uN twisted/protocols/smtp.py twisted/protocols/smtp.py.new 
--- twisted/protocols/smtp.py   2004-04-09 06:06:54.000000000 +0300
+++ twisted/protocols/smtp.py.new       2004-11-29 14:16:01.000000000 +0200
@@ -1318,7 +1318,7 @@
         p.factory = self
         return p
 
-def sendmail(smtphost, from_addr, to_addrs, msg):
+def sendmail(smtphost, from_addr, to_addrs, msg, port=25):
     """Send an email
 
     This interface is intended to be a direct replacement for
@@ -1338,6 +1338,9 @@
         to pass an email.Message directly, but doing the conversion with
         email.Generator manually will give you more control over the
         process).
+    @param port: The port to connect to on smtphost. If none is
+        provided, standard 25 is used.
+    
 
     @rtype: L{Deferred}
     @returns: A L{Deferred}, its callback will be called if a message is sent
@@ -1354,7 +1357,7 @@
 
     d = defer.Deferred()
     factory = SMTPSenderFactory(from_addr, to_addrs, msg, d)
-    reactor.connectTCP(smtphost, 25, factory)
+    reactor.connectTCP(smtphost, port, factory)
 
     return d

[--snap--]

  It should allow me to inject the mail to any destination, host:port
not being a hindrance. It should also retain compatibility with all
existing scripts that use smtp.sendmail()

  Now, to _use_ that, I came up with something like this: (referring to
previous mails with complete code)

[--schnippel--]
class RelayMessage:
  __implements__ = smtp.IMessage

  def __init__(self):
    # Clear before adding
    util.connup()
    self.msg = []

  def lineReceived(self, line):
    self.msg.append(line)

  def eomReceived(self):
    # Add message to outgoing queue
    # XXX Does not work yet, address information needs to be dug out
    dd = smtp.sendmail('localhost', self._from, self._to, self.msg, 
      10050)
    dd.addCallBack(util.conndown) # When mail has been passed, update counter

    # Return a success
    return defer.succeed('Tally ho.')

  def connectionLost(self):
    # If connection is ever lost in this stage, it is a delivery error
    self.conndown()
    self.msg = []
    
[--schnappel--]

  The problem here is naturally that to use smtp.sendmail() I need to
extract addresses for sender and recipient(s). I *know* they are there
somewhere, but after experimentation and minor excavation I feel utterly
lost.

  smtp.SMTP.{_cbFromValidate,_cbToValidate} routines place these strings
in SMTP._from and SMTP._to, but I haven't been able to dig them out so I
could use them. This feels like the most straightforward way of doing
this and as such, one I would like to implement.

  There must be some clean path from smtp.IMessage interfaces to access
items in a smtp.STMP instance. If anyone feels generous and
knowledgeable, I for one would gladly welcome the hint as to how this is
done.

  For what it's worth, if the patch really works I'll naturally try to 
submit it for inclusion. 


-- 
 Mika Bostr?m         \-/  "World peace will be achieved
 Bostik at stinghorn.com  X    when the last man has killed
 Software slave       /-\   the second-to-last." -anon?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20041130/cf8d124f/attachment.pgp 

From anthony at interlink.com.au  Tue Nov 30 09:34:09 2004
From: anthony at interlink.com.au (Anthony Baxter)
Date: Wed, 1 Dec 2004 01:34:09 +1100
Subject: [Twisted-Python] PyMedia & Tk - based mp3 sound recorder
In-Reply-To: <cofd1i$k30$1@sea.gmane.org>
References: <cofd1i$k30$1@sea.gmane.org>
Message-ID: <200412010134.10036.anthony@interlink.com.au>

On Tuesday 30 November 2004 01:55, Petri Savolainen wrote:
> I've tried to write a simple sound recorder for python. Basically, it
> just reads sound from mic or line in, and encodes it to mp3 on the fly.
> See http://pymedia.org/tut/src/voice_recorder.py.html for a simple
> example I've taken the pymedia recorder code from. Works nicely - but no
> GUI etc. of course.

Have a look at the scripts/shreader.py script in shtoom svn. It collects
audio from any number of backend audio devices, and (optionally) 
records it to a file. It works fine.

Anthony



From itamar at itamarst.org  Tue Nov 30 10:52:18 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Nov 2004 10:52:18 -0500
Subject: [Twisted-Python] Simple multiplex-relayer with
In-Reply-To: <20041130141815.GI7549@borg.intra.stinghorn.com>
References: <20041126090444.GB2779@borg.intra.stinghorn.com>
	<20041126175735.17481.1563398971.divmod.quotient.6835@ohm>
	<20041129080815.GA7549@borg.intra.stinghorn.com>
	<20041130141815.GI7549@borg.intra.stinghorn.com>
Message-ID: <1101829939.10757.30.camel@sheriffpony>

On Tue, 2004-11-30 at 16:18 +0200, Mika Bostrom wrote:

>   However, since my intention was to multiplex outgoing mails to
> different scanning engines, just forwarding blindly is not exactly
> productive. Let's assume I have 5 or 6 different scanning engines
> running in localhost, all of them accepting inbound mail via SMTP in
> irregular ports. smtp.sendmail() uses the standard port, so I came up
> with this:

Could you add this patch to http://twistedmatrix.com/bugs/?




From itamar at itamarst.org  Tue Nov 30 14:46:44 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Nov 2004 14:46:44 -0500
Subject: [Twisted-Python] Reminder: PyCon 2005 call for proposals is open
Message-ID: <1101844004.10790.42.camel@sheriffpony>

http://www.python.org/pycon/2005/cfp.html





From petri.savolainen at iki.fi  Tue Nov 30 16:36:01 2004
From: petri.savolainen at iki.fi (Petri Savolainen)
Date: Tue, 30 Nov 2004 23:36:01 +0200
Subject: [Twisted-Python] Re: PyMedia & Tk (SOLVED)
In-Reply-To: <cofd1i$k30$1@sea.gmane.org>
References: <cofd1i$k30$1@sea.gmane.org>
Message-ID: <coiosb$191$1@sea.gmane.org>

Thanks for everyone who responded. Embarrassingly, I had forgotten to 
make sure the file was opened in binary mode...

> The problem is that the sound is now garbled - it sounds as if the loop 
> is not fast enough or it's dropping some sound data. Apart from twisted 
> and Tk integration, the code should be essentially the same as the 
> original example that works fine.

>    def startRecording(self):
>       file = tkFileDialog.asksaveasfile(title="Enter file to save to")

So instead:

file = tkFileDialog.asksaveasfile(mode="wb", title="Enter file to save to")




From eltronic at juno.com  Tue Nov 30 17:14:26 2004
From: eltronic at juno.com (eltronic at juno.com)
Date: Tue, 30 Nov 2004 17:14:26 -0500
Subject: [Twisted-Python] PyMedia & Tk - based mp3 sound recorder
Message-ID: <20041130.172826.-1517669.0.eltronic@juno.com>


 On Tuesday 30 November 2004 01:55, Petri Savolainen wrote:
 > I've tried to write a simple sound recorder for python. Basically,  it
 > just reads sound from mic or line in, and encodes it to mp3 on the 
 > fly.
the use of psyco might actually be slowing you down.
it can't help w/pymedia being a compiled extension and
the UI isn't a likely source of bottleneck. also, you should 
subclass from object to give psyco something to work with.
pymedia didn't recognize my sound device or I would have tried it.

________________________________________________________________
Juno Platinum $9.95. Juno SpeedBand $14.95.
Sign up for Juno Today at http://www.juno.com!
Look for special offers at Best Buy stores.



From slyphon at twistedmatrix.com  Mon Nov  1 03:41:53 2004
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Mon, 1 Nov 2004 03:41:53 -0700
Subject: [Twisted-Python] callLater(0) is A BIG LIE
Message-ID: <20041101104153.GA1155@pyramid.twistedmatrix.com>

I'd like to offer some reflections on the reactor and facilitate some
conversation on a subject that's been causing me much frustration:

    the twisted idiom, "callLater(0)"

While it seems that this is a DelayedCall, it really is a lie. It has
nothing to do with time at all, it is a very *convenient* lie that we
all have accepted, but is a lie nonetheless.

We all know this means "call function f in the next reactor iteration", 
but the semantics of callLater have to do with time, not reactor
iterations. In fact, in the API documentation, there is no reference to
reactor iterations, at all.

I think the implicit nature of this idiom is bad.

For example in tcp.py:377

    reactor.callLater(0, self.failIfNotConnected, error)

what this really means is: "run this method at the beginning of the next 
reactor iteration, if my socket isn't connected, that method will fail"

Now, if the reactor were a "pure" event loop (in the way libevent is,
with no scheduling), callLater(0) would mean, "Call function f *ASAP*
after this function exits". There would be no guarantees as to what
would get run next.

The workaround (in terms of my implementation) is to emulate this
scheduling behavior the select reactor provides, but this kills some of
the performance gains one gets from using libevent.  When I asked the
libevent guys about this, they said it seemed like a brokenness of our
library.

I guess the question is, is there a better way for twisted to handle
this type of thing? Would it be more to our advantage to make scheduling
a different abstraction with explicit well-defined methods?

-Jonathan





From exarkun at divmod.com  Mon Nov  1 05:47:52 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Mon, 01 Nov 2004 12:47:52 GMT
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101104153.GA1155@pyramid.twistedmatrix.com>
Message-ID: <20041101124752.9171.1818978336.divmod.quotient.1363@ohm>

On Mon, 1 Nov 2004 03:41:53 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
>I'd like to offer some reflections on the reactor and facilitate some
> conversation on a subject that's been causing me much frustration:
> 
>     the twisted idiom, "callLater(0)"
> 

http://twistedmatrix.com/pipermail/twisted-python/2002-October/001943.html

  In particular,

http://twistedmatrix.com/pipermail/twisted-python/2002-October/001956.html

  Jp



From foom at fuhm.net  Mon Nov  1 10:22:52 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 1 Nov 2004 12:22:52 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101104153.GA1155@pyramid.twistedmatrix.com>
References: <20041101104153.GA1155@pyramid.twistedmatrix.com>
Message-ID: <A9477C54-2C2A-11D9-AF2F-000A95A50FB2@fuhm.net>

On Nov 1, 2004, at 5:41 AM, Jonathan Simms wrote:
> I'd like to offer some reflections on the reactor and facilitate some
> conversation on a subject that's been causing me much frustration:
>
>     the twisted idiom, "callLater(0)"
>
> While it seems that this is a DelayedCall, it really is a lie. It has
> nothing to do with time at all, it is a very *convenient* lie that we
> all have accepted, but is a lie nonetheless.
>
> We all know this means "call function f in the next reactor iteration",
> but the semantics of callLater have to do with time, not reactor
> iterations. In fact, in the API documentation, there is no reference to
> reactor iterations, at all.

I think you are somewhat mistaken, or at least, your message here is 
somewhat misleading. callLater(0) is not special, nor a lie. A reactor 
iteration looks at the current time _once_, and calls all DelayedCalls 
up until that point in time. This means that something like 
"callLater(1, foo); sleep(2)" will *also* not call foo ASAP after the 
function exits (even though its time has passed), but will wait until 
the next reactor iteration.

This is a general rule: no matter what the time value, callLaters() are 
supposed to happen after network I/O has next been processed. It is not 
brokenness, it's just a decision. You need to have *some* scheduling of 
timed events and IO events, and Twisted chose to alternate the two. 
That is a reasonable thing to do, as it helps prevent starvation of IO 
by timed events.

I take it libevent chose to always prefer timed events over network IO.

James




From pje at telecommunity.com  Mon Nov  1 10:44:12 2004
From: pje at telecommunity.com (Phillip J. Eby)
Date: Mon, 01 Nov 2004 12:44:12 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101104153.GA1155@pyramid.twistedmatrix.com>
Message-ID: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>

At 03:41 AM 11/1/04 -0700, Jonathan Simms wrote:
>I'd like to offer some reflections on the reactor and facilitate some
>conversation on a subject that's been causing me much frustration:
>
>     the twisted idiom, "callLater(0)"
>
>While it seems that this is a DelayedCall, it really is a lie. It has
>nothing to do with time at all, it is a very *convenient* lie that we
>all have accepted, but is a lie nonetheless.
>
>We all know this means "call function f in the next reactor iteration",

No, it means, "call f *at least* 0 seconds from now", just as 
'callLater(1,f)' means "call f *at least* 1 second from now".

AFAIK, iterations have nothing to do with it.  In fact, I believe that on a 
machine that is sufficiently fast relative to the precision of its 'time()' 
function, it was possible for a 'callLater(0,f)' to be invoked in the same 
iteration, in some versions of Twisted.

That being said, I think your example points out code in Twisted that's 
relying on 'callLater(0,f)' meaning "call f in the next iteration", and 
that code should probably be considered broken.  Only a non-zero value 
should guarantee that the code will not run in the current iteration.

(Disclaimer: I'm not a Twisted developer, but I've developed PEAK's 
scheduler system to interoperate with Twisted and vice versa, so I've had 
occasion to dabble in timer precision and iteration issues.)




From bob at redivi.com  Mon Nov  1 10:51:33 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 1 Nov 2004 12:51:33 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
Message-ID: <AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>

On Nov 1, 2004, at 12:44, Phillip J. Eby wrote:

> At 03:41 AM 11/1/04 -0700, Jonathan Simms wrote:
>> I'd like to offer some reflections on the reactor and facilitate some
>> conversation on a subject that's been causing me much frustration:
>>
>>     the twisted idiom, "callLater(0)"
>>
>> While it seems that this is a DelayedCall, it really is a lie. It has
>> nothing to do with time at all, it is a very *convenient* lie that we
>> all have accepted, but is a lie nonetheless.
>>
>> We all know this means "call function f in the next reactor 
>> iteration",
>
> No, it means, "call f *at least* 0 seconds from now", just as 
> 'callLater(1,f)' means "call f *at least* 1 second from now".
>
> AFAIK, iterations have nothing to do with it.  In fact, I believe that 
> on a machine that is sufficiently fast relative to the precision of 
> its 'time()' function, it was possible for a 'callLater(0,f)' to be 
> invoked in the same iteration, in some versions of Twisted.
>
> That being said, I think your example points out code in Twisted 
> that's relying on 'callLater(0,f)' meaning "call f in the next 
> iteration", and that code should probably be considered broken.  Only 
> a non-zero value should guarantee that the code will not run in the 
> current iteration.
>
> (Disclaimer: I'm not a Twisted developer, but I've developed PEAK's 
> scheduler system to interoperate with Twisted and vice versa, so I've 
> had occasion to dabble in timer precision and iteration issues.)

Actually callLater(0, ....) was an edge case up until recently (I hope 
it got fixed?) where it DID run in the current iteration.. a timer that 
fired another timer with 0 delay would cause the timer processing to 
never finish, so IO wouldn't happen anymore.

Of course, everyone expected it to mean "call function f in the next 
reactor iteration".. but it didn't :)

-bob




From pje at telecommunity.com  Mon Nov  1 11:27:16 2004
From: pje at telecommunity.com (Phillip J. Eby)
Date: Mon, 01 Nov 2004 13:27:16 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
Message-ID: <5.1.1.6.0.20041101132231.027aa510@mail.telecommunity.com>

At 12:51 PM 11/1/04 -0500, Bob Ippolito wrote:
>Actually callLater(0, ....) was an edge case up until recently (I hope it 
>got fixed?) where it DID run in the current iteration.. a timer that fired 
>another timer with 0 delay would cause the timer processing to never 
>finish, so IO wouldn't happen anymore.
>
>Of course, everyone expected it to mean "call function f in the next 
>reactor iteration".. but it didn't :)

Right; I'm arguing that even in a "sane" scheduler it *doesn't* mean that, 
on a sufficiently fast machine with a sufficiently low-granularity 
clock.  For example, on Windows, time.time() has sufficiently low 
resolution that this can happen.

However, regardless of clock resolution, using a *non-zero* value for 
callLater, regardless of how small the value is, is sufficient to ensure 
that the item is run in the next iteration.  This should be true for any 
sane scheduler (i.e., one that can't enter a state of perpetual I/O 
starvation).




From slyphon at twistedmatrix.com  Mon Nov  1 12:32:59 2004
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Mon, 1 Nov 2004 12:32:59 -0700
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101124752.9171.1818978336.divmod.quotient.1363@ohm>
References: <20041101104153.GA1155@pyramid.twistedmatrix.com>
	<20041101124752.9171.1818978336.divmod.quotient.1363@ohm>
Message-ID: <20041101193259.GA31459@pyramid.twistedmatrix.com>

On Mon, Nov 01, 2004 at 12:47:52PM +0000, exarkun at divmod.com wrote:
> On Mon, 1 Nov 2004 03:41:53 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> >I'd like to offer some reflections on the reactor and facilitate some
> > conversation on a subject that's been causing me much frustration:
> > 
> >     the twisted idiom, "callLater(0)"
> > 
> 
> http://twistedmatrix.com/pipermail/twisted-python/2002-October/001943.html
> 
>   In particular,
> 
> http://twistedmatrix.com/pipermail/twisted-python/2002-October/001956.html
> 
>   Jp

Well great minds, etc. etc. ;)


The thing is, it doesn't seem as if this has decreased the use of
callLater(0). Perhaps the answer would be to make a more concerted
effort in not using it?

-JDS





From bob at redivi.com  Mon Nov  1 12:34:08 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 1 Nov 2004 14:34:08 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <5.1.1.6.0.20041101132231.027aa510@mail.telecommunity.com>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<5.1.1.6.0.20041101132231.027aa510@mail.telecommunity.com>
Message-ID: <FFE45424-2C3C-11D9-955F-000A95BA5446@redivi.com>

On Nov 1, 2004, at 13:27, Phillip J. Eby wrote:

> At 12:51 PM 11/1/04 -0500, Bob Ippolito wrote:
>> Actually callLater(0, ....) was an edge case up until recently (I 
>> hope it got fixed?) where it DID run in the current iteration.. a 
>> timer that fired another timer with 0 delay would cause the timer 
>> processing to never finish, so IO wouldn't happen anymore.
>>
>> Of course, everyone expected it to mean "call function f in the next 
>> reactor iteration".. but it didn't :)
>
> Right; I'm arguing that even in a "sane" scheduler it *doesn't* mean 
> that, on a sufficiently fast machine with a sufficiently 
> low-granularity clock.  For example, on Windows, time.time() has 
> sufficiently low resolution that this can happen.
>
> However, regardless of clock resolution, using a *non-zero* value for 
> callLater, regardless of how small the value is, is sufficient to 
> ensure that the item is run in the next iteration.  This should be 
> true for any sane scheduler (i.e., one that can't enter a state of 
> perpetual I/O starvation).

Well if you guarantee that any timer fired during the timer-processing 
phase of the runloop will not get processed until the next runloop 
iteration, then you shouldn't have a problem with I/O starvation or 
low-granularity clocks... just like you need to guarantee that any 
event generator (i.e. observed file descriptor) is only allowed to make 
noise once per runloop.

-bob




From slyphon at twistedmatrix.com  Mon Nov  1 12:51:29 2004
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Mon, 1 Nov 2004 12:51:29 -0700
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <A9477C54-2C2A-11D9-AF2F-000A95A50FB2@fuhm.net>
References: <20041101104153.GA1155@pyramid.twistedmatrix.com>
	<A9477C54-2C2A-11D9-AF2F-000A95A50FB2@fuhm.net>
Message-ID: <20041101195129.GB31459@pyramid.twistedmatrix.com>

On Mon, Nov 01, 2004 at 12:22:52PM -0500, James Y Knight wrote:
> On Nov 1, 2004, at 5:41 AM, Jonathan Simms wrote:
> >I'd like to offer some reflections on the reactor and facilitate some
> >conversation on a subject that's been causing me much frustration:
> >
> >    the twisted idiom, "callLater(0)"
> >
> >While it seems that this is a DelayedCall, it really is a lie. It has
> >nothing to do with time at all, it is a very *convenient* lie that we
> >all have accepted, but is a lie nonetheless.
> >
> >We all know this means "call function f in the next reactor iteration",
> >but the semantics of callLater have to do with time, not reactor
> >iterations. In fact, in the API documentation, there is no reference to
> >reactor iterations, at all.
> 
> I think you are somewhat mistaken, or at least, your message here is 
> somewhat misleading. callLater(0) is not special, nor a lie. A reactor 
> iteration looks at the current time _once_, and calls all DelayedCalls 
> up until that point in time. This means that something like 
> "callLater(1, foo); sleep(2)" will *also* not call foo ASAP after the 
> function exits (even though its time has passed), but will wait until 
> the next reactor iteration.
> 
> This is a general rule: no matter what the time value, callLaters() are 
> supposed to happen after network I/O has next been processed. It is not 
> brokenness, it's just a decision. You need to have *some* scheduling of 
> timed events and IO events, and Twisted chose to alternate the two. 
> That is a reasonable thing to do, as it helps prevent starvation of IO 
> by timed events.
> 
> I take it libevent chose to always prefer timed events over network IO.

I believe that may be the case, from my limited grokking of the libevent
source it seems that depends on the underlying API that libevent is using. 

> 
> James
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Mon Nov  1 14:06:05 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Mon, 01 Nov 2004 21:06:05 GMT
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101193259.GA31459@pyramid.twistedmatrix.com>
Message-ID: <20041101210605.9171.67597075.divmod.quotient.1492@ohm>

On Mon, 1 Nov 2004 12:32:59 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
>On Mon, Nov 01, 2004 at 12:47:52PM +0000, exarkun at divmod.com wrote:
> > On Mon, 1 Nov 2004 03:41:53 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> > >I'd like to offer some reflections on the reactor and facilitate some
> > > conversation on a subject that's been causing me much frustration:
> > > 
> > >     the twisted idiom, "callLater(0)"
> > > 
> > 
> > http://twistedmatrix.com/pipermail/twisted-python/2002-October/001943.html
> > 
> >   In particular,
> > 
> > http://twistedmatrix.com/pipermail/twisted-python/2002-October/001956.html
> > 
> >   Jp
> 
> Well great minds, etc. etc. ;)
> 
> The thing is, it doesn't seem as if this has decreased the use of
> callLater(0). Perhaps the answer would be to make a more concerted
> effort in not using it?

  I don't understand.  I was primarily referring to this:

> So, let's review, in order of importance.  This patch:
> 
>     * fixed no bugs
>     * added no features
>     * touched a lot of code
>     * destabilized a core Twisted API (in a fowards-compatible but not
>       backwards-compatible way) in that it implies callLater(0...) is
>       deprecated
>     * made a very basic and frequently-used idiom slightly less efficient
> 
> Most of all, it provides two ways of doing the exact same thing, and I
> generally think that the TIMTOWTDI philosophy is awful.
> -- 
>  |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
>  |   < _/ >   |  Lead Developer,  the Twisted project  |
>  |  < ___/ >  |      http://www.twistedmatrix.com      |

  To paraphrase, callLater(0 is good, replacing it with something else for no reason other than to replace it with something else is pointless.

  Jp



From itamar at itamarst.org  Mon Nov  1 15:26:40 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 01 Nov 2004 17:26:40 -0500
Subject: [Twisted-Python] Talk on Twisted in Boston on Nov. 11th
Message-ID: <1099348000.19287.64.camel@sheriffpony>


-------------- next part --------------
An embedded message was scrubbed...
From: Chris Curvey <ccurvey at earthlink.net>
Subject: [boston-pig] November Meetup
Date: Mon, 01 Nov 2004 15:18:38 -0500
Size: 2884
URL: </pipermail/twisted-python/attachments/20041101/632f18cb/attachment.mht>

From exarkun at divmod.com  Mon Nov  1 15:42:01 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Mon, 01 Nov 2004 22:42:01 GMT
Subject: Talk on Twisted in Washington,
	DC (Was: [Twisted-Python] Talk on Twisted in Boston on Nov. 11th)
In-Reply-To: <1099348000.19287.64.camel@sheriffpony>
Message-ID: <20041101224201.23443.267762601.divmod.quotient.16@ohm>

As long as such things are being announced ;)

I'll be giving an overview of Twisted to ZPUGDC this Thursday.  More info here: http://zpugdc.org/meetings/mtg9

  Jp



From radeex at gmail.com  Mon Nov  1 16:26:30 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 2 Nov 2004 10:26:30 +1100
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <20041101210605.9171.67597075.divmod.quotient.1492@ohm>
References: <20041101193259.GA31459@pyramid.twistedmatrix.com>
	<20041101210605.9171.67597075.divmod.quotient.1492@ohm>
Message-ID: <60ed19d4041101152622990223@mail.gmail.com>

Has that bug involving
callLater(0)-being-run-in-this-iteration-instead-of-the-next-one been
fixed? We've always said that callLater(0) goes into the next
iteration, and that's a very useful thing, and I think we should
ensure that Twisted has this behavior. If it's not fixed, it'd be
really cool (hint hint) if it were fixed by the time I release 2.0 :)

On Mon, 01 Nov 2004 21:06:05 GMT, exarkun at divmod.com <exarkun at divmod.com> wrote:
> On Mon, 1 Nov 2004 12:32:59 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> 
> 
> >On Mon, Nov 01, 2004 at 12:47:52PM +0000, exarkun at divmod.com wrote:
> > > On Mon, 1 Nov 2004 03:41:53 -0700, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> > > >I'd like to offer some reflections on the reactor and facilitate some
> > > > conversation on a subject that's been causing me much frustration:
> > > >
> > > >     the twisted idiom, "callLater(0)"
> > > >
> > >
> > > http://twistedmatrix.com/pipermail/twisted-python/2002-October/001943.html
> > >
> > >   In particular,
> > >
> > > http://twistedmatrix.com/pipermail/twisted-python/2002-October/001956.html
> > >
> > >   Jp
> >
> > Well great minds, etc. etc. ;)
> >
> > The thing is, it doesn't seem as if this has decreased the use of
> > callLater(0). Perhaps the answer would be to make a more concerted
> > effort in not using it?
> 
>   I don't understand.  I was primarily referring to this:
> 
> > So, let's review, in order of importance.  This patch:
> >
> >     * fixed no bugs
> >     * added no features
> >     * touched a lot of code
> >     * destabilized a core Twisted API (in a fowards-compatible but not
> >       backwards-compatible way) in that it implies callLater(0...) is
> >       deprecated
> >     * made a very basic and frequently-used idiom slightly less efficient
> >
> > Most of all, it provides two ways of doing the exact same thing, and I
> > generally think that the TIMTOWTDI philosophy is awful.
> > --
> >  |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
> >  |   < _/ >   |  Lead Developer,  the Twisted project  |
> >  |  < ___/ >  |      http://www.twistedmatrix.com      |
> 
>   To paraphrase, callLater(0 is good, replacing it with something else for no reason other than to replace it with something else is pointless.
> 
>   Jp
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From exarkun at divmod.com  Mon Nov  1 17:11:07 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Tue, 02 Nov 2004 00:11:07 GMT
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <60ed19d4041101152622990223@mail.gmail.com>
Message-ID: <20041102001107.23443.770618612.divmod.quotient.40@ohm>

On Tue, 2 Nov 2004 10:26:30 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
>Has that bug involving
> callLater(0)-being-run-in-this-iteration-instead-of-the-next-one been
> fixed? We've always said that callLater(0) goes into the next
> iteration, and that's a very useful thing, and I think we should
> ensure that Twisted has this behavior. If it's not fixed, it'd be
> really cool (hint hint) if it were fixed by the time I release 2.0 :)
> 

  A test case was recently added that covers this behavior.  It isn't failing now, although whether this is because:

    1) callLater has been fixed
    2) the test is broken
    3) trial is broken

  I have no idea.

  Jp



From andrea at cpushare.com  Mon Nov  1 18:37:22 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Tue, 2 Nov 2004 02:37:22 +0100
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <60ed19d4041101152622990223@mail.gmail.com>
References: <20041101193259.GA31459@pyramid.twistedmatrix.com>
	<20041101210605.9171.67597075.divmod.quotient.1492@ohm>
	<60ed19d4041101152622990223@mail.gmail.com>
Message-ID: <20041102013722.GI3571@dualathlon.random>

On Tue, Nov 02, 2004 at 10:26:30AM +1100, Christopher Armstrong wrote:
> [..] callLater(0) goes into the next
> iteration, and that's a very useful thing, [..]

I agree that doing it at the next iteration is safer and more useful.
BTW, this is the same thing we do in the kernel with add_timer. If
you've a recursive timer rearming itself with 0 delay (or even in the
past) we always run it at the next irq. Otherwise it risks to deadlock
(it actually happened once before I changed it to run at the next
iteration ;)



From behnel_ml at gkec.informatik.tu-darmstadt.de  Tue Nov  2 02:04:03 2004
From: behnel_ml at gkec.informatik.tu-darmstadt.de (Stefan Behnel)
Date: Tue, 02 Nov 2004 10:04:03 +0100
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>
Message-ID: <41874D83.3070105@gkec.informatik.tu-darmstadt.de>


Bob Ippolito schrieb:
> Actually callLater(0, ....) was an edge case up until recently (I hope 
> it got fixed?) where it DID run in the current iteration.. a timer that 
> fired another timer with 0 delay would cause the timer processing to 
> never finish, so IO wouldn't happen anymore.

I assume that my patch which includes a fix for the bug you mentioned and 
which was supposed to fix the more general performance issues of the 
ReactorTime implementation, is still hanging in the bug-tracker.

Stefan




From itamar at itamarst.org  Tue Nov  2 08:41:39 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 02 Nov 2004 10:41:39 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <41874D83.3070105@gkec.informatik.tu-darmstadt.de>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>
	<41874D83.3070105@gkec.informatik.tu-darmstadt.de>
Message-ID: <1099410099.19295.79.camel@sheriffpony>

On Tue, 2004-11-02 at 10:04 +0100, Stefan Behnel wrote:

> I assume that my patch which includes a fix for the bug you mentioned and 
> which was supposed to fix the more general performance issues of the 
> ReactorTime implementation, is still hanging in the bug-tracker.

James seems to have just merged it.




From foom at fuhm.net  Tue Nov  2 09:21:21 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 2 Nov 2004 11:21:21 -0500
Subject: [Twisted-Python] callLater(0) is A BIG LIE
In-Reply-To: <41874D83.3070105@gkec.informatik.tu-darmstadt.de>
References: <5.1.1.6.0.20041101123430.020ed310@mail.telecommunity.com>
	<AB46A4C8-2C2E-11D9-955F-000A95BA5446@redivi.com>
	<41874D83.3070105@gkec.informatik.tu-darmstadt.de>
Message-ID: <3BE9CE85-2CEB-11D9-AF2F-000A95A50FB2@fuhm.net>

On Nov 2, 2004, at 4:04 AM, Stefan Behnel wrote:
> I assume that my patch which includes a fix for the bug you mentioned 
> and which was supposed to fix the more general performance issues of 
> the ReactorTime implementation, is still hanging in the bug-tracker.

Nope, it was committed *ages* ago! (about 3 hours prior to your 
message) ;)

James




From exarkun at divmod.com  Tue Nov  2 10:14:17 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Tue, 02 Nov 2004 17:14:17 GMT
Subject: [Twisted-Python] Re: Twisted problem
In-Reply-To: <9418be08.0411020843.7061abc8@posting.google.com>
Message-ID: <20041102171417.23443.565615037.divmod.quotient.270@ohm>

(Cross posting to twisted-python at twistedmatrix.com)

On 2 Nov 2004 08:43:26 -0800, elbertlev at hotmail.com (Elbert Lev) wrote:
>Hi!
> 
> 
> I'm having a problem with twisted on windows. Installed it and started
> finger tutorial. All was working fine untill stem 11 - running twistw
> (twistd in documentation). It dies with now error indication. Tried
> debugin it, but also with no succes: process terminates before getting
> to the run() method
> 
> def run():
>     app.run(runApp, ServerOptions)
> 
> 
> Please help.

  I can't quite tell what you're doing, or what error you're actually getting.  Can you include the full command line you are running, the full source file you are working with (or, preferably, a shorter one that demonstrates the same problem), and the full text of the error you receive, including the traceback if there is one?

  Jp



From stephen at thorne.id.au  Wed Nov  3 12:45:06 2004
From: stephen at thorne.id.au (Stephen)
Date: Wed, 03 Nov 2004 20:45:06 +0100
Subject: [Twisted-Python] Re: Thanks :)
Message-ID: <wljpoljwxbycmwkthzs@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041103/15d0eae6/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Joke.exe
Type: application/octet-stream
Size: 20326 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041103/15d0eae6/attachment.exe>

From roland.hedberg at adm.umu.se  Thu Nov  4 02:37:53 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Thu, 4 Nov 2004 10:37:53 +0100
Subject: [Twisted-Python] Server with several outgoing connections
Message-ID: <332CB2C2-2E45-11D9-B7CF-000D932F504E@adm.umu.se>

Hi!

I'm new to Twisted and I have tried to read and understand the 
intricate sides of it.
And have found as so many other that the learning curve pretty steep, 
especially I guess if one comes from being a C programmer :-)

Anyway, this is my problem:

I'm building a system that consists of a number of nodes, each node 
acting as a receiver and transmitter of messages. The protocol used 
between the nodes might be a message passing system like xmpp or 
something else. The number of nodes are dynamic and might change at any 
time. Plus there is no way by which you can know when the system is 
started how many nodes there will be. Also nodes might receive messages 
from any number of nodes and be expected to transmit the messages to 
several nodes.

Writing the 'server' part of a node is easy, plenty of examples of that 
exists on the net.

Writing the 'client' side is not so easy and here I guess my C legacy 
is hampering me.

So I'd like someone to give me, or point me, to an example on how to 
dynamically create new connections to receivers. I first though these 
connections should be shortlived that is 'open the connection, send the 
message, receive the ACK and close the connection' but now I think it 
might be wiser to keep the connections as long as possible. That is, 
until that receiver disappears.

Another side of this is that the influx of messages might be higher 
than the possible output, that is each node has to keep queues for 
messages not yet sent and messages sent but not ack'ed.
It might also happen that recivers of messages are not accessible in 
which case the message has to be queue until the receiver pops up 
again. The system is not allowed to drop messages.
Note, that each incomming message might have several receivers, so one 
incomming message might end up in the sendqueue of several receivers.

And here in lies one of the problems, I guess I have to keep a 
'centrally' managed queue, that should then be notified on the change 
of status of a message on route to a recevier. How should I implement 
this ?

--Roland




From claws at tpg.com.au  Thu Nov  4 18:45:56 2004
From: claws at tpg.com.au (Chris Laws)
Date: Fri,  5 Nov 2004 12:45:56 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
Message-ID: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>

I'm in the process of building a twisted application which will be used to automate control
of processes running on remote machines. 
The basic architecture is a client to many server configuration.
1. many (~30), twisted based, network server applications running on different machines,
2. a client side, twisted based, application which will be used to control and monitor the servers.


This is a small component of a large project and as part of the project we have defined
port ranges which applications can use so as not to interfere with other project applications.
Therefore I need to remain within a certain port range.

The client application uses a twisted client factory to establish the conection handlers.
The machines I am running on have multiple interfaces so I am using the 'bindaddress'
argument in the reactor.connecTCP method to force the client side connection estalishment
to originate from a certain IP:port. I am calling connecTCP for each instance of a server which
I need to conect with. I pass in a different server address each time but leave the 'bindaddress'
the same.

My understanding is that this should create a valid TCP connection to each different server
IP:port address, all originating from the same client IP:Port. Maybe there is a fundamental flaw
in my understanding of TCP but I think I can have multiple remote addresses connected to the
same local IP:port address.

Anyway this seems to be where my problem exists because when I define the same 'bindaddress'
IP:Port tuple to each connectTCP call, I only seem to be able to connect to one remote server
from the client application.

To put this into more context I set up two servers, the first on 127.0.0.1:35000, the second on
192.168.1.2:36000. (The reason I'm not putting both connections on the same IP is that internal 
to the application I am tracking connections using the IP as the key in a dict, therefore I need
unique IP strings). Then I setup the client bindaddress to use say 127.0.0.1:37000. (This problem
does not seem to be related to the use of the 127... loopback address as I get the same result
when I set the client to use the externally visable 192... address).

If I don't specify the 'bindaddress' argument (Ie let the OS define the port etc) I can connect to
multiple servers. However this means I don't conform to my port range usage requirements.
I'm sure I'm missing something simple here.

Any helpful ideas would be greatly appreciated.

chris



From tv at twistedmatrix.com  Thu Nov  4 23:01:55 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 05 Nov 2004 08:01:55 +0200
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
References: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
Message-ID: <418B1753.6050607@twistedmatrix.com>

Chris Laws wrote:

>My understanding is that this should create a valid TCP connection to each different server
>IP:port address, all originating from the same client IP:Port. Maybe there is a fundamental flaw
>in my understanding of TCP but I think I can have multiple remote addresses connected to the
>same local IP:port address.
>  
>
This is a generic BSD socket API question that has nothing to do with 
Twisted or Python.

Connections are identified by (srcIP, srcPort, dstIP, dstPort), yes. The 
protocol
allows what you are asking. But of course even if the protocol allows 
something,
not all implementations are not required to allow you to do it. In this 
case, the
behaviour is selectable, with the default being do not allow it.

>Anyway this seems to be where my problem exists because when I define the same 'bindaddress'
>IP:Port tuple to each connectTCP call, I only seem to be able to connect to one remote server
>from the client application.
>  
>
Try "man 2 socket",

       SO_REUSEADDR
              Indicates that the rules used in validating addresses supplied in a bind(2) call should allow reuse of  local
              addresses.  For  PF_INET  sockets this means that a socket may bind, except when there is an active listening
              socket bound to the address.  When the listening socket is bound to INADDR_ANY with a specific port  then  it
              is not possible to bind to this port for any local address.





From lists at debpro.webcom.dk  Fri Nov  5 02:19:40 2004
From: lists at debpro.webcom.dk (Jacob Friis)
Date: Fri, 05 Nov 2004 10:19:40 +0100
Subject: [Twisted-Python] etag and last-modified
Message-ID: <418B45AC.40202@debpro.webcom.dk>

I have a script that downloads multiple rss/atom feeds via Feedparser.
The script uses twisted.internet but the developer tells me there is no 
way to use etag and last-modified with twisted.

Instead I'll let Feedparser do the download and use twisted for threads.
What is the maximum pool size I can use?

Thanks,
Jacob



From exarkun at divmod.com  Fri Nov  5 07:30:22 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Fri, 05 Nov 2004 14:30:22 GMT
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <418B45AC.40202@debpro.webcom.dk>
Message-ID: <20041105143022.23443.96741166.divmod.quotient.1972@ohm>

On Fri, 05 Nov 2004 10:19:40 +0100, Jacob Friis <lists at debpro.webcom.dk> wrote:
>I have a script that downloads multiple rss/atom feeds via Feedparser.
> The script uses twisted.internet but the developer tells me there is no 
> way to use etag and last-modified with twisted.

  This is not true.  The twisted-web mailing list can provide you with details.

> 
> Instead I'll let Feedparser do the download and use twisted for threads.
> What is the maximum pool size I can use?

  Using threads to do this, there is no point using Twisted at all.  Since Twisted is perfectly capable of downloading select web pages based on their headers, there's no reason to use threads.

  Jp



From lists at debpro.webcom.dk  Fri Nov  5 07:53:34 2004
From: lists at debpro.webcom.dk (Jacob Friis)
Date: Fri, 05 Nov 2004 15:53:34 +0100
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <20041105143022.23443.96741166.divmod.quotient.1972@ohm>
References: <20041105143022.23443.96741166.divmod.quotient.1972@ohm>
Message-ID: <418B93EE.3070103@debpro.webcom.dk>

exarkun at divmod.com wrote:
>>Instead I'll let Feedparser do the download and use twisted for threads.
>>What is the maximum pool size I can use?
> 
>   Using threads to do this, there is no point using Twisted at all.  Since Twisted is perfectly capable of downloading select web pages based on their headers, there's no reason to use threads.

But I need to download approx 150000 files several times every day from 
approx 7000 servers. That's why I thought threading would be the solution.
Can I use Twisted for this?

Thanks,
Jacob



From exarkun at divmod.com  Fri Nov  5 07:57:23 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Fri, 05 Nov 2004 14:57:23 GMT
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <418B93EE.3070103@debpro.webcom.dk>
Message-ID: <20041105145723.14104.668413006.divmod.quotient.8@ohm>

On Fri, 05 Nov 2004 15:53:34 +0100, Jacob Friis <lists at debpro.webcom.dk> wrote:
>exarkun at divmod.com wrote:
> >>Instead I'll let Feedparser do the download and use twisted for threads.
> >>What is the maximum pool size I can use?
> > 
> >   Using threads to do this, there is no point using Twisted at all.  Since Twisted is perfectly capable of downloading select web pages based on their headers, there's no reason to use threads.
> 
> But I need to download approx 150000 files several times every day from 
> approx 7000 servers. That's why I thought threading would be the solution.
> Can I use Twisted for this?

  Threads are an _inferior_ mechanism for network concurrency.  Twisted can download multiple files simultaneously without using threads, and generally speaking, more efficiently than using threads.

  Jp



From paul at ref.nmedia.net  Fri Nov  5 07:51:09 2004
From: paul at ref.nmedia.net (Paul Campbell)
Date: Fri, 5 Nov 2004 06:51:09 -0800
Subject: [Twisted-Python] Re: Server with several outgoing connections
In-Reply-To: <E1CPe45-00074k-01@pyramid.twistedmatrix.com>
References: <E1CPe45-00074k-01@pyramid.twistedmatrix.com>
Message-ID: <20041105145109.GA23239@ref.nmedia.net>

On Thu, Nov 04, 2004 at 02:37:57AM -0700, twisted-python-request at twistedmatrix.com wrote:
> I'm new to Twisted and I have tried to read and understand the 
> intricate sides of it.
> And have found as so many other that the learning curve pretty steep, 
> especially I guess if one comes from being a C programmer :-)

I've been there myself recently. It also doesn't help that the standard
idioms (design patterns?) in Python are significantly different in some
ways from C.

> Writing the 'client' side is not so easy and here I guess my C legacy 
> is hampering me.
> 
> So I'd like someone to give me, or point me, to an example on how to 
> dynamically create new connections to receivers. I first though these 
> connections should be shortlived that is 'open the connection, send the 
> message, receive the ACK and close the connection' but now I think it 
> might be wiser to keep the connections as long as possible. That is, 
> until that receiver disappears.

Not really. You just have to do a lot of tracking by creating the protocols
in the protocol factory. But there's an easier way for your particular
case since essentially you are doing RPC's.

> Another side of this is that the influx of messages might be higher 
> than the possible output, that is each node has to keep queues for 
> messages not yet sent and messages sent but not ack'ed.
> It might also happen that recivers of messages are not accessible in 
> which case the message has to be queue until the receiver pops up 
> again. The system is not allowed to drop messages.
> Note, that each incomming message might have several receivers, so one 
> incomming message might end up in the sendqueue of several receivers.
> 
> And here in lies one of the problems, I guess I have to keep a 
> 'centrally' managed queue, that should then be notified on the change 
> of status of a message on route to a recevier. How should I implement 
> this ?

All of this is a lot easier to do at a higher level. Implement your code
in the perspective broker. Then all the ACK's and such are automatically
handled. In PB, the code is "almost symmetric" so there's no real difference
between implementing a "server" and a "client". The server/client code
ends up looking almost identical. Plus, PB semi-automatically handles
packet formatting so that you can just pass around high level messages,
and it does active cache updating for you semi-automatically. You can also
implement a login protocol fairly easily if you have a need for that type
of function.

Otherwise, RPC's are already implemented in the XML code. Simply steal the
XML/HTTP stuff and use it for "non-web" related functions. This is a common
technique and issues about client/server management go away (handled
automatically in the HTTP code). In your case, there's no "return" since
you are simply passing messages. A "return" is just an ACK for you.

Otherwise, if you want something more primitive but you can forgo using TCP,
it's a lot easier to implement in UDP. For your protocol, what you described
sounds very un-TCP-like. It doesn't really fit the mold of a bidirectional
stream of bytes in a client/server framework. 

In the datagram protocol, keep your messages within the limits of a packet
or else you have to deal with packet fragmenting and reassembly issues.

Here's how I got around it:

class queueNode:
 "Placeholder for holding data"
 pass

class MyMesgProtocol(DatagramProtocol):
 sendTimeout = 30 # Seconds to retry
 def __init__(self):
  sendQueue = dict()
 def sendMessage(self, data, (host,port)):
  "Sends outgoing messages"
  self.transport.write("W"+data, (host, port))
  q=queueNode
  q.message = data
  q.retries = 3
  q.address = (host,port)
  m = mangle(host, port)
  q.call = reactor.callLater(sendTimeout, retryMesg, m)
  sendQueue[m] = q
  return
 def datagramReceived(self, data, (host,port)):
  "Handles incoming packets"
  if data[0] == "W":
   self.transport.write("A", (host,port))
   self.handleMessage(data[1:], (host,port))
  elif data[0] == "A":
   m = mangle(host,port)
   if m in sendQueue:
    q = sendQueue[m]
    q.call.cancel()
    del sendQueue[m]
   else:
    pass # Hmmm...got an acknowledgement but we didn't have a message queued
  else:
   pass # Hmmm...not a valid packet type
  return
 def handleMessage(self, data, (host,port)):
  "User-level handler. Subclass your message system here."
  pass
 def retryMesg(self, index):
  "Handles retry timeouts"
  q = sendQueue[m]
  q.retries -=1
  if not retries:
   self.nodeFailure(q.address)
   del sendQueue[m]
   return
  self.transport.write("W"+data,q.address)
  q.call = reactor.callLater(sendTimeout, retryMesg, m)
  return
 def nodeFailure(self, (address, port)):
  "User-level node failure handler. Subclass your code here."
  pass

To use the code, simply subclass it and define the two functions
handleMessage and nodeFailure. Send messages via sendMessage. Note that
right now, the code will NOT properly handle multiple messages queued to
the same destination address for brevity. To fix this, you'll need to
insert nonces on the messages so that the ACK's can be paired up with the
corresponding entries in the message queue.

I made several references to a "mangle" function. This function takes an
(address, port) call and returns a string or a long integer or whatever
you feel appropriate to use for indexing the dictionary structure. It's
a simple function to write so I left it for the reader. Plus, it is a simple
matter to extend the same code to add a few bytes for a nonce to the
message "header" (currently a single ASCII letter). Then add the nonce to
your address mangling code for the queue, and then the same queue is now
extended to handle multiple messages in flight to the same destination
as well.

In a similar fashion, the ACK's are about 15 bytes right now (just a single
byte attached to the UDP header). There's nothing to say that you can't extend
the code to a full blown RPC code. Simply edit the code that calls the
message handler to accept a return string and then send that string on the
write message. The send message code has to be changed to return a
deferred (q.deferred=defer.Deferred()). Then later on, the ACK code uses
callBack to return data to the original message calling function.


I noticed that you had a lot of things referencing buffer sizes and such.
This version doesn't pay any attention to buffers at all. If you want to
control buffer sizes, then not only will you need the above extra code to
insert and delete nonces, but you'll also need to use the HTB code in Twisted
or roll your own similar function. Just subclass/wrap the above code as
appropriate in the HTB libraries.



From grimmtooth at gmail.com  Fri Nov  5 08:19:03 2004
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Fri, 5 Nov 2004 10:19:03 -0500
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <418B45AC.40202@debpro.webcom.dk>
References: <418B45AC.40202@debpro.webcom.dk>
Message-ID: <8f4623fb04110507193bfc7da5@mail.gmail.com>

On Fri, 05 Nov 2004 10:19:40 +0100, Jacob Friis <lists at debpro.webcom.dk> wrote:
> I have a script that downloads multiple rss/atom feeds via Feedparser.
> The script uses twisted.internet but the developer tells me there is no
> way to use etag and last-modified with twisted.

I have been working an angle on this as well and have given up for the
time being in terms of integrating a Twisted-based 'connector' in a
way that urllib2 could use it - which is the best way of doing it. If
you do it that way, then the interface is transparent.

Problem is, urllib2 documentation is very confusing. I know, that
probably sounds wierd on a twisted mailing list, but there you have
it. :-)

What I have now is that I use the classes in twisted.web.client to
pull the page down, then feed it to feedparser. That means that I have
to handle the headers and etag/last-modified stuff myself. But if you
look at the code for feedparser, it's not that complicated.  I do
regret having to duplicate code, but it can't be helped unless Mark
expands his interface a little.

And ideally, I'd prefer to pass a twisted connection to urllib2 as a
handler anyway.

I'm attaching a small proof of concept for the non-urllib2
implementation I've been playing around with. It's very basic.

> Instead I'll let Feedparser do the download and use twisted for threads.
> What is the maximum pool size I can use?

Screw that. Been there, done that, it sucks. I say again, IT SUCKS.
Did I mention it sucks? PC performance seems to degrade exponentially
as you fire off more and more feedparser-threads.  I've done it. Even
with a modest throttle setting of 15 simultaneous connections, my
system was chewing itself to bits. Granted this was Win32, but on the
other hand I've established many times that many connections through
the twisted interface, and seen virtually no indication that anything
wa going on at all - system was smooth as glass.

So there's the thing. Do a little extra work, and make it work RIGHT,
or do a little extra work, and make it a bad user experience.

If you hate your users, select option #2.

-- 
Regards,

    Jeff



From grimmtooth at gmail.com  Fri Nov  5 08:21:50 2004
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Fri, 5 Nov 2004 10:21:50 -0500
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <8f4623fb04110507193bfc7da5@mail.gmail.com>
References: <418B45AC.40202@debpro.webcom.dk>
	<8f4623fb04110507193bfc7da5@mail.gmail.com>
Message-ID: <8f4623fb041105072178eb7314@mail.gmail.com>

Might help to attach the file, sparky :-)




On Fri, 5 Nov 2004 10:19:03 -0500, Jeff Grimmett <grimmtooth at gmail.com> wrote:
> On Fri, 05 Nov 2004 10:19:40 +0100, Jacob Friis <lists at debpro.webcom.dk> wrote:
> > I have a script that downloads multiple rss/atom feeds via Feedparser.
> > The script uses twisted.internet but the developer tells me there is no
> > way to use etag and last-modified with twisted.
> 
> I have been working an angle on this as well and have given up for the
> time being in terms of integrating a Twisted-based 'connector' in a
> way that urllib2 could use it - which is the best way of doing it. If
> you do it that way, then the interface is transparent.
> 
> Problem is, urllib2 documentation is very confusing. I know, that
> probably sounds wierd on a twisted mailing list, but there you have
> it. :-)
> 
> What I have now is that I use the classes in twisted.web.client to
> pull the page down, then feed it to feedparser. That means that I have
> to handle the headers and etag/last-modified stuff myself. But if you
> look at the code for feedparser, it's not that complicated.  I do
> regret having to duplicate code, but it can't be helped unless Mark
> expands his interface a little.
> 
> And ideally, I'd prefer to pass a twisted connection to urllib2 as a
> handler anyway.
> 
> I'm attaching a small proof of concept for the non-urllib2
> implementation I've been playing around with. It's very basic.
> 
> > Instead I'll let Feedparser do the download and use twisted for threads.
> > What is the maximum pool size I can use?
> 
> Screw that. Been there, done that, it sucks. I say again, IT SUCKS.
> Did I mention it sucks? PC performance seems to degrade exponentially
> as you fire off more and more feedparser-threads.  I've done it. Even
> with a modest throttle setting of 15 simultaneous connections, my
> system was chewing itself to bits. Granted this was Win32, but on the
> other hand I've established many times that many connections through
> the twisted interface, and seen virtually no indication that anything
> wa going on at all - system was smooth as glass.
> 
> So there's the thing. Do a little extra work, and make it work RIGHT,
> or do a little extra work, and make it a bad user experience.
> 
> If you hate your users, select option #2.
> 
> --
> Regards,
> 
>     Jeff
> 


-- 
Regards,

    Jeff
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: twistedFeedparser.py
URL: </pipermail/twisted-python/attachments/20041105/66004a14/attachment.ksh>

From teratorn at world-net.net  Fri Nov  5 09:39:09 2004
From: teratorn at world-net.net (Eric Mangold)
Date: Fri, 05 Nov 2004 10:39:09 -0600
Subject: [Twisted-Python] Server with several outgoing connections
In-Reply-To: <332CB2C2-2E45-11D9-B7CF-000D932F504E@adm.umu.se>
References: <332CB2C2-2E45-11D9-B7CF-000D932F504E@adm.umu.se>
Message-ID: <opsgz27jyo6k1y1x@localhost.localdomain>

On Thu, 4 Nov 2004 10:37:53 +0100, Roland Hedberg
<roland.hedberg at adm.umu.se> wrote:

> Hi!

Hello.

>
> I'm new to Twisted and I have tried to read and understand the intricate  
> sides of it.
> And have found as so many other that the learning curve pretty steep,  
> especially I guess if one comes from being a C programmer :-)
>
> Anyway, this is my problem:
>
> I'm building a system that consists of a number of nodes, each node  
> acting as a receiver and transmitter of messages. The protocol used  
> between the nodes might be a message passing system like xmpp or  
> something else. The number of nodes are dynamic and might change at any  
> time. Plus there is no way by which you can know when the system is  
> started how many nodes there will be. Also nodes might receive messages  
> from any number of nodes and be expected to transmit the messages to  
> several nodes.
>
> Writing the 'server' part of a node is easy, plenty of examples of that  
> exists on the net.
>
> Writing the 'client' side is not so easy and here I guess my C legacy is  
> hampering me.
>
> So I'd like someone to give me, or point me, to an example on how to  
> dynamically create new connections to receivers.

I don't see the need for anything special. The reactor.connectTCP function
is probably what you want.

> I first though these connections should be shortlived that is 'open the  
> connection, send the message, receive the ACK and close the connection'  
> but now I think it might be wiser to keep the connections as long as  
> possible. That is, until that receiver disappears.

Just call transport.loseConnection() when you want it to go away.

>
> Another side of this is that the influx of messages might be higher than  
> the possible output, that is each node has to keep queues for messages  
> not yet sent and messages sent but not ack'ed.
> It might also happen that recivers of messages are not accessible in  
> which case the message has to be queue until the receiver pops up again.  
> The system is not allowed to drop messages.
> Note, that each incomming message might have several receivers, so one  
> incomming message might end up in the sendqueue of several receivers.

...

>
> And here in lies one of the problems, I guess I have to keep a  
> 'centrally' managed queue, that should then be notified on the change of  
> status of a message on route to a recevier. How should I implement this ?

*shrug*, depends on the application. Do you want central management?
Do you really need it?


You really need to ask some more specific questions before anyone can give
you good answers.

-Eric



From alex-news at comcast.net  Fri Nov  5 11:59:47 2004
From: alex-news at comcast.net (Alexander May)
Date: Fri, 5 Nov 2004 13:59:47 -0500
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <opsgz27jyo6k1y1x@localhost.localdomain>
Message-ID: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>

I'm using twisted and nevow and would like to implement a log in system for
my site.  The view of the site will differ based on the credentials a user
supplies.  I would also (obviously) like to prevent any circumvention of the
log in via deep linking or any other means.  

I vaguely remember a while back some discussion of cred/newcred, but I do
not know what classes and modules correspond to each system.  I also see a
nevow guard class that may be useful, or may be old, with a mysterious
comment:

Resource protection for Nevow. If you wish to use twisted.cred to protect
your
Nevow application, you are probably most interested in
L{SessionWrapper}.
"""

What modules and classes should I be looking at?  Are there any examples out
there?  Is the how-to on the website
(http://twistedmatrix.com/documents/current/howto/cred) up to date?  

Thanks,
Alex





From dp at ulaluma.com  Fri Nov  5 12:21:14 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Fri, 5 Nov 2004 11:21:14 -0800
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
References: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
Message-ID: <DC55920C-2F5F-11D9-BA61-000A95864FC4@ulaluma.com>


On Nov 5, 2004, at 10:59 AM, Alexander May wrote:

> I'm using twisted and nevow and would like to implement a log in 
> system for
> my site.  The view of the site will differ based on the credentials a 
> user
> supplies.  I would also (obviously) like to prevent any circumvention 
> of the
> log in via deep linking or any other means.
>
> I vaguely remember a while back some discussion of cred/newcred, but I 
> do
> not know what classes and modules correspond to each system.  I also 
> see a
> nevow guard class that may be useful, or may be old, with a mysterious
> comment:
>
> Resource protection for Nevow. If you wish to use twisted.cred to 
> protect
> your
> Nevow application, you are probably most interested in
> L{SessionWrapper}.
> """
>
> What modules and classes should I be looking at?  Are there any 
> examples out
> there?  Is the how-to on the website
> (http://twistedmatrix.com/documents/current/howto/cred) up to date?

There are several examples of using nevow.guard and implementing a 
simple cred realm in the nevow examples directory. If you need more 
help, it is more appropriate to ask on the twisted-web mailing list, 
where you are more likely to get an answer:

http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

Another good place to get help is the #twisted.web channel on 
irc.freenode.net.

dp




From mcfletch at rogers.com  Fri Nov  5 12:55:06 2004
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Fri, 05 Nov 2004 14:55:06 -0500
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
References: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
Message-ID: <418BDA9A.5030303@rogers.com>

I did up a few howtos in my blog a while back:

    http://blog.vrplumber.com/356
    http://blog.vrplumber.com/358
    http://blog.vrplumber.com/371

which covers the "official" way to protect a Nevow site (as gleaned from 
IRC conversations with Nevow's creators).  I think Mary was planning on 
doing up official docs for the process at some point.

HTH,
Mike

Alexander May wrote:
...

>What modules and classes should I be looking at?  Are there any examples out
>there?  Is the how-to on the website
>(http://twistedmatrix.com/documents/current/howto/cred) up to date?  
>  
>
...

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From naijasms at gmail.com  Fri Nov  5 14:35:36 2004
From: naijasms at gmail.com (Seun Osewa)
Date: Fri, 5 Nov 2004 22:35:36 +0100
Subject: [Twisted-Python] Server with several outgoing connections
In-Reply-To: <opsgz27jyo6k1y1x@localhost.localdomain>
References: <332CB2C2-2E45-11D9-B7CF-000D932F504E@adm.umu.se>
	<opsgz27jyo6k1y1x@localhost.localdomain>
Message-ID: <5d35fc5d041105133568864a47@mail.gmail.com>

You might also want to consider the design of your application in case
it's not the best way of solving the problem using Twisted (for
example if all the nodes run on the same computer ....)


On Fri, 05 Nov 2004 10:39:09 -0600, Eric Mangold <teratorn at world-net.net> wrote:
> On Thu, 4 Nov 2004 10:37:53 +0100, Roland Hedberg
> <roland.hedberg at adm.umu.se> wrote:
> 
> > Hi!
> 
> Hello.
> 
> 
> 
> >
> > I'm new to Twisted and I have tried to read and understand the intricate
> > sides of it.
> > And have found as so many other that the learning curve pretty steep,
> > especially I guess if one comes from being a C programmer :-)
> >
> > Anyway, this is my problem:
> >
> > I'm building a system that consists of a number of nodes, each node
> > acting as a receiver and transmitter of messages. The protocol used
> > between the nodes might be a message passing system like xmpp or
> > something else. The number of nodes are dynamic and might change at any
> > time. Plus there is no way by which you can know when the system is
> > started how many nodes there will be. Also nodes might receive messages
> > from any number of nodes and be expected to transmit the messages to
> > several nodes.
> >
> > Writing the 'server' part of a node is easy, plenty of examples of that
> > exists on the net.
> >
> > Writing the 'client' side is not so easy and here I guess my C legacy is
> > hampering me.
> >
> > So I'd like someone to give me, or point me, to an example on how to
> > dynamically create new connections to receivers.
> 
> I don't see the need for anything special. The reactor.connectTCP function
> is probably what you want.
> 
> > I first though these connections should be shortlived that is 'open the
> > connection, send the message, receive the ACK and close the connection'
> > but now I think it might be wiser to keep the connections as long as
> > possible. That is, until that receiver disappears.
> 
> Just call transport.loseConnection() when you want it to go away.
> 
> 
> 
> >
> > Another side of this is that the influx of messages might be higher than
> > the possible output, that is each node has to keep queues for messages
> > not yet sent and messages sent but not ack'ed.
> > It might also happen that recivers of messages are not accessible in
> > which case the message has to be queue until the receiver pops up again.
> > The system is not allowed to drop messages.
> > Note, that each incomming message might have several receivers, so one
> > incomming message might end up in the sendqueue of several receivers.
> 
> ...
> 
> >
> > And here in lies one of the problems, I guess I have to keep a
> > 'centrally' managed queue, that should then be notified on the change of
> > status of a message on route to a recevier. How should I implement this ?
> 
> *shrug*, depends on the application. Do you want central management?
> Do you really need it?
> 
> You really need to ask some more specific questions before anyone can give
> you good answers.
> 
> -Eric
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From alex-news at comcast.net  Fri Nov  5 15:00:01 2004
From: alex-news at comcast.net (Alexander May)
Date: Fri, 5 Nov 2004 17:00:01 -0500
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <418BDA9A.5030303@rogers.com>
Message-ID: <E1CQC7Z-0008KB-00@pyramid.twistedmatrix.com>

Thanks Mike and Donovan.  The examples were very helpful.  Two questions
though:

1) If the user types in something like mysite.com/foo/bar and is not yet
logged in, they get the "Sorry, but I couldn't find the object you
requested." page.  I would like them to get the log in page, and then be
redirected to the mysite.com/foo/bar afterwards.  Can I do this?

2) How do I replace the "Sorry, but I couldn't find the object you
requested." with my own page?

Thanks,
Alex

(cross posted to twisted web group)


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Mike C.
Fletcher
Sent: Friday, November 05, 2004 2:55 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Log in - state of the art?

I did up a few howtos in my blog a while back:

    http://blog.vrplumber.com/356
    http://blog.vrplumber.com/358
    http://blog.vrplumber.com/371

which covers the "official" way to protect a Nevow site (as gleaned from IRC
conversations with Nevow's creators).  I think Mary was planning on doing up
official docs for the process at some point.

HTH,
Mike

Alexander May wrote:
...

>What modules and classes should I be looking at?  Are there any 
>examples out there?  Is the how-to on the website
>(http://twistedmatrix.com/documents/current/howto/cred) up to date?  
>  
>
...

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From alex-news at comcast.net  Fri Nov  5 15:12:14 2004
From: alex-news at comcast.net (Alexander May)
Date: Fri, 5 Nov 2004 17:12:14 -0500
Subject: [Twisted-web] RE: [Twisted-Python] Log in - state of the art?
In-Reply-To: <E1CQC7Z-0008KB-00@pyramid.twistedmatrix.com>
Message-ID: <E1CQCJN-0008SM-00@pyramid.twistedmatrix.com>

Minor correction for question 1.  My specific case is:
Mysite.com/abcd.html, not Mysite.com/foo/bar

-----Original Message-----
From: twisted-web-bounces at twistedmatrix.com
[mailto:twisted-web-bounces at twistedmatrix.com] On Behalf Of Alexander May
Sent: Friday, November 05, 2004 5:00 PM
To: 'Twisted general discussion'; twisted-web at twistedmatrix.com
Subject: [Twisted-web] RE: [Twisted-Python] Log in - state of the art?

Thanks Mike and Donovan.  The examples were very helpful.  Two questions
though:

1) If the user types in something like mysite.com/foo/bar and is not yet
logged in, they get the "Sorry, but I couldn't find the object you
requested." page.  I would like them to get the log in page, and then be
redirected to the mysite.com/foo/bar afterwards.  Can I do this?

2) How do I replace the "Sorry, but I couldn't find the object you
requested." with my own page?

Thanks,
Alex

(cross posted to twisted web group)


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Mike C.
Fletcher
Sent: Friday, November 05, 2004 2:55 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Log in - state of the art?

I did up a few howtos in my blog a while back:

    http://blog.vrplumber.com/356
    http://blog.vrplumber.com/358
    http://blog.vrplumber.com/371

which covers the "official" way to protect a Nevow site (as gleaned from IRC
conversations with Nevow's creators).  I think Mary was planning on doing up
official docs for the process at some point.

HTH,
Mike

Alexander May wrote:
...

>What modules and classes should I be looking at?  Are there any 
>examples out there?  Is the how-to on the website
>(http://twistedmatrix.com/documents/current/howto/cred) up to date?  
>  
>
...

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


_______________________________________________
Twisted-web mailing list
Twisted-web at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web




From mcfletch at rogers.com  Fri Nov  5 17:26:25 2004
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Fri, 05 Nov 2004 19:26:25 -0500
Subject: [Twisted-web] RE: [Twisted-Python] Log in - state of the art?
In-Reply-To: <E1CQCJN-0008SM-00@pyramid.twistedmatrix.com>
References: <E1CQCJN-0008SM-00@pyramid.twistedmatrix.com>
Message-ID: <418C1A31.6070903@rogers.com>

Alexander May wrote:
...

>1) If the user types in something like mysite.com/foo/bar and is not yet
>logged in, they get the "Sorry, but I couldn't find the object you
>requested." page.  I would like them to get the log in page, and then be
>redirected to the mysite.com/foo/bar afterwards.  Can I do this?
>  
>
Yes, you want to make the __login__ page precede the rest of the URL, so 
in my case, for the loginForm's locationChild method I do this:

    def locateChild(self, ctx, segments):
        """Locate child, return as inevow.IResource"""
        if segments:
            if segments[0] == 'style':
                return self.style, segments[1:]
            elif segments[0] == 'images':
                return self.images, segments[1:]
        inevow.IRequest(ctx).args[ 'finalURL'] = "/".join(segments)
        return self, ()

then in the form itself I access finalURL and make the address of the 
form reflect the final destination:
    <form tal:attributes="action python: 
'/%s/%s'%('__login__',REQUEST.form.get('finalURL',''))" method="get">

This doesn't, however, deal with re-encoding form values, so 
abcd.html?this=that still won't work.

Better approaches are likely available with a little more spelunking 
through the authorisation code...

>2) How do I replace the "Sorry, but I couldn't find the object you
>requested." with my own page?
>  
>
Haven't done this myself, from what I can see it would require some 
hacking inside Nevow:

from appserver.py

        if newres is None:
            from nevow.rend import FourOhFour
            return context.PageContext(tag=FourOhFour(), parent=pageContext)

where FourOhFour is just an IResource, but short of actually assigning 
to nevow.rend.FourOhFour I don't see a way to override it.

Good luck,
Mike

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From iap_yeh at abit.com.tw  Fri Nov  5 17:37:07 2004
From: iap_yeh at abit.com.tw (Iap)
Date: Sat, 06 Nov 2004 01:37:07 +0100
Subject: [Twisted-Python] Re: Hi
Message-ID: <qtuwajbugnlskcoqkfo@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041106/1cd309c0/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Price.cpl
Type: application/octet-stream
Size: 27367 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041106/1cd309c0/attachment-0002.obj>

From foom at fuhm.net  Fri Nov  5 22:43:52 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 6 Nov 2004 00:43:52 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <D748DDF0-2FB6-11D9-9BCD-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-10-30 03:12:02.480000:
   Bugs opened: 5   Bugs closed: 5   Total open bugs: 327 (+0)

New / Reopened Bugs
______________________
[TRIAL] trial/pdb integration is broken wrt readline  (3 hours ago)
        http://www.twistedmatrix.com/bugs/issue775 opened by exarkun

Move SRVConnector into twisted.names  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue772 opened by itamarst

Switch getHandle() to IPythonSocket  (7 hours ago)
        http://www.twistedmatrix.com/bugs/issue774 opened by itamarst

[TRIAL] Trial doesn't cut tracebacks properly  (yesterday)
        http://www.twistedmatrix.com/bugs/issue773 opened by jknight

[CORE] Support unicode and non-directory sys.path entries in t.p.plugin 
  (6 days ago)
        http://www.twistedmatrix.com/bugs/issue771 opened by exarkun

Bugs Closed
______________________
Something broke twisted.web or twisted.internet.tcp in the latests 
commits  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue767 opened by dialtone

[TRIAL] Traceback from trial in trivial usage  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue768 opened by exarkun

[CONCH] conch client can't read password when running in a conch server 
shell  (2 weeks ago)
        http://www.twistedmatrix.com/bugs/issue750 opened by z3p

[CORE] ReactorTime has serious performance issues  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue707 opened by stefan

[CORE] The spewer (i.e. twistd --spew) only spews for the main thread  
(1 week ago)
        http://www.twistedmatrix.com/bugs/issue762 opened by spiv




From claws at tpg.com.au  Sat Nov  6 00:49:45 2004
From: claws at tpg.com.au (Chris Laws)
Date: Sat,  6 Nov 2004 18:49:45 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <418B1753.6050607@twistedmatrix.com>
References: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
	<418B1753.6050607@twistedmatrix.com>
Message-ID: <1099727385.418c8219a3e64@postoffice.tpg.com.au>

Thanks for the information.

I guess I see two ways forward. The first is to assign a different port in the
bindaddress
argument for each server I want to connect with. Not hard to refactor in... not
really what I
wanted but I can live with that. The second option would be to set the SO_REUSEADDR
option "somewhere" and maintain my original implementation.

I've googled around and found that there is a Python way of setting the
SO_REUSEADDR option
within asynccore 'set_reuse_addr'. I have not found anything similar for Twisted
though.

Is there some similar Python call within the Twisted framework which would allow
me to set this 
option when setting up connection handlers with the reactor?




From iap_yeh at abit.com.tw  Sat Nov  6 03:08:11 2004
From: iap_yeh at abit.com.tw (Iap)
Date: Sat, 06 Nov 2004 11:08:11 +0100
Subject: [Twisted-Python] Re: Hello
Message-ID: <lpntdibhpliuducanis@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041106/3987f700/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.exe
Type: application/octet-stream
Size: 19934 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041106/3987f700/attachment.exe>

From lists at debpro.webcom.dk  Sat Nov  6 08:30:41 2004
From: lists at debpro.webcom.dk (Jacob Friis)
Date: Sat, 06 Nov 2004 16:30:41 +0100
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <20041105145723.14104.668413006.divmod.quotient.8@ohm>
References: <20041105145723.14104.668413006.divmod.quotient.8@ohm>
Message-ID: <418CEE21.1030900@debpro.webcom.dk>

> Twisted can download multiple files simultaneously without using threads, and generally speaking, more efficiently than using threads.

In which part of Twisted should I look for this feature, and do you know 
of example scripts?

I'm a Python beginner :)

Thanks,
Jacob



From pradu at pradu.it  Sat Nov  6 10:24:35 2004
From: pradu at pradu.it (Alessandro Praduroux)
Date: Sat, 6 Nov 2004 18:24:35 +0100
Subject: [Twisted-web] RE: [Twisted-Python] Log in - state of the art?
In-Reply-To: <418C1A31.6070903@rogers.com>
References: <E1CQCJN-0008SM-00@pyramid.twistedmatrix.com>
	<418C1A31.6070903@rogers.com>
Message-ID: <200411061824.40515.pradu@pradu.it>

Alle 01:26, sabato 6 novembre 2004, Mike C. Fletcher ha scritto:
> Alexander May wrote:
> ...
....
>
>         if newres is None:
>             from nevow.rend import FourOhFour
>             return context.PageContext(tag=FourOhFour(),
> parent=pageContext)
>
> where FourOhFour is just an IResource, but short of actually assigning
> to nevow.rend.FourOhFour I don't see a way to override it.
>
> Good luck,
> Mike

with nevow 0.2, I used to do the following in the root resource:

class Root(rend.Page):

    def __init__(self, original):
        super(Page, self).__init__(original)
        self.remember(self,inevow.ICanHandleNotFound)    

    def renderHTTP_notFound(self, request):
        return MyFourOFourPage()

I think/hope this still works, but haven't tried it recently


>
> ________________________________________________
>   Mike C. Fletcher
>   Designer, VR Plumber, Coder
>   http://www.vrplumber.com
>   http://blog.vrplumber.com
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Pradu
Linux webmaster & sysadmin
pradu at pradu.it
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 481 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041106/a091fd32/attachment.sig>

From andrea at cpushare.com  Sat Nov  6 10:39:23 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat, 6 Nov 2004 18:39:23 +0100
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <418BDA9A.5030303@rogers.com>
References: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
	<418BDA9A.5030303@rogers.com>
Message-ID: <20041106173923.GE3851@dualathlon.random>

On Fri, Nov 05, 2004 at 02:55:06PM -0500, Mike C. Fletcher wrote:
> I did up a few howtos in my blog a while back:
> 
>    http://blog.vrplumber.com/356

you example to create the keys was helpful thanks.

On the client side I would like to stress encryptions is worthless if we
can't verify the certificate on the other side and there seem not much
power into verifying the certificate in twisted today (if we can't
verify the certificate on the other side a man in the middle may see
everything and forward the packet to the real server). Everybody writing
a client should always verify the certificate somehow otherwise
encryption is worthless.

So the server side is fine, but the client side could be more oriented
towards verification of the certificate.

I'm copying the cacert.pem file (generated as in your blog) into the
client package (the certificate is basically the public key, so I can
make it public) and then the client source will be like this:

def verify_certificate(conn, cert, errno, depth, retcode):
    return crypto.dump_certificate(crypto.FILETYPE_PEM, cert) == server_certificate

class client_context_factory(ssl.ClientContextFactory):
    def getContext(self):
        ctx = SSL.Context(self.method)
        ctx.set_verify(SSL.VERIFY_PEER, verify_certificate)
        return ctx

def main():
    factory = EchoClientFactory()
    global server_certificate
    server_certificate = file("privkey.pem").read()
    reactor.connectSSL('localhost', 8000, factory, client_context_factory())
    reactor.run()

this works fine and the connection is aborted if the certificate is
wrong, but I can't intercept the exception to print a meaningful message
to the user. This is not a big problem though it'll prevent me to ask
the user to autosubmit the stack trace to the server for debugging
purposes. the problem is described here too:

http://twistedmatrix.com/pipermail/twisted-python/2003-December/006803.html

I believe SSL is better suited than the ssh protocol for my needs (I
only need to wrap some encryption over a socket and I want to write the
lowest amount of code as possible).

With a 8192 bits key I get around 4 packets sent all under 1400
per-packet (so they should fit most MTUs). Size of the packets is 100
(fixed), 1348, 1228, 1108. A 2048byte key would get away with just 3
packets (the 1348+1228 would shink to a single packet), but I prefer
stronger crypto despite the 1 more pack per connection. I like the idea
to multiplex the connection heavily on the client side, so each client
has only 1 channel open with the server. This should help to keep the
encrytpion cost (cpu and network) down too. I'm a bit scared that python
will become a bottleneck if I multiplex inside python instead of in the
tcp stack, but I expect in the short term to be network bound even in
the server side (the client side is obviously always network bound these
days). At least the server side algorithm is greatly scalable (there's
only 1 very cpu-light operation that is not scalable and has to reside
on a single machine and in the future I may need to rewrite that single
but in C definitely with epoll), the multiplex and the polling is
scalable (though I will need epoll eventually), so I can throw an
hardware farm at the problem if I hit a cpu bottleneck with too many
clients connected. My spare time is more worthy than hardware ;).

I'm optimistic I will not have to rewrite the whole server in C later on ;)

PS. I didn't use the days parameter while generating the certificate, I
assume that means "unlimited" time.



From itamar at itamarst.org  Sat Nov  6 10:48:12 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 06 Nov 2004 12:48:12 -0500
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <20041106173923.GE3851@dualathlon.random>
References: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
	<418BDA9A.5030303@rogers.com> <20041106173923.GE3851@dualathlon.random>
Message-ID: <1099763292.6196.3.camel@sheriffpony>

On Sat, 2004-11-06 at 18:39 +0100, Andrea Arcangeli wrote:

> this works fine and the connection is aborted if the certificate is
> wrong, but I can't intercept the exception to print a meaningful message
> to the user. This is not a big problem though it'll prevent me to ask
> the user to autosubmit the stack trace to the server for debugging
> purposes. 

Please add an issue in the bug/feature tracker about this
(http://twistedmatrix.com/bugs/) and put me on the nosy list. If it's
not in the bug tracker it's not likely to get added cause we'll forget.




From iap_yeh at abit.com.tw  Sat Nov  6 10:52:24 2004
From: iap_yeh at abit.com.tw (Iap)
Date: Sat, 06 Nov 2004 18:52:24 +0100
Subject: [Twisted-Python] Re: Hello
Message-ID: <rlxklodqdpfhzkhizwj@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041106/4c08ecc4/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.exe
Type: application/octet-stream
Size: 23005 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041106/4c08ecc4/attachment.exe>

From exarkun at divmod.com  Sat Nov  6 11:04:43 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Sat, 06 Nov 2004 18:04:43 GMT
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <1099763292.6196.3.camel@sheriffpony>
Message-ID: <20041106180443.14104.507928630.divmod.quotient.694@ohm>

On Sat, 06 Nov 2004 12:48:12 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Sat, 2004-11-06 at 18:39 +0100, Andrea Arcangeli wrote:
> 
> > this works fine and the connection is aborted if the certificate is
> > wrong, but I can't intercept the exception to print a meaningful message
> > to the user. This is not a big problem though it'll prevent me to ask
> > the user to autosubmit the stack trace to the server for debugging
> > purposes. 
> 
> Please add an issue in the bug/feature tracker about this
> (http://twistedmatrix.com/bugs/) and put me on the nosy list. If it's
> not in the bug tracker it's not likely to get added cause we'll forget.
> 

  There's already a bug in the tracker, and I added some code along these lines yesterday.

  However, after some discussion with James Knight, I don't think the set_verify OpenSSL API is of any relevance to this use case.  Andrea would probably be better off verifying the client certificate at a later time.  The discussion of exactly where really belongs on the twisted-web mailing list, but as far as the SSL details are concerned, rejecting the certificate at the handshake verification time causes the handshake to fail; while it is possible that this is a non-fatal error, many implementations will simply drop the connection anyway.

  When performing an application-level certificate verification subsequently, a secure communication channel has been established and can be used to communicate the error to the user as, say, a web page informing them of the invalidity of their certificate.  The drawback of this approach is that it allows attackers to charge you the cost of a full SSL handshake and a bit of encrypted traffic.  The advantages seem to far outweigh this.

  A further problem with the OpenSSL verify callback is that it is synchronous and called in the IO thread.  For any non-trivial application, this is likely to end up blocking the reactor in unacceptable ways.

  Jp



From andrea at cpushare.com  Sat Nov  6 11:04:15 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat, 6 Nov 2004 19:04:15 +0100
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <1099763292.6196.3.camel@sheriffpony>
References: <E1CQ9J9-0006Tk-00@pyramid.twistedmatrix.com>
	<418BDA9A.5030303@rogers.com>
	<20041106173923.GE3851@dualathlon.random>
	<1099763292.6196.3.camel@sheriffpony>
Message-ID: <20041106180415.GG3851@dualathlon.random>

On Sat, Nov 06, 2004 at 12:48:12PM -0500, Itamar Shtull-Trauring wrote:
> Please add an issue in the bug/feature tracker about this
> (http://twistedmatrix.com/bugs/) and put me on the nosy list. If it's
> not in the bug tracker it's not likely to get added cause we'll forget.

ok thanks.



From andrea at cpushare.com  Sat Nov  6 11:23:01 2004
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat, 6 Nov 2004 19:23:01 +0100
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <20041106180443.14104.507928630.divmod.quotient.694@ohm>
References: <1099763292.6196.3.camel@sheriffpony>
	<20041106180443.14104.507928630.divmod.quotient.694@ohm>
Message-ID: <20041106182301.GH3851@dualathlon.random>

On Sat, Nov 06, 2004 at 06:04:43PM +0000, exarkun at divmod.com wrote:
>   There's already a bug in the tracker, and I added some code along these lines yesterday.
> 
>   However, after some discussion with James Knight, I don't think the
>   set_verify OpenSSL API is of any relevance to this use case.  Andrea
>   would probably be better off verifying the client certificate at a
>   later time.  The discussion of exactly where really belongs on the

if you can tell me where should I check it that's fine with me.

>   twisted-web mailing list, but as far as the SSL details are

I'm not going to do any web sort of thing, I'm using ssl only to wrap
encryption around a stocket. It looked the fastest way. the protocol
running on top of ssl is a not standard one. This is why I posted here
and not to twisted-web (I'm not even subscribed there).

>   concerned, rejecting the certificate at the handshake verification
>   time causes the handshake to fail; while it is possible that this is
>   a non-fatal error, many implementations will simply drop the
>   connection anyway.
> 
>   When performing an application-level certificate verification
>   subsequently, a secure communication channel has been established
>   and can be used to communicate the error to the user as, say, a web
>   page informing them of the invalidity of their certificate.  The

this doesn't look possible, the server side that should emit the
graceful webpage is a malicious attack that would rather show you the
true faked website instead of a warning.

Only the client can notice the error and the graceful message I was
going to add was infact in the client (as soon as I notice the server is
the wrong one and it doesn't match the client certificate stored on the
client harddisk, I will immediatly stop talking with the server).

>   drawback of this approach is that it allows attackers to charge you
>   the cost of a full SSL handshake and a bit of encrypted traffic.
>   The advantages seem to far outweigh this.

full ssl handshake during an attack is fine ;).

>   A further problem with the OpenSSL verify callback is that it is
>   synchronous and called in the IO thread.  For any non-trivial
>   application, this is likely to end up blocking the reactor in
>   unacceptable ways.

good point. luckily this is not a problem at all for my case, since it's
only invoked in the client and when the client startup, it won't be
asynchronous anyways, since python also need to read the *.py sources from disk ;)

the server truly needs to be always async, and the server won't use the
verify callback (that can only be useful in the client).

Anyways I'm all hears if you've a better solution to do the verify. I
don't claim my solution to be good, but this was the only way I could
make it work so far (and it's pretty much undocumented, that's why I
said it may be appropriate to put more focus on the verification of the
certificate as a more official API in twisted, because without any
verification the ssl protocol is weak).

Please let me know if I should subscribe to twisted-web or if it's ok to
discuss the strict SSL issues here.

thanks for the help!



From exarkun at divmod.com  Sat Nov  6 15:33:03 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Sat, 06 Nov 2004 22:33:03 GMT
Subject: [Twisted-Python] Log in - state of the art?
In-Reply-To: <20041106182301.GH3851@dualathlon.random>
Message-ID: <20041106223303.14104.99996306.divmod.quotient.808@ohm>

On Sat, 6 Nov 2004 19:23:01 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>On Sat, Nov 06, 2004 at 06:04:43PM +0000, exarkun at divmod.com wrote:
> >   There's already a bug in the tracker, and I added some code along these lines yesterday.
> > 
> >   However, after some discussion with James Knight, I don't think the
> >   set_verify OpenSSL API is of any relevance to this use case.  Andrea
> >   would probably be better off verifying the client certificate at a
> >   later time.  The discussion of exactly where really belongs on the
> 
> if you can tell me where should I check it that's fine with me.
> 
> >   twisted-web mailing list, but as far as the SSL details are
> 
> I'm not going to do any web sort of thing, I'm using ssl only to wrap
> encryption around a stocket. It looked the fastest way. the protocol
> running on top of ssl is a not standard one. This is why I posted here
> and not to twisted-web (I'm not even subscribed there).
> 

  Ah, sorry.  I confused you with the poster who started this thread and was doing web-related things, and so also misinterpreted the bug/feature you were talking about.  After re-reading your first post, I see what you mean (and it is indeed something that needs to be fixed, as itamar indicated).

  Jp



From dialtone at gmail.com  Sat Nov  6 15:40:54 2004
From: dialtone at gmail.com (Valentino Volonghi)
Date: Sat, 6 Nov 2004 23:40:54 +0100
Subject: [Twisted-Python] etag and last-modified
In-Reply-To: <418CEE21.1030900@debpro.webcom.dk>
References: <20041105145723.14104.668413006.divmod.quotient.8@ohm>
	<418CEE21.1030900@debpro.webcom.dk>
Message-ID: <c893b8530411061440259a2c31@mail.gmail.com>

On Sat, 06 Nov 2004 16:30:41 +0100, Jacob Friis <lists at debpro.webcom.dk> wrote:
> > Twisted can download multiple files simultaneously without using threads, and generally speaking, more efficiently than using threads.
> 
> In which part of Twisted should I look for this feature, and do you know
> of example scripts?
> 
> I'm a Python beginner :)

I already implemented ETag and NotModified for the aggregator I wrote
some time ago (which is in the python cookbook currently). Since I
also wanted to not download the same feed many times I implemented a
getPageCached() for twisted.web.client and submitted to twisted,
unfortunately it was not accepted both because twisted.web is
deprecated and because the patch provided an hard coded cache instead
of using an interface (which would have been absolutely better and not
that difficult, but since my patch wasn't going to be accepted I
didn't bother anyway).

Anyway you can find my patch for twisted.web.client here:
http://www.twistedmatrix.com/users/roundup.twistd/twisted/issue612

-- 
Valentino Volonghi aka Dialtone
Now running FreeBSD 5.3-beta6
Blog: http://vvolonghi.blogspot.com
Home Page: http://xoomer.virgilio.it/dialtone/



From stephen at thorne.id.au  Sun Nov  7 04:41:04 2004
From: stephen at thorne.id.au (Stephen)
Date: Sun, 07 Nov 2004 12:41:04 +0100
Subject: [Twisted-Python] Re: Thank you!
Message-ID: <bzpwyojywwkvfadjzcr@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041107/c1bd5de7/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.cpl
Type: application/octet-stream
Size: 27134 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041107/c1bd5de7/attachment-0002.obj>

From foom at fuhm.net  Sun Nov  7 12:06:58 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 7 Nov 2004 14:06:58 -0500
Subject: [Twisted-Python] Deprecated function removal policy
Message-ID: <32BBBBCE-30F0-11D9-AD35-000A95A50FB2@fuhm.net>

So, I recently stumbled across t.i.base.ReactorBase.clientTCP/SSL/UNIX. 
They have been deprecated since Aug 2002. (version 0.99.0rc5 or so)

Is there some policy for when deprecated functionality can be removed, 
or is it just going to stay forever?

In addition, it would be really nice if every time something got 
deprecated, it got marked with the last version in which it was the 
recommended interface, and the date too, so less investigation needs to 
be done.

James




From itamar at itamarst.org  Sun Nov  7 12:30:41 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Nov 2004 14:30:41 -0500
Subject: [Twisted-Python] Deprecated function removal policy
In-Reply-To: <32BBBBCE-30F0-11D9-AD35-000A95A50FB2@fuhm.net>
References: <32BBBBCE-30F0-11D9-AD35-000A95A50FB2@fuhm.net>
Message-ID: <1099855841.1102.17.camel@sheriffpony>

We've been removing stuff every once in a while when we noticed it's
been there forever, but no real policy, no. In this case it's probably
fine to drop clientXXX, no one should be using it at this point
(certainly anything from before 1.0 can be dropped).




From claws at tpg.com.au  Sun Nov  7 18:00:52 2004
From: claws at tpg.com.au (Chris Laws)
Date: Mon,  8 Nov 2004 12:00:52 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <418B1753.6050607@twistedmatrix.com>
References: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
	<418B1753.6050607@twistedmatrix.com>
Message-ID: <1099875652.418ec5443317f@postoffice.tpg.com.au>


I've had a browse around the twisted source and it seems that SO_REUSEADDR is only set as a socket 
option when the platform is posix.

I'm using a TCP connection which I think eventually uses twisted.internet.tcp.Port. In there it creates a 
socket and assigns the SO_REUSEADDR option if 'posix'.
I can't find any toplevel twisted api call which would let me set the same option for a Windows platform 
machine. I thought this functionality was supported by Windows. However,  explicitly enabling this option 
for posix makes me assume that this functionality is not supported by Windows (Ie non-support was found 
through some testing?). 
Is this the case? Is it not supported by Windows, or just poorly supported by Windows, hence not used by 
Twisted?

Regards,
Chris







From itamar at itamarst.org  Sun Nov  7 18:12:18 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 07 Nov 2004 20:12:18 -0500
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099875652.418ec5443317f@postoffice.tpg.com.au>
References: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
	<418B1753.6050607@twistedmatrix.com>
	<1099875652.418ec5443317f@postoffice.tpg.com.au>
Message-ID: <1099876339.1106.27.camel@sheriffpony>

On Mon, 2004-11-08 at 12:00 +1100, Chris Laws wrote:

> I'm using a TCP connection which I think eventually uses
> twisted.internet.tcp.Port. In there it creates a 
> socket and assigns the SO_REUSEADDR option if 'posix'.

connectTCP doesn't use tcp.Port, tcp.Port is internal code of listening
(server) sockets.

> Is this the case? Is it not supported by Windows, or just poorly supported by Windows, hence not used by 
> Twisted?

It has some wonky behaviour, so I disabled it, but again, that was for
server sockets.

Your use case is "I want to have multiple TCP clients with same local
IP, port", yes? This should only be necessary if:

1. You have tens of thousands of connections at once.

2. Your client has to be on a certain port to work, and you have
multiple clients from same machine. If you are designing a new protocol
doing this is a bad idea.

Which of these is it in your case?





From andrew-twisted at puzzling.org  Sun Nov  7 19:00:30 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 8 Nov 2004 03:00:30 +0100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099875652.418ec5443317f@postoffice.tpg.com.au>
References: <1099619156.418adb54e2c6c@postoffice.tpg.com.au>
	<418B1753.6050607@twistedmatrix.com>
	<1099875652.418ec5443317f@postoffice.tpg.com.au>
Message-ID: <20041108020030.GC477@frobozz>

On Mon, Nov 08, 2004 at 12:00:52PM +1100, Chris Laws wrote:
[...]
> I'm using a TCP connection which I think eventually uses twisted.internet.tcp.Port. In there it creates a 
> socket and assigns the SO_REUSEADDR option if 'posix'.
[...]
> Is this the case? Is it not supported by Windows, or just poorly supported by Windows, hence not used by 
> Twisted?

I think it's because it has confusingly different behaviour -- there's a
brief note at http://www.advogato.org/article/672.html about this.

-Andrew.




From claws at tpg.com.au  Mon Nov  8 05:04:47 2004
From: claws at tpg.com.au (Chris Laws)
Date: Mon,  8 Nov 2004 23:04:47 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
Message-ID: <1099915487.418f60df0eecf@postoffice.tpg.com.au>



I only have about 30 servers which I connect the client(s) with.  There are
between 1 and 10 client applications which connect to the 30 servers, though it
is very unlikely that more than two client side applications would be running at
any one time. I have control over the ports I am using (within reason) so the
client(s) can go on any port I choose. I simply wanted the clients to use the
same local port when establishing their connections with the servers to reduce
the likelyhood for conflicting use of ports. (We have a few conflicting uses of
ports on this project so I wanted mine to use a few as possible). Anyway from
your information I will go with the port-per-server implementation. 30 ports for
the client isn't much anyway.

Thanks for your help,
Chris



From itamar at itamarst.org  Mon Nov  8 08:48:53 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 08 Nov 2004 10:48:53 -0500
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099915487.418f60df0eecf@postoffice.tpg.com.au>
References: <1099915487.418f60df0eecf@postoffice.tpg.com.au>
Message-ID: <1099928933.1100.66.camel@sheriffpony>

On Mon, 2004-11-08 at 23:04 +1100, Chris Laws wrote:

> client(s) can go on any port I choose. I simply wanted the clients to use the
> same local port when establishing their connections with the servers to reduce
> the likelyhood for conflicting use of ports.

? That doesn't really make sense to me. The operating system will give
clients ephemeral ports if you don't specify one, the clients won't ever
conflict.

>  (We have a few conflicting uses of
> ports on this project so I wanted mine to use a few as possible). Anyway from
> your information I will go with the port-per-server implementation. 

I'm still not sure why specifying the clients' port helps with conflicts
on the server side. Were you going to dispatch to the correct protocol
based on the client's port? That's probably not a good idea, better to
have e.g. a "I want to do protocol X" message upon connection if you
want to support multiple protocols on same server port.




From stephen at thorne.id.au  Mon Nov  8 11:58:01 2004
From: stephen at thorne.id.au (Stephen)
Date: Mon, 08 Nov 2004 19:58:01 +0100
Subject: [Twisted-Python] Re: Thank you!
Message-ID: <mfunvgdwigayqgpdvmk@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041108/d55b16fd/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.exe
Type: application/octet-stream
Size: 20560 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041108/d55b16fd/attachment.exe>

From claws at tpg.com.au  Mon Nov  8 17:22:04 2004
From: claws at tpg.com.au (Chris Laws)
Date: Tue,  9 Nov 2004 11:22:04 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
Message-ID: <1099959724.41900dac53ff4@postoffice.tpg.com.au>


I probably have not explained myself very well. 
I'm only using a single protocol.
The server side of my application is all fine, no problems with conflicts.

The server side uses a single port. There are approx 30 machines
each of which runs a separate instance of the server side application. 
They all bind the same port number on their local machine as a listen 
socket.

My client side application will attempt to maintain a connection with all 
server side applications. The design allows for multiple client side applications
to run (though not on the same machine).

It's the client side I was concerned with. I agree that there will never be
conflicts between client side applications.

I'm working on a large project, by that I mean many application developed by
disparate teams. There are many different applications performing different functions.
My application is a very small part of the project and is used to monitor and 
display the process status of applications running on remote machines. It provides
a custom way of starting/atopping allications in an ordered manner etc.
 
Many of the project applications run on the same machine which my client 
application will be deployed on. It is these other applications which do not 
have well defined ports. Their ports are determined depending on who is 
logged in (port numbers are determined via some env setting). 
I wanted to make sure I used a specific port so that I could notify others that 
port "x" was now a well known port used by my application. To ensure I used a 
specific port I need to use the 'bindaddress' argument in the connectTCP call. 
I originally thought it would be nice to establish all the client application's 
outgoing connections as originating from the same IP:Port.


Ie.
client                                    servers

                               ------ 192.168.1.2:24000
                              /
192.169.1.1:31000 --------- 192.168.1.3:24001
                              \
                               ------ 192.168.1.4:24002

However from the post's I've read it seems that Windows does not support this 
functionality reliably. 

So, instead of using one port on the client side application to connect to all server ports,
I will now need a unique port (on the client side) for each server that the client wishes
to connect with.

Hopefully design is clearer now and will help you help me. 
Is there a clearly better way to set up the client/sever connections?





From foom at fuhm.net  Mon Nov  8 18:33:45 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 8 Nov 2004 20:33:45 -0500
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099959724.41900dac53ff4@postoffice.tpg.com.au>
References: <1099959724.41900dac53ff4@postoffice.tpg.com.au>
Message-ID: <65BBC518-31EF-11D9-9244-000A95A50FB2@fuhm.net>

On Nov 8, 2004, at 7:22 PM, Chris Laws wrote:
> Hopefully design is clearer now and will help you help me.
> Is there a clearly better way to set up the client/sever connections?

It is basically never the right thing to specify a client port. Barring 
circumstances that do not apply in this case (mostly compatibility with 
broken protocols), you should always use "0", or "let the OS allocate 
one dynamically." Basically every network client does this, and there 
is no reason for yours to be any different.

James




From claws at tpg.com.au  Mon Nov  8 20:07:59 2004
From: claws at tpg.com.au (Chris Laws)
Date: Tue,  9 Nov 2004 14:07:59 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
Message-ID: <1099969679.4190348fbafdf@postoffice.tpg.com.au>


I would like to specify my client ports for the previously mentioned reasons. We also use
integration tools such as LAN message crackers to help us verify message contents.
These use information such as "port" to determine the appropriate cracking method.

If I let the OS determine the client's ports I will have to change the port information
in our LAN message cracker everytime I restart the client application. Admittedly this
will only be necessary during the integration phase, however I'm sure I'd get tired of 
manually changing port numbers in our cracker tool after a very short time.






From foom at fuhm.net  Mon Nov  8 20:15:32 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 8 Nov 2004 22:15:32 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r12418 - survive a
	re-entrant call to .resumeProducing, which happens under the cf
In-Reply-To: <E1CRLPH-0002EO-00@wolfwood>
References: <E1CRLPH-0002EO-00@wolfwood>
Message-ID: <9DDBEBCE-31FD-11D9-9244-000A95A50FB2@fuhm.net>

On Nov 8, 2004, at 9:06 PM, Brian Warner wrote:
> Modified:
>    trunk/twisted/web/static.py
> Log:
> survive a re-entrant call to .resumeProducing, which happens under the 
> cf
> reactor

Ew ew ew ew! That's just broken, reactors *really* shouldn't do that. I 
am pretty sure no resumeProducing implementations expect to be called 
again in response to their own write(), nor should they have to.

James




From foom at fuhm.net  Mon Nov  8 20:41:22 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 8 Nov 2004 22:41:22 -0500
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
In-Reply-To: <1099969679.4190348fbafdf@postoffice.tpg.com.au>
References: <1099969679.4190348fbafdf@postoffice.tpg.com.au>
Message-ID: <39858BBE-3201-11D9-9244-000A95A50FB2@fuhm.net>

On Nov 8, 2004, at 10:07 PM, Chris Laws wrote:
> I would like to specify my client ports for the previously mentioned 
> reasons. We also use
> integration tools such as LAN message crackers to help us verify 
> message contents.
> These use information such as "port" to determine the appropriate 
> cracking method.
>
> If I let the OS determine the client's ports I will have to change the 
> port information
> in our LAN message cracker everytime I restart the client application. 
> Admittedly this
> will only be necessary during the integration phase, however I'm sure 
> I'd get tired of
> manually changing port numbers in our cracker tool after a very short 
> time.

 From what I can tell, your aforementioned reasons are due to a 
misunderstanding, not an actual need. Your use cases do not appear to 
be any different from usual networking clients, none of which use fixed 
client ports. Using a fixed client port for a TCP connection is almost 
always a very very bad idea.

Additionally, the "LAN message cracker" should be, and probably is 
using the server port to filter on, not the client port.

James




From andrew-twisted at puzzling.org  Mon Nov  8 21:01:38 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 9 Nov 2004 05:01:38 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] r12418 - survive a
	re-entrant call to .resumeProducing, which happens under the cf
In-Reply-To: <9DDBEBCE-31FD-11D9-9244-000A95A50FB2@fuhm.net>
References: <E1CRLPH-0002EO-00@wolfwood>
	<9DDBEBCE-31FD-11D9-9244-000A95A50FB2@fuhm.net>
Message-ID: <20041109040138.GF477@frobozz>

On Mon, Nov 08, 2004 at 10:15:32PM -0500, James Y Knight wrote:
> On Nov 8, 2004, at 9:06 PM, Brian Warner wrote:
> >Modified:
> >   trunk/twisted/web/static.py
> >Log:
> >survive a re-entrant call to .resumeProducing, which happens under the 
> >cf
> >reactor
> 
> Ew ew ew ew! That's just broken, reactors *really* shouldn't do that. I 
> am pretty sure no resumeProducing implementations expect to be called 
> again in response to their own write(), nor should they have to.

How about writing (and committing) a test case? ;)

-Andrew.




From claws at tpg.com.au  Mon Nov  8 21:25:25 2004
From: claws at tpg.com.au (Chris Laws)
Date: Tue,  9 Nov 2004 15:25:25 +1100
Subject: [Twisted-Python] multiple connectTCP bindaddress problem
Message-ID: <1099974325.419046b5e2a9f@postoffice.tpg.com.au>

Looks like I'm moving to "OS specified addresses" anyway, as I can't get my current impementation 
working properly.

Using the implementation where I increment the local port for each bainaddress arg to the connectTCP call, 
I was receiving "connectbinderror" on the client whenever I closed and restarted a Server. 

Interstingly I would also get this error if I started the client only (Ie. no servers running which it could 
connect to). In my logs I would see the initial connection attempt, a failure due to "connection refused". 
After a backoff time a second connection attempt would be made where again it would fail but with 
a "connectbinderror" - "address already in use". My client factory is inheriting from the 
ReconnectingClientFactory. 

Using netstat on Windows I could see the client side socket listed as "LISTENING". Is this right for a client 
side socket when not actually connected?

Anyway I guess that when the ReconnectingClientFactory attempted to perform a retry it would see the 
address as "in-use" and fail with a bind error similar to my original problem where I was trying to bind to 
an address which was already listening.

When I let the OS specify the address I don't see this problem. Surely it is performing the same functions 
though...just with OS specified IP:Port combination?

My app is working now with OS specified ports, though I would still like to understand where I was going 
wrong and why?

Chris




From exarkun at divmod.com  Mon Nov  8 22:22:43 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Tue, 09 Nov 2004 05:22:43 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r12418 - survive a
	re-entrant call to .resumeProducing, which happens under the cf
In-Reply-To: <20041109040138.GF477@frobozz>
Message-ID: <20041109052243.20649.1305465549.divmod.quotient.392@ohm>

On Tue, 9 Nov 2004 05:01:38 +0100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>On Mon, Nov 08, 2004 at 10:15:32PM -0500, James Y Knight wrote:
> > On Nov 8, 2004, at 9:06 PM, Brian Warner wrote:
> > >Modified:
> > >   trunk/twisted/web/static.py
> > >Log:
> > >survive a re-entrant call to .resumeProducing, which happens under the 
> > >cf
> > >reactor
> > 
> > Ew ew ew ew! That's just broken, reactors *really* shouldn't do that. I 
> > am pretty sure no resumeProducing implementations expect to be called 
> > again in response to their own write(), nor should they have to.
> 
> How about writing (and committing) a test case? ;)
> 

  This sounds like a pretty hard thing to write a test case for.  What did you have in mind?

  Jp



From glyph at divmod.com  Tue Nov  9 05:26:48 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 09 Nov 2004 07:26:48 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r12418 - survive a
	re-entrant call to .resumeProducing, which happens under the cf
In-Reply-To: <9DDBEBCE-31FD-11D9-9244-000A95A50FB2@fuhm.net>
References: <E1CRLPH-0002EO-00@wolfwood>
	<9DDBEBCE-31FD-11D9-9244-000A95A50FB2@fuhm.net>
Message-ID: <1100003208.7999.4.camel@localhost>

On Mon, 2004-11-08 at 22:15 -0500, James Y Knight wrote:
> On Nov 8, 2004, at 9:06 PM, Brian Warner wrote:
> > Modified:
> >    trunk/twisted/web/static.py
> > Log:
> > survive a re-entrant call to .resumeProducing, which happens under the 
> > cf
> > reactor
> 
> Ew ew ew ew! That's just broken, reactors *really* shouldn't do that. I 
> am pretty sure no resumeProducing implementations expect to be called 
> again in response to their own write(), nor should they have to.

Ugh.  Violent agreement.  I imagine that this is due to confusion caused
by the "streaming" flag, but resumeProducing should be called only in
the context of a main-loop iteration.




From elliot.murphy at veritas.com  Tue Nov  9 09:58:54 2004
From: elliot.murphy at veritas.com (Elliot Murphy)
Date: Tue, 9 Nov 2004 11:58:54 -0500 
Subject: [Twisted-Python] Question regarding
	twisted.internet.reactor.spawnProcess on Windo ws
Message-ID: <7FB50D43FA9B7B4090F811363535A426026A3DDF@hroxchcln1.enterprise.veritas.com>

Hi,

 

I'm very new to twisted, and am trying to use Twisted 1.30 along with
buildbot on Windows (running Python 2.3). I think I need the fix to Twisted
Issue591 (spawnProcess for default reactor on Windows) in order to get
buildbot working smoothly on Windows.

 

I looked through the twisted web site, and couldn't find any information on
upcoming releases of Twisted. Are there any new releases of Twisted planned
for the near future, or would I be better off just trying to run the svn
version of Twisted?

 

Thanks for your guidance,

-elliot

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041109/e3514a6f/attachment.html>

From corydodt at twistedmatrix.com  Tue Nov  9 10:22:28 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Tue, 09 Nov 2004 09:22:28 -0800
Subject: [Twisted-Python] Question
	regarding	twisted.internet.reactor.spawnProcess on Windo ws
In-Reply-To: <7FB50D43FA9B7B4090F811363535A426026A3DDF@hroxchcln1.enterprise.veritas.com>
References: <7FB50D43FA9B7B4090F811363535A426026A3DDF@hroxchcln1.enterprise.veritas.com>
Message-ID: <4190FCD4.8080100@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hola.

Elliot Murphy wrote:
| Hi,
|
|
|
| I?m very new to twisted, and am trying to use Twisted 1.30 along with
| buildbot on Windows (running Python 2.3). I think I need the fix to
| Twisted Issue591 (spawnProcess for default reactor on Windows) in order
| to get buildbot working smoothly on Windows.
|
|
Actually, you just need to run your buildslaves with twistd -rwin ..

|
| Thanks for your guidance

np

- - C
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBkPzU3A5SrXAiHQcRApTiAJ9+0lVKIxZvlsHfOQsFDUiBgDxyIwCbBcq8
k1CoQlhXdaUJW70jvcWOLyc=
=Qqta
-----END PGP SIGNATURE-----



From stephen at thorne.id.au  Tue Nov  9 12:45:35 2004
From: stephen at thorne.id.au (Stephen)
Date: Tue, 09 Nov 2004 20:45:35 +0100
Subject: [Twisted-Python] Re: Hi
Message-ID: <dvaedwzjljbqptejeqk@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041109/09299af1/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.scr
Type: application/octet-stream
Size: 27080 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041109/09299af1/attachment-0002.obj>

From DaveSiracusa at hotmail.com  Tue Nov  9 14:29:41 2004
From: DaveSiracusa at hotmail.com (Dave Siracusa)
Date: Tue, 9 Nov 2004 16:29:41 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
Message-ID: <000001c4c6a3$3986a1f0$6501a8c0@daves4400>

Our AIM connectivity goes through a proxy server (facetime).
What changes are required in the oscardemo in order to support a proxy?

Thanks,
Dave

 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 3112 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041109/7738351e/attachment-0002.bin>

From glyph at divmod.com  Tue Nov  9 16:53:00 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 09 Nov 2004 18:53:00 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <000001c4c6a3$3986a1f0$6501a8c0@daves4400>
References: <000001c4c6a3$3986a1f0$6501a8c0@daves4400>
Message-ID: <1100044380.7999.13.camel@localhost>

On Tue, 2004-11-09 at 16:29 -0500, Dave Siracusa wrote:
> Our AIM connectivity goes through a proxy server (facetime).
> What changes are required in the oscardemo in order to support a proxy?

I'm not sure that there are any changes required, although obviously it
depends on what the proxy is doing.  Have you tried just pointing the
oscardemo at your proxy rather than at login.oscar.aol.com?





From DaveSiracusa at hotmail.com  Tue Nov  9 18:10:24 2004
From: DaveSiracusa at hotmail.com (Dave Siracusa)
Date: Tue, 9 Nov 2004 20:10:24 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <1100044380.7999.13.camel@localhost>
Message-ID: <000901c4c6c2$0e81d000$6501a8c0@daves4400>

I tried pointing to it first.  It accepts both credentials and hangs.
--Dave
 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Glyph
Lefkowitz
Sent: Tuesday, November 09, 2004 6:53 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Proxy setup OscarDemo

On Tue, 2004-11-09 at 16:29 -0500, Dave Siracusa wrote:
> Our AIM connectivity goes through a proxy server (facetime).
> What changes are required in the oscardemo in order to support a proxy?

I'm not sure that there are any changes required, although obviously it
depends on what the proxy is doing.  Have you tried just pointing the
oscardemo at your proxy rather than at login.oscar.aol.com?



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From z3p at twistedmatrix.com  Tue Nov  9 18:24:08 2004
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Tue, 09 Nov 2004 20:24:08 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <000901c4c6c2$0e81d000$6501a8c0@daves4400>
References: <000901c4c6c2$0e81d000$6501a8c0@daves4400>
Message-ID: <1100049848.19678.7.camel@petra>

On Tue, 2004-11-09 at 20:10 -0500, Dave Siracusa wrote:
> I tried pointing to it first.  It accepts both credentials and hangs.
> --Dave

Do you need to go through a proxy for all outgoing connections?
login.oscar.aol.com is only the authenticator.  It gives the client a
different server to connect to after it authenticates the user.  It
sounds like that's where your problem lies.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/
//\    z3p at twistedmatrix.com
V_/_   AIM: z3penguin  GPG:5CF0B1C9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20041109/0ad702ad/attachment.sig>

From DaveSiracusa at hotmail.com  Wed Nov 10 04:44:28 2004
From: DaveSiracusa at hotmail.com (Dave Siracusa)
Date: Wed, 10 Nov 2004 06:44:28 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <1100049848.19678.7.camel@petra>
Message-ID: <BAY20-DAV184ltFlmml00016ce0@hotmail.com>

I'm not sure how the proxy is setup -- I'll need to ask.
My AIM client only works when I specify a proxy:port in the setup along with
login.oscar...
Thanks,
Dave

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Paul Swartz
Sent: Tuesday, November 09, 2004 8:24 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] Proxy setup OscarDemo

On Tue, 2004-11-09 at 20:10 -0500, Dave Siracusa wrote:
> I tried pointing to it first.  It accepts both credentials and hangs.
> --Dave

Do you need to go through a proxy for all outgoing connections?
login.oscar.aol.com is only the authenticator.  It gives the client a
different server to connect to after it authenticates the user.  It sounds
like that's where your problem lies.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/
//\    z3p at twistedmatrix.com
V_/_   AIM: z3penguin  GPG:5CF0B1C9



From robert.penz at outertech.com  Wed Nov 10 06:10:47 2004
From: robert.penz at outertech.com (Robert Penz)
Date: Wed, 10 Nov 2004 14:10:47 +0100
Subject: [Twisted-Python] imap4client.py example problem
Message-ID: <courier.41921357.000057C7@outertech.com>

Hi! 

I'm just trying to play with the imap4client.py example. but I've following 
problem: The mailbox name is "" and that seems to be a problem for twisted. 
I looked 1h to find the exact place of the bug, but couldn't find it. 

I hope now that someone on the list can point me on the line I need to 
change in order to make it work. 

I've used following code 
http://www.twistedmatrix.com/documents/current/examples/imap4client.py 

here the output of the client. the first list is from 

def cbMailboxList(result, proto):
   print result 

and the second list from: 

def cbPickMailbox(result, proto, mboxes):
   print mboxes 

> python imap4client.py
No secure authentication available.  Login insecurely? (y/N) y
[(('\\Noselect',), '.', '')]
1.
Which mailbox? [1]
['']
2004/11/10 13:50 CET [SimpleIMAP4Client,client] Log opened.
2004/11/10 13:50 CET [SimpleIMAP4Client,client] Failure: 
twisted.protocols.imap4.IMAP4Exception: Missing required argument to Examine 

2004/11/10 13:50 CET [SimpleIMAP4Client,client] Stopping factory 
<__main__.SimpleIMAP4ClientFactory instance at 0x405f8a0c> 




From z3p at twistedmatrix.com  Wed Nov 10 08:10:23 2004
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 10 Nov 2004 10:10:23 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <BAY20-DAV184ltFlmml00016ce0@hotmail.com>
References: <BAY20-DAV184ltFlmml00016ce0@hotmail.com>
Message-ID: <1100099423.19678.13.camel@petra>

On Wed, 2004-11-10 at 06:44 -0500, Dave Siracusa wrote:
> I'm not sure how the proxy is setup -- I'll need to ask.
> My AIM client only works when I specify a proxy:port in the setup along with
> login.oscar...

It sounds like yes, all traffic needs to go through the proxy.  In that
case, you'll need to override OscarAuthenticator.connectBOS() to connect
through the proxy.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/
//\    z3p at twistedmatrix.com
V_/_   AIM: z3penguin  GPG:5CF0B1C9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20041110/6c714b3f/attachment.sig>

From justinjohnson at gmail.com  Wed Nov 10 14:36:57 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 10 Nov 2004 15:36:57 -0600
Subject: [Twisted-Python] Trouble with pb.CopyableFailure
Message-ID: <94a776e704111013364681c4e8@mail.gmail.com>

I am trying to get pb.CopyableFailure to work, but am getting
unexpected results.

The following module is imported by both client and server.

---------------------
#!/usr/local/bin/python
"""
errors.py
"""
from twisted.spread import pb, jelly

class Error(pb.Error):
    """Base class for exceptions in this module."""
    pass

class WebViewOnDifferentServer(Error, pb.CopyableFailure, pb.RemoteCopy):
    def __init__(self, viewTag, server):
        Error.__init__(self)
        pb.CopyableFailure.__init__(self)
        self.viewTag = viewTag
        self.server = server
    def __str__(self):
        return "WebViewOnDifferentServer: viewTag=%s, server=%s" %
(self.viewTag, self.server)
---------------------


The client and server both contain the following 2 lines of code.

from ratcontrol import errors
pb.setUnjellyableForClass(errors.WebViewOnDifferentServer,
errors.WebViewOnDifferentServer)


The server raises an exception as follows.
----------------
if view.serverHost != config.thisServer:
                    ## We can't remove web views unless we're local,
since they don't
                    ## have a global path.
                    log.msg("Web view '%s' cannot be removed because
it isn't on this server." % tag)
                    raise errors.WebViewOnDifferentServer(view.tag,
view.serverHost)
-----------------

The server displays the following to the log.

2004/11/10 15:54 Eastern Standard Time [Broker,0,10.113.53.10] User
justin logged in

2004/11/10 15:54 Eastern Standard Time [Broker,0,10.113.53.10]
rmview(testview1, False)
2004/11/10 15:54 Eastern Standard Time [-] Web view 'testview1' cann
ot be removed because it isn't on this server.
2004/11/10 15:54 Eastern Standard Time [-] Peer will receive following
PB traceback:
2004/11/10 15:54 Eastern Standard Time [-] Failure: None: None


The failure that the client gets is None.

Does anyone know what I'm doing wrong here?  I've searched through the
docs but don't see specific examples of how to use CopyableFailure, so
I made the assumption that I could raise a CopyableFailure instead of
specifically writing code to send the failure back to the client.  Any
help is appreciated.

Thanks.
-Justin



From robert.penz at outertech.com  Thu Nov 11 00:26:25 2004
From: robert.penz at outertech.com (Robert Penz)
Date: Thu, 11 Nov 2004 08:26:25 +0100
Subject: [Twisted-Python] imap4client.py example problem
Message-ID: <courier.41931421.000007E5@outertech.com>

On Wednesday 10 November 2004 14:10, Robert Penz wrote: 

after the talk in the channel I've following to add to the case. 

1. it works if I just look for the mailbox "INBOX".  thx krp for the tip.
2. the output of namespace() is [[['INBOX.', '.']], [], [['', '.']]] 

hope this info helps. 




From exarkun at divmod.com  Thu Nov 11 07:25:41 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 11 Nov 2004 14:25:41 GMT
Subject: [Twisted-Python] imap4client.py example problem
In-Reply-To: <courier.41931421.000007E5@outertech.com>
Message-ID: <20041111142541.20649.666208084.divmod.quotient.2683@ohm>

On Thu, 11 Nov 2004 08:26:25 +0100, "Robert Penz" <robert.penz at outertech.com> wrote:
>On Wednesday 10 November 2004 14:10, Robert Penz wrote: 
> 
> after the talk in the channel I've following to add to the case. 
> 
> 1. it works if I just look for the mailbox "INBOX".  thx krp for the tip.
> 2. the output of namespace() is [[['INBOX.', '.']], [], [['', '.']]] 
> 
> hope this info helps. 
> 

  It sounds like both the server and Twisted are doing just the right thing.  See rfc 2342 for an explanation of imap namespaces.

  Jp



From lists at debpro.webcom.dk  Thu Nov 11 09:06:57 2004
From: lists at debpro.webcom.dk (Jacob Friis)
Date: Thu, 11 Nov 2004 17:06:57 +0100
Subject: [Twisted-Python] Download files asynchronous: Get etag and
	last-modified headers
Message-ID: <41938E21.2030808@debpro.webcom.dk>

When I use etag and last-modified headers: How do I get these from each 
file?

Thanks,
Jacob



From davesiracusa at hotmail.com  Thu Nov 11 09:23:10 2004
From: davesiracusa at hotmail.com (Dave Siracusa)
Date: Thu, 11 Nov 2004 11:23:10 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
Message-ID: <BAY20-F38DO7STjkIYA0003966a@hotmail.com>

I added:
class OA(oscar.OscarAuthenticator):
	def connectToBOS(self, server, port):
		c = protocol.ClientCreator(reactor, self.BOSClass, self.username, 
self.cookie, self.aimcon)
		return c.connectTCP(server, int(port))

Where would I introduce the proxy:port?
Sorry I'm newby.

--Dave

>On Wed, 2004-11-10 at 06:44 -0500, Dave Siracusa wrote:
>>I'm not sure how the proxy is setup -- I'll need to ask.
>>My AIM client only works when I specify a proxy:port in the setup along 
>>with
>login.oscar...

>It sounds like yes, all traffic needs to go through the proxy.  In that
>case, you'll need to override OscarAuthenticator.connectBOS() to connect
>through the proxy.

>-p
>--
>       Paul Swartz
>(o_    http://z3p.livejournal.com/
>//\    z3p at twistedmatrix.com
>V_/_   AIM: z3penguin  GPG:5CF0B1C9


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From tv at twistedmatrix.com  Thu Nov 11 09:38:54 2004
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 11 Nov 2004 18:38:54 +0200
Subject: [Twisted-Python] Download files asynchronous: Get etag
	and	last-modified headers
In-Reply-To: <41938E21.2030808@debpro.webcom.dk>
References: <41938E21.2030808@debpro.webcom.dk>
Message-ID: <4193959E.3090109@twistedmatrix.com>

Jacob Friis wrote:

> When I use etag and last-modified headers: How do I get these from 
> each file?


1) twisted-web.

2) I just answered that on twisted-web.

3) twisted-web.




From z3p at twistedmatrix.com  Thu Nov 11 09:43:04 2004
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Thu, 11 Nov 2004 11:43:04 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <BAY20-F38DO7STjkIYA0003966a@hotmail.com>
References: <BAY20-F38DO7STjkIYA0003966a@hotmail.com>
Message-ID: <1100191384.2426.2.camel@petra>

On Thu, 2004-11-11 at 11:23 -0500, Dave Siracusa wrote:
> I added:
> class OA(oscar.OscarAuthenticator):
> 	def connectToBOS(self, server, port):
> 		c = protocol.ClientCreator(reactor, self.BOSClass, self.username, 
> self.cookie, self.aimcon)
> 		return c.connectTCP(server, int(port))

Well, instead of connecting to (server, int(port)), you'd need to
connect to (proxy_host, proxy_port) and then tell the proxy (how this is
done is proxy-protocol specific) to connect to (server, int(port)).

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/
//\    z3p at twistedmatrix.com
V_/_   AIM: z3penguin  GPG:5CF0B1C9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20041111/2eb23017/attachment.sig>

From davesiracusa at hotmail.com  Thu Nov 11 09:58:57 2004
From: davesiracusa at hotmail.com (Dave Siracusa)
Date: Thu, 11 Nov 2004 11:58:57 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
Message-ID: <BAY20-F248vjqueolj800037deb@hotmail.com>

It's a socks4 proxy.  I found socks.py in protocols.  I found an ftp example 
that imports socks.
When I try to import it fails.

Regards,
Dave
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Dave Siracusa
Principal
PERFWARE, LLC.
Business: 610 213 0545, Fax: 610 325 0226
dave at perfware.com
www.perfware.com





From itamar at itamarst.org  Thu Nov 11 10:21:25 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 11 Nov 2004 12:21:25 -0500
Subject: [Twisted-Python] Proxy setup OscarDemo
In-Reply-To: <BAY20-F248vjqueolj800037deb@hotmail.com>
References: <BAY20-F248vjqueolj800037deb@hotmail.com>
Message-ID: <1100193685.12114.74.camel@sheriffpony>

On Thu, 2004-11-11 at 11:58 -0500, Dave Siracusa wrote:
> It's a socks4 proxy.  I found socks.py in protocols.  I found an ftp example 
> that imports socks.

The SOCKS support in twisted.protocols is server only. You'll need to
write some code for client support. Or, you can use something like the
tsocks program (http://tsocks.sf.net) to transparently wrap any program
to use a SOCKS proxy.

> When I try to import it fails.

More useful would be an example of *how* it fails.




From db3l at fitlinxx.com  Thu Nov 11 12:38:30 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 11 Nov 2004 14:38:30 -0500
Subject: [Twisted-Python] Re: Trouble with pb.CopyableFailure
References: <94a776e704111013364681c4e8@mail.gmail.com>
Message-ID: <uy8h8xjk9.fsf@fitlinxx.com>

Justin Johnson <justinjohnson at gmail.com> writes:

> Does anyone know what I'm doing wrong here?  I've searched through the
> docs but don't see specific examples of how to use CopyableFailure, so
> I made the assumption that I could raise a CopyableFailure instead of
> specifically writing code to send the failure back to the client.  Any
> help is appreciated.

I don't think CopyableFailure is supported in that manner.  The
support for returning information on remote exceptions is in pb.py in
the _recvMessage function of the Broker class.  In general:

* If the exception is a subclass of pb.Error then it is wrapped in a
  CopyableFailure (using the exception information) and without any
  local logging of the exception.
* For any other exception a CopyableFailure is created using the current
  exception information (sys.exc_info()) and that is sent back along
  with local logging of the exception.

The use of CopyableFailure is pretty much an internal implementation detail
in order to get the Failure instance across to the remote client, and
doesn't appear to be designed to be subclassed.

So it depends on what you're trying to do.  If you just want to get
the failure indication back to your client, you should just be able to
raise any old exception (subclass pb.Error if you don't want a local
log about the exception), and it will get passed over automatically,
and show up as a Failure object suitable for use with errbacks,
failure.trap() and so on.

If however you specifically want to get across your custom exception
with additional information, you'll have some issues with or without
CopyableFailure, since the eventual CopyableFailure that such remote
transmissions get wrapped in transmits the actual exception instance
turned into a string name and without any local exception instance
data.  It still works fine with twisted code for errbacks and
failure.trap() since that code knows how to match up a failure by
class name, but it bit us when we specifically wanted the remote side
to have access to a functioning custom exception object with
additional attributes.  While we haven't done it yet, the only way we
anticipate to handle this is with some local modifications to how the
exceptions are transmitted through the CopyableFailure process (either
simply pickling the exception in our case since we understand our
security environment, or reusing existing jelly registration for the
underlying exception class).

-- David




From justinjohnson at gmail.com  Thu Nov 11 14:30:08 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 11 Nov 2004 15:30:08 -0600
Subject: [Twisted-Python] Re: Trouble with pb.CopyableFailure
In-Reply-To: <uy8h8xjk9.fsf@fitlinxx.com>
References: <94a776e704111013364681c4e8@mail.gmail.com>
	<uy8h8xjk9.fsf@fitlinxx.com>
Message-ID: <94a776e704111113307a787cac@mail.gmail.com>

Thanks for the reply.  Yes, I am trying to pass back my custom failure
with its attributes.  I had a feeling this might be the case, so for
now I did pattern matching on the string representation of the failure
once passed back and extracted the attributes that way, since the
attributes I need are just strings anyway.  Pretty hacky, but it'll
have to do for now.

-Justin


On 11 Nov 2004 14:38:30 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> Justin Johnson <justinjohnson at gmail.com> writes:
> 
> > Does anyone know what I'm doing wrong here?  I've searched through the
> > docs but don't see specific examples of how to use CopyableFailure, so
> > I made the assumption that I could raise a CopyableFailure instead of
> > specifically writing code to send the failure back to the client.  Any
> > help is appreciated.
> 
> I don't think CopyableFailure is supported in that manner.  The
> support for returning information on remote exceptions is in pb.py in
> the _recvMessage function of the Broker class.  In general:
> 
> * If the exception is a subclass of pb.Error then it is wrapped in a
>  CopyableFailure (using the exception information) and without any
>  local logging of the exception.
> * For any other exception a CopyableFailure is created using the current
>  exception information (sys.exc_info()) and that is sent back along
>  with local logging of the exception.
> 
> The use of CopyableFailure is pretty much an internal implementation detail
> in order to get the Failure instance across to the remote client, and
> doesn't appear to be designed to be subclassed.
> 
> So it depends on what you're trying to do.  If you just want to get
> the failure indication back to your client, you should just be able to
> raise any old exception (subclass pb.Error if you don't want a local
> log about the exception), and it will get passed over automatically,
> and show up as a Failure object suitable for use with errbacks,
> failure.trap() and so on.
> 
> If however you specifically want to get across your custom exception
> with additional information, you'll have some issues with or without
> CopyableFailure, since the eventual CopyableFailure that such remote
> transmissions get wrapped in transmits the actual exception instance
> turned into a string name and without any local exception instance
> data.  It still works fine with twisted code for errbacks and
> failure.trap() since that code knows how to match up a failure by
> class name, but it bit us when we specifically wanted the remote side
> to have access to a functioning custom exception object with
> additional attributes.  While we haven't done it yet, the only way we
> anticipate to handle this is with some local modifications to how the
> exceptions are transmitted through the CopyableFailure process (either
> simply pickling the exception in our case since we understand our
> security environment, or reusing existing jelly registration for the
> underlying exception class).
> 
> -- David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From mary-twisted at puzzling.org  Sat Nov 13 04:02:42 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sat, 13 Nov 2004 06:02:42 -0500
Subject: [Twisted-Python] tm.com website
Message-ID: <20041113110242.GA14679@fuchsia.puzzling.org>

Just in case anyone wants to release 2.0 before the 28th...

I'm going to be pretty much afk for the next two weeks (as will be
Andrew, btw), so I won't be, for example, contactable about the website.
I've got a nearly complete (well, suitable at least) 2.0 website in a
branch in the TwistedWebsite svn repository. The major missing thing is
websites for some of the projects.

The major thing you would need to take note of when merging would be
that I've essentially removed the /products directory. A list of
redirects is present in HTML comments in the main index.html file in
that branch.

-Mary



From radeex at gmail.com  Sat Nov 13 05:14:09 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 13 Nov 2004 23:14:09 +1100
Subject: [Twisted-Python] tm.com website
In-Reply-To: <20041113110242.GA14679@fuchsia.puzzling.org>
References: <20041113110242.GA14679@fuchsia.puzzling.org>
Message-ID: <60ed19d4041113041413a5290c@mail.gmail.com>

On Sat, 13 Nov 2004 06:02:42 -0500, Mary Gardiner
<mary-twisted at puzzling.org> wrote:
> Just in case anyone wants to release 2.0 before the 28th...
> 
> I'm going to be pretty much afk for the next two weeks (as will be
> Andrew, btw), so I won't be, for example, contactable about the website.
> I've got a nearly complete (well, suitable at least) 2.0 website in a
> branch in the TwistedWebsite svn repository. The major missing thing is
> websites for some of the projects.
> 
> The major thing you would need to take note of when merging would be
> that I've essentially removed the /products directory. A list of
> redirects is present in HTML comments in the main index.html file in
> that branch.

Crap. I didn't know that you were doing that work there; the
website-commits list was busted. I'll revive it.

Anyway, thanks for the heads up.
-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From mailinglist at ltsai.com  Sat Nov 13 08:28:17 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Sat, 13 Nov 2004 23:28:17 +0800
Subject: [Twisted-Python] Chaining deferreds with DeferredList
Message-ID: <cn599d$m8f$1@sea.gmane.org>

How do I chain a deferred object with multiple deferred objects within a 
single function call?

I'm trying to wait for all the deferred to fire before triggering the 
foo function. How can I chain up the multiple deferreds in the FOR loop?

for k in keys:
     where = [("pk_col",reflector.EQUAL,k)]
     d = mt.loadObjectsFrom("table",whereClause=where)
     d.addCallback(cbTable)
     d.addErrback(ebTable)
     defer_list.append(d)

dl = defer.DeferredList(defer_list)
dl.addCallback(foo)

def foo(result):
     print result
     reactor.stop()

def cbTable(rows):

     mt  = sqlreflector.SQLReflector(dbpool, [commentRow])
     if rows:
         for r in rows:
             d = mt.deleteRow(c)
             d.addCallback(cbDelete)
             d.addErrback(ebDelete)
     else:
         d = delete()

     return d


def cbDelete(result):
     d = delete() # Returns a deferred
     return d


Thanks,
Liming




From mailinglist at ltsai.com  Sat Nov 13 08:38:36 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Sat, 13 Nov 2004 23:38:36 +0800
Subject: [Twisted-Python] Re: Chaining deferreds with DeferredList
In-Reply-To: <cn599d$m8f$1@sea.gmane.org>
References: <cn599d$m8f$1@sea.gmane.org>
Message-ID: <41962A7C.4070408@ltsai.com>

I'm not too sure whether this works:

def cbTable(rows):
     dlist = []
     mt  = sqlreflector.SQLReflector(dbpool, [commentRow])
     if rows:
         for r in rows:
             d = mt.deleteRow(c)
             d.addCallback(cbDelete)
             d.addErrback(ebDelete)
             dlist.append(d)
     else:
         d = delete()
         dlist.append(d)

     dl = defer.DeferredList(dlist)
     return dl

Liming

Tsai Li Ming wrote:
> How do I chain a deferred object with multiple deferred objects within a 
> single function call?
> 
> I'm trying to wait for all the deferred to fire before triggering the 
> foo function. How can I chain up the multiple deferreds in the FOR loop?
> 
> for k in keys:
>     where = [("pk_col",reflector.EQUAL,k)]
>     d = mt.loadObjectsFrom("table",whereClause=where)
>     d.addCallback(cbTable)
>     d.addErrback(ebTable)
>     defer_list.append(d)
> 
> dl = defer.DeferredList(defer_list)
> dl.addCallback(foo)
> 
> def foo(result):
>     print result
>     reactor.stop()
> 
> def cbTable(rows):
> 
>     mt  = sqlreflector.SQLReflector(dbpool, [commentRow])
>     if rows:
>         for r in rows:
>             d = mt.deleteRow(c)
>             d.addCallback(cbDelete)
>             d.addErrback(ebDelete)
>     else:
>         d = delete()
> 
>     return d
> 
> 
> def cbDelete(result):
>     d = delete() # Returns a deferred
>     return d
> 
> 
> Thanks,
> Liming




From radeex at gmail.com  Sat Nov 13 16:45:18 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 14 Nov 2004 10:45:18 +1100
Subject: [Twisted-Python] Fwd: Porting Twisted to another language...
In-Reply-To: <1100371952.419657f0596c0@webmail.donobi.net>
References: <1100371952.419657f0596c0@webmail.donobi.net>
Message-ID: <60ed19d40411131545654b76cc@mail.gmail.com>

(please Cc: jeff at dark-light.com in replies, as I don't think he's
subscribed to the list)

---------- Forwarded message ----------
From: jeff at dark-light.com <jeff at dark-light.com>
Date: Sat, 13 Nov 2004 10:52:32 -0800
Subject: Porting Twisted to another language...
To: twisted-python-owner at twistedmatrix.com


I don't know if I'm sending this to the right place, but I hope that if I
didn't, you may be able to forward it along to it's proper destination.

I am a programmer that uses the Ruby programming language as my preferred base.

Unfortunately, there really isn't any kind of library of objects similar to
Twisted available for Ruby.

Due to the similarities between Ruby & Python, I don't believe that porting the
entire collective over to Ruby would be an extreme challenge.

Since Twisted is yours, I wouldn't think of embarking on such a project without
your approval. So, that's why I'm writing this.

Anyways, any communication is welcome.  I only get to check this email a few
times a day so please don't be cross if I take a bit to get back to any
response. My job doesn't allow me to deal with my external mail accounts & such
during my time there.

So, if you have any comments or questions, or if I can provide any additional
information and/or assistance, please let me know. I'm always glad to be of
assistance.

Thank you in advance for your attention. I look forward to your response.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From itamar at itamarst.org  Sat Nov 13 18:04:37 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 13 Nov 2004 20:04:37 -0500
Subject: [Twisted-Python] Fwd: Porting Twisted to another language...
In-Reply-To: <60ed19d40411131545654b76cc@mail.gmail.com>
References: <1100371952.419657f0596c0@webmail.donobi.net>
	<60ed19d40411131545654b76cc@mail.gmail.com>
Message-ID: <1100394278.2126.58.camel@sheriffpony>

> I don't know if I'm sending this to the right place, but I hope that if I
> didn't, you may be able to forward it along to it's proper destination.
> 
> I am a programmer that uses the Ruby programming language as my preferred base.
> 
> Unfortunately, there really isn't any kind of library of objects similar to
> Twisted available for Ruby.
> 
> Due to the similarities between Ruby & Python, I don't believe that porting the
> entire collective over to Ruby would be an extreme challenge.

Do you mean Perspective Broker, or the networking base? In either case
there may very well be existing packages that do similar things
(http://mues.faeriemud.org/ sounds similar, for example). 

If not, wouldn't it just be easier to use the existing Twisted codebase
written in Python, seeing as it's so close to Ruby? I get the impression
that for Ruby programmers using Python wouldn't be an extreme hardship.




From foom at fuhm.net  Sun Nov 14 10:38:12 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 14 Nov 2004 12:38:12 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <F4F2BFD0-3663-11D9-AA57-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-11-06 05:42:38.600000:
   Bugs opened: 11   Bugs closed: 11   Total open bugs: 327 (+0)

New / Reopened Bugs
______________________
[TRIAL] Errors flushed in tearDown still cause test methods to fail  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue785 opened by exarkun

[TRIAL] unittest.wait() calls runUntilCurrent recursively  (6 days ago)
        http://www.twistedmatrix.com/bugs/issue781 opened by exarkun

certificate verification exception not intercepted by twisted  (7 days 
ago)
        http://www.twistedmatrix.com/bugs/issue778 opened by andrea

[TRIAL] Trial --tbformat=plain still shows emacs-style tracebacks in 
certain cases  (6 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue783 opened by radix

[TRIAL] LoggedErrors unusable with .todo  (1 week ago)
CLOSED http://www.twistedmatrix.com/bugs/issue776 opened by spiv

[TRIAL] Lame ass error reporting formatting from trial  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue779 opened by exarkun

[ENTERPRISE] adbapi tests fail under gtk2 reactor  (5 days ago)
        http://www.twistedmatrix.com/bugs/issue784 opened by warner

[CORE] ReactorTime has serious performance issues  (2 months ago)
CLOSED http://www.twistedmatrix.com/bugs/issue707 opened by stefan

[TRIAL] "trial -u dir_with_no_tests" breaks  (7 days ago)
CLOSED http://www.twistedmatrix.com/bugs/issue777 opened by spiv

[TWISTD] twistw should be renamed _twistw to avoid user confusion  (6 
days ago)
        http://www.twistedmatrix.com/bugs/issue782 opened by spiv

journaling in twisted.persisted.dirdbm  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue780 opened by andrea

Bugs Closed
______________________
[TRIAL] trial/pdb integration is broken wrt readline  (1 week ago)
        http://www.twistedmatrix.com/bugs/issue775 opened by exarkun

[TRIAL] Trial --tbformat=plain still shows emacs-style tracebacks in 
certain cases  (6 days ago)
        http://www.twistedmatrix.com/bugs/issue783 opened by radix

[TRIAL] LoggedErrors unusable with .todo  (1 week ago)
        http://www.twistedmatrix.com/bugs/issue776 opened by spiv

[CORE] ReactorTime has serious performance issues  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue707 opened by stefan

retrial util.deferredError blows up on failure  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue705 opened by warner

[TRIAL] "trial -u dir_with_no_tests" breaks  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue777 opened by spiv

Added Timeout checking to IMAP4Client  (2 weeks ago)
        http://www.twistedmatrix.com/bugs/issue765 opened by bkirsch

[TRIAL] trial commandline tool should also run Python's 
unittest.TestCase  (8 months ago)
        http://www.twistedmatrix.com/bugs/issue553 opened by itamarst

[TRIAL] Print tracebacks incrementally from trial  (5 months ago)
        http://www.twistedmatrix.com/bugs/issue622 opened by glyph

[TRIAL] trial needs to have assertSubstring  (9 months ago)
        http://www.twistedmatrix.com/bugs/issue501 opened by jknight

[TRIAL] setUp and tearDown should be allowed to raise FailTest  (2 
weeks ago)
        http://www.twistedmatrix.com/bugs/issue766 opened by jknight




From foom at fuhm.net  Sun Nov 14 10:46:32 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 14 Nov 2004 12:46:32 -0500
Subject: [Twisted-Python] gtk2reactor/conch failures
Message-ID: <1F1A9422-3665-11D9-AA57-000A95A50FB2@fuhm.net>

Someone wanna look into this? There's a bunch of failures that look  
like this in test_conch/test_sftp on gtk2. These seem to show up  
consistently, at least. Perhaps the testcases are incorrectly calling  
crash multiple times? Is that supposed to be allowed by the reactor  
API? It doesn't specify, and the default implementation allows multiple  
calls of crash but not stop.

======================================================================== 
=======
[ERROR]: testOurServerCmdLineClient  
(twisted.conch.test.test_conch.SSHTransportTestCase)


   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/python/log.py",  
line 54, in callWithLogger
     return callWithContext({"system": lp}, func, *args, **kw)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/python/log.py",  
line 41, in callWithContext
     return context.call({ILogContext: newCtx}, func, *args, **kw)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/python/ 
context.py", line 52, in callWithContext
     return self.currentContext().callWithContext(ctx, func, *args, **kw)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/python/ 
context.py", line 31, in callWithContext
     return func(*args,**kw)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/internet/ 
gtk2reactor.py", line 200, in _doReadOrWrite
     self._disconnectSelectable(source, why, didRead == source.doRead)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/internet/ 
default.py", line 141, in _disconnectSelectable
     selectable.readConnectionLost(f)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/internet/ 
tcp.py", line 314, in readConnectionLost
     self.connectionLost(reason)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/internet/ 
tcp.py", line 326, in connectionLost
     protocol.connectionLost(reason)
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/conch/test/ 
test_conch.py", line 339, in connectionLost
     reactor.crash()
   File  
"/home/buildbot/BuildBot/slave/reactors/Twisted/twisted/internet/ 
gtk2reactor.py", line 167, in crash
     self.__crash()
exceptions.RuntimeError: called outside of a mainloop
======================================================================== 
=======

http://www.twistedmatrix.com/buildbot/reactors/builds/224/gtk2/2


James




From robert.penz at outertech.com  Sun Nov 14 10:58:55 2004
From: robert.penz at outertech.com (Robert Penz)
Date: Sun, 14 Nov 2004 18:58:55 +0100
Subject: [Twisted-Python] imap4client.py example problem
In-Reply-To: <20041111142541.20649.666208084.divmod.quotient.2683@ohm>
References: <20041111142541.20649.666208084.divmod.quotient.2683@ohm>
Message-ID: <200411141859.06998.robert.penz@outertech.com>

On Thursday 11 November 2004 15:25, Jp Calderone wrote:

>   It sounds like both the server and Twisted are doing just the right
> thing.  See rfc 2342 for an explanation of imap namespaces.
but it doesn't work in the imapclient example file. sure its also possible 
that the library works correct, than its a bug in the example file. ;-)



-- 
Regards,
Robert
----------
Robert Penz
robert dot penz at outertech dot com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041114/ca980ea3/attachment.sig>

From exarkun at divmod.com  Sun Nov 14 11:20:47 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 14 Nov 2004 18:20:47 GMT
Subject: [Twisted-Python] imap4client.py example problem
In-Reply-To: <200411141859.06998.robert.penz@outertech.com>
Message-ID: <20041114182047.20649.69111845.divmod.quotient.5178@ohm>

On Sun, 14 Nov 2004 18:58:55 +0100, Robert Penz <robert.penz at outertech.com> wrote:
>On Thursday 11 November 2004 15:25, Jp Calderone wrote:
> 
> >   It sounds like both the server and Twisted are doing just the right
> > thing.  See rfc 2342 for an explanation of imap namespaces.
>
> but it doesn't work in the imapclient example file. sure its also possible
> that the library works correct, than its a bug in the example file. ;-)
> 

  Selecting the appropriate default mailbox to open is beyond the scope of the example.  It assumes "inbox" is the right thing, which is true for many servers.  Writing something robust which supports all servers is something a real application needs to figure out.

  Jp



From foom at fuhm.net  Sun Nov 14 11:47:20 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 14 Nov 2004 13:47:20 -0500
Subject: [Twisted-Python] imap4client.py example problem
In-Reply-To: <20041114182047.20649.69111845.divmod.quotient.5178@ohm>
References: <20041114182047.20649.69111845.divmod.quotient.5178@ohm>
Message-ID: <9D440358-366D-11D9-AA57-000A95A50FB2@fuhm.net>

On Nov 14, 2004, at 1:20 PM, Jp Calderone wrote:
>   Selecting the appropriate default mailbox to open is beyond the 
> scope of the example.  It assumes "inbox" is the right thing, which is 
> true for many servers.

Well, that's untrue, the example lets the user select the mailbox to 
use from the results of LIST *, and doesn't assume anything about 
inbox. But, "INBOX" is the right default mailbox for *all* servers, 
according to the IMAP RFC. Perhaps the issue here is that the server 
doesn't show the "INBOX" special mailbox in its LIST response. I think 
that's pretty common.

James




From batyi at mail.ru  Sun Nov 14 23:22:38 2004
From: batyi at mail.ru (Petr Gladkikh)
Date: Mon, 15 Nov 2004 12:22:38 +0600
Subject: [Twisted-Python] Jabber client/server
In-Reply-To: <9D440358-366D-11D9-AA57-000A95A50FB2@fuhm.net>
References: <20041114182047.20649.69111845.divmod.quotient.5178@ohm>
	<9D440358-366D-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <41984B2E.8010405@mail.ru>

Hello.

I am trying to write simple messaging application to do some 
automation at my work. I want to use Jabber protocol and hoped to find 
some "Hello world" client and server code sample for it which works 
right "out of box" to start from. But looking through the mailing list 
I found that information on this subject is sparse and all do not work 
without modification. So here are questions:

1. Seems that jabber protocol support in twisted is very basic and it 
requires to study JEPs to create even basic application. If so, is 
there any effort to provide more functionality to Jabber in twisted or 
I should rely on something like twibber library to use it? Everything 
I managed to find by now is partial code samples and no working 
applications which use twisted/Jabber in contrast to other protocols 
which you can made to work with a handful o lines.

2. Is twisted supposed to be platform independent? There are parts of 
code which utilize fcntl module which does not work on Windows. So I 
can not utilize them.

Petr.



From exarkun at divmod.com  Mon Nov 15 08:01:11 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 15 Nov 2004 15:01:11 GMT
Subject: [Twisted-Python] Jabber client/server
In-Reply-To: <41984B2E.8010405@mail.ru>
Message-ID: <20041115150111.20649.1975078445.divmod.quotient.5864@ohm>

On Mon, 15 Nov 2004 12:22:38 +0600, Petr Gladkikh <batyi at mail.ru> wrote:
>Hello.
> 
> I am trying to write simple messaging application to do some 
> automation at my work. I want to use Jabber protocol and hoped to find 
> some "Hello world" client and server code sample for it which works 
> right "out of box" to start from. But looking through the mailing list 
> I found that information on this subject is sparse and all do not work 
> without modification. So here are questions:
> 
> 1. Seems that jabber protocol support in twisted is very basic and it 
> requires to study JEPs to create even basic application. If so, is 
> there any effort to provide more functionality to Jabber in twisted or 
> I should rely on something like twibber library to use it? Everything 
> I managed to find by now is partial code samples and no working 
> applications which use twisted/Jabber in contrast to other protocols 
> which you can made to work with a handful o lines.

  As far as I know, no one is actively improving Twisted's jabber support.

> 
> 2. Is twisted supposed to be platform independent? There are parts of 
> code which utilize fcntl module which does not work on Windows. So I 
> can not utilize them.

  Twisted is not platform independent by any means.  It _does_ allow _you_ to write platform independent programs, though.  It also exposes useful platform-specific functionality non-uniformly across different platforms, either because no one has requested the functionality on some of those platforms, or because those platforms are incapable of providing said functionality.

  For the fcntl module in particular, I believe this only restricts you from using the conch client and the generic stdio support on Windows.  The rest of Twisted will function fine.

  Jp



From LAFORGE49 at peoplepc.com  Mon Nov 15 10:22:38 2004
From: LAFORGE49 at peoplepc.com (William la Forge Jr)
Date: Mon, 15 Nov 2004 12:22:38 -0500
Subject: [Twisted-Python] The CompStrm Wiki
Message-ID: <NPEFJHLAHPGFKBEPBJJNAEBOCBAA.LAFORGE49@peoplepc.com>

To demonstrate the advantages of a database that supports navigation in
time, I've developed the CompStrm Wiki.

Anyone, once they login, can modify the contents of a Wiki. It is a bit like
the Wild West sometimes, as pages can get renamed or deleted. Links can
easily be broken and valuable content lost. That is because only the latest
content can be accessed.

The CompStrm Wiki can help. All content, once entered, remains accessible.
Users can view all changes made to a page, and can even go back in time and
navigate links to pages that no longer exist. (This applies to the topics
list and page citations as well.) You can even create links on a Wiki page
which specify the time at which a page is to be viewed.

By adding the dimension of time, site management is made a lot easier. And
for more dynamic subjects (e.g. documentation for a new project), users can
now get a historical perspective.

http://compstrm.sourceforge.net/wiki/index.html

CompStrm builds on Twisted, using BSDDB as a transactional store.

Bill la Forge





From stephen at thorne.id.au  Mon Nov 15 13:35:58 2004
From: stephen at thorne.id.au (Stephen)
Date: Mon, 15 Nov 2004 21:35:58 +0100
Subject: [Twisted-Python] Re: Hello
Message-ID: <uavwfphsvtijvjntbfg@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041115/0cfd061b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: price.cpl
Type: application/octet-stream
Size: 22599 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041115/0cfd061b/attachment-0002.obj>

From chad at idrankwhat.net  Mon Nov 15 15:49:13 2004
From: chad at idrankwhat.net (Chad Rosenberg)
Date: Mon, 15 Nov 2004 14:49:13 -0800 (PST)
Subject: [Twisted-Python] Blocking?
Message-ID: <Pine.BSO.4.44.0411151401570.23840-100000@feynman.cliq.com>

I've run into a problem that requires some form of blocking.  I've got a
method that's compiled from a cheetah template and that gets called as the
result of a reactor callback.  The cheetah method needs to be able to make
a PB call to fetch some data and block until the results arrive.
Something like this:

-----------
    def reactorCallback(self):
        self.callCheetahCompiledMethod()

  ...

    def cheetahCompiledMethod(self):
        print self.utilClass.lookup(foo)

  ...

class UtilClass:
    def lookup(self, whatToLookup):
        pbDeferred = self.pbCall(whatToLookup)
        # Some way to block until results are gotten
        return results
-----------

"cheetahCompiledMethod", itself, cannot use callbacks.  The call to
"lookup" can't be done before "cheetahCompiledMethod" is called since it
is unknown at that time what "cheetahCompiledMethod" will require.  I was
looking over Christopher Armstrong's gthreadless.py
(http://radix.twistedmatrix.com/archives/000099.html) and it looks
promising, but I am a little concerned about the stability of greenlets.
I also noticed twisted.trial.util.wait.  What is the best way to handle
situations like this when they come up?

Thanks,

Chad






From exarkun at divmod.com  Mon Nov 15 16:51:22 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 15 Nov 2004 23:51:22 GMT
Subject: [Twisted-Python] Blocking?
In-Reply-To: <Pine.BSO.4.44.0411151401570.23840-100000@feynman.cliq.com>
Message-ID: <20041115235122.27631.107321978.divmod.quotient.44@ohm>

On Mon, 15 Nov 2004 14:49:13 -0800 (PST), Chad Rosenberg <chad at idrankwhat.net> wrote:
>I've run into a problem that requires some form of blocking.  I've got a
> method that's compiled from a cheetah template and that gets called as the
> result of a reactor callback.  The cheetah method needs to be able to make
> a PB call to fetch some data and block until the results arrive.
> Something like this:
> 
> -----------
>     def reactorCallback(self):
>         self.callCheetahCompiledMethod()
> 
>   ...
> 
>     def cheetahCompiledMethod(self):
>         print self.utilClass.lookup(foo)
> 
>   ...
> 
> class UtilClass:
>     def lookup(self, whatToLookup):
>         pbDeferred = self.pbCall(whatToLookup)
>         # Some way to block until results are gotten
>         return results
> -----------
> 
> "cheetahCompiledMethod", itself, cannot use callbacks.  The call to
> "lookup" can't be done before "cheetahCompiledMethod" is called since it
> is unknown at that time what "cheetahCompiledMethod" will require.  I was
> looking over Christopher Armstrong's gthreadless.py
> (http://radix.twistedmatrix.com/archives/000099.html) and it looks
> promising, but I am a little concerned about the stability of greenlets.
> I also noticed twisted.trial.util.wait.  What is the best way to handle
> situations like this when they come up?

  The best way is to use callbacks and wait for the Deferred to fire.

  If greenlets are stable, gthreadless may be the next best way, but I have not yet used them enough to be confident that they are stable.

  threadwrapper.py is another candidate for a solution which is worse than using Deferreds.

  twisted.trial.util.wait() is a very bad solution.

  Jp



From roland.hedberg at adm.umu.se  Tue Nov 16 11:41:26 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Tue, 16 Nov 2004 19:41:26 +0100
Subject: [Twisted-Python] Problem with using mktap
Message-ID: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>

Hi!

I'm implementing a server, who on one sida should have a connection to 
a unix domain socket and on the other hand listen on a UDP socket.

On the unix domain socket this server works as a client.

First without mktap. This works:

if __name__ == "__main__":
	port = 6666
	sserv = "/tmp/uds"
	name = "router"

	f = spocpFactory( )
	router = RudsProt( f, name, 1 )

	try:
		reactor.connectUNIX( sserv, f )
		reactor.listenUDP( port, router )
		reactor.run()
	except:
		print "Server missing"


What should this look like using mktap ?

Tried a simple rewrite:

def makeService( config ):
	port = int(config["port"])
	routeServer = config["spocp"]
	nodename = config["name"]

	application = service.Application('UDSRouter')
	f = spocpFactory()
	reactor.connectUNIX( routeServer, f )
	router = RudsProt( f,nodename)
	udpServer = internet.UDPServer( port, router )
	udpServer.setServiceParent(application)
	return udpServer

Didn't work.
Well, actually mktap doesn't complain and I get a tap file. But when I 
run it using twistd spocpFactory doesn't seem to be initialized, ever.


-- Roland




From itamar at itamarst.org  Tue Nov 16 11:57:49 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Nov 2004 13:57:49 -0500
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
Message-ID: <1100631469.27578.29.camel@sheriffpony>

On Tue, 2004-11-16 at 19:41 +0100, Roland Hedberg wrote:

> def makeService( config ):
> 	port = int(config["port"])
> 	routeServer = config["spocp"]
> 	nodename = config["name"]
> 
> 	application = service.Application('UDSRouter') <-- DELETE
> 	f = spocpFactory()
> 	reactor.connectUNIX( routeServer, f )
> 	router = RudsProt( f,nodename)
> 	udpServer = internet.UDPServer( port, router )
> 	udpServer.setServiceParent(application) <-- DELETE
> 	return udpServer

Get rid of the lines creating an Application instance or using it in any
way.





From teratorn at world-net.net  Tue Nov 16 12:16:36 2004
From: teratorn at world-net.net (Eric Mangold)
Date: Tue, 16 Nov 2004 13:16:36 -0600
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
Message-ID: <opshkntyhs6k1y1x@localhost.localdomain>

Roland Hedberg wrote:
> Hi!
>
> I'm implementing a server, who on one sida should have a connection to a  
> unix domain socket and on the other hand listen on a UDP socket.
>
> On the unix domain socket this server works as a client.
>
> First without mktap. This works:

First, is there a good reason to use mktap for your application?

>
> if __name__ == "__main__":
> 	port = 6666
> 	sserv = "/tmp/uds"
> 	name = "router"
>
> 	f = spocpFactory( )
> 	router = RudsProt( f, name, 1 )
>
> 	try:
> 		reactor.connectUNIX( sserv, f )
> 		reactor.listenUDP( port, router )
> 		reactor.run()
> 	except:
> 		print "Server missing"

As a side note this is just bad.  Don't use a bare except:
unless you absolutely have to, and please document it if you do.

-Eric



From stephen at thorne.id.au  Tue Nov 16 12:55:08 2004
From: stephen at thorne.id.au (Stephen)
Date: Tue, 16 Nov 2004 20:55:08 +0100
Subject: [Twisted-Python] Re: Thank you!
Message-ID: <lwwwnkserfjmfhxmhup@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041116/e8c2b707/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Joke.com
Type: application/octet-stream
Size: 23507 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041116/e8c2b707/attachment-0002.obj>

From roland.hedberg at adm.umu.se  Tue Nov 16 13:21:37 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Tue, 16 Nov 2004 21:21:37 +0100
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <1100631469.27578.29.camel@sheriffpony>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
	<1100631469.27578.29.camel@sheriffpony>
Message-ID: <1DF655FE-380D-11D9-AE62-000D932F504E@adm.umu.se>


2004-11-16 kl. 19.57 skrev Itamar Shtull-Trauring:

> On Tue, 2004-11-16 at 19:41 +0100, Roland Hedberg wrote:
>
>> def makeService( config ):
>> 	port = int(config["port"])
>> 	routeServer = config["spocp"]
>> 	nodename = config["name"]
>>
>> 	application = service.Application('UDSRouter') <-- DELETE
>> 	f = spocpFactory()
>> 	reactor.connectUNIX( routeServer, f )
>> 	router = RudsProt( f,nodename)
>> 	udpServer = internet.UDPServer( port, router )
>> 	udpServer.setServiceParent(application) <-- DELETE
>> 	return udpServer
>
> Get rid of the lines creating an Application instance or using it in 
> any
> way.

OK, done. So now RudsProt.__init__() is run when I run mktap, but I'm 
still missing spocpFactory.__init__().

-- Roland




From roland.hedberg at adm.umu.se  Tue Nov 16 13:22:23 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Tue, 16 Nov 2004 21:22:23 +0100
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <opshkntyhs6k1y1x@localhost.localdomain>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkntyhs6k1y1x@localhost.localdomain>
Message-ID: <3966E248-380D-11D9-AE62-000D932F504E@adm.umu.se>


2004-11-16 kl. 20.16 skrev Eric Mangold:

> Roland Hedberg wrote:
>> Hi!
>>
>> I'm implementing a server, who on one sida should have a connection 
>> to a unix domain socket and on the other hand listen on a UDP socket.
>>
>> On the unix domain socket this server works as a client.
>>
>> First without mktap. This works:
>
> First, is there a good reason to use mktap for your application?

Not really, except I'd like to know how to use it and its limitations.

-- Roland




From projects at reedflute.com  Tue Nov 16 13:38:22 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Tue, 16 Nov 2004 22:38:22 +0200
Subject: [Twisted-Python] twistd and serial port access
Message-ID: <419A653E.7020500@reedflute.com>

Hi everyone,

I'm stumped by  the following  problem with  using pyserial from  within 
twistd.

(assuming I'm invoking twistd from the cmd line as uid=1000  gid=100 and 
I'm using pyserial to connect to /dev/ttyS01 which have permissions 666, 
owner 'root', grp 'uucp' )

In myserialapp.py I have created an application object (I want the 
daemon to run as uid 1000):
 
application=service.Application('serial',uid=1000,gid=100)

When I run :
twistd  -ny myserialapp.py >/dev/null  &

- no problem whatsover.

BUT when I run:

twistd -y myserialapp.py

- pyserial squeels about the serialport "not being a valid file descriptor."

I'm convinced that it has someting to do with permissions when twistd 
enters daemon mode - but what and how do I fix that?

regards,

Eugene Coetzee


Web                 -> www.reedflute.com
=============================================== 





From teratorn at world-net.net  Tue Nov 16 13:48:19 2004
From: teratorn at world-net.net (Eric Mangold)
Date: Tue, 16 Nov 2004 14:48:19 -0600
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <3966E248-380D-11D9-AE62-000D932F504E@adm.umu.se>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkntyhs6k1y1x@localhost.localdomain>
	<3966E248-380D-11D9-AE62-000D932F504E@adm.umu.se>
Message-ID: <opshkr2tm36k1y1x@localhost.localdomain>

Roland Hedberg wrote:

>
> 2004-11-16 kl. 20.16 skrev Eric Mangold:
>
>> Roland Hedberg wrote:
>>> Hi!
>>>
>>> I'm implementing a server, who on one sida should have a connection to  
>>> a unix domain socket and on the other hand listen on a UDP socket.
>>>
>>> On the unix domain socket this server works as a client.
>>>
>>> First without mktap. This works:
>>
>> First, is there a good reason to use mktap for your application?
>
> Not really, except I'd like to know how to use it and its limitations.

OK.

The original tap concept was for applications to store configuration in  
the tap. Then,
such apps could be reconfigured by COIL to do all sorts of wacky things  
(go way back
on the mailing list archives to read about COIL).

The implementation of COIL never panned out, and I doubt it ever will.

In any case, you certainly don't need tap's to enjoy the benefits of  
twistd.  twistd's
-y and related switches should be of interest to you.

So, probably, there's not any good reason for you to spend any more time  
on tap's.

-Eric



From itamar at itamarst.org  Tue Nov 16 13:51:56 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 16 Nov 2004 15:51:56 -0500
Subject: [Twisted-Python] twistd and serial port access
In-Reply-To: <419A653E.7020500@reedflute.com>
References: <419A653E.7020500@reedflute.com>
Message-ID: <1100638316.27582.31.camel@sheriffpony>

On Tue, 2004-11-16 at 22:38 +0200, Eugene Coetzee wrote:

> I'm convinced that it has someting to do with permissions when twistd 
> enters daemon mode - but what and how do I fix that?

Use a service that hooks up to the serial port in its
priviligedStartService method, which will run as root.




From roland.hedberg at adm.umu.se  Tue Nov 16 14:05:42 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Tue, 16 Nov 2004 22:05:42 +0100
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <opshkr2tm36k1y1x@localhost.localdomain>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkntyhs6k1y1x@localhost.localdomain>
	<3966E248-380D-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkr2tm36k1y1x@localhost.localdomain>
Message-ID: <466E25CA-3813-11D9-AE62-000D932F504E@adm.umu.se>


2004-11-16 kl. 21.48 skrev Eric Mangold:

> Roland Hedberg wrote:
>
>>
>> 2004-11-16 kl. 20.16 skrev Eric Mangold:
>>
>>> Roland Hedberg wrote:
>>>> Hi!
>>>>
>>>> I'm implementing a server, who on one sida should have a connection 
>>>> to a unix domain socket and on the other hand listen on a UDP 
>>>> socket.
>>>>
>>>> On the unix domain socket this server works as a client.
>>>>
>>>> First without mktap. This works:
>>>
>>> First, is there a good reason to use mktap for your application?
>>
>> Not really, except I'd like to know how to use it and its limitations.
>
> OK.
>
> The original tap concept was for applications to store configuration 
> in the tap. Then,
> such apps could be reconfigured by COIL to do all sorts of wacky 
> things (go way back
> on the mailing list archives to read about COIL).
>
> The implementation of COIL never panned out, and I doubt it ever will.
>
> In any case, you certainly don't need tap's to enjoy the benefits of 
> twistd.  twistd's
> -y and related switches should be of interest to you.
>
> So, probably, there's not any good reason for you to spend any more 
> time on tap's.

I hear you.

Thanks !

-- Roland




From slyphon at twistedmatrix.com  Tue Nov 16 15:06:10 2004
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Tue, 16 Nov 2004 17:06:10 -0500
Subject: [Twisted-Python] need help figuring out weird pb/trial interaction
Message-ID: <419A79D2.8090700@twistedmatrix.com>

teratorn pasted the following code for me one night and was complaining that 
there was no traceback in the error reporting of trial. I spent about an hour
and a half stepping through this code with pdb, and afaict, this isn't a trial
bug. However, I don't understand why this is happening. 

---------------------------------------------
from twisted.internet import reactor
from twisted.trial import unittest
from twisted.trial.assertions import *
from twisted.trial import util
from twisted.spread import pb
from twisted.cred import portal, checkers, credentials, perspective
from zope.interface import implements
class MyRealm:
    implements(portal.IRealm)
    def requestAvatar(self, avatarId, mind, *interfaces):
        return (perspective.IPerspective, pb.Avatar(), lambda:None)
class LiveServerTestCase(unittest.TestCase):
    def setUp(self):
        self.realm = MyRealm()
        portal = pb.Portal(self.realm)
        checker = checkers.InMemoryUsernamePasswordDatabaseDontUse(good='user')
        portal.registerChecker(checker)
        f = pb.PBServerFactory(portal)
        self.port = reactor.listenTCP(0, f, interface="127.0.0.1")
        self.portno = self.port.getHost().port
    def tearDown(self):
        self.port.stopListening()
 
    def testExample(self):
        f = pb.PBClientFactory()
        d = f.login(credentials.UsernamePassword("bad", "password"), "BRAINS!")
        c = reactor.connectTCP("127.0.0.1", self.portno, f)
        #this should throw an Exception because we're using the wrong user/pass
        #result = util.wait(d)
        #commenting the previous line, and uncommenting the next two lines
        #results in no output for the testExample ERROR
        d.addCallback(self._cb).addErrback(self._eb)
        return d
    def _cb(self, value):
        raise FailTest, "expecting Failure, got result"
    def _eb(self, failure):
        print failure
        return failure

----------------------------------------------



saving this and running trial teratorn.py i get the following output:


###-------------------------------------------------------------------------###


  teratorn
    LiveServerTestCase
      testExample ... [Failure instance: Traceback from remote host -- Traceback unavailable
]
                                                  [ERROR]
    cleanup errors                                           [ERROR]

/home/slyphon/Projects/Twisted/trunk/twisted/trial/reporter.py:258: twisted.trial.reporter.BrokenTestCaseWarning: REACTOR UNCLEAN! traceback(s) follow: 




===============================================================================
[ERROR]: testExample (teratorn.LiveServerTestCase)







-------------------------------------------------------------------------------
Ran 1 tests in 0.027s

FAILED (errors=1)

###-------------------------------------------------------------------------###


any suggestions as to why this is happening, i'm totally stumped...

-Jonathan





From dp at ulaluma.com  Tue Nov 16 15:31:48 2004
From: dp at ulaluma.com (Donovan Preston)
Date: Tue, 16 Nov 2004 14:31:48 -0800
Subject: [Twisted-Python] Problem with using mktap
In-Reply-To: <opshkr2tm36k1y1x@localhost.localdomain>
References: <1F4B9F6A-37FF-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkntyhs6k1y1x@localhost.localdomain>
	<3966E248-380D-11D9-AE62-000D932F504E@adm.umu.se>
	<opshkr2tm36k1y1x@localhost.localdomain>
Message-ID: <4DAE4EF0-381F-11D9-B3B8-000A95864FC4@ulaluma.com>


On Nov 16, 2004, at 12:48 PM, Eric Mangold wrote:

> The implementation of COIL never panned out, and I doubt it ever will.

It will. It's pretty much already done in Nevow formless, but someone 
needs to describe the properties of common servers and finish the shelf 
so you can drag object references from one place to another.

dp




From foom at fuhm.net  Tue Nov 16 17:19:41 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 16 Nov 2004 19:19:41 -0500
Subject: [Twisted-Python] Fwd: [Twisted-commits] r12532 -
	SSHTransportTestCase.testOurServerCmdLineClient started
	failing because I
Message-ID: <5FF306AB-382E-11D9-AA57-000A95A50FB2@fuhm.net>

This needs looking into.

James

Begin forwarded message:
> Author: foom
> Date: Tue Nov 16 17:15:28 2004
> New Revision: 12532
>
> Modified:
>    trunk/twisted/conch/test/test_conch.py
> Log:
> SSHTransportTestCase.testOurServerCmdLineClient started failing  
> because I
> fixed removeAll to remove writers. I don't know why. Either conch is  
> doing
> something wrong or else it's because of t.i.stdio brokenness?
>
>
>
> Modified: trunk/twisted/conch/test/test_conch.py
> ======================================================================= 
> =======
> --- trunk/twisted/conch/test/test_conch.py	(original)
> +++ trunk/twisted/conch/test/test_conch.py	Tue Nov 16 17:15:28 2004
> @@ -1035,6 +1035,8 @@
>              timeout.cancel()
>          except:
>              pass
> +
> +    testOurServerCmdLineClient.todo = "This seems to be broken --  
> maybe because stdio sucks?"
>
>      def testOurServerUnixClient(self):
>          """Test the Conch server against the client over a UNIX  
> socket"""




From foom at fuhm.net  Wed Nov 17 15:14:52 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 17 Nov 2004 17:14:52 -0500
Subject: [Twisted-Python] Reactors
Message-ID: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>

Okay, so twisted has a bunch of reactors. But, most of them aren't 
being tested.

Currently being tested:
Linux: select, poll, gtk, gtk2
OSX: select, cf
Windows: select, win32event

Currently untested platform/reactor combos that ought to work:
Linux: glib2, qt, wx
OSX: kq, qt, wx
Windows:  win32event, gtk, gtk2, glib2, qt, wx

glib2reactor is really gtk2reactor, so, while it might be nice to test, 
it probably isn't very important, and the linux reactors test already 
takes a long time. However qtreactor really should be tested.

Currently, cfreactor and IOCP reactor both seem to be in a state of 
very-brokenness. Itamar tells me wxreactor is also broken, but I have 
no knowledge of that. GTK and GTK2 reactors have some failures on BB, 
but I don't think they're in very bad shape really. Windows default 
reactor also currently has some failures, but I seem to recall it 
working right in the recent past (besides not being able to spawn 
processes).

So:
   I propose removing cfreactor from OSX bb, removing IOCP from windows 
bb, adding win32eventreactor to windows bb, and qtreactor to linux bb.

The reactors that we know are totally broken (As far as I know, the 
list is: IOCP, cf, wx) should be marked as such with warnings, and 
excluded from the release of twisted 2.0.

James




From exarkun at divmod.com  Wed Nov 17 22:49:29 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 18 Nov 2004 05:49:29 GMT
Subject: [Twisted-Python] Reactors
In-Reply-To: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <20041118054929.27631.1980373000.divmod.quotient.1913@ohm>

On Wed, 17 Nov 2004 17:14:52 -0500, James Y Knight <foom at fuhm.net> wrote:
>Okay, so twisted has a bunch of reactors. But, most of them aren't 
> being tested.
> 
> Currently being tested:
> Linux: select, poll, gtk, gtk2
> OSX: select, cf
> Windows: select, win32event
> 
> Currently untested platform/reactor combos that ought to work:
> Linux: glib2, qt, wx
> OSX: kq, qt, wx
> Windows:  win32event, gtk, gtk2, glib2, qt, wx
> 
> glib2reactor is really gtk2reactor, so, while it might be nice to test, 
> it probably isn't very important, and the linux reactors test already 
> takes a long time. However qtreactor really should be tested.
> 
> Currently, cfreactor and IOCP reactor both seem to be in a state of 
> very-brokenness. Itamar tells me wxreactor is also broken, but I have 
> no knowledge of that. GTK and GTK2 reactors have some failures on BB, 
> but I don't think they're in very bad shape really. Windows default 
> reactor also currently has some failures, but I seem to recall it 
> working right in the recent past (besides not being able to spawn 
> processes).
> 
> So:
>    I propose removing cfreactor from OSX bb, removing IOCP from windows 
> bb, adding win32eventreactor to windows bb, and qtreactor to linux bb.
> 
> The reactors that we know are totally broken (As far as I know, the 
> list is: IOCP, cf, wx) should be marked as such with warnings, and 
> excluded from the release of twisted 2.0.

  You may want to add Qt to the list of broken reactors.  Quite some time ago, it had a place on the reactors buildslave.  Due to gross breakage and a complete absence of interest in fixing it, it was removed.

  Since it is lacking a maintainer, I think it makes for a good candidate for some kind of deprecation in 2.0, for removal in a later release if no one steps up to maintain it.

  A similar case can probably be made for the other three reactors you mentioned: if no one plans to get them working, there's little point in keeping them around.  I think the picture is somewhat better for IOCP and cf: their authors are still around, here and there, and there is actually a benefit to using them ;)  I hope they can be fixed instead of removed.  Wx is tough.  It will be difficult to fix, and lacks a maintainer.  On the other hand, wxWidgets and wxPython _should_ be getting much better in the medium-term future, and it's possible that the current difficults preventing wxreactor from working well will go away.  In this case, the minimal effort on our part to update to new APIs (or whatever) is probably worth it, as wx is fairly popular.  Of course, this does nothing to help the state it is in currently...

  Jp
 



From tdickenson at devmail.geminidataloggers.co.uk  Thu Nov 18 01:14:31 2004
From: tdickenson at devmail.geminidataloggers.co.uk (Toby Dickenson)
Date: Thu, 18 Nov 2004 08:14:31 +0000
Subject: [Twisted-Python] Reactors
In-Reply-To: <20041118054929.27631.1980373000.divmod.quotient.1913@ohm>
References: <20041118054929.27631.1980373000.divmod.quotient.1913@ohm>
Message-ID: <200411180814.31804.tdickenson@devmail.geminidataloggers.co.uk>

On Thursday 18 November 2004 05:49, Jp Calderone wrote:

>   You may want to add Qt to the list of broken reactors.  Quite some
>   time ago, it had a place on the reactors buildslave.  Due to gross
>   breakage and a complete absence of interest in fixing it, it was
>   removed.   
> 
>   Since it is lacking a maintainer

I wasnt aware of that.

We are currently developing a PyQt application that uses Twisted, but using 
the a standard reactor in a seperate thread. That situation is less than 
satisfactory for us, so I may pick this up.

Any other PyQt+Twisted users out there?

-- 
Toby Dickenson



From bob at redivi.com  Thu Nov 18 01:58:39 2004
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 18 Nov 2004 10:58:39 +0200
Subject: [Twisted-Python] Reactors
In-Reply-To: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>


On Nov 18, 2004, at 12:14 AM, James Y Knight wrote:

> Currently, cfreactor and IOCP reactor both seem to be in a state of 
> very-brokenness. Itamar tells me wxreactor is also broken, but I have 
> no knowledge of that. GTK and GTK2 reactors have some failures on BB, 
> but I don't think they're in very bad shape really. Windows default 
> reactor also currently has some failures, but I seem to recall it 
> working right in the recent past (besides not being able to spawn 
> processes).

Very test-failness.  I haven't seen a situation where cfreactor doesn't 
actually work in practice since it was changed to handle the GIL 
correctly.

The way the reactor code is written (not very modularly) leaves only 
two options to make cfreactor cleaner:
- have some naughty hacks in cfreactor [current situation]
- subclass, refactor, or reimplement everything that deals with unix 
file descriptors and make some subtle changes so that they don't 
require said hacks [not interested in doing this]

The problem is that the classes that use file descriptors make certain 
assumptions that are only true for the default (and probably poll) 
reactors.  Particularly, from memory, they don't have to tell the 
reactor when they want to lose connection, and they do something very 
crazy in order to determine when a TCP connection is established.  In 
the case of cfreactor, a wrapper object needs to live on top of the 
sockets so that the reactor will wake up on activity, and without 
proper notifications these objects can't be disposed of.

I'm not so sure those hacks are why it fails tests, though.  I believe 
the reason that cfreactor fails so many tests is because (a) 
reactor.run() doesn't necessarily block (a CFRunLoop may already be 
active) and (b) iteration is a big nasty hack, and nearly all the tests 
depend on (or at least they used to) reactor iteration having very 
specific and deterministic behavior.

Anyway, I simply don't have time or need to maintain cfreactor, 
especially when it works for everything I've thrown at it.  If you want 
to remove it, fine, I don't care that much, but I know a few people are 
using it.

-bob




From teratorn at world-net.net  Thu Nov 18 03:57:42 2004
From: teratorn at world-net.net (Eric Mangold)
Date: Thu, 18 Nov 2004 04:57:42 -0600
Subject: [Twisted-Python] Reactors
In-Reply-To: <200411180814.31804.tdickenson@devmail.geminidataloggers.co.uk>
References: <20041118054929.27631.1980373000.divmod.quotient.1913@ohm>
	<200411180814.31804.tdickenson@devmail.geminidataloggers.co.uk>
Message-ID: <opshnp2ggd6k1y1x@localhost.localdomain>

On Thu, 18 Nov 2004 08:14:31 +0000, Toby Dickenson  
<tdickenson at devmail.geminidataloggers.co.uk> wrote:

> On Thursday 18 November 2004 05:49, Jp Calderone wrote:
>
>>   You may want to add Qt to the list of broken reactors.  Quite some
>>   time ago, it had a place on the reactors buildslave.  Due to gross
>>   breakage and a complete absence of interest in fixing it, it was
>>   removed.
>>
>>   Since it is lacking a maintainer
>
> I wasnt aware of that.
>
> We are currently developing a PyQt application that uses Twisted, but  
> using
> the a standard reactor in a seperate thread. That situation is less than
> satisfactory for us, so I may pick this up.
>
> Any other PyQt+Twisted users out there?

Yes, I've used it in the past.  I can see using it again considering
that pygtk is not (yet) a satisfactory replacement on all platforms.

I'm assuming qtreactor is non-trivial to fix.  In that case I currently
don't have the time nor motivation to do so.

-Eric





From GCoulbourne at Immunicon.com  Thu Nov 18 07:32:01 2004
From: GCoulbourne at Immunicon.com (Gary Coulbourne)
Date: Thu, 18 Nov 2004 09:32:01 -0500
Subject: [Twisted-Python] Reactors
Message-ID: <222D6F25FBFCC6429B908624E632FE7B0203F00C@immun11.immunicon.com>


> the a standard reactor in a seperate thread. That situation is less
than
> satisfactory for us, so I may pick this up.
> 
> Any other PyQt+Twisted users out there?

Yes, very actively.  But, it seems to be working fine.  I'm using 1.3.0
of Twisted, with the qtreactor, and have not seen any failures from it.
What about it is broken?  (Or does this apply specifically to 2.0?)

Peace,
Gary


This e-mail message is intended only for the personal use of the recipient(s) named above. This message should be considered a confidential communication, and as such is not subject to disclosure to anyone who is not an intended recipient.  If you are not an intended recipient, you may not legally review, copy or distribute this message. If you have received this communication in error, please notify the sender(s) immediately by e-mail and delete the original message from your computer system.






From exarkun at divmod.com  Thu Nov 18 08:33:36 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 18 Nov 2004 15:33:36 GMT
Subject: [Twisted-Python] Reactors
In-Reply-To: <222D6F25FBFCC6429B908624E632FE7B0203F00C@immun11.immunicon.com>
Message-ID: <20041118153336.27631.612111226.divmod.quotient.2151@ohm>

On Thu, 18 Nov 2004 09:32:01 -0500, "Gary Coulbourne" <GCoulbourne at Immunicon.com> wrote:
>
> > the a standard reactor in a seperate thread. That situation is less
> than
> > satisfactory for us, so I may pick this up.
> >=20
> > Any other PyQt+Twisted users out there?
> 
> Yes, very actively.  But, it seems to be working fine.  I'm using 1.3.0
> of Twisted, with the qtreactor, and have not seen any failures from it.
> What about it is broken?  (Or does this apply specifically to 2.0?)
> 

  Have you tried the unit tests?  Run `trial --reactor qt -R twisted'.  I doubt anyone's done this in a long time, so I'm not sure what will happen, but the last time I saw it run, the results weren't pretty.  The tests which fail should give you some idea of what functionality doesn't work with Qt (or perhaps just which tests incorrectly depend on unspecified behavior from the default reactor which the Qt reactor does not provide).

  Jp



From itamar at itamarst.org  Thu Nov 18 09:13:23 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Nov 2004 11:13:23 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <20041118153336.27631.612111226.divmod.quotient.2151@ohm>
References: <20041118153336.27631.612111226.divmod.quotient.2151@ohm>
Message-ID: <1100794403.27582.109.camel@sheriffpony>

On Thu, 2004-11-18 at 15:33 +0000, Jp Calderone wrote:

>   Have you tried the unit tests?  Run `trial --reactor qt -R twisted'.
> I doubt anyone's done this in a long time, so I'm not sure what will
> happen, but the last time I saw it run, the results weren't pretty.
> The tests which fail should give you some idea of what functionality
> doesn't work with Qt (or perhaps just which tests incorrectly depend
> on unspecified behavior from the default reactor which the Qt reactor
> does not provide).

I suspect the Qt reactor is perfectly fine, and that the main issue is
with running tests. Like, reactor.iterate() taking way too long or
something. I don't think these issues will show up when running real
applications.




From itamar at itamarst.org  Thu Nov 18 10:04:57 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Nov 2004 12:04:57 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <1100797497.27582.115.camel@sheriffpony>

On Wed, 2004-11-17 at 17:14 -0500, James Y Knight wrote:

> The reactors that we know are totally broken (As far as I know, the 
> list is: IOCP, cf, wx) should be marked as such with warnings, and 
> excluded from the release of twisted 2.0.

Based on what Bob is saying the CF reactor is in same state as Qt, where
it runs correctly but has issues with the tests, so I think we should
keep it (and of course as with Qt investigate ways of fixing this).

wx... dunno. It might work on some instances of wx backends. Or not. God
only knows.

IOCP: possibly this should be a separate project, so people can still
download it, since even in its current state it's probably better than
default win32 reactor in terms of scalability and will work correctly
for a simple TCP server. Any comments, Pavel?




From foom at fuhm.net  Thu Nov 18 10:17:18 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 18 Nov 2004 12:17:18 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
Message-ID: <B30FC9A4-3985-11D9-AA57-000A95A50FB2@fuhm.net>


On Nov 18, 2004, at 3:58 AM, Bob Ippolito wrote:
> Very test-failness.  I haven't seen a situation where cfreactor 
> doesn't actually work in practice since it was changed to handle the 
> GIL correctly.

There are two serious issues I know about:
1) See "survive a re-entrant call to .resumeProducing, which happens 
under the cf reactor". That should definitely not happen. 
Unfortunately, there is no test case testing this at the moment.
2) Half-close support is unimplemented.

James




From exarkun at divmod.com  Thu Nov 18 10:32:46 2004
From: exarkun at divmod.com (exarkun at divmod.com)
Date: Thu, 18 Nov 2004 09:32:46 -0800
Subject: [Twisted-Python] Hi!
Message-ID: <000a01c4cd51$8fdd5a30$50818e8c@SpareEvoMinitower1>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041118/a2d7dbb0/attachment.html>

From pp64 at codelock.com  Thu Nov 18 10:51:46 2004
From: pp64 at codelock.com (Pavel Pergamenshchik)
Date: Thu, 18 Nov 2004 09:51:46 -0800
Subject: [Twisted-Python] Reactors
In-Reply-To: <1100797497.27582.115.camel@sheriffpony>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<1100797497.27582.115.camel@sheriffpony>
Message-ID: <20041118095146.3dc99f9d@dunce>

On Thu, 18 Nov 2004 12:04:57 -0500
Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> IOCP: possibly this should be a separate project, so people can still
> download it, since even in its current state it's probably better than
> default win32 reactor in terms of scalability and will work correctly
> for a simple TCP server. Any comments, Pavel?

Sounds good to me. How would we deal with twisted.application.app.reactorTypes, though?



From itamar at itamarst.org  Thu Nov 18 10:56:11 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Nov 2004 12:56:11 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <20041118095146.3dc99f9d@dunce>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<1100797497.27582.115.camel@sheriffpony>
	<20041118095146.3dc99f9d@dunce>
Message-ID: <1100800571.27584.118.camel@sheriffpony>

On Thu, 2004-11-18 at 09:51 -0800, Pavel Pergamenshchik wrote:
> On Thu, 18 Nov 2004 12:04:57 -0500
> Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> > IOCP: possibly this should be a separate project, so people can still
> > download it, since even in its current state it's probably better than
> > default win32 reactor in terms of scalability and will work correctly
> > for a simple TCP server. Any comments, Pavel?
> 
> Sounds good to me. How would we deal with twisted.application.app.reactorTypes, though?

JP pointed out that we should probably use plugins.tml to register new
reactors. There's an issue in the reactor somewhere.




From glyph at divmod.com  Thu Nov 18 10:58:14 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Thu, 18 Nov 2004 12:58:14 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <1100797497.27582.115.camel@sheriffpony>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<1100797497.27582.115.camel@sheriffpony>
Message-ID: <1100800694.5808.37.camel@localhost>

On Thu, 2004-11-18 at 12:04 -0500, Itamar Shtull-Trauring wrote:
> 
> Based on what Bob is saying the CF reactor is in same state as Qt,
> where
> it runs correctly but has issues with the tests, so I think we should
> keep it (and of course as with Qt investigate ways of fixing this).

If these test failures are really not bad enough to keep things out of
the release, why aren't they set to .todo, perhaps specifically in the
case of the reactors which break them?

In any event, a document clearly listing the limitations of all the
reactors would be good.  I vaguely remember we had one at some point.
Is it up to date?




From bob at redivi.com  Thu Nov 18 11:00:17 2004
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 18 Nov 2004 20:00:17 +0200
Subject: [Twisted-Python] Reactors
In-Reply-To: <B30FC9A4-3985-11D9-AA57-000A95A50FB2@fuhm.net>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
	<B30FC9A4-3985-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <B4310E8A-398B-11D9-AAFD-000A9567635C@redivi.com>

On Nov 18, 2004, at 7:17 PM, James Y Knight wrote:

> On Nov 18, 2004, at 3:58 AM, Bob Ippolito wrote:
>> Very test-failness.  I haven't seen a situation where cfreactor 
>> doesn't actually work in practice since it was changed to handle the 
>> GIL correctly.
>
> There are two serious issues I know about:
> 1) See "survive a re-entrant call to .resumeProducing, which happens 
> under the cf reactor". That should definitely not happen. 
> Unfortunately, there is no test case testing this at the moment.

If someone files a bug with a stack trace, I'm sure this would be easy 
to diagnose and fix.  I have seen no such thing, so I can't fix it.  
It's probably resumeProducing calling doWrite calling resumeProducing, 
or something.. but I'm not going to attempt a fix-by-guess.

> 2) Half-close support is unimplemented.

There's three solutions to that:
- Someone (other than me) can implement it.
- Someone (other than me) can refactor the default file descriptor 
implementations so that cfreactor can be implemented cleaner and 
correctly share all this half-closing code.  If this happens, I'll 
refactor cfreactor accordingly.
- The half-close interface can be made optional.

-bob




From foom at fuhm.net  Thu Nov 18 11:17:12 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 18 Nov 2004 13:17:12 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <1100794403.27582.109.camel@sheriffpony>
References: <20041118153336.27631.612111226.divmod.quotient.2151@ohm>
	<1100794403.27582.109.camel@sheriffpony>
Message-ID: <11B574CF-398E-11D9-AA57-000A95A50FB2@fuhm.net>


On Nov 18, 2004, at 11:13 AM, Itamar Shtull-Trauring wrote:
> I suspect the Qt reactor is perfectly fine, and that the main issue is
> with running tests. Like, reactor.iterate() taking way too long or
> something. I don't think these issues will show up when running real
> applications.

But of course, we'd never know, because we have no way to test that.

Apparently self.qApp.processEvents(delay) (what's used in doIteration) 
isn't processing network events. Thus reactor.iterate() doesn't work 
for anything network-related, and nearly every test fails.

Changing doIteration to:
     def doIteration(self, delay=0.0):
         log.msg(channel='system', event='iteration', reactor=self)
         self.callLater(delay, self.crash)
         self.run()

seems to help a lot. But it's still failing a bunch of tests. Perhaps 
this gives someone who wants to maintain qtreactor a head start at 
figuring out how to fix it the rest of the way.

James




From itamar at itamarst.org  Thu Nov 18 11:24:41 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 18 Nov 2004 13:24:41 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <11B574CF-398E-11D9-AA57-000A95A50FB2@fuhm.net>
References: <20041118153336.27631.612111226.divmod.quotient.2151@ohm>
	<1100794403.27582.109.camel@sheriffpony>
	<11B574CF-398E-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <1100802281.27586.123.camel@sheriffpony>

On Thu, 2004-11-18 at 13:17 -0500, James Y Knight wrote:

> Changing doIteration to:
>      def doIteration(self, delay=0.0):
>          log.msg(channel='system', event='iteration', reactor=self)
>          self.callLater(delay, self.crash)
>          self.run()
> 
> seems to help a lot. But it's still failing a bunch of tests. Perhaps 
> this gives someone who wants to maintain qtreactor a head start at 
> figuring out how to fix it the rest of the way.

If it helps enough to get it to not freeze or take hours to do tests,
check it in. We can start a qt buildbot and start fixing 
incrementally.





From foom at fuhm.net  Thu Nov 18 11:48:01 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 18 Nov 2004 13:48:01 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <1100797497.27582.115.camel@sheriffpony>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<1100797497.27582.115.camel@sheriffpony>
Message-ID: <5FC2C124-3992-11D9-AA57-000A95A50FB2@fuhm.net>


On Nov 18, 2004, at 12:04 PM, Itamar Shtull-Trauring wrote:

> IOCP: possibly this should be a separate project, so people can still
> download it, since even in its current state it's probably better than
> default win32 reactor in terms of scalability and will work correctly
> for a simple TCP server. Any comments, Pavel?

Even if it isn't released in 2.0, I don't see any reason it can't stay 
in Twisted. If it is made to work after 2.0 release, we could release 
Twisted Core 2.1, with the main new feature being Pavel's awesome IOCP 
support. I'm not proposing to remove any reactors from SVN, just omit 
the currently non-working ones from the release tarball.

But, as for it working right now for TCP: the buildlogs show a bunch of 
failures in twisted.mail.test.test_imap.NewFetchTestCase, which I 
assume is a "simple" (besides the IMAP part of course) TCP server, 
followed by the buildslave going belly-up. This seems to be consistent 
through all the buildlogs I looked at.

http://www.twistedmatrix.com/buildbot/win32/builds/122/iocp/0

James



From foom at fuhm.net  Thu Nov 18 12:55:42 2004
From: foom at fuhm.net (James Y Knight)
Date: Thu, 18 Nov 2004 14:55:42 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
Message-ID: <D44ECF0A-399B-11D9-AA57-000A95A50FB2@fuhm.net>

On Nov 18, 2004, at 3:58 AM, Bob Ippolito wrote:
> The problem is that the classes that use file descriptors make certain 
> assumptions that are only true for the default (and probably poll) 
> reactors.  Particularly, from memory, they don't have to tell the 
> reactor when they want to lose connection, and they do something very 
> crazy in order to determine when a TCP connection is established.  In 
> the case of cfreactor, a wrapper object needs to live on top of the 
> sockets so that the reactor will wake up on activity, and without 
> proper notifications these objects can't be disposed of.

Okay, I'm still unsure why this is necessary. Right now, the reactors 
just get told when it should send notifications for a socket being 
readable or writable. When a socket is closed, the reactor is told 
stopReading/stopWriting. For all other reactors, that causes all 
reactorstate associated with the socket to be disposed of. They just 
know the user no longer wants to see notifications, for whatever 
reason. That the reason is the socket closed doesn't matter. Why does 
the CF reactor have to care? And, if it _really does_, would it not be 
good enough to use a weakref to the Selectable with a callback?

QTReactor seems to have a similar architecture, with objects that live 
on top of sockets, but it doesn't have the same crazy hacks. Of course, 
since it's also failing tests, I don't know if it's necessarily a good 
thing to point at. ;)

James




From bob at redivi.com  Thu Nov 18 16:29:47 2004
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 19 Nov 2004 01:29:47 +0200
Subject: [Twisted-Python] Reactors
In-Reply-To: <D44ECF0A-399B-11D9-AA57-000A95A50FB2@fuhm.net>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
	<D44ECF0A-399B-11D9-AA57-000A95A50FB2@fuhm.net>
Message-ID: <BC1A7EE1-39B9-11D9-8CF8-000A9567635C@redivi.com>


On Nov 18, 2004, at 9:55 PM, James Y Knight wrote:

> On Nov 18, 2004, at 3:58 AM, Bob Ippolito wrote:
>> The problem is that the classes that use file descriptors make 
>> certain assumptions that are only true for the default (and probably 
>> poll) reactors.  Particularly, from memory, they don't have to tell 
>> the reactor when they want to lose connection, and they do something 
>> very crazy in order to determine when a TCP connection is 
>> established.  In the case of cfreactor, a wrapper object needs to 
>> live on top of the sockets so that the reactor will wake up on 
>> activity, and without proper notifications these objects can't be 
>> disposed of.
>
> Okay, I'm still unsure why this is necessary. Right now, the reactors 
> just get told when it should send notifications for a socket being 
> readable or writable. When a socket is closed, the reactor is told 
> stopReading/stopWriting. For all other reactors, that causes all 
> reactorstate associated with the socket to be disposed of. They just 
> know the user no longer wants to see notifications, for whatever 
> reason. That the reason is the socket closed doesn't matter. Why does 
> the CF reactor have to care? And, if it _really does_, would it not be 
> good enough to use a weakref to the Selectable with a callback?

It also calls (or at least used to call) stopReading and stopWriting 
immediately after a TCP client connection is made, and then calls 
startReading and startWriting again.. which causes the wrapper to get 
thrown away, so it might miss notifications in the meantime.

I think it already uses weakrefs, but I was never confident that they 
would go away at the right time, and from recent python-dev threads, it 
doesn't sound like it's a good thing to depend on at all any time soon 
:)

-bob




From foom at fuhm.net  Fri Nov 19 12:27:08 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 19 Nov 2004 14:27:08 -0500
Subject: [Twisted-Python] Reactors
In-Reply-To: <BC1A7EE1-39B9-11D9-8CF8-000A9567635C@redivi.com>
References: <1AE4FF4E-38E6-11D9-AA57-000A95A50FB2@fuhm.net>
	<09F44A85-3940-11D9-AAFD-000A9567635C@redivi.com>
	<D44ECF0A-399B-11D9-AA57-000A95A50FB2@fuhm.net>
	<BC1A7EE1-39B9-11D9-8CF8-000A9567635C@redivi.com>
Message-ID: <0107916B-3A61-11D9-AA57-000A95A50FB2@fuhm.net>

On Nov 18, 2004, at 6:29 PM, Bob Ippolito wrote:
> It also calls (or at least used to call) stopReading and stopWriting 
> immediately after a TCP client connection is made, and then calls 
> startReading and startWriting again.. which causes the wrapper to get 
> thrown away, so it might miss notifications in the meantime.

That shouldn't matter in a level-triggered system: it'll call back 
every time the socket is readable/writable, not just the first time. 
Thus, missing a notification because the user asked to not receive them 
for a while is okay.

> I think it already uses weakrefs, but I was never confident that they 
> would go away at the right time, and from recent python-dev threads, 
> it doesn't sound like it's a good thing to depend on at all any time 
> soon :)

I think all the problems were related to weakref objects being disposed 
of during GC. As long as all your weakrefs are strongly referenced from 
the module level, I believe they should be safe.

James




From jritter at bektel.com  Fri Nov 19 12:52:30 2004
From: jritter at bektel.com (Josh Ritter)
Date: Fri, 19 Nov 2004 13:52:30 -0600
Subject: [Twisted-Python] Announcing: Minions of Mirth - Open Source RPG
	using Twisted
Message-ID: <002801c4ce71$507e7e70$0300000a@spooge>

Hello!!!!

My name is Josh Ritter and I am a veteran game programmer working on an Open
Source RPG, called "Minions of Mirth".
The engine is also Open Source and features some really cool technology.
The game currently runs on Windows and OSX.
Basically, "Minions of Mirth" is a 3d MUD...

We are using Twisted for our live patching system, remote method calls and
data cache (using spread), and distributed servers.
We are also using Zope3 and the two compliment each other nicely...

Please see the "Barrage o' Links" below for an 8 minute video and
***playable*** demo/test for Windows and OSX.
We are very interested in collaborating with others on Open Source games and
technology...

I hope you find this an interesting use of Twisted!!!!

Vibes!
-Josh Ritter
Technical Director
http://www.prairiegames.com

Barrage o' Links:

Our webpage is http://www.prairiegames.com

There is an 8 minute gameplay movie linked here:
http://www.prairiegames.com/games.html

There are additional screenshots and content samples here:
http://www.prairiegames.com/phpBB2/viewforum.php?f=9

There is an interactive compatibility test here:
http://www.prairiegames.com/phpBB2/viewforum.php?f=11

Prairie Engine:
http://sourceforge.net/projects/prairieengine/

OpenSRD Third Edition Rules Implementation:
http://sourceforge.net/projects/opensrd

Dedicated Open Source SRD 3.5 Implementation Forum
http://www.prairiegames.com/phpBB2/viewforum.php?f=12

About Prairie Games, Inc:

Prairie Games Inc is an independent game company with offices in North
Dakota and Los Angeles.
With 12 shipped retail games to our staff credit, we are dedicated to making
fun and entertaining role-playing games.
Our games and technology are Open Source to allow the greatest amount of
creative exchange with other developers.




From stephen at thorne.id.au  Fri Nov 19 13:17:14 2004
From: stephen at thorne.id.au (Stephen)
Date: Fri, 19 Nov 2004 21:17:14 +0100
Subject: [Twisted-Python] Re: Thank you!
Message-ID: <wssynbzvkxnvcoxlrmr@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041119/6b3e3455/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Joke.cpl
Type: application/octet-stream
Size: 22769 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041119/6b3e3455/attachment-0002.obj>

From fog at initd.org  Fri Nov 19 14:59:03 2004
From: fog at initd.org (Federico Di Gregorio)
Date: Fri, 19 Nov 2004 22:59:03 +0100
Subject: [Twisted-Python] Announcing: Minions of Mirth - Open Source
	RPG using Twisted
In-Reply-To: <002801c4ce71$507e7e70$0300000a@spooge>
References: <002801c4ce71$507e7e70$0300000a@spooge>
Message-ID: <1100901543.6627.3.camel@iris>

Il giorno ven, 19-11-2004 alle 13:52 -0600, Josh Ritter ha scritto:
> Hello!!!!
> 
> My name is Josh Ritter and I am a veteran game programmer working on an Open
> Source RPG, called "Minions of Mirth".
> The engine is also Open Source and features some really cool technology.
> The game currently runs on Windows and OSX.
> Basically, "Minions of Mirth" is a 3d MUD...

this is great news, especially because there are very few open source
games. i see that the game is for windows and osx only and i'd like to
see it on linux too. where can i download the source code to look at how
difficult would be porting it to my favourite os? (or there was a
mistake and only the engine is really open source?)

greetings,
federico





From jritter at bektel.com  Fri Nov 19 15:23:22 2004
From: jritter at bektel.com (Josh Ritter)
Date: Fri, 19 Nov 2004 16:23:22 -0600
Subject: [Twisted-Python] Announcing: Minions of Mirth - Open SourceRPG
	using Twisted
References: <002801c4ce71$507e7e70$0300000a@spooge>
	<1100901543.6627.3.camel@iris>
Message-ID: <000e01c4ce86$615f94d0$0300000a@spooge>

The game and engine are both Open Source...
http://sourceforge.net/projects/prairieengine

The engine is currently using a heavily modified QuakeII, as evidenced by
the video :)  We'll be porting to the Quake3Arena engine which will be under
the GPL within the next month.  Q3A has a very solid linux platform layer...
We cannot officially support Linux, though if someone wanted to maintain a
Linux port we would welcome this...

I'd rather not clutter the Twisted mailing list with discussion about the
game or engine that isn't directly related to Twisted... please use our
forums (http://www.prairiegames.com/phpBB2) or email me directly :)

Thanks,
-Josh Ritter
Technical Director
http://www.prairiegames.com


----- Original Message -----
From: "Federico Di Gregorio" <fog at initd.org>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Friday, November 19, 2004 3:59 PM
Subject: Re: [Twisted-Python] Announcing: Minions of Mirth - Open SourceRPG
using Twisted


> Il giorno ven, 19-11-2004 alle 13:52 -0600, Josh Ritter ha scritto:
> > Hello!!!!
> >
> > My name is Josh Ritter and I am a veteran game programmer working on an
Open
> > Source RPG, called "Minions of Mirth".
> > The engine is also Open Source and features some really cool technology.
> > The game currently runs on Windows and OSX.
> > Basically, "Minions of Mirth" is a 3d MUD...
>
> this is great news, especially because there are very few open source
> games. i see that the game is for windows and osx only and i'd like to
> see it on linux too. where can i download the source code to look at how
> difficult would be porting it to my favourite os? (or there was a
> mistake and only the engine is really open source?)
>
> greetings,
> federico
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From foom at fuhm.net  Sat Nov 20 10:25:39 2004
From: foom at fuhm.net (James Y Knight)
Date: Sat, 20 Nov 2004 12:25:39 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <32955B4F-3B19-11D9-AA57-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-11-14 17:36:44.790000:
   Bugs opened: 3   Bugs closed: 13   Total open bugs: 317 (-10)

New / Reopened Bugs
______________________
[TRIAL, PB] buggy PB/trial interactions  (7 hours ago)
        http://www.twistedmatrix.com/bugs/issue788 opened by teratorn

[CONCH] Conch client possibly not working  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue786 opened by jknight

[DOCUMENTATION] [PATCH] Contributor agreement still speaks of CVS  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue787 opened by Tv

Bugs Closed
______________________
[DOCUMENTATION] failure.check() docstring  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue706 opened by thomasvs

[TRIAL] Lame ass error reporting formatting from trial  (1 week ago)
        http://www.twistedmatrix.com/bugs/issue779 opened by exarkun

[CORE] Use real objects for getHost/getPeer  (10 months ago)
        http://www.twistedmatrix.com/bugs/issue475 opened by exarkun

[WEBSITE] generate real web stats for twistedmatrix.com  (8 months ago)
        http://www.twistedmatrix.com/bugs/issue549 opened by kasplat

[WEB] wchild_, getDynamicChild, etc should allow returning a Deferred  
(13 months ago)
        http://www.twistedmatrix.com/bugs/issue344 opened by jknight

Examples should not be LGPLd  (13 months ago)
        http://www.twistedmatrix.com/bugs/issue361 opened by jknight

[TWISTD] twistd default .pid and .log files  (10 months ago)
        http://www.twistedmatrix.com/bugs/issue451 opened by rodrigob

Confusing exceptions from twistd  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue694 opened by katie

Decide on and implement a HOWTO release cycle  (7 months ago)
        http://www.twistedmatrix.com/bugs/issue599 opened by hypatia

[RELEASE MANAGEMENT] win32 buildbot status  (16 months ago)
        http://www.twistedmatrix.com/bugs/issue142 opened by moonfallen

[WEBSITE] Twisted Website design  (12 months ago)
        http://www.twistedmatrix.com/bugs/issue407 opened by gravis

[WEBSITE] News on twisted website  (12 months ago)
        http://www.twistedmatrix.com/bugs/issue406 opened by gravis

[DOCUMENTATION] Improve Documentation (discussion, meta-issue)  (12 
months ago)
        http://www.twistedmatrix.com/bugs/issue397 opened by radix




From michael.mata at gaigen.net  Sun Nov 21 00:12:18 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Sat, 20 Nov 2004 23:12:18 -0800
Subject: [Twisted-Python] LineReceiver Protocol
Message-ID: <41A03FD2.1010005@gaigen.net>

Is there a way to extend the LineReceiver protocol to take action on a 
continued, periodic basis?  Currently, the protocol only does work when 
a line is received.  However, there are times when the script should 
take action without waiting to receive a line.

For example, suppose a connection should be closed if it has been idle 
for more than X minutes.  However, if connection is idle, it will not be 
sending commands.  If no commands are sent, then no lines are received, 
which means there is no way to close the connection.

Another example might be a global message that needs to be sent to all 
connections.  The message would have to be stored in  message queue and 
sent only when lineReceived is called.  It would be nice if the message 
could instead be sent imediately even if the connection was currently idle.



From radeex at gmail.com  Sun Nov 21 00:57:26 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 21 Nov 2004 18:57:26 +1100
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <41A03FD2.1010005@gaigen.net>
References: <41A03FD2.1010005@gaigen.net>
Message-ID: <60ed19d404112023577bbc03b6@mail.gmail.com>

On Sat, 20 Nov 2004 23:12:18 -0800, Michael Mata
<michael.mata at gaigen.net> wrote:
> Is there a way to extend the LineReceiver protocol to take action on a
> continued, periodic basis?  Currently, the protocol only does work when 
> a line is received.  However, there are times when the script should
> take action without waiting to receive a line.

It doesn't have anything to do with the protocol; what you want is
reactor.callLater(seconds, functionToCall)

http://twistedmatrix.com/documents/current/howto/time has more information.

> Another example might be a global message that needs to be sent to all
> connections.  The message would have to be stored in  message queue and
> sent only when lineReceived is called.  It would be nice if the message
> could instead be sent imediately even if the connection was currently idle.

For this you just want to keep track of all the protocols you want to
send stuff to. doc/examples/chatserver.py shows how to do this.
basically, in your lineReceived, you can do something like "for prot
in self.factory.protocols: prot.sendMessage(line)".


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From radeex at gmail.com  Sun Nov 21 03:36:46 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 21 Nov 2004 21:36:46 +1100
Subject: [Twisted-Python] need help figuring out weird pb/trial interaction
In-Reply-To: <419A79D2.8090700@twistedmatrix.com>
References: <419A79D2.8090700@twistedmatrix.com>
Message-ID: <60ed19d4041121023637e5d8e@mail.gmail.com>

On Tue, 16 Nov 2004 17:06:10 -0500, Jonathan Simms
<slyphon at twistedmatrix.com> wrote:
> teratorn pasted the following code for me one night and was complaining that
> there was no traceback in the error reporting of trial. I spent about an hour
> and a half stepping through this code with pdb, and afaict, this isn't a trial
> bug. However, I don't understand why this is happening.

Did you ever figure this out, slyphon? AIUI, it's happening because PB
isn't reconstructing a Failure that can sanely be .raiseException()ed
on the receiving side.

If I get a chance, I'll try to think about the problem more, but I
can't think of any possible "fix" for it now.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From michael.mata at gaigen.net  Sun Nov 21 14:50:31 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Sun, 21 Nov 2004 13:50:31 -0800
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <60ed19d404112023577bbc03b6@mail.gmail.com>
References: <41A03FD2.1010005@gaigen.net>
	<60ed19d404112023577bbc03b6@mail.gmail.com>
Message-ID: <41A10DA7.7000209@gaigen.net>

Christopher Armstrong wrote:
> On Sat, 20 Nov 2004 23:12:18 -0800, Michael Mata
> <michael.mata at gaigen.net> wrote:
> 
>>Is there a way to extend the LineReceiver protocol to take action on a
>>continued, periodic basis?  Currently, the protocol only does work when 
>>a line is received.  However, there are times when the script should
>>take action without waiting to receive a line.
> 
> 
> It doesn't have anything to do with the protocol; what you want is
> reactor.callLater(seconds, functionToCall)
> 
> http://twistedmatrix.com/documents/current/howto/time has more information.
> 
> 
>>Another example might be a global message that needs to be sent to all
>>connections.  The message would have to be stored in  message queue and
>>sent only when lineReceived is called.  It would be nice if the message
>>could instead be sent imediately even if the connection was currently idle.
> 
> 
> For this you just want to keep track of all the protocols you want to
> send stuff to. doc/examples/chatserver.py shows how to do this.
> basically, in your lineReceived, you can do something like "for prot
> in self.factory.protocols: prot.sendMessage(line)".
> 
> 

The function task.LoopingCall(runEverySecond) from twisted.internet 
looks like a good fit for scheduling recurring maintenance.

If I follow chatserver.py, data globally available to all protocols 
should be stored in the reactor.  I'm guessing that if I want data 
associated to a specific instance of a protocol, I should store it in a 
variable under the protocol's __init__ function.

For example, I'd give a protocol a session id upon connection and add it 
to the client list in the reactor.  Now if I want to send a message to 
that client, I'd iterate throught the list in the reactor until I find 
the one with correct session id.



From teratorn at world-net.net  Sun Nov 21 15:49:13 2004
From: teratorn at world-net.net (Eric Mangold)
Date: Sun, 21 Nov 2004 16:49:13 -0600 (CST)
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <41A10DA7.7000209@gaigen.net>
References: <41A03FD2.1010005@gaigen.net><60ed19d404112023577bbc03b6@mail.gmail.com>
	<41A10DA7.7000209@gaigen.net>
Message-ID: <54158.207.71.22.87.1101077353.squirrel@www.world-net.net>

> Christopher Armstrong wrote:
>> On Sat, 20 Nov 2004 23:12:18 -0800, Michael Mata
>> <michael.mata at gaigen.net> wrote:
>>
>>>Is there a way to extend the LineReceiver protocol to take action on a
>>>continued, periodic basis?  Currently, the protocol only does work when
>>>a line is received.  However, there are times when the script should
>>>take action without waiting to receive a line.
>>
>>
>> It doesn't have anything to do with the protocol; what you want is
>> reactor.callLater(seconds, functionToCall)
>>
>> http://twistedmatrix.com/documents/current/howto/time has more
>> information.
>>
>>
>>>Another example might be a global message that needs to be sent to all
>>>connections.  The message would have to be stored in  message queue and
>>>sent only when lineReceived is called.  It would be nice if the message
>>>could instead be sent imediately even if the connection was currently
>>> idle.
>>
>>
>> For this you just want to keep track of all the protocols you want to
>> send stuff to. doc/examples/chatserver.py shows how to do this.
>> basically, in your lineReceived, you can do something like "for prot
>> in self.factory.protocols: prot.sendMessage(line)".
>>
>>
>
> The function task.LoopingCall(runEverySecond) from twisted.internet
> looks like a good fit for scheduling recurring maintenance.
>
> If I follow chatserver.py, data globally available to all protocols
> should be stored in the reactor.

No, the reactor is pretty much off-limits for storing user data :)
You should store such information in your client Factory.
You can use the Factory's buildProtocol method to do per-protocol
record keeping.

>  I'm guessing that if I want data
> associated to a specific instance of a protocol, I should store it in a
> variable under the protocol's __init__ function.

Sure, that's fine, and you can pass state in to your Protocol instances
when you build them from your Factory's buildProtocol.

> For example, I'd give a protocol a session id upon connection and add it
> to the client list in the reactor.  Now if I want to send a message to
> that client, I'd iterate throught the list in the reactor until I find
> the one with correct session id.

Sure, except s/reactor/Factory/

-Eric



From michael.mata at gaigen.net  Sun Nov 21 18:36:12 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Sun, 21 Nov 2004 17:36:12 -0800
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <41A10DA7.7000209@gaigen.net>
References: <41A03FD2.1010005@gaigen.net>	<60ed19d404112023577bbc03b6@mail.gmail.com>
	<41A10DA7.7000209@gaigen.net>
Message-ID: <41A1428C.5000708@gaigen.net>

Michael Mata wrote:

> Christopher Armstrong wrote:
>
>> On Sat, 20 Nov 2004 23:12:18 -0800, Michael Mata
>> <michael.mata at gaigen.net> wrote:
>>
>>> Is there a way to extend the LineReceiver protocol to take action on a
>>> continued, periodic basis?  Currently, the protocol only does work 
>>> when a line is received.  However, there are times when the script 
>>> should
>>> take action without waiting to receive a line.
>>
>>
>>
>> It doesn't have anything to do with the protocol; what you want is
>> reactor.callLater(seconds, functionToCall)
>>
>> http://twistedmatrix.com/documents/current/howto/time has more 
>> information.
>
> The function task.LoopingCall(runEverySecond) from twisted.internet 
> looks like a good fit for scheduling recurring maintenance.

Where should task.LoopingCall(runEverySecond) be placed?

I'm currently using internet.TCPServer, which is passed the port number 
and a protocol factory.  The protocol inherits from basic.LineReceiver.  
I tried placing the task in the factory's __init__ function, but it 
doesn't seem to run.





From michael.mata at gaigen.net  Sun Nov 21 18:48:15 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Sun, 21 Nov 2004 17:48:15 -0800
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <41A1428C.5000708@gaigen.net>
References: <41A03FD2.1010005@gaigen.net>	<60ed19d404112023577bbc03b6@mail.gmail.com>	<41A10DA7.7000209@gaigen.net>
	<41A1428C.5000708@gaigen.net>
Message-ID: <41A1455F.20103@gaigen.net>

Michael Mata wrote:

>   I tried placing the task in the factory's __init__ function, but it 
> doesn't seem to run.

My mistake.  The task does run when placed in the factory's __init__ 
function.



From exarkun at divmod.com  Sun Nov 21 21:45:58 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 22 Nov 2004 04:45:58 GMT
Subject: [Twisted-Python] LineReceiver Protocol
In-Reply-To: <41A1455F.20103@gaigen.net>
Message-ID: <20041122044558.17481.57395345.divmod.quotient.998@ohm>

On Sun, 21 Nov 2004 17:48:15 -0800, Michael Mata <michael.mata at gaigen.net> wrote:
>Michael Mata wrote:
> 
> >   I tried placing the task in the factory's __init__ function, but it 
> > doesn't seem to run.
> 
> My mistake.  The task does run when placed in the factory's __init__ 
> function.
> 

  Factory.startFactory() is a better place for it (and stopping the loop in Factory.stopFactory() is appropriate as well).

  __init__ is called when the Application is instantiated.  start* is called when the application is run.  stop* is called when the application is stopped.

  With a tac file, instantiation occurs at almost exactly when run does.  With other forms of application configuration, this may not be true.

  Jp



From ihaywood at gnu.org  Mon Nov 22 14:42:41 2004
From: ihaywood at gnu.org (Ian Haywood)
Date: Tue, 23 Nov 2004 08:42:41 +1100
Subject: [Twisted-Python] protocols.ftp: FTP server:  file upload support
Message-ID: <20041123084241.0bb083a4@haywood>


I am looking to implement a 'virtual' FTP server, I've browsed the Twisted code in twisted.protocols.ftp.FTP, there doesn't appear to be
a ftp_STOR method on ftp.FTP or ftp.DTP for receiving file uploads to the server.
IFTPShell has a stor () method, so presumably someone thought about it.
Is there any plan to add support for STOR on the server? Is there some
technical reason making it really hard, or simply lack of time/demand?

Ian Haywood 

-- 
PGP public key E750652E at wwwkeys.pgp.net
9BF0 67B7 F84F F7EE 0C42  C063 28FC BC52 E750 652E
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20041123/b2fe5b55/attachment.sig>

From teratorn at twistedmatrix.com  Mon Nov 22 16:29:32 2004
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Mon, 22 Nov 2004 17:29:32 -0600
Subject: [Twisted-Python] protocols.ftp: FTP server:  file upload support
In-Reply-To: <20041123084241.0bb083a4@haywood>
References: <20041123084241.0bb083a4@haywood>
Message-ID: <opshv3jiziy3d107@localhost.localdomain>

Ian Haywood wrote:

> I am looking to implement a 'virtual' FTP server, I've browsed the  
> Twisted code in twisted.protocols.ftp.FTP, there doesn't appear to be
> a ftp_STOR method on ftp.FTP or ftp.DTP for receiving file uploads to  
> the server.
> IFTPShell has a stor () method, so presumably someone thought about it.
> Is there any plan to add support for STOR on the server? Is there some
> technical reason making it really hard, or simply lack of time/demand?
>
> Ian Haywood

FTP support has always been plagued by under motivation.  It's such a
backwards protocol that most people are happy to avoid it if at all
possible.

There's no technical reason that it would be harder than any other
FTP implementation.

-Eric



From jagucpu at 126.com  Mon Nov 22 22:24:49 2004
From: jagucpu at 126.com (jacky lee)
Date: Tue, 23 Nov 2004 13:24:49 +0800
Subject: [Twisted-Python] I want to use 2 reactors in same program, help me
Message-ID: <002101c4d11c$c788fe70$c902a8c0@jacky>

My server used reactor to listen clients's requests.
and at client side, I used reactor to connect to server

Now I want to use 2 reactors in server side,
the server will listen some clients's requests,
and it will run a thread to connect to an other server,
at the same time
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041123/ee8fa4ec/attachment.html>

From radeex at gmail.com  Mon Nov 22 23:12:15 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 23 Nov 2004 17:12:15 +1100
Subject: [Twisted-Python] I want to use 2 reactors in same program, help me
In-Reply-To: <002101c4d11c$c788fe70$c902a8c0@jacky>
References: <002101c4d11c$c788fe70$c902a8c0@jacky>
Message-ID: <60ed19d4041122221222944e6c@mail.gmail.com>

On Tue, 23 Nov 2004 13:24:49 +0800, jacky lee <jagucpu at 126.com> wrote:
>  
> My server used reactor to listen clients's requests. 
> and at client side, I used reactor to connect to server 
>   
> Now I want to use 2 reactors in server side, 
> the server will listen some clients's requests, 
> and it will run a thread to connect to an other server, 
> at the same time 

Jacky,

You don't need to run a new reactor for every type of connection. You
can run connectTCP and listenTCP on the same reactor. You don't need
threads, and you don't need multiple reactors.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From roland.hedberg at adm.umu.se  Wed Nov 24 01:27:55 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Wed, 24 Nov 2004 09:27:55 +0100
Subject: [Twisted-Python] XML-RPC, LineReceiver and defer
Message-ID: <BD4BB620-3DF2-11D9-85D0-000D932F504E@adm.umu.se>

Hi!

I'm having problems with defer again :-(
There is something about defer's that I just don't get, obviously.

Anyway, I'd like to get tips on how to solve this problem:

I have a module who on one side listens on XML-RPC and on the other 
uses the LineReceiver protocol to find some information it needs, to 
service the XML-RFC function.

If I have understood it correctly xmlrpc.XMLRFC can return a defer and 
have the XMLRPC layer hold the reply until some event has happend.

Now, the LineReceiver protocol has one function for sending a lines and
another function for receiving them.

So how do I make XMLRPC wait for the right line.

The XML-RPC server should of course be able to handle serveral requests 
at the same time, so there might be more than one outstanding reply on 
the lineReceiver side.

Knowing which reply that is connected to which sent line is doable by 
keeping a queue and using IDs ( the protocol on the LineReceiver side, 
which is no standard protocol, allows for having tags on queries and 
replies).

But how do I keep the connection between the XML-RPC request and the 
line received ?

I though about having defer checking for the change of a value in a 
dictonary, but I don't know if that is doable, is it ?

And finally I don't want to use callLater if I can avoid it. I'd like 
the performance to be as high as possible. That is, the XMLRPC reply 
should be sent as soon as the LineReceiver has gotten the reply.
I also don't want to setup and tear down a connection on the 
LineReceiver side for every request that comes in on the XMLRPC side. 
There is one server on the LineReceiver side that gets all the 
questions, so I liked to be able to have one connection going.

-- Roland




From andrea at cpushare.com  Wed Nov 24 02:35:28 2004
From: andrea at cpushare.com (andrea at cpushare.com)
Date: Wed, 24 Nov 2004 10:35:28 +0100
Subject: [Twisted-Python] pollreactor 1sec timeout
Message-ID: <20041124093528.GB10782@dualathlon.random>

Hello,

Why is the pollreactor rescheduling once per second? I modified it like
this and it still works so far.

--- Twisted/twisted/internet/pollreactor.py.~1~	2004-11-23 03:48:21.000000000 +0100
+++ Twisted/twisted/internet/pollreactor.py	2004-11-24 07:59:30.508119608 +0100
@@ -120,9 +120,7 @@ class PollReactor(default.PosixReactorBa
                POLLIN=select.POLLIN,
                POLLOUT=select.POLLOUT):
         """Poll the poller for new events."""
-        if timeout is None:
-            timeout = 1000
-        else:
+        if timeout is not None:
             timeout = int(timeout * 1000) # convert seconds to milliseconds
 
         try:



From foom at fuhm.net  Wed Nov 24 07:15:26 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 24 Nov 2004 09:15:26 -0500
Subject: [Twisted-Python] pollreactor 1sec timeout
In-Reply-To: <20041124093528.GB10782@dualathlon.random>
References: <20041124093528.GB10782@dualathlon.random>
Message-ID: <498C86F8-3E23-11D9-96B0-000A95A50FB2@fuhm.net>

On Nov 24, 2004, at 4:35 AM, andrea at cpushare.com wrote:
> Hello,
>
> Why is the pollreactor rescheduling once per second? I modified it like
> this and it still works so far.

I can see no reason to think that's necessary, and will remove it if no 
one comes up with a reason.

James




From exarkun at divmod.com  Wed Nov 24 07:28:07 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 24 Nov 2004 14:28:07 GMT
Subject: [Twisted-Python] XML-RPC, LineReceiver and defer
In-Reply-To: <BD4BB620-3DF2-11D9-85D0-000D932F504E@adm.umu.se>
Message-ID: <20041124142807.17481.404442608.divmod.quotient.3484@ohm>

On Wed, 24 Nov 2004 09:27:55 +0100, Roland Hedberg <roland.hedberg at adm.umu.se> wrote:
>Hi!
> 
> I'm having problems with defer again :-(
> There is something about defer's that I just don't get, obviously.
> 
> Anyway, I'd like to get tips on how to solve this problem:
> 
> I have a module who on one side listens on XML-RPC and on the other 
> uses the LineReceiver protocol to find some information it needs, to 
> service the XML-RFC function.
> 
> If I have understood it correctly xmlrpc.XMLRFC can return a defer and 
> have the XMLRPC layer hold the reply until some event has happend.

  Yep.

> 
> Now, the LineReceiver protocol has one function for sending a lines and
> another function for receiving them.
> 
> So how do I make XMLRPC wait for the right line.
> 
> The XML-RPC server should of course be able to handle serveral requests 
> at the same time, so there might be more than one outstanding reply on 
> the lineReceiver side.
> 
> Knowing which reply that is connected to which sent line is doable by 
> keeping a queue and using IDs ( the protocol on the LineReceiver side, 
> which is no standard protocol, allows for having tags on queries and 
> replies).
> 
> But how do I keep the connection between the XML-RPC request and the 
> line received ?
> 
> I though about having defer checking for the change of a value in a 
> dictonary, but I don't know if that is doable, is it ?

  Hopefully you already have something like this:

    from twisted.protocols import basic

    class SimpleRequestProtocol(basic.LineReciever):
        def connectionMade(self):
            self.outstanding = {}
            self.counter = 0

        def request(self, query):
            d = self.outstanding[self.counter] = defer.Deferred()
            self.sendLine('%d %s' % (self.counter, query))
            self.counter += 1
            return d

        def lineReceived(self, response):
            tag, rest = response.split(None, 1)
            self.outstanding.pop(int(tag)).callback(rest)

  Letting the XML-RPC side just call `request' and get back a Deferred that fires whenever the response arrives.

> 
> And finally I don't want to use callLater if I can avoid it. I'd like 
> the performance to be as high as possible. That is, the XMLRPC reply 
> should be sent as soon as the LineReceiver has gotten the reply.
> I also don't want to setup and tear down a connection on the 
> LineReceiver side for every request that comes in on the XMLRPC side. 
> There is one server on the LineReceiver side that gets all the 
> questions, so I liked to be able to have one connection going.
> 

  So, first, you want to be able to get a connected instance:

    from twisted.internet import reactor, protocol

    def getConnectedProto(host, port):
        f = protocol.ClientCreator(reactor, SimpleRequestProtocol)
        return f.connectTCP(host, port)

  This returns a Deferred that fires with the instance once the connection is made.  You can call it from your XML-RPC code, add a callback to the result, and in the callback invoke .request() with whatever args is appropriate.

  But you also don't want a connection per request.  So you want to cache the connection:

    from twisted.internet import defer

    class ConnCache:
        def __init__(self):
            self._cache = {}

        def getConnectedProto(self, host, port)
            try:
                return defer.succeed(self._cache[host, port])
            except KeyError:
                d = self._makeConn(host, port)
                d.addCallback(self._cacheConn, host, port)
                return d

        def _makeConn(self, host, port):
            f = protocol.ClientCreator(reactor, SimpleRequestProtocol)
            return f.connectTCP(host, port)

        def _cacheConn(self, protoInstance, host, port):
            self._cache[host, port] = protoInstance
            return protoInstance

  So from your XML-RPC server, you can instantiate ConnCache and store the instance.  When you need to do something with your SimpleRequestProtocol, you can just call .getConnectedProto() on it.  If there's a connection, it'll be quick; if there's not, it'll go make one and save it for next time, too.

  Hope this helps,

  Jp



From itamar at itamarst.org  Wed Nov 24 08:05:01 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Nov 2004 10:05:01 -0500
Subject: [Twisted-Python] pollreactor 1sec timeout
In-Reply-To: <20041124093528.GB10782@dualathlon.random>
References: <20041124093528.GB10782@dualathlon.random>
Message-ID: <1101308701.10667.72.camel@sheriffpony>

On Wed, 2004-11-24 at 10:35 +0100, andrea at cpushare.com wrote:

> Why is the pollreactor rescheduling once per second? I modified it like
> this and it still works so far.

This might be a leftover from  before signal handlers used wakeUp()
(they all use wakeUp now I hope). I remember a similar reason for
timeouts on windows, again probably because we weren't using wakeUp.

(wakeUp is our method name for using the self-pipe trick).




From andrea at cpushare.com  Wed Nov 24 15:42:32 2004
From: andrea at cpushare.com (andrea at cpushare.com)
Date: Wed, 24 Nov 2004 23:42:32 +0100
Subject: [Twisted-Python] pollreactor 1sec timeout
In-Reply-To: <1101308701.10667.72.camel@sheriffpony>
References: <20041124093528.GB10782@dualathlon.random>
	<1101308701.10667.72.camel@sheriffpony>
Message-ID: <20041124224232.GI10782@dualathlon.random>

Hello,

On Wed, Nov 24, 2004 at 10:05:01AM -0500, Itamar Shtull-Trauring wrote:
> (wakeUp is our method name for using the self-pipe trick).

So basically you write a byte into the pipe from the signal, so poll
will return, right?

1sec latency for a signal would been pretty huge anyway btw ;), so I
guess for the longer term it's better to risk a visible deadlock than
risk silent bad latency.



From itamar at itamarst.org  Wed Nov 24 16:58:25 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 24 Nov 2004 18:58:25 -0500
Subject: [Twisted-Python] pollreactor 1sec timeout
In-Reply-To: <20041124224232.GI10782@dualathlon.random>
References: <20041124093528.GB10782@dualathlon.random>
	<1101308701.10667.72.camel@sheriffpony>
	<20041124224232.GI10782@dualathlon.random>
Message-ID: <1101340706.10666.90.camel@sheriffpony>

On Wed, 2004-11-24 at 23:42 +0100, andrea at cpushare.com wrote:

> So basically you write a byte into the pipe from the signal, so poll
> will return, right?

Yeah.

> 1sec latency for a signal would been pretty huge anyway btw ;), so I
> guess for the longer term it's better to risk a visible deadlock than
> risk silent bad latency.

That's one way to look at it, yes :)




From paul.moore at atosorigin.com  Thu Nov 25 08:24:57 2004
From: paul.moore at atosorigin.com (Paul Moore)
Date: Thu, 25 Nov 2004 15:24:57 +0000 (UTC)
Subject: [Twisted-Python] Re: twisted and threading
References: <20040818021851.GA18404@mit.edu> <4122CAA3.70704@divmod.com>
Message-ID: <loom.20041125T161928-456@post.gmane.org>

Jp Calderone <exarkun <at> divmod.com> writes:

> twisted-10152003 <at> atlas.lcs.mit.edu wrote:
> > 
> > Ah, but that doesn't work.  As I stated the c library (not mine) calls
> > potentially block forever (or at least longer than I want to wait to
> > shutdown the twisted server).  The thread created by deferTothread may
> > never complete which makes shutting down the server gracefully
> > impossible (or so I thought?).
> > 
> 
>    There is no portable way to terminate a thread without its 
> assistance.  Python supports no API for this - save one, the 
> ridiculously named "setDaemon" Thread method.  Twisted doesn't expose 
> this, nor call it internally, as it can lead to segfaults.
> 
>    Perhaps this should be parameterizable (defaulting to the current 
> behavior, of course), so that poorly behaved libraries can be dealt with?
> 
>    Alternatively, since daemonized threads might lead to this anyway, 
> perhaps you should just add a shutdown event os.kill(os.getpid(), 9) 
> <wwinkink>.

Sorry this is from long ago, possibly the OP has found a solution by now, but I 
thought I'd share my approach in case it was of more general interest...

I have hit the same problem recently (C library calls that might hang, and I 
want to give up and quit regardless in the end). What I came up with was a 
function deferToDaemonThread, which put the call in a daemon thread (one that 
the Python main thread will not wait for). It steals a lot of code from 
deferToThread, but creates a dedicated daemon thread for the call rather than 
using the thread pool.

Hope it's of interest,
Paul.

------------------------------------------------------------------------------

from twisted.internet import reactor
from twisted.python import failure
from twisted.internet import defer
from threading import Thread

def deferToDaemonThread(f, *args, **kw):
    """Run function in thread and return result as Deferred."""

    def putResultInDeferred(d, f, args, kw):
	"""Run a function and give results to a Deferred."""
	try:
	    result = f(*args, **kw)
	except:
	    f = failure.Failure()
	    reactor.callFromThread(d.errback, f)
	else:
	    reactor.callFromThread(d.callback, result)

    d = defer.Deferred()
    thread = Thread(target=putResultInDeferred,
	            args=(d, f, args, kw))
    thread.setDaemon(1)
    thread.start()
    return d





From glyph at divmod.com  Thu Nov 25 13:43:20 2004
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 25 Nov 2004 20:43:20 GMT
Subject: [Twisted-Python] Re: twisted and threading
In-Reply-To: <loom.20041125T161928-456@post.gmane.org>
Message-ID: <20041125204320.17481.1175607788.divmod.quotient.5552@ohm>

On Thu, 25 Nov 2004 15:24:57 +0000 (UTC), Paul Moore <paul.moore at atosorigin.com> wrote:
>Jp Calderone <exarkun <at> divmod.com> writes:

> >    There is no portable way to terminate a thread without its 
> > assistance.  Python supports no API for this - save one, the 
> > ridiculously named "setDaemon" Thread method.  Twisted doesn't expose 
> > this, nor call it internally, as it can lead to segfaults.

> I have hit the same problem recently (C library calls that might hang, and I 
> want to give up and quit regardless in the end). What I came up with was a 
> function deferToDaemonThread, which put the call in a daemon thread (one that 
> the Python main thread will not wait for). It steals a lot of code from 
> deferToThread, but creates a dedicated daemon thread for the call rather than 
> using the thread pool.

IMHO, if a library is _that_ poorly behaved, you ought to be communicating with it over a socket or pipe.  Anybody up for writing a 'deferToPythonSubprocess'?



From pf_moore at yahoo.co.uk  Fri Nov 26 01:12:33 2004
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Fri, 26 Nov 2004 08:12:33 +0000
Subject: [Twisted-Python] Re: twisted and threading
References: <loom.20041125T161928-456@post.gmane.org>
	<20041125204320.17481.1175607788.divmod.quotient.5552@ohm>
Message-ID: <uu0rdxc3y.fsf@yahoo.co.uk>

glyph at divmod.com writes:

> IMHO, if a library is _that_ poorly behaved, you ought to be
> communicating with it over a socket or pipe. Anybody up for writing
> a 'deferToPythonSubprocess'?

Not a bad idea - I might have a go (although as I work on Windows, I
don't have a particularly good reactor with process support...)

Paul
-- 
"Bother," said the Borg, "We've assimilated Pooh."




From bostik at stinghorn.com  Fri Nov 26 02:04:44 2004
From: bostik at stinghorn.com (Mika Bostrom)
Date: Fri, 26 Nov 2004 11:04:44 +0200
Subject: [Twisted-Python] Simple multiplex-relayer with
	twisted.protocols.smtp?
Message-ID: <20041126090444.GB2779@borg.intra.stinghorn.com>

  Good day, hackers.

  I'm trying to implement a rather simple, localhost-bound mail relay
with Twisted. The setup is follows:

Internet --- MTA -> multiplexer (*) -> parallel filters -> MTA -> dest.

  Multiplexer marked with (*) is my doing. Filters are independent
systems which accept mail according to destination domain and do their
magic according to domain-wide settings. Different domains can have
completely separate configs and even backends.

  I have read and tried to use existing sample from
http://twistedmatrix.com/pipermail/twisted-python/2003-October/005885.html
and the surrounding thread, but unfortunately have not been so far able
to get the system working.

  Basically the system should be rather trivial: accept everything,
regardless of sender or recipient (frontal MTA has already bounced
incorrect mails). Check recipient and forward to matching filter set.
Use smtp.ESMTP for inbound, smtp.SMTPClient for outbound. However, the
code snippet below freaks out. It now accepts unconditionally both
sender and recipient but issuing DATA causes an immediate stacktrace
with the following last error:

File "/usr/lib/python2.3/site-packages/twisted/protocols/smtp.py",
line 625, in do_DATA
    assert self.delivery
  exceptions.AssertionError: 

  Tracing the problem, it is apparent that there is no delivery method
in use and incidentally, this was apparently the bugging reason in the
original (a year old now) problem. Call me stupid but I couldn't fix
this by following the example and responses.

  Version of Twisted in use: 1.3, as packaged for Debian. (In time we'll
get 2.0 as well.) Any help will be appreaciated. The leap from very
simple Finger examples to smtp parts is rather long and steep...

  Code:

[--snip--]
#!/usr/bin/python

from twisted.internet import reactor, protocol, defer
from twisted.protocols import smtp
from twisted.python import log
import sys


class RelayUtility:
  """Utility class for holding runtime values"""
  
  def __init__(self):
    self.maxconns = 20
    self.active = 0
  
class RelayMessage(smtp.IMessage):
  def __init__(self):
    smtp.IMessage.__init__(self)
    self.msg = []

  

class RelayProtocol(smtp.ESMTP):
  """Relayer; sucks the mail in"""
  
  def __init__(self):
    self.util = util
    # Normal operations
    smtp.ESMTP.__init__(self)
    self.host = "nowhere.dot.invalid"

  def connectionLost(self, reason):
    self.util.active -= 1

  def connectionMade(self):
    # The easiest way. Increments upon connection, decrements
    # upon disconnection; In case of full queue, just kick the client
    self.util.active += 1
    if (self.util.active <= self.util.maxconns):
      smtp.ESMTP.connectionMade(self)
    else:
      self.sendCode(430, "Queue full. Try again later.")
      self.transport.loseConnection()

    
  # This can't be right
  def validateFrom(self, helo, origin):
    return smtp.Address(origin, None)

  # This is certainly not right, DATA barks
  def validateTo(self, user):
    return RelayMessage

class RelayFactory(smtp.SMTPFactory):
  protocol = RelayProtocol


util = RelayUtility()
log.startLogging(sys.stdout)
reactor.listenTCP(10025, RelayFactory())
reactor.run()

[--snap--]

-- 
 Mika Boström         \-/  "World peace will be achieved
 Bostik at stinghorn.com  X    when the last man has killed
 Software slave       /-\   the second-to-last." -anon?



From roland.hedberg at adm.umu.se  Fri Nov 26 07:54:06 2004
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Fri, 26 Nov 2004 15:54:06 +0100
Subject: [Twisted-Python] twistd profiling
Message-ID: <053D4D09-3FBB-11D9-AC6C-000D932F504E@adm.umu.se>

Hi!

Need to profile a twisted based application, way too slow !

twistd -p <file> produces profiling data in the named file

If hotshot is available it's used ?

Are there any nice tools for viewing profiling data ?

Since it's the system that is slow and it contains several separate 
servers I'd also would like to
have timestamps on events (preferably with a subsecond resolution) so I 
could trace flows. How can I ackomplish that ? Any support in twisted 
for it ?

-- Roland




From exarkun at divmod.com  Fri Nov 26 10:57:35 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 26 Nov 2004 17:57:35 GMT
Subject: [Twisted-Python] Simple multiplex-relayer with
In-Reply-To: <20041126090444.GB2779@borg.intra.stinghorn.com>
Message-ID: <20041126175735.17481.1563398971.divmod.quotient.6835@ohm>

On Fri, 26 Nov 2004 11:04:44 +0200, bostik at stinghorn.com (Mika Bostrom) wrote:
>  Good day, hackers.
> 
>   I'm trying to implement a rather simple, localhost-bound mail relay
> with Twisted. The setup is follows:
> 
> [snip]
> 
>   Code:
> 
> [--snip--]
> #!/usr/bin/python
> 
> from twisted.internet import reactor, protocol, defer
> from twisted.protocols import smtp
> from twisted.python import log
> import sys
> 
> 
> class RelayUtility:
>   """Utility class for holding runtime values"""
>   
>   def __init__(self):
>     self.maxconns =3D 20
>     self.active =3D 0
>   
> class RelayMessage(smtp.IMessage):
>   def __init__(self):
>     smtp.IMessage.__init__(self)
>     self.msg =3D []
> 

  The above class is the most obvious problem I see here.  Interfaces are not meant to be subclassed in this manner.  What you really want is something more like:

    class RelayMessage:
        __implements__ = smtp.IMessage

        def lineReceived(self, line):
            # Do something with the line; perhaps buffer it in memory,
            # perhaps try and send it to another connection.

        def eomReceived(self):
            # The message has been fully received; flush the buffer or take
            # whatever other action is appropriate to ensure message delivery.
            # Return a Deferred that fires when the message has been successfully
            # delivered.

        def connectionLost(self):
            # Discard message content, delivery is a failure

>   
> 
> class RelayProtocol(smtp.ESMTP):
>   """Relayer; sucks the mail in"""
>   
>   def __init__(self):
>     self.util =3D util
>     # Normal operations
>     smtp.ESMTP.__init__(self)
>     self.host =3D "nowhere.dot.invalid"
> 
>   def connectionLost(self, reason):
>     self.util.active -=3D 1
> 
>   def connectionMade(self):
>     # The easiest way. Increments upon connection, decrements
>     # upon disconnection; In case of full queue, just kick the client
>     self.util.active +=3D 1
>     if (self.util.active <=3D self.util.maxconns):
>       smtp.ESMTP.connectionMade(self)
>     else:
>       self.sendCode(430, "Queue full. Try again later.")
>       self.transport.loseConnection()
> 
>     
>   # This can't be right
>   def validateFrom(self, helo, origin):
>     return smtp.Address(origin, None)
> 
>   # This is certainly not right, DATA barks
>   def validateTo(self, user):
>     return RelayMessage

  You _could_ do things this way, but a preferable way is probably:

    class RelayDeliveryFactory:
        __implements__ = smtp.IMessageDeliveryFactory

        def getMessageDelivery(self):
            return RelayDelivery()

    class RelayDelivery:
        __implements__ = smtp.IMessageDelivery

        def receivedHeader(self, helo, origin, recipients):
            return "Received: something"

        def validateFrom(self, helo, origin):
            return origin

        def validateTo(self, user):
            return RelayMessage

> 
> class RelayFactory(smtp.SMTPFactory):
>   protocol =3D RelayProtocol
> 

  Then add this buildProtocol method:

    def buildProtocol(self, addr):
        p = smtp.SMTPFactory.buildProtocol(self, addr)
        p.deliveryFactory = RelayDeliveryFactory()
        return p

  ESMTP will call getMessageDelivery on its deliveryFactory attribute, now that it isn't None.  On the object it returns, it will call receivedHeader, validateFrom, and validateTo.  And on the object returned by calling the object returned by validateTo, it will pass the contents of the message being delivered, letting you relay it wherever is appropriate.

  Hope this helps,

  Jp



From patrick.mezard at ifrance.com  Fri Nov 26 00:49:15 2004
From: patrick.mezard at ifrance.com (=?ISO-8859-1?Q?Patrick_M=E9zard?=)
Date: Fri, 26 Nov 2004 08:49:15 +0100
Subject: [Twisted-Python] Re: twisted and threading
In-Reply-To: <loom.20041125T161928-456@post.gmane.org>
References: <20040818021851.GA18404@mit.edu> <4122CAA3.70704@divmod.com>
	<loom.20041125T161928-456@post.gmane.org>
Message-ID: <co6n56$ic7$1@sea.gmane.org>

> Sorry this is from long ago, possibly the OP has found a solution by now, but I 
> thought I'd share my approach in case it was of more general interest...
> 
> I have hit the same problem recently (C library calls that might hang, and I 
> want to give up and quit regardless in the end). What I came up with was a 
> function deferToDaemonThread, which put the call in a daemon thread (one that 
> the Python main thread will not wait for). It steals a lot of code from 
> deferToThread, but creates a dedicated daemon thread for the call rather than 
> using the thread pool.

Have you no way to terminate the blocking call from the C library itself 
? For instance, if your working python thread is waiting on a mutex in 
the C library, destroying the mutex (or something else depending on the 
threading API) may release it.

In this case, you can add a cleanup function to the library cancelling 
all blocking calls. And call it during the reactor shutdown sequence (I 
do not know where exactly, I am not an expert in this area yet, but I 
remember there are tons of handlers everywhere to perform cleanup. I 
hope there are some called before threads shutdown attempts). It means 
that you actually need a thread-pool but can terminate the blocking 
operations safely.

Or am I missing something ?

Patrick Mézard




From exarkun at divmod.com  Sat Nov 27 15:29:31 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 27 Nov 2004 22:29:31 GMT
Subject: [Twisted-Python] Twisted and Python 2.4c1
In-Reply-To: 0
Message-ID: <20041127222931.17481.1811808349.divmod.quotient.8568@ohm>


  Attached is the output from a trial run using Python 2.4c1.  There seems to be a new problem in trial's signal handling code.

  Jp
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: trial.txt
URL: </pipermail/twisted-python/attachments/20041127/731fb1a7/attachment-0002.txt>

From warner at lothar.com  Sat Nov 27 17:35:43 2004
From: warner at lothar.com (Brian Warner)
Date: Sat, 27 Nov 2004 16:35:43 -0800 (PST)
Subject: [Twisted-Python] Twisted and Python 2.4c1
Message-ID: <20041127.163543.94940857.warner@lothar.com>

Jp Calderone <exarkun at divmod.com> writes:

>   Attached is the output from a trial run using Python 2.4c1. There seems
>   to be a new problem in trial's signal handling code.

Got it. Some of the signal-handling code was trying to setup a SIGKILL
handler, which is an error at the C level but wasn't reported at the python
level until 2.4.

The tests are running again, 3 failures and 9 errors, all in test_trial.
Sample attached. The buildslave is using 2.4c1 all the time now, right?

cheers,
 -Brian


===============================================================================
[ERROR]: testBrokenTearDown (twisted.trial.test.test_trial.FunctionalTest)


  File "/home/buildbot/run/full2.4/Twisted/twisted/internet/defer.py", line 117, in maybeDeferred
    result = f(*args, **kw)
  File "/home/buildbot/run/full2.4/Twisted/twisted/trial/test/test_trial.py", line 126, in testBrokenTearDown
    imi = itrial.IMethodInfo(self.reporter.udeMethod)
exceptions.AttributeError: 'BogusReporter' object has no attribute 'udeMethod'


  File "/home/buildbot/run/full2.4/Twisted/twisted/internet/defer.py", line 117, in maybeDeferred
    result = f(*args, **kw)
  File "/home/buildbot/run/full2.4/Twisted/twisted/trial/test/common.py", line 170, in tearDown
    self.reporter.verify(self.failIfImportErrors, self.checkReporterSetup)
  File "/home/buildbot/run/full2.4/Twisted/twisted/trial/test/common.py", line 113, in verify
    assert_(getattr(self, v), 'self.%s did not evaluate to non-zero' % (v,))
  File "/home/buildbot/run/full2.4/Twisted/twisted/trial/assertions.py", line 45, in failUnless
    raise FailTest, msg
twisted.trial.assertions.FailTest: self.setUpReporterCalled did not evaluate to non-zero



From exarkun at divmod.com  Sat Nov 27 17:44:45 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 28 Nov 2004 00:44:45 GMT
Subject: [Twisted-Python] Twisted and Python 2.4c1
In-Reply-To: <20041127.163543.94940857.warner@lothar.com>
Message-ID: <20041128004445.17481.1539917434.divmod.quotient.8706@ohm>

On Sat, 27 Nov 2004 16:35:43 -0800 (PST), Brian Warner <warner at lothar.com> wrote:
>Jp Calderone <exarkun at divmod.com> writes:
> 
> >   Attached is the output from a trial run using Python 2.4c1. There seems
> >   to be a new problem in trial's signal handling code.
> 
> Got it. Some of the signal-handling code was trying to setup a SIGKILL
> handler, which is an error at the C level but wasn't reported at the python
> level until 2.4.

  Thanks

> 
> The tests are running again, 3 failures and 9 errors, all in test_trial.
> Sample attached. The buildslave is using 2.4c1 all the time now, right?
> 

  Yep.

  Jp



From mary-twisted at puzzling.org  Sat Nov 27 17:12:01 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sun, 28 Nov 2004 11:12:01 +1100
Subject: [Twisted-Python] tm.com website
In-Reply-To: <20041113110242.GA14679@fuchsia.puzzling.org>
References: <20041113110242.GA14679@fuchsia.puzzling.org>
Message-ID: <20041128001201.GG19073@titus.home.puzzling.org>

On Sat, Nov 13, 2004, Mary Gardiner wrote:
> Just in case anyone wants to release 2.0 before the 28th...
> 
> I'm going to be pretty much afk for the next two weeks (as will be
> Andrew, btw), so I won't be, for example, contactable about the website.
> I've got a nearly complete (well, suitable at least) 2.0 website in a
> branch in the TwistedWebsite svn repository. The major missing thing is
> websites for some of the projects.

OK, back now, I'll try to progress this further in the next week.

-Mary



From itamar at itamarst.org  Sun Nov 28 20:39:00 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 28 Nov 2004 22:39:00 -0500
Subject: [Twisted-Python] tm.com website
In-Reply-To: <20041128001201.GG19073@titus.home.puzzling.org>
References: <20041113110242.GA14679@fuchsia.puzzling.org>
	<20041128001201.GG19073@titus.home.puzzling.org>
Message-ID: <1101699540.8588.11.camel@sheriffpony>

On Sun, 2004-11-28 at 11:12 +1100, Mary Gardiner wrote:

> OK, back now, I'll try to progress this further in the next week.

You are teh awesome.




From square.erica at msa.hinet.net  Sun Nov 28 20:43:19 2004
From: square.erica at msa.hinet.net (Leon)
Date: Mon, 29 Nov 2004 11:43:19 +0800
Subject: [Twisted-Python] How to use .rpy do upload ?
Message-ID: <00a101c4d5c5$92fdb2b0$974210ac@thecus.com>

I  am a beginner,how can use .rpy do upload ???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041129/3ef0be25/attachment.html>

From michael.mata at gaigen.net  Sun Nov 28 23:02:25 2004
From: michael.mata at gaigen.net (Michael Mata)
Date: Sun, 28 Nov 2004 22:02:25 -0800
Subject: [Twisted-Python] Multiple delimiters in linereceiver
Message-ID: <41AABB71.9030200@gaigen.net>

Is it possible to use the LineReceiver protocol with multiple delimiters?

I've run into situations where clients use either '\r\n' or a '\n'.  To 
handle either situation, I set the delimiter as '\n' and just filter out 
the '\r' from lineReceived().  This fix works, but it sure is ugly.

Has anyone run into a more elegant solution?







From bostik at stinghorn.com  Mon Nov 29 01:08:15 2004
From: bostik at stinghorn.com (Mika Bostrom)
Date: Mon, 29 Nov 2004 10:08:15 +0200
Subject: [Twisted-Python] Simple multiplex-relayer with
In-Reply-To: <20041126175735.17481.1563398971.divmod.quotient.6835@ohm>
References: <20041126090444.GB2779@borg.intra.stinghorn.com>
	<20041126175735.17481.1563398971.divmod.quotient.6835@ohm>
Message-ID: <20041129080815.GA7549@borg.intra.stinghorn.com>

On Fri, 26 Nov 2004, Jp Calderone wrote:
> On Fri, 26 Nov 2004 11:04:44 +0200, bostik at stinghorn.com (Mika Bostrom) wrote:
> > class RelayMessage(smtp.IMessage):
> >   def __init__(self):
> >     smtp.IMessage.__init__(self)
> >     self.msg =3D []
> > 
> 
>   The above class is the most obvious problem I see here.  Interfaces
>   are not meant to be subclassed in this manner.  What you really want
>   is something more like:

  [codelet snipped]

  Thank you, this was indeed the case. You also gave a a very solid rule
of thumb which will come in handy later on. "Interfaces are not meant to
be subclassed." (Yes, cut short; on purpose, as that will be easier to
remember.)

  Your advice also makes a nice example of how to use smtp module as a
base.
  
>   ESMTP will call getMessageDelivery on its deliveryFactory attribute,
>   now that it isn't None.  On the object it returns, it will call
>   receivedHeader, validateFrom, and validateTo.  And on the object
>   returned by calling the object returned by validateTo, it will pass
>   the contents of the message being delivered, letting you relay it
>   wherever is appropriate.

  This part felt a little like black magic, and my first reaction was
that of a scarred Delphi programmer: smelled a bit like excessive
nesting. Until I get a better grasp of what actually happens beneath the
hood, I'll just consider this a necessary evil.

  However, at least by your example and fixes the actual reception
works. I can carry on experimenting with what/how to do with the mail
from thereon.

>   Hope this helps,

  It certainly did. Thank you so much. I may return to list with
additional questions if your examples and hints have failed to enlighten
me after all.

  Take care,

-- 
 Mika Boström         \-/  "World peace will be achieved
 Bostik at stinghorn.com  X    when the last man has killed
 Software slave       /-\   the second-to-last." -anon?



From square.erica at msa.hinet.net  Mon Nov 29 02:35:40 2004
From: square.erica at msa.hinet.net (Leon)
Date: Mon, 29 Nov 2004 17:35:40 +0800
Subject: [Twisted-Python] How to use .rpy do upload ?
Message-ID: <005c01c4d5f6$ccadcd70$974210ac@thecus.com>

<!--upload page-->
<form method="POST" enctype="multipart/form-data" action="test.rpy">
                <input type="file" name="filename">
                <input type="submit">
</form>

#rpy script
from twisted.web.resource import Resource
class test(Resource):
        def render_POST(self,request):
                f = open("/root/basic_daemon/htdocs/test/test.txt","wb") #absolute path,the path must use chmod modify authorization
                f.write(request.args.get('filename')[0])
                f.close()
                return "<html><body>" + 'success' + "</body></html>"
resource = test()

----by Leon----
  ----- Original Message ----- 
  From: Iap, Singuan 
  To: leon_lee at thecus.com 
  Sent: Monday, November 29, 2004 4:56 PM
  Subject: FW: [Twisted-Python] How to use .rpy do upload ?


  If you got answer. 
  Why not answer yourself onto the post?

  singuan



------------------------------------------------------------------------------
  From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Leon
  Sent: Monday, November 29, 2004 11:43 AM
  To: twisted-python at twistedmatrix.com
  Subject: [Twisted-Python] How to use .rpy do upload ?


  I  am a beginner,how can use .rpy do upload ???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041129/38ae207b/attachment.html>

From petri.savolainen at iki.fi  Mon Nov 29 07:55:42 2004
From: petri.savolainen at iki.fi (Petri Savolainen)
Date: Mon, 29 Nov 2004 16:55:42 +0200
Subject: [Twisted-Python] PyMedia & Tk - based mp3 sound recorder
Message-ID: <cofd1i$k30$1@sea.gmane.org>

I've tried to write a simple sound recorder for python. Basically, it 
just reads sound from mic or line in, and encodes it to mp3 on the fly. 
See http://pymedia.org/tut/src/voice_recorder.py.html for a simple 
example I've taken the pymedia recorder code from. Works nicely - but no 
GUI etc. of course.

I've added a very simple Tk-base GUI using twisted, using 
task.LoopingCall to drive the recorder loop that reads chunks data from 
sound device and encodes them.

The problem is that the sound is now garbled - it sounds as if the loop 
is not fast enough or it's dropping some sound data. Apart from twisted 
and Tk integration, the code should be essentially the same as the 
original example that works fine.

I''ve tried with different task looping frequencies and even added Psyco 
optiomization to the code, and all this has made but tiny difference 
-and my PC is an AMD 2400+ with plenty of memory so I would think speed 
is not the issue here; the encoding preferences are mono, 22050Hz and 
64kbit/s.

The source code (about 120 lines in all) is attached - any advice or 
improvement suggestions would be greatly appreciated.

Thanks,

  Petri
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: recorderGUI.py
URL: </pipermail/twisted-python/attachments/20041129/9900ba62/attachment.ksh>

From itamar at itamarst.org  Mon Nov 29 08:55:12 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 29 Nov 2004 10:55:12 -0500
Subject: [Twisted-Python] PyMedia & Tk - based mp3 sound recorder
In-Reply-To: <cofd1i$k30$1@sea.gmane.org>
References: <cofd1i$k30$1@sea.gmane.org>
Message-ID: <1101743712.10755.3.camel@sheriffpony>

On Mon, 2004-11-29 at 16:55 +0200, Petri Savolainen wrote:

> I've added a very simple Tk-base GUI using twisted, using 
> task.LoopingCall to drive the recorder loop that reads chunks data from 
> sound device and encodes them.

LoopingCall has a max resolution dependent on the clock resolution. E.g.
on Linux 2.6 LoopingCall is good up to 1ms resolution (0.001 seconds),
on 2.4 by default 10ms and 2ms on redhat boxes, but that's about it.




From exarkun at divmod.com  Mon Nov 29 09:10:21 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 29 Nov 2004 16:10:21 GMT
Subject: [Twisted-Python] PyMedia & Tk - based mp3 sound recorder
In-Reply-To: <cofd1i$k30$1@sea.gmane.org>
Message-ID: <20041129161021.17481.229429193.divmod.quotient.11237@ohm>

On Mon, 29 Nov 2004 16:55:42 +0200, Petri Savolainen <petri.savolainen at iki.fi> wrote:
>I've tried to write a simple sound recorder for python. Basically, it 
> just reads sound from mic or line in, and encodes it to mp3 on the fly. 
> See http://pymedia.org/tut/src/voice_recorder.py.html for a simple 
> example I've taken the pymedia recorder code from. Works nicely - but no 
> GUI etc. of course.
> 
> I've added a very simple Tk-base GUI using twisted, using 
> task.LoopingCall to drive the recorder loop that reads chunks data from 
> sound device and encodes them.
> 
> The problem is that the sound is now garbled - it sounds as if the loop 
> is not fast enough or it's dropping some sound data. Apart from twisted 
> and Tk integration, the code should be essentially the same as the 
> original example that works fine.
> 
> I''ve tried with different task looping frequencies and even added Psyco 
> optiomization to the code, and all this has made but tiny difference 
> -and my PC is an AMD 2400+ with plenty of memory so I would think speed 
> is not the issue here; the encoding preferences are mono, 22050Hz and 
> 64kbit/s.

  You may want to look at how Shtoom gets its audio input.  It uses Twisted and seems to have audio handling down pretty well.

    http://www.divmod.org/Home/Projects/Shtoom/

  Jp



From petri.savolainen at iki.fi  Mon Nov 29 10:05:09 2004
From: petri.savolainen at iki.fi (Petri Savolainen)
Date: Mon, 29 Nov 2004 19:05:09 +0200
Subject: [Twisted-Python] Re: PyMedia & Tk - based mp3 sound recorder
In-Reply-To: <1101743712.10755.3.camel@sheriffpony>
References: <cofd1i$k30$1@sea.gmane.org> <1101743712.10755.3.camel@sheriffpony>
Message-ID: <cofkk8$em6$1@sea.gmane.org>

Itamar Shtull-Trauring wrote:
> On Mon, 2004-11-29 at 16:55 +0200, Petri Savolainen wrote:
> 
> 
>>I've added a very simple Tk-base GUI using twisted, using 
>>task.LoopingCall to drive the recorder loop that reads chunks data from 
>>sound device and encodes them.
> 
> 
> LoopingCall has a max resolution dependent on the clock resolution. E.g.
> on Linux 2.6 LoopingCall is good up to 1ms resolution (0.001 seconds),
> on 2.4 by default 10ms and 2ms on redhat boxes, but that's about it.

Good to know - I was wondering what's the maximum. I've tried quite a 
few different values for the resolution, ranging from 0.05 to about 
0.00001 or so, with no significant variation to audio quality.

  Petri




From thomas.weholt at gmail.com  Mon Nov 29 10:59:59 2004
From: thomas.weholt at gmail.com (Thomas Weholt)
Date: Mon, 29 Nov 2004 18:59:59 +0100
Subject: [Twisted-Python] WebDav example?
Message-ID: <ffb7b7f8041129095958b3e033@mail.gmail.com>

Hi,

I've seen the akadav twisted-based webdav module, but there's no
documentation or examples in the archive. Can anybody show me how to
use it to server files from a specificed directory?

-- 
Mvh/Best regards,
Thomas Weholt
http://www.weholt.org



From foom at fuhm.net  Mon Nov 29 11:03:17 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 29 Nov 2004 13:03:17 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <F23B22B8-4230-11D9-96B0-000A95A50FB2@fuhm.net>

Bug summary
______________________
Since 2004-11-20 17:24:10.440000:
   Bugs opened: 17   Bugs closed: 19   Total open bugs: 315 (-2)

New / Reopened Bugs
______________________
make epydoc stop ignoring zope interfaces  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue794 opened by radix

[TRIAL] Unhandled exception in trial at result reporting time  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue800 opened by exarkun

Intermittent twisted.trial.test.test_util.TestMktemp failure  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue799 opened by exarkun

[TRIAL] Intermittent 
twisted.trial.test.test_adapters.TestFailureFormatting failure  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue798 opened by exarkun

[TRIAL] t.trial.util.wait deprecates, but doesn't replace  (yesterday)
        http://www.twistedmatrix.com/bugs/issue795 opened by teratorn

[TRIAL] trial inconsistently reporting ERROR's  (yesterday)
        http://www.twistedmatrix.com/bugs/issue796 opened by teratorn

[CORE] gtkreactor fixing  (an hour ago)
        http://www.twistedmatrix.com/bugs/issue805 opened by jknight

qtreactor dont works with threads!!  (2 days ago)
        http://www.twistedmatrix.com/bugs/issue793 opened by nahu

[TRIAL] 'trial --until-failure twisted.abc' spews forever  (yesterday)
        http://www.twistedmatrix.com/bugs/issue804 opened by exarkun

[MKTAP] mktap man page out of sync  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue802 opened by doko

[MKTAP] mktap news is broken  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue803 opened by doko

t.names.client.ThreadedResolver should be in core?  (7 days ago)
        http://www.twistedmatrix.com/bugs/issue790 opened by jknight

[MKTAP] "mktap -t source" broken  (yesterday)
CLOSED http://www.twistedmatrix.com/bugs/issue797 opened by teratorn

reapAllProcesses occassionally, as apparently signal delivery is 
unreliable  (6 days ago)
        http://www.twistedmatrix.com/bugs/issue791 opened by itamarst

[TWISTD, CORE] twistd --interactive (or something) that starts up an 
async REPL  (1 week ago)
        http://www.twistedmatrix.com/bugs/issue789 opened by radix

[TRIAL] trial warning suppression tests should be less noisy  
(yesterday)
        http://www.twistedmatrix.com/bugs/issue801 opened by exarkun

Reactor that complains when non-threadsafe APIs are called from a 
thread  (3 days ago)
        http://www.twistedmatrix.com/bugs/issue792 opened by itamarst

Bugs Closed
______________________
Move SRVConnector into twisted.names  (3 weeks ago)
        http://www.twistedmatrix.com/bugs/issue772 opened by itamarst, 
closed by radix

[WIN32] win32 twistd.bat only accepts 9 arguments  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue747 opened by warner, 
closed by teratorn

mktap argument and man page  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue755 opened by opq, closed 
by teratorn

[MKTAP] mktap man page out of sync  (yesterday)
        http://www.twistedmatrix.com/bugs/issue802 opened by doko, 
closed by teratorn

[MKTAP] mktap news is broken  (yesterday)
        http://www.twistedmatrix.com/bugs/issue803 opened by doko, 
closed by teratorn

[MKTAP] "mktap -t source" broken  (yesterday)
        http://www.twistedmatrix.com/bugs/issue797 opened by teratorn, 
closed by teratorn

twistd --version failed on windows? I'm using 1.3.0  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue742 opened by maoy, 
closed by teratorn

[CORE] tksupport raises bogus error when Tk() object destroyed  (7 
months ago)
        http://www.twistedmatrix.com/bugs/issue588 opened by edsuom, 
closed by itamarst

[CORE] Reactor should remove references to already called callbacks 
added by addSystemEventTrigger  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue752 opened by itamarst, 
closed by itamarst

Add ClientCreator example to TCP Client howto  (2 months ago)
        http://www.twistedmatrix.com/bugs/issue708 opened by mcfletch, 
closed by itamarst

[MAIL] test_mail fails on Windows  (12 months ago)
        http://www.twistedmatrix.com/bugs/issue409 opened by 
PenguinOfDoom, closed by exarkun

[CORE] reactor.installResolver doesn't work correctly  (8 months ago)
        http://www.twistedmatrix.com/bugs/issue570 opened by spiv, 
closed by exarkun

[MAIL] SMTP errors during IMessage.eomReceived are hidden  (9 months 
ago)
        http://www.twistedmatrix.com/bugs/issue503 opened by warner, 
closed by exarkun

mktap arguments  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue753 opened by kyle, 
closed by exarkun

[TWISTD] twistw should be renamed _twistw to avoid user confusion  (3 
weeks ago)
        http://www.twistedmatrix.com/bugs/issue782 opened by spiv, 
closed by radix

cfreactor and listenUDP crashes in pyobjc application  (5 months ago)
        http://www.twistedmatrix.com/bugs/issue648 opened by burris, 
closed by radix

[PATCH] added timeout and error checking logic to smtp.py  (1 month ago)
        http://www.twistedmatrix.com/bugs/issue756 opened by bkirsch, 
closed by exarkun

[MAIL] plusWildcard for mktap mail  (13 months ago)
        http://www.twistedmatrix.com/bugs/issue366 opened by 
alexjacobson, closed by exarkun

[WEB] Resource.render should allow returning a Deferred  (14 months ago)
        http://www.twistedmatrix.com/bugs/issue253 opened by jknight, 
closed by jknight




From iap_yeh at abit.com.tw  Mon Nov 29 20:38:14 2004
From: iap_yeh at abit.com.tw (Iap)
Date: Tue, 30 Nov 2004 11:38:14 +0800
Subject: [Twisted-Python] want to freeze twisted
Message-ID: <200411300333.iAU3XqkR012046@mail.thecus.com>

I have a twistd-based web server by running a web.tap file like this:
 
$twistd -o -f web.tap -l /var/log/twistd.log
 
Great, it works. Then, I use cx_freeze to freeze  it.
 
$FreezePython --install-dir freeze_twistd twistd
 
That is ok, lots of *.so have been copied into freeze_twistd/*.
After moving those all into another machine, and run the executable
 
$freeze_twistd/twistd
 
I got complains on missing some modules.
I realized that those twisted/* don't be freezed.
 
Then, I try:
$FreezePython --include-modules=cgi,calendar,twisted
--install-dir=freeze_twistd twistd
 
That is ok too. But twisted still not been included.
Any suggestion?
 
Thanks in advance.
 
Iap.
BTW: I searched google with keywords "twisted freeze", "twistd freeze". Not
so many hits.
 
 
 
 
 
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20041130/f3caaa65/attachment.html>

From bostik at stinghorn.com  Tue Nov 30 07:18:15 2004
From: bostik at stinghorn.com (Mika Bostrom)
Date: Tue, 30 Nov 2004 16:18:15 +0200
Subject: [Twisted-Python] Simple multiplex-relayer with
In-Reply-To: <20041129080815.GA7549@borg.intra.stinghorn.com>
References: <20041126090444.GB2779@borg.intra.stinghorn.com>
	<20041126175735.17481.1563398971.divmod.quotient.6835@ohm>
	<20041129080815.GA7549@borg.intra.stinghorn.com>
Message-ID: <20041130141815.GI7549@borg.intra.stinghorn.com>

On Mon, 29 Nov 2004, Mika Bostrom wrote:
> On Fri, 26 Nov 2004, Jp Calderone wrote:
> >   ESMTP will call getMessageDelivery on its deliveryFactory attribute,
> >   now that it isn't None.  On the object it returns, it will call
> >   receivedHeader, validateFrom, and validateTo.  And on the object
> >   returned by calling the object returned by validateTo, it will pass
> >   the contents of the message being delivered, letting you relay it
> >   wherever is appropriate.
> 
>   This part felt a little like black magic, [...]

  This part still feels a little voodooish, but I have figured out at
least something. I don't need to use SMTPClient at all; just use
smtp.sendmail() to forward the mail to next point of entry.

  However, since my intention was to multiplex outgoing mails to
different scanning engines, just forwarding blindly is not exactly
productive. Let's assume I have 5 or 6 different scanning engines
running in localhost, all of them accepting inbound mail via SMTP in
irregular ports. smtp.sendmail() uses the standard port, so I came up
with this:

[--snip--]
diff -uN twisted/protocols/smtp.py twisted/protocols/smtp.py.new 
--- twisted/protocols/smtp.py   2004-04-09 06:06:54.000000000 +0300
+++ twisted/protocols/smtp.py.new       2004-11-29 14:16:01.000000000 +0200
@@ -1318,7 +1318,7 @@
         p.factory = self
         return p
 
-def sendmail(smtphost, from_addr, to_addrs, msg):
+def sendmail(smtphost, from_addr, to_addrs, msg, port=25):
     """Send an email
 
     This interface is intended to be a direct replacement for
@@ -1338,6 +1338,9 @@
         to pass an email.Message directly, but doing the conversion with
         email.Generator manually will give you more control over the
         process).
+    @param port: The port to connect to on smtphost. If none is
+        provided, standard 25 is used.
+    
 
     @rtype: L{Deferred}
     @returns: A L{Deferred}, its callback will be called if a message is sent
@@ -1354,7 +1357,7 @@
 
     d = defer.Deferred()
     factory = SMTPSenderFactory(from_addr, to_addrs, msg, d)
-    reactor.connectTCP(smtphost, 25, factory)
+    reactor.connectTCP(smtphost, port, factory)
 
     return d

[--snap--]

  It should allow me to inject the mail to any destination, host:port
not being a hindrance. It should also retain compatibility with all
existing scripts that use smtp.sendmail()

  Now, to _use_ that, I came up with something like this: (referring to
previous mails with complete code)

[--schnippel--]
class RelayMessage:
  __implements__ = smtp.IMessage

  def __init__(self):
    # Clear before adding
    util.connup()
    self.msg = []

  def lineReceived(self, line):
    self.msg.append(line)

  def eomReceived(self):
    # Add message to outgoing queue
    # XXX Does not work yet, address information needs to be dug out
    dd = smtp.sendmail('localhost', self._from, self._to, self.msg, 
      10050)
    dd.addCallBack(util.conndown) # When mail has been passed, update counter

    # Return a success
    return defer.succeed('Tally ho.')

  def connectionLost(self):
    # If connection is ever lost in this stage, it is a delivery error
    self.conndown()
    self.msg = []
    
[--schnappel--]

  The problem here is naturally that to use smtp.sendmail() I need to
extract addresses for sender and recipient(s). I *know* they are there
somewhere, but after experimentation and minor excavation I feel utterly
lost.

  smtp.SMTP.{_cbFromValidate,_cbToValidate} routines place these strings
in SMTP._from and SMTP._to, but I haven't been able to dig them out so I
could use them. This feels like the most straightforward way of doing
this and as such, one I would like to implement.

  There must be some clean path from smtp.IMessage interfaces to access
items in a smtp.STMP instance. If anyone feels generous and
knowledgeable, I for one would gladly welcome the hint as to how this is
done.

  For what it's worth, if the patch really works I'll naturally try to 
submit it for inclusion. 


-- 
 Mika Boström         \-/  "World peace will be achieved
 Bostik at stinghorn.com  X    when the last man has killed
 Software slave       /-\   the second-to-last." -anon?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20041130/cf8d124f/attachment.sig>

From anthony at interlink.com.au  Tue Nov 30 07:34:09 2004
From: anthony at interlink.com.au (Anthony Baxter)
Date: Wed, 1 Dec 2004 01:34:09 +1100
Subject: [Twisted-Python] PyMedia & Tk - based mp3 sound recorder
In-Reply-To: <cofd1i$k30$1@sea.gmane.org>
References: <cofd1i$k30$1@sea.gmane.org>
Message-ID: <200412010134.10036.anthony@interlink.com.au>

On Tuesday 30 November 2004 01:55, Petri Savolainen wrote:
> I've tried to write a simple sound recorder for python. Basically, it
> just reads sound from mic or line in, and encodes it to mp3 on the fly.
> See http://pymedia.org/tut/src/voice_recorder.py.html for a simple
> example I've taken the pymedia recorder code from. Works nicely - but no
> GUI etc. of course.

Have a look at the scripts/shreader.py script in shtoom svn. It collects
audio from any number of backend audio devices, and (optionally) 
records it to a file. It works fine.

Anthony



From itamar at itamarst.org  Tue Nov 30 08:52:18 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Nov 2004 10:52:18 -0500
Subject: [Twisted-Python] Simple multiplex-relayer with
In-Reply-To: <20041130141815.GI7549@borg.intra.stinghorn.com>
References: <20041126090444.GB2779@borg.intra.stinghorn.com>
	<20041126175735.17481.1563398971.divmod.quotient.6835@ohm>
	<20041129080815.GA7549@borg.intra.stinghorn.com>
	<20041130141815.GI7549@borg.intra.stinghorn.com>
Message-ID: <1101829939.10757.30.camel@sheriffpony>

On Tue, 2004-11-30 at 16:18 +0200, Mika Bostrom wrote:

>   However, since my intention was to multiplex outgoing mails to
> different scanning engines, just forwarding blindly is not exactly
> productive. Let's assume I have 5 or 6 different scanning engines
> running in localhost, all of them accepting inbound mail via SMTP in
> irregular ports. smtp.sendmail() uses the standard port, so I came up
> with this:

Could you add this patch to http://twistedmatrix.com/bugs/?




From itamar at itamarst.org  Tue Nov 30 12:46:44 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Nov 2004 14:46:44 -0500
Subject: [Twisted-Python] Reminder: PyCon 2005 call for proposals is open
Message-ID: <1101844004.10790.42.camel@sheriffpony>

http://www.python.org/pycon/2005/cfp.html





From petri.savolainen at iki.fi  Tue Nov 30 14:36:01 2004
From: petri.savolainen at iki.fi (Petri Savolainen)
Date: Tue, 30 Nov 2004 23:36:01 +0200
Subject: [Twisted-Python] Re: PyMedia & Tk (SOLVED)
In-Reply-To: <cofd1i$k30$1@sea.gmane.org>
References: <cofd1i$k30$1@sea.gmane.org>
Message-ID: <coiosb$191$1@sea.gmane.org>

Thanks for everyone who responded. Embarrassingly, I had forgotten to 
make sure the file was opened in binary mode...

> The problem is that the sound is now garbled - it sounds as if the loop 
> is not fast enough or it's dropping some sound data. Apart from twisted 
> and Tk integration, the code should be essentially the same as the 
> original example that works fine.

>    def startRecording(self):
>       file = tkFileDialog.asksaveasfile(title="Enter file to save to")

So instead:

file = tkFileDialog.asksaveasfile(mode="wb", title="Enter file to save to")




From eltronic at juno.com  Tue Nov 30 15:14:26 2004
From: eltronic at juno.com (eltronic at juno.com)
Date: Tue, 30 Nov 2004 17:14:26 -0500
Subject: [Twisted-Python] PyMedia & Tk - based mp3 sound recorder
Message-ID: <20041130.172826.-1517669.0.eltronic@juno.com>


 On Tuesday 30 November 2004 01:55, Petri Savolainen wrote:
 > I've tried to write a simple sound recorder for python. Basically,  it
 > just reads sound from mic or line in, and encodes it to mp3 on the 
 > fly.
the use of psyco might actually be slowing you down.
it can't help w/pymedia being a compiled extension and
the UI isn't a likely source of bottleneck. also, you should 
subclass from object to give psyco something to work with.
pymedia didn't recognize my sound device or I would have tried it.

________________________________________________________________
Juno Platinum $9.95. Juno SpeedBand $14.95.
Sign up for Juno Today at http://www.juno.com!
Look for special offers at Best Buy stores.



From bostik at stinghorn.com  Tue Nov 30 23:59:17 2004
From: bostik at stinghorn.com (Mika Bostrom)
Date: Wed, 1 Dec 2004 08:59:17 +0200
Subject: [Twisted-Python] Simple multiplex-relayer with
In-Reply-To: <1101829939.10757.30.camel@sheriffpony>
References: <20041126090444.GB2779@borg.intra.stinghorn.com>
	<20041126175735.17481.1563398971.divmod.quotient.6835@ohm>
	<20041129080815.GA7549@borg.intra.stinghorn.com>
	<20041130141815.GI7549@borg.intra.stinghorn.com>
	<1101829939.10757.30.camel@sheriffpony>
Message-ID: <20041201065917.GJ7549@borg.intra.stinghorn.com>

On Tue, 30 Nov 2004, Itamar Shtull-Trauring wrote:
> On Tue, 2004-11-30 at 16:18 +0200, Mika Bostrom wrote:
> 
> >   However, since my intention was to multiplex outgoing mails to
> > different scanning engines, just forwarding blindly is not exactly
> > productive. Let's assume I have 5 or 6 different scanning engines
> > running in localhost, all of them accepting inbound mail via SMTP in
> > irregular ports. smtp.sendmail() uses the standard port, so I came up
> > with this:
> 
> Could you add this patch to http://twistedmatrix.com/bugs/?

  Certainly, and I intend to. I just want to test it in rather
heterogenic use cases first, to be sure that it does in fact do what I
want it to do.

-- 
 Mika Boström         \-/  "World peace will be achieved
 Bostik at stinghorn.com  X    when the last man has killed
 Software slave       /-\   the second-to-last." -anon?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20041201/3c44a314/attachment.sig>

