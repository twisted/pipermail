From mongo57a at comcast.net  Fri Nov  1 00:03:38 2002
From: mongo57a at comcast.net (andy surany)
Date: Fri, 01 Nov 2002 00:03:38 -0500
Subject: [Twisted-Python] Proxy Server With Twisted
Message-ID: <003901c28164$0a21dfa0$2502a8c0@emily.ewndsr01.nj.comcast.net>

Hi John,

I had a "proxy" thread in this group - but I was not familiar enough with proxys to make it work. However, if you go to the Tutor list you will find a series of threads on this subject. Look for a proxy (or 2) that was contributed by Lloyd Kvam (about a week ago).

HTH

Regards,
Andy
  -----Original Message-----
  From: John Abel <
  To: Twisted-Python at twistedmatrix.com <Twisted-Python at twistedmatrix.com>
  Date: Thursday, October 31, 2002 11:31 PM
  Subject: [Twisted-Python] Proxy Server With Twisted


  Hi,

  I remember seeing something like this pass the list a while back, but I can't seem to find it.  I've been trying to write a simple proxy server for my two machines at home, using twisted.  I've tried using code I'd written for a simple NNTP server, as a base, but upon calling reactor.run(), I get "Proxy instance has no attribute 'doStart'".  I've tried using the app module, as a way of trying to run it, but haven't had much success there either.  Has anyone done this before?  Does anyone have any docs for doing this sort of thing?

  Thanks

  John
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20021101/dec391ad/attachment.htm 

From exarkun at meson.dyndns.org  Fri Nov  1 00:07:13 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 1 Nov 2002 00:07:13 -0500
Subject: [Twisted-Python] Sending email asynchronously
Message-ID: <20021101050713.GA20397@meson.dyndns.org>

  Just a heads up: I've just stuck in twisted.protocols.smtp.sendEmail(); it
is based very heavily on some code itamar sent me and can handle attachments
as well as plain ol' email.  I imagine there are some things wrong with it,
but this is something I've found lacking in Twisted for a long time, so I
had to add it, even broken :)  Suggestions on the what the One True Way it
should work are welcome (but it does what I want it to now, so don't expect
me to improve it without input ;).

  Jp

-- 
If the automobile had followed the same development as the computer, a 
Rolls-Royce would today cost $100, get a million miles per per gallon,
and explode once a year killing everyone inside.
                -- Robert Cringely, InfoWorld
--
 12:00am up 164 days, 1:59, 5 users, load average: 0.12, 0.13, 0.10
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021101/80d7b564/attachment.pgp 

From exarkun at meson.dyndns.org  Fri Nov  1 01:01:45 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 1 Nov 2002 01:01:45 -0500
Subject: [Twisted-Python] Some comments on twisted.news
In-Reply-To: <n2m-g.y98qpdnu.fsf@morpheus.demon.co.uk>
References: <n2m-g.y98qpdnu.fsf@morpheus.demon.co.uk>
Message-ID: <20021101060145.GA20898@meson.dyndns.org>

On Tue, Oct 22, 2002 at 06:49:09PM +0100, Paul Moore wrote:
> I just set up a basic demo new server using twisted. Some initial comments:
> 
> 1. It took me almost no time to put together a basic dummy NNTP
>    server. Just create the backend, put a mktap driver in, and it's
>    working.

  Glad to hear it :)

> 
> 2. There seems to be a problem with the server class. It translates
>    \r\n.. to \r\n. in the data the backend supplies - this should be
>    the other way round (it should be *doubling* the dots, so that they
>    don't look like the end of data marker to the client).
> 

  Oops, thanks for the report.

> 3. It would be nice if the server handled the translation to CRLF, so
>    that backends could return data with lines separated by \n, and the
>    server class would convert that to \r\n. After all, \n is the
>    "normal" end of line character internal to Python code, and \r\n is
>    a feature of the NNTP protocol, so the protocol driver should be
>    responsible for the conversion (IMHO). Of course, this is a
>    behaviour change, which could break existing backends, so maybe
>    it's not practical to make this change.

  I agree that \n would probably be preferable, this was just sloppyness on
my part in the initial implementation.  I think it could be changed in such
a way so as not to break existing code, but allow new code to use \n
(similar to how LineReceiver works), and I think this would be a good thing
to do.

> 
> 4. The implementation of STAT requests the article from the
>    backend. This could be inefficient if getting the message ID is
>    cheap, but getting the full article is expensive for a particular
>    backend (it will be for me). In my partly-implemented NNTP server
>    written in "raw" Python (before I found Twisted) I had a backend
>    method getArticle(..., head=1, body=1) which was used to implement
>    all of HEAD, BODY, ARTICLE and STAT, just by setting different
>    values for the head and body parameters (so the backend could check
>    for the case where neither was required, and act accordingly).

  Hmmm.  I have an {indeterminant}-term goal of creating a better backend
interface.  If this isn't a pressing concern for you now, I'd rather put it
off until that happened (though I'd have no problem if you sent a patch that
made the necessary changes).

> 
> (2) is obviously fairly trivial. I think I could implement (3) and
> (4), if it would be useful. I could submit a patch, which would alter
> the server code and the 2 existing backends (I couldn't test the
> database backend, as I don't have a database to test with, but I could
> test the pickle-based code). Would this be helpful? Are there likely
> to be 3rd party nntp backends which would be broken by such a change?

  I've been away a while, so maybe you've already gone ahead and done some
of this?  If not, I might have a crack at it myself.  I'll wait to hear
what, if anything, you've done thus far though.

  Jp

-- 
If the automobile had followed the same development as the computer, a 
Rolls-Royce would today cost $100, get a million miles per per gallon,
and explode once a year killing everyone inside.
                -- Robert Cringely, InfoWorld
--
 12:00am up 164 days, 1:59, 5 users, load average: 0.12, 0.13, 0.10
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021101/4a60eeea/attachment.pgp 

From twisted at moshez.org  Fri Nov  1 01:05:59 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 1 Nov 2002 06:05:59 -0000
Subject: [Twisted-Python] SMTP
In-Reply-To: <200210312036.g9VKaH7O031180@fido.strakt.com>
References: <200210312036.g9VKaH7O031180@fido.strakt.com>
Message-ID: <20021101060559.24216.qmail@green.zadka.com>

On Thu, 31 Oct 2002, Anders Hammarquist <iko at strakt.com> wrote:

> Feedback is welcome, as always.

I couldn't apply it.
Can you update and generate a patch against latest CVS?
Thanks.



From spam at polynode.com  Fri Nov  1 05:45:10 2002
From: spam at polynode.com (Alex)
Date: Fri, 01 Nov 2002 05:45:10 -0500
Subject: [Twisted-Python] More strangeness with Woven
Message-ID: <5.1.1.6.0.20021101053837.00bcccf8@coral.tufts.edu>

I'm finding some strange behavior:

section = widgets.Div()
la = widgets.Anchor()
section.add(la)
section.add(widgets.Br())
section.add(widgets.Text('blah'))

Here, everything inside 'section' is being replaced by the widgets.Text -- 
everything added before it is lost.  This seems to be happening every time 
a Text widget is added to a Div; everything before it is lost.

--
Alex Levy
WWW: http://mesozoic.geecs.org
Tel: 617.835.0778

"Never let your sense of morals prevent you from doing what is right."
-- Salvor Hardin, Isaac Asimov's _Foundation_





From paul at nfg.nl  Fri Nov  1 08:59:21 2002
From: paul at nfg.nl (Paul Stevens)
Date: Fri, 1 Nov 2002 14:59:21 +0100
Subject: [Twisted-Python] newbie: connecting to a PB service from a web resource
Message-ID: <20021101145921.12f621cc.paul@nfg.nl>



Hi all,

I'm trying to build a small webapp that will allow me to connect to a remote PB
service. Results from the remote calls are to be used in a simple DOM template.

Is this feasable ?

I've got all the building blocks functioning alright, using the pbquote.py and
pbquoteclient.py code as examples.

However, when I try to integrate the code from the commandline client into the
dom resource, I'm lost.

How can I make sure the client waits a while -- until all callbacks are
handled ?

I can see the refcount growing on the server side each time I connect to the
clientside webserver. But how to disconnect.

Clues or pointers anyone ? Thanks.


-- 
  ________________________________________________________________
  Paul Stevens                                  mailto:paul at nfg.nl
  NET FACILITIES GROUP                     PGP: finger paul at nfg.nl
  The Netherlands________________________________http://www.nfg.nl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: webstatusreporter.py
Type: application/octet-stream
Size: 1205 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021101/7ddefc59/attachment.obj 

From dp at twistedmatrix.com  Fri Nov  1 10:38:27 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 1 Nov 2002 07:38:27 -0800
Subject: [Twisted-Python] newbie: connecting to a PB service from a web resource
In-Reply-To: <20021101145921.12f621cc.paul@nfg.nl>
Message-ID: <F6EF1CFC-EDAF-11D6-A3C2-00039376B1AE@twistedmatrix.com>

It's fairly simple, there's just one important detail you're missing -- 
in order to get a node factory_* to wait for a deferred, you have to 
return it. (Ah, the joys of async programming.) Since you're also 
dealing with a series of deferreds, it's even more tricky. Here's what 
you do:

In the factory_getStatus method, get the first Deferred by calling 
connect. Add a callback to it and make sure you pass the node to the 
callback. Return the Deferred. (DOMTemplate will know that in order to 
render this node, it will have to wait for the results of the Deferred.)

In the readStatus callback method (whose signature should be modified 
to accept the node you passed to the callback above), get the second 
deferred, add the setResult callback to it, and pass the node along to 
that callback as well. *Return the Deferred*. (DOMTemplate sees that 
the results of the first Deferred are a second Deferred. It knows that 
in order to render this node, it will have to wait for the results of 
the second Deferred.)

Finally, in the setResult callback method (whose signature should be 
modified to accept the node), you have the result data you wish to 
insert into the node. You also have a reference to the node, since you 
passed it along though all the callbacks. Mutate the node (clear it, 
then node.appendChild(self.d.createTextNode("%s", result))) and *Return 
the node*. (DOMTemplate sees that the results of the second deferred 
are a node, and it will be inserted into the DOM (in this case, since 
the returned node is the same as the node that was passed in, nothing 
happens) and when the DOM is rendered to XML your data will be in it.)

Why is this fairly complicated procedure required? Well, in the 
original factory_getStatus, you call self.connect() which immediately 
returns a Deferred. You assume that self.result is ready -- this is not 
the case. Since the data will not be ready until the callback has 
fired, you have to defer doing the actual work until the callback, as 
well.

Donovan

On Friday, November 1, 2002, at 05:59 AM, Paul Stevens wrote:

>
>
> Hi all,
>
> I'm trying to build a small webapp that will allow me to connect to a 
> remote PB
> service. Results from the remote calls are to be used in a simple DOM 
> template.
>
> Is this feasable ?
>
> I've got all the building blocks functioning alright, using the 
> pbquote.py and
> pbquoteclient.py code as examples.
>
> However, when I try to integrate the code from the commandline client 
> into the
> dom resource, I'm lost.
>
> How can I make sure the client waits a while -- until all callbacks are
> handled ?
>
> I can see the refcount growing on the server side each time I connect 
> to the
> clientside webserver. But how to disconnect.
>
> Clues or pointers anyone ? Thanks.
>
>
> -- 
>   ________________________________________________________________
>   Paul Stevens                                  mailto:paul at nfg.nl
>   NET FACILITIES GROUP                     PGP: finger paul at nfg.nl
>   The Netherlands________________________________http://www.nfg.nl
> <webstatusreporter.py>




From dp at twistedmatrix.com  Fri Nov  1 10:41:34 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 1 Nov 2002 07:41:34 -0800
Subject: [Twisted-Python] 'model' attribute is showing up in processed HTML
In-Reply-To: <5.1.1.6.0.20021031190558.022e5e00@coral.tufts.edu>
Message-ID: <66B8F9E8-EDB0-11D6-A3C2-00039376B1AE@twistedmatrix.com>

Hmm. view= and controller= attributes are stripped off result nodes to 
prevent infinite recursion, but I left the model= attributes in because 
it's useful for debugging to see which model= a node was applied to, in 
the output. There's no reason I couldn't strip it as well. Maybe I will 
add a "strict" mode, because as I said it's useful for debugging to see 
certain woven attributes in the output.

Maybe this is the time to create a unique woven namespace? <div 
woven:model="foo" />? It seems like a lot more typing.

Donovan

On Thursday, October 31, 2002, at 04:10 PM, Alex Levy wrote:

> The 'model' node attribute from my XHTML templates is showing up in 
> the final HTML being spewed by twistd.  Is there a reason Twisted does 
> this?  It's causing my pages to fail W3C validation.  This isn't 
> happening with the 'view' attribute.
>
> Example:
>
>     <td class="sidebar" view="sidebar"></td>
>     <td class="content">
>         <div class="title" model="title"></div>
>         <span model="content"/>
>     </td>
>
> ...becomes:
>
>     <td class="sidebar">{sidebar stuff...}</td>
>     <td class="content">
>         <div model="title" class="title">This is the title.</div>
>         <span model="content">Content goes here.  w00t.</span>
>     </td>
>
> --
> Alex Levy
> WWW: http://mesozoic.geecs.org
> Tel: 617.835.0778
>
> "Never let your sense of morals prevent you from doing what is right."
> -- Salvor Hardin, Isaac Asimov's _Foundation_
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dp at twistedmatrix.com  Fri Nov  1 10:44:07 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 1 Nov 2002 07:44:07 -0800
Subject: [Twisted-Python] More strangeness with Woven
In-Reply-To: <5.1.1.6.0.20021101053837.00bcccf8@coral.tufts.edu>
Message-ID: <C196DE72-EDB0-11D6-A3C2-00039376B1AE@twistedmatrix.com>

On Friday, November 1, 2002, at 02:45 AM, Alex wrote:

> I'm finding some strange behavior:
>
> section = widgets.Div()
> la = widgets.Anchor()
> section.add(la)
> section.add(widgets.Br())
> section.add(widgets.Text('blah'))
>
> Here, everything inside 'section' is being replaced by the 
> widgets.Text -- everything added before it is lost.  This seems to be 
> happening every time a Text widget is added to a Div; everything 
> before it is lost.

This is a known bug with the way woven handles generating subwidgets -- 
I haven't decided what a satisfactory solution is yet. I'll think about 
it today. Generally, my solution is to not do too much work in a single 
Widget -- just apply separate view= attributes to nodes inside of nodes 
and let each Widget handle a single level of DOM nodes.

I think I have a simple solution that will make the above use case work 
properly, though. I'll write a test for it and see if I can get the 
solution checked in today. Thanks for the code.

Donovan




From paul at nfg.nl  Fri Nov  1 13:38:22 2002
From: paul at nfg.nl (Paul Stevens)
Date: Fri, 1 Nov 2002 19:38:22 +0100
Subject: [Twisted-Python] newbie: connecting to a PB service from a web resource
In-Reply-To: <F6EF1CFC-EDAF-11D6-A3C2-00039376B1AE@twistedmatrix.com>
References: <20021101145921.12f621cc.paul@nfg.nl>
	<F6EF1CFC-EDAF-11D6-A3C2-00039376B1AE@twistedmatrix.com>
Message-ID: <20021101193822.427d8493.paul@nfg.nl>

Donovan,

It works ! Way cool. Thanks for your indepth and lucid explanation.

greetings,


Fri, 1 Nov 2002 07:38:27 -0800 Donovan Preston <dp at twistedmatrix.com> quoth:

> It's fairly simple, there's just one important detail you're missing -- 
> in order to get a node factory_* to wait for a deferred, you have to 
> return it. (Ah, the joys of async programming.) Since you're also 
> dealing with a series of deferreds, it's even more tricky. Here's what 
> you do:
> 
> In the factory_getStatus method, get the first Deferred by calling 
> connect. Add a callback to it and make sure you pass the node to the 
> callback. Return the Deferred. (DOMTemplate will know that in order to 
> render this node, it will have to wait for the results of the Deferred.)
> 
> In the readStatus callback method (whose signature should be modified 
> to accept the node you passed to the callback above), get the second 
> deferred, add the setResult callback to it, and pass the node along to 
> that callback as well. *Return the Deferred*. (DOMTemplate sees that 
> the results of the first Deferred are a second Deferred. It knows that 
> in order to render this node, it will have to wait for the results of 
> the second Deferred.)
> 
> Finally, in the setResult callback method (whose signature should be 
> modified to accept the node), you have the result data you wish to 
> insert into the node. You also have a reference to the node, since you 
> passed it along though all the callbacks. Mutate the node (clear it, 
> then node.appendChild(self.d.createTextNode("%s", result))) and *Return 
> the node*. (DOMTemplate sees that the results of the second deferred 
> are a node, and it will be inserted into the DOM (in this case, since 
> the returned node is the same as the node that was passed in, nothing 
> happens) and when the DOM is rendered to XML your data will be in it.)
> 
> Why is this fairly complicated procedure required? Well, in the 
> original factory_getStatus, you call self.connect() which immediately 
> returns a Deferred. You assume that self.result is ready -- this is not 
> the case. Since the data will not be ready until the callback has 
> fired, you have to defer doing the actual work until the callback, as 
> well.
> 
> Donovan
> 
> On Friday, November 1, 2002, at 05:59 AM, Paul Stevens wrote:
> 
> >
> >
> > Hi all,
> >
> > I'm trying to build a small webapp that will allow me to connect to a 
> > remote PB
> > service. Results from the remote calls are to be used in a simple DOM 
> > template.
> >
> > Is this feasable ?
> >
> > I've got all the building blocks functioning alright, using the 
> > pbquote.py and
> > pbquoteclient.py code as examples.
> >
> > However, when I try to integrate the code from the commandline client 
> > into the
> > dom resource, I'm lost.
> >
> > How can I make sure the client waits a while -- until all callbacks are
> > handled ?
> >
> > I can see the refcount growing on the server side each time I connect 
> > to the
> > clientside webserver. But how to disconnect.
> >
> > Clues or pointers anyone ? Thanks.
> >
> >
> > -- 
> >   ________________________________________________________________
> >   Paul Stevens                                  mailto:paul at nfg.nl
> >   NET FACILITIES GROUP                     PGP: finger paul at nfg.nl
> >   The Netherlands________________________________http://www.nfg.nl
> > <webstatusreporter.py>
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
  ________________________________________________________________
  Paul Stevens                                  mailto:paul at nfg.nl
  NET FACILITIES GROUP                     PGP: finger paul at nfg.nl
  The Netherlands________________________________http://www.nfg.nl



From iko at strakt.com  Fri Nov  1 18:34:51 2002
From: iko at strakt.com (Anders Hammarquist)
Date: Sat, 02 Nov 2002 00:34:51 +0100
Subject: [Twisted-Python] SMTP 
In-Reply-To: Your message of "01 Nov 2002 06:05:59 GMT."
             <20021101060559.24216.qmail@green.zadka.com> 
References: <200210312036.g9VKaH7O031180@fido.strakt.com> <20021101060559.24216.qmail@green.zadka.com> 
Message-ID: <200211012334.gA1NYpc5021869@theraft.strakt.com>

In a message of 01 Nov 2002 06:05:59 GMT, Moshe Zadka writes:
>I couldn't apply it.
>Can you update and generate a patch against latest CVS?

Here's another diff as of a minute or two ago.

-------------- next part --------------
Index: twisted/protocols/basic.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/basic.py,v
retrieving revision 1.25
diff -u -u -r1.25 basic.py
--- twisted/protocols/basic.py	18 Oct 2002 06:46:52 -0000	1.25
+++ twisted/protocols/basic.py	1 Nov 2002 23:25:30 -0000
@@ -153,12 +153,15 @@
                 line, self.__buffer = self.__buffer.split(self.delimiter, 1)
             except ValueError:
                 if len(self.__buffer) > self.MAX_LENGTH:
-                    self.transport.loseConnection()
+                    line, self.__buffer = self.__buffer, ''
+                    self.lineLengthExceeded(line)
                     return
                 break
             else:
-                if len(line) > self.MAX_LENGTH:
-                    self.transport.loseConnection()
+                linelength = len(line)
+                if linelength > self.MAX_LENGTH:
+                    line, self.__buffer = self.__buffer, ''
+                    self.lineLengthExceeded(line)
                     return
                 self.lineReceived(line)
                 if self.transport.disconnecting:
@@ -200,6 +203,12 @@
         """Sends a line to the other end of the connection.
         """
         self.transport.write(line + self.delimiter)
+
+    def lineLengthExceeded(self, line):
+        """Called when the maximum line length has been reached.
+        Override if it needs to be dealt with in some special way.
+        """
+        self.transport.loseConnection()
 
 
 class Int32StringReceiver(protocol.Protocol):
Index: twisted/protocols/smtp.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/smtp.py,v
retrieving revision 1.28
diff -u -u -r1.28 smtp.py
--- twisted/protocols/smtp.py	1 Nov 2002 04:47:10 -0000	1.28
+++ twisted/protocols/smtp.py	1 Nov 2002 23:25:30 -0000
@@ -19,11 +19,11 @@
 
 # Twisted imports
 from twisted.protocols import basic
-from twisted.internet import protocol, defer
+from twisted.internet import protocol, defer, reactor
 from twisted.python import log
 
 # System imports
-import os, time, string, operator
+import os, time, string, operator, re
 import MimeWriter, tempfile
 
 class SMTPError(Exception):
@@ -52,19 +52,110 @@
         self.deferred.errback(arg)
         self.done = 1
 
+class AddressError(SMTPError):
+    "Parse error in address"
+    pass
+
+# Character classes for parsing addresses
+atom = r"-A-Za-z0-9!#$%&'*+/=?^_`{|}~"
+
+class Address:
+    """Parse and hold an RFC 2821 address.
+
+    Source routes are stipped and ignored, UUCP-style bang-paths
+    and %-style routing are not parsed.
+    """
+
+    tstring = re.compile(r'''( # A string of
+                          (?:"[^"]*" # quoted string
+			  |\\.i # backslash-escaped characted
+			  |[''' + string.replace(atom,'#',r'\#')
+                          + r'''] # atom character
+			  )+|.) # or any single character''',re.X)
+
+    def __init__(self, addr):
+        self.local = ''
+        self.domain = ''
+        self.addrstr = addr
+
+        # Tokenize
+        atl = filter(None,self.tstring.split(addr))
+
+        local = []
+        domain = []
+
+        while atl:
+            if atl[0] == '<':
+                if atl[-1] != '>':
+                    raise AddressError, "Unbalanced <>"
+                atl = atl[1:-1]
+            elif atl[0] == '@':
+                atl = atl[1:]
+                if not local:
+                    # Source route
+                    while atl and atl[0] != ':':
+                        # remove it
+                        atl = atl[1:]
+                    if not atl:
+                        raise AddressError, "Malformed source route"
+                    atl = atl[1:] # remove :
+                elif domain:
+                    raise AddressError, "Too many @"
+                else:
+                    # Now in domain
+                    domain = ['']
+            elif len(atl[0]) == 1 and atl[0] not in atom + '.':
+                raise AddressError, "Parse error at " + atl[0]
+            else:
+                if not domain:
+                    local.append(atl[0])
+                else:
+                    domain.append(atl[0])
+                atl = atl[1:]
+               
+        self.local = ''.join(local)
+        self.domain = ''.join(domain)
+
+    dequotebs = re.compile(r'\\(.)')
+    def dequote(self,addr):
+        "Remove RFC-2821 quotes from address"
+        res = []
+
+        atl = filter(None,self.tstring.split(str(addr)))
+
+        for t in atl:
+            if t[0] == '"' and t[-1] == '"':
+                res.append(t[1:-1])
+            elif '\\' in t:
+                res.append(self.dequotebs.sub(r'\1',t))
+            else:
+                res.append(t)
+
+        return ''.join(res)
+
+    def __str__(self):
+        return '%s%s' % (self.local, self.domain and ("@" + self.domain) or "")
+
+    def __repr__(self):
+        return "%s.%s(%s)" % (self.__module__, self.__class__.__name__,
+                              repr(str(self)))
 
 class User:
 
     def __init__(self, destination, helo, protocol, orig):
-        try:
-            self.name, self.domain = string.split(destination, '@', 1)
-        except ValueError:
-            self.name = destination
-            self.domain = ''
+        self.dest = Address(destination)
         self.helo = helo
         self.protocol = protocol
         self.orig = orig
 
+    def __getstate__(self):
+        return { 'dest' : self.dest,
+                 'helo' : self.helo,
+                 'protocol' : None,
+                 'orig' : self.orig }
+
+    def __str__(self):
+        return str(self.dest)
 
 class IMessage:
 
@@ -90,19 +181,39 @@
         self.mode = COMMAND
         self.__from = None
         self.__helo = None
-        self.__to = ()
+        self.__to = []
+
+    def timedout(self):
+        self.sendCode(421, '%s Timeout. Try talking faster next time!' %
+                      self.host)
+        self.transport.loseConnection()
 
     def connectionMade(self):
-        self.sendCode(220, 'Spammers beware, your ass is on fire')
+        self.host = self.factory.domain
+        if hasattr(self.factory, 'timeout'):
+            self.timeout = self.factory.timeout
+        else:
+            self.timeout = 600
+        self.sendCode(220, '%s Spammers beware, your ass is on fire' %
+                      self.host)
+        if self.timeout:
+            self.timeoutID = reactor.callLater(self.timeout, self.timedout)
 
     def sendCode(self, code, message=''):
         "Send an SMTP code with a message."
         self.transport.write('%d %s\r\n' % (code, message))
 
     def lineReceived(self, line):
+        if self.timeout:
+            self.timeoutID.cancel()
+            self.timeoutID = reactor.callLater(self.timeout, self.timedout)
+
         if self.mode is DATA:
             return self.dataLineReceived(line)
-        command = string.split(line, None, 1)[0]
+        if line:
+            command = string.split(line, None, 1)[0]
+        else:
+            command = ''
         method = getattr(self, 'do_'+string.upper(command), None)
         if method is None:
             method = self.do_UNKNOWN
@@ -110,59 +221,128 @@
             line = line[len(command):]
         return method(string.strip(line))
 
+    def lineLengthExceeded(self, line):
+        if self.mode is DATA:
+            for message in self.__messages:
+                message.connectionLost()
+            self.mode = COMMAND
+            del self.__messages
+        self.sendCode(500, 'Line too long')
+
+    def rawDataReceived(self, data):
+        "Throw away rest of long line"
+        rest = string.split(data, '\r\n', 1)
+        if len(rest) == 2:
+            self.setLineMode(self.rest[1])
+
     def do_UNKNOWN(self, rest):
-        self.sendCode(502, 'Command not implemented')
+        self.sendCode(500, 'Command not implemented')
 
     def do_HELO(self, rest):
-        self.__helo = rest
-        self.sendCode(250, 'Nice to meet you')
+        peer = self.transport.getPeer()[1]
+        self.__helo = (rest, peer)
+        self.sendCode(250, '%s Hello %s, nice to meet you' % (self.host, peer))
 
     def do_QUIT(self, rest):
         self.sendCode(221, 'See you later')
         self.transport.loseConnection()
 
+    # A string of quoted strings, backslash-escaped character or
+    # atom characters + '@.,:'
+    qstring = r'("[^"]*"|\\.|[' + string.replace(atom,'#',r'\#') + r'@.,:])+'
+
+    mail_re = re.compile(r'''\s*FROM:\s*(?P<path><> # Empty <>
+                         |<''' + qstring + r'''> # <addr>
+			 |''' + qstring + r''' # addr
+			 )\s*(\s(?P<opts>.*))? # Optional WS + ESMTP options
+			 $''',re.I|re.X)
+    rcpt_re = re.compile(r'\s*TO:\s*(?P<path><' + qstring + r'''> # <addr>
+                         |''' + qstring + r''' # addr
+			 )\s*(\s(?P<opts>.*))? # Optional WS + ESMTP options
+			 $''',re.I|re.X)
+
     def do_MAIL(self, rest):
-        from_ = rest[len("MAIL:<"):-len(">")]
-        self.validateFrom(self.__helo, from_, self._fromValid,
-                                              self._fromInvalid)
+        if self.__from:
+            self.sendCode(503,"Only one sender per message, please")
+            return
+        # Clear old recipient list
+        self.__to = []
+        m = self.mail_re.match(rest)
+        if not m:
+            self.sendCode(501, "Syntax error")
+            return
 
-    def _fromValid(self, from_):
+        try:
+            addr = Address(m.group('path'))
+        except AddressError, e:
+            self.sendCode(553, str(e))
+            return
+            
+        self.validateFrom(self.__helo, addr, self._fromValid,
+                          self._fromInvalid)
+
+    def _fromValid(self, from_, code=250, msg='From address accepted'):
         self.__from = from_
-        self.sendCode(250, 'From address accepted')
+        self.sendCode(code, msg)
 
-    def _fromInvalid(self, from_):
-        self.sendCode(550, 'No mail for you!')
+    def _fromInvalid(self, from_, code=550, msg='No mail for you!'):
+        self.sendCode(code,msg)
 
     def do_RCPT(self, rest):
-        to = rest[len("TO:<"):-len(">")]
-        user = User(to, self.__helo, self, self.__from)
-        self.validateTo(user, self._toValid, self._toInvalid)
+        if not self.__from:
+            self.sendCode(503, "Must have sender before recipient")
+            return
+        m = self.rcpt_re.match(rest)
+        if not m:
+            self.sendCode(501, "Syntax error")
+            return
 
-    def _toValid(self, to):
-        self.__to = self.__to + (to,)
-        self.sendCode(250, 'Address recognized')
+        try:
+            user = User(m.group('path'), self.__helo, self, self.__from)
+        except AddressError, e:
+            self.sendCode(553, str(e))
+            return
+            
+        self.validateTo(user, self._toValid, self._toInvalid)
 
-    def _toInvalid(self, to):
-        self.sendCode(550, 'Cannot receive for specified address')
+    def _toValid(self, to, code=250, msg='Address recognized'):
+        self.__to.append(to)
+        self.sendCode(code, msg)
+
+    def _toInvalid(self, to, code=550,
+                   msg='Cannot receive for specified address'):
+        self.sendCode(code, msg)
 
     def do_DATA(self, rest):
         if self.__from is None or not self.__to:  
-            self.sendCode(550, 'Must have valid receiver and originator')
+            self.sendCode(503, 'Must have valid receiver and originator')
             return
         self.mode = DATA
         helo, origin, recipients = self.__helo, self.__from, self.__to
         self.__from = None
-        self.__to = ()
+        self.__to = []
         self.__messages = self.startMessage(recipients)
+        self.__inheader = self.__inbody = 0
+        for message in self.__messages:
+            message.lineReceived(self.receivedHeader(helo, origin, recipients))
         self.sendCode(354, 'Continue')
 
     def connectionLost(self, reason):
+        # self.sendCode(421, 'Dropping connection.') # This does nothing...
+        # Ideally, if we (rather than the other side) lose the connection,
+        # we should be able to tell the other side that we are going away.
+        # RFC-2821 requires that we try.
         if self.mode is DATA:
-            for message in self.__messages:
-                message.connectionLost()
+            try:
+                for message in self.__messages:
+                    message.connectionLost()
+                del self.__messages
+            except AttributeError:
+                pass
 
     def do_RSET(self, rest):
-        self.__init__()
+        self.__from = None
+        self.__to = []
         self.sendCode(250, 'I remember nothing.')
 
     def dataLineReceived(self, line):
@@ -180,8 +360,24 @@
                     deferred = message.eomReceived()
                     deferred.addCallback(ndeferred.callback)
                     deferred.addErrback(ndeferred.errback)
+                del self.__messages
                 return
             line = line[1:]
+
+        # Add a blank line between the generated Received:-header
+        # and the message body if the message comes in without any
+        # headers
+        if not self.__inheader and not self.__inbody:
+            if ':' in line:
+                self.__inheaders = 1
+            elif line:
+                for message in self.__messages:
+                    message.lineReceived('')
+                self.__inbody = 1
+
+        if not line:
+            self.__inbody = 1
+        
         for message in self.__messages:
             message.lineReceived(line)
 
@@ -191,8 +387,27 @@
     def _messageNotHandled(self, _):
         self.sendCode(550, 'Could not send e-mail')
 
+    def rfc822date(self):
+        timeinfo = time.localtime()
+        if timeinfo[8]:
+            # DST
+            tz = -time.altzone
+        else:
+            tz = -time.timezone
+            
+        return "%s %+2.2d%2.2d" % (
+            time.strftime("%a, %d %b %Y %H:%M:%S", timeinfo),
+            tz / 3600, (tz / 60) % 60)
+
     # overridable methods:
+    def receivedHeader(self, helo, origin, recipents):
+        return "Received: From %s ([%s]) by %s; %s" % (
+            helo[0], helo[1], self.host, self.rfc822date())
+    
     def validateFrom(self, helo, origin, success, failure):
+        if not helo:
+            failure(origin,503,"Who are you? Say HELO first");
+            return
         success(origin)
 
     def validateTo(self, user, success, failure):
@@ -268,6 +483,7 @@
         
     def smtpCode_354_data(self, line):
         self.mailFile = self.getMailData()
+        self.lastsent = ''
         self.transport.registerProducer(self, 0)
 
     def smtpCode_250_afterData(self, line):
@@ -280,11 +496,18 @@
         chunk = self.mailFile.read(8192)
         if not chunk:
             self.transport.unregisterProducer()
-            self.sendLine('.')
+            if self.lastsent != '\n':
+                line = '\r\n.'
+            else:
+                line = '.'
+            self.sendLine(line)
             self.state = 'afterData'
+            return
 
         chunk = string.replace(chunk, "\n", "\r\n")
+        chunk = string.replace(chunk, "\r\n.", "\r\n..")
         self.transport.write(chunk)
+        self.lastsent = chunk[-1]
 
     def pauseProducing(self):
         pass
Index: twisted/test/test_protocols.py
===================================================================
RCS file: /cvs/Twisted/twisted/test/test_protocols.py,v
retrieving revision 1.17
diff -u -u -r1.17 test_protocols.py
--- twisted/test/test_protocols.py	23 Sep 2002 08:51:29 -0000	1.17
+++ twisted/test/test_protocols.py	1 Nov 2002 23:25:31 -0000
@@ -33,11 +33,13 @@
 class LineTester(basic.LineReceiver):
 
     delimiter = '\n'
+    MAX_LENGTH = 64
 
     def connectionMade(self):
         self.received = []
 
     def lineReceived(self, line):
+        print self.MAX_LENGTH, len(line)
         self.received.append(line)
         if line == '':
             self.setRawMode()
@@ -51,6 +53,10 @@
         if self.length == 0:
             self.setLineMode(rest)
 
+    def lineLengthExceeded(self, line):
+        if len(line) > self.MAX_LENGTH+1:
+            self.setLineMode(line[self.MAX_LENGTH+1:])
+
 class WireTestCase(unittest.TestCase):
 
     def testEcho(self):
@@ -103,13 +109,14 @@
 012345678len 0
 foo 5
 
+1234567890123456789012345678901234567890123456789012345678901234567890
 len 1
 
 a'''
 
     output = ['len 10', '0123456789', 'len 5', '1234\n',
               'len 20', 'foo 123', '0123456789\n012345678',
-              'len 0', 'foo 5', '', 'len 1', 'a']
+              'len 0', 'foo 5', '', '67890', 'len 1', 'a']
 
     def testBuffer(self):
         for packet_size in range(1, 10):
@@ -175,3 +182,6 @@
             r.dataReceived(s)
             if not r.brokenPeer:
                 raise AssertionError("connection wasn't closed on illegal netstring %s" % repr(s))
+
+if __name__ == '__main__':
+    unittest.main()
Index: twisted/test/test_smtp.py
===================================================================
RCS file: /cvs/Twisted/twisted/test/test_smtp.py,v
retrieving revision 1.16
diff -u -u -r1.16 test_smtp.py
--- twisted/test/test_smtp.py	6 Sep 2002 09:09:42 -0000	1.16
+++ twisted/test/test_smtp.py	1 Nov 2002 23:25:31 -0000
@@ -26,7 +26,7 @@
 from twisted.protocols import loopback, smtp
 from twisted.internet import defer, protocol
 from twisted.test.test_protocols import StringIOWithoutClosing
-import string
+import string, re
 from cStringIO import StringIO
 
 class DummyMessage:
@@ -195,15 +195,17 @@
         self.buffer = []
 
     def lineReceived(self, line):
-        self.buffer.append(line)
+        # Throw away the generated Received: header
+        if not re.match('Received: From foo.com \(\[.*\]\) by foo.com;', line):
+            self.buffer.append(line)
 
     def eomReceived(self):
         message = string.join(self.buffer, '\n')+'\n'
-        helo, origin = self.users[0].helo, self.users[0].orig
+        helo, origin = self.users[0].helo[0], str(self.users[0].orig)
         recipients = []
         for user in self.users:
-            recipients.append(user.name+'@'+user.domain)
-        self.protocol.messages.append((helo, origin, recipients, message))
+            recipients.append(str(user))
+        self.protocol.message = (helo, origin, recipients, message)
         deferred = defer.Deferred()
         deferred.callback("saved")
         return deferred
@@ -212,51 +214,84 @@
 
     def connectionMade(self):
         smtp.SMTP.connectionMade(self)
-        self.messages = []
+        self.message = None
 
     def startMessage(self, users):
         return [DummySMTPMessage(self, users)]
 
-
 class AnotherSMTPTestCase(unittest.TestCase):
 
-    messages = [ ('foo.com', 'moshez at foo.com', ['moshez at bar.com'], '''\
+    messages = [ ('foo.com', 'moshez at foo.com', ['moshez at bar.com'],
+                  'moshez at foo.com', ['moshez at bar.com'], '''\
 From: Moshe
 To: Moshe
 
 Hi,
 how are you?
 '''),
-                 ('foo.com', 'tttt at rrr.com', ['uuu at ooo', 'yyy at eee'], '''\
+                 ('foo.com', 'tttt at rrr.com', ['uuu at ooo', 'yyy at eee'],
+                  'tttt at rrr.com', ['uuu at ooo', 'yyy at eee'], '''\
 Subject: pass
 
 ..rrrr..
-''')
+'''),
+                 ('foo.com', '@this, at is, at ignored:foo at bar.com',
+                  ['@ignore, at this, at too:bar at foo.com'],
+                  'foo at bar.com', ['bar at foo.com'], '''\
+Subject: apa
+To: foo
+
+123
+.
+456
+'''),
               ]
 
-    expected_output = '220 Spammers beware, your ass is on fire\015\012250 Nice to meet you\015\012250 From address accepted\015\012250 Address recognized\015\012354 Continue\015\012250 Delivery in progress\015\012250 From address accepted\015\012250 Address recognized\015\012250 Address recognized\015\012354 Continue\015\012250 Delivery in progress\015\012221 See you later\015\012'
-
-    input = 'HELO foo.com\r\n'
-    for _, from_, to_, message in messages:
-        input = input + 'MAIL FROM:<%s>\r\n' % from_
-        for item in to_:
-            input = input + 'RCPT TO:<%s>\r\n' % item
-        input = input + 'DATA\r\n'
-        for line in string.split(message, '\n')[:-1]:
-            if line[:1] == '.': line = '.' + line
-            input = input + line + '\r\n'
-        input = input + '.' + '\r\n'
-    input = input + 'QUIT\r\n'
+    testdata = [
+        ('', '220.*\r\n$', None, None),
+        ('HELO foo.com\r\n', '250.*\r\n$', None, None),
+        ('RSET\r\n', '250.*\r\n$', None, None),
+        ]
+    for helo_, from_, to_, realfrom, realto, msg in messages:
+        testdata.append(('MAIL FROM:<%s>\r\n' % from_, '250.*\r\n',
+                         None, None))
+        for rcpt in to_:
+            testdata.append(('RCPT TO:<%s>\r\n' % rcpt, '250.*\r\n',
+                             None, None))
+        testdata.append(('DATA\r\n','354.*\r\n',
+                         msg, ('250.*\r\n',
+                               (helo_, realfrom, realto, msg))))
+                                                       
 
     def testBuffer(self):
         output = StringIOWithoutClosing()
         a = DummySMTP()
-        a.makeConnection(protocol.FileWrapper(output))
-        a.dataReceived(self.input)
-        if a.messages != self.messages:
-            raise AssertionError(a.messages)
-        if output.getvalue() != self.expected_output:
-            raise AssertionError(`output.getvalue()`)
+        class fooFactory:
+            domain = 'foo.com'
 
+        a.factory = fooFactory()
+        a.makeConnection(protocol.FileWrapper(output))
+        for (send, expect, msg, msgexpect) in self.testdata:
+            if send:
+                a.dataReceived(send)
+            data = output.getvalue()
+            output.truncate(0)
+            if not re.match(expect, data):
+                raise AssertionError, (send, expect, data)
+            if data[:3] == '354':
+                for line in msg.splitlines():
+                    if line and line[0] == '.':
+                        line = '.' + line
+                    a.dataReceived(line + '\r\n')
+                a.dataReceived('.\r\n')
+                # Special case for DATA. Now we want a 250, and then
+                # we compare the messages
+                data = output.getvalue()
+                output.truncate()
+                resp, msgdata = msgexpect
+                if not re.match(resp, data):
+                    raise AssertionError, (resp, data)
+                if a.message != msgdata:
+                    raise AssertionError, (msgdata, a.message)
 
 testCases = [SMTPTestCase, SMTPClientTestCase, LoopbackSMTPTestCase, AnotherSMTPTestCase]
-------------- next part --------------
/Anders

From exarkun at meson.dyndns.org  Fri Nov  1 23:05:58 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 1 Nov 2002 23:05:58 -0500
Subject: [Twisted-Python] SMTP
In-Reply-To: <200211012334.gA1NYpc5021869@theraft.strakt.com>
References: <200210312036.g9VKaH7O031180@fido.strakt.com> <20021101060559.24216.qmail@green.zadka.com> <200211012334.gA1NYpc5021869@theraft.strakt.com>
Message-ID: <20021102040558.GA2678@meson.dyndns.org>

  Applied with no problem, but:

======================================================================
ERROR: list() -> new list
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./pyunit/unittest.py", line 210, in __call__
    testMethod()
TypeError: 'list' object is not callable
======================================================================

as well as the LoopbackSMTPTestCase hanging forever with me eventually
hitting Ctrl+c yielding the almost information-free traceback below:

ERROR: testMessages (twisted.test.test_smtp.LoopbackSMTPTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./twisted/test/test_smtp.py", line 142, in testMessages
    self.loopback(protocol, clientProtocol)
  File "./twisted/test/test_smtp.py", line 132, in loopback
    loopback.loopbackTCP(server, client)
  File "./twisted/protocols/loopback.py", line 114, in loopbackTCP
    reactor.iterate()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/base.py",
line 199, in iterate
    self.runUntilCurrent()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/base.py",
line 303, in runUntilCurrent
    self._delayeds.runUntilCurrent()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/main.py",
line 223, in runUntilCurrent
    d.runUntilCurrent()
KeyboardInterrupt


But maybe the first couple frames are helpful somehow.

 Jp

-- 
|     This 
|   signature
| intentionally
|    8 lines
|     long.
|  (So sue me)
---
--
 11:00pm up 9:51, 7 users, load average: 1.63, 1.39, 1.10
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021101/c430ea19/attachment.pgp 

From screwtape at froup.com  Sat Nov  2 07:19:18 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sat, 2 Nov 2002 23:19:18 +1100
Subject: [Twisted-Python] Another IRC patch.
Message-ID: <20021102121918.GB850@ferd2.thristian.org>

While developing my twisted.im bot (new this week! database access and
an infobot-style plugin!) I've come up against two seperate
annoyances. This patch fixes both of them.

Number 1: the IRC protocol defines (among other things) two message
types - privmsg and notice. They are identical in every respect except
that a notice must not be automatically replied to. Currently,
twisted.protocol.irc.IRCClient maps notice onto privmsg, which is 
dangerous but acceptible, because you're supposed to subclass
IRCClient anyway.

However, twisted.im.ircsupport subclasses IRCClient and does not
override the 'noticed' method, so all twisted.im clients cannot tell
the difference between a privmsg and a notice. This is really not a
good thing, especially for an IM bot like mine. The attached patch
fixes this in a brute force manner by making twisted.im.ircsupport
drop all notices on the floor.

Number 2: The IRC protocol defines a certain bunch of commands that
the server can send the client. twisted.protocol.irc.IRCClient calls
self.irc_COMMAND to handle an incoming command 'COMMAND', and if no
such method exists, it calles self.irc_unknown.

twisted.im.ircsupport by default prints an error message for each
unknown command it recieves. Slashnet in particular seems to like to
send a lot of them, and it clutters up my screen. This patch simply
comments out the print statement and adds a 'pass'.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "I've got this brilliant idea but I don't know where it is." -- Beth Allen
|
-------------- next part --------------
Index: twisted/im/ircsupport.py
===================================================================
RCS file: /cvs/Twisted/twisted/im/ircsupport.py,v
retrieving revision 1.18
diff -u -r1.18 ircsupport.py
--- twisted/im/ircsupport.py	24 Oct 2002 12:03:41 -0000	1.18
+++ twisted/im/ircsupport.py	2 Nov 2002 12:18:06 -0000
@@ -131,6 +131,12 @@
             return
         self.chat.getConversation(self.getPerson(username)).showMessage(message)
 
+    def noticed(self, user, channel, message):
+        """I don't think there's any real reason that a chat client should
+        have to deal with notices.
+        """
+        pass
+
     def action(self,username,channel,emote):
         username=string.split(username,'!',1)[0]
         if username==self.name: return
@@ -221,7 +227,8 @@
         del self._ingroups[fromNick]
 
     def irc_unknown(self, prefix, command, params):
-        print "unknown message from IRCserver. prefix: %s, command: %s, params: %s" % (prefix, command, params)
+        #print "unknown message from IRCserver. prefix: %s, command: %s, params: %s" % (prefix, command, params)
+        pass
 
     # GTKIM calls
     def joinGroup(self,name):

From twisted at moshez.org  Sat Nov  2 08:02:45 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 2 Nov 2002 13:02:45 -0000
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102121918.GB850@ferd2.thristian.org>
References: <20021102121918.GB850@ferd2.thristian.org>
Message-ID: <20021102130245.9762.qmail@green.zadka.com>

On Sat, 2 Nov 2002, screwtape at froup.com wrote:

> However, twisted.im.ircsupport subclasses IRCClient and does not
> override the 'noticed' method, so all twisted.im clients cannot tell
> the difference between a privmsg and a notice. This is really not a
> good thing, especially for an IM bot like mine. The attached patch
> fixes this in a brute force manner by making twisted.im.ircsupport
> drop all notices on the floor.

I'm trying to understand, does this mean no .im chat client can support
notices without jumping through hoops? In that case this is *VERY*
bad. People on #python whose clients filter out the chanserv notice
get treated rudely (for a good reason).




From screwtape at froup.com  Sat Nov  2 09:00:01 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 3 Nov 2002 01:00:01 +1100
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102130245.9762.qmail@green.zadka.com>
References: <20021102121918.GB850@ferd2.thristian.org> <20021102130245.9762.qmail@green.zadka.com>
Message-ID: <20021102140001.GC850@ferd2.thristian.org>

On Sat, Nov 02, 2002 at 01:02:45PM -0000, Moshe Zadka wrote:
> On Sat, 2 Nov 2002, screwtape at froup.com wrote:
> 
> > However, twisted.im.ircsupport subclasses IRCClient and does not
> > override the 'noticed' method, so all twisted.im clients cannot tell
> > the difference between a privmsg and a notice. This is really not a
> > good thing, especially for an IM bot like mine. The attached patch
> > fixes this in a brute force manner by making twisted.im.ircsupport
> > drop all notices on the floor.
> 
> I'm trying to understand, does this mean no .im chat client can support
> notices without jumping through hoops? In that case this is *VERY*
> bad. People on #python whose clients filter out the chanserv notice
> get treated rudely (for a good reason).

As I understand it, it works like this:

* ircsupport drops notices on the floor
  - people on #python get treated rudely, for whatever reason (I've
    never been to #python).
* ircsupport maps notices onto privmsgs
  - IM clients can't tell the difference, and might do stupid things
    to notices that they shouldn't do (sample circumstances might be
    bots or "I'm away right now, but your message has been logged"
    messages.)
* ircsupport keeps them seperate, and we change all the rest of
  twisted.im to understand the difference between notices and privmsgs
  even though pretty much no IM system besides IRC implements it.
  - I get the feeling that twisted.im is supposed to be the
    intersection of all IM protocols, rather than the union.

There are of course other solutions - notices could be logged to the
console and not passed through the twisted.im framework, or maybe we
could add another piece of metadata, the same way that actions are
handled.

I'm curious - exactly what happens to people on #python whose clients
filter out the chanserv notice?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "We've got a lot in common" "I've always thought so, too." -- M*A*S*H
|



From twisted at moshez.org  Sat Nov  2 09:40:05 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 2 Nov 2002 14:40:05 -0000
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102140001.GC850@ferd2.thristian.org>
References: <20021102140001.GC850@ferd2.thristian.org>, <20021102121918.GB850@ferd2.thristian.org> <20021102130245.9762.qmail@green.zadka.com>
Message-ID: <20021102144005.10888.qmail@green.zadka.com>

On Sun, 3 Nov 2002, screwtape at froup.com wrote:

> * ircsupport drops notices on the floor
>   - people on #python get treated rudely, for whatever reason (I've
>     never been to #python).

See below.

> * ircsupport maps notices onto privmsgs
>   - IM clients can't tell the difference, and might do stupid things
>     to notices that they shouldn't do (sample circumstances might be
>     bots or "I'm away right now, but your message has been logged"
>     messages.)

Indeed, that would be bad.

> * ircsupport keeps them seperate, and we change all the rest of
>   twisted.im to understand the difference between notices and privmsgs
>   even though pretty much no IM system besides IRC implements it.
>   - I get the feeling that twisted.im is supposed to be the
>     intersection of all IM protocols, rather than the union.

Why? Certainly, other protocols might develop notices too. I definitely
think the native .words protocol should support them. If a client has
code to (potentially) display notices in some manner, and the protocol
it was using didn't support notices, the client wouldn't get that code
activated. Certainly not the end of the world.

> There are of course other solutions - notices could be logged to the
> console and not passed through the twisted.im framework

That's equivalent to dropping them on the floor, or worse.

> I'm curious - exactly what happens to people on #python whose clients
> filter out the chanserv notice?

The client filters out the chanserv notice containing URL to the FAQ,
they don't read the faq and...well, I hardly need to spell out what
happens next, right? Bottom line, they get told to "fix their client
or get a better one".



From glyph at twistedmatrix.com  Sat Nov  2 11:57:17 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 02 Nov 2002 10:57:17 -0600 (CST)
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102121918.GB850@ferd2.thristian.org>
References: <20021102121918.GB850@ferd2.thristian.org>
Message-ID: <20021102.105717.74755582.glyph@twistedmatrix.com>


On Sat, 2 Nov 2002 23:19:18 +1100, screwtape at froup.com wrote:

> While developing my twisted.im bot (new this week! database access and an
> infobot-style plugin!) I've come up against two seperate annoyances. This
> patch fixes both of them.

Glad you're making progress!  I'm sorry that twisted.im is annoying you :-(.
Hopefully I can give some guidance as to how it's _supposed_ to work...

> Number 1: the IRC protocol defines (among other things) two message types -
> privmsg and notice. They are identical in every respect except that a notice
> must not be automatically replied to.

Except when they should be automatically replied to.  Such as the notice that
NickServ gives you upon login, or one of the various notices that older
spambots will generate in response to a VERSION directive.

This is one of the worse excresences of the IRC protocol and I'd like to not
see promoted to the higher levels of abstractions in twisted.im.  What you're
semantically communicating is metadata about the message ("please don't
autorespond to this (unless you really want to)") and not a wholly different
type of message.  So I've committed a different fix :-).  The "metadata"
dictionary passesd to showMessage and showGroupMessage is designed to
encapsulate this sort of protocol-specific need, so IRC "notice" messages will
have an entry in the metadata dictionary of {"dontAutoRespond": 1}.

I just committed a fix that does this... if you're using CVS, your bot can now
check for that flag in the metadata dict and drop the message on the floor
appropriately.

For t.im's default use case (end-user chat application) whether or not robots
should automatically respond to a certain type of message is completely
irrelevant to its display.

> Number 2: [ ... ] twisted.im.ircsupport by default prints an error message
> for each unknown command it recieves. Slashnet in particular seems to like to
> send a lot of them, and it clutters up my screen. This patch simply comments
> out the print statement and adds a 'pass'.

Hmm... that behavior should at least be customizeable with a flag... I
personally have used that console output a number of times, and it has been
invaluable in debugging certain things in twisted.im on various occasions.  If
you don't want the output going to the console, there should be a separate log.
Perhaps you could specifically ignore the slashnet message types you don't
want?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021102/b6b9f8dc/attachment.pgp 

From johnfabel at btinternet.com  Sat Nov  2 12:08:14 2002
From: johnfabel at btinternet.com (John Abel)
Date: Sat, 2 Nov 2002 17:08:14 -0000
Subject: [Twisted-Python] Version Of IM That Works With Tkinter?
Message-ID: <00c801c28292$716d4da0$66656565@hallows>

Hi,

I was looking to run IM on a Win32 machine, but both scripts, im.py and t-im.py, require GTK.  According to the documentation that accompanies Twisted, IM should run with Tkinter.  Does anyone have a copy that does?

Thanks

John
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20021102/a377376a/attachment.htm 

From iko at cd.chalmers.se  Sat Nov  2 12:35:44 2002
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Sat, 02 Nov 2002 18:35:44 +0100
Subject: [Twisted-Python] SMTP 
In-Reply-To: Message from Jp Calderone <exarkun@meson.dyndns.org> 
   of "Fri, 01 Nov 2002 23:05:58 EST." <20021102040558.GA2678@meson.dyndns.org> 
References: <200210312036.g9VKaH7O031180@fido.strakt.com> <20021101060559.24216.qmail@green.zadka.com> <200211012334.gA1NYpc5021869@theraft.strakt.com> <20021102040558.GA2678@meson.dyndns.org> 
Message-ID: <200211021735.SAA04244@haddock.cd.chalmers.se>

In a message of Fri, 01 Nov 2002 23:05:58 EST, Jp Calderone writes:
>   Applied with no problem, but:
> 
> ======================================================================
> ERROR: list() -> new list
> ----------------------------------------------------------------------
> Traceback (most recent call last):
>   File "./pyunit/unittest.py", line 210, in __call__
>     testMethod()
> TypeError: 'list' object is not callable
> ======================================================================

Yes, I only fixed the test case for smtp.SMTP (since that's the only
class I rewrote). I couldn't get the other tests to run either. I'll
look at the other tests as I look at the other parts of the smtp
module (which I plan to do). Running the test for smtp.SMTP I get:

$ python2.2 pyunit/unittest.py twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer
---- Running Test: twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer ----- 
.
----------------------------------------------------------------------
Ran 1 tests in 0.034s

OK

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From screwtape at froup.com  Sat Nov  2 16:42:07 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 3 Nov 2002 08:42:07 +1100
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102.105717.74755582.glyph@twistedmatrix.com>
References: <20021102121918.GB850@ferd2.thristian.org> <20021102.105717.74755582.glyph@twistedmatrix.com>
Message-ID: <20021102214207.GA20463@ferd2.thristian.org>

On Sat, Nov 02, 2002 at 10:57:17AM -0600, Glyph Lefkowitz wrote:
> On Sat, 2 Nov 2002 23:19:18 +1100, screwtape at froup.com wrote:
> 
> > While developing my twisted.im bot (new this week! database access and an
> > infobot-style plugin!) I've come up against two seperate annoyances. This
> > patch fixes both of them.
> 
> Glad you're making progress!  I'm sorry that twisted.im is annoying you :-(.
> Hopefully I can give some guidance as to how it's _supposed_ to work...

Oh, neat.

To be truthful, most of it is pretty nifty. :)

I'd be interested to see if my bot also works with AIM and
twisted.words, though - I don't have an account with either so I can't
test... is anyone working on a Jabber protocol for Twisted? :)

> > Number 1: the IRC protocol defines (among other things) two message types -
> > privmsg and notice. They are identical in every respect except that a notice
> > must not be automatically replied to.
> 
> Except when they should be automatically replied to.  Such as the notice that
> NickServ gives you upon login, or one of the various notices that older
> spambots will generate in response to a VERSION directive.

Oh. That's a right pain, that is.

> This is one of the worse excresences of the IRC protocol and I'd like to not
> see promoted to the higher levels of abstractions in twisted.im.  What you're
> semantically communicating is metadata about the message ("please don't
> autorespond to this (unless you really want to)") and not a wholly different
> type of message.  So I've committed a different fix :-).  The "metadata"
> dictionary passesd to showMessage and showGroupMessage is designed to
> encapsulate this sort of protocol-specific need, so IRC "notice" messages will
> have an entry in the metadata dictionary of {"dontAutoRespond": 1}.
> 
> I just committed a fix that does this... if you're using CVS, your bot can now
> check for that flag in the metadata dict and drop the message on the floor
> appropriately.

Heh. I was going to post 'how about I just dump it in the metadata
dict' and look into writing a patch later today. Thanks!

> For t.im's default use case (end-user chat application) whether or not robots
> should automatically respond to a certain type of message is completely
> irrelevant to its display.

Indeed

> > Number 2: [ ... ] twisted.im.ircsupport by default prints an error
> > message for each unknown command it recieves. Slashnet in
> > particular seems to like to send a lot of them, and it clutters up
> > my screen. This patch simply comments out the print statement and
> > adds a 'pass'.
> 
> Hmm... that behavior should at least be customizeable with a flag...
> I personally have used that console output a number of times, and it
> has been invaluable in debugging certain things in twisted.im on
> various occasions. 

When I was doing IRC-specific things, I too have found it incredibly
useful. But, being unconcerned with low-level details of the protocol
at the moment, I find it annoying.

> If you don't want the output going to the
> console, there should be a separate log.  Perhaps you could
> specifically ignore the slashnet message types you don't want?

My theory was that if a developer wanted that level of detail from
ircsupport.py, they could just go and uncomment the print statement.
:/

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| <Nibbles> DO NOT GET ME A HERRING!
|



From twisted at itamarst.org  Sat Nov  2 19:27:40 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 2 Nov 2002 19:27:40 -0500
Subject: [Twisted-Python] SMTP
In-Reply-To: <200211021735.SAA04244@haddock.cd.chalmers.se>
References: <200210312036.g9VKaH7O031180@fido.strakt.com>
	<20021101060559.24216.qmail@green.zadka.com>
	<200211012334.gA1NYpc5021869@theraft.strakt.com>
	<20021102040558.GA2678@meson.dyndns.org>
	<200211021735.SAA04244@haddock.cd.chalmers.se>
Message-ID: <20021102192740.4a12cd8c.twisted@itamarst.org>

On Sat, 02 Nov 2002 18:35:44 +0100
Anders Hammarquist <iko at cd.chalmers.se> wrote:

> $ python2.2 pyunit/unittest.py
> twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer---- Running
> Test: twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer 
Please note that Twisted needs to support 2.1 as well, it's recommended
you run tests under both 2.1 and 2.2. Though that may be totally
unrelated to the issue here.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From iko at cd.chalmers.se  Sat Nov  2 19:54:07 2002
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Sun, 03 Nov 2002 01:54:07 +0100
Subject: [Twisted-Python] SMTP 
In-Reply-To: Message from Itamar Shtull-Trauring <twisted@itamarst.org> 
   of "Sat, 02 Nov 2002 19:27:40 EST." <20021102192740.4a12cd8c.twisted@itamarst.org> 
References: <200210312036.g9VKaH7O031180@fido.strakt.com> <20021101060559.24216.qmail@green.zadka.com> <200211012334.gA1NYpc5021869@theraft.strakt.com> <20021102040558.GA2678@meson.dyndns.org> <200211021735.SAA04244@haddock.cd.chalmers.se> <20021102192740.4a12cd8c.twisted@itamarst.org> 
Message-ID: <200211030054.BAA07771@haddock.cd.chalmers.se>

In a message of Sat, 02 Nov 2002 19:27:40 EST, Itamar Shtull-Trauring writes:
>On Sat, 02 Nov 2002 18:35:44 +0100
>Anders Hammarquist <iko at cd.chalmers.se> wrote:
>
>> $ python2.2 pyunit/unittest.py
>> twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer---- Running
>> Test: twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer 
>Please note that Twisted needs to support 2.1 as well, it's recommended
>you run tests under both 2.1 and 2.2. Though that may be totally
>unrelated to the issue here.

There shouldn't be any 2.2-specific stuff in there, using 2.2 is just
habbit (as the stuff we're using it for needs 2.2). Running the same
test using python 2.1 works, so there shouldn't be any major 2.1
incompatibilities ;-)

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From twisted at itamarst.org  Sat Nov  2 19:56:52 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 2 Nov 2002 19:56:52 -0500
Subject: [Twisted-Python] SMTP
In-Reply-To: <200211030054.BAA07771@haddock.cd.chalmers.se>
References: <200210312036.g9VKaH7O031180@fido.strakt.com>
	<20021101060559.24216.qmail@green.zadka.com>
	<200211012334.gA1NYpc5021869@theraft.strakt.com>
	<20021102040558.GA2678@meson.dyndns.org>
	<200211021735.SAA04244@haddock.cd.chalmers.se>
	<20021102192740.4a12cd8c.twisted@itamarst.org>
	<200211030054.BAA07771@haddock.cd.chalmers.se>
Message-ID: <20021102195652.3707be78.twisted@itamarst.org>

On Sun, 03 Nov 2002 01:54:07 +0100
Anders Hammarquist <iko at cd.chalmers.se> wrote:

> There shouldn't be any 2.2-specific stuff in there, using 2.2 is just
> habbit (as the stuff we're using it for needs 2.2). Running the same
> test using python 2.1 works, so there shouldn't be any major 2.1
> incompatibilities ;-)

OK, I'll try to figure out what's the problem with the tests if no one
else volunteers.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From developer at csrules.dyndns.org  Sun Nov  3 00:13:02 2002
From: developer at csrules.dyndns.org (Maniac -)
Date: Sat, 2 Nov 2002 23:13:02 -0600 (CST)
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102121918.GB850@ferd2.thristian.org>
References: <20021102121918.GB850@ferd2.thristian.org>
Message-ID: <2929.192.168.2.20.1036300382.squirrel@seraphine.csrules.dyndns.org>

Is this in cvs somewhere?

-M

> While developing my twisted.im bot (new this week! database access and
> an infobot-style plugin!)





From screwtape at froup.com  Sun Nov  3 03:09:17 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 3 Nov 2002 19:09:17 +1100
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <2929.192.168.2.20.1036300382.squirrel@seraphine.csrules.dyndns.org>
References: <20021102121918.GB850@ferd2.thristian.org> <2929.192.168.2.20.1036300382.squirrel@seraphine.csrules.dyndns.org>
Message-ID: <20021103080917.GB20463@ferd2.thristian.org>

On Sat, Nov 02, 2002 at 11:13:02PM -0600, Maniac - wrote:

> > While developing my twisted.im bot (new this week! database access
> > and an infobot-style plugin!)
>
> Is this in cvs somewhere?

Sadly, no. None of my weekend projects have ever been available via
CVS, I've never written anything of sufficient interest before.

Screwtape,
...feel free to visit #afda on irc.slashnet.org and say 'Mooby: help'

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| This empty tagline? It's where my conversation piece used to be.
|



From screwtape at froup.com  Sun Nov  3 06:44:43 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 3 Nov 2002 22:44:43 +1100
Subject: [Twisted-Python] New release of the twisted IM bot
Message-ID: <20021103114443.GC20463@ferd2.thristian.org>

Yes, another raw tarball of my code.

New in this update:

- infobot plugin with an SQL backend - currently uses sqlite and
  pysqlite (see http://pysqlite.sf.net), but porting it to some other
  SQL database should be trivial.
- A README file.
- Properly ignores NOTICEs and ACTIONs (requires Twisted from current
  CVS to ignore NOTICEs.

Location:

	http://members.optusnet.com.au/thristian/twisted-bot-0.1.tar.gz

Currently, the bot is lurking in #afda on irc.slashnet.org under the
name of 'Mooby', if you want to poke at it.

Screwtape,
...still waiting for his first bug report.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "You seem cool for a naked chick in a booth - let's be pals someday." -- PUSA
|



From lists at morpheus.demon.co.uk  Sat Nov  2 12:51:22 2002
From: lists at morpheus.demon.co.uk (Paul Moore)
Date: Sat, 02 Nov 2002 17:51:22 +0000
Subject: [Twisted-Python] Some comments on twisted.news
References: <n2m-g.y98qpdnu.fsf@morpheus.demon.co.uk> <20021101060145.GA20898@meson.dyndns.org>
Message-ID: <n2m-g.of97eu79.fsf@morpheus.demon.co.uk>

Jp Calderone <exarkun at meson.dyndns.org> writes:

> I agree that \n would probably be preferable, this was just
> sloppyness on my part in the initial implementation.  I think it
> could be changed in such a way so as not to break existing code, but
> allow new code to use \n (similar to how LineReceiver works), and I
> think this would be a good thing to do.

That would be good. As a Windows user, I have a lot of experience with
nasty LF/CRLF issues. Most of them respond reasonably well to the "be
liberal in what you accept and strict in what you produce" philosophy.

>   Hmmm.  I have an {indeterminant}-term goal of creating a better backend
> interface.  If this isn't a pressing concern for you now, I'd rather put it
> off until that happened (though I'd have no problem if you sent a patch that
> made the necessary changes).

That's fine by me - I don't have a major issue with this. What I'll do
(if and when I get the time) is to post a copy of the design I used
for my backend interface - it may be of interest.

> I've been away a while, so maybe you've already gone ahead and done
> some of this?  If not, I might have a crack at it myself.  I'll wait
> to hear what, if anything, you've done thus far though.

Unfortunately, events overtook me, and I haven't had a chance to get
back to this yet. When I do, I have 2 things to look at - on the one
hand, I need to complete the job of implementing the news server I
needed this for in the first place, and in the second, I'd like to
help by supplying some patches. I suspect that getting the job done
may have to take priority, though :-)

I'll keep looking at this, though, and discuss further with you.

Paul.

-- 
This signature intentionally left blank



From developer at csrules.dyndns.org  Sun Nov  3 09:54:44 2002
From: developer at csrules.dyndns.org (Maniac -)
Date: Sun, 3 Nov 2002 08:54:44 -0600 (CST)
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102214207.GA20463@ferd2.thristian.org>
References: <20021102121918.GB850@ferd2.thristian.org>
        <20021102.105717.74755582.glyph@twistedmatrix.com>
        <20021102214207.GA20463@ferd2.thristian.org>
Message-ID: <3461.192.168.2.20.1036335284.squirrel@seraphine.csrules.dyndns.org>

=
>
> I'd be interested to see if my bot also works with AIM and
> twisted.words,

That would be cool

> though - I don't have an account with either so I can't
> test... is anyone working on a Jabber protocol for Twisted? :)

Ah jabber for twisted. I'd love that too!

-M





From spam at polynode.com  Sun Nov  3 21:14:57 2002
From: spam at polynode.com (Alex)
Date: Sun, 03 Nov 2002 21:14:57 -0500
Subject: [Twisted-Python] Problem getting one woven.Widget to include another
Message-ID: <5.1.1.6.0.20021103205435.00b74fb0@coral.tufts.edu>

I'm setting up a site using Woven, and I've hit a strange problem.

I've got a subclass of woven.widget.Widget called VolumeWidget, and that 
widget is used to display a list of links within a page.  I've got another 
class called VolumeListWidget, the only purpose of which is to display a 
list of these VolumeWidgets.

class VolumeListWidget(widgets.Widget):
     def setUp(self, request, node, data):
         for volume in data.get('volumes') or []:
             volume_model = VolumeModel(volume)
             volume_div = VolumeWidget(volume_model)
             volume_div.tagName = 'div'
             self.add(volume_div)

VolumeListWidget's not working.  Instead of displaying a <div> that 
contains all the stuff VolumeWidget is supposed to contain [as defined in 
VolumeWidget's setUp() function], it's displaying an empty <div/>.  I'm not 
sure what I'm doing wrong, if anything, but it's too strange to tell.

Example (along with some code) is available here:

http://polynode.com:8889/content.rpy/testvolumelist

To see a working example of VolumeWidget, go here:

http://polynode.com:8889/content.rpy/testvolume

I will appreciate any help anyone can lend me.





From lordvan at lordvan.com  Mon Nov  4 04:20:34 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Mon, 4 Nov 2002 10:20:34 +0100 (CET)
Subject: [Twisted-Python] twisted.enterprise.row Where clauses (and maybe other conditions.)
Message-ID: <65356.62.47.64.183.1036401634.squirrel@webmail.lordvan.com>

hi!

just wondered if it would be acceptable to add either grouping and e.g. OR
to whereClause or to make it possible to specify the WHERE CLAUSE
manually(which could be abused for other things too .. i know..)

another thing is an 'ORDER BY' Clause ..

both should be easy to add afaik .. (code for where-clause starting at
line 129 of sqlreflector.py)

what do u think?
opinions, suggestions?

greetings, LordVan


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/





From jml at mumak.net  Mon Nov  4 04:20:44 2002
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 4 Nov 2002 20:20:44 +1100
Subject: [Twisted-Python] Reflector init patch (repost)
Message-ID: <200211042020.44098.jml@mumak.net>

On Thu, Oct 31, 2002 at 11:33:01AM +1100, Jonathan M. Lange wrote:

With reference to twisted.enterprise.reflector not making a Deferred available 
on construction, despite it being an asynchronous operation...

> Suggestions include having a populatedDeferred as a member (rather than
> populatedCallback)

I've been having troubles with my mail recently. In case this did not come 
through, here is the patch again.

Comments appreciated. Commits even more so.

Index: twisted/enterprise/reflector.py
===================================================================
RCS file: /cvs/Twisted/twisted/enterprise/reflector.py,v
retrieving revision 1.9
diff -u -r1.9 reflector.py
--- twisted/enterprise/reflector.py     16 Oct 2002 04:27:29 -0000      1.9
+++ twisted/enterprise/reflector.py     31 Oct 2002 00:57:59 -0000
@@ -20,6 +20,7 @@
 from twisted.enterprise import adbapi
 from twisted.enterprise.util import DBError, getKeyColumn, quote, _TableInfo, 
_TableRelationship
 from twisted.enterprise.row import RowObject
+from twisted.internet import defer
 
 class Reflector:
     """Base class for enterprise reflectors. This implements rowCacheing.
@@ -61,6 +62,7 @@
         
         from twisted.internet import reactor
         reactor.callLater(0, self._really_populate)
+        self.populatedDeferred = defer.Deferred()
 
     def _really_populate(self):
         """Implement me to populate schema information for the reflector.
Index: twisted/enterprise/sqlreflector.py
===================================================================
RCS file: /cvs/Twisted/twisted/enterprise/sqlreflector.py,v
retrieving revision 1.10
diff -u -r1.10 sqlreflector.py
--- twisted/enterprise/sqlreflector.py  14 Oct 2002 22:34:21 -0000      1.10
+++ twisted/enterprise/sqlreflector.py  31 Oct 2002 00:58:00 -0000
@@ -49,6 +49,7 @@
         defe = self.runInteraction(self._transPopulateSchema)
         if self.populatedCallback:
             defe.addCallbacks(self.populatedCallback)
+        defe.chainDeferred(self.populatedDeferred)
 
     def _transPopulateSchema(self, transaction):
         """Used to construct the row classes in a single interaction.




From a.d.stribblehill at durham.ac.uk  Mon Nov  4 07:26:07 2002
From: a.d.stribblehill at durham.ac.uk (Andrew Stribblehill)
Date: Mon, 4 Nov 2002 12:26:07 +0000
Subject: [Twisted-Python] Some comments on twisted.news
In-Reply-To: <20021101060145.GA20898@meson.dyndns.org>
References: <n2m-g.y98qpdnu.fsf@morpheus.demon.co.uk> <20021101060145.GA20898@meson.dyndns.org>
Message-ID: <20021104122607.GE30202@womble.dur.ac.uk>

Quoting Jp Calderone <exarkun at meson.dyndns.org> (2002-11-01 06:01:45 GMT):
> On Tue, Oct 22, 2002 at 06:49:09PM +0100, Paul Moore wrote:
> > 3. It would be nice if the server handled the translation to CRLF, so
> >    that backends could return data with lines separated by \n, and the
> >    server class would convert that to \r\n. After all, \n is the
> >    "normal" end of line character internal to Python code, and \r\n is
> >    a feature of the NNTP protocol, so the protocol driver should be
> >    responsible for the conversion (IMHO). Of course, this is a
> >    behaviour change, which could break existing backends, so maybe
> >    it's not practical to make this change.
> 
>   I agree that \n would probably be preferable, this was just sloppyness on
> my part in the initial implementation.  I think it could be changed in such
> a way so as not to break existing code, but allow new code to use \n
> (similar to how LineReceiver works), and I think this would be a good thing
> to do.

I posted a patch a few months ago that took any of a number of line
endings. It seemed to get devnulled, and I haven't got a copy any
more but I suspect it's in the list archives. We do *have* list
archives, don't we?

-- 
CROMARTY



From twisted_low at contact.com.my  Tue Nov  5 02:54:46 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Tue,  5 Nov 2002 15:54:46 +0800
Subject: [Twisted-Python] Question regarding widgets
Message-ID: <200211051554.AA322306338@contact.com.my>

Dear People,

I am newbie with some background using zope. I am trying to use twisted in a web application that is going to be launched in my office. Problem now is that i cannot get the example to work ( Example ) ..... 

Specs :

1. os --> windows 98
2. python --> python-2.2.2

This is my autoexec.bat :


@SET PYTHONPATH=C:\python22\lib\site-packages\twisted\
@SET PYTHONPATH=C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH\

i can't seem to get the Example even to compile and looking through the docs doesn't seem to help much. One question can i use the --personal option on a windows machine ?
I get an error that says it cannot find the pwd module. Can someone please help me or at least point me somewhere where there are some docs ???

Thanks in advance



_____________________________________________________________________
iRepublics.com - Free Web Hosting for Businesses
33MB webspace free, SMS messaging, 30 email accounts, your own domain name
Sign up Now at http://www.iRepublics.com



From twisted_low at contact.com.my  Tue Nov  5 03:54:43 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Tue,  5 Nov 2002 16:54:43 +0800
Subject: [Twisted-Python] question
Message-ID: <200211051654.AA192807066@contact.com.my>

in the book to get the example for widget working it says that we have to do a twistd -g Example and that this Example should be placed in a ~/TwistedPlugins directory. This is not clear at all on a windows based machine. Where the heck is this TwistedPlugins directory supposed to exist ? .... 

in c:\python22\scripts ??? Where ????

_____________________________________________________________________
iRepublics.com - Free Web Hosting for Businesses
33MB webspace free, SMS messaging, 30 email accounts, your own domain name
Sign up Now at http://www.iRepublics.com



From glyph at twistedmatrix.com  Tue Nov  5 04:20:40 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 05 Nov 2002 03:20:40 -0600 (CST)
Subject: [Twisted-Python] question
In-Reply-To: <200211051654.AA192807066@contact.com.my>
References: <200211051654.AA192807066@contact.com.my>
Message-ID: <20021105.032040.59649309.glyph@twistedmatrix.com>

On Tue,  5 Nov 2002 16:54:43 +0800, "lals;dfjsd" <twisted_low at contact.com.my> wrote:

> in the book to get the example for widget working it says that we have to do
> a twistd -g Example and that this Example should be placed in a
> ~/TwistedPlugins directory. This is not clear at all on a windows based
> machine. Where the heck is this TwistedPlugins directory supposed to exist ?
> ....

That documentation is ancient and probably incorrect by now... apologies for
the UNIX centricity.  The old-style directory-based plugins were an experiment
which failed.  Nowadays "plugin" means something a little more pythonic (see
http://www.twistedmatrix.com/documents/howto/plugin ).

At any rate, twisted.web.widgets is quite out of date, gradually being
deprecated, and not nearly as good an idea as we originally thought.  If you
want to do Twisted + web applications, you want to use twisted.web.woven.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021105/46328a4a/attachment.pgp 

From glyph at twistedmatrix.com  Tue Nov  5 04:41:19 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 05 Nov 2002 03:41:19 -0600 (CST)
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <200211051554.AA322306338@contact.com.my>
References: <200211051554.AA322306338@contact.com.my>
Message-ID: <20021105.034119.21936440.glyph@twistedmatrix.com>

On Tue,  5 Nov 2002 15:54:46 +0800, "lals;dfjsd" <twisted_low at contact.com.my> wrote:

> I am newbie with some background using zope. I am trying to use twisted in a
> web application that is going to be launched in my office. Problem now is
> that i cannot get the example to work ( Example ) .....

Can you expound a little more on which example you're talking about?  "the
example [...] (Example)" is not very specific in a framework as large as
Twisted.

> Specs :

> 1. os --> windows 98
> 2. python --> python-2.2.2

It should work, though I would recommend upgrading to a more sane version of
Windows whenever you've got the chance :-)

> This is my autoexec.bat :

> @SET PYTHONPATH=C:\python22\lib\site-packages\twisted\
> @SET PYTHONPATH=C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH\

@echo %PYTHONPATH%

will probably show you that your PYTHONPATH is
"C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH"; if you want to add things to the
path rather than reset it entirely, you want it to look like:

    @SET PYTHONPATH=C:\python22\lib\site-packages\twisted\
    @SET PYTHONPATH=%PYTHONPATH%;C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH\

IIRC.  However, I don't understand what you're trying to do here.  If you have
Twisted installed in your C:\python22\lib\site-packages (as with setup.py or
the .exe installer) then you shouldn't be adding anything to your PYTHONPATH to
get 'twisted' to import.

> i can't seem to get the Example even to compile and looking through the docs
> doesn't seem to help much. One question can i use the --personal option on a
> windows machine ?

No.  Windows doesn't have the notion of unix sockets.  Even if you could, there
wouldn't be much of a point: windows security (especially on 9x!) is even more
of a disaster than UNIX, so separating privileges between processes doesn't
help much of anything if you're running them on the same machine.

Why do you think you want the --personal option?  It's designed for multi-user
servers where you've got lots of different people running webservers and you
want them all to be accessible through port 80.

> I get an error that says it cannot find the pwd module. Can someone please
> help me or at least point me somewhere where there are some docs ???

The pwd module is for determining your UNIX username and home directory (which,
surprise, you don't have ^_^).  The --personal option is pretty much useless to
you.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021105/c24dd4e1/attachment.pgp 

From glyph at twistedmatrix.com  Tue Nov  5 04:49:22 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 05 Nov 2002 03:49:22 -0600 (CST)
Subject: [Twisted-Python] Version Of IM That Works With Tkinter?
In-Reply-To: <00c801c28292$716d4da0$66656565@hallows>
References: <00c801c28292$716d4da0$66656565@hallows>
Message-ID: <20021105.034922.111205847.glyph@twistedmatrix.com>

On Sat, 2 Nov 2002 17:08:14 -0000, "John Abel" <johnfabel at btinternet.com> wrote:

> I was looking to run IM on a Win32 machine, but both scripts, im.py and
> t-im.py, require GTK.  According to the documentation that accompanies
> Twisted, IM should run with Tkinter.  Does anyone have a copy that does?

Unfortunately the older version of IM worked with Tkinter but it does no
longer.  There is a nascent port jython, though, if you're feeling adventurous.

Rumour has it that there is a PyGTK (0.6.x, gtk 1.2.x) port to Windows which
will allow you to run IM just fine... I wish that said rumour would finally end
up archived on this list someplace, but that's all I know :).

When I've got the time to port IM to gtk2 it will be much more straightforward
to get the gtk version running.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021105/6dfd0430/attachment.pgp 

From lordvan at lordvan.com  Tue Nov  5 07:52:02 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Tue, 5 Nov 2002 13:52:02 +0100 (CET)
Subject: [Twisted-Python] patch for twisted.enterprise.row
Message-ID: <65460.62.47.64.183.1036500722.squirrel@webmail.lordvan.com>

hi!

Patch for twisted.enterprise.row to allow a whereClause specified as
String too and to allow ORDER BY clause(will be checked if it's a valid
column).

while doing this i found out that in twisted.enterprise.row the
variable(String) 'type' is used. 'type' is a built-in function of Python
and i don't think the author wanted to overwrite it so i changed it to
Type.

all changes have been made on cvs version and are verified to work

Any comments,suggestions, ...

greetings LordVan


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: sqlreflector-20021105.patch
Type: application/octet-stream
Size: 7866 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021105/cf7e0d37/attachment.obj 

From lordvan at lordvan.com  Tue Nov  5 07:58:51 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Tue, 5 Nov 2002 13:58:51 +0100 (CET)
Subject: [Twisted-Python] authwovenquotes.rpy
Message-ID: <65401.62.47.64.183.1036501131.squirrel@webmail.lordvan.com>

Hi!

some time ago i re-wrote wovenquotes.rpy to support auth too ...
i promised radix to write docs and submit them(sorry but i had no time
yet) so i just submit the file now

suggestions,comments(,flames)?

greetings, LordVan
P.S.: i'll write the doc asap


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: authwovenquotes.rpy
Type: application/octet-stream
Size: 1852 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021105/41651c1c/attachment.obj 

From tv at twistedmatrix.com  Tue Nov  5 07:16:28 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 5 Nov 2002 14:16:28 +0200
Subject: [Twisted-Python] IMAP client
In-Reply-To: <1036081167.1571.40.camel@mingus>
References: <1036018639.692.74.camel@mingus> <20021030.210619.78707311.glyph@twistedmatrix.com> <1036081167.1571.40.camel@mingus>
Message-ID: <20021105121628.GA23360@tv.stonesoft.com>

On Thu, Oct 31, 2002 at 11:19:28AM -0500, Abe Fettig wrote:
> There are a couple of servers I'd like to use that aren't available in
> Twisted yet (to the best of my knowledge) - IMAP and WebDAV.  Is anyone
> working on implementing these?  If so, I'd be happy to help.

	IMAP is a vomit-inducing protocol.. if someone wants to start
	implementing an IMAP (client), the best start is probably
	in the offlineimap project.



From twisted at itamarst.org  Tue Nov  5 09:55:45 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 5 Nov 2002 09:55:45 -0500
Subject: [Twisted-Python] question
In-Reply-To: <200211051654.AA192807066@contact.com.my>
References: <200211051654.AA192807066@contact.com.my>
Message-ID: <20021105095545.5837251a.twisted@itamarst.org>

On Tue,  5 Nov 2002 16:54:43 +0800
"lals;dfjsd" <twisted_low at contact.com.my> wrote:

> in c:\python22\scripts ??? Where ????

c:\Python22\Scripts\twistd.py is available in 1.0 installed from an
.exe.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From twisted_low at contact.com.my  Tue Nov  5 19:44:19 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Wed,  6 Nov 2002 08:44:19 +0800
Subject: [Twisted-Python] question
Message-ID: <200211060844.AA1192427852@contact.com.my>





---------- Original Message ----------------------------------
From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Reply-To: twisted-python at twistedmatrix.com
Date: Tue, 05 Nov 2002 03:20:40 -0600 (CST)

>On Tue,  5 Nov 2002 16:54:43 +0800, "lals;dfjsd" <twisted_low at contact.com.my> wrote:
>
>> in the book to get the example for widget working it says that we have to do
>> a twistd -g Example and that this Example should be placed in a
>> ~/TwistedPlugins directory. This is not clear at all on a windows based
>> machine. Where the heck is this TwistedPlugins directory supposed to exist ?
>> ....
>
>That documentation is ancient and probably incorrect by now... apologies for
>the UNIX centricity.  The old-style directory-based plugins were an experiment
>which failed.  Nowadays "plugin" means something a little more pythonic (see
>http://www.twistedmatrix.com/documents/howto/plugin ).
>
>At any rate, twisted.web.widgets is quite out of date, gradually being
>deprecated, and not nearly as good an idea as we originally thought.  If you
>want to do Twisted + web applications, you want to use twisted.web.woven.

Okay if this is the case, can you let me know how macros is done using woven ? I come from a background of using zope and 
'<span tal:define-macros' ... I really need to know how to do macros in twisted. I have tried digging through the mailing list and asking in the channel but couldn't get a straight answer. Hopefully I can get an answer ...

Thanks in advance.


_____________________________________________________________________
iRepublics.com - Free Web Hosting for Businesses
33MB webspace free, SMS messaging, 30 email accounts, your own domain name
Sign up Now at http://www.iRepublics.com



From twisted_low at contact.com.my  Tue Nov  5 20:00:13 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Wed,  6 Nov 2002 09:00:13 +0800
Subject: [Twisted-Python] Question regarding widgets
Message-ID: <200211060900.AA27984246@contact.com.my>





---------- Original Message ----------------------------------
From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Reply-To: twisted-python at twistedmatrix.com
Date: Tue, 05 Nov 2002 03:41:19 -0600 (CST)

>On Tue,  5 Nov 2002 15:54:46 +0800, "lals;dfjsd" <twisted_low at contact.com.my> wrote:
>
>> I am newbie with some background using zope. I am trying to use twisted in a
>> web application that is going to be launched in my office. Problem now is
>> that i cannot get the example to work ( Example ) .....
>
>Can you expound a little more on which example you're talking about?  "the
>example [...] (Example)" is not very specific in a framework as large as
>Twisted.
>
>> Specs :
>
>> 1. os --> windows 98
>> 2. python --> python-2.2.2
>
>It should work, though I would recommend upgrading to a more sane version of
>Windows whenever you've got the chance :-)
>
>> This is my autoexec.bat :
>
>> @SET PYTHONPATH=C:\python22\lib\site-packages\twisted\
>> @SET PYTHONPATH=C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH\
>
>@echo %PYTHONPATH%
>
>will probably show you that your PYTHONPATH is
>"C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH"; if you want to add things to the
>path rather than reset it entirely, you want it to look like:
>
>    @SET PYTHONPATH=C:\python22\lib\site-packages\twisted\
>    @SET PYTHONPATH=%PYTHONPATH%;C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH\
>
>IIRC.  However, I don't understand what you're trying to do here.  If you have
>Twisted installed in your C:\python22\lib\site-packages (as with setup.py or
>the .exe installer) then you shouldn't be adding anything to your PYTHONPATH to
>get 'twisted' to import.

Well following the example for woven, I thought that you needed to add to pythonpath where ever you are putting your code for your application, as in if I want to put my code in c:\web2\mohan_koteh\ then i should add this to the pythonpath to get it to work. Isn't it so ? I just kept on trying the woven examples but without success until i added the directory which i was working on to the pythonpath. Maybe I am doing something wrong here but can someone actually tell me how it is done ?

>
>> i can't seem to get the Example even to compile and looking through the docs
>> doesn't seem to help much. One question can i use the --personal option on a
>> windows machine ?
>
>No.  Windows doesn't have the notion of unix sockets.  Even if you could, there
>wouldn't be much of a point: windows security (especially on 9x!) is even more
>of a disaster than UNIX, so separating privileges between processes doesn't
>help much of anything if you're running them on the same machine.
>
>Why do you think you want the --personal option?  It's designed for multi-user
>servers where you've got lots of different people running webservers and you
>want them all to be accessible through port 80.
>
>> I get an error that says it cannot find the pwd module. Can someone please
>> help me or at least point me somewhere where there are some docs ???
>
>The pwd module is for determining your UNIX username and home directory (which,
>surprise, you don't have ^_^).  The --personal option is pretty much useless to
>you.
>
>-- 
> |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
> |   < _/ >   |  Lead Developer,  the Twisted project  |
> |  < ___/ >  |      http://www.twistedmatrix.com      |
>
>

_____________________________________________________________________
iRepublics.com - Free Web Hosting for Businesses
33MB webspace free, SMS messaging, 30 email accounts, your own domain name
Sign up Now at http://www.iRepublics.com



From andrew-twisted at puzzling.org  Tue Nov  5 20:12:12 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Nov 2002 12:12:12 +1100
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <200211060900.AA27984246@contact.com.my>
References: <200211060900.AA27984246@contact.com.my>
Message-ID: <20021106011212.GA2576@ritsuko.xware.cx>

On Wed, Nov 06, 2002 at 09:00:13AM +0800, lals;dfjsd wrote:
> >
> >IIRC.  However, I don't understand what you're trying to do here.  If you have
> >Twisted installed in your C:\python22\lib\site-packages (as with setup.py or
> >the .exe installer) then you shouldn't be adding anything to your PYTHONPATH to
> >get 'twisted' to import.
> 
> Well following the example for woven, I thought that you needed to add
> to pythonpath where ever you are putting your code for your
> application, as in if I want to put my code in c:\web2\mohan_koteh\
> then i should add this to the pythonpath to get it to work. Isn't it
> so ? I just kept on trying the woven examples but without success
> until i added the directory which i was working on to the pythonpath.
> Maybe I am doing something wrong here but can someone actually tell me
> how it is done ?

He's just pointing out that you shouldn't need to do anything special to
get Twisted itself to import -- the installer/setup.py should've done
that for you (anything in %PYTHONHOME%/Lib/site-packages is
automatically on the python path).

What you need to do with your own application that uses Twisted is a
different question.

-Andrew.




From twisted_low at contact.com.my  Tue Nov  5 20:12:52 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Wed,  6 Nov 2002 09:12:52 +0800
Subject: [Twisted-Python] Question regarding widgets
Message-ID: <200211060912.AA8454630@contact.com.my>





---------- Original Message ----------------------------------
From: Andrew Bennetts <andrew-twisted at puzzling.org>
Reply-To: twisted-python at twistedmatrix.com
Date: Wed, 6 Nov 2002 12:12:12 +1100

>On Wed, Nov 06, 2002 at 09:00:13AM +0800, lals;dfjsd wrote:
>> >
>> >IIRC.  However, I don't understand what you're trying to do here.  If you have
>> >Twisted installed in your C:\python22\lib\site-packages (as with setup.py or
>> >the .exe installer) then you shouldn't be adding anything to your PYTHONPATH to
>> >get 'twisted' to import.
>> 
>> Well following the example for woven, I thought that you needed to add
>> to pythonpath where ever you are putting your code for your
>> application, as in if I want to put my code in c:\web2\mohan_koteh\
>> then i should add this to the pythonpath to get it to work. Isn't it
>> so ? I just kept on trying the woven examples but without success
>> until i added the directory which i was working on to the pythonpath.
>> Maybe I am doing something wrong here but can someone actually tell me
>> how it is done ?
>
>He's just pointing out that you shouldn't need to do anything special to
>get Twisted itself to import -- the installer/setup.py should've done
>that for you (anything in %PYTHONHOME%/Lib/site-packages is
>automatically on the python path).
>
>What you need to do with your own application that uses Twisted is a
>different question.
>
>-Andrew.

Ummm so does that mean I have to add something to the pythonpath for a web application that I am building in a particular directory ?
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

_____________________________________________________________________
iRepublics.com - Free Web Hosting for Businesses
33MB webspace free, SMS messaging, 30 email accounts, your own domain name
Sign up Now at http://www.iRepublics.com



From andrew-twisted at puzzling.org  Tue Nov  5 20:25:33 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Nov 2002 12:25:33 +1100
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <200211060912.AA8454630@contact.com.my>
References: <200211060912.AA8454630@contact.com.my>
Message-ID: <20021106012533.GB2576@ritsuko.xware.cx>

On Wed, Nov 06, 2002 at 09:12:52AM +0800, lals;dfjsd wrote:
> 
> Ummm so does that mean I have to add something to the pythonpath for a
> web application that I am building in a particular directory ?

Unfortunately, I don't know -- I'm not a Twisted Web expert.  :(

Someone else will have to answer this one.

-Andrew.




From spam at polynode.com  Tue Nov  5 21:33:15 2002
From: spam at polynode.com (Alex)
Date: Tue, 05 Nov 2002 21:33:15 -0500
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <200211060912.AA8454630@contact.com.my>
Message-ID: <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu>

At 09:12 AM 11/6/2002 +0800, lals;dfjsd wrote:
>Ummm so does that mean I have to add something to the pythonpath for a web 
>application that I am building in a particular directory ?

I think I know what Mr. Dfjsd is getting at; I hit this same problem.

If you're building an app in c:\webapp, and you run twistd from that 
directory, then 'c:\webapp' should be part of sys.path.  The reason for 
this is that '.' is part of sys.path, and if you're running twistd in 
c:\webapp, then '.' == 'c:\webapp'.  So, if:

   c:\webapp\docroot contains your HTML files and RPY files
   c:\webapp\my_app contains any Python code you need to import

...and you run:

   c:\webapp> mktap web --path docroot
   c:\webapp> twistd -f web.tap

...if you have a .rpy in c:\webapp\docroot, it can call 'import my_app' and 
it should work fine.  (Provided c:\webapp\my_app\__init__.py exists.)

Does that answer your question?

(All twisted.web.woven gurus: feel free to comment or correct me. :)

--
Alex Levy
WWW: http://mesozoic.geecs.org
Tel: 617.835.0778

"Never let your sense of morals prevent you from doing what is right."
-- Salvor Hardin, Isaac Asimov's _Foundation_





From twisted at moshez.org  Tue Nov  5 23:54:10 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 6 Nov 2002 04:54:10 -0000
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu>
References: <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu>
Message-ID: <20021106045410.28597.qmail@green.zadka.com>

On Tue, 05 Nov 2002, Alex <spam at polynode.com> wrote:

> If you're building an app in c:\webapp, and you run twistd from that 
> directory, then 'c:\webapp' should be part of sys.path.  The reason for 
> this is that '.' is part of sys.path, and if you're running twistd in 
> c:\webapp, then '.' == 'c:\webapp'.

That's not correct, "." is never on your path (that'd be a serious security
whole). The directory in which the script you run is on your path.



From Michael_Scharf at gmx.de  Wed Nov  6 00:35:36 2002
From: Michael_Scharf at gmx.de (Michael Scharf)
Date: Wed, 6 Nov 2002 06:35:36 +0100 (MET)
Subject: [Twisted-Python] How to implement progress/transfer speed/transfered bytes handlers?
Message-ID: <13718.1036560936@www48.gmx.net>

Hi,

I want to use twisted as nntp client. Is it possible to add
somewhere into the streams something like a progress bar or
something that reports the download speed or the total
transferred bytes? I have not looked too deeply into twisted,
but as I understand it it uses the Decorator pattern between
the connection and the actual handler. All I would need is
to add a little class somewhere in between each connection
and the handler, so that I can decorate the Protocol.dataReceived
events...

Michael

-- 
+++ GMX - Mail, Messaging & more  http://www.gmx.net +++
NEU: Mit GMX ins Internet. Rund um die Uhr f?r 1 ct/ Min. surfen!




From waterbug at beeblebrox.gsfc.nasa.gov  Wed Nov  6 01:09:58 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 06 Nov 2002 01:09:58 -0500
Subject: [Twisted-Python] Question regarding widgets
References: <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu> <20021106045410.28597.qmail@green.zadka.com>
Message-ID: <3DC8B236.CE250C6D@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:
> 
> On Tue, 05 Nov 2002, Alex <spam at polynode.com> wrote:
> 
> > If you're building an app in c:\webapp, and you run twistd from that
> > directory, then 'c:\webapp' should be part of sys.path.  The reason for
> > this is that '.' is part of sys.path, and if you're running twistd in
> > c:\webapp, then '.' == 'c:\webapp'.
> 
> That's not correct, "." is never on your path (that'd be a serious security
> whole). The directory in which the script you run is on your path.

How is having "." on your PYTHONPATH a serious security hole?  
(Of course it shouldn't be on _root_'s PYTHONPATH, but how is 
it bad for a regular user?)  

-- Steve.



From twisted at moshez.org  Wed Nov  6 01:31:09 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 6 Nov 2002 06:31:09 -0000
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <3DC8B236.CE250C6D@beeblebrox.gsfc.nasa.gov>
References: <3DC8B236.CE250C6D@beeblebrox.gsfc.nasa.gov>, <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu> <20021106045410.28597.qmail@green.zadka.com>
Message-ID: <20021106063109.29554.qmail@green.zadka.com>

On Wed, 06 Nov 2002, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> How is having "." on your PYTHONPATH a serious security hole?  
> (Of course it shouldn't be on _root_'s PYTHONPATH, but how is 
> it bad for a regular user?)  

What if you run a Python program from /tmp? One of those smart programs
which do something like

'''
try:
   import gtk
except ImportError:
   gtk = None
'''

What if some malicious user put a gtk.py in /tmp which does something like
'''
open(os.path.expanduser("~/.secret"))
os.chmod(os.path.expanduser("~/.secret"), 0777)
'''

And to top it all, assume gtk is, indeed, not installed on this system.



From waterbug at beeblebrox.gsfc.nasa.gov  Wed Nov  6 01:54:28 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 06 Nov 2002 01:54:28 -0500
Subject: [Twisted-Python] Question regarding widgets
References: <3DC8B236.CE250C6D@beeblebrox.gsfc.nasa.gov>, <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu> <20021106045410.28597.qmail@green.zadka.com> <20021106063109.29554.qmail@green.zadka.com>
Message-ID: <3DC8BCA4.AF97DD5@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:
> 
> On Wed, 06 Nov 2002, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> 
> > How is having "." on your PYTHONPATH a serious security hole?
> > (Of course it shouldn't be on _root_'s PYTHONPATH, but how is
> > it bad for a regular user?)
> 
> What if you run a Python program from /tmp?  ... [etc.]

Perhaps I am protected by a higher level of general paranoia: 
I would never run anything from /tmp (or any other directory 
where just anyone could write something into, but especially 
not from /tmp!).  I only run Python scripts either from inside 
my home dir (for which I leave the RH default perms, drwx------) 
or from a root-writable-only dir such as /usr/local/... 
(if somebody's hacked root, I've got bigger problems anyway!).  

Of course, the conversation started with Windows, and I have 
no idea what the implications are there ... probably much more 
dire, like everything else on Windows.  ;^)  

Cheers,
-- Steve.



From alexandre.fayolle at free.fr  Wed Nov  6 09:08:14 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 6 Nov 2002 15:08:14 +0100
Subject: [Twisted-Python] newbie comments on documentation
Message-ID: <20021106140814.GB7460@calvin.fayauffre.org>

Hi there,

I'm starting with twisted (debian package 0.99.2-4), and I'm currently
trying to convert a SimpleTCPServer based project to twisted, and
therefore reading the documentation and trying to wrap my head around
the framework.   

Here's a few comments. I'm a good (python) programmer, but a complete
twisted newbie, and I think I may not be the only one with the same
problems/doubts/questions on the documentation. 

The file quoters.py uses twisted.python.components.Interface, though the
text in the Plugin HOWTO says that "Note that this module does not
import any Twisted functionality at all!". It is not clear if the
Interface declaration is needed or not from reading the code and the
HOWTO. 

The file quoteproto.py imports twisted.internet.app.Application, which
is never used. The import line should be removed from the example file. 

That's all for now.

-- 
Alexandre



From alexandre.fayolle at free.fr  Wed Nov  6 09:09:33 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 6 Nov 2002 15:09:33 +0100
Subject: [Twisted-Python] distutils and twisted
Message-ID: <20021106140933.GC7460@calvin.fayauffre.org>

Hi,

What's the prefered way to use distutils to package a twisted plugin.
The key question being, how do you install the plugins.tml file ? Is
there any distutils extensions available ?

-- 
Alexandre



From waterbug at beeblebrox.gsfc.nasa.gov  Wed Nov  6 10:21:47 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 06 Nov 2002 10:21:47 -0500
Subject: [Twisted-Python] distutils and twisted
References: <20021106140933.GC7460@calvin.fayauffre.org>
Message-ID: <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>

Alexandre Fayolle wrote:

> What's the prefered way to use distutils to package a twisted plugin.
> The key question being, how do you install the plugins.tml file ? Is
> there any distutils extensions available ?

At last, a question I can answer!  (I'm a Twisted application 
developer, not a Twisted guru ... :^)  

Put your plugins.tml into the top dir of your application, e.g.:

myapp/__init__.py
     /plugins.tml    <---
     /myapptap.py
     /myappmodule1/...
     /myappmodule2/...

... and make sure that myapp is in your PYTHONPATH.  
Then if your plugins.tml looks something like this:

-------------------------------------------------
register("Myapp Tap Builder",
         "myapp.myapptap",
         description="""My Application""",
         type="tap",
         tapname="myapp")
-------------------------------------------------

... then mktap will create a myapp.tap file in the 
dir where you run it.  

For your setup.py, something like this should work 
(note data_files ... :^):

-------------------------------------------------
from distutils.core import setup

setup (name = "My Application",
       version = "0.0",
       description = "Blah blah",
       author = "Moi",
       author_email = "moi at world",
       maintainer = "admin",
       maintainer_email = 'admin at here',
       url = "http://spam.world/eggs",
       licence = "MIT",
       long_description = """\
My application does NOT suck!""",
       packages = ['myapp', 
                   'myapp.myappmodule1', 
                   'myapp.myappmodule2'
                   ],
       data_files = [('lib/python2.2/site-packages/myapp', ['myapp/plugins.tml'])
                   ]
      )
-------------------------------------------------

HTH,
-- Steve.



From twisted at itamarst.org  Wed Nov  6 10:39:42 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 6 Nov 2002 10:39:42 -0500
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>
References: <20021106140933.GC7460@calvin.fayauffre.org>
	<3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021106103942.0f56c4a9.twisted@itamarst.org>

On Wed, 06 Nov 2002 10:21:47 -0500
Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

>        data_files = [('lib/python2.2/site-packages/myapp',
>        ['myapp/plugins.tml'])
>                    ]

Twisted's setup.py uses a different, more cross-platform/python-version
hack to make sure plugins.tml is installed, with the unfortunate
side-effect that you can't install normal data files.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From alexandre.fayolle at free.fr  Wed Nov  6 11:46:27 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 06 Nov 2002 17:46:27 +0100 (CET)
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>
References: <20021106140933.GC7460@calvin.fayauffre.org> <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>
Message-ID: <1036601187.3dc947634fdcc@imp.free.fr>

En r?ponse ? Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov>:

> For your setup.py, something like this should work 
> (note data_files ... :^):

Nope. It won't work with different versions of python, but this can easily be
worked around. What's more a problem is that it won't work on non-unix
platforms, and it won't work with the --home option passed to the install
command of setup.py, which is what I use to test packages locally (using
python setup.py install --home=$HOME will install packages in $HOME/lib/python). 

I'm using a similar hack right now for testing, and I'll put up a distutils
extension once I get a few other issues with my plugin sorted out.

Alexandre Fayolle
--
http://alexandre.fayolle.free.fr
http://www.logilab.org
Narval is the first software agent available as free software (GPL).
LOGILAB, Paris (France).




From alexandre.fayolle at free.fr  Wed Nov  6 11:56:17 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 6 Nov 2002 17:56:17 +0100
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <20021106103942.0f56c4a9.twisted@itamarst.org>
References: <20021106140933.GC7460@calvin.fayauffre.org> <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov> <20021106103942.0f56c4a9.twisted@itamarst.org>
Message-ID: <20021106165617.GA8269@calvin.fayauffre.org>

On Wed, Nov 06, 2002 at 10:39:42AM -0500, Itamar Shtull-Trauring wrote:
> On Wed, 06 Nov 2002 10:21:47 -0500
> Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> 
> >        data_files = [('lib/python2.2/site-packages/myapp',
> >        ['myapp/plugins.tml'])
> >                    ]
> 
> Twisted's setup.py uses a different, more cross-platform/python-version
> hack to make sure plugins.tml is installed, with the unfortunate
> side-effect that you can't install normal data files.

This is indeed unfortunate, since I need to install datafiles too... 

-- 
Alexandre



From waterbug at beeblebrox.gsfc.nasa.gov  Wed Nov  6 12:08:22 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 06 Nov 2002 12:08:22 -0500
Subject: [Twisted-Python] distutils and twisted
References: <20021106140933.GC7460@calvin.fayauffre.org> <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov> <20021106103942.0f56c4a9.twisted@itamarst.org> <20021106165617.GA8269@calvin.fayauffre.org>
Message-ID: <3DC94C86.4EBD904F@beeblebrox.gsfc.nasa.gov>

Alexandre Fayolle wrote:
> 
> On Wed, Nov 06, 2002 at 10:39:42AM -0500, Itamar Shtull-Trauring wrote:
> > On Wed, 06 Nov 2002 10:21:47 -0500
> > Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> >
> > >        data_files = [('lib/python2.2/site-packages/myapp',
> > >        ['myapp/plugins.tml'])
> > >                    ]
> >
> > Twisted's setup.py uses a different, more cross-platform/python-version
> > hack to make sure plugins.tml is installed, with the unfortunate
> > side-effect that you can't install normal data files.
> 
> This is indeed unfortunate, since I need to install datafiles too...

... but you don't need to install your Twisted app at the same time as 
Twisted ... in fact, we prefer not to.  Time to learn distutils.  ;^)

-- Steve.



From alexandre.fayolle at free.fr  Wed Nov  6 13:11:52 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 6 Nov 2002 19:11:52 +0100
Subject: [Twisted-Python] twisted, nc and LineReceiver
Message-ID: <20021106181152.GC8269@calvin.fayauffre.org>

Hello, it's me again ;o)

So there's this server I'm porting from a ForkingTCPServer to twisted.
It listens on a socket, and reads one line at a time, processes the line
and writes the answer back on the socket to the client. 

The ForkingTCPServer version uses a handler deriving from
StreamRequestHandler, and gets the data with self.rfile.readline().

The twisted version uses a LineReceiver protocol.

Now, if I use telnet to connect to both version of the server, I can
type some data, press return and get the answer back. This is great.
However, if I use nc send the data, the twisted-based server sees nothing
(lineReceived is not called!)

I have to admit I'm baffled, and I'll take any idea. 

-- 
Alexandre



From alexandre.fayolle at free.fr  Wed Nov  6 13:22:21 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 6 Nov 2002 19:22:21 +0100
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <3DC94C86.4EBD904F@beeblebrox.gsfc.nasa.gov>
References: <20021106140933.GC7460@calvin.fayauffre.org> <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov> <20021106103942.0f56c4a9.twisted@itamarst.org> <20021106165617.GA8269@calvin.fayauffre.org> <3DC94C86.4EBD904F@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021106182221.GD8269@calvin.fayauffre.org>

On Wed, Nov 06, 2002 at 12:08:22PM -0500, Steve Waterbury wrote:
> Alexandre Fayolle wrote:

> > This is indeed unfortunate, since I need to install datafiles too...
> 
> ... but you don't need to install your Twisted app at the same time as 
> Twisted ... in fact, we prefer not to.  Time to learn distutils.  ;^)

I was thinking of cutnpasting the trick you were using to my setup.py,
not installing everything at the same time. IMNSHO, having a module
twisted.python.distutils with a custom setup aware of tml files would be
a nice thing to have for module developers (and I'm a bit surprised that
no such beast exists). I'll hack something, and submit it to the mailing
list if I'm happy enough with it.  

-- 
Alexandre



From glyph at twistedmatrix.com  Wed Nov  6 13:27:52 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 06 Nov 2002 12:27:52 -0600 (CST)
Subject: [Twisted-Python] twisted, nc and LineReceiver
In-Reply-To: <20021106181152.GC8269@calvin.fayauffre.org>
References: <20021106181152.GC8269@calvin.fayauffre.org>
Message-ID: <20021106.122752.93020156.glyph@twistedmatrix.com>

On Wed, 6 Nov 2002 19:11:52 +0100, Alexandre Fayolle <alexandre.fayolle at free.fr> wrote:
> Now, if I use telnet to connect to both version of the server, I can
> type some data, press return and get the answer back. This is great.
> However, if I use nc send the data, the twisted-based server sees nothing
> (lineReceived is not called!)

Sounds like a CRLF versus CR issue.  Have you checked for that? :-)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021106/c54268cb/attachment.pgp 

From radix at twistedmatrix.com  Wed Nov  6 14:01:16 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 6 Nov 2002 20:01:16 +0100
Subject: [Twisted-Python] twisted, nc and LineReceiver
In-Reply-To: <20021106.122752.93020156.glyph@twistedmatrix.com>
References: <20021106181152.GC8269@calvin.fayauffre.org> <20021106.122752.93020156.glyph@twistedmatrix.com>
Message-ID: <20021106190116.GF8926@toshi>

On Wed, Nov 06, 2002 at 12:27:52PM -0600, Glyph Lefkowitz wrote:
> On Wed, 6 Nov 2002 19:11:52 +0100, Alexandre Fayolle
> <alexandre.fayolle at free.fr> wrote:
> > Now, if I use telnet to connect to both version of the server, I can
> > type some data, press return and get the answer back. This is great.
> > However, if I use nc send the data, the twisted-based server sees nothing
> > (lineReceived is not called!)
> 
> Sounds like a CRLF versus CR issue.  Have you checked for that? :-)

Indeed. Netcat sends only \n, not \r. See the `delimiter' attribute of
the LineReceiver class.

-- 
			Christopher Armstrong
		    << radix at twistedmatrix.com >>
	     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Wed Nov  6 21:40:17 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 06 Nov 2002 20:40:17 -0600 (CST)
Subject: [Twisted-Python] newbie comments on documentation
In-Reply-To: <20021106140814.GB7460@calvin.fayauffre.org>
References: <20021106140814.GB7460@calvin.fayauffre.org>
Message-ID: <20021106.204017.11390058.glyph@twistedmatrix.com>

On Wed, 6 Nov 2002 15:08:14 +0100, Alexandre Fayolle <alexandre.fayolle at free.fr> wrote:
> The file quoters.py uses twisted.python.components.Interface, though the
> text in the Plugin HOWTO says that "Note that this module does not
> import any Twisted functionality at all!". It is not clear if the
> Interface declaration is needed or not from reading the code and the
> HOWTO. 

That is the result of a disagreement between Itamar and I: I keep taking the
Interfaces stuff out, he keeps putting it in :-).  I wrote the original doc and
that's what the text reflects.  The declarations are not necessary and can be
omitted if you like.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021106/7520c6de/attachment.pgp 

From alexandre.fayolle at free.fr  Thu Nov  7 03:15:11 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Thu, 7 Nov 2002 09:15:11 +0100
Subject: [Twisted-Python] twisted, nc and LineReceiver
In-Reply-To: <20021106190116.GF8926@toshi>
References: <20021106181152.GC8269@calvin.fayauffre.org> <20021106.122752.93020156.glyph@twistedmatrix.com> <20021106190116.GF8926@toshi>
Message-ID: <20021107081511.GA1144@calvin.fayauffre.org>

> > Sounds like a CRLF versus CR issue.  Have you checked for that? :-)
> 
> Indeed. Netcat sends only \n, not \r. See the `delimiter' attribute of
> the LineReceiver class.

Ahaaa!

Thanks for the quick answer. I've attached a patchlet adding this little
piece of information to the LineReceiver's docstring, so that the epydoc
documentation will provide the tip. 
 

-- 
Alexandre
-------------- next part --------------
--- /usr/lib/python2.2/site-packages/twisted/protocols/basic.py	2002-09-23 10:51:29.000000000 +0200
+++ basic.py	2002-11-07 09:05:47.000000000 +0100
@@ -131,6 +131,10 @@
     Each line that's received becomes a callback to lineReceived.  Each
     chunk of raw data becomes a callback to rawDataReceived.
 
+    Lines are limited to 16384 bytes. Change the 'MAX_LENGTH' class attribute
+    if you wish to receive longer lines. The default line delimiter is '\r\n'
+    and it is set by the 'delimiter' class attribute.
+
     This is useful for line-oriented protocols such as IRC, HTTP, POP,
     etc.
     """
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 241 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021107/896643ed/attachment.pgp 

From carball at hush.com  Thu Nov  7 08:04:22 2002
From: carball at hush.com (carball at hush.com)
Date: Thu,  7 Nov 2002 05:04:22 -0800
Subject: [Twisted-Python] grokking cacheable, take 2
Message-ID: <200211071304.gA7D4MFN012033@mailserver3.hushmail.com>

ok, the insecurejelly error i was getting i found was actually
due to trying to store the observer(s) in the Cacheable object itself. .

evidently jelly doesnt take too kindly to having these objects 
in there when it serializes the Cacheable. .

i was able to get around this by storing the observer in the perspective
that is passed as the first argument to getStateToCacheAndObserveFor

the docs say storing the observer(s) in the Cacheable is the preferred method no?

"It is recommended that your object maintain a list (note: library support for this is forthcoming!) of observers, and update them using callRemote when the Cacheable changes in a way that should be noticeable to its clients."

so, my new question is: what IS the preferred way to store observers?
-------------------------
i have a feeling the answer was in the first round of responses i got
( greatly appreciated, thank you ), but i still do not entirely understand what the best method would be. .

again, thanks for the advice AND the KILLER framework. . :D
car



Get your free encrypted email at https://www.hushmail.com



From bruce at cubik.org  Thu Nov  7 10:11:11 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 07 Nov 2002 08:11:11 -0700
Subject: [Twisted-Python] grokking cacheable, take 2
References: <200211071304.gA7D4MFN012033@mailserver3.hushmail.com>
Message-ID: <3DCA828F.4010100@cubik.org>

car,

carball at hush.com wrote:
> ok, the insecurejelly error i was getting i found was actually
> due to trying to store the observer(s) in the Cacheable object itself. .
> 
> evidently jelly doesnt take too kindly to having these objects 
> in there when it serializes the Cacheable. .
> 
> i was able to get around this by storing the observer in the perspective
> that is passed as the first argument to getStateToCacheAndObserveFor
> 
> the docs say storing the observer(s) in the Cacheable is the preferred method no?
> 
> "It is recommended that your object maintain a list (note: library support for this is forthcoming!) of observers, and update them using callRemote when the Cacheable changes in a way that should be noticeable to its clients."
> 
> so, my new question is: what IS the preferred way to store observers?
> -------------------------
> i have a feeling the answer was in the first round of responses i got
> ( greatly appreciated, thank you ), but i still do not entirely understand what the best method would be. .

I store the observers on my cacheable and then override 
getStateToCacheAndObserveFor to specificly enumerate and transform the 
data that I want handled, rather than rely upon the default 
implementation which just returns self.__dict__.

  - Bruce




From radix at twistedmatrix.com  Thu Nov  7 12:01:20 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 7 Nov 2002 18:01:20 +0100
Subject: [Twisted-Python] twisted, nc and LineReceiver
In-Reply-To: <20021107081511.GA1144@calvin.fayauffre.org>
References: <20021106181152.GC8269@calvin.fayauffre.org> <20021106.122752.93020156.glyph@twistedmatrix.com> <20021106190116.GF8926@toshi> <20021107081511.GA1144@calvin.fayauffre.org>
Message-ID: <20021107170120.GH8926@toshi>

On Thu, Nov 07, 2002 at 09:15:11AM +0100, Alexandre Fayolle wrote:
> > > Sounds like a CRLF versus CR issue.  Have you checked for that? :-)
> > 
> > Indeed. Netcat sends only \n, not \r. See the `delimiter' attribute of
> > the LineReceiver class.
> 
> Ahaaa!
> 
> Thanks for the quick answer. I've attached a patchlet adding this little
> piece of information to the LineReceiver's docstring, so that the epydoc
> documentation will provide the tip. 

I've committed a more epydoc-friendly patch to add this information to
the docstring (using @ivar). Thanks for the inspiration, though ;-)

-- 
			Christopher Armstrong
		    << radix at twistedmatrix.com >>
	     http://twistedmatrix.com/users/radix.twistd/



From acapnotic at twistedmatrix.com  Thu Nov  7 20:52:32 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 07 Nov 2002 17:52:32 -0800
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <20021106182221.GD8269@calvin.fayauffre.org>
References: <20021106140933.GC7460@calvin.fayauffre.org>
	<3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>
	<20021106103942.0f56c4a9.twisted@itamarst.org>
	<20021106165617.GA8269@calvin.fayauffre.org>
	<3DC94C86.4EBD904F@beeblebrox.gsfc.nasa.gov> 
	<20021106182221.GD8269@calvin.fayauffre.org>
Message-ID: <1036720353.23481.158.camel@troglodyte.funhouse>

On Wed, 2002-11-06 at 10:22, Alexandre Fayolle wrote:
> IMNSHO, having a module
> twisted.python.distutils with a custom setup aware of tml files would be
> a nice thing to have for module developers (and I'm a bit surprised that
> no such beast exists). I'll hack something, and submit it to the mailing
> list if I'm happy enough with it.  

Hooray!  You have reached the same conclusion as I did
[http://twistedmatrix.com/pipermail/twisted-python/2002-October/001814.html a month ago], only you are willing to go where I did not and write code.  I look forward to seeing what you come up with.

Thanks,

 - Kevin

-- 
The moon is waxing crescent, 11.4% illuminated, 3.2 days old.








From screwtape at froup.com  Fri Nov  8 01:47:50 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Fri, 8 Nov 2002 17:47:50 +1100
Subject: [Twisted-Python] Another patch for twisted-im
Message-ID: <20021108064750.GA16215@ferd2.thristian.org>

This one's dead simple, and shouldn't cause any discussion. :)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| I don't usually .sig people in newsgroups. -- Charles Lieberman
|
-------------- next part --------------
diff -u -r1.20 ircsupport.py
--- ircsupport.py	2 Nov 2002 16:53:56 -0000	1.20
+++ ircsupport.py	8 Nov 2002 07:06:18 -0000
@@ -95,7 +95,7 @@
             if self.account.password:
                 self.sendLine("PASS :%s" % self.account.password)
             self.setNick(self.account.nickname)
-            self.sendLine("USER %s foo bar :GTK-IM user"%self.nickname)
+            self.sendLine("USER %s foo bar :Twisted-IM user"%self.nickname)
             for channel in self.account.channels:
                 self.joinGroup(channel)
             self.account._isOnline=1

From dstone at kde.org  Fri Nov  8 02:19:21 2002
From: dstone at kde.org (Daniel Stone)
Date: Fri, 8 Nov 2002 18:19:21 +1100
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108064750.GA16215@ferd2.thristian.org>
References: <20021108064750.GA16215@ferd2.thristian.org>
Message-ID: <20021108071921.GA25117@trinity.unimelb.edu.au>

On Fri, Nov 08, 2002 at 05:47:50PM +1100, screwtape at froup.com scrawled:
> This one's dead simple, and shouldn't cause any discussion. :)

Yes, it should. :P

> diff -u -r1.20 ircsupport.py
> --- ircsupport.py	2 Nov 2002 16:53:56 -0000	1.20
> +++ ircsupport.py	8 Nov 2002 07:06:18 -0000
> @@ -95,7 +95,7 @@
>              if self.account.password:
>                  self.sendLine("PASS :%s" % self.account.password)
>              self.setNick(self.account.nickname)
> -            self.sendLine("USER %s foo bar :GTK-IM user"%self.nickname)
> +            self.sendLine("USER %s foo bar :Twisted-IM user"%self.nickname)

IMHO "user" should be configurable, too; that's the username that shows
up.

-- 
Daniel Stone 	     <daniel at raging.dropbear.id.au>             <dstone at kde.org>
Developer - http://kopete.kde.org, http://www.kde.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021108/3dfa8de6/attachment.pgp 

From screwtape at froup.com  Fri Nov  8 04:46:07 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Fri, 8 Nov 2002 20:46:07 +1100
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108071921.GA25117@trinity.unimelb.edu.au>
References: <20021108064750.GA16215@ferd2.thristian.org> <20021108071921.GA25117@trinity.unimelb.edu.au>
Message-ID: <20021108094607.GB16215@ferd2.thristian.org>

On Fri, Nov 08, 2002 at 06:19:21PM +1100, Daniel Stone wrote:
> On Fri, Nov 08, 2002 at 05:47:50PM +1100, screwtape at froup.com scrawled:
> > This one's dead simple, and shouldn't cause any discussion. :)
> 
> Yes, it should. :P
> 
> > diff -u -r1.20 ircsupport.py
> > --- ircsupport.py	2 Nov 2002 16:53:56 -0000	1.20
> > +++ ircsupport.py	8 Nov 2002 07:06:18 -0000
> > @@ -95,7 +95,7 @@
> >              if self.account.password:
> >                  self.sendLine("PASS :%s" % self.account.password)
> >              self.setNick(self.account.nickname)
> > -            self.sendLine("USER %s foo bar :GTK-IM user"%self.nickname)
> > +            self.sendLine("USER %s foo bar :Twisted-IM user"%self.nickname)
> 
> IMHO "user" should be configurable, too; that's the username that shows
> up.

Oh, crud. I cvs diff'd from Twisted/twisted/im, I assumed magical CVS
would fix up all the pathnames. 

Anyway, the above happens inside twisted.im's IRC abstraction. I don't
think there's other protocols that let you define your real name every
time you connect (Jabber, for instance, keeps it on the server), so
exposing an API to deal with IRC's nonconformity would seem to be a
Bad Thing.

In theory, you could just make it the same as the nickname, but (a)
that's pretty pointless, and (b), we lose a chance to advertise
Twisted. :)

Also, glyph made it a hard-coded string when he first wrote it, so he
probably thinks that's the Way To Go. :)

At any rate, the same file is used by both the java and GTK
front-ends, so it shouldn't say GTK-IM.


-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "What do you mean, `naked'?"
|



From dstone at kde.org  Fri Nov  8 05:19:20 2002
From: dstone at kde.org (Daniel Stone)
Date: Fri, 8 Nov 2002 21:19:20 +1100
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108094607.GB16215@ferd2.thristian.org>
References: <20021108064750.GA16215@ferd2.thristian.org> <20021108071921.GA25117@trinity.unimelb.edu.au> <20021108094607.GB16215@ferd2.thristian.org>
Message-ID: <20021108101920.GA27749@trinity.unimelb.edu.au>

On Fri, Nov 08, 2002 at 08:46:07PM +1100, screwtape at froup.com scrawled:
> On Fri, Nov 08, 2002 at 06:19:21PM +1100, Daniel Stone wrote:
> > On Fri, Nov 08, 2002 at 05:47:50PM +1100, screwtape at froup.com scrawled:
> > > +            self.sendLine("USER %s foo bar :Twisted-IM user"%self.nickname)
                                                  ^

> > 
> > IMHO "user" should be configurable, too; that's the username that shows
> > up.
> 
> Oh, crud. I cvs diff'd from Twisted/twisted/im, I assumed magical CVS
> would fix up all the pathnames. 
> 
> Anyway, the above happens inside twisted.im's IRC abstraction. I don't
> think there's other protocols that let you define your real name every
> time you connect (Jabber, for instance, keeps it on the server), so
> exposing an API to deal with IRC's nonconformity would seem to be a
> Bad Thing.
> 
> In theory, you could just make it the same as the nickname, but (a)
> that's pretty pointless, and (b), we lose a chance to advertise
> Twisted. :)
> 
> Also, glyph made it a hard-coded string when he first wrote it, so he
> probably thinks that's the Way To Go. :)
> 
> At any rate, the same file is used by both the java and GTK
> front-ends, so it shouldn't say GTK-IM.

Sorry, I'm stupid. I didn't see the colon, and thought you were just
using "user" for the username. Forgive me.

-- 
Daniel Stone 	     <daniel at raging.dropbear.id.au>             <dstone at kde.org>
Developer - http://kopete.kde.org, http://www.kde.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021108/e931e0a4/attachment.pgp 

From twisted at moshez.org  Fri Nov  8 05:57:43 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 8 Nov 2002 10:57:43 -0000
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108094607.GB16215@ferd2.thristian.org>
References: <20021108094607.GB16215@ferd2.thristian.org>, <20021108064750.GA16215@ferd2.thristian.org> <20021108071921.GA25117@trinity.unimelb.edu.au>
Message-ID: <20021108105743.22616.qmail@green.zadka.com>

On Fri, 8 Nov 2002 20:46:07 +1100, screwtape at froup.com wrote:

> Oh, crud. I cvs diff'd from Twisted/twisted/im, I assumed magical CVS
> would fix up all the pathnames. 

In general, I prefer to do local diffs against a clean checkout.



From alexandre.fayolle at free.fr  Fri Nov  8 06:16:49 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Fri, 8 Nov 2002 12:16:49 +0100
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <20021106182221.GD8269@calvin.fayauffre.org>
References: <20021106140933.GC7460@calvin.fayauffre.org> <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov> <20021106103942.0f56c4a9.twisted@itamarst.org> <20021106165617.GA8269@calvin.fayauffre.org> <3DC94C86.4EBD904F@beeblebrox.gsfc.nasa.gov> <20021106182221.GD8269@calvin.fayauffre.org>
Message-ID: <20021108111648.GE7335@calvin.fayauffre.org>

On Wed, Nov 06, 2002 at 07:22:21PM +0100, Alexandre Fayolle wrote:
> IMNSHO, having a module
> twisted.python.distutils with a custom setup aware of tml files would be
> a nice thing to have for module developers (and I'm a bit surprised that
> no such beast exists). I'll hack something, and submit it to the mailing
> list if I'm happy enough with it.  

Well, here's an attempt. The documentation is in the module docstring.
Feel free to add it to the twisted distribution if you think it's ok.
If you need more features, please ask. If you find bugs, please tell me.

-- 
Alexandre
-------------- next part --------------
"""Distutils extensions for twisted framework.

This module enables the installation of plugins.tml files using standard
distutils syntax. It adds the following commands to the standard
setup.py commands:
* build_twisted_plugins: build (i.e. copy) plugins
* install_twisted_plugins: install plugins

Additionally, the following commands have been modified to deal with
plugins files:
 * sdist
 * build
 * install

To use these extenstion, you should import the setup fonction from this
module, and use it normally. To list the plugins.tml files, use the
twisted_plugins keyword argument to the setup function:

from twisted_distutils import setup # you can also import Extension if needed

if __name__ == '__main__':
    setup(name='my_twisted_app',
          version='1.0',
          author='me',
          packages=['my_package'],
          twisted_plugins = ['my_package/plugins.tml'])

Note that you can use this to install files that are not twisted plugins in any package directory of your application.
"""
#
# (c) 2002 Alexandre Fayolle <alexandre.fayolle at free.fr>
# This module is heavily based on code copied from the python distutils
# framework, especially distutils.command.build_script,
# distutils.command.install_script. Many thanks to the authors of these
# modules.
# This module is provided as is, I'm not responsible if anything bad
# happens to you or your python library while using this module. You may
# freely copy it, distribute it and use it in your library or to distribute
# your applications. I'd appreciate if you could drop me an email if you plan
# to do so <wink>.
#
# Happy twisting!
#

from distutils.core import Extension,Distribution,Command
from distutils.command.install import install
from distutils.command.build import build
from distutils.command.sdist import sdist
from distutils.dep_util import newer
from distutils.util import convert_path
import os

class twisted_sdist(sdist):
    def add_defaults(self):
        sdist.add_defaults(self)
        if self.distribution.has_twisted_plugins():
            build_twisted_plugins = self.get_finalized_command('build_twisted_plugins')
            self.filelist.extend(build_twisted_plugins.get_source_files())

class twisted_install(install):
    def initialize_options (self):
        install.initialize_options(self)
        self.twisted_plugins = None
        
    def has_twisted_plugins(self):
        print '$'*50,self.distribution.has_twisted_plugins()
        return self.distribution.has_twisted_plugins()
    
    sub_commands = []
    sub_commands.extend(install.sub_commands)
    sub_commands.append(('install_twisted_plugins', has_twisted_plugins))
                   

class twisted_build(build):
    def initialize_options (self):
        build.initialize_options(self)
        self.twisted_plugins = None
        
    def has_twisted_plugins(self):
        print '#'*50,self.distribution.has_twisted_plugins()
        return self.distribution.has_twisted_plugins()
    
    sub_commands = []
    sub_commands.extend(build.sub_commands)
    sub_commands.append(('build_twisted_plugins', has_twisted_plugins))
    print '#'*50
    print sub_commands
    print '#'*50

class build_twisted_plugins (Command):

    description = "\"build\" twisted plugins (copy)"

    user_options = [
        ('build-dir=', 'd', "directory to \"build\" (copy) to"),
        ('force', 'f', "forcibly build everything (ignore file timestamps"),
        ]

    boolean_options = ['force']


    def initialize_options (self):
        self.build_dir = None
        self.twisted_plugins = None
        self.force = None
        self.outfiles = None

    def get_source_files(self):
        return self.twisted_plugins

    def finalize_options (self):
        self.set_undefined_options('build',
                                   ('build_lib', 'build_dir'),
                                   ('force', 'force'))
        self.twisted_plugins = self.distribution.twisted_plugins


    def run (self):
        if not self.twisted_plugins:
            return
        self.copy_twisted_plugins()


    def copy_twisted_plugins (self):
        """Copy each plugin listed in 'self.twisted_plugins'.
        """
        self.mkpath(self.build_dir)
        for plugin in self.twisted_plugins:
            adjust = 0
            print '*'*80
            print plugin
            plugin = convert_path(plugin)
            print plugin
            print self.build_dir,os.path.basename(plugin)
            outfile = os.path.join(self.build_dir, plugin)
            print outfile
            print '*'*80
            if not self.force and not newer(plugin, outfile):
                self.announce("not copying %s (up-to-date)" % plugin)
                continue

            # Always open the file, but ignore failures in dry-run mode --
            # that way, we'll get accurate feedback if we can read the
            # plugin.
            try:
                f = open(plugin, "r")
            except IOError:
                if not self.dry_run:
                    raise
                f = None
            else:
                f.close()
                self.copy_file(plugin, outfile)


class install_twisted_plugins(Command):

    description = "install twisted plugins"

    user_options = [
        ('install-dir=', 'd', "directory to install scripts to"),
        ('build-dir=','b', "build directory (where to install from)"),
        ('force', 'f', "force installation (overwrite existing files)"),
        ('skip-build', None, "skip the build steps"),
    ]

    boolean_options = ['force', 'skip-build']


    def initialize_options (self):
        self.install_dir = None
        self.force = 0
        self.build_dir = None
        self.skip_build = None

    def finalize_options (self):
        self.set_undefined_options('build', ('build_lib', 'build_dir'))
        self.set_undefined_options('install',
                                   ('install_lib', 'install_dir'),
                                   ('force', 'force'),
                                   ('skip_build', 'skip_build'),
                                  )

    def run (self):
        if not self.skip_build:
            self.run_command('build_twisted_plugins')
        self.outfiles = self.copy_tree(self.build_dir, self.install_dir)

    def get_inputs (self):
        return self.distribution.twisted_plugins or []

    def get_outputs(self):
        return self.outfiles or []
        
    

class TwistedDistribution(Distribution):
    def __init__(self,attrs=None):
        self.twisted_plugins = None
        Distribution.__init__(self,attrs)
        self.cmdclass = {'install':twisted_install,
                         'install_twisted_plugins':install_twisted_plugins,
                         'build':twisted_build,
                         'build_twisted_plugins':build_twisted_plugins,
                         'sdist':twisted_sdist,
                         }

    def has_twisted_plugins(self):
        return self.twisted_plugins and len(self.twisted_plugins) > 0


def setup(**attrs):
    from distutils.core import setup
    attrs['distclass'] = TwistedDistribution
    setup(**attrs)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 241 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021108/bc82ccca/attachment.pgp 

From screwtape at froup.com  Fri Nov  8 07:20:05 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Fri, 8 Nov 2002 23:20:05 +1100
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108105743.22616.qmail@green.zadka.com>
References: <20021108064750.GA16215@ferd2.thristian.org> <20021108071921.GA25117@trinity.unimelb.edu.au> <20021108105743.22616.qmail@green.zadka.com>
Message-ID: <20021108122005.GC16215@ferd2.thristian.org>

On Fri, Nov 08, 2002 at 10:57:43AM -0000, Moshe Zadka wrote:
> On Fri, 8 Nov 2002 20:46:07 +1100, screwtape at froup.com wrote:
> 
> > Oh, crud. I cvs diff'd from Twisted/twisted/im, I assumed magical CVS
> > would fix up all the pathnames. 
> 
> In general, I prefer to do local diffs against a clean checkout.

Why? Is there an appreciable difference?

Screwtape,
...who still thinks cvs is a shiny, wonderful thing.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Ecce Macdonaldus Senex, qui fundum habet. E-I-E-I-O." -- Sarah Boynton
|



From twisted at moshez.org  Fri Nov  8 10:21:15 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 8 Nov 2002 15:21:15 -0000
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108122005.GC16215@ferd2.thristian.org>
References: <20021108122005.GC16215@ferd2.thristian.org>, <20021108064750.GA16215@ferd2.thristian.org> <20021108071921.GA25117@trinity.unimelb.edu.au> <20021108105743.22616.qmail@green.zadka.com>
Message-ID: <20021108152115.25281.qmail@green.zadka.com>

On Fri, 8 Nov 2002, screwtape at froup.com wrote:

> Why? Is there an appreciable difference?

Local diffs are more patch friendly.
IIRC there was a script floating around that converts to make it more
patch friendly, but until the Twisted developers officially locate
it, I personally prefer local diffs. 



From exarkun at meson.dyndns.org  Fri Nov  8 19:08:52 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 8 Nov 2002 19:08:52 -0500
Subject: [Twisted-Python] An unexpected interaction
Message-ID: <20021109000852.GA27980@meson.dyndns.org>

I've just discovered some unfortunate behavior when dirdbm and rebuild are
combined (as I have recently combined them in Pynfo).  It is easily
duplicated:

  from twisted.persisted import dirdbm
  from twisted.python import rebuild

  s = dirdbm.Shelf('dirdbm.rebuild.test')
  s['key'] = 'value'
  rebuild.rebuild(dirdbm)
  print s['key']

Investigating with pdb, I discovered:

  > /home/exarkun/projects/python/Twisted/twisted/persisted/dirdbm.py(90)_readFile()
  -> f = _open(path, "rb")
  (Pdb) next
  OSError: (17, 'File exists', '/home/exarkun/test/dirdbm.rebuild.test/a2V5_')

I don't really know where to go from here.  Does anyone have any ideas?

 Jp

-- 
<Greatnuts> someone gave me bad advice this morning
<Greatnuts> told me to use twm
<Greatnuts> had to reformat
<Greatnuts> just to get it off
--
 7:00pm up 7 days, 5:52, 8 users, load average: 0.11, 0.15, 0.10
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021108/f728f532/attachment.pgp 

From glyph at twistedmatrix.com  Sat Nov  9 04:14:58 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 09 Nov 2002 03:14:58 -0600 (CST)
Subject: [Twisted-Python] An unexpected interaction
In-Reply-To: <20021109000852.GA27980@meson.dyndns.org>
References: <20021109000852.GA27980@meson.dyndns.org>
Message-ID: <20021109.031458.21928347.glyph@twistedmatrix.com>

On Fri, 8 Nov 2002 19:08:52 -0500, Jp Calderone <exarkun at meson.dyndns.org> wrote:
>   from twisted.persisted import dirdbm
>   from twisted.python import rebuild
> 
>   s = dirdbm.Shelf('dirdbm.rebuild.test')
>   s['key'] = 'value'
>   rebuild.rebuild(dirdbm)
>   print s['key']

I just checked in a fix for this, as well as your test.  Thanks for reporting it.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021109/d525860e/attachment.pgp 

From exarkun at meson.dyndns.org  Sat Nov  9 15:48:08 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sat, 9 Nov 2002 15:48:08 -0500
Subject: [Twisted-Python] An unexpected interaction
In-Reply-To: <20021109.031458.21928347.glyph@twistedmatrix.com>
References: <20021109000852.GA27980@meson.dyndns.org> <20021109.031458.21928347.glyph@twistedmatrix.com>
Message-ID: <20021109204808.GA30977@meson.dyndns.org>

On Sat, Nov 09, 2002 at 03:14:58AM -0600, Glyph Lefkowitz wrote:
> > [snip]
> 
> I just checked in a fix for this, as well as your test.  Thanks for reporting it.
> 

  Awesome, thanks :)  I've just noticed something else; not really a bug,
but some unhappy behavior: pickled dirdbm's aren't "portable" - You can't
shutdown, move the working directory, then restart the application.

  Maybe it would be good to store a path relative to the working directory? 
Or just store exactly what is passed to __init__?

  The only reason I noticed this is I just tried to move my pyn files from
test/ to run/ :)  I don't anticipate having to move them again, but being
able to would probably be a "nice feature" -- a persistence mechanism that
can never be relocated from its original file location is kind of silly.

  Jp

-- 
It is practically impossible to teach good programming style to
students that have had prior exposure to BASIC: as potential
programmers they are mentally mutilated beyond hope of
regeneration.        -- Dijkstra
--
 3:00pm up 8 days, 1:52, 6 users, load average: 0.02, 0.07, 0.08
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021109/246b578d/attachment.pgp 

From radix at twistedmatrix.com  Sun Nov 10 09:04:30 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 10 Nov 2002 15:04:30 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] Support --version
In-Reply-To: <E18Apb1-0003US-00@pyramid.twistedmatrix.com>
References: <E18Apb1-0003US-00@pyramid.twistedmatrix.com>
Message-ID: <20021110140429.GD11417@toshi>

On Sun, Nov 10, 2002 at 04:45:39AM -0600, moshez CVS wrote:
> Modified files:
> Twisted/twisted/python/usage.py 1.35 1.36
> 
> Log message:
> Support --version

This makes no sense. The Twisted version has nothing to do with the
version of usage.Options-using applications.

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From twisted at moshez.org  Sun Nov 10 10:26:28 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 10 Nov 2002 15:26:28 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] Support --version
In-Reply-To: <20021110140429.GD11417@toshi>
References: <20021110140429.GD11417@toshi>, <E18Apb1-0003US-00@pyramid.twistedmatrix.com>
Message-ID: <20021110152628.20337.qmail@green.zadka.com>

On Sun, 10 Nov 2002, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> This makes no sense. The Twisted version has nothing to do with the
> version of usage.Options-using applications.

...who can override opt_version() to report their own version.
And if they don't, at least --version gives some useful output and
immediate exit.



From z3p at twistedmatrix.com  Sun Nov 10 12:13:37 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Sun, 10 Nov 2002 12:13:37 -0500
Subject: [Twisted-Python] Erasing strings from memory?
Message-ID: <3DCE4D71.3235.6BA6F5@localhost>

I'm working on a SSH client/server for Twisted, 
and some of the things the client needs to work 
with are passwords both for login and for private 
keys, and then the decrypted keys.  Obviously, 
storing these in memory leads to the possibility 
of acessing them and thereby compromising the 
user.  Is there a way to overwrite the data, or 
otherwise erase it from memory?

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20021110/1d0195d9/attachment.htm 

From twisted at moshez.org  Sun Nov 10 13:06:27 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 10 Nov 2002 18:06:27 -0000
Subject: [Twisted-Python] Erasing strings from memory?
In-Reply-To: <3DCE4D71.3235.6BA6F5@localhost>
References: <3DCE4D71.3235.6BA6F5@localhost>
Message-ID: <20021110180627.21618.qmail@green.zadka.com>

On Sun, 10 Nov 2002, "Paul Swartz" <z3p at twistedmatrix.com> wrote:

> I'm working on a SSH client/server for Twisted, 
> and some of the things the client needs to work 
> with are passwords both for login and for private 
> keys, and then the decrypted keys.  Obviously, 
> storing these in memory leads to the possibility 
> of acessing them and thereby compromising the 
> user.  Is there a way to overwrite the data, or 
> otherwise erase it from memory?

The best way would probably to do it in a subprocess. The next
best way would be to read the string into an mmapped are which
you explicitely free. If you want to be really secure, write a third
program like ssh-agent which does the authentication for a user.



From glyph at twistedmatrix.com  Sun Nov 10 23:12:10 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 10 Nov 2002 22:12:10 -0600 (CST)
Subject: [Twisted-Python] Re: [Twisted-commits] Support --version
In-Reply-To: <20021110152628.20337.qmail@green.zadka.com>
References: <20021110140429.GD11417@toshi>
	<E18Apb1-0003US-00@pyramid.twistedmatrix.com>
	<20021110152628.20337.qmail@green.zadka.com>
Message-ID: <20021110.221210.98684057.glyph@twistedmatrix.com>


On 10 Nov 2002 15:26:28 -0000, Moshe Zadka <twisted at moshez.org> wrote:
> ...who can override opt_version() to report their own version.
> And if they don't, at least --version gives some useful output and
> immediate exit.

You're both right: I think there's a bit of a design hole in Options, since you
can't override opt_version with an arg, and strings in the various data
structures will be ignored in subclasses if it's a method in the superclass.
Lowest-level class ought to always take precedence.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021110/33dac365/attachment.pgp 

From glyph at twistedmatrix.com  Sun Nov 10 23:16:46 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 10 Nov 2002 22:16:46 -0600 (CST)
Subject: [Twisted-Python] Erasing strings from memory?
In-Reply-To: <20021110180627.21618.qmail@green.zadka.com>
References: <3DCE4D71.3235.6BA6F5@localhost>
	<20021110180627.21618.qmail@green.zadka.com>
Message-ID: <20021110.221646.39633988.glyph@twistedmatrix.com>

On 10 Nov 2002 18:06:27 -0000, Moshe Zadka <twisted at moshez.org> wrote:
> The best way would probably to do it in a subprocess. The next
> best way would be to read the string into an mmapped are which
> you explicitely free. If you want to be really secure, write a third
> program like ssh-agent which does the authentication for a user.

Couldn't you use the 'array' module to create a character array which then you
could manually dump garbage over?  (making sure not to use any array
convenience functions like "tostring" or what-have-you)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021110/34db3969/attachment.pgp 

From kevin.m.turner at pobox.com  Sun Nov 10 23:27:42 2002
From: kevin.m.turner at pobox.com (Kevin Turner)
Date: 10 Nov 2002 20:27:42 -0800
Subject: [Twisted-Python] ANN: CVSToys 1.0.0
Message-ID: <1036988862.8932.335.camel@troglodyte.funhouse>

How do I stay informed about changes to the repository?
How can I keep a checked-out working copy up to date?
How can I keep a back-up of my repository off site?
. . .

Twisted Matrix Laboratories has been using CVSToys to keep track of
their CVS repository for the past year, and now CVSToys is being
released to the general public for the first time.

FreshCVS ("the biggest best and only toy we've got"), working in
conjunction with CVS's 'loginfo' hook, will perform actions in response
to a commit.  Unlike 'loginfo' alone, which will only execute the first
matching command it finds, FreshCVS's flexible configuration allows for
any number of actions to take place.  Actions include notification by
mail (with diffs), chat service, and web (both HTML and RSS), updating a
working copy, and rsync to backup.  

Another key feature of FreshCVS notifications is that you receive
one per commit, not one for each directory of the commit as
loginfo-triggered scripts are prone to do.

FreshCVS is extensible with Python, and you may also publish
notifications by a Perspective Broker network service, allowing 3rd
party clients to listen in.

More information and downloads may be found at 
http://purl.net/net/CVSToys

CVSToys is open source software.  
Share and enjoy,

 - Kevin Turner, Maintainer

acapnotic at twistedmatrix.com, Acapnotic on #twisted of irc.freenode.net.

Other links:

Concurrent Versions System (CVS): http://www.cvshome.org/
Python: http://www.python.org/
Twisted: http://twistedmatrix.com/





From z3p at twistedmatrix.com  Sun Nov 10 23:29:32 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Sun, 10 Nov 2002 23:29:32 -0500
Subject: [Twisted-Python] Erasing strings from memory?
In-Reply-To: <20021110.221646.39633988.glyph@twistedmatrix.com>
References: <20021110180627.21618.qmail@green.zadka.com>
Message-ID: <3DCEEBDC.29870.2D67719@localhost>

On 10 Nov 2002 at 22:16, Glyph Lefkowitz wrote:

> Couldn't you use the 'array' module to create a character array which then you
> could manually dump garbage over?  (making sure not to use any array
> convenience functions like "tostring" or what-have-you)

Maybe, but I doubt I could send arrays to 
functions that expect Python strings.  I got a 
message from Rich Satz on pycrypto with a C module 
that will clear a Python string along with 
permission to use it in Twisted.  I'll commit it 
when I use it in conch.

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin




From corydodt at yahoo.com  Mon Nov 11 16:23:17 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Mon, 11 Nov 2002 13:23:17 -0800 (PST)
Subject: [Twisted-Python] Lore with PIL
Message-ID: <20021111212317.43338.qmail@web10004.mail.yahoo.com>

I'm in the process of adapting Lore for the documentation on my project. 
I've subclassed it, and attached my work.

I decided not to do this as a patch after all; the changes should be very
easy to drop into the lore core if this turns out to be useful.

What do this script and module do?

* Convert lore-html to latex (like html2latex and latex.py)

What does it do differently (see Advantages for the reasons why)?

1) Images are converted to png instead of eps before for use in the
\includegraphics command.  (Images that start as png are unchanged.)  
2) Images are automatically formatted to 6.5in wide, maintaining aspect
ratio.

What are the advantages?

1) Works anywhere PIL is available / eliminates dependency on pngtopnm
2) Because PIL supports so many formats, the subclass now supports a
boatload of image formats instead of just png.
3) Resulting image quality is better, although it can still improve more. 

4) Images don't flow outside the margins

Notes on Image Quality: I achieved the best quality by converting my
.dia's to .eps and including .eps directly.  Since these are vector
graphics, the quality is perfect, to the resolution of the pdf itself; but
when I did it this way, the fonts in the diagrams were mapped to different
fonts that overflowed their boxes and made the diagram unreadable.  Next
best was to convert dia=>eps=>png (using ImageMagick's convert utility in
the shell) then including the png.  This could improve if I could figure
out how to make includegraphics use a sensible DPI when it does its
conversion to dvi.   Worst was dia=>eps=>png=>eps, for reasons that are
not obvious to me.  Both png and eps are non-lossy, so the last two
conversion paths should have equal quality, but they don't.

What isn't right yet?

1) visitNode_img() always uses png as the target extension, and 
2) convert_any() assumes this.  convert_any() will fail for certain target
image formats because the mode ("""im.convert('RGB')...""") has to match
the target format.  This can be fixed with a simple exception handler
(TODO).
3) Images should be formatted to a width of
(pagewidth-leftmargin-rightmagin), instead of a hardcoded 6.5in (which
assumes, among other things, letter-sized paper).  I'm not latex guru
enough to make this work yet.

Other notes:
It looks like the .eps in Twisted doc isn't being generated from dia
during process-docs.  This is very easy to do in batch, even without an X
server; ask me if anyone wants to see my mklore script.

#------------
#pilhtml2latex.py
#----snip----
"""A replacement for html2latex which imports pillatex
if it exists."""
#
# Copyright (C) 2002 Fresno County Office of Education
#
# Adapted from html2latex, which is in Twisted (http://twistedmatrix.com).
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General
Public
# License as published by the Free Software Foundation.

import os
from twisted.lore import texi, docbook
import pillatex

from twisted.python import usage

class Options(usage.Options):

    optFlags = [['section', 's', 'Generate a section, not an article'],
                ['texi', 'i', 'Generate a Texinfo section'],
                ['docbook', 'c', 'Generate a Docbook section']]

    optParameters = [['dir', 'd', None, 'Directory relative to which
references'
                                        ' will be taken']]

    def parseArgs(self, *files):
        self['files'] = files

def run():
    opt = Options()
    opt.parseOptions()
    ext = ".tex"
    if opt['section']:
        klass = pillatex.SectionLatexSpitter
    elif opt['texi']:
        klass = texi.TexiSpitter
        ext = '.texinfo'
    elif opt['docbook']:
        klass = docbook.DocbookSpitter
        ext = '.xml'
    else:
        klass = pillatex.LatexSpitter
    for file in opt['files']:
        fout = open(os.path.splitext(file)[0]+ext, 'w')
        dir = opt['dir'] or os.path.dirname(file)
        spitter = klass(fout.write, dir, os.path.basename(file))
        pillatex.processFile(spitter, open(file))

if __name__ == '__main__':
  run()

#----snip----
pillatex.py
#----snip----
"""A substitute for twisted.lore.latex,
using PIL to convert instead of pngtopnm."""
#
# Copyright (C) 2002 Fresno County Office of Education
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General
Public
# License as published by the Free Software Foundation.

from twisted.lore import latex
from twisted.lore.latex import processFile
import os.path
from PIL import Image

class ImageConverter:
    def convert_any(self, src, target):
        im=Image.open(src)
        im.convert('RGB').save(target)

    convert_eps=convert_jpg=convert_jpeg=convert_bmp=convert_dib= \
                convert_ppm=convert_gif=convert_tif=convert_tiff= \
                convert_xpm=convert_xbm=convert_psd=convert_any

    def convert_png(self, src, target): pass

    def visitNode_img(self, node):
        fileName = os.path.join(self.currDir, node.getAttribute('src'))
        target, ext = os.path.splitext(fileName)
        m = getattr(self, 'convert_'+ext[1:], None)
        if not m:
            return
        target = os.path.join(self.currDir,
os.path.basename(target)+'.png')
        m(fileName, target)
        target = os.path.basename(target)
        self.writer('\\includegraphics[width=6.5in]{%s}\n' % target)


class LatexSpitter(ImageConverter, latex.LatexSpitter):
    pass

class SectionLatexSpitter(ImageConverter, latex.SectionLatexSpitter):
    pass


__________________________________________________
Do you Yahoo!?
U2 on LAUNCH - Exclusive greatest hits videos
http://launch.yahoo.com/u2



From naesten at myrealbox.com  Mon Nov 11 17:18:56 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Mon, 11 Nov 2002 17:18:56 -0500
Subject: [Twisted-Python] Fixes for tapconvert
Message-ID: <3DD02CD0.1010503@myrealbox.com>

This cleans up --typein=guess,  and fixes problems with a couple of the
Loader classes which I noticed while testing my other changes.
--SamB
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tapconvert.patch
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20021111/5b5ba84d/attachment.txt 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3431 bytes
Desc: S/MIME Cryptographic Signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021111/5b5ba84d/attachment.bin 

From waterbug at beeblebrox.gsfc.nasa.gov  Tue Nov 12 12:06:07 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Tue, 12 Nov 2002 12:06:07 -0500
Subject: [Twisted-Python] pickle apparently doesn't go with curry ...
Message-ID: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov>

Twisted Gurus:

I'm using the "curry" recipe from the Python Cookbook 
(pretty much verbatim), and it appears to work fine in my 
code, but cPickle isn't happy about it:

Traceback (most recent call last):
  File "/usr/local/bin/mktap", line 31, in ?
    run()
  File "/usr/local/lib/python2.2/site-packages/twisted/scripts/mktap.py", line 180, in run
    a.save()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 508, in save
    dumpFunc(self, f)
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 490, in dumpFunc
    _dump(obj, file, 1)
cPickle.PicklingError: Can't pickle <function curried_function at 0x83a2aa4>: it's not found as __main__.curried_function

------------------

Here is the recipe I'm using:

def curry(*args, **create_time_kwds):
    """
    Currying is a way to bind arguments with a function and
    wait for the rest of the arguments to show up later.  You
    "curry in" the first few parameters to a function, giving you
    a function that takes subsequent parameters as input and
    calls the original with all of those parameters.

    Nick Perkins' latest version of curry-by-closure (from
    c.l.p, for the record) It has curry-from-left (for positional
    args) and call-time-dominates (for named args) semantics
    """
    func = args[0]
    create_time_args = args[1:]
    def curried_function(*call_time_args, **call_time_kwds):
        args = create_time_args + call_time_args
        kwds = create_time_kwds.copy()
        kwds.update(call_time_kwds)
        return func(*args, **kwds)
    return curried_function

----------------------

Any ideas?

Cheers,
-- Steve.



From pobrien at orbtech.com  Tue Nov 12 12:24:37 2002
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Tue, 12 Nov 2002 11:24:37 -0600
Subject: [Twisted-Python] pickle apparently doesn't go with curry ...
In-Reply-To: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov>
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov>
Message-ID: <200211121124.37171.pobrien@orbtech.com>

On Tuesday 12 November 2002 11:06 am, Steve Waterbury wrote:
> Twisted Gurus:

Not yet, but I'd like to be one day. ;-)

> I'm using the "curry" recipe from the Python Cookbook
> (pretty much verbatim), and it appears to work fine in my
> code, but cPickle isn't happy about it:

The short answer is that Python doesn't currently pickle nested class 
and fucntion objects, i.e. those not defined at the top level of the 
module. This may change in the future, and there was just some 
discussion about this on the python-dev list last week (including some 
clever hacks that might work for you as well) Start here and browse the 
archive by thread:

http://mail.python.org/pipermail/python-dev/2002-November/029874.html

You might also find some useful information in an article I just wrote 
about Python's pickling capabilities:

http://www.ibm.com/developerworks/library/l-pypers.html

Hope that helps.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From bob at redivi.com  Tue Nov 12 16:03:24 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 12 Nov 2002 16:03:24 -0500
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <200211121124.37171.pobrien@orbtech.com>
Message-ID: <2E83F78D-F682-11D6-B9F1-0003938210D6@redivi.com>

I have a stupid device that's talking to a Twisted web server that 
demands HTTP headers to be capitalized Like-This, however Twisted only 
capitalizes the first character..

On line 567 in twisted/protocol/http.py (Twisted 1.0.0) what we have 
right now is:
l.append("%s: %s\r\n" % (name.capitalize(), value)) # content-length 
turns into Content-length

But what my stupid device wants to see is:
l.append("%s: %s\r\n" % ('-'.join(map(lambda 
n:n.capitalize(),name.split('-'))), value)) # content-length turns into 
Content-Length

Any chance someone could patch that up?

-bob




From jepler at unpythonic.net  Tue Nov 12 16:19:20 2002
From: jepler at unpythonic.net (Jeff Epler)
Date: Tue, 12 Nov 2002 15:19:20 -0600
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <2E83F78D-F682-11D6-B9F1-0003938210D6@redivi.com>
References: <200211121124.37171.pobrien@orbtech.com> <2E83F78D-F682-11D6-B9F1-0003938210D6@redivi.com>
Message-ID: <20021112211919.GC1756@unpythonic.net>

On Tue, Nov 12, 2002 at 04:03:24PM -0500, Bob Ippolito wrote:
> I have a stupid device that's talking to a Twisted web server that 
> demands HTTP headers to be capitalized Like-This, however Twisted only 
> capitalizes the first character..
[...] 
> Any chance someone could patch that up?

Doubtful.

http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
    "Field names are case-insensitive"

Jeff



From carlos at eberhardt.net  Tue Nov 12 16:16:48 2002
From: carlos at eberhardt.net (Carlos Eberhardt)
Date: Tue, 12 Nov 2002 15:16:48 -0600
Subject: [Twisted-Python] stupid case sensitive web clients
References: <2E83F78D-F682-11D6-B9F1-0003938210D6@redivi.com>
Message-ID: <3DD16FC0.1020001@eberhardt.net>

Bob Ippolito wrote:

> But what my stupid device wants to see is:
> l.append("%s: %s\r\n" % ('-'.join(map(lambda 
> n:n.capitalize(),name.split('-'))), value)) # content-length turns 
> into Content-Length
>
Unrelated yet related, string.capwords() would perhaps be cleaner.

string.capwords(value, '-')

lurkingly,
carlos




From bob at redivi.com  Tue Nov 12 16:40:00 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 12 Nov 2002 16:40:00 -0500
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <20021112211919.GC1756@unpythonic.net>
Message-ID: <4BC5C998-F687-11D6-B9F1-0003938210D6@redivi.com>

On Tuesday, Nov 12, 2002, at 16:19 America/New_York, Jeff Epler wrote:

> On Tue, Nov 12, 2002 at 04:03:24PM -0500, Bob Ippolito wrote:
>> I have a stupid device that's talking to a Twisted web server that
>> demands HTTP headers to be capitalized Like-This, however Twisted only
>> capitalizes the first character..
> [...]
>> Any chance someone could patch that up?
>
> Doubtful.
>
> http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
>     "Field names are case-insensitive"

Well, it's already doing capitalize(), might as well capitalize it the 
way that everything else does.  It certainly wouldn't break anything to 
send it with string.capwords(name, '-') instead of name.capitalize().

-bob




From mwh at python.net  Tue Nov 12 14:20:12 2002
From: mwh at python.net (Michael Hudson)
Date: 12 Nov 2002 19:20:12 +0000
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com>
Message-ID: <2mpttasihf.fsf@starship.python.net>

"Patrick K. O'Brien" <pobrien at orbtech.com> writes:

> On Tuesday 12 November 2002 11:06 am, Steve Waterbury wrote:
> > Twisted Gurus:
> 
> Not yet, but I'd like to be one day. ;-)
> 
> > I'm using the "curry" recipe from the Python Cookbook
> > (pretty much verbatim), and it appears to work fine in my
> > code, but cPickle isn't happy about it:
> 
> The short answer is that Python doesn't currently pickle nested class 
> and fucntion objects, i.e. those not defined at the top level of the 
> module.

Unless something's changed since I last looked, you can't pickle
functions at all.

And this is a particularly hopeless case.  How did you expect it to
work at all?  Think like an implementer!

Cheers,
M.

-- 
  Darned confusing, unless you have that magic ingredient coffee, of
  which I can pay you Tuesday for a couple pounds of extra-special
  grind today.                           -- John Mitchell, 11 Jan 1999





From jml at mumak.net  Wed Nov 13 00:00:22 2002
From: jml at mumak.net (Jonathan M. Lange)
Date: Wed, 13 Nov 2002 16:00:22 +1100
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
In-Reply-To: <2mpttasihf.fsf@starship.python.net>
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com> <2mpttasihf.fsf@starship.python.net>
Message-ID: <20021113050022.GJ15455@grond.mumak.net>

On Tue, Nov 12, 2002 at 07:20:12PM +0000, Michael Hudson wrote:
> "Patrick K. O'Brien" <pobrien at orbtech.com> writes:
> 
> > On Tuesday 12 November 2002 11:06 am, Steve Waterbury wrote:
> > > Twisted Gurus:
> > 
> > Not yet, but I'd like to be one day. ;-)
> > 
> > > I'm using the "curry" recipe from the Python Cookbook
> > > (pretty much verbatim), and it appears to work fine in my
> > > code, but cPickle isn't happy about it:
> > 
> > The short answer is that Python doesn't currently pickle nested class 
> > and fucntion objects, i.e. those not defined at the top level of the 
> > module.
> 
> Unless something's changed since I last looked, you can't pickle
> functions at all.
> 

>>> def foo():
...   pass
...
>>> import cPickle
>>> cPickle.dump(foo, open('testpickle', 'w'))
>>> bar = cPickle.load(open('testpickle'))

I'd imagine this would work in most versions of python, given that
people have been pickling objects for countless generations.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021113/7718f2cd/attachment.pgp 

From glyph at twistedmatrix.com  Tue Nov 12 23:53:31 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 12 Nov 2002 22:53:31 -0600 (CST)
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <4BC5C998-F687-11D6-B9F1-0003938210D6@redivi.com>
References: <20021112211919.GC1756@unpythonic.net>
	<4BC5C998-F687-11D6-B9F1-0003938210D6@redivi.com>
Message-ID: <20021112.225331.93033623.glyph@twistedmatrix.com>

On Tue, 12 Nov 2002 16:40:00 -0500, Bob Ippolito <bob at redivi.com> wrote:
> Well, it's already doing capitalize(), might as well capitalize it the 
> way that everything else does.  It certainly wouldn't break anything to 
> send it with string.capwords(name, '-') instead of name.capitalize().

If I recall correctly, it's doing capitalize() because it was *originally* just
sending the headers lowercase, and somebody else had a broken device and/or
script that was expecting headers to be formatted exactly as they are now (in
particular, Cache-control).

If people are really encountering broken devices like this on a regular basis
(and they seem to be) perhaps it would be best to make the header-formatting
code by default do all-lowercase, but be easily pluggable?  This would have the
advantage of eliminating a bunch of unnecessary string allocations during HTTP
request processing.  Another option would be to have the headers decided on a
case-by-case basis, by looking up in a hashtable.  This would let us have a
little popularity contest to determine how existing servers send their
"case-insensitive" headers and record each decision...

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021112/8e87a2fd/attachment.pgp 

From glyph at twistedmatrix.com  Wed Nov 13 00:13:41 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 12 Nov 2002 23:13:41 -0600 (CST)
Subject: [Twisted-Python] pickle apparently doesn't go with curry ...
In-Reply-To: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov>
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021112.231341.59661246.glyph@twistedmatrix.com>


On Tue, 12 Nov 2002 12:06:07 -0500, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> Any ideas?

Well, others have already told you why this doesn't work :-) but if I may
suggest something...

No offense to the very bright folks who brought us the Python Cookbook, because
I find much of it very valuable, but some of their recepies are overly
complicated with bizarre side effects that are really not obvious until you've
been using them for a while.  Persistence is a particularly dark corner, both
with pickle and without.  Two of my least favorite recipies in this regard are
"Borg" and "curry".  While interesting from a technical perspective on Python's
expressiveness, they're rarely expressing what you want :).  For example, to
translate the curry example you gave to a slightly-more-verbose but
much-more-straightforward python idiom:

class curry:
    def __init__(self, func, *create_time_args, **create_time_kwds):
        self.func = func
        self.create_time_args = create_time_args
        self.create_time_kwds = create_time_kwds
    def __call__(self, *call_time_args, **call_time_kwds):
        args = self.create_time_args + call_time_args
        kwds = self.create_time_kwds.copy()
        kwds.update(call_time_kwds)
        return self.func(*args, **kwds)

The cost of a much more straightforward interaction with other Python tools --
not just for persistence, but for example, for debugging -- comes to exactly 1
additional line of code.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021112/22948cee/attachment.pgp 

From twisted_low at contact.com.my  Wed Nov 13 04:12:12 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Wed, 13 Nov 2002 17:12:12 +0800
Subject: [Twisted-Python] xmlrpc
Message-ID: <200211131712.AA345833972@contact.com.my>

I am trying the examples in www.xmlrpc.com with twisted matrix but I have hit a wall I hope that somebody can give me a hand.

I am trying to call the method from my xml ...

My xml code :

<?xml version="1.0"?>
<methodCall>
   <methodName>examples.tryone.Echoer.echo_something</methodName>
   <params>
      <param>
         <value>Name</value>
         </param>
      </params>
   </methodCall>


My xmlrpc server code :

#!c:\python22\python.exe
from twisted.web import xmlrpc
from twisted.internet import defer
import xmlrpclib

class Echoer(xmlrpc.XMLRPC):
    def echo_something(self,name):
      return name
      


def main():
    from twisted.internet.app import Application
    from twisted.web import server
    app = Application("xmlrpc")
    r = Echoer()
    app.listenTCP(7080, server.Site(r))
    app.run(0)


if __name__ == '__main__':
    main()

The error I get :

web.Server Traceback xml.parsers.expat.ExpatError: no element found: line 1, column 0 

I a newbie at this so please forgive me if what i am doing is like really stupid or i am asking a dumb question. Thanks



From twisted_low at contact.com.my  Wed Nov 13 04:13:49 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Wed, 13 Nov 2002 17:13:49 +0800
Subject: [Twisted-Python] xmlrpc
Message-ID: <200211131713.AA276038066@contact.com.my>

I am trying the examples in www.xmlrpc.com with twisted matrix but I have hit a wall I hope that somebody can give me a hand.

I am trying to call the method from my xml ...

My xml code :

<?xml version="1.0"?>
<methodCall>
   <methodName>examples.tryone.Echoer.echo_something</methodName>
   <params>
      <param>
         <value>Name</value>
         </param>
      </params>
   </methodCall>


My xmlrpc server code :

#!c:\python22\python.exe
from twisted.web import xmlrpc
from twisted.internet import defer
import xmlrpclib

class Echoer(xmlrpc.XMLRPC):
    def echo_something(self,name):
      return name
      


def main():
    from twisted.internet.app import Application
    from twisted.web import server
    app = Application("xmlrpc")
    r = Echoer()
    app.listenTCP(7080, server.Site(r))
    app.run(0)


if __name__ == '__main__':
    main()

The error I get :

web.Server Traceback xml.parsers.expat.ExpatError: no element found: line 1, column 0 

I a newbie at this so please forgive me if what i am doing is like really stupid or i am asking a dumb question. Thanks



From andrew-twisted at puzzling.org  Wed Nov 13 05:08:31 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 13 Nov 2002 21:08:31 +1100
Subject: [Twisted-Python] xmlrpc
In-Reply-To: <200211131712.AA345833972@contact.com.my>
References: <200211131712.AA345833972@contact.com.my>
Message-ID: <20021113100831.GA635@frobozz.local>

On Wed, Nov 13, 2002 at 05:12:12PM +0800, lals;dfjsd wrote:
> I am trying the examples in www.xmlrpc.com with twisted matrix but I have
> hit a wall I hope that somebody can give me a hand.
> 
[..snip..]
>
> My xmlrpc server code :
> 
> #!c:\python22\python.exe
> from twisted.web import xmlrpc
> from twisted.internet import defer
> import xmlrpclib
> 
> class Echoer(xmlrpc.XMLRPC):
>     def echo_something(self,name):
          ^^^^
          Shouldn't this be "xmlrpc_something"?

> The error I get :
> 
> web.Server Traceback xml.parsers.expat.ExpatError: no element found: line 1, column 0 

Hmm.  That looks like the xmlrpc call you are sending is somehow broken, but
I don't know enough about xmlrpc to say if that's the case.

> I a newbie at this so please forgive me if what i am doing is like really
> stupid or i am asking a dumb question. Thanks

Have you looked at doc/examples/xmlrpc.py in the Twisted distribution?  It
includes a simple server example, and in the comments describes how to
connect to it using python2.2's xmlrpclib client.

-Andrew.




From waterbug at beeblebrox.gsfc.nasa.gov  Wed Nov 13 09:57:29 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 13 Nov 2002 09:57:29 -0500
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com> <2mpttasihf.fsf@starship.python.net>
Message-ID: <3DD26859.920FDE58@beeblebrox.gsfc.nasa.gov>

Michael Hudson wrote:
> 
> "Patrick K. O'Brien" <pobrien at orbtech.com> writes:
> 
> > On Tuesday 12 November 2002 11:06 am, Steve Waterbury wrote:
> > > Twisted Gurus:
> >
> > Not yet, but I'd like to be one day. ;-)
> >
> > > I'm using the "curry" recipe from the Python Cookbook
> > > (pretty much verbatim), and it appears to work fine in my
> > > code, but cPickle isn't happy about it:
> >
> > The short answer is that Python doesn't currently pickle nested class
> > and fucntion objects, i.e. those not defined at the top level of the
> > module.
> 
> Unless something's changed since I last looked, you can't pickle
> functions at all.
> 
> And this is a particularly hopeless case.  How did you expect it to
> work at all?  Think like an implementer!

Gee, thanks for the encouragement ... I got it to work, and now 
I'm not gonna tell you how ... nyah nyah!  :^)

Cheers,
-- Steve.



From pobrien at orbtech.com  Wed Nov 13 10:43:08 2002
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Wed, 13 Nov 2002 09:43:08 -0600
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
In-Reply-To: <2mpttasihf.fsf@starship.python.net>
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com> <2mpttasihf.fsf@starship.python.net>
Message-ID: <200211130943.08069.pobrien@orbtech.com>

On Tuesday 12 November 2002 01:20 pm, Michael Hudson wrote:
> "Patrick K. O'Brien" <pobrien at orbtech.com> writes:
> > The short answer is that Python doesn't currently pickle nested
> > class and fucntion objects, i.e. those not defined at the top level
> > of the module.
>
> Unless something's changed since I last looked, you can't pickle
> functions at all.

Sure you can:

>>> import pickle
>>> pickle.dumps
<function dumps at 0x85f22cc>
>>> p = pickle.dumps(pickle.dumps)
>>> p
'cpickle\ndumps\np0\n.'
>>> dir
<built-in function dir>
>>> p = pickle.dumps(dir)
>>> p
'c__builtin__\ndir\np0\n.'
>>> 

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From mwh at python.net  Wed Nov 13 05:50:50 2002
From: mwh at python.net (Michael Hudson)
Date: 13 Nov 2002 10:50:50 +0000
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com> <2mpttasihf.fsf@starship.python.net> <20021113050022.GJ15455@grond.mumak.net>
Message-ID: <2mbs4trbed.fsf@starship.python.net>

jml at mumak.net (Jonathan M. Lange) writes:

> >>> def foo():
> =2E..   pass
> =2E..
> >>> import cPickle
> >>> cPickle.dump(foo, open('testpickle', 'w'))
> >>> bar =3D cPickle.load(open('testpickle'))
> 
> I'd imagine this would work in most versions of python, given that
> people have been pickling objects for countless generations.

Oops, my mistake.  But note that whats been pickled is a reference to
__main__.foo, not the function object itself:

$ python2
Python 2.2.1 (#1, Apr  9 2002, 13:10:27) 
[GCC 2.96 20000731 (Red Hat Linux 7.1 2.96-98)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> def foo():
...  pass
... 
>>> import pickle
>>> pickle.dump(foo, open("/tmp/t", "w"))
>>> 
$ python2
Python 2.2.1 (#1, Apr  9 2002, 13:10:27) 
[GCC 2.96 20000731 (Red Hat Linux 7.1 2.96-98)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import pickle
>>> foo = 1
>>> pickle.load(open("/tmp/t"))
1
>>> 

so 

def f():
    def g():
        return 1
    return g

pickle.dump(f(), ...)

still isn't going to work... (without fiddling).

Cheers,
M.





From pobrien at orbtech.com  Wed Nov 13 10:51:38 2002
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Wed, 13 Nov 2002 09:51:38 -0600
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
In-Reply-To: <2mbs4trbed.fsf@starship.python.net>
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <20021113050022.GJ15455@grond.mumak.net> <2mbs4trbed.fsf@starship.python.net>
Message-ID: <200211130951.38353.pobrien@orbtech.com>

On Wednesday 13 November 2002 04:50 am, Michael Hudson wrote:
> jml at mumak.net (Jonathan M. Lange) writes:
> > >>> def foo():
> >
> > =2E..   pass
> > =2E..
> >
> > >>> import cPickle
> > >>> cPickle.dump(foo, open('testpickle', 'w'))
> > >>> bar =3D cPickle.load(open('testpickle'))
> >
> > I'd imagine this would work in most versions of python, given that
> > people have been pickling objects for countless generations.
>
> Oops, my mistake.  But note that whats been pickled is a reference to
> __main__.foo, not the function object itself:

That's true about all code-like objects. The code itself doesn't get 
pickled, only the state. The code is retrieved by the unpickler via the 
references to the location of the code - the package name, module name, 
class name, function name, etc.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From typo at soniq.net  Wed Nov 13 11:30:04 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 13 Nov 2002 17:30:04 +0100
Subject: [Twisted-Python] missing woven patch
Message-ID: <20021113163004.GA19218@soniq.net>

donovan,

the patch you mailed me while twistedmatrix.com was lagging
still hasn't made it's way into cvs. please apply:

diff -u -r1.36 view.py
--- view.py     31 Oct 2002 03:29:08 -0000      1.36
+++ view.py     13 Nov 2002 16:29:45 -0000
@@ -296,6 +296,11 @@
                 model = self.getTopOfModelStack()
             if not view or not isinstance(view, widgets.Widget):
                 view = widgets.DefaultWidget(model)
+
+            view.modelStack = self.modelStack[:]
+            view.viewStack = self.viewStack[:]
+            view.controllerStack = self.controllerStack[:]
+
             if not controller:
                 controller = input.DefaultHandler(model)
             controller.parent = self.controllerStack[0]




From mwh at python.net  Wed Nov 13 11:54:55 2002
From: mwh at python.net (Michael Hudson)
Date: 13 Nov 2002 16:54:55 +0000
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com> <2mpttasihf.fsf@starship.python.net> <3DD26859.920FDE58@beeblebrox.gsfc.nasa.gov>
Message-ID: <2mn0odjtpc.fsf@starship.python.net>

Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> writes:

> Michael Hudson wrote:
> > 
> > And this is a particularly hopeless case.  How did you expect it to
> > work at all?  Think like an implementer!
> 
> Gee, thanks for the encouragement ... I got it to work, and now 
> I'm not gonna tell you how ... nyah nyah!  :^)

Sorry, I wasn't *trying* to be offensive.  But if one understands how
pickling works, one knows not to try things like this...

Cheers,
M.

-- 
  If you don't use emacs, you're a pathetic, mewling, masochistic
  weakling and I can't be bothered to convert you.    -- Ron Echeverri





From typo at soniq.net  Wed Nov 13 14:35:06 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 13 Nov 2002 20:35:06 +0100
Subject: [Twisted-Python] web.static patch waiting for commit (before 1.0.1)
Message-ID: <20021113193506.GA17350@soniq.net>

the patch i submitted for pre-1.0 because to fix query_string's for
index.rpy's (see list archive), hasn't been commited nor rejected so far.

testcase is: http://www.twistedmatrix.com/, repeatedly adding ?bla=foo strings
and wondering about the redirect that discards the query_string.

anyone care to look at this?:

diff -u -r1.74 static.py
--- static.py   12 Nov 2002 13:00:06 -0000      1.74
+++ static.py   13 Nov 2002 19:31:41 -0000
@@ -267,10 +267,12 @@
             # If someone is looking for children with a PathReferenceContext,
             # the request won't have a prepath, and we shouldn't do this kind
             # of mangling anyway because it has already been done.
-            if hasattr(request, 'postpath') and not request.postpath and request.uri[-1] != '/':
+            if hasattr(request, 'postpath') and not request.postpath and \
+                        string.split(request.uri,'?')[0][-1] != '/':
                 return Redirect(request)
             if os.path.exists(childPath):
-                if hasattr(request, 'postpath') and not request.postpath and not self.getIndex(request):
+                if hasattr(request, 'postpath') and not request.postpath and \
+                                                not self.getIndex(request):
                     return widgets.WidgetPage(DirectoryListing(self.path))

         ##



From typo at soniq.net  Wed Nov 13 14:49:35 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 13 Nov 2002 20:49:35 +0100
Subject: [Twisted-Python] Re: missing woven patch
In-Reply-To: <20021113163004.GA19218@soniq.net>
References: <20021113163004.GA19218@soniq.net>
Message-ID: <20021113194935.GA1143@soniq.net>

On Wed, Nov 13, 2002 at 05:30:04PM +0100, Paul Boehm wrote:
> the patch you mailed me while twistedmatrix.com was lagging
> still hasn't made it's way into cvs. please apply:

stupid typo! sticky tag!

no wonder i didn't get the update.

sorry,
  paul



From smurf at noris.de  Wed Nov 13 15:19:59 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Wed, 13 Nov 2002 21:19:59 +0100
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021113193506.GA17350@soniq.net>; from typo@soniq.net on Wed, Nov 13, 2002 at 08:35:06PM +0100
References: <20021113193506.GA17350@soniq.net>
Message-ID: <20021113211959.T18881@noris.de>

Hi,

Nobody seems to have used twisted.python.threadable.ThreadAttr recently..:

--- /usr/lib/python2.2/site-packages/twisted/python/threadable.py	2002-09-23 05:30:46.000000000 +0200
+++ twisted/python/threadable.py	2002-11-13 21:15:46.000000000 +0100
@@ -297,7 +297,7 @@
         return getattr(self.__get(), key)
 
     def __setattr__(self, key, val):
-        return setattr(self.__get(), key)
+        return setattr(self.__get(), key, val)
 
     def __delattr__(self, key):
         return delattr(self.__get(), key)

Disclaimer: I found this by looking at the code -- but I didn't test it
either.  :-/

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/



From glyph at twistedmatrix.com  Wed Nov 13 15:27:43 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 13 Nov 2002 14:27:43 -0600 (CST)
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021113211959.T18881@noris.de>
References: <20021113193506.GA17350@soniq.net>
	<20021113211959.T18881@noris.de>
Message-ID: <20021113.142743.66163933.glyph@twistedmatrix.com>

On Wed, 13 Nov 2002 21:19:59 +0100, "Matthias Urlichs" <smurf at noris.de> wrote:
> Nobody seems to have used twisted.python.threadable.ThreadAttr recently..:

Wow.  If it's _that_ rarely used, maybe the right thing to do is just to trash
it.  Would this code be useful to you if it worked?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021113/07ced8e7/attachment.pgp 

From smurf at noris.de  Wed Nov 13 16:19:34 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Wed, 13 Nov 2002 22:19:34 +0100
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021113.142743.66163933.glyph@twistedmatrix.com>; from glyph@twistedmatrix.com on Wed, Nov 13, 2002 at 02:27:43PM -0600
References: <20021113193506.GA17350@soniq.net> <20021113211959.T18881@noris.de> <20021113.142743.66163933.glyph@twistedmatrix.com>
Message-ID: <20021113221934.U18881@noris.de>

Hi,

Glyph Lefkowitz:
> On Wed, 13 Nov 2002 21:19:59 +0100, "Matthias Urlichs" <smurf at noris.de> wrote:
> > Nobody seems to have used twisted.python.threadable.ThreadAttr recently..:
> 
> Wow.  If it's _that_ rarely used, maybe the right thing to do is just to trash
> it.  Would this code be useful to you if it worked?
> 
Personally, I woudn't need it. IMHO: if you use threads in Twisted, you do
it via the thread pool. That doesn't mesh at all with ThreadAttr. State is
usually carried in objects or procedure arguments, which don't need global
storage anyway.


I find myself more in immediate need of a queueing mechanism; the
quick-and-dirty solution seems to be to fork off two threads and to use a
bounded Python Queue. However, the continuous switching between the reader
(which blocks on the queue, therefore needs to be in its own thread) and
Twisted's main thread (which writes to the process-or-whatever that's
going to eventually consume the data) seems rather sub-optimal for
performance.  :-/

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021113/639e529a/attachment.pgp 

From twisted at itamarst.org  Wed Nov 13 17:04:13 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Nov 2002 17:04:13 -0500
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021113221934.U18881@noris.de>
References: <20021113193506.GA17350@soniq.net>
	<20021113211959.T18881@noris.de>
	<20021113.142743.66163933.glyph@twistedmatrix.com>
	<20021113221934.U18881@noris.de>
Message-ID: <20021113170413.0cf6079f.twisted@itamarst.org>

On Wed, 13 Nov 2002 22:19:34 +0100
"Matthias Urlichs" <smurf at noris.de> wrote:

> I find myself more in immediate need of a queueing mechanism; the
> quick-and-dirty solution seems to be to fork off two threads and to
> use a bounded Python Queue. However, the continuous switching between
> the reader(which blocks on the queue, therefore needs to be in its own
> thread) and Twisted's main thread (which writes to the
> process-or-whatever that's going to eventually consume the data) seems
> rather sub-optimal for performance.  :-/

I don't see why you need a thread for queueing - a simple list would do,
or a class wrapping one. Or look at transport's producer/consumer
interface if this is for a protocol. Adding to queue is appending to
list, dequeuing is getting item from beginning of list.

If, and *only* if you need threads - i.e. you are doing either blocking
operations or really long running calculations, there are some options
for you in Twisted.

We have a thread pool dispatcher that queues methods to be run in the
thread pool, that covers some the use cases. If you want to use a queue
I suggest just sticking to Python's Queue or the slighly nicer
twisted.python.timeoutqueue.

In general using threads in Python is slow anyway do to the global
interpreter lock, which means in most cases only one thread at a time is
running anyway. That being said, Queue.Queue is rather slow in and of
itself, and can be implemented in a much faster way by using one lock,
and use mxQueue.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From lists at morpheus.demon.co.uk  Wed Nov 13 16:36:20 2002
From: lists at morpheus.demon.co.uk (Paul Moore)
Date: Wed, 13 Nov 2002 21:36:20 +0000
Subject: [Twisted-Python] tap-relative filenames?
Message-ID: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk>

I'm not even sure I know how to ask this question properly, so please
bear with me...

I'm writing an application in Twisted (a news server, serving mbox
files as read-only groups, FWIW). I'm including a simple interface to
dynamically add new files (groups). No problem, but I'd rather keep
things as relocatable as possible.

Ultimately, I'll have a tap file, which I'll use to start the
application using the twistd daemon. So what I'd like to do is store
filenames relative to the directory which contains the tap file. OK,
so I can cd to that directory, and start twistd from there. But in the
more general case, I may start the app from an arbitrary directory and
give the full path to the tap file.

So what I'm saying is, can I find the name of the tap file from within
the application code? I imagine this is non-trivial, because the code
won't always even be started from a tap file (my test rig does
reactor.listenTCP/reactor.run manually) but when it isn't then names
won't be getting persisted, so I don't care (I guess...)

Can anybody help? Does anyone even follow the question??? :-)

Thanks,
Paul

-- 
This signature intentionally left blank



From smurf at noris.de  Thu Nov 14 01:02:21 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Thu, 14 Nov 2002 07:02:21 +0100
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021113170413.0cf6079f.twisted@itamarst.org>; from twisted@itamarst.org on Wed, Nov 13, 2002 at 05:04:13PM -0500
References: <20021113193506.GA17350@soniq.net> <20021113211959.T18881@noris.de> <20021113.142743.66163933.glyph@twistedmatrix.com> <20021113221934.U18881@noris.de> <20021113170413.0cf6079f.twisted@itamarst.org>
Message-ID: <20021114070221.V18881@noris.de>

Hi,

Itamar Shtull-Trauring:
> I don't see why you need a thread for queueing - a simple list would do,
> or a class wrapping one. Or look at transport's producer/consumer
> interface if this is for a protocol. Adding to queue is appending to
> list, dequeuing is getting item from beginning of list.

Some sample code would be nice... or pointers to which modules to look at.

> If, and *only* if you need threads - i.e. you are doing either blocking
> operations or really long running calculations, there are some options
> for you in Twisted.
> 
Yes -- the source data are coming from a database (and the consumer may
have to do database look-ups too). Since the consumer can be slower and I
don't want in-core memory to grow indiscriminately, some sort of
thread-safe bounded queuing makes sense.

> We have a thread pool dispatcher that queues methods to be run in the
> thread pool, that covers some the use cases. If you want to use a queue
> I suggest just sticking to Python's Queue or the slighly nicer
> twisted.python.timeoutqueue.
> 
Unrelated nit: twisted.python.timeoutqueue lacks a pop() function with
timeout (the wait+pop combo is NOT thread safe: you might have multiple
consumers), and, frankly, the basic idea of timeout-waiting on a queue the
way this module does it is just plain ugly.

TODO: Rewrite the whole thing, using mxQueue for the actual data and
Twisted support for everything else -- I'd use a Deferred() for pulling
one item from the queue, for instance, but a "call this function 
whenever you have a new item" interface might make more sense with a
high-volume queue. (This function might then want to return a Deferred()
to indicate that it will be ready for the next item LATER.) Same for
pushing stuff into the queue. And all of that thread-safe.  ;-)

I think I'll do that, probably sometime next week, because I need it.

> In general using threads in Python is slow anyway do to the global
> interpreter lock, which means in most cases only one thread at a time is
> running anyway.

While that is certainly true, working with blocking external interfaces
more-or-less requires them.

> That being said, Queue.Queue is rather slow in and of
> itself, and can be implemented in a much faster way by using one lock,
> and use mxQueue.
> 
I'd have to reinvent all of Queue's thread-support features, though.
That might be a nice exercise, but I'll spend my time on required features
first.  ;-)

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/



From m at moshez.org  Thu Nov 14 00:00:50 2002
From: m at moshez.org (Moshe Zadka)
Date: 14 Nov 2002 05:00:50 -0000
Subject: [Twisted-Python] tap-relative filenames?
In-Reply-To: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk>
References: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk>
Message-ID: <20021114050050.6789.qmail@green.zadka.com>

On Wed, 13 Nov 2002, Paul Moore <lists at morpheus.demon.co.uk> wrote:

> Ultimately, I'll have a tap file, which I'll use to start the
> application using the twistd daemon. So what I'd like to do is store
> filenames relative to the directory which contains the tap file.

This is not a good idea -- on Debian systems, for example, tha tap
would be somewhere on /etc while the data files would be under
/var. In general, the tap should store the actual file names.
(BTW: Debian is used here as a system which adheres to the FHS religiously,
but really this is a consequence of the FHS)

This seems akin to the classic UNIX question "how do I find the name
of the executable?" to which the answer is "you don't".



From twisted at itamarst.org  Thu Nov 14 02:16:45 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 14 Nov 2002 02:16:45 -0500
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021114070221.V18881@noris.de>
References: <20021113193506.GA17350@soniq.net>
	<20021113211959.T18881@noris.de>
	<20021113.142743.66163933.glyph@twistedmatrix.com>
	<20021113221934.U18881@noris.de>
	<20021113170413.0cf6079f.twisted@itamarst.org>
	<20021114070221.V18881@noris.de>
Message-ID: <20021114021645.033e24e7.twisted@itamarst.org>

On Thu, 14 Nov 2002 07:02:21 +0100
"Matthias Urlichs" <smurf at noris.de> wrote:

> Yes -- the source data are coming from a database (and the consumer
> may have to do database look-ups too). Since the consumer can be
> slower and I don't want in-core memory to grow indiscriminately, some
> sort of thread-safe bounded queuing makes sense.

Just use Queue.Queue then?

> Unrelated nit: twisted.python.timeoutqueue lacks a pop() function with
> timeout (the wait+pop combo is NOT thread safe: you might have
> multiple consumers), and, frankly, the basic idea of timeout-waiting
> on a queue the way this module does it is just plain ugly.

It sucks, yes. I needed it though and couldn't think up a better way of
doing it.

> I'd have to reinvent all of Queue's thread-support features, though.
> That might be a nice exercise, but I'll spend my time on required
> features first.  ;-)

I have code that does this. But if you want bounded size you may as well
stick to Queue, I sped it up by removing support for this :)


-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From radix at twistedmatrix.com  Thu Nov 14 13:49:36 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 14 Nov 2002 19:49:36 +0100
Subject: [Twisted-Python] WebDAV support
Message-ID: <20021114184936.GK645@toshi>

Hey Daniel, the link to MoulDAVia on your website is broken. How's it
coming along? I'd like to check it out.

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From lists at morpheus.demon.co.uk  Thu Nov 14 15:46:21 2002
From: lists at morpheus.demon.co.uk (Paul Moore)
Date: Thu, 14 Nov 2002 20:46:21 +0000
Subject: [Twisted-Python] tap-relative filenames?
References: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk> <20021114050050.6789.qmail@green.zadka.com>
Message-ID: <n2m-g.n0obhobm.fsf@morpheus.demon.co.uk>

Moshe Zadka <m at moshez.org> writes:

> On Wed, 13 Nov 2002, Paul Moore <lists at morpheus.demon.co.uk> wrote:
>
>> Ultimately, I'll have a tap file, which I'll use to start the
>> application using the twistd daemon. So what I'd like to do is store
>> filenames relative to the directory which contains the tap file.
>
> This is not a good idea -- on Debian systems, for example, tha tap
> would be somewhere on /etc while the data files would be under
> /var. In general, the tap should store the actual file names.

On Unix, yes, quite probably. But on Windows, storing data in an
application-relative location is quite common.

On Windows, there are no standardised directories like /etc or
/var. So absolute filenames are much less usable, in general.

> This seems akin to the classic UNIX question "how do I find the name
> of the executable?" to which the answer is "you don't".

Yes, but on Windows, the answer is to use the Windows API
GetModuleFileName(). It's a cultural difference between the two
operating systems.

If there isn't a way of locating the tap file at the moment, is there
any possibility of one getting added? (I can't do so myself, I'm
nowhere near familiar enough with the internals of Twisted yet).

Paul.

-- 
This signature intentionally left blank



From smurf at noris.de  Thu Nov 14 16:16:54 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Thu, 14 Nov 2002 22:16:54 +0100
Subject: [Twisted-Python] tap-relative filenames?
In-Reply-To: <n2m-g.n0obhobm.fsf@morpheus.demon.co.uk>; from lists@morpheus.demon.co.uk on Thu, Nov 14, 2002 at 08:46:21PM +0000
References: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk> <20021114050050.6789.qmail@green.zadka.com> <n2m-g.n0obhobm.fsf@morpheus.demon.co.uk>
Message-ID: <20021114221654.O18881@noris.de>

Hi,

Paul Moore:
> On Unix, yes, quite probably. But on Windows, storing data in an
> application-relative location is quite common.
> 
On Windows, programs are not installable without an elaborate installation
program dance. Some people consider that a bug -- on Mac systems, for
instance, you drag the whole application to the hard disk, _that's_it_,
and a sensible application will _never_ write into its own program space
(it could reside on a read-only file server).

> On Windows, there are no standardised directories like /etc or
> /var. So absolute filenames are much less usable, in general.
> 
Setup stuff under Windows typically lives in that arcane thing called
"registry"...

> > This seems akin to the classic UNIX question "how do I find the name
> > of the executable?" to which the answer is "you don't".
> 
Under Linux, you readlink("/proc/self/cmd") (and check if that file exists
and has the same inode). Other OSes are not interesting.  ;-)

> If there isn't a way of locating the tap file at the moment, is there
> any possibility of one getting added?

That'd interest me too.

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/



From hbl at st-andrews.ac.uk  Fri Nov 15 06:59:54 2002
From: hbl at st-andrews.ac.uk (Hamish Lawson)
Date: Fri, 15 Nov 2002 11:59:54 +0000
Subject: [Twisted-Python] (no subject)
Message-ID: <5.2.0.9.0.20021115113151.03b28b38@spey.st-andrews.ac.uk>

Jeff Epler wrote:

>Bob Ippolito wrote:
>
> > I have a stupid device that's talking to a Twisted web server that
> > demands HTTP headers to be capitalized Like-This, however Twisted only
> > capitalizes the first character..
>[...]
> > Any chance someone could patch that up?
>
>Doubtful.
>
>http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
>     "Field names are case-insensitive"

Nevertheless the headers are almost always presented in the HTTP spec and 
other reference materials in the style 'Content-Type'. I would guess 
therefore that this style will be the one most widely adopted by those 
broken clients that expect a particular capitalisation.


Hamish Lawson





From hbl at st-andrews.ac.uk  Fri Nov 15 07:20:22 2002
From: hbl at st-andrews.ac.uk (Hamish Lawson)
Date: Fri, 15 Nov 2002 12:20:22 +0000
Subject: [Twisted-Python] stupid case sensitive web clients
Message-ID: <5.2.0.9.0.20021115121958.03ae05e0@spey.st-andrews.ac.uk>

[This time with a subject line!]

Jeff Epler wrote:

>Bob Ippolito wrote:
>
> > I have a stupid device that's talking to a Twisted web server that
> > demands HTTP headers to be capitalized Like-This, however Twisted only
> > capitalizes the first character..
>[...]
> > Any chance someone could patch that up?
>
>Doubtful.
>
>http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
>     "Field names are case-insensitive"

Nevertheless the headers are almost always presented in the HTTP spec and 
other reference materials in the style 'Content-Type'. I would guess 
therefore that this style will be the one most widely adopted by those 
broken clients that expect a particular capitalisation.


Hamish Lawson





From smurf at noris.de  Fri Nov 15 07:22:49 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Fri, 15 Nov 2002 13:22:49 +0100
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <5.2.0.9.0.20021115121958.03ae05e0@spey.st-andrews.ac.uk>; from hbl@st-andrews.ac.uk on Fri, Nov 15, 2002 at 12:20:22PM +0000
References: <5.2.0.9.0.20021115121958.03ae05e0@spey.st-andrews.ac.uk>
Message-ID: <20021115132249.X18881@noris.de>

Hi,

Hamish Lawson:
> > > I have a stupid device that's talking to a Twisted web server that
> > > demands HTTP headers to be capitalized Like-This

Ouch. What does the manufacturer of said stupid device have to say about
this?

> Nevertheless the headers are almost always presented in the HTTP spec and 
> other reference materials in the style 'Content-Type'. I would guess 
> therefore that this style will be the one most widely adopted by those 
> broken clients that expect a particular capitalisation.
> 
Personally, I'd rather send them as cOnTeNt-tYpE on principle, so that
those idiot devices / programs actually get _fixed_ sometime.    :-/

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/



From dstone at kde.org  Thu Nov 14 23:10:45 2002
From: dstone at kde.org (Daniel Stone)
Date: Fri, 15 Nov 2002 15:10:45 +1100
Subject: [Twisted-Python] WebDAV support
In-Reply-To: <20021114184936.GK645@toshi>
References: <20021114184936.GK645@toshi>
Message-ID: <20021115041045.GA14710@trinity.unimelb.edu.au>

On Thu, Nov 14, 2002 at 07:49:36PM +0100, Christopher Armstrong scrawled:
> Hey Daniel, the link to MoulDAVia on your website is broken. How's it
> coming along? I'd like to check it out.

All too slowly, I'm afraid. Busy with exams and other projects. :(

-- 
Daniel Stone 	     <daniel at raging.dropbear.id.au>             <dstone at kde.org>
Developer - http://kopete.kde.org, http://www.kde.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021115/d1b6c0b8/attachment.pgp 

From glyph at twistedmatrix.com  Fri Nov 15 12:52:32 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 15 Nov 2002 11:52:32 -0600 (CST)
Subject: [Twisted-Python] tap-relative filenames?
In-Reply-To: <n2m-g.n0obhobm.fsf@morpheus.demon.co.uk>
References: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk>
	<20021114050050.6789.qmail@green.zadka.com>
	<n2m-g.n0obhobm.fsf@morpheus.demon.co.uk>
Message-ID: <20021115.115232.98760705.glyph@twistedmatrix.com>

On Thu, 14 Nov 2002 20:46:21 +0000, Paul Moore <lists at morpheus.demon.co.uk> wrote:
> If there isn't a way of locating the tap file at the moment, is there
> any possibility of one getting added? (I can't do so myself, I'm
> nowhere near familiar enough with the internals of Twisted yet).

Yes, this is on my radar and I agree it's probably a necessity at least in some
form.  However, there is quite a bit of plumbing that does os.path.abspath or
depends on relative pathnames being relative to the run directory and not the
tap file.  We should probably add an --absolutize=true option to mktap or
something that will be the default on unix and not on win32.

Anyone want to volunteer to do this?  I sure don't have time :)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021115/f9ff5c6c/attachment.pgp 

From spam at polynode.com  Fri Nov 15 19:46:47 2002
From: spam at polynode.com (Alex)
Date: Fri, 15 Nov 2002 19:46:47 -0500
Subject: [Twisted-Python] Continuing problem with woven templateFile
Message-ID: <5.2.0.9.0.20021115193800.02117b80@coral.tufts.edu>

When using templateFile for either a View or a self-templating Widget, I am 
unable to include a directory name.  So, templateFile='tmpl-framework.html' 
works fine, but templateFile='tmpl/framework.html' generates a traceback 
that says the file doesn't exist -- even though both are in the same proper 
location on the server.

Earlier, putting in a path would result in a different error; Twisted.web 
would complain that it couldn't create '.tmpl/framework.pxp', rather than 
creating 'tmpl/.framework.pxp'.  I'm not sure if that problem has been 
fixed or if it's simply been displaced by the one above.

Either way, it's odd that template files should not be accessible anywhere 
other than a site's base document path.

--
Alex Levy
WWW: http://mesozoic.geecs.org
Tel: 617.835.0778

"Never let your sense of morals prevent you from doing what is right."
-- Salvor Hardin, Isaac Asimov's _Foundation_





From bob at redivi.com  Sat Nov 16 02:24:27 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 16 Nov 2002 02:24:27 -0500
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <20021115132249.X18881@noris.de>
Message-ID: <7038E73D-F934-11D6-A7B9-0003938210D6@redivi.com>

On Friday, Nov 15, 2002, at 07:22 America/New_York, Matthias Urlichs 
wrote:

> Hi,
>
> Hamish Lawson:
>>>> I have a stupid device that's talking to a Twisted web server that
>>>> demands HTTP headers to be capitalized Like-This
>
> Ouch. What does the manufacturer of said stupid device have to say 
> about
> this?

Nothing worthwhile, I made them rewrite their protocol entirely (from a 
bastardized nonworking SOAP-like XML based protocol to a relatively 
optimized binary protocol that makes sense), but I still have older 
devices that I need to use from time to time.  I'd like to be able to 
use them (a) without modifying my twisted install and (b) without 
writing a new protocol entirely.

-bob




From andrew-twisted at puzzling.org  Sat Nov 16 09:28:45 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 17 Nov 2002 01:28:45 +1100
Subject: [Twisted-Python] MultiServiceTestCase.testDeferredStopService failure.
Message-ID: <20021116142845.GC11301@frobozz.local>

In test_internet, MultiServiceTestCase.testDeferredStopService is failing
for me with Python 2.1.

The problem appears to be that the test assumes a particular order for the
callback results, but the object is internally holding them in a dict so
that order isn't guaranteed.

So is the test or the code buggy?  Can someone familiar with how
MultiService should work look at this?  Thanks.

-Andrew.




From radix at twistedmatrix.com  Sat Nov 16 09:42:11 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 16 Nov 2002 15:42:11 +0100
Subject: [Twisted-Python] MultiServiceTestCase.testDeferredStopService failure.
In-Reply-To: <20021116142845.GC11301@frobozz.local>
References: <20021116142845.GC11301@frobozz.local>
Message-ID: <20021116144211.GP645@toshi>

On Sun, Nov 17, 2002 at 01:28:45AM +1100, Andrew Bennetts wrote:
> In test_internet, MultiServiceTestCase.testDeferredStopService is failing
> for me with Python 2.1.
> 
> The problem appears to be that the test assumes a particular order for the
> callback results, but the object is internally holding them in a dict so
> that order isn't guaranteed.
> 
> So is the test or the code buggy?  Can someone familiar with how
> MultiService should work look at this?  Thanks.

The test was lame, and the API sucked. I fixed this just now: the
Deferred that MultiService.stopService returns now results in a dict
that looks like {serviceObject: (successOrFail, resultFromService)}.

This API was only added a week or two ago, so I didn't bother doing
any backwards compatibility.

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From twisted at itamarst.org  Sat Nov 16 23:57:43 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 16 Nov 2002 23:57:43 -0500
Subject: [Twisted-Python] New multicast support in Twisted -- please comment
Message-ID: <20021116235743.6f3ae5e9.twisted@itamarst.org>

I've just checked in multicast support into CVS.
reactor.listenMulticast/reactor.connectMulticast, otherwise it's just
like the new UDP stuff, except the transport has a new set of methods
documented in twisted.internet.interfaces.IMulticastTransport.

As with the UDP API, I've never actually used multicast. Any comments
from people who actually have used this in the past or can test this or
whatever would be very welcome.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From typo at soniq.net  Sun Nov 17 21:44:36 2002
From: typo at soniq.net (Paul Boehm)
Date: Mon, 18 Nov 2002 03:44:36 +0100
Subject: [Twisted-Python] Continuing problem with woven templateFile
In-Reply-To: <5.2.0.9.0.20021115193800.02117b80@coral.tufts.edu>
References: <5.2.0.9.0.20021115193800.02117b80@coral.tufts.edu>
Message-ID: <20021118024435.GA14972@soniq.net>

On Fri, Nov 15, 2002 at 07:46:47PM -0500, Alex wrote:
> Either way, it's odd that template files should not be accessible anywhere 
> other than a site's base document path.

try setting templateDirectory too

  paul



From bruce at cubik.org  Wed Nov 20 08:32:14 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Wed, 20 Nov 2002 06:32:14 -0700
Subject: [Twisted-Python] Woven
Message-ID: <3DDB8EDE.8040503@cubik.org>

Hey all,

Some time ago, when the major changes to Woven started to happen, Glyph 
and/or Donovan were going to write up what the planned changes were and 
where Woven was going.

I've got a fairly large amount of code using old Woven and am going to 
be faced soon with upgrading it to current Woven.

Can someone provide some sort of actual explanation of how Woven works 
today and what some of the typical usages are?  I already walked through 
the old Woven and figured it out back then, but I don't have the time to 
re-do that work.

Also, it would be nice if large architectural changes were posted about 
as changes were made so that people who aren't on the IRC channel could 
keep up with things.

Thanks,

  - Bruce




From dp at twistedmatrix.com  Wed Nov 20 12:20:56 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 20 Nov 2002 09:20:56 -0800
Subject: [Twisted-Python] Woven
In-Reply-To: <3DDB8EDE.8040503@cubik.org>
Message-ID: <6DCE0F36-FCAC-11D6-8B07-000393B3EC2C@twistedmatrix.com>

Bruce,

You bet. Things are still shifting around a little bit, in particular 
InputHandlers still don't fully work as nicely as I'd like them to. 
However, Widgets are pretty stable.

I'll spend some time this weekend writing up documentation of what the 
current usage looks like. In general, the biggest change is what 
self.model means to a Widget and InputHandler. Before, self.model was 
the main Model instance and self.submodel was a '/' delimited string 
(or list of strings, before that) that described how to get to the 
submodel. So as long as you didn't assume what self.model was (either 
in a factory or in the actual Widget/InputHandler code) you should be 
ok. Now, self.model is the actual leaf model, possibly wrapped in an 
IModel adapter.

If anything else has broken, let me know and I will write test cases 
for it to ensure that it works in the future (in particular Deferred 
support in a large number of places.)

Also, anyone that has used or tried to use InputHandlers, I would 
appreciate feedback about how things didn't work for you. In particular 
I'd like to explore how to better identify data in the request and get 
it to a particular InputHandler instance. (Right now, a node that looks 
like <input model="foo" controller="myController" /> will cause an 
InputHandler myController to look for "foo" in the request. This won't 
work because there's no name="foo" attribute on the node. Also, 
InputHandlers may want to handle more than just one piece of data from 
the request in the case of some complex object which handles an entire 
form.)

Donovan

On Wednesday, November 20, 2002, at 05:32 AM, Bruce Mitchener wrote:

> Hey all,
>
> Some time ago, when the major changes to Woven started to happen, 
> Glyph and/or Donovan were going to write up what the planned changes 
> were and where Woven was going.
>
> I've got a fairly large amount of code using old Woven and am going to 
> be faced soon with upgrading it to current Woven.
>
> Can someone provide some sort of actual explanation of how Woven works 
> today and what some of the typical usages are?  I already walked 
> through the old Woven and figured it out back then, but I don't have 
> the time to re-do that work.
>
> Also, it would be nice if large architectural changes were posted 
> about as changes were made so that people who aren't on the IRC 
> channel could keep up with things.
>
> Thanks,
>
>  - Bruce
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From ste at webaccess.mozquito.com  Wed Nov 20 15:42:08 2002
From: ste at webaccess.mozquito.com (Stefano Debenedetti)
Date: Wed, 20 Nov 2002 21:42:08 +0100
Subject: [Twisted-Python] mail and web server authentication: yet to come or already there?
Message-ID: <10106307.1037820875542.JavaMail.SYSTEM@webaccess>

Hello all, I am a new Twisted (and Python) user and first of all I would like to thank you for the great software. I love the architecture and I am sure I will learn a lot from looking at how it is implemented.

I would like to use twisted as an integrated mail/web server, in order to do some stuff like what I've done here [1]. I think I need to develop some minor but useful stuff that I will then post here so you can all see how bad my python coding is :-) for example, I am working to make the POP3 server compatible with mozilla...

One thing that is puzzling me is the twisted.cred stuff, even after reading all about it in the docs it is still not clear to my dummy self how to put it to use in order to restrict access on the twisted.web service (is HTTP basic auth implemented somewhere btw?) and also I don't understand why it is not used for access control to the twisted.mail services. Simply a matter of time or is it really meant for other types of authentication? Some more examples in this very sensitive area for people not using PB would help a lot....

One very small and probably already screwing-up-things contribution that I can do now is to the SMTP class, I include herewith my first attempt at using the diff utility:

$ diff cvs/Twisted/twisted/protocols/smtp.py cvs/Twisted/twisted/protocols/smtp.py_orig
137c137
<         to = rest[string.find(rest, "<")+1:-len(">")]
---
>         to = rest[len("TO:<"):-len(">")]

After modifying that, I was able to send mail using Blat [2].

I am unfortunately locked on a win$ platform for my development so many things are unnecessarily difficult, like getting C stuff to compile without having visual studio installed for instance. Is this dependancy on the m$ compiler anything unavoidable when doing python? Please forgive if that's a stupid question, I am new to this very cool language and had a very hard time getting SSL to work even though it was stated it would build with borland or cygwin compilers: I read somewhere in the twisted archives that some guy promised to write a walkthrough for that, did that ever happen :-) ?

Oops the very last is this one: are ALL tests supposed to work out-of-the-box (apart from those needing the crypto lib)? When I run them the UI crashes... :-(

Alright I'll stop my whining here for now and thank you very much for reading so far and providing this great framework, ciao

ste

p.s. aha here I go again: no way for me to access the IRC channel (lucky you :) as my provider seems to be blocking the identd stuff :-((( what happened to [3]?


[1] http://webaccess.mozquito.com:8080/mail/schnitz/how-to/174073468805351802.xml
[2] http://www.interlog.com/~tcharron/blat.html
[3] http://www.twistedmatrix.com/users/pb.twistd/






From andrew-twisted at puzzling.org  Wed Nov 20 19:14:30 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 21 Nov 2002 11:14:30 +1100
Subject: [Twisted-Python] mail and web server authentication: yet to come or already there?
In-Reply-To: <10106307.1037820875542.JavaMail.SYSTEM@webaccess>
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess>
Message-ID: <20021121001430.GA15059@frobozz.local>

On Wed, Nov 20, 2002 at 09:42:08PM +0100, Stefano Debenedetti wrote:
> 
> One thing that is puzzling me is the twisted.cred stuff, even after reading 
> all about it in the docs it is still not clear to my dummy self how to put 
> it to use in order to restrict access on the twisted.web service (is HTTP 
> basic auth implemented somewhere btw?) and also I don't understand why it 

I *think* twisted.web.guard has this functionality... I've heard it's going
to be overhauled at some point, it's not as nice as it could be.

> is not used for access control to the twisted.mail services. Simply a 
> matter of time or is it really meant for other types of authentication? 

I'm even less of a twisted.mail expert than a twisted.web expert, but I
think that twisted.mail's auth stuff predates twisted.cred, and we haven't
had time to migrate it to twisted.cred yet.

> Some more examples in this very sensitive area for people not using PB 
> would help a lot....

Indeed.  Our docs are slowly improving, but still quite lacking.  If you or
anyone can contribute any, that would be great!

> One very small and probably already screwing-up-things contribution that I 
> can do now is to the SMTP class, I include herewith my first attempt at 
> using the diff utility:
> 
> $ diff cvs/Twisted/twisted/protocols/smtp.py 

[We prefer "diff -u ...."; the output is much more readable.]

> cvs/Twisted/twisted/protocols/smtp.py_orig
> 137c137
> <         to = rest[string.find(rest, "<")+1:-len(">")]
> ---
> >        to = rest[len("TO:<"):-len(">")]
> After modifying that, I was able to send mail using Blat [2].

Hmm.  That looks like a dubious change to me.  Wouldn't that fail for
headers like:
    To: Mr. Example <dude at example.com>

I'm not familiar with smtp.py though...

> I am unfortunately locked on a win$ platform for my development so many 
> things are unnecessarily difficult, like getting C stuff to compile without 
> having visual studio installed for instance. Is this dependancy on the m$ 
> compiler anything unavoidable when doing python? Please forgive if that's a 

Well...

1. Twisted doesn't require any C modules to be compiled -- they're basically
   just optional speed-ups.  In fact the only C module in Twisted that works
   on Windows is cBanana; cReactor and portmap don't apply to Windows
   because it doesn't have the relevant APIs.

2. I've heard it's possible to use the mingw port of gcc to compile python
   extensions... search comp.lang.python or google for details.

> Oops the very last is this one: are ALL tests supposed to work 
> out-of-the-box (apart from those needing the crypto lib)? When I run them 
> the UI crashes... :-(

Eek.  The UI shouldn't crash, but regardless usually I use "runtests -t",
i.e. run in text mode.

Unfortunately Win32 support isn't 100% -- which tests are failing for you?

> Alright I'll stop my whining here for now and thank you very much for 
> reading so far and providing this great framework, ciao

Thanks :)

-Andrew.




From twisted at itamarst.org  Wed Nov 20 20:14:40 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Nov 2002 20:14:40 -0500
Subject: [Twisted-Python] Cog: Checkpointed Object Graph object database
Message-ID: <20021120201440.7416ae47.twisted@itamarst.org>

In my never ending quest to find a nice persistence mechanism I came
across this. It actually seems quite nice. I think I may have posted
this once before somewhere, but whatever.

http://www.randomly.org/projects/cog/index.html


-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From dave at krondo.com  Thu Nov 21 04:39:32 2002
From: dave at krondo.com (Dave Peticolas)
Date: 21 Nov 2002 01:39:32 -0800
Subject: [Twisted-Python] PATCH: adbapi.py string escaping
Message-ID: <1037871572.3454.12.camel@oneiros>

The 'safe' function in twisted.enterprise.adbapi escapes single
quotes, but I know at least Postgres and MySQL also accept backslash
escapes, which means embedded backslashes need to be escaped as well,
or they will be removed.

The attached patch escapes embedded backslashes. I haven't tested
it on databases other than Postgres or MySQL.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted.patch
Type: text/x-patch
Size: 474 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021121/86bb6775/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021121/86bb6775/attachment.pgp 

From bruce at cubik.org  Thu Nov 21 12:03:36 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 21 Nov 2002 10:03:36 -0700
Subject: [Twisted-Python] Journal changes
Message-ID: <3DDD11E8.8010306@cubik.org>

Itamar and I had discussed some changes to various parts of Journal to 
address problems that I'd found or had while working with it (fairly 
extensively).

These were:

    * Provide a way to specify the doc string when using the wrapper
      method of creating commands.
    * Separate the re-construction of the DB from the constructor
      of the Journal.  When this was joined, it wasn't possible
      to employ certain useful idioms, like doing a:
        service.journal.insertRow(...)
      within a command.  (That's because you're in the middle of
      doing this somewhere:
        self.journal = xxx.XXXJournal(...)
    * Modify how the state is stored for the journal to allow multiple
      journals.  I have a journal for a service and then a separate
      journal for each indidividual game that is in action.  Right now,
      the way that command indices and so on are stored is broken for
      that use case.

If there aren't any objections, I'd like to get these into CVS sometime 
within the next week or so.

Do others have changes that they need made to the Journal interfaces as 
well?

Itamar, did I forget about any other changes that we'd discussed?

Cheers,

  - Bruce




From dave at krondo.com  Thu Nov 21 16:35:36 2002
From: dave at krondo.com (Dave Peticolas)
Date: 21 Nov 2002 13:35:36 -0800
Subject: [Twisted-Python] gtk2reactor
Message-ID: <1037914536.1101.16.camel@oneiros>

Attached is a reactor for pygtk using Gtk 2.0.
It is basically gtkreactor with fixes for api
changes from pygtk 1->2.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: gtk2reactor.py
Type: text/x-python
Size: 6527 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021121/e2cc8764/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021121/e2cc8764/attachment.pgp 

From corydodt at yahoo.com  Thu Nov 21 16:43:16 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Thu, 21 Nov 2002 13:43:16 -0800 (PST)
Subject: [Twisted-Python] PATCH: Improved scheme handling in t/lore/latex.py
Message-ID: <20021121214316.81270.qmail@web10009.mail.yahoo.com>

This patch uses urlparse to get URLs from html documents in a more
generalizable way.

It also adds the ftp scheme, and handles mailto schemes like the rest of
them.

URLs with no scheme are handled the regular way.

____snip____
diff -u -r1.67 latex.py
--- latex.py    17 Nov 2002 18:32:56 -0000      1.67
+++ latex.py    21 Nov 2002 21:37:41 -0000
@@ -20,6 +20,8 @@
 import os, re
 from cStringIO import StringIO

+import urlparse
+
 import tree

 escapingRE = re.compile(r'([#$%&_{}^~\\])')
@@ -140,13 +142,12 @@
                     % latexEscape(os.path.basename(fileName)))

     def visitNode_a_href(self, node):
+        supported_schemes=['http', 'https', 'ftp', 'mailto']
         self.visitNodeDefault(node)
         href = node.getAttribute('href')
-        if href.startswith('http://') or href.startswith('https://'):
+        if urlparse.urlparse(href)[0] in supported_schemes:
             if node.childNodes[0].data != href:
                 self.writer('\\footnote{%s}' % latexEscape(href))
-        elif href.startswith('mailto:'):
-            pass
         else:
             if href.startswith('#'):
                 href = self.filename + href

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus ? Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From andrew-twisted at puzzling.org  Thu Nov 21 19:16:35 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 22 Nov 2002 11:16:35 +1100
Subject: [Twisted-Python] PATCH: Improved scheme handling in t/lore/latex.py
In-Reply-To: <20021121214316.81270.qmail@web10009.mail.yahoo.com>
References: <20021121214316.81270.qmail@web10009.mail.yahoo.com>
Message-ID: <20021122001635.GB17423@frobozz.local>

On Thu, Nov 21, 2002 at 01:43:16PM -0800, Cory Dodt wrote:
> 
> This patch uses urlparse to get URLs from html documents in a more
> generalizable way.
> 
> It also adds the ftp scheme, and handles mailto schemes like the rest of
> them.
> 
> URLs with no scheme are handled the regular way.

Looks good; I've checked it in.

Thanks!

-Andrew.




From ste at webaccess.mozquito.com  Thu Nov 21 19:48:25 2002
From: ste at webaccess.mozquito.com (Stefano Debenedetti)
Date: Fri, 22 Nov 2002 01:48:25 +0100
Subject: [Twisted-Python] mail and web server authentication: yet to come
 or already there?
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess> <10489587.1037833543899.JavaMail.SYSTEM@webaccess>
Message-ID: <152495.1037922054230.JavaMail.SYSTEM@webaccess>

Hello Andrew, thanks a lot for the answer, I write some more comments inline:

Andrew Bennetts wrote:
> On Wed, Nov 20, 2002 at 09:42:08PM +0100, Stefano Debenedetti wrote:
>>(is HTTP 
>>basic auth implemented somewhere btw?)  
> 
> I *think* twisted.web.guard has this functionality... I've heard it's going
> to be overhauled at some point, it's not as nice as it could be.

Unfortunately this seems to handle authentication at an application level while I need to use HTTP protocol authentication mechanisms, ok I'll have to give it a go myself.
 
> I'm even less of a twisted.mail expert than a twisted.web expert, but I
> think that twisted.mail's auth stuff predates twisted.cred, and we haven't
> had time to migrate it to twisted.cred yet.

Again, I'm going to try and do that, of course it would be easier if I had some more samples of twisted.cred I could start from :-)
 
> Hmm.  That looks like a dubious change to me.  Wouldn't that fail for
> headers like:
>     To: Mr. Example <dude at example.com>
> 
> I'm not familiar with smtp.py though...

:-) seems you are victim of a similar misunderstanding of SMTP that I had until recently: MAIL FROM and RCPT TO can only specify a mail address (in angle brackets). Headers like:
 
To: Mr. Example <dude at example.com>

go after the DATA command so they are not affected by this modification. 
Indeed the current code is already handling RFC821 correctly, as that RFC doesn't allow to put spaces after the column and before the first angle bracket but I have at least one mailer that does that and I've seen other SMTP implementations that forgive that (for example see [1]), so I'll post my patch here again:

$ diff -u smtp.py_orig smtp.py
--- smtp.py_orig        2002-11-01 05:47:10.000000000 +0100
+++ smtp.py     2002-11-22 00:04:24.000000000 +0100
@@ -122,7 +122,7 @@
         self.transport.loseConnection()

     def do_MAIL(self, rest):
-        from_ = rest[len("MAIL:<"):-len(">")]
+        from_ = rest[string.find(rest, "<")+1:-len(">")]
         self.validateFrom(self.__helo, from_, self._fromValid,
                                               self._fromInvalid)

@@ -134,7 +134,7 @@
         self.sendCode(550, 'No mail for you!')

     def do_RCPT(self, rest):
-        to = rest[len("TO:<"):-len(">")]
+        to = rest[string.find(rest, "<")+1:-len(">")]
         user = User(to, self.__helo, self, self.__from)
         self.validateTo(user, self._toValid, self._toInvalid)
 
If you think it is not correct to be forgiving towards non-RFC-compliant mailers, fine but IMHO some modifications to the existing code should be done anyway, otherwise mailers that send that space won't receive any error message and think everything went OK but twisted.mail won't be able to send the mail because as things are now it will try to send it to: "<dude at example.com" therefore failing silently (from sender's perspective).
 
> 1. Twisted doesn't require any C modules to be compiled -- they're basically
>    just optional speed-ups.  In fact the only C module in Twisted that works
>    on Windows is cBanana; cReactor and portmap don't apply to Windows
>    because it doesn't have the relevant APIs.
> 
> 2. I've heard it's possible to use the mingw port of gcc to compile python
>    extensions... search comp.lang.python or google for details.

Yes but the setup.py installer tries to compile at least cBanana and fails if that fails. I tried to use mingw but I end up with a long list of compilation errors, I am probably still doing something wrong and by googling I get to three or four fairly different explanations of how to do that so I guess it's still not as straightforward as a dummy user like me would require, anyway if it's not important I'll leave that aside for now :-)

So even at the second attempt the only way to run the Twisted installer for me was to remove the parts of setup.py that mention external modules, that makes me feel like a bad boy but I found no other solution.
 
> Eek.  The UI shouldn't crash, but regardless usually I use "runtests -t",
> i.e. run in text mode.
> 
> Unfortunately Win32 support isn't 100% -- which tests are failing for you?

Thanks for the -t tip. I found out that the testcases hang only if I use the cygwin python and that they behave differently if I run them with the -t flag, I copy here (by hand) the outputs of the graphical UI, both under cygwin and with regular python:

under cygwin the graphical UI hangs while running test #155, with 181 tests remaining, after notifying the following:

Failure: testLongFileListings (twisted.test.test_ftp.FTPPassiveClientAndServerTest)
Failure: testRetr (twisted.test.test_ftp.FTPPassiveClientAndServerTest)
Failure: testCorrectOrder (twisted.test.test_internet.callFromThreadTestCase)
Error: testCorrectOrder (twisted.test.test_internet.callFromThreadTestCase)

outside of cygwin the UI doesn't crash and manages to complete the tests, here are the results:

Failure: testRetr (twisted.test.test_ftp.FTPPassiveClientAndServerTest)
Failure: test_internet (twisted.test.test_import.AtLeastImportTestCase)
Failure: testCallLater (twisted.test.test_internet.InterfaceTestCase)
Failure: testCorrectOrder (twisted.test.test_internet.callFromThreadTestCase)
Error: testCorrectOrder (twisted.test.test_internet.callFromThreadTestCase)
Error: testOutput (twisted.test.test_iutils.UtilsTestCase)
Error: testValue (twisted.test.test_iutils.UtilsTestCase)
Failure: testNoPermission (twisted.test.test_logfile.LogFileTestCase)
Error: testEcho (twisted.test.test_process.ProcessTestCase)
Error: testProcess (twisted.test.test_process.ProcessTestCase)
Error: testStdinReader (twisted.test.test_process.Win32ProcessTestCase)
Failure: testRebuild (twisted.test.test_rebuild.RebuildTestCase)
Failure: testCannotBind (twisted.test.test_tcp.CannotBindTestCase)
Error: testReconnect (twisted.test.test_tcp.ConnectorTestCase)
Error: testUserFail (twisted.test.test_tcp.ConnectorTestCase)
Error: testUserFail (twisted.test.test_tcp.ConnectorTestCase)
Error: testFailing (twisted.test.test_tcp.LoopbackTestCase)
Error: testMessages (twisted.test.test_unix.UnixSocketTestCase)

Please find attached also the results of the tests with the -t flag, also both under cygwin and with regular python, the tests outside of cygwin gave me different results on different executions so the files inside the zip I attach are four.

Maybe I should think twice about that potato-frying job, don't wanna go back to java.... :-)

thanks, ciao
ste

[1] http://jakarta.apache.org/james/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: runtests_output.zip
Type: application/x-zip-compressed
Size: 6508 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021122/f6049e48/attachment.bin 

From andrew-twisted at puzzling.org  Thu Nov 21 20:10:04 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 22 Nov 2002 12:10:04 +1100
Subject: [Twisted-Python] mail and web server authentication: yet to come or already there?
In-Reply-To: <152495.1037922054230.JavaMail.SYSTEM@webaccess>
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess> <10489587.1037833543899.JavaMail.SYSTEM@webaccess> <152495.1037922054230.JavaMail.SYSTEM@webaccess>
Message-ID: <20021122011004.GC17423@frobozz.local>

On Fri, Nov 22, 2002 at 01:48:25AM +0100, Stefano Debenedetti wrote:
> Andrew Bennetts wrote:
> >
> >I *think* twisted.web.guard has this functionality... I've heard it's going
> >to be overhauled at some point, it's not as nice as it could be.
> 
> Unfortunately this seems to handle authentication at an application level 
> while I need to use HTTP protocol authentication mechanisms, ok I'll have 
> to give it a go myself.

Ok.  I'm pretty sure glyph or someone has some ideas on how best to do this;
it'd be good if they'd speak up :)

> >I'm even less of a twisted.mail expert than a twisted.web expert, but I
> >think that twisted.mail's auth stuff predates twisted.cred, and we haven't
> >had time to migrate it to twisted.cred yet.
> 
> Again, I'm going to try and do that, of course it would be easier if I had 
> some more samples of twisted.cred I could start from :-)

Indeed :)

> >Hmm.  That looks like a dubious change to me.  Wouldn't that fail for
> >headers like:
> >    To: Mr. Example <dude at example.com>
> >
> >I'm not familiar with smtp.py though...
> 
> :-) seems you are victim of a similar misunderstanding of SMTP that I had 
> until recently: MAIL FROM and RCPT TO can only specify a mail address (in 
> angle brackets). Headers like:

Ah, ok.  I didn't realise (although I probably should've) that you were
changing the handling of MAIL FROM and RCPT TO... in my defense, you didn't
use unidiff format for that patch, which would've made that clear :)

> Indeed the current code is already handling RFC821 correctly, as that RFC 
> doesn't allow to put spaces after the column and before the first angle 
> bracket but I have at least one mailer that does that and I've seen other 
> SMTP implementations that forgive that (for example see [1]), so I'll post 
> my patch here again:

Ah, ok.  Looks good to me, but I'm not the SMTP maintainer, so that doesn't
count for much...  in general, I believe we aim to be "liberal in what we
accept, and strict in what we send" to maximise interoperability, so this
patch seems fine.  Does Moshe or Itamar want to express an opinion here? :)

> So even at the second attempt the only way to run the Twisted installer for 
> me was to remove the parts of setup.py that mention external modules, that 
> makes me feel like a bad boy but I found no other solution.

That's fine.  It'd be nice if there was a better way to do it than hacking
setup.py, but Twisted runs perfectly well as pure python.

Note also that we distribute Win32 installers for released versions, like
1.0.0, and soon also for 1.0.1, and these include prebuilt C modules.

> >Eek.  The UI shouldn't crash, but regardless usually I use "runtests -t",
> >i.e. run in text mode.
> >
> >Unfortunately Win32 support isn't 100% -- which tests are failing for you?
> 
> Thanks for the -t tip. I found out that the testcases hang only if I use 
> the cygwin python and that they behave differently if I run them with the 
> -t flag, I copy here (by hand) the outputs of the graphical UI, both under 
> cygwin and with regular python:

Thanks for these details, I'll have a look at them in more detail later.

It might be worth attaching the full output and your test.log file to a bug
report in our Sourceforge bug tracker, so we can't forget about them :)

Regards,

-Andrew.




From ste at webaccess.mozquito.com  Thu Nov 21 20:25:34 2002
From: ste at webaccess.mozquito.com (Stefano Debenedetti)
Date: Fri, 22 Nov 2002 02:25:34 +0100
Subject: [Twisted-Python] mail and web server authentication: yet to come
 or already there?
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess> <10489587.1037833543899.JavaMail.SYSTEM@webaccess> <152495.1037922054230.JavaMail.SYSTEM@webaccess> <2471501.1037923260124.JavaMail.SYSTEM@webaccess>
Message-ID: <13633191.1037924282725.JavaMail.SYSTEM@webaccess>

Andrew Bennetts wrote:
> Note also that we distribute Win32 installers for released versions, like
> 1.0.0, and soon also for 1.0.1, and these include prebuilt C modules.

:-) if it was for the installer I would still be stuck with the echo example, to make it clear for people browsing the mail archives in order to find a solution for that, like I did, the windows installer doesn't work.
 
> It might be worth attaching the full output and your test.log file to a bug
> report in our Sourceforge bug tracker, so we can't forget about them :)

test.log? doh, I should have noticed that before! :-) I'll do that as soon as SF comes up again

thanks, ciao
ste





From iko at cd.chalmers.se  Fri Nov 22 15:24:54 2002
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Fri, 22 Nov 2002 21:24:54 +0100
Subject: SMTP patches (was Re: [Twisted-Python] mail and web server authentication: yet to come or already there?)
In-Reply-To: Message from Andrew Bennetts <andrew-twisted@puzzling.org> 
   of "Fri, 22 Nov 2002 12:10:04 +1100." <20021122011004.GC17423@frobozz.local> 
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess> <10489587.1037833543899.JavaMail.SYSTEM@webaccess> <152495.1037922054230.JavaMail.SYSTEM@webaccess> <20021122011004.GC17423@frobozz.local> 
Message-ID: <200211222024.gAMKOsE10060@haddock.cd.chalmers.se>

In a message of Fri, 22 Nov 2002 12:10:04 +1100, Andrew Bennetts writes:
>Ah, ok.  Looks good to me, but I'm not the SMTP maintainer, so that doesn't
>count for much...  in general, I believe we aim to be "liberal in what we
>accept, and strict in what we send" to maximise interoperability, so this
>patch seems fine.  Does Moshe or Itamar want to express an opinion here? :)

Not that I fit the names, but I've been working with them on improving
the SMTP server. I posted a patch a few weeks ago which solves this and
some other problems.

If anyone wants a copy of the patch, just mail me and ask for it. (It
has evolved somewhat since the last posted version, mostly in terms of
the unit tests).

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From twisted at itamarst.org  Fri Nov 22 19:58:31 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 22 Nov 2002 19:58:31 -0500
Subject: SMTP patches (was Re: [Twisted-Python] mail and web server authentication: yet to come or already there?)
In-Reply-To: <200211222024.gAMKOsE10060@haddock.cd.chalmers.se>
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess>
	<10489587.1037833543899.JavaMail.SYSTEM@webaccess>
	<152495.1037922054230.JavaMail.SYSTEM@webaccess>
	<20021122011004.GC17423@frobozz.local>
	<200211222024.gAMKOsE10060@haddock.cd.chalmers.se>
Message-ID: <20021122195831.625b440e.twisted@itamarst.org>

On Fri, 22 Nov 2002 21:24:54 +0100
Anders Hammarquist <iko at cd.chalmers.se> wrote:

> Not that I fit the names, but I've been working with them on improving
> the SMTP server. I posted a patch a few weeks ago which solves this
> and some other problems.
> 
> If anyone wants a copy of the patch, just mail me and ask for it. (It
> has evolved somewhat since the last posted version, mostly in terms of
> the unit tests).

It will be commited, either by me or someone else. Maybe even now if I
can get around it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From exarkun at meson.dyndns.org  Fri Nov 22 22:55:04 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 22 Nov 2002 22:55:04 -0500
Subject: [Twisted-Python] async hostname resolution
Message-ID: <20021123035504.GA13889@meson.dyndns.org>

  Diff for twisted/internet/base.py's resolve() function to make
it perform lookups asynchronously using the new stuff in
twisted/names/client.py.

  I removed the type argument, since it complicates implementation for other
reactors, isn't really useful in 99% of cases, and never worked when set to
anything other than A (1) anyway.  Maybe it should be deprecated first for a
while, but I doubt anyone's using it anyway so it may not matter.

  Jp

-- 
<Greatnuts> someone gave me bad advice this morning
<Greatnuts> told me to use twm
<Greatnuts> had to reformat
<Greatnuts> just to get it off
--
 10:00pm up 21 days, 8:53, 6 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
Index: base.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/base.py,v
retrieving revision 1.27
diff -u -r1.27 base.py
--- base.py	30 Oct 2002 05:56:34 -0000	1.27
+++ base.py	23 Nov 2002 03:42:03 -0000
@@ -21,8 +21,6 @@
 Maintainer: U{Itamar Shtull-Trauring<mailto:twisted at itamarst.org>}
 """
 
-import socket # needed only for sync-dns
-
 import warnings
 from time import time
 from bisect import insort
@@ -135,22 +133,13 @@
     def removeAll(self):
         raise NotImplementedError
 
-    def resolve(self, name, type=1, timeout=10):
+    def resolve(self, name, timeout=10):
         """Return a Deferred that will resolve a hostname.
         """
-        # XXX TODO: alternative resolver implementations
-        from twisted.internet.defer import Deferred
-        deferred = Deferred()
-        if type == 1:
-            try:
-                address = socket.gethostbyname(name)
-            except socket.error:
-                deferred.errback(failure.Failure(error.DNSLookupError("address not found")))
-            else:
-                deferred.callback(address)
-        else:
-            deferred.errback(failure.Failure(ValueError("type not supported")))
-        return deferred
+        from twisted.names import client
+        from twisted.protocols import dns
+        return client.lookupAddress(name).addCallback(lambda m: m[0])
+
 
     # Installation.
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021122/27b147ea/attachment.pgp 

From twisted at itamarst.org  Fri Nov 22 23:21:20 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 22 Nov 2002 23:21:20 -0500
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123035504.GA13889@meson.dyndns.org>
References: <20021123035504.GA13889@meson.dyndns.org>
Message-ID: <20021122232120.750c2eeb.twisted@itamarst.org>

On Fri, 22 Nov 2002 22:55:04 -0500
Jp Calderone <exarkun at meson.dyndns.org> wrote:

>   Diff for twisted/internet/base.py's resolve() function to make
> it perform lookups asynchronously using the new stuff in
> twisted/names/client.py.

Mmm. I don't like adding a dependency on an external package in
twisted.internet. And this doesn't let people replace the name resolver
with their own that does e.g. caching. And what if the reactor doesn't
support UDP?

I suggest instead a reactor.installResolver(r) method, where the default
one stays as is using socket module (with the DNS type fix going in
though).

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From exarkun at meson.dyndns.org  Fri Nov 22 23:59:47 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 22 Nov 2002 23:59:47 -0500
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021122232120.750c2eeb.twisted@itamarst.org>
References: <20021123035504.GA13889@meson.dyndns.org> <20021122232120.750c2eeb.twisted@itamarst.org>
Message-ID: <20021123045947.GA14369@meson.dyndns.org>

On Fri, Nov 22, 2002 at 11:21:20PM -0500, Itamar Shtull-Trauring wrote:
> On Fri, 22 Nov 2002 22:55:04 -0500
> Jp Calderone <exarkun at meson.dyndns.org> wrote:
> 
> >   Diff for twisted/internet/base.py's resolve() function to make
> > it perform lookups asynchronously using the new stuff in
> > twisted/names/client.py.
> 
> Mmm. I don't like adding a dependency on an external package in
> twisted.internet. And this doesn't let people replace the name resolver
> with their own that does e.g. caching.

  Oh, *that* was the kind of "pluggable" you and glyph were talking about. 
Okay, I'll try it that way (probably not 'til tomorrow though).

> And what if the reactor doesn't support UDP?
> 
> I suggest instead a reactor.installResolver(r) method, where the default
> one stays as is using socket module (with the DNS type fix going in
> though).
> 

  Sounds good.

  Jp

-- 
A sad spectacle.  If they be inhabited, what a scope for misery 
and folly.  If they be not inhabited, what a waste of space.
                -- Thomas Carlyle, looking at the stars
--
 11:00pm up 21 days, 9:53, 4 users, load average: 0.00, 0.03, 0.01
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021122/ccdc9215/attachment.pgp 

From smurf at noris.de  Sat Nov 23 04:17:05 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Sat, 23 Nov 2002 10:17:05 +0100
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123035504.GA13889@meson.dyndns.org>; from exarkun@meson.dyndns.org on Fri, Nov 22, 2002 at 10:55:04PM -0500
References: <20021123035504.GA13889@meson.dyndns.org>
Message-ID: <20021123101705.M18881@noris.de>

Hi,

Jp Calderone:
>   I removed the type argument, since it complicates implementation for other
> reactors, isn't really useful in 99% of cases, and never worked when set to
> anything other than A (1) anyway.  Maybe it should be deprecated first for a
> while, but I doubt anyone's using it anyway so it may not matter.
> 
What -- you never look up records other than A?

I've got a bunch of useful candidates here -- PTR, NS, SOA, CNAME, MX ...
and, guess what, I'm going to need all of them (except MX ;-) early
next year.

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021123/cecfa8c8/attachment.pgp 

From radix at twistedmatrix.com  Sat Nov 23 07:31:50 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 23 Nov 2002 13:31:50 +0100
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021122232120.750c2eeb.twisted@itamarst.org>
References: <20021123035504.GA13889@meson.dyndns.org> <20021122232120.750c2eeb.twisted@itamarst.org>
Message-ID: <20021123123150.GD2967@toshi>

On Fri, Nov 22, 2002 at 11:21:20PM -0500, Itamar Shtull-Trauring wrote:
> On Fri, 22 Nov 2002 22:55:04 -0500
> Jp Calderone <exarkun at meson.dyndns.org> wrote:
> 
> >   Diff for twisted/internet/base.py's resolve() function to make
> > it perform lookups asynchronously using the new stuff in
> > twisted/names/client.py.
> 
> Mmm. I don't like adding a dependency on an external package in
> twisted.internet. And this doesn't let people replace the name resolver
> with their own that does e.g. caching. And what if the reactor doesn't
> support UDP?
> 
> I suggest instead a reactor.installResolver(r) method, where the default
> one stays as is using socket module (with the DNS type fix going in
> though).

Why wouldn't we use the twisted.names resolver by default, if available?

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From twisted at moshez.org  Sat Nov 23 08:05:38 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 23 Nov 2002 13:05:38 -0000
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021122232120.750c2eeb.twisted@itamarst.org>
References: <20021122232120.750c2eeb.twisted@itamarst.org>, <20021123035504.GA13889@meson.dyndns.org>
Message-ID: <20021123130538.12840.qmail@green.zadka.com>

On Fri, 22 Nov 2002, Itamar Shtull-Trauring <twisted at itamarst.org> wrote:
 
> I suggest instead a reactor.installResolver(r) method, where the default
> one stays as is using socket module (with the DNS type fix going in
> though).

+1



From twisted at moshez.org  Sat Nov 23 08:06:43 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 23 Nov 2002 13:06:43 -0000
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123123150.GD2967@toshi>
References: <20021123123150.GD2967@toshi>, <20021123035504.GA13889@meson.dyndns.org> <20021122232120.750c2eeb.twisted@itamarst.org>
Message-ID: <20021123130643.12868.qmail@green.zadka.com>

On Sat, 23 Nov 2002, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> Why wouldn't we use the twisted.names resolver by default, if available?

/etc/hosts, for one.



From radix at twistedmatrix.com  Sat Nov 23 08:54:16 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 23 Nov 2002 14:54:16 +0100
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123130643.12868.qmail@green.zadka.com>
References: <20021123035504.GA13889@meson.dyndns.org> <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com>
Message-ID: <20021123135416.GE2967@toshi>

On Sat, Nov 23, 2002 at 01:06:43PM -0000, Moshe Zadka wrote:
> On Sat, 23 Nov 2002, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> 
> > Why wouldn't we use the twisted.names resolver by default, if available?
> 
> /etc/hosts, for one.

And if it supported /etc/hosts? :)

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Sat Nov 23 13:31:21 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 23 Nov 2002 12:31:21 -0600 (CST)
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123135416.GE2967@toshi>
References: <20021122232120.750c2eeb.twisted@itamarst.org>
	<20021123130643.12868.qmail@green.zadka.com>
	<20021123135416.GE2967@toshi>
Message-ID: <20021123.123121.133894024.glyph@twistedmatrix.com>

On Sat, 23 Nov 2002 14:54:16 +0100, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> And if it supported /etc/hosts? :)

/etc/hosts.  Windows registry keys pointing at DNS servers.  ZoneAlarm.
Potentially there are wacky plug-ins for the system host resolution technique
which use LDAP rather than DNS.  (I don't know if any exist, but there's
nothing to say they couldn't ^_^).  Effectively replacing the system doman name
lookup is tricky, especially on win32.

The twisted.names resolver should probably be on by default in things like web
servers where you've got to do lots of connections and name lookups in a
daemon, though, so having installResolver(x) available for application code
will be useful.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021123/42f16765/attachment.pgp 

From exarkun at meson.dyndns.org  Sat Nov 23 17:10:07 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sat, 23 Nov 2002 17:10:07 -0500
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123101705.M18881@noris.de>
References: <20021123035504.GA13889@meson.dyndns.org> <20021123101705.M18881@noris.de>
Message-ID: <20021123221007.GA15999@meson.dyndns.org>

On Sat, Nov 23, 2002 at 10:17:05AM +0100, Matthias Urlichs wrote:
> Hi,

  Hello :)

> Jp Calderone:
> >   I removed the type argument, since it complicates implementation for other
> > reactors, isn't really useful in 99% of cases, and never worked when set to
> > anything other than A (1) anyway.  Maybe it should be deprecated first for a
> > while, but I doubt anyone's using it anyway so it may not matter.
> > 
> What -- you never look up records other than A?
> 
> I've got a bunch of useful candidates here -- PTR, NS, SOA, CNAME, MX ...
> and, guess what, I'm going to need all of them (except MX ;-) early
> next year.
> 

  All record types are supported ;)  The question is just whether you should
go through the reactor interface to make queries about them, or if you
should use the "real" name lookup API instead.  Essentially..

    from twisted.internet import reactor
    from twisted.protocols import dns
    reactor.resolve('somehost.com', dns.MX).addCallback(whatever)

  vs

    from twisted.names import client
    client.lookupMailExchange('somehost.com').addCallback(whatever)

  I can't envision any circumstances where the core would want to do lookups
other than of A records, so supporting them /without/ adding a dependancy of
twisted.internet on twisted.names (something there are good reasons to want
to avoid) seems like an unecessary burden on anyone else who wants to
implement the reactor API.

  Jp

--
 5:00pm up 22 days, 3:54, 3 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021123/9ca4467c/attachment.pgp 

From twisted at moshez.org  Sun Nov 24 01:20:04 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 24 Nov 2002 06:20:04 -0000
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123135416.GE2967@toshi>
References: <20021123135416.GE2967@toshi>, <20021123035504.GA13889@meson.dyndns.org> <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com>
Message-ID: <20021124062004.24028.qmail@green.zadka.com>

On Sat, 23 Nov 2002, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> And if it supported /etc/hosts? :)

/etc/hosts is one example for "ways the local resolver can diverge from
the DNS". In fact, with the GNU libc, you can dynamically program ways
to override/complement name resolution. DJB went down the "I don't care
about local resolution, I'll use DNS.". It's ugly and discorteous to
the users :)



From exarkun at meson.dyndns.org  Sun Nov 24 05:51:48 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sun, 24 Nov 2002 05:51:48 -0500
Subject: [Twisted-Python] test_names (and others!)
Message-ID: <20021124105148.GA18550@meson.dyndns.org>

  First, the new dataReceived method of IRCClient is breaking unit tests. 
It's not obvious to me whether the method should be removed or the test
should be updated.

  Second, I've re-enabled test_names.  It still fails.  It fails due to my
inability to understand the proper way to set things up and tear them down,
though, not because t.names is broken :)  If someone who feels confident of
their pyunit skills could take a look, and give me some suggestions on how
to resolve the issue it's having, that'd be great.

  Jp

-- 
In the days when Sussman was a novice Minsky once came to him as he sat
hacking at the PDP-6. "What are you doing?" asked Minsky. "I am training a
randomly wired neural net to play Tic-Tac-Toe." "Why is the net wired
randomly?" asked Minsky. "I do not want it to have any preconceptions of how
to play." Minsky shut his eyes. "Why do you close your eyes?" Sussman asked
his teacher. "So the room will be empty." At that moment, Sussman was
enlightened.
 --
 2:08am up 22 days, 13:02, 6 users, load average: 0.08, 0.10, 0.09
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021124/1a890226/attachment.pgp 

From anthony at interlink.com.au  Sun Nov 24 23:26:25 2002
From: anthony at interlink.com.au (Anthony Baxter)
Date: Mon, 25 Nov 2002 15:26:25 +1100
Subject: [Twisted-Python] docstring, whitespace patch for twisted.internet.interfaces.py
Message-ID: <200211250426.gAP4QPc05725@localhost.localdomain>

added param lines.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/octet-stream
Size: 4789 bytes
Desc: twisted.internet.interfaces.py.diff
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021125/32a34a06/attachment.obj 

From twisted at itamarst.org  Mon Nov 25 13:06:11 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Nov 2002 13:06:11 -0500
Subject: [Twisted-Python] Various issues that need fixing
Message-ID: <20021125130611.01bd9cff.twisted@itamarst.org>

ASAP:
1. Website template needs to be updated to have same links to docs as I
did for front page (and some way to automate it so you don't need to
change on every version would be nice).

2. We need to build exe for 1.0.1. bdist_wininst on Unix is *not* good
enough, there's a hardcoded check for its running on win32.


Not as urgent:
1. Man pages for lore have wrong title, apparently.

2. Examples page links to obsolete examples, such as inetd.py

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From bruce at cubik.org  Mon Nov 25 13:27:29 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Mon, 25 Nov 2002 11:27:29 -0700
Subject: [Twisted-Python] Various issues that need fixing
References: <20021125130611.01bd9cff.twisted@itamarst.org>
Message-ID: <3DE26B91.2040309@cubik.org>

Itamar Shtull-Trauring wrote:
> 2. We need to build exe for 1.0.1. bdist_wininst on Unix is *not* good
> enough, there's a hardcoded check for its running on win32.

I can probably do this tonight, once I'm home.

A way to coordinate this that doesn't involve me joining #twisted on IRC 
would be appreciated however, so whoever is doing the release stuff 
should mail me offlist about what they want done.

  - Bruce




From twisted at itamarst.org  Mon Nov 25 13:23:05 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Nov 2002 13:23:05 -0500
Subject: [Twisted-Python] Various issues that need fixing
In-Reply-To: <3DE26B91.2040309@cubik.org>
References: <20021125130611.01bd9cff.twisted@itamarst.org>
	<3DE26B91.2040309@cubik.org>
Message-ID: <20021125132305.37fd96a4.twisted@itamarst.org>

On Mon, 25 Nov 2002 11:27:29 -0700
Bruce Mitchener <bruce at cubik.org> wrote:

> I can probably do this tonight, once I'm home.

Thanks.

> A way to coordinate this that doesn't involve me joining #twisted on
> IRC would be appreciated however, so whoever is doing the release
> stuff should mail me offlist about what they want done.

With a little bit of work we can have the admin/release-twisted script
build the .exe files. Possibly even including C extensions using mingw
cross-compiling. Hopefully we'll have some basic support for this by
next release.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From naesten at myrealbox.com  Tue Nov 26 00:32:15 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Tue, 26 Nov 2002 00:32:15 -0500
Subject: [Twisted-Python] apploader patch
Message-ID: <3DE3075F.4040304@myrealbox.com>

Heres my apploader patch, which factors the .{py,ta[psx]} loading code
out of a few of the scripts and into twisted.internet.apploader. It
could use a good deal of work, but I'm a bit busy right now so I'm
sending as-is. Note that it seems to work okay.
--SamB




From naesten at myrealbox.com  Tue Nov 26 00:39:30 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Tue, 26 Nov 2002 00:39:30 -0500
Subject: [Twisted-Python] Re: apploader patch
References: <3DE3075F.4040304@myrealbox.com>
Message-ID: <3DE30912.3010807@myrealbox.com>

okay, this time I remembered the actual patch ;-)

Samuel Bronson wrote:

>Heres my apploader patch, which factors the .{py,ta[psx]} loading code
>out of a few of the scripts and into twisted.internet.apploader. It
>could use a good deal of work, but I'm a bit busy right now so I'm
>sending as-is. Note that it seems to work okay.
>--SamB
>
>
>
>  
>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: apploader.diff
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20021126/b2cb242e/attachment.txt 

From itamar at itamarst.org  Mon Nov 25 13:03:00 2002
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Nov 2002 13:03:00 -0500
Subject: [Twisted-Python] ANN: Twisted 1.0.1
Message-ID: <20021125130300.7a99ded1.itamar@itamarst.org>

What's New in 1.0.1
===================

 - Lore, a documentation generation framework supporting HTML and LaTeX
 - Initial SOAP support
 - Rewritten UDP API
 - Multicast support
 - Better Tk integration
 - Rewritten DNS protocol, both client and server
 - Virtual hosting utilities for twisted.web
 - Large amounts of work on Woven web templating system
 - Syslog logging
 - GUI equivalents of the command-line mktap and twistd programs
 - Much improved and expanded documentation
 - Many bugfixes


-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From erik.myllymaki at starpointe.ca  Tue Nov 26 19:39:15 2002
From: erik.myllymaki at starpointe.ca (Erik Myllymaki)
Date: Tue, 26 Nov 2002 16:39:15 -0800
Subject: [Twisted-Python] broken link: http://twistedmatrix.com/page.epy/philosophy.html
Message-ID: <017001c295ad$6a316ca0$6421a8c0@topdown>

An article with the folowing summary was linked form the librenix.com site
to http://twistedmatrix.com/page.epy/philosophy.html

"Twisted Python began as just a Python implementation of Twisted Reality; a
framework for multiplayer text-based interactive fiction. Having previously
had experience mostly with Java and C++, I was amazed by the amount
flexibility and self-awareness that Python had. When a 20,000 line project
went to approximately 3,000 lines overnight, and came out being more
flexible and robust once it had been completed, I realized I was on to
something really good. "


Any idea where I can find this article these days?

thanks.




From glyph at twistedmatrix.com  Wed Nov 27 00:22:33 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 26 Nov 2002 23:22:33 -0600 (CST)
Subject: [Twisted-Python] broken link:
 http://twistedmatrix.com/page.epy/philosophy.html
In-Reply-To: <017001c295ad$6a316ca0$6421a8c0@topdown>
References: <017001c295ad$6a316ca0$6421a8c0@topdown>
Message-ID: <20021126.232233.59468344.glyph@twistedmatrix.com>

On Tue, 26 Nov 2002 16:39:15 -0800, "Erik Myllymaki" <erik.myllymaki at starpointe.ca> wrote:
> An article with the folowing summary was linked form the librenix.com site
> to http://twistedmatrix.com/page.epy/philosophy.html

[...]

> Any idea where I can find this article these days?

Although the article is an interesting read, and of some historical interest,
it is woefully out of date and contains a bunch of inaccuracies.

I'll update it sometime soon and post an updated copy to the website.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021126/bf4f4948/attachment.pgp 

From naesten at myrealbox.com  Wed Nov 27 00:51:21 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Wed, 27 Nov 2002 00:51:21 -0500
Subject: [Twisted-Python] broken link: http://twistedmatrix.com/page.epy/philosophy.html
References: <017001c295ad$6a316ca0$6421a8c0@topdown> <20021126.232233.59468344.glyph@twistedmatrix.com>
Message-ID: <3DE45D59.5080107@myrealbox.com>

Glyph Lefkowitz wrote:

>On Tue, 26 Nov 2002 16:39:15 -0800, "Erik Myllymaki" <erik.myllymaki at starpointe.ca> wrote:
>  
>
>>An article with the folowing summary was linked form the librenix.com site
>>to http://twistedmatrix.com/page.epy/philosophy.html
>>    
>>
>
>[...]
>
>  
>
>>Any idea where I can find this article these days?
>>    
>>
>
>Although the article is an interesting read, and of some historical interest,
>it is woefully out of date and contains a bunch of inaccuracies.
>
>I'll update it sometime soon and post an updated copy to the website.
>
Ahah! a job for the web archive!

http://web.archive.org/web/*/http://twistedmatrix.com/page.epy/philosophy.html





From webadministrator at ozzope.org  Tue Nov 26 18:00:07 2002
From: webadministrator at ozzope.org (Jan Smith)
Date: Wed, 27 Nov 2002 10:00:07 +1100
Subject: [Twisted-Python] Where is Python being taught in Australia?
Message-ID: <GEEGJBEAOOJNMLLBHCHIOEFFCNAA.webadministrator@ozzope.org>

Hi all,

I am compiling of list of institutions teaching Python for the OzZope web
site - the Australian Zope Interest Group.  Could you tell me where Python
is being taught in Australia? It would be great to have an up to date list.

Sometimes the subject is not specifically python but python is taught as
part a course.  Any course including python is what I'm looking for.

Also any places that may be teaching Zope.

Either reply to.  mailto:webadministrator at ozzope.org

Many thanks


Jan Smith

www.ozzope.org
Australian Zope Interest Group




From tv at twistedmatrix.com  Thu Nov 28 01:43:17 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 28 Nov 2002 08:43:17 +0200
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123.123121.133894024.glyph@twistedmatrix.com>
References: <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com> <20021123135416.GE2967@toshi> <20021123.123121.133894024.glyph@twistedmatrix.com>
Message-ID: <20021128064317.GA28982@ki.yok.utu.fi>

On Sat, Nov 23, 2002 at 12:31:21PM -0600, Glyph Lefkowitz wrote:
> > And if it supported /etc/hosts? :)
> 
> /etc/hosts.  Windows registry keys pointing at DNS servers.  ZoneAlarm.
> Potentially there are wacky plug-ins for the system host resolution technique
> which use LDAP rather than DNS.  (I don't know if any exist, but there's
> nothing to say they couldn't ^_^).  Effectively replacing the system doman name
> lookup is tricky, especially on win32.

  Note on mordern unixes: libnss (name service switch) allows to admin
  to use _whatever he wants_ to resolve host names.

-- 
:(){ :|:&};:



From bruce at cubik.org  Thu Nov 28 02:12:14 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 28 Nov 2002 00:12:14 -0700
Subject: [Twisted-Python] async hostname resolution
References: <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com> <20021123135416.GE2967@toshi> <20021123.123121.133894024.glyph@twistedmatrix.com> <20021128064317.GA28982@ki.yok.utu.fi>
Message-ID: <3DE5C1CE.9020806@cubik.org>

Tommi Virtanen wrote:
> On Sat, Nov 23, 2002 at 12:31:21PM -0600, Glyph Lefkowitz wrote:
> 
>>>And if it supported /etc/hosts? :)
>>
>>/etc/hosts.  Windows registry keys pointing at DNS servers.  ZoneAlarm.
>>Potentially there are wacky plug-ins for the system host resolution technique
>>which use LDAP rather than DNS.  (I don't know if any exist, but there's
>>nothing to say they couldn't ^_^).  Effectively replacing the system doman name
>>lookup is tricky, especially on win32.
> 
>   Note on mordern unixes: libnss (name service switch) allows to admin
>   to use _whatever he wants_ to resolve host names.

And I've already pointed this out to exarkun since he's doing the work, 
but on Linux, glibc 2.2.4 and later expose an asynchronous name lookup 
interface already.

Docs on it can be found here:

   http://people.redhat.com/drepper/asynchnl.pdf

Windows has an asynch interface as well:

 
http://msdn.microsoft.com/library/en-us/winsock/winsock/wsaasyncgethostbyname_2.asp

  - Bruce




From exarkun at meson.dyndns.org  Thu Nov 28 02:02:47 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Thu, 28 Nov 2002 02:02:47 -0500
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021128064317.GA28982@ki.yok.utu.fi>
References: <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com> <20021123135416.GE2967@toshi> <20021123.123121.133894024.glyph@twistedmatrix.com> <20021128064317.GA28982@ki.yok.utu.fi>
Message-ID: <20021128070247.GA4806@meson.dyndns.org>

On Thu, Nov 28, 2002 at 08:43:17AM +0200, Tommi Virtanen wrote:
> [snip] 
>   Note on mordern unixes: libnss (name service switch) allows to admin
>   to use _whatever he wants_ to resolve host names.

  A quick google didn't turn up the answer:  Are there python bindings to
libnss?

  Jp

-- 
<Ape> EludeR: what kind of distro you have?
<EludeR> Ape: gentoo
<Ape> EludeR: it seems it have bsd-style init?
<EludeR> i dont know
<EludeR> have no clue
--
 12:00am up 26 days, 10:54, 4 users, load average: 0.02, 0.11, 0.09
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021128/0e39937a/attachment.pgp 

From smurf at noris.de  Thu Nov 28 02:39:41 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Thu, 28 Nov 2002 08:39:41 +0100
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021128070247.GA4806@meson.dyndns.org>; from exarkun@meson.dyndns.org on Thu, Nov 28, 2002 at 02:02:47AM -0500
References: <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com> <20021123135416.GE2967@toshi> <20021123.123121.133894024.glyph@twistedmatrix.com> <20021128064317.GA28982@ki.yok.utu.fi> <20021128070247.GA4806@meson.dyndns.org>
Message-ID: <20021128083941.S18881@noris.de>

Hi,

Jp Calderone:
>   A quick google didn't turn up the answer:  Are there python bindings to
> libnss?
> 
"include socket". The standard gethost* library calls end up using NSS.

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021128/db71232e/attachment.pgp 

From tonyblake2003 at yahoo.co.uk  Thu Nov 28 11:31:59 2002
From: tonyblake2003 at yahoo.co.uk (=?iso-8859-1?q?Tony=20Blake?=)
Date: Thu, 28 Nov 2002 16:31:59 +0000 (GMT)
Subject: [Twisted-Python] ImportError: cannot import name dns
Message-ID: <20021128163159.47893.qmail@web14601.mail.yahoo.com>

Hello all,

I have just started to work with Twisted and am having
some difficulty with 1.0.1. (I am not a Python veteran
either ;)

I downloaded the latest Twisted release for Win32
(Twisted-1.0.1.win32-py2.2.exe). It installed fine.
But when running the 'coil' script, I receive the
following error:

=======================
Traceback (most recent call last):
  File "coil.py", line 30, in ?
    run()
  File
"C:\Python22\Lib\site-packages\twisted\scripts\coil.py",
line 89, in run
    p.load()
  File
"C:\Python22\Lib\site-packages\twisted\python\plugin.py",
line 40, in load
    return namedModule(self.module)
  File
"C:\Python22\Lib\site-packages\twisted\python\reflect.py",
line 372, in namedModule
    topLevel = __import__(name)
  File
"C:\Python22\Lib\site-packages\twisted\coil\plugins\names.py",
line 21, in ?
    from twisted.names import dns
ImportError: cannot import name dns
=============================

In the directory twisted.names, there isn't a dns.py.
It's not in the UNIX build either.

Downloaded 1.0.0, and the dns.py is there. It runs
fine.

Do you have to install 1.0.0 and then 1.0.1 over it?

Thanks for any help in advance,

Tony


__________________________________________________
Do You Yahoo!?
Everything you'll ever need on one web page
from News and Sport to Email and Music Charts
http://uk.my.yahoo.com



From twisted at itamarst.org  Thu Nov 28 12:57:26 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Nov 2002 12:57:26 -0500
Subject: [Twisted-Python] ImportError: cannot import name dns
In-Reply-To: <20021128163159.47893.qmail@web14601.mail.yahoo.com>
References: <20021128163159.47893.qmail@web14601.mail.yahoo.com>
Message-ID: <20021128125726.64a03bf8.twisted@itamarst.org>

On Thu, 28 Nov 2002 16:31:59 +0000 (GMT)
Tony Blake <tonyblake2003 at yahoo.co.uk> wrote:

> I downloaded the latest Twisted release for Win32
> (Twisted-1.0.1.win32-py2.2.exe). It installed fine.
> But when running the 'coil' script, I receive the
> following error:

Coil was more proof of concept than actual working program, so no one
actually bothers to check if it's broken. We probably ought to either do
that, remove it, or better yet rewrite from scratch. Volunteers?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From glyph at twistedmatrix.com  Thu Nov 28 22:48:18 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 28 Nov 2002 21:48:18 -0600 (CST)
Subject: [Twisted-Python] ImportError: cannot import name dns
In-Reply-To: <20021128125726.64a03bf8.twisted@itamarst.org>
References: <20021128163159.47893.qmail@web14601.mail.yahoo.com>
	<20021128125726.64a03bf8.twisted@itamarst.org>
Message-ID: <20021128.214818.55509130.glyph@twistedmatrix.com>

On Thu, 28 Nov 2002 12:57:26 -0500, Itamar Shtull-Trauring <twisted at itamarst.org> wrote:
> Coil was more proof of concept than actual working program, so no one
> actually bothers to check if it's broken. We probably ought to either do
> that, remove it, or better yet rewrite from scratch. Volunteers?

A few thoughts:

If anyone is interested in volunteering to do this, an important component of
the rewrite is that it should use Woven.  Also: the tree ought to be
collapsable, and the distinction between "static" and "dynamic" entity lists
should be removed.  (There may still be a useful distinction of "entities which
can be removed without impacting an external resource".  It's pretty clear that
the current approach is not the way to go, though, since it creates a useless
distinction in most cases and bloats an interface that should be small and
simple.)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20021128/0fc43e85/attachment.pgp 

From spam at polynode.com  Fri Nov  1 03:45:10 2002
From: spam at polynode.com (Alex)
Date: Fri, 01 Nov 2002 05:45:10 -0500
Subject: [Twisted-Python] More strangeness with Woven
Message-ID: <5.1.1.6.0.20021101053837.00bcccf8@coral.tufts.edu>

I'm finding some strange behavior:

section = widgets.Div()
la = widgets.Anchor()
section.add(la)
section.add(widgets.Br())
section.add(widgets.Text('blah'))

Here, everything inside 'section' is being replaced by the widgets.Text -- 
everything added before it is lost.  This seems to be happening every time 
a Text widget is added to a Div; everything before it is lost.

--
Alex Levy
WWW: http://mesozoic.geecs.org
Tel: 617.835.0778

"Never let your sense of morals prevent you from doing what is right."
-- Salvor Hardin, Isaac Asimov's _Foundation_





From paul at nfg.nl  Fri Nov  1 06:59:21 2002
From: paul at nfg.nl (Paul Stevens)
Date: Fri, 1 Nov 2002 14:59:21 +0100
Subject: [Twisted-Python] newbie: connecting to a PB service from a web resource
Message-ID: <20021101145921.12f621cc.paul@nfg.nl>



Hi all,

I'm trying to build a small webapp that will allow me to connect to a remote PB
service. Results from the remote calls are to be used in a simple DOM template.

Is this feasable ?

I've got all the building blocks functioning alright, using the pbquote.py and
pbquoteclient.py code as examples.

However, when I try to integrate the code from the commandline client into the
dom resource, I'm lost.

How can I make sure the client waits a while -- until all callbacks are
handled ?

I can see the refcount growing on the server side each time I connect to the
clientside webserver. But how to disconnect.

Clues or pointers anyone ? Thanks.


-- 
  ________________________________________________________________
  Paul Stevens                                  mailto:paul at nfg.nl
  NET FACILITIES GROUP                     PGP: finger paul at nfg.nl
  The Netherlands________________________________http://www.nfg.nl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: webstatusreporter.py
Type: application/octet-stream
Size: 1205 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021101/7ddefc59/attachment-0002.obj>

From dp at twistedmatrix.com  Fri Nov  1 08:38:27 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 1 Nov 2002 07:38:27 -0800
Subject: [Twisted-Python] newbie: connecting to a PB service from a web resource
In-Reply-To: <20021101145921.12f621cc.paul@nfg.nl>
Message-ID: <F6EF1CFC-EDAF-11D6-A3C2-00039376B1AE@twistedmatrix.com>

It's fairly simple, there's just one important detail you're missing -- 
in order to get a node factory_* to wait for a deferred, you have to 
return it. (Ah, the joys of async programming.) Since you're also 
dealing with a series of deferreds, it's even more tricky. Here's what 
you do:

In the factory_getStatus method, get the first Deferred by calling 
connect. Add a callback to it and make sure you pass the node to the 
callback. Return the Deferred. (DOMTemplate will know that in order to 
render this node, it will have to wait for the results of the Deferred.)

In the readStatus callback method (whose signature should be modified 
to accept the node you passed to the callback above), get the second 
deferred, add the setResult callback to it, and pass the node along to 
that callback as well. *Return the Deferred*. (DOMTemplate sees that 
the results of the first Deferred are a second Deferred. It knows that 
in order to render this node, it will have to wait for the results of 
the second Deferred.)

Finally, in the setResult callback method (whose signature should be 
modified to accept the node), you have the result data you wish to 
insert into the node. You also have a reference to the node, since you 
passed it along though all the callbacks. Mutate the node (clear it, 
then node.appendChild(self.d.createTextNode("%s", result))) and *Return 
the node*. (DOMTemplate sees that the results of the second deferred 
are a node, and it will be inserted into the DOM (in this case, since 
the returned node is the same as the node that was passed in, nothing 
happens) and when the DOM is rendered to XML your data will be in it.)

Why is this fairly complicated procedure required? Well, in the 
original factory_getStatus, you call self.connect() which immediately 
returns a Deferred. You assume that self.result is ready -- this is not 
the case. Since the data will not be ready until the callback has 
fired, you have to defer doing the actual work until the callback, as 
well.

Donovan

On Friday, November 1, 2002, at 05:59 AM, Paul Stevens wrote:

>
>
> Hi all,
>
> I'm trying to build a small webapp that will allow me to connect to a 
> remote PB
> service. Results from the remote calls are to be used in a simple DOM 
> template.
>
> Is this feasable ?
>
> I've got all the building blocks functioning alright, using the 
> pbquote.py and
> pbquoteclient.py code as examples.
>
> However, when I try to integrate the code from the commandline client 
> into the
> dom resource, I'm lost.
>
> How can I make sure the client waits a while -- until all callbacks are
> handled ?
>
> I can see the refcount growing on the server side each time I connect 
> to the
> clientside webserver. But how to disconnect.
>
> Clues or pointers anyone ? Thanks.
>
>
> -- 
>   ________________________________________________________________
>   Paul Stevens                                  mailto:paul at nfg.nl
>   NET FACILITIES GROUP                     PGP: finger paul at nfg.nl
>   The Netherlands________________________________http://www.nfg.nl
> <webstatusreporter.py>




From dp at twistedmatrix.com  Fri Nov  1 08:41:34 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 1 Nov 2002 07:41:34 -0800
Subject: [Twisted-Python] 'model' attribute is showing up in processed HTML
In-Reply-To: <5.1.1.6.0.20021031190558.022e5e00@coral.tufts.edu>
Message-ID: <66B8F9E8-EDB0-11D6-A3C2-00039376B1AE@twistedmatrix.com>

Hmm. view= and controller= attributes are stripped off result nodes to 
prevent infinite recursion, but I left the model= attributes in because 
it's useful for debugging to see which model= a node was applied to, in 
the output. There's no reason I couldn't strip it as well. Maybe I will 
add a "strict" mode, because as I said it's useful for debugging to see 
certain woven attributes in the output.

Maybe this is the time to create a unique woven namespace? <div 
woven:model="foo" />? It seems like a lot more typing.

Donovan

On Thursday, October 31, 2002, at 04:10 PM, Alex Levy wrote:

> The 'model' node attribute from my XHTML templates is showing up in 
> the final HTML being spewed by twistd.  Is there a reason Twisted does 
> this?  It's causing my pages to fail W3C validation.  This isn't 
> happening with the 'view' attribute.
>
> Example:
>
>     <td class="sidebar" view="sidebar"></td>
>     <td class="content">
>         <div class="title" model="title"></div>
>         <span model="content"/>
>     </td>
>
> ...becomes:
>
>     <td class="sidebar">{sidebar stuff...}</td>
>     <td class="content">
>         <div model="title" class="title">This is the title.</div>
>         <span model="content">Content goes here.  w00t.</span>
>     </td>
>
> --
> Alex Levy
> WWW: http://mesozoic.geecs.org
> Tel: 617.835.0778
>
> "Never let your sense of morals prevent you from doing what is right."
> -- Salvor Hardin, Isaac Asimov's _Foundation_
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dp at twistedmatrix.com  Fri Nov  1 08:44:07 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Fri, 1 Nov 2002 07:44:07 -0800
Subject: [Twisted-Python] More strangeness with Woven
In-Reply-To: <5.1.1.6.0.20021101053837.00bcccf8@coral.tufts.edu>
Message-ID: <C196DE72-EDB0-11D6-A3C2-00039376B1AE@twistedmatrix.com>

On Friday, November 1, 2002, at 02:45 AM, Alex wrote:

> I'm finding some strange behavior:
>
> section = widgets.Div()
> la = widgets.Anchor()
> section.add(la)
> section.add(widgets.Br())
> section.add(widgets.Text('blah'))
>
> Here, everything inside 'section' is being replaced by the 
> widgets.Text -- everything added before it is lost.  This seems to be 
> happening every time a Text widget is added to a Div; everything 
> before it is lost.

This is a known bug with the way woven handles generating subwidgets -- 
I haven't decided what a satisfactory solution is yet. I'll think about 
it today. Generally, my solution is to not do too much work in a single 
Widget -- just apply separate view= attributes to nodes inside of nodes 
and let each Widget handle a single level of DOM nodes.

I think I have a simple solution that will make the above use case work 
properly, though. I'll write a test for it and see if I can get the 
solution checked in today. Thanks for the code.

Donovan




From paul at nfg.nl  Fri Nov  1 11:38:22 2002
From: paul at nfg.nl (Paul Stevens)
Date: Fri, 1 Nov 2002 19:38:22 +0100
Subject: [Twisted-Python] newbie: connecting to a PB service from a web resource
In-Reply-To: <F6EF1CFC-EDAF-11D6-A3C2-00039376B1AE@twistedmatrix.com>
References: <20021101145921.12f621cc.paul@nfg.nl>
	<F6EF1CFC-EDAF-11D6-A3C2-00039376B1AE@twistedmatrix.com>
Message-ID: <20021101193822.427d8493.paul@nfg.nl>

Donovan,

It works ! Way cool. Thanks for your indepth and lucid explanation.

greetings,


Fri, 1 Nov 2002 07:38:27 -0800 Donovan Preston <dp at twistedmatrix.com> quoth:

> It's fairly simple, there's just one important detail you're missing -- 
> in order to get a node factory_* to wait for a deferred, you have to 
> return it. (Ah, the joys of async programming.) Since you're also 
> dealing with a series of deferreds, it's even more tricky. Here's what 
> you do:
> 
> In the factory_getStatus method, get the first Deferred by calling 
> connect. Add a callback to it and make sure you pass the node to the 
> callback. Return the Deferred. (DOMTemplate will know that in order to 
> render this node, it will have to wait for the results of the Deferred.)
> 
> In the readStatus callback method (whose signature should be modified 
> to accept the node you passed to the callback above), get the second 
> deferred, add the setResult callback to it, and pass the node along to 
> that callback as well. *Return the Deferred*. (DOMTemplate sees that 
> the results of the first Deferred are a second Deferred. It knows that 
> in order to render this node, it will have to wait for the results of 
> the second Deferred.)
> 
> Finally, in the setResult callback method (whose signature should be 
> modified to accept the node), you have the result data you wish to 
> insert into the node. You also have a reference to the node, since you 
> passed it along though all the callbacks. Mutate the node (clear it, 
> then node.appendChild(self.d.createTextNode("%s", result))) and *Return 
> the node*. (DOMTemplate sees that the results of the second deferred 
> are a node, and it will be inserted into the DOM (in this case, since 
> the returned node is the same as the node that was passed in, nothing 
> happens) and when the DOM is rendered to XML your data will be in it.)
> 
> Why is this fairly complicated procedure required? Well, in the 
> original factory_getStatus, you call self.connect() which immediately 
> returns a Deferred. You assume that self.result is ready -- this is not 
> the case. Since the data will not be ready until the callback has 
> fired, you have to defer doing the actual work until the callback, as 
> well.
> 
> Donovan
> 
> On Friday, November 1, 2002, at 05:59 AM, Paul Stevens wrote:
> 
> >
> >
> > Hi all,
> >
> > I'm trying to build a small webapp that will allow me to connect to a 
> > remote PB
> > service. Results from the remote calls are to be used in a simple DOM 
> > template.
> >
> > Is this feasable ?
> >
> > I've got all the building blocks functioning alright, using the 
> > pbquote.py and
> > pbquoteclient.py code as examples.
> >
> > However, when I try to integrate the code from the commandline client 
> > into the
> > dom resource, I'm lost.
> >
> > How can I make sure the client waits a while -- until all callbacks are
> > handled ?
> >
> > I can see the refcount growing on the server side each time I connect 
> > to the
> > clientside webserver. But how to disconnect.
> >
> > Clues or pointers anyone ? Thanks.
> >
> >
> > -- 
> >   ________________________________________________________________
> >   Paul Stevens                                  mailto:paul at nfg.nl
> >   NET FACILITIES GROUP                     PGP: finger paul at nfg.nl
> >   The Netherlands________________________________http://www.nfg.nl
> > <webstatusreporter.py>
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
  ________________________________________________________________
  Paul Stevens                                  mailto:paul at nfg.nl
  NET FACILITIES GROUP                     PGP: finger paul at nfg.nl
  The Netherlands________________________________http://www.nfg.nl



From iko at strakt.com  Fri Nov  1 16:34:51 2002
From: iko at strakt.com (Anders Hammarquist)
Date: Sat, 02 Nov 2002 00:34:51 +0100
Subject: [Twisted-Python] SMTP 
In-Reply-To: Your message of "01 Nov 2002 06:05:59 GMT."
             <20021101060559.24216.qmail@green.zadka.com> 
References: <200210312036.g9VKaH7O031180@fido.strakt.com> <20021101060559.24216.qmail@green.zadka.com> 
Message-ID: <200211012334.gA1NYpc5021869@theraft.strakt.com>

In a message of 01 Nov 2002 06:05:59 GMT, Moshe Zadka writes:
>I couldn't apply it.
>Can you update and generate a patch against latest CVS?

Here's another diff as of a minute or two ago.

-------------- next part --------------
Index: twisted/protocols/basic.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/basic.py,v
retrieving revision 1.25
diff -u -u -r1.25 basic.py
--- twisted/protocols/basic.py	18 Oct 2002 06:46:52 -0000	1.25
+++ twisted/protocols/basic.py	1 Nov 2002 23:25:30 -0000
@@ -153,12 +153,15 @@
                 line, self.__buffer = self.__buffer.split(self.delimiter, 1)
             except ValueError:
                 if len(self.__buffer) > self.MAX_LENGTH:
-                    self.transport.loseConnection()
+                    line, self.__buffer = self.__buffer, ''
+                    self.lineLengthExceeded(line)
                     return
                 break
             else:
-                if len(line) > self.MAX_LENGTH:
-                    self.transport.loseConnection()
+                linelength = len(line)
+                if linelength > self.MAX_LENGTH:
+                    line, self.__buffer = self.__buffer, ''
+                    self.lineLengthExceeded(line)
                     return
                 self.lineReceived(line)
                 if self.transport.disconnecting:
@@ -200,6 +203,12 @@
         """Sends a line to the other end of the connection.
         """
         self.transport.write(line + self.delimiter)
+
+    def lineLengthExceeded(self, line):
+        """Called when the maximum line length has been reached.
+        Override if it needs to be dealt with in some special way.
+        """
+        self.transport.loseConnection()
 
 
 class Int32StringReceiver(protocol.Protocol):
Index: twisted/protocols/smtp.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/smtp.py,v
retrieving revision 1.28
diff -u -u -r1.28 smtp.py
--- twisted/protocols/smtp.py	1 Nov 2002 04:47:10 -0000	1.28
+++ twisted/protocols/smtp.py	1 Nov 2002 23:25:30 -0000
@@ -19,11 +19,11 @@
 
 # Twisted imports
 from twisted.protocols import basic
-from twisted.internet import protocol, defer
+from twisted.internet import protocol, defer, reactor
 from twisted.python import log
 
 # System imports
-import os, time, string, operator
+import os, time, string, operator, re
 import MimeWriter, tempfile
 
 class SMTPError(Exception):
@@ -52,19 +52,110 @@
         self.deferred.errback(arg)
         self.done = 1
 
+class AddressError(SMTPError):
+    "Parse error in address"
+    pass
+
+# Character classes for parsing addresses
+atom = r"-A-Za-z0-9!#$%&'*+/=?^_`{|}~"
+
+class Address:
+    """Parse and hold an RFC 2821 address.
+
+    Source routes are stipped and ignored, UUCP-style bang-paths
+    and %-style routing are not parsed.
+    """
+
+    tstring = re.compile(r'''( # A string of
+                          (?:"[^"]*" # quoted string
+			  |\\.i # backslash-escaped characted
+			  |[''' + string.replace(atom,'#',r'\#')
+                          + r'''] # atom character
+			  )+|.) # or any single character''',re.X)
+
+    def __init__(self, addr):
+        self.local = ''
+        self.domain = ''
+        self.addrstr = addr
+
+        # Tokenize
+        atl = filter(None,self.tstring.split(addr))
+
+        local = []
+        domain = []
+
+        while atl:
+            if atl[0] == '<':
+                if atl[-1] != '>':
+                    raise AddressError, "Unbalanced <>"
+                atl = atl[1:-1]
+            elif atl[0] == '@':
+                atl = atl[1:]
+                if not local:
+                    # Source route
+                    while atl and atl[0] != ':':
+                        # remove it
+                        atl = atl[1:]
+                    if not atl:
+                        raise AddressError, "Malformed source route"
+                    atl = atl[1:] # remove :
+                elif domain:
+                    raise AddressError, "Too many @"
+                else:
+                    # Now in domain
+                    domain = ['']
+            elif len(atl[0]) == 1 and atl[0] not in atom + '.':
+                raise AddressError, "Parse error at " + atl[0]
+            else:
+                if not domain:
+                    local.append(atl[0])
+                else:
+                    domain.append(atl[0])
+                atl = atl[1:]
+               
+        self.local = ''.join(local)
+        self.domain = ''.join(domain)
+
+    dequotebs = re.compile(r'\\(.)')
+    def dequote(self,addr):
+        "Remove RFC-2821 quotes from address"
+        res = []
+
+        atl = filter(None,self.tstring.split(str(addr)))
+
+        for t in atl:
+            if t[0] == '"' and t[-1] == '"':
+                res.append(t[1:-1])
+            elif '\\' in t:
+                res.append(self.dequotebs.sub(r'\1',t))
+            else:
+                res.append(t)
+
+        return ''.join(res)
+
+    def __str__(self):
+        return '%s%s' % (self.local, self.domain and ("@" + self.domain) or "")
+
+    def __repr__(self):
+        return "%s.%s(%s)" % (self.__module__, self.__class__.__name__,
+                              repr(str(self)))
 
 class User:
 
     def __init__(self, destination, helo, protocol, orig):
-        try:
-            self.name, self.domain = string.split(destination, '@', 1)
-        except ValueError:
-            self.name = destination
-            self.domain = ''
+        self.dest = Address(destination)
         self.helo = helo
         self.protocol = protocol
         self.orig = orig
 
+    def __getstate__(self):
+        return { 'dest' : self.dest,
+                 'helo' : self.helo,
+                 'protocol' : None,
+                 'orig' : self.orig }
+
+    def __str__(self):
+        return str(self.dest)
 
 class IMessage:
 
@@ -90,19 +181,39 @@
         self.mode = COMMAND
         self.__from = None
         self.__helo = None
-        self.__to = ()
+        self.__to = []
+
+    def timedout(self):
+        self.sendCode(421, '%s Timeout. Try talking faster next time!' %
+                      self.host)
+        self.transport.loseConnection()
 
     def connectionMade(self):
-        self.sendCode(220, 'Spammers beware, your ass is on fire')
+        self.host = self.factory.domain
+        if hasattr(self.factory, 'timeout'):
+            self.timeout = self.factory.timeout
+        else:
+            self.timeout = 600
+        self.sendCode(220, '%s Spammers beware, your ass is on fire' %
+                      self.host)
+        if self.timeout:
+            self.timeoutID = reactor.callLater(self.timeout, self.timedout)
 
     def sendCode(self, code, message=''):
         "Send an SMTP code with a message."
         self.transport.write('%d %s\r\n' % (code, message))
 
     def lineReceived(self, line):
+        if self.timeout:
+            self.timeoutID.cancel()
+            self.timeoutID = reactor.callLater(self.timeout, self.timedout)
+
         if self.mode is DATA:
             return self.dataLineReceived(line)
-        command = string.split(line, None, 1)[0]
+        if line:
+            command = string.split(line, None, 1)[0]
+        else:
+            command = ''
         method = getattr(self, 'do_'+string.upper(command), None)
         if method is None:
             method = self.do_UNKNOWN
@@ -110,59 +221,128 @@
             line = line[len(command):]
         return method(string.strip(line))
 
+    def lineLengthExceeded(self, line):
+        if self.mode is DATA:
+            for message in self.__messages:
+                message.connectionLost()
+            self.mode = COMMAND
+            del self.__messages
+        self.sendCode(500, 'Line too long')
+
+    def rawDataReceived(self, data):
+        "Throw away rest of long line"
+        rest = string.split(data, '\r\n', 1)
+        if len(rest) == 2:
+            self.setLineMode(self.rest[1])
+
     def do_UNKNOWN(self, rest):
-        self.sendCode(502, 'Command not implemented')
+        self.sendCode(500, 'Command not implemented')
 
     def do_HELO(self, rest):
-        self.__helo = rest
-        self.sendCode(250, 'Nice to meet you')
+        peer = self.transport.getPeer()[1]
+        self.__helo = (rest, peer)
+        self.sendCode(250, '%s Hello %s, nice to meet you' % (self.host, peer))
 
     def do_QUIT(self, rest):
         self.sendCode(221, 'See you later')
         self.transport.loseConnection()
 
+    # A string of quoted strings, backslash-escaped character or
+    # atom characters + '@.,:'
+    qstring = r'("[^"]*"|\\.|[' + string.replace(atom,'#',r'\#') + r'@.,:])+'
+
+    mail_re = re.compile(r'''\s*FROM:\s*(?P<path><> # Empty <>
+                         |<''' + qstring + r'''> # <addr>
+			 |''' + qstring + r''' # addr
+			 )\s*(\s(?P<opts>.*))? # Optional WS + ESMTP options
+			 $''',re.I|re.X)
+    rcpt_re = re.compile(r'\s*TO:\s*(?P<path><' + qstring + r'''> # <addr>
+                         |''' + qstring + r''' # addr
+			 )\s*(\s(?P<opts>.*))? # Optional WS + ESMTP options
+			 $''',re.I|re.X)
+
     def do_MAIL(self, rest):
-        from_ = rest[len("MAIL:<"):-len(">")]
-        self.validateFrom(self.__helo, from_, self._fromValid,
-                                              self._fromInvalid)
+        if self.__from:
+            self.sendCode(503,"Only one sender per message, please")
+            return
+        # Clear old recipient list
+        self.__to = []
+        m = self.mail_re.match(rest)
+        if not m:
+            self.sendCode(501, "Syntax error")
+            return
 
-    def _fromValid(self, from_):
+        try:
+            addr = Address(m.group('path'))
+        except AddressError, e:
+            self.sendCode(553, str(e))
+            return
+            
+        self.validateFrom(self.__helo, addr, self._fromValid,
+                          self._fromInvalid)
+
+    def _fromValid(self, from_, code=250, msg='From address accepted'):
         self.__from = from_
-        self.sendCode(250, 'From address accepted')
+        self.sendCode(code, msg)
 
-    def _fromInvalid(self, from_):
-        self.sendCode(550, 'No mail for you!')
+    def _fromInvalid(self, from_, code=550, msg='No mail for you!'):
+        self.sendCode(code,msg)
 
     def do_RCPT(self, rest):
-        to = rest[len("TO:<"):-len(">")]
-        user = User(to, self.__helo, self, self.__from)
-        self.validateTo(user, self._toValid, self._toInvalid)
+        if not self.__from:
+            self.sendCode(503, "Must have sender before recipient")
+            return
+        m = self.rcpt_re.match(rest)
+        if not m:
+            self.sendCode(501, "Syntax error")
+            return
 
-    def _toValid(self, to):
-        self.__to = self.__to + (to,)
-        self.sendCode(250, 'Address recognized')
+        try:
+            user = User(m.group('path'), self.__helo, self, self.__from)
+        except AddressError, e:
+            self.sendCode(553, str(e))
+            return
+            
+        self.validateTo(user, self._toValid, self._toInvalid)
 
-    def _toInvalid(self, to):
-        self.sendCode(550, 'Cannot receive for specified address')
+    def _toValid(self, to, code=250, msg='Address recognized'):
+        self.__to.append(to)
+        self.sendCode(code, msg)
+
+    def _toInvalid(self, to, code=550,
+                   msg='Cannot receive for specified address'):
+        self.sendCode(code, msg)
 
     def do_DATA(self, rest):
         if self.__from is None or not self.__to:  
-            self.sendCode(550, 'Must have valid receiver and originator')
+            self.sendCode(503, 'Must have valid receiver and originator')
             return
         self.mode = DATA
         helo, origin, recipients = self.__helo, self.__from, self.__to
         self.__from = None
-        self.__to = ()
+        self.__to = []
         self.__messages = self.startMessage(recipients)
+        self.__inheader = self.__inbody = 0
+        for message in self.__messages:
+            message.lineReceived(self.receivedHeader(helo, origin, recipients))
         self.sendCode(354, 'Continue')
 
     def connectionLost(self, reason):
+        # self.sendCode(421, 'Dropping connection.') # This does nothing...
+        # Ideally, if we (rather than the other side) lose the connection,
+        # we should be able to tell the other side that we are going away.
+        # RFC-2821 requires that we try.
         if self.mode is DATA:
-            for message in self.__messages:
-                message.connectionLost()
+            try:
+                for message in self.__messages:
+                    message.connectionLost()
+                del self.__messages
+            except AttributeError:
+                pass
 
     def do_RSET(self, rest):
-        self.__init__()
+        self.__from = None
+        self.__to = []
         self.sendCode(250, 'I remember nothing.')
 
     def dataLineReceived(self, line):
@@ -180,8 +360,24 @@
                     deferred = message.eomReceived()
                     deferred.addCallback(ndeferred.callback)
                     deferred.addErrback(ndeferred.errback)
+                del self.__messages
                 return
             line = line[1:]
+
+        # Add a blank line between the generated Received:-header
+        # and the message body if the message comes in without any
+        # headers
+        if not self.__inheader and not self.__inbody:
+            if ':' in line:
+                self.__inheaders = 1
+            elif line:
+                for message in self.__messages:
+                    message.lineReceived('')
+                self.__inbody = 1
+
+        if not line:
+            self.__inbody = 1
+        
         for message in self.__messages:
             message.lineReceived(line)
 
@@ -191,8 +387,27 @@
     def _messageNotHandled(self, _):
         self.sendCode(550, 'Could not send e-mail')
 
+    def rfc822date(self):
+        timeinfo = time.localtime()
+        if timeinfo[8]:
+            # DST
+            tz = -time.altzone
+        else:
+            tz = -time.timezone
+            
+        return "%s %+2.2d%2.2d" % (
+            time.strftime("%a, %d %b %Y %H:%M:%S", timeinfo),
+            tz / 3600, (tz / 60) % 60)
+
     # overridable methods:
+    def receivedHeader(self, helo, origin, recipents):
+        return "Received: From %s ([%s]) by %s; %s" % (
+            helo[0], helo[1], self.host, self.rfc822date())
+    
     def validateFrom(self, helo, origin, success, failure):
+        if not helo:
+            failure(origin,503,"Who are you? Say HELO first");
+            return
         success(origin)
 
     def validateTo(self, user, success, failure):
@@ -268,6 +483,7 @@
         
     def smtpCode_354_data(self, line):
         self.mailFile = self.getMailData()
+        self.lastsent = ''
         self.transport.registerProducer(self, 0)
 
     def smtpCode_250_afterData(self, line):
@@ -280,11 +496,18 @@
         chunk = self.mailFile.read(8192)
         if not chunk:
             self.transport.unregisterProducer()
-            self.sendLine('.')
+            if self.lastsent != '\n':
+                line = '\r\n.'
+            else:
+                line = '.'
+            self.sendLine(line)
             self.state = 'afterData'
+            return
 
         chunk = string.replace(chunk, "\n", "\r\n")
+        chunk = string.replace(chunk, "\r\n.", "\r\n..")
         self.transport.write(chunk)
+        self.lastsent = chunk[-1]
 
     def pauseProducing(self):
         pass
Index: twisted/test/test_protocols.py
===================================================================
RCS file: /cvs/Twisted/twisted/test/test_protocols.py,v
retrieving revision 1.17
diff -u -u -r1.17 test_protocols.py
--- twisted/test/test_protocols.py	23 Sep 2002 08:51:29 -0000	1.17
+++ twisted/test/test_protocols.py	1 Nov 2002 23:25:31 -0000
@@ -33,11 +33,13 @@
 class LineTester(basic.LineReceiver):
 
     delimiter = '\n'
+    MAX_LENGTH = 64
 
     def connectionMade(self):
         self.received = []
 
     def lineReceived(self, line):
+        print self.MAX_LENGTH, len(line)
         self.received.append(line)
         if line == '':
             self.setRawMode()
@@ -51,6 +53,10 @@
         if self.length == 0:
             self.setLineMode(rest)
 
+    def lineLengthExceeded(self, line):
+        if len(line) > self.MAX_LENGTH+1:
+            self.setLineMode(line[self.MAX_LENGTH+1:])
+
 class WireTestCase(unittest.TestCase):
 
     def testEcho(self):
@@ -103,13 +109,14 @@
 012345678len 0
 foo 5
 
+1234567890123456789012345678901234567890123456789012345678901234567890
 len 1
 
 a'''
 
     output = ['len 10', '0123456789', 'len 5', '1234\n',
               'len 20', 'foo 123', '0123456789\n012345678',
-              'len 0', 'foo 5', '', 'len 1', 'a']
+              'len 0', 'foo 5', '', '67890', 'len 1', 'a']
 
     def testBuffer(self):
         for packet_size in range(1, 10):
@@ -175,3 +182,6 @@
             r.dataReceived(s)
             if not r.brokenPeer:
                 raise AssertionError("connection wasn't closed on illegal netstring %s" % repr(s))
+
+if __name__ == '__main__':
+    unittest.main()
Index: twisted/test/test_smtp.py
===================================================================
RCS file: /cvs/Twisted/twisted/test/test_smtp.py,v
retrieving revision 1.16
diff -u -u -r1.16 test_smtp.py
--- twisted/test/test_smtp.py	6 Sep 2002 09:09:42 -0000	1.16
+++ twisted/test/test_smtp.py	1 Nov 2002 23:25:31 -0000
@@ -26,7 +26,7 @@
 from twisted.protocols import loopback, smtp
 from twisted.internet import defer, protocol
 from twisted.test.test_protocols import StringIOWithoutClosing
-import string
+import string, re
 from cStringIO import StringIO
 
 class DummyMessage:
@@ -195,15 +195,17 @@
         self.buffer = []
 
     def lineReceived(self, line):
-        self.buffer.append(line)
+        # Throw away the generated Received: header
+        if not re.match('Received: From foo.com \(\[.*\]\) by foo.com;', line):
+            self.buffer.append(line)
 
     def eomReceived(self):
         message = string.join(self.buffer, '\n')+'\n'
-        helo, origin = self.users[0].helo, self.users[0].orig
+        helo, origin = self.users[0].helo[0], str(self.users[0].orig)
         recipients = []
         for user in self.users:
-            recipients.append(user.name+'@'+user.domain)
-        self.protocol.messages.append((helo, origin, recipients, message))
+            recipients.append(str(user))
+        self.protocol.message = (helo, origin, recipients, message)
         deferred = defer.Deferred()
         deferred.callback("saved")
         return deferred
@@ -212,51 +214,84 @@
 
     def connectionMade(self):
         smtp.SMTP.connectionMade(self)
-        self.messages = []
+        self.message = None
 
     def startMessage(self, users):
         return [DummySMTPMessage(self, users)]
 
-
 class AnotherSMTPTestCase(unittest.TestCase):
 
-    messages = [ ('foo.com', 'moshez at foo.com', ['moshez at bar.com'], '''\
+    messages = [ ('foo.com', 'moshez at foo.com', ['moshez at bar.com'],
+                  'moshez at foo.com', ['moshez at bar.com'], '''\
 From: Moshe
 To: Moshe
 
 Hi,
 how are you?
 '''),
-                 ('foo.com', 'tttt at rrr.com', ['uuu at ooo', 'yyy at eee'], '''\
+                 ('foo.com', 'tttt at rrr.com', ['uuu at ooo', 'yyy at eee'],
+                  'tttt at rrr.com', ['uuu at ooo', 'yyy at eee'], '''\
 Subject: pass
 
 ..rrrr..
-''')
+'''),
+                 ('foo.com', '@this, at is, at ignored:foo at bar.com',
+                  ['@ignore, at this, at too:bar at foo.com'],
+                  'foo at bar.com', ['bar at foo.com'], '''\
+Subject: apa
+To: foo
+
+123
+.
+456
+'''),
               ]
 
-    expected_output = '220 Spammers beware, your ass is on fire\015\012250 Nice to meet you\015\012250 From address accepted\015\012250 Address recognized\015\012354 Continue\015\012250 Delivery in progress\015\012250 From address accepted\015\012250 Address recognized\015\012250 Address recognized\015\012354 Continue\015\012250 Delivery in progress\015\012221 See you later\015\012'
-
-    input = 'HELO foo.com\r\n'
-    for _, from_, to_, message in messages:
-        input = input + 'MAIL FROM:<%s>\r\n' % from_
-        for item in to_:
-            input = input + 'RCPT TO:<%s>\r\n' % item
-        input = input + 'DATA\r\n'
-        for line in string.split(message, '\n')[:-1]:
-            if line[:1] == '.': line = '.' + line
-            input = input + line + '\r\n'
-        input = input + '.' + '\r\n'
-    input = input + 'QUIT\r\n'
+    testdata = [
+        ('', '220.*\r\n$', None, None),
+        ('HELO foo.com\r\n', '250.*\r\n$', None, None),
+        ('RSET\r\n', '250.*\r\n$', None, None),
+        ]
+    for helo_, from_, to_, realfrom, realto, msg in messages:
+        testdata.append(('MAIL FROM:<%s>\r\n' % from_, '250.*\r\n',
+                         None, None))
+        for rcpt in to_:
+            testdata.append(('RCPT TO:<%s>\r\n' % rcpt, '250.*\r\n',
+                             None, None))
+        testdata.append(('DATA\r\n','354.*\r\n',
+                         msg, ('250.*\r\n',
+                               (helo_, realfrom, realto, msg))))
+                                                       
 
     def testBuffer(self):
         output = StringIOWithoutClosing()
         a = DummySMTP()
-        a.makeConnection(protocol.FileWrapper(output))
-        a.dataReceived(self.input)
-        if a.messages != self.messages:
-            raise AssertionError(a.messages)
-        if output.getvalue() != self.expected_output:
-            raise AssertionError(`output.getvalue()`)
+        class fooFactory:
+            domain = 'foo.com'
 
+        a.factory = fooFactory()
+        a.makeConnection(protocol.FileWrapper(output))
+        for (send, expect, msg, msgexpect) in self.testdata:
+            if send:
+                a.dataReceived(send)
+            data = output.getvalue()
+            output.truncate(0)
+            if not re.match(expect, data):
+                raise AssertionError, (send, expect, data)
+            if data[:3] == '354':
+                for line in msg.splitlines():
+                    if line and line[0] == '.':
+                        line = '.' + line
+                    a.dataReceived(line + '\r\n')
+                a.dataReceived('.\r\n')
+                # Special case for DATA. Now we want a 250, and then
+                # we compare the messages
+                data = output.getvalue()
+                output.truncate()
+                resp, msgdata = msgexpect
+                if not re.match(resp, data):
+                    raise AssertionError, (resp, data)
+                if a.message != msgdata:
+                    raise AssertionError, (msgdata, a.message)
 
 testCases = [SMTPTestCase, SMTPClientTestCase, LoopbackSMTPTestCase, AnotherSMTPTestCase]
-------------- next part --------------
/Anders

From exarkun at meson.dyndns.org  Fri Nov  1 21:05:58 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 1 Nov 2002 23:05:58 -0500
Subject: [Twisted-Python] SMTP
In-Reply-To: <200211012334.gA1NYpc5021869@theraft.strakt.com>
References: <200210312036.g9VKaH7O031180@fido.strakt.com> <20021101060559.24216.qmail@green.zadka.com> <200211012334.gA1NYpc5021869@theraft.strakt.com>
Message-ID: <20021102040558.GA2678@meson.dyndns.org>

  Applied with no problem, but:

======================================================================
ERROR: list() -> new list
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./pyunit/unittest.py", line 210, in __call__
    testMethod()
TypeError: 'list' object is not callable
======================================================================

as well as the LoopbackSMTPTestCase hanging forever with me eventually
hitting Ctrl+c yielding the almost information-free traceback below:

ERROR: testMessages (twisted.test.test_smtp.LoopbackSMTPTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./twisted/test/test_smtp.py", line 142, in testMessages
    self.loopback(protocol, clientProtocol)
  File "./twisted/test/test_smtp.py", line 132, in loopback
    loopback.loopbackTCP(server, client)
  File "./twisted/protocols/loopback.py", line 114, in loopbackTCP
    reactor.iterate()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/base.py",
line 199, in iterate
    self.runUntilCurrent()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/base.py",
line 303, in runUntilCurrent
    self._delayeds.runUntilCurrent()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/main.py",
line 223, in runUntilCurrent
    d.runUntilCurrent()
KeyboardInterrupt


But maybe the first couple frames are helpful somehow.

 Jp

-- 
|     This 
|   signature
| intentionally
|    8 lines
|     long.
|  (So sue me)
---
--
 11:00pm up 9:51, 7 users, load average: 1.63, 1.39, 1.10
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021101/c430ea19/attachment.sig>

From screwtape at froup.com  Sat Nov  2 05:19:18 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sat, 2 Nov 2002 23:19:18 +1100
Subject: [Twisted-Python] Another IRC patch.
Message-ID: <20021102121918.GB850@ferd2.thristian.org>

While developing my twisted.im bot (new this week! database access and
an infobot-style plugin!) I've come up against two seperate
annoyances. This patch fixes both of them.

Number 1: the IRC protocol defines (among other things) two message
types - privmsg and notice. They are identical in every respect except
that a notice must not be automatically replied to. Currently,
twisted.protocol.irc.IRCClient maps notice onto privmsg, which is 
dangerous but acceptible, because you're supposed to subclass
IRCClient anyway.

However, twisted.im.ircsupport subclasses IRCClient and does not
override the 'noticed' method, so all twisted.im clients cannot tell
the difference between a privmsg and a notice. This is really not a
good thing, especially for an IM bot like mine. The attached patch
fixes this in a brute force manner by making twisted.im.ircsupport
drop all notices on the floor.

Number 2: The IRC protocol defines a certain bunch of commands that
the server can send the client. twisted.protocol.irc.IRCClient calls
self.irc_COMMAND to handle an incoming command 'COMMAND', and if no
such method exists, it calles self.irc_unknown.

twisted.im.ircsupport by default prints an error message for each
unknown command it recieves. Slashnet in particular seems to like to
send a lot of them, and it clutters up my screen. This patch simply
comments out the print statement and adds a 'pass'.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "I've got this brilliant idea but I don't know where it is." -- Beth Allen
|
-------------- next part --------------
Index: twisted/im/ircsupport.py
===================================================================
RCS file: /cvs/Twisted/twisted/im/ircsupport.py,v
retrieving revision 1.18
diff -u -r1.18 ircsupport.py
--- twisted/im/ircsupport.py	24 Oct 2002 12:03:41 -0000	1.18
+++ twisted/im/ircsupport.py	2 Nov 2002 12:18:06 -0000
@@ -131,6 +131,12 @@
             return
         self.chat.getConversation(self.getPerson(username)).showMessage(message)
 
+    def noticed(self, user, channel, message):
+        """I don't think there's any real reason that a chat client should
+        have to deal with notices.
+        """
+        pass
+
     def action(self,username,channel,emote):
         username=string.split(username,'!',1)[0]
         if username==self.name: return
@@ -221,7 +227,8 @@
         del self._ingroups[fromNick]
 
     def irc_unknown(self, prefix, command, params):
-        print "unknown message from IRCserver. prefix: %s, command: %s, params: %s" % (prefix, command, params)
+        #print "unknown message from IRCserver. prefix: %s, command: %s, params: %s" % (prefix, command, params)
+        pass
 
     # GTKIM calls
     def joinGroup(self,name):

From twisted at moshez.org  Sat Nov  2 06:02:45 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 2 Nov 2002 13:02:45 -0000
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102121918.GB850@ferd2.thristian.org>
References: <20021102121918.GB850@ferd2.thristian.org>
Message-ID: <20021102130245.9762.qmail@green.zadka.com>

On Sat, 2 Nov 2002, screwtape at froup.com wrote:

> However, twisted.im.ircsupport subclasses IRCClient and does not
> override the 'noticed' method, so all twisted.im clients cannot tell
> the difference between a privmsg and a notice. This is really not a
> good thing, especially for an IM bot like mine. The attached patch
> fixes this in a brute force manner by making twisted.im.ircsupport
> drop all notices on the floor.

I'm trying to understand, does this mean no .im chat client can support
notices without jumping through hoops? In that case this is *VERY*
bad. People on #python whose clients filter out the chanserv notice
get treated rudely (for a good reason).




From screwtape at froup.com  Sat Nov  2 07:00:01 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 3 Nov 2002 01:00:01 +1100
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102130245.9762.qmail@green.zadka.com>
References: <20021102121918.GB850@ferd2.thristian.org> <20021102130245.9762.qmail@green.zadka.com>
Message-ID: <20021102140001.GC850@ferd2.thristian.org>

On Sat, Nov 02, 2002 at 01:02:45PM -0000, Moshe Zadka wrote:
> On Sat, 2 Nov 2002, screwtape at froup.com wrote:
> 
> > However, twisted.im.ircsupport subclasses IRCClient and does not
> > override the 'noticed' method, so all twisted.im clients cannot tell
> > the difference between a privmsg and a notice. This is really not a
> > good thing, especially for an IM bot like mine. The attached patch
> > fixes this in a brute force manner by making twisted.im.ircsupport
> > drop all notices on the floor.
> 
> I'm trying to understand, does this mean no .im chat client can support
> notices without jumping through hoops? In that case this is *VERY*
> bad. People on #python whose clients filter out the chanserv notice
> get treated rudely (for a good reason).

As I understand it, it works like this:

* ircsupport drops notices on the floor
  - people on #python get treated rudely, for whatever reason (I've
    never been to #python).
* ircsupport maps notices onto privmsgs
  - IM clients can't tell the difference, and might do stupid things
    to notices that they shouldn't do (sample circumstances might be
    bots or "I'm away right now, but your message has been logged"
    messages.)
* ircsupport keeps them seperate, and we change all the rest of
  twisted.im to understand the difference between notices and privmsgs
  even though pretty much no IM system besides IRC implements it.
  - I get the feeling that twisted.im is supposed to be the
    intersection of all IM protocols, rather than the union.

There are of course other solutions - notices could be logged to the
console and not passed through the twisted.im framework, or maybe we
could add another piece of metadata, the same way that actions are
handled.

I'm curious - exactly what happens to people on #python whose clients
filter out the chanserv notice?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "We've got a lot in common" "I've always thought so, too." -- M*A*S*H
|



From twisted at moshez.org  Sat Nov  2 07:40:05 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 2 Nov 2002 14:40:05 -0000
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102140001.GC850@ferd2.thristian.org>
References: <20021102140001.GC850@ferd2.thristian.org>, <20021102121918.GB850@ferd2.thristian.org> <20021102130245.9762.qmail@green.zadka.com>
Message-ID: <20021102144005.10888.qmail@green.zadka.com>

On Sun, 3 Nov 2002, screwtape at froup.com wrote:

> * ircsupport drops notices on the floor
>   - people on #python get treated rudely, for whatever reason (I've
>     never been to #python).

See below.

> * ircsupport maps notices onto privmsgs
>   - IM clients can't tell the difference, and might do stupid things
>     to notices that they shouldn't do (sample circumstances might be
>     bots or "I'm away right now, but your message has been logged"
>     messages.)

Indeed, that would be bad.

> * ircsupport keeps them seperate, and we change all the rest of
>   twisted.im to understand the difference between notices and privmsgs
>   even though pretty much no IM system besides IRC implements it.
>   - I get the feeling that twisted.im is supposed to be the
>     intersection of all IM protocols, rather than the union.

Why? Certainly, other protocols might develop notices too. I definitely
think the native .words protocol should support them. If a client has
code to (potentially) display notices in some manner, and the protocol
it was using didn't support notices, the client wouldn't get that code
activated. Certainly not the end of the world.

> There are of course other solutions - notices could be logged to the
> console and not passed through the twisted.im framework

That's equivalent to dropping them on the floor, or worse.

> I'm curious - exactly what happens to people on #python whose clients
> filter out the chanserv notice?

The client filters out the chanserv notice containing URL to the FAQ,
they don't read the faq and...well, I hardly need to spell out what
happens next, right? Bottom line, they get told to "fix their client
or get a better one".



From glyph at twistedmatrix.com  Sat Nov  2 09:57:17 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 02 Nov 2002 10:57:17 -0600 (CST)
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102121918.GB850@ferd2.thristian.org>
References: <20021102121918.GB850@ferd2.thristian.org>
Message-ID: <20021102.105717.74755582.glyph@twistedmatrix.com>


On Sat, 2 Nov 2002 23:19:18 +1100, screwtape at froup.com wrote:

> While developing my twisted.im bot (new this week! database access and an
> infobot-style plugin!) I've come up against two seperate annoyances. This
> patch fixes both of them.

Glad you're making progress!  I'm sorry that twisted.im is annoying you :-(.
Hopefully I can give some guidance as to how it's _supposed_ to work...

> Number 1: the IRC protocol defines (among other things) two message types -
> privmsg and notice. They are identical in every respect except that a notice
> must not be automatically replied to.

Except when they should be automatically replied to.  Such as the notice that
NickServ gives you upon login, or one of the various notices that older
spambots will generate in response to a VERSION directive.

This is one of the worse excresences of the IRC protocol and I'd like to not
see promoted to the higher levels of abstractions in twisted.im.  What you're
semantically communicating is metadata about the message ("please don't
autorespond to this (unless you really want to)") and not a wholly different
type of message.  So I've committed a different fix :-).  The "metadata"
dictionary passesd to showMessage and showGroupMessage is designed to
encapsulate this sort of protocol-specific need, so IRC "notice" messages will
have an entry in the metadata dictionary of {"dontAutoRespond": 1}.

I just committed a fix that does this... if you're using CVS, your bot can now
check for that flag in the metadata dict and drop the message on the floor
appropriately.

For t.im's default use case (end-user chat application) whether or not robots
should automatically respond to a certain type of message is completely
irrelevant to its display.

> Number 2: [ ... ] twisted.im.ircsupport by default prints an error message
> for each unknown command it recieves. Slashnet in particular seems to like to
> send a lot of them, and it clutters up my screen. This patch simply comments
> out the print statement and adds a 'pass'.

Hmm... that behavior should at least be customizeable with a flag... I
personally have used that console output a number of times, and it has been
invaluable in debugging certain things in twisted.im on various occasions.  If
you don't want the output going to the console, there should be a separate log.
Perhaps you could specifically ignore the slashnet message types you don't
want?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021102/b6b9f8dc/attachment.sig>

From johnfabel at btinternet.com  Sat Nov  2 10:08:14 2002
From: johnfabel at btinternet.com (John Abel)
Date: Sat, 2 Nov 2002 17:08:14 -0000
Subject: [Twisted-Python] Version Of IM That Works With Tkinter?
Message-ID: <00c801c28292$716d4da0$66656565@hallows>

Hi,

I was looking to run IM on a Win32 machine, but both scripts, im.py and t-im.py, require GTK.  According to the documentation that accompanies Twisted, IM should run with Tkinter.  Does anyone have a copy that does?

Thanks

John
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20021102/a377376a/attachment.html>

From iko at cd.chalmers.se  Sat Nov  2 10:35:44 2002
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Sat, 02 Nov 2002 18:35:44 +0100
Subject: [Twisted-Python] SMTP 
In-Reply-To: Message from Jp Calderone <exarkun@meson.dyndns.org> 
   of "Fri, 01 Nov 2002 23:05:58 EST." <20021102040558.GA2678@meson.dyndns.org> 
References: <200210312036.g9VKaH7O031180@fido.strakt.com> <20021101060559.24216.qmail@green.zadka.com> <200211012334.gA1NYpc5021869@theraft.strakt.com> <20021102040558.GA2678@meson.dyndns.org> 
Message-ID: <200211021735.SAA04244@haddock.cd.chalmers.se>

In a message of Fri, 01 Nov 2002 23:05:58 EST, Jp Calderone writes:
>   Applied with no problem, but:
> 
> ======================================================================
> ERROR: list() -> new list
> ----------------------------------------------------------------------
> Traceback (most recent call last):
>   File "./pyunit/unittest.py", line 210, in __call__
>     testMethod()
> TypeError: 'list' object is not callable
> ======================================================================

Yes, I only fixed the test case for smtp.SMTP (since that's the only
class I rewrote). I couldn't get the other tests to run either. I'll
look at the other tests as I look at the other parts of the smtp
module (which I plan to do). Running the test for smtp.SMTP I get:

$ python2.2 pyunit/unittest.py twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer
---- Running Test: twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer ----- 
.
----------------------------------------------------------------------
Ran 1 tests in 0.034s

OK

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From screwtape at froup.com  Sat Nov  2 14:42:07 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 3 Nov 2002 08:42:07 +1100
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102.105717.74755582.glyph@twistedmatrix.com>
References: <20021102121918.GB850@ferd2.thristian.org> <20021102.105717.74755582.glyph@twistedmatrix.com>
Message-ID: <20021102214207.GA20463@ferd2.thristian.org>

On Sat, Nov 02, 2002 at 10:57:17AM -0600, Glyph Lefkowitz wrote:
> On Sat, 2 Nov 2002 23:19:18 +1100, screwtape at froup.com wrote:
> 
> > While developing my twisted.im bot (new this week! database access and an
> > infobot-style plugin!) I've come up against two seperate annoyances. This
> > patch fixes both of them.
> 
> Glad you're making progress!  I'm sorry that twisted.im is annoying you :-(.
> Hopefully I can give some guidance as to how it's _supposed_ to work...

Oh, neat.

To be truthful, most of it is pretty nifty. :)

I'd be interested to see if my bot also works with AIM and
twisted.words, though - I don't have an account with either so I can't
test... is anyone working on a Jabber protocol for Twisted? :)

> > Number 1: the IRC protocol defines (among other things) two message types -
> > privmsg and notice. They are identical in every respect except that a notice
> > must not be automatically replied to.
> 
> Except when they should be automatically replied to.  Such as the notice that
> NickServ gives you upon login, or one of the various notices that older
> spambots will generate in response to a VERSION directive.

Oh. That's a right pain, that is.

> This is one of the worse excresences of the IRC protocol and I'd like to not
> see promoted to the higher levels of abstractions in twisted.im.  What you're
> semantically communicating is metadata about the message ("please don't
> autorespond to this (unless you really want to)") and not a wholly different
> type of message.  So I've committed a different fix :-).  The "metadata"
> dictionary passesd to showMessage and showGroupMessage is designed to
> encapsulate this sort of protocol-specific need, so IRC "notice" messages will
> have an entry in the metadata dictionary of {"dontAutoRespond": 1}.
> 
> I just committed a fix that does this... if you're using CVS, your bot can now
> check for that flag in the metadata dict and drop the message on the floor
> appropriately.

Heh. I was going to post 'how about I just dump it in the metadata
dict' and look into writing a patch later today. Thanks!

> For t.im's default use case (end-user chat application) whether or not robots
> should automatically respond to a certain type of message is completely
> irrelevant to its display.

Indeed

> > Number 2: [ ... ] twisted.im.ircsupport by default prints an error
> > message for each unknown command it recieves. Slashnet in
> > particular seems to like to send a lot of them, and it clutters up
> > my screen. This patch simply comments out the print statement and
> > adds a 'pass'.
> 
> Hmm... that behavior should at least be customizeable with a flag...
> I personally have used that console output a number of times, and it
> has been invaluable in debugging certain things in twisted.im on
> various occasions. 

When I was doing IRC-specific things, I too have found it incredibly
useful. But, being unconcerned with low-level details of the protocol
at the moment, I find it annoying.

> If you don't want the output going to the
> console, there should be a separate log.  Perhaps you could
> specifically ignore the slashnet message types you don't want?

My theory was that if a developer wanted that level of detail from
ircsupport.py, they could just go and uncomment the print statement.
:/

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| <Nibbles> DO NOT GET ME A HERRING!
|



From twisted at itamarst.org  Sat Nov  2 17:27:40 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 2 Nov 2002 19:27:40 -0500
Subject: [Twisted-Python] SMTP
In-Reply-To: <200211021735.SAA04244@haddock.cd.chalmers.se>
References: <200210312036.g9VKaH7O031180@fido.strakt.com>
	<20021101060559.24216.qmail@green.zadka.com>
	<200211012334.gA1NYpc5021869@theraft.strakt.com>
	<20021102040558.GA2678@meson.dyndns.org>
	<200211021735.SAA04244@haddock.cd.chalmers.se>
Message-ID: <20021102192740.4a12cd8c.twisted@itamarst.org>

On Sat, 02 Nov 2002 18:35:44 +0100
Anders Hammarquist <iko at cd.chalmers.se> wrote:

> $ python2.2 pyunit/unittest.py
> twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer---- Running
> Test: twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer 
Please note that Twisted needs to support 2.1 as well, it's recommended
you run tests under both 2.1 and 2.2. Though that may be totally
unrelated to the issue here.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From iko at cd.chalmers.se  Sat Nov  2 17:54:07 2002
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Sun, 03 Nov 2002 01:54:07 +0100
Subject: [Twisted-Python] SMTP 
In-Reply-To: Message from Itamar Shtull-Trauring <twisted@itamarst.org> 
   of "Sat, 02 Nov 2002 19:27:40 EST." <20021102192740.4a12cd8c.twisted@itamarst.org> 
References: <200210312036.g9VKaH7O031180@fido.strakt.com> <20021101060559.24216.qmail@green.zadka.com> <200211012334.gA1NYpc5021869@theraft.strakt.com> <20021102040558.GA2678@meson.dyndns.org> <200211021735.SAA04244@haddock.cd.chalmers.se> <20021102192740.4a12cd8c.twisted@itamarst.org> 
Message-ID: <200211030054.BAA07771@haddock.cd.chalmers.se>

In a message of Sat, 02 Nov 2002 19:27:40 EST, Itamar Shtull-Trauring writes:
>On Sat, 02 Nov 2002 18:35:44 +0100
>Anders Hammarquist <iko at cd.chalmers.se> wrote:
>
>> $ python2.2 pyunit/unittest.py
>> twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer---- Running
>> Test: twisted.test.test_smtp.AnotherSMTPTestCase.testBuffer 
>Please note that Twisted needs to support 2.1 as well, it's recommended
>you run tests under both 2.1 and 2.2. Though that may be totally
>unrelated to the issue here.

There shouldn't be any 2.2-specific stuff in there, using 2.2 is just
habbit (as the stuff we're using it for needs 2.2). Running the same
test using python 2.1 works, so there shouldn't be any major 2.1
incompatibilities ;-)

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From twisted at itamarst.org  Sat Nov  2 17:56:52 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 2 Nov 2002 19:56:52 -0500
Subject: [Twisted-Python] SMTP
In-Reply-To: <200211030054.BAA07771@haddock.cd.chalmers.se>
References: <200210312036.g9VKaH7O031180@fido.strakt.com>
	<20021101060559.24216.qmail@green.zadka.com>
	<200211012334.gA1NYpc5021869@theraft.strakt.com>
	<20021102040558.GA2678@meson.dyndns.org>
	<200211021735.SAA04244@haddock.cd.chalmers.se>
	<20021102192740.4a12cd8c.twisted@itamarst.org>
	<200211030054.BAA07771@haddock.cd.chalmers.se>
Message-ID: <20021102195652.3707be78.twisted@itamarst.org>

On Sun, 03 Nov 2002 01:54:07 +0100
Anders Hammarquist <iko at cd.chalmers.se> wrote:

> There shouldn't be any 2.2-specific stuff in there, using 2.2 is just
> habbit (as the stuff we're using it for needs 2.2). Running the same
> test using python 2.1 works, so there shouldn't be any major 2.1
> incompatibilities ;-)

OK, I'll try to figure out what's the problem with the tests if no one
else volunteers.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From developer at csrules.dyndns.org  Sat Nov  2 22:13:02 2002
From: developer at csrules.dyndns.org (Maniac -)
Date: Sat, 2 Nov 2002 23:13:02 -0600 (CST)
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102121918.GB850@ferd2.thristian.org>
References: <20021102121918.GB850@ferd2.thristian.org>
Message-ID: <2929.192.168.2.20.1036300382.squirrel@seraphine.csrules.dyndns.org>

Is this in cvs somewhere?

-M

> While developing my twisted.im bot (new this week! database access and
> an infobot-style plugin!)





From screwtape at froup.com  Sun Nov  3 01:09:17 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 3 Nov 2002 19:09:17 +1100
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <2929.192.168.2.20.1036300382.squirrel@seraphine.csrules.dyndns.org>
References: <20021102121918.GB850@ferd2.thristian.org> <2929.192.168.2.20.1036300382.squirrel@seraphine.csrules.dyndns.org>
Message-ID: <20021103080917.GB20463@ferd2.thristian.org>

On Sat, Nov 02, 2002 at 11:13:02PM -0600, Maniac - wrote:

> > While developing my twisted.im bot (new this week! database access
> > and an infobot-style plugin!)
>
> Is this in cvs somewhere?

Sadly, no. None of my weekend projects have ever been available via
CVS, I've never written anything of sufficient interest before.

Screwtape,
...feel free to visit #afda on irc.slashnet.org and say 'Mooby: help'

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| This empty tagline? It's where my conversation piece used to be.
|



From screwtape at froup.com  Sun Nov  3 04:44:43 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 3 Nov 2002 22:44:43 +1100
Subject: [Twisted-Python] New release of the twisted IM bot
Message-ID: <20021103114443.GC20463@ferd2.thristian.org>

Yes, another raw tarball of my code.

New in this update:

- infobot plugin with an SQL backend - currently uses sqlite and
  pysqlite (see http://pysqlite.sf.net), but porting it to some other
  SQL database should be trivial.
- A README file.
- Properly ignores NOTICEs and ACTIONs (requires Twisted from current
  CVS to ignore NOTICEs.

Location:

	http://members.optusnet.com.au/thristian/twisted-bot-0.1.tar.gz

Currently, the bot is lurking in #afda on irc.slashnet.org under the
name of 'Mooby', if you want to poke at it.

Screwtape,
...still waiting for his first bug report.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "You seem cool for a naked chick in a booth - let's be pals someday." -- PUSA
|



From lists at morpheus.demon.co.uk  Sat Nov  2 10:51:22 2002
From: lists at morpheus.demon.co.uk (Paul Moore)
Date: Sat, 02 Nov 2002 17:51:22 +0000
Subject: [Twisted-Python] Some comments on twisted.news
References: <n2m-g.y98qpdnu.fsf@morpheus.demon.co.uk> <20021101060145.GA20898@meson.dyndns.org>
Message-ID: <n2m-g.of97eu79.fsf@morpheus.demon.co.uk>

Jp Calderone <exarkun at meson.dyndns.org> writes:

> I agree that \n would probably be preferable, this was just
> sloppyness on my part in the initial implementation.  I think it
> could be changed in such a way so as not to break existing code, but
> allow new code to use \n (similar to how LineReceiver works), and I
> think this would be a good thing to do.

That would be good. As a Windows user, I have a lot of experience with
nasty LF/CRLF issues. Most of them respond reasonably well to the "be
liberal in what you accept and strict in what you produce" philosophy.

>   Hmmm.  I have an {indeterminant}-term goal of creating a better backend
> interface.  If this isn't a pressing concern for you now, I'd rather put it
> off until that happened (though I'd have no problem if you sent a patch that
> made the necessary changes).

That's fine by me - I don't have a major issue with this. What I'll do
(if and when I get the time) is to post a copy of the design I used
for my backend interface - it may be of interest.

> I've been away a while, so maybe you've already gone ahead and done
> some of this?  If not, I might have a crack at it myself.  I'll wait
> to hear what, if anything, you've done thus far though.

Unfortunately, events overtook me, and I haven't had a chance to get
back to this yet. When I do, I have 2 things to look at - on the one
hand, I need to complete the job of implementing the news server I
needed this for in the first place, and in the second, I'd like to
help by supplying some patches. I suspect that getting the job done
may have to take priority, though :-)

I'll keep looking at this, though, and discuss further with you.

Paul.

-- 
This signature intentionally left blank



From developer at csrules.dyndns.org  Sun Nov  3 07:54:44 2002
From: developer at csrules.dyndns.org (Maniac -)
Date: Sun, 3 Nov 2002 08:54:44 -0600 (CST)
Subject: [Twisted-Python] Another IRC patch.
In-Reply-To: <20021102214207.GA20463@ferd2.thristian.org>
References: <20021102121918.GB850@ferd2.thristian.org>
        <20021102.105717.74755582.glyph@twistedmatrix.com>
        <20021102214207.GA20463@ferd2.thristian.org>
Message-ID: <3461.192.168.2.20.1036335284.squirrel@seraphine.csrules.dyndns.org>

=
>
> I'd be interested to see if my bot also works with AIM and
> twisted.words,

That would be cool

> though - I don't have an account with either so I can't
> test... is anyone working on a Jabber protocol for Twisted? :)

Ah jabber for twisted. I'd love that too!

-M





From spam at polynode.com  Sun Nov  3 19:14:57 2002
From: spam at polynode.com (Alex)
Date: Sun, 03 Nov 2002 21:14:57 -0500
Subject: [Twisted-Python] Problem getting one woven.Widget to include another
Message-ID: <5.1.1.6.0.20021103205435.00b74fb0@coral.tufts.edu>

I'm setting up a site using Woven, and I've hit a strange problem.

I've got a subclass of woven.widget.Widget called VolumeWidget, and that 
widget is used to display a list of links within a page.  I've got another 
class called VolumeListWidget, the only purpose of which is to display a 
list of these VolumeWidgets.

class VolumeListWidget(widgets.Widget):
     def setUp(self, request, node, data):
         for volume in data.get('volumes') or []:
             volume_model = VolumeModel(volume)
             volume_div = VolumeWidget(volume_model)
             volume_div.tagName = 'div'
             self.add(volume_div)

VolumeListWidget's not working.  Instead of displaying a <div> that 
contains all the stuff VolumeWidget is supposed to contain [as defined in 
VolumeWidget's setUp() function], it's displaying an empty <div/>.  I'm not 
sure what I'm doing wrong, if anything, but it's too strange to tell.

Example (along with some code) is available here:

http://polynode.com:8889/content.rpy/testvolumelist

To see a working example of VolumeWidget, go here:

http://polynode.com:8889/content.rpy/testvolume

I will appreciate any help anyone can lend me.





From lordvan at lordvan.com  Mon Nov  4 02:20:34 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Mon, 4 Nov 2002 10:20:34 +0100 (CET)
Subject: [Twisted-Python] twisted.enterprise.row Where clauses (and maybe other conditions.)
Message-ID: <65356.62.47.64.183.1036401634.squirrel@webmail.lordvan.com>

hi!

just wondered if it would be acceptable to add either grouping and e.g. OR
to whereClause or to make it possible to specify the WHERE CLAUSE
manually(which could be abused for other things too .. i know..)

another thing is an 'ORDER BY' Clause ..

both should be easy to add afaik .. (code for where-clause starting at
line 129 of sqlreflector.py)

what do u think?
opinions, suggestions?

greetings, LordVan


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/





From jml at mumak.net  Mon Nov  4 02:20:44 2002
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 4 Nov 2002 20:20:44 +1100
Subject: [Twisted-Python] Reflector init patch (repost)
Message-ID: <200211042020.44098.jml@mumak.net>

On Thu, Oct 31, 2002 at 11:33:01AM +1100, Jonathan M. Lange wrote:

With reference to twisted.enterprise.reflector not making a Deferred available 
on construction, despite it being an asynchronous operation...

> Suggestions include having a populatedDeferred as a member (rather than
> populatedCallback)

I've been having troubles with my mail recently. In case this did not come 
through, here is the patch again.

Comments appreciated. Commits even more so.

Index: twisted/enterprise/reflector.py
===================================================================
RCS file: /cvs/Twisted/twisted/enterprise/reflector.py,v
retrieving revision 1.9
diff -u -r1.9 reflector.py
--- twisted/enterprise/reflector.py     16 Oct 2002 04:27:29 -0000      1.9
+++ twisted/enterprise/reflector.py     31 Oct 2002 00:57:59 -0000
@@ -20,6 +20,7 @@
 from twisted.enterprise import adbapi
 from twisted.enterprise.util import DBError, getKeyColumn, quote, _TableInfo, 
_TableRelationship
 from twisted.enterprise.row import RowObject
+from twisted.internet import defer
 
 class Reflector:
     """Base class for enterprise reflectors. This implements rowCacheing.
@@ -61,6 +62,7 @@
         
         from twisted.internet import reactor
         reactor.callLater(0, self._really_populate)
+        self.populatedDeferred = defer.Deferred()
 
     def _really_populate(self):
         """Implement me to populate schema information for the reflector.
Index: twisted/enterprise/sqlreflector.py
===================================================================
RCS file: /cvs/Twisted/twisted/enterprise/sqlreflector.py,v
retrieving revision 1.10
diff -u -r1.10 sqlreflector.py
--- twisted/enterprise/sqlreflector.py  14 Oct 2002 22:34:21 -0000      1.10
+++ twisted/enterprise/sqlreflector.py  31 Oct 2002 00:58:00 -0000
@@ -49,6 +49,7 @@
         defe = self.runInteraction(self._transPopulateSchema)
         if self.populatedCallback:
             defe.addCallbacks(self.populatedCallback)
+        defe.chainDeferred(self.populatedDeferred)
 
     def _transPopulateSchema(self, transaction):
         """Used to construct the row classes in a single interaction.




From a.d.stribblehill at durham.ac.uk  Mon Nov  4 05:26:07 2002
From: a.d.stribblehill at durham.ac.uk (Andrew Stribblehill)
Date: Mon, 4 Nov 2002 12:26:07 +0000
Subject: [Twisted-Python] Some comments on twisted.news
In-Reply-To: <20021101060145.GA20898@meson.dyndns.org>
References: <n2m-g.y98qpdnu.fsf@morpheus.demon.co.uk> <20021101060145.GA20898@meson.dyndns.org>
Message-ID: <20021104122607.GE30202@womble.dur.ac.uk>

Quoting Jp Calderone <exarkun at meson.dyndns.org> (2002-11-01 06:01:45 GMT):
> On Tue, Oct 22, 2002 at 06:49:09PM +0100, Paul Moore wrote:
> > 3. It would be nice if the server handled the translation to CRLF, so
> >    that backends could return data with lines separated by \n, and the
> >    server class would convert that to \r\n. After all, \n is the
> >    "normal" end of line character internal to Python code, and \r\n is
> >    a feature of the NNTP protocol, so the protocol driver should be
> >    responsible for the conversion (IMHO). Of course, this is a
> >    behaviour change, which could break existing backends, so maybe
> >    it's not practical to make this change.
> 
>   I agree that \n would probably be preferable, this was just sloppyness on
> my part in the initial implementation.  I think it could be changed in such
> a way so as not to break existing code, but allow new code to use \n
> (similar to how LineReceiver works), and I think this would be a good thing
> to do.

I posted a patch a few months ago that took any of a number of line
endings. It seemed to get devnulled, and I haven't got a copy any
more but I suspect it's in the list archives. We do *have* list
archives, don't we?

-- 
CROMARTY



From twisted_low at contact.com.my  Tue Nov  5 00:54:46 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Tue,  5 Nov 2002 15:54:46 +0800
Subject: [Twisted-Python] Question regarding widgets
Message-ID: <200211051554.AA322306338@contact.com.my>

Dear People,

I am newbie with some background using zope. I am trying to use twisted in a web application that is going to be launched in my office. Problem now is that i cannot get the example to work ( Example ) ..... 

Specs :

1. os --> windows 98
2. python --> python-2.2.2

This is my autoexec.bat :


@SET PYTHONPATH=C:\python22\lib\site-packages\twisted\
@SET PYTHONPATH=C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH\

i can't seem to get the Example even to compile and looking through the docs doesn't seem to help much. One question can i use the --personal option on a windows machine ?
I get an error that says it cannot find the pwd module. Can someone please help me or at least point me somewhere where there are some docs ???

Thanks in advance



_____________________________________________________________________
iRepublics.com - Free Web Hosting for Businesses
33MB webspace free, SMS messaging, 30 email accounts, your own domain name
Sign up Now at http://www.iRepublics.com



From twisted_low at contact.com.my  Tue Nov  5 01:54:43 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Tue,  5 Nov 2002 16:54:43 +0800
Subject: [Twisted-Python] question
Message-ID: <200211051654.AA192807066@contact.com.my>

in the book to get the example for widget working it says that we have to do a twistd -g Example and that this Example should be placed in a ~/TwistedPlugins directory. This is not clear at all on a windows based machine. Where the heck is this TwistedPlugins directory supposed to exist ? .... 

in c:\python22\scripts ??? Where ????

_____________________________________________________________________
iRepublics.com - Free Web Hosting for Businesses
33MB webspace free, SMS messaging, 30 email accounts, your own domain name
Sign up Now at http://www.iRepublics.com



From glyph at twistedmatrix.com  Tue Nov  5 02:20:40 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 05 Nov 2002 03:20:40 -0600 (CST)
Subject: [Twisted-Python] question
In-Reply-To: <200211051654.AA192807066@contact.com.my>
References: <200211051654.AA192807066@contact.com.my>
Message-ID: <20021105.032040.59649309.glyph@twistedmatrix.com>

On Tue,  5 Nov 2002 16:54:43 +0800, "lals;dfjsd" <twisted_low at contact.com.my> wrote:

> in the book to get the example for widget working it says that we have to do
> a twistd -g Example and that this Example should be placed in a
> ~/TwistedPlugins directory. This is not clear at all on a windows based
> machine. Where the heck is this TwistedPlugins directory supposed to exist ?
> ....

That documentation is ancient and probably incorrect by now... apologies for
the UNIX centricity.  The old-style directory-based plugins were an experiment
which failed.  Nowadays "plugin" means something a little more pythonic (see
http://www.twistedmatrix.com/documents/howto/plugin ).

At any rate, twisted.web.widgets is quite out of date, gradually being
deprecated, and not nearly as good an idea as we originally thought.  If you
want to do Twisted + web applications, you want to use twisted.web.woven.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021105/46328a4a/attachment.sig>

From glyph at twistedmatrix.com  Tue Nov  5 02:41:19 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 05 Nov 2002 03:41:19 -0600 (CST)
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <200211051554.AA322306338@contact.com.my>
References: <200211051554.AA322306338@contact.com.my>
Message-ID: <20021105.034119.21936440.glyph@twistedmatrix.com>

On Tue,  5 Nov 2002 15:54:46 +0800, "lals;dfjsd" <twisted_low at contact.com.my> wrote:

> I am newbie with some background using zope. I am trying to use twisted in a
> web application that is going to be launched in my office. Problem now is
> that i cannot get the example to work ( Example ) .....

Can you expound a little more on which example you're talking about?  "the
example [...] (Example)" is not very specific in a framework as large as
Twisted.

> Specs :

> 1. os --> windows 98
> 2. python --> python-2.2.2

It should work, though I would recommend upgrading to a more sane version of
Windows whenever you've got the chance :-)

> This is my autoexec.bat :

> @SET PYTHONPATH=C:\python22\lib\site-packages\twisted\
> @SET PYTHONPATH=C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH\

@echo %PYTHONPATH%

will probably show you that your PYTHONPATH is
"C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH"; if you want to add things to the
path rather than reset it entirely, you want it to look like:

    @SET PYTHONPATH=C:\python22\lib\site-packages\twisted\
    @SET PYTHONPATH=%PYTHONPATH%;C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH\

IIRC.  However, I don't understand what you're trying to do here.  If you have
Twisted installed in your C:\python22\lib\site-packages (as with setup.py or
the .exe installer) then you shouldn't be adding anything to your PYTHONPATH to
get 'twisted' to import.

> i can't seem to get the Example even to compile and looking through the docs
> doesn't seem to help much. One question can i use the --personal option on a
> windows machine ?

No.  Windows doesn't have the notion of unix sockets.  Even if you could, there
wouldn't be much of a point: windows security (especially on 9x!) is even more
of a disaster than UNIX, so separating privileges between processes doesn't
help much of anything if you're running them on the same machine.

Why do you think you want the --personal option?  It's designed for multi-user
servers where you've got lots of different people running webservers and you
want them all to be accessible through port 80.

> I get an error that says it cannot find the pwd module. Can someone please
> help me or at least point me somewhere where there are some docs ???

The pwd module is for determining your UNIX username and home directory (which,
surprise, you don't have ^_^).  The --personal option is pretty much useless to
you.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021105/c24dd4e1/attachment.sig>

From glyph at twistedmatrix.com  Tue Nov  5 02:49:22 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 05 Nov 2002 03:49:22 -0600 (CST)
Subject: [Twisted-Python] Version Of IM That Works With Tkinter?
In-Reply-To: <00c801c28292$716d4da0$66656565@hallows>
References: <00c801c28292$716d4da0$66656565@hallows>
Message-ID: <20021105.034922.111205847.glyph@twistedmatrix.com>

On Sat, 2 Nov 2002 17:08:14 -0000, "John Abel" <johnfabel at btinternet.com> wrote:

> I was looking to run IM on a Win32 machine, but both scripts, im.py and
> t-im.py, require GTK.  According to the documentation that accompanies
> Twisted, IM should run with Tkinter.  Does anyone have a copy that does?

Unfortunately the older version of IM worked with Tkinter but it does no
longer.  There is a nascent port jython, though, if you're feeling adventurous.

Rumour has it that there is a PyGTK (0.6.x, gtk 1.2.x) port to Windows which
will allow you to run IM just fine... I wish that said rumour would finally end
up archived on this list someplace, but that's all I know :).

When I've got the time to port IM to gtk2 it will be much more straightforward
to get the gtk version running.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021105/6dfd0430/attachment.sig>

From lordvan at lordvan.com  Tue Nov  5 05:52:02 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Tue, 5 Nov 2002 13:52:02 +0100 (CET)
Subject: [Twisted-Python] patch for twisted.enterprise.row
Message-ID: <65460.62.47.64.183.1036500722.squirrel@webmail.lordvan.com>

hi!

Patch for twisted.enterprise.row to allow a whereClause specified as
String too and to allow ORDER BY clause(will be checked if it's a valid
column).

while doing this i found out that in twisted.enterprise.row the
variable(String) 'type' is used. 'type' is a built-in function of Python
and i don't think the author wanted to overwrite it so i changed it to
Type.

all changes have been made on cvs version and are verified to work

Any comments,suggestions, ...

greetings LordVan


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: sqlreflector-20021105.patch
Type: application/octet-stream
Size: 7866 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021105/cf7e0d37/attachment-0002.obj>

From lordvan at lordvan.com  Tue Nov  5 05:58:51 2002
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Tue, 5 Nov 2002 13:58:51 +0100 (CET)
Subject: [Twisted-Python] authwovenquotes.rpy
Message-ID: <65401.62.47.64.183.1036501131.squirrel@webmail.lordvan.com>

Hi!

some time ago i re-wrote wovenquotes.rpy to support auth too ...
i promised radix to write docs and submit them(sorry but i had no time
yet) so i just submit the file now

suggestions,comments(,flames)?

greetings, LordVan
P.S.: i'll write the doc asap


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z-
------END GEEK CODE BLOCK------


-----------------------------------------
This email was sent using SquirrelMail.
   "Webmail for nuts!"
http://squirrelmail.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: authwovenquotes.rpy
Type: application/octet-stream
Size: 1852 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021105/41651c1c/attachment-0002.obj>

From tv at twistedmatrix.com  Tue Nov  5 05:16:28 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 5 Nov 2002 14:16:28 +0200
Subject: [Twisted-Python] IMAP client
In-Reply-To: <1036081167.1571.40.camel@mingus>
References: <1036018639.692.74.camel@mingus> <20021030.210619.78707311.glyph@twistedmatrix.com> <1036081167.1571.40.camel@mingus>
Message-ID: <20021105121628.GA23360@tv.stonesoft.com>

On Thu, Oct 31, 2002 at 11:19:28AM -0500, Abe Fettig wrote:
> There are a couple of servers I'd like to use that aren't available in
> Twisted yet (to the best of my knowledge) - IMAP and WebDAV.  Is anyone
> working on implementing these?  If so, I'd be happy to help.

	IMAP is a vomit-inducing protocol.. if someone wants to start
	implementing an IMAP (client), the best start is probably
	in the offlineimap project.



From twisted at itamarst.org  Tue Nov  5 07:55:45 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 5 Nov 2002 09:55:45 -0500
Subject: [Twisted-Python] question
In-Reply-To: <200211051654.AA192807066@contact.com.my>
References: <200211051654.AA192807066@contact.com.my>
Message-ID: <20021105095545.5837251a.twisted@itamarst.org>

On Tue,  5 Nov 2002 16:54:43 +0800
"lals;dfjsd" <twisted_low at contact.com.my> wrote:

> in c:\python22\scripts ??? Where ????

c:\Python22\Scripts\twistd.py is available in 1.0 installed from an
.exe.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From twisted_low at contact.com.my  Tue Nov  5 17:44:19 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Wed,  6 Nov 2002 08:44:19 +0800
Subject: [Twisted-Python] question
Message-ID: <200211060844.AA1192427852@contact.com.my>





---------- Original Message ----------------------------------
From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Reply-To: twisted-python at twistedmatrix.com
Date: Tue, 05 Nov 2002 03:20:40 -0600 (CST)

>On Tue,  5 Nov 2002 16:54:43 +0800, "lals;dfjsd" <twisted_low at contact.com.my> wrote:
>
>> in the book to get the example for widget working it says that we have to do
>> a twistd -g Example and that this Example should be placed in a
>> ~/TwistedPlugins directory. This is not clear at all on a windows based
>> machine. Where the heck is this TwistedPlugins directory supposed to exist ?
>> ....
>
>That documentation is ancient and probably incorrect by now... apologies for
>the UNIX centricity.  The old-style directory-based plugins were an experiment
>which failed.  Nowadays "plugin" means something a little more pythonic (see
>http://www.twistedmatrix.com/documents/howto/plugin ).
>
>At any rate, twisted.web.widgets is quite out of date, gradually being
>deprecated, and not nearly as good an idea as we originally thought.  If you
>want to do Twisted + web applications, you want to use twisted.web.woven.

Okay if this is the case, can you let me know how macros is done using woven ? I come from a background of using zope and 
'<span tal:define-macros' ... I really need to know how to do macros in twisted. I have tried digging through the mailing list and asking in the channel but couldn't get a straight answer. Hopefully I can get an answer ...

Thanks in advance.


_____________________________________________________________________
iRepublics.com - Free Web Hosting for Businesses
33MB webspace free, SMS messaging, 30 email accounts, your own domain name
Sign up Now at http://www.iRepublics.com



From twisted_low at contact.com.my  Tue Nov  5 18:00:13 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Wed,  6 Nov 2002 09:00:13 +0800
Subject: [Twisted-Python] Question regarding widgets
Message-ID: <200211060900.AA27984246@contact.com.my>





---------- Original Message ----------------------------------
From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Reply-To: twisted-python at twistedmatrix.com
Date: Tue, 05 Nov 2002 03:41:19 -0600 (CST)

>On Tue,  5 Nov 2002 15:54:46 +0800, "lals;dfjsd" <twisted_low at contact.com.my> wrote:
>
>> I am newbie with some background using zope. I am trying to use twisted in a
>> web application that is going to be launched in my office. Problem now is
>> that i cannot get the example to work ( Example ) .....
>
>Can you expound a little more on which example you're talking about?  "the
>example [...] (Example)" is not very specific in a framework as large as
>Twisted.
>
>> Specs :
>
>> 1. os --> windows 98
>> 2. python --> python-2.2.2
>
>It should work, though I would recommend upgrading to a more sane version of
>Windows whenever you've got the chance :-)
>
>> This is my autoexec.bat :
>
>> @SET PYTHONPATH=C:\python22\lib\site-packages\twisted\
>> @SET PYTHONPATH=C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH\
>
>@echo %PYTHONPATH%
>
>will probably show you that your PYTHONPATH is
>"C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH"; if you want to add things to the
>path rather than reset it entirely, you want it to look like:
>
>    @SET PYTHONPATH=C:\python22\lib\site-packages\twisted\
>    @SET PYTHONPATH=%PYTHONPATH%;C:\web2\TWISTEDQUOTES\;C:\WEB2\MOHAN_KOTEH\
>
>IIRC.  However, I don't understand what you're trying to do here.  If you have
>Twisted installed in your C:\python22\lib\site-packages (as with setup.py or
>the .exe installer) then you shouldn't be adding anything to your PYTHONPATH to
>get 'twisted' to import.

Well following the example for woven, I thought that you needed to add to pythonpath where ever you are putting your code for your application, as in if I want to put my code in c:\web2\mohan_koteh\ then i should add this to the pythonpath to get it to work. Isn't it so ? I just kept on trying the woven examples but without success until i added the directory which i was working on to the pythonpath. Maybe I am doing something wrong here but can someone actually tell me how it is done ?

>
>> i can't seem to get the Example even to compile and looking through the docs
>> doesn't seem to help much. One question can i use the --personal option on a
>> windows machine ?
>
>No.  Windows doesn't have the notion of unix sockets.  Even if you could, there
>wouldn't be much of a point: windows security (especially on 9x!) is even more
>of a disaster than UNIX, so separating privileges between processes doesn't
>help much of anything if you're running them on the same machine.
>
>Why do you think you want the --personal option?  It's designed for multi-user
>servers where you've got lots of different people running webservers and you
>want them all to be accessible through port 80.
>
>> I get an error that says it cannot find the pwd module. Can someone please
>> help me or at least point me somewhere where there are some docs ???
>
>The pwd module is for determining your UNIX username and home directory (which,
>surprise, you don't have ^_^).  The --personal option is pretty much useless to
>you.
>
>-- 
> |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
> |   < _/ >   |  Lead Developer,  the Twisted project  |
> |  < ___/ >  |      http://www.twistedmatrix.com      |
>
>

_____________________________________________________________________
iRepublics.com - Free Web Hosting for Businesses
33MB webspace free, SMS messaging, 30 email accounts, your own domain name
Sign up Now at http://www.iRepublics.com



From andrew-twisted at puzzling.org  Tue Nov  5 18:12:12 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Nov 2002 12:12:12 +1100
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <200211060900.AA27984246@contact.com.my>
References: <200211060900.AA27984246@contact.com.my>
Message-ID: <20021106011212.GA2576@ritsuko.xware.cx>

On Wed, Nov 06, 2002 at 09:00:13AM +0800, lals;dfjsd wrote:
> >
> >IIRC.  However, I don't understand what you're trying to do here.  If you have
> >Twisted installed in your C:\python22\lib\site-packages (as with setup.py or
> >the .exe installer) then you shouldn't be adding anything to your PYTHONPATH to
> >get 'twisted' to import.
> 
> Well following the example for woven, I thought that you needed to add
> to pythonpath where ever you are putting your code for your
> application, as in if I want to put my code in c:\web2\mohan_koteh\
> then i should add this to the pythonpath to get it to work. Isn't it
> so ? I just kept on trying the woven examples but without success
> until i added the directory which i was working on to the pythonpath.
> Maybe I am doing something wrong here but can someone actually tell me
> how it is done ?

He's just pointing out that you shouldn't need to do anything special to
get Twisted itself to import -- the installer/setup.py should've done
that for you (anything in %PYTHONHOME%/Lib/site-packages is
automatically on the python path).

What you need to do with your own application that uses Twisted is a
different question.

-Andrew.




From twisted_low at contact.com.my  Tue Nov  5 18:12:52 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Wed,  6 Nov 2002 09:12:52 +0800
Subject: [Twisted-Python] Question regarding widgets
Message-ID: <200211060912.AA8454630@contact.com.my>





---------- Original Message ----------------------------------
From: Andrew Bennetts <andrew-twisted at puzzling.org>
Reply-To: twisted-python at twistedmatrix.com
Date: Wed, 6 Nov 2002 12:12:12 +1100

>On Wed, Nov 06, 2002 at 09:00:13AM +0800, lals;dfjsd wrote:
>> >
>> >IIRC.  However, I don't understand what you're trying to do here.  If you have
>> >Twisted installed in your C:\python22\lib\site-packages (as with setup.py or
>> >the .exe installer) then you shouldn't be adding anything to your PYTHONPATH to
>> >get 'twisted' to import.
>> 
>> Well following the example for woven, I thought that you needed to add
>> to pythonpath where ever you are putting your code for your
>> application, as in if I want to put my code in c:\web2\mohan_koteh\
>> then i should add this to the pythonpath to get it to work. Isn't it
>> so ? I just kept on trying the woven examples but without success
>> until i added the directory which i was working on to the pythonpath.
>> Maybe I am doing something wrong here but can someone actually tell me
>> how it is done ?
>
>He's just pointing out that you shouldn't need to do anything special to
>get Twisted itself to import -- the installer/setup.py should've done
>that for you (anything in %PYTHONHOME%/Lib/site-packages is
>automatically on the python path).
>
>What you need to do with your own application that uses Twisted is a
>different question.
>
>-Andrew.

Ummm so does that mean I have to add something to the pythonpath for a web application that I am building in a particular directory ?
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

_____________________________________________________________________
iRepublics.com - Free Web Hosting for Businesses
33MB webspace free, SMS messaging, 30 email accounts, your own domain name
Sign up Now at http://www.iRepublics.com



From andrew-twisted at puzzling.org  Tue Nov  5 18:25:33 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Nov 2002 12:25:33 +1100
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <200211060912.AA8454630@contact.com.my>
References: <200211060912.AA8454630@contact.com.my>
Message-ID: <20021106012533.GB2576@ritsuko.xware.cx>

On Wed, Nov 06, 2002 at 09:12:52AM +0800, lals;dfjsd wrote:
> 
> Ummm so does that mean I have to add something to the pythonpath for a
> web application that I am building in a particular directory ?

Unfortunately, I don't know -- I'm not a Twisted Web expert.  :(

Someone else will have to answer this one.

-Andrew.




From spam at polynode.com  Tue Nov  5 19:33:15 2002
From: spam at polynode.com (Alex)
Date: Tue, 05 Nov 2002 21:33:15 -0500
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <200211060912.AA8454630@contact.com.my>
Message-ID: <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu>

At 09:12 AM 11/6/2002 +0800, lals;dfjsd wrote:
>Ummm so does that mean I have to add something to the pythonpath for a web 
>application that I am building in a particular directory ?

I think I know what Mr. Dfjsd is getting at; I hit this same problem.

If you're building an app in c:\webapp, and you run twistd from that 
directory, then 'c:\webapp' should be part of sys.path.  The reason for 
this is that '.' is part of sys.path, and if you're running twistd in 
c:\webapp, then '.' == 'c:\webapp'.  So, if:

   c:\webapp\docroot contains your HTML files and RPY files
   c:\webapp\my_app contains any Python code you need to import

...and you run:

   c:\webapp> mktap web --path docroot
   c:\webapp> twistd -f web.tap

...if you have a .rpy in c:\webapp\docroot, it can call 'import my_app' and 
it should work fine.  (Provided c:\webapp\my_app\__init__.py exists.)

Does that answer your question?

(All twisted.web.woven gurus: feel free to comment or correct me. :)

--
Alex Levy
WWW: http://mesozoic.geecs.org
Tel: 617.835.0778

"Never let your sense of morals prevent you from doing what is right."
-- Salvor Hardin, Isaac Asimov's _Foundation_





From twisted at moshez.org  Tue Nov  5 21:54:10 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 6 Nov 2002 04:54:10 -0000
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu>
References: <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu>
Message-ID: <20021106045410.28597.qmail@green.zadka.com>

On Tue, 05 Nov 2002, Alex <spam at polynode.com> wrote:

> If you're building an app in c:\webapp, and you run twistd from that 
> directory, then 'c:\webapp' should be part of sys.path.  The reason for 
> this is that '.' is part of sys.path, and if you're running twistd in 
> c:\webapp, then '.' == 'c:\webapp'.

That's not correct, "." is never on your path (that'd be a serious security
whole). The directory in which the script you run is on your path.



From Michael_Scharf at gmx.de  Tue Nov  5 22:35:36 2002
From: Michael_Scharf at gmx.de (Michael Scharf)
Date: Wed, 6 Nov 2002 06:35:36 +0100 (MET)
Subject: [Twisted-Python] How to implement progress/transfer speed/transfered bytes handlers?
Message-ID: <13718.1036560936@www48.gmx.net>

Hi,

I want to use twisted as nntp client. Is it possible to add
somewhere into the streams something like a progress bar or
something that reports the download speed or the total
transferred bytes? I have not looked too deeply into twisted,
but as I understand it it uses the Decorator pattern between
the connection and the actual handler. All I would need is
to add a little class somewhere in between each connection
and the handler, so that I can decorate the Protocol.dataReceived
events...

Michael

-- 
+++ GMX - Mail, Messaging & more  http://www.gmx.net +++
NEU: Mit GMX ins Internet. Rund um die Uhr für 1 ct/ Min. surfen!




From waterbug at beeblebrox.gsfc.nasa.gov  Tue Nov  5 23:09:58 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 06 Nov 2002 01:09:58 -0500
Subject: [Twisted-Python] Question regarding widgets
References: <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu> <20021106045410.28597.qmail@green.zadka.com>
Message-ID: <3DC8B236.CE250C6D@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:
> 
> On Tue, 05 Nov 2002, Alex <spam at polynode.com> wrote:
> 
> > If you're building an app in c:\webapp, and you run twistd from that
> > directory, then 'c:\webapp' should be part of sys.path.  The reason for
> > this is that '.' is part of sys.path, and if you're running twistd in
> > c:\webapp, then '.' == 'c:\webapp'.
> 
> That's not correct, "." is never on your path (that'd be a serious security
> whole). The directory in which the script you run is on your path.

How is having "." on your PYTHONPATH a serious security hole?  
(Of course it shouldn't be on _root_'s PYTHONPATH, but how is 
it bad for a regular user?)  

-- Steve.



From twisted at moshez.org  Tue Nov  5 23:31:09 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 6 Nov 2002 06:31:09 -0000
Subject: [Twisted-Python] Question regarding widgets
In-Reply-To: <3DC8B236.CE250C6D@beeblebrox.gsfc.nasa.gov>
References: <3DC8B236.CE250C6D@beeblebrox.gsfc.nasa.gov>, <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu> <20021106045410.28597.qmail@green.zadka.com>
Message-ID: <20021106063109.29554.qmail@green.zadka.com>

On Wed, 06 Nov 2002, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> How is having "." on your PYTHONPATH a serious security hole?  
> (Of course it shouldn't be on _root_'s PYTHONPATH, but how is 
> it bad for a regular user?)  

What if you run a Python program from /tmp? One of those smart programs
which do something like

'''
try:
   import gtk
except ImportError:
   gtk = None
'''

What if some malicious user put a gtk.py in /tmp which does something like
'''
open(os.path.expanduser("~/.secret"))
os.chmod(os.path.expanduser("~/.secret"), 0777)
'''

And to top it all, assume gtk is, indeed, not installed on this system.



From waterbug at beeblebrox.gsfc.nasa.gov  Tue Nov  5 23:54:28 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 06 Nov 2002 01:54:28 -0500
Subject: [Twisted-Python] Question regarding widgets
References: <3DC8B236.CE250C6D@beeblebrox.gsfc.nasa.gov>, <5.1.1.6.0.20021105212519.020dfcc8@coral.tufts.edu> <20021106045410.28597.qmail@green.zadka.com> <20021106063109.29554.qmail@green.zadka.com>
Message-ID: <3DC8BCA4.AF97DD5@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:
> 
> On Wed, 06 Nov 2002, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> 
> > How is having "." on your PYTHONPATH a serious security hole?
> > (Of course it shouldn't be on _root_'s PYTHONPATH, but how is
> > it bad for a regular user?)
> 
> What if you run a Python program from /tmp?  ... [etc.]

Perhaps I am protected by a higher level of general paranoia: 
I would never run anything from /tmp (or any other directory 
where just anyone could write something into, but especially 
not from /tmp!).  I only run Python scripts either from inside 
my home dir (for which I leave the RH default perms, drwx------) 
or from a root-writable-only dir such as /usr/local/... 
(if somebody's hacked root, I've got bigger problems anyway!).  

Of course, the conversation started with Windows, and I have 
no idea what the implications are there ... probably much more 
dire, like everything else on Windows.  ;^)  

Cheers,
-- Steve.



From alexandre.fayolle at free.fr  Wed Nov  6 07:08:14 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 6 Nov 2002 15:08:14 +0100
Subject: [Twisted-Python] newbie comments on documentation
Message-ID: <20021106140814.GB7460@calvin.fayauffre.org>

Hi there,

I'm starting with twisted (debian package 0.99.2-4), and I'm currently
trying to convert a SimpleTCPServer based project to twisted, and
therefore reading the documentation and trying to wrap my head around
the framework.   

Here's a few comments. I'm a good (python) programmer, but a complete
twisted newbie, and I think I may not be the only one with the same
problems/doubts/questions on the documentation. 

The file quoters.py uses twisted.python.components.Interface, though the
text in the Plugin HOWTO says that "Note that this module does not
import any Twisted functionality at all!". It is not clear if the
Interface declaration is needed or not from reading the code and the
HOWTO. 

The file quoteproto.py imports twisted.internet.app.Application, which
is never used. The import line should be removed from the example file. 

That's all for now.

-- 
Alexandre



From alexandre.fayolle at free.fr  Wed Nov  6 07:09:33 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 6 Nov 2002 15:09:33 +0100
Subject: [Twisted-Python] distutils and twisted
Message-ID: <20021106140933.GC7460@calvin.fayauffre.org>

Hi,

What's the prefered way to use distutils to package a twisted plugin.
The key question being, how do you install the plugins.tml file ? Is
there any distutils extensions available ?

-- 
Alexandre



From waterbug at beeblebrox.gsfc.nasa.gov  Wed Nov  6 08:21:47 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 06 Nov 2002 10:21:47 -0500
Subject: [Twisted-Python] distutils and twisted
References: <20021106140933.GC7460@calvin.fayauffre.org>
Message-ID: <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>

Alexandre Fayolle wrote:

> What's the prefered way to use distutils to package a twisted plugin.
> The key question being, how do you install the plugins.tml file ? Is
> there any distutils extensions available ?

At last, a question I can answer!  (I'm a Twisted application 
developer, not a Twisted guru ... :^)  

Put your plugins.tml into the top dir of your application, e.g.:

myapp/__init__.py
     /plugins.tml    <---
     /myapptap.py
     /myappmodule1/...
     /myappmodule2/...

... and make sure that myapp is in your PYTHONPATH.  
Then if your plugins.tml looks something like this:

-------------------------------------------------
register("Myapp Tap Builder",
         "myapp.myapptap",
         description="""My Application""",
         type="tap",
         tapname="myapp")
-------------------------------------------------

... then mktap will create a myapp.tap file in the 
dir where you run it.  

For your setup.py, something like this should work 
(note data_files ... :^):

-------------------------------------------------
from distutils.core import setup

setup (name = "My Application",
       version = "0.0",
       description = "Blah blah",
       author = "Moi",
       author_email = "moi at world",
       maintainer = "admin",
       maintainer_email = 'admin at here',
       url = "http://spam.world/eggs",
       licence = "MIT",
       long_description = """\
My application does NOT suck!""",
       packages = ['myapp', 
                   'myapp.myappmodule1', 
                   'myapp.myappmodule2'
                   ],
       data_files = [('lib/python2.2/site-packages/myapp', ['myapp/plugins.tml'])
                   ]
      )
-------------------------------------------------

HTH,
-- Steve.



From twisted at itamarst.org  Wed Nov  6 08:39:42 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 6 Nov 2002 10:39:42 -0500
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>
References: <20021106140933.GC7460@calvin.fayauffre.org>
	<3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021106103942.0f56c4a9.twisted@itamarst.org>

On Wed, 06 Nov 2002 10:21:47 -0500
Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

>        data_files = [('lib/python2.2/site-packages/myapp',
>        ['myapp/plugins.tml'])
>                    ]

Twisted's setup.py uses a different, more cross-platform/python-version
hack to make sure plugins.tml is installed, with the unfortunate
side-effect that you can't install normal data files.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From alexandre.fayolle at free.fr  Wed Nov  6 09:46:27 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 06 Nov 2002 17:46:27 +0100 (CET)
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>
References: <20021106140933.GC7460@calvin.fayauffre.org> <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>
Message-ID: <1036601187.3dc947634fdcc@imp.free.fr>

En réponse à Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov>:

> For your setup.py, something like this should work 
> (note data_files ... :^):

Nope. It won't work with different versions of python, but this can easily be
worked around. What's more a problem is that it won't work on non-unix
platforms, and it won't work with the --home option passed to the install
command of setup.py, which is what I use to test packages locally (using
python setup.py install --home=$HOME will install packages in $HOME/lib/python). 

I'm using a similar hack right now for testing, and I'll put up a distutils
extension once I get a few other issues with my plugin sorted out.

Alexandre Fayolle
--
http://alexandre.fayolle.free.fr
http://www.logilab.org
Narval is the first software agent available as free software (GPL).
LOGILAB, Paris (France).




From alexandre.fayolle at free.fr  Wed Nov  6 09:56:17 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 6 Nov 2002 17:56:17 +0100
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <20021106103942.0f56c4a9.twisted@itamarst.org>
References: <20021106140933.GC7460@calvin.fayauffre.org> <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov> <20021106103942.0f56c4a9.twisted@itamarst.org>
Message-ID: <20021106165617.GA8269@calvin.fayauffre.org>

On Wed, Nov 06, 2002 at 10:39:42AM -0500, Itamar Shtull-Trauring wrote:
> On Wed, 06 Nov 2002 10:21:47 -0500
> Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> 
> >        data_files = [('lib/python2.2/site-packages/myapp',
> >        ['myapp/plugins.tml'])
> >                    ]
> 
> Twisted's setup.py uses a different, more cross-platform/python-version
> hack to make sure plugins.tml is installed, with the unfortunate
> side-effect that you can't install normal data files.

This is indeed unfortunate, since I need to install datafiles too... 

-- 
Alexandre



From waterbug at beeblebrox.gsfc.nasa.gov  Wed Nov  6 10:08:22 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 06 Nov 2002 12:08:22 -0500
Subject: [Twisted-Python] distutils and twisted
References: <20021106140933.GC7460@calvin.fayauffre.org> <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov> <20021106103942.0f56c4a9.twisted@itamarst.org> <20021106165617.GA8269@calvin.fayauffre.org>
Message-ID: <3DC94C86.4EBD904F@beeblebrox.gsfc.nasa.gov>

Alexandre Fayolle wrote:
> 
> On Wed, Nov 06, 2002 at 10:39:42AM -0500, Itamar Shtull-Trauring wrote:
> > On Wed, 06 Nov 2002 10:21:47 -0500
> > Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> >
> > >        data_files = [('lib/python2.2/site-packages/myapp',
> > >        ['myapp/plugins.tml'])
> > >                    ]
> >
> > Twisted's setup.py uses a different, more cross-platform/python-version
> > hack to make sure plugins.tml is installed, with the unfortunate
> > side-effect that you can't install normal data files.
> 
> This is indeed unfortunate, since I need to install datafiles too...

... but you don't need to install your Twisted app at the same time as 
Twisted ... in fact, we prefer not to.  Time to learn distutils.  ;^)

-- Steve.



From alexandre.fayolle at free.fr  Wed Nov  6 11:11:52 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 6 Nov 2002 19:11:52 +0100
Subject: [Twisted-Python] twisted, nc and LineReceiver
Message-ID: <20021106181152.GC8269@calvin.fayauffre.org>

Hello, it's me again ;o)

So there's this server I'm porting from a ForkingTCPServer to twisted.
It listens on a socket, and reads one line at a time, processes the line
and writes the answer back on the socket to the client. 

The ForkingTCPServer version uses a handler deriving from
StreamRequestHandler, and gets the data with self.rfile.readline().

The twisted version uses a LineReceiver protocol.

Now, if I use telnet to connect to both version of the server, I can
type some data, press return and get the answer back. This is great.
However, if I use nc send the data, the twisted-based server sees nothing
(lineReceived is not called!)

I have to admit I'm baffled, and I'll take any idea. 

-- 
Alexandre



From alexandre.fayolle at free.fr  Wed Nov  6 11:22:21 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Wed, 6 Nov 2002 19:22:21 +0100
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <3DC94C86.4EBD904F@beeblebrox.gsfc.nasa.gov>
References: <20021106140933.GC7460@calvin.fayauffre.org> <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov> <20021106103942.0f56c4a9.twisted@itamarst.org> <20021106165617.GA8269@calvin.fayauffre.org> <3DC94C86.4EBD904F@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021106182221.GD8269@calvin.fayauffre.org>

On Wed, Nov 06, 2002 at 12:08:22PM -0500, Steve Waterbury wrote:
> Alexandre Fayolle wrote:

> > This is indeed unfortunate, since I need to install datafiles too...
> 
> ... but you don't need to install your Twisted app at the same time as 
> Twisted ... in fact, we prefer not to.  Time to learn distutils.  ;^)

I was thinking of cutnpasting the trick you were using to my setup.py,
not installing everything at the same time. IMNSHO, having a module
twisted.python.distutils with a custom setup aware of tml files would be
a nice thing to have for module developers (and I'm a bit surprised that
no such beast exists). I'll hack something, and submit it to the mailing
list if I'm happy enough with it.  

-- 
Alexandre



From glyph at twistedmatrix.com  Wed Nov  6 11:27:52 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 06 Nov 2002 12:27:52 -0600 (CST)
Subject: [Twisted-Python] twisted, nc and LineReceiver
In-Reply-To: <20021106181152.GC8269@calvin.fayauffre.org>
References: <20021106181152.GC8269@calvin.fayauffre.org>
Message-ID: <20021106.122752.93020156.glyph@twistedmatrix.com>

On Wed, 6 Nov 2002 19:11:52 +0100, Alexandre Fayolle <alexandre.fayolle at free.fr> wrote:
> Now, if I use telnet to connect to both version of the server, I can
> type some data, press return and get the answer back. This is great.
> However, if I use nc send the data, the twisted-based server sees nothing
> (lineReceived is not called!)

Sounds like a CRLF versus CR issue.  Have you checked for that? :-)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021106/c54268cb/attachment.sig>

From radix at twistedmatrix.com  Wed Nov  6 12:01:16 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 6 Nov 2002 20:01:16 +0100
Subject: [Twisted-Python] twisted, nc and LineReceiver
In-Reply-To: <20021106.122752.93020156.glyph@twistedmatrix.com>
References: <20021106181152.GC8269@calvin.fayauffre.org> <20021106.122752.93020156.glyph@twistedmatrix.com>
Message-ID: <20021106190116.GF8926@toshi>

On Wed, Nov 06, 2002 at 12:27:52PM -0600, Glyph Lefkowitz wrote:
> On Wed, 6 Nov 2002 19:11:52 +0100, Alexandre Fayolle
> <alexandre.fayolle at free.fr> wrote:
> > Now, if I use telnet to connect to both version of the server, I can
> > type some data, press return and get the answer back. This is great.
> > However, if I use nc send the data, the twisted-based server sees nothing
> > (lineReceived is not called!)
> 
> Sounds like a CRLF versus CR issue.  Have you checked for that? :-)

Indeed. Netcat sends only \n, not \r. See the `delimiter' attribute of
the LineReceiver class.

-- 
			Christopher Armstrong
		    << radix at twistedmatrix.com >>
	     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Wed Nov  6 19:40:17 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 06 Nov 2002 20:40:17 -0600 (CST)
Subject: [Twisted-Python] newbie comments on documentation
In-Reply-To: <20021106140814.GB7460@calvin.fayauffre.org>
References: <20021106140814.GB7460@calvin.fayauffre.org>
Message-ID: <20021106.204017.11390058.glyph@twistedmatrix.com>

On Wed, 6 Nov 2002 15:08:14 +0100, Alexandre Fayolle <alexandre.fayolle at free.fr> wrote:
> The file quoters.py uses twisted.python.components.Interface, though the
> text in the Plugin HOWTO says that "Note that this module does not
> import any Twisted functionality at all!". It is not clear if the
> Interface declaration is needed or not from reading the code and the
> HOWTO. 

That is the result of a disagreement between Itamar and I: I keep taking the
Interfaces stuff out, he keeps putting it in :-).  I wrote the original doc and
that's what the text reflects.  The declarations are not necessary and can be
omitted if you like.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021106/7520c6de/attachment.sig>

From alexandre.fayolle at free.fr  Thu Nov  7 01:15:11 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Thu, 7 Nov 2002 09:15:11 +0100
Subject: [Twisted-Python] twisted, nc and LineReceiver
In-Reply-To: <20021106190116.GF8926@toshi>
References: <20021106181152.GC8269@calvin.fayauffre.org> <20021106.122752.93020156.glyph@twistedmatrix.com> <20021106190116.GF8926@toshi>
Message-ID: <20021107081511.GA1144@calvin.fayauffre.org>

> > Sounds like a CRLF versus CR issue.  Have you checked for that? :-)
> 
> Indeed. Netcat sends only \n, not \r. See the `delimiter' attribute of
> the LineReceiver class.

Ahaaa!

Thanks for the quick answer. I've attached a patchlet adding this little
piece of information to the LineReceiver's docstring, so that the epydoc
documentation will provide the tip. 
 

-- 
Alexandre
-------------- next part --------------
--- /usr/lib/python2.2/site-packages/twisted/protocols/basic.py	2002-09-23 10:51:29.000000000 +0200
+++ basic.py	2002-11-07 09:05:47.000000000 +0100
@@ -131,6 +131,10 @@
     Each line that's received becomes a callback to lineReceived.  Each
     chunk of raw data becomes a callback to rawDataReceived.
 
+    Lines are limited to 16384 bytes. Change the 'MAX_LENGTH' class attribute
+    if you wish to receive longer lines. The default line delimiter is '\r\n'
+    and it is set by the 'delimiter' class attribute.
+
     This is useful for line-oriented protocols such as IRC, HTTP, POP,
     etc.
     """
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 241 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021107/896643ed/attachment.sig>

From carball at hush.com  Thu Nov  7 06:04:22 2002
From: carball at hush.com (carball at hush.com)
Date: Thu,  7 Nov 2002 05:04:22 -0800
Subject: [Twisted-Python] grokking cacheable, take 2
Message-ID: <200211071304.gA7D4MFN012033@mailserver3.hushmail.com>

ok, the insecurejelly error i was getting i found was actually
due to trying to store the observer(s) in the Cacheable object itself. .

evidently jelly doesnt take too kindly to having these objects 
in there when it serializes the Cacheable. .

i was able to get around this by storing the observer in the perspective
that is passed as the first argument to getStateToCacheAndObserveFor

the docs say storing the observer(s) in the Cacheable is the preferred method no?

"It is recommended that your object maintain a list (note: library support for this is forthcoming!) of observers, and update them using callRemote when the Cacheable changes in a way that should be noticeable to its clients."

so, my new question is: what IS the preferred way to store observers?
-------------------------
i have a feeling the answer was in the first round of responses i got
( greatly appreciated, thank you ), but i still do not entirely understand what the best method would be. .

again, thanks for the advice AND the KILLER framework. . :D
car



Get your free encrypted email at https://www.hushmail.com



From bruce at cubik.org  Thu Nov  7 08:11:11 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 07 Nov 2002 08:11:11 -0700
Subject: [Twisted-Python] grokking cacheable, take 2
References: <200211071304.gA7D4MFN012033@mailserver3.hushmail.com>
Message-ID: <3DCA828F.4010100@cubik.org>

car,

carball at hush.com wrote:
> ok, the insecurejelly error i was getting i found was actually
> due to trying to store the observer(s) in the Cacheable object itself. .
> 
> evidently jelly doesnt take too kindly to having these objects 
> in there when it serializes the Cacheable. .
> 
> i was able to get around this by storing the observer in the perspective
> that is passed as the first argument to getStateToCacheAndObserveFor
> 
> the docs say storing the observer(s) in the Cacheable is the preferred method no?
> 
> "It is recommended that your object maintain a list (note: library support for this is forthcoming!) of observers, and update them using callRemote when the Cacheable changes in a way that should be noticeable to its clients."
> 
> so, my new question is: what IS the preferred way to store observers?
> -------------------------
> i have a feeling the answer was in the first round of responses i got
> ( greatly appreciated, thank you ), but i still do not entirely understand what the best method would be. .

I store the observers on my cacheable and then override 
getStateToCacheAndObserveFor to specificly enumerate and transform the 
data that I want handled, rather than rely upon the default 
implementation which just returns self.__dict__.

  - Bruce




From radix at twistedmatrix.com  Thu Nov  7 10:01:20 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 7 Nov 2002 18:01:20 +0100
Subject: [Twisted-Python] twisted, nc and LineReceiver
In-Reply-To: <20021107081511.GA1144@calvin.fayauffre.org>
References: <20021106181152.GC8269@calvin.fayauffre.org> <20021106.122752.93020156.glyph@twistedmatrix.com> <20021106190116.GF8926@toshi> <20021107081511.GA1144@calvin.fayauffre.org>
Message-ID: <20021107170120.GH8926@toshi>

On Thu, Nov 07, 2002 at 09:15:11AM +0100, Alexandre Fayolle wrote:
> > > Sounds like a CRLF versus CR issue.  Have you checked for that? :-)
> > 
> > Indeed. Netcat sends only \n, not \r. See the `delimiter' attribute of
> > the LineReceiver class.
> 
> Ahaaa!
> 
> Thanks for the quick answer. I've attached a patchlet adding this little
> piece of information to the LineReceiver's docstring, so that the epydoc
> documentation will provide the tip. 

I've committed a more epydoc-friendly patch to add this information to
the docstring (using @ivar). Thanks for the inspiration, though ;-)

-- 
			Christopher Armstrong
		    << radix at twistedmatrix.com >>
	     http://twistedmatrix.com/users/radix.twistd/



From acapnotic at twistedmatrix.com  Thu Nov  7 18:52:32 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 07 Nov 2002 17:52:32 -0800
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <20021106182221.GD8269@calvin.fayauffre.org>
References: <20021106140933.GC7460@calvin.fayauffre.org>
	<3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov>
	<20021106103942.0f56c4a9.twisted@itamarst.org>
	<20021106165617.GA8269@calvin.fayauffre.org>
	<3DC94C86.4EBD904F@beeblebrox.gsfc.nasa.gov> 
	<20021106182221.GD8269@calvin.fayauffre.org>
Message-ID: <1036720353.23481.158.camel@troglodyte.funhouse>

On Wed, 2002-11-06 at 10:22, Alexandre Fayolle wrote:
> IMNSHO, having a module
> twisted.python.distutils with a custom setup aware of tml files would be
> a nice thing to have for module developers (and I'm a bit surprised that
> no such beast exists). I'll hack something, and submit it to the mailing
> list if I'm happy enough with it.  

Hooray!  You have reached the same conclusion as I did
[http://twistedmatrix.com/pipermail/twisted-python/2002-October/001814.html a month ago], only you are willing to go where I did not and write code.  I look forward to seeing what you come up with.

Thanks,

 - Kevin

-- 
The moon is waxing crescent, 11.4% illuminated, 3.2 days old.








From screwtape at froup.com  Thu Nov  7 23:47:50 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Fri, 8 Nov 2002 17:47:50 +1100
Subject: [Twisted-Python] Another patch for twisted-im
Message-ID: <20021108064750.GA16215@ferd2.thristian.org>

This one's dead simple, and shouldn't cause any discussion. :)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| I don't usually .sig people in newsgroups. -- Charles Lieberman
|
-------------- next part --------------
diff -u -r1.20 ircsupport.py
--- ircsupport.py	2 Nov 2002 16:53:56 -0000	1.20
+++ ircsupport.py	8 Nov 2002 07:06:18 -0000
@@ -95,7 +95,7 @@
             if self.account.password:
                 self.sendLine("PASS :%s" % self.account.password)
             self.setNick(self.account.nickname)
-            self.sendLine("USER %s foo bar :GTK-IM user"%self.nickname)
+            self.sendLine("USER %s foo bar :Twisted-IM user"%self.nickname)
             for channel in self.account.channels:
                 self.joinGroup(channel)
             self.account._isOnline=1

From dstone at kde.org  Fri Nov  8 00:19:21 2002
From: dstone at kde.org (Daniel Stone)
Date: Fri, 8 Nov 2002 18:19:21 +1100
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108064750.GA16215@ferd2.thristian.org>
References: <20021108064750.GA16215@ferd2.thristian.org>
Message-ID: <20021108071921.GA25117@trinity.unimelb.edu.au>

On Fri, Nov 08, 2002 at 05:47:50PM +1100, screwtape at froup.com scrawled:
> This one's dead simple, and shouldn't cause any discussion. :)

Yes, it should. :P

> diff -u -r1.20 ircsupport.py
> --- ircsupport.py	2 Nov 2002 16:53:56 -0000	1.20
> +++ ircsupport.py	8 Nov 2002 07:06:18 -0000
> @@ -95,7 +95,7 @@
>              if self.account.password:
>                  self.sendLine("PASS :%s" % self.account.password)
>              self.setNick(self.account.nickname)
> -            self.sendLine("USER %s foo bar :GTK-IM user"%self.nickname)
> +            self.sendLine("USER %s foo bar :Twisted-IM user"%self.nickname)

IMHO "user" should be configurable, too; that's the username that shows
up.

-- 
Daniel Stone 	     <daniel at raging.dropbear.id.au>             <dstone at kde.org>
Developer - http://kopete.kde.org, http://www.kde.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021108/3dfa8de6/attachment.sig>

From screwtape at froup.com  Fri Nov  8 02:46:07 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Fri, 8 Nov 2002 20:46:07 +1100
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108071921.GA25117@trinity.unimelb.edu.au>
References: <20021108064750.GA16215@ferd2.thristian.org> <20021108071921.GA25117@trinity.unimelb.edu.au>
Message-ID: <20021108094607.GB16215@ferd2.thristian.org>

On Fri, Nov 08, 2002 at 06:19:21PM +1100, Daniel Stone wrote:
> On Fri, Nov 08, 2002 at 05:47:50PM +1100, screwtape at froup.com scrawled:
> > This one's dead simple, and shouldn't cause any discussion. :)
> 
> Yes, it should. :P
> 
> > diff -u -r1.20 ircsupport.py
> > --- ircsupport.py	2 Nov 2002 16:53:56 -0000	1.20
> > +++ ircsupport.py	8 Nov 2002 07:06:18 -0000
> > @@ -95,7 +95,7 @@
> >              if self.account.password:
> >                  self.sendLine("PASS :%s" % self.account.password)
> >              self.setNick(self.account.nickname)
> > -            self.sendLine("USER %s foo bar :GTK-IM user"%self.nickname)
> > +            self.sendLine("USER %s foo bar :Twisted-IM user"%self.nickname)
> 
> IMHO "user" should be configurable, too; that's the username that shows
> up.

Oh, crud. I cvs diff'd from Twisted/twisted/im, I assumed magical CVS
would fix up all the pathnames. 

Anyway, the above happens inside twisted.im's IRC abstraction. I don't
think there's other protocols that let you define your real name every
time you connect (Jabber, for instance, keeps it on the server), so
exposing an API to deal with IRC's nonconformity would seem to be a
Bad Thing.

In theory, you could just make it the same as the nickname, but (a)
that's pretty pointless, and (b), we lose a chance to advertise
Twisted. :)

Also, glyph made it a hard-coded string when he first wrote it, so he
probably thinks that's the Way To Go. :)

At any rate, the same file is used by both the java and GTK
front-ends, so it shouldn't say GTK-IM.


-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "What do you mean, `naked'?"
|



From dstone at kde.org  Fri Nov  8 03:19:20 2002
From: dstone at kde.org (Daniel Stone)
Date: Fri, 8 Nov 2002 21:19:20 +1100
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108094607.GB16215@ferd2.thristian.org>
References: <20021108064750.GA16215@ferd2.thristian.org> <20021108071921.GA25117@trinity.unimelb.edu.au> <20021108094607.GB16215@ferd2.thristian.org>
Message-ID: <20021108101920.GA27749@trinity.unimelb.edu.au>

On Fri, Nov 08, 2002 at 08:46:07PM +1100, screwtape at froup.com scrawled:
> On Fri, Nov 08, 2002 at 06:19:21PM +1100, Daniel Stone wrote:
> > On Fri, Nov 08, 2002 at 05:47:50PM +1100, screwtape at froup.com scrawled:
> > > +            self.sendLine("USER %s foo bar :Twisted-IM user"%self.nickname)
                                                  ^

> > 
> > IMHO "user" should be configurable, too; that's the username that shows
> > up.
> 
> Oh, crud. I cvs diff'd from Twisted/twisted/im, I assumed magical CVS
> would fix up all the pathnames. 
> 
> Anyway, the above happens inside twisted.im's IRC abstraction. I don't
> think there's other protocols that let you define your real name every
> time you connect (Jabber, for instance, keeps it on the server), so
> exposing an API to deal with IRC's nonconformity would seem to be a
> Bad Thing.
> 
> In theory, you could just make it the same as the nickname, but (a)
> that's pretty pointless, and (b), we lose a chance to advertise
> Twisted. :)
> 
> Also, glyph made it a hard-coded string when he first wrote it, so he
> probably thinks that's the Way To Go. :)
> 
> At any rate, the same file is used by both the java and GTK
> front-ends, so it shouldn't say GTK-IM.

Sorry, I'm stupid. I didn't see the colon, and thought you were just
using "user" for the username. Forgive me.

-- 
Daniel Stone 	     <daniel at raging.dropbear.id.au>             <dstone at kde.org>
Developer - http://kopete.kde.org, http://www.kde.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021108/e931e0a4/attachment.sig>

From twisted at moshez.org  Fri Nov  8 03:57:43 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 8 Nov 2002 10:57:43 -0000
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108094607.GB16215@ferd2.thristian.org>
References: <20021108094607.GB16215@ferd2.thristian.org>, <20021108064750.GA16215@ferd2.thristian.org> <20021108071921.GA25117@trinity.unimelb.edu.au>
Message-ID: <20021108105743.22616.qmail@green.zadka.com>

On Fri, 8 Nov 2002 20:46:07 +1100, screwtape at froup.com wrote:

> Oh, crud. I cvs diff'd from Twisted/twisted/im, I assumed magical CVS
> would fix up all the pathnames. 

In general, I prefer to do local diffs against a clean checkout.



From alexandre.fayolle at free.fr  Fri Nov  8 04:16:49 2002
From: alexandre.fayolle at free.fr (Alexandre Fayolle)
Date: Fri, 8 Nov 2002 12:16:49 +0100
Subject: [Twisted-Python] distutils and twisted
In-Reply-To: <20021106182221.GD8269@calvin.fayauffre.org>
References: <20021106140933.GC7460@calvin.fayauffre.org> <3DC9338B.713492EF@beeblebrox.gsfc.nasa.gov> <20021106103942.0f56c4a9.twisted@itamarst.org> <20021106165617.GA8269@calvin.fayauffre.org> <3DC94C86.4EBD904F@beeblebrox.gsfc.nasa.gov> <20021106182221.GD8269@calvin.fayauffre.org>
Message-ID: <20021108111648.GE7335@calvin.fayauffre.org>

On Wed, Nov 06, 2002 at 07:22:21PM +0100, Alexandre Fayolle wrote:
> IMNSHO, having a module
> twisted.python.distutils with a custom setup aware of tml files would be
> a nice thing to have for module developers (and I'm a bit surprised that
> no such beast exists). I'll hack something, and submit it to the mailing
> list if I'm happy enough with it.  

Well, here's an attempt. The documentation is in the module docstring.
Feel free to add it to the twisted distribution if you think it's ok.
If you need more features, please ask. If you find bugs, please tell me.

-- 
Alexandre
-------------- next part --------------
"""Distutils extensions for twisted framework.

This module enables the installation of plugins.tml files using standard
distutils syntax. It adds the following commands to the standard
setup.py commands:
* build_twisted_plugins: build (i.e. copy) plugins
* install_twisted_plugins: install plugins

Additionally, the following commands have been modified to deal with
plugins files:
 * sdist
 * build
 * install

To use these extenstion, you should import the setup fonction from this
module, and use it normally. To list the plugins.tml files, use the
twisted_plugins keyword argument to the setup function:

from twisted_distutils import setup # you can also import Extension if needed

if __name__ == '__main__':
    setup(name='my_twisted_app',
          version='1.0',
          author='me',
          packages=['my_package'],
          twisted_plugins = ['my_package/plugins.tml'])

Note that you can use this to install files that are not twisted plugins in any package directory of your application.
"""
#
# (c) 2002 Alexandre Fayolle <alexandre.fayolle at free.fr>
# This module is heavily based on code copied from the python distutils
# framework, especially distutils.command.build_script,
# distutils.command.install_script. Many thanks to the authors of these
# modules.
# This module is provided as is, I'm not responsible if anything bad
# happens to you or your python library while using this module. You may
# freely copy it, distribute it and use it in your library or to distribute
# your applications. I'd appreciate if you could drop me an email if you plan
# to do so <wink>.
#
# Happy twisting!
#

from distutils.core import Extension,Distribution,Command
from distutils.command.install import install
from distutils.command.build import build
from distutils.command.sdist import sdist
from distutils.dep_util import newer
from distutils.util import convert_path
import os

class twisted_sdist(sdist):
    def add_defaults(self):
        sdist.add_defaults(self)
        if self.distribution.has_twisted_plugins():
            build_twisted_plugins = self.get_finalized_command('build_twisted_plugins')
            self.filelist.extend(build_twisted_plugins.get_source_files())

class twisted_install(install):
    def initialize_options (self):
        install.initialize_options(self)
        self.twisted_plugins = None
        
    def has_twisted_plugins(self):
        print '$'*50,self.distribution.has_twisted_plugins()
        return self.distribution.has_twisted_plugins()
    
    sub_commands = []
    sub_commands.extend(install.sub_commands)
    sub_commands.append(('install_twisted_plugins', has_twisted_plugins))
                   

class twisted_build(build):
    def initialize_options (self):
        build.initialize_options(self)
        self.twisted_plugins = None
        
    def has_twisted_plugins(self):
        print '#'*50,self.distribution.has_twisted_plugins()
        return self.distribution.has_twisted_plugins()
    
    sub_commands = []
    sub_commands.extend(build.sub_commands)
    sub_commands.append(('build_twisted_plugins', has_twisted_plugins))
    print '#'*50
    print sub_commands
    print '#'*50

class build_twisted_plugins (Command):

    description = "\"build\" twisted plugins (copy)"

    user_options = [
        ('build-dir=', 'd', "directory to \"build\" (copy) to"),
        ('force', 'f', "forcibly build everything (ignore file timestamps"),
        ]

    boolean_options = ['force']


    def initialize_options (self):
        self.build_dir = None
        self.twisted_plugins = None
        self.force = None
        self.outfiles = None

    def get_source_files(self):
        return self.twisted_plugins

    def finalize_options (self):
        self.set_undefined_options('build',
                                   ('build_lib', 'build_dir'),
                                   ('force', 'force'))
        self.twisted_plugins = self.distribution.twisted_plugins


    def run (self):
        if not self.twisted_plugins:
            return
        self.copy_twisted_plugins()


    def copy_twisted_plugins (self):
        """Copy each plugin listed in 'self.twisted_plugins'.
        """
        self.mkpath(self.build_dir)
        for plugin in self.twisted_plugins:
            adjust = 0
            print '*'*80
            print plugin
            plugin = convert_path(plugin)
            print plugin
            print self.build_dir,os.path.basename(plugin)
            outfile = os.path.join(self.build_dir, plugin)
            print outfile
            print '*'*80
            if not self.force and not newer(plugin, outfile):
                self.announce("not copying %s (up-to-date)" % plugin)
                continue

            # Always open the file, but ignore failures in dry-run mode --
            # that way, we'll get accurate feedback if we can read the
            # plugin.
            try:
                f = open(plugin, "r")
            except IOError:
                if not self.dry_run:
                    raise
                f = None
            else:
                f.close()
                self.copy_file(plugin, outfile)


class install_twisted_plugins(Command):

    description = "install twisted plugins"

    user_options = [
        ('install-dir=', 'd', "directory to install scripts to"),
        ('build-dir=','b', "build directory (where to install from)"),
        ('force', 'f', "force installation (overwrite existing files)"),
        ('skip-build', None, "skip the build steps"),
    ]

    boolean_options = ['force', 'skip-build']


    def initialize_options (self):
        self.install_dir = None
        self.force = 0
        self.build_dir = None
        self.skip_build = None

    def finalize_options (self):
        self.set_undefined_options('build', ('build_lib', 'build_dir'))
        self.set_undefined_options('install',
                                   ('install_lib', 'install_dir'),
                                   ('force', 'force'),
                                   ('skip_build', 'skip_build'),
                                  )

    def run (self):
        if not self.skip_build:
            self.run_command('build_twisted_plugins')
        self.outfiles = self.copy_tree(self.build_dir, self.install_dir)

    def get_inputs (self):
        return self.distribution.twisted_plugins or []

    def get_outputs(self):
        return self.outfiles or []
        
    

class TwistedDistribution(Distribution):
    def __init__(self,attrs=None):
        self.twisted_plugins = None
        Distribution.__init__(self,attrs)
        self.cmdclass = {'install':twisted_install,
                         'install_twisted_plugins':install_twisted_plugins,
                         'build':twisted_build,
                         'build_twisted_plugins':build_twisted_plugins,
                         'sdist':twisted_sdist,
                         }

    def has_twisted_plugins(self):
        return self.twisted_plugins and len(self.twisted_plugins) > 0


def setup(**attrs):
    from distutils.core import setup
    attrs['distclass'] = TwistedDistribution
    setup(**attrs)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 241 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021108/bc82ccca/attachment.sig>

From screwtape at froup.com  Fri Nov  8 05:20:05 2002
From: screwtape at froup.com (screwtape at froup.com)
Date: Fri, 8 Nov 2002 23:20:05 +1100
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108105743.22616.qmail@green.zadka.com>
References: <20021108064750.GA16215@ferd2.thristian.org> <20021108071921.GA25117@trinity.unimelb.edu.au> <20021108105743.22616.qmail@green.zadka.com>
Message-ID: <20021108122005.GC16215@ferd2.thristian.org>

On Fri, Nov 08, 2002 at 10:57:43AM -0000, Moshe Zadka wrote:
> On Fri, 8 Nov 2002 20:46:07 +1100, screwtape at froup.com wrote:
> 
> > Oh, crud. I cvs diff'd from Twisted/twisted/im, I assumed magical CVS
> > would fix up all the pathnames. 
> 
> In general, I prefer to do local diffs against a clean checkout.

Why? Is there an appreciable difference?

Screwtape,
...who still thinks cvs is a shiny, wonderful thing.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Ecce Macdonaldus Senex, qui fundum habet. E-I-E-I-O." -- Sarah Boynton
|



From twisted at moshez.org  Fri Nov  8 08:21:15 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 8 Nov 2002 15:21:15 -0000
Subject: [Twisted-Python] Another patch for twisted-im
In-Reply-To: <20021108122005.GC16215@ferd2.thristian.org>
References: <20021108122005.GC16215@ferd2.thristian.org>, <20021108064750.GA16215@ferd2.thristian.org> <20021108071921.GA25117@trinity.unimelb.edu.au> <20021108105743.22616.qmail@green.zadka.com>
Message-ID: <20021108152115.25281.qmail@green.zadka.com>

On Fri, 8 Nov 2002, screwtape at froup.com wrote:

> Why? Is there an appreciable difference?

Local diffs are more patch friendly.
IIRC there was a script floating around that converts to make it more
patch friendly, but until the Twisted developers officially locate
it, I personally prefer local diffs. 



From exarkun at meson.dyndns.org  Fri Nov  8 17:08:52 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 8 Nov 2002 19:08:52 -0500
Subject: [Twisted-Python] An unexpected interaction
Message-ID: <20021109000852.GA27980@meson.dyndns.org>

I've just discovered some unfortunate behavior when dirdbm and rebuild are
combined (as I have recently combined them in Pynfo).  It is easily
duplicated:

  from twisted.persisted import dirdbm
  from twisted.python import rebuild

  s = dirdbm.Shelf('dirdbm.rebuild.test')
  s['key'] = 'value'
  rebuild.rebuild(dirdbm)
  print s['key']

Investigating with pdb, I discovered:

  > /home/exarkun/projects/python/Twisted/twisted/persisted/dirdbm.py(90)_readFile()
  -> f = _open(path, "rb")
  (Pdb) next
  OSError: (17, 'File exists', '/home/exarkun/test/dirdbm.rebuild.test/a2V5_')

I don't really know where to go from here.  Does anyone have any ideas?

 Jp

-- 
<Greatnuts> someone gave me bad advice this morning
<Greatnuts> told me to use twm
<Greatnuts> had to reformat
<Greatnuts> just to get it off
--
 7:00pm up 7 days, 5:52, 8 users, load average: 0.11, 0.15, 0.10
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021108/f728f532/attachment.sig>

From glyph at twistedmatrix.com  Sat Nov  9 02:14:58 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 09 Nov 2002 03:14:58 -0600 (CST)
Subject: [Twisted-Python] An unexpected interaction
In-Reply-To: <20021109000852.GA27980@meson.dyndns.org>
References: <20021109000852.GA27980@meson.dyndns.org>
Message-ID: <20021109.031458.21928347.glyph@twistedmatrix.com>

On Fri, 8 Nov 2002 19:08:52 -0500, Jp Calderone <exarkun at meson.dyndns.org> wrote:
>   from twisted.persisted import dirdbm
>   from twisted.python import rebuild
> 
>   s = dirdbm.Shelf('dirdbm.rebuild.test')
>   s['key'] = 'value'
>   rebuild.rebuild(dirdbm)
>   print s['key']

I just checked in a fix for this, as well as your test.  Thanks for reporting it.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021109/d525860e/attachment.sig>

From exarkun at meson.dyndns.org  Sat Nov  9 13:48:08 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sat, 9 Nov 2002 15:48:08 -0500
Subject: [Twisted-Python] An unexpected interaction
In-Reply-To: <20021109.031458.21928347.glyph@twistedmatrix.com>
References: <20021109000852.GA27980@meson.dyndns.org> <20021109.031458.21928347.glyph@twistedmatrix.com>
Message-ID: <20021109204808.GA30977@meson.dyndns.org>

On Sat, Nov 09, 2002 at 03:14:58AM -0600, Glyph Lefkowitz wrote:
> > [snip]
> 
> I just checked in a fix for this, as well as your test.  Thanks for reporting it.
> 

  Awesome, thanks :)  I've just noticed something else; not really a bug,
but some unhappy behavior: pickled dirdbm's aren't "portable" - You can't
shutdown, move the working directory, then restart the application.

  Maybe it would be good to store a path relative to the working directory? 
Or just store exactly what is passed to __init__?

  The only reason I noticed this is I just tried to move my pyn files from
test/ to run/ :)  I don't anticipate having to move them again, but being
able to would probably be a "nice feature" -- a persistence mechanism that
can never be relocated from its original file location is kind of silly.

  Jp

-- 
It is practically impossible to teach good programming style to
students that have had prior exposure to BASIC: as potential
programmers they are mentally mutilated beyond hope of
regeneration.        -- Dijkstra
--
 3:00pm up 8 days, 1:52, 6 users, load average: 0.02, 0.07, 0.08
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021109/246b578d/attachment.sig>

From radix at twistedmatrix.com  Sun Nov 10 07:04:30 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 10 Nov 2002 15:04:30 +0100
Subject: [Twisted-Python] Re: [Twisted-commits] Support --version
In-Reply-To: <E18Apb1-0003US-00@pyramid.twistedmatrix.com>
References: <E18Apb1-0003US-00@pyramid.twistedmatrix.com>
Message-ID: <20021110140429.GD11417@toshi>

On Sun, Nov 10, 2002 at 04:45:39AM -0600, moshez CVS wrote:
> Modified files:
> Twisted/twisted/python/usage.py 1.35 1.36
> 
> Log message:
> Support --version

This makes no sense. The Twisted version has nothing to do with the
version of usage.Options-using applications.

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From twisted at moshez.org  Sun Nov 10 08:26:28 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 10 Nov 2002 15:26:28 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] Support --version
In-Reply-To: <20021110140429.GD11417@toshi>
References: <20021110140429.GD11417@toshi>, <E18Apb1-0003US-00@pyramid.twistedmatrix.com>
Message-ID: <20021110152628.20337.qmail@green.zadka.com>

On Sun, 10 Nov 2002, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> This makes no sense. The Twisted version has nothing to do with the
> version of usage.Options-using applications.

...who can override opt_version() to report their own version.
And if they don't, at least --version gives some useful output and
immediate exit.



From z3p at twistedmatrix.com  Sun Nov 10 10:13:37 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Sun, 10 Nov 2002 12:13:37 -0500
Subject: [Twisted-Python] Erasing strings from memory?
Message-ID: <3DCE4D71.3235.6BA6F5@localhost>

I'm working on a SSH client/server for Twisted, 
and some of the things the client needs to work 
with are passwords both for login and for private 
keys, and then the decrypted keys.  Obviously, 
storing these in memory leads to the possibility 
of acessing them and thereby compromising the 
user.  Is there a way to overwrite the data, or 
otherwise erase it from memory?

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20021110/1d0195d9/attachment.html>

From twisted at moshez.org  Sun Nov 10 11:06:27 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 10 Nov 2002 18:06:27 -0000
Subject: [Twisted-Python] Erasing strings from memory?
In-Reply-To: <3DCE4D71.3235.6BA6F5@localhost>
References: <3DCE4D71.3235.6BA6F5@localhost>
Message-ID: <20021110180627.21618.qmail@green.zadka.com>

On Sun, 10 Nov 2002, "Paul Swartz" <z3p at twistedmatrix.com> wrote:

> I'm working on a SSH client/server for Twisted, 
> and some of the things the client needs to work 
> with are passwords both for login and for private 
> keys, and then the decrypted keys.  Obviously, 
> storing these in memory leads to the possibility 
> of acessing them and thereby compromising the 
> user.  Is there a way to overwrite the data, or 
> otherwise erase it from memory?

The best way would probably to do it in a subprocess. The next
best way would be to read the string into an mmapped are which
you explicitely free. If you want to be really secure, write a third
program like ssh-agent which does the authentication for a user.



From glyph at twistedmatrix.com  Sun Nov 10 21:12:10 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 10 Nov 2002 22:12:10 -0600 (CST)
Subject: [Twisted-Python] Re: [Twisted-commits] Support --version
In-Reply-To: <20021110152628.20337.qmail@green.zadka.com>
References: <20021110140429.GD11417@toshi>
	<E18Apb1-0003US-00@pyramid.twistedmatrix.com>
	<20021110152628.20337.qmail@green.zadka.com>
Message-ID: <20021110.221210.98684057.glyph@twistedmatrix.com>


On 10 Nov 2002 15:26:28 -0000, Moshe Zadka <twisted at moshez.org> wrote:
> ...who can override opt_version() to report their own version.
> And if they don't, at least --version gives some useful output and
> immediate exit.

You're both right: I think there's a bit of a design hole in Options, since you
can't override opt_version with an arg, and strings in the various data
structures will be ignored in subclasses if it's a method in the superclass.
Lowest-level class ought to always take precedence.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021110/33dac365/attachment.sig>

From glyph at twistedmatrix.com  Sun Nov 10 21:16:46 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 10 Nov 2002 22:16:46 -0600 (CST)
Subject: [Twisted-Python] Erasing strings from memory?
In-Reply-To: <20021110180627.21618.qmail@green.zadka.com>
References: <3DCE4D71.3235.6BA6F5@localhost>
	<20021110180627.21618.qmail@green.zadka.com>
Message-ID: <20021110.221646.39633988.glyph@twistedmatrix.com>

On 10 Nov 2002 18:06:27 -0000, Moshe Zadka <twisted at moshez.org> wrote:
> The best way would probably to do it in a subprocess. The next
> best way would be to read the string into an mmapped are which
> you explicitely free. If you want to be really secure, write a third
> program like ssh-agent which does the authentication for a user.

Couldn't you use the 'array' module to create a character array which then you
could manually dump garbage over?  (making sure not to use any array
convenience functions like "tostring" or what-have-you)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021110/34db3969/attachment.sig>

From kevin.m.turner at pobox.com  Sun Nov 10 21:27:42 2002
From: kevin.m.turner at pobox.com (Kevin Turner)
Date: 10 Nov 2002 20:27:42 -0800
Subject: [Twisted-Python] ANN: CVSToys 1.0.0
Message-ID: <1036988862.8932.335.camel@troglodyte.funhouse>

How do I stay informed about changes to the repository?
How can I keep a checked-out working copy up to date?
How can I keep a back-up of my repository off site?
. . .

Twisted Matrix Laboratories has been using CVSToys to keep track of
their CVS repository for the past year, and now CVSToys is being
released to the general public for the first time.

FreshCVS ("the biggest best and only toy we've got"), working in
conjunction with CVS's 'loginfo' hook, will perform actions in response
to a commit.  Unlike 'loginfo' alone, which will only execute the first
matching command it finds, FreshCVS's flexible configuration allows for
any number of actions to take place.  Actions include notification by
mail (with diffs), chat service, and web (both HTML and RSS), updating a
working copy, and rsync to backup.  

Another key feature of FreshCVS notifications is that you receive
one per commit, not one for each directory of the commit as
loginfo-triggered scripts are prone to do.

FreshCVS is extensible with Python, and you may also publish
notifications by a Perspective Broker network service, allowing 3rd
party clients to listen in.

More information and downloads may be found at 
http://purl.net/net/CVSToys

CVSToys is open source software.  
Share and enjoy,

 - Kevin Turner, Maintainer

acapnotic at twistedmatrix.com, Acapnotic on #twisted of irc.freenode.net.

Other links:

Concurrent Versions System (CVS): http://www.cvshome.org/
Python: http://www.python.org/
Twisted: http://twistedmatrix.com/





From z3p at twistedmatrix.com  Sun Nov 10 21:29:32 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Sun, 10 Nov 2002 23:29:32 -0500
Subject: [Twisted-Python] Erasing strings from memory?
In-Reply-To: <20021110.221646.39633988.glyph@twistedmatrix.com>
References: <20021110180627.21618.qmail@green.zadka.com>
Message-ID: <3DCEEBDC.29870.2D67719@localhost>

On 10 Nov 2002 at 22:16, Glyph Lefkowitz wrote:

> Couldn't you use the 'array' module to create a character array which then you
> could manually dump garbage over?  (making sure not to use any array
> convenience functions like "tostring" or what-have-you)

Maybe, but I doubt I could send arrays to 
functions that expect Python strings.  I got a 
message from Rich Satz on pycrypto with a C module 
that will clear a Python string along with 
permission to use it in Twisted.  I'll commit it 
when I use it in conch.

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin




From corydodt at yahoo.com  Mon Nov 11 14:23:17 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Mon, 11 Nov 2002 13:23:17 -0800 (PST)
Subject: [Twisted-Python] Lore with PIL
Message-ID: <20021111212317.43338.qmail@web10004.mail.yahoo.com>

I'm in the process of adapting Lore for the documentation on my project. 
I've subclassed it, and attached my work.

I decided not to do this as a patch after all; the changes should be very
easy to drop into the lore core if this turns out to be useful.

What do this script and module do?

* Convert lore-html to latex (like html2latex and latex.py)

What does it do differently (see Advantages for the reasons why)?

1) Images are converted to png instead of eps before for use in the
\includegraphics command.  (Images that start as png are unchanged.)  
2) Images are automatically formatted to 6.5in wide, maintaining aspect
ratio.

What are the advantages?

1) Works anywhere PIL is available / eliminates dependency on pngtopnm
2) Because PIL supports so many formats, the subclass now supports a
boatload of image formats instead of just png.
3) Resulting image quality is better, although it can still improve more. 

4) Images don't flow outside the margins

Notes on Image Quality: I achieved the best quality by converting my
.dia's to .eps and including .eps directly.  Since these are vector
graphics, the quality is perfect, to the resolution of the pdf itself; but
when I did it this way, the fonts in the diagrams were mapped to different
fonts that overflowed their boxes and made the diagram unreadable.  Next
best was to convert dia=>eps=>png (using ImageMagick's convert utility in
the shell) then including the png.  This could improve if I could figure
out how to make includegraphics use a sensible DPI when it does its
conversion to dvi.   Worst was dia=>eps=>png=>eps, for reasons that are
not obvious to me.  Both png and eps are non-lossy, so the last two
conversion paths should have equal quality, but they don't.

What isn't right yet?

1) visitNode_img() always uses png as the target extension, and 
2) convert_any() assumes this.  convert_any() will fail for certain target
image formats because the mode ("""im.convert('RGB')...""") has to match
the target format.  This can be fixed with a simple exception handler
(TODO).
3) Images should be formatted to a width of
(pagewidth-leftmargin-rightmagin), instead of a hardcoded 6.5in (which
assumes, among other things, letter-sized paper).  I'm not latex guru
enough to make this work yet.

Other notes:
It looks like the .eps in Twisted doc isn't being generated from dia
during process-docs.  This is very easy to do in batch, even without an X
server; ask me if anyone wants to see my mklore script.

#------------
#pilhtml2latex.py
#----snip----
"""A replacement for html2latex which imports pillatex
if it exists."""
#
# Copyright (C) 2002 Fresno County Office of Education
#
# Adapted from html2latex, which is in Twisted (http://twistedmatrix.com).
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General
Public
# License as published by the Free Software Foundation.

import os
from twisted.lore import texi, docbook
import pillatex

from twisted.python import usage

class Options(usage.Options):

    optFlags = [['section', 's', 'Generate a section, not an article'],
                ['texi', 'i', 'Generate a Texinfo section'],
                ['docbook', 'c', 'Generate a Docbook section']]

    optParameters = [['dir', 'd', None, 'Directory relative to which
references'
                                        ' will be taken']]

    def parseArgs(self, *files):
        self['files'] = files

def run():
    opt = Options()
    opt.parseOptions()
    ext = ".tex"
    if opt['section']:
        klass = pillatex.SectionLatexSpitter
    elif opt['texi']:
        klass = texi.TexiSpitter
        ext = '.texinfo'
    elif opt['docbook']:
        klass = docbook.DocbookSpitter
        ext = '.xml'
    else:
        klass = pillatex.LatexSpitter
    for file in opt['files']:
        fout = open(os.path.splitext(file)[0]+ext, 'w')
        dir = opt['dir'] or os.path.dirname(file)
        spitter = klass(fout.write, dir, os.path.basename(file))
        pillatex.processFile(spitter, open(file))

if __name__ == '__main__':
  run()

#----snip----
pillatex.py
#----snip----
"""A substitute for twisted.lore.latex,
using PIL to convert instead of pngtopnm."""
#
# Copyright (C) 2002 Fresno County Office of Education
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General
Public
# License as published by the Free Software Foundation.

from twisted.lore import latex
from twisted.lore.latex import processFile
import os.path
from PIL import Image

class ImageConverter:
    def convert_any(self, src, target):
        im=Image.open(src)
        im.convert('RGB').save(target)

    convert_eps=convert_jpg=convert_jpeg=convert_bmp=convert_dib= \
                convert_ppm=convert_gif=convert_tif=convert_tiff= \
                convert_xpm=convert_xbm=convert_psd=convert_any

    def convert_png(self, src, target): pass

    def visitNode_img(self, node):
        fileName = os.path.join(self.currDir, node.getAttribute('src'))
        target, ext = os.path.splitext(fileName)
        m = getattr(self, 'convert_'+ext[1:], None)
        if not m:
            return
        target = os.path.join(self.currDir,
os.path.basename(target)+'.png')
        m(fileName, target)
        target = os.path.basename(target)
        self.writer('\\includegraphics[width=6.5in]{%s}\n' % target)


class LatexSpitter(ImageConverter, latex.LatexSpitter):
    pass

class SectionLatexSpitter(ImageConverter, latex.SectionLatexSpitter):
    pass


__________________________________________________
Do you Yahoo!?
U2 on LAUNCH - Exclusive greatest hits videos
http://launch.yahoo.com/u2



From naesten at myrealbox.com  Mon Nov 11 15:18:56 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Mon, 11 Nov 2002 17:18:56 -0500
Subject: [Twisted-Python] Fixes for tapconvert
Message-ID: <3DD02CD0.1010503@myrealbox.com>

This cleans up --typein=guess,  and fixes problems with a couple of the
Loader classes which I noticed while testing my other changes.
--SamB
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tapconvert.patch
URL: </pipermail/twisted-python/attachments/20021111/5b5ba84d/attachment.ksh>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3431 bytes
Desc: S/MIME Cryptographic Signature
URL: </pipermail/twisted-python/attachments/20021111/5b5ba84d/attachment-0002.bin>

From waterbug at beeblebrox.gsfc.nasa.gov  Tue Nov 12 10:06:07 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Tue, 12 Nov 2002 12:06:07 -0500
Subject: [Twisted-Python] pickle apparently doesn't go with curry ...
Message-ID: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov>

Twisted Gurus:

I'm using the "curry" recipe from the Python Cookbook 
(pretty much verbatim), and it appears to work fine in my 
code, but cPickle isn't happy about it:

Traceback (most recent call last):
  File "/usr/local/bin/mktap", line 31, in ?
    run()
  File "/usr/local/lib/python2.2/site-packages/twisted/scripts/mktap.py", line 180, in run
    a.save()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 508, in save
    dumpFunc(self, f)
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 490, in dumpFunc
    _dump(obj, file, 1)
cPickle.PicklingError: Can't pickle <function curried_function at 0x83a2aa4>: it's not found as __main__.curried_function

------------------

Here is the recipe I'm using:

def curry(*args, **create_time_kwds):
    """
    Currying is a way to bind arguments with a function and
    wait for the rest of the arguments to show up later.  You
    "curry in" the first few parameters to a function, giving you
    a function that takes subsequent parameters as input and
    calls the original with all of those parameters.

    Nick Perkins' latest version of curry-by-closure (from
    c.l.p, for the record) It has curry-from-left (for positional
    args) and call-time-dominates (for named args) semantics
    """
    func = args[0]
    create_time_args = args[1:]
    def curried_function(*call_time_args, **call_time_kwds):
        args = create_time_args + call_time_args
        kwds = create_time_kwds.copy()
        kwds.update(call_time_kwds)
        return func(*args, **kwds)
    return curried_function

----------------------

Any ideas?

Cheers,
-- Steve.



From pobrien at orbtech.com  Tue Nov 12 10:24:37 2002
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Tue, 12 Nov 2002 11:24:37 -0600
Subject: [Twisted-Python] pickle apparently doesn't go with curry ...
In-Reply-To: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov>
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov>
Message-ID: <200211121124.37171.pobrien@orbtech.com>

On Tuesday 12 November 2002 11:06 am, Steve Waterbury wrote:
> Twisted Gurus:

Not yet, but I'd like to be one day. ;-)

> I'm using the "curry" recipe from the Python Cookbook
> (pretty much verbatim), and it appears to work fine in my
> code, but cPickle isn't happy about it:

The short answer is that Python doesn't currently pickle nested class 
and fucntion objects, i.e. those not defined at the top level of the 
module. This may change in the future, and there was just some 
discussion about this on the python-dev list last week (including some 
clever hacks that might work for you as well) Start here and browse the 
archive by thread:

http://mail.python.org/pipermail/python-dev/2002-November/029874.html

You might also find some useful information in an article I just wrote 
about Python's pickling capabilities:

http://www.ibm.com/developerworks/library/l-pypers.html

Hope that helps.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From bob at redivi.com  Tue Nov 12 14:03:24 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 12 Nov 2002 16:03:24 -0500
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <200211121124.37171.pobrien@orbtech.com>
Message-ID: <2E83F78D-F682-11D6-B9F1-0003938210D6@redivi.com>

I have a stupid device that's talking to a Twisted web server that 
demands HTTP headers to be capitalized Like-This, however Twisted only 
capitalizes the first character..

On line 567 in twisted/protocol/http.py (Twisted 1.0.0) what we have 
right now is:
l.append("%s: %s\r\n" % (name.capitalize(), value)) # content-length 
turns into Content-length

But what my stupid device wants to see is:
l.append("%s: %s\r\n" % ('-'.join(map(lambda 
n:n.capitalize(),name.split('-'))), value)) # content-length turns into 
Content-Length

Any chance someone could patch that up?

-bob




From jepler at unpythonic.net  Tue Nov 12 14:19:20 2002
From: jepler at unpythonic.net (Jeff Epler)
Date: Tue, 12 Nov 2002 15:19:20 -0600
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <2E83F78D-F682-11D6-B9F1-0003938210D6@redivi.com>
References: <200211121124.37171.pobrien@orbtech.com> <2E83F78D-F682-11D6-B9F1-0003938210D6@redivi.com>
Message-ID: <20021112211919.GC1756@unpythonic.net>

On Tue, Nov 12, 2002 at 04:03:24PM -0500, Bob Ippolito wrote:
> I have a stupid device that's talking to a Twisted web server that 
> demands HTTP headers to be capitalized Like-This, however Twisted only 
> capitalizes the first character..
[...] 
> Any chance someone could patch that up?

Doubtful.

http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
    "Field names are case-insensitive"

Jeff



From carlos at eberhardt.net  Tue Nov 12 14:16:48 2002
From: carlos at eberhardt.net (Carlos Eberhardt)
Date: Tue, 12 Nov 2002 15:16:48 -0600
Subject: [Twisted-Python] stupid case sensitive web clients
References: <2E83F78D-F682-11D6-B9F1-0003938210D6@redivi.com>
Message-ID: <3DD16FC0.1020001@eberhardt.net>

Bob Ippolito wrote:

> But what my stupid device wants to see is:
> l.append("%s: %s\r\n" % ('-'.join(map(lambda 
> n:n.capitalize(),name.split('-'))), value)) # content-length turns 
> into Content-Length
>
Unrelated yet related, string.capwords() would perhaps be cleaner.

string.capwords(value, '-')

lurkingly,
carlos




From bob at redivi.com  Tue Nov 12 14:40:00 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 12 Nov 2002 16:40:00 -0500
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <20021112211919.GC1756@unpythonic.net>
Message-ID: <4BC5C998-F687-11D6-B9F1-0003938210D6@redivi.com>

On Tuesday, Nov 12, 2002, at 16:19 America/New_York, Jeff Epler wrote:

> On Tue, Nov 12, 2002 at 04:03:24PM -0500, Bob Ippolito wrote:
>> I have a stupid device that's talking to a Twisted web server that
>> demands HTTP headers to be capitalized Like-This, however Twisted only
>> capitalizes the first character..
> [...]
>> Any chance someone could patch that up?
>
> Doubtful.
>
> http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
>     "Field names are case-insensitive"

Well, it's already doing capitalize(), might as well capitalize it the 
way that everything else does.  It certainly wouldn't break anything to 
send it with string.capwords(name, '-') instead of name.capitalize().

-bob




From mwh at python.net  Tue Nov 12 12:20:12 2002
From: mwh at python.net (Michael Hudson)
Date: 12 Nov 2002 19:20:12 +0000
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com>
Message-ID: <2mpttasihf.fsf@starship.python.net>

"Patrick K. O'Brien" <pobrien at orbtech.com> writes:

> On Tuesday 12 November 2002 11:06 am, Steve Waterbury wrote:
> > Twisted Gurus:
> 
> Not yet, but I'd like to be one day. ;-)
> 
> > I'm using the "curry" recipe from the Python Cookbook
> > (pretty much verbatim), and it appears to work fine in my
> > code, but cPickle isn't happy about it:
> 
> The short answer is that Python doesn't currently pickle nested class 
> and fucntion objects, i.e. those not defined at the top level of the 
> module.

Unless something's changed since I last looked, you can't pickle
functions at all.

And this is a particularly hopeless case.  How did you expect it to
work at all?  Think like an implementer!

Cheers,
M.

-- 
  Darned confusing, unless you have that magic ingredient coffee, of
  which I can pay you Tuesday for a couple pounds of extra-special
  grind today.                           -- John Mitchell, 11 Jan 1999





From jml at mumak.net  Tue Nov 12 22:00:22 2002
From: jml at mumak.net (Jonathan M. Lange)
Date: Wed, 13 Nov 2002 16:00:22 +1100
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
In-Reply-To: <2mpttasihf.fsf@starship.python.net>
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com> <2mpttasihf.fsf@starship.python.net>
Message-ID: <20021113050022.GJ15455@grond.mumak.net>

On Tue, Nov 12, 2002 at 07:20:12PM +0000, Michael Hudson wrote:
> "Patrick K. O'Brien" <pobrien at orbtech.com> writes:
> 
> > On Tuesday 12 November 2002 11:06 am, Steve Waterbury wrote:
> > > Twisted Gurus:
> > 
> > Not yet, but I'd like to be one day. ;-)
> > 
> > > I'm using the "curry" recipe from the Python Cookbook
> > > (pretty much verbatim), and it appears to work fine in my
> > > code, but cPickle isn't happy about it:
> > 
> > The short answer is that Python doesn't currently pickle nested class 
> > and fucntion objects, i.e. those not defined at the top level of the 
> > module.
> 
> Unless something's changed since I last looked, you can't pickle
> functions at all.
> 

>>> def foo():
...   pass
...
>>> import cPickle
>>> cPickle.dump(foo, open('testpickle', 'w'))
>>> bar = cPickle.load(open('testpickle'))

I'd imagine this would work in most versions of python, given that
people have been pickling objects for countless generations.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021113/7718f2cd/attachment.sig>

From glyph at twistedmatrix.com  Tue Nov 12 21:53:31 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 12 Nov 2002 22:53:31 -0600 (CST)
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <4BC5C998-F687-11D6-B9F1-0003938210D6@redivi.com>
References: <20021112211919.GC1756@unpythonic.net>
	<4BC5C998-F687-11D6-B9F1-0003938210D6@redivi.com>
Message-ID: <20021112.225331.93033623.glyph@twistedmatrix.com>

On Tue, 12 Nov 2002 16:40:00 -0500, Bob Ippolito <bob at redivi.com> wrote:
> Well, it's already doing capitalize(), might as well capitalize it the 
> way that everything else does.  It certainly wouldn't break anything to 
> send it with string.capwords(name, '-') instead of name.capitalize().

If I recall correctly, it's doing capitalize() because it was *originally* just
sending the headers lowercase, and somebody else had a broken device and/or
script that was expecting headers to be formatted exactly as they are now (in
particular, Cache-control).

If people are really encountering broken devices like this on a regular basis
(and they seem to be) perhaps it would be best to make the header-formatting
code by default do all-lowercase, but be easily pluggable?  This would have the
advantage of eliminating a bunch of unnecessary string allocations during HTTP
request processing.  Another option would be to have the headers decided on a
case-by-case basis, by looking up in a hashtable.  This would let us have a
little popularity contest to determine how existing servers send their
"case-insensitive" headers and record each decision...

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021112/8e87a2fd/attachment.sig>

From glyph at twistedmatrix.com  Tue Nov 12 22:13:41 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 12 Nov 2002 23:13:41 -0600 (CST)
Subject: [Twisted-Python] pickle apparently doesn't go with curry ...
In-Reply-To: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov>
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov>
Message-ID: <20021112.231341.59661246.glyph@twistedmatrix.com>


On Tue, 12 Nov 2002 12:06:07 -0500, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> Any ideas?

Well, others have already told you why this doesn't work :-) but if I may
suggest something...

No offense to the very bright folks who brought us the Python Cookbook, because
I find much of it very valuable, but some of their recepies are overly
complicated with bizarre side effects that are really not obvious until you've
been using them for a while.  Persistence is a particularly dark corner, both
with pickle and without.  Two of my least favorite recipies in this regard are
"Borg" and "curry".  While interesting from a technical perspective on Python's
expressiveness, they're rarely expressing what you want :).  For example, to
translate the curry example you gave to a slightly-more-verbose but
much-more-straightforward python idiom:

class curry:
    def __init__(self, func, *create_time_args, **create_time_kwds):
        self.func = func
        self.create_time_args = create_time_args
        self.create_time_kwds = create_time_kwds
    def __call__(self, *call_time_args, **call_time_kwds):
        args = self.create_time_args + call_time_args
        kwds = self.create_time_kwds.copy()
        kwds.update(call_time_kwds)
        return self.func(*args, **kwds)

The cost of a much more straightforward interaction with other Python tools --
not just for persistence, but for example, for debugging -- comes to exactly 1
additional line of code.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021112/22948cee/attachment.sig>

From twisted_low at contact.com.my  Wed Nov 13 02:12:12 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Wed, 13 Nov 2002 17:12:12 +0800
Subject: [Twisted-Python] xmlrpc
Message-ID: <200211131712.AA345833972@contact.com.my>

I am trying the examples in www.xmlrpc.com with twisted matrix but I have hit a wall I hope that somebody can give me a hand.

I am trying to call the method from my xml ...

My xml code :

<?xml version="1.0"?>
<methodCall>
   <methodName>examples.tryone.Echoer.echo_something</methodName>
   <params>
      <param>
         <value>Name</value>
         </param>
      </params>
   </methodCall>


My xmlrpc server code :

#!c:\python22\python.exe
from twisted.web import xmlrpc
from twisted.internet import defer
import xmlrpclib

class Echoer(xmlrpc.XMLRPC):
    def echo_something(self,name):
      return name
      


def main():
    from twisted.internet.app import Application
    from twisted.web import server
    app = Application("xmlrpc")
    r = Echoer()
    app.listenTCP(7080, server.Site(r))
    app.run(0)


if __name__ == '__main__':
    main()

The error I get :

web.Server Traceback xml.parsers.expat.ExpatError: no element found: line 1, column 0 

I a newbie at this so please forgive me if what i am doing is like really stupid or i am asking a dumb question. Thanks



From twisted_low at contact.com.my  Wed Nov 13 02:13:49 2002
From: twisted_low at contact.com.my (lals;dfjsd)
Date: Wed, 13 Nov 2002 17:13:49 +0800
Subject: [Twisted-Python] xmlrpc
Message-ID: <200211131713.AA276038066@contact.com.my>

I am trying the examples in www.xmlrpc.com with twisted matrix but I have hit a wall I hope that somebody can give me a hand.

I am trying to call the method from my xml ...

My xml code :

<?xml version="1.0"?>
<methodCall>
   <methodName>examples.tryone.Echoer.echo_something</methodName>
   <params>
      <param>
         <value>Name</value>
         </param>
      </params>
   </methodCall>


My xmlrpc server code :

#!c:\python22\python.exe
from twisted.web import xmlrpc
from twisted.internet import defer
import xmlrpclib

class Echoer(xmlrpc.XMLRPC):
    def echo_something(self,name):
      return name
      


def main():
    from twisted.internet.app import Application
    from twisted.web import server
    app = Application("xmlrpc")
    r = Echoer()
    app.listenTCP(7080, server.Site(r))
    app.run(0)


if __name__ == '__main__':
    main()

The error I get :

web.Server Traceback xml.parsers.expat.ExpatError: no element found: line 1, column 0 

I a newbie at this so please forgive me if what i am doing is like really stupid or i am asking a dumb question. Thanks



From andrew-twisted at puzzling.org  Wed Nov 13 03:08:31 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 13 Nov 2002 21:08:31 +1100
Subject: [Twisted-Python] xmlrpc
In-Reply-To: <200211131712.AA345833972@contact.com.my>
References: <200211131712.AA345833972@contact.com.my>
Message-ID: <20021113100831.GA635@frobozz.local>

On Wed, Nov 13, 2002 at 05:12:12PM +0800, lals;dfjsd wrote:
> I am trying the examples in www.xmlrpc.com with twisted matrix but I have
> hit a wall I hope that somebody can give me a hand.
> 
[..snip..]
>
> My xmlrpc server code :
> 
> #!c:\python22\python.exe
> from twisted.web import xmlrpc
> from twisted.internet import defer
> import xmlrpclib
> 
> class Echoer(xmlrpc.XMLRPC):
>     def echo_something(self,name):
          ^^^^
          Shouldn't this be "xmlrpc_something"?

> The error I get :
> 
> web.Server Traceback xml.parsers.expat.ExpatError: no element found: line 1, column 0 

Hmm.  That looks like the xmlrpc call you are sending is somehow broken, but
I don't know enough about xmlrpc to say if that's the case.

> I a newbie at this so please forgive me if what i am doing is like really
> stupid or i am asking a dumb question. Thanks

Have you looked at doc/examples/xmlrpc.py in the Twisted distribution?  It
includes a simple server example, and in the comments describes how to
connect to it using python2.2's xmlrpclib client.

-Andrew.




From waterbug at beeblebrox.gsfc.nasa.gov  Wed Nov 13 07:57:29 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 13 Nov 2002 09:57:29 -0500
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com> <2mpttasihf.fsf@starship.python.net>
Message-ID: <3DD26859.920FDE58@beeblebrox.gsfc.nasa.gov>

Michael Hudson wrote:
> 
> "Patrick K. O'Brien" <pobrien at orbtech.com> writes:
> 
> > On Tuesday 12 November 2002 11:06 am, Steve Waterbury wrote:
> > > Twisted Gurus:
> >
> > Not yet, but I'd like to be one day. ;-)
> >
> > > I'm using the "curry" recipe from the Python Cookbook
> > > (pretty much verbatim), and it appears to work fine in my
> > > code, but cPickle isn't happy about it:
> >
> > The short answer is that Python doesn't currently pickle nested class
> > and fucntion objects, i.e. those not defined at the top level of the
> > module.
> 
> Unless something's changed since I last looked, you can't pickle
> functions at all.
> 
> And this is a particularly hopeless case.  How did you expect it to
> work at all?  Think like an implementer!

Gee, thanks for the encouragement ... I got it to work, and now 
I'm not gonna tell you how ... nyah nyah!  :^)

Cheers,
-- Steve.



From pobrien at orbtech.com  Wed Nov 13 08:43:08 2002
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Wed, 13 Nov 2002 09:43:08 -0600
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
In-Reply-To: <2mpttasihf.fsf@starship.python.net>
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com> <2mpttasihf.fsf@starship.python.net>
Message-ID: <200211130943.08069.pobrien@orbtech.com>

On Tuesday 12 November 2002 01:20 pm, Michael Hudson wrote:
> "Patrick K. O'Brien" <pobrien at orbtech.com> writes:
> > The short answer is that Python doesn't currently pickle nested
> > class and fucntion objects, i.e. those not defined at the top level
> > of the module.
>
> Unless something's changed since I last looked, you can't pickle
> functions at all.

Sure you can:

>>> import pickle
>>> pickle.dumps
<function dumps at 0x85f22cc>
>>> p = pickle.dumps(pickle.dumps)
>>> p
'cpickle\ndumps\np0\n.'
>>> dir
<built-in function dir>
>>> p = pickle.dumps(dir)
>>> p
'c__builtin__\ndir\np0\n.'
>>> 

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From mwh at python.net  Wed Nov 13 03:50:50 2002
From: mwh at python.net (Michael Hudson)
Date: 13 Nov 2002 10:50:50 +0000
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com> <2mpttasihf.fsf@starship.python.net> <20021113050022.GJ15455@grond.mumak.net>
Message-ID: <2mbs4trbed.fsf@starship.python.net>

jml at mumak.net (Jonathan M. Lange) writes:

> >>> def foo():
> =2E..   pass
> =2E..
> >>> import cPickle
> >>> cPickle.dump(foo, open('testpickle', 'w'))
> >>> bar =3D cPickle.load(open('testpickle'))
> 
> I'd imagine this would work in most versions of python, given that
> people have been pickling objects for countless generations.

Oops, my mistake.  But note that whats been pickled is a reference to
__main__.foo, not the function object itself:

$ python2
Python 2.2.1 (#1, Apr  9 2002, 13:10:27) 
[GCC 2.96 20000731 (Red Hat Linux 7.1 2.96-98)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> def foo():
...  pass
... 
>>> import pickle
>>> pickle.dump(foo, open("/tmp/t", "w"))
>>> 
$ python2
Python 2.2.1 (#1, Apr  9 2002, 13:10:27) 
[GCC 2.96 20000731 (Red Hat Linux 7.1 2.96-98)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import pickle
>>> foo = 1
>>> pickle.load(open("/tmp/t"))
1
>>> 

so 

def f():
    def g():
        return 1
    return g

pickle.dump(f(), ...)

still isn't going to work... (without fiddling).

Cheers,
M.





From pobrien at orbtech.com  Wed Nov 13 08:51:38 2002
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Wed, 13 Nov 2002 09:51:38 -0600
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
In-Reply-To: <2mbs4trbed.fsf@starship.python.net>
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <20021113050022.GJ15455@grond.mumak.net> <2mbs4trbed.fsf@starship.python.net>
Message-ID: <200211130951.38353.pobrien@orbtech.com>

On Wednesday 13 November 2002 04:50 am, Michael Hudson wrote:
> jml at mumak.net (Jonathan M. Lange) writes:
> > >>> def foo():
> >
> > =2E..   pass
> > =2E..
> >
> > >>> import cPickle
> > >>> cPickle.dump(foo, open('testpickle', 'w'))
> > >>> bar =3D cPickle.load(open('testpickle'))
> >
> > I'd imagine this would work in most versions of python, given that
> > people have been pickling objects for countless generations.
>
> Oops, my mistake.  But note that whats been pickled is a reference to
> __main__.foo, not the function object itself:

That's true about all code-like objects. The code itself doesn't get 
pickled, only the state. The code is retrieved by the unpickler via the 
references to the location of the code - the package name, module name, 
class name, function name, etc.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From typo at soniq.net  Wed Nov 13 09:30:04 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 13 Nov 2002 17:30:04 +0100
Subject: [Twisted-Python] missing woven patch
Message-ID: <20021113163004.GA19218@soniq.net>

donovan,

the patch you mailed me while twistedmatrix.com was lagging
still hasn't made it's way into cvs. please apply:

diff -u -r1.36 view.py
--- view.py     31 Oct 2002 03:29:08 -0000      1.36
+++ view.py     13 Nov 2002 16:29:45 -0000
@@ -296,6 +296,11 @@
                 model = self.getTopOfModelStack()
             if not view or not isinstance(view, widgets.Widget):
                 view = widgets.DefaultWidget(model)
+
+            view.modelStack = self.modelStack[:]
+            view.viewStack = self.viewStack[:]
+            view.controllerStack = self.controllerStack[:]
+
             if not controller:
                 controller = input.DefaultHandler(model)
             controller.parent = self.controllerStack[0]




From mwh at python.net  Wed Nov 13 09:54:55 2002
From: mwh at python.net (Michael Hudson)
Date: 13 Nov 2002 16:54:55 +0000
Subject: [Twisted-Python] Re: pickle apparently doesn't go with curry ...
References: <3DD134FF.6DDC1E67@beeblebrox.gsfc.nasa.gov> <200211121124.37171.pobrien@orbtech.com> <2mpttasihf.fsf@starship.python.net> <3DD26859.920FDE58@beeblebrox.gsfc.nasa.gov>
Message-ID: <2mn0odjtpc.fsf@starship.python.net>

Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> writes:

> Michael Hudson wrote:
> > 
> > And this is a particularly hopeless case.  How did you expect it to
> > work at all?  Think like an implementer!
> 
> Gee, thanks for the encouragement ... I got it to work, and now 
> I'm not gonna tell you how ... nyah nyah!  :^)

Sorry, I wasn't *trying* to be offensive.  But if one understands how
pickling works, one knows not to try things like this...

Cheers,
M.

-- 
  If you don't use emacs, you're a pathetic, mewling, masochistic
  weakling and I can't be bothered to convert you.    -- Ron Echeverri





From typo at soniq.net  Wed Nov 13 12:35:06 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 13 Nov 2002 20:35:06 +0100
Subject: [Twisted-Python] web.static patch waiting for commit (before 1.0.1)
Message-ID: <20021113193506.GA17350@soniq.net>

the patch i submitted for pre-1.0 because to fix query_string's for
index.rpy's (see list archive), hasn't been commited nor rejected so far.

testcase is: http://www.twistedmatrix.com/, repeatedly adding ?bla=foo strings
and wondering about the redirect that discards the query_string.

anyone care to look at this?:

diff -u -r1.74 static.py
--- static.py   12 Nov 2002 13:00:06 -0000      1.74
+++ static.py   13 Nov 2002 19:31:41 -0000
@@ -267,10 +267,12 @@
             # If someone is looking for children with a PathReferenceContext,
             # the request won't have a prepath, and we shouldn't do this kind
             # of mangling anyway because it has already been done.
-            if hasattr(request, 'postpath') and not request.postpath and request.uri[-1] != '/':
+            if hasattr(request, 'postpath') and not request.postpath and \
+                        string.split(request.uri,'?')[0][-1] != '/':
                 return Redirect(request)
             if os.path.exists(childPath):
-                if hasattr(request, 'postpath') and not request.postpath and not self.getIndex(request):
+                if hasattr(request, 'postpath') and not request.postpath and \
+                                                not self.getIndex(request):
                     return widgets.WidgetPage(DirectoryListing(self.path))

         ##



From typo at soniq.net  Wed Nov 13 12:49:35 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 13 Nov 2002 20:49:35 +0100
Subject: [Twisted-Python] Re: missing woven patch
In-Reply-To: <20021113163004.GA19218@soniq.net>
References: <20021113163004.GA19218@soniq.net>
Message-ID: <20021113194935.GA1143@soniq.net>

On Wed, Nov 13, 2002 at 05:30:04PM +0100, Paul Boehm wrote:
> the patch you mailed me while twistedmatrix.com was lagging
> still hasn't made it's way into cvs. please apply:

stupid typo! sticky tag!

no wonder i didn't get the update.

sorry,
  paul



From smurf at noris.de  Wed Nov 13 13:19:59 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Wed, 13 Nov 2002 21:19:59 +0100
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021113193506.GA17350@soniq.net>; from typo@soniq.net on Wed, Nov 13, 2002 at 08:35:06PM +0100
References: <20021113193506.GA17350@soniq.net>
Message-ID: <20021113211959.T18881@noris.de>

Hi,

Nobody seems to have used twisted.python.threadable.ThreadAttr recently..:

--- /usr/lib/python2.2/site-packages/twisted/python/threadable.py	2002-09-23 05:30:46.000000000 +0200
+++ twisted/python/threadable.py	2002-11-13 21:15:46.000000000 +0100
@@ -297,7 +297,7 @@
         return getattr(self.__get(), key)
 
     def __setattr__(self, key, val):
-        return setattr(self.__get(), key)
+        return setattr(self.__get(), key, val)
 
     def __delattr__(self, key):
         return delattr(self.__get(), key)

Disclaimer: I found this by looking at the code -- but I didn't test it
either.  :-/

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/



From glyph at twistedmatrix.com  Wed Nov 13 13:27:43 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 13 Nov 2002 14:27:43 -0600 (CST)
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021113211959.T18881@noris.de>
References: <20021113193506.GA17350@soniq.net>
	<20021113211959.T18881@noris.de>
Message-ID: <20021113.142743.66163933.glyph@twistedmatrix.com>

On Wed, 13 Nov 2002 21:19:59 +0100, "Matthias Urlichs" <smurf at noris.de> wrote:
> Nobody seems to have used twisted.python.threadable.ThreadAttr recently..:

Wow.  If it's _that_ rarely used, maybe the right thing to do is just to trash
it.  Would this code be useful to you if it worked?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021113/07ced8e7/attachment.sig>

From smurf at noris.de  Wed Nov 13 14:19:34 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Wed, 13 Nov 2002 22:19:34 +0100
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021113.142743.66163933.glyph@twistedmatrix.com>; from glyph@twistedmatrix.com on Wed, Nov 13, 2002 at 02:27:43PM -0600
References: <20021113193506.GA17350@soniq.net> <20021113211959.T18881@noris.de> <20021113.142743.66163933.glyph@twistedmatrix.com>
Message-ID: <20021113221934.U18881@noris.de>

Hi,

Glyph Lefkowitz:
> On Wed, 13 Nov 2002 21:19:59 +0100, "Matthias Urlichs" <smurf at noris.de> wrote:
> > Nobody seems to have used twisted.python.threadable.ThreadAttr recently..:
> 
> Wow.  If it's _that_ rarely used, maybe the right thing to do is just to trash
> it.  Would this code be useful to you if it worked?
> 
Personally, I woudn't need it. IMHO: if you use threads in Twisted, you do
it via the thread pool. That doesn't mesh at all with ThreadAttr. State is
usually carried in objects or procedure arguments, which don't need global
storage anyway.


I find myself more in immediate need of a queueing mechanism; the
quick-and-dirty solution seems to be to fork off two threads and to use a
bounded Python Queue. However, the continuous switching between the reader
(which blocks on the queue, therefore needs to be in its own thread) and
Twisted's main thread (which writes to the process-or-whatever that's
going to eventually consume the data) seems rather sub-optimal for
performance.  :-/

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021113/639e529a/attachment.sig>

From twisted at itamarst.org  Wed Nov 13 15:04:13 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Nov 2002 17:04:13 -0500
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021113221934.U18881@noris.de>
References: <20021113193506.GA17350@soniq.net>
	<20021113211959.T18881@noris.de>
	<20021113.142743.66163933.glyph@twistedmatrix.com>
	<20021113221934.U18881@noris.de>
Message-ID: <20021113170413.0cf6079f.twisted@itamarst.org>

On Wed, 13 Nov 2002 22:19:34 +0100
"Matthias Urlichs" <smurf at noris.de> wrote:

> I find myself more in immediate need of a queueing mechanism; the
> quick-and-dirty solution seems to be to fork off two threads and to
> use a bounded Python Queue. However, the continuous switching between
> the reader(which blocks on the queue, therefore needs to be in its own
> thread) and Twisted's main thread (which writes to the
> process-or-whatever that's going to eventually consume the data) seems
> rather sub-optimal for performance.  :-/

I don't see why you need a thread for queueing - a simple list would do,
or a class wrapping one. Or look at transport's producer/consumer
interface if this is for a protocol. Adding to queue is appending to
list, dequeuing is getting item from beginning of list.

If, and *only* if you need threads - i.e. you are doing either blocking
operations or really long running calculations, there are some options
for you in Twisted.

We have a thread pool dispatcher that queues methods to be run in the
thread pool, that covers some the use cases. If you want to use a queue
I suggest just sticking to Python's Queue or the slighly nicer
twisted.python.timeoutqueue.

In general using threads in Python is slow anyway do to the global
interpreter lock, which means in most cases only one thread at a time is
running anyway. That being said, Queue.Queue is rather slow in and of
itself, and can be implemented in a much faster way by using one lock,
and use mxQueue.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From lists at morpheus.demon.co.uk  Wed Nov 13 14:36:20 2002
From: lists at morpheus.demon.co.uk (Paul Moore)
Date: Wed, 13 Nov 2002 21:36:20 +0000
Subject: [Twisted-Python] tap-relative filenames?
Message-ID: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk>

I'm not even sure I know how to ask this question properly, so please
bear with me...

I'm writing an application in Twisted (a news server, serving mbox
files as read-only groups, FWIW). I'm including a simple interface to
dynamically add new files (groups). No problem, but I'd rather keep
things as relocatable as possible.

Ultimately, I'll have a tap file, which I'll use to start the
application using the twistd daemon. So what I'd like to do is store
filenames relative to the directory which contains the tap file. OK,
so I can cd to that directory, and start twistd from there. But in the
more general case, I may start the app from an arbitrary directory and
give the full path to the tap file.

So what I'm saying is, can I find the name of the tap file from within
the application code? I imagine this is non-trivial, because the code
won't always even be started from a tap file (my test rig does
reactor.listenTCP/reactor.run manually) but when it isn't then names
won't be getting persisted, so I don't care (I guess...)

Can anybody help? Does anyone even follow the question??? :-)

Thanks,
Paul

-- 
This signature intentionally left blank



From smurf at noris.de  Wed Nov 13 23:02:21 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Thu, 14 Nov 2002 07:02:21 +0100
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021113170413.0cf6079f.twisted@itamarst.org>; from twisted@itamarst.org on Wed, Nov 13, 2002 at 05:04:13PM -0500
References: <20021113193506.GA17350@soniq.net> <20021113211959.T18881@noris.de> <20021113.142743.66163933.glyph@twistedmatrix.com> <20021113221934.U18881@noris.de> <20021113170413.0cf6079f.twisted@itamarst.org>
Message-ID: <20021114070221.V18881@noris.de>

Hi,

Itamar Shtull-Trauring:
> I don't see why you need a thread for queueing - a simple list would do,
> or a class wrapping one. Or look at transport's producer/consumer
> interface if this is for a protocol. Adding to queue is appending to
> list, dequeuing is getting item from beginning of list.

Some sample code would be nice... or pointers to which modules to look at.

> If, and *only* if you need threads - i.e. you are doing either blocking
> operations or really long running calculations, there are some options
> for you in Twisted.
> 
Yes -- the source data are coming from a database (and the consumer may
have to do database look-ups too). Since the consumer can be slower and I
don't want in-core memory to grow indiscriminately, some sort of
thread-safe bounded queuing makes sense.

> We have a thread pool dispatcher that queues methods to be run in the
> thread pool, that covers some the use cases. If you want to use a queue
> I suggest just sticking to Python's Queue or the slighly nicer
> twisted.python.timeoutqueue.
> 
Unrelated nit: twisted.python.timeoutqueue lacks a pop() function with
timeout (the wait+pop combo is NOT thread safe: you might have multiple
consumers), and, frankly, the basic idea of timeout-waiting on a queue the
way this module does it is just plain ugly.

TODO: Rewrite the whole thing, using mxQueue for the actual data and
Twisted support for everything else -- I'd use a Deferred() for pulling
one item from the queue, for instance, but a "call this function 
whenever you have a new item" interface might make more sense with a
high-volume queue. (This function might then want to return a Deferred()
to indicate that it will be ready for the next item LATER.) Same for
pushing stuff into the queue. And all of that thread-safe.  ;-)

I think I'll do that, probably sometime next week, because I need it.

> In general using threads in Python is slow anyway do to the global
> interpreter lock, which means in most cases only one thread at a time is
> running anyway.

While that is certainly true, working with blocking external interfaces
more-or-less requires them.

> That being said, Queue.Queue is rather slow in and of
> itself, and can be implemented in a much faster way by using one lock,
> and use mxQueue.
> 
I'd have to reinvent all of Queue's thread-support features, though.
That might be a nice exercise, but I'll spend my time on required features
first.  ;-)

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/



From m at moshez.org  Wed Nov 13 22:00:50 2002
From: m at moshez.org (Moshe Zadka)
Date: 14 Nov 2002 05:00:50 -0000
Subject: [Twisted-Python] tap-relative filenames?
In-Reply-To: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk>
References: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk>
Message-ID: <20021114050050.6789.qmail@green.zadka.com>

On Wed, 13 Nov 2002, Paul Moore <lists at morpheus.demon.co.uk> wrote:

> Ultimately, I'll have a tap file, which I'll use to start the
> application using the twistd daemon. So what I'd like to do is store
> filenames relative to the directory which contains the tap file.

This is not a good idea -- on Debian systems, for example, tha tap
would be somewhere on /etc while the data files would be under
/var. In general, the tap should store the actual file names.
(BTW: Debian is used here as a system which adheres to the FHS religiously,
but really this is a consequence of the FHS)

This seems akin to the classic UNIX question "how do I find the name
of the executable?" to which the answer is "you don't".



From twisted at itamarst.org  Thu Nov 14 00:16:45 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 14 Nov 2002 02:16:45 -0500
Subject: [Twisted-Python] PATCH: setattr problem in ThreadAttr
In-Reply-To: <20021114070221.V18881@noris.de>
References: <20021113193506.GA17350@soniq.net>
	<20021113211959.T18881@noris.de>
	<20021113.142743.66163933.glyph@twistedmatrix.com>
	<20021113221934.U18881@noris.de>
	<20021113170413.0cf6079f.twisted@itamarst.org>
	<20021114070221.V18881@noris.de>
Message-ID: <20021114021645.033e24e7.twisted@itamarst.org>

On Thu, 14 Nov 2002 07:02:21 +0100
"Matthias Urlichs" <smurf at noris.de> wrote:

> Yes -- the source data are coming from a database (and the consumer
> may have to do database look-ups too). Since the consumer can be
> slower and I don't want in-core memory to grow indiscriminately, some
> sort of thread-safe bounded queuing makes sense.

Just use Queue.Queue then?

> Unrelated nit: twisted.python.timeoutqueue lacks a pop() function with
> timeout (the wait+pop combo is NOT thread safe: you might have
> multiple consumers), and, frankly, the basic idea of timeout-waiting
> on a queue the way this module does it is just plain ugly.

It sucks, yes. I needed it though and couldn't think up a better way of
doing it.

> I'd have to reinvent all of Queue's thread-support features, though.
> That might be a nice exercise, but I'll spend my time on required
> features first.  ;-)

I have code that does this. But if you want bounded size you may as well
stick to Queue, I sped it up by removing support for this :)


-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From radix at twistedmatrix.com  Thu Nov 14 11:49:36 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 14 Nov 2002 19:49:36 +0100
Subject: [Twisted-Python] WebDAV support
Message-ID: <20021114184936.GK645@toshi>

Hey Daniel, the link to MoulDAVia on your website is broken. How's it
coming along? I'd like to check it out.

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From lists at morpheus.demon.co.uk  Thu Nov 14 13:46:21 2002
From: lists at morpheus.demon.co.uk (Paul Moore)
Date: Thu, 14 Nov 2002 20:46:21 +0000
Subject: [Twisted-Python] tap-relative filenames?
References: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk> <20021114050050.6789.qmail@green.zadka.com>
Message-ID: <n2m-g.n0obhobm.fsf@morpheus.demon.co.uk>

Moshe Zadka <m at moshez.org> writes:

> On Wed, 13 Nov 2002, Paul Moore <lists at morpheus.demon.co.uk> wrote:
>
>> Ultimately, I'll have a tap file, which I'll use to start the
>> application using the twistd daemon. So what I'd like to do is store
>> filenames relative to the directory which contains the tap file.
>
> This is not a good idea -- on Debian systems, for example, tha tap
> would be somewhere on /etc while the data files would be under
> /var. In general, the tap should store the actual file names.

On Unix, yes, quite probably. But on Windows, storing data in an
application-relative location is quite common.

On Windows, there are no standardised directories like /etc or
/var. So absolute filenames are much less usable, in general.

> This seems akin to the classic UNIX question "how do I find the name
> of the executable?" to which the answer is "you don't".

Yes, but on Windows, the answer is to use the Windows API
GetModuleFileName(). It's a cultural difference between the two
operating systems.

If there isn't a way of locating the tap file at the moment, is there
any possibility of one getting added? (I can't do so myself, I'm
nowhere near familiar enough with the internals of Twisted yet).

Paul.

-- 
This signature intentionally left blank



From smurf at noris.de  Thu Nov 14 14:16:54 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Thu, 14 Nov 2002 22:16:54 +0100
Subject: [Twisted-Python] tap-relative filenames?
In-Reply-To: <n2m-g.n0obhobm.fsf@morpheus.demon.co.uk>; from lists@morpheus.demon.co.uk on Thu, Nov 14, 2002 at 08:46:21PM +0000
References: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk> <20021114050050.6789.qmail@green.zadka.com> <n2m-g.n0obhobm.fsf@morpheus.demon.co.uk>
Message-ID: <20021114221654.O18881@noris.de>

Hi,

Paul Moore:
> On Unix, yes, quite probably. But on Windows, storing data in an
> application-relative location is quite common.
> 
On Windows, programs are not installable without an elaborate installation
program dance. Some people consider that a bug -- on Mac systems, for
instance, you drag the whole application to the hard disk, _that's_it_,
and a sensible application will _never_ write into its own program space
(it could reside on a read-only file server).

> On Windows, there are no standardised directories like /etc or
> /var. So absolute filenames are much less usable, in general.
> 
Setup stuff under Windows typically lives in that arcane thing called
"registry"...

> > This seems akin to the classic UNIX question "how do I find the name
> > of the executable?" to which the answer is "you don't".
> 
Under Linux, you readlink("/proc/self/cmd") (and check if that file exists
and has the same inode). Other OSes are not interesting.  ;-)

> If there isn't a way of locating the tap file at the moment, is there
> any possibility of one getting added?

That'd interest me too.

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/



From hbl at st-andrews.ac.uk  Fri Nov 15 04:59:54 2002
From: hbl at st-andrews.ac.uk (Hamish Lawson)
Date: Fri, 15 Nov 2002 11:59:54 +0000
Subject: [Twisted-Python] (no subject)
Message-ID: <5.2.0.9.0.20021115113151.03b28b38@spey.st-andrews.ac.uk>

Jeff Epler wrote:

>Bob Ippolito wrote:
>
> > I have a stupid device that's talking to a Twisted web server that
> > demands HTTP headers to be capitalized Like-This, however Twisted only
> > capitalizes the first character..
>[...]
> > Any chance someone could patch that up?
>
>Doubtful.
>
>http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
>     "Field names are case-insensitive"

Nevertheless the headers are almost always presented in the HTTP spec and 
other reference materials in the style 'Content-Type'. I would guess 
therefore that this style will be the one most widely adopted by those 
broken clients that expect a particular capitalisation.


Hamish Lawson





From hbl at st-andrews.ac.uk  Fri Nov 15 05:20:22 2002
From: hbl at st-andrews.ac.uk (Hamish Lawson)
Date: Fri, 15 Nov 2002 12:20:22 +0000
Subject: [Twisted-Python] stupid case sensitive web clients
Message-ID: <5.2.0.9.0.20021115121958.03ae05e0@spey.st-andrews.ac.uk>

[This time with a subject line!]

Jeff Epler wrote:

>Bob Ippolito wrote:
>
> > I have a stupid device that's talking to a Twisted web server that
> > demands HTTP headers to be capitalized Like-This, however Twisted only
> > capitalizes the first character..
>[...]
> > Any chance someone could patch that up?
>
>Doubtful.
>
>http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
>     "Field names are case-insensitive"

Nevertheless the headers are almost always presented in the HTTP spec and 
other reference materials in the style 'Content-Type'. I would guess 
therefore that this style will be the one most widely adopted by those 
broken clients that expect a particular capitalisation.


Hamish Lawson





From smurf at noris.de  Fri Nov 15 05:22:49 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Fri, 15 Nov 2002 13:22:49 +0100
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <5.2.0.9.0.20021115121958.03ae05e0@spey.st-andrews.ac.uk>; from hbl@st-andrews.ac.uk on Fri, Nov 15, 2002 at 12:20:22PM +0000
References: <5.2.0.9.0.20021115121958.03ae05e0@spey.st-andrews.ac.uk>
Message-ID: <20021115132249.X18881@noris.de>

Hi,

Hamish Lawson:
> > > I have a stupid device that's talking to a Twisted web server that
> > > demands HTTP headers to be capitalized Like-This

Ouch. What does the manufacturer of said stupid device have to say about
this?

> Nevertheless the headers are almost always presented in the HTTP spec and 
> other reference materials in the style 'Content-Type'. I would guess 
> therefore that this style will be the one most widely adopted by those 
> broken clients that expect a particular capitalisation.
> 
Personally, I'd rather send them as cOnTeNt-tYpE on principle, so that
those idiot devices / programs actually get _fixed_ sometime.    :-/

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/



From dstone at kde.org  Thu Nov 14 21:10:45 2002
From: dstone at kde.org (Daniel Stone)
Date: Fri, 15 Nov 2002 15:10:45 +1100
Subject: [Twisted-Python] WebDAV support
In-Reply-To: <20021114184936.GK645@toshi>
References: <20021114184936.GK645@toshi>
Message-ID: <20021115041045.GA14710@trinity.unimelb.edu.au>

On Thu, Nov 14, 2002 at 07:49:36PM +0100, Christopher Armstrong scrawled:
> Hey Daniel, the link to MoulDAVia on your website is broken. How's it
> coming along? I'd like to check it out.

All too slowly, I'm afraid. Busy with exams and other projects. :(

-- 
Daniel Stone 	     <daniel at raging.dropbear.id.au>             <dstone at kde.org>
Developer - http://kopete.kde.org, http://www.kde.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021115/d1b6c0b8/attachment.sig>

From glyph at twistedmatrix.com  Fri Nov 15 10:52:32 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 15 Nov 2002 11:52:32 -0600 (CST)
Subject: [Twisted-Python] tap-relative filenames?
In-Reply-To: <n2m-g.n0obhobm.fsf@morpheus.demon.co.uk>
References: <n2m-g.isz1kv8r.fsf@morpheus.demon.co.uk>
	<20021114050050.6789.qmail@green.zadka.com>
	<n2m-g.n0obhobm.fsf@morpheus.demon.co.uk>
Message-ID: <20021115.115232.98760705.glyph@twistedmatrix.com>

On Thu, 14 Nov 2002 20:46:21 +0000, Paul Moore <lists at morpheus.demon.co.uk> wrote:
> If there isn't a way of locating the tap file at the moment, is there
> any possibility of one getting added? (I can't do so myself, I'm
> nowhere near familiar enough with the internals of Twisted yet).

Yes, this is on my radar and I agree it's probably a necessity at least in some
form.  However, there is quite a bit of plumbing that does os.path.abspath or
depends on relative pathnames being relative to the run directory and not the
tap file.  We should probably add an --absolutize=true option to mktap or
something that will be the default on unix and not on win32.

Anyone want to volunteer to do this?  I sure don't have time :)

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021115/f9ff5c6c/attachment.sig>

From spam at polynode.com  Fri Nov 15 17:46:47 2002
From: spam at polynode.com (Alex)
Date: Fri, 15 Nov 2002 19:46:47 -0500
Subject: [Twisted-Python] Continuing problem with woven templateFile
Message-ID: <5.2.0.9.0.20021115193800.02117b80@coral.tufts.edu>

When using templateFile for either a View or a self-templating Widget, I am 
unable to include a directory name.  So, templateFile='tmpl-framework.html' 
works fine, but templateFile='tmpl/framework.html' generates a traceback 
that says the file doesn't exist -- even though both are in the same proper 
location on the server.

Earlier, putting in a path would result in a different error; Twisted.web 
would complain that it couldn't create '.tmpl/framework.pxp', rather than 
creating 'tmpl/.framework.pxp'.  I'm not sure if that problem has been 
fixed or if it's simply been displaced by the one above.

Either way, it's odd that template files should not be accessible anywhere 
other than a site's base document path.

--
Alex Levy
WWW: http://mesozoic.geecs.org
Tel: 617.835.0778

"Never let your sense of morals prevent you from doing what is right."
-- Salvor Hardin, Isaac Asimov's _Foundation_





From bob at redivi.com  Sat Nov 16 00:24:27 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 16 Nov 2002 02:24:27 -0500
Subject: [Twisted-Python] stupid case sensitive web clients
In-Reply-To: <20021115132249.X18881@noris.de>
Message-ID: <7038E73D-F934-11D6-A7B9-0003938210D6@redivi.com>

On Friday, Nov 15, 2002, at 07:22 America/New_York, Matthias Urlichs 
wrote:

> Hi,
>
> Hamish Lawson:
>>>> I have a stupid device that's talking to a Twisted web server that
>>>> demands HTTP headers to be capitalized Like-This
>
> Ouch. What does the manufacturer of said stupid device have to say 
> about
> this?

Nothing worthwhile, I made them rewrite their protocol entirely (from a 
bastardized nonworking SOAP-like XML based protocol to a relatively 
optimized binary protocol that makes sense), but I still have older 
devices that I need to use from time to time.  I'd like to be able to 
use them (a) without modifying my twisted install and (b) without 
writing a new protocol entirely.

-bob




From andrew-twisted at puzzling.org  Sat Nov 16 07:28:45 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 17 Nov 2002 01:28:45 +1100
Subject: [Twisted-Python] MultiServiceTestCase.testDeferredStopService failure.
Message-ID: <20021116142845.GC11301@frobozz.local>

In test_internet, MultiServiceTestCase.testDeferredStopService is failing
for me with Python 2.1.

The problem appears to be that the test assumes a particular order for the
callback results, but the object is internally holding them in a dict so
that order isn't guaranteed.

So is the test or the code buggy?  Can someone familiar with how
MultiService should work look at this?  Thanks.

-Andrew.




From radix at twistedmatrix.com  Sat Nov 16 07:42:11 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 16 Nov 2002 15:42:11 +0100
Subject: [Twisted-Python] MultiServiceTestCase.testDeferredStopService failure.
In-Reply-To: <20021116142845.GC11301@frobozz.local>
References: <20021116142845.GC11301@frobozz.local>
Message-ID: <20021116144211.GP645@toshi>

On Sun, Nov 17, 2002 at 01:28:45AM +1100, Andrew Bennetts wrote:
> In test_internet, MultiServiceTestCase.testDeferredStopService is failing
> for me with Python 2.1.
> 
> The problem appears to be that the test assumes a particular order for the
> callback results, but the object is internally holding them in a dict so
> that order isn't guaranteed.
> 
> So is the test or the code buggy?  Can someone familiar with how
> MultiService should work look at this?  Thanks.

The test was lame, and the API sucked. I fixed this just now: the
Deferred that MultiService.stopService returns now results in a dict
that looks like {serviceObject: (successOrFail, resultFromService)}.

This API was only added a week or two ago, so I didn't bother doing
any backwards compatibility.

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From twisted at itamarst.org  Sat Nov 16 21:57:43 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 16 Nov 2002 23:57:43 -0500
Subject: [Twisted-Python] New multicast support in Twisted -- please comment
Message-ID: <20021116235743.6f3ae5e9.twisted@itamarst.org>

I've just checked in multicast support into CVS.
reactor.listenMulticast/reactor.connectMulticast, otherwise it's just
like the new UDP stuff, except the transport has a new set of methods
documented in twisted.internet.interfaces.IMulticastTransport.

As with the UDP API, I've never actually used multicast. Any comments
from people who actually have used this in the past or can test this or
whatever would be very welcome.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From typo at soniq.net  Sun Nov 17 19:44:36 2002
From: typo at soniq.net (Paul Boehm)
Date: Mon, 18 Nov 2002 03:44:36 +0100
Subject: [Twisted-Python] Continuing problem with woven templateFile
In-Reply-To: <5.2.0.9.0.20021115193800.02117b80@coral.tufts.edu>
References: <5.2.0.9.0.20021115193800.02117b80@coral.tufts.edu>
Message-ID: <20021118024435.GA14972@soniq.net>

On Fri, Nov 15, 2002 at 07:46:47PM -0500, Alex wrote:
> Either way, it's odd that template files should not be accessible anywhere 
> other than a site's base document path.

try setting templateDirectory too

  paul



From bruce at cubik.org  Wed Nov 20 06:32:14 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Wed, 20 Nov 2002 06:32:14 -0700
Subject: [Twisted-Python] Woven
Message-ID: <3DDB8EDE.8040503@cubik.org>

Hey all,

Some time ago, when the major changes to Woven started to happen, Glyph 
and/or Donovan were going to write up what the planned changes were and 
where Woven was going.

I've got a fairly large amount of code using old Woven and am going to 
be faced soon with upgrading it to current Woven.

Can someone provide some sort of actual explanation of how Woven works 
today and what some of the typical usages are?  I already walked through 
the old Woven and figured it out back then, but I don't have the time to 
re-do that work.

Also, it would be nice if large architectural changes were posted about 
as changes were made so that people who aren't on the IRC channel could 
keep up with things.

Thanks,

  - Bruce




From dp at twistedmatrix.com  Wed Nov 20 10:20:56 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 20 Nov 2002 09:20:56 -0800
Subject: [Twisted-Python] Woven
In-Reply-To: <3DDB8EDE.8040503@cubik.org>
Message-ID: <6DCE0F36-FCAC-11D6-8B07-000393B3EC2C@twistedmatrix.com>

Bruce,

You bet. Things are still shifting around a little bit, in particular 
InputHandlers still don't fully work as nicely as I'd like them to. 
However, Widgets are pretty stable.

I'll spend some time this weekend writing up documentation of what the 
current usage looks like. In general, the biggest change is what 
self.model means to a Widget and InputHandler. Before, self.model was 
the main Model instance and self.submodel was a '/' delimited string 
(or list of strings, before that) that described how to get to the 
submodel. So as long as you didn't assume what self.model was (either 
in a factory or in the actual Widget/InputHandler code) you should be 
ok. Now, self.model is the actual leaf model, possibly wrapped in an 
IModel adapter.

If anything else has broken, let me know and I will write test cases 
for it to ensure that it works in the future (in particular Deferred 
support in a large number of places.)

Also, anyone that has used or tried to use InputHandlers, I would 
appreciate feedback about how things didn't work for you. In particular 
I'd like to explore how to better identify data in the request and get 
it to a particular InputHandler instance. (Right now, a node that looks 
like <input model="foo" controller="myController" /> will cause an 
InputHandler myController to look for "foo" in the request. This won't 
work because there's no name="foo" attribute on the node. Also, 
InputHandlers may want to handle more than just one piece of data from 
the request in the case of some complex object which handles an entire 
form.)

Donovan

On Wednesday, November 20, 2002, at 05:32 AM, Bruce Mitchener wrote:

> Hey all,
>
> Some time ago, when the major changes to Woven started to happen, 
> Glyph and/or Donovan were going to write up what the planned changes 
> were and where Woven was going.
>
> I've got a fairly large amount of code using old Woven and am going to 
> be faced soon with upgrading it to current Woven.
>
> Can someone provide some sort of actual explanation of how Woven works 
> today and what some of the typical usages are?  I already walked 
> through the old Woven and figured it out back then, but I don't have 
> the time to re-do that work.
>
> Also, it would be nice if large architectural changes were posted 
> about as changes were made so that people who aren't on the IRC 
> channel could keep up with things.
>
> Thanks,
>
>  - Bruce
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From ste at webaccess.mozquito.com  Wed Nov 20 13:42:08 2002
From: ste at webaccess.mozquito.com (Stefano Debenedetti)
Date: Wed, 20 Nov 2002 21:42:08 +0100
Subject: [Twisted-Python] mail and web server authentication: yet to come or already there?
Message-ID: <10106307.1037820875542.JavaMail.SYSTEM@webaccess>

Hello all, I am a new Twisted (and Python) user and first of all I would like to thank you for the great software. I love the architecture and I am sure I will learn a lot from looking at how it is implemented.

I would like to use twisted as an integrated mail/web server, in order to do some stuff like what I've done here [1]. I think I need to develop some minor but useful stuff that I will then post here so you can all see how bad my python coding is :-) for example, I am working to make the POP3 server compatible with mozilla...

One thing that is puzzling me is the twisted.cred stuff, even after reading all about it in the docs it is still not clear to my dummy self how to put it to use in order to restrict access on the twisted.web service (is HTTP basic auth implemented somewhere btw?) and also I don't understand why it is not used for access control to the twisted.mail services. Simply a matter of time or is it really meant for other types of authentication? Some more examples in this very sensitive area for people not using PB would help a lot....

One very small and probably already screwing-up-things contribution that I can do now is to the SMTP class, I include herewith my first attempt at using the diff utility:

$ diff cvs/Twisted/twisted/protocols/smtp.py cvs/Twisted/twisted/protocols/smtp.py_orig
137c137
<         to = rest[string.find(rest, "<")+1:-len(">")]
---
>         to = rest[len("TO:<"):-len(">")]

After modifying that, I was able to send mail using Blat [2].

I am unfortunately locked on a win$ platform for my development so many things are unnecessarily difficult, like getting C stuff to compile without having visual studio installed for instance. Is this dependancy on the m$ compiler anything unavoidable when doing python? Please forgive if that's a stupid question, I am new to this very cool language and had a very hard time getting SSL to work even though it was stated it would build with borland or cygwin compilers: I read somewhere in the twisted archives that some guy promised to write a walkthrough for that, did that ever happen :-) ?

Oops the very last is this one: are ALL tests supposed to work out-of-the-box (apart from those needing the crypto lib)? When I run them the UI crashes... :-(

Alright I'll stop my whining here for now and thank you very much for reading so far and providing this great framework, ciao

ste

p.s. aha here I go again: no way for me to access the IRC channel (lucky you :) as my provider seems to be blocking the identd stuff :-((( what happened to [3]?


[1] http://webaccess.mozquito.com:8080/mail/schnitz/how-to/174073468805351802.xml
[2] http://www.interlog.com/~tcharron/blat.html
[3] http://www.twistedmatrix.com/users/pb.twistd/






From andrew-twisted at puzzling.org  Wed Nov 20 17:14:30 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 21 Nov 2002 11:14:30 +1100
Subject: [Twisted-Python] mail and web server authentication: yet to come or already there?
In-Reply-To: <10106307.1037820875542.JavaMail.SYSTEM@webaccess>
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess>
Message-ID: <20021121001430.GA15059@frobozz.local>

On Wed, Nov 20, 2002 at 09:42:08PM +0100, Stefano Debenedetti wrote:
> 
> One thing that is puzzling me is the twisted.cred stuff, even after reading 
> all about it in the docs it is still not clear to my dummy self how to put 
> it to use in order to restrict access on the twisted.web service (is HTTP 
> basic auth implemented somewhere btw?) and also I don't understand why it 

I *think* twisted.web.guard has this functionality... I've heard it's going
to be overhauled at some point, it's not as nice as it could be.

> is not used for access control to the twisted.mail services. Simply a 
> matter of time or is it really meant for other types of authentication? 

I'm even less of a twisted.mail expert than a twisted.web expert, but I
think that twisted.mail's auth stuff predates twisted.cred, and we haven't
had time to migrate it to twisted.cred yet.

> Some more examples in this very sensitive area for people not using PB 
> would help a lot....

Indeed.  Our docs are slowly improving, but still quite lacking.  If you or
anyone can contribute any, that would be great!

> One very small and probably already screwing-up-things contribution that I 
> can do now is to the SMTP class, I include herewith my first attempt at 
> using the diff utility:
> 
> $ diff cvs/Twisted/twisted/protocols/smtp.py 

[We prefer "diff -u ...."; the output is much more readable.]

> cvs/Twisted/twisted/protocols/smtp.py_orig
> 137c137
> <         to = rest[string.find(rest, "<")+1:-len(">")]
> ---
> >        to = rest[len("TO:<"):-len(">")]
> After modifying that, I was able to send mail using Blat [2].

Hmm.  That looks like a dubious change to me.  Wouldn't that fail for
headers like:
    To: Mr. Example <dude at example.com>

I'm not familiar with smtp.py though...

> I am unfortunately locked on a win$ platform for my development so many 
> things are unnecessarily difficult, like getting C stuff to compile without 
> having visual studio installed for instance. Is this dependancy on the m$ 
> compiler anything unavoidable when doing python? Please forgive if that's a 

Well...

1. Twisted doesn't require any C modules to be compiled -- they're basically
   just optional speed-ups.  In fact the only C module in Twisted that works
   on Windows is cBanana; cReactor and portmap don't apply to Windows
   because it doesn't have the relevant APIs.

2. I've heard it's possible to use the mingw port of gcc to compile python
   extensions... search comp.lang.python or google for details.

> Oops the very last is this one: are ALL tests supposed to work 
> out-of-the-box (apart from those needing the crypto lib)? When I run them 
> the UI crashes... :-(

Eek.  The UI shouldn't crash, but regardless usually I use "runtests -t",
i.e. run in text mode.

Unfortunately Win32 support isn't 100% -- which tests are failing for you?

> Alright I'll stop my whining here for now and thank you very much for 
> reading so far and providing this great framework, ciao

Thanks :)

-Andrew.




From twisted at itamarst.org  Wed Nov 20 18:14:40 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Nov 2002 20:14:40 -0500
Subject: [Twisted-Python] Cog: Checkpointed Object Graph object database
Message-ID: <20021120201440.7416ae47.twisted@itamarst.org>

In my never ending quest to find a nice persistence mechanism I came
across this. It actually seems quite nice. I think I may have posted
this once before somewhere, but whatever.

http://www.randomly.org/projects/cog/index.html


-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From dave at krondo.com  Thu Nov 21 02:39:32 2002
From: dave at krondo.com (Dave Peticolas)
Date: 21 Nov 2002 01:39:32 -0800
Subject: [Twisted-Python] PATCH: adbapi.py string escaping
Message-ID: <1037871572.3454.12.camel@oneiros>

The 'safe' function in twisted.enterprise.adbapi escapes single
quotes, but I know at least Postgres and MySQL also accept backslash
escapes, which means embedded backslashes need to be escaped as well,
or they will be removed.

The attached patch escapes embedded backslashes. I haven't tested
it on databases other than Postgres or MySQL.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted.patch
Type: text/x-patch
Size: 474 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021121/86bb6775/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20021121/86bb6775/attachment.sig>

From bruce at cubik.org  Thu Nov 21 10:03:36 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 21 Nov 2002 10:03:36 -0700
Subject: [Twisted-Python] Journal changes
Message-ID: <3DDD11E8.8010306@cubik.org>

Itamar and I had discussed some changes to various parts of Journal to 
address problems that I'd found or had while working with it (fairly 
extensively).

These were:

    * Provide a way to specify the doc string when using the wrapper
      method of creating commands.
    * Separate the re-construction of the DB from the constructor
      of the Journal.  When this was joined, it wasn't possible
      to employ certain useful idioms, like doing a:
        service.journal.insertRow(...)
      within a command.  (That's because you're in the middle of
      doing this somewhere:
        self.journal = xxx.XXXJournal(...)
    * Modify how the state is stored for the journal to allow multiple
      journals.  I have a journal for a service and then a separate
      journal for each indidividual game that is in action.  Right now,
      the way that command indices and so on are stored is broken for
      that use case.

If there aren't any objections, I'd like to get these into CVS sometime 
within the next week or so.

Do others have changes that they need made to the Journal interfaces as 
well?

Itamar, did I forget about any other changes that we'd discussed?

Cheers,

  - Bruce




From dave at krondo.com  Thu Nov 21 14:35:36 2002
From: dave at krondo.com (Dave Peticolas)
Date: 21 Nov 2002 13:35:36 -0800
Subject: [Twisted-Python] gtk2reactor
Message-ID: <1037914536.1101.16.camel@oneiros>

Attached is a reactor for pygtk using Gtk 2.0.
It is basically gtkreactor with fixes for api
changes from pygtk 1->2.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: gtk2reactor.py
Type: text/x-python
Size: 6527 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021121/e2cc8764/attachment-0002.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20021121/e2cc8764/attachment.sig>

From corydodt at yahoo.com  Thu Nov 21 14:43:16 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Thu, 21 Nov 2002 13:43:16 -0800 (PST)
Subject: [Twisted-Python] PATCH: Improved scheme handling in t/lore/latex.py
Message-ID: <20021121214316.81270.qmail@web10009.mail.yahoo.com>

This patch uses urlparse to get URLs from html documents in a more
generalizable way.

It also adds the ftp scheme, and handles mailto schemes like the rest of
them.

URLs with no scheme are handled the regular way.

____snip____
diff -u -r1.67 latex.py
--- latex.py    17 Nov 2002 18:32:56 -0000      1.67
+++ latex.py    21 Nov 2002 21:37:41 -0000
@@ -20,6 +20,8 @@
 import os, re
 from cStringIO import StringIO

+import urlparse
+
 import tree

 escapingRE = re.compile(r'([#$%&_{}^~\\])')
@@ -140,13 +142,12 @@
                     % latexEscape(os.path.basename(fileName)))

     def visitNode_a_href(self, node):
+        supported_schemes=['http', 'https', 'ftp', 'mailto']
         self.visitNodeDefault(node)
         href = node.getAttribute('href')
-        if href.startswith('http://') or href.startswith('https://'):
+        if urlparse.urlparse(href)[0] in supported_schemes:
             if node.childNodes[0].data != href:
                 self.writer('\\footnote{%s}' % latexEscape(href))
-        elif href.startswith('mailto:'):
-            pass
         else:
             if href.startswith('#'):
                 href = self.filename + href

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus � Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From andrew-twisted at puzzling.org  Thu Nov 21 17:16:35 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 22 Nov 2002 11:16:35 +1100
Subject: [Twisted-Python] PATCH: Improved scheme handling in t/lore/latex.py
In-Reply-To: <20021121214316.81270.qmail@web10009.mail.yahoo.com>
References: <20021121214316.81270.qmail@web10009.mail.yahoo.com>
Message-ID: <20021122001635.GB17423@frobozz.local>

On Thu, Nov 21, 2002 at 01:43:16PM -0800, Cory Dodt wrote:
> 
> This patch uses urlparse to get URLs from html documents in a more
> generalizable way.
> 
> It also adds the ftp scheme, and handles mailto schemes like the rest of
> them.
> 
> URLs with no scheme are handled the regular way.

Looks good; I've checked it in.

Thanks!

-Andrew.




From ste at webaccess.mozquito.com  Thu Nov 21 17:48:25 2002
From: ste at webaccess.mozquito.com (Stefano Debenedetti)
Date: Fri, 22 Nov 2002 01:48:25 +0100
Subject: [Twisted-Python] mail and web server authentication: yet to come
 or already there?
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess> <10489587.1037833543899.JavaMail.SYSTEM@webaccess>
Message-ID: <152495.1037922054230.JavaMail.SYSTEM@webaccess>

Hello Andrew, thanks a lot for the answer, I write some more comments inline:

Andrew Bennetts wrote:
> On Wed, Nov 20, 2002 at 09:42:08PM +0100, Stefano Debenedetti wrote:
>>(is HTTP 
>>basic auth implemented somewhere btw?)  
> 
> I *think* twisted.web.guard has this functionality... I've heard it's going
> to be overhauled at some point, it's not as nice as it could be.

Unfortunately this seems to handle authentication at an application level while I need to use HTTP protocol authentication mechanisms, ok I'll have to give it a go myself.
 
> I'm even less of a twisted.mail expert than a twisted.web expert, but I
> think that twisted.mail's auth stuff predates twisted.cred, and we haven't
> had time to migrate it to twisted.cred yet.

Again, I'm going to try and do that, of course it would be easier if I had some more samples of twisted.cred I could start from :-)
 
> Hmm.  That looks like a dubious change to me.  Wouldn't that fail for
> headers like:
>     To: Mr. Example <dude at example.com>
> 
> I'm not familiar with smtp.py though...

:-) seems you are victim of a similar misunderstanding of SMTP that I had until recently: MAIL FROM and RCPT TO can only specify a mail address (in angle brackets). Headers like:
 
To: Mr. Example <dude at example.com>

go after the DATA command so they are not affected by this modification. 
Indeed the current code is already handling RFC821 correctly, as that RFC doesn't allow to put spaces after the column and before the first angle bracket but I have at least one mailer that does that and I've seen other SMTP implementations that forgive that (for example see [1]), so I'll post my patch here again:

$ diff -u smtp.py_orig smtp.py
--- smtp.py_orig        2002-11-01 05:47:10.000000000 +0100
+++ smtp.py     2002-11-22 00:04:24.000000000 +0100
@@ -122,7 +122,7 @@
         self.transport.loseConnection()

     def do_MAIL(self, rest):
-        from_ = rest[len("MAIL:<"):-len(">")]
+        from_ = rest[string.find(rest, "<")+1:-len(">")]
         self.validateFrom(self.__helo, from_, self._fromValid,
                                               self._fromInvalid)

@@ -134,7 +134,7 @@
         self.sendCode(550, 'No mail for you!')

     def do_RCPT(self, rest):
-        to = rest[len("TO:<"):-len(">")]
+        to = rest[string.find(rest, "<")+1:-len(">")]
         user = User(to, self.__helo, self, self.__from)
         self.validateTo(user, self._toValid, self._toInvalid)
 
If you think it is not correct to be forgiving towards non-RFC-compliant mailers, fine but IMHO some modifications to the existing code should be done anyway, otherwise mailers that send that space won't receive any error message and think everything went OK but twisted.mail won't be able to send the mail because as things are now it will try to send it to: "<dude at example.com" therefore failing silently (from sender's perspective).
 
> 1. Twisted doesn't require any C modules to be compiled -- they're basically
>    just optional speed-ups.  In fact the only C module in Twisted that works
>    on Windows is cBanana; cReactor and portmap don't apply to Windows
>    because it doesn't have the relevant APIs.
> 
> 2. I've heard it's possible to use the mingw port of gcc to compile python
>    extensions... search comp.lang.python or google for details.

Yes but the setup.py installer tries to compile at least cBanana and fails if that fails. I tried to use mingw but I end up with a long list of compilation errors, I am probably still doing something wrong and by googling I get to three or four fairly different explanations of how to do that so I guess it's still not as straightforward as a dummy user like me would require, anyway if it's not important I'll leave that aside for now :-)

So even at the second attempt the only way to run the Twisted installer for me was to remove the parts of setup.py that mention external modules, that makes me feel like a bad boy but I found no other solution.
 
> Eek.  The UI shouldn't crash, but regardless usually I use "runtests -t",
> i.e. run in text mode.
> 
> Unfortunately Win32 support isn't 100% -- which tests are failing for you?

Thanks for the -t tip. I found out that the testcases hang only if I use the cygwin python and that they behave differently if I run them with the -t flag, I copy here (by hand) the outputs of the graphical UI, both under cygwin and with regular python:

under cygwin the graphical UI hangs while running test #155, with 181 tests remaining, after notifying the following:

Failure: testLongFileListings (twisted.test.test_ftp.FTPPassiveClientAndServerTest)
Failure: testRetr (twisted.test.test_ftp.FTPPassiveClientAndServerTest)
Failure: testCorrectOrder (twisted.test.test_internet.callFromThreadTestCase)
Error: testCorrectOrder (twisted.test.test_internet.callFromThreadTestCase)

outside of cygwin the UI doesn't crash and manages to complete the tests, here are the results:

Failure: testRetr (twisted.test.test_ftp.FTPPassiveClientAndServerTest)
Failure: test_internet (twisted.test.test_import.AtLeastImportTestCase)
Failure: testCallLater (twisted.test.test_internet.InterfaceTestCase)
Failure: testCorrectOrder (twisted.test.test_internet.callFromThreadTestCase)
Error: testCorrectOrder (twisted.test.test_internet.callFromThreadTestCase)
Error: testOutput (twisted.test.test_iutils.UtilsTestCase)
Error: testValue (twisted.test.test_iutils.UtilsTestCase)
Failure: testNoPermission (twisted.test.test_logfile.LogFileTestCase)
Error: testEcho (twisted.test.test_process.ProcessTestCase)
Error: testProcess (twisted.test.test_process.ProcessTestCase)
Error: testStdinReader (twisted.test.test_process.Win32ProcessTestCase)
Failure: testRebuild (twisted.test.test_rebuild.RebuildTestCase)
Failure: testCannotBind (twisted.test.test_tcp.CannotBindTestCase)
Error: testReconnect (twisted.test.test_tcp.ConnectorTestCase)
Error: testUserFail (twisted.test.test_tcp.ConnectorTestCase)
Error: testUserFail (twisted.test.test_tcp.ConnectorTestCase)
Error: testFailing (twisted.test.test_tcp.LoopbackTestCase)
Error: testMessages (twisted.test.test_unix.UnixSocketTestCase)

Please find attached also the results of the tests with the -t flag, also both under cygwin and with regular python, the tests outside of cygwin gave me different results on different executions so the files inside the zip I attach are four.

Maybe I should think twice about that potato-frying job, don't wanna go back to java.... :-)

thanks, ciao
ste

[1] http://jakarta.apache.org/james/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: runtests_output.zip
Type: application/x-zip-compressed
Size: 6508 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021122/f6049e48/attachment-0002.bin>

From andrew-twisted at puzzling.org  Thu Nov 21 18:10:04 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 22 Nov 2002 12:10:04 +1100
Subject: [Twisted-Python] mail and web server authentication: yet to come or already there?
In-Reply-To: <152495.1037922054230.JavaMail.SYSTEM@webaccess>
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess> <10489587.1037833543899.JavaMail.SYSTEM@webaccess> <152495.1037922054230.JavaMail.SYSTEM@webaccess>
Message-ID: <20021122011004.GC17423@frobozz.local>

On Fri, Nov 22, 2002 at 01:48:25AM +0100, Stefano Debenedetti wrote:
> Andrew Bennetts wrote:
> >
> >I *think* twisted.web.guard has this functionality... I've heard it's going
> >to be overhauled at some point, it's not as nice as it could be.
> 
> Unfortunately this seems to handle authentication at an application level 
> while I need to use HTTP protocol authentication mechanisms, ok I'll have 
> to give it a go myself.

Ok.  I'm pretty sure glyph or someone has some ideas on how best to do this;
it'd be good if they'd speak up :)

> >I'm even less of a twisted.mail expert than a twisted.web expert, but I
> >think that twisted.mail's auth stuff predates twisted.cred, and we haven't
> >had time to migrate it to twisted.cred yet.
> 
> Again, I'm going to try and do that, of course it would be easier if I had 
> some more samples of twisted.cred I could start from :-)

Indeed :)

> >Hmm.  That looks like a dubious change to me.  Wouldn't that fail for
> >headers like:
> >    To: Mr. Example <dude at example.com>
> >
> >I'm not familiar with smtp.py though...
> 
> :-) seems you are victim of a similar misunderstanding of SMTP that I had 
> until recently: MAIL FROM and RCPT TO can only specify a mail address (in 
> angle brackets). Headers like:

Ah, ok.  I didn't realise (although I probably should've) that you were
changing the handling of MAIL FROM and RCPT TO... in my defense, you didn't
use unidiff format for that patch, which would've made that clear :)

> Indeed the current code is already handling RFC821 correctly, as that RFC 
> doesn't allow to put spaces after the column and before the first angle 
> bracket but I have at least one mailer that does that and I've seen other 
> SMTP implementations that forgive that (for example see [1]), so I'll post 
> my patch here again:

Ah, ok.  Looks good to me, but I'm not the SMTP maintainer, so that doesn't
count for much...  in general, I believe we aim to be "liberal in what we
accept, and strict in what we send" to maximise interoperability, so this
patch seems fine.  Does Moshe or Itamar want to express an opinion here? :)

> So even at the second attempt the only way to run the Twisted installer for 
> me was to remove the parts of setup.py that mention external modules, that 
> makes me feel like a bad boy but I found no other solution.

That's fine.  It'd be nice if there was a better way to do it than hacking
setup.py, but Twisted runs perfectly well as pure python.

Note also that we distribute Win32 installers for released versions, like
1.0.0, and soon also for 1.0.1, and these include prebuilt C modules.

> >Eek.  The UI shouldn't crash, but regardless usually I use "runtests -t",
> >i.e. run in text mode.
> >
> >Unfortunately Win32 support isn't 100% -- which tests are failing for you?
> 
> Thanks for the -t tip. I found out that the testcases hang only if I use 
> the cygwin python and that they behave differently if I run them with the 
> -t flag, I copy here (by hand) the outputs of the graphical UI, both under 
> cygwin and with regular python:

Thanks for these details, I'll have a look at them in more detail later.

It might be worth attaching the full output and your test.log file to a bug
report in our Sourceforge bug tracker, so we can't forget about them :)

Regards,

-Andrew.




From ste at webaccess.mozquito.com  Thu Nov 21 18:25:34 2002
From: ste at webaccess.mozquito.com (Stefano Debenedetti)
Date: Fri, 22 Nov 2002 02:25:34 +0100
Subject: [Twisted-Python] mail and web server authentication: yet to come
 or already there?
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess> <10489587.1037833543899.JavaMail.SYSTEM@webaccess> <152495.1037922054230.JavaMail.SYSTEM@webaccess> <2471501.1037923260124.JavaMail.SYSTEM@webaccess>
Message-ID: <13633191.1037924282725.JavaMail.SYSTEM@webaccess>

Andrew Bennetts wrote:
> Note also that we distribute Win32 installers for released versions, like
> 1.0.0, and soon also for 1.0.1, and these include prebuilt C modules.

:-) if it was for the installer I would still be stuck with the echo example, to make it clear for people browsing the mail archives in order to find a solution for that, like I did, the windows installer doesn't work.
 
> It might be worth attaching the full output and your test.log file to a bug
> report in our Sourceforge bug tracker, so we can't forget about them :)

test.log? doh, I should have noticed that before! :-) I'll do that as soon as SF comes up again

thanks, ciao
ste





From iko at cd.chalmers.se  Fri Nov 22 13:24:54 2002
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Fri, 22 Nov 2002 21:24:54 +0100
Subject: SMTP patches (was Re: [Twisted-Python] mail and web server authentication: yet to come or already there?)
In-Reply-To: Message from Andrew Bennetts <andrew-twisted@puzzling.org> 
   of "Fri, 22 Nov 2002 12:10:04 +1100." <20021122011004.GC17423@frobozz.local> 
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess> <10489587.1037833543899.JavaMail.SYSTEM@webaccess> <152495.1037922054230.JavaMail.SYSTEM@webaccess> <20021122011004.GC17423@frobozz.local> 
Message-ID: <200211222024.gAMKOsE10060@haddock.cd.chalmers.se>

In a message of Fri, 22 Nov 2002 12:10:04 +1100, Andrew Bennetts writes:
>Ah, ok.  Looks good to me, but I'm not the SMTP maintainer, so that doesn't
>count for much...  in general, I believe we aim to be "liberal in what we
>accept, and strict in what we send" to maximise interoperability, so this
>patch seems fine.  Does Moshe or Itamar want to express an opinion here? :)

Not that I fit the names, but I've been working with them on improving
the SMTP server. I posted a patch a few weeks ago which solves this and
some other problems.

If anyone wants a copy of the patch, just mail me and ask for it. (It
has evolved somewhat since the last posted version, mostly in terms of
the unit tests).

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From twisted at itamarst.org  Fri Nov 22 17:58:31 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 22 Nov 2002 19:58:31 -0500
Subject: SMTP patches (was Re: [Twisted-Python] mail and web server authentication: yet to come or already there?)
In-Reply-To: <200211222024.gAMKOsE10060@haddock.cd.chalmers.se>
References: <10106307.1037820875542.JavaMail.SYSTEM@webaccess>
	<10489587.1037833543899.JavaMail.SYSTEM@webaccess>
	<152495.1037922054230.JavaMail.SYSTEM@webaccess>
	<20021122011004.GC17423@frobozz.local>
	<200211222024.gAMKOsE10060@haddock.cd.chalmers.se>
Message-ID: <20021122195831.625b440e.twisted@itamarst.org>

On Fri, 22 Nov 2002 21:24:54 +0100
Anders Hammarquist <iko at cd.chalmers.se> wrote:

> Not that I fit the names, but I've been working with them on improving
> the SMTP server. I posted a patch a few weeks ago which solves this
> and some other problems.
> 
> If anyone wants a copy of the patch, just mail me and ask for it. (It
> has evolved somewhat since the last posted version, mostly in terms of
> the unit tests).

It will be commited, either by me or someone else. Maybe even now if I
can get around it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From exarkun at meson.dyndns.org  Fri Nov 22 20:55:04 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 22 Nov 2002 22:55:04 -0500
Subject: [Twisted-Python] async hostname resolution
Message-ID: <20021123035504.GA13889@meson.dyndns.org>

  Diff for twisted/internet/base.py's resolve() function to make
it perform lookups asynchronously using the new stuff in
twisted/names/client.py.

  I removed the type argument, since it complicates implementation for other
reactors, isn't really useful in 99% of cases, and never worked when set to
anything other than A (1) anyway.  Maybe it should be deprecated first for a
while, but I doubt anyone's using it anyway so it may not matter.

  Jp

-- 
<Greatnuts> someone gave me bad advice this morning
<Greatnuts> told me to use twm
<Greatnuts> had to reformat
<Greatnuts> just to get it off
--
 10:00pm up 21 days, 8:53, 6 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
Index: base.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/base.py,v
retrieving revision 1.27
diff -u -r1.27 base.py
--- base.py	30 Oct 2002 05:56:34 -0000	1.27
+++ base.py	23 Nov 2002 03:42:03 -0000
@@ -21,8 +21,6 @@
 Maintainer: U{Itamar Shtull-Trauring<mailto:twisted at itamarst.org>}
 """
 
-import socket # needed only for sync-dns
-
 import warnings
 from time import time
 from bisect import insort
@@ -135,22 +133,13 @@
     def removeAll(self):
         raise NotImplementedError
 
-    def resolve(self, name, type=1, timeout=10):
+    def resolve(self, name, timeout=10):
         """Return a Deferred that will resolve a hostname.
         """
-        # XXX TODO: alternative resolver implementations
-        from twisted.internet.defer import Deferred
-        deferred = Deferred()
-        if type == 1:
-            try:
-                address = socket.gethostbyname(name)
-            except socket.error:
-                deferred.errback(failure.Failure(error.DNSLookupError("address not found")))
-            else:
-                deferred.callback(address)
-        else:
-            deferred.errback(failure.Failure(ValueError("type not supported")))
-        return deferred
+        from twisted.names import client
+        from twisted.protocols import dns
+        return client.lookupAddress(name).addCallback(lambda m: m[0])
+
 
     # Installation.
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021122/27b147ea/attachment.sig>

From twisted at itamarst.org  Fri Nov 22 21:21:20 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 22 Nov 2002 23:21:20 -0500
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123035504.GA13889@meson.dyndns.org>
References: <20021123035504.GA13889@meson.dyndns.org>
Message-ID: <20021122232120.750c2eeb.twisted@itamarst.org>

On Fri, 22 Nov 2002 22:55:04 -0500
Jp Calderone <exarkun at meson.dyndns.org> wrote:

>   Diff for twisted/internet/base.py's resolve() function to make
> it perform lookups asynchronously using the new stuff in
> twisted/names/client.py.

Mmm. I don't like adding a dependency on an external package in
twisted.internet. And this doesn't let people replace the name resolver
with their own that does e.g. caching. And what if the reactor doesn't
support UDP?

I suggest instead a reactor.installResolver(r) method, where the default
one stays as is using socket module (with the DNS type fix going in
though).

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From exarkun at meson.dyndns.org  Fri Nov 22 21:59:47 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 22 Nov 2002 23:59:47 -0500
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021122232120.750c2eeb.twisted@itamarst.org>
References: <20021123035504.GA13889@meson.dyndns.org> <20021122232120.750c2eeb.twisted@itamarst.org>
Message-ID: <20021123045947.GA14369@meson.dyndns.org>

On Fri, Nov 22, 2002 at 11:21:20PM -0500, Itamar Shtull-Trauring wrote:
> On Fri, 22 Nov 2002 22:55:04 -0500
> Jp Calderone <exarkun at meson.dyndns.org> wrote:
> 
> >   Diff for twisted/internet/base.py's resolve() function to make
> > it perform lookups asynchronously using the new stuff in
> > twisted/names/client.py.
> 
> Mmm. I don't like adding a dependency on an external package in
> twisted.internet. And this doesn't let people replace the name resolver
> with their own that does e.g. caching.

  Oh, *that* was the kind of "pluggable" you and glyph were talking about. 
Okay, I'll try it that way (probably not 'til tomorrow though).

> And what if the reactor doesn't support UDP?
> 
> I suggest instead a reactor.installResolver(r) method, where the default
> one stays as is using socket module (with the DNS type fix going in
> though).
> 

  Sounds good.

  Jp

-- 
A sad spectacle.  If they be inhabited, what a scope for misery 
and folly.  If they be not inhabited, what a waste of space.
                -- Thomas Carlyle, looking at the stars
--
 11:00pm up 21 days, 9:53, 4 users, load average: 0.00, 0.03, 0.01
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021122/ccdc9215/attachment.sig>

From smurf at noris.de  Sat Nov 23 02:17:05 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Sat, 23 Nov 2002 10:17:05 +0100
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123035504.GA13889@meson.dyndns.org>; from exarkun@meson.dyndns.org on Fri, Nov 22, 2002 at 10:55:04PM -0500
References: <20021123035504.GA13889@meson.dyndns.org>
Message-ID: <20021123101705.M18881@noris.de>

Hi,

Jp Calderone:
>   I removed the type argument, since it complicates implementation for other
> reactors, isn't really useful in 99% of cases, and never worked when set to
> anything other than A (1) anyway.  Maybe it should be deprecated first for a
> while, but I doubt anyone's using it anyway so it may not matter.
> 
What -- you never look up records other than A?

I've got a bunch of useful candidates here -- PTR, NS, SOA, CNAME, MX ...
and, guess what, I'm going to need all of them (except MX ;-) early
next year.

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021123/cecfa8c8/attachment.sig>

From radix at twistedmatrix.com  Sat Nov 23 05:31:50 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 23 Nov 2002 13:31:50 +0100
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021122232120.750c2eeb.twisted@itamarst.org>
References: <20021123035504.GA13889@meson.dyndns.org> <20021122232120.750c2eeb.twisted@itamarst.org>
Message-ID: <20021123123150.GD2967@toshi>

On Fri, Nov 22, 2002 at 11:21:20PM -0500, Itamar Shtull-Trauring wrote:
> On Fri, 22 Nov 2002 22:55:04 -0500
> Jp Calderone <exarkun at meson.dyndns.org> wrote:
> 
> >   Diff for twisted/internet/base.py's resolve() function to make
> > it perform lookups asynchronously using the new stuff in
> > twisted/names/client.py.
> 
> Mmm. I don't like adding a dependency on an external package in
> twisted.internet. And this doesn't let people replace the name resolver
> with their own that does e.g. caching. And what if the reactor doesn't
> support UDP?
> 
> I suggest instead a reactor.installResolver(r) method, where the default
> one stays as is using socket module (with the DNS type fix going in
> though).

Why wouldn't we use the twisted.names resolver by default, if available?

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From twisted at moshez.org  Sat Nov 23 06:05:38 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 23 Nov 2002 13:05:38 -0000
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021122232120.750c2eeb.twisted@itamarst.org>
References: <20021122232120.750c2eeb.twisted@itamarst.org>, <20021123035504.GA13889@meson.dyndns.org>
Message-ID: <20021123130538.12840.qmail@green.zadka.com>

On Fri, 22 Nov 2002, Itamar Shtull-Trauring <twisted at itamarst.org> wrote:
 
> I suggest instead a reactor.installResolver(r) method, where the default
> one stays as is using socket module (with the DNS type fix going in
> though).

+1



From twisted at moshez.org  Sat Nov 23 06:06:43 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 23 Nov 2002 13:06:43 -0000
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123123150.GD2967@toshi>
References: <20021123123150.GD2967@toshi>, <20021123035504.GA13889@meson.dyndns.org> <20021122232120.750c2eeb.twisted@itamarst.org>
Message-ID: <20021123130643.12868.qmail@green.zadka.com>

On Sat, 23 Nov 2002, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> Why wouldn't we use the twisted.names resolver by default, if available?

/etc/hosts, for one.



From radix at twistedmatrix.com  Sat Nov 23 06:54:16 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 23 Nov 2002 14:54:16 +0100
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123130643.12868.qmail@green.zadka.com>
References: <20021123035504.GA13889@meson.dyndns.org> <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com>
Message-ID: <20021123135416.GE2967@toshi>

On Sat, Nov 23, 2002 at 01:06:43PM -0000, Moshe Zadka wrote:
> On Sat, 23 Nov 2002, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> 
> > Why wouldn't we use the twisted.names resolver by default, if available?
> 
> /etc/hosts, for one.

And if it supported /etc/hosts? :)

-- 
                        Christopher Armstrong
                    << radix at twistedmatrix.com >>
             http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Sat Nov 23 11:31:21 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 23 Nov 2002 12:31:21 -0600 (CST)
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123135416.GE2967@toshi>
References: <20021122232120.750c2eeb.twisted@itamarst.org>
	<20021123130643.12868.qmail@green.zadka.com>
	<20021123135416.GE2967@toshi>
Message-ID: <20021123.123121.133894024.glyph@twistedmatrix.com>

On Sat, 23 Nov 2002 14:54:16 +0100, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> And if it supported /etc/hosts? :)

/etc/hosts.  Windows registry keys pointing at DNS servers.  ZoneAlarm.
Potentially there are wacky plug-ins for the system host resolution technique
which use LDAP rather than DNS.  (I don't know if any exist, but there's
nothing to say they couldn't ^_^).  Effectively replacing the system doman name
lookup is tricky, especially on win32.

The twisted.names resolver should probably be on by default in things like web
servers where you've got to do lots of connections and name lookups in a
daemon, though, so having installResolver(x) available for application code
will be useful.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021123/42f16765/attachment.sig>

From exarkun at meson.dyndns.org  Sat Nov 23 15:10:07 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sat, 23 Nov 2002 17:10:07 -0500
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123101705.M18881@noris.de>
References: <20021123035504.GA13889@meson.dyndns.org> <20021123101705.M18881@noris.de>
Message-ID: <20021123221007.GA15999@meson.dyndns.org>

On Sat, Nov 23, 2002 at 10:17:05AM +0100, Matthias Urlichs wrote:
> Hi,

  Hello :)

> Jp Calderone:
> >   I removed the type argument, since it complicates implementation for other
> > reactors, isn't really useful in 99% of cases, and never worked when set to
> > anything other than A (1) anyway.  Maybe it should be deprecated first for a
> > while, but I doubt anyone's using it anyway so it may not matter.
> > 
> What -- you never look up records other than A?
> 
> I've got a bunch of useful candidates here -- PTR, NS, SOA, CNAME, MX ...
> and, guess what, I'm going to need all of them (except MX ;-) early
> next year.
> 

  All record types are supported ;)  The question is just whether you should
go through the reactor interface to make queries about them, or if you
should use the "real" name lookup API instead.  Essentially..

    from twisted.internet import reactor
    from twisted.protocols import dns
    reactor.resolve('somehost.com', dns.MX).addCallback(whatever)

  vs

    from twisted.names import client
    client.lookupMailExchange('somehost.com').addCallback(whatever)

  I can't envision any circumstances where the core would want to do lookups
other than of A records, so supporting them /without/ adding a dependancy of
twisted.internet on twisted.names (something there are good reasons to want
to avoid) seems like an unecessary burden on anyone else who wants to
implement the reactor API.

  Jp

--
 5:00pm up 22 days, 3:54, 3 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021123/9ca4467c/attachment.sig>

From twisted at moshez.org  Sat Nov 23 23:20:04 2002
From: twisted at moshez.org (Moshe Zadka)
Date: 24 Nov 2002 06:20:04 -0000
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123135416.GE2967@toshi>
References: <20021123135416.GE2967@toshi>, <20021123035504.GA13889@meson.dyndns.org> <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com>
Message-ID: <20021124062004.24028.qmail@green.zadka.com>

On Sat, 23 Nov 2002, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> And if it supported /etc/hosts? :)

/etc/hosts is one example for "ways the local resolver can diverge from
the DNS". In fact, with the GNU libc, you can dynamically program ways
to override/complement name resolution. DJB went down the "I don't care
about local resolution, I'll use DNS.". It's ugly and discorteous to
the users :)



From exarkun at meson.dyndns.org  Sun Nov 24 03:51:48 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sun, 24 Nov 2002 05:51:48 -0500
Subject: [Twisted-Python] test_names (and others!)
Message-ID: <20021124105148.GA18550@meson.dyndns.org>

  First, the new dataReceived method of IRCClient is breaking unit tests. 
It's not obvious to me whether the method should be removed or the test
should be updated.

  Second, I've re-enabled test_names.  It still fails.  It fails due to my
inability to understand the proper way to set things up and tear them down,
though, not because t.names is broken :)  If someone who feels confident of
their pyunit skills could take a look, and give me some suggestions on how
to resolve the issue it's having, that'd be great.

  Jp

-- 
In the days when Sussman was a novice Minsky once came to him as he sat
hacking at the PDP-6. "What are you doing?" asked Minsky. "I am training a
randomly wired neural net to play Tic-Tac-Toe." "Why is the net wired
randomly?" asked Minsky. "I do not want it to have any preconceptions of how
to play." Minsky shut his eyes. "Why do you close your eyes?" Sussman asked
his teacher. "So the room will be empty." At that moment, Sussman was
enlightened.
 --
 2:08am up 22 days, 13:02, 6 users, load average: 0.08, 0.10, 0.09
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021124/1a890226/attachment.sig>

From anthony at interlink.com.au  Sun Nov 24 21:26:25 2002
From: anthony at interlink.com.au (Anthony Baxter)
Date: Mon, 25 Nov 2002 15:26:25 +1100
Subject: [Twisted-Python] docstring, whitespace patch for twisted.internet.interfaces.py
Message-ID: <200211250426.gAP4QPc05725@localhost.localdomain>

added param lines.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/octet-stream
Size: 4789 bytes
Desc: twisted.internet.interfaces.py.diff
URL: </pipermail/twisted-python/attachments/20021125/32a34a06/attachment-0002.obj>

From twisted at itamarst.org  Mon Nov 25 11:06:11 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Nov 2002 13:06:11 -0500
Subject: [Twisted-Python] Various issues that need fixing
Message-ID: <20021125130611.01bd9cff.twisted@itamarst.org>

ASAP:
1. Website template needs to be updated to have same links to docs as I
did for front page (and some way to automate it so you don't need to
change on every version would be nice).

2. We need to build exe for 1.0.1. bdist_wininst on Unix is *not* good
enough, there's a hardcoded check for its running on win32.


Not as urgent:
1. Man pages for lore have wrong title, apparently.

2. Examples page links to obsolete examples, such as inetd.py

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From bruce at cubik.org  Mon Nov 25 11:27:29 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Mon, 25 Nov 2002 11:27:29 -0700
Subject: [Twisted-Python] Various issues that need fixing
References: <20021125130611.01bd9cff.twisted@itamarst.org>
Message-ID: <3DE26B91.2040309@cubik.org>

Itamar Shtull-Trauring wrote:
> 2. We need to build exe for 1.0.1. bdist_wininst on Unix is *not* good
> enough, there's a hardcoded check for its running on win32.

I can probably do this tonight, once I'm home.

A way to coordinate this that doesn't involve me joining #twisted on IRC 
would be appreciated however, so whoever is doing the release stuff 
should mail me offlist about what they want done.

  - Bruce




From twisted at itamarst.org  Mon Nov 25 11:23:05 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Nov 2002 13:23:05 -0500
Subject: [Twisted-Python] Various issues that need fixing
In-Reply-To: <3DE26B91.2040309@cubik.org>
References: <20021125130611.01bd9cff.twisted@itamarst.org>
	<3DE26B91.2040309@cubik.org>
Message-ID: <20021125132305.37fd96a4.twisted@itamarst.org>

On Mon, 25 Nov 2002 11:27:29 -0700
Bruce Mitchener <bruce at cubik.org> wrote:

> I can probably do this tonight, once I'm home.

Thanks.

> A way to coordinate this that doesn't involve me joining #twisted on
> IRC would be appreciated however, so whoever is doing the release
> stuff should mail me offlist about what they want done.

With a little bit of work we can have the admin/release-twisted script
build the .exe files. Possibly even including C extensions using mingw
cross-compiling. Hopefully we'll have some basic support for this by
next release.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From naesten at myrealbox.com  Mon Nov 25 22:32:15 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Tue, 26 Nov 2002 00:32:15 -0500
Subject: [Twisted-Python] apploader patch
Message-ID: <3DE3075F.4040304@myrealbox.com>

Heres my apploader patch, which factors the .{py,ta[psx]} loading code
out of a few of the scripts and into twisted.internet.apploader. It
could use a good deal of work, but I'm a bit busy right now so I'm
sending as-is. Note that it seems to work okay.
--SamB




From naesten at myrealbox.com  Mon Nov 25 22:39:30 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Tue, 26 Nov 2002 00:39:30 -0500
Subject: [Twisted-Python] Re: apploader patch
References: <3DE3075F.4040304@myrealbox.com>
Message-ID: <3DE30912.3010807@myrealbox.com>

okay, this time I remembered the actual patch ;-)

Samuel Bronson wrote:

>Heres my apploader patch, which factors the .{py,ta[psx]} loading code
>out of a few of the scripts and into twisted.internet.apploader. It
>could use a good deal of work, but I'm a bit busy right now so I'm
>sending as-is. Note that it seems to work okay.
>--SamB
>
>
>
>  
>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: apploader.diff
URL: </pipermail/twisted-python/attachments/20021126/b2cb242e/attachment.ksh>

From itamar at itamarst.org  Mon Nov 25 11:03:00 2002
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Nov 2002 13:03:00 -0500
Subject: [Twisted-Python] ANN: Twisted 1.0.1
Message-ID: <20021125130300.7a99ded1.itamar@itamarst.org>

What's New in 1.0.1
===================

 - Lore, a documentation generation framework supporting HTML and LaTeX
 - Initial SOAP support
 - Rewritten UDP API
 - Multicast support
 - Better Tk integration
 - Rewritten DNS protocol, both client and server
 - Virtual hosting utilities for twisted.web
 - Large amounts of work on Woven web templating system
 - Syslog logging
 - GUI equivalents of the command-line mktap and twistd programs
 - Much improved and expanded documentation
 - Many bugfixes


-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From erik.myllymaki at starpointe.ca  Tue Nov 26 17:39:15 2002
From: erik.myllymaki at starpointe.ca (Erik Myllymaki)
Date: Tue, 26 Nov 2002 16:39:15 -0800
Subject: [Twisted-Python] broken link: http://twistedmatrix.com/page.epy/philosophy.html
Message-ID: <017001c295ad$6a316ca0$6421a8c0@topdown>

An article with the folowing summary was linked form the librenix.com site
to http://twistedmatrix.com/page.epy/philosophy.html

"Twisted Python began as just a Python implementation of Twisted Reality; a
framework for multiplayer text-based interactive fiction. Having previously
had experience mostly with Java and C++, I was amazed by the amount
flexibility and self-awareness that Python had. When a 20,000 line project
went to approximately 3,000 lines overnight, and came out being more
flexible and robust once it had been completed, I realized I was on to
something really good. "


Any idea where I can find this article these days?

thanks.




From glyph at twistedmatrix.com  Tue Nov 26 22:22:33 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 26 Nov 2002 23:22:33 -0600 (CST)
Subject: [Twisted-Python] broken link:
 http://twistedmatrix.com/page.epy/philosophy.html
In-Reply-To: <017001c295ad$6a316ca0$6421a8c0@topdown>
References: <017001c295ad$6a316ca0$6421a8c0@topdown>
Message-ID: <20021126.232233.59468344.glyph@twistedmatrix.com>

On Tue, 26 Nov 2002 16:39:15 -0800, "Erik Myllymaki" <erik.myllymaki at starpointe.ca> wrote:
> An article with the folowing summary was linked form the librenix.com site
> to http://twistedmatrix.com/page.epy/philosophy.html

[...]

> Any idea where I can find this article these days?

Although the article is an interesting read, and of some historical interest,
it is woefully out of date and contains a bunch of inaccuracies.

I'll update it sometime soon and post an updated copy to the website.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021126/bf4f4948/attachment.sig>

From naesten at myrealbox.com  Tue Nov 26 22:51:21 2002
From: naesten at myrealbox.com (Samuel Bronson)
Date: Wed, 27 Nov 2002 00:51:21 -0500
Subject: [Twisted-Python] broken link: http://twistedmatrix.com/page.epy/philosophy.html
References: <017001c295ad$6a316ca0$6421a8c0@topdown> <20021126.232233.59468344.glyph@twistedmatrix.com>
Message-ID: <3DE45D59.5080107@myrealbox.com>

Glyph Lefkowitz wrote:

>On Tue, 26 Nov 2002 16:39:15 -0800, "Erik Myllymaki" <erik.myllymaki at starpointe.ca> wrote:
>  
>
>>An article with the folowing summary was linked form the librenix.com site
>>to http://twistedmatrix.com/page.epy/philosophy.html
>>    
>>
>
>[...]
>
>  
>
>>Any idea where I can find this article these days?
>>    
>>
>
>Although the article is an interesting read, and of some historical interest,
>it is woefully out of date and contains a bunch of inaccuracies.
>
>I'll update it sometime soon and post an updated copy to the website.
>
Ahah! a job for the web archive!

http://web.archive.org/web/*/http://twistedmatrix.com/page.epy/philosophy.html





From webadministrator at ozzope.org  Tue Nov 26 16:00:07 2002
From: webadministrator at ozzope.org (Jan Smith)
Date: Wed, 27 Nov 2002 10:00:07 +1100
Subject: [Twisted-Python] Where is Python being taught in Australia?
Message-ID: <GEEGJBEAOOJNMLLBHCHIOEFFCNAA.webadministrator@ozzope.org>

Hi all,

I am compiling of list of institutions teaching Python for the OzZope web
site - the Australian Zope Interest Group.  Could you tell me where Python
is being taught in Australia? It would be great to have an up to date list.

Sometimes the subject is not specifically python but python is taught as
part a course.  Any course including python is what I'm looking for.

Also any places that may be teaching Zope.

Either reply to.  mailto:webadministrator at ozzope.org

Many thanks


Jan Smith

www.ozzope.org
Australian Zope Interest Group




From tv at twistedmatrix.com  Wed Nov 27 23:43:17 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 28 Nov 2002 08:43:17 +0200
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021123.123121.133894024.glyph@twistedmatrix.com>
References: <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com> <20021123135416.GE2967@toshi> <20021123.123121.133894024.glyph@twistedmatrix.com>
Message-ID: <20021128064317.GA28982@ki.yok.utu.fi>

On Sat, Nov 23, 2002 at 12:31:21PM -0600, Glyph Lefkowitz wrote:
> > And if it supported /etc/hosts? :)
> 
> /etc/hosts.  Windows registry keys pointing at DNS servers.  ZoneAlarm.
> Potentially there are wacky plug-ins for the system host resolution technique
> which use LDAP rather than DNS.  (I don't know if any exist, but there's
> nothing to say they couldn't ^_^).  Effectively replacing the system doman name
> lookup is tricky, especially on win32.

  Note on mordern unixes: libnss (name service switch) allows to admin
  to use _whatever he wants_ to resolve host names.

-- 
:(){ :|:&};:



From bruce at cubik.org  Thu Nov 28 00:12:14 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 28 Nov 2002 00:12:14 -0700
Subject: [Twisted-Python] async hostname resolution
References: <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com> <20021123135416.GE2967@toshi> <20021123.123121.133894024.glyph@twistedmatrix.com> <20021128064317.GA28982@ki.yok.utu.fi>
Message-ID: <3DE5C1CE.9020806@cubik.org>

Tommi Virtanen wrote:
> On Sat, Nov 23, 2002 at 12:31:21PM -0600, Glyph Lefkowitz wrote:
> 
>>>And if it supported /etc/hosts? :)
>>
>>/etc/hosts.  Windows registry keys pointing at DNS servers.  ZoneAlarm.
>>Potentially there are wacky plug-ins for the system host resolution technique
>>which use LDAP rather than DNS.  (I don't know if any exist, but there's
>>nothing to say they couldn't ^_^).  Effectively replacing the system doman name
>>lookup is tricky, especially on win32.
> 
>   Note on mordern unixes: libnss (name service switch) allows to admin
>   to use _whatever he wants_ to resolve host names.

And I've already pointed this out to exarkun since he's doing the work, 
but on Linux, glibc 2.2.4 and later expose an asynchronous name lookup 
interface already.

Docs on it can be found here:

   http://people.redhat.com/drepper/asynchnl.pdf

Windows has an asynch interface as well:

 
http://msdn.microsoft.com/library/en-us/winsock/winsock/wsaasyncgethostbyname_2.asp

  - Bruce




From exarkun at meson.dyndns.org  Thu Nov 28 00:02:47 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Thu, 28 Nov 2002 02:02:47 -0500
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021128064317.GA28982@ki.yok.utu.fi>
References: <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com> <20021123135416.GE2967@toshi> <20021123.123121.133894024.glyph@twistedmatrix.com> <20021128064317.GA28982@ki.yok.utu.fi>
Message-ID: <20021128070247.GA4806@meson.dyndns.org>

On Thu, Nov 28, 2002 at 08:43:17AM +0200, Tommi Virtanen wrote:
> [snip] 
>   Note on mordern unixes: libnss (name service switch) allows to admin
>   to use _whatever he wants_ to resolve host names.

  A quick google didn't turn up the answer:  Are there python bindings to
libnss?

  Jp

-- 
<Ape> EludeR: what kind of distro you have?
<EludeR> Ape: gentoo
<Ape> EludeR: it seems it have bsd-style init?
<EludeR> i dont know
<EludeR> have no clue
--
 12:00am up 26 days, 10:54, 4 users, load average: 0.02, 0.11, 0.09
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021128/0e39937a/attachment.sig>

From smurf at noris.de  Thu Nov 28 00:39:41 2002
From: smurf at noris.de (Matthias Urlichs)
Date: Thu, 28 Nov 2002 08:39:41 +0100
Subject: [Twisted-Python] async hostname resolution
In-Reply-To: <20021128070247.GA4806@meson.dyndns.org>; from exarkun@meson.dyndns.org on Thu, Nov 28, 2002 at 02:02:47AM -0500
References: <20021122232120.750c2eeb.twisted@itamarst.org> <20021123130643.12868.qmail@green.zadka.com> <20021123135416.GE2967@toshi> <20021123.123121.133894024.glyph@twistedmatrix.com> <20021128064317.GA28982@ki.yok.utu.fi> <20021128070247.GA4806@meson.dyndns.org>
Message-ID: <20021128083941.S18881@noris.de>

Hi,

Jp Calderone:
>   A quick google didn't turn up the answer:  Are there python bindings to
> libnss?
> 
"include socket". The standard gethost* library calls end up using NSS.

-- 
Matthias Urlichs     |     noris network AG     |     http://smurf.noris.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021128/db71232e/attachment.sig>

From tonyblake2003 at yahoo.co.uk  Thu Nov 28 09:31:59 2002
From: tonyblake2003 at yahoo.co.uk (=?iso-8859-1?q?Tony=20Blake?=)
Date: Thu, 28 Nov 2002 16:31:59 +0000 (GMT)
Subject: [Twisted-Python] ImportError: cannot import name dns
Message-ID: <20021128163159.47893.qmail@web14601.mail.yahoo.com>

Hello all,

I have just started to work with Twisted and am having
some difficulty with 1.0.1. (I am not a Python veteran
either ;)

I downloaded the latest Twisted release for Win32
(Twisted-1.0.1.win32-py2.2.exe). It installed fine.
But when running the 'coil' script, I receive the
following error:

=======================
Traceback (most recent call last):
  File "coil.py", line 30, in ?
    run()
  File
"C:\Python22\Lib\site-packages\twisted\scripts\coil.py",
line 89, in run
    p.load()
  File
"C:\Python22\Lib\site-packages\twisted\python\plugin.py",
line 40, in load
    return namedModule(self.module)
  File
"C:\Python22\Lib\site-packages\twisted\python\reflect.py",
line 372, in namedModule
    topLevel = __import__(name)
  File
"C:\Python22\Lib\site-packages\twisted\coil\plugins\names.py",
line 21, in ?
    from twisted.names import dns
ImportError: cannot import name dns
=============================

In the directory twisted.names, there isn't a dns.py.
It's not in the UNIX build either.

Downloaded 1.0.0, and the dns.py is there. It runs
fine.

Do you have to install 1.0.0 and then 1.0.1 over it?

Thanks for any help in advance,

Tony


__________________________________________________
Do You Yahoo!?
Everything you'll ever need on one web page
from News and Sport to Email and Music Charts
http://uk.my.yahoo.com



From twisted at itamarst.org  Thu Nov 28 10:57:26 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Nov 2002 12:57:26 -0500
Subject: [Twisted-Python] ImportError: cannot import name dns
In-Reply-To: <20021128163159.47893.qmail@web14601.mail.yahoo.com>
References: <20021128163159.47893.qmail@web14601.mail.yahoo.com>
Message-ID: <20021128125726.64a03bf8.twisted@itamarst.org>

On Thu, 28 Nov 2002 16:31:59 +0000 (GMT)
Tony Blake <tonyblake2003 at yahoo.co.uk> wrote:

> I downloaded the latest Twisted release for Win32
> (Twisted-1.0.1.win32-py2.2.exe). It installed fine.
> But when running the 'coil' script, I receive the
> following error:

Coil was more proof of concept than actual working program, so no one
actually bothers to check if it's broken. We probably ought to either do
that, remove it, or better yet rewrite from scratch. Volunteers?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From glyph at twistedmatrix.com  Thu Nov 28 20:48:18 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 28 Nov 2002 21:48:18 -0600 (CST)
Subject: [Twisted-Python] ImportError: cannot import name dns
In-Reply-To: <20021128125726.64a03bf8.twisted@itamarst.org>
References: <20021128163159.47893.qmail@web14601.mail.yahoo.com>
	<20021128125726.64a03bf8.twisted@itamarst.org>
Message-ID: <20021128.214818.55509130.glyph@twistedmatrix.com>

On Thu, 28 Nov 2002 12:57:26 -0500, Itamar Shtull-Trauring <twisted at itamarst.org> wrote:
> Coil was more proof of concept than actual working program, so no one
> actually bothers to check if it's broken. We probably ought to either do
> that, remove it, or better yet rewrite from scratch. Volunteers?

A few thoughts:

If anyone is interested in volunteering to do this, an important component of
the rewrite is that it should use Woven.  Also: the tree ought to be
collapsable, and the distinction between "static" and "dynamic" entity lists
should be removed.  (There may still be a useful distinction of "entities which
can be removed without impacting an external resource".  It's pretty clear that
the current approach is not the way to go, though, since it creates a useless
distinction in most cases and bloats an interface that should be small and
simple.)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20021128/0fc43e85/attachment.sig>

