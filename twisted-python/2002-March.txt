From cpaul at telemetrybox.org  Sun Mar  3 03:13:40 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Sat, 2 Mar 2002 22:13:40 -1000
Subject: [Twisted-Python] Aloha, New Member
In-Reply-To: <1014880806.7425.74.camel@zelda>
References: <20020226215828.A8361@Skaffen.pdchawaii.com> <1014880806.7425.74.camel@zelda>
Message-ID: <20020302221340.A14794@Skaffen.pdchawaii.com>

Great to hear that there will be more documentation in the future -- once I wrap my head around the framework, I will probably contribute to the effort.

As far as what I hope to build with Twisted, I have several things in mind.  

One of the projects I am working on is a webmail service with GnuPG functionality.  As a part of this, I built an xml-rpc wrapper for the GnuPGInterface module.  During the process I realized that xml-rpc was the wrong solution to my problem, there were too many hacks in the code for preserving sessions among other things.  Maybe twisted could help me on this part.  Aside from the backengine, I was thinking of working around the other members of the project and building the web/mail frontend from the ground-up in Python (as opposed to using a PHP webmail client...) -- Twisted might come in handy here too.

Another project still in the drafting phase is a Free implementation of the Craigslist.org bulletin board system.  This would involve creating an application: To serve CGI and process form inputs.  Create static HTML pages for every post.  Compile indexes of the posts at regular intervals.  And, with a mail server, forward the postXXX@ email to the proper recipients.  I was planning on using straight python, mysql and postfix -- again, Twisted might come in handy.

The final project is for $$$, and as of yet I am still hazy on the details.  Basically, I want to create a systems administration interface which would be capable of manipulating many machines at once.  I don't know if Twisted will come in handy.


Thanks for the welcome to the list, and I will keep you all posted with my progress (*cough*problems*cough*).

Take care,
Charles
 



On Thu, Feb 28, 2002 at 01:20:06AM -0600, Glyph Lefkowitz wrote:
> Excellent!  Great to hear it, Charles.
> 
> I'm currently in the process of writing documentation and smoothing the
> learning curve for new users of the framework, but I've got a lot to do
> (and I'm swamped with more mundane things at work right now (and I'll be
> heading out of town (back on monday (do you like parenthetic
> expressions?  (I sure do. (yay for lisp)))))).
> 
> So unfortunately our documentation is far from complete.  Can you give
> some clues as to what you want to use Twisted for?  I'll try to answer
> any questions you might have; in the meanwhile, poke around the
> "Documentation" section on http://twistedmatrix.com/.
> 
> On Wed, 2002-02-27 at 01:58, cpaul at telemetrybox.org wrote:
> > Aloha,
> > 
> > My name is Charles Paul, and I am interested in learning more about how to use Twisted. 
> > 
> > Aloha,
> > Charles
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> -- 
> "Cannot stand to be one of many -- I'm not what they are."
>         -Guster, "Rocketship"
>                 glyph lefkowitz; ninjaneer, freelance demiurge
>     glyph @ [ninjaneering|twistedmatrix].com





From carmstro at twistedmatrix.com  Sun Mar  3 04:36:24 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 03 Mar 2002 04:36:24 -0500
Subject: [Twisted-Python] Aloha, New Member
In-Reply-To: <20020302221340.A14794@Skaffen.pdchawaii.com>
References: <20020226215828.A8361@Skaffen.pdchawaii.com>
	<1014880806.7425.74.camel@zelda> 
	<20020302221340.A14794@Skaffen.pdchawaii.com>
Message-ID: <1015148185.1078.8.camel@radii>

On Sun, 2002-03-03 at 03:13, cpaul at telemetrybox.org wrote:
> One of the projects I am working on is a webmail service with GnuPG 
> functionality.  As a part of this, I built an xml-rpc wrapper for the 
> GnuPGInterface module.  During the process I realized that xml-rpc was
> the wrong solution to my problem, there were too many hacks in the 
> code for preserving sessions among other things.  Maybe twisted could 
> help me on this part.  Aside from the backengine, I was thinking of 
> working around the other members of the project and building the 
> web/mail frontend from the ground-up in Python (as opposed to using a 
> PHP webmail client...) -- Twisted might come in handy here too.

>From what you've said, it seems like Twisted would work well indeed. You
could use Perspective Broker for your remote-object protocol, to replace
XML-RPC, and Twisted Web's Widgets for your web interface. If you need
any help with these, I can probably assist, as well as many others.

> Another project still in the drafting phase is a Free implementation of the
> Craigslist.org bulletin board system.  This would involve creating an
> application: To serve CGI and process form inputs.  Create static HTML

Hmmm.. Is there a particular reason you need CGI? If you don't need it
to work on multiple web servers, i'd just go with Twisted Web's Widgets,
again. It's a really nice API for developing web applications.

> pages for every post.  Compile indexes of the posts at regular
> intervals.  And, with a mail server, forward the postXXX@ email to the
> proper recipients.  I was planning on using straight python, mysql and
> postfix -- again, Twisted might come in handy.

Yup. Twisted's mail support is finally getting there, and we do
integrate with RDBMs with twisted.enterprise.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Sat Mar  2 18:42:09 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 02 Mar 2002 18:42:09 -0500
Subject: [Twisted-Python] Psyco is our friend
Message-ID: <3C816351.5060802@itamarst.org>

Psyco == http://sf.net/projects/psyco/

So, I ran a Banana benchmark, attached. The results:

     Psyco on
     1.8585100174 seconds (5380.65434483 messages a second)

Now I edit the file and turn off psyco:

     Psyco off
     4.81016397476 seconds (2078.93120743 messages a second)

Nice, eh?
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: bananatest.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020302/df5e2176/attachment.txt 

From twisted at itamarst.org  Sun Mar  3 00:41:13 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 03 Mar 2002 00:41:13 -0500
Subject: [Twisted-Python] A new testing strategy for protocols
Message-ID: <3C81B779.5090801@itamarst.org>

A long time issue we've had is how to test protocols under "real" 
circumstances. For DNS testing, I decided to do just that - see the code 
in twisted/test/test_names.py.

Basically, I start a server listening using UDP, and have a client 
connect to it, all within the testing code and automatically. It works 
pretty well, after a bit of debugging. Data is pushed by calling 
main.iterate().

Now, in a lot of cases twisted.protocols.loopback may be good enough, 
but this approach is really necessary for thorough testing in certain 
cases. FTP leaps to mind, but also if we want automated testing of TOC 
or OSCAR clients against real servers.

One drawback at least is that these tests will fail miserably on Jython 
(main.iterate on Jython doesn't push data), so I'm probably going to add 
code that makes sure they don't run at all on Jython.

Another drawback is the related issue that I'm also testing DNS queries 
against real servers - this assumes a working net connection.




From andrew-twisted at puzzling.org  Mon Mar  4 01:11:22 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 4 Mar 2002 17:11:22 +1100
Subject: [Twisted-Python] Win32 events main loop
Message-ID: <20020304061122.GA461@frobozz.local>

Hi all,

Here is the first *rough* cut of the Twisted main loop using Win32 events,
based upon internet.poll.

It seems to be okay for simpleserv.py, but I haven't tested it for anything
else.  I'll leave that to a day when I'm not feeling so ill...  I pretty
much guarantee it is mostly broken -- think of it as a proof of concept.

I think if I experiment with MsgWaitForMultipleObjects instead of
WaitForMultipleObjects, I can make it respond to Win32 window messages
properly; e.g. Ctrl-C and stopping when running as a service might work
nicely -- COM stuff would probably benefit too.

Enjoy!

-Andrew.

--- win32.py ---

# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General Public
# License as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

"""A win32event based implementation of the twisted main loop.

To install the event loop (and you should do this before any connections,
listeners or connectors are added):

    from twisted.internet import win32
    win32.install()

"""

# Win32 imports
from win32file import WSAEventSelect, FD_READ, FD_WRITE, FD_CLOSE, \
                      FD_ACCEPT, FD_CONNECT
from win32event import CreateEvent, WaitForMultipleObjects, \
                       WAIT_OBJECT_0, WAIT_TIMEOUT, INFINITE

# Twisted imports
from twisted.python import log, threadable
import main

# globals
reads = {}
writes = {}
events = {}

def _addEvent(fd, why, events=events):
    print '_addEvent:', fd, why
    event = CreateEvent(None, 0, 0, None)
    WSAEventSelect(fd, event, why)
    events[event] = (fd, why)
    return event

def addReader(reader, reads=reads):
    """Add a FileDescriptor for notification of data available to read.
    """
    print 'addReader:', reader
    if not reads.has_key(reader):
        reads[reader] = _addEvent(reader, FD_READ|FD_ACCEPT|FD_CONNECT)
        
def addWriter(writer, writes=writes):
    """Add a FileDescriptor for notification of data available to write.
    """
    print 'addWriter:', writer
    if not writes.has_key(writer):
        writes[writer] =_addEvent(writer, FD_WRITE)

def removeReader(reader):
    """Remove a Selectable for notification of data available to read.
    """
    if reads.has_key(reader):
        del events[reads[reader]]
        del reads[reader]

def removeWriter(writer, writes=writes):
    """Remove a Selectable for notification of data available to write.
    """
    if writes.has_key(writer):
        del events[writes[writer]]
        del writes[writer]

def removeAll():
    """Remove all selectables, and return a list of them."""
    result = reads.keys() + writes.keys()
    reads.clear()
    writes.clear()
    events.clear()
    return result

def doWaitForMultipleEvents(timeout,
                            reads=reads,
                            writes=writes):
    if timeout is None:
        #timeout = INFINITE
        timeout = 5000
    else:
        timeout = timeout * 1000
    print 'timeout is:', timeout
    
    handles = events.keys()
    val = WaitForMultipleObjects(handles, 0, timeout)
    print 'WaitForMultipleObjects returned:', val
    if val == WAIT_TIMEOUT:
        return
    elif val >= WAIT_OBJECT_0 and val < WAIT_OBJECT_0 + len(handles):
        print 'Here'
        fd, why = events[handles[val - WAIT_OBJECT_0]]
        print fd, why
        log.logOwner.own(fd)
        try:
            if why & FD_READ|FD_ACCEPT|FD_CONNECT:
                fd.doRead()
            elif why == FD_WRITE:
                fd.doWrite()
        except:
            log.deferr()
            why = FD_CLOSE

        if why == FD_CLOSE:
            removeReader(fd)
            removeWriter(fd)
            try:
                fd.connectionLost()
            except:
                log.deferr()

        log.logOwner.disown(fd)

def install():
    """Install the poll()-based event loop."""
    main.addReader = addReader
    main.addWriter = addWriter
    main.removeReader = removeReader
    main.removeWriter = removeWriter
    #main.doSelect = doPoll
    main.doSelect = doWaitForMultipleEvents
    main.removeAll = removeAll


def initThreads():
    """Do initialization for threads."""
    if main.wakerInstalled:
        # make sure waker is registered with us
        removeReader(main.waker)
        addReader(main.waker)

threadable.whenThreaded(initThreads)

__all__ = ["install"]



From kelly at dolphinsearch.com  Mon Mar  4 11:29:58 2002
From: kelly at dolphinsearch.com (Kelly Roestel)
Date: Mon, 4 Mar 2002 08:29:58 -0800 (PST)
Subject: [Twisted-Python] twistedmatrix client
Message-ID: <Pine.LNX.4.33.0203040826090.23385-100000@localhost.localdomain>

I am new to python and twistedmatrix, so any help would be great.  I have 
been able to write a server and connect to it via python sockets.  But I 
would like to figure out how to create a twisted client.  But, I have 
found no docs on creating clients.  Is there some place that I can look 
for docs, or can some one help me with client setup.  What I am passing to 
the client from the server is a simple list with four items.  Thanks for 
the help

-- 
Kelly Roestel
Network Admin
DolphinSearch, Inc




From twisted at itamarst.org  Sun Mar  3 18:30:14 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 03 Mar 2002 18:30:14 -0500
Subject: [Twisted-Python] twistedmatrix client
References: <Pine.LNX.4.33.0203040826090.23385-100000@localhost.localdomain>
Message-ID: <3C82B206.8040301@itamarst.org>

Kelly Roestel wrote:
> I am new to python and twistedmatrix, so any help would be great.  I have 
> been able to write a server and connect to it via python sockets.  But I 
> would like to figure out how to create a twisted client.  But, I have 
> found no docs on creating clients.  Is there some place that I can look 
> for docs, or can some one help me with client setup.  What I am passing to 
> the client from the server is a simple list with four items.  Thanks for 
> the help


# here's an example of a client that connects to "foobar.com"
# on port 8023

from twisted.protocols import protocol
from twisted.internet import main, tcp

class MyProtocol(protocol.Protocol):

     def connectionMade(self):
         self.transport.write("hello")

     def dataReceived(self, data):
         print "server sent me data, yay!", data


p = MyProtocol()
tcp.Client("foobar.com", 8023, p)

# start the event loop
main.run()




From twisted at itamarst.org  Sun Mar  3 18:37:30 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 03 Mar 2002 18:37:30 -0500
Subject: [Twisted-Python] Win32 events main loop
References: <20020304061122.GA461@frobozz.local>
Message-ID: <3C82B3BA.9020809@itamarst.org>

Andrew Bennetts wrote:

> Here is the first *rough* cut of the Twisted main loop using Win32 events,
> based upon internet.poll.

Cool! I'll test it a bit and then check it in, and maybe we should talk 
to glyph about giving you CVS write access :)

The next stage, one it's stable and more or less bug free, is probably 
making it more generic, so you can use it with things that aren't 
sockets (e.g. stdin/stdout, pipes, files, etc.) Also integration with 
the win32 GUI event loop win32all exposes, which I think uses the same 
subsystem.





From andrew-twisted at puzzling.org  Mon Mar  4 19:47:42 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 5 Mar 2002 11:47:42 +1100
Subject: [Twisted-Python] Win32 events main loop
In-Reply-To: <3C82B3BA.9020809@itamarst.org>
References: <20020304061122.GA461@frobozz.local> <3C82B3BA.9020809@itamarst.org>
Message-ID: <20020305004742.GA28702@ritsuko.xware.cx>

On Sun, Mar 03, 2002 at 06:37:30PM -0500, Itamar Shtull-Trauring wrote:
> The next stage, one it's stable and more or less bug free, is probably 
> making it more generic, so you can use it with things that aren't 
> sockets (e.g. stdin/stdout, pipes, files, etc.) Also integration with 

Yeah.  I'm not certain about how to do that, but it should be feasible.

> the win32 GUI event loop win32all exposes, which I think uses the same 
> subsystem.

Yeah; that means using MsgWaitForMultipleObjects instead of
WaitForMultipleObjects, basically (and checking for an extra possible return
value...).  I believe more than strictly GUI stuff will require this, in
fact -- I suspect COM will not function properly in a thread that is blocked
in WaitForMultipleObjects, from what I have read.

-Andrew.




From cpaul at telemetrybox.org  Tue Mar  5 02:29:57 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Mon, 4 Mar 2002 21:29:57 -1000
Subject: [Twisted-Python] Mime Types ins static.File
Message-ID: <20020304212957.A2739@Skaffen.pdchawaii.com>

Aloha,

Today I shut down Apache on my workstation and started using twisted.web on port 80 - everything is sailing smooth, I even have a startup script in rc.d.  The only issue I am running into so far has to do with mime types. 

In static, mime types are defined by the dictionary File.contentTypes - Is there an elegant way to dynamically set the mime types at mktap time?  Or would it be better to hack static.py to use Python's mimetypes module along with a common mime.types file? 

I am currently using: 

	contentTypes = mimetypes.read_mime_types('/usr/pkg/etc/httpd/mime.types') 

for my default mime types dictionary (this mime.types is from Apache).  This is obviously not a cross-platform solution.  By default, a NetBSD machine does not come with a mime.types database, instead it has to be installed with Apache or Netscape.  

Would it make sense for Twisted to come with it's own mime.types file? 


Thanks,
Charles



From cpaul at telemetrybox.org  Tue Mar  5 21:22:16 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Tue, 5 Mar 2002 16:22:16 -1000
Subject: [Twisted-Python] Web Widgets Examples
Message-ID: <20020305162216.A3742@Skaffen.pdchawaii.com>

I was wondering if anybody on this list has an example of using Web Widgets to render an HTML page?

Aloha,
Charles



From z3p at twistedmatrix.com  Tue Mar  5 21:47:45 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Tue, 5 Mar 2002 21:47:45 -0500
Subject: [Twisted-Python] Web Widgets Examples
In-Reply-To: <20020305162216.A3742@Skaffen.pdchawaii.com>
Message-ID: <3C853D01.27906.18BA508@localhost>

Yes, my homepage uses Web Widgets to render.  The link for the page is 
below, and the link for the code is on that page.  Hope that helps. :)
On 5 Mar 2002 at 16:22, cpaul at telemetrybox.org wrote:

> I was wondering if anybody on this list has an example of using Web Widgets to render an HTML page?

-p
--
       Paul Swartz
(o_    http://www.twistedmatrix.com/users/z3p.twistd/  _o)
//\    z3p at twistedmatrix.com                           /\\
V_/_   AIM: z3penguin                                 _\_V->





From cpaul at telemetrybox.org  Tue Mar  5 22:18:12 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Tue, 5 Mar 2002 17:18:12 -1000
Subject: [Twisted-Python] Web Widgets Examples
In-Reply-To: <3C853D01.27906.18BA508@localhost>
References: <20020305162216.A3742@Skaffen.pdchawaii.com> <3C853D01.27906.18BA508@localhost>
Message-ID: <20020305171812.B3742@Skaffen.pdchawaii.com>

Thanks!  I think I have my head wrapped around WebWidgets now.

Aloha,
Charles


On Tue, Mar 05, 2002 at 09:47:45PM -0500, Paul Swartz wrote:
> Yes, my homepage uses Web Widgets to render.  The link for the page is 
> below, and the link for the code is on that page.  Hope that helps. :)
> On 5 Mar 2002 at 16:22, cpaul at telemetrybox.org wrote:
> 
> > I was wondering if anybody on this list has an example of using Web Widgets to render an HTML page?
> 
> -p
> --
>        Paul Swartz
> (o_    http://www.twistedmatrix.com/users/z3p.twistd/  _o)
> //\    z3p at twistedmatrix.com                           /\\
> V_/_   AIM: z3penguin                                 _\_V->
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From twisted at itamarst.org  Tue Mar  5 22:50:54 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 05 Mar 2002 22:50:54 -0500
Subject: [Twisted-Python] Commits list problems
Message-ID: <3C85921E.7060408@itamarst.org>

Commits that change stuff in the root aren't sent to the commits list. 
So if I made a change to the ChangeLog along with my change, like the 
good programmer I am, nothing goes out to the commit list.

So, things that were lost - refactor of tap making APIs, and the fact 
that I checked in the win32 event loop.

This is BAD. This is ANNOYING.

Someone fix it.




From twisted at itamarst.org  Fri Mar  8 09:50:48 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 08 Mar 2002 09:50:48 -0500
Subject: [Twisted-Python] twisted.internet.process for Win32
Message-ID: <3C88CFC8.1010908@itamarst.org>

I've attached my current code, which seems to be working. This will 
hopefully be checked in today, but some testing by others would be useful.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: process_win32.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020308/88932f3d/attachment.txt 

From andrew-twisted at puzzling.org  Sat Mar  9 06:16:55 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 9 Mar 2002 22:16:55 +1100
Subject: [Twisted-Python] twisted.internet.process for Win32
In-Reply-To: <3C88CFC8.1010908@itamarst.org>
References: <3C88CFC8.1010908@itamarst.org>
Message-ID: <20020309111654.GA916@frobozz.local>

On Fri, Mar 08, 2002 at 09:50:48AM -0500, Itamar Shtull-Trauring wrote:
> I've attached my current code, which seems to be working. This will 
> hopefully be checked in today, but some testing by others would be useful.

Looks good; I'm not sure that you need to spawn three threads per process,
though.  I'll muck around a bit and see if I can do it better :)

(It *should* be easy to get it down to one thread by using
WaitForMultipleObjects, but we'll see...)

-Andrew.




From andrew-twisted at puzzling.org  Sat Mar  9 07:19:45 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 9 Mar 2002 23:19:45 +1100
Subject: [Twisted-Python] twisted.internet.process for Win32
In-Reply-To: <20020309111654.GA916@frobozz.local>
References: <3C88CFC8.1010908@itamarst.org> <20020309111654.GA916@frobozz.local>
Message-ID: <20020309121944.GA437@frobozz.local>

On Fri, Mar 08, 2002 at 09:50:48AM -0500, Itamar Shtull-Trauring wrote:
> I've attached my current code, which seems to be working. This will
> hopefully be checked in today, but some testing by others would be useful.

I'm not sure if it works on Win98 -- is this error harmless?
---
D:\PYTHON22\PYTHON.EXE
creating process
process created
ok, made process object
connection lost
Exception in thread Thread-3:
Traceback (most recent call last):
  File "D:\PYTHON22\lib\threading.py", line 408, in __bootstrap
    self.run()
  File "D:\PYTHON22\lib\threading.py", line 396, in run
    apply(self.__target, self.__args, self.__kwargs)
  File "process_win32.py", line 175, in doReadErr
    task.schedule(self.handleError, data)
AttributeError: Process instance has no attribute 'handleError'
---

And now on to me... :)

On Sat, Mar 09, 2002 at 10:16:55PM +1100, Andrew Bennetts wrote:
> (It *should* be easy to get it down to one thread by using
> WaitForMultipleObjects, but we'll see...)

I'm attaching a version which should work with only one thread per process,
not three (and with some work, could be limited to one thread overall).

However, I'm getting the following error:

---
Exception in thread Thread-1:
Traceback (most recent call last):
  File "D:\PYTHON22\lib\threading.py", line 408, in __bootstrap
    self.run()
  File "D:\PYTHON22\lib\threading.py", line 396, in run
    apply(self.__target, self.__args, self.__kwargs)
  File "process_win32.py", line 158, in waitOnPipe
    val = win32event.WaitForMultipleObjects(handles, 0,
api_error: (6, 'WaitForMultipleObjects', 'The handle is invalid.')
---

Anyone have any idea as to what the problem might be?

-Andrew.




From andrew-twisted at puzzling.org  Sat Mar  9 07:23:40 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 9 Mar 2002 23:23:40 +1100
Subject: [Twisted-Python] twisted.internet.process for Win32
In-Reply-To: <20020309121944.GA437@frobozz.local>
References: <3C88CFC8.1010908@itamarst.org> <20020309111654.GA916@frobozz.local> <20020309121944.GA437@frobozz.local>
Message-ID: <20020309122340.GA486@frobozz.local>

On Sat, Mar 09, 2002 at 11:19:45PM +1100, Andrew Bennetts wrote:
> I'm attaching a version which should work with only one thread per process,

*sigh*

And here is the attachment....

-Andrew.

-------------- next part --------------
"""
Win32 process support.
"""

# Twisted imports
from twisted.internet import task, abstract

# System imports
import win32api
import win32pipe
import win32file
import win32process
import win32security
import win32con
import win32event
import pywintypes
import msvcrt
import os
import sys
import threading
import Queue
import string


class Process(abstract.FileDescriptor):
    """A process that integrates with the Twisted event loop."""
    
    buffer = ''
    
    def __init__(self, command, args, environment, path):
        # security attributes for pipes
        sAttrs = win32security.SECURITY_ATTRIBUTES()
        sAttrs.bInheritHandle = 1

        # create pipes
        hStdin_r,  self.hStdin_w  = win32pipe.CreatePipe(sAttrs, 0)
        self.hStdout_r, hStdout_w = win32pipe.CreatePipe(sAttrs, 0)
        self.hStderr_r, hStderr_w = win32pipe.CreatePipe(sAttrs, 0)

        # set the info structure for the new process.
        StartupInfo = win32process.STARTUPINFO()
        StartupInfo.hStdInput  = hStdin_r
        StartupInfo.hStdOutput = hStdout_w
        StartupInfo.hStdError  = hStderr_w
        StartupInfo.dwFlags = win32process.STARTF_USESTDHANDLES
        # Mark doesn't support wShowWindow yet.
        # StartupInfo.dwFlags = StartupInfo.dwFlags | win32process.STARTF_USESHOWWINDOW
        # StartupInfo.wShowWindow = win32con.SW_HIDE
        
        # Create new output read handles and the input write handle. Set
        # the inheritance properties to FALSE. Otherwise, the child inherits
        # the these handles; resulting in non-closeable handles to the pipes
        # being created.
        pid = win32api.GetCurrentProcess()

        tmp = win32api.DuplicateHandle(
            pid,
            self.hStdin_w,
            pid,
            0,
            0,     # non-inheritable!!
            win32con.DUPLICATE_SAME_ACCESS)
        # Close the inhertible version of the handle
        win32file.CloseHandle(self.hStdin_w)
        self.hStdin_w = tmp
        
        tmp = win32api.DuplicateHandle(
            pid,
            self.hStdout_r,
            pid,
            0,
            0,     # non-inheritable!
            win32con.DUPLICATE_SAME_ACCESS)
        # Close the inhertible version of the handle
        win32file.CloseHandle(self.hStdout_r)
        self.hStdout_r = tmp
        
        tmp = win32api.DuplicateHandle(
            pid,
            self.hStderr_r,
            pid,
            0,
            0,     # non-inheritable!
            win32con.DUPLICATE_SAME_ACCESS)
        # Close the inhertible version of the handle
        win32file.CloseHandle(self.hStderr_r)
        self.hStderr_r = tmp
        
        # start the process.
        print "creating process"
        cmdline = "%s %s" % (command, string.join(args, ' '))
        hProcess, hThread, dwPid, dwTid = win32process.CreateProcess(
                None,   # program
                cmdline,# command line
                None,   # process security attributes
                None,   # thread attributes
                1,      # inherit handles, or USESTDHANDLES won't work.
                        # creation flags. Don't access the console.
                0,      # Don't need anything here.
                        # If you're in a GUI app, you should use
                        # CREATE_NEW_CONSOLE here, or any subprocesses
                        # might fall victim to the problem described in:
                        # KB article: Q156755, cmd.exe requires
                        # an NT console in order to perform redirection.. 
                environment,   # new environment
                path,          # new directory
                StartupInfo)
        # normally, we would save the pid etc. here...
        print "process created"
        # Child is launched. Close the parents copy of those pipe handles
        # that only the child should have open.
        # You need to make sure that no handles to the write end of the
        # output pipe are maintained in this process or else the pipe will
        # not close when the child process exits and the ReadFile will hang.
        win32file.CloseHandle(hStderr_w)
        win32file.CloseHandle(hStdout_w)
        win32file.CloseHandle(hStdin_r)

        self.outQueue = Queue.Queue()
        self.closed = 0
        
        #threading.Thread(target=self.doWrite).start()
        #threading.Thread(target=self.doReadOut).start()
        #threading.Thread(target=self.doReadErr).start()

        # Create event to signal when new data should be written
        self.writeMore = win32event.CreateEvent(None, 0, 0, None)
        
        threading.Thread(target=self.waitOnPipe).start()
    
    def write(self, data):
        """Write data to the process' stdin."""
        self.outQueue.put(data)
        win32event.PulseEvent(self.writeMore)
    
    def closeStdin(self):
        """Close the process' stdin."""
        self.outQueue.put(None)
        win32event.PulseEvent(self.writeMore)
    
    def connectionLost(self):
        """Will be called twice, by the stdout and stderr threads."""
        if not self.closed:
            abstract.FileDescriptor.connectionLost(self)
            print "connection lost"
            self.closed = 1
            self.closeStdin()
            win32file.CloseHandle(self.hStdout_r)
            win32file.CloseHandle(self.hStderr_r)

    def waitOnPipe(self):
        """Runs in thread."""
        handles = [self.writeMore, self.hStdout_r, self.hStderr_r]
        win32event.PulseEvent(self.writeMore)
        #print 'Event:' + str(win32event.WaitForSingleObject(self.hStdin_w, 2000))
        stdinClosed = 0
        while 1:
            val = win32event.WaitForMultipleObjects(handles, 0,
                                                    win32event.INFINITE)
            print 'waitOnPipe got val:', val
            if val == win32event.WAIT_OBJECT_0:
                if stdinClosed:
                    continue
                while not self.outQueue.empty():
                    data = self.outQueue.get()
                    if data == None:
                        win32file.CloseHandle(self.hStdin_w)
                        stdinClosed = 1
                    try:
                        win32file.WriteFile(self.hStdin_w, data, None)
                    except win32api.error:
                        win32file.CloseHandle(self.hStdin_w)
                        stdinClosed = 1
            elif val == win32event.WAIT_OBJECT_0 + 1:
                try:
                    hr, data = win32file.ReadFile(self.hStdout_r, 8192, None)
                except win32api.error:
                    task.schedule(self.connectionLost)
                    return
                task.schedule(self.handleChunk, data)
            elif val == win32event.WAIT_OBJECT_0 + 2:
                try:
                    hr, data = win32file.ReadFile(self.hStderr_r, 8192, None)
                except win32api.error:
                    task.schedule(self.connectionLost)
                    return
                task.schedule(self.handleError, data)

    
if __name__ == '__main__':
    from twisted.internet import main
    
    def printer(x):
        print "Got", repr(x)
    
    exe = win32api.GetModuleFileName(0)
    print exe
    p = Process(exe, ['-u', 'processtest.py'], None, None)
    print "ok, made process object"
    p.handleChunk = printer
    p.handleError = printer
    p.write("hello, world")
    p.closeStdin()
    main.run()

From twisted at itamarst.org  Sat Mar  9 11:47:01 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 09 Mar 2002 11:47:01 -0500
Subject: [Twisted-Python] twisted.internet.process for Win32
References: <3C88CFC8.1010908@itamarst.org> <20020309111654.GA916@frobozz.local> <20020309121944.GA437@frobozz.local> <20020309122340.GA486@frobozz.local>
Message-ID: <3C8A3C85.9050507@itamarst.org>

Andrew Bennetts wrote:

> And here is the attachment....

I'm having problems running my test program with this version - I'll do 
some more investigating later today or tommorow.




From twisted at itamarst.org  Sat Mar  9 17:15:19 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 09 Mar 2002 17:15:19 -0500
Subject: [Twisted-Python] twisted.internet.process for Win32
References: <3C88CFC8.1010908@itamarst.org> <20020309111654.GA916@frobozz.local> <20020309121944.GA437@frobozz.local> <20020309122340.GA486@frobozz.local> <3C8A3C85.9050507@itamarst.org>
Message-ID: <3C8A8977.4060306@itamarst.org>

A bit further reading showed a bit of a race condition in the writing 
part, and the fact that writing pipe might never get closed in certain 
situations. All solveable of course - but it might be easier to do a 2 
thread solution, one for writing and one with WaitForMultipleObjects for 
reading.

Or... there could be a single thread for *all* Processes stdout and 
stderr reading, and then another thread per Process for writing.




From twisted at itamarst.org  Sat Mar  9 21:39:37 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 09 Mar 2002 21:39:37 -0500
Subject: [Twisted-Python] Yet another win32 process
Message-ID: <3C8AC769.9090601@itamarst.org>

This one uses the win32 event loop for reading from stdout and stderr, 
and starts one thread per Process for writing to stdin. So we're down to 
one thread per Process instead of 3, thanks to Andrew's suggestion.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: process_win32_3.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020309/9f2d650d/attachment.txt 

From carmstro at twistedmatrix.com  Sun Mar 10 20:26:16 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 10 Mar 2002 20:26:16 -0500
Subject: [Twisted-Python] docs
Message-ID: <1015809978.5566.5.camel@radii>

I just shwacked all the HTML files in the 'doc/' directory and put them
in the TwistedDocs repository. This repository will be populated with
HTML documentation which have '.htc' suffixes -- these files *are* just
plain old HTML. I copied/hacked 'generate.py' from the WebSite
repository to be able to convert regular HTML to
HTML-without-headers-and-footers, and also be able to extract the title
from the <title> tags of the .htc document. the generate.py script
generates "prettier" html documents with no suffix according to a
template document which is passed to it on the command line. The
generate script also converts all links to "foo.htc" to "foo", thus
making linking transparent wether you're browsing un-processed docs or
not. Anyway, you people who are simply writing the docs don't need to
worry about anything -- just write html files with .htc suffixes and
link between them as you would expect. :-)

</babble>
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Sun Mar 10 21:14:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 10 Mar 2002 21:14:39 -0500
Subject: [Twisted-Python] Win32 updates
Message-ID: <3C8C130F.2050505@itamarst.org>

1) win32 process support is checked in and (lightly) tested. Just 
twisted.internet.win32.install() and it's there. For CGI support we're 
gonna need to write a small parser thing that can grok unix style 
"#!c:\python2.1\python.exe" interpreter lines.

2) Because the process tests install the win32 event loop, I discovered 
the win32 event loop breaks the the DNS client/server testing code, so 
currently these tests do *not* pass.

Anyone know about issues with WSAEventSelect and UDP?




From carmstro at twistedmatrix.com  Mon Mar 11 13:33:41 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Mar 2002 13:33:41 -0500
Subject: [Twisted-Python] docs
In-Reply-To: <1015809978.5566.5.camel@radii>
References: <1015809978.5566.5.camel@radii>
Message-ID: <1015871623.2248.7.camel@radii>

OK, so glyph, moshez, and I had a meeting about policy for docs -- this
is changing around a bit, again. But at least now everyone's settled on
everything, and we've figured out a specific policy to implement:

* Documentation is kept in the doc/ directory of the main "Twisted" CVS
  repository/
* the howto/ directory contains docs in plain HTML format (XHTML 
  preferred), with the extension '.html'
* the man/ directory contains docs in troff format with the '.1' suffix
* the api/ directory is empty in CVS, but will be used in the 
  distribution to contain API documentation generated from source (there
  will be an index.html in CVS pointing at the URL of the released API
  docs).
* the examples/ directory will contain code that demonstrates how to use
  Twisted.

I'll be making these changes in CVS shortly.


On Sun, 2002-03-10 at 20:26, Christopher Armstrong wrote:
> I just shwacked all the HTML files in the 'doc/' directory and put them
> in the TwistedDocs repository. This repository will be populated with
> HTML documentation which have '.htc' suffixes -- these files *are* just
> plain old HTML. I copied/hacked 'generate.py' from the WebSite
> repository to be able to convert regular HTML to
> HTML-without-headers-and-footers, and also be able to extract the title
> from the <title> tags of the .htc document. the generate.py script
> generates "prettier" html documents with no suffix according to a
> template document which is passed to it on the command line. The
> generate script also converts all links to "foo.htc" to "foo", thus
> making linking transparent wether you're browsing un-processed docs or
> not. Anyway, you people who are simply writing the docs don't need to
> worry about anything -- just write html files with .htc suffixes and
> link between them as you would expect. :-)
> 
> </babble>
> -- 
>                                 Chris Armstrong
>                          << radix at twistedmatrix.com >>
>                 http://twistedmatrix.com/users/carmstro.twistd/
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From j.her at t-online.de  Mon Mar 11 14:29:07 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Mon, 11 Mar 2002 20:29:07 +0100
Subject: [Twisted-Python] Win32 updates
In-Reply-To: <3C8C130F.2050505@itamarst.org>
Message-ID: <16kVUN-1NaboWC@fwd02.sul.t-online.com>

On Sun, 10 Mar 2002 21:14:39 -0500, Itamar Shtull-Trauring wrote:

>1) win32 process support is checked in and (lightly) tested. Just 
>twisted.internet.win32.install() and it's there. For CGI support we're 
>gonna need to write a small parser thing that can grok unix style 
>"#!c:\python2.1\python.exe" interpreter lines.

If someone implements this, please add support for detecting
/usr/bin/env xxx and then searching the $PATH for xxx.exe/bat/com/bleh.

Ciao, J?rgen





From andrew-twisted at puzzling.org  Mon Mar 11 20:25:10 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 12 Mar 2002 12:25:10 +1100
Subject: [Twisted-Python] Re: Twisted protocol
In-Reply-To: <3C8CEEBD.4070708@chello.se>
References: <3C8CEEBD.4070708@chello.se>
Message-ID: <20020312012510.GA13049@ritsuko.xware.cx>

On Mon, Mar 11, 2002 at 06:51:57PM +0100, David wrote:
> Hello spiv, this is supposed to be reaching you =)
> I was told by radix on #python at opn that you had written "a little proxy 
> protocol which dispatches to multiple other protocol objects" in 
> twisted. This is exactly what i need for a project of mine.
> I'd very much appriciate if you would share this little piece of code 
> with me or alternativly explain how it works.

Heh.  I'm CC'ing the list with this, just for the sake of it :)

Here is the class.  I created it for a case where I had a protocol that was
sometimes inheriting from one Protocol, and sometimes another, and I didn't
want to diddle with __bases__ or munge the two bases into one class
(although perhaps that is the "better" solution?).  If you like, imagine
PacketBasedProtocolA/B to be basic.LineReceiver and Int32StringReceiver,
where lineReceived and stringReceived are both aliased to packetReceived.

class ProxiedPacketProtocol(Protocol):
    """General packet-based protocol.
    
    This class provides a simple way to use either PacketBasedProtocolA or
    PacketBasedProtocolB (or potentially others) as protocol for a data feed,
    without having to change which one you inherit from at runtime.  It
    basically acts as a proxy protocol between the low-level protocol and your
    subclass.  

    Simply override parentProtocol with the "parent" protocol (the default is
    PacketBasedProtocolA) and then when packetReceived is triggered in the
    parent, packetReceived is called in me.  

    Inherit from this class, and override packetReceived."""
    
    parentProtocol = PacketBasedProtocolA
    packets = {}        # This is copied to the parent

    def __init__(self):
        # Create a private subclass of the parentProtocol so that we can
        # override its class-level data attribute(s).
        class ParentProtocol(self.parentProtocol):
            packets = self.packets

        # Create the parent protocol
        self.parent = ParentProtocol()

        # Raw data should get delivered to the parent...
        self.dataReceived = self.parent.dataReceived
        
        # ...and processed packets should come back to me
        self.parent.packetReceived = self.packetReceived
        self.parent.unknownPacket = self.unknownPacket

        # Data from the pinger needs to come via me
        self.parent.transport = self.transport

    def packetReceived(self, packet):
        """Override this.  
        
        Called whenever the parentProtocol receives a packet."""
        pass

    def unknownPacket(self, messageType, data):
        print "Received unknown packet of type '%s': %s" \
              % (messageType, repr(data))


David, I hope this is what you were after :)

It should be fairly easy to use and adapt -- but my question for the list is,
is it worth the extra effort it would take to make this more general?  i.e.
take arbitrary lists of attributes to copy from the parent to the proxy (and
vice versa?), instead of hard-coded names in __init__?

My other question is, is this a useful enough concept to include it in 
Twisted?  :)

-Andrew.




From carmstro at twistedmatrix.com  Mon Mar 11 20:19:46 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Mar 2002 20:19:46 -0500
Subject: [Twisted-Python] Re: Twisted protocol
In-Reply-To: <20020312012510.GA13049@ritsuko.xware.cx>
References: <3C8CEEBD.4070708@chello.se> 
	<20020312012510.GA13049@ritsuko.xware.cx>
Message-ID: <1015895988.2449.10.camel@radii>

On Mon, 2002-03-11 at 20:25, Andrew Bennetts wrote:
> My other question is, is this a useful enough concept to include it in 
> Twisted?  :)

Yes. Start bugging glyph to get CVS access. :-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From andrew-twisted at puzzling.org  Mon Mar 11 20:54:59 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 12 Mar 2002 12:54:59 +1100
Subject: [Twisted-Python] Automatic reconnection
Message-ID: <20020312015459.GB13049@ritsuko.xware.cx>

Hi all,

I need a tcp.Client that can automatically reconnect when disconnected.

I've written the following class, and it seems to work, but...
  * It doesn't handle unix sockets (that's ok for me, I'm using Windows, so I
    never had them in the first place)
  * I'm not sure what the "connector" is, and thus I suspect it won't for 
    Clients that use it.
  * It's only lightly tested

Is there a better way to do this (i.e. is there a way to do this already in 
Twisted, and I just haven't found it yet)?

Otherwise, I'd be interested in knowing if anyone else would find this useful,
or if maybe it should be included in Twisted.  I suspect I'm not the only
person who wants to be able to write a server which automatically tries to
recover from "upstream" problems.

-Andrew.

Code:
class ReconnectingClient(tcp.Client):
    """A tcp.Client that automatically reconnects when disconnected
    
    Overrideable attributes:
        * reconnectionDelay -- number of seconds to wait before reconnecting
        * maxReconnects -- maximum number of reconnects before giving up.  The
          reconnection counter is reset after a successfull reconnection.  Set
          this to None to keep retrying indefinitely.

    The protocol will have connectionLost called as normal when disconnected,
    but may get reconnected after that -- so if you need to reset anything in
    your protocol after a disconnection, do it in Protocol.connectionLost.
    """
    reconnectionDelay = 3.0
    maxReconnects = 5

    def __init__(self, host, port, protocol, timeout=None, connector=None):
        tcp.Client.__init__(self, host, port, protocol, timeout, connector)
        self.reconnectAttempts = 0
        self.reconnectProtocol = protocol

    def connectionLost(self):
        # Disconnect as normal
        tcp.Client.connectionLost(self)
        # Then schedule a reconnect
        if main.running:        # FIXME: Is this test necessary?
            print 'Lost connection, reconnecting...'
            main.addTimeout(self.reconnect, self.reconnectionDelay)

    def reconnect(self):
        if not self.connected:
            if (self.maxReconnects is None or 
                self.reconnectAttempts < self.maxReconnects):
                    self.reconnectAttempts += 1
                    tcp.Connection.__init__(self, self.createInternetSocket(), 
                                            self.reconnectProtocol)
                    self.doConnect()
                    main.addTimeout(self.reconnect, self.reconnectionDelay)
            else:
                print 'Reconnection failed after %d attempts.  Giving up.' \
                      % (self.reconnectAttempts,)
        else:
            # Reset the reconnect counter if we're connected.
            self.reconnectAttempts = 0




From twisted at itamarst.org  Mon Mar 11 20:53:38 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 11 Mar 2002 20:53:38 -0500
Subject: [Twisted-Python] Automatic reconnection
References: <20020312015459.GB13049@ritsuko.xware.cx>
Message-ID: <3C8D5FA2.9060009@itamarst.org>

Andrew Bennetts wrote:

> I need a tcp.Client that can automatically reconnect when disconnected.

tcp.Connector, or app.connectTCP.

e.g., given MyProtocol and Application instance app:
======================

from twisted.protocols import protocol

# make protocol factory for MyProtocol
f = protocol.ClientFactory()
f.protocol = MyProtocol

app.connectTCP("www.yahoo.com", 80, f)




From andrew-twisted at puzzling.org  Mon Mar 11 21:03:05 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 12 Mar 2002 13:03:05 +1100
Subject: [Twisted-Python] Automatic reconnection
In-Reply-To: <3C8D5FA2.9060009@itamarst.org>
References: <20020312015459.GB13049@ritsuko.xware.cx> <3C8D5FA2.9060009@itamarst.org>
Message-ID: <20020312020305.GA13895@ritsuko.xware.cx>

On Mon, Mar 11, 2002 at 08:53:38PM -0500, Itamar Shtull-Trauring wrote:
> Andrew Bennetts wrote:
> 
> >I need a tcp.Client that can automatically reconnect when disconnected.
> 
> tcp.Connector, or app.connectTCP.

Aah!  Thank you.

I thought it was a bit odd that I had to write something myself... :)

*slaps forehead*

-Andrew.




From carmstro at twistedmatrix.com  Tue Mar 12 17:17:52 2002
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 12 Mar 2002 16:17:52 -0600
Subject: [Twisted-Python] HTML in documentation
Message-ID: <20020312221752.GA12618@twistedmatrix.com>

It has become apparent to me that we need to standardize the tags we
use in HTML documentation for Twisted. This will make it easier to
apply stylesheets to it, as well as use processing tools to convert it
to other formats. Here is my proposal (This is especially aimed at
Moshe, since he is the HTML purist of the bunch, and I want to make
sure he's happy with these so he won't decide to rebel and start his
own repository of docs again ;-)). So I would like it if at least
Moshe and Glyph were to both reply to me in some fashion, even if with
a simple "yes" or "no" (if it's a "no", a short explanation would be
nice ;-)). Of course others are very much encouraged to chime in. The
three of us aren't the only important ones around here, by a long
shot. ;-)

1.) For code-snippets that are separated from paragraph content, we
should either use the <code> tag, along with <pre>. for example:

----

<p>
For example, this is how one defines a Resource:
</p>

<p>
<code><pre>
    from twisted.web import resource

    class MyResource(resource.Resource):
        def render(self, request):
            return "Hello, world!"
</pre></code>
</p>

----

The <pre> shall not be assigned any special semantic value in
processing tools or StyleSheets. It is only there so browsers will
render it correctly. Special semantics shall only be assigned to
<code>.

2.) For single-line code-snippets and attribute/method/module-names
interpolated in a paragraph, <code> shall also be used, but without
the <pre> tag. Also, module and class names should be specified with
their fully-qualified name, and have a link to the API documentation,
which is assumed to be in ../api/current/ (this is how it will be set
up on the web-site). Regular attribute names don't need to be fully
qualified (as this wouldn't make sense), but should still be enclosed
in <code> tags. For example:

----

<p>To add a 
<a
href="../api/current/twisted/web/widgets_Widget.html"><code>twisted.web.widgets.Widget</code></a>
instance to a 
<a
href="../api/current/twisted/web/widgets_Gadget.html"><code>twisted.web.widgets.Gadget</code></a>
instance, do <code>myGadget.putWidget("widgetPath", MyWidget())</code>.
</p>

<p> 
(implementation note: the widgets are stored in the
<code>gadgetInstance.widgets</code> attribute, which is a list.)
</p>

----

I realize that adding the links to the API documentation everywhere is
ugly, so I suppose it would be fine to only add the link to the first
instance a module/classname shows up in the document. Just make sure
there's a link in there somewhere. Maybe I'll hack on generate.py to
automatically insert the links when it sees a fully-qualified
twisted.* name... (but this doesn't mean one should completely
disregard linking to API docs -- the idea is to have the HTML
documents be browsable both with *or* without pre-processing)

3.) It goes without mentioning that one should use <hN> in a sane way
to organize the document: the only <h1> shall be the title of the
document, <h2> shall be sections, <h3> sub-sections, etc.

4.) Tags that have an optional closing tag should have the optional
closing tag (ie, <li> and </li>). This makes it easier for some
editors and processing tools to work with the code. This point isn't
all that important. If it bothers someone enough, I can deal without
having them. :-)

5.) Glyph says we should use XHTML, but he's a dork. Discuss. ;-)

That's about it. Any other suggestions? If everyone agrees to this,
I'll go through all the existing docs and update them with these rules
(I doubt there will be many updates), and probably create a
style-sheet to render them nicely.


p.s. -- The only rules I notice that differ with Moshe's style in his
existing documentation are 1.) he doesn't use <code> around multi-line
code snippets and 2.)  he doesn't have ending </li> tags. Is this a
problem for you, Moshe?






From carmstro at twistedmatrix.com  Tue Mar 12 17:44:46 2002
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 12 Mar 2002 16:44:46 -0600
Subject: [Twisted-Python] HTML in documentation
In-Reply-To: <20020312221752.GA12618@twistedmatrix.com>
References: <20020312221752.GA12618@twistedmatrix.com>
Message-ID: <20020312224446.GB12618@twistedmatrix.com>

OK, I've discussed this with Glyph and Moshe, and here are the
changes.  (sigh, i'm getting sick of seemingly discussing
documentation with myself on the mailing list. :P)

> 1.) For code-snippets that are separated from paragraph content, we
> should either use the <code> tag, along with <pre>. for example:

We won't be using <code> for multi-line snippets, but rather <pre>
with a mandatory class attribute. The two classes which we have come to
a conclusion on are "python" for regular python snippets, and
"python-interpreter" for examples of python interactive shell
sessions. For example:

----

<p>
For example, this is how one defines a Resource:
</p>

<p>
<pre class="python">
    from twisted.web import resource

    class MyResource(resource.Resource):
        def render(self, request):
            return "Hello, world!"
</pre>
</p>

----

> 2.) For single-line code-snippets and attribute/method/module-names
> interpolated in a paragraph, <code> shall also be used, but without
> the <pre> tag. Also, module and class names should be specified with
> their fully-qualified name, and have a link to the API documentation,
> which is assumed to be in ../api/current/ (this is how it will be set
> up on the web-site). Regular attribute names don't need to be fully
> qualified (as this wouldn't make sense), but should still be enclosed
> in <code> tags. For example:

We are going to rely entirely on processing for putting in links to
the API documentation. Instead of just having
<code>twisted.internet.main</code>, though, we'll have 
<code class="API">twisted.internet.main</code>. <code> tags used to delimit
actual python expressions will need class="python" as well. For example:

----

<p>
To add a <code class="API">twisted.web.widgets.Widget</code> instance
to a <code class="API">twisted.web.widgets.Gadget</code> instance, do
<code class="python">myGadget.putWidget("widgetPath", MyWidget())</code>.
</p>

<p> 
(implementation note: the widgets are stored in the
<code class="python">gadgetInstance.widgets</code> attribute, which is a
list.)
</p>

----

> 5.) Glyph says we should use XHTML, but he's a dork. Discuss. ;-)

Everyone has agreed that we shall use XHTML. That means <br />, people!


So, the next steps for me are to publish this documentation standard,
and start updating existing documentation to follow it.




From dereks at realloc.net  Wed Mar 13 21:14:34 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Wed, 13 Mar 2002 18:14:34 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
Message-ID: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>

	Hello.  My name is Derek Simkowiak, I've just been introduced to
Twisted by Sean Riley (sean at twistedmatrix dot com).  I'm using (and now
contributing to) his PyUI widget set for my 3D game engine.  When I told
him I still needed to write the networking code, he pointed me here.

	I wanted to introduce myself, ask for some general guidance about
a network protocol, and point out that the documentation titled "The
Basics" at

http://twistedmatrix.com/page.epy/docs/basics.html

	results in "no such page", which really sucks for somebody just 
getting started (like me).

	First, a little bit about my game engine, because it's the type of
thing you twisted Twisted people might be interested in:

o  OpenGL for rendering
o  SDL for event management
o  Quake2 BSP map rendering (many more model formats to come soon)
	- includes almost all of the Id BSP culling tricks
	- includes fully-functional collision detection using the Q2 
"bloated planes" algorithm, as figured out by Kekoa Proudfoot

o  Complete in-game GUI over the top of the 3D world, including 
transulency, using the PyUI widget set.  Screenshot at:

http://www.realloc.net/~dereks/targa_pyui1.jpg

	Also see the older shots at:

http://www.realloc.net/~dereks/commputers/my_code/targa/


	Also, the big piece that you may like: I've recently refactored
the whole damn thing, and with a little help from SWIG my "engine" is now
nothing more than some Python C extensions.  My "main event loop" is just
a simple Python script, and because all the [bottlenecking] rendering code
is still C, I get the ~70 FPS I was getting when the entire engine was
pure C.  But now I have Python at my disposal, mua ha ha.  (Also, note
that all the libraries are cross-platform.  I'm developing under Linux,
but eventually this thing should run under MS-Windows, Mac OS X, AmigaOS,
and even PlayStation2.)

	The big pieces I have left are the enemy A.I. and the networking
code.  This is a client-server engine.  The light at the end of the tunnel
is load-balanced Linux cluster (using LVS) serving up a persistent, 3D
world (ala' PlanetSide), and maybe even me making some $$$ from a few
hundred subscribers paying $5/month.  Now you see where Twisted fits in --
I'm basically shooting for twisted.reality in real-time 3D.

	My concern is regarding bandwidth.  My game protocol will be
similar to the Quake2 protocol, meaning huge lists of 'entities' are
updated with position and orientation data as often as possible.  Such
generic position updates will be done with UDP, and 'critical' packets
(such as damage, explosions, jumps, messages, etc.) will be done with TCP.  
In summary, every single byte of network overhead matters -- nay, every
BIT matters (npi).

	So I've browsed through the API docs, but I don't have any context
to know what I'm looking at.  I'll be downloading and installing the
source soon, but in the meantime... any advice?  

	Is there any particular package I should be looking at (other than
twisted.internet)?  Does Twisted's networking code cater to somebody who
needs to, for example, do bitshifting and compression to absolutely
minimize the bandwidth requirements?  What approach would you take?  Note
that, using PyUI for the GUI and [possibly] Twisted for the server, I want
to have things like in-game "IRC/ICQ", in-game "emails", and also in-game
"voice chat" ala CounterStrike 1.3.  Other wild ideas include in-game
video conferencing, and dynamically-downloaded bits of Python code that
would act as all-new, not-previously-imagined entities.  (Note that by
"in-game" I mean the 3D world is rendered, and the email/IRC/video client
application is rendered on top of the 3D world with some translucency.  
The idea is to keep the player immersed.)

	Any advice is greatly appreciated.  If anybody else is using
Twisted for something similar, I'd love to hear about it.


Thanks,
Derek Simkowiak
dereks at realloc dot net





From twisted at itamarst.org  Wed Mar 13 20:28:22 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Mar 2002 20:28:22 -0500
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
References: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
Message-ID: <3C8FFCB6.1060304@itamarst.org>

Derek Simkowiak wrote:

> 	I wanted to introduce myself, ask for some general guidance about
> a network protocol, and point out that the documentation titled "The
> Basics" at
> 
> http://twistedmatrix.com/page.epy/docs/basics.html

The site was re-done. This should be useful:

http://twistedmatrix.com/documents/servers

The next version of Twisted will include all written docs in the 
tarball, such as they are.

I'll let more qualified people answer the rest.




From jason at crash.org  Wed Mar 13 20:52:42 2002
From: jason at crash.org (Jason Asbahr)
Date: Wed, 13 Mar 2002 19:52:42 -0600
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
Message-ID: <2C4794B6-36EE-11D6-957E-000393753460@crash.org>

Hey, Darek!

> 	First, a little bit about my game engine, because it's the type of
> thing you twisted Twisted people might be interested in:
> <snip>

That looks great!

> 	Also see the older shots at:
>
> http://www.realloc.net/~dereks/commputers/my_code/targa/

This link didn't come up for me, though...

> 	Also, the big piece that you may like: I've recently refactored
> the whole damn thing, and with a little help from SWIG my "engine" is 
> now
> nothing more than some Python C extensions.  My "main event loop" is 
> just
> a simple Python script, and because all the [bottlenecking] rendering 
> code
> is still C, I get the ~70 FPS I was getting when the entire engine was
> pure C.  But now I have Python at my disposal, mua ha ha.

Very cool.

> 	The big pieces I have left are the enemy A.I. and the networking
> code.  This is a client-server engine.  The light at the end of the 
> tunnel
> is load-balanced Linux cluster (using LVS) serving up a persistent, 3D
> world (ala' PlanetSide), and maybe even me making some $$$ from a few
> hundred subscribers paying $5/month.  Now you see where Twisted fits 
> in --
> I'm basically shooting for twisted.reality in real-time 3D.

Welcome to the club.  :-)

> 	Any advice is greatly appreciated.  If anybody else is using
> Twisted for something similar, I'd love to hear about it.

I'm working on a similar goal -- Persistent worlds hosted in Twisted 
with various 3D clients.  Currently, I'm working with the Nebula Device 
(http://www.radonlabs.de), which is a multi-platform general 
scenegraph-oriented library.

I'm working on putting together a demo, but until then, check out the 
papers which describe the approach I'm taking:  
http://www.asbahr.com/papers.html

It would be useful to identify the common features between the various 
game projects so we can collaborate effectively.  Does the fact that you 
are using Quake-style approach mean that you will want to consider the 
world in terms of "levels", versus terrain chunks or "rooms"?

Cheers,

Jason




From dereks at realloc.net  Wed Mar 13 21:50:03 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Wed, 13 Mar 2002 18:50:03 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <3C8FFCB6.1060304@itamarst.org>
Message-ID: <Pine.LNX.4.33.0203131848310.18107-100000@archer.realloc.net>

-> > http://twistedmatrix.com/page.epy/docs/basics.html
-> 
-> The site was re-done. This should be useful:
-> 
-> http://twistedmatrix.com/documents/servers


	In that case, please note that

(a) Google returned the [broken] URL I gave, not the new one
(b) The URL I gave is referenced from (at least) one article online

	It would be nice if there were some kind of link to the new
documentation.


--Derek





From twisted at itamarst.org  Wed Mar 13 20:54:55 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Mar 2002 20:54:55 -0500
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
References: <Pine.LNX.4.33.0203131848310.18107-100000@archer.realloc.net>
Message-ID: <3C9002EF.80104@itamarst.org>

Derek Simkowiak wrote:

> (a) Google returned the [broken] URL I gave, not the new one

Not our problem.

> (b) The URL I gave is referenced from (at least) one article online

Maybe we should deal with this. Chris?

> 	It would be nice if there were some kind of link to the new
> documentation.

It's reachable if you go to http://twistedmatrix.com and then follow 
links from there.




From andrew at puzzling.org  Wed Mar 13 20:28:04 2002
From: andrew at puzzling.org (Andrew Bennetts)
Date: Thu, 14 Mar 2002 12:28:04 +1100
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
References: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
Message-ID: <20020314012804.GB9480@ritsuko.xware.cx>

On Wed, Mar 13, 2002 at 06:14:34PM -0800, Derek Simkowiak wrote:
> 
> 	I wanted to introduce myself, ask for some general guidance about
> a network protocol, and point out that the documentation titled "The
> Basics" at
> 
> http://twistedmatrix.com/page.epy/docs/basics.html
> 
> 	results in "no such page", which really sucks for somebody just 
> getting started (like me).

Hmm.  You've asked a lot of questions, which I can't answer at the moment,
but you might prefer this URL:

    http://twistedmatrix.com/documents/servers

-Andrew.




From abo at minkirri.apana.org.au  Wed Mar 13 21:32:25 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Thu, 14 Mar 2002 13:32:25 +1100
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <2C4794B6-36EE-11D6-957E-000393753460@crash.org>
References: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net> <2C4794B6-36EE-11D6-957E-000393753460@crash.org>
Message-ID: <20020314023225.GB7546@minkirri.apana.org.au>

On Wed, Mar 13, 2002 at 07:52:42PM -0600, Jason Asbahr wrote:
> Hey, Darek!
> 
> >	First, a little bit about my game engine, because it's the type of
> >thing you twisted Twisted people might be interested in:
> ><snip>
> 
> That looks great!

I'm interested in contributing to something like this.

> >	The big pieces I have left are the enemy A.I. and the networking
> >code.  This is a client-server engine.  The light at the end of the 

I have AI experience in a totaly different field (OCR), and do embeded
real-time systems programming in the real world (including some autopilot
programming). I once upon a time did some low-level 3D programming
(rendering algo's), but that was ages ago.

I'm interested in contributing to A.I, update + lag-compensation algo's,
progressive detail algo's, and random environment generation. I also have
some ideas on using RPG style skills and skill advancement in a FPS.

> I'm working on a similar goal -- Persistent worlds hosted in Twisted 
> with various 3D clients.  Currently, I'm working with the Nebula Device 
> (http://www.radonlabs.de), which is a multi-platform general 
> scenegraph-oriented library.

radeonlabs.... If there is demand, I'd also be interested in trying my hand
at tweaking radeon drivers for linux. Although I really like Python
programming, I've actually had heaps more experience with low level
assembler and C.

> I'm working on putting together a demo, but until then, check out the 
> papers which describe the approach I'm taking:  
> http://www.asbahr.com/papers.html
> 
> It would be useful to identify the common features between the various 
> game projects so we can collaborate effectively.  Does the fact that you 
> are using Quake-style approach mean that you will want to consider the 
> world in terms of "levels", versus terrain chunks or "rooms"?

Oh yeah, I'm also very keen on helping facilitate common-code usage.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From dereks at realloc.net  Wed Mar 13 22:32:01 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Wed, 13 Mar 2002 19:32:01 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <2C4794B6-36EE-11D6-957E-000393753460@crash.org>
Message-ID: <Pine.LNX.4.33.0203131906540.18107-100000@archer.realloc.net>

-> > http://www.realloc.net/~dereks/commputers/my_code/targa/
-> 
-> This link didn't come up for me, though...

	Sorry... typo.  Too many 'm's in 'commputer'.  Try:

http://www.realloc.net/~dereks/computers/my_code/targa/

	(That page is a bit dated, but has a link to more screenshots.)


-> I'm working on a similar goal -- Persistent worlds hosted in Twisted 
-> with various 3D clients.  Currently, I'm working with the Nebula Device 
-> (http://www.radonlabs.de), which is a multi-platform general 
-> scenegraph-oriented library.

	I need to take a look at Nomads again... (unfortunately, I have a
sharp distaste for C++).  But it would be good to look at their
architecture, now that mine is fully designed.

-> I'm working on putting together a demo, but until then, check out
-> the papers which describe the approach I'm taking:  
-> http://www.asbahr.com/papers.html

	I will take a look.  Thanks!

-> It would be useful to identify the common features between the various 
-> game projects so we can collaborate effectively.

	I don't want to spam this list with off-topic 3D game mails.  
Perhaps a "twisted-3d" list is called for?  Until then, please follow-up
with me privately.


->  Does the fact that you are using Quake-style approach mean that you
-> will want to consider the world in terms of "levels", versus terrain
-> chunks or "rooms"?

	No, I consider the world in terms of generic "Entities".  
Renderable entities have a "model" member, which is itself a C extension
class.  Then when the entity goes to render itself, it calls the C
'render' function of the model.  This is because many model types (i.e.
BSPs and Quadtrees)  have culling information intrinsically built into the
model format, and it makes sense to use C to do that.

	My engine will (eventually) allow for several BSPs within either a
landscape, or in outer space.  Imagine a game like HomeWorld, except that
you can crash-land your small fighter in the landing bay of an enemy
frigate, jump out of your fighter (First Person Shooter ala Quake), and
now -- within the BSP of the ship -- run around hallways and corridors
until you reach the control room, kill the command crew, and take over the
frigate.  That is the kind of flexibility I am aiming for; the "frigate"  
entity would detect if the camera (i.e., viewer perspective) is within the
ship.  If not, it would render a mesh model.  If yes, then it renders its
BSP tree.

	What's really cool is that my BSP code, unlike any other BSP-based
engine I've seen, allows sharing of the static data, including OpenGL
texture names.  So you'd have the BSP in memory once only, but be able to
have 50 frigates (any one of which you can crashland into).

	The same theory would apply to buildings, underwater settlements,
etc.  I hope to soon support meshes, particle systems, landscapes
(dynamically loaded lists triangle strips), and later on streaming media.  
All I need to do to add those is write a C struct to hold the data, and
then implement the render() and collide() APIs for those structs.  The
rest is handled in Python.

	I will read your papers soon.  Thanks again.


--Derek




From andrew-twisted at puzzling.org  Wed Mar 13 21:42:58 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 14 Mar 2002 13:42:58 +1100
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <3C9002EF.80104@itamarst.org>
References: <Pine.LNX.4.33.0203131848310.18107-100000@archer.realloc.net> <3C9002EF.80104@itamarst.org>
Message-ID: <20020314024258.GA10601@ritsuko.xware.cx>

On Wed, Mar 13, 2002 at 08:54:55PM -0500, Itamar Shtull-Trauring wrote:
> Derek Simkowiak wrote:
> 
> >(a) Google returned the [broken] URL I gave, not the new one
> 
> Not our problem.

Yeah.  Google will correct itself eventually; in the mean time, it probably
offers a cached copy.

> >	It would be nice if there were some kind of link to the new
> >documentation.
> 
> It's reachable if you go to http://twistedmatrix.com and then follow 
> links from there.

It might be nice if the 404 page offered a link back to the homepage,
instead of just a "No Such Resource" error message.

-Andrew.




From twisted at itamarst.org  Wed Mar 13 22:47:22 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Mar 2002 22:47:22 -0500
Subject: [Twisted-Python] Issues with roots.Collections in regards to Coil
Message-ID: <3C901D4A.2080006@itamarst.org>

(If this doesn't make sense, you can probably ignore it. At some point 
we might make a twisted-dev list.)

Issues:

1) The problem where you click on a virtual host's sub-Resource in web 
coil and you can't configure it. Dunno why. (I fixed some similar effect 
bugs which were caused by *someone* using MOVED_PERMANENTLY and ignoring 
the fact this gets cached by browsers, but that's not the issue here.)

2) The UI assumes entities in a collection are mutable, i.e. first 
created, and then separately configured via a Configurator. This 
conflicts with stuff like making a Collection for configuring a mapping 
of strings (e.g. the mime types mapping in static.File). Possible 
solution is a custom Collection class for these situations that gets its 
own web coil UI.

3) Collections of Configurators or of configurables? I would think that 
they should stay the way they are  -- collections of configurables. It's 
easy to wrap an object coming from a collection - that's what is done 
now. And it's easier to code the Collection this way, esp. since the 
configurable classes can be collections too, in cases where it makes 
sense (e.g. web.resource.Resource.)

In most situations of course the Collections would only be coded in the 
coil plugin, but it's useful to be able to have the configurable class 
be a Collection.


What were your issues, glyph?




From carmstro at twistedmatrix.com  Wed Mar 13 22:48:45 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 13 Mar 2002 22:48:45 -0500
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du
	lieber..."
In-Reply-To: <20020314023225.GB7546@minkirri.apana.org.au>
References: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
	<2C4794B6-36EE-11D6-957E-000393753460@crash.org> 
	<20020314023225.GB7546@minkirri.apana.org.au>
Message-ID: <1016077727.4090.3.camel@radii>

On Wed, 2002-03-13 at 21:32, Donovan Baarda wrote:
> I'm interested in contributing to A.I, update + lag-compensation algo's,
> progressive detail algo's, and random environment generation. I also have
> some ideas on using RPG style skills and skill advancement in a FPS.

Deus Ex did this very nicely. I wish every day that there was a Deus Ex
MMRPG :-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From sean at twistedmatrix.com  Wed Mar 13 23:27:11 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Wed, 13 Mar 2002 22:27:11 -0600
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
Message-ID: <HOEEKPCOKELHCNIJNMAGKEBOCFAA.sean@twistedmatrix.com>

well, the piece of Twisted that is immediately relvant for this type of
application is twisted.spread - comprised of "pb", "jelly" and "banana".
these provide a distributed object system with marshalling, serialization,
networked observation and reference counting. All things that are useful for
building on-line games!

This technology is not optimized at the level of Quake or Tribes style
protocols, but it is infinitely more flexible and provide a much higher
level of functionality.

I have some (incomplete) code for a primative "sub-space" clone that I wrote
using Twisted a while ago. It probably doesn't even work with the latest
Twisted build - but maybe it could be a starting point for some pb examples?
I could post it somewhere if anyone is interested.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Derek
Simkowiak
Sent: Wednesday, March 13, 2002 8:15 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du
lieber..."



	Hello.  My name is Derek Simkowiak, I've just been introduced to
Twisted by Sean Riley (sean at twistedmatrix dot com).  I'm using (and now
contributing to) his PyUI widget set for my 3D game engine.  When I told
him I still needed to write the networking code, he pointed me here.

	I wanted to introduce myself, ask for some general guidance about
a network protocol, and point out that the documentation titled "The
Basics" at

http://twistedmatrix.com/page.epy/docs/basics.html

	results in "no such page", which really sucks for somebody just
getting started (like me).

	First, a little bit about my game engine, because it's the type of
thing you twisted Twisted people might be interested in:

o  OpenGL for rendering
o  SDL for event management
o  Quake2 BSP map rendering (many more model formats to come soon)
	- includes almost all of the Id BSP culling tricks
	- includes fully-functional collision detection using the Q2
"bloated planes" algorithm, as figured out by Kekoa Proudfoot

o  Complete in-game GUI over the top of the 3D world, including
transulency, using the PyUI widget set.  Screenshot at:

http://www.realloc.net/~dereks/targa_pyui1.jpg

	Also see the older shots at:

http://www.realloc.net/~dereks/commputers/my_code/targa/


	Also, the big piece that you may like: I've recently refactored
the whole damn thing, and with a little help from SWIG my "engine" is now
nothing more than some Python C extensions.  My "main event loop" is just
a simple Python script, and because all the [bottlenecking] rendering code
is still C, I get the ~70 FPS I was getting when the entire engine was
pure C.  But now I have Python at my disposal, mua ha ha.  (Also, note
that all the libraries are cross-platform.  I'm developing under Linux,
but eventually this thing should run under MS-Windows, Mac OS X, AmigaOS,
and even PlayStation2.)

	The big pieces I have left are the enemy A.I. and the networking
code.  This is a client-server engine.  The light at the end of the tunnel
is load-balanced Linux cluster (using LVS) serving up a persistent, 3D
world (ala' PlanetSide), and maybe even me making some $$$ from a few
hundred subscribers paying $5/month.  Now you see where Twisted fits in --
I'm basically shooting for twisted.reality in real-time 3D.

	My concern is regarding bandwidth.  My game protocol will be
similar to the Quake2 protocol, meaning huge lists of 'entities' are
updated with position and orientation data as often as possible.  Such
generic position updates will be done with UDP, and 'critical' packets
(such as damage, explosions, jumps, messages, etc.) will be done with TCP.
In summary, every single byte of network overhead matters -- nay, every
BIT matters (npi).

	So I've browsed through the API docs, but I don't have any context
to know what I'm looking at.  I'll be downloading and installing the
source soon, but in the meantime... any advice?

	Is there any particular package I should be looking at (other than
twisted.internet)?  Does Twisted's networking code cater to somebody who
needs to, for example, do bitshifting and compression to absolutely
minimize the bandwidth requirements?  What approach would you take?  Note
that, using PyUI for the GUI and [possibly] Twisted for the server, I want
to have things like in-game "IRC/ICQ", in-game "emails", and also in-game
"voice chat" ala CounterStrike 1.3.  Other wild ideas include in-game
video conferencing, and dynamically-downloaded bits of Python code that
would act as all-new, not-previously-imagined entities.  (Note that by
"in-game" I mean the 3D world is rendered, and the email/IRC/video client
application is rendered on top of the 3D world with some translucency.
The idea is to keep the player immersed.)

	Any advice is greatly appreciated.  If anybody else is using
Twisted for something similar, I'd love to hear about it.


Thanks,
Derek Simkowiak
dereks at realloc dot net



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dereks at realloc.net  Thu Mar 14 01:31:21 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Wed, 13 Mar 2002 22:31:21 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <HOEEKPCOKELHCNIJNMAGKEBOCFAA.sean@twistedmatrix.com>
Message-ID: <Pine.LNX.4.33.0203132215240.18886-100000@archer.realloc.net>

-> well, the piece of Twisted that is immediately relvant for this type of
-> application is twisted.spread - comprised of "pb", "jelly" and "banana".
-> these provide a distributed object system with marshalling, serialization,
-> networked observation and reference counting. All things that are useful for
-> building on-line games!

	Very cool (although, I have to say it, I'm not really a fan of
'cute' API names.  I much prefer clarity and conciseness.)

	Also, twisted.spread could easily be confused with the "Spread" C
library, which is also designed for use in distributed systems.  It has a
somewhat different purpose, but my first thought was that twisted.spread
was a Python interface to the Spread library (which would be really useful
for Twisted, by the way).  See http://www.spread.org/.


-> This technology is not optimized at the level of Quake or Tribes style
-> protocols, but it is infinitely more flexible and provide a much higher
-> level of functionality.

	Unfortunately, most people _HATE_ a laggy gaming experience (i.e.,
see the "Damn Lag" T-Shirt at ThinkGeek.com).  For my application, the
need for efficiency outweighs the other features of twisted.spread.

	However, I could probably use twisted.spread for "administrative"  
networking.  That would be things like text messages, download of resource
files (meshes, textures, etc.), changing levels, etc. -- things that don't 
need to be updated at ~70 FPS.


-> Twisted build - but maybe it could be a starting point for some pb examples?
-> I could post it somewhere if anyone is interested.

	"More examples" is always better than "fewer examples"  :)

	Thanks for the help!


--Derek




From sean at twistedmatrix.com  Thu Mar 14 11:00:32 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Thu, 14 Mar 2002 10:00:32 -0600
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203132215240.18886-100000@archer.realloc.net>
Message-ID: <HOEEKPCOKELHCNIJNMAGAECACFAA.sean@twistedmatrix.com>

>	Unfortunately, most people _HATE_ a laggy gaming experience (i.e.,
>see the "Damn Lag" T-Shirt at ThinkGeek.com).  For my application, the
>need for efficiency outweighs the other features of twisted.spread.

>	However, I could probably use twisted.spread for "administrative"
>networking.  That would be things like text messages, download of resource
>files (meshes, textures, etc.), changing levels, etc. -- things that don't
>need to be updated at ~70 FPS.

In the spectrum of protocols ranging from generic but bandwidth heavy
protocols like SOAP to highly compressed and specific protocols like Quake,
"pb" falls somewhere in the middle - but much closer to the Quake end. It
has been optimized for use in games, while still providing generic
functionality.

"Lag" is much more of an issue than just protocol design. Tricks such as
client-side prediction, intelligent weapon design, distance based
attenuation and aggressive visibility calculation make a huge difference.
With the right game design and the optimizations that are planned for pb i
think it could be used for FPS type applications. There could even be an
extension to banana (the protocol packer) specifically for these application
that knows about 3d co-ordinates, movement packets and other common packet
types. This banana extension could do bit-shifting, low-precision floats and
compression, or any other tricks learned from the FPS crowd.

I am definately planning on using it for all in-game traffic within the 3D
virtual spaces I am building. I'd encourage you to do the same - at very
least consider using extensions to pb rather than writing your own protocol
framework.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dereks at realloc.net  Thu Mar 14 16:13:51 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Thu, 14 Mar 2002 13:13:51 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <HOEEKPCOKELHCNIJNMAGAECACFAA.sean@twistedmatrix.com>
Message-ID: <Pine.LNX.4.33.0203141303010.22142-100000@archer.realloc.net>

-> "Lag" is much more of an issue than just protocol design.

	Of course, and I have been studying heavily all of the things you
mentioned (prediction, et. al.).  But just to give you an idea of how
optimized the 3D protocols are, Sony's PlanetSide only uses 4 bits for the
Z component of it's entity origin update packets (because they are using
tricks to get around the loss in granularity).

	Also, as the guy who going to have to write the code, I'm kind of 
looking forward to playing with different optimizations and "tricks".  If 
I'm just calling somebody else's library, I lose all that fun :)


-> I am definately planning on using it for all in-game traffic within the 3D
-> virtual spaces I am building.

	I'm highly interested in this work; I would love to see what kind
of response times you get with twisted.spread (and which 'tricks' you 
employ :).


-> least consider using extensions to pb rather than writing your own protocol
-> framework.

	Because you are so persistent in this recommendation, I will take
a very close look at pb.  But presently my intuition says I'll be writing
my own.


--Derek




From twisted at itamarst.org  Thu Mar 14 15:21:13 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 14 Mar 2002 15:21:13 -0500
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
References: <Pine.LNX.4.33.0203141303010.22142-100000@archer.realloc.net>
Message-ID: <3C910639.7050908@itamarst.org>

Derek Simkowiak wrote:

 > Because you are so persistent in this recommendation, I will take a
 > very close look at pb.  But presently my intuition says I'll be
 > writing my own.

Well, on the low level, we were discussing make banana extendable so you
can define custom data types, e.g. a data type for location that is sent 
in 4 bytes. The overhead for you would be one extra byte per message, I 
think.

This depends on adding "profiles" to the banana protocol, which is on 
our TODO list.




From dereks at realloc.net  Thu Mar 14 16:47:26 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Thu, 14 Mar 2002 13:47:26 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <3C910639.7050908@itamarst.org>
Message-ID: <Pine.LNX.4.33.0203141338440.22457-100000@archer.realloc.net>

-> Well, on the low level, we were discussing make banana extendable so you
-> can define custom data types, e.g. a data type for location that is sent 
-> in 4 bytes. The overhead for you would be one extra byte per message, I 
-> think.

	Not 4 bytes... 4 BITS (for the Z component only).  I don't know
what they're doing, but that's what their Lead Developer told me.

	Obviously, the need to fiddle with bitshifting (and other tricks,
like compressing certain packet types before transmisison) makes me think
I'll need to write my own network library.

	There are also further refinements in the CounterStrike/Half-Life
version of the Quake2 protocol, although I don't know what those are yet.  
I'm also dinking around with ideas like using bits to mark the traversal
of a binary "packet opcode" tree, putting the most common types of packets
near the top of the tree and the less common (or lower priority) packets
near the bottom -- this way, the opcode identifier for the most common
packet would only be one bit (and my networking code would be a nasty mess
of bitshifting and endian-specific code :).  Given this type of work, I'd
rather not just "pass it off" to banana.  (Although I'm still going to
take a close look at what's there.)


Thanks,
Derek





From andrew-twisted at puzzling.org  Thu Mar 14 18:13:57 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 15 Mar 2002 10:13:57 +1100
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203141338440.22457-100000@archer.realloc.net>
References: <3C910639.7050908@itamarst.org> <Pine.LNX.4.33.0203141338440.22457-100000@archer.realloc.net>
Message-ID: <20020314231357.GA23827@ritsuko.xware.cx>

On Thu, Mar 14, 2002 at 01:47:26PM -0800, Derek Simkowiak wrote:
> -> Well, on the low level, we were discussing make banana extendable so you
> -> can define custom data types, e.g. a data type for location that is sent 
> -> in 4 bytes. The overhead for you would be one extra byte per message, I 
> -> think.
> 
> 	Not 4 bytes... 4 BITS (for the Z component only).  I don't know
> what they're doing, but that's what their Lead Developer told me.

Yes, but you won't be sending 4 bits as a single packet -- that would have
just as much latency as 4 bytes, in practice.  The TCP/UDP overhead is more
like 40 bytes per packet, after all.

In practice, I suspect you'll be sending more than a single Z component at a
time.  You're more likely to change the X, Y and Z at once; or multiple Zs,
or something.  It all depends on the game, of course.  But my point is that
one byte extra on a X, Y & Z message that you pack into e.g. 4 bytes is
going to be as fast in practice as anything else.

> 	Obviously, the need to fiddle with bitshifting (and other tricks,
> like compressing certain packet types before transmisison) makes me think
> I'll need to write my own network library.

Or extend an existing one...

I really know nothing about the internals of twisted.spread, but extending
it sounds like a better idea than building a new one.

> 	There are also further refinements in the CounterStrike/Half-Life
> version of the Quake2 protocol, although I don't know what those are yet.  
> I'm also dinking around with ideas like using bits to mark the traversal
> of a binary "packet opcode" tree, putting the most common types of packets
> near the top of the tree and the less common (or lower priority) packets
> near the bottom -- this way, the opcode identifier for the most common
> packet would only be one bit (and my networking code would be a nasty mess
> of bitshifting and endian-specific code :).  Given this type of work, I'd
> rather not just "pass it off" to banana.  (Although I'm still going to
> take a close look at what's there.)

Sounds like good ol' Huffman codes to me.  Not a bad idea, though, assuming
that bit-packing gives any genuine advantage -- I'm generally skeptical that
the benefit of being able to squeeze an extra 5% through the network
outweighs the overhead (especially in code complexity) of bit-twiddling at
both ends (yes, I realise CPU is more plentiful than bandwidth).  I'd
personally leave bit twiddling until much later in a project, as I suspect
it could be an unnecessary and premature optimisation compared to the other
techniques mentioned.  Bit-twiddling strikes me as an implementation
optimisation, where algorithmic gains could be much more beneficial... but
then, I've never written a networked game, so I'm just guessing :)

-Andrew.




From glyph at twistedmatrix.com  Thu Mar 14 18:59:18 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 14 Mar 2002 17:59:18 -0600
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du
	lieber..."
In-Reply-To: <20020314231357.GA23827@ritsuko.xware.cx>
References: <3C910639.7050908@itamarst.org>
	<Pine.LNX.4.33.0203141338440.22457-100000@archer.realloc.net> 
	<20020314231357.GA23827@ritsuko.xware.cx>
Message-ID: <1016150358.360.40.camel@janus>

On Thu, 2002-03-14 at 17:13, Andrew Bennetts wrote:
> On Thu, Mar 14, 2002 at 01:47:26PM -0800, Derek Simkowiak wrote:
> > -> Well, on the low level, we were discussing make banana extendable so you
> > -> can define custom data types, e.g. a data type for location that is sent 
> > -> in 4 bytes. The overhead for you would be one extra byte per message, I 
> > -> think.
> > 
> > 	Not 4 bytes... 4 BITS (for the Z component only).  I don't know
> > what they're doing, but that's what their Lead Developer told me.
> 
> Yes, but you won't be sending 4 bits as a single packet -- that would have
> just as much latency as 4 bytes, in practice.  The TCP/UDP overhead is more
> like 40 bytes per packet, after all.

And yes, this is where a lot of often-neglected network trickiness
happens -- actually getting more data into each packet.  Balancing
latency against keeping a full packet payload is hard.

> > 	Obviously, the need to fiddle with bitshifting (and other tricks,
> > like compressing certain packet types before transmisison) makes me think
> > I'll need to write my own network library.
> 
> Or extend an existing one...

And, while pb is designed to be extended to do just this, the amount of
application-specific optimization necessary for a first-person shooter
is really phenomenal.  You'll need to optimize PB down quite a bit
further than it's already been (although PB is built to be optimized, so
it's not really a problem) even to be adequate for the control stream. 
The biggest problem I can see you having with the protocol itself is the
fact that it only operates over TCP.  A UDP extension for doing things
like movement packets would be really handy!

> I really know nothing about the internals of twisted.spread, but extending
> it sounds like a better idea than building a new one.

twisted.spread, and Perspective Broker, are both designed to be highly
extensible.  Itamar is currently working on the final iteration of
banana, which will define some mechanisms for backwards-compatibility,
as well as enabling us to write an RFC.

Consider ancillary services that are going to interoperate with your
game, too; if you are extending PB in order to do your game protocol,
then applications like game browsers, high-score charts on webpages (and
so on) will come together in a snap.  Other folks are also writing games
that use Twisted for networking, and it would be neat if they could all
talk to each other!

> > 	There are also further refinements in the CounterStrike/Half-Life
> > version of the Quake2 protocol, although I don't know what those are yet.  
> > I'm also dinking around with ideas like using bits to mark the traversal
> > of a binary "packet opcode" tree, putting the most common types of packets
> > near the top of the tree and the less common (or lower priority) packets
> > near the bottom -- this way, the opcode identifier for the most common
> > packet would only be one bit (and my networking code would be a nasty mess
> > of bitshifting and endian-specific code :).  Given this type of work, I'd
> > rather not just "pass it off" to banana.  (Although I'm still going to
> > take a close look at what's there.)
> 
> Sounds like good ol' Huffman codes to me.  Not a bad idea, though, assuming
> that bit-packing gives any genuine advantage -- I'm generally skeptical that
> the benefit of being able to squeeze an extra 5% through the network
> outweighs the overhead (especially in code complexity) of bit-twiddling at
> both ends (yes, I realise CPU is more plentiful than bandwidth).  I'd
> personally leave bit twiddling until much later in a project, as I suspect
> it could be an unnecessary and premature optimisation compared to the other
> techniques mentioned.  Bit-twiddling strikes me as an implementation
> optimisation, where algorithmic gains could be much more beneficial... but
> then, I've never written a networked game, so I'm just guessing :)

Networked games are tough, and Derek's concerns are valid.

My point of view on this is that PB cannot handle such a game by itself,
but it defines mechanisms for extensibility that are designed to solve
exactly this sort of problem.  PB's purpose is twofold.  It does provide
a useful, generic, high level protocol that one can use out-of-the-box
in lots of different kinds of applications.  However, I also hope to
provide a sort of meta-standard for protocols that have domain-specific
optimization requirements, so that real systems that solve hard problems
can communicate lower-priority (e.g. "the ones that don't have to be as
close to real time as possible") messages using a mechanism less abusive
to their performance requirements (either on the network in CPU) than
XML-RPC, and easier to add new messages to than something like CORBA. 
For most systems, this should really be good enough.

Ideally I'd like to replace HTTP with it, but that's obviously a bit
more work than has been done :)  (Smash the web!)

Despite the fact that I want to provide a reasonably efficient network
layer, my own humble opinion is that systems that are so
latency-sensitive that PB doesn't work for them out of the box are
probably kidding themselves about the latency issues that arise just by
using the internet... but I think that John Carmack disagrees.

At the very least, PB should help one get off the ground and start
prototyping game functionality really early, before one worries about
seriously packing the network protocol; if one's game is just a 3D
shooter this is probably not that interesting.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020314/e34e0f76/attachment.pgp 

From glyph at twistedmatrix.com  Thu Mar 14 19:15:52 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 14 Mar 2002 18:15:52 -0600
Subject: [Twisted-Python] Issues with roots.Collections in regards to
	Coil
In-Reply-To: <3C901D4A.2080006@itamarst.org>
References: <3C901D4A.2080006@itamarst.org>
Message-ID: <1016151352.360.48.camel@janus>

On Wed, 2002-03-13 at 21:47, Itamar Shtull-Trauring wrote:
> (If this doesn't make sense, you can probably ignore it. At some point 
> we might make a twisted-dev list.)
> 
> Issues:
> 
> 1) The problem where you click on a virtual host's sub-Resource in web 
> coil and you can't configure it. Dunno why. (I fixed some similar effect 
> bugs which were caused by *someone* using MOVED_PERMANENTLY and ignoring 
> the fact this gets cached by browsers, but that's not the issue here.)

Whoops.  Thank you for showing me The Way :-).

I'll poke around the configuration at some point, but I don't really
have time for it now.

> 2) The UI assumes entities in a collection are mutable, i.e. first 
> created, and then separately configured via a Configurator. This 
> conflicts with stuff like making a Collection for configuring a mapping 
> of strings (e.g. the mime types mapping in static.File). Possible 
> solution is a custom Collection class for these situations that gets its 
> own web coil UI.

Yes.  This really needs to have its own web UI.  Are you going to be
doing it?

> 3) Collections of Configurators or of configurables? I would think that 
> they should stay the way they are  -- collections of configurables. It's 
> easy to wrap an object coming from a collection - that's what is done 
> now. And it's easier to code the Collection this way, esp. since the 
> configurable classes can be collections too, in cases where it makes 
> sense (e.g. web.resource.Resource.)

> In most situations of course the Collections would only be coded in the 
> coil plugin, but it's useful to be able to have the configurable class 
> be a Collection.

I had to re-read this point a few times, but I agree :-).  The way that
it works now is nice, because you have a good degree of flexibility in
where you put the code that builds the virtual configuration hierarchy.

> What were your issues, glyph?

Right now I only have one minor one -- why is the factory function an
argument to registerConfigurator, but the configurableClass and
configName are both attributes of the Configurator?  It seems like they
should all be one or the other.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020314/bad3724c/attachment.pgp 

From carmstro at twistedmatrix.com  Thu Mar 14 19:08:05 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 14 Mar 2002 19:08:05 -0500
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du
	lieber..."
In-Reply-To: <Pine.LNX.4.33.0203132215240.18886-100000@archer.realloc.net>
References: <Pine.LNX.4.33.0203132215240.18886-100000@archer.realloc.net>
Message-ID: <1016150893.6712.0.camel@radii>

(note, this message is a bit stale. I composed it yesterday, but my
mail server (twistedmatrix.com) went down for a bit.)

On Thu, 2002-03-14 at 01:31, Derek Simkowiak wrote:
> -> well, the piece of Twisted that is immediately relvant for this type of
> -> application is twisted.spread - comprised of "pb", "jelly" and "banana".
> -> these provide a distributed object system with marshalling, serialization,
> -> networked observation and reference counting. All things that are useful for
> -> building on-line games!
> 
> 	Very cool (although, I have to say it, I'm not really a fan of
> 'cute' API names.  I much prefer clarity and conciseness.)

>From the coding standard:
 Try to choose names which are both easy to remember and meaningful.
 Some silliness is OK at the module naming level (see twisted.spread...)
 but when choosing class names, be as precise as possible.  Write code
 with a dictionary and thesaurus open on the table next to you.

At least 'spread' and 'pb' are sane names -- spread is a toolkit for
spreadable computing (as opposed to distributed computing, which we make
the dinction with because spreadable is translucent as opposed to
transparent), and we have PerspectiveBroker which is.. a broker for
Perspectives (which were named with the rule of clarity and conciseness
in mind -- in fact, Glyph spent an obscene amount of time coming up with
this name). :-) I'm only saying all this because I think disliking the
name is pretty irrelevant when it comes to code ;-) Anyway, see below,
not *all* of this message is a troll ;-)

> 	Also, twisted.spread could easily be confused with the "Spread" C
> library, which is also designed for use in distributed systems.  It has a
> somewhat different purpose, but my first thought was that twisted.spread
> was a Python interface to the Spread library (which would be really useful
> for Twisted, by the way).  See http://www.spread.org/.

Well, there's not much we can do about this but try to make it clear
that it's not in the documentation/website (which we do).

> -> This technology is not optimized at the level of Quake or Tribes style
> -> protocols, but it is infinitely more flexible and provide a much higher
> -> level of functionality.
> 
> 	Unfortunately, most people _HATE_ a laggy gaming experience (i.e.,
> see the "Damn Lag" T-Shirt at ThinkGeek.com).  For my application, the
> need for efficiency outweighs the other features of twisted.spread.

You might want to take a closer look at the banana protocol. It was
definitely implemented with efficiency and extensibility in mind. My
point is, a UDP alternative for it would be very cool, especially if we
could integrate it higher-level abstraction, like a subset of/something
similar to PB, for example (this would an interesting challenge to think
about). The biggest problem here is CPU-time that banana/jelly take up
-- but this problem is being targetted, especially with dash's work on
twisted.eco. :-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Thu Mar 14 21:25:41 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 14 Mar 2002 21:25:41 -0500
Subject: [Twisted-Python] Issues with roots.Collections in regards to	Coil
References: <3C901D4A.2080006@itamarst.org> <1016151352.360.48.camel@janus>
Message-ID: <3C915BA5.7080004@itamarst.org>

> Right now I only have one minor one -- why is the factory function an
> argument to registerConfigurator, but the configurableClass and
> configName are both attributes of the Configurator?  It seems like they
> should all be one or the other.

Mmmm, well, I think there was some reason I made configurableClass an 
attribute - probably so Configurator can check that it is getting the 
right types of instances. But that's not important. And you can look at 
a Configurator and see what it configures. But if it bothers you a lot 
feel free to refactor the API and fix up twisted.coil.plugins.

The factory is optional, and would have to be a class method, and python 
doesn't do class methods in a nice way before python 2.2. It could be an 
instance method, but that's just icky, it's a factory after all. So the 
factory has to be a separare argument to registerConfigurator.






From abo at minkirri.apana.org.au  Thu Mar 14 21:51:59 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Fri, 15 Mar 2002 13:51:59 +1100
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203141303010.22142-100000@archer.realloc.net>
References: <HOEEKPCOKELHCNIJNMAGAECACFAA.sean@twistedmatrix.com> <Pine.LNX.4.33.0203141303010.22142-100000@archer.realloc.net>
Message-ID: <20020315025159.GD27353@minkirri.apana.org.au>

On Thu, Mar 14, 2002 at 01:13:51PM -0800, Derek Simkowiak wrote:
> -> "Lag" is much more of an issue than just protocol design.
> 
> 	Of course, and I have been studying heavily all of the things you
> mentioned (prediction, et. al.).  But just to give you an idea of how
> optimized the 3D protocols are, Sony's PlanetSide only uses 4 bits for the
> Z component of it's entity origin update packets (because they are using
> tricks to get around the loss in granularity).
> 
> 	Also, as the guy who going to have to write the code, I'm kind of 
> looking forward to playing with different optimizations and "tricks".  If 
> I'm just calling somebody else's library, I lose all that fun :)

My advice with "tricks" is avoid them until the last moment of
implementation. Too many designs get complicated beyond redemption by
"clever tricks" too early in the piece. You end up with a tangled mess that
breaks every time you look at it, and usualy turns out slower than a
"trick-free" clean implementation of a good design.

> -> least consider using extensions to pb rather than writing your own protocol
> -> framework.
> 
> 	Because you are so persistent in this recommendation, I will take
> a very close look at pb.  But presently my intuition says I'll be writing
> my own.

My advice would be to prototype using Twisted, then optimise to C later if
it is needed. Python will allow you to easily re-factor the whole design
again and again untill you get it right. If you start in C, the re-factoring
will hurt enough that you will avoid it and employ "tricks" instead :-)

My gut feeling is that a good twisted implementation will be fast enough at
throwing bytes over a wire. Optimising to C will only buy you CPU, not
reduced latency and/or bandwidth. The really critical thing will be the
design, ie what data you send, and how it is used to present a consistant
world view.

Be prepared to think "outside the box" when at the design stage, and
prototype and experiment extensively. There are some potentialy groovy ideas
floating around based on "distributed data fusion", where all the nodes
maintain their own view of the world, which is used to correct and is
corrected by the other nodes "world views", using karmen (spel?) filter
techniques. This is a generic approach to resolving a concensus world view
between multiple distributed sources of information.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From nils at paragon.no  Sat Mar 16 23:20:51 2002
From: nils at paragon.no (Nils R Grotnes)
Date: Sun, 17 Mar 2002 04:20:51 +0000
Subject: [Twisted-Python] This seems too good to be true... :-)
Message-ID: <20020317052557.ILPC25525.fep01-svc.swip.net@turids>

Hi!

I know I probably should lurk-a-lot-first, so please just tell me to shut
up if I'm somehow out of line here...

I like to state up front that I'm fresh, fresh and fresh. I switched to Debian
just recently, I have just read my first Python book, and I didn't know this
place existed until a week ago. The latter is what I wonder about in the
Subject. How come it was so hard to find you? I have lurked quite a lot on
comp.lang.python and c.l.p.announce, and I have surfed around on a lot of
Python websites, but the first I ever heard of twisted was in c.l.p.a on
the 9th. I'm very impressed with your setup and what I have seen of the code
so far, so I figure _something_ must be wrong. :-)

Ah, well. I hope I'm wrong, because I'd love both to use this stuff, and
help out. I have coded a few (professional) projects before, but only in
VB, so I'll keep my defiled hands off the code here until I've de-learned
most of my bad habits... :-) Hopefully I can do some bug-hunting, testing
and maybe even a little documentation after a while? (I dual boot to Win95
and have installed ActivePython there, if that can be useful.)

My first try to do more than babble, will be a suggestion I couldn't find
anything about in the archive; On my Debian, the package is installed in
/usr/lib/python2.1/site-packages/twisted, but there's no twisted.pth file
in the site-packages directory. After I added such a file (only containing
the word "twisted" without the apostrophes) I now have twisted in sys.path
when I start a Python shell. If it was missing for some good reason, I'd
like to know it...

Nils



From carmstro at twistedmatrix.com  Sun Mar 17 01:21:43 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 17 Mar 2002 01:21:43 -0500
Subject: [Twisted-Python] This seems too good to be true... :-)
In-Reply-To: <20020317052557.ILPC25525.fep01-svc.swip.net@turids>
References: <20020317052557.ILPC25525.fep01-svc.swip.net@turids>
Message-ID: <1016346105.4228.90.camel@radii>

On Sat, 2002-03-16 at 23:20, Nils R Grotnes wrote:
> Hi!
> 
> I know I probably should lurk-a-lot-first, so please just tell me to shut
> up if I'm somehow out of line here...

You're far from out of line, sir :-)

[clip..]
> Python websites, but the first I ever heard of twisted was in c.l.p.a on
> the 9th. I'm very impressed with your setup and what I have seen of the code
> so far, so I figure _something_ must be wrong. :-)

Oh, you'll probably be hearing more about Twisted in the coming
months.... muwahahaha!

> Ah, well. I hope I'm wrong, because I'd love both to use this stuff, and
> help out. I have coded a few (professional) projects before, but only in
> VB, so I'll keep my defiled hands off the code here until I've de-learned
> most of my bad habits... :-) Hopefully I can do some bug-hunting, testing
> and maybe even a little documentation after a while? (I dual boot to Win95
> and have installed ActivePython there, if that can be useful.)

This is great! We would love your help. Documentation and win32 support
are two things that need focus. More heads working on these would be a
_very_ good thing :-)

> My first try to do more than babble, will be a suggestion I couldn't find
> anything about in the archive; On my Debian, the package is installed in
> /usr/lib/python2.1/site-packages/twisted, but there's no twisted.pth file
> in the site-packages directory. After I added such a file (only containing
> the word "twisted" without the apostrophes) I now have twisted in sys.path
> when I start a Python shell. If it was missing for some good reason, I'd
> like to know it...

You shouldn't need a .pth file, here. You're supposed to qualify all
packages inside the 'twisted' package. That is, rather than doing
"import internet", you do "from twisted import internet" or "import
twisted.internet".

So anyway, what sorts of projects are you interested in doing with
Twisted?

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Sun Mar 17 18:43:08 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 17 Mar 2002 18:43:08 -0500
Subject: [Twisted-Python] We now have a bug tracker
Message-ID: <3C952A0C.2050201@itamarst.org>

http://twistedmatrix.com/users/itamarst.twistd/bugs/

It's using twisted.bugs, which is of course still a work in progress, 
but it's good enough to add bugs to. Please submit all and any bugs, 
feature wishes and so on.




From tyler.wilson at acm.org  Sun Mar 17 20:34:05 2002
From: tyler.wilson at acm.org (Tyler W. Wilson)
Date: Sun, 17 Mar 2002 21:34:05 -0400
Subject: [Twisted-Python] Some Win32 comments
Message-ID: <3C95440D.10807@acm.org>

I was trying to get the Twisted IM client running, and have a few 
comments related to config issues on Win32. Here they are:

1 running 'python setup.py install' copies the twisted folder to the 
<python>\lib\site-packages folder, which is okay. but if you change to 
the Twisted<version> folder and do 'python bin\im', it will be using the 
sources from the original location, NOT the site-packages location.
 
2 similar to the above, if you set PYTHONPATH to point to 
Twisted<version> folder, as it says to do in the README, the original 
twisted files will be used, not those copied to the site-packages folder.
 
so, given 1 & 2, do we really need to do the setup.py? It should be 
noted in the README(.win32?) that users should either: 1) set PYTHONPATH 
to Twisted<version> and NOT run setup.py, and include the full path to 
im, mktap, etc, or 2) do NOT set PYTHONPATH, run setup.py, and still 
include the fullpath to the bin folder.
 
i would also suggest that the files in the bin folder have the .py 
extension, so that on Windows we can associate them to the python 
interpreter, which would simplify things.

3 im (Tk) fails to save config state, if HOME is not set, since the ~ 
will return exactly, and this is an invalid filename charcter under 
Win9x. Either split it to check, or put in an error/warning.
 
 here is a fix i made to mine, which should work on all platforms:
 
tkim.py, line 912:
      path = ".imsaved"
      home = os.path.expanduser("~")
      if home != "~":
           path = home+os.sep+path

Thanks,
Tyler




From andrew-twisted at puzzling.org  Sun Mar 17 20:57:34 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 18 Mar 2002 12:57:34 +1100
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <3C95440D.10807@acm.org>
References: <3C95440D.10807@acm.org>
Message-ID: <20020318015734.GA25582@ritsuko.xware.cx>

On Sun, Mar 17, 2002 at 09:34:05PM -0400, Tyler W. Wilson wrote:
> 3 im (Tk) fails to save config state, if HOME is not set, since the ~ 
> will return exactly, and this is an invalid filename charcter under 
> Win9x. Either split it to check, or put in an error/warning.

Hmm.  It works fine for me on Win2k:

>>> os.path.expanduser('~')
'C:\\Documents and Settings\\AndrewB'

Win98 really isn't meant to be a server OS, and Twisted is largely a library
for writing servers.  On the other hand, the IM is more of an end-user app,
so probably should be more lenient about such things.

You could also try using the Cygwin version of Python, which is more
unix-like.  I'm not sure if it has Tcl/Tk libraries, though...

-Andrew.




From carmstro at twistedmatrix.com  Sun Mar 17 21:04:50 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 17 Mar 2002 21:04:50 -0500
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <3C95440D.10807@acm.org>
References: <3C95440D.10807@acm.org>
Message-ID: <1016417091.11167.9.camel@radii>

On Sun, 2002-03-17 at 20:34, Tyler W. Wilson wrote:
> I was trying to get the Twisted IM client running, and have a few 
> comments related to config issues on Win32. Here they are:
> 
> 1 running 'python setup.py install' copies the twisted folder to the 
> <python>\lib\site-packages folder, which is okay. but if you change to 
> the Twisted<version> folder and do 'python bin\im', it will be using the 
> sources from the original location, NOT the site-packages location.
>  
> 2 similar to the above, if you set PYTHONPATH to point to 
> Twisted<version> folder, as it says to do in the README, the original 
> twisted files will be used, not those copied to the site-packages folder.
>  
> so, given 1 & 2, do we really need to do the setup.py? It should be 
> noted in the README(.win32?) that users should either: 1) set PYTHONPATH 
> to Twisted<version> and NOT run setup.py, and include the full path to 
> im, mktap, etc, or 2) do NOT set PYTHONPATH, run setup.py, and still 
> include the fullpath to the bin folder.

The README doesn't mention setup.py at all; it only mentions that you
should set your PYTHONPATH environment variable.

> i would also suggest that the files in the bin folder have the .py 
> extension, so that on Windows we can associate them to the python 
> interpreter, which would simplify things.

Would it be better to detect if we're on windows and rename all the bin/
scripts to foo.py, or maybe include a set of supplementary .bat files
that just ran 'python bin/foo.py'? I'll implement this either way. (if
we go with the former option, it'll require win32 users to run setup.py,
which is probably better any way)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From tyler.wilson at acm.org  Sun Mar 17 21:27:25 2002
From: tyler.wilson at acm.org (Tyler W. Wilson)
Date: Sun, 17 Mar 2002 22:27:25 -0400
Subject: [Twisted-Python] Some Win32 comments
References: <3C95440D.10807@acm.org> <20020318015734.GA25582@ritsuko.xware.cx>
Message-ID: <3C95508D.1000602@acm.org>

Andrew Bennetts wrote:

>On Sun, Mar 17, 2002 at 09:34:05PM -0400, Tyler W. Wilson wrote:
>
>>3 im (Tk) fails to save config state, if HOME is not set, since the ~ 
>>will return exactly, and this is an invalid filename charcter under 
>>Win9x. Either split it to check, or put in an error/warning.
>>
>
>Hmm.  It works fine for me on Win2k:
>
>>>>os.path.expanduser('~')
>>>>
>'C:\\Documents and Settings\\AndrewB'
>
Windows NT and above (Win2K, WinXP) do have a concept of users and home 
directories, so this is logical. Win9x does not really. Or maybe it is 
an issue with Python?

>
>Win98 really isn't meant to be a server OS, and Twisted is largely a library
>for writing servers.  On the other hand, the IM is more of an end-user app,
>so probably should be more lenient about such things.
>
I lean towards the latter. I would like to do some work on the TkIM 
client in Twisted, to get some experience and 'give something back'. I 
always liked the Jabber approach (the protocols being handled on the 
server-side). But they did not keep the ICQ gateway up to date, so I 
stopped using it. But a Jabber protocol in Twisted may go further (and 
later perhaps have a Jabber server written in Twisted).

>
>You could also try using the Cygwin version of Python, which is more
>unix-like.  I'm not sure if it has Tcl/Tk libraries, though...
>
I will look for some binaries. I am not set up with cygwin at the 
moment, being on a slow-ass modem connection.

>
>-Andrew.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020317/a6a5bfdc/attachment.htm 

From tyler.wilson at acm.org  Sun Mar 17 21:50:54 2002
From: tyler.wilson at acm.org (Tyler W. Wilson)
Date: Sun, 17 Mar 2002 22:50:54 -0400
Subject: [Twisted-Python] Some Win32 comments
References: <3C95440D.10807@acm.org> <1016417091.11167.9.camel@radii>
Message-ID: <3C95560E.8010909@acm.org>

Christopher Armstrong wrote:

>On Sun, 2002-03-17 at 20:34, Tyler W. Wilson wrote:
>
>>I was trying to get the Twisted IM client running, and have a few 
>>comments related to config issues on Win32. Here they are:
>>
>>1 running 'python setup.py install' copies the twisted folder to the 
>><python>\lib\site-packages folder, which is okay. but if you change to 
>>the Twisted<version> folder and do 'python bin\im', it will be using the 
>>sources from the original location, NOT the site-packages location.
>> 
>>2 similar to the above, if you set PYTHONPATH to point to 
>>Twisted<version> folder, as it says to do in the README, the original 
>>twisted files will be used, not those copied to the site-packages folder.
>> 
>>so, given 1 & 2, do we really need to do the setup.py? It should be 
>>noted in the README(.win32?) that users should either: 1) set PYTHONPATH 
>>to Twisted<version> and NOT run setup.py, and include the full path to 
>>im, mktap, etc, or 2) do NOT set PYTHONPATH, run setup.py, and still 
>>include the fullpath to the bin folder.
>>
>
>The README doesn't mention setup.py at all; it only mentions that you
>should set your PYTHONPATH environment variable.
>
True, but two items: 1) I believe it is 'standard procedure' to do a 
python setup.py for any new Python modules. And 2) I had asked on the 
IRC channels about this, and they said you shoulw run setup.py. So, I 
think it should be mentioned either way in the README.

>
>>i would also suggest that the files in the bin folder have the .py 
>>extension, so that on Windows we can associate them to the python 
>>interpreter, which would simplify things.
>>
>
>Would it be better to detect if we're on windows and rename all the bin/
>scripts to foo.py, or maybe include a set of supplementary .bat files
>that just ran 'python bin/foo.py'? I'll implement this either way. (if
>we go with the former option, it'll require win32 users to run setup.py,
>which is probably better any way)
>
Is there is an issue with just renaming them with a py extension on all 
platforms? I mean, they are Python source files. And all the other 
Twisted Python source files have .py extensions. I know you use these as 
scripts on *nix.

And either way, on Windows you should note in the readme that the system 
PATH should include the Twisted bin directory. It doesnt mention this 
for Unix either, but I suppose it is needed, isn't it?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020317/c11a0aad/attachment.htm 

From nils at paragon.no  Sun Mar 17 21:52:47 2002
From: nils at paragon.no (Nils R Grotnes)
Date: Mon, 18 Mar 2002 02:52:47 +0000
Subject: [Twisted-Python] This seems too good to be true... :-)
References: <20020317052557.ILPC25525.fep01-svc.swip.net@turids> <1016346105.4228.90.camel@radii>
Message-ID: <20020318024911.JWUK19591.fep04-svc.swip.net@turids>

Christopher

> Oh, you'll probably be hearing more about Twisted in the coming
> months.... muwahahaha!

Ah! (Or should that be: Eh? :-) I actually stumbled into this place because
I was searching for good DNS support in Python. There's a sourceforge package
that I think is supposed to be added to the standard release sometime in
the future. But I found it very incomplete, and rather ugly. I haven't looked
very hard into the twisted version, but superficially it looks much cleaner.

> > most of my bad habits... :-) Hopefully I can do some bug-hunting, testing
> > and maybe even a little documentation after a while? (I dual boot to Win95
> > and have installed ActivePython there, if that can be useful.)
> This is great! We would love your help. Documentation and win32 support
> are two things that need focus. More heads working on these would be a
> _very_ good thing :-)

I'm in, then! I must warn everyone that I'm currently on a 28.8 Kb modem.
I'm working on getting a cable connection, but until then I'm slow to reply
and not too keen on repeatedly downloading huge chunks of bytes...

> > /usr/lib/python2.1/site-packages/twisted, but there's no twisted.pth file
> You shouldn't need a .pth file, here. You're supposed to qualify all
> packages inside the 'twisted' package.

I get it. Looking into the Bobo, HTMLgen, Numeric, PIL and gadfly, which
are packages that use such a file, I see they have just plonked all their code
into one sub-directory.

> So anyway, what sorts of projects are you interested in doing with
> Twisted?

I'm not the typically reliable, plodding kind of worker. So I doubt I'll
ever try to volunteer for the news column... But I'm open to help out in
more time limited projects, if someone need that. Just send me an email.

I do have some ideas for coding projects, for example I am wondering if it
will be possible to rewrite this Pyne email+news client I'm currently using,
with twisted code and OO-structure. Pyne is written in Python, and have a
OE/Pegasus look that I think is rather good. Having a GUI interface that
caters to those of us used to having all messaging components in one application,
while having the *nix multi-user and modular structure in the background,
is what I'm aiming at. Though Pyne is good on the surface, the author readily
admitted that very OO it is not. He also does not update his website or reply
to emails any more...

But that's for the future, I'm currently just reading and learning.

What I will be doing, is taking notes about nits. As I'm reading webpages
and documentation, I notice errors that are probably very hard to see once
the text has been read a few times. Is there some link or address I can send
such nitlets to? Maybe somewhere on the PoundPython wikiwiki? Maybe I should
just make one...

And I'm always open to other suggestions.

Nils



From carmstro at twistedmatrix.com  Sun Mar 17 21:46:38 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 17 Mar 2002 21:46:38 -0500
Subject: [Twisted-Python] This seems too good to be true... :-)
In-Reply-To: <20020318024911.JWUK19591.fep04-svc.swip.net@turids>
References: <20020317052557.ILPC25525.fep01-svc.swip.net@turids>
	<1016346105.4228.90.camel@radii> 
	<20020318024911.JWUK19591.fep04-svc.swip.net@turids>
Message-ID: <1016419600.11358.15.camel@radii>

On Sun, 2002-03-17 at 21:52, Nils R Grotnes wrote:
> Christopher
[snip..]
> I do have some ideas for coding projects, for example I am wondering if it
> will be possible to rewrite this Pyne email+news client I'm currently using,
> with twisted code and OO-structure. Pyne is written in Python, and have a
> OE/Pegasus look that I think is rather good. Having a GUI interface that
> caters to those of us used to having all messaging components in one application,
> while having the *nix multi-user and modular structure in the background,
> is what I'm aiming at. Though Pyne is good on the surface, the author readily
> admitted that very OO it is not. He also does not update his website or reply
> to emails any more...

This is excellent! A few of us are interested in doing a mail client as
well. ^.^

> But that's for the future, I'm currently just reading and learning.
> 
> What I will be doing, is taking notes about nits. As I'm reading webpages
> and documentation, I notice errors that are probably very hard to see once
> the text has been read a few times. Is there some link or address I can send
> such nitlets to? Maybe somewhere on the PoundPython wikiwiki? Maybe I should
> just make one...

Oh, the mailling lists here is absolutely fine. Also, if you want to get
in contact with any of us in real-time, most of the developers hang out
on the #Python and #Twisted channels on the irc.openprojects.net IRC
network. Drop by and have a chat! (or have you already been there, and I
didn't realize you were? ^.^)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From andrew at puzzling.org  Sun Mar 17 20:46:51 2002
From: andrew at puzzling.org (Andrew Bennetts)
Date: Mon, 18 Mar 2002 12:46:51 +1100
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <3C95440D.10807@acm.org>
References: <3C95440D.10807@acm.org>
Message-ID: <20020318014651.GA25463@ritsuko.xware.cx>

On Sun, Mar 17, 2002 at 09:34:05PM -0400, Tyler W. Wilson wrote:
> so, given 1 & 2, do we really need to do the setup.py? It should be 
> noted in the README(.win32?) that users should either: 1) set PYTHONPATH 
> to Twisted<version> and NOT run setup.py, and include the full path to 
> im, mktap, etc, or 2) do NOT set PYTHONPATH, run setup.py, and still 
> include the fullpath to the bin folder.
> 
> i would also suggest that the files in the bin folder have the .py 
> extension, so that on Windows we can associate them to the python 
> interpreter, which would simplify things.

I'm thinking that the best solution is probably more like what PyChecker
does.  Basically, install the bin scripts into e.g. c:\python22\scripts,
possibly as batch files that call the original scripts, possibly as the
original scripts with ".py" added.  I've found it useful to add the scripts
directory to my %PATH% for pychecker, and so this (for me at least :) would
make things like twistd automatically available to my command prompt.

-Andrew.




From glyph at twistedmatrix.com  Sun Mar 17 23:03:13 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 17 Mar 2002 22:03:13 -0600
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <3C95440D.10807@acm.org>
References: <3C95440D.10807@acm.org>
Message-ID: <20020318040313.GA14002@twistedmatrix.com>

On Sun, Mar 17, 2002 at 09:34:05PM -0400, Tyler W. Wilson wrote:
> I was trying to get the Twisted IM client running, and have a few 
> comments related to config issues on Win32. Here they are:

Thanks for your feedback.

> [snip stuff about setup.py]

> i would also suggest that the files in the bin folder have the .py 
> extension, so that on Windows we can associate them to the python 
> interpreter, which would simplify things.

The real problem here is that Windows isn't very command-line centric,
so there's no clear way to do this.  The UNIX procedure is to put bin/*
in /usr/bin/ using your package manager (debian's "apt", for example).

What we need is a win32 equivalent to the bin/* scripts -- probably a
few .pyw files with trivial GUIs on them.  Renaming these to e.g.
twistd.py would cause several problems -- 1, twistd (et. al.) is not a
python module and should not be importable with 'import'; 2, these
scripts would apparently do nothing when invoked in Windows, unless you
have them bring up a terminal window -- in which case they will do
nothing but briefly flash a help message in a terminal window which will
disappear.

Rather than documenting the current state of affairs for win32 users, we
ought to make things work in an appropriately windows-y way instead of
relying on the fact that (some of) the stuff in bin/ just happens to run
on Windows.  Part of this Windows-centric experience of Twisted involves
COIL being fully functional, which it is not yet; that's why we haven't
started polishing up the distribution.  Soon though :-)

> 3 im (Tk) fails to save config state, if HOME is not set, since the ~ 
> will return exactly, and this is an invalid filename charcter under 
> Win9x. Either split it to check, or put in an error/warning.

Thanks for the fix -- Paul, any comments? :-)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From j.her at t-online.de  Mon Mar 18 13:50:36 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Mon, 18 Mar 2002 19:50:36 +0100
Subject: [Twisted-Python] We now have a bug tracker
In-Reply-To: <3C952A0C.2050201@itamarst.org>
Message-ID: <16n2D4-1cVvO4C@fwd06.sul.t-online.com>

On Sun, 17 Mar 2002 18:43:08 -0500, Itamar Shtull-Trauring wrote:

>http://twistedmatrix.com/users/itamarst.twistd/bugs/
>
>It's using twisted.bugs, which is of course still a work in progress, 
>but it's good enough to add bugs to. Please submit all and any bugs, 
>feature wishes and so on.

Hmmm, wouldn't a binding to RoundUp be more wise?
Ciao, J?rgen





From j.her at t-online.de  Mon Mar 18 14:02:15 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Mon, 18 Mar 2002 20:02:15 +0100
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <20020318040313.GA14002@twistedmatrix.com>
Message-ID: <16n2OK-0AHxSqC@fwd06.sul.t-online.com>

On Sun, 17 Mar 2002 22:03:13 -0600, Glyph Lefkowitz wrote:

>Rather than documenting the current state of affairs for win32 users, we
>ought to make things work in an appropriately windows-y way instead of
>relying on the fact that (some of) the stuff in bin/ just happens to run
>on Windows.  Part of this Windows-centric experience of Twisted involves
>COIL being fully functional, which it is not yet; that's why we haven't
>started polishing up the distribution.  Soon though :-)

I think I volunteered some time ago (and never came around to it) to
add distutils overloads for scripts like I have in my projects, and in
RoundUp. If you don't want to go the GUI route directly, I can finally
do it.

Ciao, J?rgen





From twisted at itamarst.org  Mon Mar 18 15:05:32 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 18 Mar 2002 15:05:32 -0500
Subject: [Twisted-Python] Some Win32 comments
References: <16n2OK-0AHxSqC@fwd06.sul.t-online.com>
Message-ID: <3C96488C.8000600@itamarst.org>

Juergen Hermann wrote:

> I think I volunteered some time ago (and never came around to it) to
> add distutils overloads for scripts like I have in my projects, and in
> RoundUp. If you don't want to go the GUI route directly, I can finally
> do it.

Yay! Please. Although it won't be exactly the same, since the various 
twisted binaries aren't designed be imported - if you do it please tell 
the list first what changes you are going to do.




From twisted at itamarst.org  Mon Mar 18 15:09:11 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 18 Mar 2002 15:09:11 -0500
Subject: [Twisted-Python] We now have a bug tracker
References: <16n2D4-1cVvO4C@fwd06.sul.t-online.com>
Message-ID: <3C964967.5020603@itamarst.org>

Juergen Hermann wrote:

> Hmmm, wouldn't a binding to RoundUp be more wise?

We tried roundup - at the time it required manually creating user
accounts, thus not allowing public viewing of bugs, so no one ever
used it.

Anyway, this is a way of eating our own dogfood in terms of database
integration and the webwidgets code. The best testing for code is
using it (automated testing is a necessity of course, but it's never
good enough.)




From j.her at t-online.de  Mon Mar 18 15:32:49 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Mon, 18 Mar 2002 21:32:49 +0100
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <3C96488C.8000600@itamarst.org>
Message-ID: <16n3o0-2DBknoC@fwd06.sul.t-online.com>

On Mon, 18 Mar 2002 15:05:32 -0500, Itamar Shtull-Trauring wrote:

>Yay! Please. Although it won't be exactly the same, since the various 
>twisted binaries aren't designed be imported - if you do it please tell 
>the list first what changes you are going to do.

Part of the restructuring is to make them exactly that! And I'll start
with an easy one.
Ciao, J?rgen





From j.her at t-online.de  Mon Mar 18 18:10:18 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Tue, 19 Mar 2002 00:10:18 +0100
Subject: [Twisted-Python] cvs scripts failure
Message-ID: <16n6GR-1SEEyGC@fwd06.sul.t-online.com>

some checkin script fails:

WARNING: Python C API version mismatch for module cBanana:
  This Python has API version 1010, module cBanana has version 1009.
<__main__.MyOptions instance at 0x8209f34>
Traceback (most recent call last):
  File "loginfo.py", line 161, in ?
    config.parseOptions()
  File "/home/jh/lib/python/twisted/python/usage.py", line 119, in
parseOptions
    for long, short in flags:
Directory /cvs/Twisted/twisted/scripts added to the repository
ValueError: unpack tuple of wrong size


time for a version-specific bangpath?
Ciao, J?rgen





From j.her at t-online.de  Mon Mar 18 18:12:28 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Tue, 19 Mar 2002 00:12:28 +0100
Subject: [Twisted-Python] cvs script failure
Message-ID: <16n6IW-1eQiW0C@fwd06.sul.t-online.com>

Hi!

On a second look, this seems to be caused by CVS using my local
settings. Still, shouldn't the CVS scripts take care to use a special,
well-known system path to "their" Twisted?

Ciao, J?rgen





From j.her at t-online.de  Mon Mar 18 18:59:19 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Tue, 19 Mar 2002 00:59:19 +0100
Subject: [Twisted-Python] mktap seems to work
Message-ID: <16n71r-1ECCECC@fwd06.sul.t-online.com>

[...\python22]Scripts\mktap.bat --help web
Usage: mktap web [options]
Options:
      --personal    Instead of generating a webserver, generate a
                    ResourcePublisher which listens on
~/.twistd-web-service
...

Ciao, J?rgen





From j.her at t-online.de  Tue Mar 19 16:29:12 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Tue, 19 Mar 2002 22:29:12 +0100
Subject: [Twisted-Python] New scripts
Message-ID: <16nRA7-1gfJAGC@fwd02.sul.t-online.com>

Hi!

mktap is now fully moved to twisted.scripts. Would be nice if people
moved the commands they use the most, or are related to the part they
developed.

What to do:

 1. Copy the code of the command to twisted/scripts/command.py. Then
first commit it unchanged, so there is a clear history!

 1. Move as much code as possible into a function named run(); try to
avoid top-level code if you can, since that is a problem for doc-tools,
pychecker, etc.

 2. Replace the command in bin/command by its stub, i.e. by the new
preamble + the import/run() combo. Don't skip this step, since
otherwise ppl will start to edit at two places, which leads to chaos!

See bin/mktap and twisted/scripts/mktap.py for an example.


In the long run, especially when all commands are moved, be can remove
the bin directory, since it's created in build/scripts anyway. For now,
it allows smooth transition.

Ciao, J?rgen





From Drew.Whitehouse at anu.edu.au  Tue Mar 19 23:14:09 2002
From: Drew.Whitehouse at anu.edu.au (Drew Whitehouse)
Date: Wed, 20 Mar 2002 15:14:09 +1100
Subject: [Twisted-Python] win32 process problem
Message-ID: <CHEJLPEDBFMBIJDIFHFLAEMPCIAA.Drew.Whitehouse@anu.edu.au>

Hi Itamar,

I'm just getting into twisted, after our IRC chat the other day. Looks
like it does everything I need (plus a lot more !). I'm having some
trouble with Process and win32, i.e. I'm already using bleeding edge
CVS versions ... I'm trying to run a http server which services XMLRPC
calls. The XMLRPC calls then have to launch a process that the server
needs to keep track of, getting notified when the process exits.
Anyhow it seems the new win32 process stuff is giving trouble. It only
allows one XMLRPC call before the server hangs. I'm testing with the
following code.

I realize that this code is brand new, but thought I'd send it along
in case you hadn't seen the problem already.

-Drew

-----------server.py------------------

import sys,os
if sys.platform == 'win32':
    from twisted.internet import win32
    print 'Installing WIN32 version of process handling etc ...'
    win32.install()

from twisted.web import xmlrpc
from twisted.python import defer
import xmlrpclib

class Echoer(xmlrpc.XMLRPC):
    def _getFunction(self, functionPath):
        """Convert the functionPath to a method beginning with
'xmlrpc_'.

        For example, 'echo' returns the method 'xmlrpc_echo'.
        """
        f = getattr(self, "xmlrpc_%s" % functionPath, None)
        if f:
            return f
        else:
            raise xmlrpc.NoSuchFunction
    def xmlrpc_hello(self):
        """Return 'hello, world'."""
        return 'hello, world!'

def main():
    from twisted.internet.app import Application
    from twisted.web import server
    app = Application("xmlrpc")
    r = Echoer()
    app.listenTCP(7080, server.Site(r))
    app.run(0)

if __name__ == '__main__':
    main()

and

-------client.py------------------------
import xmlrpclib
proxy = xmlrpclib.Server("http://localhost:7080/")
r = proxy.hello()
print r



-Drew

;; Drew.Whitehouse at anu.edu.au      Sci-Viz/VR Programmer
;; http://anusf.anu.edu.au/~drw900          ANUSF VIZLAB
;; Australian National University Supercomputer Facility




From twisted at itamarst.org  Wed Mar 20 06:35:05 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Mar 2002 13:35:05 +0200
Subject: [Twisted-Python] win32 process problem
References: <CHEJLPEDBFMBIJDIFHFLAEMPCIAA.Drew.Whitehouse@anu.edu.au>
Message-ID: <3C9873E9.5050703@itamarst.org>

OK, this bug ("can't connect more than one client under win32 event loop") 
is fixed - get the latest twisted/internet/tcp.py from CVS for the fix.





From twisted at itamarst.org  Wed Mar 20 11:19:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Mar 2002 18:19:39 +0200
Subject: [Twisted-Python] Aaargh
Message-ID: <3C98B69B.5000602@itamarst.org>

"""
The Win32 event mechanism (e.g. WaitForMultipleObjects()) can only wait on 
64 event objects at a time.
"""

Same as select(). so we may need to use multiple threads for the win32 event 
loop.




From carmstro at twistedmatrix.com  Fri Mar 22 02:30:57 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 22 Mar 2002 02:30:57 -0500
Subject: [Twisted-Python] Anonymous CVS pserver access
Message-ID: <1016782286.1234.3.camel@radii>

Today I added an "anon" user to the pserver running on zaibach, allowing
anonymous users to check out the CVS Twisted code.

The commands:

cvs -d:pserver:anon at twistedmatrix.com:/cvs login

You can just hit <enter> when you get the password prompt, then:

cvs -d:pserver:anon at twistedmatrix.com:/cvs co Twisted

You should then have the Twisted code in the "Twisted" subdirectory. I
added a "CVS Access" page to the website at
http://twistedmatrix.com/developer/cvs, if anyone wants to write up a
paragraph on accessing the repository through windows, it'd be
appreciated; if not, I'll add it the next time I get around to twiddling
with wincvs. 
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From ivo at amaze.nl  Sun Mar 24 19:09:18 2002
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Mon, 25 Mar 2002 01:09:18 +0100
Subject: [Twisted-Python] MSN client code preview
Message-ID: <20020325010918.U27273@amaze.nl>

Hi all,

I did some heavy refactoring on my python MSN code this weekend. If anyone
is interested in taking a sneak preview at the code (and comment on the
API, etc), feel free to download some code at:

http://ivo.freezope.org/pymsn200203250.tgz 

There's no docs (except for an msn protocol description), but there
are two sample programs included: 'client.py' which is a very simple
gtk/glade interface, and 'msntxttest.py' which basically echoes back
anything that's sent to the client.

The code is at this moment still very incomplete, and still needs loads
of work, but you should be able to login using an existing msn 
handle/password, and send/receive messages.

At this moment, I've only tested with everybuddy at the other end of
the session - it may be that MS's msn client sends more noise that confuses
the clients - I'll test this later.

Patches, remarks, suggestions are welcome.

Cheers,

	Ivo (VladDrac @ OPN)

-- 
Drs. I.R. van der Wijk                              -=-
Brouwersgracht 132                      Amaze Internet Services V.O.F.
1013 HA Amsterdam, NL                               -=-
Tel: +31-20-4688336                       Linux/Web/Zope/SQL/MMBase
Fax: +31-20-4688337                           Network Solutions
Web:     http://www.amaze.nl/                    Consultancy
Email:   ivo at amaze.nl                               -=-



From cpaul at telemetrybox.org  Sun Mar 24 20:52:50 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Sun, 24 Mar 2002 15:52:50 -1000
Subject: [Twisted-Python] Anonymous CVS pserver access
In-Reply-To: <1016782286.1234.3.camel@radii>
References: <1016782286.1234.3.camel@radii>
Message-ID: <20020324155250.B17952@Skaffen.pdchawaii.com>

Excellent!  I will be sure to grab a copy.


On Fri, Mar 22, 2002 at 02:30:57AM -0500, Christopher Armstrong wrote:
> Today I added an "anon" user to the pserver running on zaibach, allowing
> anonymous users to check out the CVS Twisted code.
> 
> The commands:
> 
> cvs -d:pserver:anon at twistedmatrix.com:/cvs login
> 
> You can just hit <enter> when you get the password prompt, then:
> 
> cvs -d:pserver:anon at twistedmatrix.com:/cvs co Twisted
> 
> You should then have the Twisted code in the "Twisted" subdirectory. I
> added a "CVS Access" page to the website at
> http://twistedmatrix.com/developer/cvs, if anyone wants to write up a
> paragraph on accessing the repository through windows, it'd be
> appreciated; if not, I'll add it the next time I get around to twiddling
> with wincvs. 
> -- 
>                                 Chris Armstrong
>                          << radix at twistedmatrix.com >>
>                 http://twistedmatrix.com/users/carmstro.twistd/
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From twisted at itamarst.org  Mon Mar 25 06:46:14 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Mar 2002 13:46:14 +0200
Subject: [Twisted-Python] Coil refactor more or less done
Message-ID: <3C9F0E06.9040800@itamarst.org>

Hi,

Background: COIL is a configuration system for Twisted, allowing you to 
manage and configure your server via the web, developed by glyph. To test it 
out:

$ mktap coil
$ twistd -n -f coil.tap

And point your browser at http://localhost:9080


In CVS, the coil system has been refactored, and now resides in 
twisted.coil. I feel that at this point it is now usable for configuring 
real apps. Real world use will help us find missing requirements and find 
issues and bugs. Examples of how to use it can be found in twisted.coil.plugins.

Things that should really be coiled include cred, to the point that you can 
use coil to administrate users for manhole. t.mail is another candidate, and 
of course any servers based on twisted.

If you are not using CVS Twisted, do not use coil - the interfaces have all 
been changed. You can still play around with it however, since it does work 
in the released code as well.




From andrew-twisted at puzzling.org  Mon Mar 25 19:24:30 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 26 Mar 2002 11:24:30 +1100
Subject: [Twisted-Python] Coil refactor more or less done
In-Reply-To: <3C9F0E06.9040800@itamarst.org>
References: <3C9F0E06.9040800@itamarst.org>
Message-ID: <20020326002430.GA883@ritsuko.xware.cx>

On Mon, Mar 25, 2002 at 01:46:14PM +0200, Itamar Shtull-Trauring wrote:
> Hi,
> 
> Background: COIL is a configuration system for Twisted, allowing you to 
> manage and configure your server via the web, developed by glyph. To test 
> it out:
> 
> $ mktap coil
> $ twistd -n -f coil.tap
> 
> And point your browser at http://localhost:9080

That's so cool! :)

This is going to be great.  I hadn't looked at coil before (I didn't 
understand how to use it), but it's going to be really, really handy.

A few small glitches I've found mucking about with it:
  1) You can't delete a manhole service once you create one.
  2) If you create and configure an FTP server, connect to it, and then delete
     it, you can still use the server from the existing connection.  I expect
     that this might be hard to fix, and may even be desirable in most cases
     anyway.
  3) There's no warning if you try to delete or replace the thing on port 9080
     with something else, causing you to think you've broken the configurator
     until you realise you've been an idiot :)

-Andrew.




From glyph at twistedmatrix.com  Mon Mar 25 22:55:01 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 25 Mar 2002 21:55:01 -0600
Subject: [Twisted-Python] Coil refactor more or less done
In-Reply-To: <20020326002430.GA883@ritsuko.xware.cx>
References: <3C9F0E06.9040800@itamarst.org> <20020326002430.GA883@ritsuko.xware.cx>
Message-ID: <20020326035501.GA12101@twistedmatrix.com>

On Tue, Mar 26, 2002 at 11:24:30AM +1100, Andrew Bennetts wrote:

> On Mon, Mar 25, 2002 at 01:46:14PM +0200, Itamar Shtull-Trauring wrote:
> > $ twistd -n -f coil.tap

> That's so cool! :)

Hey, andrew --

Thanks for trying this out and giving feedback!  Coil does have a lot of
potential, but we need to test it out against a large set of real-world
requirements :)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From andrew-twisted at puzzling.org  Mon Mar 25 23:13:54 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 26 Mar 2002 15:13:54 +1100
Subject: [Twisted-Python] Coil refactor more or less done
In-Reply-To: <20020326035501.GA12101@twistedmatrix.com>
References: <3C9F0E06.9040800@itamarst.org> <20020326002430.GA883@ritsuko.xware.cx> <20020326035501.GA12101@twistedmatrix.com>
Message-ID: <20020326041354.GA3736@ritsuko.xware.cx>

On Mon, Mar 25, 2002 at 09:55:01PM -0600, Glyph Lefkowitz wrote:
> Hey, andrew --
> 
> Thanks for trying this out and giving feedback!  Coil does have a lot of
> potential, but we need to test it out against a large set of real-world
> requirements :)

Of course :)

I'm thinking I can find some good uses for it at work.  It is currently 
geared towards configuration (and that's something I've got alot of use for),
but what I think I have the most immediate use for is status reporting -- 
statistics like "served n requests", "been running since", "last packet from
upstream data feed arrived at ... and had a timestamp of ...".

The sort of configuration I'd want to do is basically what you appear to 
already have -- start component X listening on port 1234, and connect it to 
upstream server Y on 9876.  I possibly also want to save configuration to 
the registry rather than to taps, but I think taps are a better idea.

Say, is there anyway to do "offline" editing of the configuration held in a 
tap?

-Andrew.




From twisted at itamarst.org  Tue Mar 26 03:54:30 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 26 Mar 2002 10:54:30 +0200
Subject: [Twisted-Python] Coil refactor more or less done
References: <3C9F0E06.9040800@itamarst.org> <20020326002430.GA883@ritsuko.xware.cx> <20020326035501.GA12101@twistedmatrix.com> <20020326041354.GA3736@ritsuko.xware.cx>
Message-ID: <3CA03746.30204@itamarst.org>

Andrew Bennetts wrote:

 > Say, is there anyway to do "offline" editing of the configuration held
 > in a tap?

Glyph was discussing this. It could be done very easily, basically by not
activating Ports. At some point we'll probably set something where you use 
coil to edit an Application isntance that is *different* from the one that 
is running, so that coil doesn't show up in the ports list.




From twisted at itamarst.org  Tue Mar 26 03:56:44 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 26 Mar 2002 10:56:44 +0200
Subject: [Twisted-Python] Coil refactor more or less done
References: <3C9F0E06.9040800@itamarst.org> <20020326002430.GA883@ritsuko.xware.cx>
Message-ID: <3CA037CC.8090907@itamarst.org>

Andrew Bennetts wrote:

> A few small glitches I've found mucking about with it:
>   1) You can't delete a manhole service once you create one.

I'll check this out - I think it should be easy to fix, just write an extra 
method in the services collection.

>   2) If you create and configure an FTP server, connect to it, and then delete
>      it, you can still use the server from the existing connection.  I expect
>      that this might be hard to fix, and may even be desirable in most cases
>      anyway.

I'll see if I can figure this out.

>   3) There's no warning if you try to delete or replace the thing on port 9080
>      with something else, causing you to think you've broken the configurator
>      until you realise you've been an idiot :)

See my other email.




From torresj at apb.es  Wed Mar 27 04:11:54 2002
From: torresj at apb.es (Joan Torres)
Date: Wed, 27 Mar 2002 10:11:54 +0100 (MET)
Subject: [Twisted-Python] New Member
Message-ID: <200203270911.KAA29726@osona.apb.es>

Hi,
 My name is Joan Torres, I'm working in Port of Barcelona (spain), and 
 I'm interested in learning more about how to use Twisted.

 I've two Python applications running on a Unix platform, both applications 
 return a file as a result, and I want to write a server for them.
 The server should do the following things:
  - Execute Application1 every 10 minutes 
  - Run Aplication1 on demand.
  - Keep the last file returned by application 1
  - Execute Aplication2 on demand.
  
 There would be three different types of clients (windows platform):
 * Client type 1: get the latest file returned by applition1
 * Client type 2: run application1  and get the returned file
 * Client type 3: run application2 and get the returned file

 The estimated amount of connections at a time could be:
  -clients type 1: 100
  -clients type 2: 2-3
  -clients type 3: 2-3
 
Could anyone give me some light on it?



From twisted at itamarst.org  Wed Mar 27 10:17:52 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 27 Mar 2002 17:17:52 +0200
Subject: [Twisted-Python] Coil command-line app
Message-ID: <3CA1E2A0.2020601@itamarst.org>

Hi all,

I will soon be writing a coil command line app. It will let you edit an 
exisiting .tap. Ports it creates will not be activated, and its own 
webserver  won't show up in the config interface since it will be 
configuring a different Application insatnce. This will very likely 
replace "mktap coil" for most uses.

It'll working something like this:

$ coil exisiting.tap  (config an existing tap)

$ coil -n "email-server" email.tap (create a new application instance 
and store it in tap)

Any suggestions for possible functionality?





From twisted at itamarst.org  Fri Mar 29 05:24:07 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 29 Mar 2002 13:24:07 +0300
Subject: [Twisted-Python] We now have a coil command-line app in CVS
Message-ID: <3CA440C7.5020501@itamarst.org>

Now you can configure your TAP files through the web!

Usage:

   coil [--new=<application name>] <tap file>

Options:
   -n, --new=
   -p, --port=  [default: 9080]


For example, to configure a TAP generated by mktap:
$ mktap web
$ coil web.tap

(now point browser at http://localhost:9080)


Or to create a new TAP:
$ coil --new=myapp new.tap

(now point browser at http://localhost:9080)




From twisted at itamarst.org  Fri Mar 29 05:45:32 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 29 Mar 2002 13:45:32 +0300
Subject: [Twisted-Python] More coil TODOs
Message-ID: <3CA445CC.8070804@itamarst.org>

== Make ports visible ==
Currently, tcp/udp/ssl are treated as collections of protocol factories. I 
am going to change this to collections of Ports, so that you can configure 
interfaces to listen on, context factories for SSL, etc. The protocol 
factory will just be another attribute.

This should have no effect on people who are coiling their apps.


== Make old TAPs work ==
The refactor broke old taps - they can no longer be loaded since they refer 
to non-existence classes in twisted.internet.app.

This can probably be easily solved (make a dummy PortsCollection class and 
delete the attributes of the loaded application that refer to it.)




From glyph at twistedmatrix.com  Sat Mar 30 03:03:34 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 30 Mar 2002 02:03:34 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] Better collection support for coil.
In-Reply-To: <E16pSk9-0007RK-00@zaibach.twistedmatrix.com>
References: <E16pSk9-0007RK-00@zaibach.twistedmatrix.com>
Message-ID: <1017127196.659.29.camel@janus>

On Mon, 2002-03-25 at 05:34, itamarst CVS wrote:

> If a configurable class is not collection, coil's web interface will
> check if the Configurator class is a collection, allowing us to have
> Configurators that act as collections.

> A remaining issue is twisted.web.vhost, and other similar cases, where
> both the Configurator and the configurable class should really be
> collections.

IMHO, the way this should work is: check the Configurator first.  It is
the authority on collection-hood, as it were. :-).  If the
*configurator* is not a collection, then check the configurable; this
strikes me as a less likely case... in fact, it seems weird to
introspect on the configurable at all at this point, since it isn't the
configuration component.

Does that make sense?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020330/57a413bd/attachment.pgp 

From glyph at twistedmatrix.com  Sat Mar 30 03:03:33 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 30 Mar 2002 02:03:33 -0600
Subject: [Twisted-Python] Coil refactor more or less done
In-Reply-To: <20020326041354.GA3736@ritsuko.xware.cx>
References: <3C9F0E06.9040800@itamarst.org>
	<20020326002430.GA883@ritsuko.xware.cx>
	<20020326035501.GA12101@twistedmatrix.com> 
	<20020326041354.GA3736@ritsuko.xware.cx>
Message-ID: <1017126742.659.23.camel@janus>

On Mon, 2002-03-25 at 22:13, Andrew Bennetts wrote:
> On Mon, Mar 25, 2002 at 09:55:01PM -0600, Glyph Lefkowitz wrote:
> > Thanks for trying this out and giving feedback!

> I'm thinking I can find some good uses for it at work.  It is currently 
> geared towards configuration (and that's something I've got alot of use for),
> but what I think I have the most immediate use for is status reporting -- 
> statistics like "served n requests", "been running since", "last packet from
> upstream data feed arrived at ... and had a timestamp of ...".

It originally seemed to me that data-display would be a different
component. (Remember Sean's twisted.metrics, anyone?)  I guess you're
right that it would be handy to display it in the same web interface,
though... hmm...

> The sort of configuration I'd want to do is basically what you appear to 
> already have -- start component X listening on port 1234, and connect it to 
> upstream server Y on 9876.  I possibly also want to save configuration to 
> the registry rather than to taps, but I think taps are a better idea.

You can introspect on the objects to save them to wherever :-).  I'm
sure that the registry can be contorted in order to save "arbitrary"
Python objects.

> Say, is there anyway to do "offline" editing of the configuration held in a 
> tap?

Well, the existing coil code can edit "offline" as well as "online"
configurations; it just takes an Application object and mutates it. 
Adding some buttons to the interface to save / load the app to a
particular file should be trivial.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020330/4df371bb/attachment.pgp 

From glyph at twistedmatrix.com  Sat Mar 30 03:03:31 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 30 Mar 2002 02:03:31 -0600
Subject: [Twisted-Python] MSN client code preview
In-Reply-To: <20020325010918.U27273@amaze.nl>
References: <20020325010918.U27273@amaze.nl>
Message-ID: <1017125910.370.9.camel@janus>

Hi ivo:

I'd like to create a mechanism for making plugins (registered in
plugins.tml) for twisted.im... it seems like wasted effort to develop an
MSN-specific client, when we're working on a "universal messaging"
client ourselves to demo Twisted's capabilities.

I realize that the IM code is not exactly "mature" at this point :-) but
it does have some design ideas that I'd really like others to adopt;
such as making a standard, pluggable interface for loading PB clients,
similar to the way that mktap and coil load PB services.

On Sun, 2002-03-24 at 18:09, Ivo van der Wijk wrote:
> Hi all,
> 
> I did some heavy refactoring on my python MSN code this weekend. If anyone
> is interested in taking a sneak preview at the code (and comment on the
> API, etc), feel free to download some code at:
> 
> http://ivo.freezope.org/pymsn200203250.tgz 
> 
> There's no docs (except for an msn protocol description), but there
> are two sample programs included: 'client.py' which is a very simple
> gtk/glade interface, and 'msntxttest.py' which basically echoes back
> anything that's sent to the client.
> 
> The code is at this moment still very incomplete, and still needs loads
> of work, but you should be able to login using an existing msn 
> handle/password, and send/receive messages.
> 
> At this moment, I've only tested with everybuddy at the other end of
> the session - it may be that MS's msn client sends more noise that confuses
> the clients - I'll test this later.
> 
> Patches, remarks, suggestions are welcome.
> 
> Cheers,
> 
> 	Ivo (VladDrac @ OPN)
> 
> -- 
> Drs. I.R. van der Wijk                              -=-
> Brouwersgracht 132                      Amaze Internet Services V.O.F.
> 1013 HA Amsterdam, NL                               -=-
> Tel: +31-20-4688336                       Linux/Web/Zope/SQL/MMBase
> Fax: +31-20-4688337                           Network Solutions
> Web:     http://www.amaze.nl/                    Consultancy
> Email:   ivo at amaze.nl                               -=-
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020330/df115036/attachment.pgp 

From twisted at itamarst.org  Sat Mar 30 04:38:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 30 Mar 2002 11:38:25 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] Better collection support
 for coil.
References: <E16pSk9-0007RK-00@zaibach.twistedmatrix.com> <1017127196.659.29.camel@janus>
Message-ID: <3CA58791.4040104@itamarst.org>

Glyph Lefkowitz wrote:

> IMHO, the way this should work is: check the Configurator first.  It is
> the authority on collection-hood, as it were. :-).  If the
> *configurator* is not a collection, then check the configurable; this
> strikes me as a less likely case... in fact, it seems weird to
> introspect on the configurable at all at this point, since it isn't the
> configuration component.

Yes. Of course, for VHost the Configurator is not a colletion yet, it
possibly, maybe, *should* be a collection. And my latest checkin might've
fixed it. Anyone care to try?





From twisted at itamarst.org  Sat Mar 30 04:40:31 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 30 Mar 2002 11:40:31 +0200
Subject: [Twisted-Python] Coil refactor more or less done
References: <3C9F0E06.9040800@itamarst.org>	<20020326002430.GA883@ritsuko.xware.cx>	<20020326035501.GA12101@twistedmatrix.com> 	<20020326041354.GA3736@ritsuko.xware.cx> <1017126742.659.23.camel@janus>
Message-ID: <3CA5880F.1010801@itamarst.org>

Glyph Lefkowitz wrote:

> Well, the existing coil code can edit "offline" as well as "online"
> configurations; it just takes an Application object and mutates it. 
> Adding some buttons to the interface to save / load the app to a
> particular file should be trivial.

The coil command-line app (bin/coil in CVS) works in "offline" mode.
I do not want buttons for saving and loading - specifying the file
on the command line is more secure, and lets me e.g. setup a coil
on a website so I can give people URLs for demo purposes. And I see
no reason why coil should be continiusly running if it's not
configuring the same Application.




From ivo at amaze.nl  Sat Mar 30 06:02:59 2002
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Sat, 30 Mar 2002 12:02:59 +0100
Subject: [Twisted-Python] MSN client code preview
In-Reply-To: <1017125910.370.9.camel@janus>; from glyph@twistedmatrix.com on Sat, Mar 30, 2002 at 02:03:31AM -0600
References: <20020325010918.U27273@amaze.nl> <1017125910.370.9.camel@janus>
Message-ID: <20020330120258.M26346@amaze.nl>

On Sat, Mar 30, 2002 at 02:03:31AM -0600, Glyph Lefkowitz wrote:
> Hi ivo:
> 
> I'd like to create a mechanism for making plugins (registered in
> plugins.tml) for twisted.im... it seems like wasted effort to develop an
> MSN-specific client, when we're working on a "universal messaging"
> client ourselves to demo Twisted's capabilities.
> 
> I realize that the IM code is not exactly "mature" at this point :-) but
> it does have some design ideas that I'd really like others to adopt;
> such as making a standard, pluggable interface for loading PB clients,
> similar to the way that mktap and coil load PB services.
> 

I'd be definately interested in those ideas - I'm trying to write my code
in a generic way, but due to the nature of MSN, I can't put everything in
a single layer (there are multiple connections involved, that are created
on the fly, etc, and the main connection may change as well)

Do you have any docs on this? 

Cheers,

	Ivo

-- 
Drs. I.R. van der Wijk                              -=-
Brouwersgracht 132                      Amaze Internet Services V.O.F.
1013 HA Amsterdam, NL                               -=-
Tel: +31-20-4688336                       Linux/Web/Zope/SQL/MMBase
Fax: +31-20-4688337                           Network Solutions
Web:     http://www.amaze.nl/                    Consultancy
Email:   ivo at amaze.nl                               -=-



From carmstro at twistedmatrix.com  Sat Mar 30 08:20:35 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 30 Mar 2002 08:20:35 -0500
Subject: [Twisted-Python] Coil refactor more or less done
In-Reply-To: <3CA5880F.1010801@itamarst.org>
References: 
	<3C9F0E06.9040800@itamarst.org>	<20020326002430.GA883@ritsuko.xware.cx>	<200
	 20326035501.GA12101@twistedmatrix.com>
	<20020326041354.GA3736@ritsuko.xware.cx> <1017126742.659.23.camel@janus> 
	<3CA5880F.1010801@itamarst.org>
Message-ID: <1017494436.2494.1.camel@radii>

On Sat, 2002-03-30 at 04:40, Itamar Shtull-Trauring wrote:
> Glyph Lefkowitz wrote:
> 
> > Well, the existing coil code can edit "offline" as well as "online"
> > configurations; it just takes an Application object and mutates it. 
> > Adding some buttons to the interface to save / load the app to a
> > particular file should be trivial.
> 
> The coil command-line app (bin/coil in CVS) works in "offline" mode.
> I do not want buttons for saving and loading - specifying the file
> on the command line is more secure, and lets me e.g. setup a coil
> on a website so I can give people URLs for demo purposes. And I see
> no reason why coil should be continiusly running if it's not
> configuring the same Application.

I still think that there should be an option for saving/loading
Applications. Personally, I *would* like to have a continuously-running
COIL server on my machine. It could be an option to 'mktap coil'.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Sun Mar 31 04:36:22 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 31 Mar 2002 12:36:22 +0300
Subject: [Twisted-Python] Twisted bug -- bad interaction with popen
Message-ID: <3CA6D896.4070309@itamarst.org>

This bug needs an answer from someone with unix expertise:

<http://www.twistedmatrix.com/users/itamarst.twistd/bugs/view_bug?bug_id=8>

I suggest getting rid of SIGCHLD handler, and having t.i.process.Process 
instances keep track of the pid of their process, and pass it to reapProcess 
so it only waitpid()s on a specific pid, and not all of them.

I will add a test case which will test for this bug.





From twisted at itamarst.org  Sun Mar 31 05:04:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 31 Mar 2002 13:04:25 +0300
Subject: [Twisted-Python] Twisted bug -- bad interaction with popen
References: <3CA6D896.4070309@itamarst.org>
Message-ID: <3CA6DF29.3050803@itamarst.org>

Itamar Shtull-Trauring wrote:

 > I will add a test case which will test for this bug.

OK, I changed the process tests - they will now fail (not always, but
sometimes) because of the SIGCHLD issue.




From twisted at itamarst.org  Sun Mar 31 05:48:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 31 Mar 2002 13:48:39 +0300
Subject: [Twisted-Python] CVS broken?
Message-ID: <3CA6E987.4060402@itamarst.org>

Each time I checkin a file, the CVS process then gets stuck (if I check-in 
two files it gets stuck after the first). I'm not sure why -- perhaps this 
is relevant (as pointed out by Tv):

http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=102292

Or perhaps it's some other issue.




From cpaul at telemetrybox.org  Sun Mar  3 01:13:40 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Sat, 2 Mar 2002 22:13:40 -1000
Subject: [Twisted-Python] Aloha, New Member
In-Reply-To: <1014880806.7425.74.camel@zelda>
References: <20020226215828.A8361@Skaffen.pdchawaii.com> <1014880806.7425.74.camel@zelda>
Message-ID: <20020302221340.A14794@Skaffen.pdchawaii.com>

Great to hear that there will be more documentation in the future -- once I wrap my head around the framework, I will probably contribute to the effort.

As far as what I hope to build with Twisted, I have several things in mind.  

One of the projects I am working on is a webmail service with GnuPG functionality.  As a part of this, I built an xml-rpc wrapper for the GnuPGInterface module.  During the process I realized that xml-rpc was the wrong solution to my problem, there were too many hacks in the code for preserving sessions among other things.  Maybe twisted could help me on this part.  Aside from the backengine, I was thinking of working around the other members of the project and building the web/mail frontend from the ground-up in Python (as opposed to using a PHP webmail client...) -- Twisted might come in handy here too.

Another project still in the drafting phase is a Free implementation of the Craigslist.org bulletin board system.  This would involve creating an application: To serve CGI and process form inputs.  Create static HTML pages for every post.  Compile indexes of the posts at regular intervals.  And, with a mail server, forward the postXXX@ email to the proper recipients.  I was planning on using straight python, mysql and postfix -- again, Twisted might come in handy.

The final project is for $$$, and as of yet I am still hazy on the details.  Basically, I want to create a systems administration interface which would be capable of manipulating many machines at once.  I don't know if Twisted will come in handy.


Thanks for the welcome to the list, and I will keep you all posted with my progress (*cough*problems*cough*).

Take care,
Charles
 



On Thu, Feb 28, 2002 at 01:20:06AM -0600, Glyph Lefkowitz wrote:
> Excellent!  Great to hear it, Charles.
> 
> I'm currently in the process of writing documentation and smoothing the
> learning curve for new users of the framework, but I've got a lot to do
> (and I'm swamped with more mundane things at work right now (and I'll be
> heading out of town (back on monday (do you like parenthetic
> expressions?  (I sure do. (yay for lisp)))))).
> 
> So unfortunately our documentation is far from complete.  Can you give
> some clues as to what you want to use Twisted for?  I'll try to answer
> any questions you might have; in the meanwhile, poke around the
> "Documentation" section on http://twistedmatrix.com/.
> 
> On Wed, 2002-02-27 at 01:58, cpaul at telemetrybox.org wrote:
> > Aloha,
> > 
> > My name is Charles Paul, and I am interested in learning more about how to use Twisted. 
> > 
> > Aloha,
> > Charles
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> -- 
> "Cannot stand to be one of many -- I'm not what they are."
>         -Guster, "Rocketship"
>                 glyph lefkowitz; ninjaneer, freelance demiurge
>     glyph @ [ninjaneering|twistedmatrix].com





From carmstro at twistedmatrix.com  Sun Mar  3 02:36:24 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 03 Mar 2002 04:36:24 -0500
Subject: [Twisted-Python] Aloha, New Member
In-Reply-To: <20020302221340.A14794@Skaffen.pdchawaii.com>
References: <20020226215828.A8361@Skaffen.pdchawaii.com>
	<1014880806.7425.74.camel@zelda> 
	<20020302221340.A14794@Skaffen.pdchawaii.com>
Message-ID: <1015148185.1078.8.camel@radii>

On Sun, 2002-03-03 at 03:13, cpaul at telemetrybox.org wrote:
> One of the projects I am working on is a webmail service with GnuPG 
> functionality.  As a part of this, I built an xml-rpc wrapper for the 
> GnuPGInterface module.  During the process I realized that xml-rpc was
> the wrong solution to my problem, there were too many hacks in the 
> code for preserving sessions among other things.  Maybe twisted could 
> help me on this part.  Aside from the backengine, I was thinking of 
> working around the other members of the project and building the 
> web/mail frontend from the ground-up in Python (as opposed to using a 
> PHP webmail client...) -- Twisted might come in handy here too.

>From what you've said, it seems like Twisted would work well indeed. You
could use Perspective Broker for your remote-object protocol, to replace
XML-RPC, and Twisted Web's Widgets for your web interface. If you need
any help with these, I can probably assist, as well as many others.

> Another project still in the drafting phase is a Free implementation of the
> Craigslist.org bulletin board system.  This would involve creating an
> application: To serve CGI and process form inputs.  Create static HTML

Hmmm.. Is there a particular reason you need CGI? If you don't need it
to work on multiple web servers, i'd just go with Twisted Web's Widgets,
again. It's a really nice API for developing web applications.

> pages for every post.  Compile indexes of the posts at regular
> intervals.  And, with a mail server, forward the postXXX@ email to the
> proper recipients.  I was planning on using straight python, mysql and
> postfix -- again, Twisted might come in handy.

Yup. Twisted's mail support is finally getting there, and we do
integrate with RDBMs with twisted.enterprise.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Sat Mar  2 16:42:09 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 02 Mar 2002 18:42:09 -0500
Subject: [Twisted-Python] Psyco is our friend
Message-ID: <3C816351.5060802@itamarst.org>

Psyco == http://sf.net/projects/psyco/

So, I ran a Banana benchmark, attached. The results:

     Psyco on
     1.8585100174 seconds (5380.65434483 messages a second)

Now I edit the file and turn off psyco:

     Psyco off
     4.81016397476 seconds (2078.93120743 messages a second)

Nice, eh?
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: bananatest.py
URL: </pipermail/twisted-python/attachments/20020302/df5e2176/attachment.ksh>

From twisted at itamarst.org  Sat Mar  2 22:41:13 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 03 Mar 2002 00:41:13 -0500
Subject: [Twisted-Python] A new testing strategy for protocols
Message-ID: <3C81B779.5090801@itamarst.org>

A long time issue we've had is how to test protocols under "real" 
circumstances. For DNS testing, I decided to do just that - see the code 
in twisted/test/test_names.py.

Basically, I start a server listening using UDP, and have a client 
connect to it, all within the testing code and automatically. It works 
pretty well, after a bit of debugging. Data is pushed by calling 
main.iterate().

Now, in a lot of cases twisted.protocols.loopback may be good enough, 
but this approach is really necessary for thorough testing in certain 
cases. FTP leaps to mind, but also if we want automated testing of TOC 
or OSCAR clients against real servers.

One drawback at least is that these tests will fail miserably on Jython 
(main.iterate on Jython doesn't push data), so I'm probably going to add 
code that makes sure they don't run at all on Jython.

Another drawback is the related issue that I'm also testing DNS queries 
against real servers - this assumes a working net connection.




From andrew-twisted at puzzling.org  Sun Mar  3 23:11:22 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 4 Mar 2002 17:11:22 +1100
Subject: [Twisted-Python] Win32 events main loop
Message-ID: <20020304061122.GA461@frobozz.local>

Hi all,

Here is the first *rough* cut of the Twisted main loop using Win32 events,
based upon internet.poll.

It seems to be okay for simpleserv.py, but I haven't tested it for anything
else.  I'll leave that to a day when I'm not feeling so ill...  I pretty
much guarantee it is mostly broken -- think of it as a proof of concept.

I think if I experiment with MsgWaitForMultipleObjects instead of
WaitForMultipleObjects, I can make it respond to Win32 window messages
properly; e.g. Ctrl-C and stopping when running as a service might work
nicely -- COM stuff would probably benefit too.

Enjoy!

-Andrew.

--- win32.py ---

# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General Public
# License as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

"""A win32event based implementation of the twisted main loop.

To install the event loop (and you should do this before any connections,
listeners or connectors are added):

    from twisted.internet import win32
    win32.install()

"""

# Win32 imports
from win32file import WSAEventSelect, FD_READ, FD_WRITE, FD_CLOSE, \
                      FD_ACCEPT, FD_CONNECT
from win32event import CreateEvent, WaitForMultipleObjects, \
                       WAIT_OBJECT_0, WAIT_TIMEOUT, INFINITE

# Twisted imports
from twisted.python import log, threadable
import main

# globals
reads = {}
writes = {}
events = {}

def _addEvent(fd, why, events=events):
    print '_addEvent:', fd, why
    event = CreateEvent(None, 0, 0, None)
    WSAEventSelect(fd, event, why)
    events[event] = (fd, why)
    return event

def addReader(reader, reads=reads):
    """Add a FileDescriptor for notification of data available to read.
    """
    print 'addReader:', reader
    if not reads.has_key(reader):
        reads[reader] = _addEvent(reader, FD_READ|FD_ACCEPT|FD_CONNECT)
        
def addWriter(writer, writes=writes):
    """Add a FileDescriptor for notification of data available to write.
    """
    print 'addWriter:', writer
    if not writes.has_key(writer):
        writes[writer] =_addEvent(writer, FD_WRITE)

def removeReader(reader):
    """Remove a Selectable for notification of data available to read.
    """
    if reads.has_key(reader):
        del events[reads[reader]]
        del reads[reader]

def removeWriter(writer, writes=writes):
    """Remove a Selectable for notification of data available to write.
    """
    if writes.has_key(writer):
        del events[writes[writer]]
        del writes[writer]

def removeAll():
    """Remove all selectables, and return a list of them."""
    result = reads.keys() + writes.keys()
    reads.clear()
    writes.clear()
    events.clear()
    return result

def doWaitForMultipleEvents(timeout,
                            reads=reads,
                            writes=writes):
    if timeout is None:
        #timeout = INFINITE
        timeout = 5000
    else:
        timeout = timeout * 1000
    print 'timeout is:', timeout
    
    handles = events.keys()
    val = WaitForMultipleObjects(handles, 0, timeout)
    print 'WaitForMultipleObjects returned:', val
    if val == WAIT_TIMEOUT:
        return
    elif val >= WAIT_OBJECT_0 and val < WAIT_OBJECT_0 + len(handles):
        print 'Here'
        fd, why = events[handles[val - WAIT_OBJECT_0]]
        print fd, why
        log.logOwner.own(fd)
        try:
            if why & FD_READ|FD_ACCEPT|FD_CONNECT:
                fd.doRead()
            elif why == FD_WRITE:
                fd.doWrite()
        except:
            log.deferr()
            why = FD_CLOSE

        if why == FD_CLOSE:
            removeReader(fd)
            removeWriter(fd)
            try:
                fd.connectionLost()
            except:
                log.deferr()

        log.logOwner.disown(fd)

def install():
    """Install the poll()-based event loop."""
    main.addReader = addReader
    main.addWriter = addWriter
    main.removeReader = removeReader
    main.removeWriter = removeWriter
    #main.doSelect = doPoll
    main.doSelect = doWaitForMultipleEvents
    main.removeAll = removeAll


def initThreads():
    """Do initialization for threads."""
    if main.wakerInstalled:
        # make sure waker is registered with us
        removeReader(main.waker)
        addReader(main.waker)

threadable.whenThreaded(initThreads)

__all__ = ["install"]



From kelly at dolphinsearch.com  Mon Mar  4 09:29:58 2002
From: kelly at dolphinsearch.com (Kelly Roestel)
Date: Mon, 4 Mar 2002 08:29:58 -0800 (PST)
Subject: [Twisted-Python] twistedmatrix client
Message-ID: <Pine.LNX.4.33.0203040826090.23385-100000@localhost.localdomain>

I am new to python and twistedmatrix, so any help would be great.  I have 
been able to write a server and connect to it via python sockets.  But I 
would like to figure out how to create a twisted client.  But, I have 
found no docs on creating clients.  Is there some place that I can look 
for docs, or can some one help me with client setup.  What I am passing to 
the client from the server is a simple list with four items.  Thanks for 
the help

-- 
Kelly Roestel
Network Admin
DolphinSearch, Inc




From twisted at itamarst.org  Sun Mar  3 16:30:14 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 03 Mar 2002 18:30:14 -0500
Subject: [Twisted-Python] twistedmatrix client
References: <Pine.LNX.4.33.0203040826090.23385-100000@localhost.localdomain>
Message-ID: <3C82B206.8040301@itamarst.org>

Kelly Roestel wrote:
> I am new to python and twistedmatrix, so any help would be great.  I have 
> been able to write a server and connect to it via python sockets.  But I 
> would like to figure out how to create a twisted client.  But, I have 
> found no docs on creating clients.  Is there some place that I can look 
> for docs, or can some one help me with client setup.  What I am passing to 
> the client from the server is a simple list with four items.  Thanks for 
> the help


# here's an example of a client that connects to "foobar.com"
# on port 8023

from twisted.protocols import protocol
from twisted.internet import main, tcp

class MyProtocol(protocol.Protocol):

     def connectionMade(self):
         self.transport.write("hello")

     def dataReceived(self, data):
         print "server sent me data, yay!", data


p = MyProtocol()
tcp.Client("foobar.com", 8023, p)

# start the event loop
main.run()




From twisted at itamarst.org  Sun Mar  3 16:37:30 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 03 Mar 2002 18:37:30 -0500
Subject: [Twisted-Python] Win32 events main loop
References: <20020304061122.GA461@frobozz.local>
Message-ID: <3C82B3BA.9020809@itamarst.org>

Andrew Bennetts wrote:

> Here is the first *rough* cut of the Twisted main loop using Win32 events,
> based upon internet.poll.

Cool! I'll test it a bit and then check it in, and maybe we should talk 
to glyph about giving you CVS write access :)

The next stage, one it's stable and more or less bug free, is probably 
making it more generic, so you can use it with things that aren't 
sockets (e.g. stdin/stdout, pipes, files, etc.) Also integration with 
the win32 GUI event loop win32all exposes, which I think uses the same 
subsystem.





From andrew-twisted at puzzling.org  Mon Mar  4 17:47:42 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 5 Mar 2002 11:47:42 +1100
Subject: [Twisted-Python] Win32 events main loop
In-Reply-To: <3C82B3BA.9020809@itamarst.org>
References: <20020304061122.GA461@frobozz.local> <3C82B3BA.9020809@itamarst.org>
Message-ID: <20020305004742.GA28702@ritsuko.xware.cx>

On Sun, Mar 03, 2002 at 06:37:30PM -0500, Itamar Shtull-Trauring wrote:
> The next stage, one it's stable and more or less bug free, is probably 
> making it more generic, so you can use it with things that aren't 
> sockets (e.g. stdin/stdout, pipes, files, etc.) Also integration with 

Yeah.  I'm not certain about how to do that, but it should be feasible.

> the win32 GUI event loop win32all exposes, which I think uses the same 
> subsystem.

Yeah; that means using MsgWaitForMultipleObjects instead of
WaitForMultipleObjects, basically (and checking for an extra possible return
value...).  I believe more than strictly GUI stuff will require this, in
fact -- I suspect COM will not function properly in a thread that is blocked
in WaitForMultipleObjects, from what I have read.

-Andrew.




From cpaul at telemetrybox.org  Tue Mar  5 00:29:57 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Mon, 4 Mar 2002 21:29:57 -1000
Subject: [Twisted-Python] Mime Types ins static.File
Message-ID: <20020304212957.A2739@Skaffen.pdchawaii.com>

Aloha,

Today I shut down Apache on my workstation and started using twisted.web on port 80 - everything is sailing smooth, I even have a startup script in rc.d.  The only issue I am running into so far has to do with mime types. 

In static, mime types are defined by the dictionary File.contentTypes - Is there an elegant way to dynamically set the mime types at mktap time?  Or would it be better to hack static.py to use Python's mimetypes module along with a common mime.types file? 

I am currently using: 

	contentTypes = mimetypes.read_mime_types('/usr/pkg/etc/httpd/mime.types') 

for my default mime types dictionary (this mime.types is from Apache).  This is obviously not a cross-platform solution.  By default, a NetBSD machine does not come with a mime.types database, instead it has to be installed with Apache or Netscape.  

Would it make sense for Twisted to come with it's own mime.types file? 


Thanks,
Charles



From cpaul at telemetrybox.org  Tue Mar  5 19:22:16 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Tue, 5 Mar 2002 16:22:16 -1000
Subject: [Twisted-Python] Web Widgets Examples
Message-ID: <20020305162216.A3742@Skaffen.pdchawaii.com>

I was wondering if anybody on this list has an example of using Web Widgets to render an HTML page?

Aloha,
Charles



From z3p at twistedmatrix.com  Tue Mar  5 19:47:45 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Tue, 5 Mar 2002 21:47:45 -0500
Subject: [Twisted-Python] Web Widgets Examples
In-Reply-To: <20020305162216.A3742@Skaffen.pdchawaii.com>
Message-ID: <3C853D01.27906.18BA508@localhost>

Yes, my homepage uses Web Widgets to render.  The link for the page is 
below, and the link for the code is on that page.  Hope that helps. :)
On 5 Mar 2002 at 16:22, cpaul at telemetrybox.org wrote:

> I was wondering if anybody on this list has an example of using Web Widgets to render an HTML page?

-p
--
       Paul Swartz
(o_    http://www.twistedmatrix.com/users/z3p.twistd/  _o)
//\    z3p at twistedmatrix.com                           /\\
V_/_   AIM: z3penguin                                 _\_V->





From cpaul at telemetrybox.org  Tue Mar  5 20:18:12 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Tue, 5 Mar 2002 17:18:12 -1000
Subject: [Twisted-Python] Web Widgets Examples
In-Reply-To: <3C853D01.27906.18BA508@localhost>
References: <20020305162216.A3742@Skaffen.pdchawaii.com> <3C853D01.27906.18BA508@localhost>
Message-ID: <20020305171812.B3742@Skaffen.pdchawaii.com>

Thanks!  I think I have my head wrapped around WebWidgets now.

Aloha,
Charles


On Tue, Mar 05, 2002 at 09:47:45PM -0500, Paul Swartz wrote:
> Yes, my homepage uses Web Widgets to render.  The link for the page is 
> below, and the link for the code is on that page.  Hope that helps. :)
> On 5 Mar 2002 at 16:22, cpaul at telemetrybox.org wrote:
> 
> > I was wondering if anybody on this list has an example of using Web Widgets to render an HTML page?
> 
> -p
> --
>        Paul Swartz
> (o_    http://www.twistedmatrix.com/users/z3p.twistd/  _o)
> //\    z3p at twistedmatrix.com                           /\\
> V_/_   AIM: z3penguin                                 _\_V->
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From twisted at itamarst.org  Tue Mar  5 20:50:54 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 05 Mar 2002 22:50:54 -0500
Subject: [Twisted-Python] Commits list problems
Message-ID: <3C85921E.7060408@itamarst.org>

Commits that change stuff in the root aren't sent to the commits list. 
So if I made a change to the ChangeLog along with my change, like the 
good programmer I am, nothing goes out to the commit list.

So, things that were lost - refactor of tap making APIs, and the fact 
that I checked in the win32 event loop.

This is BAD. This is ANNOYING.

Someone fix it.




From twisted at itamarst.org  Fri Mar  8 07:50:48 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 08 Mar 2002 09:50:48 -0500
Subject: [Twisted-Python] twisted.internet.process for Win32
Message-ID: <3C88CFC8.1010908@itamarst.org>

I've attached my current code, which seems to be working. This will 
hopefully be checked in today, but some testing by others would be useful.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: process_win32.py
URL: </pipermail/twisted-python/attachments/20020308/88932f3d/attachment.ksh>

From andrew-twisted at puzzling.org  Sat Mar  9 04:16:55 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 9 Mar 2002 22:16:55 +1100
Subject: [Twisted-Python] twisted.internet.process for Win32
In-Reply-To: <3C88CFC8.1010908@itamarst.org>
References: <3C88CFC8.1010908@itamarst.org>
Message-ID: <20020309111654.GA916@frobozz.local>

On Fri, Mar 08, 2002 at 09:50:48AM -0500, Itamar Shtull-Trauring wrote:
> I've attached my current code, which seems to be working. This will 
> hopefully be checked in today, but some testing by others would be useful.

Looks good; I'm not sure that you need to spawn three threads per process,
though.  I'll muck around a bit and see if I can do it better :)

(It *should* be easy to get it down to one thread by using
WaitForMultipleObjects, but we'll see...)

-Andrew.




From andrew-twisted at puzzling.org  Sat Mar  9 05:19:45 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 9 Mar 2002 23:19:45 +1100
Subject: [Twisted-Python] twisted.internet.process for Win32
In-Reply-To: <20020309111654.GA916@frobozz.local>
References: <3C88CFC8.1010908@itamarst.org> <20020309111654.GA916@frobozz.local>
Message-ID: <20020309121944.GA437@frobozz.local>

On Fri, Mar 08, 2002 at 09:50:48AM -0500, Itamar Shtull-Trauring wrote:
> I've attached my current code, which seems to be working. This will
> hopefully be checked in today, but some testing by others would be useful.

I'm not sure if it works on Win98 -- is this error harmless?
---
D:\PYTHON22\PYTHON.EXE
creating process
process created
ok, made process object
connection lost
Exception in thread Thread-3:
Traceback (most recent call last):
  File "D:\PYTHON22\lib\threading.py", line 408, in __bootstrap
    self.run()
  File "D:\PYTHON22\lib\threading.py", line 396, in run
    apply(self.__target, self.__args, self.__kwargs)
  File "process_win32.py", line 175, in doReadErr
    task.schedule(self.handleError, data)
AttributeError: Process instance has no attribute 'handleError'
---

And now on to me... :)

On Sat, Mar 09, 2002 at 10:16:55PM +1100, Andrew Bennetts wrote:
> (It *should* be easy to get it down to one thread by using
> WaitForMultipleObjects, but we'll see...)

I'm attaching a version which should work with only one thread per process,
not three (and with some work, could be limited to one thread overall).

However, I'm getting the following error:

---
Exception in thread Thread-1:
Traceback (most recent call last):
  File "D:\PYTHON22\lib\threading.py", line 408, in __bootstrap
    self.run()
  File "D:\PYTHON22\lib\threading.py", line 396, in run
    apply(self.__target, self.__args, self.__kwargs)
  File "process_win32.py", line 158, in waitOnPipe
    val = win32event.WaitForMultipleObjects(handles, 0,
api_error: (6, 'WaitForMultipleObjects', 'The handle is invalid.')
---

Anyone have any idea as to what the problem might be?

-Andrew.




From andrew-twisted at puzzling.org  Sat Mar  9 05:23:40 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 9 Mar 2002 23:23:40 +1100
Subject: [Twisted-Python] twisted.internet.process for Win32
In-Reply-To: <20020309121944.GA437@frobozz.local>
References: <3C88CFC8.1010908@itamarst.org> <20020309111654.GA916@frobozz.local> <20020309121944.GA437@frobozz.local>
Message-ID: <20020309122340.GA486@frobozz.local>

On Sat, Mar 09, 2002 at 11:19:45PM +1100, Andrew Bennetts wrote:
> I'm attaching a version which should work with only one thread per process,

*sigh*

And here is the attachment....

-Andrew.

-------------- next part --------------
"""
Win32 process support.
"""

# Twisted imports
from twisted.internet import task, abstract

# System imports
import win32api
import win32pipe
import win32file
import win32process
import win32security
import win32con
import win32event
import pywintypes
import msvcrt
import os
import sys
import threading
import Queue
import string


class Process(abstract.FileDescriptor):
    """A process that integrates with the Twisted event loop."""
    
    buffer = ''
    
    def __init__(self, command, args, environment, path):
        # security attributes for pipes
        sAttrs = win32security.SECURITY_ATTRIBUTES()
        sAttrs.bInheritHandle = 1

        # create pipes
        hStdin_r,  self.hStdin_w  = win32pipe.CreatePipe(sAttrs, 0)
        self.hStdout_r, hStdout_w = win32pipe.CreatePipe(sAttrs, 0)
        self.hStderr_r, hStderr_w = win32pipe.CreatePipe(sAttrs, 0)

        # set the info structure for the new process.
        StartupInfo = win32process.STARTUPINFO()
        StartupInfo.hStdInput  = hStdin_r
        StartupInfo.hStdOutput = hStdout_w
        StartupInfo.hStdError  = hStderr_w
        StartupInfo.dwFlags = win32process.STARTF_USESTDHANDLES
        # Mark doesn't support wShowWindow yet.
        # StartupInfo.dwFlags = StartupInfo.dwFlags | win32process.STARTF_USESHOWWINDOW
        # StartupInfo.wShowWindow = win32con.SW_HIDE
        
        # Create new output read handles and the input write handle. Set
        # the inheritance properties to FALSE. Otherwise, the child inherits
        # the these handles; resulting in non-closeable handles to the pipes
        # being created.
        pid = win32api.GetCurrentProcess()

        tmp = win32api.DuplicateHandle(
            pid,
            self.hStdin_w,
            pid,
            0,
            0,     # non-inheritable!!
            win32con.DUPLICATE_SAME_ACCESS)
        # Close the inhertible version of the handle
        win32file.CloseHandle(self.hStdin_w)
        self.hStdin_w = tmp
        
        tmp = win32api.DuplicateHandle(
            pid,
            self.hStdout_r,
            pid,
            0,
            0,     # non-inheritable!
            win32con.DUPLICATE_SAME_ACCESS)
        # Close the inhertible version of the handle
        win32file.CloseHandle(self.hStdout_r)
        self.hStdout_r = tmp
        
        tmp = win32api.DuplicateHandle(
            pid,
            self.hStderr_r,
            pid,
            0,
            0,     # non-inheritable!
            win32con.DUPLICATE_SAME_ACCESS)
        # Close the inhertible version of the handle
        win32file.CloseHandle(self.hStderr_r)
        self.hStderr_r = tmp
        
        # start the process.
        print "creating process"
        cmdline = "%s %s" % (command, string.join(args, ' '))
        hProcess, hThread, dwPid, dwTid = win32process.CreateProcess(
                None,   # program
                cmdline,# command line
                None,   # process security attributes
                None,   # thread attributes
                1,      # inherit handles, or USESTDHANDLES won't work.
                        # creation flags. Don't access the console.
                0,      # Don't need anything here.
                        # If you're in a GUI app, you should use
                        # CREATE_NEW_CONSOLE here, or any subprocesses
                        # might fall victim to the problem described in:
                        # KB article: Q156755, cmd.exe requires
                        # an NT console in order to perform redirection.. 
                environment,   # new environment
                path,          # new directory
                StartupInfo)
        # normally, we would save the pid etc. here...
        print "process created"
        # Child is launched. Close the parents copy of those pipe handles
        # that only the child should have open.
        # You need to make sure that no handles to the write end of the
        # output pipe are maintained in this process or else the pipe will
        # not close when the child process exits and the ReadFile will hang.
        win32file.CloseHandle(hStderr_w)
        win32file.CloseHandle(hStdout_w)
        win32file.CloseHandle(hStdin_r)

        self.outQueue = Queue.Queue()
        self.closed = 0
        
        #threading.Thread(target=self.doWrite).start()
        #threading.Thread(target=self.doReadOut).start()
        #threading.Thread(target=self.doReadErr).start()

        # Create event to signal when new data should be written
        self.writeMore = win32event.CreateEvent(None, 0, 0, None)
        
        threading.Thread(target=self.waitOnPipe).start()
    
    def write(self, data):
        """Write data to the process' stdin."""
        self.outQueue.put(data)
        win32event.PulseEvent(self.writeMore)
    
    def closeStdin(self):
        """Close the process' stdin."""
        self.outQueue.put(None)
        win32event.PulseEvent(self.writeMore)
    
    def connectionLost(self):
        """Will be called twice, by the stdout and stderr threads."""
        if not self.closed:
            abstract.FileDescriptor.connectionLost(self)
            print "connection lost"
            self.closed = 1
            self.closeStdin()
            win32file.CloseHandle(self.hStdout_r)
            win32file.CloseHandle(self.hStderr_r)

    def waitOnPipe(self):
        """Runs in thread."""
        handles = [self.writeMore, self.hStdout_r, self.hStderr_r]
        win32event.PulseEvent(self.writeMore)
        #print 'Event:' + str(win32event.WaitForSingleObject(self.hStdin_w, 2000))
        stdinClosed = 0
        while 1:
            val = win32event.WaitForMultipleObjects(handles, 0,
                                                    win32event.INFINITE)
            print 'waitOnPipe got val:', val
            if val == win32event.WAIT_OBJECT_0:
                if stdinClosed:
                    continue
                while not self.outQueue.empty():
                    data = self.outQueue.get()
                    if data == None:
                        win32file.CloseHandle(self.hStdin_w)
                        stdinClosed = 1
                    try:
                        win32file.WriteFile(self.hStdin_w, data, None)
                    except win32api.error:
                        win32file.CloseHandle(self.hStdin_w)
                        stdinClosed = 1
            elif val == win32event.WAIT_OBJECT_0 + 1:
                try:
                    hr, data = win32file.ReadFile(self.hStdout_r, 8192, None)
                except win32api.error:
                    task.schedule(self.connectionLost)
                    return
                task.schedule(self.handleChunk, data)
            elif val == win32event.WAIT_OBJECT_0 + 2:
                try:
                    hr, data = win32file.ReadFile(self.hStderr_r, 8192, None)
                except win32api.error:
                    task.schedule(self.connectionLost)
                    return
                task.schedule(self.handleError, data)

    
if __name__ == '__main__':
    from twisted.internet import main
    
    def printer(x):
        print "Got", repr(x)
    
    exe = win32api.GetModuleFileName(0)
    print exe
    p = Process(exe, ['-u', 'processtest.py'], None, None)
    print "ok, made process object"
    p.handleChunk = printer
    p.handleError = printer
    p.write("hello, world")
    p.closeStdin()
    main.run()

From twisted at itamarst.org  Sat Mar  9 09:47:01 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 09 Mar 2002 11:47:01 -0500
Subject: [Twisted-Python] twisted.internet.process for Win32
References: <3C88CFC8.1010908@itamarst.org> <20020309111654.GA916@frobozz.local> <20020309121944.GA437@frobozz.local> <20020309122340.GA486@frobozz.local>
Message-ID: <3C8A3C85.9050507@itamarst.org>

Andrew Bennetts wrote:

> And here is the attachment....

I'm having problems running my test program with this version - I'll do 
some more investigating later today or tommorow.




From twisted at itamarst.org  Sat Mar  9 15:15:19 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 09 Mar 2002 17:15:19 -0500
Subject: [Twisted-Python] twisted.internet.process for Win32
References: <3C88CFC8.1010908@itamarst.org> <20020309111654.GA916@frobozz.local> <20020309121944.GA437@frobozz.local> <20020309122340.GA486@frobozz.local> <3C8A3C85.9050507@itamarst.org>
Message-ID: <3C8A8977.4060306@itamarst.org>

A bit further reading showed a bit of a race condition in the writing 
part, and the fact that writing pipe might never get closed in certain 
situations. All solveable of course - but it might be easier to do a 2 
thread solution, one for writing and one with WaitForMultipleObjects for 
reading.

Or... there could be a single thread for *all* Processes stdout and 
stderr reading, and then another thread per Process for writing.




From twisted at itamarst.org  Sat Mar  9 19:39:37 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 09 Mar 2002 21:39:37 -0500
Subject: [Twisted-Python] Yet another win32 process
Message-ID: <3C8AC769.9090601@itamarst.org>

This one uses the win32 event loop for reading from stdout and stderr, 
and starts one thread per Process for writing to stdin. So we're down to 
one thread per Process instead of 3, thanks to Andrew's suggestion.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: process_win32_3.py
URL: </pipermail/twisted-python/attachments/20020309/9f2d650d/attachment.ksh>

From carmstro at twistedmatrix.com  Sun Mar 10 18:26:16 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 10 Mar 2002 20:26:16 -0500
Subject: [Twisted-Python] docs
Message-ID: <1015809978.5566.5.camel@radii>

I just shwacked all the HTML files in the 'doc/' directory and put them
in the TwistedDocs repository. This repository will be populated with
HTML documentation which have '.htc' suffixes -- these files *are* just
plain old HTML. I copied/hacked 'generate.py' from the WebSite
repository to be able to convert regular HTML to
HTML-without-headers-and-footers, and also be able to extract the title
from the <title> tags of the .htc document. the generate.py script
generates "prettier" html documents with no suffix according to a
template document which is passed to it on the command line. The
generate script also converts all links to "foo.htc" to "foo", thus
making linking transparent wether you're browsing un-processed docs or
not. Anyway, you people who are simply writing the docs don't need to
worry about anything -- just write html files with .htc suffixes and
link between them as you would expect. :-)

</babble>
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Sun Mar 10 19:14:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 10 Mar 2002 21:14:39 -0500
Subject: [Twisted-Python] Win32 updates
Message-ID: <3C8C130F.2050505@itamarst.org>

1) win32 process support is checked in and (lightly) tested. Just 
twisted.internet.win32.install() and it's there. For CGI support we're 
gonna need to write a small parser thing that can grok unix style 
"#!c:\python2.1\python.exe" interpreter lines.

2) Because the process tests install the win32 event loop, I discovered 
the win32 event loop breaks the the DNS client/server testing code, so 
currently these tests do *not* pass.

Anyone know about issues with WSAEventSelect and UDP?




From carmstro at twistedmatrix.com  Mon Mar 11 11:33:41 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Mar 2002 13:33:41 -0500
Subject: [Twisted-Python] docs
In-Reply-To: <1015809978.5566.5.camel@radii>
References: <1015809978.5566.5.camel@radii>
Message-ID: <1015871623.2248.7.camel@radii>

OK, so glyph, moshez, and I had a meeting about policy for docs -- this
is changing around a bit, again. But at least now everyone's settled on
everything, and we've figured out a specific policy to implement:

* Documentation is kept in the doc/ directory of the main "Twisted" CVS
  repository/
* the howto/ directory contains docs in plain HTML format (XHTML 
  preferred), with the extension '.html'
* the man/ directory contains docs in troff format with the '.1' suffix
* the api/ directory is empty in CVS, but will be used in the 
  distribution to contain API documentation generated from source (there
  will be an index.html in CVS pointing at the URL of the released API
  docs).
* the examples/ directory will contain code that demonstrates how to use
  Twisted.

I'll be making these changes in CVS shortly.


On Sun, 2002-03-10 at 20:26, Christopher Armstrong wrote:
> I just shwacked all the HTML files in the 'doc/' directory and put them
> in the TwistedDocs repository. This repository will be populated with
> HTML documentation which have '.htc' suffixes -- these files *are* just
> plain old HTML. I copied/hacked 'generate.py' from the WebSite
> repository to be able to convert regular HTML to
> HTML-without-headers-and-footers, and also be able to extract the title
> from the <title> tags of the .htc document. the generate.py script
> generates "prettier" html documents with no suffix according to a
> template document which is passed to it on the command line. The
> generate script also converts all links to "foo.htc" to "foo", thus
> making linking transparent wether you're browsing un-processed docs or
> not. Anyway, you people who are simply writing the docs don't need to
> worry about anything -- just write html files with .htc suffixes and
> link between them as you would expect. :-)
> 
> </babble>
> -- 
>                                 Chris Armstrong
>                          << radix at twistedmatrix.com >>
>                 http://twistedmatrix.com/users/carmstro.twistd/
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From j.her at t-online.de  Mon Mar 11 12:29:07 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Mon, 11 Mar 2002 20:29:07 +0100
Subject: [Twisted-Python] Win32 updates
In-Reply-To: <3C8C130F.2050505@itamarst.org>
Message-ID: <16kVUN-1NaboWC@fwd02.sul.t-online.com>

On Sun, 10 Mar 2002 21:14:39 -0500, Itamar Shtull-Trauring wrote:

>1) win32 process support is checked in and (lightly) tested. Just 
>twisted.internet.win32.install() and it's there. For CGI support we're 
>gonna need to write a small parser thing that can grok unix style 
>"#!c:\python2.1\python.exe" interpreter lines.

If someone implements this, please add support for detecting
/usr/bin/env xxx and then searching the $PATH for xxx.exe/bat/com/bleh.

Ciao, Jürgen





From andrew-twisted at puzzling.org  Mon Mar 11 18:25:10 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 12 Mar 2002 12:25:10 +1100
Subject: [Twisted-Python] Re: Twisted protocol
In-Reply-To: <3C8CEEBD.4070708@chello.se>
References: <3C8CEEBD.4070708@chello.se>
Message-ID: <20020312012510.GA13049@ritsuko.xware.cx>

On Mon, Mar 11, 2002 at 06:51:57PM +0100, David wrote:
> Hello spiv, this is supposed to be reaching you =)
> I was told by radix on #python at opn that you had written "a little proxy 
> protocol which dispatches to multiple other protocol objects" in 
> twisted. This is exactly what i need for a project of mine.
> I'd very much appriciate if you would share this little piece of code 
> with me or alternativly explain how it works.

Heh.  I'm CC'ing the list with this, just for the sake of it :)

Here is the class.  I created it for a case where I had a protocol that was
sometimes inheriting from one Protocol, and sometimes another, and I didn't
want to diddle with __bases__ or munge the two bases into one class
(although perhaps that is the "better" solution?).  If you like, imagine
PacketBasedProtocolA/B to be basic.LineReceiver and Int32StringReceiver,
where lineReceived and stringReceived are both aliased to packetReceived.

class ProxiedPacketProtocol(Protocol):
    """General packet-based protocol.
    
    This class provides a simple way to use either PacketBasedProtocolA or
    PacketBasedProtocolB (or potentially others) as protocol for a data feed,
    without having to change which one you inherit from at runtime.  It
    basically acts as a proxy protocol between the low-level protocol and your
    subclass.  

    Simply override parentProtocol with the "parent" protocol (the default is
    PacketBasedProtocolA) and then when packetReceived is triggered in the
    parent, packetReceived is called in me.  

    Inherit from this class, and override packetReceived."""
    
    parentProtocol = PacketBasedProtocolA
    packets = {}        # This is copied to the parent

    def __init__(self):
        # Create a private subclass of the parentProtocol so that we can
        # override its class-level data attribute(s).
        class ParentProtocol(self.parentProtocol):
            packets = self.packets

        # Create the parent protocol
        self.parent = ParentProtocol()

        # Raw data should get delivered to the parent...
        self.dataReceived = self.parent.dataReceived
        
        # ...and processed packets should come back to me
        self.parent.packetReceived = self.packetReceived
        self.parent.unknownPacket = self.unknownPacket

        # Data from the pinger needs to come via me
        self.parent.transport = self.transport

    def packetReceived(self, packet):
        """Override this.  
        
        Called whenever the parentProtocol receives a packet."""
        pass

    def unknownPacket(self, messageType, data):
        print "Received unknown packet of type '%s': %s" \
              % (messageType, repr(data))


David, I hope this is what you were after :)

It should be fairly easy to use and adapt -- but my question for the list is,
is it worth the extra effort it would take to make this more general?  i.e.
take arbitrary lists of attributes to copy from the parent to the proxy (and
vice versa?), instead of hard-coded names in __init__?

My other question is, is this a useful enough concept to include it in 
Twisted?  :)

-Andrew.




From carmstro at twistedmatrix.com  Mon Mar 11 18:19:46 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Mar 2002 20:19:46 -0500
Subject: [Twisted-Python] Re: Twisted protocol
In-Reply-To: <20020312012510.GA13049@ritsuko.xware.cx>
References: <3C8CEEBD.4070708@chello.se> 
	<20020312012510.GA13049@ritsuko.xware.cx>
Message-ID: <1015895988.2449.10.camel@radii>

On Mon, 2002-03-11 at 20:25, Andrew Bennetts wrote:
> My other question is, is this a useful enough concept to include it in 
> Twisted?  :)

Yes. Start bugging glyph to get CVS access. :-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From andrew-twisted at puzzling.org  Mon Mar 11 18:54:59 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 12 Mar 2002 12:54:59 +1100
Subject: [Twisted-Python] Automatic reconnection
Message-ID: <20020312015459.GB13049@ritsuko.xware.cx>

Hi all,

I need a tcp.Client that can automatically reconnect when disconnected.

I've written the following class, and it seems to work, but...
  * It doesn't handle unix sockets (that's ok for me, I'm using Windows, so I
    never had them in the first place)
  * I'm not sure what the "connector" is, and thus I suspect it won't for 
    Clients that use it.
  * It's only lightly tested

Is there a better way to do this (i.e. is there a way to do this already in 
Twisted, and I just haven't found it yet)?

Otherwise, I'd be interested in knowing if anyone else would find this useful,
or if maybe it should be included in Twisted.  I suspect I'm not the only
person who wants to be able to write a server which automatically tries to
recover from "upstream" problems.

-Andrew.

Code:
class ReconnectingClient(tcp.Client):
    """A tcp.Client that automatically reconnects when disconnected
    
    Overrideable attributes:
        * reconnectionDelay -- number of seconds to wait before reconnecting
        * maxReconnects -- maximum number of reconnects before giving up.  The
          reconnection counter is reset after a successfull reconnection.  Set
          this to None to keep retrying indefinitely.

    The protocol will have connectionLost called as normal when disconnected,
    but may get reconnected after that -- so if you need to reset anything in
    your protocol after a disconnection, do it in Protocol.connectionLost.
    """
    reconnectionDelay = 3.0
    maxReconnects = 5

    def __init__(self, host, port, protocol, timeout=None, connector=None):
        tcp.Client.__init__(self, host, port, protocol, timeout, connector)
        self.reconnectAttempts = 0
        self.reconnectProtocol = protocol

    def connectionLost(self):
        # Disconnect as normal
        tcp.Client.connectionLost(self)
        # Then schedule a reconnect
        if main.running:        # FIXME: Is this test necessary?
            print 'Lost connection, reconnecting...'
            main.addTimeout(self.reconnect, self.reconnectionDelay)

    def reconnect(self):
        if not self.connected:
            if (self.maxReconnects is None or 
                self.reconnectAttempts < self.maxReconnects):
                    self.reconnectAttempts += 1
                    tcp.Connection.__init__(self, self.createInternetSocket(), 
                                            self.reconnectProtocol)
                    self.doConnect()
                    main.addTimeout(self.reconnect, self.reconnectionDelay)
            else:
                print 'Reconnection failed after %d attempts.  Giving up.' \
                      % (self.reconnectAttempts,)
        else:
            # Reset the reconnect counter if we're connected.
            self.reconnectAttempts = 0




From twisted at itamarst.org  Mon Mar 11 18:53:38 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 11 Mar 2002 20:53:38 -0500
Subject: [Twisted-Python] Automatic reconnection
References: <20020312015459.GB13049@ritsuko.xware.cx>
Message-ID: <3C8D5FA2.9060009@itamarst.org>

Andrew Bennetts wrote:

> I need a tcp.Client that can automatically reconnect when disconnected.

tcp.Connector, or app.connectTCP.

e.g., given MyProtocol and Application instance app:
======================

from twisted.protocols import protocol

# make protocol factory for MyProtocol
f = protocol.ClientFactory()
f.protocol = MyProtocol

app.connectTCP("www.yahoo.com", 80, f)




From andrew-twisted at puzzling.org  Mon Mar 11 19:03:05 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 12 Mar 2002 13:03:05 +1100
Subject: [Twisted-Python] Automatic reconnection
In-Reply-To: <3C8D5FA2.9060009@itamarst.org>
References: <20020312015459.GB13049@ritsuko.xware.cx> <3C8D5FA2.9060009@itamarst.org>
Message-ID: <20020312020305.GA13895@ritsuko.xware.cx>

On Mon, Mar 11, 2002 at 08:53:38PM -0500, Itamar Shtull-Trauring wrote:
> Andrew Bennetts wrote:
> 
> >I need a tcp.Client that can automatically reconnect when disconnected.
> 
> tcp.Connector, or app.connectTCP.

Aah!  Thank you.

I thought it was a bit odd that I had to write something myself... :)

*slaps forehead*

-Andrew.




From carmstro at twistedmatrix.com  Tue Mar 12 15:17:52 2002
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 12 Mar 2002 16:17:52 -0600
Subject: [Twisted-Python] HTML in documentation
Message-ID: <20020312221752.GA12618@twistedmatrix.com>

It has become apparent to me that we need to standardize the tags we
use in HTML documentation for Twisted. This will make it easier to
apply stylesheets to it, as well as use processing tools to convert it
to other formats. Here is my proposal (This is especially aimed at
Moshe, since he is the HTML purist of the bunch, and I want to make
sure he's happy with these so he won't decide to rebel and start his
own repository of docs again ;-)). So I would like it if at least
Moshe and Glyph were to both reply to me in some fashion, even if with
a simple "yes" or "no" (if it's a "no", a short explanation would be
nice ;-)). Of course others are very much encouraged to chime in. The
three of us aren't the only important ones around here, by a long
shot. ;-)

1.) For code-snippets that are separated from paragraph content, we
should either use the <code> tag, along with <pre>. for example:

----

<p>
For example, this is how one defines a Resource:
</p>

<p>
<code><pre>
    from twisted.web import resource

    class MyResource(resource.Resource):
        def render(self, request):
            return "Hello, world!"
</pre></code>
</p>

----

The <pre> shall not be assigned any special semantic value in
processing tools or StyleSheets. It is only there so browsers will
render it correctly. Special semantics shall only be assigned to
<code>.

2.) For single-line code-snippets and attribute/method/module-names
interpolated in a paragraph, <code> shall also be used, but without
the <pre> tag. Also, module and class names should be specified with
their fully-qualified name, and have a link to the API documentation,
which is assumed to be in ../api/current/ (this is how it will be set
up on the web-site). Regular attribute names don't need to be fully
qualified (as this wouldn't make sense), but should still be enclosed
in <code> tags. For example:

----

<p>To add a 
<a
href="../api/current/twisted/web/widgets_Widget.html"><code>twisted.web.widgets.Widget</code></a>
instance to a 
<a
href="../api/current/twisted/web/widgets_Gadget.html"><code>twisted.web.widgets.Gadget</code></a>
instance, do <code>myGadget.putWidget("widgetPath", MyWidget())</code>.
</p>

<p> 
(implementation note: the widgets are stored in the
<code>gadgetInstance.widgets</code> attribute, which is a list.)
</p>

----

I realize that adding the links to the API documentation everywhere is
ugly, so I suppose it would be fine to only add the link to the first
instance a module/classname shows up in the document. Just make sure
there's a link in there somewhere. Maybe I'll hack on generate.py to
automatically insert the links when it sees a fully-qualified
twisted.* name... (but this doesn't mean one should completely
disregard linking to API docs -- the idea is to have the HTML
documents be browsable both with *or* without pre-processing)

3.) It goes without mentioning that one should use <hN> in a sane way
to organize the document: the only <h1> shall be the title of the
document, <h2> shall be sections, <h3> sub-sections, etc.

4.) Tags that have an optional closing tag should have the optional
closing tag (ie, <li> and </li>). This makes it easier for some
editors and processing tools to work with the code. This point isn't
all that important. If it bothers someone enough, I can deal without
having them. :-)

5.) Glyph says we should use XHTML, but he's a dork. Discuss. ;-)

That's about it. Any other suggestions? If everyone agrees to this,
I'll go through all the existing docs and update them with these rules
(I doubt there will be many updates), and probably create a
style-sheet to render them nicely.


p.s. -- The only rules I notice that differ with Moshe's style in his
existing documentation are 1.) he doesn't use <code> around multi-line
code snippets and 2.)  he doesn't have ending </li> tags. Is this a
problem for you, Moshe?






From carmstro at twistedmatrix.com  Tue Mar 12 15:44:46 2002
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 12 Mar 2002 16:44:46 -0600
Subject: [Twisted-Python] HTML in documentation
In-Reply-To: <20020312221752.GA12618@twistedmatrix.com>
References: <20020312221752.GA12618@twistedmatrix.com>
Message-ID: <20020312224446.GB12618@twistedmatrix.com>

OK, I've discussed this with Glyph and Moshe, and here are the
changes.  (sigh, i'm getting sick of seemingly discussing
documentation with myself on the mailing list. :P)

> 1.) For code-snippets that are separated from paragraph content, we
> should either use the <code> tag, along with <pre>. for example:

We won't be using <code> for multi-line snippets, but rather <pre>
with a mandatory class attribute. The two classes which we have come to
a conclusion on are "python" for regular python snippets, and
"python-interpreter" for examples of python interactive shell
sessions. For example:

----

<p>
For example, this is how one defines a Resource:
</p>

<p>
<pre class="python">
    from twisted.web import resource

    class MyResource(resource.Resource):
        def render(self, request):
            return "Hello, world!"
</pre>
</p>

----

> 2.) For single-line code-snippets and attribute/method/module-names
> interpolated in a paragraph, <code> shall also be used, but without
> the <pre> tag. Also, module and class names should be specified with
> their fully-qualified name, and have a link to the API documentation,
> which is assumed to be in ../api/current/ (this is how it will be set
> up on the web-site). Regular attribute names don't need to be fully
> qualified (as this wouldn't make sense), but should still be enclosed
> in <code> tags. For example:

We are going to rely entirely on processing for putting in links to
the API documentation. Instead of just having
<code>twisted.internet.main</code>, though, we'll have 
<code class="API">twisted.internet.main</code>. <code> tags used to delimit
actual python expressions will need class="python" as well. For example:

----

<p>
To add a <code class="API">twisted.web.widgets.Widget</code> instance
to a <code class="API">twisted.web.widgets.Gadget</code> instance, do
<code class="python">myGadget.putWidget("widgetPath", MyWidget())</code>.
</p>

<p> 
(implementation note: the widgets are stored in the
<code class="python">gadgetInstance.widgets</code> attribute, which is a
list.)
</p>

----

> 5.) Glyph says we should use XHTML, but he's a dork. Discuss. ;-)

Everyone has agreed that we shall use XHTML. That means <br />, people!


So, the next steps for me are to publish this documentation standard,
and start updating existing documentation to follow it.




From dereks at realloc.net  Wed Mar 13 19:14:34 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Wed, 13 Mar 2002 18:14:34 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
Message-ID: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>

	Hello.  My name is Derek Simkowiak, I've just been introduced to
Twisted by Sean Riley (sean at twistedmatrix dot com).  I'm using (and now
contributing to) his PyUI widget set for my 3D game engine.  When I told
him I still needed to write the networking code, he pointed me here.

	I wanted to introduce myself, ask for some general guidance about
a network protocol, and point out that the documentation titled "The
Basics" at

http://twistedmatrix.com/page.epy/docs/basics.html

	results in "no such page", which really sucks for somebody just 
getting started (like me).

	First, a little bit about my game engine, because it's the type of
thing you twisted Twisted people might be interested in:

o  OpenGL for rendering
o  SDL for event management
o  Quake2 BSP map rendering (many more model formats to come soon)
	- includes almost all of the Id BSP culling tricks
	- includes fully-functional collision detection using the Q2 
"bloated planes" algorithm, as figured out by Kekoa Proudfoot

o  Complete in-game GUI over the top of the 3D world, including 
transulency, using the PyUI widget set.  Screenshot at:

http://www.realloc.net/~dereks/targa_pyui1.jpg

	Also see the older shots at:

http://www.realloc.net/~dereks/commputers/my_code/targa/


	Also, the big piece that you may like: I've recently refactored
the whole damn thing, and with a little help from SWIG my "engine" is now
nothing more than some Python C extensions.  My "main event loop" is just
a simple Python script, and because all the [bottlenecking] rendering code
is still C, I get the ~70 FPS I was getting when the entire engine was
pure C.  But now I have Python at my disposal, mua ha ha.  (Also, note
that all the libraries are cross-platform.  I'm developing under Linux,
but eventually this thing should run under MS-Windows, Mac OS X, AmigaOS,
and even PlayStation2.)

	The big pieces I have left are the enemy A.I. and the networking
code.  This is a client-server engine.  The light at the end of the tunnel
is load-balanced Linux cluster (using LVS) serving up a persistent, 3D
world (ala' PlanetSide), and maybe even me making some $$$ from a few
hundred subscribers paying $5/month.  Now you see where Twisted fits in --
I'm basically shooting for twisted.reality in real-time 3D.

	My concern is regarding bandwidth.  My game protocol will be
similar to the Quake2 protocol, meaning huge lists of 'entities' are
updated with position and orientation data as often as possible.  Such
generic position updates will be done with UDP, and 'critical' packets
(such as damage, explosions, jumps, messages, etc.) will be done with TCP.  
In summary, every single byte of network overhead matters -- nay, every
BIT matters (npi).

	So I've browsed through the API docs, but I don't have any context
to know what I'm looking at.  I'll be downloading and installing the
source soon, but in the meantime... any advice?  

	Is there any particular package I should be looking at (other than
twisted.internet)?  Does Twisted's networking code cater to somebody who
needs to, for example, do bitshifting and compression to absolutely
minimize the bandwidth requirements?  What approach would you take?  Note
that, using PyUI for the GUI and [possibly] Twisted for the server, I want
to have things like in-game "IRC/ICQ", in-game "emails", and also in-game
"voice chat" ala CounterStrike 1.3.  Other wild ideas include in-game
video conferencing, and dynamically-downloaded bits of Python code that
would act as all-new, not-previously-imagined entities.  (Note that by
"in-game" I mean the 3D world is rendered, and the email/IRC/video client
application is rendered on top of the 3D world with some translucency.  
The idea is to keep the player immersed.)

	Any advice is greatly appreciated.  If anybody else is using
Twisted for something similar, I'd love to hear about it.


Thanks,
Derek Simkowiak
dereks at realloc dot net





From twisted at itamarst.org  Wed Mar 13 18:28:22 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Mar 2002 20:28:22 -0500
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
References: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
Message-ID: <3C8FFCB6.1060304@itamarst.org>

Derek Simkowiak wrote:

> 	I wanted to introduce myself, ask for some general guidance about
> a network protocol, and point out that the documentation titled "The
> Basics" at
> 
> http://twistedmatrix.com/page.epy/docs/basics.html

The site was re-done. This should be useful:

http://twistedmatrix.com/documents/servers

The next version of Twisted will include all written docs in the 
tarball, such as they are.

I'll let more qualified people answer the rest.




From jason at crash.org  Wed Mar 13 18:52:42 2002
From: jason at crash.org (Jason Asbahr)
Date: Wed, 13 Mar 2002 19:52:42 -0600
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
Message-ID: <2C4794B6-36EE-11D6-957E-000393753460@crash.org>

Hey, Darek!

> 	First, a little bit about my game engine, because it's the type of
> thing you twisted Twisted people might be interested in:
> <snip>

That looks great!

> 	Also see the older shots at:
>
> http://www.realloc.net/~dereks/commputers/my_code/targa/

This link didn't come up for me, though...

> 	Also, the big piece that you may like: I've recently refactored
> the whole damn thing, and with a little help from SWIG my "engine" is 
> now
> nothing more than some Python C extensions.  My "main event loop" is 
> just
> a simple Python script, and because all the [bottlenecking] rendering 
> code
> is still C, I get the ~70 FPS I was getting when the entire engine was
> pure C.  But now I have Python at my disposal, mua ha ha.

Very cool.

> 	The big pieces I have left are the enemy A.I. and the networking
> code.  This is a client-server engine.  The light at the end of the 
> tunnel
> is load-balanced Linux cluster (using LVS) serving up a persistent, 3D
> world (ala' PlanetSide), and maybe even me making some $$$ from a few
> hundred subscribers paying $5/month.  Now you see where Twisted fits 
> in --
> I'm basically shooting for twisted.reality in real-time 3D.

Welcome to the club.  :-)

> 	Any advice is greatly appreciated.  If anybody else is using
> Twisted for something similar, I'd love to hear about it.

I'm working on a similar goal -- Persistent worlds hosted in Twisted 
with various 3D clients.  Currently, I'm working with the Nebula Device 
(http://www.radonlabs.de), which is a multi-platform general 
scenegraph-oriented library.

I'm working on putting together a demo, but until then, check out the 
papers which describe the approach I'm taking:  
http://www.asbahr.com/papers.html

It would be useful to identify the common features between the various 
game projects so we can collaborate effectively.  Does the fact that you 
are using Quake-style approach mean that you will want to consider the 
world in terms of "levels", versus terrain chunks or "rooms"?

Cheers,

Jason




From dereks at realloc.net  Wed Mar 13 19:50:03 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Wed, 13 Mar 2002 18:50:03 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <3C8FFCB6.1060304@itamarst.org>
Message-ID: <Pine.LNX.4.33.0203131848310.18107-100000@archer.realloc.net>

-> > http://twistedmatrix.com/page.epy/docs/basics.html
-> 
-> The site was re-done. This should be useful:
-> 
-> http://twistedmatrix.com/documents/servers


	In that case, please note that

(a) Google returned the [broken] URL I gave, not the new one
(b) The URL I gave is referenced from (at least) one article online

	It would be nice if there were some kind of link to the new
documentation.


--Derek





From twisted at itamarst.org  Wed Mar 13 18:54:55 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Mar 2002 20:54:55 -0500
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
References: <Pine.LNX.4.33.0203131848310.18107-100000@archer.realloc.net>
Message-ID: <3C9002EF.80104@itamarst.org>

Derek Simkowiak wrote:

> (a) Google returned the [broken] URL I gave, not the new one

Not our problem.

> (b) The URL I gave is referenced from (at least) one article online

Maybe we should deal with this. Chris?

> 	It would be nice if there were some kind of link to the new
> documentation.

It's reachable if you go to http://twistedmatrix.com and then follow 
links from there.




From andrew at puzzling.org  Wed Mar 13 18:28:04 2002
From: andrew at puzzling.org (Andrew Bennetts)
Date: Thu, 14 Mar 2002 12:28:04 +1100
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
References: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
Message-ID: <20020314012804.GB9480@ritsuko.xware.cx>

On Wed, Mar 13, 2002 at 06:14:34PM -0800, Derek Simkowiak wrote:
> 
> 	I wanted to introduce myself, ask for some general guidance about
> a network protocol, and point out that the documentation titled "The
> Basics" at
> 
> http://twistedmatrix.com/page.epy/docs/basics.html
> 
> 	results in "no such page", which really sucks for somebody just 
> getting started (like me).

Hmm.  You've asked a lot of questions, which I can't answer at the moment,
but you might prefer this URL:

    http://twistedmatrix.com/documents/servers

-Andrew.




From abo at minkirri.apana.org.au  Wed Mar 13 19:32:25 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Thu, 14 Mar 2002 13:32:25 +1100
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <2C4794B6-36EE-11D6-957E-000393753460@crash.org>
References: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net> <2C4794B6-36EE-11D6-957E-000393753460@crash.org>
Message-ID: <20020314023225.GB7546@minkirri.apana.org.au>

On Wed, Mar 13, 2002 at 07:52:42PM -0600, Jason Asbahr wrote:
> Hey, Darek!
> 
> >	First, a little bit about my game engine, because it's the type of
> >thing you twisted Twisted people might be interested in:
> ><snip>
> 
> That looks great!

I'm interested in contributing to something like this.

> >	The big pieces I have left are the enemy A.I. and the networking
> >code.  This is a client-server engine.  The light at the end of the 

I have AI experience in a totaly different field (OCR), and do embeded
real-time systems programming in the real world (including some autopilot
programming). I once upon a time did some low-level 3D programming
(rendering algo's), but that was ages ago.

I'm interested in contributing to A.I, update + lag-compensation algo's,
progressive detail algo's, and random environment generation. I also have
some ideas on using RPG style skills and skill advancement in a FPS.

> I'm working on a similar goal -- Persistent worlds hosted in Twisted 
> with various 3D clients.  Currently, I'm working with the Nebula Device 
> (http://www.radonlabs.de), which is a multi-platform general 
> scenegraph-oriented library.

radeonlabs.... If there is demand, I'd also be interested in trying my hand
at tweaking radeon drivers for linux. Although I really like Python
programming, I've actually had heaps more experience with low level
assembler and C.

> I'm working on putting together a demo, but until then, check out the 
> papers which describe the approach I'm taking:  
> http://www.asbahr.com/papers.html
> 
> It would be useful to identify the common features between the various 
> game projects so we can collaborate effectively.  Does the fact that you 
> are using Quake-style approach mean that you will want to consider the 
> world in terms of "levels", versus terrain chunks or "rooms"?

Oh yeah, I'm also very keen on helping facilitate common-code usage.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From dereks at realloc.net  Wed Mar 13 20:32:01 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Wed, 13 Mar 2002 19:32:01 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <2C4794B6-36EE-11D6-957E-000393753460@crash.org>
Message-ID: <Pine.LNX.4.33.0203131906540.18107-100000@archer.realloc.net>

-> > http://www.realloc.net/~dereks/commputers/my_code/targa/
-> 
-> This link didn't come up for me, though...

	Sorry... typo.  Too many 'm's in 'commputer'.  Try:

http://www.realloc.net/~dereks/computers/my_code/targa/

	(That page is a bit dated, but has a link to more screenshots.)


-> I'm working on a similar goal -- Persistent worlds hosted in Twisted 
-> with various 3D clients.  Currently, I'm working with the Nebula Device 
-> (http://www.radonlabs.de), which is a multi-platform general 
-> scenegraph-oriented library.

	I need to take a look at Nomads again... (unfortunately, I have a
sharp distaste for C++).  But it would be good to look at their
architecture, now that mine is fully designed.

-> I'm working on putting together a demo, but until then, check out
-> the papers which describe the approach I'm taking:  
-> http://www.asbahr.com/papers.html

	I will take a look.  Thanks!

-> It would be useful to identify the common features between the various 
-> game projects so we can collaborate effectively.

	I don't want to spam this list with off-topic 3D game mails.  
Perhaps a "twisted-3d" list is called for?  Until then, please follow-up
with me privately.


->  Does the fact that you are using Quake-style approach mean that you
-> will want to consider the world in terms of "levels", versus terrain
-> chunks or "rooms"?

	No, I consider the world in terms of generic "Entities".  
Renderable entities have a "model" member, which is itself a C extension
class.  Then when the entity goes to render itself, it calls the C
'render' function of the model.  This is because many model types (i.e.
BSPs and Quadtrees)  have culling information intrinsically built into the
model format, and it makes sense to use C to do that.

	My engine will (eventually) allow for several BSPs within either a
landscape, or in outer space.  Imagine a game like HomeWorld, except that
you can crash-land your small fighter in the landing bay of an enemy
frigate, jump out of your fighter (First Person Shooter ala Quake), and
now -- within the BSP of the ship -- run around hallways and corridors
until you reach the control room, kill the command crew, and take over the
frigate.  That is the kind of flexibility I am aiming for; the "frigate"  
entity would detect if the camera (i.e., viewer perspective) is within the
ship.  If not, it would render a mesh model.  If yes, then it renders its
BSP tree.

	What's really cool is that my BSP code, unlike any other BSP-based
engine I've seen, allows sharing of the static data, including OpenGL
texture names.  So you'd have the BSP in memory once only, but be able to
have 50 frigates (any one of which you can crashland into).

	The same theory would apply to buildings, underwater settlements,
etc.  I hope to soon support meshes, particle systems, landscapes
(dynamically loaded lists triangle strips), and later on streaming media.  
All I need to do to add those is write a C struct to hold the data, and
then implement the render() and collide() APIs for those structs.  The
rest is handled in Python.

	I will read your papers soon.  Thanks again.


--Derek




From andrew-twisted at puzzling.org  Wed Mar 13 19:42:58 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 14 Mar 2002 13:42:58 +1100
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <3C9002EF.80104@itamarst.org>
References: <Pine.LNX.4.33.0203131848310.18107-100000@archer.realloc.net> <3C9002EF.80104@itamarst.org>
Message-ID: <20020314024258.GA10601@ritsuko.xware.cx>

On Wed, Mar 13, 2002 at 08:54:55PM -0500, Itamar Shtull-Trauring wrote:
> Derek Simkowiak wrote:
> 
> >(a) Google returned the [broken] URL I gave, not the new one
> 
> Not our problem.

Yeah.  Google will correct itself eventually; in the mean time, it probably
offers a cached copy.

> >	It would be nice if there were some kind of link to the new
> >documentation.
> 
> It's reachable if you go to http://twistedmatrix.com and then follow 
> links from there.

It might be nice if the 404 page offered a link back to the homepage,
instead of just a "No Such Resource" error message.

-Andrew.




From twisted at itamarst.org  Wed Mar 13 20:47:22 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Mar 2002 22:47:22 -0500
Subject: [Twisted-Python] Issues with roots.Collections in regards to Coil
Message-ID: <3C901D4A.2080006@itamarst.org>

(If this doesn't make sense, you can probably ignore it. At some point 
we might make a twisted-dev list.)

Issues:

1) The problem where you click on a virtual host's sub-Resource in web 
coil and you can't configure it. Dunno why. (I fixed some similar effect 
bugs which were caused by *someone* using MOVED_PERMANENTLY and ignoring 
the fact this gets cached by browsers, but that's not the issue here.)

2) The UI assumes entities in a collection are mutable, i.e. first 
created, and then separately configured via a Configurator. This 
conflicts with stuff like making a Collection for configuring a mapping 
of strings (e.g. the mime types mapping in static.File). Possible 
solution is a custom Collection class for these situations that gets its 
own web coil UI.

3) Collections of Configurators or of configurables? I would think that 
they should stay the way they are  -- collections of configurables. It's 
easy to wrap an object coming from a collection - that's what is done 
now. And it's easier to code the Collection this way, esp. since the 
configurable classes can be collections too, in cases where it makes 
sense (e.g. web.resource.Resource.)

In most situations of course the Collections would only be coded in the 
coil plugin, but it's useful to be able to have the configurable class 
be a Collection.


What were your issues, glyph?




From carmstro at twistedmatrix.com  Wed Mar 13 20:48:45 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 13 Mar 2002 22:48:45 -0500
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du
	lieber..."
In-Reply-To: <20020314023225.GB7546@minkirri.apana.org.au>
References: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
	<2C4794B6-36EE-11D6-957E-000393753460@crash.org> 
	<20020314023225.GB7546@minkirri.apana.org.au>
Message-ID: <1016077727.4090.3.camel@radii>

On Wed, 2002-03-13 at 21:32, Donovan Baarda wrote:
> I'm interested in contributing to A.I, update + lag-compensation algo's,
> progressive detail algo's, and random environment generation. I also have
> some ideas on using RPG style skills and skill advancement in a FPS.

Deus Ex did this very nicely. I wish every day that there was a Deus Ex
MMRPG :-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From sean at twistedmatrix.com  Wed Mar 13 21:27:11 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Wed, 13 Mar 2002 22:27:11 -0600
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203131704390.17592-100000@archer.realloc.net>
Message-ID: <HOEEKPCOKELHCNIJNMAGKEBOCFAA.sean@twistedmatrix.com>

well, the piece of Twisted that is immediately relvant for this type of
application is twisted.spread - comprised of "pb", "jelly" and "banana".
these provide a distributed object system with marshalling, serialization,
networked observation and reference counting. All things that are useful for
building on-line games!

This technology is not optimized at the level of Quake or Tribes style
protocols, but it is infinitely more flexible and provide a much higher
level of functionality.

I have some (incomplete) code for a primative "sub-space" clone that I wrote
using Twisted a while ago. It probably doesn't even work with the latest
Twisted build - but maybe it could be a starting point for some pb examples?
I could post it somewhere if anyone is interested.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Derek
Simkowiak
Sent: Wednesday, March 13, 2002 8:15 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du
lieber..."



	Hello.  My name is Derek Simkowiak, I've just been introduced to
Twisted by Sean Riley (sean at twistedmatrix dot com).  I'm using (and now
contributing to) his PyUI widget set for my 3D game engine.  When I told
him I still needed to write the networking code, he pointed me here.

	I wanted to introduce myself, ask for some general guidance about
a network protocol, and point out that the documentation titled "The
Basics" at

http://twistedmatrix.com/page.epy/docs/basics.html

	results in "no such page", which really sucks for somebody just
getting started (like me).

	First, a little bit about my game engine, because it's the type of
thing you twisted Twisted people might be interested in:

o  OpenGL for rendering
o  SDL for event management
o  Quake2 BSP map rendering (many more model formats to come soon)
	- includes almost all of the Id BSP culling tricks
	- includes fully-functional collision detection using the Q2
"bloated planes" algorithm, as figured out by Kekoa Proudfoot

o  Complete in-game GUI over the top of the 3D world, including
transulency, using the PyUI widget set.  Screenshot at:

http://www.realloc.net/~dereks/targa_pyui1.jpg

	Also see the older shots at:

http://www.realloc.net/~dereks/commputers/my_code/targa/


	Also, the big piece that you may like: I've recently refactored
the whole damn thing, and with a little help from SWIG my "engine" is now
nothing more than some Python C extensions.  My "main event loop" is just
a simple Python script, and because all the [bottlenecking] rendering code
is still C, I get the ~70 FPS I was getting when the entire engine was
pure C.  But now I have Python at my disposal, mua ha ha.  (Also, note
that all the libraries are cross-platform.  I'm developing under Linux,
but eventually this thing should run under MS-Windows, Mac OS X, AmigaOS,
and even PlayStation2.)

	The big pieces I have left are the enemy A.I. and the networking
code.  This is a client-server engine.  The light at the end of the tunnel
is load-balanced Linux cluster (using LVS) serving up a persistent, 3D
world (ala' PlanetSide), and maybe even me making some $$$ from a few
hundred subscribers paying $5/month.  Now you see where Twisted fits in --
I'm basically shooting for twisted.reality in real-time 3D.

	My concern is regarding bandwidth.  My game protocol will be
similar to the Quake2 protocol, meaning huge lists of 'entities' are
updated with position and orientation data as often as possible.  Such
generic position updates will be done with UDP, and 'critical' packets
(such as damage, explosions, jumps, messages, etc.) will be done with TCP.
In summary, every single byte of network overhead matters -- nay, every
BIT matters (npi).

	So I've browsed through the API docs, but I don't have any context
to know what I'm looking at.  I'll be downloading and installing the
source soon, but in the meantime... any advice?

	Is there any particular package I should be looking at (other than
twisted.internet)?  Does Twisted's networking code cater to somebody who
needs to, for example, do bitshifting and compression to absolutely
minimize the bandwidth requirements?  What approach would you take?  Note
that, using PyUI for the GUI and [possibly] Twisted for the server, I want
to have things like in-game "IRC/ICQ", in-game "emails", and also in-game
"voice chat" ala CounterStrike 1.3.  Other wild ideas include in-game
video conferencing, and dynamically-downloaded bits of Python code that
would act as all-new, not-previously-imagined entities.  (Note that by
"in-game" I mean the 3D world is rendered, and the email/IRC/video client
application is rendered on top of the 3D world with some translucency.
The idea is to keep the player immersed.)

	Any advice is greatly appreciated.  If anybody else is using
Twisted for something similar, I'd love to hear about it.


Thanks,
Derek Simkowiak
dereks at realloc dot net



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dereks at realloc.net  Wed Mar 13 23:31:21 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Wed, 13 Mar 2002 22:31:21 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <HOEEKPCOKELHCNIJNMAGKEBOCFAA.sean@twistedmatrix.com>
Message-ID: <Pine.LNX.4.33.0203132215240.18886-100000@archer.realloc.net>

-> well, the piece of Twisted that is immediately relvant for this type of
-> application is twisted.spread - comprised of "pb", "jelly" and "banana".
-> these provide a distributed object system with marshalling, serialization,
-> networked observation and reference counting. All things that are useful for
-> building on-line games!

	Very cool (although, I have to say it, I'm not really a fan of
'cute' API names.  I much prefer clarity and conciseness.)

	Also, twisted.spread could easily be confused with the "Spread" C
library, which is also designed for use in distributed systems.  It has a
somewhat different purpose, but my first thought was that twisted.spread
was a Python interface to the Spread library (which would be really useful
for Twisted, by the way).  See http://www.spread.org/.


-> This technology is not optimized at the level of Quake or Tribes style
-> protocols, but it is infinitely more flexible and provide a much higher
-> level of functionality.

	Unfortunately, most people _HATE_ a laggy gaming experience (i.e.,
see the "Damn Lag" T-Shirt at ThinkGeek.com).  For my application, the
need for efficiency outweighs the other features of twisted.spread.

	However, I could probably use twisted.spread for "administrative"  
networking.  That would be things like text messages, download of resource
files (meshes, textures, etc.), changing levels, etc. -- things that don't 
need to be updated at ~70 FPS.


-> Twisted build - but maybe it could be a starting point for some pb examples?
-> I could post it somewhere if anyone is interested.

	"More examples" is always better than "fewer examples"  :)

	Thanks for the help!


--Derek




From sean at twistedmatrix.com  Thu Mar 14 09:00:32 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Thu, 14 Mar 2002 10:00:32 -0600
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203132215240.18886-100000@archer.realloc.net>
Message-ID: <HOEEKPCOKELHCNIJNMAGAECACFAA.sean@twistedmatrix.com>

>	Unfortunately, most people _HATE_ a laggy gaming experience (i.e.,
>see the "Damn Lag" T-Shirt at ThinkGeek.com).  For my application, the
>need for efficiency outweighs the other features of twisted.spread.

>	However, I could probably use twisted.spread for "administrative"
>networking.  That would be things like text messages, download of resource
>files (meshes, textures, etc.), changing levels, etc. -- things that don't
>need to be updated at ~70 FPS.

In the spectrum of protocols ranging from generic but bandwidth heavy
protocols like SOAP to highly compressed and specific protocols like Quake,
"pb" falls somewhere in the middle - but much closer to the Quake end. It
has been optimized for use in games, while still providing generic
functionality.

"Lag" is much more of an issue than just protocol design. Tricks such as
client-side prediction, intelligent weapon design, distance based
attenuation and aggressive visibility calculation make a huge difference.
With the right game design and the optimizations that are planned for pb i
think it could be used for FPS type applications. There could even be an
extension to banana (the protocol packer) specifically for these application
that knows about 3d co-ordinates, movement packets and other common packet
types. This banana extension could do bit-shifting, low-precision floats and
compression, or any other tricks learned from the FPS crowd.

I am definately planning on using it for all in-game traffic within the 3D
virtual spaces I am building. I'd encourage you to do the same - at very
least consider using extensions to pb rather than writing your own protocol
framework.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dereks at realloc.net  Thu Mar 14 14:13:51 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Thu, 14 Mar 2002 13:13:51 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <HOEEKPCOKELHCNIJNMAGAECACFAA.sean@twistedmatrix.com>
Message-ID: <Pine.LNX.4.33.0203141303010.22142-100000@archer.realloc.net>

-> "Lag" is much more of an issue than just protocol design.

	Of course, and I have been studying heavily all of the things you
mentioned (prediction, et. al.).  But just to give you an idea of how
optimized the 3D protocols are, Sony's PlanetSide only uses 4 bits for the
Z component of it's entity origin update packets (because they are using
tricks to get around the loss in granularity).

	Also, as the guy who going to have to write the code, I'm kind of 
looking forward to playing with different optimizations and "tricks".  If 
I'm just calling somebody else's library, I lose all that fun :)


-> I am definately planning on using it for all in-game traffic within the 3D
-> virtual spaces I am building.

	I'm highly interested in this work; I would love to see what kind
of response times you get with twisted.spread (and which 'tricks' you 
employ :).


-> least consider using extensions to pb rather than writing your own protocol
-> framework.

	Because you are so persistent in this recommendation, I will take
a very close look at pb.  But presently my intuition says I'll be writing
my own.


--Derek




From twisted at itamarst.org  Thu Mar 14 13:21:13 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 14 Mar 2002 15:21:13 -0500
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
References: <Pine.LNX.4.33.0203141303010.22142-100000@archer.realloc.net>
Message-ID: <3C910639.7050908@itamarst.org>

Derek Simkowiak wrote:

 > Because you are so persistent in this recommendation, I will take a
 > very close look at pb.  But presently my intuition says I'll be
 > writing my own.

Well, on the low level, we were discussing make banana extendable so you
can define custom data types, e.g. a data type for location that is sent 
in 4 bytes. The overhead for you would be one extra byte per message, I 
think.

This depends on adding "profiles" to the banana protocol, which is on 
our TODO list.




From dereks at realloc.net  Thu Mar 14 14:47:26 2002
From: dereks at realloc.net (Derek Simkowiak)
Date: Thu, 14 Mar 2002 13:47:26 -0800 (PST)
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <3C910639.7050908@itamarst.org>
Message-ID: <Pine.LNX.4.33.0203141338440.22457-100000@archer.realloc.net>

-> Well, on the low level, we were discussing make banana extendable so you
-> can define custom data types, e.g. a data type for location that is sent 
-> in 4 bytes. The overhead for you would be one extra byte per message, I 
-> think.

	Not 4 bytes... 4 BITS (for the Z component only).  I don't know
what they're doing, but that's what their Lead Developer told me.

	Obviously, the need to fiddle with bitshifting (and other tricks,
like compressing certain packet types before transmisison) makes me think
I'll need to write my own network library.

	There are also further refinements in the CounterStrike/Half-Life
version of the Quake2 protocol, although I don't know what those are yet.  
I'm also dinking around with ideas like using bits to mark the traversal
of a binary "packet opcode" tree, putting the most common types of packets
near the top of the tree and the less common (or lower priority) packets
near the bottom -- this way, the opcode identifier for the most common
packet would only be one bit (and my networking code would be a nasty mess
of bitshifting and endian-specific code :).  Given this type of work, I'd
rather not just "pass it off" to banana.  (Although I'm still going to
take a close look at what's there.)


Thanks,
Derek





From andrew-twisted at puzzling.org  Thu Mar 14 16:13:57 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 15 Mar 2002 10:13:57 +1100
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203141338440.22457-100000@archer.realloc.net>
References: <3C910639.7050908@itamarst.org> <Pine.LNX.4.33.0203141338440.22457-100000@archer.realloc.net>
Message-ID: <20020314231357.GA23827@ritsuko.xware.cx>

On Thu, Mar 14, 2002 at 01:47:26PM -0800, Derek Simkowiak wrote:
> -> Well, on the low level, we were discussing make banana extendable so you
> -> can define custom data types, e.g. a data type for location that is sent 
> -> in 4 bytes. The overhead for you would be one extra byte per message, I 
> -> think.
> 
> 	Not 4 bytes... 4 BITS (for the Z component only).  I don't know
> what they're doing, but that's what their Lead Developer told me.

Yes, but you won't be sending 4 bits as a single packet -- that would have
just as much latency as 4 bytes, in practice.  The TCP/UDP overhead is more
like 40 bytes per packet, after all.

In practice, I suspect you'll be sending more than a single Z component at a
time.  You're more likely to change the X, Y and Z at once; or multiple Zs,
or something.  It all depends on the game, of course.  But my point is that
one byte extra on a X, Y & Z message that you pack into e.g. 4 bytes is
going to be as fast in practice as anything else.

> 	Obviously, the need to fiddle with bitshifting (and other tricks,
> like compressing certain packet types before transmisison) makes me think
> I'll need to write my own network library.

Or extend an existing one...

I really know nothing about the internals of twisted.spread, but extending
it sounds like a better idea than building a new one.

> 	There are also further refinements in the CounterStrike/Half-Life
> version of the Quake2 protocol, although I don't know what those are yet.  
> I'm also dinking around with ideas like using bits to mark the traversal
> of a binary "packet opcode" tree, putting the most common types of packets
> near the top of the tree and the less common (or lower priority) packets
> near the bottom -- this way, the opcode identifier for the most common
> packet would only be one bit (and my networking code would be a nasty mess
> of bitshifting and endian-specific code :).  Given this type of work, I'd
> rather not just "pass it off" to banana.  (Although I'm still going to
> take a close look at what's there.)

Sounds like good ol' Huffman codes to me.  Not a bad idea, though, assuming
that bit-packing gives any genuine advantage -- I'm generally skeptical that
the benefit of being able to squeeze an extra 5% through the network
outweighs the overhead (especially in code complexity) of bit-twiddling at
both ends (yes, I realise CPU is more plentiful than bandwidth).  I'd
personally leave bit twiddling until much later in a project, as I suspect
it could be an unnecessary and premature optimisation compared to the other
techniques mentioned.  Bit-twiddling strikes me as an implementation
optimisation, where algorithmic gains could be much more beneficial... but
then, I've never written a networked game, so I'm just guessing :)

-Andrew.




From glyph at twistedmatrix.com  Thu Mar 14 16:59:18 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 14 Mar 2002 17:59:18 -0600
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du
	lieber..."
In-Reply-To: <20020314231357.GA23827@ritsuko.xware.cx>
References: <3C910639.7050908@itamarst.org>
	<Pine.LNX.4.33.0203141338440.22457-100000@archer.realloc.net> 
	<20020314231357.GA23827@ritsuko.xware.cx>
Message-ID: <1016150358.360.40.camel@janus>

On Thu, 2002-03-14 at 17:13, Andrew Bennetts wrote:
> On Thu, Mar 14, 2002 at 01:47:26PM -0800, Derek Simkowiak wrote:
> > -> Well, on the low level, we were discussing make banana extendable so you
> > -> can define custom data types, e.g. a data type for location that is sent 
> > -> in 4 bytes. The overhead for you would be one extra byte per message, I 
> > -> think.
> > 
> > 	Not 4 bytes... 4 BITS (for the Z component only).  I don't know
> > what they're doing, but that's what their Lead Developer told me.
> 
> Yes, but you won't be sending 4 bits as a single packet -- that would have
> just as much latency as 4 bytes, in practice.  The TCP/UDP overhead is more
> like 40 bytes per packet, after all.

And yes, this is where a lot of often-neglected network trickiness
happens -- actually getting more data into each packet.  Balancing
latency against keeping a full packet payload is hard.

> > 	Obviously, the need to fiddle with bitshifting (and other tricks,
> > like compressing certain packet types before transmisison) makes me think
> > I'll need to write my own network library.
> 
> Or extend an existing one...

And, while pb is designed to be extended to do just this, the amount of
application-specific optimization necessary for a first-person shooter
is really phenomenal.  You'll need to optimize PB down quite a bit
further than it's already been (although PB is built to be optimized, so
it's not really a problem) even to be adequate for the control stream. 
The biggest problem I can see you having with the protocol itself is the
fact that it only operates over TCP.  A UDP extension for doing things
like movement packets would be really handy!

> I really know nothing about the internals of twisted.spread, but extending
> it sounds like a better idea than building a new one.

twisted.spread, and Perspective Broker, are both designed to be highly
extensible.  Itamar is currently working on the final iteration of
banana, which will define some mechanisms for backwards-compatibility,
as well as enabling us to write an RFC.

Consider ancillary services that are going to interoperate with your
game, too; if you are extending PB in order to do your game protocol,
then applications like game browsers, high-score charts on webpages (and
so on) will come together in a snap.  Other folks are also writing games
that use Twisted for networking, and it would be neat if they could all
talk to each other!

> > 	There are also further refinements in the CounterStrike/Half-Life
> > version of the Quake2 protocol, although I don't know what those are yet.  
> > I'm also dinking around with ideas like using bits to mark the traversal
> > of a binary "packet opcode" tree, putting the most common types of packets
> > near the top of the tree and the less common (or lower priority) packets
> > near the bottom -- this way, the opcode identifier for the most common
> > packet would only be one bit (and my networking code would be a nasty mess
> > of bitshifting and endian-specific code :).  Given this type of work, I'd
> > rather not just "pass it off" to banana.  (Although I'm still going to
> > take a close look at what's there.)
> 
> Sounds like good ol' Huffman codes to me.  Not a bad idea, though, assuming
> that bit-packing gives any genuine advantage -- I'm generally skeptical that
> the benefit of being able to squeeze an extra 5% through the network
> outweighs the overhead (especially in code complexity) of bit-twiddling at
> both ends (yes, I realise CPU is more plentiful than bandwidth).  I'd
> personally leave bit twiddling until much later in a project, as I suspect
> it could be an unnecessary and premature optimisation compared to the other
> techniques mentioned.  Bit-twiddling strikes me as an implementation
> optimisation, where algorithmic gains could be much more beneficial... but
> then, I've never written a networked game, so I'm just guessing :)

Networked games are tough, and Derek's concerns are valid.

My point of view on this is that PB cannot handle such a game by itself,
but it defines mechanisms for extensibility that are designed to solve
exactly this sort of problem.  PB's purpose is twofold.  It does provide
a useful, generic, high level protocol that one can use out-of-the-box
in lots of different kinds of applications.  However, I also hope to
provide a sort of meta-standard for protocols that have domain-specific
optimization requirements, so that real systems that solve hard problems
can communicate lower-priority (e.g. "the ones that don't have to be as
close to real time as possible") messages using a mechanism less abusive
to their performance requirements (either on the network in CPU) than
XML-RPC, and easier to add new messages to than something like CORBA. 
For most systems, this should really be good enough.

Ideally I'd like to replace HTTP with it, but that's obviously a bit
more work than has been done :)  (Smash the web!)

Despite the fact that I want to provide a reasonably efficient network
layer, my own humble opinion is that systems that are so
latency-sensitive that PB doesn't work for them out of the box are
probably kidding themselves about the latency issues that arise just by
using the internet... but I think that John Carmack disagrees.

At the very least, PB should help one get off the ground and start
prototyping game functionality really early, before one worries about
seriously packing the network protocol; if one's game is just a 3D
shooter this is probably not that interesting.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020314/e34e0f76/attachment.sig>

From glyph at twistedmatrix.com  Thu Mar 14 17:15:52 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 14 Mar 2002 18:15:52 -0600
Subject: [Twisted-Python] Issues with roots.Collections in regards to
	Coil
In-Reply-To: <3C901D4A.2080006@itamarst.org>
References: <3C901D4A.2080006@itamarst.org>
Message-ID: <1016151352.360.48.camel@janus>

On Wed, 2002-03-13 at 21:47, Itamar Shtull-Trauring wrote:
> (If this doesn't make sense, you can probably ignore it. At some point 
> we might make a twisted-dev list.)
> 
> Issues:
> 
> 1) The problem where you click on a virtual host's sub-Resource in web 
> coil and you can't configure it. Dunno why. (I fixed some similar effect 
> bugs which were caused by *someone* using MOVED_PERMANENTLY and ignoring 
> the fact this gets cached by browsers, but that's not the issue here.)

Whoops.  Thank you for showing me The Way :-).

I'll poke around the configuration at some point, but I don't really
have time for it now.

> 2) The UI assumes entities in a collection are mutable, i.e. first 
> created, and then separately configured via a Configurator. This 
> conflicts with stuff like making a Collection for configuring a mapping 
> of strings (e.g. the mime types mapping in static.File). Possible 
> solution is a custom Collection class for these situations that gets its 
> own web coil UI.

Yes.  This really needs to have its own web UI.  Are you going to be
doing it?

> 3) Collections of Configurators or of configurables? I would think that 
> they should stay the way they are  -- collections of configurables. It's 
> easy to wrap an object coming from a collection - that's what is done 
> now. And it's easier to code the Collection this way, esp. since the 
> configurable classes can be collections too, in cases where it makes 
> sense (e.g. web.resource.Resource.)

> In most situations of course the Collections would only be coded in the 
> coil plugin, but it's useful to be able to have the configurable class 
> be a Collection.

I had to re-read this point a few times, but I agree :-).  The way that
it works now is nice, because you have a good degree of flexibility in
where you put the code that builds the virtual configuration hierarchy.

> What were your issues, glyph?

Right now I only have one minor one -- why is the factory function an
argument to registerConfigurator, but the configurableClass and
configName are both attributes of the Configurator?  It seems like they
should all be one or the other.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020314/bad3724c/attachment.sig>

From carmstro at twistedmatrix.com  Thu Mar 14 17:08:05 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 14 Mar 2002 19:08:05 -0500
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du
	lieber..."
In-Reply-To: <Pine.LNX.4.33.0203132215240.18886-100000@archer.realloc.net>
References: <Pine.LNX.4.33.0203132215240.18886-100000@archer.realloc.net>
Message-ID: <1016150893.6712.0.camel@radii>

(note, this message is a bit stale. I composed it yesterday, but my
mail server (twistedmatrix.com) went down for a bit.)

On Thu, 2002-03-14 at 01:31, Derek Simkowiak wrote:
> -> well, the piece of Twisted that is immediately relvant for this type of
> -> application is twisted.spread - comprised of "pb", "jelly" and "banana".
> -> these provide a distributed object system with marshalling, serialization,
> -> networked observation and reference counting. All things that are useful for
> -> building on-line games!
> 
> 	Very cool (although, I have to say it, I'm not really a fan of
> 'cute' API names.  I much prefer clarity and conciseness.)

>From the coding standard:
 Try to choose names which are both easy to remember and meaningful.
 Some silliness is OK at the module naming level (see twisted.spread...)
 but when choosing class names, be as precise as possible.  Write code
 with a dictionary and thesaurus open on the table next to you.

At least 'spread' and 'pb' are sane names -- spread is a toolkit for
spreadable computing (as opposed to distributed computing, which we make
the dinction with because spreadable is translucent as opposed to
transparent), and we have PerspectiveBroker which is.. a broker for
Perspectives (which were named with the rule of clarity and conciseness
in mind -- in fact, Glyph spent an obscene amount of time coming up with
this name). :-) I'm only saying all this because I think disliking the
name is pretty irrelevant when it comes to code ;-) Anyway, see below,
not *all* of this message is a troll ;-)

> 	Also, twisted.spread could easily be confused with the "Spread" C
> library, which is also designed for use in distributed systems.  It has a
> somewhat different purpose, but my first thought was that twisted.spread
> was a Python interface to the Spread library (which would be really useful
> for Twisted, by the way).  See http://www.spread.org/.

Well, there's not much we can do about this but try to make it clear
that it's not in the documentation/website (which we do).

> -> This technology is not optimized at the level of Quake or Tribes style
> -> protocols, but it is infinitely more flexible and provide a much higher
> -> level of functionality.
> 
> 	Unfortunately, most people _HATE_ a laggy gaming experience (i.e.,
> see the "Damn Lag" T-Shirt at ThinkGeek.com).  For my application, the
> need for efficiency outweighs the other features of twisted.spread.

You might want to take a closer look at the banana protocol. It was
definitely implemented with efficiency and extensibility in mind. My
point is, a UDP alternative for it would be very cool, especially if we
could integrate it higher-level abstraction, like a subset of/something
similar to PB, for example (this would an interesting challenge to think
about). The biggest problem here is CPU-time that banana/jelly take up
-- but this problem is being targetted, especially with dash's work on
twisted.eco. :-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Thu Mar 14 19:25:41 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 14 Mar 2002 21:25:41 -0500
Subject: [Twisted-Python] Issues with roots.Collections in regards to	Coil
References: <3C901D4A.2080006@itamarst.org> <1016151352.360.48.camel@janus>
Message-ID: <3C915BA5.7080004@itamarst.org>

> Right now I only have one minor one -- why is the factory function an
> argument to registerConfigurator, but the configurableClass and
> configName are both attributes of the Configurator?  It seems like they
> should all be one or the other.

Mmmm, well, I think there was some reason I made configurableClass an 
attribute - probably so Configurator can check that it is getting the 
right types of instances. But that's not important. And you can look at 
a Configurator and see what it configures. But if it bothers you a lot 
feel free to refactor the API and fix up twisted.coil.plugins.

The factory is optional, and would have to be a class method, and python 
doesn't do class methods in a nice way before python 2.2. It could be an 
instance method, but that's just icky, it's a factory after all. So the 
factory has to be a separare argument to registerConfigurator.






From abo at minkirri.apana.org.au  Thu Mar 14 19:51:59 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Fri, 15 Mar 2002 13:51:59 +1100
Subject: [Twisted-Python] "3D Game Using Twisted?", or: "Ach du lieber..."
In-Reply-To: <Pine.LNX.4.33.0203141303010.22142-100000@archer.realloc.net>
References: <HOEEKPCOKELHCNIJNMAGAECACFAA.sean@twistedmatrix.com> <Pine.LNX.4.33.0203141303010.22142-100000@archer.realloc.net>
Message-ID: <20020315025159.GD27353@minkirri.apana.org.au>

On Thu, Mar 14, 2002 at 01:13:51PM -0800, Derek Simkowiak wrote:
> -> "Lag" is much more of an issue than just protocol design.
> 
> 	Of course, and I have been studying heavily all of the things you
> mentioned (prediction, et. al.).  But just to give you an idea of how
> optimized the 3D protocols are, Sony's PlanetSide only uses 4 bits for the
> Z component of it's entity origin update packets (because they are using
> tricks to get around the loss in granularity).
> 
> 	Also, as the guy who going to have to write the code, I'm kind of 
> looking forward to playing with different optimizations and "tricks".  If 
> I'm just calling somebody else's library, I lose all that fun :)

My advice with "tricks" is avoid them until the last moment of
implementation. Too many designs get complicated beyond redemption by
"clever tricks" too early in the piece. You end up with a tangled mess that
breaks every time you look at it, and usualy turns out slower than a
"trick-free" clean implementation of a good design.

> -> least consider using extensions to pb rather than writing your own protocol
> -> framework.
> 
> 	Because you are so persistent in this recommendation, I will take
> a very close look at pb.  But presently my intuition says I'll be writing
> my own.

My advice would be to prototype using Twisted, then optimise to C later if
it is needed. Python will allow you to easily re-factor the whole design
again and again untill you get it right. If you start in C, the re-factoring
will hurt enough that you will avoid it and employ "tricks" instead :-)

My gut feeling is that a good twisted implementation will be fast enough at
throwing bytes over a wire. Optimising to C will only buy you CPU, not
reduced latency and/or bandwidth. The really critical thing will be the
design, ie what data you send, and how it is used to present a consistant
world view.

Be prepared to think "outside the box" when at the design stage, and
prototype and experiment extensively. There are some potentialy groovy ideas
floating around based on "distributed data fusion", where all the nodes
maintain their own view of the world, which is used to correct and is
corrected by the other nodes "world views", using karmen (spel?) filter
techniques. This is a generic approach to resolving a concensus world view
between multiple distributed sources of information.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From nils at paragon.no  Sat Mar 16 21:20:51 2002
From: nils at paragon.no (Nils R Grotnes)
Date: Sun, 17 Mar 2002 04:20:51 +0000
Subject: [Twisted-Python] This seems too good to be true... :-)
Message-ID: <20020317052557.ILPC25525.fep01-svc.swip.net@turids>

Hi!

I know I probably should lurk-a-lot-first, so please just tell me to shut
up if I'm somehow out of line here...

I like to state up front that I'm fresh, fresh and fresh. I switched to Debian
just recently, I have just read my first Python book, and I didn't know this
place existed until a week ago. The latter is what I wonder about in the
Subject. How come it was so hard to find you? I have lurked quite a lot on
comp.lang.python and c.l.p.announce, and I have surfed around on a lot of
Python websites, but the first I ever heard of twisted was in c.l.p.a on
the 9th. I'm very impressed with your setup and what I have seen of the code
so far, so I figure _something_ must be wrong. :-)

Ah, well. I hope I'm wrong, because I'd love both to use this stuff, and
help out. I have coded a few (professional) projects before, but only in
VB, so I'll keep my defiled hands off the code here until I've de-learned
most of my bad habits... :-) Hopefully I can do some bug-hunting, testing
and maybe even a little documentation after a while? (I dual boot to Win95
and have installed ActivePython there, if that can be useful.)

My first try to do more than babble, will be a suggestion I couldn't find
anything about in the archive; On my Debian, the package is installed in
/usr/lib/python2.1/site-packages/twisted, but there's no twisted.pth file
in the site-packages directory. After I added such a file (only containing
the word "twisted" without the apostrophes) I now have twisted in sys.path
when I start a Python shell. If it was missing for some good reason, I'd
like to know it...

Nils



From carmstro at twistedmatrix.com  Sat Mar 16 23:21:43 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 17 Mar 2002 01:21:43 -0500
Subject: [Twisted-Python] This seems too good to be true... :-)
In-Reply-To: <20020317052557.ILPC25525.fep01-svc.swip.net@turids>
References: <20020317052557.ILPC25525.fep01-svc.swip.net@turids>
Message-ID: <1016346105.4228.90.camel@radii>

On Sat, 2002-03-16 at 23:20, Nils R Grotnes wrote:
> Hi!
> 
> I know I probably should lurk-a-lot-first, so please just tell me to shut
> up if I'm somehow out of line here...

You're far from out of line, sir :-)

[clip..]
> Python websites, but the first I ever heard of twisted was in c.l.p.a on
> the 9th. I'm very impressed with your setup and what I have seen of the code
> so far, so I figure _something_ must be wrong. :-)

Oh, you'll probably be hearing more about Twisted in the coming
months.... muwahahaha!

> Ah, well. I hope I'm wrong, because I'd love both to use this stuff, and
> help out. I have coded a few (professional) projects before, but only in
> VB, so I'll keep my defiled hands off the code here until I've de-learned
> most of my bad habits... :-) Hopefully I can do some bug-hunting, testing
> and maybe even a little documentation after a while? (I dual boot to Win95
> and have installed ActivePython there, if that can be useful.)

This is great! We would love your help. Documentation and win32 support
are two things that need focus. More heads working on these would be a
_very_ good thing :-)

> My first try to do more than babble, will be a suggestion I couldn't find
> anything about in the archive; On my Debian, the package is installed in
> /usr/lib/python2.1/site-packages/twisted, but there's no twisted.pth file
> in the site-packages directory. After I added such a file (only containing
> the word "twisted" without the apostrophes) I now have twisted in sys.path
> when I start a Python shell. If it was missing for some good reason, I'd
> like to know it...

You shouldn't need a .pth file, here. You're supposed to qualify all
packages inside the 'twisted' package. That is, rather than doing
"import internet", you do "from twisted import internet" or "import
twisted.internet".

So anyway, what sorts of projects are you interested in doing with
Twisted?

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Sun Mar 17 16:43:08 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 17 Mar 2002 18:43:08 -0500
Subject: [Twisted-Python] We now have a bug tracker
Message-ID: <3C952A0C.2050201@itamarst.org>

http://twistedmatrix.com/users/itamarst.twistd/bugs/

It's using twisted.bugs, which is of course still a work in progress, 
but it's good enough to add bugs to. Please submit all and any bugs, 
feature wishes and so on.




From tyler.wilson at acm.org  Sun Mar 17 18:34:05 2002
From: tyler.wilson at acm.org (Tyler W. Wilson)
Date: Sun, 17 Mar 2002 21:34:05 -0400
Subject: [Twisted-Python] Some Win32 comments
Message-ID: <3C95440D.10807@acm.org>

I was trying to get the Twisted IM client running, and have a few 
comments related to config issues on Win32. Here they are:

1 running 'python setup.py install' copies the twisted folder to the 
<python>\lib\site-packages folder, which is okay. but if you change to 
the Twisted<version> folder and do 'python bin\im', it will be using the 
sources from the original location, NOT the site-packages location.
 
2 similar to the above, if you set PYTHONPATH to point to 
Twisted<version> folder, as it says to do in the README, the original 
twisted files will be used, not those copied to the site-packages folder.
 
so, given 1 & 2, do we really need to do the setup.py? It should be 
noted in the README(.win32?) that users should either: 1) set PYTHONPATH 
to Twisted<version> and NOT run setup.py, and include the full path to 
im, mktap, etc, or 2) do NOT set PYTHONPATH, run setup.py, and still 
include the fullpath to the bin folder.
 
i would also suggest that the files in the bin folder have the .py 
extension, so that on Windows we can associate them to the python 
interpreter, which would simplify things.

3 im (Tk) fails to save config state, if HOME is not set, since the ~ 
will return exactly, and this is an invalid filename charcter under 
Win9x. Either split it to check, or put in an error/warning.
 
 here is a fix i made to mine, which should work on all platforms:
 
tkim.py, line 912:
      path = ".imsaved"
      home = os.path.expanduser("~")
      if home != "~":
           path = home+os.sep+path

Thanks,
Tyler




From andrew-twisted at puzzling.org  Sun Mar 17 18:57:34 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 18 Mar 2002 12:57:34 +1100
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <3C95440D.10807@acm.org>
References: <3C95440D.10807@acm.org>
Message-ID: <20020318015734.GA25582@ritsuko.xware.cx>

On Sun, Mar 17, 2002 at 09:34:05PM -0400, Tyler W. Wilson wrote:
> 3 im (Tk) fails to save config state, if HOME is not set, since the ~ 
> will return exactly, and this is an invalid filename charcter under 
> Win9x. Either split it to check, or put in an error/warning.

Hmm.  It works fine for me on Win2k:

>>> os.path.expanduser('~')
'C:\\Documents and Settings\\AndrewB'

Win98 really isn't meant to be a server OS, and Twisted is largely a library
for writing servers.  On the other hand, the IM is more of an end-user app,
so probably should be more lenient about such things.

You could also try using the Cygwin version of Python, which is more
unix-like.  I'm not sure if it has Tcl/Tk libraries, though...

-Andrew.




From carmstro at twistedmatrix.com  Sun Mar 17 19:04:50 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 17 Mar 2002 21:04:50 -0500
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <3C95440D.10807@acm.org>
References: <3C95440D.10807@acm.org>
Message-ID: <1016417091.11167.9.camel@radii>

On Sun, 2002-03-17 at 20:34, Tyler W. Wilson wrote:
> I was trying to get the Twisted IM client running, and have a few 
> comments related to config issues on Win32. Here they are:
> 
> 1 running 'python setup.py install' copies the twisted folder to the 
> <python>\lib\site-packages folder, which is okay. but if you change to 
> the Twisted<version> folder and do 'python bin\im', it will be using the 
> sources from the original location, NOT the site-packages location.
>  
> 2 similar to the above, if you set PYTHONPATH to point to 
> Twisted<version> folder, as it says to do in the README, the original 
> twisted files will be used, not those copied to the site-packages folder.
>  
> so, given 1 & 2, do we really need to do the setup.py? It should be 
> noted in the README(.win32?) that users should either: 1) set PYTHONPATH 
> to Twisted<version> and NOT run setup.py, and include the full path to 
> im, mktap, etc, or 2) do NOT set PYTHONPATH, run setup.py, and still 
> include the fullpath to the bin folder.

The README doesn't mention setup.py at all; it only mentions that you
should set your PYTHONPATH environment variable.

> i would also suggest that the files in the bin folder have the .py 
> extension, so that on Windows we can associate them to the python 
> interpreter, which would simplify things.

Would it be better to detect if we're on windows and rename all the bin/
scripts to foo.py, or maybe include a set of supplementary .bat files
that just ran 'python bin/foo.py'? I'll implement this either way. (if
we go with the former option, it'll require win32 users to run setup.py,
which is probably better any way)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From tyler.wilson at acm.org  Sun Mar 17 19:27:25 2002
From: tyler.wilson at acm.org (Tyler W. Wilson)
Date: Sun, 17 Mar 2002 22:27:25 -0400
Subject: [Twisted-Python] Some Win32 comments
References: <3C95440D.10807@acm.org> <20020318015734.GA25582@ritsuko.xware.cx>
Message-ID: <3C95508D.1000602@acm.org>

Andrew Bennetts wrote:

>On Sun, Mar 17, 2002 at 09:34:05PM -0400, Tyler W. Wilson wrote:
>
>>3 im (Tk) fails to save config state, if HOME is not set, since the ~ 
>>will return exactly, and this is an invalid filename charcter under 
>>Win9x. Either split it to check, or put in an error/warning.
>>
>
>Hmm.  It works fine for me on Win2k:
>
>>>>os.path.expanduser('~')
>>>>
>'C:\\Documents and Settings\\AndrewB'
>
Windows NT and above (Win2K, WinXP) do have a concept of users and home 
directories, so this is logical. Win9x does not really. Or maybe it is 
an issue with Python?

>
>Win98 really isn't meant to be a server OS, and Twisted is largely a library
>for writing servers.  On the other hand, the IM is more of an end-user app,
>so probably should be more lenient about such things.
>
I lean towards the latter. I would like to do some work on the TkIM 
client in Twisted, to get some experience and 'give something back'. I 
always liked the Jabber approach (the protocols being handled on the 
server-side). But they did not keep the ICQ gateway up to date, so I 
stopped using it. But a Jabber protocol in Twisted may go further (and 
later perhaps have a Jabber server written in Twisted).

>
>You could also try using the Cygwin version of Python, which is more
>unix-like.  I'm not sure if it has Tcl/Tk libraries, though...
>
I will look for some binaries. I am not set up with cygwin at the 
moment, being on a slow-ass modem connection.

>
>-Andrew.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20020317/a6a5bfdc/attachment.html>

From tyler.wilson at acm.org  Sun Mar 17 19:50:54 2002
From: tyler.wilson at acm.org (Tyler W. Wilson)
Date: Sun, 17 Mar 2002 22:50:54 -0400
Subject: [Twisted-Python] Some Win32 comments
References: <3C95440D.10807@acm.org> <1016417091.11167.9.camel@radii>
Message-ID: <3C95560E.8010909@acm.org>

Christopher Armstrong wrote:

>On Sun, 2002-03-17 at 20:34, Tyler W. Wilson wrote:
>
>>I was trying to get the Twisted IM client running, and have a few 
>>comments related to config issues on Win32. Here they are:
>>
>>1 running 'python setup.py install' copies the twisted folder to the 
>><python>\lib\site-packages folder, which is okay. but if you change to 
>>the Twisted<version> folder and do 'python bin\im', it will be using the 
>>sources from the original location, NOT the site-packages location.
>> 
>>2 similar to the above, if you set PYTHONPATH to point to 
>>Twisted<version> folder, as it says to do in the README, the original 
>>twisted files will be used, not those copied to the site-packages folder.
>> 
>>so, given 1 & 2, do we really need to do the setup.py? It should be 
>>noted in the README(.win32?) that users should either: 1) set PYTHONPATH 
>>to Twisted<version> and NOT run setup.py, and include the full path to 
>>im, mktap, etc, or 2) do NOT set PYTHONPATH, run setup.py, and still 
>>include the fullpath to the bin folder.
>>
>
>The README doesn't mention setup.py at all; it only mentions that you
>should set your PYTHONPATH environment variable.
>
True, but two items: 1) I believe it is 'standard procedure' to do a 
python setup.py for any new Python modules. And 2) I had asked on the 
IRC channels about this, and they said you shoulw run setup.py. So, I 
think it should be mentioned either way in the README.

>
>>i would also suggest that the files in the bin folder have the .py 
>>extension, so that on Windows we can associate them to the python 
>>interpreter, which would simplify things.
>>
>
>Would it be better to detect if we're on windows and rename all the bin/
>scripts to foo.py, or maybe include a set of supplementary .bat files
>that just ran 'python bin/foo.py'? I'll implement this either way. (if
>we go with the former option, it'll require win32 users to run setup.py,
>which is probably better any way)
>
Is there is an issue with just renaming them with a py extension on all 
platforms? I mean, they are Python source files. And all the other 
Twisted Python source files have .py extensions. I know you use these as 
scripts on *nix.

And either way, on Windows you should note in the readme that the system 
PATH should include the Twisted bin directory. It doesnt mention this 
for Unix either, but I suppose it is needed, isn't it?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20020317/c11a0aad/attachment.html>

From nils at paragon.no  Sun Mar 17 19:52:47 2002
From: nils at paragon.no (Nils R Grotnes)
Date: Mon, 18 Mar 2002 02:52:47 +0000
Subject: [Twisted-Python] This seems too good to be true... :-)
References: <20020317052557.ILPC25525.fep01-svc.swip.net@turids> <1016346105.4228.90.camel@radii>
Message-ID: <20020318024911.JWUK19591.fep04-svc.swip.net@turids>

Christopher

> Oh, you'll probably be hearing more about Twisted in the coming
> months.... muwahahaha!

Ah! (Or should that be: Eh? :-) I actually stumbled into this place because
I was searching for good DNS support in Python. There's a sourceforge package
that I think is supposed to be added to the standard release sometime in
the future. But I found it very incomplete, and rather ugly. I haven't looked
very hard into the twisted version, but superficially it looks much cleaner.

> > most of my bad habits... :-) Hopefully I can do some bug-hunting, testing
> > and maybe even a little documentation after a while? (I dual boot to Win95
> > and have installed ActivePython there, if that can be useful.)
> This is great! We would love your help. Documentation and win32 support
> are two things that need focus. More heads working on these would be a
> _very_ good thing :-)

I'm in, then! I must warn everyone that I'm currently on a 28.8 Kb modem.
I'm working on getting a cable connection, but until then I'm slow to reply
and not too keen on repeatedly downloading huge chunks of bytes...

> > /usr/lib/python2.1/site-packages/twisted, but there's no twisted.pth file
> You shouldn't need a .pth file, here. You're supposed to qualify all
> packages inside the 'twisted' package.

I get it. Looking into the Bobo, HTMLgen, Numeric, PIL and gadfly, which
are packages that use such a file, I see they have just plonked all their code
into one sub-directory.

> So anyway, what sorts of projects are you interested in doing with
> Twisted?

I'm not the typically reliable, plodding kind of worker. So I doubt I'll
ever try to volunteer for the news column... But I'm open to help out in
more time limited projects, if someone need that. Just send me an email.

I do have some ideas for coding projects, for example I am wondering if it
will be possible to rewrite this Pyne email+news client I'm currently using,
with twisted code and OO-structure. Pyne is written in Python, and have a
OE/Pegasus look that I think is rather good. Having a GUI interface that
caters to those of us used to having all messaging components in one application,
while having the *nix multi-user and modular structure in the background,
is what I'm aiming at. Though Pyne is good on the surface, the author readily
admitted that very OO it is not. He also does not update his website or reply
to emails any more...

But that's for the future, I'm currently just reading and learning.

What I will be doing, is taking notes about nits. As I'm reading webpages
and documentation, I notice errors that are probably very hard to see once
the text has been read a few times. Is there some link or address I can send
such nitlets to? Maybe somewhere on the PoundPython wikiwiki? Maybe I should
just make one...

And I'm always open to other suggestions.

Nils



From carmstro at twistedmatrix.com  Sun Mar 17 19:46:38 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 17 Mar 2002 21:46:38 -0500
Subject: [Twisted-Python] This seems too good to be true... :-)
In-Reply-To: <20020318024911.JWUK19591.fep04-svc.swip.net@turids>
References: <20020317052557.ILPC25525.fep01-svc.swip.net@turids>
	<1016346105.4228.90.camel@radii> 
	<20020318024911.JWUK19591.fep04-svc.swip.net@turids>
Message-ID: <1016419600.11358.15.camel@radii>

On Sun, 2002-03-17 at 21:52, Nils R Grotnes wrote:
> Christopher
[snip..]
> I do have some ideas for coding projects, for example I am wondering if it
> will be possible to rewrite this Pyne email+news client I'm currently using,
> with twisted code and OO-structure. Pyne is written in Python, and have a
> OE/Pegasus look that I think is rather good. Having a GUI interface that
> caters to those of us used to having all messaging components in one application,
> while having the *nix multi-user and modular structure in the background,
> is what I'm aiming at. Though Pyne is good on the surface, the author readily
> admitted that very OO it is not. He also does not update his website or reply
> to emails any more...

This is excellent! A few of us are interested in doing a mail client as
well. ^.^

> But that's for the future, I'm currently just reading and learning.
> 
> What I will be doing, is taking notes about nits. As I'm reading webpages
> and documentation, I notice errors that are probably very hard to see once
> the text has been read a few times. Is there some link or address I can send
> such nitlets to? Maybe somewhere on the PoundPython wikiwiki? Maybe I should
> just make one...

Oh, the mailling lists here is absolutely fine. Also, if you want to get
in contact with any of us in real-time, most of the developers hang out
on the #Python and #Twisted channels on the irc.openprojects.net IRC
network. Drop by and have a chat! (or have you already been there, and I
didn't realize you were? ^.^)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From andrew at puzzling.org  Sun Mar 17 18:46:51 2002
From: andrew at puzzling.org (Andrew Bennetts)
Date: Mon, 18 Mar 2002 12:46:51 +1100
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <3C95440D.10807@acm.org>
References: <3C95440D.10807@acm.org>
Message-ID: <20020318014651.GA25463@ritsuko.xware.cx>

On Sun, Mar 17, 2002 at 09:34:05PM -0400, Tyler W. Wilson wrote:
> so, given 1 & 2, do we really need to do the setup.py? It should be 
> noted in the README(.win32?) that users should either: 1) set PYTHONPATH 
> to Twisted<version> and NOT run setup.py, and include the full path to 
> im, mktap, etc, or 2) do NOT set PYTHONPATH, run setup.py, and still 
> include the fullpath to the bin folder.
> 
> i would also suggest that the files in the bin folder have the .py 
> extension, so that on Windows we can associate them to the python 
> interpreter, which would simplify things.

I'm thinking that the best solution is probably more like what PyChecker
does.  Basically, install the bin scripts into e.g. c:\python22\scripts,
possibly as batch files that call the original scripts, possibly as the
original scripts with ".py" added.  I've found it useful to add the scripts
directory to my %PATH% for pychecker, and so this (for me at least :) would
make things like twistd automatically available to my command prompt.

-Andrew.




From glyph at twistedmatrix.com  Sun Mar 17 21:03:13 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 17 Mar 2002 22:03:13 -0600
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <3C95440D.10807@acm.org>
References: <3C95440D.10807@acm.org>
Message-ID: <20020318040313.GA14002@twistedmatrix.com>

On Sun, Mar 17, 2002 at 09:34:05PM -0400, Tyler W. Wilson wrote:
> I was trying to get the Twisted IM client running, and have a few 
> comments related to config issues on Win32. Here they are:

Thanks for your feedback.

> [snip stuff about setup.py]

> i would also suggest that the files in the bin folder have the .py 
> extension, so that on Windows we can associate them to the python 
> interpreter, which would simplify things.

The real problem here is that Windows isn't very command-line centric,
so there's no clear way to do this.  The UNIX procedure is to put bin/*
in /usr/bin/ using your package manager (debian's "apt", for example).

What we need is a win32 equivalent to the bin/* scripts -- probably a
few .pyw files with trivial GUIs on them.  Renaming these to e.g.
twistd.py would cause several problems -- 1, twistd (et. al.) is not a
python module and should not be importable with 'import'; 2, these
scripts would apparently do nothing when invoked in Windows, unless you
have them bring up a terminal window -- in which case they will do
nothing but briefly flash a help message in a terminal window which will
disappear.

Rather than documenting the current state of affairs for win32 users, we
ought to make things work in an appropriately windows-y way instead of
relying on the fact that (some of) the stuff in bin/ just happens to run
on Windows.  Part of this Windows-centric experience of Twisted involves
COIL being fully functional, which it is not yet; that's why we haven't
started polishing up the distribution.  Soon though :-)

> 3 im (Tk) fails to save config state, if HOME is not set, since the ~ 
> will return exactly, and this is an invalid filename charcter under 
> Win9x. Either split it to check, or put in an error/warning.

Thanks for the fix -- Paul, any comments? :-)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From j.her at t-online.de  Mon Mar 18 11:50:36 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Mon, 18 Mar 2002 19:50:36 +0100
Subject: [Twisted-Python] We now have a bug tracker
In-Reply-To: <3C952A0C.2050201@itamarst.org>
Message-ID: <16n2D4-1cVvO4C@fwd06.sul.t-online.com>

On Sun, 17 Mar 2002 18:43:08 -0500, Itamar Shtull-Trauring wrote:

>http://twistedmatrix.com/users/itamarst.twistd/bugs/
>
>It's using twisted.bugs, which is of course still a work in progress, 
>but it's good enough to add bugs to. Please submit all and any bugs, 
>feature wishes and so on.

Hmmm, wouldn't a binding to RoundUp be more wise?
Ciao, Jürgen





From j.her at t-online.de  Mon Mar 18 12:02:15 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Mon, 18 Mar 2002 20:02:15 +0100
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <20020318040313.GA14002@twistedmatrix.com>
Message-ID: <16n2OK-0AHxSqC@fwd06.sul.t-online.com>

On Sun, 17 Mar 2002 22:03:13 -0600, Glyph Lefkowitz wrote:

>Rather than documenting the current state of affairs for win32 users, we
>ought to make things work in an appropriately windows-y way instead of
>relying on the fact that (some of) the stuff in bin/ just happens to run
>on Windows.  Part of this Windows-centric experience of Twisted involves
>COIL being fully functional, which it is not yet; that's why we haven't
>started polishing up the distribution.  Soon though :-)

I think I volunteered some time ago (and never came around to it) to
add distutils overloads for scripts like I have in my projects, and in
RoundUp. If you don't want to go the GUI route directly, I can finally
do it.

Ciao, Jürgen





From twisted at itamarst.org  Mon Mar 18 13:05:32 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 18 Mar 2002 15:05:32 -0500
Subject: [Twisted-Python] Some Win32 comments
References: <16n2OK-0AHxSqC@fwd06.sul.t-online.com>
Message-ID: <3C96488C.8000600@itamarst.org>

Juergen Hermann wrote:

> I think I volunteered some time ago (and never came around to it) to
> add distutils overloads for scripts like I have in my projects, and in
> RoundUp. If you don't want to go the GUI route directly, I can finally
> do it.

Yay! Please. Although it won't be exactly the same, since the various 
twisted binaries aren't designed be imported - if you do it please tell 
the list first what changes you are going to do.




From twisted at itamarst.org  Mon Mar 18 13:09:11 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 18 Mar 2002 15:09:11 -0500
Subject: [Twisted-Python] We now have a bug tracker
References: <16n2D4-1cVvO4C@fwd06.sul.t-online.com>
Message-ID: <3C964967.5020603@itamarst.org>

Juergen Hermann wrote:

> Hmmm, wouldn't a binding to RoundUp be more wise?

We tried roundup - at the time it required manually creating user
accounts, thus not allowing public viewing of bugs, so no one ever
used it.

Anyway, this is a way of eating our own dogfood in terms of database
integration and the webwidgets code. The best testing for code is
using it (automated testing is a necessity of course, but it's never
good enough.)




From j.her at t-online.de  Mon Mar 18 13:32:49 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Mon, 18 Mar 2002 21:32:49 +0100
Subject: [Twisted-Python] Some Win32 comments
In-Reply-To: <3C96488C.8000600@itamarst.org>
Message-ID: <16n3o0-2DBknoC@fwd06.sul.t-online.com>

On Mon, 18 Mar 2002 15:05:32 -0500, Itamar Shtull-Trauring wrote:

>Yay! Please. Although it won't be exactly the same, since the various 
>twisted binaries aren't designed be imported - if you do it please tell 
>the list first what changes you are going to do.

Part of the restructuring is to make them exactly that! And I'll start
with an easy one.
Ciao, Jürgen





From j.her at t-online.de  Mon Mar 18 16:10:18 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Tue, 19 Mar 2002 00:10:18 +0100
Subject: [Twisted-Python] cvs scripts failure
Message-ID: <16n6GR-1SEEyGC@fwd06.sul.t-online.com>

some checkin script fails:

WARNING: Python C API version mismatch for module cBanana:
  This Python has API version 1010, module cBanana has version 1009.
<__main__.MyOptions instance at 0x8209f34>
Traceback (most recent call last):
  File "loginfo.py", line 161, in ?
    config.parseOptions()
  File "/home/jh/lib/python/twisted/python/usage.py", line 119, in
parseOptions
    for long, short in flags:
Directory /cvs/Twisted/twisted/scripts added to the repository
ValueError: unpack tuple of wrong size


time for a version-specific bangpath?
Ciao, Jürgen





From j.her at t-online.de  Mon Mar 18 16:12:28 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Tue, 19 Mar 2002 00:12:28 +0100
Subject: [Twisted-Python] cvs script failure
Message-ID: <16n6IW-1eQiW0C@fwd06.sul.t-online.com>

Hi!

On a second look, this seems to be caused by CVS using my local
settings. Still, shouldn't the CVS scripts take care to use a special,
well-known system path to "their" Twisted?

Ciao, Jürgen





From j.her at t-online.de  Mon Mar 18 16:59:19 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Tue, 19 Mar 2002 00:59:19 +0100
Subject: [Twisted-Python] mktap seems to work
Message-ID: <16n71r-1ECCECC@fwd06.sul.t-online.com>

[...\python22]Scripts\mktap.bat --help web
Usage: mktap web [options]
Options:
      --personal    Instead of generating a webserver, generate a
                    ResourcePublisher which listens on
~/.twistd-web-service
...

Ciao, Jürgen





From j.her at t-online.de  Tue Mar 19 14:29:12 2002
From: j.her at t-online.de (Juergen Hermann)
Date: Tue, 19 Mar 2002 22:29:12 +0100
Subject: [Twisted-Python] New scripts
Message-ID: <16nRA7-1gfJAGC@fwd02.sul.t-online.com>

Hi!

mktap is now fully moved to twisted.scripts. Would be nice if people
moved the commands they use the most, or are related to the part they
developed.

What to do:

 1. Copy the code of the command to twisted/scripts/command.py. Then
first commit it unchanged, so there is a clear history!

 1. Move as much code as possible into a function named run(); try to
avoid top-level code if you can, since that is a problem for doc-tools,
pychecker, etc.

 2. Replace the command in bin/command by its stub, i.e. by the new
preamble + the import/run() combo. Don't skip this step, since
otherwise ppl will start to edit at two places, which leads to chaos!

See bin/mktap and twisted/scripts/mktap.py for an example.


In the long run, especially when all commands are moved, be can remove
the bin directory, since it's created in build/scripts anyway. For now,
it allows smooth transition.

Ciao, Jürgen





From Drew.Whitehouse at anu.edu.au  Tue Mar 19 21:14:09 2002
From: Drew.Whitehouse at anu.edu.au (Drew Whitehouse)
Date: Wed, 20 Mar 2002 15:14:09 +1100
Subject: [Twisted-Python] win32 process problem
Message-ID: <CHEJLPEDBFMBIJDIFHFLAEMPCIAA.Drew.Whitehouse@anu.edu.au>

Hi Itamar,

I'm just getting into twisted, after our IRC chat the other day. Looks
like it does everything I need (plus a lot more !). I'm having some
trouble with Process and win32, i.e. I'm already using bleeding edge
CVS versions ... I'm trying to run a http server which services XMLRPC
calls. The XMLRPC calls then have to launch a process that the server
needs to keep track of, getting notified when the process exits.
Anyhow it seems the new win32 process stuff is giving trouble. It only
allows one XMLRPC call before the server hangs. I'm testing with the
following code.

I realize that this code is brand new, but thought I'd send it along
in case you hadn't seen the problem already.

-Drew

-----------server.py------------------

import sys,os
if sys.platform == 'win32':
    from twisted.internet import win32
    print 'Installing WIN32 version of process handling etc ...'
    win32.install()

from twisted.web import xmlrpc
from twisted.python import defer
import xmlrpclib

class Echoer(xmlrpc.XMLRPC):
    def _getFunction(self, functionPath):
        """Convert the functionPath to a method beginning with
'xmlrpc_'.

        For example, 'echo' returns the method 'xmlrpc_echo'.
        """
        f = getattr(self, "xmlrpc_%s" % functionPath, None)
        if f:
            return f
        else:
            raise xmlrpc.NoSuchFunction
    def xmlrpc_hello(self):
        """Return 'hello, world'."""
        return 'hello, world!'

def main():
    from twisted.internet.app import Application
    from twisted.web import server
    app = Application("xmlrpc")
    r = Echoer()
    app.listenTCP(7080, server.Site(r))
    app.run(0)

if __name__ == '__main__':
    main()

and

-------client.py------------------------
import xmlrpclib
proxy = xmlrpclib.Server("http://localhost:7080/")
r = proxy.hello()
print r



-Drew

;; Drew.Whitehouse at anu.edu.au      Sci-Viz/VR Programmer
;; http://anusf.anu.edu.au/~drw900          ANUSF VIZLAB
;; Australian National University Supercomputer Facility




From twisted at itamarst.org  Wed Mar 20 04:35:05 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Mar 2002 13:35:05 +0200
Subject: [Twisted-Python] win32 process problem
References: <CHEJLPEDBFMBIJDIFHFLAEMPCIAA.Drew.Whitehouse@anu.edu.au>
Message-ID: <3C9873E9.5050703@itamarst.org>

OK, this bug ("can't connect more than one client under win32 event loop") 
is fixed - get the latest twisted/internet/tcp.py from CVS for the fix.





From twisted at itamarst.org  Wed Mar 20 09:19:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Mar 2002 18:19:39 +0200
Subject: [Twisted-Python] Aaargh
Message-ID: <3C98B69B.5000602@itamarst.org>

"""
The Win32 event mechanism (e.g. WaitForMultipleObjects()) can only wait on 
64 event objects at a time.
"""

Same as select(). so we may need to use multiple threads for the win32 event 
loop.




From carmstro at twistedmatrix.com  Fri Mar 22 00:30:57 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 22 Mar 2002 02:30:57 -0500
Subject: [Twisted-Python] Anonymous CVS pserver access
Message-ID: <1016782286.1234.3.camel@radii>

Today I added an "anon" user to the pserver running on zaibach, allowing
anonymous users to check out the CVS Twisted code.

The commands:

cvs -d:pserver:anon at twistedmatrix.com:/cvs login

You can just hit <enter> when you get the password prompt, then:

cvs -d:pserver:anon at twistedmatrix.com:/cvs co Twisted

You should then have the Twisted code in the "Twisted" subdirectory. I
added a "CVS Access" page to the website at
http://twistedmatrix.com/developer/cvs, if anyone wants to write up a
paragraph on accessing the repository through windows, it'd be
appreciated; if not, I'll add it the next time I get around to twiddling
with wincvs. 
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From ivo at amaze.nl  Sun Mar 24 17:09:18 2002
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Mon, 25 Mar 2002 01:09:18 +0100
Subject: [Twisted-Python] MSN client code preview
Message-ID: <20020325010918.U27273@amaze.nl>

Hi all,

I did some heavy refactoring on my python MSN code this weekend. If anyone
is interested in taking a sneak preview at the code (and comment on the
API, etc), feel free to download some code at:

http://ivo.freezope.org/pymsn200203250.tgz 

There's no docs (except for an msn protocol description), but there
are two sample programs included: 'client.py' which is a very simple
gtk/glade interface, and 'msntxttest.py' which basically echoes back
anything that's sent to the client.

The code is at this moment still very incomplete, and still needs loads
of work, but you should be able to login using an existing msn 
handle/password, and send/receive messages.

At this moment, I've only tested with everybuddy at the other end of
the session - it may be that MS's msn client sends more noise that confuses
the clients - I'll test this later.

Patches, remarks, suggestions are welcome.

Cheers,

	Ivo (VladDrac @ OPN)

-- 
Drs. I.R. van der Wijk                              -=-
Brouwersgracht 132                      Amaze Internet Services V.O.F.
1013 HA Amsterdam, NL                               -=-
Tel: +31-20-4688336                       Linux/Web/Zope/SQL/MMBase
Fax: +31-20-4688337                           Network Solutions
Web:     http://www.amaze.nl/                    Consultancy
Email:   ivo at amaze.nl                               -=-



From cpaul at telemetrybox.org  Sun Mar 24 18:52:50 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Sun, 24 Mar 2002 15:52:50 -1000
Subject: [Twisted-Python] Anonymous CVS pserver access
In-Reply-To: <1016782286.1234.3.camel@radii>
References: <1016782286.1234.3.camel@radii>
Message-ID: <20020324155250.B17952@Skaffen.pdchawaii.com>

Excellent!  I will be sure to grab a copy.


On Fri, Mar 22, 2002 at 02:30:57AM -0500, Christopher Armstrong wrote:
> Today I added an "anon" user to the pserver running on zaibach, allowing
> anonymous users to check out the CVS Twisted code.
> 
> The commands:
> 
> cvs -d:pserver:anon at twistedmatrix.com:/cvs login
> 
> You can just hit <enter> when you get the password prompt, then:
> 
> cvs -d:pserver:anon at twistedmatrix.com:/cvs co Twisted
> 
> You should then have the Twisted code in the "Twisted" subdirectory. I
> added a "CVS Access" page to the website at
> http://twistedmatrix.com/developer/cvs, if anyone wants to write up a
> paragraph on accessing the repository through windows, it'd be
> appreciated; if not, I'll add it the next time I get around to twiddling
> with wincvs. 
> -- 
>                                 Chris Armstrong
>                          << radix at twistedmatrix.com >>
>                 http://twistedmatrix.com/users/carmstro.twistd/
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From twisted at itamarst.org  Mon Mar 25 04:46:14 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Mar 2002 13:46:14 +0200
Subject: [Twisted-Python] Coil refactor more or less done
Message-ID: <3C9F0E06.9040800@itamarst.org>

Hi,

Background: COIL is a configuration system for Twisted, allowing you to 
manage and configure your server via the web, developed by glyph. To test it 
out:

$ mktap coil
$ twistd -n -f coil.tap

And point your browser at http://localhost:9080


In CVS, the coil system has been refactored, and now resides in 
twisted.coil. I feel that at this point it is now usable for configuring 
real apps. Real world use will help us find missing requirements and find 
issues and bugs. Examples of how to use it can be found in twisted.coil.plugins.

Things that should really be coiled include cred, to the point that you can 
use coil to administrate users for manhole. t.mail is another candidate, and 
of course any servers based on twisted.

If you are not using CVS Twisted, do not use coil - the interfaces have all 
been changed. You can still play around with it however, since it does work 
in the released code as well.




From andrew-twisted at puzzling.org  Mon Mar 25 17:24:30 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 26 Mar 2002 11:24:30 +1100
Subject: [Twisted-Python] Coil refactor more or less done
In-Reply-To: <3C9F0E06.9040800@itamarst.org>
References: <3C9F0E06.9040800@itamarst.org>
Message-ID: <20020326002430.GA883@ritsuko.xware.cx>

On Mon, Mar 25, 2002 at 01:46:14PM +0200, Itamar Shtull-Trauring wrote:
> Hi,
> 
> Background: COIL is a configuration system for Twisted, allowing you to 
> manage and configure your server via the web, developed by glyph. To test 
> it out:
> 
> $ mktap coil
> $ twistd -n -f coil.tap
> 
> And point your browser at http://localhost:9080

That's so cool! :)

This is going to be great.  I hadn't looked at coil before (I didn't 
understand how to use it), but it's going to be really, really handy.

A few small glitches I've found mucking about with it:
  1) You can't delete a manhole service once you create one.
  2) If you create and configure an FTP server, connect to it, and then delete
     it, you can still use the server from the existing connection.  I expect
     that this might be hard to fix, and may even be desirable in most cases
     anyway.
  3) There's no warning if you try to delete or replace the thing on port 9080
     with something else, causing you to think you've broken the configurator
     until you realise you've been an idiot :)

-Andrew.




From glyph at twistedmatrix.com  Mon Mar 25 20:55:01 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 25 Mar 2002 21:55:01 -0600
Subject: [Twisted-Python] Coil refactor more or less done
In-Reply-To: <20020326002430.GA883@ritsuko.xware.cx>
References: <3C9F0E06.9040800@itamarst.org> <20020326002430.GA883@ritsuko.xware.cx>
Message-ID: <20020326035501.GA12101@twistedmatrix.com>

On Tue, Mar 26, 2002 at 11:24:30AM +1100, Andrew Bennetts wrote:

> On Mon, Mar 25, 2002 at 01:46:14PM +0200, Itamar Shtull-Trauring wrote:
> > $ twistd -n -f coil.tap

> That's so cool! :)

Hey, andrew --

Thanks for trying this out and giving feedback!  Coil does have a lot of
potential, but we need to test it out against a large set of real-world
requirements :)

-- 
______      you are in a maze of twisted little applications, all
|   |_\     remarkably consistent.
|     |          -- glyph lefkowitz, glyph @ twisted matrix . com
|_____|             http://www.twistedmatrix.com/



From andrew-twisted at puzzling.org  Mon Mar 25 21:13:54 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 26 Mar 2002 15:13:54 +1100
Subject: [Twisted-Python] Coil refactor more or less done
In-Reply-To: <20020326035501.GA12101@twistedmatrix.com>
References: <3C9F0E06.9040800@itamarst.org> <20020326002430.GA883@ritsuko.xware.cx> <20020326035501.GA12101@twistedmatrix.com>
Message-ID: <20020326041354.GA3736@ritsuko.xware.cx>

On Mon, Mar 25, 2002 at 09:55:01PM -0600, Glyph Lefkowitz wrote:
> Hey, andrew --
> 
> Thanks for trying this out and giving feedback!  Coil does have a lot of
> potential, but we need to test it out against a large set of real-world
> requirements :)

Of course :)

I'm thinking I can find some good uses for it at work.  It is currently 
geared towards configuration (and that's something I've got alot of use for),
but what I think I have the most immediate use for is status reporting -- 
statistics like "served n requests", "been running since", "last packet from
upstream data feed arrived at ... and had a timestamp of ...".

The sort of configuration I'd want to do is basically what you appear to 
already have -- start component X listening on port 1234, and connect it to 
upstream server Y on 9876.  I possibly also want to save configuration to 
the registry rather than to taps, but I think taps are a better idea.

Say, is there anyway to do "offline" editing of the configuration held in a 
tap?

-Andrew.




From twisted at itamarst.org  Tue Mar 26 01:54:30 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 26 Mar 2002 10:54:30 +0200
Subject: [Twisted-Python] Coil refactor more or less done
References: <3C9F0E06.9040800@itamarst.org> <20020326002430.GA883@ritsuko.xware.cx> <20020326035501.GA12101@twistedmatrix.com> <20020326041354.GA3736@ritsuko.xware.cx>
Message-ID: <3CA03746.30204@itamarst.org>

Andrew Bennetts wrote:

 > Say, is there anyway to do "offline" editing of the configuration held
 > in a tap?

Glyph was discussing this. It could be done very easily, basically by not
activating Ports. At some point we'll probably set something where you use 
coil to edit an Application isntance that is *different* from the one that 
is running, so that coil doesn't show up in the ports list.




From twisted at itamarst.org  Tue Mar 26 01:56:44 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 26 Mar 2002 10:56:44 +0200
Subject: [Twisted-Python] Coil refactor more or less done
References: <3C9F0E06.9040800@itamarst.org> <20020326002430.GA883@ritsuko.xware.cx>
Message-ID: <3CA037CC.8090907@itamarst.org>

Andrew Bennetts wrote:

> A few small glitches I've found mucking about with it:
>   1) You can't delete a manhole service once you create one.

I'll check this out - I think it should be easy to fix, just write an extra 
method in the services collection.

>   2) If you create and configure an FTP server, connect to it, and then delete
>      it, you can still use the server from the existing connection.  I expect
>      that this might be hard to fix, and may even be desirable in most cases
>      anyway.

I'll see if I can figure this out.

>   3) There's no warning if you try to delete or replace the thing on port 9080
>      with something else, causing you to think you've broken the configurator
>      until you realise you've been an idiot :)

See my other email.




From torresj at apb.es  Wed Mar 27 02:11:54 2002
From: torresj at apb.es (Joan Torres)
Date: Wed, 27 Mar 2002 10:11:54 +0100 (MET)
Subject: [Twisted-Python] New Member
Message-ID: <200203270911.KAA29726@osona.apb.es>

Hi,
 My name is Joan Torres, I'm working in Port of Barcelona (spain), and 
 I'm interested in learning more about how to use Twisted.

 I've two Python applications running on a Unix platform, both applications 
 return a file as a result, and I want to write a server for them.
 The server should do the following things:
  - Execute Application1 every 10 minutes 
  - Run Aplication1 on demand.
  - Keep the last file returned by application 1
  - Execute Aplication2 on demand.
  
 There would be three different types of clients (windows platform):
 * Client type 1: get the latest file returned by applition1
 * Client type 2: run application1  and get the returned file
 * Client type 3: run application2 and get the returned file

 The estimated amount of connections at a time could be:
  -clients type 1: 100
  -clients type 2: 2-3
  -clients type 3: 2-3
 
Could anyone give me some light on it?



From twisted at itamarst.org  Wed Mar 27 08:17:52 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 27 Mar 2002 17:17:52 +0200
Subject: [Twisted-Python] Coil command-line app
Message-ID: <3CA1E2A0.2020601@itamarst.org>

Hi all,

I will soon be writing a coil command line app. It will let you edit an 
exisiting .tap. Ports it creates will not be activated, and its own 
webserver  won't show up in the config interface since it will be 
configuring a different Application insatnce. This will very likely 
replace "mktap coil" for most uses.

It'll working something like this:

$ coil exisiting.tap  (config an existing tap)

$ coil -n "email-server" email.tap (create a new application instance 
and store it in tap)

Any suggestions for possible functionality?





From twisted at itamarst.org  Fri Mar 29 03:24:07 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 29 Mar 2002 13:24:07 +0300
Subject: [Twisted-Python] We now have a coil command-line app in CVS
Message-ID: <3CA440C7.5020501@itamarst.org>

Now you can configure your TAP files through the web!

Usage:

   coil [--new=<application name>] <tap file>

Options:
   -n, --new=
   -p, --port=  [default: 9080]


For example, to configure a TAP generated by mktap:
$ mktap web
$ coil web.tap

(now point browser at http://localhost:9080)


Or to create a new TAP:
$ coil --new=myapp new.tap

(now point browser at http://localhost:9080)




From twisted at itamarst.org  Fri Mar 29 03:45:32 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 29 Mar 2002 13:45:32 +0300
Subject: [Twisted-Python] More coil TODOs
Message-ID: <3CA445CC.8070804@itamarst.org>

== Make ports visible ==
Currently, tcp/udp/ssl are treated as collections of protocol factories. I 
am going to change this to collections of Ports, so that you can configure 
interfaces to listen on, context factories for SSL, etc. The protocol 
factory will just be another attribute.

This should have no effect on people who are coiling their apps.


== Make old TAPs work ==
The refactor broke old taps - they can no longer be loaded since they refer 
to non-existence classes in twisted.internet.app.

This can probably be easily solved (make a dummy PortsCollection class and 
delete the attributes of the loaded application that refer to it.)




From glyph at twistedmatrix.com  Sat Mar 30 01:03:34 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 30 Mar 2002 02:03:34 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] Better collection support for coil.
In-Reply-To: <E16pSk9-0007RK-00@zaibach.twistedmatrix.com>
References: <E16pSk9-0007RK-00@zaibach.twistedmatrix.com>
Message-ID: <1017127196.659.29.camel@janus>

On Mon, 2002-03-25 at 05:34, itamarst CVS wrote:

> If a configurable class is not collection, coil's web interface will
> check if the Configurator class is a collection, allowing us to have
> Configurators that act as collections.

> A remaining issue is twisted.web.vhost, and other similar cases, where
> both the Configurator and the configurable class should really be
> collections.

IMHO, the way this should work is: check the Configurator first.  It is
the authority on collection-hood, as it were. :-).  If the
*configurator* is not a collection, then check the configurable; this
strikes me as a less likely case... in fact, it seems weird to
introspect on the configurable at all at this point, since it isn't the
configuration component.

Does that make sense?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020330/57a413bd/attachment.sig>

From glyph at twistedmatrix.com  Sat Mar 30 01:03:33 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 30 Mar 2002 02:03:33 -0600
Subject: [Twisted-Python] Coil refactor more or less done
In-Reply-To: <20020326041354.GA3736@ritsuko.xware.cx>
References: <3C9F0E06.9040800@itamarst.org>
	<20020326002430.GA883@ritsuko.xware.cx>
	<20020326035501.GA12101@twistedmatrix.com> 
	<20020326041354.GA3736@ritsuko.xware.cx>
Message-ID: <1017126742.659.23.camel@janus>

On Mon, 2002-03-25 at 22:13, Andrew Bennetts wrote:
> On Mon, Mar 25, 2002 at 09:55:01PM -0600, Glyph Lefkowitz wrote:
> > Thanks for trying this out and giving feedback!

> I'm thinking I can find some good uses for it at work.  It is currently 
> geared towards configuration (and that's something I've got alot of use for),
> but what I think I have the most immediate use for is status reporting -- 
> statistics like "served n requests", "been running since", "last packet from
> upstream data feed arrived at ... and had a timestamp of ...".

It originally seemed to me that data-display would be a different
component. (Remember Sean's twisted.metrics, anyone?)  I guess you're
right that it would be handy to display it in the same web interface,
though... hmm...

> The sort of configuration I'd want to do is basically what you appear to 
> already have -- start component X listening on port 1234, and connect it to 
> upstream server Y on 9876.  I possibly also want to save configuration to 
> the registry rather than to taps, but I think taps are a better idea.

You can introspect on the objects to save them to wherever :-).  I'm
sure that the registry can be contorted in order to save "arbitrary"
Python objects.

> Say, is there anyway to do "offline" editing of the configuration held in a 
> tap?

Well, the existing coil code can edit "offline" as well as "online"
configurations; it just takes an Application object and mutates it. 
Adding some buttons to the interface to save / load the app to a
particular file should be trivial.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020330/4df371bb/attachment.sig>

From glyph at twistedmatrix.com  Sat Mar 30 01:03:31 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 30 Mar 2002 02:03:31 -0600
Subject: [Twisted-Python] MSN client code preview
In-Reply-To: <20020325010918.U27273@amaze.nl>
References: <20020325010918.U27273@amaze.nl>
Message-ID: <1017125910.370.9.camel@janus>

Hi ivo:

I'd like to create a mechanism for making plugins (registered in
plugins.tml) for twisted.im... it seems like wasted effort to develop an
MSN-specific client, when we're working on a "universal messaging"
client ourselves to demo Twisted's capabilities.

I realize that the IM code is not exactly "mature" at this point :-) but
it does have some design ideas that I'd really like others to adopt;
such as making a standard, pluggable interface for loading PB clients,
similar to the way that mktap and coil load PB services.

On Sun, 2002-03-24 at 18:09, Ivo van der Wijk wrote:
> Hi all,
> 
> I did some heavy refactoring on my python MSN code this weekend. If anyone
> is interested in taking a sneak preview at the code (and comment on the
> API, etc), feel free to download some code at:
> 
> http://ivo.freezope.org/pymsn200203250.tgz 
> 
> There's no docs (except for an msn protocol description), but there
> are two sample programs included: 'client.py' which is a very simple
> gtk/glade interface, and 'msntxttest.py' which basically echoes back
> anything that's sent to the client.
> 
> The code is at this moment still very incomplete, and still needs loads
> of work, but you should be able to login using an existing msn 
> handle/password, and send/receive messages.
> 
> At this moment, I've only tested with everybuddy at the other end of
> the session - it may be that MS's msn client sends more noise that confuses
> the clients - I'll test this later.
> 
> Patches, remarks, suggestions are welcome.
> 
> Cheers,
> 
> 	Ivo (VladDrac @ OPN)
> 
> -- 
> Drs. I.R. van der Wijk                              -=-
> Brouwersgracht 132                      Amaze Internet Services V.O.F.
> 1013 HA Amsterdam, NL                               -=-
> Tel: +31-20-4688336                       Linux/Web/Zope/SQL/MMBase
> Fax: +31-20-4688337                           Network Solutions
> Web:     http://www.amaze.nl/                    Consultancy
> Email:   ivo at amaze.nl                               -=-
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020330/df115036/attachment.sig>

From twisted at itamarst.org  Sat Mar 30 02:38:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 30 Mar 2002 11:38:25 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] Better collection support
 for coil.
References: <E16pSk9-0007RK-00@zaibach.twistedmatrix.com> <1017127196.659.29.camel@janus>
Message-ID: <3CA58791.4040104@itamarst.org>

Glyph Lefkowitz wrote:

> IMHO, the way this should work is: check the Configurator first.  It is
> the authority on collection-hood, as it were. :-).  If the
> *configurator* is not a collection, then check the configurable; this
> strikes me as a less likely case... in fact, it seems weird to
> introspect on the configurable at all at this point, since it isn't the
> configuration component.

Yes. Of course, for VHost the Configurator is not a colletion yet, it
possibly, maybe, *should* be a collection. And my latest checkin might've
fixed it. Anyone care to try?





From twisted at itamarst.org  Sat Mar 30 02:40:31 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 30 Mar 2002 11:40:31 +0200
Subject: [Twisted-Python] Coil refactor more or less done
References: <3C9F0E06.9040800@itamarst.org>	<20020326002430.GA883@ritsuko.xware.cx>	<20020326035501.GA12101@twistedmatrix.com> 	<20020326041354.GA3736@ritsuko.xware.cx> <1017126742.659.23.camel@janus>
Message-ID: <3CA5880F.1010801@itamarst.org>

Glyph Lefkowitz wrote:

> Well, the existing coil code can edit "offline" as well as "online"
> configurations; it just takes an Application object and mutates it. 
> Adding some buttons to the interface to save / load the app to a
> particular file should be trivial.

The coil command-line app (bin/coil in CVS) works in "offline" mode.
I do not want buttons for saving and loading - specifying the file
on the command line is more secure, and lets me e.g. setup a coil
on a website so I can give people URLs for demo purposes. And I see
no reason why coil should be continiusly running if it's not
configuring the same Application.




From ivo at amaze.nl  Sat Mar 30 04:02:59 2002
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Sat, 30 Mar 2002 12:02:59 +0100
Subject: [Twisted-Python] MSN client code preview
In-Reply-To: <1017125910.370.9.camel@janus>; from glyph@twistedmatrix.com on Sat, Mar 30, 2002 at 02:03:31AM -0600
References: <20020325010918.U27273@amaze.nl> <1017125910.370.9.camel@janus>
Message-ID: <20020330120258.M26346@amaze.nl>

On Sat, Mar 30, 2002 at 02:03:31AM -0600, Glyph Lefkowitz wrote:
> Hi ivo:
> 
> I'd like to create a mechanism for making plugins (registered in
> plugins.tml) for twisted.im... it seems like wasted effort to develop an
> MSN-specific client, when we're working on a "universal messaging"
> client ourselves to demo Twisted's capabilities.
> 
> I realize that the IM code is not exactly "mature" at this point :-) but
> it does have some design ideas that I'd really like others to adopt;
> such as making a standard, pluggable interface for loading PB clients,
> similar to the way that mktap and coil load PB services.
> 

I'd be definately interested in those ideas - I'm trying to write my code
in a generic way, but due to the nature of MSN, I can't put everything in
a single layer (there are multiple connections involved, that are created
on the fly, etc, and the main connection may change as well)

Do you have any docs on this? 

Cheers,

	Ivo

-- 
Drs. I.R. van der Wijk                              -=-
Brouwersgracht 132                      Amaze Internet Services V.O.F.
1013 HA Amsterdam, NL                               -=-
Tel: +31-20-4688336                       Linux/Web/Zope/SQL/MMBase
Fax: +31-20-4688337                           Network Solutions
Web:     http://www.amaze.nl/                    Consultancy
Email:   ivo at amaze.nl                               -=-



From carmstro at twistedmatrix.com  Sat Mar 30 06:20:35 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 30 Mar 2002 08:20:35 -0500
Subject: [Twisted-Python] Coil refactor more or less done
In-Reply-To: <3CA5880F.1010801@itamarst.org>
References: 	<3C9F0E06.9040800@itamarst.org>	<20020326002430.GA883@ritsuko.xware.cx>	<200
	 20326035501.GA12101@twistedmatrix.com>
	<20020326041354.GA3736@ritsuko.xware.cx> <1017126742.659.23.camel@janus> 
	<3CA5880F.1010801@itamarst.org>
Message-ID: <1017494436.2494.1.camel@radii>

On Sat, 2002-03-30 at 04:40, Itamar Shtull-Trauring wrote:
> Glyph Lefkowitz wrote:
> 
> > Well, the existing coil code can edit "offline" as well as "online"
> > configurations; it just takes an Application object and mutates it. 
> > Adding some buttons to the interface to save / load the app to a
> > particular file should be trivial.
> 
> The coil command-line app (bin/coil in CVS) works in "offline" mode.
> I do not want buttons for saving and loading - specifying the file
> on the command line is more secure, and lets me e.g. setup a coil
> on a website so I can give people URLs for demo purposes. And I see
> no reason why coil should be continiusly running if it's not
> configuring the same Application.

I still think that there should be an option for saving/loading
Applications. Personally, I *would* like to have a continuously-running
COIL server on my machine. It could be an option to 'mktap coil'.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Sun Mar 31 02:36:22 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 31 Mar 2002 12:36:22 +0300
Subject: [Twisted-Python] Twisted bug -- bad interaction with popen
Message-ID: <3CA6D896.4070309@itamarst.org>

This bug needs an answer from someone with unix expertise:

<http://www.twistedmatrix.com/users/itamarst.twistd/bugs/view_bug?bug_id=8>

I suggest getting rid of SIGCHLD handler, and having t.i.process.Process 
instances keep track of the pid of their process, and pass it to reapProcess 
so it only waitpid()s on a specific pid, and not all of them.

I will add a test case which will test for this bug.





From twisted at itamarst.org  Sun Mar 31 03:04:25 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 31 Mar 2002 13:04:25 +0300
Subject: [Twisted-Python] Twisted bug -- bad interaction with popen
References: <3CA6D896.4070309@itamarst.org>
Message-ID: <3CA6DF29.3050803@itamarst.org>

Itamar Shtull-Trauring wrote:

 > I will add a test case which will test for this bug.

OK, I changed the process tests - they will now fail (not always, but
sometimes) because of the SIGCHLD issue.




From twisted at itamarst.org  Sun Mar 31 03:48:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 31 Mar 2002 13:48:39 +0300
Subject: [Twisted-Python] CVS broken?
Message-ID: <3CA6E987.4060402@itamarst.org>

Each time I checkin a file, the CVS process then gets stuck (if I check-in 
two files it gets stuck after the first). I'm not sure why -- perhaps this 
is relevant (as pointed out by Tv):

http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=102292

Or perhaps it's some other issue.




