From exarkun at twistedmatrix.com  Sun May  1 00:05:23 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 May 2011 04:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1304222723.19.1813968102@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110501/1c6b4835/attachment.htm 

From teratorn at twistedmatrix.com  Sun May  1 08:37:14 2011
From: teratorn at twistedmatrix.com (teratorn at twistedmatrix.com)
Date: Sun, 1 May 2011 15:37:14 +0300
Subject: [Twisted-Python] from Meagan
Message-ID: <2133866727.ATIVLWYR949174@bhzcyuqjh.kyfvju.org>

I'm a charming blue-eyed blonde, brunette with brown eyes, and I'm looking for an intelligent man to communicate by e-mail, Skype, or on real dates!

My home page: www.rus-flirt.ru



From jaroslaw.fedewicz at gmail.com  Sun May  1 11:36:35 2011
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Sun, 01 May 2011 18:36:35 +0300
Subject: [Twisted-Python] from Meagan
In-Reply-To: <2133866727.ATIVLWYR949174@bhzcyuqjh.kyfvju.org>
References: <2133866727.ATIVLWYR949174@bhzcyuqjh.kyfvju.org>
Message-ID: <4DBD7E03.6090500@gmail.com>

On 01/05/11 15:37, teratorn at twistedmatrix.com wrote:
> I'm a charming blue-eyed blonde, brunette with brown eyes, and I'm looking for an intelligent man to communicate by e-mail, Skype, or on real dates!
>
> My home page: www.rus-flirt.ru
Of course it would be silly to react to a spam message, but the phrase 
"charming blue-eyed blonde, brunette with brown eyes" amused me quite a 
lot, making it look like she's a female relative of Zaphod Beeblebrox of 
sorts...

A pity it's a robot. Otherwise we would all take note that hanging 
around on the Twisted mailing is a necessity to be allowed in the 
"intelligent men" caste...



From alexandre at quessy.net  Sun May  1 11:53:15 2011
From: alexandre at quessy.net (Alexandre Quessy)
Date: Sun, 1 May 2011 11:53:15 -0400
Subject: [Twisted-Python] Ubuntu package of Twisted 11.0 for Lucid
In-Reply-To: <BANLkTi=d5_+sHhUmSeoa8csMnxPCrrnKow@mail.gmail.com>
References: <BANLkTi=d5_+sHhUmSeoa8csMnxPCrrnKow@mail.gmail.com>
Message-ID: <BANLkTinCqyYmnQcBjoRtaiD+Cb8THUm0=Q@mail.gmail.com>

Hello Twisted developers,

2011/4/29 Alexandre Quessy <alexandre at quessy.net>:
> I just made a Ubuntu package of Twisted 11.0 or Ubuntu Lucid (10.04)
> and put in on a PPA:
> https://launchpad.net/~sat-metalab/+archive/metalab
>

Here are some more information about the packaging effort I have done.
(I needed the fix #3948 for the wx reactor)

I put my packaging in a Git repository, since I use git-buildpackage:
https://github.com/aalex/ubuntu-twisted
I started from the current package in Debian unstable, and changed
some version numbers for build-deps and deps until it worked. (I
didn't change much)

The only thing I am not sure about is the fact I commented a call to
dh_python2 in the debian/rules file:
https://github.com/aalex/ubuntu-twisted/blob/master/debian/rules#L131
I think it should be OK though, because we use python-central, not
dh_python2.

I guess someone could test it and then move it to the official Twisted
PPA.
(I works fine as far as I can tell)
Please someone let me know when this is done, or if you guys need any
help about this.

Thank you!
-- 
Alexandre Quessy
http://alexandre.quessy.net/


From jasonjwwilliams at gmail.com  Tue May  3 17:12:12 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 3 May 2011 15:12:12 -0600
Subject: [Twisted-Python] Twisted featured on The Changelog
Message-ID: <BANLkTi=jE4vntZidvGg+XrUmDupenONRjw@mail.gmail.com>

Hey Guys,

Not sure if anyone listens to The Changelog podcast, but the episode
this week is a full feature on Twisted interviewing Glyph. :) Really
good PR for us.

http://thechangelog.com/post/5160421440/episode-0-5-8-twisted-with-glyph-lefkowitz

...and Glyph did a fantastic job! Definitely one of the better episodes.

-J


From kevin.horn at gmail.com  Tue May  3 17:46:04 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 3 May 2011 16:46:04 -0500
Subject: [Twisted-Python] Twisted featured on The Changelog
In-Reply-To: <BANLkTi=jE4vntZidvGg+XrUmDupenONRjw@mail.gmail.com>
References: <BANLkTi=jE4vntZidvGg+XrUmDupenONRjw@mail.gmail.com>
Message-ID: <BANLkTik4m4Wy9teL2Fw6TV5OKJLFFQBCkA@mail.gmail.com>

On Tue, May 3, 2011 at 4:12 PM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Hey Guys,
>
> Not sure if anyone listens to The Changelog podcast, but the episode
> this week is a full feature on Twisted interviewing Glyph. :) Really
> good PR for us.
>
>
> http://thechangelog.com/post/5160421440/episode-0-5-8-twisted-with-glyph-lefkowitz
>
> ...and Glyph did a fantastic job! Definitely one of the better episodes.
>
> -J
>
>
Yeah, I caught this earlier today.  Very nice job, Glyph.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110503/6373b823/attachment.htm 

From juanito1982 at gmail.com  Thu May  5 10:32:10 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Thu, 5 May 2011 16:32:10 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <1303841320.3370.116.camel@pow>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
Message-ID: <BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>

I had got the same problem using '-r epoll' options when starting the app
via twistd... When 1024 descriptors are opened, I can see 100% CPU.

Any ideas?

2011/4/26 Luke Marsden <luke-lists at hybrid-logic.co.uk>

> On Tue, 2011-04-26 at 17:42 +0200, Juan Antonio Iba?ez Santorum wrote:
> > Hello!
> >    I have a Linux box serving my twisted app. All works ok except
> > after some days running (where I can see my CPU going to 100%). I saw
> > that CPU goes 100% usage when the app reaches to 1024 opened
> > descriptors (sockets).
>
> You can also switch to using the "poll" reactor, which will allow you to
> sustain more than 1024 connections.  You should still figure out what is
> keeping your connections open and find a way to reap them however, as
> this will just delay the problem.  As Glyph suggested an application
> level "ping" may help here.
>
> In the mean-time you can switch to the poll reactor by adding "-r poll"
> to your twistd command.
>
> --
> Best Regards,
> Luke Marsden
> CTO, Hybrid Logic Ltd.
>
> Web: http://www.hybrid-cluster.com/
> Hybrid Web Cluster - cloud web hosting
>
> Phone: +447791750420
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110505/505cbeb6/attachment.htm 

From rlotun at gmail.com  Thu May  5 10:52:56 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 5 May 2011 15:52:56 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
Message-ID: <BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>

2011/5/5 Juan Antonio Iba?ez Santorum <juanito1982 at gmail.com>

> I had got the same problem using '-r epoll' options when starting the app
> via twistd... When 1024 descriptors are opened, I can see 100% CPU.
>
> Any ideas?
>
>
1. Edit /etc/sysctl.conf and place the following line there:
       fs.file-max = 999999
2. Type $ sudo sysctl -p
3. Place the following two lines:
*       soft    nofile      999999
*       hard    nofile      999999
Either reboot, or also type in `ulimit -n 999999`
4. Check that $ ulimit -a shows your open fixes set to 999999

There's nothing special about 999999 - it's just some big number
conveniently bigger than 1024. Enjoy.

Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110505/a3b95328/attachment.htm 

From glyph at twistedmatrix.com  Thu May  5 14:11:49 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 May 2011 14:11:49 -0400
Subject: [Twisted-Python] Twisted featured on The Changelog
In-Reply-To: <BANLkTik4m4Wy9teL2Fw6TV5OKJLFFQBCkA@mail.gmail.com>
References: <BANLkTi=jE4vntZidvGg+XrUmDupenONRjw@mail.gmail.com>
	<BANLkTik4m4Wy9teL2Fw6TV5OKJLFFQBCkA@mail.gmail.com>
Message-ID: <9C8575FC-9770-43F8-AA11-39F04758E8DF@twistedmatrix.com>

On May 3, 2011, at 5:46 PM, Kevin Horn wrote:

> On Tue, May 3, 2011 at 4:12 PM, Jason J. W. Williams <jasonjwwilliams at gmail.com> wrote:
> Hey Guys,
> 
> Not sure if anyone listens to The Changelog podcast, but the episode
> this week is a full feature on Twisted interviewing Glyph. :) Really
> good PR for us.
> 
> http://thechangelog.com/post/5160421440/episode-0-5-8-twisted-with-glyph-lefkowitz
> 
> ...and Glyph did a fantastic job! Definitely one of the better episodes.
> 
> -J
> 
> 
> Yeah, I caught this earlier today.  Very nice job, Glyph.

Thanks for the kind words!  Listening to it myself I'm pleased to hear I didn't sound as silly as I feared I might :).


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110505/9cd5f300/attachment.htm 

From glyph at twistedmatrix.com  Thu May  5 14:19:01 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 May 2011 14:19:01 -0400
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
Message-ID: <25E8B37C-89B5-47CF-B872-85379656780C@twistedmatrix.com>


On May 5, 2011, at 10:52 AM, Reza Lotun wrote:

> 2011/5/5 Juan Antonio Iba?ez Santorum <juanito1982 at gmail.com>
> I had got the same problem using '-r epoll' options when starting the app via twistd... When 1024 descriptors are opened, I can see 100% CPU. 
> 
> Any ideas?
> 
> 
> 1. Edit /etc/sysctl.conf and place the following line there:
>        fs.file-max = 999999
> 2. Type $ sudo sysctl -p
> 3. Place the following two lines:
> *       soft    nofile      999999
> *       hard    nofile      999999
> Either reboot, or also type in `ulimit -n 999999`
> 4. Check that $ ulimit -a shows your open fixes set to 999999
> 
> There's nothing special about 999999 - it's just some big number conveniently bigger than 1024. Enjoy.
> 
> Reza

Would you mind opening a doc bug for explaining how to do this on multiple platforms, and maybe writing a lore doc about it?  This is a really important tuning thing for anyone wanting to run even a medium-scale Twisted service.

(Also, once again, the bug is <http://twistedmatrix.com/trac/ticket/816>, somebody please fix it :).)

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110505/1a2cab15/attachment.htm 

From juanito1982 at gmail.com  Thu May  5 15:02:28 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Thu, 5 May 2011 21:02:28 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
Message-ID: <BANLkTi=fZXf+OTBnN_ikw4m5Pa7fO7ryww@mail.gmail.com>

Thank you Reza!

2011/5/5 Reza Lotun <rlotun at gmail.com>

> 2011/5/5 Juan Antonio Iba?ez Santorum <juanito1982 at gmail.com>
>
>> I had got the same problem using '-r epoll' options when starting the app
>> via twistd... When 1024 descriptors are opened, I can see 100% CPU.
>>
>> Any ideas?
>>
>>
> 1. Edit /etc/sysctl.conf and place the following line there:
>        fs.file-max = 999999
> 2. Type $ sudo sysctl -p
> 3. Place the following two lines:
> *       soft    nofile      999999
> *       hard    nofile      999999
> Either reboot, or also type in `ulimit -n 999999`
> 4. Check that $ ulimit -a shows your open fixes set to 999999
>
> There's nothing special about 999999 - it's just some big number
> conveniently bigger than 1024. Enjoy.
>
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110505/e130fc3a/attachment.htm 

From rlotun at gmail.com  Thu May  5 18:12:10 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 5 May 2011 23:12:10 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
Message-ID: <BANLkTimTtJHRrnGLb0VHdme9TS3T4kgZuA@mail.gmail.com>

Small addition - I forgot to say to open /etc/security/limits.conf and then
place the following two lines in step 3 in:

3. Place the following two lines:
> *       soft    nofile      999999
> *       hard    nofile      999999
> Either reboot, or also type in `ulimit -n 999999`
>

Also, I'd be happy to contribute a TCP tuning note to the Twisted docs.
These are absolutely essential for any production deploy.

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110505/e79f451b/attachment.htm 

From dynamicgl at gmail.com  Fri May  6 13:09:58 2011
From: dynamicgl at gmail.com (Dfgqq Dfgqq)
Date: Sat, 7 May 2011 01:09:58 +0800
Subject: [Twisted-Python] Twisted featured on The Changelog
In-Reply-To: <9C8575FC-9770-43F8-AA11-39F04758E8DF@twistedmatrix.com>
References: <BANLkTi=jE4vntZidvGg+XrUmDupenONRjw@mail.gmail.com>
	<BANLkTik4m4Wy9teL2Fw6TV5OKJLFFQBCkA@mail.gmail.com>
	<9C8575FC-9770-43F8-AA11-39F04758E8DF@twistedmatrix.com>
Message-ID: <BANLkTi=rkNfC7ppFaCvUFY0G0h-hVanxkA@mail.gmail.com>

thanks Glyph for bringing us a practical lib for async handling.. in
particular it works greatly on windows which many persons considered a
second level citizen...

On Fri, May 6, 2011 at 2:11 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> On May 3, 2011, at 5:46 PM, Kevin Horn wrote:
>
> On Tue, May 3, 2011 at 4:12 PM, Jason J. W. Williams <
> jasonjwwilliams at gmail.com> wrote:
>
>> Hey Guys,
>>
>> Not sure if anyone listens to The Changelog podcast, but the episode
>> this week is a full feature on Twisted interviewing Glyph. :) Really
>> good PR for us.
>>
>>
>> http://thechangelog.com/post/5160421440/episode-0-5-8-twisted-with-glyph-lefkowitz
>>
>> ...and Glyph did a fantastic job! Definitely one of the better episodes.
>>
>> -J
>>
>>
> Yeah, I caught this earlier today.  Very nice job, Glyph.
>
>
> Thanks for the kind words!  Listening to it myself I'm pleased to hear I
> didn't sound as silly as I feared I might :).
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110507/4bb87691/attachment.htm 

From dynamicgl at gmail.com  Sat May  7 04:49:22 2011
From: dynamicgl at gmail.com (Dfgqq Dfgqq)
Date: Sat, 7 May 2011 16:49:22 +0800
Subject: [Twisted-Python] when to use callInThread?
Message-ID: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>

Hi all

   I have a function like:

def longQuery(xxx)

this function will be invoked simultaneously (it means multiple thread
environment) and this function may take a while to complete.

so my question is whether i should use reactor.callInThread to take benefit
from non blocking

or use deferred object ?

It seems that deferred object doens't use threads.

Regards

GELIN YAN
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110507/39a010fe/attachment.htm 

From _ at lvh.cc  Sat May  7 05:49:03 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 May 2011 11:49:03 +0200
Subject: [Twisted-Python] when to use callInThread?
In-Reply-To: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>
References: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>
Message-ID: <BANLkTikfQ+MfZRmR8x2dmFvpgQRO5cbU2A@mail.gmail.com>

Why is it invoked in a multithread environment? You can use deferToThread,
which gives you a deferred which runs in a thread.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110507/455840d3/attachment.htm 

From marco.giusti at gmail.com  Sat May  7 05:57:05 2011
From: marco.giusti at gmail.com (Marco Giusti)
Date: Sat, 7 May 2011 11:57:05 +0200
Subject: [Twisted-Python] when to use callInThread?
In-Reply-To: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>
References: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>
Message-ID: <20110507095705.GA27121@murdoc>

On Sat, May 07, 2011 at 04:49:22PM +0800, Dfgqq Dfgqq wrote:
> Hi all
> 
>    I have a function like:
> 
> def longQuery(xxx)
> 
> this function will be invoked simultaneously (it means multiple thread
> environment) and this function may take a while to complete.
> 
> so my question is whether i should use reactor.callInThread to take benefit
> from non blocking

briefly you should use `callInThread` in two cases: when your code does
some long computation and when you use some libraries that do network
communication in a blocking manner.

> or use deferred object ?
> 
> It seems that deferred object doens't use threads.

http://twistedmatrix.com/documents/current/core/howto/gendefer.html#auto2

If `longQuery` is a DB query you should look at
twisted.enterprise.adbapi

http://twistedmatrix.com/documents/current/core/howto/rdbms.html

m.

-- 
La vera terra dei barbari non ? quella che non ha mai conosciuto
l'arte, ma quella che, disseminata di capolavori, non sa n?
apprezzarli n? conservarli.
		-- Marcel Proust


From dynamicgl at gmail.com  Sat May  7 06:11:11 2011
From: dynamicgl at gmail.com (Dfgqq Dfgqq)
Date: Sat, 7 May 2011 18:11:11 +0800
Subject: [Twisted-Python] when to use callInThread?
In-Reply-To: <BANLkTikfQ+MfZRmR8x2dmFvpgQRO5cbU2A@mail.gmail.com>
References: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>
	<BANLkTikfQ+MfZRmR8x2dmFvpgQRO5cbU2A@mail.gmail.com>
Message-ID: <BANLkTi=cVQ3hoYNnt3K8zqTW=X3jfbMY3Q@mail.gmail.com>

Hi Ivh

   I just finished the reading of deterToThread Part. I think it is what i
need. Thank you anyway..

Regards

gelin yan

On Sat, May 7, 2011 at 5:49 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Why is it invoked in a multithread environment? You can use deferToThread,
> which gives you a deferred which runs in a thread.
>
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110507/dbc7ab5e/attachment.htm 

From tenth at twistedmatrix.com  Sat May  7 11:37:02 2011
From: tenth at twistedmatrix.com (Tenth)
Date: Sat, 7 May 2011 11:37:02 -0400
Subject: [Twisted-Python]  Boston Mini-Sprint: May Edition
Message-ID: <BANLkTikqDLkjjsnDkvBZyAtoBJZmNcNWrA@mail.gmail.com>

I've been lax in posting them on [Twisted-Python] lately, but the
more-or-less-monthly Boston area sprints will continue on Sunday, May 22nd
at my place in Somerville, MA. An Evite has gone out to the usual suspects,
but if you'd like to be added (or removed) from the invitations, just let me
know.

While the list has gotten fairly long, we still haven't exceeded the
capacity of my apartment... But we are looking into larger venues for when
that happens. (And places with Air Conditioning, as the arrival of Spring
here in Massachusetts means we're only a few weeks away from the Way Too Hot
And Wet season.)

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110507/771821ff/attachment.htm 

From exarkun at twistedmatrix.com  Sun May  8 00:05:33 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 May 2011 04:05:33 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1304827533.65.2035155230@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110508/0a763d93/attachment.htm 

From juanito1982 at gmail.com  Sun May  8 14:09:59 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Sun, 8 May 2011 20:09:59 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTimTtJHRrnGLb0VHdme9TS3T4kgZuA@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTimTtJHRrnGLb0VHdme9TS3T4kgZuA@mail.gmail.com>
Message-ID: <BANLkTimX3f=w=J+G+C_UcRNXVxgmePZebw@mail.gmail.com>

MUST I apply that change or may be I SHOULD do it? Why is it necessary?

Regards

2011/5/6 Reza Lotun <rlotun at gmail.com>

> Small addition - I forgot to say to open /etc/security/limits.conf and then
> place the following two lines in step 3 in:
>
> 3. Place the following two lines:
>> *       soft    nofile      999999
>> *       hard    nofile      999999
>> Either reboot, or also type in `ulimit -n 999999`
>>
>
> Also, I'd be happy to contribute a TCP tuning note to the Twisted docs.
> These are absolutely essential for any production deploy.
>
> Thanks,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110508/e4edb8df/attachment.htm 

From rlotun at gmail.com  Sun May  8 16:27:37 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Sun, 8 May 2011 21:27:37 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTimX3f=w=J+G+C_UcRNXVxgmePZebw@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTimTtJHRrnGLb0VHdme9TS3T4kgZuA@mail.gmail.com>
	<BANLkTimX3f=w=J+G+C_UcRNXVxgmePZebw@mail.gmail.com>
Message-ID: <BANLkTim5y1wZDAp=EfX3TONqN+0nEhZ83g@mail.gmail.com>

Hi Juan,

2011/5/8 Juan Antonio Iba?ez Santorum <juanito1982 at gmail.com>

> MUST I apply that change or may be I SHOULD do it? Why is it necessary?


Each network connection on your system is represented by a 'file
descriptor', in Unix terminology. By default, there is a limit on the number
of open file descriptors that can be opened at once, which is a little
different for every system (usually its 1024 or 4096), even though the
system is actually capable of opening more network connections.

This limit is set in two places - systemwide and per-user. To run a network
server you have to increase the limits both in the kernel and for the user
the network process is running as. The 'sysctl' steps I previously mentioned
increases the limits for the kernel, and the 'ulimit' steps for the user. In
the example I gave, this limit was increased to 999999 which is extremely
high, and should be suitable for almost all production server deployments.

sysctl limits can be set permanently by editing /etc/sysctl.conf with new
kernel settings and then running 'sysctl -p'. ulimits can be changed at
runtime - the 'nofile' setting can be set by 'ulimit -n', or permanently by
editing /etc/security/limits.conf and rebooting/opening a new login shell.

Hope that clears it up.

Reza
-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110508/dab0b5b5/attachment.htm 

From albert.brandl at weiermayer.com  Mon May  9 06:50:46 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Mon, 9 May 2011 12:50:46 +0200
Subject: [Twisted-Python] Question about using the adbapi
Message-ID: <20110509105046.GA9241@weiermayer.com>

Hi!

In the application I'm currently working on, we gather data from 
different sources and store them in a database, but only if the
values have changed.

One example is GPS information. We don't want to store hundreds of 
identical values that are sent by the receiver, so we have to compare the 
last written row with the current latitude / longitude pair.

I use a subclass of NMEARreceiver class to determine the current latitude 
and longitude. Then I query the database using a ConnectionPool instance 
to get the previous values for latitude and longitude. If the result 
differs from the current values, a new entry is stored, again using the 
ConnectionPool.

The problem is: How do I "connect" the current latitude and longitude to 
the database query? The query returns a Deferred object, but this expects 
a callback with only one argument, the result of the query.

Storing them as instance variables of NMEAReceiver does not seem to be 
the right way, since I don't know how long it takes to query the database 
- the relevant GPS information might be overwritten by a new NMEA 
telegram when the connection pool finally triggers the callback

One workaround I've found is to add this information to the SQL query, 
but this seems quite weird to me (and doesn't work in the case that the 
query does not return a result).

A different approach would be to implement a callback with three 
arguments (result, latitude and longitude), and wrap it in a lambda 
function that fills latitude and longitude with the current values.
Would this would be a better way to handle this requirement?

How would you implement this?

Thanks & best regards,

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From exarkun at twistedmatrix.com  Mon May  9 07:03:12 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 09 May 2011 11:03:12 -0000
Subject: [Twisted-Python] Question about using the adbapi
In-Reply-To: <20110509105046.GA9241@weiermayer.com>
References: <20110509105046.GA9241@weiermayer.com>
Message-ID: <20110509110312.1992.1868333034.divmod.xquotient.1257@localhost.localdomain>

On 10:50 am, albert.brandl at weiermayer.com wrote:
>Hi!
>
>In the application I'm currently working on, we gather data from
>different sources and store them in a database, but only if the
>values have changed.
>
>One example is GPS information. We don't want to store hundreds of
>identical values that are sent by the receiver, so we have to compare 
>the
>last written row with the current latitude / longitude pair.
>
>I use a subclass of NMEARreceiver class to determine the current 
>latitude
>and longitude. Then I query the database using a ConnectionPool 
>instance
>to get the previous values for latitude and longitude. If the result
>differs from the current values, a new entry is stored, again using the
>ConnectionPool.
>
>The problem is: How do I "connect" the current latitude and longitude 
>to
>the database query? The query returns a Deferred object, but this 
>expects
>a callback with only one argument, the result of the query.

d.addCallback(f, x, y) will result in f(resultOfD, x, y)

Jean-Paul
>
>Storing them as instance variables of NMEAReceiver does not seem to be
>the right way, since I don't know how long it takes to query the 
>database
>- the relevant GPS information might be overwritten by a new NMEA
>telegram when the connection pool finally triggers the callback
>
>One workaround I've found is to add this information to the SQL query,
>but this seems quite weird to me (and doesn't work in the case that the
>query does not return a result).
>
>A different approach would be to implement a callback with three
>arguments (result, latitude and longitude), and wrap it in a lambda
>function that fills latitude and longitude with the current values.
>Would this would be a better way to handle this requirement?
>
>How would you implement this?
>
>Thanks & best regards,
>
>Albert
>--
>Albert Brandl
>Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
>phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
>web: http://www.weiermayer.com
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From ypercube at gmail.com  Mon May  9 07:15:04 2011
From: ypercube at gmail.com (Pandelis Theodosiou)
Date: Mon, 9 May 2011 14:15:04 +0300
Subject: [Twisted-Python] Question about using the adbapi
In-Reply-To: <20110509105046.GA9241@weiermayer.com>
References: <20110509105046.GA9241@weiermayer.com>
Message-ID: <BANLkTinDAnnYAohU3HtcsKcJ2Rw86EN+RQ@mail.gmail.com>

I see 2 other options:

a) keep the last (longitude, latitude) pair for every receiver stored in
your script, too, besides the db. When a new pair of values arrives, compare
it with the current and only if it is different, send the "INSERT" query to
the database.

b) When a new pair of values arrives, send a query (or stored procedure)
that tells the database to check and "INSERT" only if the pair is different
that the latest.

Pandelis Theodosiou


On Mon, May 9, 2011 at 1:50 PM, Albert Brandl
<albert.brandl at weiermayer.com>wrote:

> Hi!
>
> In the application I'm currently working on, we gather data from
> different sources and store them in a database, but only if the
> values have changed.
>
> One example is GPS information. We don't want to store hundreds of
> identical values that are sent by the receiver, so we have to compare the
> last written row with the current latitude / longitude pair.
>
> I use a subclass of NMEARreceiver class to determine the current latitude
> and longitude. Then I query the database using a ConnectionPool instance
> to get the previous values for latitude and longitude. If the result
> differs from the current values, a new entry is stored, again using the
> ConnectionPool.
>
> The problem is: How do I "connect" the current latitude and longitude to
> the database query? The query returns a Deferred object, but this expects
> a callback with only one argument, the result of the query.
>
> Storing them as instance variables of NMEAReceiver does not seem to be
> the right way, since I don't know how long it takes to query the database
> - the relevant GPS information might be overwritten by a new NMEA
> telegram when the connection pool finally triggers the callback
>
> One workaround I've found is to add this information to the SQL query,
> but this seems quite weird to me (and doesn't work in the case that the
> query does not return a result).
>
> A different approach would be to implement a callback with three
> arguments (result, latitude and longitude), and wrap it in a lambda
> function that fills latitude and longitude with the current values.
> Would this would be a better way to handle this requirement?
>
> How would you implement this?
>
> Thanks & best regards,
>
> Albert
> --
> Albert Brandl
> Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
> phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
> web: http://www.weiermayer.com
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

 <http://int.ask.com/web?siteid=10000861&webqsrc=999&l=dis&q=UPDATE>
 <http://int.ask.com/web?siteid=10000861&webqsrc=999&l=dis&q=triple%20>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110509/f15e8be5/attachment.htm 

From juanito1982 at gmail.com  Mon May  9 08:48:50 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Mon, 9 May 2011 14:48:50 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTim5y1wZDAp=EfX3TONqN+0nEhZ83g@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTimTtJHRrnGLb0VHdme9TS3T4kgZuA@mail.gmail.com>
	<BANLkTimX3f=w=J+G+C_UcRNXVxgmePZebw@mail.gmail.com>
	<BANLkTim5y1wZDAp=EfX3TONqN+0nEhZ83g@mail.gmail.com>
Message-ID: <BANLkTikm82RKLRik4aV63fFkdviKjPOjfg@mail.gmail.com>

+1

Perfect explanation. Thank you very much!

2011/5/8 Reza Lotun <rlotun at gmail.com>

> Hi Juan,
>
> 2011/5/8 Juan Antonio Iba?ez Santorum <juanito1982 at gmail.com>
>
>> MUST I apply that change or may be I SHOULD do it? Why is it necessary?
>
>
> Each network connection on your system is represented by a 'file
> descriptor', in Unix terminology. By default, there is a limit on the number
> of open file descriptors that can be opened at once, which is a little
> different for every system (usually its 1024 or 4096), even though the
> system is actually capable of opening more network connections.
>
> This limit is set in two places - systemwide and per-user. To run a network
> server you have to increase the limits both in the kernel and for the user
> the network process is running as. The 'sysctl' steps I previously mentioned
> increases the limits for the kernel, and the 'ulimit' steps for the user. In
> the example I gave, this limit was increased to 999999 which is extremely
> high, and should be suitable for almost all production server deployments.
>
> sysctl limits can be set permanently by editing /etc/sysctl.conf with new
> kernel settings and then running 'sysctl -p'. ulimits can be changed at
> runtime - the 'nofile' setting can be set by 'ulimit -n', or permanently by
> editing /etc/security/limits.conf and rebooting/opening a new login shell.
>
> Hope that clears it up.
>
> Reza
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110509/a007d62b/attachment-0001.htm 

From albert.brandl at weiermayer.com  Tue May 10 03:26:37 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 10 May 2011 09:26:37 +0200
Subject: [Twisted-Python] Question about using the adbapi
In-Reply-To: <20110509110312.1992.1868333034.divmod.xquotient.1257@localhost.localdomain>
References: <20110509105046.GA9241@weiermayer.com>
	<20110509110312.1992.1868333034.divmod.xquotient.1257@localhost.localdomain>
Message-ID: <20110510072637.GA2269@weiermayer.com>

On Mon, May 09, 2011 at 11:03:12AM -0000, exarkun at twistedmatrix.com wrote:
>
> d.addCallback(f, x, y) will result in f(resultOfD, x, y)

Cool - no need to wrap the method call :-). The documentation for runQuery
does not mention this feature, though:

"Returns a Deferred which will fire the return value of a DB-API 
cursor's 'fetchall' method, or a Failure."

Maybe it's obvious for people who know how Deferreds work :-/

Thanks, and best regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From albert.brandl at weiermayer.com  Tue May 10 03:50:30 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 10 May 2011 09:50:30 +0200
Subject: [Twisted-Python] Question about using the adbapi
In-Reply-To: <BANLkTinDAnnYAohU3HtcsKcJ2Rw86EN+RQ@mail.gmail.com>
References: <20110509105046.GA9241@weiermayer.com>
	<BANLkTinDAnnYAohU3HtcsKcJ2Rw86EN+RQ@mail.gmail.com>
Message-ID: <20110510075030.GA4098@weiermayer.com>

On Mon, May 09, 2011 at 02:15:04PM +0300, Pandelis Theodosiou wrote:

> a) keep the last (longitude, latitude) pair for every receiver stored 
> in your script, too, besides the db. When a new pair of values 
> arrives, compare it with the current and only if it is different, send 
> the "INSERT" query to the database.

This will only work if I can guarantee that the database query is 
finished before the next (longitude, latitude) pair arrives. Otherwise, 
I'll lose the previous pair. Storing a list of (longitude, latitude) 
pairs won't work either: the database queries are executed in separate 
threads, and I can't control the order in which they will finish. So
I have no correspondence between the query result and a (longitude,
latitude) pair.

For GPS data, this might not be an issue, since a new position arrives 
only about once a second. But other data (e.g. the current speed) are 
sent every ten ms or so. For these, I have to make sure that the current 
data corresponds to the query result.

> b) When a new pair of values arrives, send a query (or stored 
> procedure) that tells the database to check and "INSERT" only if the 
> pair is different that the latest.

That is an interesting option, since it moves the responsibility from
the Twisted server to the database.

Thanks & best regards,

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From juanito1982 at gmail.com  Tue May 10 11:35:39 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Tue, 10 May 2011 17:35:39 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
Message-ID: <BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>

Still having problems...

I can see that twistd process has a higher number than 1024 looking at
/proc/pid/limits but whe 1024 descriptors number gets reached the system
becomes unstable. It also has been launche using '-r epoll' option. Any
other idea?



2011/5/5 Reza Lotun <rlotun at gmail.com>

> 2011/5/5 Juan Antonio Iba?ez Santorum <juanito1982 at gmail.com>
>
>> I had got the same problem using '-r epoll' options when starting the app
>> via twistd... When 1024 descriptors are opened, I can see 100% CPU.
>>
>> Any ideas?
>>
>>
> 1. Edit /etc/sysctl.conf and place the following line there:
>        fs.file-max = 999999
> 2. Type $ sudo sysctl -p
> 3. Place the following two lines:
> *       soft    nofile      999999
> *       hard    nofile      999999
> Either reboot, or also type in `ulimit -n 999999`
> 4. Check that $ ulimit -a shows your open fixes set to 999999
>
> There's nothing special about 999999 - it's just some big number
> conveniently bigger than 1024. Enjoy.
>
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110510/fc99c3fc/attachment.htm 

From rlotun at gmail.com  Tue May 10 11:45:57 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 10 May 2011 16:45:57 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>
Message-ID: <BANLkTimLW8nNeJi3UqdkfLw4iCog7PR3Uw@mail.gmail.com>

Hmm, are you running your process as root? If so, you may need to add
the following two lines in /etc/security/limits.conf:

 root ? ? ? soft ? ?nofile ? ? ?999999
 root ? ? ? hard ? ?nofile ? ? ?999999

(yes, root, even though you previously supplied '*').

I'd also reboot just to be sure. If you still have trouble after that,
then perhaps it's something to do with your code.

Reza

2011/5/10 Juan Antonio Iba?ez Santorum <juanito1982 at gmail.com>
>
> Still having problems...
> I can see that twistd process has a higher number than 1024 looking at /proc/pid/limits but whe 1024 descriptors number gets reached the system becomes unstable. It also has been launche using '-r epoll' option. Any other idea?

--
Reza Lotun
mobile: +44 (0)7521 310 763
email:? rlotun at gmail.com
work:?? reza at tweetdeck.com
twitter: @rlotun


From itamar at itamarst.org  Tue May 10 11:50:33 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 10 May 2011 11:50:33 -0400
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>
Message-ID: <95d637979bd8f62255d79ef909c49d94.squirrel@webmail.zoteca.com>

> Still having problems...
>
> I can see that twistd process has a higher number than 1024 looking at
> /proc/pid/limits but whe 1024 descriptors number gets reached the system
> becomes unstable. It also has been launche using '-r epoll' option. Any
> other idea?

0. What does "unstable" mean?

1. There may be user-specific limits in addition to OS-level limits. Did
you use "ulimit -n" to raise that limit?

2. Are you using processes on a version of Linux older than 2.6.11?

http://twistedmatrix.com/trac/ticket/918



From juanito1982 at gmail.com  Tue May 10 12:07:06 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Tue, 10 May 2011 18:07:06 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <95d637979bd8f62255d79ef909c49d94.squirrel@webmail.zoteca.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>
	<95d637979bd8f62255d79ef909c49d94.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTikN_VbOZ0Z0jbqEzxhLL0+3DmDt_w@mail.gmail.com>

2011/5/10 Itamar Turner-Trauring <itamar at itamarst.org>

> > Still having problems...
> >
> > I can see that twistd process has a higher number than 1024 looking at
> > /proc/pid/limits but whe 1024 descriptors number gets reached the system
> > becomes unstable. It also has been launche using '-r epoll' option. Any
> > other idea?
>
> 0. What does "unstable" mean?
>

I started to see an incrment on memory usage and stopping to accept new
connections. I had to restart the app as it is running in a production
enviroment.


>
> 1. There may be user-specific limits in addition to OS-level limits. Did
> you use "ulimit -n" to raise that limit?
>

Yes, and I checked the limit was ok looking at /proc/pid/limits


>
> 2. Are you using processes on a version of Linux older than 2.6.11?
>

No. 2.6.34 on a Centos distro.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110510/e6818ed8/attachment.htm 

From facundobatista at gmail.com  Tue May 10 14:51:00 2011
From: facundobatista at gmail.com (Facundo Batista)
Date: Tue, 10 May 2011 15:51:00 -0300
Subject: [Twisted-Python] Some "spread" objects and comparison semantics
Message-ID: <BANLkTi=wG52pUQJQMAmuY42KjV2rD77gGA@mail.gmail.com>

I'm analysing the code in twisted/spread/flavors.py and
twisted/spread/pb.py, trying to remove the __cmp__ and cmp() in
RemoteCache, RemoteCacheMethod and RemoteCacheObserver classes.

They all have __cmp__ methods, but as there is not any test for these,
and it's not specified in the documentation, I don't know if the
comparison method is to compare by equality, or for these objects to
be orderable.

Yes, I could replace __cmp__ with the full rich comparison battery,
but it's not worth it if the semantic of these objects will not use
it.

Thanks!

-- 
.? ? Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/


From exarkun at twistedmatrix.com  Wed May 11 13:05:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 11 May 2011 17:05:22 -0000
Subject: [Twisted-Python] Some "spread" objects and comparison semantics
In-Reply-To: <BANLkTi=wG52pUQJQMAmuY42KjV2rD77gGA@mail.gmail.com>
References: <BANLkTi=wG52pUQJQMAmuY42KjV2rD77gGA@mail.gmail.com>
Message-ID: <20110511170522.1992.448451910.divmod.xquotient.1327@localhost.localdomain>

On 10 May, 06:51 pm, facundobatista at gmail.com wrote:
>I'm analysing the code in twisted/spread/flavors.py and
>twisted/spread/pb.py, trying to remove the __cmp__ and cmp() in
>RemoteCache, RemoteCacheMethod and RemoteCacheObserver classes.
>
>They all have __cmp__ methods, but as there is not any test for these,
>and it's not specified in the documentation, I don't know if the
>comparison method is to compare by equality, or for these objects to
>be orderable.
>
>Yes, I could replace __cmp__ with the full rich comparison battery,
>but it's not worth it if the semantic of these objects will not use
>it.

I doubt anyone remembers the rationale for these methods.  We should err 
on the safe side and preserve the existing behavior.

Jean-Paul


From facundobatista at gmail.com  Wed May 11 13:44:55 2011
From: facundobatista at gmail.com (Facundo Batista)
Date: Wed, 11 May 2011 14:44:55 -0300
Subject: [Twisted-Python] Some "spread" objects and comparison semantics
In-Reply-To: <20110511170522.1992.448451910.divmod.xquotient.1327@localhost.localdomain>
References: <BANLkTi=wG52pUQJQMAmuY42KjV2rD77gGA@mail.gmail.com>
	<20110511170522.1992.448451910.divmod.xquotient.1327@localhost.localdomain>
Message-ID: <BANLkTikduVRgQyktEJ_C7n5E-PDS1NjNNw@mail.gmail.com>

On Wed, May 11, 2011 at 2:05 PM,  <exarkun at twistedmatrix.com> wrote:

> I doubt anyone remembers the rationale for these methods. ?We should err
> on the safe side and preserve the existing behavior.

Ok, I'll add tests to check this also.

-- 
.? ? Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/


From dialtone at gmail.com  Wed May 11 14:02:22 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 11 May 2011 11:02:22 -0700
Subject: [Twisted-Python] EuroPython 2011 early bird ends in 2 days
Message-ID: <52E2ED4C-A8F5-41BD-BB1A-3F74F46ACDA0@gmail.com>

Hi everyone,

this is just a gentle reminder that EuroPython 2011 early bird ends in 2 days, some core Twisted developers will be there and there will be at least one tutorial about Twisted.

EuroPython is the official European conference about the Python programming language. It is aimed at everyone in the Python community, of all skill levels, both users and programmers.

It will be held in Florence from June 20th-24th for the conference and June 25th-26th for sprint days.

More information available at: http://ep2011.europython.eu/

The schedule of the conference is available at http://ep2011.europython.eu/p3/schedule/ep2011/

For those of you that are not living in Italy we will give you the opportunity to buy a cheap pre-paid voice/data enabled SIM for your smartphone or computer (it has tethering enabled) so that you don't have to pay for expensive international calls and you will be able to use your phone, more details here http://ep2011.europython.eu/p3/mobile/ 

And for all of you who have a family it's possible to have them come with you and while you're at the conference they will be able to visit Tuscany's amazing locations thanks to our partner program, more details at http://ep2011.europython.eu/partner-program

We want the Python Community to embrace and support diversity, for this reason Google is offering a special Diversity Grant reserved for female computer scientists, more information here http://ep2011.europython.eu/google-diversity-grant

And we are also working to create a special grant for students and unemployed (but searching for a job) programmers that, thanks to those speakers who decided to pay the full conference price, will enable us to offer 3 free tickets for students and 3 free tickets for unemployed, details will be ready soon on EuroPython 2011 blog: http://ep2011.europython.eu/blog/

See you all in Florence!

-- 
Valentino Volonghi
EuroPython 2011 Organization

From sandro at e-den.it  Wed May 11 14:18:17 2011
From: sandro at e-den.it (Alessandro Dentella)
Date: Wed, 11 May 2011 20:18:17 +0200
Subject: [Twisted-Python] test if thread is reactor's thread
Message-ID: <20110511181817.GA18743@ubuntu>


Hi,


is there a way to test if the thread a function is called is the reactor's
thread?

I have a function that can be called from the main thread or from the
reactor's thread and should behave differently...


thanks


sandro
*:-)


-- 
Sandro Dentella  *:-)
http://www.reteisi.org             Soluzioni libere per le scuole
http://sqlkit.argolinux.org        SQLkit home page - PyGTK/python/sqlalchemy


From _ at lvh.cc  Wed May 11 14:26:21 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 11 May 2011 20:26:21 +0200
Subject: [Twisted-Python] EuroPython 2011 early bird ends in 2 days
In-Reply-To: <52E2ED4C-A8F5-41BD-BB1A-3F74F46ACDA0@gmail.com>
References: <52E2ED4C-A8F5-41BD-BB1A-3F74F46ACDA0@gmail.com>
Message-ID: <BANLkTimpuT_sPV4RMxPKqqVzABFhcvm1YA@mail.gmail.com>

Wooo!

Perhaps as an extra advertisement we should make a list of Twisted people
showing up?

At the very least it's going to be me (lvh) and apparently also Valentino
(dialtone) :-)

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110511/e6f5c62f/attachment.htm 

From jkakar at kakar.ca  Wed May 11 15:41:49 2011
From: jkakar at kakar.ca (Jamu Kakar)
Date: Wed, 11 May 2011 21:41:49 +0200
Subject: [Twisted-Python] test if thread is reactor's thread
In-Reply-To: <20110511181817.GA18743@ubuntu>
References: <20110511181817.GA18743@ubuntu>
Message-ID: <BANLkTinSiZeMKntxZS6WYPc6su9aKukY3A@mail.gmail.com>

Hi Alessandro,

On Wed, May 11, 2011 at 8:18 PM, Alessandro Dentella <sandro at e-den.it> wrote:
> is there a way to test if the thread a function is called is the reactor's
> thread?

Yes, you can do it with code like this:

from threading import currentThread

if currentThread().getName() == 'MainThread':
    # Code is running in the main reactor thread
else:
    # Code is running in a child thread

> I have a function that can be called from the main thread or from the
> reactor's thread and should behave differently...

We had a situation like this recently in Fluidinfo.  We started with
the trick above, but it was a bit weird.  The situation we had was
that we had to run some asynchronous code (ie, a function returning a
Deferred) in a thread used to run a database transaction.  We ended up
with a nice solution.  Something like:

# In the transaction thread.
proxy = doAThing()
result = blockingCallFromThread(proxy.run)

At first, deep inside doAThing we had the black magic above, but it
was awkward to test and behaved differently depending on which thread
the code ran in, which was confusing to understand.  We refactored
doAThing to not run the asynchronous code but to, instead, return a
proxy object with a method that needed to be run asynchronously.  The
proxy was configured with the arguments and such needed for it to run
properly, so the user could just invoke the asynchronous code in the
way that made sense for them.

It's much nicer because the caller of the function gets to decide how
to run the asynchronous code, instead of it being hard-coded deep in
some logic.  Also, the logic is much easier to comprehend because it
only behaves one way.  Anyway, maybe this strategy won't work for you,
but behaves-differently-depending-on-the-thread-you-use is probably a
behaviour you should avoid if possible.

Thanks,
J.


From therve at free.fr  Wed May 11 16:08:38 2011
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Wed, 11 May 2011 22:08:38 +0200
Subject: [Twisted-Python] EuroPython 2011 early bird ends in 2 days
In-Reply-To: <BANLkTimpuT_sPV4RMxPKqqVzABFhcvm1YA@mail.gmail.com>
References: <52E2ED4C-A8F5-41BD-BB1A-3F74F46ACDA0@gmail.com>
	<BANLkTimpuT_sPV4RMxPKqqVzABFhcvm1YA@mail.gmail.com>
Message-ID: <4DCAECC6.5080403@free.fr>

Le 11/05/2011 20:26, Laurens Van Houtven a ?crit :
> Wooo!
>
> Perhaps as an extra advertisement we should make a list of Twisted people
> showing up?
>
> At the very least it's going to be me (lvh) and apparently also Valentino
> (dialtone) :-)

Heya!

Just booked my tickets as well, going to be there from Tuesday to
Friday, so see you guys there.

-- 
Thomas


From therve at free.fr  Wed May 11 16:11:27 2011
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Wed, 11 May 2011 22:11:27 +0200
Subject: [Twisted-Python] test if thread is reactor's thread
In-Reply-To: <20110511181817.GA18743@ubuntu>
References: <20110511181817.GA18743@ubuntu>
Message-ID: <4DCAED6F.1000004@free.fr>

Le 11/05/2011 20:18, Alessandro Dentella a ?crit :
> Hi,
>
>
> is there a way to test if the thread a function is called is the reactor's
> thread?
>
> I have a function that can be called from the main thread or from the
> reactor's thread and should behave differently...

Hi,

twisted.python.threadable.isInIOThread() should answer to that question.

Regards,

-- 
Thomas


From sandro at e-den.it  Wed May 11 16:46:35 2011
From: sandro at e-den.it (Alessandro Dentella)
Date: Wed, 11 May 2011 22:46:35 +0200
Subject: [Twisted-Python] test if thread is reactor's thread
In-Reply-To: <4DCAED6F.1000004@free.fr>
	<BANLkTinSiZeMKntxZS6WYPc6su9aKukY3A@mail.gmail.com>
Message-ID: <20110511204635.GA19025@ubuntu>


thanks to both of you for the hints. My situation is so simple that i guess
a twisted.python.threadable.isInIOThread() should suffice.

sandro
*:-)


From glyph at twistedmatrix.com  Thu May 12 12:50:19 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 May 2011 12:50:19 -0400
Subject: [Twisted-Python] Some "spread" objects and comparison semantics
In-Reply-To: <20110511170522.1992.448451910.divmod.xquotient.1327@localhost.localdomain>
References: <BANLkTi=wG52pUQJQMAmuY42KjV2rD77gGA@mail.gmail.com>
	<20110511170522.1992.448451910.divmod.xquotient.1327@localhost.localdomain>
Message-ID: <273C32A9-D424-4D4C-BF25-9E4202185773@twistedmatrix.com>

On May 11, 2011, at 1:05 PM, exarkun at twistedmatrix.com wrote:

> I doubt anyone remembers the rationale for these methods.  We should err 
> on the safe side and preserve the existing behavior.

I should point out that this isn't erring, technically, according to <http://twistedmatrix.com/trac/wiki/CompatibilityPolicy>.

For a given behavior whose implementation you want to change, you always have to preserve the behavior, in case someone is depending on it.  If you think some behavior is a really bad idea (and I don't necessarily think sortability/comparability is a bad idea) you can always deprecate it, but you have to preserve it while it's deprecated.

Thanks for asking, though, Facundo!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110512/fb147487/attachment.htm 

From exarkun at twistedmatrix.com  Sun May 15 00:05:47 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 May 2011 04:05:47 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1305432347.84.1380335374@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110515/f5279d29/attachment.htm 

From dynamicgl at gmail.com  Sun May 15 12:10:01 2011
From: dynamicgl at gmail.com (Dfgqq Dfgqq)
Date: Mon, 16 May 2011 00:10:01 +0800
Subject: [Twisted-Python] a problem about iocp and callInThread
Message-ID: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>

Hi all

     I just encountered a problem about iocp reactor & callInThread. I
paste the code following:

from twisted.internet import iocpreactor
iocpreactor.install()
from twisted.internet import reactor

class ThreadTest:
    def __init__(self,name):
        self.count = 0
        self.max = 5
        self.wait = 1
        self.name = name

    def __call__(self):
        self.Execute()

    def Execute(self):
        print self.name, time.time()
        self.count += 1
        if self.count <self.max:
            reactor.callLater(self.wait, reactor.callInThread, self.Execute)
        else:
            print self.name, "stop"

reactor.callInThread(ThreadTest("test"))

the problem is every time the print method was invoked, i noticed that
the difference between current invoke and previous invoke was 2
seconds. In theory ,it should be one second. When i used the plain
reactor (which means no iocpreactor), the difference was one second
which is a correct value.

I want to know what makes callInThread so special with iocpreactor?

BTW: i used windows 7 & window s2008.

Regards

gelin yan


From itamar at itamarst.org  Sun May 15 12:21:19 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 15 May 2011 12:21:19 -0400
Subject: [Twisted-Python] a problem about iocp and callInThread
In-Reply-To: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
References: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
Message-ID: <bb66a964fe29649f1ecdcb88e7332944.squirrel@webmail.zoteca.com>


> I want to know what makes callInThread so special with iocpreactor?

You're calling a reactor method from a thread; that is a bug, the reactor
is not thread safe. As a result, different reactors may fail differently.
Use reactor.callFromThread to call reactor methods from a thread.



From mithrandi at mithrandi.net  Sun May 15 12:26:50 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 15 May 2011 18:26:50 +0200
Subject: [Twisted-Python] a problem about iocp and callInThread
In-Reply-To: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
References: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
Message-ID: <BANLkTik8WSVLJVJ3n_NWJtce1GCKWqvSnw@mail.gmail.com>

On Sun, May 15, 2011 at 6:10 PM, Dfgqq Dfgqq <dynamicgl at gmail.com> wrote:
> ? ? ? ? ? ?reactor.callLater(self.wait, reactor.callInThread, self.Execute)

I believe this should be:

reactor.callFromThread(reactor.callLater, self.wait,
reactor.callInThread, self.Execute)

Execute is not being called in the reactor thread, so the only Twisted
API you are allowed to use is reactor.callFromThread, which schedules
a callable to run in the reactor thread and wakes up the reactor if
necessary. Calling other APIs from a non-reactor thread can result in
various misbehaviours such as delays in event processing, as you are
observing.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From exarkun at twistedmatrix.com  Sun May 15 12:29:16 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 May 2011 16:29:16 -0000
Subject: [Twisted-Python] a problem about iocp and callInThread
In-Reply-To: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
References: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
Message-ID: <20110515162916.3983.814564370.divmod.xquotient.11@localhost.localdomain>

On 04:10 pm, dynamicgl at gmail.com wrote:
>Hi all
>
>     I just encountered a problem about iocp reactor & callInThread. I
>paste the code following:
>
>from twisted.internet import iocpreactor
>iocpreactor.install()
>from twisted.internet import reactor
>
>class ThreadTest:
>    def __init__(self,name):
>        self.count = 0
>        self.max = 5
>        self.wait = 1
>        self.name = name
>
>    def __call__(self):
>        self.Execute()
>
>    def Execute(self):
>        print self.name, time.time()
>        self.count += 1
>        if self.count <self.max:
>            reactor.callLater(self.wait, reactor.callInThread, 
>self.Execute)
>        else:
>            print self.name, "stop"
>
>reactor.callInThread(ThreadTest("test"))
>
>the problem is every time the print method was invoked, i noticed that
>the difference between current invoke and previous invoke was 2
>seconds. In theory ,it should be one second. When i used the plain

You're calling reactor.callLater from a non-reactor thread.  This isn't 
supported and will produce unpredictable behavior.

Jean-Paul
>reactor (which means no iocpreactor), the difference was one second
>which is a correct value.
>
>I want to know what makes callInThread so special with iocpreactor?
>
>BTW: i used windows 7 & window s2008.
>
>Regards
>
>gelin yan
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From dynamicgl at gmail.com  Sun May 15 13:27:26 2011
From: dynamicgl at gmail.com (Dfgqq Dfgqq)
Date: Mon, 16 May 2011 01:27:26 +0800
Subject: [Twisted-Python] a problem about iocp and callInThread
In-Reply-To: <20110515162916.3983.814564370.divmod.xquotient.11@localhost.localdomain>
References: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
	<20110515162916.3983.814564370.divmod.xquotient.11@localhost.localdomain>
Message-ID: <BANLkTikiQa5dw-WUJdu0bf-Q0Jmec6MEjg@mail.gmail.com>

Hi all
I modified my code as

reactor.callFromThread(reactor.callLater, self.wait, reactor.callInThread,
self.Execute)

based on your comments.

now the problem have been solved. Thanks your guys. I appreciate your help.

Regards

gelin yan

On Mon, May 16, 2011 at 12:29 AM, <exarkun at twistedmatrix.com> wrote:

> On 04:10 pm, dynamicgl at gmail.com wrote:
> >Hi all
> >
> >     I just encountered a problem about iocp reactor & callInThread. I
> >paste the code following:
> >
> >from twisted.internet import iocpreactor
> >iocpreactor.install()
> >from twisted.internet import reactor
> >
> >class ThreadTest:
> >    def __init__(self,name):
> >        self.count = 0
> >        self.max = 5
> >        self.wait = 1
> >        self.name = name
> >
> >    def __call__(self):
> >        self.Execute()
> >
> >    def Execute(self):
> >        print self.name, time.time()
> >        self.count += 1
> >        if self.count <self.max:
> >            reactor.callLater(self.wait, reactor.callInThread,
> >self.Execute)
> >        else:
> >            print self.name, "stop"
> >
> >reactor.callInThread(ThreadTest("test"))
> >
> >the problem is every time the print method was invoked, i noticed that
> >the difference between current invoke and previous invoke was 2
> >seconds. In theory ,it should be one second. When i used the plain
>
> You're calling reactor.callLater from a non-reactor thread.  This isn't
> supported and will produce unpredictable behavior.
>
> Jean-Paul
> >reactor (which means no iocpreactor), the difference was one second
> >which is a correct value.
> >
> >I want to know what makes callInThread so special with iocpreactor?
> >
> >BTW: i used windows 7 & window s2008.
> >
> >Regards
> >
> >gelin yan
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110516/37557fd6/attachment.htm 

From dynamicgl at gmail.com  Mon May 16 01:46:08 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 16 May 2011 13:46:08 +0800
Subject: [Twisted-Python] Is it possible to know what kind of methods are
	thread safe?
Message-ID: <BANLkTik7iaTGscsm-cmXXyJKM9Hg4oBt1g@mail.gmail.com>

Hi all

   I notice the core doc mentions that "Most code in Twisted is not
thread-safe. For example, writing data to a transport from a protocol is not
thread-safe. "

   I want to know whether there is a way to know what methods are thread
safe besides of reading source codes? Or I use
reacator.callFromThread for all related methods from threads other than
reactor thread?

Thanks

dfgqq (gelin yan)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110516/31af37af/attachment.htm 

From amauryfa at gmail.com  Mon May 16 02:07:13 2011
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Mon, 16 May 2011 08:07:13 +0200
Subject: [Twisted-Python] Is it possible to know what kind of methods
 are thread safe?
In-Reply-To: <BANLkTik7iaTGscsm-cmXXyJKM9Hg4oBt1g@mail.gmail.com>
References: <BANLkTik7iaTGscsm-cmXXyJKM9Hg4oBt1g@mail.gmail.com>
Message-ID: <BANLkTi=5SFaw-YsxyTTQ1X7p1Lbj3xSkeQ@mail.gmail.com>

Hi,

2011/5/16 gelin yan <dynamicgl at gmail.com>:
> ?? I notice the core doc mentions that "Most code in Twisted is not
> thread-safe. For example, writing data to a transport from a protocol is not
> thread-safe. "
>
> ?? I want to know whether there is a way to know what methods are thread
> safe besides of reading source codes? Or I use
> reacator.callFromThread for all related methods from threads other than
> reactor thread?

Yes. Unless it is clearly mentioned in a function's documentation,
reactor.callFromThread is the only function that is safe to call from
any thread.

-- 
Amaury Forgeot d'Arc


From juanito1982 at gmail.com  Thu May 19 15:57:06 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Thu, 19 May 2011 21:57:06 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <1303841320.3370.116.camel@pow>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
Message-ID: <BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>

Is there any way to check if it is using the the poll/epoll reactor?

Regards

2011/4/26 Luke Marsden <luke-lists at hybrid-logic.co.uk>

> On Tue, 2011-04-26 at 17:42 +0200, Juan Antonio Iba?ez Santorum wrote:
> > Hello!
> >    I have a Linux box serving my twisted app. All works ok except
> > after some days running (where I can see my CPU going to 100%). I saw
> > that CPU goes 100% usage when the app reaches to 1024 opened
> > descriptors (sockets).
>
> You can also switch to using the "poll" reactor, which will allow you to
> sustain more than 1024 connections.  You should still figure out what is
> keeping your connections open and find a way to reap them however, as
> this will just delay the problem.  As Glyph suggested an application
> level "ping" may help here.
>
> In the mean-time you can switch to the poll reactor by adding "-r poll"
> to your twistd command.
>
> --
> Best Regards,
> Luke Marsden
> CTO, Hybrid Logic Ltd.
>
> Web: http://www.hybrid-cluster.com/
> Hybrid Web Cluster - cloud web hosting
>
> Phone: +447791750420
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110519/5fe19d56/attachment.htm 

From rlotun at gmail.com  Thu May 19 16:07:25 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 19 May 2011 21:07:25 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
Message-ID: <BANLkTimCf7UNoBy6HAp=8ag_6zO2P9xQzQ@mail.gmail.com>

Can you not do a:

from twisted.python import log
from twisted.internet import reactor
log.msg('My reactor is: %r' % repr(reactor))

somewhere in your code to determine it?

Are you running your application with twistd? You can pass a reactor
implementation via the '-r' option.

Reza

2011/5/19 Juan Antonio Iba?ez Santorum <juanito1982 at gmail.com>:
> Is there any way to check if it is using the the poll/epoll reactor?
> Regards
>
> 2011/4/26 Luke Marsden <luke-lists at hybrid-logic.co.uk>
>>
>> On Tue, 2011-04-26 at 17:42 +0200, Juan Antonio Iba?ez Santorum wrote:
>> > Hello!
>> > ? ?I have a Linux box serving my twisted app. All works ok except
>> > after some days running (where I can see my CPU going to 100%). I saw
>> > that CPU goes 100% usage when the app reaches to 1024 opened
>> > descriptors (sockets).
>>
>> You can also switch to using the "poll" reactor, which will allow you to
>> sustain more than 1024 connections. ?You should still figure out what is
>> keeping your connections open and find a way to reap them however, as
>> this will just delay the problem. ?As Glyph suggested an application
>> level "ping" may help here.
>>
>> In the mean-time you can switch to the poll reactor by adding "-r poll"
>> to your twistd command.
>>
>> --
>> Best Regards,
>> Luke Marsden
>> CTO, Hybrid Logic Ltd.
>>
>> Web: http://www.hybrid-cluster.com/
>> Hybrid Web Cluster - cloud web hosting
>>
>> Phone: +447791750420
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:? rlotun at gmail.com
work:?? reza at tweetdeck.com
twitter: @rlotun


From luke-lists at hybrid-logic.co.uk  Thu May 19 16:08:00 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Thu, 19 May 2011 21:08:00 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
Message-ID: <1305835680.3272.49.camel@pow>

Hi Juan,

You could try:

        print reactor.__class__

This should allow you to check that the twistd command-line argument is
working.  Example:
        
        luke at pow:~$ twistd -noy foo.py |head -n 1
        <class 'twisted.internet.selectreactor.SelectReactor'>
        
        luke at pow:~$ twistd -r poll -noy foo.py |head -n 1
        <class 'twisted.internet.pollreactor.PollReactor'>
        
        luke at pow:~$ cat foo.py
        from twisted.internet import reactor
        from twisted.application import service
        print reactor.__class__
        application = service.Application("nothing")

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Phone: +447791750420


On Thu, 2011-05-19 at 21:57 +0200, Juan Antonio Iba?ez Santorum wrote:
> Is there any way to check if it is using the the poll/epoll reactor?
> 
> 
> Regards
> 
> 2011/4/26 Luke Marsden <luke-lists at hybrid-logic.co.uk>
>         On Tue, 2011-04-26 at 17:42 +0200, Juan Antonio Iba?ez
>         Santorum wrote:
>         > Hello!
>         >    I have a Linux box serving my twisted app. All works ok
>         except
>         > after some days running (where I can see my CPU going to
>         100%). I saw
>         > that CPU goes 100% usage when the app reaches to 1024 opened
>         > descriptors (sockets).
>         
>         
>         You can also switch to using the "poll" reactor, which will
>         allow you to
>         sustain more than 1024 connections.  You should still figure
>         out what is
>         keeping your connections open and find a way to reap them
>         however, as
>         this will just delay the problem.  As Glyph suggested an
>         application
>         level "ping" may help here.
>         
>         In the mean-time you can switch to the poll reactor by adding
>         "-r poll"
>         to your twistd command.
>         
>         --
>         Best Regards,
>         Luke Marsden
>         CTO, Hybrid Logic Ltd.
>         
>         Web: http://www.hybrid-cluster.com/
>         Hybrid Web Cluster - cloud web hosting
>         
>         Phone: +447791750420
>         
>         
>         
>         _______________________________________________
>         Twisted-Python mailing list
>         Twisted-Python at twistedmatrix.com
>         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 




From luke-lists at hybrid-logic.co.uk  Thu May 19 16:08:00 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Thu, 19 May 2011 21:08:00 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
Message-ID: <1305835680.3272.49.camel@pow>

Hi Juan,

You could try:

        print reactor.__class__

This should allow you to check that the twistd command-line argument is
working.  Example:
        
        luke at pow:~$ twistd -noy foo.py |head -n 1
        <class 'twisted.internet.selectreactor.SelectReactor'>
        
        luke at pow:~$ twistd -r poll -noy foo.py |head -n 1
        <class 'twisted.internet.pollreactor.PollReactor'>
        
        luke at pow:~$ cat foo.py
        from twisted.internet import reactor
        from twisted.application import service
        print reactor.__class__
        application = service.Application("nothing")

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Phone: +447791750420


On Thu, 2011-05-19 at 21:57 +0200, Juan Antonio Iba?ez Santorum wrote:
> Is there any way to check if it is using the the poll/epoll reactor?
> 
> 
> Regards
> 
> 2011/4/26 Luke Marsden <luke-lists at hybrid-logic.co.uk>
>         On Tue, 2011-04-26 at 17:42 +0200, Juan Antonio Iba?ez
>         Santorum wrote:
>         > Hello!
>         >    I have a Linux box serving my twisted app. All works ok
>         except
>         > after some days running (where I can see my CPU going to
>         100%). I saw
>         > that CPU goes 100% usage when the app reaches to 1024 opened
>         > descriptors (sockets).
>         
>         
>         You can also switch to using the "poll" reactor, which will
>         allow you to
>         sustain more than 1024 connections.  You should still figure
>         out what is
>         keeping your connections open and find a way to reap them
>         however, as
>         this will just delay the problem.  As Glyph suggested an
>         application
>         level "ping" may help here.
>         
>         In the mean-time you can switch to the poll reactor by adding
>         "-r poll"
>         to your twistd command.
>         
>         --
>         Best Regards,
>         Luke Marsden
>         CTO, Hybrid Logic Ltd.
>         
>         Web: http://www.hybrid-cluster.com/
>         Hybrid Web Cluster - cloud web hosting
>         
>         Phone: +447791750420
>         
>         
>         
>         _______________________________________________
>         Twisted-Python mailing list
>         Twisted-Python at twistedmatrix.com
>         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 




From exarkun at twistedmatrix.com  Sun May 22 00:05:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 May 2011 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1306037124.34.1628856638@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110522/a426ef13/attachment.htm 

From rutt.4 at osu.edu  Wed May 25 22:27:12 2011
From: rutt.4 at osu.edu (Benjamin Rutt)
Date: Wed, 25 May 2011 22:27:12 -0400
Subject: [Twisted-Python] integrating a python REPL into my existing twisted
	application
Message-ID: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>

Dear twisted-python,

I?m trying to integrate a python REPL into my existing twisted 8.2.0
client-side program (which talks to another twisted server running a custom
protocol).  This client side program uses twisted.internet.stdio.StandardIO
already to interact with the user, to read commands from the user and send
them to the server.  What?s the best way to add functionality to drop into a
python REPL?  I adapted the doc/core/examples/stdin.py code below to drop
into the ?code? stdlib module to try to model for the mailing list what my
larger client program is trying to do.  It works fine on linux, until you
enter a command which outputs a large amount of data, at which point you get
a ?Resource temporarily unavailable? as can be seen below.  I?m assuming the
issue is related to StandardIO taking control of reads/writes to the stdio
file descriptors, and not integrating well with python code that writes
directly to sys.stderr, but I?m not sure what the right solution is.  I
don?t mind that the call to ?code.interact()? blocks the reactor for my use
case, but I don?t mind if better solutions are available which don?t have
that problem, either.

Modified doc/core/examples/stdin.py:
---------------------------------------
"""
An example of reading a line at a time from standard input
without blocking the reactor.
"""

from twisted.internet import stdio
from twisted.protocols import basic

class Echo(basic.LineReceiver):
    from os import linesep as delimiter

    def connectionMade(self):
        self.transport.write('> ')

    def lineReceived(self, line):
        self.sendLine('Echo: ' + line)
        self.transport.write('> ')
        import code
        code.interact()

def main():
    stdio.StandardIO(Echo())
    from twisted.internet import reactor
    reactor.run()

if __name__ == '__main__':
    main()
---------------------------------------
A sample run:

$ ./twisted-stdio.py
> foo
Python 2.6.1 (r261:67515, Jun  4 2009, 11:06:31)
[GCC 4.1.2 20071124 (Red Hat 4.1.2-43)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> 11 * 'x'
'xxxxxxxxxxx'
>>> 11111 * 'x'
'
(most recent call last):
  File "/sw/external/twisted-8.2.0/lib/python/twisted/python/log.py", line
84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/python/log.py", line
69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File
"/sw/external/twisted-8.2.0/lib/python/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/sw/external/twisted-8.2.0/lib/python/twisted/internet/process.py",
line 242, in doRead
    return fdesc.readFromFD(self.fd, self.dataReceived)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/internet/fdesc.py",
line 70, in readFromFD
    callback(output)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/internet/process.py",
line 245, in dataReceived
    self.proc.childDataReceived(self.name, data)
  File
"/sw/external/twisted-8.2.0/lib/python/twisted/internet/_posixstdio.py",
line 73, in childDataReceived
    self.protocol.dataReceived(data)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/protocols/basic.py",
line 231, in dataReceived
    why = self.lineReceived(line)
  File "./twisted-stdio.py", line 27, in lineReceived
    code.interact()
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 306, in
interact
    console.interact(banner)
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 243, in
interact
    more = self.push(line)
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 265, in push
    more = self.runsource(source, self.filename)
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 87, in
runsource
    self.runcode(code)
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 107, in
runcode
    self.showtraceback()
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 162, in
showtraceback
    map(self.write, list)
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 171, in write
    sys.stderr.write(data)
exceptions.IOError: [Errno 11] Resource temporarily unavailable

My colleague discovered the below workaround which temporarily changes the
nonblocking status of sys.stderr (and restores it afterwards), but feels
like a hack which violates across abstraction layers and which might not
work correctly in future versions of twisted:

+  import fcntl
+  oldval = fcntl.fcntl(sys.stderr.fileno(), fcntl.F_GETFL)
+  fcntl.fcntl(sys.stderr.fileno(), fcntl.F_SETFL, oldval & ~os.O_NONBLOCK)
   code.interact()
+  fcntl.fcntl(sys.stderr.fileno(), fcntl.F_SETFL, oldval)

So, any tips on integrating a REPL into our existing program without
resorting to this hack would be appreciated!  Thanks.

-- 
Benjamin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110525/dbd80223/attachment.htm 

From andrew at bemusement.org  Thu May 26 01:08:13 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Thu, 26 May 2011 15:08:13 +1000
Subject: [Twisted-Python] integrating a python REPL into my existing
 twisted application
In-Reply-To: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
References: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
Message-ID: <20110526050813.GA3115@aihal.home.puzzling.org>

Benjamin Rutt wrote:
>    Dear twisted-python,
>    ?
>    I?m trying to integrate a python REPL into my existing twisted 8.2.0
>    client-side program (which talks to another twisted server running a
>    custom protocol).? This client side program uses
>    twisted.internet.stdio.StandardIO already to interact with the user, to
>    read commands from the user and send them to the server.? What?s the best
>    way to add functionality to drop into a python REPL?? I adapted the
>    doc/core/examples/stdin.py code below to drop into the ?code? stdlib

Use twisted.conch.manhole.ManholeInterpreter.  Here's its docstring:

class ManholeInterpreter(code.InteractiveInterpreter):
    """Interactive Interpreter with special output and Deferred support.

    Aside from the features provided by L{code.InteractiveInterpreter}, this
    class captures sys.stdout output and redirects it to the appropriate
    location (the Manhole protocol instance).  It also treats Deferreds
    which reach the top-level specially: each is formatted to the user with
    a unique identifier and a new callback and errback added to it, each of
    which will format the unique identifier and the result with which the
    Deferred fires and then pass it on to the next participant in the
    callback chain.
    """

-Andrew.



From exarkun at twistedmatrix.com  Thu May 26 09:38:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 26 May 2011 13:38:56 -0000
Subject: [Twisted-Python] integrating a python REPL into my
	existing	twisted application
In-Reply-To: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
References: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
Message-ID: <20110526133856.3983.355407659.divmod.xquotient.281@localhost.localdomain>

On 02:27 am, rutt.4 at osu.edu wrote:
>Dear twisted-python,
>
>I 19m trying to integrate a python REPL into my existing twisted 8.2.0
>client-side program (which talks to another twisted server running a 
>custom
>protocol).  This client side program uses 
>twisted.internet.stdio.StandardIO
>already to interact with the user, to read commands from the user and 
>send
>them to the server.  What 19s the best way to add functionality to drop 
>into a
>python REPL?  I adapted the doc/core/examples/stdin.py code below to 
>drop
>into the  18code 19 stdlib module to try to model for the mailing list what 
>my
>larger client program is trying to do.  It works fine on linux, until 
>you
>enter a command which outputs a large amount of data, at which point 
>you get
>a  1CResource temporarily unavailable 1D as can be seen below.  I 19m 
>assuming the
>issue is related to StandardIO taking control of reads/writes to the 
>stdio
>file descriptors, and not integrating well with python code that writes
>directly to sys.stderr, but I 19m not sure what the right solution is.

In addition to what Andrew said, I'll also point out that rather than 
making code that expects blocking writes to stdout work by putting 
stdout back into blocking mode, you can make it work by instead 
providing a stdout which will buffer anything that cannot immediately be 
written non-blockingly.  StandardIO gives you exactly this; its `write` 
knows how to deal with non-blocking descriptors and buffer as necessary. 
This is why manhole doesn't have the same problem as your code calling 
directly into `code.interact`.  For details, 
<http://twistedmatrix.com/trac/browser/trunk/twisted/conch/manhole.py#L45>.

Jean-Paul


From rutt.4 at osu.edu  Fri May 27 17:45:47 2011
From: rutt.4 at osu.edu (Benjamin Rutt)
Date: Fri, 27 May 2011 17:45:47 -0400
Subject: [Twisted-Python] integrating a python REPL into my existing
 twisted application
In-Reply-To: <20110526133856.3983.355407659.divmod.xquotient.281@localhost.localdomain>
References: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
	<20110526133856.3983.355407659.divmod.xquotient.281@localhost.localdomain>
Message-ID: <BANLkTi=03yjG_zMu1hH_-joHJ676A1a0JA@mail.gmail.com>

On Thu, May 26, 2011 at 9:38 AM, <exarkun at twistedmatrix.com> wrote:

>
> In addition to what Andrew said, I'll also point out that rather than
> making code that expects blocking writes to stdout work by putting
> stdout back into blocking mode, you can make it work by instead
> providing a stdout which will buffer anything that cannot immediately be
> written non-blockingly.  StandardIO gives you exactly this; its `write`
> knows how to deal with non-blocking descriptors and buffer as necessary.
> This is why manhole doesn't have the same problem as your code calling
> directly into `code.interact`.  For details,
> <http://twistedmatrix.com/trac/browser/trunk/twisted/conch/manhole.py#L45
> >.
>
>
Thanks.  I'm having trouble integrating this or Andrew's idea into my
example.  The simplest case doesn't quite work right for me (I see '>>>'
prompts, and can interact with the python interpreter but the banner appears
at the end of the REPL after I press Ctrl+D, and then I never see the '>'
prompts from my original program anymore)...was this what you had in mind?
See the diff below.

@@ -6,6 +6,7 @@
 without blocking the reactor.
 """

+import sys
 from twisted.internet import stdio
 from twisted.protocols import basic

@@ -22,7 +23,8 @@
         code.interact()

 def main():
-    stdio.StandardIO(Echo())
+    stdio_obj = stdio.StandardIO(Echo())
+    sys.stderr = stdio_obj
     from twisted.internet import reactor
     reactor.run()


-- 
Benjamin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110527/cf34c698/attachment.htm 

From exarkun at twistedmatrix.com  Sun May 29 00:05:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 May 2011 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1306641928.15.1138331192@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110529/4806bae6/attachment.htm 

From andrew at bemusement.org  Sun May 29 23:28:04 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Mon, 30 May 2011 13:28:04 +1000
Subject: [Twisted-Python] integrating a python REPL into my existing
 twisted application
In-Reply-To: <BANLkTi=03yjG_zMu1hH_-joHJ676A1a0JA@mail.gmail.com>
References: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
	<20110526133856.3983.355407659.divmod.xquotient.281@localhost.localdomain>
	<BANLkTi=03yjG_zMu1hH_-joHJ676A1a0JA@mail.gmail.com>
Message-ID: <20110530032804.GP3115@aihal.home.puzzling.org>

Benjamin Rutt wrote:
[?]
>    Thanks.? I'm having trouble integrating this or Andrew's idea into my
>    example.? The simplest case doesn't quite work right for me (I see '>>>'
>    prompts, and can interact with the python interpreter but the banner
>    appears at the end of the REPL after I press Ctrl+D, and then I never see
>    the '>' prompts from my original program anymore)...was this what you had
>    in mind?? See the diff below.

What I had in mind was that you not use the 'code' module directly at
all: the manhole module already implements the intergration you are
looking for (and more).

e.g. what happens if you replace ?stdio.StandardIO(Echo())? in your
original example with this:

    from twisted.conch import manhole
    stdio.StandardIO(manhole.Manhole())

I certainly didn't mean to suggest assigning a StandardIO instance to
sys.stderr; it doesn't implement Python's file-like object protocol, so
it will fail to do anything useful in that context.

-Andrew.


From _ at lvh.cc  Mon May 30 06:51:54 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 30 May 2011 12:51:54 +0200
Subject: [Twisted-Python] Deferred getChild (#3621)
Message-ID: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>

Hi,


I was wondering if anyone had any concrete thoughts about what should happen
with IResource.getChild being able to return Deferreds, or, in general, the
ability to asynchronously get children of a resource. The ticket for this is
#3621 <http://tm.tl/3621>.

My use case for this is txYoga <https://github.com/lvh/txyoga>. Long story
short, it lets you write REST-y webapps. So, you could have something like:

http://www.twistedmatrix.com/labs/glyph

In local jargon, labs is a collection, and glyph is an element in it. Right
now, the only collection that actually exists is an in-memory one, and the
next one I'm going to write is a SQLite one, so blocking on child access
seems relatively reasonable. In general, however, this should be implemented
using Deferreds, since the information about glyph might be stored in a
database far, far away.

The logical way to do that for me seems to be that in getChild, you'd

I have found a mailing list
post<http://www.twistedmatrix.com/pipermail/twisted-python/2002-October/001847.html>(from
2002) where Christopher Armstrong ostensibly solved the problem. I
can't find any replies to that mailing list post.

I remember Glyph saying something about how that could potentially
change/break public API. I understand that reservation, but I don't see how
it'd be that bad. Existing code that always immediately returns a resource
would still work -- it would merely only use a part of the API it's allowed
to use (in this case, it'd ignore the fact that it is allowed to return a
deferred). Since a Deferred isn't an IResource, it wouldn't be a legal value
to return now, anyway.

Obviously, code that previously relied on getChild always returning a child
*right now*, when now that getChild will occasionally return a deferred,
would break. I'm not sure yet if that's a serious problem, or just a breach
of the contract that code previously had. I'm thinking it's the latter, but
maybe my subconscious is cheating to get to the easier answer.

I don't actually call getChild myself in my application code. I call it in
tests, and Twisted calls it for me in production. Maybe I'm missing major
use cases for getChild there? I could definitely see how that works.

Thoughts welcome :)


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110530/18636934/attachment.htm 

From _ at lvh.cc  Mon May 30 07:25:22 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 30 May 2011 13:25:22 +0200
Subject: [Twisted-Python] Asynchronous code PEP
Message-ID: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>

Hi!


I've just been in contact with Jim Fulton, who was previously mentioned in
the context of developing this PEP, and he's okay with us taking over.

IIUC the PEP involves a few things:

   1. A sane reactor abstraction/interface (although they probably won't
   like pulling in z.i.I) in the standard library which everything should be
   able to implement -- essentially twisted.loop's interface. This probably
   includes a Protocol abstraction too
   2. A simple, potentially insane implementation for it in the stdlib --
   ideally twisted.loop, but probably something like
   asyncore-except-slightly-less-terrible
   3. A way to write code for it, probably involving
   @inlineCallbacks/monocle style yields

The idea here, as Glyph told me at Pycon, I believe, is that people can just
write code that works on most backends. When they figure out the stdlib
thing suck^H^H^H^Hdoesn't satisfy their requirements, we can just say "hey,
it's okay, you can just replace the reactor reactor you have now with the
twisted one and you will get all sorts of wonderful magic to play with".

Am I completely wrong here already or does that sound like a sane problem
definition?

Either way I'm planning to put the PEP draft up on github (actually, I
already have). Whether you like github or not, I think this feature:
https://github.com/blog/844-forking-with-the-edit-button is just too amazing
for writing a PEP as a community process to let pass.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110530/8d05e1cd/attachment.htm 

From maarten at treewalker.org  Mon May 30 07:32:25 2011
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Mon, 30 May 2011 13:32:25 +0200
Subject: [Twisted-Python] Deferred getChild (#3621)
In-Reply-To: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>
References: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>
Message-ID: <201105301332.25478.maarten@treewalker.org>

On Monday 30 May 2011, Laurens Van Houtven wrote:

> My use case for this is txYoga <https://github.com/lvh/txyoga>. Long
> story short, it lets you write REST-y webapps. So, you could have
> something like:
> 
> http://www.twistedmatrix.com/labs/glyph
> 
> In local jargon, labs is a collection, and glyph is an element in it.
> Right now, the only collection that actually exists is an in-memory one,
> and the next one I'm going to write is a SQLite one, so blocking on
> child access seems relatively reasonable. In general, however, this
> should be implemented using Deferreds, since the information about glyph
> might be stored in a database far, far away.

A possible alternative would be to create a child resource that remembers 
the child name and do the database lookup in the render method. If there is 
a matching record, render a page with its data, otherwise render a 404 page.

I cannot predict whether the resulting code would be clean or ugly though, 
so I don't know how feasible this approach is.

Bye,
		Maarten


From _ at lvh.cc  Mon May 30 07:59:13 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 30 May 2011 13:59:13 +0200
Subject: [Twisted-Python] Deferred getChild (#3621)
In-Reply-To: <201105301332.25478.maarten@treewalker.org>
References: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>
	<201105301332.25478.maarten@treewalker.org>
Message-ID: <BANLkTinSpndGRhM4W+by5+G_iQ5S-RAu3w@mail.gmail.com>

Right, it's definitely possible to work around this problem using proxy
children, but going forward I don't think that's how Twisted *should*
behave.

(I actually tried this, and nope, it's not exactly pretty :-( )

The reason for that is that that would mean there's two ways to do things.
Suppose a child is missing. In the case of a blocking/immediate lookup,
you'd return an error resource from getChild. In the case of an asynchronous
lookup, you'd return a resource immediately, regardless of whether the
lookup fails or not (since you don't know yet) whose render method returns
NOT_DONE_YET and eventually finishes a request.

If getChild supported deferreds, you'd return an deferred error page from
getChild in the asynchronous case, and you'd return the error page as you
always have in the synchronous case.

That makes a lot more sense to me. What I want is "so, there's a value
(==IResource), but I don't know what it is yet", and it seems to me the
natural way of expressing that in Twisted is a Deferred.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110530/14b24abf/attachment.htm 

From glyph at twistedmatrix.com  Mon May 30 13:56:07 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 May 2011 13:56:07 -0400
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
Message-ID: <7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>


On May 30, 2011, at 7:25 AM, Laurens Van Houtven wrote:

> Hi!
> 
> I've just been in contact with Jim Fulton, who was previously mentioned in the context of developing this PEP, and he's okay with us taking over.
> 
> IIUC the PEP involves a few things:
> A sane reactor abstraction/interface (although they probably won't like pulling in z.i.I) in the standard library which everything should be able to implement -- essentially twisted.loop's interface. This probably includes a Protocol abstraction too
Yes.  Practically speaking these will have to be ABCs to fit into the Python stdlib idiom.
> A simple, potentially insane implementation for it in the stdlib -- ideally twisted.loop, but probably something like asyncore-except-slightly-less-terrible
Yes.
> A way to write code for it, probably involving @inlineCallbacks/monocle style yields
No.

In the interests of keeping the scope here as tight as possible, this is *not* a PEP about Deferreds or any of their equivalents, which are substantially more controversial.  It is _just_ about an asynchronous networking API.

The most important parts are IProtocol/ITransport/IConsumer/IProducer.  In order to do anything with these, of course, you need something somewhat like IReactorTCP/IReactorTime, but I would like to have those specified separately in the PEP, because the main interesting thing is just getting event-driven protocol logic based on a common API.  The IReactorTCP analogue would just be a stub to get started, not a complete specification of every connection mode you might want.  At the very least, there's SSL.  Plus, even in TCP, there's a lot of complexity there which you need to modify if you want to have different connection/listening options (just look at the mess on the IPv6 ticket if you think this stuff is simple).

Convenience APIs like coroutine scheduling are definitely out of scope.

> The idea here, as Glyph told me at Pycon, I believe, is that people can just write code that works on most backends. When they figure out the stdlib thing suck^H^H^H^Hdoesn't satisfy their requirements, we can just say "hey, it's okay, you can just replace the reactor reactor you have now with the twisted one and you will get all sorts of wonderful magic to play with".

In addition, it would be a way for the stdlib to gradually start evolving towards protocol implementations which parse chunks that are fed to them rather than calling recv() and expecting to block.

> Am I completely wrong here already or does that sound like a sane problem definition?

Close enough :).

> Either way I'm planning to put the PEP draft up on github (actually, I already have). Whether you like github or not, I think this feature: https://github.com/blog/844-forking-with-the-edit-button is just too amazing for writing a PEP as a community process to let pass.

Cool, glad to see the project is online somewhere, finally :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110530/372c4da5/attachment.htm 

From glyph at twistedmatrix.com  Mon May 30 14:02:47 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 May 2011 14:02:47 -0400
Subject: [Twisted-Python] Deferred getChild (#3621)
In-Reply-To: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>
References: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>
Message-ID: <75ACEA27-F977-4B45-84D3-90C73CBC6D56@twistedmatrix.com>

On May 30, 2011, at 6:51 AM, Laurens Van Houtven wrote:

> I remember Glyph saying something about how that could potentially change/break public API. I understand that reservation, but I don't see how it'd be that bad. Existing code that always immediately returns a resource would still work -- it would merely only use a part of the API it's allowed to use (in this case, it'd ignore the fact that it is allowed to return a deferred). Since a Deferred isn't an IResource, it wouldn't be a legal value to return now, anyway.

The issue is with code that calls getChild, or getChildWithDefault, or any of the APIs that are listed on #3621's description, or anything derived from them.  Any kind of resource wrapper will have to deal with these APIs, and there are a surprisingly high number of these kinds of things out in the wild.

Every public interface has callers and implementations, and both may exist out in the wild for just about any interface.

So, the problem is that we need a new interface.

The main other issue which affects IRequest is #288, so it may be worthwhile to land both of these branches at the same time.  I've discussed this previously, but the general idea would be: create an integration branch, get #288 reviewed, merge it to the integration branch, get #3621 reviewed, merge it to the integration branch, and then merge the integration branch to trunk (since it would have no unreviewed commits).  This would allow us to have only one new interface instead of two.  (I am probably forgetting some other tickets which affect IResource and IRequest, others should feel free to chime in.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110530/b4a1aed4/attachment.htm 

From _ at lvh.cc  Tue May 31 17:58:29 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 31 May 2011 23:58:29 +0200
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
Message-ID: <BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>

As promised:

https://github.com/lvh/async-pep
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110531/8f5578d2/attachment.htm 

From kevin.horn at gmail.com  Tue May 31 18:04:08 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 31 May 2011 17:04:08 -0500
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
Message-ID: <BANLkTim2Grt32mPXY_21RNUrsNE_fp2kNg@mail.gmail.com>

Hooray!

Kevin Horn

On Tue, May 31, 2011 at 4:58 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> As promised:
>
> https://github.com/lvh/async-pep
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110531/4b25792f/attachment.htm 

From teratorn at twistedmatrix.com  Sun May  1 06:37:14 2011
From: teratorn at twistedmatrix.com (teratorn at twistedmatrix.com)
Date: Sun, 1 May 2011 15:37:14 +0300
Subject: [Twisted-Python] from Meagan
Message-ID: <2133866727.ATIVLWYR949174@bhzcyuqjh.kyfvju.org>

I'm a charming blue-eyed blonde, brunette with brown eyes, and I'm looking for an intelligent man to communicate by e-mail, Skype, or on real dates!

My home page: www.rus-flirt.ru




From jaroslaw.fedewicz at gmail.com  Sun May  1 09:36:35 2011
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Sun, 01 May 2011 18:36:35 +0300
Subject: [Twisted-Python] from Meagan
In-Reply-To: <2133866727.ATIVLWYR949174@bhzcyuqjh.kyfvju.org>
References: <2133866727.ATIVLWYR949174@bhzcyuqjh.kyfvju.org>
Message-ID: <4DBD7E03.6090500@gmail.com>

On 01/05/11 15:37, teratorn at twistedmatrix.com wrote:
> I'm a charming blue-eyed blonde, brunette with brown eyes, and I'm looking for an intelligent man to communicate by e-mail, Skype, or on real dates!
>
> My home page: www.rus-flirt.ru
Of course it would be silly to react to a spam message, but the phrase 
"charming blue-eyed blonde, brunette with brown eyes" amused me quite a 
lot, making it look like she's a female relative of Zaphod Beeblebrox of 
sorts...

A pity it's a robot. Otherwise we would all take note that hanging 
around on the Twisted mailing is a necessity to be allowed in the 
"intelligent men" caste...




From alexandre at quessy.net  Sun May  1 09:53:15 2011
From: alexandre at quessy.net (Alexandre Quessy)
Date: Sun, 1 May 2011 11:53:15 -0400
Subject: [Twisted-Python] Ubuntu package of Twisted 11.0 for Lucid
In-Reply-To: <BANLkTi=d5_+sHhUmSeoa8csMnxPCrrnKow@mail.gmail.com>
References: <BANLkTi=d5_+sHhUmSeoa8csMnxPCrrnKow@mail.gmail.com>
Message-ID: <BANLkTinCqyYmnQcBjoRtaiD+Cb8THUm0=Q@mail.gmail.com>

Hello Twisted developers,

2011/4/29 Alexandre Quessy <alexandre at quessy.net>:
> I just made a Ubuntu package of Twisted 11.0 or Ubuntu Lucid (10.04)
> and put in on a PPA:
> https://launchpad.net/~sat-metalab/+archive/metalab
>

Here are some more information about the packaging effort I have done.
(I needed the fix #3948 for the wx reactor)

I put my packaging in a Git repository, since I use git-buildpackage:
https://github.com/aalex/ubuntu-twisted
I started from the current package in Debian unstable, and changed
some version numbers for build-deps and deps until it worked. (I
didn't change much)

The only thing I am not sure about is the fact I commented a call to
dh_python2 in the debian/rules file:
https://github.com/aalex/ubuntu-twisted/blob/master/debian/rules#L131
I think it should be OK though, because we use python-central, not
dh_python2.

I guess someone could test it and then move it to the official Twisted
PPA.
(I works fine as far as I can tell)
Please someone let me know when this is done, or if you guys need any
help about this.

Thank you!
-- 
Alexandre Quessy
http://alexandre.quessy.net/



From jasonjwwilliams at gmail.com  Tue May  3 15:12:12 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 3 May 2011 15:12:12 -0600
Subject: [Twisted-Python] Twisted featured on The Changelog
Message-ID: <BANLkTi=jE4vntZidvGg+XrUmDupenONRjw@mail.gmail.com>

Hey Guys,

Not sure if anyone listens to The Changelog podcast, but the episode
this week is a full feature on Twisted interviewing Glyph. :) Really
good PR for us.

http://thechangelog.com/post/5160421440/episode-0-5-8-twisted-with-glyph-lefkowitz

...and Glyph did a fantastic job! Definitely one of the better episodes.

-J



From kevin.horn at gmail.com  Tue May  3 15:46:04 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 3 May 2011 16:46:04 -0500
Subject: [Twisted-Python] Twisted featured on The Changelog
In-Reply-To: <BANLkTi=jE4vntZidvGg+XrUmDupenONRjw@mail.gmail.com>
References: <BANLkTi=jE4vntZidvGg+XrUmDupenONRjw@mail.gmail.com>
Message-ID: <BANLkTik4m4Wy9teL2Fw6TV5OKJLFFQBCkA@mail.gmail.com>

On Tue, May 3, 2011 at 4:12 PM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Hey Guys,
>
> Not sure if anyone listens to The Changelog podcast, but the episode
> this week is a full feature on Twisted interviewing Glyph. :) Really
> good PR for us.
>
>
> http://thechangelog.com/post/5160421440/episode-0-5-8-twisted-with-glyph-lefkowitz
>
> ...and Glyph did a fantastic job! Definitely one of the better episodes.
>
> -J
>
>
Yeah, I caught this earlier today.  Very nice job, Glyph.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110503/6373b823/attachment-0001.html>

From juanito1982 at gmail.com  Thu May  5 08:32:10 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Thu, 5 May 2011 16:32:10 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <1303841320.3370.116.camel@pow>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
Message-ID: <BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>

I had got the same problem using '-r epoll' options when starting the app
via twistd... When 1024 descriptors are opened, I can see 100% CPU.

Any ideas?

2011/4/26 Luke Marsden <luke-lists at hybrid-logic.co.uk>

> On Tue, 2011-04-26 at 17:42 +0200, Juan Antonio Ibañez Santorum wrote:
> > Hello!
> >    I have a Linux box serving my twisted app. All works ok except
> > after some days running (where I can see my CPU going to 100%). I saw
> > that CPU goes 100% usage when the app reaches to 1024 opened
> > descriptors (sockets).
>
> You can also switch to using the "poll" reactor, which will allow you to
> sustain more than 1024 connections.  You should still figure out what is
> keeping your connections open and find a way to reap them however, as
> this will just delay the problem.  As Glyph suggested an application
> level "ping" may help here.
>
> In the mean-time you can switch to the poll reactor by adding "-r poll"
> to your twistd command.
>
> --
> Best Regards,
> Luke Marsden
> CTO, Hybrid Logic Ltd.
>
> Web: http://www.hybrid-cluster.com/
> Hybrid Web Cluster - cloud web hosting
>
> Phone: +447791750420
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110505/505cbeb6/attachment-0001.html>

From rlotun at gmail.com  Thu May  5 08:52:56 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 5 May 2011 15:52:56 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
Message-ID: <BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>

2011/5/5 Juan Antonio Ibañez Santorum <juanito1982 at gmail.com>

> I had got the same problem using '-r epoll' options when starting the app
> via twistd... When 1024 descriptors are opened, I can see 100% CPU.
>
> Any ideas?
>
>
1. Edit /etc/sysctl.conf and place the following line there:
       fs.file-max = 999999
2. Type $ sudo sysctl -p
3. Place the following two lines:
*       soft    nofile      999999
*       hard    nofile      999999
Either reboot, or also type in `ulimit -n 999999`
4. Check that $ ulimit -a shows your open fixes set to 999999

There's nothing special about 999999 - it's just some big number
conveniently bigger than 1024. Enjoy.

Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110505/a3b95328/attachment.html>

From glyph at twistedmatrix.com  Thu May  5 12:11:49 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 May 2011 14:11:49 -0400
Subject: [Twisted-Python] Twisted featured on The Changelog
In-Reply-To: <BANLkTik4m4Wy9teL2Fw6TV5OKJLFFQBCkA@mail.gmail.com>
References: <BANLkTi=jE4vntZidvGg+XrUmDupenONRjw@mail.gmail.com>
	<BANLkTik4m4Wy9teL2Fw6TV5OKJLFFQBCkA@mail.gmail.com>
Message-ID: <9C8575FC-9770-43F8-AA11-39F04758E8DF@twistedmatrix.com>

On May 3, 2011, at 5:46 PM, Kevin Horn wrote:

> On Tue, May 3, 2011 at 4:12 PM, Jason J. W. Williams <jasonjwwilliams at gmail.com> wrote:
> Hey Guys,
> 
> Not sure if anyone listens to The Changelog podcast, but the episode
> this week is a full feature on Twisted interviewing Glyph. :) Really
> good PR for us.
> 
> http://thechangelog.com/post/5160421440/episode-0-5-8-twisted-with-glyph-lefkowitz
> 
> ...and Glyph did a fantastic job! Definitely one of the better episodes.
> 
> -J
> 
> 
> Yeah, I caught this earlier today.  Very nice job, Glyph.

Thanks for the kind words!  Listening to it myself I'm pleased to hear I didn't sound as silly as I feared I might :).


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110505/9cd5f300/attachment-0001.html>

From glyph at twistedmatrix.com  Thu May  5 12:19:01 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 May 2011 14:19:01 -0400
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
Message-ID: <25E8B37C-89B5-47CF-B872-85379656780C@twistedmatrix.com>


On May 5, 2011, at 10:52 AM, Reza Lotun wrote:

> 2011/5/5 Juan Antonio Ibañez Santorum <juanito1982 at gmail.com>
> I had got the same problem using '-r epoll' options when starting the app via twistd... When 1024 descriptors are opened, I can see 100% CPU. 
> 
> Any ideas?
> 
> 
> 1. Edit /etc/sysctl.conf and place the following line there:
>        fs.file-max = 999999
> 2. Type $ sudo sysctl -p
> 3. Place the following two lines:
> *       soft    nofile      999999
> *       hard    nofile      999999
> Either reboot, or also type in `ulimit -n 999999`
> 4. Check that $ ulimit -a shows your open fixes set to 999999
> 
> There's nothing special about 999999 - it's just some big number conveniently bigger than 1024. Enjoy.
> 
> Reza

Would you mind opening a doc bug for explaining how to do this on multiple platforms, and maybe writing a lore doc about it?  This is a really important tuning thing for anyone wanting to run even a medium-scale Twisted service.

(Also, once again, the bug is <http://twistedmatrix.com/trac/ticket/816>, somebody please fix it :).)

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110505/1a2cab15/attachment.html>

From juanito1982 at gmail.com  Thu May  5 13:02:28 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Thu, 5 May 2011 21:02:28 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
Message-ID: <BANLkTi=fZXf+OTBnN_ikw4m5Pa7fO7ryww@mail.gmail.com>

Thank you Reza!

2011/5/5 Reza Lotun <rlotun at gmail.com>

> 2011/5/5 Juan Antonio Ibañez Santorum <juanito1982 at gmail.com>
>
>> I had got the same problem using '-r epoll' options when starting the app
>> via twistd... When 1024 descriptors are opened, I can see 100% CPU.
>>
>> Any ideas?
>>
>>
> 1. Edit /etc/sysctl.conf and place the following line there:
>        fs.file-max = 999999
> 2. Type $ sudo sysctl -p
> 3. Place the following two lines:
> *       soft    nofile      999999
> *       hard    nofile      999999
> Either reboot, or also type in `ulimit -n 999999`
> 4. Check that $ ulimit -a shows your open fixes set to 999999
>
> There's nothing special about 999999 - it's just some big number
> conveniently bigger than 1024. Enjoy.
>
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110505/e130fc3a/attachment.html>

From rlotun at gmail.com  Thu May  5 16:12:10 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 5 May 2011 23:12:10 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
Message-ID: <BANLkTimTtJHRrnGLb0VHdme9TS3T4kgZuA@mail.gmail.com>

Small addition - I forgot to say to open /etc/security/limits.conf and then
place the following two lines in step 3 in:

3. Place the following two lines:
> *       soft    nofile      999999
> *       hard    nofile      999999
> Either reboot, or also type in `ulimit -n 999999`
>

Also, I'd be happy to contribute a TCP tuning note to the Twisted docs.
These are absolutely essential for any production deploy.

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110505/e79f451b/attachment.html>

From dynamicgl at gmail.com  Fri May  6 11:09:58 2011
From: dynamicgl at gmail.com (Dfgqq Dfgqq)
Date: Sat, 7 May 2011 01:09:58 +0800
Subject: [Twisted-Python] Twisted featured on The Changelog
In-Reply-To: <9C8575FC-9770-43F8-AA11-39F04758E8DF@twistedmatrix.com>
References: <BANLkTi=jE4vntZidvGg+XrUmDupenONRjw@mail.gmail.com>
	<BANLkTik4m4Wy9teL2Fw6TV5OKJLFFQBCkA@mail.gmail.com>
	<9C8575FC-9770-43F8-AA11-39F04758E8DF@twistedmatrix.com>
Message-ID: <BANLkTi=rkNfC7ppFaCvUFY0G0h-hVanxkA@mail.gmail.com>

thanks Glyph for bringing us a practical lib for async handling.. in
particular it works greatly on windows which many persons considered a
second level citizen...

On Fri, May 6, 2011 at 2:11 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> On May 3, 2011, at 5:46 PM, Kevin Horn wrote:
>
> On Tue, May 3, 2011 at 4:12 PM, Jason J. W. Williams <
> jasonjwwilliams at gmail.com> wrote:
>
>> Hey Guys,
>>
>> Not sure if anyone listens to The Changelog podcast, but the episode
>> this week is a full feature on Twisted interviewing Glyph. :) Really
>> good PR for us.
>>
>>
>> http://thechangelog.com/post/5160421440/episode-0-5-8-twisted-with-glyph-lefkowitz
>>
>> ...and Glyph did a fantastic job! Definitely one of the better episodes.
>>
>> -J
>>
>>
> Yeah, I caught this earlier today.  Very nice job, Glyph.
>
>
> Thanks for the kind words!  Listening to it myself I'm pleased to hear I
> didn't sound as silly as I feared I might :).
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110507/4bb87691/attachment-0001.html>

From dynamicgl at gmail.com  Sat May  7 02:49:22 2011
From: dynamicgl at gmail.com (Dfgqq Dfgqq)
Date: Sat, 7 May 2011 16:49:22 +0800
Subject: [Twisted-Python] when to use callInThread?
Message-ID: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>

Hi all

   I have a function like:

def longQuery(xxx)

this function will be invoked simultaneously (it means multiple thread
environment) and this function may take a while to complete.

so my question is whether i should use reactor.callInThread to take benefit
from non blocking

or use deferred object ?

It seems that deferred object doens't use threads.

Regards

GELIN YAN
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110507/39a010fe/attachment.html>

From _ at lvh.cc  Sat May  7 03:49:03 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 7 May 2011 11:49:03 +0200
Subject: [Twisted-Python] when to use callInThread?
In-Reply-To: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>
References: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>
Message-ID: <BANLkTikfQ+MfZRmR8x2dmFvpgQRO5cbU2A@mail.gmail.com>

Why is it invoked in a multithread environment? You can use deferToThread,
which gives you a deferred which runs in a thread.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110507/455840d3/attachment.html>

From marco.giusti at gmail.com  Sat May  7 03:57:05 2011
From: marco.giusti at gmail.com (Marco Giusti)
Date: Sat, 7 May 2011 11:57:05 +0200
Subject: [Twisted-Python] when to use callInThread?
In-Reply-To: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>
References: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>
Message-ID: <20110507095705.GA27121@murdoc>

On Sat, May 07, 2011 at 04:49:22PM +0800, Dfgqq Dfgqq wrote:
> Hi all
> 
>    I have a function like:
> 
> def longQuery(xxx)
> 
> this function will be invoked simultaneously (it means multiple thread
> environment) and this function may take a while to complete.
> 
> so my question is whether i should use reactor.callInThread to take benefit
> from non blocking

briefly you should use `callInThread` in two cases: when your code does
some long computation and when you use some libraries that do network
communication in a blocking manner.

> or use deferred object ?
> 
> It seems that deferred object doens't use threads.

http://twistedmatrix.com/documents/current/core/howto/gendefer.html#auto2

If `longQuery` is a DB query you should look at
twisted.enterprise.adbapi

http://twistedmatrix.com/documents/current/core/howto/rdbms.html

m.

-- 
La vera terra dei barbari non è quella che non ha mai conosciuto
l'arte, ma quella che, disseminata di capolavori, non sa nè
apprezzarli nè conservarli.
		-- Marcel Proust



From dynamicgl at gmail.com  Sat May  7 04:11:11 2011
From: dynamicgl at gmail.com (Dfgqq Dfgqq)
Date: Sat, 7 May 2011 18:11:11 +0800
Subject: [Twisted-Python] when to use callInThread?
In-Reply-To: <BANLkTikfQ+MfZRmR8x2dmFvpgQRO5cbU2A@mail.gmail.com>
References: <BANLkTimZAHVmd+620BOQb_KdKR9Z6+hjBw@mail.gmail.com>
	<BANLkTikfQ+MfZRmR8x2dmFvpgQRO5cbU2A@mail.gmail.com>
Message-ID: <BANLkTi=cVQ3hoYNnt3K8zqTW=X3jfbMY3Q@mail.gmail.com>

Hi Ivh

   I just finished the reading of deterToThread Part. I think it is what i
need. Thank you anyway..

Regards

gelin yan

On Sat, May 7, 2011 at 5:49 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Why is it invoked in a multithread environment? You can use deferToThread,
> which gives you a deferred which runs in a thread.
>
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110507/dbc7ab5e/attachment.html>

From tenth at twistedmatrix.com  Sat May  7 09:37:02 2011
From: tenth at twistedmatrix.com (Tenth)
Date: Sat, 7 May 2011 11:37:02 -0400
Subject: [Twisted-Python]  Boston Mini-Sprint: May Edition
Message-ID: <BANLkTikqDLkjjsnDkvBZyAtoBJZmNcNWrA@mail.gmail.com>

I've been lax in posting them on [Twisted-Python] lately, but the
more-or-less-monthly Boston area sprints will continue on Sunday, May 22nd
at my place in Somerville, MA. An Evite has gone out to the usual suspects,
but if you'd like to be added (or removed) from the invitations, just let me
know.

While the list has gotten fairly long, we still haven't exceeded the
capacity of my apartment... But we are looking into larger venues for when
that happens. (And places with Air Conditioning, as the arrival of Spring
here in Massachusetts means we're only a few weeks away from the Way Too Hot
And Wet season.)

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110507/771821ff/attachment.html>

From exarkun at twistedmatrix.com  Sat May  7 22:05:33 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 May 2011 04:05:33 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1304827533.65.2035155230@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110508/0a763d93/attachment-0001.html>

From juanito1982 at gmail.com  Sun May  8 12:09:59 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Sun, 8 May 2011 20:09:59 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTimTtJHRrnGLb0VHdme9TS3T4kgZuA@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTimTtJHRrnGLb0VHdme9TS3T4kgZuA@mail.gmail.com>
Message-ID: <BANLkTimX3f=w=J+G+C_UcRNXVxgmePZebw@mail.gmail.com>

MUST I apply that change or may be I SHOULD do it? Why is it necessary?

Regards

2011/5/6 Reza Lotun <rlotun at gmail.com>

> Small addition - I forgot to say to open /etc/security/limits.conf and then
> place the following two lines in step 3 in:
>
> 3. Place the following two lines:
>> *       soft    nofile      999999
>> *       hard    nofile      999999
>> Either reboot, or also type in `ulimit -n 999999`
>>
>
> Also, I'd be happy to contribute a TCP tuning note to the Twisted docs.
> These are absolutely essential for any production deploy.
>
> Thanks,
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110508/e4edb8df/attachment.html>

From rlotun at gmail.com  Sun May  8 14:27:37 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Sun, 8 May 2011 21:27:37 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTimX3f=w=J+G+C_UcRNXVxgmePZebw@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTimTtJHRrnGLb0VHdme9TS3T4kgZuA@mail.gmail.com>
	<BANLkTimX3f=w=J+G+C_UcRNXVxgmePZebw@mail.gmail.com>
Message-ID: <BANLkTim5y1wZDAp=EfX3TONqN+0nEhZ83g@mail.gmail.com>

Hi Juan,

2011/5/8 Juan Antonio Ibañez Santorum <juanito1982 at gmail.com>

> MUST I apply that change or may be I SHOULD do it? Why is it necessary?


Each network connection on your system is represented by a 'file
descriptor', in Unix terminology. By default, there is a limit on the number
of open file descriptors that can be opened at once, which is a little
different for every system (usually its 1024 or 4096), even though the
system is actually capable of opening more network connections.

This limit is set in two places - systemwide and per-user. To run a network
server you have to increase the limits both in the kernel and for the user
the network process is running as. The 'sysctl' steps I previously mentioned
increases the limits for the kernel, and the 'ulimit' steps for the user. In
the example I gave, this limit was increased to 999999 which is extremely
high, and should be suitable for almost all production server deployments.

sysctl limits can be set permanently by editing /etc/sysctl.conf with new
kernel settings and then running 'sysctl -p'. ulimits can be changed at
runtime - the 'nofile' setting can be set by 'ulimit -n', or permanently by
editing /etc/security/limits.conf and rebooting/opening a new login shell.

Hope that clears it up.

Reza
-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110508/dab0b5b5/attachment.html>

From albert.brandl at weiermayer.com  Mon May  9 04:50:46 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Mon, 9 May 2011 12:50:46 +0200
Subject: [Twisted-Python] Question about using the adbapi
Message-ID: <20110509105046.GA9241@weiermayer.com>

Hi!

In the application I'm currently working on, we gather data from 
different sources and store them in a database, but only if the
values have changed.

One example is GPS information. We don't want to store hundreds of 
identical values that are sent by the receiver, so we have to compare the 
last written row with the current latitude / longitude pair.

I use a subclass of NMEARreceiver class to determine the current latitude 
and longitude. Then I query the database using a ConnectionPool instance 
to get the previous values for latitude and longitude. If the result 
differs from the current values, a new entry is stored, again using the 
ConnectionPool.

The problem is: How do I "connect" the current latitude and longitude to 
the database query? The query returns a Deferred object, but this expects 
a callback with only one argument, the result of the query.

Storing them as instance variables of NMEAReceiver does not seem to be 
the right way, since I don't know how long it takes to query the database 
- the relevant GPS information might be overwritten by a new NMEA 
telegram when the connection pool finally triggers the callback

One workaround I've found is to add this information to the SQL query, 
but this seems quite weird to me (and doesn't work in the case that the 
query does not return a result).

A different approach would be to implement a callback with three 
arguments (result, latitude and longitude), and wrap it in a lambda 
function that fills latitude and longitude with the current values.
Would this would be a better way to handle this requirement?

How would you implement this?

Thanks & best regards,

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From exarkun at twistedmatrix.com  Mon May  9 05:03:12 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 09 May 2011 11:03:12 -0000
Subject: [Twisted-Python] Question about using the adbapi
In-Reply-To: <20110509105046.GA9241@weiermayer.com>
References: <20110509105046.GA9241@weiermayer.com>
Message-ID: <20110509110312.1992.1868333034.divmod.xquotient.1257@localhost.localdomain>

On 10:50 am, albert.brandl at weiermayer.com wrote:
>Hi!
>
>In the application I'm currently working on, we gather data from
>different sources and store them in a database, but only if the
>values have changed.
>
>One example is GPS information. We don't want to store hundreds of
>identical values that are sent by the receiver, so we have to compare 
>the
>last written row with the current latitude / longitude pair.
>
>I use a subclass of NMEARreceiver class to determine the current 
>latitude
>and longitude. Then I query the database using a ConnectionPool 
>instance
>to get the previous values for latitude and longitude. If the result
>differs from the current values, a new entry is stored, again using the
>ConnectionPool.
>
>The problem is: How do I "connect" the current latitude and longitude 
>to
>the database query? The query returns a Deferred object, but this 
>expects
>a callback with only one argument, the result of the query.

d.addCallback(f, x, y) will result in f(resultOfD, x, y)

Jean-Paul
>
>Storing them as instance variables of NMEAReceiver does not seem to be
>the right way, since I don't know how long it takes to query the 
>database
>- the relevant GPS information might be overwritten by a new NMEA
>telegram when the connection pool finally triggers the callback
>
>One workaround I've found is to add this information to the SQL query,
>but this seems quite weird to me (and doesn't work in the case that the
>query does not return a result).
>
>A different approach would be to implement a callback with three
>arguments (result, latitude and longitude), and wrap it in a lambda
>function that fills latitude and longitude with the current values.
>Would this would be a better way to handle this requirement?
>
>How would you implement this?
>
>Thanks & best regards,
>
>Albert
>--
>Albert Brandl
>Weiermayer Solutions GmbH      | Abteistra�e 12, A-4813 Altm�nster
>phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
>web: http://www.weiermayer.com
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From ypercube at gmail.com  Mon May  9 05:15:04 2011
From: ypercube at gmail.com (Pandelis Theodosiou)
Date: Mon, 9 May 2011 14:15:04 +0300
Subject: [Twisted-Python] Question about using the adbapi
In-Reply-To: <20110509105046.GA9241@weiermayer.com>
References: <20110509105046.GA9241@weiermayer.com>
Message-ID: <BANLkTinDAnnYAohU3HtcsKcJ2Rw86EN+RQ@mail.gmail.com>

I see 2 other options:

a) keep the last (longitude, latitude) pair for every receiver stored in
your script, too, besides the db. When a new pair of values arrives, compare
it with the current and only if it is different, send the "INSERT" query to
the database.

b) When a new pair of values arrives, send a query (or stored procedure)
that tells the database to check and "INSERT" only if the pair is different
that the latest.

Pandelis Theodosiou


On Mon, May 9, 2011 at 1:50 PM, Albert Brandl
<albert.brandl at weiermayer.com>wrote:

> Hi!
>
> In the application I'm currently working on, we gather data from
> different sources and store them in a database, but only if the
> values have changed.
>
> One example is GPS information. We don't want to store hundreds of
> identical values that are sent by the receiver, so we have to compare the
> last written row with the current latitude / longitude pair.
>
> I use a subclass of NMEARreceiver class to determine the current latitude
> and longitude. Then I query the database using a ConnectionPool instance
> to get the previous values for latitude and longitude. If the result
> differs from the current values, a new entry is stored, again using the
> ConnectionPool.
>
> The problem is: How do I "connect" the current latitude and longitude to
> the database query? The query returns a Deferred object, but this expects
> a callback with only one argument, the result of the query.
>
> Storing them as instance variables of NMEAReceiver does not seem to be
> the right way, since I don't know how long it takes to query the database
> - the relevant GPS information might be overwritten by a new NMEA
> telegram when the connection pool finally triggers the callback
>
> One workaround I've found is to add this information to the SQL query,
> but this seems quite weird to me (and doesn't work in the case that the
> query does not return a result).
>
> A different approach would be to implement a callback with three
> arguments (result, latitude and longitude), and wrap it in a lambda
> function that fills latitude and longitude with the current values.
> Would this would be a better way to handle this requirement?
>
> How would you implement this?
>
> Thanks & best regards,
>
> Albert
> --
> Albert Brandl
> Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
> phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
> web: http://www.weiermayer.com
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

 <http://int.ask.com/web?siteid=10000861&webqsrc=999&l=dis&q=UPDATE>
 <http://int.ask.com/web?siteid=10000861&webqsrc=999&l=dis&q=triple%20>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110509/f15e8be5/attachment.html>

From juanito1982 at gmail.com  Mon May  9 06:48:50 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Mon, 9 May 2011 14:48:50 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTim5y1wZDAp=EfX3TONqN+0nEhZ83g@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTimTtJHRrnGLb0VHdme9TS3T4kgZuA@mail.gmail.com>
	<BANLkTimX3f=w=J+G+C_UcRNXVxgmePZebw@mail.gmail.com>
	<BANLkTim5y1wZDAp=EfX3TONqN+0nEhZ83g@mail.gmail.com>
Message-ID: <BANLkTikm82RKLRik4aV63fFkdviKjPOjfg@mail.gmail.com>

+1

Perfect explanation. Thank you very much!

2011/5/8 Reza Lotun <rlotun at gmail.com>

> Hi Juan,
>
> 2011/5/8 Juan Antonio Ibañez Santorum <juanito1982 at gmail.com>
>
>> MUST I apply that change or may be I SHOULD do it? Why is it necessary?
>
>
> Each network connection on your system is represented by a 'file
> descriptor', in Unix terminology. By default, there is a limit on the number
> of open file descriptors that can be opened at once, which is a little
> different for every system (usually its 1024 or 4096), even though the
> system is actually capable of opening more network connections.
>
> This limit is set in two places - systemwide and per-user. To run a network
> server you have to increase the limits both in the kernel and for the user
> the network process is running as. The 'sysctl' steps I previously mentioned
> increases the limits for the kernel, and the 'ulimit' steps for the user. In
> the example I gave, this limit was increased to 999999 which is extremely
> high, and should be suitable for almost all production server deployments.
>
> sysctl limits can be set permanently by editing /etc/sysctl.conf with new
> kernel settings and then running 'sysctl -p'. ulimits can be changed at
> runtime - the 'nofile' setting can be set by 'ulimit -n', or permanently by
> editing /etc/security/limits.conf and rebooting/opening a new login shell.
>
> Hope that clears it up.
>
> Reza
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110509/a007d62b/attachment.html>

From albert.brandl at weiermayer.com  Tue May 10 01:26:37 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 10 May 2011 09:26:37 +0200
Subject: [Twisted-Python] Question about using the adbapi
In-Reply-To: <20110509110312.1992.1868333034.divmod.xquotient.1257@localhost.localdomain>
References: <20110509105046.GA9241@weiermayer.com>
	<20110509110312.1992.1868333034.divmod.xquotient.1257@localhost.localdomain>
Message-ID: <20110510072637.GA2269@weiermayer.com>

On Mon, May 09, 2011 at 11:03:12AM -0000, exarkun at twistedmatrix.com wrote:
>
> d.addCallback(f, x, y) will result in f(resultOfD, x, y)

Cool - no need to wrap the method call :-). The documentation for runQuery
does not mention this feature, though:

"Returns a Deferred which will fire the return value of a DB-API 
cursor's 'fetchall' method, or a Failure."

Maybe it's obvious for people who know how Deferreds work :-/

Thanks, and best regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From albert.brandl at weiermayer.com  Tue May 10 01:50:30 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 10 May 2011 09:50:30 +0200
Subject: [Twisted-Python] Question about using the adbapi
In-Reply-To: <BANLkTinDAnnYAohU3HtcsKcJ2Rw86EN+RQ@mail.gmail.com>
References: <20110509105046.GA9241@weiermayer.com>
	<BANLkTinDAnnYAohU3HtcsKcJ2Rw86EN+RQ@mail.gmail.com>
Message-ID: <20110510075030.GA4098@weiermayer.com>

On Mon, May 09, 2011 at 02:15:04PM +0300, Pandelis Theodosiou wrote:

> a) keep the last (longitude, latitude) pair for every receiver stored 
> in your script, too, besides the db. When a new pair of values 
> arrives, compare it with the current and only if it is different, send 
> the "INSERT" query to the database.

This will only work if I can guarantee that the database query is 
finished before the next (longitude, latitude) pair arrives. Otherwise, 
I'll lose the previous pair. Storing a list of (longitude, latitude) 
pairs won't work either: the database queries are executed in separate 
threads, and I can't control the order in which they will finish. So
I have no correspondence between the query result and a (longitude,
latitude) pair.

For GPS data, this might not be an issue, since a new position arrives 
only about once a second. But other data (e.g. the current speed) are 
sent every ten ms or so. For these, I have to make sure that the current 
data corresponds to the query result.

> b) When a new pair of values arrives, send a query (or stored 
> procedure) that tells the database to check and "INSERT" only if the 
> pair is different that the latest.

That is an interesting option, since it moves the responsibility from
the Twisted server to the database.

Thanks & best regards,

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From juanito1982 at gmail.com  Tue May 10 09:35:39 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Tue, 10 May 2011 17:35:39 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
Message-ID: <BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>

Still having problems...

I can see that twistd process has a higher number than 1024 looking at
/proc/pid/limits but whe 1024 descriptors number gets reached the system
becomes unstable. It also has been launche using '-r epoll' option. Any
other idea?



2011/5/5 Reza Lotun <rlotun at gmail.com>

> 2011/5/5 Juan Antonio Ibañez Santorum <juanito1982 at gmail.com>
>
>> I had got the same problem using '-r epoll' options when starting the app
>> via twistd... When 1024 descriptors are opened, I can see 100% CPU.
>>
>> Any ideas?
>>
>>
> 1. Edit /etc/sysctl.conf and place the following line there:
>        fs.file-max = 999999
> 2. Type $ sudo sysctl -p
> 3. Place the following two lines:
> *       soft    nofile      999999
> *       hard    nofile      999999
> Either reboot, or also type in `ulimit -n 999999`
> 4. Check that $ ulimit -a shows your open fixes set to 999999
>
> There's nothing special about 999999 - it's just some big number
> conveniently bigger than 1024. Enjoy.
>
> Reza
>
> --
> Reza Lotun
> mobile: +44 (0)7521 310 763
> email:  rlotun at gmail.com
> work:   reza at tweetdeck.com
> twitter: @rlotun
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110510/fc99c3fc/attachment-0001.html>

From rlotun at gmail.com  Tue May 10 09:45:57 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 10 May 2011 16:45:57 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>
Message-ID: <BANLkTimLW8nNeJi3UqdkfLw4iCog7PR3Uw@mail.gmail.com>

Hmm, are you running your process as root? If so, you may need to add
the following two lines in /etc/security/limits.conf:

 root       soft    nofile      999999
 root       hard    nofile      999999

(yes, root, even though you previously supplied '*').

I'd also reboot just to be sure. If you still have trouble after that,
then perhaps it's something to do with your code.

Reza

2011/5/10 Juan Antonio Ibañez Santorum <juanito1982 at gmail.com>
>
> Still having problems...
> I can see that twistd process has a higher number than 1024 looking at /proc/pid/limits but whe 1024 descriptors number gets reached the system becomes unstable. It also has been launche using '-r epoll' option. Any other idea?

--
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From itamar at itamarst.org  Tue May 10 09:50:33 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 10 May 2011 11:50:33 -0400
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>
Message-ID: <95d637979bd8f62255d79ef909c49d94.squirrel@webmail.zoteca.com>

> Still having problems...
>
> I can see that twistd process has a higher number than 1024 looking at
> /proc/pid/limits but whe 1024 descriptors number gets reached the system
> becomes unstable. It also has been launche using '-r epoll' option. Any
> other idea?

0. What does "unstable" mean?

1. There may be user-specific limits in addition to OS-level limits. Did
you use "ulimit -n" to raise that limit?

2. Are you using processes on a version of Linux older than 2.6.11?

http://twistedmatrix.com/trac/ticket/918




From juanito1982 at gmail.com  Tue May 10 10:07:06 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Tue, 10 May 2011 18:07:06 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <95d637979bd8f62255d79ef909c49d94.squirrel@webmail.zoteca.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTinAi-SMcTSsXeWrOhvrFavY_tsSgA@mail.gmail.com>
	<BANLkTinv7OjZq3sL7LaOs7BBAUANb_7cBg@mail.gmail.com>
	<BANLkTin3hRQ7NEyNo4aaKFmCNj4UO-s6eQ@mail.gmail.com>
	<95d637979bd8f62255d79ef909c49d94.squirrel@webmail.zoteca.com>
Message-ID: <BANLkTikN_VbOZ0Z0jbqEzxhLL0+3DmDt_w@mail.gmail.com>

2011/5/10 Itamar Turner-Trauring <itamar at itamarst.org>

> > Still having problems...
> >
> > I can see that twistd process has a higher number than 1024 looking at
> > /proc/pid/limits but whe 1024 descriptors number gets reached the system
> > becomes unstable. It also has been launche using '-r epoll' option. Any
> > other idea?
>
> 0. What does "unstable" mean?
>

I started to see an incrment on memory usage and stopping to accept new
connections. I had to restart the app as it is running in a production
enviroment.


>
> 1. There may be user-specific limits in addition to OS-level limits. Did
> you use "ulimit -n" to raise that limit?
>

Yes, and I checked the limit was ok looking at /proc/pid/limits


>
> 2. Are you using processes on a version of Linux older than 2.6.11?
>

No. 2.6.34 on a Centos distro.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110510/e6818ed8/attachment-0001.html>

From facundobatista at gmail.com  Tue May 10 12:51:00 2011
From: facundobatista at gmail.com (Facundo Batista)
Date: Tue, 10 May 2011 15:51:00 -0300
Subject: [Twisted-Python] Some "spread" objects and comparison semantics
Message-ID: <BANLkTi=wG52pUQJQMAmuY42KjV2rD77gGA@mail.gmail.com>

I'm analysing the code in twisted/spread/flavors.py and
twisted/spread/pb.py, trying to remove the __cmp__ and cmp() in
RemoteCache, RemoteCacheMethod and RemoteCacheObserver classes.

They all have __cmp__ methods, but as there is not any test for these,
and it's not specified in the documentation, I don't know if the
comparison method is to compare by equality, or for these objects to
be orderable.

Yes, I could replace __cmp__ with the full rich comparison battery,
but it's not worth it if the semantic of these objects will not use
it.

Thanks!

-- 
.    Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/



From exarkun at twistedmatrix.com  Wed May 11 11:05:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 11 May 2011 17:05:22 -0000
Subject: [Twisted-Python] Some "spread" objects and comparison semantics
In-Reply-To: <BANLkTi=wG52pUQJQMAmuY42KjV2rD77gGA@mail.gmail.com>
References: <BANLkTi=wG52pUQJQMAmuY42KjV2rD77gGA@mail.gmail.com>
Message-ID: <20110511170522.1992.448451910.divmod.xquotient.1327@localhost.localdomain>

On 10 May, 06:51 pm, facundobatista at gmail.com wrote:
>I'm analysing the code in twisted/spread/flavors.py and
>twisted/spread/pb.py, trying to remove the __cmp__ and cmp() in
>RemoteCache, RemoteCacheMethod and RemoteCacheObserver classes.
>
>They all have __cmp__ methods, but as there is not any test for these,
>and it's not specified in the documentation, I don't know if the
>comparison method is to compare by equality, or for these objects to
>be orderable.
>
>Yes, I could replace __cmp__ with the full rich comparison battery,
>but it's not worth it if the semantic of these objects will not use
>it.

I doubt anyone remembers the rationale for these methods.  We should err 
on the safe side and preserve the existing behavior.

Jean-Paul



From facundobatista at gmail.com  Wed May 11 11:44:55 2011
From: facundobatista at gmail.com (Facundo Batista)
Date: Wed, 11 May 2011 14:44:55 -0300
Subject: [Twisted-Python] Some "spread" objects and comparison semantics
In-Reply-To: <20110511170522.1992.448451910.divmod.xquotient.1327@localhost.localdomain>
References: <BANLkTi=wG52pUQJQMAmuY42KjV2rD77gGA@mail.gmail.com>
	<20110511170522.1992.448451910.divmod.xquotient.1327@localhost.localdomain>
Message-ID: <BANLkTikduVRgQyktEJ_C7n5E-PDS1NjNNw@mail.gmail.com>

On Wed, May 11, 2011 at 2:05 PM,  <exarkun at twistedmatrix.com> wrote:

> I doubt anyone remembers the rationale for these methods.  We should err
> on the safe side and preserve the existing behavior.

Ok, I'll add tests to check this also.

-- 
.    Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/



From dialtone at gmail.com  Wed May 11 12:02:22 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 11 May 2011 11:02:22 -0700
Subject: [Twisted-Python] EuroPython 2011 early bird ends in 2 days
Message-ID: <52E2ED4C-A8F5-41BD-BB1A-3F74F46ACDA0@gmail.com>

Hi everyone,

this is just a gentle reminder that EuroPython 2011 early bird ends in 2 days, some core Twisted developers will be there and there will be at least one tutorial about Twisted.

EuroPython is the official European conference about the Python programming language. It is aimed at everyone in the Python community, of all skill levels, both users and programmers.

It will be held in Florence from June 20th-24th for the conference and June 25th-26th for sprint days.

More information available at: http://ep2011.europython.eu/

The schedule of the conference is available at http://ep2011.europython.eu/p3/schedule/ep2011/

For those of you that are not living in Italy we will give you the opportunity to buy a cheap pre-paid voice/data enabled SIM for your smartphone or computer (it has tethering enabled) so that you don't have to pay for expensive international calls and you will be able to use your phone, more details here http://ep2011.europython.eu/p3/mobile/ 

And for all of you who have a family it's possible to have them come with you and while you're at the conference they will be able to visit Tuscany's amazing locations thanks to our partner program, more details at http://ep2011.europython.eu/partner-program

We want the Python Community to embrace and support diversity, for this reason Google is offering a special Diversity Grant reserved for female computer scientists, more information here http://ep2011.europython.eu/google-diversity-grant

And we are also working to create a special grant for students and unemployed (but searching for a job) programmers that, thanks to those speakers who decided to pay the full conference price, will enable us to offer 3 free tickets for students and 3 free tickets for unemployed, details will be ready soon on EuroPython 2011 blog: http://ep2011.europython.eu/blog/

See you all in Florence!

-- 
Valentino Volonghi
EuroPython 2011 Organization


From sandro at e-den.it  Wed May 11 12:18:17 2011
From: sandro at e-den.it (Alessandro Dentella)
Date: Wed, 11 May 2011 20:18:17 +0200
Subject: [Twisted-Python] test if thread is reactor's thread
Message-ID: <20110511181817.GA18743@ubuntu>


Hi,


is there a way to test if the thread a function is called is the reactor's
thread?

I have a function that can be called from the main thread or from the
reactor's thread and should behave differently...


thanks


sandro
*:-)


-- 
Sandro Dentella  *:-)
http://www.reteisi.org             Soluzioni libere per le scuole
http://sqlkit.argolinux.org        SQLkit home page - PyGTK/python/sqlalchemy



From _ at lvh.cc  Wed May 11 12:26:21 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 11 May 2011 20:26:21 +0200
Subject: [Twisted-Python] EuroPython 2011 early bird ends in 2 days
In-Reply-To: <52E2ED4C-A8F5-41BD-BB1A-3F74F46ACDA0@gmail.com>
References: <52E2ED4C-A8F5-41BD-BB1A-3F74F46ACDA0@gmail.com>
Message-ID: <BANLkTimpuT_sPV4RMxPKqqVzABFhcvm1YA@mail.gmail.com>

Wooo!

Perhaps as an extra advertisement we should make a list of Twisted people
showing up?

At the very least it's going to be me (lvh) and apparently also Valentino
(dialtone) :-)

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110511/e6f5c62f/attachment-0001.html>

From jkakar at kakar.ca  Wed May 11 13:41:49 2011
From: jkakar at kakar.ca (Jamu Kakar)
Date: Wed, 11 May 2011 21:41:49 +0200
Subject: [Twisted-Python] test if thread is reactor's thread
In-Reply-To: <20110511181817.GA18743@ubuntu>
References: <20110511181817.GA18743@ubuntu>
Message-ID: <BANLkTinSiZeMKntxZS6WYPc6su9aKukY3A@mail.gmail.com>

Hi Alessandro,

On Wed, May 11, 2011 at 8:18 PM, Alessandro Dentella <sandro at e-den.it> wrote:
> is there a way to test if the thread a function is called is the reactor's
> thread?

Yes, you can do it with code like this:

from threading import currentThread

if currentThread().getName() == 'MainThread':
    # Code is running in the main reactor thread
else:
    # Code is running in a child thread

> I have a function that can be called from the main thread or from the
> reactor's thread and should behave differently...

We had a situation like this recently in Fluidinfo.  We started with
the trick above, but it was a bit weird.  The situation we had was
that we had to run some asynchronous code (ie, a function returning a
Deferred) in a thread used to run a database transaction.  We ended up
with a nice solution.  Something like:

# In the transaction thread.
proxy = doAThing()
result = blockingCallFromThread(proxy.run)

At first, deep inside doAThing we had the black magic above, but it
was awkward to test and behaved differently depending on which thread
the code ran in, which was confusing to understand.  We refactored
doAThing to not run the asynchronous code but to, instead, return a
proxy object with a method that needed to be run asynchronously.  The
proxy was configured with the arguments and such needed for it to run
properly, so the user could just invoke the asynchronous code in the
way that made sense for them.

It's much nicer because the caller of the function gets to decide how
to run the asynchronous code, instead of it being hard-coded deep in
some logic.  Also, the logic is much easier to comprehend because it
only behaves one way.  Anyway, maybe this strategy won't work for you,
but behaves-differently-depending-on-the-thread-you-use is probably a
behaviour you should avoid if possible.

Thanks,
J.



From therve at free.fr  Wed May 11 14:08:38 2011
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Wed, 11 May 2011 22:08:38 +0200
Subject: [Twisted-Python] EuroPython 2011 early bird ends in 2 days
In-Reply-To: <BANLkTimpuT_sPV4RMxPKqqVzABFhcvm1YA@mail.gmail.com>
References: <52E2ED4C-A8F5-41BD-BB1A-3F74F46ACDA0@gmail.com>
	<BANLkTimpuT_sPV4RMxPKqqVzABFhcvm1YA@mail.gmail.com>
Message-ID: <4DCAECC6.5080403@free.fr>

Le 11/05/2011 20:26, Laurens Van Houtven a écrit :
> Wooo!
>
> Perhaps as an extra advertisement we should make a list of Twisted people
> showing up?
>
> At the very least it's going to be me (lvh) and apparently also Valentino
> (dialtone) :-)

Heya!

Just booked my tickets as well, going to be there from Tuesday to
Friday, so see you guys there.

-- 
Thomas



From therve at free.fr  Wed May 11 14:11:27 2011
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Wed, 11 May 2011 22:11:27 +0200
Subject: [Twisted-Python] test if thread is reactor's thread
In-Reply-To: <20110511181817.GA18743@ubuntu>
References: <20110511181817.GA18743@ubuntu>
Message-ID: <4DCAED6F.1000004@free.fr>

Le 11/05/2011 20:18, Alessandro Dentella a écrit :
> Hi,
>
>
> is there a way to test if the thread a function is called is the reactor's
> thread?
>
> I have a function that can be called from the main thread or from the
> reactor's thread and should behave differently...

Hi,

twisted.python.threadable.isInIOThread() should answer to that question.

Regards,

-- 
Thomas



From sandro at e-den.it  Wed May 11 14:46:35 2011
From: sandro at e-den.it (Alessandro Dentella)
Date: Wed, 11 May 2011 22:46:35 +0200
Subject: [Twisted-Python] test if thread is reactor's thread
In-Reply-To: <4DCAED6F.1000004@free.fr>
	<BANLkTinSiZeMKntxZS6WYPc6su9aKukY3A@mail.gmail.com>
Message-ID: <20110511204635.GA19025@ubuntu>


thanks to both of you for the hints. My situation is so simple that i guess
a twisted.python.threadable.isInIOThread() should suffice.

sandro
*:-)



From glyph at twistedmatrix.com  Thu May 12 10:50:19 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 12 May 2011 12:50:19 -0400
Subject: [Twisted-Python] Some "spread" objects and comparison semantics
In-Reply-To: <20110511170522.1992.448451910.divmod.xquotient.1327@localhost.localdomain>
References: <BANLkTi=wG52pUQJQMAmuY42KjV2rD77gGA@mail.gmail.com>
	<20110511170522.1992.448451910.divmod.xquotient.1327@localhost.localdomain>
Message-ID: <273C32A9-D424-4D4C-BF25-9E4202185773@twistedmatrix.com>

On May 11, 2011, at 1:05 PM, exarkun at twistedmatrix.com wrote:

> I doubt anyone remembers the rationale for these methods.  We should err 
> on the safe side and preserve the existing behavior.

I should point out that this isn't erring, technically, according to <http://twistedmatrix.com/trac/wiki/CompatibilityPolicy>.

For a given behavior whose implementation you want to change, you always have to preserve the behavior, in case someone is depending on it.  If you think some behavior is a really bad idea (and I don't necessarily think sortability/comparability is a bad idea) you can always deprecate it, but you have to preserve it while it's deprecated.

Thanks for asking, though, Facundo!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110512/fb147487/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat May 14 22:05:47 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 May 2011 04:05:47 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1305432347.84.1380335374@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110515/f5279d29/attachment-0001.html>

From dynamicgl at gmail.com  Sun May 15 10:10:01 2011
From: dynamicgl at gmail.com (Dfgqq Dfgqq)
Date: Mon, 16 May 2011 00:10:01 +0800
Subject: [Twisted-Python] a problem about iocp and callInThread
Message-ID: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>

Hi all

     I just encountered a problem about iocp reactor & callInThread. I
paste the code following:

from twisted.internet import iocpreactor
iocpreactor.install()
from twisted.internet import reactor

class ThreadTest:
    def __init__(self,name):
        self.count = 0
        self.max = 5
        self.wait = 1
        self.name = name

    def __call__(self):
        self.Execute()

    def Execute(self):
        print self.name, time.time()
        self.count += 1
        if self.count <self.max:
            reactor.callLater(self.wait, reactor.callInThread, self.Execute)
        else:
            print self.name, "stop"

reactor.callInThread(ThreadTest("test"))

the problem is every time the print method was invoked, i noticed that
the difference between current invoke and previous invoke was 2
seconds. In theory ,it should be one second. When i used the plain
reactor (which means no iocpreactor), the difference was one second
which is a correct value.

I want to know what makes callInThread so special with iocpreactor?

BTW: i used windows 7 & window s2008.

Regards

gelin yan



From itamar at itamarst.org  Sun May 15 10:21:19 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 15 May 2011 12:21:19 -0400
Subject: [Twisted-Python] a problem about iocp and callInThread
In-Reply-To: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
References: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
Message-ID: <bb66a964fe29649f1ecdcb88e7332944.squirrel@webmail.zoteca.com>


> I want to know what makes callInThread so special with iocpreactor?

You're calling a reactor method from a thread; that is a bug, the reactor
is not thread safe. As a result, different reactors may fail differently.
Use reactor.callFromThread to call reactor methods from a thread.




From mithrandi at mithrandi.net  Sun May 15 10:26:50 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 15 May 2011 18:26:50 +0200
Subject: [Twisted-Python] a problem about iocp and callInThread
In-Reply-To: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
References: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
Message-ID: <BANLkTik8WSVLJVJ3n_NWJtce1GCKWqvSnw@mail.gmail.com>

On Sun, May 15, 2011 at 6:10 PM, Dfgqq Dfgqq <dynamicgl at gmail.com> wrote:
>            reactor.callLater(self.wait, reactor.callInThread, self.Execute)

I believe this should be:

reactor.callFromThread(reactor.callLater, self.wait,
reactor.callInThread, self.Execute)

Execute is not being called in the reactor thread, so the only Twisted
API you are allowed to use is reactor.callFromThread, which schedules
a callable to run in the reactor thread and wakes up the reactor if
necessary. Calling other APIs from a non-reactor thread can result in
various misbehaviours such as delays in event processing, as you are
observing.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From exarkun at twistedmatrix.com  Sun May 15 10:29:16 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 May 2011 16:29:16 -0000
Subject: [Twisted-Python] a problem about iocp and callInThread
In-Reply-To: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
References: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
Message-ID: <20110515162916.3983.814564370.divmod.xquotient.11@localhost.localdomain>

On 04:10 pm, dynamicgl at gmail.com wrote:
>Hi all
>
>     I just encountered a problem about iocp reactor & callInThread. I
>paste the code following:
>
>from twisted.internet import iocpreactor
>iocpreactor.install()
>from twisted.internet import reactor
>
>class ThreadTest:
>    def __init__(self,name):
>        self.count = 0
>        self.max = 5
>        self.wait = 1
>        self.name = name
>
>    def __call__(self):
>        self.Execute()
>
>    def Execute(self):
>        print self.name, time.time()
>        self.count += 1
>        if self.count <self.max:
>            reactor.callLater(self.wait, reactor.callInThread, 
>self.Execute)
>        else:
>            print self.name, "stop"
>
>reactor.callInThread(ThreadTest("test"))
>
>the problem is every time the print method was invoked, i noticed that
>the difference between current invoke and previous invoke was 2
>seconds. In theory ,it should be one second. When i used the plain

You're calling reactor.callLater from a non-reactor thread.  This isn't 
supported and will produce unpredictable behavior.

Jean-Paul
>reactor (which means no iocpreactor), the difference was one second
>which is a correct value.
>
>I want to know what makes callInThread so special with iocpreactor?
>
>BTW: i used windows 7 & window s2008.
>
>Regards
>
>gelin yan
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dynamicgl at gmail.com  Sun May 15 11:27:26 2011
From: dynamicgl at gmail.com (Dfgqq Dfgqq)
Date: Mon, 16 May 2011 01:27:26 +0800
Subject: [Twisted-Python] a problem about iocp and callInThread
In-Reply-To: <20110515162916.3983.814564370.divmod.xquotient.11@localhost.localdomain>
References: <BANLkTi=t_V11NCB85+LTZFvVrtHtUgZ8KQ@mail.gmail.com>
	<20110515162916.3983.814564370.divmod.xquotient.11@localhost.localdomain>
Message-ID: <BANLkTikiQa5dw-WUJdu0bf-Q0Jmec6MEjg@mail.gmail.com>

Hi all
I modified my code as

reactor.callFromThread(reactor.callLater, self.wait, reactor.callInThread,
self.Execute)

based on your comments.

now the problem have been solved. Thanks your guys. I appreciate your help.

Regards

gelin yan

On Mon, May 16, 2011 at 12:29 AM, <exarkun at twistedmatrix.com> wrote:

> On 04:10 pm, dynamicgl at gmail.com wrote:
> >Hi all
> >
> >     I just encountered a problem about iocp reactor & callInThread. I
> >paste the code following:
> >
> >from twisted.internet import iocpreactor
> >iocpreactor.install()
> >from twisted.internet import reactor
> >
> >class ThreadTest:
> >    def __init__(self,name):
> >        self.count = 0
> >        self.max = 5
> >        self.wait = 1
> >        self.name = name
> >
> >    def __call__(self):
> >        self.Execute()
> >
> >    def Execute(self):
> >        print self.name, time.time()
> >        self.count += 1
> >        if self.count <self.max:
> >            reactor.callLater(self.wait, reactor.callInThread,
> >self.Execute)
> >        else:
> >            print self.name, "stop"
> >
> >reactor.callInThread(ThreadTest("test"))
> >
> >the problem is every time the print method was invoked, i noticed that
> >the difference between current invoke and previous invoke was 2
> >seconds. In theory ,it should be one second. When i used the plain
>
> You're calling reactor.callLater from a non-reactor thread.  This isn't
> supported and will produce unpredictable behavior.
>
> Jean-Paul
> >reactor (which means no iocpreactor), the difference was one second
> >which is a correct value.
> >
> >I want to know what makes callInThread so special with iocpreactor?
> >
> >BTW: i used windows 7 & window s2008.
> >
> >Regards
> >
> >gelin yan
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110516/37557fd6/attachment-0001.html>

From dynamicgl at gmail.com  Sun May 15 23:46:08 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 16 May 2011 13:46:08 +0800
Subject: [Twisted-Python] Is it possible to know what kind of methods are
	thread safe?
Message-ID: <BANLkTik7iaTGscsm-cmXXyJKM9Hg4oBt1g@mail.gmail.com>

Hi all

   I notice the core doc mentions that "Most code in Twisted is not
thread-safe. For example, writing data to a transport from a protocol is not
thread-safe. "

   I want to know whether there is a way to know what methods are thread
safe besides of reading source codes? Or I use
reacator.callFromThread for all related methods from threads other than
reactor thread?

Thanks

dfgqq (gelin yan)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110516/31af37af/attachment.html>

From amauryfa at gmail.com  Mon May 16 00:07:13 2011
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Mon, 16 May 2011 08:07:13 +0200
Subject: [Twisted-Python] Is it possible to know what kind of methods
 are thread safe?
In-Reply-To: <BANLkTik7iaTGscsm-cmXXyJKM9Hg4oBt1g@mail.gmail.com>
References: <BANLkTik7iaTGscsm-cmXXyJKM9Hg4oBt1g@mail.gmail.com>
Message-ID: <BANLkTi=5SFaw-YsxyTTQ1X7p1Lbj3xSkeQ@mail.gmail.com>

Hi,

2011/5/16 gelin yan <dynamicgl at gmail.com>:
>    I notice the core doc mentions that "Most code in Twisted is not
> thread-safe. For example, writing data to a transport from a protocol is not
> thread-safe. "
>
>    I want to know whether there is a way to know what methods are thread
> safe besides of reading source codes? Or I use
> reacator.callFromThread for all related methods from threads other than
> reactor thread?

Yes. Unless it is clearly mentioned in a function's documentation,
reactor.callFromThread is the only function that is safe to call from
any thread.

-- 
Amaury Forgeot d'Arc



From juanito1982 at gmail.com  Thu May 19 13:57:06 2011
From: juanito1982 at gmail.com (=?ISO-8859-1?Q?Juan_Antonio_Iba=F1ez_Santorum?=)
Date: Thu, 19 May 2011 21:57:06 +0200
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <1303841320.3370.116.camel@pow>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
Message-ID: <BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>

Is there any way to check if it is using the the poll/epoll reactor?

Regards

2011/4/26 Luke Marsden <luke-lists at hybrid-logic.co.uk>

> On Tue, 2011-04-26 at 17:42 +0200, Juan Antonio Ibañez Santorum wrote:
> > Hello!
> >    I have a Linux box serving my twisted app. All works ok except
> > after some days running (where I can see my CPU going to 100%). I saw
> > that CPU goes 100% usage when the app reaches to 1024 opened
> > descriptors (sockets).
>
> You can also switch to using the "poll" reactor, which will allow you to
> sustain more than 1024 connections.  You should still figure out what is
> keeping your connections open and find a way to reap them however, as
> this will just delay the problem.  As Glyph suggested an application
> level "ping" may help here.
>
> In the mean-time you can switch to the poll reactor by adding "-r poll"
> to your twistd command.
>
> --
> Best Regards,
> Luke Marsden
> CTO, Hybrid Logic Ltd.
>
> Web: http://www.hybrid-cluster.com/
> Hybrid Web Cluster - cloud web hosting
>
> Phone: +447791750420
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110519/5fe19d56/attachment-0001.html>

From rlotun at gmail.com  Thu May 19 14:07:25 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 19 May 2011 21:07:25 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
Message-ID: <BANLkTimCf7UNoBy6HAp=8ag_6zO2P9xQzQ@mail.gmail.com>

Can you not do a:

from twisted.python import log
from twisted.internet import reactor
log.msg('My reactor is: %r' % repr(reactor))

somewhere in your code to determine it?

Are you running your application with twistd? You can pass a reactor
implementation via the '-r' option.

Reza

2011/5/19 Juan Antonio Ibañez Santorum <juanito1982 at gmail.com>:
> Is there any way to check if it is using the the poll/epoll reactor?
> Regards
>
> 2011/4/26 Luke Marsden <luke-lists at hybrid-logic.co.uk>
>>
>> On Tue, 2011-04-26 at 17:42 +0200, Juan Antonio Ibañez Santorum wrote:
>> > Hello!
>> >    I have a Linux box serving my twisted app. All works ok except
>> > after some days running (where I can see my CPU going to 100%). I saw
>> > that CPU goes 100% usage when the app reaches to 1024 opened
>> > descriptors (sockets).
>>
>> You can also switch to using the "poll" reactor, which will allow you to
>> sustain more than 1024 connections.  You should still figure out what is
>> keeping your connections open and find a way to reap them however, as
>> this will just delay the problem.  As Glyph suggested an application
>> level "ping" may help here.
>>
>> In the mean-time you can switch to the poll reactor by adding "-r poll"
>> to your twistd command.
>>
>> --
>> Best Regards,
>> Luke Marsden
>> CTO, Hybrid Logic Ltd.
>>
>> Web: http://www.hybrid-cluster.com/
>> Hybrid Web Cluster - cloud web hosting
>>
>> Phone: +447791750420
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From luke-lists at hybrid-logic.co.uk  Thu May 19 14:08:00 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Thu, 19 May 2011 21:08:00 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
Message-ID: <1305835680.3272.49.camel@pow>

Hi Juan,

You could try:

        print reactor.__class__

This should allow you to check that the twistd command-line argument is
working.  Example:
        
        luke at pow:~$ twistd -noy foo.py |head -n 1
        <class 'twisted.internet.selectreactor.SelectReactor'>
        
        luke at pow:~$ twistd -r poll -noy foo.py |head -n 1
        <class 'twisted.internet.pollreactor.PollReactor'>
        
        luke at pow:~$ cat foo.py
        from twisted.internet import reactor
        from twisted.application import service
        print reactor.__class__
        application = service.Application("nothing")

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Phone: +447791750420


On Thu, 2011-05-19 at 21:57 +0200, Juan Antonio Ibañez Santorum wrote:
> Is there any way to check if it is using the the poll/epoll reactor?
> 
> 
> Regards
> 
> 2011/4/26 Luke Marsden <luke-lists at hybrid-logic.co.uk>
>         On Tue, 2011-04-26 at 17:42 +0200, Juan Antonio Ibañez
>         Santorum wrote:
>         > Hello!
>         >    I have a Linux box serving my twisted app. All works ok
>         except
>         > after some days running (where I can see my CPU going to
>         100%). I saw
>         > that CPU goes 100% usage when the app reaches to 1024 opened
>         > descriptors (sockets).
>         
>         
>         You can also switch to using the "poll" reactor, which will
>         allow you to
>         sustain more than 1024 connections.  You should still figure
>         out what is
>         keeping your connections open and find a way to reap them
>         however, as
>         this will just delay the problem.  As Glyph suggested an
>         application
>         level "ping" may help here.
>         
>         In the mean-time you can switch to the poll reactor by adding
>         "-r poll"
>         to your twistd command.
>         
>         --
>         Best Regards,
>         Luke Marsden
>         CTO, Hybrid Logic Ltd.
>         
>         Web: http://www.hybrid-cluster.com/
>         Hybrid Web Cluster - cloud web hosting
>         
>         Phone: +447791750420
>         
>         
>         
>         _______________________________________________
>         Twisted-Python mailing list
>         Twisted-Python at twistedmatrix.com
>         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 





From luke-lists at hybrid-logic.co.uk  Thu May 19 14:08:00 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Thu, 19 May 2011 21:08:00 +0100
Subject: [Twisted-Python] 100% CPU on high opened descriptors
In-Reply-To: <BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
References: <BANLkTin2_NTrMJunnuZSPKZUWMYPvHwZvA@mail.gmail.com>
	<1303841320.3370.116.camel@pow>
	<BANLkTin6ux5p7Kftv4zpWiEn58T9h3hggQ@mail.gmail.com>
Message-ID: <1305835680.3272.49.camel@pow>

Hi Juan,

You could try:

        print reactor.__class__

This should allow you to check that the twistd command-line argument is
working.  Example:
        
        luke at pow:~$ twistd -noy foo.py |head -n 1
        <class 'twisted.internet.selectreactor.SelectReactor'>
        
        luke at pow:~$ twistd -r poll -noy foo.py |head -n 1
        <class 'twisted.internet.pollreactor.PollReactor'>
        
        luke at pow:~$ cat foo.py
        from twisted.internet import reactor
        from twisted.application import service
        print reactor.__class__
        application = service.Application("nothing")

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Phone: +447791750420


On Thu, 2011-05-19 at 21:57 +0200, Juan Antonio Ibañez Santorum wrote:
> Is there any way to check if it is using the the poll/epoll reactor?
> 
> 
> Regards
> 
> 2011/4/26 Luke Marsden <luke-lists at hybrid-logic.co.uk>
>         On Tue, 2011-04-26 at 17:42 +0200, Juan Antonio Ibañez
>         Santorum wrote:
>         > Hello!
>         >    I have a Linux box serving my twisted app. All works ok
>         except
>         > after some days running (where I can see my CPU going to
>         100%). I saw
>         > that CPU goes 100% usage when the app reaches to 1024 opened
>         > descriptors (sockets).
>         
>         
>         You can also switch to using the "poll" reactor, which will
>         allow you to
>         sustain more than 1024 connections.  You should still figure
>         out what is
>         keeping your connections open and find a way to reap them
>         however, as
>         this will just delay the problem.  As Glyph suggested an
>         application
>         level "ping" may help here.
>         
>         In the mean-time you can switch to the poll reactor by adding
>         "-r poll"
>         to your twistd command.
>         
>         --
>         Best Regards,
>         Luke Marsden
>         CTO, Hybrid Logic Ltd.
>         
>         Web: http://www.hybrid-cluster.com/
>         Hybrid Web Cluster - cloud web hosting
>         
>         Phone: +447791750420
>         
>         
>         
>         _______________________________________________
>         Twisted-Python mailing list
>         Twisted-Python at twistedmatrix.com
>         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 





From exarkun at twistedmatrix.com  Sat May 21 22:05:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 May 2011 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1306037124.34.1628856638@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110522/a426ef13/attachment-0001.html>

From rutt.4 at osu.edu  Wed May 25 20:27:12 2011
From: rutt.4 at osu.edu (Benjamin Rutt)
Date: Wed, 25 May 2011 22:27:12 -0400
Subject: [Twisted-Python] integrating a python REPL into my existing twisted
	application
Message-ID: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>

Dear twisted-python,

I’m trying to integrate a python REPL into my existing twisted 8.2.0
client-side program (which talks to another twisted server running a custom
protocol).  This client side program uses twisted.internet.stdio.StandardIO
already to interact with the user, to read commands from the user and send
them to the server.  What’s the best way to add functionality to drop into a
python REPL?  I adapted the doc/core/examples/stdin.py code below to drop
into the ‘code’ stdlib module to try to model for the mailing list what my
larger client program is trying to do.  It works fine on linux, until you
enter a command which outputs a large amount of data, at which point you get
a “Resource temporarily unavailable” as can be seen below.  I’m assuming the
issue is related to StandardIO taking control of reads/writes to the stdio
file descriptors, and not integrating well with python code that writes
directly to sys.stderr, but I’m not sure what the right solution is.  I
don’t mind that the call to ‘code.interact()’ blocks the reactor for my use
case, but I don’t mind if better solutions are available which don’t have
that problem, either.

Modified doc/core/examples/stdin.py:
---------------------------------------
"""
An example of reading a line at a time from standard input
without blocking the reactor.
"""

from twisted.internet import stdio
from twisted.protocols import basic

class Echo(basic.LineReceiver):
    from os import linesep as delimiter

    def connectionMade(self):
        self.transport.write('> ')

    def lineReceived(self, line):
        self.sendLine('Echo: ' + line)
        self.transport.write('> ')
        import code
        code.interact()

def main():
    stdio.StandardIO(Echo())
    from twisted.internet import reactor
    reactor.run()

if __name__ == '__main__':
    main()
---------------------------------------
A sample run:

$ ./twisted-stdio.py
> foo
Python 2.6.1 (r261:67515, Jun  4 2009, 11:06:31)
[GCC 4.1.2 20071124 (Red Hat 4.1.2-43)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> 11 * 'x'
'xxxxxxxxxxx'
>>> 11111 * 'x'
'
(most recent call last):
  File "/sw/external/twisted-8.2.0/lib/python/twisted/python/log.py", line
84, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/python/log.py", line
69, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File
"/sw/external/twisted-8.2.0/lib/python/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/sw/external/twisted-8.2.0/lib/python/twisted/internet/process.py",
line 242, in doRead
    return fdesc.readFromFD(self.fd, self.dataReceived)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/internet/fdesc.py",
line 70, in readFromFD
    callback(output)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/internet/process.py",
line 245, in dataReceived
    self.proc.childDataReceived(self.name, data)
  File
"/sw/external/twisted-8.2.0/lib/python/twisted/internet/_posixstdio.py",
line 73, in childDataReceived
    self.protocol.dataReceived(data)
  File "/sw/external/twisted-8.2.0/lib/python/twisted/protocols/basic.py",
line 231, in dataReceived
    why = self.lineReceived(line)
  File "./twisted-stdio.py", line 27, in lineReceived
    code.interact()
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 306, in
interact
    console.interact(banner)
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 243, in
interact
    more = self.push(line)
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 265, in push
    more = self.runsource(source, self.filename)
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 87, in
runsource
    self.runcode(code)
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 107, in
runcode
    self.showtraceback()
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 162, in
showtraceback
    map(self.write, list)
  File "/sw/external/python-2.6.1/lib/python2.6/code.py", line 171, in write
    sys.stderr.write(data)
exceptions.IOError: [Errno 11] Resource temporarily unavailable

My colleague discovered the below workaround which temporarily changes the
nonblocking status of sys.stderr (and restores it afterwards), but feels
like a hack which violates across abstraction layers and which might not
work correctly in future versions of twisted:

+  import fcntl
+  oldval = fcntl.fcntl(sys.stderr.fileno(), fcntl.F_GETFL)
+  fcntl.fcntl(sys.stderr.fileno(), fcntl.F_SETFL, oldval & ~os.O_NONBLOCK)
   code.interact()
+  fcntl.fcntl(sys.stderr.fileno(), fcntl.F_SETFL, oldval)

So, any tips on integrating a REPL into our existing program without
resorting to this hack would be appreciated!  Thanks.

-- 
Benjamin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110525/dbd80223/attachment.html>

From andrew at bemusement.org  Wed May 25 23:08:13 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Thu, 26 May 2011 15:08:13 +1000
Subject: [Twisted-Python] integrating a python REPL into my existing
 twisted application
In-Reply-To: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
References: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
Message-ID: <20110526050813.GA3115@aihal.home.puzzling.org>

Benjamin Rutt wrote:
>    Dear twisted-python,
>    �
>    I�m trying to integrate a python REPL into my existing twisted 8.2.0
>    client-side program (which talks to another twisted server running a
>    custom protocol).� This client side program uses
>    twisted.internet.stdio.StandardIO already to interact with the user, to
>    read commands from the user and send them to the server.� What�s the best
>    way to add functionality to drop into a python REPL?� I adapted the
>    doc/core/examples/stdin.py code below to drop into the �code� stdlib

Use twisted.conch.manhole.ManholeInterpreter.  Here's its docstring:

class ManholeInterpreter(code.InteractiveInterpreter):
    """Interactive Interpreter with special output and Deferred support.

    Aside from the features provided by L{code.InteractiveInterpreter}, this
    class captures sys.stdout output and redirects it to the appropriate
    location (the Manhole protocol instance).  It also treats Deferreds
    which reach the top-level specially: each is formatted to the user with
    a unique identifier and a new callback and errback added to it, each of
    which will format the unique identifier and the result with which the
    Deferred fires and then pass it on to the next participant in the
    callback chain.
    """

-Andrew.




From exarkun at twistedmatrix.com  Thu May 26 07:38:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 26 May 2011 13:38:56 -0000
Subject: [Twisted-Python] integrating a python REPL into my
	existing	twisted application
In-Reply-To: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
References: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
Message-ID: <20110526133856.3983.355407659.divmod.xquotient.281@localhost.localdomain>

On 02:27 am, rutt.4 at osu.edu wrote:
>Dear twisted-python,
>
>I 19m trying to integrate a python REPL into my existing twisted 8.2.0
>client-side program (which talks to another twisted server running a 
>custom
>protocol).  This client side program uses 
>twisted.internet.stdio.StandardIO
>already to interact with the user, to read commands from the user and 
>send
>them to the server.  What 19s the best way to add functionality to drop 
>into a
>python REPL?  I adapted the doc/core/examples/stdin.py code below to 
>drop
>into the  18code 19 stdlib module to try to model for the mailing list what 
>my
>larger client program is trying to do.  It works fine on linux, until 
>you
>enter a command which outputs a large amount of data, at which point 
>you get
>a  1CResource temporarily unavailable 1D as can be seen below.  I 19m 
>assuming the
>issue is related to StandardIO taking control of reads/writes to the 
>stdio
>file descriptors, and not integrating well with python code that writes
>directly to sys.stderr, but I 19m not sure what the right solution is.

In addition to what Andrew said, I'll also point out that rather than 
making code that expects blocking writes to stdout work by putting 
stdout back into blocking mode, you can make it work by instead 
providing a stdout which will buffer anything that cannot immediately be 
written non-blockingly.  StandardIO gives you exactly this; its `write` 
knows how to deal with non-blocking descriptors and buffer as necessary. 
This is why manhole doesn't have the same problem as your code calling 
directly into `code.interact`.  For details, 
<http://twistedmatrix.com/trac/browser/trunk/twisted/conch/manhole.py#L45>.

Jean-Paul



From rutt.4 at osu.edu  Fri May 27 15:45:47 2011
From: rutt.4 at osu.edu (Benjamin Rutt)
Date: Fri, 27 May 2011 17:45:47 -0400
Subject: [Twisted-Python] integrating a python REPL into my existing
 twisted application
In-Reply-To: <20110526133856.3983.355407659.divmod.xquotient.281@localhost.localdomain>
References: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
	<20110526133856.3983.355407659.divmod.xquotient.281@localhost.localdomain>
Message-ID: <BANLkTi=03yjG_zMu1hH_-joHJ676A1a0JA@mail.gmail.com>

On Thu, May 26, 2011 at 9:38 AM, <exarkun at twistedmatrix.com> wrote:

>
> In addition to what Andrew said, I'll also point out that rather than
> making code that expects blocking writes to stdout work by putting
> stdout back into blocking mode, you can make it work by instead
> providing a stdout which will buffer anything that cannot immediately be
> written non-blockingly.  StandardIO gives you exactly this; its `write`
> knows how to deal with non-blocking descriptors and buffer as necessary.
> This is why manhole doesn't have the same problem as your code calling
> directly into `code.interact`.  For details,
> <http://twistedmatrix.com/trac/browser/trunk/twisted/conch/manhole.py#L45
> >.
>
>
Thanks.  I'm having trouble integrating this or Andrew's idea into my
example.  The simplest case doesn't quite work right for me (I see '>>>'
prompts, and can interact with the python interpreter but the banner appears
at the end of the REPL after I press Ctrl+D, and then I never see the '>'
prompts from my original program anymore)...was this what you had in mind?
See the diff below.

@@ -6,6 +6,7 @@
 without blocking the reactor.
 """

+import sys
 from twisted.internet import stdio
 from twisted.protocols import basic

@@ -22,7 +23,8 @@
         code.interact()

 def main():
-    stdio.StandardIO(Echo())
+    stdio_obj = stdio.StandardIO(Echo())
+    sys.stderr = stdio_obj
     from twisted.internet import reactor
     reactor.run()


-- 
Benjamin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110527/cf34c698/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat May 28 22:05:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 May 2011 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1306641928.15.1138331192@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110529/4806bae6/attachment-0001.html>

From andrew at bemusement.org  Sun May 29 21:28:04 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Mon, 30 May 2011 13:28:04 +1000
Subject: [Twisted-Python] integrating a python REPL into my existing
 twisted application
In-Reply-To: <BANLkTi=03yjG_zMu1hH_-joHJ676A1a0JA@mail.gmail.com>
References: <BANLkTimjJDenN6kX10gFVH3Zf=jWfEMy0w@mail.gmail.com>
	<20110526133856.3983.355407659.divmod.xquotient.281@localhost.localdomain>
	<BANLkTi=03yjG_zMu1hH_-joHJ676A1a0JA@mail.gmail.com>
Message-ID: <20110530032804.GP3115@aihal.home.puzzling.org>

Benjamin Rutt wrote:
[…]
>    Thanks.� I'm having trouble integrating this or Andrew's idea into my
>    example.� The simplest case doesn't quite work right for me (I see '>>>'
>    prompts, and can interact with the python interpreter but the banner
>    appears at the end of the REPL after I press Ctrl+D, and then I never see
>    the '>' prompts from my original program anymore)...was this what you had
>    in mind?� See the diff below.

What I had in mind was that you not use the 'code' module directly at
all: the manhole module already implements the intergration you are
looking for (and more).

e.g. what happens if you replace “stdio.StandardIO(Echo())” in your
original example with this:

    from twisted.conch import manhole
    stdio.StandardIO(manhole.Manhole())

I certainly didn't mean to suggest assigning a StandardIO instance to
sys.stderr; it doesn't implement Python's file-like object protocol, so
it will fail to do anything useful in that context.

-Andrew.



From _ at lvh.cc  Mon May 30 04:51:54 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 30 May 2011 12:51:54 +0200
Subject: [Twisted-Python] Deferred getChild (#3621)
Message-ID: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>

Hi,


I was wondering if anyone had any concrete thoughts about what should happen
with IResource.getChild being able to return Deferreds, or, in general, the
ability to asynchronously get children of a resource. The ticket for this is
#3621 <http://tm.tl/3621>.

My use case for this is txYoga <https://github.com/lvh/txyoga>. Long story
short, it lets you write REST-y webapps. So, you could have something like:

http://www.twistedmatrix.com/labs/glyph

In local jargon, labs is a collection, and glyph is an element in it. Right
now, the only collection that actually exists is an in-memory one, and the
next one I'm going to write is a SQLite one, so blocking on child access
seems relatively reasonable. In general, however, this should be implemented
using Deferreds, since the information about glyph might be stored in a
database far, far away.

The logical way to do that for me seems to be that in getChild, you'd

I have found a mailing list
post<http://www.twistedmatrix.com/pipermail/twisted-python/2002-October/001847.html>(from
2002) where Christopher Armstrong ostensibly solved the problem. I
can't find any replies to that mailing list post.

I remember Glyph saying something about how that could potentially
change/break public API. I understand that reservation, but I don't see how
it'd be that bad. Existing code that always immediately returns a resource
would still work -- it would merely only use a part of the API it's allowed
to use (in this case, it'd ignore the fact that it is allowed to return a
deferred). Since a Deferred isn't an IResource, it wouldn't be a legal value
to return now, anyway.

Obviously, code that previously relied on getChild always returning a child
*right now*, when now that getChild will occasionally return a deferred,
would break. I'm not sure yet if that's a serious problem, or just a breach
of the contract that code previously had. I'm thinking it's the latter, but
maybe my subconscious is cheating to get to the easier answer.

I don't actually call getChild myself in my application code. I call it in
tests, and Twisted calls it for me in production. Maybe I'm missing major
use cases for getChild there? I could definitely see how that works.

Thoughts welcome :)


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110530/18636934/attachment-0001.html>

From _ at lvh.cc  Mon May 30 05:25:22 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 30 May 2011 13:25:22 +0200
Subject: [Twisted-Python] Asynchronous code PEP
Message-ID: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>

Hi!


I've just been in contact with Jim Fulton, who was previously mentioned in
the context of developing this PEP, and he's okay with us taking over.

IIUC the PEP involves a few things:

   1. A sane reactor abstraction/interface (although they probably won't
   like pulling in z.i.I) in the standard library which everything should be
   able to implement -- essentially twisted.loop's interface. This probably
   includes a Protocol abstraction too
   2. A simple, potentially insane implementation for it in the stdlib --
   ideally twisted.loop, but probably something like
   asyncore-except-slightly-less-terrible
   3. A way to write code for it, probably involving
   @inlineCallbacks/monocle style yields

The idea here, as Glyph told me at Pycon, I believe, is that people can just
write code that works on most backends. When they figure out the stdlib
thing suck^H^H^H^Hdoesn't satisfy their requirements, we can just say "hey,
it's okay, you can just replace the reactor reactor you have now with the
twisted one and you will get all sorts of wonderful magic to play with".

Am I completely wrong here already or does that sound like a sane problem
definition?

Either way I'm planning to put the PEP draft up on github (actually, I
already have). Whether you like github or not, I think this feature:
https://github.com/blog/844-forking-with-the-edit-button is just too amazing
for writing a PEP as a community process to let pass.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110530/8d05e1cd/attachment.html>

From maarten at treewalker.org  Mon May 30 05:32:25 2011
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Mon, 30 May 2011 13:32:25 +0200
Subject: [Twisted-Python] Deferred getChild (#3621)
In-Reply-To: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>
References: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>
Message-ID: <201105301332.25478.maarten@treewalker.org>

On Monday 30 May 2011, Laurens Van Houtven wrote:

> My use case for this is txYoga <https://github.com/lvh/txyoga>. Long
> story short, it lets you write REST-y webapps. So, you could have
> something like:
> 
> http://www.twistedmatrix.com/labs/glyph
> 
> In local jargon, labs is a collection, and glyph is an element in it.
> Right now, the only collection that actually exists is an in-memory one,
> and the next one I'm going to write is a SQLite one, so blocking on
> child access seems relatively reasonable. In general, however, this
> should be implemented using Deferreds, since the information about glyph
> might be stored in a database far, far away.

A possible alternative would be to create a child resource that remembers 
the child name and do the database lookup in the render method. If there is 
a matching record, render a page with its data, otherwise render a 404 page.

I cannot predict whether the resulting code would be clean or ugly though, 
so I don't know how feasible this approach is.

Bye,
		Maarten



From _ at lvh.cc  Mon May 30 05:59:13 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 30 May 2011 13:59:13 +0200
Subject: [Twisted-Python] Deferred getChild (#3621)
In-Reply-To: <201105301332.25478.maarten@treewalker.org>
References: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>
	<201105301332.25478.maarten@treewalker.org>
Message-ID: <BANLkTinSpndGRhM4W+by5+G_iQ5S-RAu3w@mail.gmail.com>

Right, it's definitely possible to work around this problem using proxy
children, but going forward I don't think that's how Twisted *should*
behave.

(I actually tried this, and nope, it's not exactly pretty :-( )

The reason for that is that that would mean there's two ways to do things.
Suppose a child is missing. In the case of a blocking/immediate lookup,
you'd return an error resource from getChild. In the case of an asynchronous
lookup, you'd return a resource immediately, regardless of whether the
lookup fails or not (since you don't know yet) whose render method returns
NOT_DONE_YET and eventually finishes a request.

If getChild supported deferreds, you'd return an deferred error page from
getChild in the asynchronous case, and you'd return the error page as you
always have in the synchronous case.

That makes a lot more sense to me. What I want is "so, there's a value
(==IResource), but I don't know what it is yet", and it seems to me the
natural way of expressing that in Twisted is a Deferred.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110530/14b24abf/attachment.html>

From glyph at twistedmatrix.com  Mon May 30 11:56:07 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 May 2011 13:56:07 -0400
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
Message-ID: <7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>


On May 30, 2011, at 7:25 AM, Laurens Van Houtven wrote:

> Hi!
> 
> I've just been in contact with Jim Fulton, who was previously mentioned in the context of developing this PEP, and he's okay with us taking over.
> 
> IIUC the PEP involves a few things:
> A sane reactor abstraction/interface (although they probably won't like pulling in z.i.I) in the standard library which everything should be able to implement -- essentially twisted.loop's interface. This probably includes a Protocol abstraction too
Yes.  Practically speaking these will have to be ABCs to fit into the Python stdlib idiom.
> A simple, potentially insane implementation for it in the stdlib -- ideally twisted.loop, but probably something like asyncore-except-slightly-less-terrible
Yes.
> A way to write code for it, probably involving @inlineCallbacks/monocle style yields
No.

In the interests of keeping the scope here as tight as possible, this is *not* a PEP about Deferreds or any of their equivalents, which are substantially more controversial.  It is _just_ about an asynchronous networking API.

The most important parts are IProtocol/ITransport/IConsumer/IProducer.  In order to do anything with these, of course, you need something somewhat like IReactorTCP/IReactorTime, but I would like to have those specified separately in the PEP, because the main interesting thing is just getting event-driven protocol logic based on a common API.  The IReactorTCP analogue would just be a stub to get started, not a complete specification of every connection mode you might want.  At the very least, there's SSL.  Plus, even in TCP, there's a lot of complexity there which you need to modify if you want to have different connection/listening options (just look at the mess on the IPv6 ticket if you think this stuff is simple).

Convenience APIs like coroutine scheduling are definitely out of scope.

> The idea here, as Glyph told me at Pycon, I believe, is that people can just write code that works on most backends. When they figure out the stdlib thing suck^H^H^H^Hdoesn't satisfy their requirements, we can just say "hey, it's okay, you can just replace the reactor reactor you have now with the twisted one and you will get all sorts of wonderful magic to play with".

In addition, it would be a way for the stdlib to gradually start evolving towards protocol implementations which parse chunks that are fed to them rather than calling recv() and expecting to block.

> Am I completely wrong here already or does that sound like a sane problem definition?

Close enough :).

> Either way I'm planning to put the PEP draft up on github (actually, I already have). Whether you like github or not, I think this feature: https://github.com/blog/844-forking-with-the-edit-button is just too amazing for writing a PEP as a community process to let pass.

Cool, glad to see the project is online somewhere, finally :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110530/372c4da5/attachment-0001.html>

From glyph at twistedmatrix.com  Mon May 30 12:02:47 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 May 2011 14:02:47 -0400
Subject: [Twisted-Python] Deferred getChild (#3621)
In-Reply-To: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>
References: <BANLkTik65-M6dWJE1OX7xzc6iYiMvWndwQ@mail.gmail.com>
Message-ID: <75ACEA27-F977-4B45-84D3-90C73CBC6D56@twistedmatrix.com>

On May 30, 2011, at 6:51 AM, Laurens Van Houtven wrote:

> I remember Glyph saying something about how that could potentially change/break public API. I understand that reservation, but I don't see how it'd be that bad. Existing code that always immediately returns a resource would still work -- it would merely only use a part of the API it's allowed to use (in this case, it'd ignore the fact that it is allowed to return a deferred). Since a Deferred isn't an IResource, it wouldn't be a legal value to return now, anyway.

The issue is with code that calls getChild, or getChildWithDefault, or any of the APIs that are listed on #3621's description, or anything derived from them.  Any kind of resource wrapper will have to deal with these APIs, and there are a surprisingly high number of these kinds of things out in the wild.

Every public interface has callers and implementations, and both may exist out in the wild for just about any interface.

So, the problem is that we need a new interface.

The main other issue which affects IRequest is #288, so it may be worthwhile to land both of these branches at the same time.  I've discussed this previously, but the general idea would be: create an integration branch, get #288 reviewed, merge it to the integration branch, get #3621 reviewed, merge it to the integration branch, and then merge the integration branch to trunk (since it would have no unreviewed commits).  This would allow us to have only one new interface instead of two.  (I am probably forgetting some other tickets which affect IResource and IRequest, others should feel free to chime in.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110530/b4a1aed4/attachment.html>

From _ at lvh.cc  Tue May 31 15:58:29 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 31 May 2011 23:58:29 +0200
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
Message-ID: <BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>

As promised:

https://github.com/lvh/async-pep
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110531/8f5578d2/attachment-0001.html>

From kevin.horn at gmail.com  Tue May 31 16:04:08 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 31 May 2011 17:04:08 -0500
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
Message-ID: <BANLkTim2Grt32mPXY_21RNUrsNE_fp2kNg@mail.gmail.com>

Hooray!

Kevin Horn

On Tue, May 31, 2011 at 4:58 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> As promised:
>
> https://github.com/lvh/async-pep
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110531/4b25792f/attachment.html>

From glyph at twistedmatrix.com  Tue May 31 23:00:53 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 1 Jun 2011 01:00:53 -0400
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
Message-ID: <F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>


On May 31, 2011, at 5:58 PM, Laurens Van Houtven wrote:

> As promised:
> 
> https://github.com/lvh/async-pep

Great to see a public start on this.

It should really say something about protocol/transport separation early on, though ;).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110601/7991f146/attachment.html>

