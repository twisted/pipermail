From matt at zgroupplc.com  Tue May  1 09:06:43 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Tue, 1 May 2007 14:06:43 +0100
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
Message-ID: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Dear All,

I have been benchmarking my twistd application (twisted.web.server)  
and I am seeing increasing memory usage that is never freed. Before I  
delve into GC and valgrind, I am interested in learning whether there  
are any fundamental no-nos under twisted that might result in a leak.  
I am relatively new to twisted and its entirely possible that I am  
doing something wrong.

I am also interested in learning what the stability of the epoll  
reactor is. I have come across a few (old) posts that pointed to it  
being incomplete. Would the epoll reactor be a possible cause of a  
memory leak? Leak aside, I have benchmarked my app up to 5000  
simultaneous connections with no obvious drop in performance.  
Switching to poll produces *terrible* results.

For the purposes of diagnosing the cause of the leak (C extension,  
python, twisted, or my code) I have removed external library  
dependencies and I have also swapped out reactors. The leak persists.

Does anyone have any good tips for diagnosing leaks under twisted?  
For what its worth, I am conducting my tests under an AMD 64bit  
architecture.

Regards,


Matt


m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGNztmyI6MkdKPngkRAnW5AJ9D8Lx2BN3Ds8BL33TL1TS1QnK1pgCgk2X5
2HVOxP93ZJCWWLQ7Tver3wE=
=1nnG
-----END PGP SIGNATURE-----



From andrew-twisted at puzzling.org  Tue May  1 09:38:10 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 1 May 2007 23:38:10 +1000
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
Message-ID: <20070501133810.GJ15094@steerpike.home.puzzling.org>

Matthew Glubb wrote:
[...]
> For the purposes of diagnosing the cause of the leak (C extension,  
> python, twisted, or my code) I have removed external library  
> dependencies and I have also swapped out reactors. The leak persists.

Those are all good steps to take to isolate the problem.

> Does anyone have any good tips for diagnosing leaks under twisted?  

Basically, the same as for any other long-lived Python program:

  * try to find a minimal case that reproduces the problem, e.g. a simple
    request that leaks some bytes when repeated, or even better a simple
    function call, and hope the cause becomes obvious as you narrow it down
  * try memory profilers like http://pysizer.8325.org/
  * try my crude hack: http://twistedmatrix.com/users/spiv/countrefs.py
  * try to reproduce without any C extensions, to determine if the leak is in a
    C extension or pure python code

-Andrew.




From itamar at itamarst.org  Tue May  1 09:41:35 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 01 May 2007 09:41:35 -0400
Subject: Memory leaks (was Re: [Twisted-Python] Twisted Memory Leaks & Epoll)
In-Reply-To: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
Message-ID: <1178026895.12122.11.camel@localhost.localdomain>

On Tue, 2007-05-01 at 14:06 +0100, Matthew Glubb wrote:

> I have been benchmarking my twistd application (twisted.web.server)  
> and I am seeing increasing memory usage that is never freed. Before I  
> delve into GC and valgrind, I am interested in learning whether there  
> are any fundamental no-nos under twisted that might result in a leak.  
> I am relatively new to twisted and its entirely possible that I am  
> doing something wrong.

What version Python? Pre-2.5 Python would never free up memory.

> I am also interested in learning what the stability of the epoll  
> reactor is. I have come across a few (old) posts that pointed to it  
> being incomplete. Would the epoll reactor be a possible cause of a  
> memory leak? Leak aside, I have benchmarked my app up to 5000  
> simultaneous connections with no obvious drop in performance.  
> Switching to poll produces *terrible* results.

So far there has been only one report of problems with epoll reactor. If
it's working for you, just use it.

Also:
1. It's not incomplete so far as we know, since it passes all tests.
(http://twistedmatrix.com/buildbot/)
2. You said below you had memory leak with other reactors, so it seems
unlikely that epoll is the main reason your application is leaking
memory.

> Does anyone have any good tips for diagnosing leaks under twisted?  
> For what its worth, I am conducting my tests under an AMD 64bit  
> architecture.

The gc module should let you, with a little work, figure out what the
most frequently used Python objects are in your code.




From exarkun at divmod.com  Tue May  1 09:44:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 1 May 2007 09:44:22 -0400
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
Message-ID: <20070501134422.19381.1457547633.divmod.quotient.7251@ohm>

On Tue, 1 May 2007 14:06:43 +0100, Matthew Glubb <matt at zgroupplc.com> wrote:
>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>Dear All,
>
>I have been benchmarking my twistd application (twisted.web.server)  and I 
>am seeing increasing memory usage that is never freed. Before I  delve into 
>GC and valgrind, I am interested in learning whether there  are any 
>fundamental no-nos under twisted that might result in a leak.  I am 
>relatively new to twisted and its entirely possible that I am  doing 
>something wrong.

All of the typical Python caveats apply.  There's little that's specific
to Twisted here, aside from general Python rules applied to Twisted objects
and APIs.

>
>I am also interested in learning what the stability of the epoll  reactor 
>is. I have come across a few (old) posts that pointed to it  being 
>incomplete. Would the epoll reactor be a possible cause of a  memory leak? 
>Leak aside, I have benchmarked my app up to 5000  simultaneous connections 
>with no obvious drop in performance.  Switching to poll produces *terrible* 
>results.

The epoll reactor is new in the latest release of Twisted.  It may well have
bugs. :)  It is capable of passing the full Twisted test suite (3100+ tests),
though, which at least says something.

>
>For the purposes of diagnosing the cause of the leak (C extension,  python, 
>twisted, or my code) I have removed external library  dependencies and I 
>have also swapped out reactors. The leak persists.
>
>Does anyone have any good tips for diagnosing leaks under twisted?  For what 
>its worth, I am conducting my tests under an AMD 64bit  architecture.

Having a manhole in a running server is pretty useful.  Once you have that,
you can poke around with the gc module, or maybe something like pysizer, or
things like http://twistedmatrix.com/users/spiv/countrefs.py or
http://twistedmatrix.com/trac/browser/sandbox/exarkun/instcount.py

Jean-Paul



From matt at zgroupplc.com  Tue May  1 10:09:25 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Tue, 1 May 2007 15:09:25 +0100
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <20070501133810.GJ15094@steerpike.home.puzzling.org>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
	<20070501133810.GJ15094@steerpike.home.puzzling.org>
Message-ID: <B566CAD7-64CF-4EC5-B4B3-A9AB37CC79D9@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi All,

Thanks for all of your tips. I am sure that I'll get to the bottom of  
it. I think I'll start with pysizer and Andrew's ref counter...


Matt

On 1 May 2007, at 14:38, Andrew Bennetts wrote:

> Matthew Glubb wrote:
> [...]
>> For the purposes of diagnosing the cause of the leak (C extension,
>> python, twisted, or my code) I have removed external library
>> dependencies and I have also swapped out reactors. The leak persists.
>
> Those are all good steps to take to isolate the problem.
>
>> Does anyone have any good tips for diagnosing leaks under twisted?
>
> Basically, the same as for any other long-lived Python program:
>
>   * try to find a minimal case that reproduces the problem, e.g. a  
> simple
>     request that leaks some bytes when repeated, or even better a  
> simple
>     function call, and hope the cause becomes obvious as you narrow  
> it down
>   * try memory profilers like http://pysizer.8325.org/
>   * try my crude hack: http://twistedmatrix.com/users/spiv/ 
> countrefs.py
>   * try to reproduce without any C extensions, to determine if the  
> leak is in a
>     C extension or pure python code
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGN0oVyI6MkdKPngkRAnOvAJ4/hJoYluJCvI5mwZpmg884L6d3vACdGhgQ
I1blYJEaH+nn+BiIcSIK9Ik=
=FwY8
-----END PGP SIGNATURE-----



From rampeters at gmail.com  Tue May  1 21:48:46 2007
From: rampeters at gmail.com (Ram Peters)
Date: Tue, 1 May 2007 21:48:46 -0400
Subject: [Twisted-Python] Polling a resource on another computer with Twisted
Message-ID: <81b45360705011848u5dde9165rcc345037ede117e1@mail.gmail.com>

I am looking for some guidance on how to poll a resource on another
computer using twisted.  Poll a remote resource, if a task is
available, I need to perform it on the twisted machine, not on the
remote resource machine.  Can anyone tell me how I can do this.
Twisted event loops only listens for incoming.  I need to go out and
check the resource and begin processing.

Thanks.



From matusis at matusis.com  Tue May  1 23:40:08 2007
From: matusis at matusis.com (Alec Matusis)
Date: Tue, 1 May 2007 20:40:08 -0700
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
Message-ID: <014501c78c6b$963bcfc0$c2b36f40$@com>

Our empirical experience with leaks is the following:
Python 2.4 never releases memory, but you can get very good results with
Twisted 2.2 when the servers are at high-load all the time. We have servers
that run at 70%+ CPU for more than a month without restarting.
When a server starts, it exhibits a memory increase from say 60MB in the
first hour to 70MB after the first 24 hours. The memory increase slows down,
asymptotically approaching some fixed value (which is possibly set by the
highest usage). Then it can run literally for months, never exceeding 80MB.

When there's a memory leak due to bad code, the best thing to do is to set
up a manhole, and inspect all objects. 
Also, manually decrementing reference counts like so:

def stat_collect():
    gc.collect()
    twisted.internet.reactor.callLater(config.gc_collect_interval,
stat_collect)

stat_collect()

helped us in one case.

With Twisted 2.5, we saw memory leaks for poll reactor for the same code
that was non-leaking on 2.2. 



> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Matthew Glubb
> Sent: Tuesday, May 01, 2007 6:07 AM
> To: Twisted general discussion
> Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
> 
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Dear All,
> 
> I have been benchmarking my twistd application (twisted.web.server)
> and I am seeing increasing memory usage that is never freed. Before I
> delve into GC and valgrind, I am interested in learning whether there
> are any fundamental no-nos under twisted that might result in a leak.
> I am relatively new to twisted and its entirely possible that I am
> doing something wrong.
> 
> I am also interested in learning what the stability of the epoll
> reactor is. I have come across a few (old) posts that pointed to it
> being incomplete. Would the epoll reactor be a possible cause of a
> memory leak? Leak aside, I have benchmarked my app up to 5000
> simultaneous connections with no obvious drop in performance.
> Switching to poll produces *terrible* results.
> 
> For the purposes of diagnosing the cause of the leak (C extension,
> python, twisted, or my code) I have removed external library
> dependencies and I have also swapped out reactors. The leak persists.
> 
> Does anyone have any good tips for diagnosing leaks under twisted?
> For what its worth, I am conducting my tests under an AMD 64bit
> architecture.
> 
> Regards,
> 
> 
> Matt
> 
> 
> m a t t h e w   g l u b b
> 
> _______________________________________________________________________
> _
> Z Group PLC
> 
> Tel: +44 (0) 8700 111 173
> Fax: +44 (0) 8707 051 393
> Txt: +44 (0) 7800 140 877
> Web: <http://www.zgroupplc.com/>
> 
> This  email  and  any  files  transmitted  with it are  confidential
> and
> intended solely for the use of the individual or entity to whom they
> are
> addressed.  The opinions  expressed in this mail are those of the
> author
> and do not necessarily  represent the views of the company.  If you
> have
> received this email in error please notify <service at zgroupplc.com>
> 
> 
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.1 (Darwin)
> 
> iD8DBQFGNztmyI6MkdKPngkRAnW5AJ9D8Lx2BN3Ds8BL33TL1TS1QnK1pgCgk2X5
> 2HVOxP93ZJCWWLQ7Tver3wE=
> =1nnG
> -----END PGP SIGNATURE-----
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at divmod.com  Tue May  1 23:55:51 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 02 May 2007 03:55:51 -0000
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <014501c78c6b$963bcfc0$c2b36f40$@com>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
	<014501c78c6b$963bcfc0$c2b36f40$@com>
Message-ID: <20070502035551.18153.1559975523.divmod.xquotient.193@joule.divmod.com>


Hi Alec,

On 03:40 am, matusis at matusis.com wrote:
>With Twisted 2.5, we saw memory leaks for poll reactor for the same 
>code
>that was non-leaking on 2.2.

I'm sorry we could help you more with that particular leak when it 
happened.  Not that I know of any particular issues that have been fixed 
since the 2.5 release, but I wonder - have you yet tried this 
application with current trunk, and did you ever try it with Twisted 
2.4?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070502/e2508410/attachment.htm 

From elicriffield at gmail.com  Wed May  2 00:30:27 2007
From: elicriffield at gmail.com (Eli Criffield)
Date: Tue, 1 May 2007 23:30:27 -0500
Subject: [Twisted-Python] client side cert?
Message-ID: <18e3f33d0705012130q627492a9v3973f634580d7b04@mail.gmail.com>

I'm trying to make a simple xmlrpc server that uses ssl and requires
the client to have a cert signed by me.

Sounds easy enough, It doesn't seem to work. It would appear that
twisted.internet.ssl.CertificateOptions() Has all the options i need
to make a ContextFactory object to feed to listenSSL, but i get this
error when i try to setup the listenSSL.

  File "./xmlrpc-server.py", line 38, in <module>
    reactor.listenSSL(7080,server.Site(r),ctx)
  File "/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py",
line 492, in listenSSL
    p.startListening()
  File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
line 730, in startListening
    skt = self.createInternetSocket()
  File "/usr/lib/python2.5/site-packages/twisted/internet/ssl.py",
line 169, in createInternetSocket
    return SSL.Connection(self.ctxFactory.getContext(), sock)
  File "/usr/lib/python2.5/site-packages/twisted/internet/_sslverify.py",
line 901, in getContext
    self._context = self._makeContext()
  File "/usr/lib/python2.5/site-packages/twisted/internet/_sslverify.py",
line 910, in _makeContext
    ctx.use_certificate(self.certificate)
TypeError: Expected an X509 object


My code:
if __name__ == '__main__':
    from twisted.internet import reactor, ssl
    import OpenSSL
    r = Example()
    pem = OpenSSL.crypto.FILETYPE_PEM
    xfd = open('test.cert','r')
    x590cert = ssl.Certificate.loadPEM(xfd.read())
    pfd = open('test.key','r')
    pkeycert =  OpenSSL.crypto.load_privatekey(pem,pfd.read(),'password')
    ctx = ssl.CertificateOptions(privateKey=pkeycert,certificate=x590cert,method=OpenSSL.SSL.SSLv23_METHOD)
    reactor.listenSSL(7080,server.Site(r),ctx)
    reactor.run()

I try to make the x590 object to feed to CertificateOptions from
t.i.s.Certifcate.loadPEM() but it doesn't like it. I see nowhere in
t.i.ssl to make a PKey object that t.i.s.CertificationOptions() wants.

I've tried t.i.s.ContextFactory() but there is no options for
requiring a client side cert.
t.i.s.ClientContextFactory doesn't seem to have any options to tell it
what cert to use on the client side either, or how to verify the
server cert, I guess thats what t.i.s.CertificationOptions() is for
but it doesn't seem to work as documented.

Is there some great documentation out there about how to do this with
twisted.internet.ssl that I'm missing?

Eli Criffield



From glyph at divmod.com  Wed May  2 01:15:18 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 02 May 2007 05:15:18 -0000
Subject: [Twisted-Python] client side cert?
In-Reply-To: <18e3f33d0705012130q627492a9v3973f634580d7b04@mail.gmail.com>
References: <18e3f33d0705012130q627492a9v3973f634580d7b04@mail.gmail.com>
Message-ID: <20070502051518.18153.1548289072.divmod.xquotient.278@joule.divmod.com>

On 04:30 am, elicriffield at gmail.com wrote:
>I try to make the x590 object to feed to CertificateOptions from
>t.i.s.Certifcate.loadPEM() but it doesn't like it. I see nowhere in
>t.i.ssl to make a PKey object that t.i.s.CertificationOptions() wants.

>I've tried t.i.s.ContextFactory() but there is no options for
>requiring a client side cert.
>t.i.s.ClientContextFactory doesn't seem to have any options to tell it
>what cert to use on the client side either, or how to verify the
>server cert, I guess thats what t.i.s.CertificationOptions() is for
>but it doesn't seem to work as documented.

The "right" way to do this (and by "right" I mean the way I intended and 
used when I originally wrote this code, but never documented in any way) 
is by using the "PrivateCertificate" object, which represents a paired 
public/private key, and its (poorly named, and by the way did I mention 
it's undocumented) "options" method, which creates the 
CertificateOptions object for you.

I can see from your example that you're already expecting the key and 
certificate to be in the same PEM file (like everyone does) so it could 
be as easy as this:

    from twisted.internet.ssl import PrivateCertificate
    pc = PrivateCertificate.loadPEM(file('test.cert', r').read())
    ctxFactory = pc.options()

although if you want to verify client certificates, options() also 
takes, as varargs, a tuple of certificate authorities.  However, a 
private certificate can also fill the role of a public certificate, so 
you can do:

    ctxFactory = pc.options(pc)

to use a self-signed certificate as its own authority.

This context factory can be used either for client or server 
connections, as shown below.

If you are doing anything interesting with SSL, you might want to have a 
look at the source in the file twisted/internet/_sslverify.py, 
especially the other (undocumented) methods of PrivateCertificate, which 
implements a bit of CA functionality.
>Is there some great documentation out there about how to do this with
>twisted.internet.ssl that I'm missing?

Nope.  The documentation here is particularly thin, and to make matters 
work, there are certain operations that are unsupported due to bugs or 
non-wrapped functions in pyopenssl.

Please feel free to file a more specific documentation bug (and feel 
_double_ free to attach a patch) to add docstrings to _sslverify, and 
probably a separate bug to add an introductory document.

I'm a big fan of complete runnable examples, so here's something to get 
you started.  Hope that this helps:

--- cut here ---

from sys import stdout, argv

from twisted.python.filepath import FilePath
from twisted.python.log import startLogging

from twisted.internet.protocol import Protocol, Factory, ClientFactory

from twisted.internet import reactor
from twisted.internet.ssl import PrivateCertificate

class MyProto(Protocol):
    def connectionMade(self):
        self.transport.write(self.factory.stuff)
    def dataReceived(self, data):
        stdout.write('Received %r\n' % (data,))

theCert = PrivateCertificate.loadPEM(file('server.pem','r').read())
theOptions = theCert.options(theCert)

def server():
    f = Factory()
    f.stuff = 'hello, client'
    f.protocol = MyProto
    reactor.listenSSL(7080, f, theOptions)

def client():
    f = ClientFactory()
    f.stuff = 'hello, server'
    f.protocol = MyProto
    reactor.connectSSL('localhost', 7080, f, theOptions)

def main():
    startLogging(stdout)
    if argv[1] == 'server':
        server()
    else:
        client()
    reactor.run()

if __name__ == '__main__':
    main()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070502/0661da0e/attachment.htm 

From glyph at divmod.com  Wed May  2 01:23:08 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 02 May 2007 05:23:08 -0000
Subject: [Twisted-Python] Polling a resource on another computer with
	Twisted
In-Reply-To: <81b45360705011848u5dde9165rcc345037ede117e1@mail.gmail.com>
References: <81b45360705011848u5dde9165rcc345037ede117e1@mail.gmail.com>
Message-ID: <20070502052308.18153.1995319705.divmod.xquotient.292@joule.divmod.com>

On 01:48 am, rampeters at gmail.com wrote:
>I am looking for some guidance on how to poll a resource on another
>computer using twisted.  Poll a remote resource, if a task is
>available, I need to perform it on the twisted machine, not on the
>remote resource machine.  Can anyone tell me how I can do this.
>Twisted event loops only listens for incoming.  I need to go out and
>check the resource and begin processing.

This question is extremely open-ended.  I could think of maybe 50 ways 
to implement this functionality as specified, and I'm not sure exactly 
what you're thinking.

Twisted does listen for incoming *events*, but I think what you mean is 
that it listens only for incoming *connections*.  If what you mean is 
simply "how do I connect to another host as a client", see this 
document:

http://twistedmatrix.com/projects/core/documentation/howto/clients.html

If what you mean is "how do I do something, such as check a remote 
resource, periodically", you might want to use Twisted's LoopingCall 
object:

http://twistedmatrix.com/documents/current/api/twisted.internet.task.LoopingCall.html

If what you mean is "how do I stop my program and wait for something to 
happen", you don't need to.  Simply ask the remote computer about the 
resource you are polling (by establishing a client connection and 
writing some bytes to it, for example), and then wait for the reactor to 
tell you that it has responded.  If you want to establish a timeout, set 
up a timed call using reactor.callLater, and cancel it if the response 
arrives first.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070502/2094f426/attachment.htm 

From matusis at matusis.com  Wed May  2 04:23:05 2007
From: matusis at matusis.com (Alec Matusis)
Date: Wed, 2 May 2007 01:23:05 -0700
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <20070502035551.18153.1559975523.divmod.xquotient.193@joule.divmod.com>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>	<014501c78c6b$963bcfc0$c2b36f40$@com>
	<20070502035551.18153.1559975523.divmod.xquotient.193@joule.divmod.com>
Message-ID: <018f01c78c93$1c041820$540c4860$@com>


Hi Glyph,

> I wonder - have you yet tried this application with current trunk, and did you ever try it with Twisted 2.4?

I have not tried with current trunk or Twisted 2.4.

We are getting another production machine ready with 2.6.18 kernel and Python 2.4.4, and we will migrate that server there within a week from the current 2.6.11 / 2.4.1.

We will try it there both with Twisted 2.2 poll and with 2.5 poll/epoll. I will post the results after we migrate, especially whether epoll is in the edge-triggered or in the level-triggered mode. 

From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of glyph at divmod.com
Sent: Tuesday, May 01, 2007 8:56 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] Twisted Memory Leaks & Epoll


Hi Alec,

On 03:40 am, matusis at matusis.com wrote:

>With Twisted 2.5, we saw memory leaks for poll reactor for the same code
>that was non-leaking on 2.2.

I'm sorry we could help you more with that particular leak when it happened.  Not that I know of any particular issues that have been fixed since the 2.5 release, but I wonder - have you yet tried this application with current trunk, and did you ever try it with Twisted 2.4?




From rampeters at gmail.com  Wed May  2 08:00:18 2007
From: rampeters at gmail.com (Ram Peters)
Date: Wed, 2 May 2007 08:00:18 -0400
Subject: [Twisted-Python] Polling a resource on another computer with
	Twisted
In-Reply-To: <20070502052308.18153.1995319705.divmod.xquotient.292@joule.divmod.com>
References: <81b45360705011848u5dde9165rcc345037ede117e1@mail.gmail.com>
	<20070502052308.18153.1995319705.divmod.xquotient.292@joule.divmod.com>
Message-ID: <81b45360705020500m67edff33rc1f7569ee3023f03@mail.gmail.com>

> If what you mean is "how do I do something, such as check a remote resource,
> periodically", you might want to use Twisted's LoopingCall object:
>
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.task.LoopingCall.html
>

This is what I need.

Thanks.



From exarkun at divmod.com  Wed May  2 09:17:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 2 May 2007 09:17:21 -0400
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <018f01c78c93$1c041820$540c4860$@com>
Message-ID: <20070502131721.19381.606913015.divmod.quotient.7541@ohm>

On Wed, 2 May 2007 01:23:05 -0700, Alec Matusis <matusis at matusis.com> wrote:
> [snip]
>
>We will try it there both with Twisted 2.2 poll and with 2.5 poll/epoll.
>I will post the results after we migrate, especially whether epoll is in
>the edge-triggered or in the level-triggered mode.

Switching to a new machine won't have any affect on whether epoll is in
edge-triggered mode or level-triggered mode.  It will remain in level-
triggered mode, since that is the only mode it currently supports. ;)

Jean-Paul



From elicriffield at gmail.com  Wed May  2 10:24:32 2007
From: elicriffield at gmail.com (Eli Criffield)
Date: Wed, 2 May 2007 09:24:32 -0500
Subject: [Twisted-Python] client side cert?
In-Reply-To: <20070502051518.18153.1548289072.divmod.xquotient.278@joule.divmod.com>
References: <18e3f33d0705012130q627492a9v3973f634580d7b04@mail.gmail.com>
	<20070502051518.18153.1548289072.divmod.xquotient.278@joule.divmod.com>
Message-ID: <18e3f33d0705020724s43b7bb37n2d9998ca1ee1af73@mail.gmail.com>

Thats a huge help. I'll see how far i can get with this. I'll write a
short doc how to do client side cert verification once i get it
working. And some docstrings if i can figure them out.

Eli Criffield


On 5/2/07, glyph at divmod.com <glyph at divmod.com> wrote:
> On 04:30 am, elicriffield at gmail.com wrote:
>
> >I try to make the x590 object to feed to CertificateOptions from
> >t.i.s.Certifcate.loadPEM() but it doesn't like it. I see nowhere in
> >t.i.ssl to make a PKey object that t.i.s.CertificationOptions() wants.
>
> >I've tried t.i.s.ContextFactory() but there is no options for
> >requiring a client side cert.
> >t.i.s.ClientContextFactory doesn't seem to have any options to tell it
> >what cert to use on the client side either, or how to verify the
> >server cert, I guess thats what t.i.s.CertificationOptions() is for
> >but it doesn't seem to work as documented.
>
> The "right" way to do this (and by "right" I mean the way I intended and
> used when I originally wrote this code, but never documented in any way) is
> by using the "PrivateCertificate" object, which represents a paired
> public/private key, and its (poorly named, and by the way did I mention it's
> undocumented) "options" method, which creates the CertificateOptions object
> for you.
>
> I can see from your example that you're already expecting the key and
> certificate to be in the same PEM file (like everyone does) so it could be
> as easy as this:
>
>     from twisted.internet.ssl import PrivateCertificate
>     pc = PrivateCertificate.loadPEM(file('test.cert', r').read())
>     ctxFactory = pc.options()
>
> although if you want to verify client certificates, options() also takes, as
> varargs, a tuple of certificate authorities.  However, a private certificate
> can also fill the role of a public certificate, so you can do:
>
>     ctxFactory = pc.options(pc)
>
> to use a self-signed certificate as its own authority.
>
> This context factory can be used either for client or server connections, as
> shown below.
>
> If you are doing anything interesting with SSL, you might want to have a
> look at the source in the file twisted/internet/_sslverify.py, especially
> the other (undocumented) methods of PrivateCertificate, which implements a
> bit of CA functionality.
>
> >Is there some great documentation out there about how to do this with
> >twisted.internet.ssl that I'm missing?
>
> Nope.  The documentation here is particularly thin, and to make matters
> work, there are certain operations that are unsupported due to bugs or
> non-wrapped functions in pyopenssl.
>
> Please feel free to file a more specific documentation bug (and feel
> _double_ free to attach a patch) to add docstrings to _sslverify, and
> probably a separate bug to add an introductory document.
>
> I'm a big fan of complete runnable examples, so here's something to get you
> started.  Hope that this helps:
>
> --- cut here ---
>
> from sys import stdout, argv
>
> from twisted.python.filepath import FilePath
> from twisted.python.log import startLogging
>
> from twisted.internet.protocol import Protocol, Factory, ClientFactory
>
> from twisted.internet import reactor
> from twisted.internet.ssl import PrivateCertificate
>
> class MyProto(Protocol):
>     def connectionMade(self):
>         self.transport.write(self.factory.stuff)
>     def dataReceived(self, data):
>         stdout.write('Received %r\n' % (data,))
>
> theCert = PrivateCertificate.loadPEM(file('server.pem','r').read())
> theOptions = theCert.options(theCert)
>
> def server():
>     f = Factory()
>     f.stuff = 'hello, client'
>     f.protocol = MyProto
>     reactor.listenSSL(7080, f, theOptions)
>
> def client():
>     f = ClientFactory()
>     f.stuff = 'hello, server'
>     f.protocol = MyProto
>     reactor.connectSSL('localhost', 7080, f, theOptions)
>
> def main():
>     startLogging(stdout)
>     if argv[1] == 'server':
>         server()
>     else:
>         client()
>     reactor.run()
>
> if __name__ == '__main__':
>     main()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From einar.twisted at norsk-esport.no  Wed May  2 11:02:53 2007
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Wed, 02 May 2007 17:02:53 +0200
Subject: [Twisted-Python] client side cert?
In-Reply-To: <18e3f33d0705020724s43b7bb37n2d9998ca1ee1af73@mail.gmail.com>
References: <18e3f33d0705012130q627492a9v3973f634580d7b04@mail.gmail.com>
	<20070502051518.18153.1548289072.divmod.xquotient.278@joule.divmod.com>
	<18e3f33d0705020724s43b7bb37n2d9998ca1ee1af73@mail.gmail.com>
Message-ID: <4638A81D.5020408@norsk-esport.no>

Eli Criffield wrote:
> Thats a huge help. I'll see how far i can get with this. I'll write a
> short doc how to do client side cert verification once i get it
> working. And some docstrings if i can figure them out.

I for one would be very interested in seeing some documentation and if
possible example code on getting this working as it is something I plan
on adding to my application at a later stage. Appreciate anything you
can share on this :)

Thanks,
Einar



From Sven-Erik.Tiberg at ltu.se  Thu May  3 04:42:46 2007
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Thu, 3 May 2007 10:42:46 +0200
Subject: [Twisted-Python] UDP some Q's
In-Reply-To: <4636D09A.9000202@thiengineering.ch>
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB910565BF81@EMMA.personal.adp.ltu.se>

Background; working on a two node simulation system using X3D
(www.h3d.org ) and simulink (www.mathworks.org) also CarSim
(www.carsim.com) using simulink in the future.

Made a first code suggestion on transmit / recive UDP. Se attached file
trancive_UDP.py
Used time. to restrict the transmit rate. Doesn't matter if I lose some
state update, 50 updates / second are enough for perception of a smooth
motion. Have to work on events from mouse click to togle them on for 0.2
second.
 
Don't know how to access objects from the main module in the classes in
the lib module.
The tricky part as I see it are ( part of from transive_UDP.py ):
# ------------------------------------------------------------------
 def datagramRecived(self, data):
        count = 0
        data_str = string.split(data)
        for recive_items in data_str:
            __main__.recived_data[ count ] = float( recive_items )
            count = count +1           
        __main__.update_on_recive()

#-----------------------------------------------------------------
The problems are that I need to update __main__.recive.dada before
calling __main__.updat_on_recive().

Second how to access the  .send_UDP from the __main__ module.

/Sven-Erik Tiberg
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trancive_UDP.py
Type: application/octet-stream
Size: 1611 bytes
Desc: trancive_UDP.py
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070503/d30de264/attachment.obj 

From glyph at divmod.com  Thu May  3 05:16:36 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 03 May 2007 09:16:36 -0000
Subject: [Twisted-Python] UDP some Q's
In-Reply-To: <668D1B8AD729C94DB91D17EC19B8BB910565BF81@EMMA.personal.adp.ltu.se>
References: <4636D09A.9000202@thiengineering.ch>
	<668D1B8AD729C94DB91D17EC19B8BB910565BF81@EMMA.personal.adp.ltu.se>
Message-ID: <20070503091636.18153.1714562903.divmod.xquotient.343@joule.divmod.com>

On 08:42 am, sven-erik.tiberg at ltu.se wrote:
>Don't know how to access objects from the main module in the classes in
>the lib module.
>The tricky part as I see it are ( part of from transive_UDP.py ):
># ------------------------------------------------------------------
>def datagramRecived(self, data):
>        count = 0
>        data_str = string.split(data)
>        for recive_items in data_str:
>            __main__.recived_data[ count ] = float( recive_items )
>            count = count +1
>        __main__.update_on_recive()
>
>#-----------------------------------------------------------------
>The problems are that I need to update __main__.recive.dada before
>calling __main__.updat_on_recive().

There is no Twisted API or special technique that you need to use.  Just 
create your objects with references to all the objects they need to 
manipulate.

For example, in main.py, instead of:

    reactor.listenUDP(self.port, transive_udp('...',2345, 0.05 ))

just do:

    reactor.listenUDP(self.port, transive_udp('...', 2345, 0.05, 
recive_data))

and then add an argument to transive_udp's constructor to refer to the 
data.
>Second how to access the  .send_UDP from the __main__ module.

Similarly, you can keep a reference to transive_udp object in the main 
module.

I might be able to comment more except the attached example is full of 
errors and will not even import.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070503/33de1faa/attachment.htm 

From wthie at thiengineering.ch  Thu May  3 06:45:56 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Thu, 03 May 2007 12:45:56 +0200
Subject: [Twisted-Python] latest trunk revision breaks twistd utility on MSW
In-Reply-To: <79BBCF3C-2512-4F0A-B837-4DA0CD102086@gravina.com>
References: <20070321001953.GF29606@mithrandi.za.net>
	<79BBCF3C-2512-4F0A-B837-4DA0CD102086@gravina.com>
Message-ID: <4639BD64.1040802@thiengineering.ch>

Just checked out trunk of nevow and stumbled over the following

...snip
   ...\nevow\testutil.py", line 5, in <module>
     from popen2 import Popen3
exceptions.ImportError: cannot import name Popen3

when using twistd for starting processes.

As per documentation '17.4 popen2' Popen3 and Popen4 are only available 
on Unix.

Thxs, Werner

THIEngineering AG
Florenstrasse 21A
8405 Winterthur
Switzerland

Tel +41 52 238 12 50





From Sven-Erik.Tiberg at ltu.se  Thu May  3 15:11:58 2007
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Thu, 3 May 2007 21:11:58 +0200
Subject: [Twisted-Python] UDP some Q's
References: <4636D09A.9000202@thiengineering.ch><668D1B8AD729C94DB91D17EC19B8BB910565BF81@EMMA.personal.adp.ltu.se>
	<20070503091636.18153.1714562903.divmod.xquotient.343@joule.divmod.com>
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB9104E84BCA@EMMA.personal.adp.ltu.se>

Thanks 
working on it.
found some fault and learned a lot.
/BG
Sven-Erik
 

________________________________

From: twisted-python-bounces at twistedmatrix.com on behalf of glyph at divmod.com
Sent: Thu 5/3/2007 11:16 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] UDP some Q's


On 08:42 am, sven-erik.tiberg at ltu.se wrote:

>Don't know how to access objects from the main module in the classes in
>the lib module.
>The tricky part as I see it are ( part of from transive_UDP.py ):
># ------------------------------------------------------------------
> def datagramRecived(self, data):
>        count = 0
>        data_str = string.split(data)
>        for recive_items in data_str:
>            __main__.recived_data[ count ] = float( recive_items )
>            count = count +1
>        __main__.update_on_recive()
>
>#-----------------------------------------------------------------
>The problems are that I need to update __main__.recive.dada before
>calling __main__.updat_on_recive().

There is no Twisted API or special technique that you need to use.  Just create your objects with references to all the objects they need to manipulate.

For example, in main.py, instead of:

    reactor.listenUDP(self.port, transive_udp('...',2345, 0.05 ))

just do:

    reactor.listenUDP(self.port, transive_udp('...', 2345, 0.05, recive_data))

and then add an argument to transive_udp's constructor to refer to the data.

>Second how to access the  .send_UDP from the __main__ module.

Similarly, you can keep a reference to transive_udp object in the main module.

I might be able to comment more except the attached example is full of errors and will not even import.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/ms-tnef
Size: 4770 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070503/757aae42/attachment.bin 

From rampeters at gmail.com  Thu May  3 21:14:50 2007
From: rampeters at gmail.com (Ram Peters)
Date: Thu, 3 May 2007 21:14:50 -0400
Subject: [Twisted-Python] Twisted sAsync Help
Message-ID: <81b45360705031814p2b3e0302p11ca9e89d00795ed@mail.gmail.com>

I have already created tables in the database.  How do I use the table
using sAsync and introsception?

Something like this:
Profile = Table('Profile', BoundMetaData(mysql_db), autoload=True)

Thank you.



From itamar at itamarst.org  Fri May  4 11:44:34 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 04 May 2007 11:44:34 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r20190 - How to be totally
	awesome and strict and great in one lesson
In-Reply-To: <E1HjzvS-0006eu-00@wolfwood>
References: <E1HjzvS-0006eu-00@wolfwood>
Message-ID: <1178293474.32000.0.camel@localhost.localdomain>

Maybe we should add some utility code to trial for asserting
deprecation?




From exarkun at twistedmatrix.com  Sun May  6 00:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 May 2007 04:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1178424301.72.1354155533@twistedmatrix.com

Bug summary
______________________
Summary for 2007-04-29 through 2007-05-06
Bugs opened: 21    Bugs closed: 15  Total open bugs: 932 (+6)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +2  |Highest:  -1          |Conch:     +1          
|Enhancement:  +6  |Normal:  +10          |Core:      +3          
|Task:         +1                         |Ftp:       -1          
                                          |Pydoctor:  +2          
                                          |Trial:     +2          
                                          |Web:       -1          
                                          |Web2:      +1          
                                          |Words:     +2          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2610] addCleanup method on TestCase to allow for easier tear down. (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2610

[#2613] Provide easy way to create an XMPP response stanza. (opened by ralphm) (CLOSED, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2613

[#2615] Fully parse XMPP stream header (opened by ralphm) (CLOSED, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2615

[#2616] Event dispatching in Xish should trap errors (opened by ralphm) (CLOSED, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2616

[#2617] Add support for incoming XML streams and non-reconnecting client factories. (opened by ralphm)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2617

[#2622] Undocumented objects summary is always empty (opened by mithrandi) (CLOSED, fixed)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2622

[#739 ] Type enforcement for twisted.python.usage (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/739

[#2586] twisted.python.logfile.LogFile's defaultMode parameter is undocumented, untested, insecure (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2586

[#2616] Event dispatching in Xish should trap errors (opened by ralphm) (CLOSED, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2616

                    ===== Normal =====
[#2611] Protocols in twisted.protocols.basic use O(n**2) complexity (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2611

[#2612] Deferreds not returned in web2 test_wsgi (opened by karlb)
    defect          web2       http://twistedmatrix.com/trac/ticket/2612

[#2614] Responding with an error to an XMPP stanza with partial addressing fails. (opened by ralphm) (CLOSED, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2614

[#2618] Have Xish STREAM_END_EVENT carry the reason Failure. (opened by ralphm)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2618

[#2619] t.conch.ssh.filetransfer doesn't support SFTP v6 (opened by z3p)
    task            conch      http://twistedmatrix.com/trac/ticket/2619

[#2620] distribution needs fixups for "setup.py bdist_rpm" (opened by mengel) (CLOSED, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2620

[#2621] pydoctor's handling of duplicate names needs a rethink (opened by mithrandi)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/2621

[#2623] Only first value of multi-value parameter tilde-expanded (opened by mithrandi)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2623

[#2624] Cannot rename an osfs resource if the target name is inside an adhoc directory (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2624

[#2625] urlpath doesn't do any quoting (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/2625

[#2626] trial needs something to check DeprecationWarning (opened by therve)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2626

[#2627] twisted/internet/udp.py doesn't handle ECONNRESET from recvfrom() on cygwin (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2627



Closed Bugs
______________________
                    ===== Highest =====
[#1575] twisted.protocols.ftp.FTP.ftp_STOR() does not handle anonymous requests gracefully (opened by grimmtooth, closed by therve, fixed)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1575

[#739 ] Type enforcement for twisted.python.usage (opened by itamarst, closed by therve, )
    enhancement     core       http://twistedmatrix.com/trac/ticket/739

[#1351] log observer bridging to python logging facility (opened by ctheune, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1351

[#2609] Namespace issues with prefixes reuse in twisted.words.xish. (opened by ralphm, closed by ralphm, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2609

[#1832] test_threads.ReactorThreadsTestCase is very fragile (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1832

[#2297] Make rebuild.latestClass more compliant with new style classes (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2297

[#2505] twisted.xmlrpc.XMLRPC.render need more error handling (opened by yasusii, closed by therve, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2505

[#2586] twisted.python.logfile.LogFile's defaultMode parameter is undocumented, untested, insecure (opened by exarkun, closed by therve, )
    defect          core       http://twistedmatrix.com/trac/ticket/2586

[#2615] Fully parse XMPP stream header (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2615

[#2613] Provide easy way to create an XMPP response stanza. (opened by ralphm, closed by ralphm, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2613

[#2622] Undocumented objects summary is always empty (opened by mithrandi, closed by mwh, fixed)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2622

[#2616] Event dispatching in Xish should trap errors (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2616

[#2616] Event dispatching in Xish should trap errors (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2616

                    ===== Normal =====
[#2620] distribution needs fixups for "setup.py bdist_rpm" (opened by mengel, closed by exarkun, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2620

[#2614] Responding with an error to an XMPP stanza with partial addressing fails. (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2614





From eprparadocs at gmail.com  Sun May  6 11:53:13 2007
From: eprparadocs at gmail.com (Chaz.)
Date: Sun, 06 May 2007 11:53:13 -0400
Subject: [Twisted-Python] Question about twisted.web
Message-ID: <463DF9E9.5090601@gmail.com>

I have two questions about twisted.web that I am hoping someone can 
assist on. First, if I connect to my service via HTTPS how can I get the 
certificate of the client (I require them to have a certificate)? 
Secondly, how can I get the name or IP address of the machine that is 
talking to me?

Thanks,
Chaz



From jacob at internet24.de  Mon May  7 04:09:22 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Mon, 07 May 2007 10:09:22 +0200
Subject: [Twisted-Python] Question about twisted.web
In-Reply-To: <463DF9E9.5090601@gmail.com>
References: <463DF9E9.5090601@gmail.com>
Message-ID: <1178525362.5814.12.camel@enterprise>


1. (client cert)

Probably with the following class method, but I've never used it myself:

http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.Certificate.html#peerFromTransport


2. (client ip)

http://twistedmatrix.com/documents/current/api/twisted.web.http.Request.html

class Res(resource.Resource):
   def render_GET(self, request):
        request.getClientIP()



On Sun, 2007-05-06 at 11:53 -0400, Chaz. wrote:
> I have two questions about twisted.web that I am hoping someone can 
> assist on. First, if I connect to my service via HTTPS how can I get the 
> certificate of the client (I require them to have a certificate)? 
> Secondly, how can I get the name or IP address of the machine that is 
> talking to me?
> 
> Thanks,
> Chaz
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070507/4a4fee39/attachment.pgp 

From BRADLEY.S.GASPARD at saic.com  Mon May  7 11:32:55 2007
From: BRADLEY.S.GASPARD at saic.com (Gaspard, Bradley S.)
Date: Mon, 7 May 2007 11:32:55 -0400
Subject: [Twisted-Python] Resending a UDP datagram if a response is not
	received
Message-ID: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C7B@0015-its-exmb02.us.saic.com>

I am trying to write a client to an existing UDP server that requires a couple of data exchanges before the transaction is complete. Should any of the client's requests go unanswered I would like to resend the request after a timeout period. Perhaps something could be done with reactor.callLater to see if a response had been received but is there a better way to do this?

Any pointers/examples would be greatly appreciated. TCP is not an option.

Brad

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070507/168e9746/attachment.htm 

From exarkun at divmod.com  Mon May  7 11:45:58 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 May 2007 11:45:58 -0400
Subject: [Twisted-Python] Resending a UDP datagram if a response is not
	received
In-Reply-To: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C7B@0015-its-exmb02.us.saic.com>
Message-ID: <20070507154558.19381.158731967.divmod.quotient.9716@ohm>

On Mon, 7 May 2007 11:32:55 -0400, "Gaspard, Bradley S." <bradley.s.gaspard at saic.com> wrote:
>I am trying to write a client to an existing UDP server that requires a couple of data exchanges before the transaction is complete. Should any of the client's requests go unanswered I would like to resend the request after a timeout period. Perhaps something could be done with reactor.callLater to see if a response had been received but is there a better way to do this?

That sounds like just the way to go about it.

>
>Any pointers/examples would be greatly appreciated. TCP is not an option.

You might want to take a look at the retry logic in the DNS client in
twisted.names.client.

Jean-Paul



From fairwinds at eastlink.ca  Mon May  7 12:26:36 2007
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 07 May 2007 13:26:36 -0300
Subject: [Twisted-Python] Getting multiservice from running reactor
Message-ID: <463F533C.5000106@eastlink.ca>

Can someone advise if it possible to obtain a service or multiservice
object from the reactor object. I am interested in status of services in 
multiservice. Many thanks.

Regards,
David



From exarkun at divmod.com  Mon May  7 12:51:33 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 May 2007 12:51:33 -0400
Subject: [Twisted-Python] Getting multiservice from running reactor
In-Reply-To: <463F533C.5000106@eastlink.ca>
Message-ID: <20070507165133.19381.852950918.divmod.quotient.9747@ohm>

On Mon, 07 May 2007 13:26:36 -0300, David Pratt <fairwinds at eastlink.ca> wrote:
>Can someone advise if it possible to obtain a service or multiservice
>object from the reactor object. I am interested in status of services in 
>multiservice. Many thanks.

There isn't necessarily a MultiService associated with the reactor, or
there may be several.  Most likely, whichever code you have which is
interested in the state of a service should already have a reference
to it, so it can just check directly.

Jean-Paul



From fairwinds at eastlink.ca  Mon May  7 15:08:25 2007
From: fairwinds at eastlink.ca (fairwinds at eastlink.ca)
Date: Mon, 07 May 2007 16:08:25 -0300
Subject: [Twisted-Python] Getting multiservice from running reactor
In-Reply-To: <20070507165133.19381.852950918.divmod.quotient.9747@ohm>
References: <463F533C.5000106@eastlink.ca>
	<20070507165133.19381.852950918.divmod.quotient.9747@ohm>
Message-ID: <f76ea58d1a6f4.463f4ef9@eastlink.ca>

Hi Jean Paul. Yes, normally this is the case for sure.  In this case, however, this is zope 3's  startup and I cannot get a handle on the multiservice after zope bootstraps. I am interested in adding services to running reactor with some control on starting and stopping them.  Is it not possible to determine what services the reactor is operating on another way. Many thanks.

Regards,
David

----- Original Message -----
From: Jean-Paul Calderone <exarkun at divmod.com>
Date: Monday, May 7, 2007 1:51 pm
Subject: Re: [Twisted-Python] Getting multiservice from running reactor

> On Mon, 07 May 2007 13:26:36 -0300, David Pratt 
> <fairwinds at eastlink.ca> wrote:
> >Can someone advise if it possible to obtain a service or multiservice
> >object from the reactor object. I am interested in status of 
> services in 
> >multiservice. Many thanks.
> 
> There isn't necessarily a MultiService associated with the reactor, or
> there may be several.  Most likely, whichever code you have which is
> interested in the state of a service should already have a reference
> to it, so it can just check directly.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From exarkun at divmod.com  Mon May  7 15:30:31 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 May 2007 15:30:31 -0400
Subject: [Twisted-Python] Getting multiservice from running reactor
In-Reply-To: <f76ea58d1a6f4.463f4ef9@eastlink.ca>
Message-ID: <20070507193031.19381.787395314.divmod.quotient.9821@ohm>

On Mon, 07 May 2007 16:08:25 -0300, fairwinds at eastlink.ca wrote:
>Hi Jean Paul. Yes, normally this is the case for sure.  In this case, however, this is zope 3's  startup and I cannot get a handle on the multiservice after zope bootstraps. I am interested in adding services to running reactor with some control on starting and stopping them.  Is it not possible to determine what services the reactor is operating on another way. Many thanks.

You should probably make a feature request of the Zope 3 developers.  They
should offer a way to get the IApplication (or IService or whatever) that
their setup code creates.  If they aren't willing to do this (I don't see
why they wouldn't be), then maybe you can think of ways to discover it,
but any such way is going to be pretty hackish and an official Zope 3 API
would be preferable.

Jean-Paul



From fairwinds at eastlink.ca  Mon May  7 22:48:05 2007
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 07 May 2007 23:48:05 -0300
Subject: [Twisted-Python] Getting multiservice from running reactor
In-Reply-To: <20070507193031.19381.787395314.divmod.quotient.9821@ohm>
References: <20070507193031.19381.787395314.divmod.quotient.9821@ohm>
Message-ID: <463FE4E5.8000707@eastlink.ca>

Thanks Jean-Paul. I agree. I brought this up on Zope3-dev list about a 
week ago but it is sort of quiet on the list so no +1  or -1. I 
recommended a utility that could be accessed following bootstrapping to 
obtain the multiservice object or any other app There are already 
methods available in twisted for handling it afterwards. I'll likely try 
this again. Many thanks.

Regards,
David

Jean-Paul Calderone wrote:
> On Mon, 07 May 2007 16:08:25 -0300, fairwinds at eastlink.ca wrote:
>> Hi Jean Paul. Yes, normally this is the case for sure.  In this case, 
>> however, this is zope 3's  startup and I cannot get a handle on the 
>> multiservice after zope bootstraps. I am interested in adding services 
>> to running reactor with some control on starting and stopping them.  
>> Is it not possible to determine what services the reactor is operating 
>> on another way. Many thanks.
> 
> You should probably make a feature request of the Zope 3 developers.  They
> should offer a way to get the IApplication (or IService or whatever) that
> their setup code creates.  If they aren't willing to do this (I don't see
> why they wouldn't be), then maybe you can think of ways to discover it,
> but any such way is going to be pretty hackish and an official Zope 3 API
> would be preferable.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From wthie at thiengineering.ch  Tue May  8 03:57:21 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 08 May 2007 09:57:21 +0200
Subject: [Twisted-Python] Distinguishing several open Firefox/Opera windows
 authorized in same realm 
Message-ID: <46402D61.9020200@thiengineering.ch>

Can someone advise if it is possible to distinguish two open 
Firefox/Opera windows authorized for the same realm?

Many thanks, Werner



From chaks.yoper at gmail.com  Wed May  9 21:42:43 2007
From: chaks.yoper at gmail.com (Chakkaradeep C C)
Date: Thu, 10 May 2007 13:42:43 +1200
Subject: [Twisted-Python] SSL Server and Client
Message-ID: <a54a308e0705091842j6af60fb2h859e86c6ff467d67@mail.gmail.com>

Hi,

I am trying out this
example<http://twistedmatrix.com/pipermail/twisted-python/2007-May/015325.html>to
start with twisted and ssl

I generated my certificate by the command,

openssl genrsa -des3 -out server.pem 1024

When I execute the program, I get this error,

chaks at chaks-laptop:~/LDMS$ python twisted-ssl.py
Enter PEM pass phrase:
Traceback (most recent call last):
  File "twisted-ssl.py", line 17, in <module>
    theCert = PrivateCertificate.loadPEM(file('server.pem','r').read())
  File "/usr/lib/python2.5/site-packages/twisted/internet/_sslverify.py",
line 584, in loadPEM
    crypto.FILETYPE_PEM)
  File "/usr/lib/python2.5/site-packages/twisted/internet/_sslverify.py",
line 561, in load
    return Class._load(data, format)._setPrivateKey(privateKey)
  File "/usr/lib/python2.5/site-packages/twisted/internet/_sslverify.py",
line 395, in load
    return Class(crypto.load_certificate(format, requestData), *args)
OpenSSL.crypto.Error: [('PEM routines', 'PEM_read_bio', 'no start line')]

What am i doing wrong ? Am i missing something here ?

Thanks.

-- 
Regards,
C.C.Chakkaradeep,
http://chakkaradeep.net
--
"Sometimes it's better not to ask - or to listen - when people tell you
something can't be done. I didnt ask for permission or approval. I just went
ahead and did it."  - from "Direct from Dell"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070510/91347986/attachment.htm 

From glyph at divmod.com  Thu May 10 01:35:40 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 10 May 2007 05:35:40 -0000
Subject: [Twisted-Python] SSL Server and Client
In-Reply-To: <a54a308e0705091842j6af60fb2h859e86c6ff467d67@mail.gmail.com>
References: <a54a308e0705091842j6af60fb2h859e86c6ff467d67@mail.gmail.com>
Message-ID: <20070510053540.18153.1027763447.divmod.xquotient.734@joule.divmod.com>


On 01:42 am, chaks.yoper at gmail.com wrote:
>I generated my certificate by the command,
>
>openssl genrsa -des3 -out server.pem 1024

This command does not generate a certificate.  It creates a private key. 
The error you are getting from Twisted is simply telling you that there 
is no certificate in the file you're trying to load.  Apologies for the 
obscure error message, we're just passing through what pyopenssl says, 
which is the same as what the openssl library says.

You might want to post to one of those lists instead; while we can help 
with Twisted APIs for doing SSL, those would be better places to seek 
help with the OpenSSL tools themselves.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070510/98f477f2/attachment.htm 

From lacrymology at gmail.com  Thu May 10 09:03:38 2007
From: lacrymology at gmail.com (Tomas Neme)
Date: Thu, 10 May 2007 10:03:38 -0300
Subject: [Twisted-Python] StdIO forwarding server
Message-ID: <2e6659dd0705100603r2ade9550ue2c1ffd0ff200381@mail.gmail.com>

I need to write a server that receives a command through stdIO and
forwards it to all of its clients. So far I've been able to create and
mantain a list of clients, but I can't send the message to all of
them.

This might be confusing, I think I have a completely wrong approach. I
used the echoclient.py example from O'Reilly's Network Programming
Essentials, and simply changed the ClientFactory to a ServerFactory,
added a clients list and changed

def dataReceived(self,data):
    self.output.write(data)

to

def dataReceived(self,data):
    for c in self.factory.clients:
        c.output.write(data)

but for some reason this comes out to the server's StdIO instead of the client's

can anyone give me some tip?

-- 
|_|0|_|
|_|_|0|
|0|0|0|



From matt at zgroupplc.com  Thu May 10 09:59:31 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Thu, 10 May 2007 14:59:31 +0100
Subject: [Twisted-Python] StdIO forwarding server
In-Reply-To: <2e6659dd0705100603r2ade9550ue2c1ffd0ff200381@mail.gmail.com>
References: <2e6659dd0705100603r2ade9550ue2c1ffd0ff200381@mail.gmail.com>
Message-ID: <4DAEA848-BF12-4538-B646-2D62F48B5DBD@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Tomas,

If the clients are already connected, you should just be able send  
your data as you describe.

If your clients are not connected to the server, your server factory  
should be hosted by the client and it should listen for incoming  
requests by your actual server.

Remember, the server factory creates a Protocol instance for *every*  
client connected to it. What this means is that you will have one  
server factory instance that listens for incoming connections. When a  
connection occurs, ServerFactory.buildProtocol will be called,  
creating a Protocol instance for that connection. Your protocol class  
should take the form of a state machine that copes with being in a  
listening or transmitting state. The other alternative is to use two  
Protocol classes, one for the server and one for the client.

Having little experience of twisted and network programming in  
general, it took a while for that to dawn on me. Hopefully I have  
grasped it correctly, if not, I am sure that others on the list will  
correct me :)

Hope that helps,

Matt

On 10 May 2007, at 14:03, Tomas Neme wrote:

> I need to write a server that receives a command through stdIO and
> forwards it to all of its clients. So far I've been able to create and
> mantain a list of clients, but I can't send the message to all of
> them.
>
> This might be confusing, I think I have a completely wrong approach. I
> used the echoclient.py example from O'Reilly's Network Programming
> Essentials, and simply changed the ClientFactory to a ServerFactory,
> added a clients list and changed
>
> def dataReceived(self,data):
>    self.output.write(data)
>
> to
>
> def dataReceived(self,data):
>    for c in self.factory.clients:
>        c.output.write(data)
>
> but for some reason this comes out to the server's StdIO instead of  
> the client's
>
> can anyone give me some tip?
>
> -- 
> |_|0|_|
> |_|_|0|
> |0|0|0|
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGQyVGyI6MkdKPngkRAgl1AKCzWua9rxmOnryL0XVSdAuwQLsb/gCcDasa
eKcyhV01VDpBGBGuI4YVssE=
=G9nQ
-----END PGP SIGNATURE-----



From jml at mumak.net  Thu May 10 23:33:16 2007
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 11 May 2007 13:33:16 +1000
Subject: [Twisted-Python] Hacking in Bazaar
Message-ID: <d06a5cd30705102033m64d68aadmdf921a89b8e3c3e2@mail.gmail.com>

Hey guys,

I've got a couple of longish flights coming up and I'd like to spend
at least some of the flight time contributing to Twisted.

Thing is, I'd like to be able to use some version control while I'm
working. Call me crazy. My plan is to branch off the Bazaar import at
https://code.launchpad.net/~vcs-imports/twisted/main, make changes,
then make SVN branches when I get back to the internet.

Sound good? Is there anything related to UQDS or Twisted's processes
that I should know now?

cheers,
jml



From radix at twistedmatrix.com  Thu May 10 23:46:36 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 10 May 2007 23:46:36 -0400
Subject: [Twisted-Python] Hacking in Bazaar
In-Reply-To: <d06a5cd30705102033m64d68aadmdf921a89b8e3c3e2@mail.gmail.com>
References: <d06a5cd30705102033m64d68aadmdf921a89b8e3c3e2@mail.gmail.com>
Message-ID: <60ed19d40705102046h6609bd3biaee039b5290e92b6@mail.gmail.com>

On 5/10/07, Jonathan Lange <jml at mumak.net> wrote:
> Hey guys,
>
> I've got a couple of longish flights coming up and I'd like to spend
> at least some of the flight time contributing to Twisted.
>
> Thing is, I'd like to be able to use some version control while I'm
> working. Call me crazy. My plan is to branch off the Bazaar import at
> https://code.launchpad.net/~vcs-imports/twisted/main, make changes,
> then make SVN branches when I get back to the internet.
>
> Sound good? Is there anything related to UQDS or Twisted's processes
> that I should know now?

Given that we accept patches at the very least, you can use tissue
paper for all anybody cares as long as the end result is a patch we
can apply or branch that we can merge.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andrewfr_ice at yahoo.com  Fri May 11 13:39:57 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 11 May 2007 10:39:57 -0700 (PDT)
Subject: [Twisted-Python] A Solution Re: [Stackless] Advice on Debugging
	Stackless/Twisted Problem
In-Reply-To: <mailman.3.1177495202.8620.stackless@stackless.com>
Message-ID: <62138.73968.qm@web34201.mail.mud.yahoo.com>

Hello Colleagues:

Earlier I posted that I was having a problem involving
the loss of deferred calls in a programme that uses
Stackless and Twisted. I found the problem and wrote a
solution. I think it interesting.

It helped when I started using the Twisted logging
facility :-)

The immediate reason the deferred were "lost" was
because the main reactor loop stopped iterating.

What happened was:

1. In the example, Stackless treats Twisted as a
tasklet. 

see:
http://www.stackless.com/pipermail/stackless/2007-April/002448.html

2. When the Request Handler is created, it is running
as a *part* of the Twisted tasklet. 

3. Consequently when the Request Handler blocked on a
channel, this blocked the entire reactor! In turn, 
doIteration() (doSelect) cannot do its work. Twisted
grinds to a halt. 

4. When the last tasklet (TestTasklet) blocked, all
the tasklets became blocked. Consequently the
programme ended. 

The solution was two-fold.

1) To prevent the reactor from blocking, I run the
request handler in its own tasklet. This prevents the
reactor from blocking for indeterminate periods of
time.

2) I modified doSelect to call stackless.schedule().
If the reactor does not call stackless.schedule(),
other tasklets will not get an opportunity to run.

(When I have time, I will write a proper reactor. This
should be a little more than overriding the
doIteration() method of selectReactor). Or re-read the
Blocking demo : I don't quite understand how it works)

With this approach, I 

1) Eliminate a OS-Thread (both Stackless and Twisted
folks concur that this is wrong, wrong, wrong).

2) Can execute tasklets in parallel with tasklets that
are blocked waiting for network I/O like an incoming
HTTP request.

I think it is neat that the Twisted framework is
flexible enough to be contorted in this fashion.
Unfortunately this approach is *very* slow. I feel it 
is wastefully that a tasklet is created for every
incoming request. I have to work on this. 

~

I understand the subset of Stackless and Twisted users
is small. And the philosophies are different. And what
I am doing is a bit esoteric and application specific.
Hopefully others will be able to build upon this : I
don't see why programmers can't get the best of the
Stackless and Twisted worlds.

Cheers,
Andrew 








       
____________________________________________________________________________________Yahoo! oneSearch: Finally, mobile search 
that gives answers, not web links. 
http://mobile.yahoo.com/mobileweb/onesearch?refer=1ONXIC
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Solution.py
Type: text/x-python
Size: 9599 bytes
Desc: 2700386180-Solution.py
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070511/7f2c3259/attachment.py 

From itamar at itamarst.org  Fri May 11 13:46:48 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 11 May 2007 13:46:48 -0400 (EDT)
Subject: [Twisted-Python] A Solution Re: [Stackless] Advice on 
	Debugging Stackless/Twisted Problem
In-Reply-To: <62138.73968.qm@web34201.mail.mud.yahoo.com>
References: <mailman.3.1177495202.8620.stackless@stackless.com>
	<62138.73968.qm@web34201.mail.mud.yahoo.com>
Message-ID: <58358.63.107.91.99.1178905608.squirrel@webmail.zoteca.com>

> 2) I modified doSelect to call stackless.schedule().
> If the reactor does not call stackless.schedule(),
> other tasklets will not get an opportunity to run.

Why not just use twisted.internet.task.LoopingCall?




From elicriffield at gmail.com  Fri May 11 16:36:07 2007
From: elicriffield at gmail.com (Eli Criffield)
Date: Fri, 11 May 2007 15:36:07 -0500
Subject: [Twisted-Python] SSL Cert Verification howto
Message-ID: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>

I was going to post to the twisted wiki, but apparently there isn't one?

 So here is how I made a twisted based xmlrpc client and server that do
all verification via SSL Certs.

 The model works like this, the RPC Server accepts all requests from
 anyone who connects with a cert signed by the CA it trusts.  The client
 verifies the server is valid because the server's cert is signed by the
 CA the client trusts.

 Some kind of key verification is the way to go if servers need to
 authenticate other servers.  Any password would have to be stored in a
 file somewhere.

 Once you have an authenticated server-to-server rpc connection there's
 no need to only show some functions to some servers and some to
 others.  You're in charge of both server and client, so you're trusted as
 a local superuser at that point.

 A base authentication model like this would work great for a
 centralized network management protocol, very much like how Puppet
 works, or a "Super Cron" that might do things like check workload and
 send scheduled jobs to places that can handle it.  You could work in a
 different request handler to http put files and use it to distribute
 files or even distribute files then execute a job to process them --
any kind of server-to-server automation, really.

 Here's how you set it up...

 Openssl packages have a script called CA.sh that's for demonstrating
 how to manage a CA. You will be the CA, anything you bless with your
 signature might as well have the root password.

 You'll want to customize the CA.sh script and the openssl.conf for
 your setup, but it will work something like this:

 # Make a new CA, it makes a private key and a public key then signs
 # the public key with its own private key (a signed public key is a
 # cert)
 CA.sh -newca

 # This makes a private key and a public key, the public key is what
 # you need to sign to make a cert
 CA.sh -newreq

 # This makes signs the public key you just created
 CA.sh -sign

 # Combine the private key and the signed public key (The Cert) and you
 # have the pem file needed for your program
 cat newkey.pem newcert.pem > server.pem
 # Don't need these anymore
 rm newcert.pem  newkey.pem  newreq.pem

 # same for the client key
 CA.sh -newreq
 CA.sh -sign
 cat newkey.pem newcert.pem > client.pem
 rm newcert.pem  newkey.pem  newreq.pem

 # the cacert.pem is what we use to check if the person connecting is
 # friend or foe
 cp demoCA/cacert.pem .


 --- the code ---

 #!/usr/bin/env python
 import sys
 from twisted.web import xmlrpc, server
 from twisted.internet import reactor, ssl
 from twisted.python import log

 def makeSSLContext(myKey,trustedCA):
     '''Returns an ssl Context Object
    @param myKey a pem formated key and certifcate with for my current host
           the other end of this connection must have the cert from the CA
           that signed this key
    @param trustedCA a pem formated certificat from a CA you trust
           you will only allow connections from clients signed by this CA
           and you will only allow connections to a server signed by this CA
     '''

     # our goal in here is to make a SSLContext object to pass to connectSSL
     # or listenSSL

     # Why these functioins... Not sure...
     fd = open(myKey,'r')
     theCert = ssl.PrivateCertificate.loadPEM(fd.read())
     fd.close()
     fd = open(trustedCA,'r')
     theCA = ssl.Certificate.loadPEM(fd.read())
     fd.close()
     ctx = theCert.options(theCA)

     # Now the options you can set look like Standard OpenSSL Library options

     # The SSL protocol to use, one of SSLv23_METHOD, SSLv2_METHOD,
     # SSLv3_METHOD, TLSv1_METHOD. Defaults to TLSv1_METHOD.
     ctx.method = ssl.SSL.TLSv1_METHOD

     # If True, verify certificates received from the peer and fail
     # the handshake if verification fails. Otherwise, allow anonymous
     # sessions and sessions with certificates which fail validation.
     ctx.verify = True

     # Depth in certificate chain down to which to verify.
     ctx.verifyDepth = 1

     # If True, do not allow anonymous sessions.
     ctx.requireCertification = True

     # If True, do not re-verify the certificate on session resumption.
     ctx.verifyOnce = True

     # If True, generate a new key whenever ephemeral DH parameters are used
     # to prevent small subgroup attacks.
     ctx.enableSingleUseKeys = True

     # If True, set a session ID on each context. This allows a shortened
     # handshake to be used when a known client reconnects.
     ctx.enableSessions = True

     # If True, enable various non-spec protocol fixes for broken
     # SSL implementations.
     ctx.fixBrokenPeers = False

     return ctx


 class Example(xmlrpc.XMLRPC):
     """An example object to be published.
        see: http://twistedmatrix.com/projects/web/documentation/howto/xmlrpc.html
     """

     def xmlrpc_echo(self, x):
         """Return all passed args."""
         log.msg('xmlrpc call echo, %s'%x)
         return x


 class Proxy(xmlrpc.Proxy):
     ''' See: http://twistedmatrix.com/projects/web/documentation/howto/xmlrpc.html
         this is eacly like the xmlrpc.Proxy included in twisted but you can
         give it a SSLContext object insted of just accepting the defaults..
     '''
     def setSSLClientContext(self,SSLClientContext):
         self.SSLClientContext = SSLClientContext
     def callRemote(self, method, *args):
         factory = xmlrpc._QueryFactory(
             self.path, self.host, method, self.user,
             self.password, self.allowNone, args)
         if self.secure:
             from twisted.internet import ssl
             try:
                 self.SSLClientContext
             except NameError:
                 print "Must Set a SSL Context"
                 print "use self.setSSLClientContext() first"
                 # Its very bad to connect to ssl without some kind of
                 # verfication of who your talking to
                 # Using the default sslcontext without verification
                 # Can lead to man in the middle attacks
             reactor.connectSSL(self.host, self.port or 443,
                                factory,self.SSLClientContext)
         else:
             reactor.connectTCP(self.host, self.port or 80, factory)
         return factory.deferred

 def printValue(value):
     print repr(value)
     reactor.stop()

 def printError(error):
     print 'error', error
     reactor.stop()

 if __name__ == '__main__':
     # this should look pretty much like the examples given in the twisted
     # documents

     print "running as", sys.argv[1]
     if sys.argv[1] == 'server':
         log.startLogging(sys.stdout)
         ctx = makeSSLContext(myKey='server.pem',trustedCA='cacert.pem')
         r = Example()
         reactor.listenSSL(7080, server.Site(r),ctx)
         reactor.run()
     elif sys.argv[1] == 'client':
         ctx = makeSSLContext(myKey='client.pem', trustedCA='cacert.pem')
         proxy = Proxy('https://localhost:7080/')
         proxy.setSSLClientContext(ctx)
         proxy.callRemote('echo',
                 'hello world').addCallbacks(printValue, printError)
         reactor.run()



From sflist at ihonk.com  Fri May 11 18:35:40 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 11 May 2007 16:35:40 -0600
Subject: [Twisted-Python] SSL Cert Verification howto
In-Reply-To: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>
References: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>
Message-ID: <1178922940.29195.16.camel@infidel.local>

On Fri, 2007-05-11 at 15:36 -0500, Eli Criffield wrote:
>  So here is how I made a twisted based xmlrpc client and server that do
> all verification via SSL Certs.

Awesome, thanks for that, Eli -- the question has been asked so many
times how to verify SSL certs in Twisted, this should definitely go
someplace on the website, perhaps in a generalized fashion to cover
reactor.connectSSL().

Steve




From glyph at divmod.com  Fri May 11 18:55:31 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 11 May 2007 22:55:31 -0000
Subject: [Twisted-Python] A Solution Re: [Stackless] Advice on Debugging
	Stackless/Twisted Problem
In-Reply-To: <62138.73968.qm@web34201.mail.mud.yahoo.com>
References: <mailman.3.1177495202.8620.stackless@stackless.com>
	<62138.73968.qm@web34201.mail.mud.yahoo.com>
Message-ID: <20070511225531.18153.1086946017.divmod.xquotient.791@joule.divmod.com>


On 05:39 pm, andrewfr_ice at yahoo.com wrote:
>(When I have time, I will write a proper reactor. This
>should be a little more than overriding the
>doIteration() method of selectReactor). Or re-read the
>Blocking demo : I don't quite understand how it works)

I've said it before and I'll say it again.  Writing a reactor is the 
_wrong_ way to attempt to integrate Twisted and stackless.  Reactors are 
implemented to implement operating system or platform multiplexing 
technologies, and stackless does not have its own multiplexor. 
Multiplexing technologies are things like kqueue, epoll, IOCP, 
WaitForMultipleObjects, and AIO: APIs that allow you to wait for 
multiple input/output sources (including the clock) at the same time.

The issue is confused somewhat by GUI toolkits, which have their own 
event loops that wrap these APIs, so we have a few things that use those 
reactors as a back-end to cooperate in the most friendly way possible 
with those GUIs, but ultimately what Twisted is talking to in GUI 
libraries is another multiplexing API.

Stackless does not have any such API, and nor should it.  Making a 
stackless reactor would needlessly couple stackless/twisted integration 
to a particular multiplexor.  For example, it would make it impossible 
to write an application which used both GTK and Stackless.  Also, you'd 
need to choose either a portable, but inefficient and non-scalable API 
(like select) or a highly performant, but highly platform-specific API 
(like kqueue).  This is a decision that should be made when an 
application is deployed, and only required by an application developer 
if they are using platform-specific features (which stackless is not).

I keep hearing this idea of a "stackless reactor" bandied about, and I 
don't know how I can make this any more clear.  Again I refer to my 
original post on the subject:

    http://article.gmane.org/gmane.comp.python.twisted/13946
>1) Eliminate a OS-Thread (both Stackless and Twisted
>folks concur that this is wrong, wrong, wrong).

Notwithstanding the above, I'm glad that you've eliminated this.  It's a 
step in the right direction.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070511/463b8883/attachment.htm 

From glyph at divmod.com  Fri May 11 19:06:35 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 11 May 2007 23:06:35 -0000
Subject: [Twisted-Python] SSL Cert Verification howto
In-Reply-To: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>
References: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>
Message-ID: <20070511230635.18153.351401178.divmod.xquotient.810@joule.divmod.com>

On 08:36 pm, elicriffield at gmail.com wrote:
>I was going to post to the twisted wiki, but apparently there isn't 
>one?

twistedmatrix.com is the twisted wiki :).  You need wiki editor 
permission to add stuff to it, but I don't think that would be a 
problem.  What login did you register?
>So here is how I made a twisted based xmlrpc client and server that do
>all verification via SSL Certs.

Thanks so much for putting this example together.  However, I think we 
need a bit more introductory documentation; SSL is hard to understand by 
itself, and this might give people the impression that XMLRPC is a 
necessary component of SSL :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070511/1f39de41/attachment.htm 

From andrewfr_ice at yahoo.com  Sat May 12 11:42:29 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 12 May 2007 08:42:29 -0700 (PDT)
Subject: [Twisted-Python] A Solution Re: [Stackless] Advice on
	Stackless/Twisted Problem
In-Reply-To: <E1Hme1R-0005r1-M6@cube.twistedmatrix.com>
Message-ID: <440808.98570.qm@web34214.mail.mud.yahoo.com>

Hello Itamar:


AF> 2) I modified doSelect to call
stackless.schedule().
AF> If the reactor does not call stackless.schedule(),
AF> other tasklets will not get an opportunity to run.

>Why not just use twisted.internet.task.LoopingCall?

I overlooked using task.LoopingCall in conjunction
with creating a request handler tasklet. I tried and
it works nicely. And LoopingCall is faster too. Sweet!
With the possible need to add critical sections to
stuff like add/remove reader/write, this means I can
leave the reactor alone. This is good.

In the past, I used task.LoopingCall to solve an
earlier problems. I guess I threw the baby out with
the bath water. 

Thanks alot!

Cheers,
Andrew


       
____________________________________________________________________________________Get the free Yahoo! toolbar and rest assured with the added security of spyware protection.
http://new.toolbar.yahoo.com/toolbar/features/norton/index.php



From rnc000 at gmail.com  Sat May 12 12:16:07 2007
From: rnc000 at gmail.com (Ricardo Niederberger Cabral)
Date: Sat, 12 May 2007 13:16:07 -0300
Subject: [Twisted-Python] Submission for the wiki page ProjectsUsingTwisted
In-Reply-To: <35f9d9da0705110929x1f1263acod625343e26c8cbc1@mail.gmail.com>
References: <35f9d9da0705110926y58cf6b83uffe7006a3c5cbfb4@mail.gmail.com>
	<35f9d9da0705110929x1f1263acod625343e26c8cbc1@mail.gmail.com>
Message-ID: <35f9d9da0705120916m16dd6385v9a5ceec0511b2ea9@mail.gmail.com>

Hi,

I'd like to submit a commercial software I'm working on. It's
basically a server-side database capable of easily adding visual
search technology for any image-related website.

Twisted is used on the web tier (server admin interface), on a
services tier (offering a server API using PB, XML-RPC and SOAP) and
for remote procedure calls among peers in a server cluster (PB).

The software homepage is: http://server.imgseek.net/

Architecture details where Twisted plays a crucial role is at:
http://server.imgseek.net/category/documentation/architecture/

Thanks for the great software and best regards,
Ricardo.

PS. sorry if this was sent more than once.



From foom at fuhm.net  Sun May 13 01:28:25 2007
From: foom at fuhm.net (James Y Knight)
Date: Sun, 13 May 2007 01:28:25 -0400
Subject: [Twisted-Python] pyramid.twistedmatrix.com (almost) retired
Message-ID: <BE6248D3-C484-4BB6-AB87-B646EEB9B816@fuhm.net>

If you have a login there, you now have a login on  
cube.twistedmatrix.com. But if you haven't logged in this year, your  
login is disabled. If you want it back, ask.

Logins to pyramid are permanently disabled.

Your user account and mail are migrated, but website isn't quite.  
Until the website is moved, any personal .twistd websites you may  
have won't be functioning. Also changes you make to ~/public_html  
won't appear.

If you had a crontab, it's disabled, and put in a file CRONTAB in  
your home directory.

Cube doesn't accept password-based ssh access, so if you don't have  
an ssh key, you can't login.

Other than that, if anything is broken, let me know.

James



From Sven-Erik.Tiberg at ltu.se  Mon May 14 07:39:15 2007
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Mon, 14 May 2007 13:39:15 +0200
Subject: [Twisted-Python] Eroors on Twisted 2.5 on python2.5.1 / win 
In-Reply-To: <BE6248D3-C484-4BB6-AB87-B646EEB9B816@fuhm.net>
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB910565BFC0@EMMA.personal.adp.ltu.se>

Hi.
A Q before reinstalling the mashine: can
Twisted_NoDocs-2.5.0.win32-py2.5.exe run on python-2.5.1.msi, got some
strange errors testing with the examples in C:\Python25\scripts.

/BG
Sven-Erik Tiberg



From itamar at itamarst.org  Mon May 14 08:22:03 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 May 2007 08:22:03 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r20275 - Add
	blockingCallFromThread, some
	tests and docs, and use it in web2.wsgi.
In-Reply-To: <E1HnZAb-00010I-00@wolfwood.twistedmatrix.com>
References: <E1HnZAb-00010I-00@wolfwood.twistedmatrix.com>
Message-ID: <1179145323.3509.11.camel@localhost.localdomain>

I've heard some comments from new users who run the examples and
"nothing happens." So it's probably best to always have a reactor.run()
in introductory howtos' examples.




From mojira at free.fr  Mon May 14 11:54:24 2007
From: mojira at free.fr (mojira at free.fr)
Date: Mon, 14 May 2007 17:54:24 +0200
Subject: [Twisted-Python] twisted mail
Message-ID: <1179158064.464886302e63b@imp.free.fr>

hello,
i'am working with twisted mail and i would like to know if delivery status
notification are implemented ( notify parameter in RCPT command line, ESMTP
protocol )

thx




From terry at jon.es  Mon May 14 12:13:34 2007
From: terry at jon.es (Terry Jones)
Date: Mon, 14 May 2007 18:13:34 +0200
Subject: [Twisted-Python] Twisted/Python job in Barcelona
Message-ID: <17992.35502.215711.929755@terry-jones-computer.local>

With apologies to those who don't appreciate job ads or cross-posting, I've
just posted a Python job ad.

Briefly, I'm looking for someone to work with in Barcelona, Spain.  There's
a fair amount of Twisted coding involved, and hopefully there will be more.

Details at:

  http://fluidinfo.com/jobs/python-programmers.html

You can find out a little more about me at http://jon.es

Regards,
Terry Jones



From eli at criffield.net  Mon May 14 14:42:42 2007
From: eli at criffield.net (Eli Criffield)
Date: Mon, 14 May 2007 13:42:42 -0500
Subject: [Twisted-Python] SSL Cert Verification howto
In-Reply-To: <20070511230635.18153.351401178.divmod.xquotient.810@joule.divmod.com>
References: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>
	<20070511230635.18153.351401178.divmod.xquotient.810@joule.divmod.com>
Message-ID: <18e3f33d0705141142u3d9bc48cj6f605e7451c623c1@mail.gmail.com>

My login to twistedmatrix.com is elicriffield.

I'll see if i can give a better general feel with the example being
XMLRPC. The meat howto is true for any type of twisted connection.

Eli Criffield

On 5/11/07, glyph at divmod.com <glyph at divmod.com> wrote:
> On 08:36 pm, elicriffield at gmail.com wrote:
> >I was going to post to the twisted wiki, but apparently there isn't one?
>
> twistedmatrix.com is the twisted wiki :).  You need wiki editor permission
> to add stuff to it, but I don't think that would be a problem.  What login
> did you register?
>
> >So here is how I made a twisted based xmlrpc client and server that do
> >all verification via SSL Certs.
>
> Thanks so much for putting this example together.  However, I think we need
> a bit more introductory documentation; SSL is hard to understand by itself,
> and this might give people the impression that XMLRPC is a necessary
> component of SSL :).
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From bjhearsu at learn.senecac.on.ca  Mon May 14 19:03:30 2007
From: bjhearsu at learn.senecac.on.ca (Ben Hearsum)
Date: Mon, 14 May 2007 19:03:30 -0400
Subject: [Twisted-Python] twistd.pid on win32
Message-ID: <4648EAC2.1050703@learn.senecac.on.ca>

I need to check if a paticular script is running, from an outside process. On
Linux I can simply use the twistd.pid file and verify that the given pid is
running but on Windows there doesn't appear to be a twistd.pid. Is there a way
to get Twisted to spit out a twistd.pid on Windows?

- Ben



From alpha04 at netvigator.com  Tue May 15 23:59:52 2007
From: alpha04 at netvigator.com (Andrey)
Date: Tue, 15 May 2007 20:59:52 -0700
Subject: [Twisted-Python] DeferToThread Max spawn num?
Message-ID: <f2dvjr$4s5$1@sea.gmane.org>

Hi

will twisted auto manage the Max num of spawned threads (default 20?) ?
while i using d=deferToThread(function to call)







From exarkun at twistedmatrix.com  Wed May 16 11:09:10 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 16 May 2007 15:09:10 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1179328150.57.184225905@twistedmatrix.com

Bug summary
______________________
Summary for 2007-05-06 through 2007-05-13
Bugs opened: 13    Bugs closed: 6  Total open bugs: 950 (+7)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +3  |Highest:  -1          |Conch:  +1             
|Enhancement:  +4  |High:     +2          |Core:   +8             
|Task:         +1  |Normal:   +7          |Trial:  -1             
                                          |Web:    +0             
                                          |Words:  +0             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2628] twisted.web.client._parse (and any other urlparse-using code) is succeptible to cache poisoning (opened by exarkun) (CLOSED, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2628

[#2630] XMPP stream error conditions incorrectly qualified. (opened by njoyce)
    defect          words      http://twistedmatrix.com/trac/ticket/2630

[#2633] LoopingCall should parameterize its scheduler (opened by radix) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2633

                    ===== High =====
[#1260] win32eventreactor goes crazy at 64 connections (opened by ghazel)
    defect          core       http://twistedmatrix.com/trac/ticket/1260

                    ===== Normal =====
[#2629] passing the "why" argument to log.err is hard and crappy (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2629

[#2631] Update coding standard to indicate preference for TestCase methods which being with "assert" and which do not have an underscore in their name (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2631

[#2632] LoopingCall should not have or use a __call__ method (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2632

[#2634] IReactorTime is missing method to determine the current time (opened by exarkun) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2634

[#2635] ReadlineIO - like t.i.stdio.StandardIO but using the callback api of readline (opened by strank)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2635

[#2636] stdio.StandardIO breaks, readhack code in process.py to blame (opened by gtalvola)
    defect          core       http://twistedmatrix.com/trac/ticket/2636

[#2637] Conch carries over line with each new character when at the bottom of terminal (opened by konrads)
    defect          conch      http://twistedmatrix.com/trac/ticket/2637

[#2638] createInternetSocket is misnamed and misplaced (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2638

[#2639] Allow access to the traceback associated with an error thrown into an inlineCallback (opened by Peaker)
    defect          core       http://twistedmatrix.com/trac/ticket/2639



Closed Bugs
______________________
                    ===== Highest =====
[#2586] twisted.python.logfile.LogFile's defaultMode parameter is undocumented, untested, insecure (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2586

[#2617] Add support for incoming XML streams and non-reconnecting client factories. (opened by ralphm, closed by ralphm, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2617

[#739 ] Type enforcement for twisted.python.usage (opened by itamarst, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/739

[#2628] twisted.web.client._parse (and any other urlparse-using code) is succeptible to cache poisoning (opened by exarkun, closed by exarkun, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2628

                    ===== Normal =====
[#2448] deferToThread w/ trial -u times out on second pass (opened by mwl, closed by therve, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2448

[#2233] twisted.internet.fdesc does not handle EINTR (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2233





From lists at collab.nl  Thu May 17 14:43:29 2007
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Thu, 17 May 2007 20:43:29 +0200
Subject: [Twisted-Python] Flash AMF and RTMP with Twisted
Message-ID: <BBB7E4A3-6D51-42B4-90E0-7707E5340F17@collab.nl>

hi guys,

I'm new to this list and to Twisted. I'm one of the flash/flex  
developers on the Red5 project [1], a open source RTMP/AMF/FLV server  
for Flash (written in Java with Mina), and I'm wondering if anyone is  
working on a Twisted version of these protocols. While searching the  
web for info I found a mailinglist topic [2] that discuss the  
possibility of a Twisted version but that was written in dec 2003,  
when the protocols weren't reverse engineered yet.

So now that they are reverse engineered, I'm wondering how hard it  
would be to do the same with Twisted? And has anyone worked on this  
before? I'm a Flex developer [3] and don't have much experience with  
Twisted but I hope with some help of the Red5 team and the Twisted  
community we can bring RTMP to Python. There is already a Python  
implementation for AMF [4], and I'm also wondering how this can be  
implemented with Twisted?

Regards,

Thijs

[1] http://osflash.org/red5
[2] http://twistedmatrix.com/pipermail/twisted-python/2003-December/ 
006872.html
[3] http://collab.com
[4] http://sourceforge.jp/projects/djangoamf/



From general at eepatents.com  Thu May 17 16:20:26 2007
From: general at eepatents.com (Ed Suominen)
Date: Thu, 17 May 2007 16:20:26 -0400
Subject: [Twisted-Python] Flash AMF and RTMP with Twisted
In-Reply-To: <BBB7E4A3-6D51-42B4-90E0-7707E5340F17@collab.nl>
References: <BBB7E4A3-6D51-42B4-90E0-7707E5340F17@collab.nl>
Message-ID: <464CB90A.30300@eepatents.com>

Thijs Triemstra|Collab wrote:
> So now that [various protocols] are reverse engineered, I'm wondering
>  how hard it would be to do the same with Twisted? And has anyone 
> worked on this before? I'm a Flex developer and don't have much 
> experience with Twisted but I hope with some help of the Red5 team 
> and the Twisted community we can bring RTMP to Python. There is 
> already a Python implementation for AMF, and I'm also wondering how
> this can be implemented with Twisted?

This seems like a natural fit for Twisted. Really, any TCP or UDP
protocol can be implemented pretty easily using a subclass of
twisted.internet.protocol.Protocol [1], or a class that otherwise
implements the interface twisted.internet.interfaces.IProtocol [2].

You can see a myriad of examples of protocols that have been implemented
with Twisted already, in the twisted.protocols sub-package [3]. I
suggest that you develop your AMF/RTMP implementations with the
possibility in mind of them being incorporated into that sub-package.

I'd be willing to some assistance here and there if you like, but
probably not major amounts of coding.

Best regards, Ed

[1]
http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.Protocol.html

[2]
http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IProtocol.html

[3] http://twistedmatrix.com/documents/current/api/twisted.protocols.html




From DBerkstresser at daviswire.com  Thu May 17 16:52:16 2007
From: DBerkstresser at daviswire.com (Berkstresser, Dan)
Date: Thu, 17 May 2007 13:52:16 -0700
Subject: [Twisted-Python] Windows NT Service Problem
In-Reply-To: <E1HoLv2-0003cs-0a@cube.twistedmatrix.com>
Message-ID: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>

Hello, I am trying to get my twisted project to run as a Windows
Service.  I have followed the instructions here:
http://gradstein.info/DeployingTwistedWindows
as well as here:
http://svn.twistedmatrix.com/cvs/sandbox/moonfallen/?rev=18080#dirlist

I have tried setting it up with twistd and also using the runner.py
script with the same result. 

I can build the executable and install the service, but whenever I try
to start it it exits immediately.  The Event Log shows this error:

The instance's SvcRun() method failed 
  File "win32serviceutil.pyc", line 785, in SvcRun
  File "ntsvc\runner.pyc", line 79, in SvcDoRun
  File "ntsvc\runner.pyc", line 48, in run
  File "twisted\application\reactors.pyc", line 82, in installReactor 
twisted.application.reactors.NoSuchReactor: ''

I have tried changing the ntsvc.cfg to 'default' for the reactor entry
and also leaving it blank.  (default says NoSuchReactor: 'default').

Any help would be greatly appreciated.

Thanks,

Dan Berkstresser

 



From bhenry at pacecocorp.com  Thu May 17 18:54:47 2007
From: bhenry at pacecocorp.com (Benjamin Henry)
Date: Thu, 17 May 2007 18:54:47 -0400
Subject: [Twisted-Python] Windows NT Service Problem
In-Reply-To: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
Message-ID: <F8D3784FE4E93C4AA66BE8C551EBB5D1750F0A@ntxbeus12.exchange.xchg>

What reactor are you using?

 

Code that I've used in the global scope for my .tac file is:

 

application=service.Application('Service Name',uid=1000,gid=100)

factory = DerivedFactory()

 

internet.TCPServer(80,
factory).setServiceParent(service.IServiceCollection(application))

 

I ran setup.py (moonfallen's code), registered the service, and it
worked fine.

 

Have you specified a specific reactor, or called reactor.run()?  You
don't need to do that.

 

Regards,

 

Ben

> -----Original Message-----

> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-

> bounces at twistedmatrix.com] On Behalf Of Berkstresser, Dan

> Sent: Thursday, May 17, 2007 1:52 PM

> To: twisted-python at twistedmatrix.com

> Subject: [Twisted-Python] Windows NT Service Problem

> 

> Hello, I am trying to get my twisted project to run as a Windows

> Service.  I have followed the instructions here:

> http://gradstein.info/DeployingTwistedWindows

> as well as here:

> http://svn.twistedmatrix.com/cvs/sandbox/moonfallen/?rev=18080#dirlist

> 

> I have tried setting it up with twistd and also using the runner.py

> script with the same result.

> 

> I can build the executable and install the service, but whenever I try

> to start it it exits immediately.  The Event Log shows this error:

> 

> The instance's SvcRun() method failed

>   File "win32serviceutil.pyc", line 785, in SvcRun

>   File "ntsvc\runner.pyc", line 79, in SvcDoRun

>   File "ntsvc\runner.pyc", line 48, in run

>   File "twisted\application\reactors.pyc", line 82, in installReactor

> twisted.application.reactors.NoSuchReactor: ''

> 

> I have tried changing the ntsvc.cfg to 'default' for the reactor entry

> and also leaving it blank.  (default says NoSuchReactor: 'default').

> 

> Any help would be greatly appreciated.

> 

> Thanks,

> 

> Dan Berkstresser

> 

> 

> 

> _______________________________________________

> Twisted-Python mailing list

> Twisted-Python at twistedmatrix.com

> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070517/ee909b85/attachment.htm 

From lucas at lucaserve.com  Fri May 18 01:53:56 2007
From: lucas at lucaserve.com (Lucas Taylor)
Date: Fri, 18 May 2007 00:53:56 -0500
Subject: [Twisted-Python] Windows NT Service Problem
In-Reply-To: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
References: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
Message-ID: <464D3F74.1060403@lucaserve.com>

Berkstresser, Dan wrote:
> Hello, I am trying to get my twisted project to run as a Windows
> Service.  I have followed the instructions here:
> http://gradstein.info/DeployingTwistedWindows
> as well as here:
> http://svn.twistedmatrix.com/cvs/sandbox/moonfallen/?rev=18080#dirlist


This isn't really relevant to the references you've mentioned, but there
is a simple way to create Windows services with a minor amount of code
and it's not too onerous. You don't have to use py2exe, although it is
certainly possible to do so once you've got the rest working. I'm not
sure if this is the "best" way, but it has been successful for me in a
couple of projects over the past 2 years.

Below is a very simple example using the QOTD server from the core docs.
It doesn't use tac files, Application objects, or twistd, so it's very
basic. A "real" project will differ, but the basic mechanics of starting
and stopping the service are illustrated in the SvcDoRun() and
CheckForQuit() methods of the WindowsService object. The idea is to have
the reactor check for a Stop event periodically and exit if it is raised.

You should be able to install and remove it thusly:
python qotdservice.py install
python qotdservice.py remove

You can then test it out with the sample Echo client from the core docs.

"""qotdservice.py
Sample Twisted Windows Service
"""

# Service Utilities
import win32serviceutil
import win32service
import win32event

# Twisted imports
from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor

class QOTD(Protocol):

    def connectionMade(self):
        self.transport.write("An apple a day keeps the doctor away\r\n")
        self.transport.loseConnection()


class WindowsService(win32serviceutil.ServiceFramework):
    _svc_name_ = "TwistedWin32Service"
    _svc_display_name_ = "Twisted Win32 Service"

    def __init__(self, args):
        win32serviceutil.ServiceFramework.__init__(self, args)
        self.hWaitStop = win32event.CreateEvent(None, 0, 0, None)

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        win32event.SetEvent(self.hWaitStop)

    def SvcDoRun(self):
        import servicemanager

        self.CheckForQuit()

        factory = Factory()
        factory.protocol = QOTD

        reactor.listenTCP(8007, factory)
        reactor.run(installSignalHandlers=0)


    def CheckForQuit(self):
        retval = win32event.WaitForSingleObject(self.hWaitStop, 10)
        if not retval == win32event.WAIT_TIMEOUT:
            # Received Quit from Win32
            reactor.stop()

        reactor.callLater(1.0, self.CheckForQuit)

if __name__=='__main__':
    win32serviceutil.HandleCommandLine(WindowsService)






From wthie at thiengineering.ch  Fri May 18 03:31:01 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Fri, 18 May 2007 09:31:01 +0200
Subject: [Twisted-Python] Windows NT Service Problem
In-Reply-To: <464D3F74.1060403@lucaserve.com>
References: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
	<464D3F74.1060403@lucaserve.com>
Message-ID: <464D5635.5050901@thiengineering.ch>

May I chime in with a question:

Is there a decent way to redirect twisted logging to the system/app log 
facilities of MSW?

Thxs, Werner Thie

Lucas Taylor wrote:
> Berkstresser, Dan wrote:
>> Hello, I am trying to get my twisted project to run as a Windows
>> Service.  I have followed the instructions here:
>> http://gradstein.info/DeployingTwistedWindows
>> as well as here:
>> http://svn.twistedmatrix.com/cvs/sandbox/moonfallen/?rev=18080#dirlist
> 
> 
> This isn't really relevant to the references you've mentioned, but there
> is a simple way to create Windows services with a minor amount of code
> and it's not too onerous. You don't have to use py2exe, although it is
> certainly possible to do so once you've got the rest working. I'm not
> sure if this is the "best" way, but it has been successful for me in a
> couple of projects over the past 2 years.
> 
> Below is a very simple example using the QOTD server from the core docs.
> It doesn't use tac files, Application objects, or twistd, so it's very
> basic. A "real" project will differ, but the basic mechanics of starting
> and stopping the service are illustrated in the SvcDoRun() and
> CheckForQuit() methods of the WindowsService object. The idea is to have
> the reactor check for a Stop event periodically and exit if it is raised.
> 
> You should be able to install and remove it thusly:
> python qotdservice.py install
> python qotdservice.py remove
> 
> You can then test it out with the sample Echo client from the core docs.
> 
> """qotdservice.py
> Sample Twisted Windows Service
> """
> 
> # Service Utilities
> import win32serviceutil
> import win32service
> import win32event
> 
> # Twisted imports
> from twisted.internet.protocol import Protocol, Factory
> from twisted.internet import reactor
> 
> class QOTD(Protocol):
> 
>     def connectionMade(self):
>         self.transport.write("An apple a day keeps the doctor away\r\n")
>         self.transport.loseConnection()
> 
> 
> class WindowsService(win32serviceutil.ServiceFramework):
>     _svc_name_ = "TwistedWin32Service"
>     _svc_display_name_ = "Twisted Win32 Service"
> 
>     def __init__(self, args):
>         win32serviceutil.ServiceFramework.__init__(self, args)
>         self.hWaitStop = win32event.CreateEvent(None, 0, 0, None)
> 
>     def SvcStop(self):
>         self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
>         win32event.SetEvent(self.hWaitStop)
> 
>     def SvcDoRun(self):
>         import servicemanager
> 
>         self.CheckForQuit()
> 
>         factory = Factory()
>         factory.protocol = QOTD
> 
>         reactor.listenTCP(8007, factory)
>         reactor.run(installSignalHandlers=0)
> 
> 
>     def CheckForQuit(self):
>         retval = win32event.WaitForSingleObject(self.hWaitStop, 10)
>         if not retval == win32event.WAIT_TIMEOUT:
>             # Received Quit from Win32
>             reactor.stop()
> 
>         reactor.callLater(1.0, self.CheckForQuit)
> 
> if __name__=='__main__':
>     win32serviceutil.HandleCommandLine(WindowsService)
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From tnelson at onresolve.com  Fri May 18 08:44:38 2007
From: tnelson at onresolve.com (Trent Nelson)
Date: Fri, 18 May 2007 14:44:38 +0200
Subject: [Twisted-Python] Win32 IOCPReactor?
Message-ID: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>


I'm new to Twisted.  Perusing the documentation, I came across
IOCPReactor.  It's marked as 'extremely experimental', and it appears it
only provides support for TCP events.

It seems the last check in to anything IOCPReactor-related was back in
2005.  Is it dead?  Is anyone using it?  Is anyone planning to pick
development back up?  Were there specific issues with IOCP that impeded
development, or just a general lack of people with time, inclination, or
Win32-fu?

Assuming the IOCPReactor's not feasible for high load production
deployment, can anyone comment on how the default select()-based reactor
for Win32 fares under high load?


	Trent.



From arkanes at gmail.com  Fri May 18 10:02:16 2007
From: arkanes at gmail.com (Chris Mellon)
Date: Fri, 18 May 2007 09:02:16 -0500
Subject: [Twisted-Python] Windows NT Service Problem
In-Reply-To: <464D5635.5050901@thiengineering.ch>
References: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
	<464D3F74.1060403@lucaserve.com> <464D5635.5050901@thiengineering.ch>
Message-ID: <4866bea60705180702r49ab2df4o3e28b311943c2553@mail.gmail.com>

On 5/18/07, Werner Thie <wthie at thiengineering.ch> wrote:
> May I chime in with a question:
>
> Is there a decent way to redirect twisted logging to the system/app log
> facilities of MSW?
>

It's trivial to write a log observer that does so. Below is a snippet
from my app that writes errors  (logged with log.err) to the win32
event log. The servicemanager module is part of pywin32.


import servicemanager

def ErrorLogger(msg):
    """ A log observer which will write error messages
    to the windows event log

    Usage: log.addObserver(ErrorLogger)
    """
    if not "isError" in msg:
        return
    if not msg["isError"]:
        return
    #the value is sometimes (often? always?) a tuple
    messages = list(msg["message"])
    if "failure" in msg:
        thisFailure = msg["failure"]
        messages.append(thisFailure.getTraceback(detail="verbose"))
    message = '\n'.join(str(l) for l in messages)
    servicemanager.LogErrorMsg(message)



From teratorn at twistedmatrix.com  Fri May 18 13:58:37 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 18 May 2007 12:58:37 -0500 (CDT)
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
Message-ID: <4629.71.42.153.50.1179511117.squirrel@www.world-net.net>

IOCPReactor isn't production-ready for most people's definitions of
"production".

And yes, it's been stagnant for a long time.. AFAIK it's mostly just lack
of attention. It's a lot of work, and so far nobody has been able to
commit to finishing it.

As for the default select-based reactor it should work fine. There aren't
any outstanding performance concerns that I am aware of. You will have to
test for yourself if it meets your requirements.

Hope that helps,
--
Eric Mangold
Twisted/Win32 Maintainer

> I'm new to Twisted.  Perusing the documentation, I came across
> IOCPReactor.  It's marked as 'extremely experimental', and it appears it
> only provides support for TCP events.
>
> It seems the last check in to anything IOCPReactor-related was back in
> 2005.  Is it dead?  Is anyone using it?  Is anyone planning to pick
> development back up?  Were there specific issues with IOCP that impeded
> development, or just a general lack of people with time, inclination, or
> Win32-fu?
>
> Assuming the IOCPReactor's not feasible for high load production
> deployment, can anyone comment on how the default select()-based reactor
> for Win32 fares under high load?
>
>
> 	Trent.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From ivan at llaisdy.com  Fri May 18 14:57:12 2007
From: ivan at llaisdy.com (Ivan Uemlianin)
Date: Fri, 18 May 2007 19:57:12 +0100
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
Message-ID: <464DF708.7090907@llaisdy.com>

Dear All

I am interested in writing an MRCP (Media Resource Control Protocol [1])
server.  In particular I want to write an MRCP speech recognition
resource server as part of my trefnydd [2] project.  I am posting here
to ask for advice about the network programming part.

I shall also be writing an MRCP client (if only to test the server).
All the code will be GPL'd.

As far as I understand it, an overview of the networking would go like
this:

An MRCP session between client and server is initiated using the Session
Initiation Protocol (SIP).  Client and server negotiate using SIP
messages containing SDP message bodies to define the participants and
the resources required in the session.  After session initiation, two
channels are launched: a media channel using RTP to carry binary audio
(i.e., speech) data, and a control channel using TCP (control channel
messages are text-based and in MRCP format).

It seems to me that both client and server software would have to cope
with SIP, SDP, RTP, MRCP (message format) and plain old TCP (for the
SIP/SDP and MRCP control channel messages).

Here are my questions:

- Does anyone know of a FOSS project to write an MRCP server? preferably
in python. I know of mrcp4j [3].
- My first plan would be to make the MRCP client/server a subclass of an
SIP client/server, as SIP is used to set up (and tear down) the session.
  Does that sound sensible?
- Can twisted.protocols.sip be used to write a SIP server?  Would it
give me everything I need, or would I also need something like pjsip [4]
or jain-sip [5] for the low-level stuff?
- Have I missed anything?

Any advice would be gratefully received.  I'll report back with progress.

Best wishes

Ivan

[1] MRCP:  http://www.llaisdy.com/static/tech/mrcp/
[2] trefnydd:  http://www.llaisdy.com/static/trefnydd/
[3] mrcp4j: "MRCP4J provides a Java API that encapsulates the MRCPv2
protocol and can be used to implement MRCPv2 clients and/or servers."
http://mrcp4j.sourceforge.net/
[4] pjsip:  http://www.pjsip.org/
[5] jain-sip:  https://jain-sip.dev.java.net/






From fairwinds at eastlink.ca  Fri May 18 15:47:47 2007
From: fairwinds at eastlink.ca (David Pratt)
Date: Fri, 18 May 2007 16:47:47 -0300
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
In-Reply-To: <464DF708.7090907@llaisdy.com>
References: <464DF708.7090907@llaisdy.com>
Message-ID: <464E02E3.8040103@eastlink.ca>

You may wish to look at divmod's sine project that provides an sip 
server. Why not license under MIT so that if this is successful it may 
become another a supported protocol in the twisted stack.

Regards,
David

Ivan Uemlianin wrote:
> Dear All
> 
> I am interested in writing an MRCP (Media Resource Control Protocol [1])
> server.  In particular I want to write an MRCP speech recognition
> resource server as part of my trefnydd [2] project.  I am posting here
> to ask for advice about the network programming part.
> 
> I shall also be writing an MRCP client (if only to test the server).
> All the code will be GPL'd.
> 
> As far as I understand it, an overview of the networking would go like
> this:
> 
> An MRCP session between client and server is initiated using the Session
> Initiation Protocol (SIP).  Client and server negotiate using SIP
> messages containing SDP message bodies to define the participants and
> the resources required in the session.  After session initiation, two
> channels are launched: a media channel using RTP to carry binary audio
> (i.e., speech) data, and a control channel using TCP (control channel
> messages are text-based and in MRCP format).
> 
> It seems to me that both client and server software would have to cope
> with SIP, SDP, RTP, MRCP (message format) and plain old TCP (for the
> SIP/SDP and MRCP control channel messages).
> 
> Here are my questions:
> 
> - Does anyone know of a FOSS project to write an MRCP server? preferably
> in python. I know of mrcp4j [3].
> - My first plan would be to make the MRCP client/server a subclass of an
> SIP client/server, as SIP is used to set up (and tear down) the session.
>  Does that sound sensible?
> - Can twisted.protocols.sip be used to write a SIP server?  Would it
> give me everything I need, or would I also need something like pjsip [4]
> or jain-sip [5] for the low-level stuff?
> - Have I missed anything?
> 
> Any advice would be gratefully received.  I'll report back with progress.
> 
> Best wishes
> 
> Ivan
> 
> [1] MRCP:  http://www.llaisdy.com/static/tech/mrcp/
> [2] trefnydd:  http://www.llaisdy.com/static/trefnydd/
> [3] mrcp4j: "MRCP4J provides a Java API that encapsulates the MRCPv2
> protocol and can be used to implement MRCPv2 clients and/or servers."
> http://mrcp4j.sourceforge.net/
> [4] pjsip:  http://www.pjsip.org/
> [5] jain-sip:  https://jain-sip.dev.java.net/
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From db3l.net at gmail.com  Fri May 18 16:26:41 2007
From: db3l.net at gmail.com (David Bolen)
Date: Fri, 18 May 2007 16:26:41 -0400
Subject: [Twisted-Python] Re: Windows NT Service Problem
References: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
	<464D3F74.1060403@lucaserve.com>
Message-ID: <m1iraplvy6.fsf@osx.db3l.homeip.net>

Lucas Taylor <lucas at lucaserve.com> writes:

> Berkstresser, Dan wrote:
>> Hello, I am trying to get my twisted project to run as a Windows
>> Service.  I have followed the instructions here:
>> http://gradstein.info/DeployingTwistedWindows
>> as well as here:
>> http://svn.twistedmatrix.com/cvs/sandbox/moonfallen/?rev=18080#dirlist
>
>
> This isn't really relevant to the references you've mentioned, but there
> is a simple way to create Windows services with a minor amount of code
> and it's not too onerous. You don't have to use py2exe, although it is
> certainly possible to do so once you've got the rest working. I'm not
> sure if this is the "best" way, but it has been successful for me in a
> couple of projects over the past 2 years.

This is extremely close to how I've also been doing it for years.  One
suggestion is to handle reactor shutdown right within SvcStop,
avoiding the need for a polling loop, e.g.:

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        print '%s Service stopping' % self._svc_display_name_
        reactor.callFromThread(reactor.stop)
        self._stopped.wait(5)
        print '%s Service stopped' % self._svc_display_name_

You need the callFromThread since the service messages arrive on the
service thread.  Note that in my case, self._stopped is a
threading.Event that I set in SvcDoRun when reactor.run returns, for a
positive acknowledgement for the stop, although I choose not to wait
forever for it to happen in case something does go wrong.

It's not directly related to Twisted, but since I inevitably want
services built as executables for distribution, and often have a
handful of persistent config elements, here's a custom boot_service.py
module I use with py2exe.  In particular, it provides a single
implementation (rather than different pywin32 and py2exe) for command
line installation/removal, and adds updating support to py2exe's
version.  It also provides a debug mode where running the service
manually with "--debug" permits it to run from a normal console window
with I/O to the window, which I find handy.  The service when running
will be a subclass with a "debug" variable bound to True.

It takes service name information from the existing service class, but
is application specific in respects to command line parsing, so the
module would be adjusted by service - that could be factored out
easily enough.  Options are stored in the registry during installation
or update, and can be retrieved later by the main service module
(e.g., in SvcDoRun) with win32serviceutil.GetServiceCustomOption

          - - - - - - - - - - - - - - - - - - - - - - - - -

#
# boot_service.py
#
# This is a replacement for py2exe's own boot_service startup code that
# handles re-installation more gracefully, as well as supporting command
# line options during installation that get installed as parameters for
# the service in the registry.
#
# It is pulled in by the custom cmdclass in setup.py
#
#

import sys
import os
import getopt
import servicemanager
import winerror
import win32service
from win32serviceutil import InstallService, RemoveService, \
                             ChangeServiceConfig, SetServiceCustomOption

# Get access to our service class
from dataimportd import DataImportService


svc_display_name = getattr(DataImportService, "_svc_display_name_",
                           DataImportService._svc_name_)

#
# --------------------------------------------------------------------------
#

def usage():

    print svc_display_name, DataImportService.__version__
    print 'Usage: %s [ mode ] [ options ]' % os.path.basename(sys.argv[0])
    print 'mode (if not supplied, assumes Service Manager execution):'
    print '  --install       Install/Update the service'
    print '  --remove        Remove the service'
    print '  --debug         Run directly in current console for debugging'
    print '  --version       Display version and exit'
    print 'options (for installation/update):'
    print '  --config=name   Specify configuration file name (default is'
    print '                    data/dataimport.ini beneath installation)'
    print
    sys.exit(0)

#
# --------------------------------------------------------------------------
#

def update_service_options(options):
    for option, value in options.iteritems():
        SetServiceCustomOption(DataImportService._svc_name_, option, value)


#
# --------------------------------------------------------------------------
#

def main():

    try:
        opts, args = getopt.getopt(sys.argv[1:],'?',
                                   ['install','remove','debug',
                                    'help','version',
                                    'config='])
    except getopt.error, details:
        print details
        usage()

    opt_install = opt_remove = opt_debug = False
    service_options = {}

    for opt, optval in opts:
        if opt in ['-?', '--help']:
            usage()
        elif opt == '--install':
            opt_install = True
        elif opt == '--remove':
            opt_remove = True
        elif opt == '--debug':
            opt_debug = True
        elif opt == '--version':
            print DataImportService.__version__
            sys.exit(0)
        elif opt == '--config':
            service_options[opt[2:]] = optval

    if opt_install:

        try:
            InstallService(None,
                           serviceName = DataImportService._svc_name_,
                           displayName = svc_display_name,
                           exeName = sys.executable,
                           startType = win32service.SERVICE_AUTO_START,
                           serviceDeps = DataImportService._svc_deps_
                           )
            update_service_options(service_options)
            print svc_display_name, 'installed'

        except win32service.error, (hr, fn, msg):
            if hr != winerror.ERROR_SERVICE_EXISTS:
                raise

            ChangeServiceConfig(None,
                                serviceName = DataImportService._svc_name_,
                                displayName = svc_display_name,
                                exeName = sys.executable,
                                startType = win32service.SERVICE_AUTO_START,
                                serviceDeps = DataImportService._svc_deps_
                                )

            update_service_options(service_options)
            print svc_display_name, 'updated'

    elif opt_remove:
        RemoveService(DataImportService._svc_name_)
        print svc_display_name, 'removed'

    else:

        # Event source records come from servicemanager
        evtsrc_dll = os.path.abspath(servicemanager.__file__)

        servicemanager.Initialize(DataImportService._svc_name_, evtsrc_dll)
        servicemanager.PrepareToHostSingle(DataImportService)

        if opt_debug:
            print 'Debugging', svc_display_name
            # The normal registration that is done upon initialization by the
            # win32serviceutil.ServiceFramework class will fail, so we suppress
            # some of the __init__ processing.  This is fragile, but still
            # better than not being able to debug directly
            class DebugService(DataImportService):
                ssh = None   # Since this is dereferenced by the framework
                debug = True
                def __init__(self):
                    pass

            service = DebugService()
            service.initialize()
            service.SvcRun()

        else:
            try:
                servicemanager.StartServiceCtrlDispatcher()
            except:
                print 'Unable to start as service:'
                print sys.exc_info()[1]
                print
                usage()
    

# If we're running frozen, assume we should just start on import
if hasattr(sys, 'frozen'):
    main()


          - - - - - - - - - - - - - - - - - - - - - - - - -

Once you have this module, you can reuse it from the service
implementation module (for consistent command line parsing and debug
execution) instead of win32serviceutil with:

          - - - - - - - - - - - - - - - - - - - - - - - - -

if __name__ == "__main__":

    # Use the same boot code that we get when packaged
    import boot_service
    boot_service.main()

          - - - - - - - - - - - - - - - - - - - - - - - - -

And to wrap up the service with py2exe, subclass the default cmdclass
to return the right boot module (if you already have a subclass - for
example I use one which upx's binaries, just add the get_boot_script
method) and then reference it during the call to setup(), e.g.:

          - - - - - - - - - - - - - - - - - - - - - - - - -

from py2exe.build_exe import py2exe


class Py2exe(py2exe):

    # (... any other customizations ...)

    def get_boot_script(self, boot_type):
        if boot_type != 'service':
            return py2exe.get_boot_script(self, boot_type)
        else:
            return os.path.join(os.path.dirname(__file__),
                                "boot_" + boot_type + ".py")

# ...


setup( # (... normal options ...)
      cmdclass = {'py2exe': Py2exe})

          - - - - - - - - - - - - - - - - - - - - - - - - -


-- David




From mojira at free.fr  Sat May 19 08:00:48 2007
From: mojira at free.fr (mojira at free.fr)
Date: Sat, 19 May 2007 14:00:48 +0200
Subject: [Twisted-Python] twisted mail and DSN
Message-ID: <1179576048.464ee6f09666b@imp.free.fr>



hello,
i'am working with twisted mail and i would like to know if delivery status
notification are implemented ( notify parameter in RCPT command line, ESMTP
protocol )

thx



From exarkun at divmod.com  Sat May 19 11:53:49 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 19 May 2007 11:53:49 -0400
Subject: [Twisted-Python] twisted mail and DSN
In-Reply-To: <1179576048.464ee6f09666b@imp.free.fr>
Message-ID: <20070519155349.30678.1531221458.divmod.quotient.2287@ohm>

On Sat, 19 May 2007 14:00:48 +0200, mojira at free.fr wrote:
>
>
>hello,
>i'am working with twisted mail and i would like to know if delivery status
>notification are implemented ( notify parameter in RCPT command line, ESMTP
>protocol )

It isn't.

Jean-Paul



From jritter at bektel.com  Sat May 19 16:59:19 2007
From: jritter at bektel.com (Josh Ritter)
Date: Sat, 19 May 2007 15:59:19 -0500
Subject: [Twisted-Python] Win32 IOCPReactor?
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
Message-ID: <001b01c79a58$94921670$0400000a@spooge>

We use the iocp reactor on our Windows servers for our MMORPG Minions of 
Mirth.

The select reactor on Windows is *extremely* slow and bombs when you hit 
between 32-64 connections.

------------------------------------
-Josh Ritter
President
Prairie Games, Inc
http://www.prairiegames.com


----- Original Message ----- 
From: "Eric Mangold" <teratorn at twistedmatrix.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Friday, May 18, 2007 12:58 PM
Subject: Re: [Twisted-Python] Win32 IOCPReactor?


> IOCPReactor isn't production-ready for most people's definitions of
> "production".
>
> And yes, it's been stagnant for a long time.. AFAIK it's mostly just lack
> of attention. It's a lot of work, and so far nobody has been able to
> commit to finishing it.
>
> As for the default select-based reactor it should work fine. There aren't
> any outstanding performance concerns that I am aware of. You will have to
> test for yourself if it meets your requirements.
>
> Hope that helps,
> --
> Eric Mangold
> Twisted/Win32 Maintainer
>
>> I'm new to Twisted.  Perusing the documentation, I came across
>> IOCPReactor.  It's marked as 'extremely experimental', and it appears it
>> only provides support for TCP events.
>>
>> It seems the last check in to anything IOCPReactor-related was back in
>> 2005.  Is it dead?  Is anyone using it?  Is anyone planning to pick
>> development back up?  Were there specific issues with IOCP that impeded
>> development, or just a general lack of people with time, inclination, or
>> Win32-fu?
>>
>> Assuming the IOCPReactor's not feasible for high load production
>> deployment, can anyone comment on how the default select()-based reactor
>> for Win32 fares under high load?
>>
>>
>> Trent.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 




From itamar at itamarst.org  Sat May 19 17:11:07 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 19 May 2007 17:11:07 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <001b01c79a58$94921670$0400000a@spooge>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
Message-ID: <1179609067.26686.0.camel@localhost.localdomain>

On Sat, 2007-05-19 at 15:59 -0500, Josh Ritter wrote:

> The select reactor on Windows is *extremely* slow and bombs when you hit 
> between 32-64 connections.

The select reactor can go up to 512 connections... are you sure you're
not thinking of the win32eventreactor?




From jritter at bektel.com  Sat May 19 17:30:45 2007
From: jritter at bektel.com (Josh Ritter)
Date: Sat, 19 May 2007 16:30:45 -0500
Subject: [Twisted-Python] Win32 IOCPReactor?
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg><4629.71.42.153.50.1179511117.squirrel@www.world-net.net><001b01c79a58$94921670$0400000a@spooge>
	<1179609067.26686.0.camel@localhost.localdomain>
Message-ID: <003701c79a5c$f8d5d320$0400000a@spooge>


We've never used the event reactor.  It has been awhile since using the 
select reactor in Windows.  At the time, we wouldn't of had nearly 512 
simultaneous connections... It would bomb well before 512 connections.  It 
is possible that it would allow up to 512 connections to be made (not 
simultaneous) before the issue raised itself.  Though, once the problem 
happened no more connections were possible, regardless of some dropping, etc

The performance was also terrible.

-JR



----- Original Message ----- 
From: "Itamar Shtull-Trauring" <itamar at itamarst.org>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Saturday, May 19, 2007 4:11 PM
Subject: Re: [Twisted-Python] Win32 IOCPReactor?


> On Sat, 2007-05-19 at 15:59 -0500, Josh Ritter wrote:
>
>> The select reactor on Windows is *extremely* slow and bombs when you hit
>> between 32-64 connections.
>
> The select reactor can go up to 512 connections... are you sure you're
> not thinking of the win32eventreactor?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 




From itamar at itamarst.org  Sat May 19 17:55:03 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 19 May 2007 17:55:03 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <001b01c79a58$94921670$0400000a@spooge>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
Message-ID: <1179611703.26686.4.camel@localhost.localdomain>

On Sat, 2007-05-19 at 15:59 -0500, Josh Ritter wrote:
> We use the iocp reactor on our Windows servers for our MMORPG Minions of 
> Mirth.

Next question - who runs servers on *Windows*? :)




From exarkun at twistedmatrix.com  Sun May 20 00:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 20 May 2007 04:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1179633901.93.2047542063@twistedmatrix.com

Bug summary
______________________
Summary for 2007-05-13 through 2007-05-20
Bugs opened: 26    Bugs closed: 7  Total open bugs: 958 (+19)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +7  |Highest:  -1          |Conch:     +1          
|Enhancement: +10  |High:     +1          |Core:     +14          
|Task:         +2  |Normal:  +19          |Foolscap:  +0          
                                          |Trial:     +1          
                                          |Web:       +1          
                                          |Web2:      +2          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2640] fix epytext problems in SVN HEAD (opened by mwh)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2640

[#2663] t.conch.manhole does not exit continuation prompt after ctrl-c (opened by PenguinOfDoom)
    defect          conch      http://twistedmatrix.com/trac/ticket/2663

                    ===== High =====
[#2643] twisted.python.modules does not account for memory/disk inconsistencies when scanning packages (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2643

                    ===== Normal =====
[#2641] Circular reference in tcp.BaseClient (opened by mircea) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2641

[#2642] Circular reference in tcp.BaseClient (opened by mircea)
    defect          core       http://twistedmatrix.com/trac/ticket/2642

[#2644] Errors while writing dropin.cache should show a less horrible error message (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2644

[#2645] trial runner does not recognize class based decorators (opened by synapsis)
    defect          trial      http://twistedmatrix.com/trac/ticket/2645

[#2646] twistd should write a pidfile on win32 (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2646

[#2647] foolscap needs to move out of the sandbox (opened by warner)
    task            foolscap   http://twistedmatrix.com/trac/ticket/2647

[#2648] prePathURL does not uses the port number from the Host header (opened by synapsis)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2648

[#2649] using very small positive floats instead of zero achieves nothing except obscurity (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2649

[#2650] amp.Integer is either broken or incorrectly documented (opened by indigo)
    defect          core       http://twistedmatrix.com/trac/ticket/2650

[#2651] amp could be able to encode DateTime and Decimal (opened by indigo)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2651

[#2652] trial should call gc.collect() at the end (opened by exarkun)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2652

[#2653] 204 is not an error code, should not be treated as such for filters (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2653

[#2654] twisted.internet.abstract.isIPAddress rejects valid IPv4 strings (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2654

[#2655] minor documentation correction in howto/components.html (opened by zirpu) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2655

[#2656] twisted.protocols.amp.Command.makeResponse docstring inaccurate (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2656

[#2657] twisted.protocols.amp.Command should have an response parsing method parallel to makeResponse (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2657

[#2658] There should be a protocol wrapper which only wraps protocols (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2658

[#2659] Provide a way to run a sequence of Deferred-returning callables sequentially (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2659

[#2660] web2.client should have a getPage and downloadPage that is API compatible with twisted.web.client (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2660

[#2661] Deprecate IFinishableConsumer so it can be deleted (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2661

[#2662] ITransport shouldn't include getPeer/getHost (opened by Peaker)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2662

[#2664] twisted.protocols.amp._objectsToStrings doesn't document its `strings' parameter (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2664

[#2665] twisted.protocols.amp._objectsToStrings makes a copy of a the `objects' dictionary in the least efficient way possible (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2665



Closed Bugs
______________________
                    ===== Highest =====
[#2633] LoopingCall should parameterize its scheduler (opened by radix, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2633

[#2610] addCleanup method on TestCase to allow for easier tear down. (opened by jml, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2610

[#2315] Request to add int8 string support to basic protocols (opened by metcalfc, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2315

                    ===== Normal =====
[#2634] IReactorTime is missing method to determine the current time (opened by exarkun, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2634

[#2641] Circular reference in tcp.BaseClient (opened by mircea, closed by therve, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2641

[#2565] Exception occurring in Foolscap CopyableSlicer. (opened by kgi, closed by warner, fixed)
    defect          foolscap   http://twistedmatrix.com/trac/ticket/2565

[#2655] minor documentation correction in howto/components.html (opened by zirpu, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2655





From ivan at llaisdy.com  Sun May 20 11:15:44 2007
From: ivan at llaisdy.com (Ivan Uemlianin)
Date: Sun, 20 May 2007 16:15:44 +0100
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
In-Reply-To: <464E02E3.8040103@eastlink.ca>
References: <464DF708.7090907@llaisdy.com> <464E02E3.8040103@eastlink.ca>
Message-ID: <46506620.2000405@llaisdy.com>

David Pratt wrote:
> You may wish to look at divmod's sine project that provides an sip
> server. Why not license under MIT so that if this is successful it may
> become another a supported protocol in the twisted stack.

David

Thanks for your comments.

What does Divmod Sine provide that twisted.protocols.sip doesn't? For
example, see this ticket:

    http://twistedmatrix.com/trac/ticket/2444

Does that imply that twisted.protocols.sip can now (or soon) be used
instead of Sine?

If not, what is the difference between twisted's sip support and sine's?
And has anyone tried pjsip?


Best

Ivan





From exarkun at divmod.com  Sun May 20 11:15:13 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 20 May 2007 11:15:13 -0400
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
In-Reply-To: <46506620.2000405@llaisdy.com>
Message-ID: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>

On Sun, 20 May 2007 16:15:44 +0100, Ivan Uemlianin <ivan at llaisdy.com> wrote:
>David Pratt wrote:
>> You may wish to look at divmod's sine project that provides an sip
>> server. Why not license under MIT so that if this is successful it may
>> become another a supported protocol in the twisted stack.
>
>David
>
>Thanks for your comments.
>
>What does Divmod Sine provide that twisted.protocols.sip doesn't? For
>example, see this ticket:
>
>    http://twistedmatrix.com/trac/ticket/2444
>
>Does that imply that twisted.protocols.sip can now (or soon) be used
>instead of Sine?

The Divmod Sine SIP implementation has numerous bug fixes not present in
twisted.protocols.sip.  Once #2444 is resolved, the protocol support in
Twisted will be as good as the protocol support in Divmod Sine.  What Sine
will still offer above the code in Twisted is the higher level APIs which
make call setup easy enough so that novel applications can focus on their
novelty instead of on SIP details.

Jean-Paul



From tnelson at onresolve.com  Sun May 20 16:56:10 2007
From: tnelson at onresolve.com (Trent Nelson)
Date: Sun, 20 May 2007 22:56:10 +0200
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <001b01c79a58$94921670$0400000a@spooge>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg><4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
Message-ID: <AB1BB4CF81B9214682079EB55A7125ED01DDAA45@mapibe05.exchange.xchg>

 
> The select reactor on Windows is *extremely* slow and bombs when you
hit
> between 32-64 connections.

Out of interest, how many connections are you managing with the
IOCPReactor?

	Trent.



From orlenko at gmail.com  Sun May 20 19:06:26 2007
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Sun, 20 May 2007 16:06:26 -0700
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <1179611703.26686.4.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
Message-ID: <4650D472.5060009@gmail.com>


> Next question - who runs servers on *Windows*? :)
>   

I am new to Twisted, and I am considering porting my application to 
Twisted, (for performance and scalability reasons, and to take advantage 
of Comet). *All* our customers are running Windows. This discussion 
thread sounds scary! What works and what does not work in IOCP reactor? 
Will I be able to run PB and web server using IOCP reactor? Is select 
reactor really broken on Windows? Should I be looking at other server 
products instead?

Please, if someone has experience using Twisted for distributed 
applications with web interface on Windows, could you guide a newbie? 
Thank you very much!

Volodymyr Orlenko



From itamar at itamarst.org  Sun May 20 19:32:39 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 20 May 2007 19:32:39 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <4650D472.5060009@gmail.com>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<4650D472.5060009@gmail.com>
Message-ID: <1179703959.7838.5.camel@localhost.localdomain>

On Sun, 2007-05-20 at 16:06 -0700, Volodymyr Orlenko wrote:

> I am new to Twisted, and I am considering porting my application to 
> Twisted, (for performance and scalability reasons, and to take
> advantage 
> of Comet). *All* our customers are running Windows. This discussion 
> thread sounds scary! What works and what does not work in IOCP
> reactor? 

Basic TCP should work. There's a rewrite of the IOCP reactor in a branch
which is likely better.

> Will I be able to run PB and web server using IOCP reactor? 

Probably; some people at least seem to be able to use it.

> Is select reactor really broken on Windows?

All tests pass in the buildbot: http://twistedmatrix.com/buildbot/ and
we have no major bug reports against it as far as I know. I would trust
it more than the IOCP reactor (as long as you're OK with only 512
connections.)

>  Should I be looking at other server 
> products instead?

Well... it's probably hard to find something as powerful and extensive
as Twisted. So if your choice is building all this infrastructure on
some other framework, or just helping improve Twisted's IOCP support (if
you find it necessary), why not do the later? :)





From orlenko at gmail.com  Sun May 20 21:03:22 2007
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Sun, 20 May 2007 18:03:22 -0700
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <1179703959.7838.5.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<4650D472.5060009@gmail.com>
	<1179703959.7838.5.camel@localhost.localdomain>
Message-ID: <4650EFDA.8030605@gmail.com>

Itamar Shtull-Trauring wrote:
> Well... it's probably hard to find something as powerful and extensive
> as Twisted. So if your choice is building all this infrastructure on
> some other framework, or just helping improve Twisted's IOCP support (if
> you find it necessary), why not do the later? :)
>   
I guess you are right. I've worked with IOCP back in my C++ days, and I 
really liked the performance. Maybe what I should do is put together a 
simple application and do some benchmarking, to compare performance of 
IOCP reactor and select reactor on Windows (and of my existing 
application, which uses TurboGears/CherryPy and Python's built-in XMLRPC 
server). I'll keep you posted.

Is this 
<http://twistedmatrix.com/trac/browser/branches/iocpreactor-1760-3> the 
branch you mentioned?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070520/0476d77f/attachment.htm 

From ivan at llaisdy.com  Mon May 21 06:22:47 2007
From: ivan at llaisdy.com (Ivan Uemlianin)
Date: Mon, 21 May 2007 11:22:47 +0100
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
In-Reply-To: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
References: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
Message-ID: <465172F7.5030501@llaisdy.com>

Jean-Paul Calderone wrote:
> The Divmod Sine SIP implementation has numerous bug fixes not present in
> twisted.protocols.sip.  Once #2444 is resolved, the protocol support in
> Twisted will be as good as the protocol support in Divmod Sine.  What 
> Sine
> will still offer above the code in Twisted is the higher level APIs which
> make call setup easy enough so that novel applications can focus on their
> novelty instead of on SIP details.
This sounds good. Thanks very much.  I'll look into Sine (and the Shtoom 
phone) and report back with progress.

Best

Ivan





From rgacote at AppropriateSolutions.com  Mon May 21 08:13:25 2007
From: rgacote at AppropriateSolutions.com (Ray Cote)
Date: Mon, 21 May 2007 08:13:25 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <1179611703.26686.4.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
Message-ID: <a0624087ec2773c5d92f0@[192.168.24.210]>

At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
>
>Next question - who runs servers on *Windows*? :)

We do [Raises hand].
Twisted built with Py2Exe and running as an NT service.
Have delivered several different applications in this configuration 
for clients.
--Ray

-- 

Raymond Cote
Appropriate Solutions, Inc.
PO Box 458 ~ Peterborough, NH 03458-0458
Phone: 603.924.6079 ~ Fax: 603.924.8668
rgacote(at)AppropriateSolutions.com
www.AppropriateSolutions.com



From itamar at itamarst.org  Mon May 21 08:34:52 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 21 May 2007 08:34:52 -0400
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <a0624087ec2773c5d92f0@[192.168.24.210]>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
Message-ID: <1179750893.7838.10.camel@localhost.localdomain>

On Mon, 2007-05-21 at 08:13 -0400, Ray Cote wrote:
> At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
> >
> >Next question - who runs servers on *Windows*? :)
> 
> We do [Raises hand].
> Twisted built with Py2Exe and running as an NT service.
> Have delivered several different applications in this configuration 
> for clients.
> --Ray

Oh, I certainly understand running on Windows when clients pay you to do
so. I was just surprised people do so on internal servers when they do
have a choice.

Anyway, since this is bringing users out into the open - I'm sure we'd
all like to hear what Twisted is being used for in different companies,
and under which platforms. Do tell!

My company uses Twisted for a variety of uses, including reliable
multicast data distribution, messaging, monitoring and managing complex
processes, in the airline industry. (http://itasoftware.com)

How about you all?




From tnelson at onresolve.com  Mon May 21 10:02:59 2007
From: tnelson at onresolve.com (Trent Nelson)
Date: Mon, 21 May 2007 16:02:59 +0200
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <1179703959.7838.5.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg><4629.71.42.153.50.1179511117.squirrel@www.world-net.net><001b01c79a58$94921670$0400000a@spooge><1179611703.26686.4.camel@localhost.localdomain><4650D472.5060009@gmail.com>
	<1179703959.7838.5.camel@localhost.localdomain>
Message-ID: <AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg>


> Basic TCP should work. There's a rewrite of the IOCP reactor in a
branch
> which is likely better.

I believe Volodymyr already pointed it out, but can I just confirm
you're referring to this branch:

  svn://svn.twistedmatrix.com/svn/Twisted/branches/iocpreactor-1760-3/

Can anyone comment on the status of these two branches?
	
	iocp-producer-1657/
	iocp_syshandle-2021/





From p.mayers at imperial.ac.uk  Mon May 21 10:23:47 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 21 May 2007 15:23:47 +0100
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <4651AB73.2050306@imperial.ac.uk>

> 
> How about you all?

High-throughput in-house network management (now libsnmp-based, formerly 
bespoke code).

Lots of little glue services e.g. tail a log using "tail -f" and a 
process protocol, extract stats, answer SNMP queries for those stats via 
a unix socket passthrough from the net-snmp snmpd daemon.

A couple of web servers; including one that parses a FreeRadius SQL 
accounting database and issues either a PB-based, SNMP-based or Radius 
packet-of-death based disconnect for kicking newly-banned users.

A couple of misc daemons; e.g. one on our mail relays that will run an 
MD5 of a file in the filesystem on request from a Unix socket (in a 
pyrex GIL-release thread using the OpenSSL functions) so we can block 
all instances of a specific attachment by MD5 at SMTP-DATA-time.

A very clever app that a colleague wrote that uses the QUEUE target of 
iptables to get TCP port 443 SYN packets from a walled garden network; 
then connects to that SSL service and gets the certificate; then permits 
or allows the original SYN based on a name-based wildcard of the 
certificate CN.

Loads of other misc stuff mostly in this vein. It's a great.



From itamar at itamarst.org  Mon May 21 10:25:09 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 21 May 2007 10:25:09 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<4650D472.5060009@gmail.com>
	<1179703959.7838.5.camel@localhost.localdomain>
	<AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg>
Message-ID: <1179757509.7838.25.camel@localhost.localdomain>

On Mon, 2007-05-21 at 16:02 +0200, Trent Nelson wrote:
> > Basic TCP should work. There's a rewrite of the IOCP reactor in a
> branch
> > which is likely better.
> 
> I believe Volodymyr already pointed it out, but can I just confirm
> you're referring to this branch:
> 
>   svn://svn.twistedmatrix.com/svn/Twisted/branches/iocpreactor-1760-3/

Yes.

> Can anyone comment on the status of these two branches?
> 	
> 	iocp-producer-1657/
> 	iocp_syshandle-2021/

I think these involve bugs in the current IOCP code.




From matt at zgroupplc.com  Mon May 21 10:43:20 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Mon, 21 May 2007 15:43:20 +0100
Subject: [Twisted-Python] Twisted & ZSI
Message-ID: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi All,

Apologies if this has been covered before but there seems to be a  
dearth of documentation and examples on the net.

Does anyone have any tips for integrating ZSI with twisted? I am  
struggling with the concept of the request / response objects and how  
they relate to a twisted deferred object. Normally, under twisted, I  
would return a deferred from the SOAP method call and let the reactor  
take care of returning the response on callback/errback. How do I do  
this using ZSI?

If anyone has got some *simple* example code, I'd love to see it. I  
am not particularly concerned with general inter-operability, I am  
more concerned with getting a particular SOAP client working with my  
application. SOAPpy doesn't seem to be cutting the mustard, hence the  
need to try ZSI.

Any tips *gratefully* received :)

Matt


m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
QBvvjGEhKT2AtEfhckjliNs=
=AnFA
-----END PGP SIGNATURE-----



From rgacote at AppropriateSolutions.com  Mon May 21 11:33:27 2007
From: rgacote at AppropriateSolutions.com (Ray Cote)
Date: Mon, 21 May 2007 11:33:27 -0400
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
	Win32 	IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <a06240883c2776b8ba1a5@[192.168.24.210]>

At 8:34 AM -0400 5/21/07, Itamar Shtull-Trauring wrote:
>Anyway, since this is bringing users out into the open - I'm sure we'd
>all like to hear what Twisted is being used for in different companies,
>and under which platforms. Do tell!

Windows:
- Web services front end for an Oracle database in the food/nutrition 
management industry.
     <http://www.AppropriateSolutions.com>

- Gateway to various payment processing services (still in development).
     <http://www.AuricSystems.com>

-- 

Raymond Cote
Appropriate Solutions, Inc.
PO Box 458 ~ Peterborough, NH 03458-0458
Phone: 603.924.6079 ~ Fax: 603.924.8668
rgacote(at)AppropriateSolutions.com
www.AppropriateSolutions.com



From zooko at zooko.com  Mon May 21 11:42:37 2007
From: zooko at zooko.com (zooko at zooko.com)
Date: Mon, 21 May 2007 09:42:37 -0600
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?) 
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain> 
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <20070521154237.C4A2680558@zooko.com>


Allmydata, Inc. uses Twisted in its current proprietary consumer backup product
[1] as well as in its free-software distributed storage grid project [2].

Regards,

Zooko

[1] http://allmydata.com/
[2] http://allmydata.org/




From jritter at bektel.com  Mon May 21 11:52:32 2007
From: jritter at bektel.com (Josh Ritter)
Date: Mon, 21 May 2007 10:52:32 -0500
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
	Win32IOCPReactor?)
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg><4629.71.42.153.50.1179511117.squirrel@www.world-net.net><001b01c79a58$94921670$0400000a@spooge><1179611703.26686.4.camel@localhost.localdomain><a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <004501c79bc0$0e2c9f60$0400000a@spooge>

We run a successful independent MMORPG called Minions of Mirth.

We use Twisted for our master, character, GM, world servers, and client. 
The game has more than 40,000 registered players.

We're also working on licensing the technology.  There's more information on 
this available here: http://www.mmoworkshop.com

----- Original Message ----- 
From: "Itamar Shtull-Trauring" <itamar at itamarst.org>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Monday, May 21, 2007 7:34 AM
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] 
Win32IOCPReactor?)


> On Mon, 2007-05-21 at 08:13 -0400, Ray Cote wrote:
>> At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
>> >
>> >Next question - who runs servers on *Windows*? :)
>>
>> We do [Raises hand].
>> Twisted built with Py2Exe and running as an NT service.
>> Have delivered several different applications in this configuration
>> for clients.
>> --Ray
>
> Oh, I certainly understand running on Windows when clients pay you to do
> so. I was just surprised people do so on internal servers when they do
> have a choice.
>
> Anyway, since this is bringing users out into the open - I'm sure we'd
> all like to hear what Twisted is being used for in different companies,
> and under which platforms. Do tell!
>
> My company uses Twisted for a variety of uses, including reliable
> multicast data distribution, messaging, monitoring and managing complex
> processes, in the airline industry. (http://itasoftware.com)
>
> How about you all?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 




From zooko at zooko.com  Mon May 21 11:56:15 2007
From: zooko at zooko.com (zooko at zooko.com)
Date: Mon, 21 May 2007 09:56:15 -0600
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?) 
In-Reply-To: <20070521154237.C4A2680558@zooko.com> 
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
	<20070521154237.C4A2680558@zooko.com>
Message-ID: <20070521155615.917F180558@zooko.com>


 I wrote:
> 
> Allmydata, Inc. uses Twisted in its current proprietary consumer backup product
> [1] as well as in its free-software distributed storage grid project [2].
...
> [1] http://allmydata.com/
> [2] http://allmydata.org/

Oh, and apropos the discussion about Twisted-on-Windows and iocp reactor, 
I should mention that the current consumer-usable product [1] runs exclusively
on Windows (although the non-GUI, server part of it also runs on our Linux
servers).  The new free-software project [2] runs on Linux, Mac, Windows,
Cygwin.  We use the select reactor exclusively.  Every couple of months we
experiment again with switching to iocp reactor, and we hit a bug that forces
us to switch back to the select reactor, e.g. [3].  The good news is that it's
a new bug each time...

Regards,

Zooko

[3] http://allmydata.org/trac/tahoe/changeset/524



From ww at groovy.net  Mon May 21 11:56:16 2007
From: ww at groovy.net (William Waites)
Date: Mon, 21 May 2007 17:56:16 +0200
Subject: [Twisted-Python] Re: Tell us how you're using Twisted
Message-ID: <20070521155616.GA5073@haagenti.com>

The Haagenti Group [0] uses Twisted in telephony call control and billing
applications in conjunction with Yate [1] and Django [2]. The basic
framework is distributed on the Python Cheeseshop [3].

One example of a publicly available service implemented using this
toolset is our Dialstation [4] long distance calling service.

[0] Haagenti Group Inc. http://www.haagenti.com/
[1] Yet Another Telephony Engine http://yate.null.ro/
[2] The Django Framework http://www.djangoproject.com/
[3] The Telnik Framework http://cheeseshop.python.org/pypi/telnik/
[4] Dialstation http://www.dialstation.com/

Haagenti Group Inc.
Bootlab Atelier
Historische Telegrafenamt.
Tucholskystr. 6
Berlin 10117
info - at - haagenti.com



From eprparadocs at gmail.com  Mon May 21 12:29:38 2007
From: eprparadocs at gmail.com (Chas.)
Date: Mon, 21 May 2007 12:29:38 -0400
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@192.168.24.210>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <2f66cbb30705210929v3849002fl59f0c091db11e4c0@mail.gmail.com>

I use it in a peer-to-peer content addressible storage application for
managing petabytes of store (twistedstorage.org).

Chuck Wegrzyn


On 5/21/07, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
> On Mon, 2007-05-21 at 08:13 -0400, Ray Cote wrote:
> > At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
> > >
> > >Next question - who runs servers on *Windows*? :)
> >
> > We do [Raises hand].
> > Twisted built with Py2Exe and running as an NT service.
> > Have delivered several different applications in this configuration
> > for clients.
> > --Ray
>
> Oh, I certainly understand running on Windows when clients pay you to do
> so. I was just surprised people do so on internal servers when they do
> have a choice.
>
> Anyway, since this is bringing users out into the open - I'm sure we'd
> all like to hear what Twisted is being used for in different companies,
> and under which platforms. Do tell!
>
> My company uses Twisted for a variety of uses, including reliable
> multicast data distribution, messaging, monitoring and managing complex
> processes, in the airline industry. (http://itasoftware.com)
>
> How about you all?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070521/37ea7211/attachment.htm 

From jacob at internet24.de  Mon May 21 12:49:48 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Mon, 21 May 2007 18:49:48 +0200
Subject: [Twisted-Python] Twisted & ZSI
In-Reply-To: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
References: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
Message-ID: <1179766188.10941.22.camel@localhost>

ZSI 2.0 has built-in twisted support...

(see --twisted option for wsdl2py/dispatch)

Client side usage:

from MyService_services import *

port = MyServiceLocator().getMyService("http://myhost/MyService")
port.binding.defer = True

msg = myMethodRequest()
msg.value =...
...
deferred = port.myMethod(msg)
deferred.addCallback(....)


Server side usage:

Use twisted.web and derive a service class from WSResource:

The following should get you started:

http://proj.badc.rl.ac.uk/ndg/browser/TI12-security/trunk/python/ndg.security.server/ndg/security/server/SessionMgr/server-config.tac


On Mon, 2007-05-21 at 15:43 +0100, Matthew Glubb wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hi All,
> 
> Apologies if this has been covered before but there seems to be a  
> dearth of documentation and examples on the net.
> 
> Does anyone have any tips for integrating ZSI with twisted? I am  
> struggling with the concept of the request / response objects and how  
> they relate to a twisted deferred object. Normally, under twisted, I  
> would return a deferred from the SOAP method call and let the reactor  
> take care of returning the response on callback/errback. How do I do  
> this using ZSI?
> 
> If anyone has got some *simple* example code, I'd love to see it. I  
> am not particularly concerned with general inter-operability, I am  
> more concerned with getting a particular SOAP client working with my  
> application. SOAPpy doesn't seem to be cutting the mustard, hence the  
> need to try ZSI.
> 
> Any tips *gratefully* received :)
> 
> Matt
> 
> 
> m a t t h e w   g l u b b
> 
> ________________________________________________________________________
> Z Group PLC
> 
> Tel: +44 (0) 8700 111 173
> Fax: +44 (0) 8707 051 393
> Txt: +44 (0) 7800 140 877
> Web: <http://www.zgroupplc.com/>
> 
> This  email  and  any  files  transmitted  with it are  confidential and
> intended solely for the use of the individual or entity to whom they are
> addressed.  The opinions  expressed in this mail are those of the author
> and do not necessarily  represent the views of the company.  If you have
> received this email in error please notify <service at zgroupplc.com>
> 
> 
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.1 (Darwin)
> 
> iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
> QBvvjGEhKT2AtEfhckjliNs=
> =AnFA
> -----END PGP SIGNATURE-----
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From bhenry at pacecocorp.com  Mon May 21 14:50:03 2007
From: bhenry at pacecocorp.com (Benjamin Henry)
Date: Mon, 21 May 2007 14:50:03 -0400
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
	Win32IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <F8D3784FE4E93C4AA66BE8C551EBB5D175119C@ntxbeus12.exchange.xchg>

My company (pacecocorp.com) is using twisted for various services using
Windows Server 2003 for the purpose of tracking and controlling
containers, cranes and trucks for container tracking in ship and rail
yards around the world.  Currently, we're using it to send images and
data from an embedded machine which has OCR algorithms for container
identification.

Regards,
 
Ben Henry
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Itamar Shtull-Trauring
> Sent: Monday, May 21, 2007 5:35 AM
> To: Twisted general discussion
> Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
> Win32IOCPReactor?)
> 
> On Mon, 2007-05-21 at 08:13 -0400, Ray Cote wrote:
> > At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
> > >
> > >Next question - who runs servers on *Windows*? :)
> >
> > We do [Raises hand].
> > Twisted built with Py2Exe and running as an NT service.
> > Have delivered several different applications in this configuration
> > for clients.
> > --Ray
> 
> Oh, I certainly understand running on Windows when clients pay you to
do
> so. I was just surprised people do so on internal servers when they do
> have a choice.
> 
> Anyway, since this is bringing users out into the open - I'm sure we'd
> all like to hear what Twisted is being used for in different
companies,
> and under which platforms. Do tell!
> 
> My company uses Twisted for a variety of uses, including reliable
> multicast data distribution, messaging, monitoring and managing
complex
> processes, in the airline industry. (http://itasoftware.com)
> 
> How about you all?
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From daedalus at eigenmagic.com  Mon May 21 17:30:21 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 22 May 2007 07:30:21 +1000
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
	Win32 IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <1179783021.2054.17.camel@fnord.melbourne.eigenmagic.net>

On Mon, 2007-05-21 at 08:34 -0400, Itamar Shtull-Trauring wrote:

> How about you all?

Software to monitor anything connected to a computer, mostly via SNMP,
but also TCP, ICMP, and any custom program. [1]

The BEEPy pure Python BEEP implementation. [2]

libsnmp, a pure Python SNMP library.[3] Though not purely twisted code,
we use it with twisted in seafelt, and there are backburner plans to
merge it into twisted. (Thanks also to Phil Mayers for the libsnmp
mention. I'm really pleased that's worked out so well for you).

[1] http://www.seafelt.com
[2] http://beepy.sourceforge.net/
[3] http://www.seafelt.com/libsnmp

-- 
Justin Warren <daedalus at eigenmagic.com>



From DBerkstresser at daviswire.com  Mon May 21 17:53:09 2007
From: DBerkstresser at daviswire.com (Berkstresser, Dan)
Date: Mon, 21 May 2007 14:53:09 -0700
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <E1HqAIk-000166-Pi@cube.twistedmatrix.com>
Message-ID: <522DFE1BD2489441978055A65C9DF437B36A0B@KENSVR04.division.daviswire.com>

I am using twisted for an in-house production tracking system for a
large steel mill.  The twisted server handles communications between a
MySQL database, wireless barcode scanners that use WinCE/Python CE for
the clients, some networked industrial scales and interfaces with a
custom Quality Assurance database.

Lucas' response to my Windows NT Service question from the other day
worked like a charm BTW.  Not sure how to link/"re:" to it so I will
re-post it here for posterity:

>From: Lucas Taylor <lucas at lucaserve.com>
>Subject: Re: [Twisted-Python] Windows NT Service Problem
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Message-ID: <464D3F74.1060403 at lucaserve.com>
>Content-Type: text/plain; charset=ISO-8859-1

>This isn't really relevant to the references you've mentioned, but
there
>is a simple way to create Windows services with a minor amount of code
>and it's not too onerous. You don't have to use py2exe, although it is
>certainly possible to do so once you've got the rest working. I'm not
>sure if this is the "best" way, but it has been successful for me in a
>couple of projects over the past 2 years.

>Below is a very simple example using the QOTD server from the core
docs.
>It doesn't use tac files, Application objects, or twistd, so it's very
>basic. A "real" project will differ, but the basic mechanics of
starting
>and stopping the service are illustrated in the SvcDoRun() and
>CheckForQuit() methods of the WindowsService object. The idea is to
have
>the reactor check for a Stop event periodically and exit if it is
raised.

>You should be able to install and remove it thusly:
>python qotdservice.py install
>python qotdservice.py remove

>You can then test it out with the sample Echo client from the core
docs.

"""qotdservice.py
Sample Twisted Windows Service
"""

# Service Utilities
import win32serviceutil
import win32service
import win32event

# Twisted imports
from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor

class QOTD(Protocol):

    def connectionMade(self):
        self.transport.write("An apple a day keeps the doctor away\r\n")
        self.transport.loseConnection()


class WindowsService(win32serviceutil.ServiceFramework):
    _svc_name_ = "TwistedWin32Service"
    _svc_display_name_ = "Twisted Win32 Service"

    def __init__(self, args):
        win32serviceutil.ServiceFramework.__init__(self, args)
        self.hWaitStop = win32event.CreateEvent(None, 0, 0, None)

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        win32event.SetEvent(self.hWaitStop)

    def SvcDoRun(self):
        import servicemanager

        self.CheckForQuit()

        factory = Factory()
        factory.protocol = QOTD

        reactor.listenTCP(8007, factory)
        reactor.run(installSignalHandlers=0)


    def CheckForQuit(self):
        retval = win32event.WaitForSingleObject(self.hWaitStop, 10)
        if not retval == win32event.WAIT_TIMEOUT:
            # Received Quit from Win32
            reactor.stop()

        reactor.callLater(1.0, self.CheckForQuit)

if __name__=='__main__':
    win32serviceutil.HandleCommandLine(WindowsService)








From matt at zgroupplc.com  Tue May 22 04:01:19 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Tue, 22 May 2007 09:01:19 +0100
Subject: [Twisted-Python] Twisted & ZSI
In-Reply-To: <1179766188.10941.22.camel@localhost>
References: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
	<1179766188.10941.22.camel@localhost>
Message-ID: <7B7067C5-96C3-47AF-8EEE-A654CD5E79E4@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Thomas,

Thanks for the pointer. From my quick glance at that code I seem to  
already be on the right track. I'll have a closer look and see if I  
can understand how deferreds interact with it all.

Regards,


Matt

On 21 May 2007, at 17:49, Thomas Jacob wrote:

> ZSI 2.0 has built-in twisted support...
>
> (see --twisted option for wsdl2py/dispatch)
>
> Client side usage:
>
> from MyService_services import *
>
> port = MyServiceLocator().getMyService("http://myhost/MyService")
> port.binding.defer = True
>
> msg = myMethodRequest()
> msg.value =...
> ...
> deferred = port.myMethod(msg)
> deferred.addCallback(....)
>
>
> Server side usage:
>
> Use twisted.web and derive a service class from WSResource:
>
> The following should get you started:
>
> http://proj.badc.rl.ac.uk/ndg/browser/TI12-security/trunk/python/ 
> ndg.security.server/ndg/security/server/SessionMgr/server-config.tac
>
>
> On Mon, 2007-05-21 at 15:43 +0100, Matthew Glubb wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> Hi All,
>>
>> Apologies if this has been covered before but there seems to be a
>> dearth of documentation and examples on the net.
>>
>> Does anyone have any tips for integrating ZSI with twisted? I am
>> struggling with the concept of the request / response objects and how
>> they relate to a twisted deferred object. Normally, under twisted, I
>> would return a deferred from the SOAP method call and let the reactor
>> take care of returning the response on callback/errback. How do I do
>> this using ZSI?
>>
>> If anyone has got some *simple* example code, I'd love to see it. I
>> am not particularly concerned with general inter-operability, I am
>> more concerned with getting a particular SOAP client working with my
>> application. SOAPpy doesn't seem to be cutting the mustard, hence the
>> need to try ZSI.
>>
>> Any tips *gratefully* received :)
>>
>> Matt
>>
>>
>> m a t t h e w   g l u b b
>>
>> _____________________________________________________________________ 
>> ___
>> Z Group PLC
>>
>> Tel: +44 (0) 8700 111 173
>> Fax: +44 (0) 8707 051 393
>> Txt: +44 (0) 7800 140 877
>> Web: <http://www.zgroupplc.com/>
>>
>> This  email  and  any  files  transmitted  with it are   
>> confidential and
>> intended solely for the use of the individual or entity to whom  
>> they are
>> addressed.  The opinions  expressed in this mail are those of the  
>> author
>> and do not necessarily  represent the views of the company.  If  
>> you have
>> received this email in error please notify <service at zgroupplc.com>
>>
>>
>>
>> -----BEGIN PGP SIGNATURE-----
>> Version: GnuPG v1.4.1 (Darwin)
>>
>> iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
>> QBvvjGEhKT2AtEfhckjliNs=
>> =AnFA
>> -----END PGP SIGNATURE-----
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGUqNPyI6MkdKPngkRAiMqAJ94XUKihT+eXd4DpYmvGxOjMuYdBgCgr0SJ
SZTUMxxMa91uFZb0PTvS4VM=
=ahqG
-----END PGP SIGNATURE-----



From karlb at gmx.net  Tue May 22 08:47:11 2007
From: karlb at gmx.net (Karl Bartel)
Date: Tue, 22 May 2007 14:47:11 +0200
Subject: [Twisted-Python] Dead link in wiki/ContributingToTwistedLabs
Message-ID: <14FBB459-F5F0-404C-B913-F68D077312E4@gmx.net>

The link to the Twisted coding standard on http://twistedmatrix.com/ 
trac/wiki/ContributingToTwistedLabs returns a 404. You probably want  
it to point to http://twistedmatrix.com/trac/browser/trunk/doc/ 
development/policy/coding-standard.xhtml?format=raw

It looks like I can't edit the page, and there's no contact email on  
that page, so I thought I'd write to the mailing list.

-- Karl



From matt at zgroupplc.com  Tue May 22 09:36:53 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Tue, 22 May 2007 14:36:53 +0100
Subject: [Twisted-Python] Twisted & ZSI
In-Reply-To: <1179766188.10941.22.camel@localhost>
References: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
	<1179766188.10941.22.camel@localhost>
Message-ID: <53F99A7A-89EE-462A-89FC-B499253941AB@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi All,

Thanks again Thomas for pointing me in the right direction with  
twisted and ZSI. I apologise if this is getting technically off-topic  
(ie. ZSI) but people seem to get more annoyed about cross posting.  
Berate me about that if it makes you feel better! If you still have  
the patience, I have one major problem that is bugging me:

At the moment, I have the following (test function) working fine  
within twisted and twistd:

def wsa_ProcessAip(self, ps, address, **kw):
     self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,  
ps, address, **kw)
     self.response._mode = False
     self.response._return = '127.0.0.1'
     return self.request, self.response

*However* I want to return a deferred from this method. I am not sure  
that this is easily possible as ZSI doesn't seem to be recognising a  
return value of either server.NOT_DONE_YET, or a deferred object. It  
is also forcing me to return a tuple containing the ZSI request and  
response objects which is confusing me as I want to return a  
deferred. My ideal would be:

def wsa_ProcessAip(self, ps, address, **kw):
     self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,  
ps, address, **kw)
     # Don't worry about there being nothing to call back this
     # In my reality it does get called back
     deferred = defer.Deferred()
     deferred.addBoth(self.aipBack)
     return deferred

def aipBack(self, result):
     ip, mode = result
     self.response._mode = mode
     self.response._return = ip
     return self.request, self.response

Is this possible? Scanning the ZSI twisted package, the only mention  
of a deferred object is in the client module. I am also puzzled with  
the 'Delayed Call Sweep' debug line. To me, this indicates some kind  
of deferred.

Thanks a lot for your time :)


Matt


On 21 May 2007, at 17:49, Thomas Jacob wrote:

> ZSI 2.0 has built-in twisted support...
>
> (see --twisted option for wsdl2py/dispatch)
>
> Client side usage:
>
> from MyService_services import *
>
> port = MyServiceLocator().getMyService("http://myhost/MyService")
> port.binding.defer = True
>
> msg = myMethodRequest()
> msg.value =...
> ...
> deferred = port.myMethod(msg)
> deferred.addCallback(....)
>
>
> Server side usage:
>
> Use twisted.web and derive a service class from WSResource:
>
> The following should get you started:
>
> http://proj.badc.rl.ac.uk/ndg/browser/TI12-security/trunk/python/ 
> ndg.security.server/ndg/security/server/SessionMgr/server-config.tac
>
>
> On Mon, 2007-05-21 at 15:43 +0100, Matthew Glubb wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> Hi All,
>>
>> Apologies if this has been covered before but there seems to be a
>> dearth of documentation and examples on the net.
>>
>> Does anyone have any tips for integrating ZSI with twisted? I am
>> struggling with the concept of the request / response objects and how
>> they relate to a twisted deferred object. Normally, under twisted, I
>> would return a deferred from the SOAP method call and let the reactor
>> take care of returning the response on callback/errback. How do I do
>> this using ZSI?
>>
>> If anyone has got some *simple* example code, I'd love to see it. I
>> am not particularly concerned with general inter-operability, I am
>> more concerned with getting a particular SOAP client working with my
>> application. SOAPpy doesn't seem to be cutting the mustard, hence the
>> need to try ZSI.
>>
>> Any tips *gratefully* received :)
>>
>> Matt
>>
>>
>> m a t t h e w   g l u b b
>>
>> _____________________________________________________________________ 
>> ___
>> Z Group PLC
>>
>> Tel: +44 (0) 8700 111 173
>> Fax: +44 (0) 8707 051 393
>> Txt: +44 (0) 7800 140 877
>> Web: <http://www.zgroupplc.com/>
>>
>> This  email  and  any  files  transmitted  with it are   
>> confidential and
>> intended solely for the use of the individual or entity to whom  
>> they are
>> addressed.  The opinions  expressed in this mail are those of the  
>> author
>> and do not necessarily  represent the views of the company.  If  
>> you have
>> received this email in error please notify <service at zgroupplc.com>
>>
>>
>>
>> -----BEGIN PGP SIGNATURE-----
>> Version: GnuPG v1.4.1 (Darwin)
>>
>> iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
>> QBvvjGEhKT2AtEfhckjliNs=
>> =AnFA
>> -----END PGP SIGNATURE-----
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGUvH4yI6MkdKPngkRAgKEAKCSaH+sOfF8M/DyqWCCz7Qy2YtYpQCgoZiH
zn42XMg+wNZvGsssTNr3tfg=
=WHLP
-----END PGP SIGNATURE-----



From jacob at internet24.de  Tue May 22 14:22:33 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Tue, 22 May 2007 20:22:33 +0200
Subject: [Twisted-Python] Twisted & ZSI
In-Reply-To: <53F99A7A-89EE-462A-89FC-B499253941AB@zgroupplc.com>
References: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
	<1179766188.10941.22.camel@localhost>
	<53F99A7A-89EE-462A-89FC-B499253941AB@zgroupplc.com>
Message-ID: <1179858153.15084.19.camel@localhost>

Actually, I'm not using the built-in twisted dispatching system
of ZSI myself, so you probably will have to read the source
to find out these things :-)

Alternatively you might just want to try to ask that question again on
pywebsvcs-talk at lists.sourceforge.net where the authors of ZSI post
regularly, they are generally very helpful....

But it's also pretty easy to build your own ZSI/twisted dispatcher,
that's
what I am doing (executing the method calls in separate threads, handing
deferred execution back the twisted reactor when I need deferreds,
waiting on a lock till the results come in) , I could mail you a rough
example if you like... 

On Tue, 2007-05-22 at 14:36 +0100, Matthew Glubb wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hi All,
> 
> Thanks again Thomas for pointing me in the right direction with  
> twisted and ZSI. I apologise if this is getting technically off-topic  
> (ie. ZSI) but people seem to get more annoyed about cross posting.  
> Berate me about that if it makes you feel better! If you still have  
> the patience, I have one major problem that is bugging me:
> 
> At the moment, I have the following (test function) working fine  
> within twisted and twistd:
> 
> def wsa_ProcessAip(self, ps, address, **kw):
>      self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,  
> ps, address, **kw)
>      self.response._mode = False
>      self.response._return = '127.0.0.1'
>      return self.request, self.response
> 
> *However* I want to return a deferred from this method. I am not sure  
> that this is easily possible as ZSI doesn't seem to be recognising a  
> return value of either server.NOT_DONE_YET, or a deferred object. It  
> is also forcing me to return a tuple containing the ZSI request and  
> response objects which is confusing me as I want to return a  
> deferred. My ideal would be:
> 
> def wsa_ProcessAip(self, ps, address, **kw):
>      self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,  
> ps, address, **kw)
>      # Don't worry about there being nothing to call back this
>      # In my reality it does get called back
>      deferred = defer.Deferred()
>      deferred.addBoth(self.aipBack)
>      return deferred
> 
> def aipBack(self, result):
>      ip, mode = result
>      self.response._mode = mode
>      self.response._return = ip
>      return self.request, self.response
> 
> Is this possible? Scanning the ZSI twisted package, the only mention  
> of a deferred object is in the client module. I am also puzzled with  
> the 'Delayed Call Sweep' debug line. To me, this indicates some kind  
> of deferred.
> 
> Thanks a lot for your time :)
> 
> 
> Matt
> 
> 
> On 21 May 2007, at 17:49, Thomas Jacob wrote:
> 
> > ZSI 2.0 has built-in twisted support...
> >
> > (see --twisted option for wsdl2py/dispatch)
> >
> > Client side usage:
> >
> > from MyService_services import *
> >
> > port = MyServiceLocator().getMyService("http://myhost/MyService")
> > port.binding.defer = True
> >
> > msg = myMethodRequest()
> > msg.value =...
> > ...
> > deferred = port.myMethod(msg)
> > deferred.addCallback(....)
> >
> >
> > Server side usage:
> >
> > Use twisted.web and derive a service class from WSResource:
> >
> > The following should get you started:
> >
> > http://proj.badc.rl.ac.uk/ndg/browser/TI12-security/trunk/python/ 
> > ndg.security.server/ndg/security/server/SessionMgr/server-config.tac
> >
> >
> > On Mon, 2007-05-21 at 15:43 +0100, Matthew Glubb wrote:
> >> -----BEGIN PGP SIGNED MESSAGE-----
> >> Hash: SHA1
> >>
> >> Hi All,
> >>
> >> Apologies if this has been covered before but there seems to be a
> >> dearth of documentation and examples on the net.
> >>
> >> Does anyone have any tips for integrating ZSI with twisted? I am
> >> struggling with the concept of the request / response objects and how
> >> they relate to a twisted deferred object. Normally, under twisted, I
> >> would return a deferred from the SOAP method call and let the reactor
> >> take care of returning the response on callback/errback. How do I do
> >> this using ZSI?
> >>
> >> If anyone has got some *simple* example code, I'd love to see it. I
> >> am not particularly concerned with general inter-operability, I am
> >> more concerned with getting a particular SOAP client working with my
> >> application. SOAPpy doesn't seem to be cutting the mustard, hence the
> >> need to try ZSI.
> >>
> >> Any tips *gratefully* received :)
> >>
> >> Matt
> >>
> >>
> >> m a t t h e w   g l u b b
> >>
> >> _____________________________________________________________________ 
> >> ___
> >> Z Group PLC
> >>
> >> Tel: +44 (0) 8700 111 173
> >> Fax: +44 (0) 8707 051 393
> >> Txt: +44 (0) 7800 140 877
> >> Web: <http://www.zgroupplc.com/>
> >>
> >> This  email  and  any  files  transmitted  with it are   
> >> confidential and
> >> intended solely for the use of the individual or entity to whom  
> >> they are
> >> addressed.  The opinions  expressed in this mail are those of the  
> >> author
> >> and do not necessarily  represent the views of the company.  If  
> >> you have
> >> received this email in error please notify <service at zgroupplc.com>
> >>
> >>
> >>
> >> -----BEGIN PGP SIGNATURE-----
> >> Version: GnuPG v1.4.1 (Darwin)
> >>
> >> iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
> >> QBvvjGEhKT2AtEfhckjliNs=
> >> =AnFA
> >> -----END PGP SIGNATURE-----
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> m a t t h e w   g l u b b
> 
> ________________________________________________________________________
> Z Group PLC
> 
> Tel: +44 (0) 8700 111 173
> Fax: +44 (0) 8707 051 393
> Txt: +44 (0) 7800 140 877
> Web: <http://www.zgroupplc.com/>
> 
> This  email  and  any  files  transmitted  with it are  confidential and
> intended solely for the use of the individual or entity to whom they are
> addressed.  The opinions  expressed in this mail are those of the author
> and do not necessarily  represent the views of the company.  If you have
> received this email in error please notify <service at zgroupplc.com>
> 
> 
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.1 (Darwin)
> 
> iD8DBQFGUvH4yI6MkdKPngkRAgKEAKCSaH+sOfF8M/DyqWCCz7Qy2YtYpQCgoZiH
> zn42XMg+wNZvGsssTNr3tfg=
> =WHLP
> -----END PGP SIGNATURE-----
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070522/c06e348f/attachment.pgp 

From brendoncolby at gmail.com  Tue May 22 15:32:02 2007
From: brendoncolby at gmail.com (Brendon Colby)
Date: Tue, 22 May 2007 14:32:02 -0500
Subject: [Twisted-Python] Need help pulling things together.
Message-ID: <e64b001e0705221232v70ce16d8x8c03970c4937dc56@mail.gmail.com>

Greetings,

I've struggled to learn Twisted for a couple of years, usually hitting
the same wall I've hit yet again and giving up. I acknowledge the huge
benefit to using Twisted for what I want to do, so I wanted to see if
some nice folks out there can help me pull some things together. I've
gone through the docs, previous posts, Twisted code and examples etc.
quite extensively. Things just have not gelled for me.

The project I'm working on is, at its core, a relatively basic chat
server. There are "Areas" and "Users". What I do now with asynchat is
create a new User() object for each UserSocket() object (each user who
connects). The UserSocket() class parses the socket data and does a
getattr(), i.e. if the client sends a "sendAreaMessage" command I
getattr() User.do_sendAreaMessage(). The work is done in the User
class, then an event is sent back to the user. This is the pattern my
brain wants to use with Twisted, and I'm not sure whether or not I'm
off to a bad start. I took this from the chat server example:

class ChatProtocol(basic.LineReceiver):
    delimiter = '\n'

    def connectionMade(self):
        print "Got new client!"
        self.user = User(self)
        self.message("Welcome to chat.")

    def connectionLost(self, reason):
        print "Lost a client!"

    def lineReceived(self, line):
        data = line.split(" ")
        getattr(self.user,'do_'+data[0])(data[1:])

    def message(self, message):
        self.transport.write(message + self.delimiter)

class ChatFactory(Factory):
    protocol = ChatProtocol

class Area:
    pass # Area stuff

class User:
    def __init__(self,protocol):
        print "New user"
        self.protocol = protocol

    def do_foo(self,args):
        message = "do_foo with args: "+ ' '.join(args)
        self.protocol.transport.write(message + "\n")

application = service.Application("sserverd")
internet.TCPServer(4001, ChatFactory()).setServiceParent(application)


With all the different examples I'm having a hard time finding the
"right" way to write my server using Twisted. I thought I was on to
something reading through the IRC server protocol, but without a full
server example I got lost. Do I set up a generic handleCommand() like
interface and define each command in the protocol class (i.e.
do_sendMessage) and have callbacks that my User class
redefines/implements? Or am I on the right path?

I really appreciate any input on this!

Brendon



From wthie at thiengineering.ch  Wed May 23 02:11:45 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 23 May 2007 08:11:45 +0200
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <4653DB21.8080807@thiengineering.ch>

We do most development on MSW and also have some non-productive 
testsites running for demonstration purposes. One is an implementation 
of the most popular Swiss card game 'Jass' where you can play against 
three 'computer players' on jass.thie.ch (use login/pass: sf.tv when 
propmted. The other is a demo for a webapp for looking up phone numbers 
and address details for all registered customers of Swiss Telecom. I 
also married some example code (serial GPS stuff) with Athena/LivePages 
thus providing a browser interface for a serially connected industrial 
SPS. Another Athena/Livepage mini example I wrote involved a standard 
IXUS Canon camera (USB connected), providing access to the cams 
functions via the browser.

Werner

Itamar Shtull-Trauring wrote:
> On Mon, 2007-05-21 at 08:13 -0400, Ray Cote wrote:
>> At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
>>> Next question - who runs servers on *Windows*? :)
>> We do [Raises hand].
>> Twisted built with Py2Exe and running as an NT service.
>> Have delivered several different applications in this configuration 
>> for clients.
>> --Ray
> 
> Oh, I certainly understand running on Windows when clients pay you to do
> so. I was just surprised people do so on internal servers when they do
> have a choice.
> 
> Anyway, since this is bringing users out into the open - I'm sure we'd
> all like to hear what Twisted is being used for in different companies,
> and under which platforms. Do tell!
> 
> My company uses Twisted for a variety of uses, including reliable
> multicast data distribution, messaging, monitoring and managing complex
> processes, in the airline industry. (http://itasoftware.com)
> 
> How about you all?
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From michaelschneider at current.net  Wed May 23 09:42:34 2007
From: michaelschneider at current.net (Michael Schneider)
Date: Wed, 23 May 2007 09:42:34 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <1179757509.7838.25.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<4650D472.5060009@gmail.com>	<1179703959.7838.5.camel@localhost.localdomain>	<AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg>
	<1179757509.7838.25.camel@localhost.localdomain>
Message-ID: <465444CA.6030309@current.net>

There is an IOCP buildbot that illustrates the current state of the IOCP reator against the twisted test suite.


Just look at the win32-py2.5-iocp column on 
http://twistedmatrix.com/buildbot/

Happy coding,
Mike

Itamar Shtull-Trauring wrote:
> On Mon, 2007-05-21 at 16:02 +0200, Trent Nelson wrote:
>   
>>> Basic TCP should work. There's a rewrite of the IOCP reactor in a
>>>       
>> branch
>>     
>>> which is likely better.
>>>       
>> I believe Volodymyr already pointed it out, but can I just confirm
>> you're referring to this branch:
>>
>>   svn://svn.twistedmatrix.com/svn/Twisted/branches/iocpreactor-1760-3/
>>     
>
> Yes.
>
>   
>> Can anyone comment on the status of these two branches?
>> 	
>> 	iocp-producer-1657/
>> 	iocp_syshandle-2021/
>>     
>
> I think these involve bugs in the current IOCP code.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>   




From tnelson at onresolve.com  Wed May 23 09:52:24 2007
From: tnelson at onresolve.com (Trent Nelson)
Date: Wed, 23 May 2007 15:52:24 +0200
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <465444CA.6030309@current.net>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<4650D472.5060009@gmail.com>	<1179703959.7838.5.camel@localhost.localdomain>	<AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg><1179757509.7838.25.camel@localhost.localdomain>
	<465444CA.6030309@current.net>
Message-ID: <AB1BB4CF81B9214682079EB55A7125ED01DDAFC2@mapibe05.exchange.xchg>


> There is an IOCP buildbot that illustrates the current state of the
IOCP
> reator against the twisted test suite.
>
> Just look at the win32-py2.5-iocp column on
> http://twistedmatrix.com/buildbot/
> 
> Happy coding,
> Mike

Great link, thanks.  Least I've got a starting point now (address test
failures) if I want to start digging around in the code }:>

	Trent.



From matt at zgroupplc.com  Wed May 23 09:55:14 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Wed, 23 May 2007 14:55:14 +0100
Subject: [Twisted-Python] Twisted & ZSI
In-Reply-To: <1179858153.15084.19.camel@localhost>
References: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
	<1179766188.10941.22.camel@localhost>
	<53F99A7A-89EE-462A-89FC-B499253941AB@zgroupplc.com>
	<1179858153.15084.19.camel@localhost>
Message-ID: <8FB9023B-8B77-4DCB-9377-EA40CE8716E0@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Thomas,

Thanks for your reply.

On 22 May 2007, at 19:22, Thomas Jacob wrote:

> Actually, I'm not using the built-in twisted dispatching system
> of ZSI myself, so you probably will have to read the source
> to find out these things :-)

Yes, I have been. With reference to deferreds, its not that  
illuminating :( From my investigations, I am beginning to suspect  
that whoever wrote the ZSI.twisted package overlooked the fact that  
someone might want to defer a server's response to a SOAP call. The  
callback handlers and chains may be disguising the use of deferreds  
though as ZSI.twisted.WSresource.WSResource.render_POST does return  
server.NOT_DONE_YET.

> Alternatively you might just want to try to ask that question again on
> pywebsvcs-talk at lists.sourceforge.net where the authors of ZSI post
> regularly, they are generally very helpful....

I'll do just that :)

> But it's also pretty easy to build your own ZSI/twisted dispatcher,
> that's
> what I am doing (executing the method calls in separate threads,  
> handing
> deferred execution back the twisted reactor when I need deferreds,
> waiting on a lock till the results come in) , I could mail you a rough
> example if you like...

Yes, that makes sense. I'd really like to use twistd as the service  
container rather than ZSI (I am just more familiar with twisted) if I  
can but I might come sheepishly knocking at your door should I fail ;)

Regards


Matt

>
> On Tue, 2007-05-22 at 14:36 +0100, Matthew Glubb wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> Hi All,
>>
>> Thanks again Thomas for pointing me in the right direction with
>> twisted and ZSI. I apologise if this is getting technically off-topic
>> (ie. ZSI) but people seem to get more annoyed about cross posting.
>> Berate me about that if it makes you feel better! If you still have
>> the patience, I have one major problem that is bugging me:
>>
>> At the moment, I have the following (test function) working fine
>> within twisted and twistd:
>>
>> def wsa_ProcessAip(self, ps, address, **kw):
>>      self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,
>> ps, address, **kw)
>>      self.response._mode = False
>>      self.response._return = '127.0.0.1'
>>      return self.request, self.response
>>
>> *However* I want to return a deferred from this method. I am not sure
>> that this is easily possible as ZSI doesn't seem to be recognising a
>> return value of either server.NOT_DONE_YET, or a deferred object. It
>> is also forcing me to return a tuple containing the ZSI request and
>> response objects which is confusing me as I want to return a
>> deferred. My ideal would be:
>>
>> def wsa_ProcessAip(self, ps, address, **kw):
>>      self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,
>> ps, address, **kw)
>>      # Don't worry about there being nothing to call back this
>>      # In my reality it does get called back
>>      deferred = defer.Deferred()
>>      deferred.addBoth(self.aipBack)
>>      return deferred
>>
>> def aipBack(self, result):
>>      ip, mode = result
>>      self.response._mode = mode
>>      self.response._return = ip
>>      return self.request, self.response
>>
>> Is this possible? Scanning the ZSI twisted package, the only mention
>> of a deferred object is in the client module. I am also puzzled with
>> the 'Delayed Call Sweep' debug line. To me, this indicates some kind
>> of deferred.
>>
>> Thanks a lot for your time :)
>>
>>
>> Matt
>>
>>
>> On 21 May 2007, at 17:49, Thomas Jacob wrote:
>>
>>> ZSI 2.0 has built-in twisted support...
>>>
>>> (see --twisted option for wsdl2py/dispatch)
>>>
>>> Client side usage:
>>>
>>> from MyService_services import *
>>>
>>> port = MyServiceLocator().getMyService("http://myhost/MyService")
>>> port.binding.defer = True
>>>
>>> msg = myMethodRequest()
>>> msg.value =...
>>> ...
>>> deferred = port.myMethod(msg)
>>> deferred.addCallback(....)
>>>
>>>
>>> Server side usage:
>>>
>>> Use twisted.web and derive a service class from WSResource:
>>>
>>> The following should get you started:
>>>
>>> http://proj.badc.rl.ac.uk/ndg/browser/TI12-security/trunk/python/
>>> ndg.security.server/ndg/security/server/SessionMgr/server-config.tac
>>>
>>>
>>> On Mon, 2007-05-21 at 15:43 +0100, Matthew Glubb wrote:
>>>> -----BEGIN PGP SIGNED MESSAGE-----
>>>> Hash: SHA1
>>>>
>>>> Hi All,
>>>>
>>>> Apologies if this has been covered before but there seems to be a
>>>> dearth of documentation and examples on the net.
>>>>
>>>> Does anyone have any tips for integrating ZSI with twisted? I am
>>>> struggling with the concept of the request / response objects  
>>>> and how
>>>> they relate to a twisted deferred object. Normally, under  
>>>> twisted, I
>>>> would return a deferred from the SOAP method call and let the  
>>>> reactor
>>>> take care of returning the response on callback/errback. How do  
>>>> I do
>>>> this using ZSI?
>>>>
>>>> If anyone has got some *simple* example code, I'd love to see it. I
>>>> am not particularly concerned with general inter-operability, I am
>>>> more concerned with getting a particular SOAP client working  
>>>> with my
>>>> application. SOAPpy doesn't seem to be cutting the mustard,  
>>>> hence the
>>>> need to try ZSI.
>>>>
>>>> Any tips *gratefully* received :)
>>>>
>>>> Matt
>>>>
>>>>
>>>> m a t t h e w   g l u b b
>>>>
>>>> ___________________________________________________________________ 
>>>> __
>>>> ___
>>>> Z Group PLC
>>>>
>>>> Tel: +44 (0) 8700 111 173
>>>> Fax: +44 (0) 8707 051 393
>>>> Txt: +44 (0) 7800 140 877
>>>> Web: <http://www.zgroupplc.com/>
>>>>
>>>> This  email  and  any  files  transmitted  with it are
>>>> confidential and
>>>> intended solely for the use of the individual or entity to whom
>>>> they are
>>>> addressed.  The opinions  expressed in this mail are those of the
>>>> author
>>>> and do not necessarily  represent the views of the company.  If
>>>> you have
>>>> received this email in error please notify <service at zgroupplc.com>
>>>>
>>>>
>>>>
>>>> -----BEGIN PGP SIGNATURE-----
>>>> Version: GnuPG v1.4.1 (Darwin)
>>>>
>>>> iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
>>>> QBvvjGEhKT2AtEfhckjliNs=
>>>> =AnFA
>>>> -----END PGP SIGNATURE-----
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>>
>> m a t t h e w   g l u b b
>>
>> _____________________________________________________________________ 
>> ___
>> Z Group PLC
>>
>> Tel: +44 (0) 8700 111 173
>> Fax: +44 (0) 8707 051 393
>> Txt: +44 (0) 7800 140 877
>> Web: <http://www.zgroupplc.com/>
>>
>> This  email  and  any  files  transmitted  with it are   
>> confidential and
>> intended solely for the use of the individual or entity to whom  
>> they are
>> addressed.  The opinions  expressed in this mail are those of the  
>> author
>> and do not necessarily  represent the views of the company.  If  
>> you have
>> received this email in error please notify <service at zgroupplc.com>
>>
>>
>>
>> -----BEGIN PGP SIGNATURE-----
>> Version: GnuPG v1.4.1 (Darwin)
>>
>> iD8DBQFGUvH4yI6MkdKPngkRAgKEAKCSaH+sOfF8M/DyqWCCz7Qy2YtYpQCgoZiH
>> zn42XMg+wNZvGsssTNr3tfg=
>> =WHLP
>> -----END PGP SIGNATURE-----
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGVEfCyI6MkdKPngkRAhOdAJ9E7Lo66q7Yr4lvyPaCvAlUt1GbgQCeNTDP
f3n+IuokHoymBVFlXwqJS2c=
=l/Xz
-----END PGP SIGNATURE-----



From clawsicus at gmail.com  Wed May 23 09:57:40 2007
From: clawsicus at gmail.com (Chris Laws)
Date: Wed, 23 May 2007 23:27:40 +0930
Subject: [Twisted-Python] Twisted, Tkinter and CORBA integration
Message-ID: <3ff1f41d0705230657m4fb3058ds99c4b9f1e4e1e648@mail.gmail.com>

Event loops everywhere?

I've inherited a small python utility that we use for system monitoring. It
uses CORBA to capture event traffic and report some status (using CORBA
EventService registration, status events) via a Tkinter GUI. The app is run
by the Tk "mainloop" and at frequent intervals calls the orb's
perform_work() method to process events. This approach of calling frequently
into the ORB seems to work OK and does not appear to hold up the GUI.

I need to update the app so that it can handle the event service
disappearing and re-appearing (i.e. Make it a bit more robust to handle the
remote end starting/stopping). We want this tool to run continuously while
the system we monitor is started and stopped. It needs to reconnect when the
system comes up and not crash when the system shuts down.

I would also like to take the opportunity to make the CORBA related code
somewhat more generic (not bound to the Tk mainloop) so I can use it for
other tools which will not have a GUI and hence no TK mainloop. The Twisted
framework seems ideal - I am familiar with Twisted, I think I could use it's
task.LoopingCall to perform the re-connections and the perform_work call,
the Tkinter mainloop can be integrated into the Twisted reactor etc. Many of
our apps are Twisted based so having a common code base is plus for future
maintenance too.

There is no point pursuing this approach if it is well known that the ORB
does not work within the reactor. So to possibly save me some prototyping
time, I was wondering if  anyone had (or heard of) any experience's of
running the ORB within the reactor? Specifically I'm using omniOrbPy and the
omniOrb ORB.

Regards,
Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070523/97a0c3e2/attachment.htm 

From michaelschneider at current.net  Wed May 23 10:50:06 2007
From: michaelschneider at current.net (Michael Schneider)
Date: Wed, 23 May 2007 10:50:06 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <AB1BB4CF81B9214682079EB55A7125ED01DDAFC2@mapibe05.exchange.xchg>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<4650D472.5060009@gmail.com>	<1179703959.7838.5.camel@localhost.localdomain>	<AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg><1179757509.7838.25.camel@localhost.localdomain>	<465444CA.6030309@current.net>
	<AB1BB4CF81B9214682079EB55A7125ED01DDAFC2@mapibe05.exchange.xchg>
Message-ID: <4654549E.2070303@current.net>

Trent,

You can kick off a buildbot run against any brach.  Feel free do trigger 
a run against the IOCP branch if you want check the status of the
latest IOCP fixes.

By default, buildbot runs against trunk

Happy Coding,
Mike

Trent Nelson wrote:
>> There is an IOCP buildbot that illustrates the current state of the
>>     
> IOCP
>   
>> reator against the twisted test suite.
>>
>> Just look at the win32-py2.5-iocp column on
>> http://twistedmatrix.com/buildbot/
>>
>> Happy coding,
>> Mike
>>     
>
> Great link, thanks.  Least I've got a starting point now (address test
> failures) if I want to start digging around in the code }:>
>
> 	Trent.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>   




From konrads.smelkovs at gmail.com  Wed May 23 14:24:11 2007
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Wed, 23 May 2007 21:24:11 +0300
Subject: [Twisted-Python] Looking for work / Coder for hire
Message-ID: <465486CB.1080102@gmail.com>

Hello,

I am looking for contract work (long-term relationship possible too). I 
do web2 thingy (JavaScript/Ajax), Twisted Python (obviously) ,PERL, PHP, 
Linux and just about anything related or plugged into the internet.

I have experience with High-Availability, Clusters, know e-mail 
solutions (built one) really well.

I am based in Riga, Latvia (that's an EU country), time zone UTC+2

My CV is at http://konrads.net42.org/



From ivan at llaisdy.com  Fri May 25 04:51:11 2007
From: ivan at llaisdy.com (Ivan Uemlianin)
Date: Fri, 25 May 2007 09:51:11 +0100
Subject: Divmod Sine Broken? [WAS Re: [Twisted-Python] Media Resource Control
	Protocol (MRCP)]
In-Reply-To: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
References: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
Message-ID: <4656A37F.1050700@llaisdy.com>

Jean-Paul Calderone wrote:
> The Divmod Sine SIP implementation has numerous bug fixes not present in
> twisted.protocols.sip.  Once #2444 is resolved, the protocol support in
> Twisted will be as good as the protocol support in Divmod Sine.  What 
> Sine
> will still offer above the code in Twisted is the higher level APIs which
> make call setup easy enough so that novel applications can focus on their
> novelty instead of on SIP details.
I have attempted and failed to install Divmod Sine.  I posted the 
message below to divmod-dev a few days ago but have yet to receive a 
reply (it's a quiet list).  I am re-posting the message here in good 
faith and in the belief that it is not entirely off-topic or plain stupid. 

I'd really like to start writing an MRCP server, and if it's good enough 
to contribute it to Twisted, so any help would be much appreciated.

Best wishes

Ivan


Dear All

I am installing the Divmod frameworks, with the intention of
experimenting with Sine and Shtoom.  I have installed everything except
Sine with no problems (using python setup.py install).

With Sine I get the following error:

 File "/usr/lib/python2.4/site-packages/xmantissa/plugins/sineoff.py",
line 3, in ?
   from xmantissa import website, offering, provisioning
exceptions.ImportError: cannot import name provisioning

I have tried this with both the stable (0.6.1) and svn versions of 
Mantissa.

I have grepped through all of Divmod's frameworks (inc. Shtoom) and not
found provisioning except in import statements.  The only class used
from provisioning is BenefactorFactory.

Please could someone let me know either:
- Where I can get a version of xmantissa with provisioning and
BenefactorFactory, or
- Whether and how I can comment out the offending lines from Sine.

Thanks

Best wishes

Ivan





From m.hubbard at imperial.ac.uk  Fri May 25 07:19:35 2007
From: m.hubbard at imperial.ac.uk (Matt Hubbard)
Date: Fri, 25 May 2007 12:19:35 +0100
Subject: [Twisted-Python] Need help pulling things together.
In-Reply-To: <e64b001e0705221232v70ce16d8x8c03970c4937dc56@mail.gmail.com>
References: <e64b001e0705221232v70ce16d8x8c03970c4937dc56@mail.gmail.com>
Message-ID: <4656C647.1060700@imperial.ac.uk>

Brendon Colby wrote:
> With all the different examples I'm having a hard time finding the
> "right" way to write my server using Twisted. I thought I was on to
> something reading through the IRC server protocol, but without a full
> server example I got lost. Do I set up a generic handleCommand() like
> interface and define each command in the protocol class (i.e.
> do_sendMessage) and have callbacks that my User class
> redefines/implements? Or am I on the right path?
> 
> I really appreciate any input on this!


Hi Brendon,

I'm having a hard time working out what you've got and where you're trying to go.

I think you're asking where you should you place the abstraction between data from lineReceived and executing specific commands based on that data. I shall respond with the caveat that I'm not qualified to speak for the "right twisted way", but I hope I can be of some assistance.

The first answer that springs to mind for most of your questions is "depends on what you're trying to achieve with your project".

Where to place an abstraction layer is something that I often end up hitting my head against, and generally I've found this to be time-wasting vacillation.

I'd honestly recommend you get on and code your management of users and of areas and worry about the abstraction layer later. Sitting around postulating doesn't get any code written and re-factoring small projects doesn't take that long.


If it were me and I was writing a telnet-based chat server, I would probably separate chat messages from commands and make this distinction in the protocol. I'd handle command interpretation in the User class.

class ChatProtocol......
    def lineReceived(self,line):
        if line[0] == '/':
            self.user.cmdReceived(line[1:])
        else:
            self.user.msgReceived(line)


I hope this helps. Please point out if I've entirely misinterpreted your question.

Cheers,
Matt.



From brendoncolby at gmail.com  Fri May 25 19:35:02 2007
From: brendoncolby at gmail.com (Brendon Colby)
Date: Fri, 25 May 2007 18:35:02 -0500
Subject: [Twisted-Python] Need help pulling things together.
In-Reply-To: <4656C647.1060700@imperial.ac.uk>
References: <e64b001e0705221232v70ce16d8x8c03970c4937dc56@mail.gmail.com>
	<4656C647.1060700@imperial.ac.uk>
Message-ID: <e64b001e0705251635t3283a15bhb177db49e975994@mail.gmail.com>

On 5/25/07, Matt Hubbard <m.hubbard at imperial.ac.uk> wrote:
> Hi Brendon,
>
> I'm having a hard time working out what you've got and where you're trying to go.
>
> I think you're asking where you should you place the abstraction between data from lineReceived and executing specific commands based on that data. I shall respond with the caveat that I'm not qualified to speak for the "right twisted way", but I hope I can be of some assistance.
>
> The first answer that springs to mind for most of your questions is "depends on what you're trying to achieve with your project".
>
> Where to place an abstraction layer is something that I often end up hitting my head against, and generally I've found this to be time-wasting vacillation.
>
> I'd honestly recommend you get on and code your management of users and of areas and worry about the abstraction layer later. Sitting around postulating doesn't get any code written and re-factoring small projects doesn't take that long.
>
>
> If it were me and I was writing a telnet-based chat server, I would probably separate chat messages from commands and make this distinction in the protocol. I'd handle command interpretation in the User class.
>
> class ChatProtocol......
>     def lineReceived(self,line):
>         if line[0] == '/':
>             self.user.cmdReceived(line[1:])
>         else:
>             self.user.msgReceived(line)
>
>
> I hope this helps. Please point out if I've entirely misinterpreted your question.
>
> Cheers,
> Matt.

Hi Matt,

You are exactly right. I've decided to just start coding and figure it
out. I've been vacillating for two years! :) Plus I've found a
protocol class that I can model (roughly). Thank you for your input!

Brendon



From maarten at treewalker.org  Sat May 26 10:22:15 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 May 2007 16:22:15 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
Message-ID: <200705261622.22995.maarten@treewalker.org>

Hi,

Sometimes I want to use several asynchronous calls in a fixed sequence. For 
example, a web application might:
- authenticate the user
- fetch info from a database
- present the result

Implementing this using Deferreds and separate callback+errback functions has 
the disadvantage that the sequence itself is not easy to recognise anymore, 
as it gets spread out over multiple functions.

So I got creative with the new generator features of Python 2.5 and came up 
with a decorator named "sequential", which can be applied to generator 
functions. It consumes Deferreds that are yielded by the generator and sends 
back the result when it becomes available, or raises an Exception in the 
generator if the deferred action fails.

The decorated function returns a Deferred itself, which is fired upon 
completion of the sequence. In particular, this allows nesting sequences 
inside sequences.

This is an example of a program using it, it is an elaborated version of the 
first example from the Deferred Reference:

===
from twisted.internet import defer, reactor
from twisted.python import log

from sequential import sequential

def getDummyData(x):
    d = defer.Deferred()
    if x < 0:
        reactor.callLater(1, d.errback, ValueError('negative value: %d' % x))
    else:
        reactor.callLater(1, d.callback, x * 3)
    return d

@sequential
def work():
    print (yield getDummyData(3))
    print (yield getDummyData(4))
    print (yield 'immediate')
    print (yield getDummyData(6))
    try:
        print (yield getDummyData(-7))
    except ValueError, e:
        print 'failed:', e

@sequential
def main(message):
    print message, 'once...'
    yield work()
    print message, 'twice...'
    yield work()

def done(result):
    reactor.stop()

def failed(fail):
    log.err(fail)
    reactor.stop()

d = main('going')
d.addCallback(done)
d.addErrback(failed)

reactor.run()
===

And here is the implementation of the "sequential" module:

===
from twisted.internet import defer
from twisted.python import failure

from functools import wraps
from compiler.consts import CO_GENERATOR

class _SequentialCaller(object):
    '''Repeatedly reads a Deferred from a generator and feeds it back the 
    result when it becomes available.
    '''

    def __init__(self, gen):
        self.gen = gen
        self.deferred = defer.Deferred()

    def start(self):
        self.next(None)
        return self.deferred

    def next(self, result):
        while True:
            try:
                if isinstance(result, failure.Failure):
                    traceback = result.getTracebackObject() \
                        if hasattr(result, 'getTracebackObject') else None
                    d = self.gen.throw(
                        result.type, result.getErrorMessage(), traceback
                        )
                else:
                    d = self.gen.send(result)
            except StopIteration:
                self.deferred.callback(None)
                return
            except StandardError:
                self.deferred.errback(failure.Failure())
                return
            if isinstance(d, defer.Deferred):
                d.addCallback(lambda result: self.next(result))
                d.addErrback(lambda fail: self.next(fail))
                return
            else:
                # Allow non-deferred values as well: for some Twisted calls,
                # you don't know whether the result will be deferred or not.
                result = d

def sequential(f):
    if not (f.func_code.co_flags & CO_GENERATOR):
        raise TypeError('function "%s" is not a generator' % f.__name__)
    @wraps(f)
    def wrapper(*args, **kvArgs):
        return _SequentialCaller(f(*args, **kvArgs)).start()
    return wrapper
===

I'd like some feedback on this:
- would you consider this useful?
- is the interface right or can it be improved?
- is the implementation correct? (the example scenario doesn't test the error 
path extensively, so there might be problems there)
- is the use of Failure.getTracebackObject correct? (the version of Twisted 
installed on my machine does not have it yet, I only read about it in the 
sources on the API documentation site)
- the "compiler.consts" module is not documented in the Python Library 
Reference, does that mean it should not be used or did they forget to 
document it?
- anything else you'd like to say about it

Is there already something like this in Twisted or one of the toolkits built 
on Twisted? I took a quick look at the "flow" modules, but that seems like a 
more generic and flexible, but also more complex, approach.

If it would be a useful addition to Twisted or a Twisted-based toolkit, I'm 
willing to improve the documentation and write test cases.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070526/55a902dd/attachment.pgp 

From general at eepatents.com  Sat May 26 11:18:28 2007
From: general at eepatents.com (Ed Suominen)
Date: Sat, 26 May 2007 08:18:28 -0700
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705261622.22995.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
Message-ID: <46584FC4.9050108@eepatents.com>

http://foss.eepatents.com/api/twisted-goodies/taskqueue.base.TaskQueue.html

Maarten ter Huurne wrote:
> Hi,
> 
> Sometimes I want to use several asynchronous calls in a fixed sequence. For 
> example, a web application might:
> - authenticate the user
> - fetch info from a database
> - present the result
> 
> Implementing this using Deferreds and separate callback+errback functions has 
> the disadvantage that the sequence itself is not easy to recognise anymore, 
> as it gets spread out over multiple functions.
> 
> So I got creative with the new generator features of Python 2.5 and came up 
> with a decorator named "sequential", which can be applied to generator 
> functions. It consumes Deferreds that are yielded by the generator and sends 
> back the result when it becomes available, or raises an Exception in the 
> generator if the deferred action fails.
> 
> The decorated function returns a Deferred itself, which is fired upon 
> completion of the sequence. In particular, this allows nesting sequences 
> inside sequences.
> 
> This is an example of a program using it, it is an elaborated version of the 
> first example from the Deferred Reference:
> 
> ===
> from twisted.internet import defer, reactor
> from twisted.python import log
> 
> from sequential import sequential
> 
> def getDummyData(x):
>     d = defer.Deferred()
>     if x < 0:
>         reactor.callLater(1, d.errback, ValueError('negative value: %d' % x))
>     else:
>         reactor.callLater(1, d.callback, x * 3)
>     return d
> 
> @sequential
> def work():
>     print (yield getDummyData(3))
>     print (yield getDummyData(4))
>     print (yield 'immediate')
>     print (yield getDummyData(6))
>     try:
>         print (yield getDummyData(-7))
>     except ValueError, e:
>         print 'failed:', e
> 
> @sequential
> def main(message):
>     print message, 'once...'
>     yield work()
>     print message, 'twice...'
>     yield work()
> 
> def done(result):
>     reactor.stop()
> 
> def failed(fail):
>     log.err(fail)
>     reactor.stop()
> 
> d = main('going')
> d.addCallback(done)
> d.addErrback(failed)
> 
> reactor.run()
> ===
> 
> And here is the implementation of the "sequential" module:
> 
> ===
> from twisted.internet import defer
> from twisted.python import failure
> 
> from functools import wraps
> from compiler.consts import CO_GENERATOR
> 
> class _SequentialCaller(object):
>     '''Repeatedly reads a Deferred from a generator and feeds it back the 
>     result when it becomes available.
>     '''
> 
>     def __init__(self, gen):
>         self.gen = gen
>         self.deferred = defer.Deferred()
> 
>     def start(self):
>         self.next(None)
>         return self.deferred
> 
>     def next(self, result):
>         while True:
>             try:
>                 if isinstance(result, failure.Failure):
>                     traceback = result.getTracebackObject() \
>                         if hasattr(result, 'getTracebackObject') else None
>                     d = self.gen.throw(
>                         result.type, result.getErrorMessage(), traceback
>                         )
>                 else:
>                     d = self.gen.send(result)
>             except StopIteration:
>                 self.deferred.callback(None)
>                 return
>             except StandardError:
>                 self.deferred.errback(failure.Failure())
>                 return
>             if isinstance(d, defer.Deferred):
>                 d.addCallback(lambda result: self.next(result))
>                 d.addErrback(lambda fail: self.next(fail))
>                 return
>             else:
>                 # Allow non-deferred values as well: for some Twisted calls,
>                 # you don't know whether the result will be deferred or not.
>                 result = d
> 
> def sequential(f):
>     if not (f.func_code.co_flags & CO_GENERATOR):
>         raise TypeError('function "%s" is not a generator' % f.__name__)
>     @wraps(f)
>     def wrapper(*args, **kvArgs):
>         return _SequentialCaller(f(*args, **kvArgs)).start()
>     return wrapper
> ===
> 
> I'd like some feedback on this:
> - would you consider this useful?
> - is the interface right or can it be improved?
> - is the implementation correct? (the example scenario doesn't test the error 
> path extensively, so there might be problems there)
> - is the use of Failure.getTracebackObject correct? (the version of Twisted 
> installed on my machine does not have it yet, I only read about it in the 
> sources on the API documentation site)
> - the "compiler.consts" module is not documented in the Python Library 
> Reference, does that mean it should not be used or did they forget to 
> document it?
> - anything else you'd like to say about it
> 
> Is there already something like this in Twisted or one of the toolkits built 
> on Twisted? I took a quick look at the "flow" modules, but that seems like a 
> more generic and flexible, but also more complex, approach.
> 
> If it would be a useful addition to Twisted or a Twisted-based toolkit, I'm 
> willing to improve the documentation and write test cases.
> 
> Bye,
> 		Maarten
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From maarten at treewalker.org  Sat May 26 12:45:21 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 May 2007 18:45:21 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <46584FC4.9050108@eepatents.com>
References: <200705261622.22995.maarten@treewalker.org>
	<46584FC4.9050108@eepatents.com>
Message-ID: <200705261845.27789.maarten@treewalker.org>

On Saturday 26 May 2007, Ed Suominen wrote:

> http://foss.eepatents.com/api/twisted-goodies/taskqueue.base.TaskQueue.html

That looks interesting, but I don't think it has the same purpose.

If I understand it correctly, TaskQueue dispatches synchronous calls to a pool 
of workers. The thing I posted runs a series of asynchronous calls in 
succession. In other words, TaskQueue handles callables, while "@sequential" 
handles Deferreds.

Also, TaskQueue seems to be designed for running a number of indepedent tasks, 
while "@sequential" is designed for situations in which call n+1 depends on 
the result of call n. The added value of "@sequential" is that you don't have 
to deal with Deferreds yourself, but can use the return value of the yield 
instead (or the exception thrown by it).

The original example did not demonstrate using the result of a previous call 
in the next call. Here is a new implementation of the "work" method which 
does:

===
@sequential
def work():
    value = 9
    try:
        while True:
            print value
            value = (yield getDummyData(value)) - 20
    except ValueError, e:
        print 'failed:', e
===

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070526/6fa149c5/attachment.pgp 

From gabor.bernath at gmail.com  Sat May 26 13:20:31 2007
From: gabor.bernath at gmail.com (=?ISO-8859-1?Q?G=E1bor_Bern=E1th?=)
Date: Sat, 26 May 2007 18:20:31 +0100
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705261845.27789.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
	<46584FC4.9050108@eepatents.com>
	<200705261845.27789.maarten@treewalker.org>
Message-ID: <ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>

inlineCallbacks are similar to what you are doing. very cool stuff.

http://twistedmatrix.com/pipermail/twisted-python/2007-February/014869.html
http://mesozoic.geecs.org/

cheers,
gabor


On 5/26/07, Maarten ter Huurne <maarten at treewalker.org> wrote:
> On Saturday 26 May 2007, Ed Suominen wrote:
>
> > http://foss.eepatents.com/api/twisted-goodies/taskqueue.base.TaskQueue.html
>
> That looks interesting, but I don't think it has the same purpose.
>
> If I understand it correctly, TaskQueue dispatches synchronous calls to a pool
> of workers. The thing I posted runs a series of asynchronous calls in
> succession. In other words, TaskQueue handles callables, while "@sequential"
> handles Deferreds.
>
> Also, TaskQueue seems to be designed for running a number of indepedent tasks,
> while "@sequential" is designed for situations in which call n+1 depends on
> the result of call n. The added value of "@sequential" is that you don't have
> to deal with Deferreds yourself, but can use the return value of the yield
> instead (or the exception thrown by it).
>
> The original example did not demonstrate using the result of a previous call
> in the next call. Here is a new implementation of the "work" method which
> does:
>
> ===
> @sequential
> def work():
>     value = 9
>     try:
>         while True:
>             print value
>             value = (yield getDummyData(value)) - 20
>     except ValueError, e:
>         print 'failed:', e
> ===
>
> Bye,
>                 Maarten
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>



From glyph at divmod.com  Sat May 26 13:42:11 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 26 May 2007 17:42:11 -0000
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
References: <200705261622.22995.maarten@treewalker.org>
	<46584FC4.9050108@eepatents.com>
	<200705261845.27789.maarten@treewalker.org>
	<ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
Message-ID: <20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>


On 05:20 pm, gabor.bernath at gmail.com wrote:
>inlineCallbacks are similar to what you are doing. very cool stuff.

Unless I misunderstand, inlineCallbacks isn't just similar, it's exactly 
the same :).  Is there any difference?

This highlights to me that we need someone to write about more of the 
hidden corners of Twisted; there are a lot of features included that are 
not well-known, and it's not clear that anyone would look for them (or 
if they did, where).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070526/d1ca0d5e/attachment.htm 

From maarten at treewalker.org  Sat May 26 13:48:07 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 May 2007 19:48:07 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
References: <200705261622.22995.maarten@treewalker.org>
	<200705261845.27789.maarten@treewalker.org>
	<ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
Message-ID: <200705261948.13056.maarten@treewalker.org>

On Saturday 26 May 2007, G?bor Bern?th wrote:

> inlineCallbacks are similar to what you are doing. very cool stuff.
>
> http://twistedmatrix.com/pipermail/twisted-python/2007-February/014869.html
> http://mesozoic.geecs.org/

So it already exists in Twisted 2.5. That's good, it means less code for me to 
maintain :) Thanks for the links.

By the way, I wonder why the API documentation doesn't use the decorator 
syntax. Since this won't work with anything older than Python 2.5 anyway, 
decorators are guaranteed to be available to anyone using this function.

http://twistedmatrix.com/documents/current/api/twisted.internet.defer.html#inlineCallbacks

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070526/92285c10/attachment.pgp 

From maarten at treewalker.org  Sat May 26 13:57:48 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 May 2007 19:57:48 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
References: <200705261622.22995.maarten@treewalker.org>
	<ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
	<20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
Message-ID: <200705261957.52901.maarten@treewalker.org>

On Saturday 26 May 2007, glyph at divmod.com wrote:
> On 05:20 pm, gabor.bernath at gmail.com wrote:
> >inlineCallbacks are similar to what you are doing. very cool stuff.
>
> Unless I misunderstand, inlineCallbacks isn't just similar, it's exactly
> the same :).  Is there any difference?

inlineCallbacks is better, because it allows you to pass a result to the 
callback of the "outer" Deferred using "returnValue". My implementation just 
passed None.

Other than that, it seems to be the same thing indeed.

> This highlights to me that we need someone to write about more of the
> hidden corners of Twisted; there are a lot of features included that are
> not well-known, and it's not clear that anyone would look for them (or
> if they did, where).

In this particular case, it may be useful to add a section to the Deferred 
Reference.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070526/47cea423/attachment.pgp 

From eprparadocs at gmail.com  Sat May 26 14:46:37 2007
From: eprparadocs at gmail.com (Chaz.)
Date: Sat, 26 May 2007 14:46:37 -0400
Subject: [Twisted-Python] Use of XML RPC, ssl and twisted.cred
Message-ID: <4658808D.4020400@gmail.com>

I have an issue I am having some trouble figuring out. I have been using 
SSL and XML-RPC/SOAP for a while without any problem. I now have to go 
past the "normal" usage.

Inside of my XML-RPC/SOAP handler I need to get access to the X509 
certificate of the client (I need to get access to some of the fields 
inside the certificate).

When I asked before I was told the correct way to solve the problem was 
to use avatars. Immediately I started looking into how to do it. 
Yesterday I seemed to come to the conclusion that I don't see how 
avatars (and realms) will help me.

It seems the SSL validation happens way before any sort of realm would 
be involved (since realms seem to be tied into "logging into" the 
system). All the examples I have found seem to be exactly this model. 
What I can't seem to find is first, how to tie realms into XML-RPC or 
SOAP. Secondly, how does the client's X509 certificate get into the 
avatar. And thirdly, I just don't see how the avatar is even past into 
the XML-RPC/SOAP handler.

I was wondering if one of the creators of Twisted could provide some 
detailed guidance? If so, I will be more than happy to write  it up and 
add it to the Twisted documentation for all to see and understand.

Thanks,
Chaz



From maarten at treewalker.org  Sat May 26 15:10:08 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 May 2007 21:10:08 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
References: <200705261622.22995.maarten@treewalker.org>
	<ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
	<20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
Message-ID: <200705262110.14557.maarten@treewalker.org>

Hi,

Reading through the implementation of inlineCallbacks, I found some more 
differences, but they are small.

In my implementation the decorator has a check whether the thing it is 
decorating is really a generator. Without this check, you will get an 
exception only when you start using the decorated function. I think it is 
usually better to detect errors at an early stage. However, the check uses 
compiler.consts.CO_GENERATOR, which is not documented in the Python Library 
Reference, so using it might be risky.

My implementation only catches StandardError being raised by the generator. 
That is a bad idea: it should certainly catch custom Exceptions as well. It 
should probably catch everything, like inlineCallbacks does, so the 
asynchronous equivalents of "finally" have a chance to clean things up on 
system exit.

inlineCallbacks has protection against a Deferred being returned which has 
already fired. My implementation treats that case the same as a Deferred that 
will be handled by the reactor and will therefore recurse.

The way the "throw" call is done is slightly different:

http://twistedmatrix.com/trac/browser/trunk/twisted/internet/defer.py#L724

    result = g.throw(result.type, result.value, result.tb)

My implementation:

    traceback = result.getTracebackObject() \
        if hasattr(result, 'getTracebackObject') else None
    d = self.gen.throw(result.type, result.getErrorMessage(), traceback)

The "value" part is different: result.getErrorMessage() returns the error 
message string, while result.value contains the exception object, 
however "throw" is designed to act like "raise" and will accept both uses.

Also the "traceback" part is different: if the "tb" field is None, 
getTracebackObject will construct a traceback object if possible. I don't 
know if that extra feature will ever be useful in this particular use case.

To summarize:
InlineCallbacks seems to be better than my implementation, except perhaps:
- it might be useful to add a check whether the function to be decorated is 
really a generator
- result.getTracebackObject() may or may not be better than result.tb

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070526/5c242b0f/attachment.pgp 

From ben at artins.org  Sat May 26 17:53:57 2007
From: ben at artins.org (Ben Artin)
Date: Sat, 26 May 2007 17:53:57 -0400
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705262110.14557.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
	<ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
	<20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
	<200705262110.14557.maarten@treewalker.org>
Message-ID: <5CFFF475-7F72-49CA-B049-5958BD91F232@artins.org>

> In my implementation the decorator has a check whether the thing it is
> decorating is really a generator. Without this check, you will get an
> exception only when you start using the decorated function. I think  
> it is
> usually better to detect errors at an early stage. However, the  
> check uses
> compiler.consts.CO_GENERATOR, which is not documented in the Python  
> Library
> Reference, so using it might be risky.

If the argument to the decorator is not a generator (i.e., it's a  
regular function), then you should just treat is as a generator that  
immediately returned. For example,

@sequential
def foo():
	yield retval

should just behave the same as

@sequential
def foo():
	return retval

I can't think of any case where passing a non-generator into  
@sequential is intended to mean anything other than this.

--

<http://artins.org/ben>

"And when I have understanding of computers, I shall be
         the supreme being!" -- Evil, "Time Bandits"





From maarten at treewalker.org  Sat May 26 22:48:51 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 27 May 2007 04:48:51 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <5CFFF475-7F72-49CA-B049-5958BD91F232@artins.org>
References: <200705261622.22995.maarten@treewalker.org>
	<200705262110.14557.maarten@treewalker.org>
	<5CFFF475-7F72-49CA-B049-5958BD91F232@artins.org>
Message-ID: <200705270448.58306.maarten@treewalker.org>

On Saturday 26 May 2007, Ben Artin wrote:

> > In my implementation the decorator has a check whether the thing it is
> > decorating is really a generator. Without this check, you will get an
> > exception only when you start using the decorated function. I think
> > it is
> > usually better to detect errors at an early stage. However, the
> > check uses
> > compiler.consts.CO_GENERATOR, which is not documented in the Python
> > Library
> > Reference, so using it might be risky.
>
> If the argument to the decorator is not a generator (i.e., it's a
> regular function), then you should just treat is as a generator that
> immediately returned.

Since it is used as a decorator, the @sequential line will be written by the 
same person who wrote the function itself. If the author of the function 
knows it is not a generator, why would he apply @sequential (or 
@inlineCallbacks) to it?

> For example, 
>
> @sequential
> def foo():
> 	yield retval
>
> should just behave the same as
>
> @sequential
> def foo():
> 	return retval

That behaviour would be: return a Deferred on which:
- callback is called immediately if retval is not a Deferred
- errback is called immediately if the function raises an exception
- callback or errback is called when the retval Deferred fires
And the result passed to the callback would be None, not retval.

Applying maybeDeferred to the return value sounds more useful, since that will 
do the Deferred part, but will also preserve the result.

By the way, without "@sequential" the closest non-generator equivalent of

def foo():
	yield retval

would be

def foo():
	return (retval, )

In other words, it would return a sequence containing retval rather than 
retval itself.

> I can't think of any case where passing a non-generator into
> @sequential is intended to mean anything other than this.

But should it be given any interpretation at all? Unless there is a real use 
case for it, I think it's better to consider it an error.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070527/16a6b6d7/attachment.pgp 

From ben at artins.org  Sat May 26 23:45:14 2007
From: ben at artins.org (Ben Artin)
Date: Sat, 26 May 2007 23:45:14 -0400
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705270448.58306.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
	<200705262110.14557.maarten@treewalker.org>
	<5CFFF475-7F72-49CA-B049-5958BD91F232@artins.org>
	<200705270448.58306.maarten@treewalker.org>
Message-ID: <6C6D8683-E148-41D2-BE54-AC6A31C0F117@artins.org>

> Since it is used as a decorator, the @sequential line will be  
> written by the
> same person who wrote the function itself. If the author of the  
> function
> knows it is not a generator, why would he apply @sequential (or
> @inlineCallbacks) to it?

One reason is that if the function returns None, then if you require  
it to be a generator, you have to add a gratuitous "yield None" just  
to shut up the piece of code that requires a generator. For example:

@sequential
def foo():
	blah = blah

would cause the error, but

@sequential
def foo():
	blah = blah
	yield None

would not. In my opinion, that "yield None" is just noise, and  
doesn't make the code any better, faster, safer, or easier to read,  
so given the option I would make @sequential cope even when yield  
None is not there.


The other main case where I've run into this is when you have a  
protocol that expects some method to behave according to @sequential,  
but a particular implementation of that protocol doesn't need to do  
more than immediately return. For example:

class TakesALongTime():
	@sequential
	def doSomething(self):
		yield doPart1()
		yield doPart2()
		yield someResult


class ReturnsImmediately():
	@sequential
	def doSomething(self):
		return someResult


Now, if you use "return" in the first class, you get a syntax error  
right away, because a non-empty return in a generator is a syntax  
error. On the other hand, if you use "return" in the second class,  
you don't get a syntax error, but your implementation of @sequential  
would produce a runtime error. I understand why it's easy to produce  
that runtime error, but I don't see any benefit to it -- it doesn't  
really save the users of @sequential any effort.

> But should it be given any interpretation at all? Unless there is a  
> real use
> case for it, I think it's better to consider it an error.

I would agree with you if I thought there was any possibility that  
interpreting a plain function as a generator with a single yield  
could yield unintended results, but I have yet to find such a case.

Ben

--

<http://artins.org/ben>

"The last great thing written in C was Franz Schubert's Symphony  
number 9."





From exarkun at twistedmatrix.com  Sun May 27 00:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 May 2007 04:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1180238702.38.2098562584@twistedmatrix.com

Bug summary
______________________
Summary for 2007-05-20 through 2007-05-27
Bugs opened: 16    Bugs closed: 14  Total open bugs: 960 (+2)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +6  |Highest:  -3          |Conch:  +2             
|Enhancement:  -1  |High:     +1          |Core:   +1             
|Task:         -1  |Normal:   +5          |Trial:  +1             
                   |Low:      +1          |Vfs:    +0             
                                          |Web:    +0             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2670] amp tests fail on sixth run (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2670

[#2654] twisted.internet.abstract.isIPAddress rejects valid IPv4 strings (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2654

[#2604] SFTP VFS adapter mishandles renaming directories (opened by jml) (CLOSED, fixed)
    defect          vfs        http://twistedmatrix.com/trac/ticket/2604

                    ===== High =====
[#2678] twisted.conch.ssh.transport has poor tests. (opened by z3p)
    defect          conch      http://twistedmatrix.com/trac/ticket/2678

[#2679] twisted.conch.ssh.keys has poor tests. (opened by z3p)
    defect          conch      http://twistedmatrix.com/trac/ticket/2679

                    ===== Normal =====
[#2667] twisted.protocols.amp.Command should have methods for argument serialization and parsing (opened by radix) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2667

[#2668] It is impossible to create container Arguments without using private functions (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2668

[#2669] Avoid looping to find the next time that divides by interval (opened by Peaker)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2669

[#2671] twisted.protocols.amp should allow responding to a Command before returning from a responder (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2671

[#2672] `twisted.internet.task.coiterate`'s docstring doesn't explain how to use the function (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/2672

[#2673] test_synchronization fails sometimes (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2673

[#2674] t.i.defer.inlineCallbacks documentation issues (opened by indigo)
    defect          core       http://twistedmatrix.com/trac/ticket/2674

[#2675] Test timeout policy should be decided by runner (opened by jml)
    defect          trial      http://twistedmatrix.com/trac/ticket/2675

[#2676] connectionLost not invoked (opened by jrydberg)
    defect          conch      http://twistedmatrix.com/trac/ticket/2676

[#2677] twisted/web/proxy.py doesn't use IRequest.finish (opened by exarkun)
    defect          web        http://twistedmatrix.com/trac/ticket/2677

                    ===== Low =====
[#2666] twisted-dev.el should provide a custom variable to specify its tbformat (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2666



Closed Bugs
______________________
                    ===== Highest =====
[#2663] t.conch.manhole does not exit continuation prompt after ctrl-c (opened by PenguinOfDoom, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2663

[#2654] twisted.internet.abstract.isIPAddress rejects valid IPv4 strings (opened by exarkun, closed by exarkun, )
    defect          core       http://twistedmatrix.com/trac/ticket/2654

[#2640] fix epytext problems in SVN HEAD (opened by mwh, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2640

[#2604] SFTP VFS adapter mishandles renaming directories (opened by jml, closed by jml, fixed)
    defect          vfs        http://twistedmatrix.com/trac/ticket/2604

[#2604] SFTP VFS adapter mishandles renaming directories (opened by jml, closed by jml, fixed)
    defect          vfs        http://twistedmatrix.com/trac/ticket/2604

[#1134] Finite object leak in threadpool (opened by jeffsilver, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1134

[#2657] twisted.protocols.amp.Command should have an response parsing method parallel to makeResponse (opened by exarkun, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2657

[#2670] amp tests fail on sixth run (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2670

                    ===== High =====
[#2554] strange connect timeouts (opened by gudron, closed by therve, invalid)
    task            web        http://twistedmatrix.com/trac/ticket/2554

                    ===== Normal =====
[#2272] epytext errors in svn trunk, set up pydoctor buildbot (opened by mwh, closed by exarkun, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2272

[#2662] ITransport shouldn't include getPeer/getHost (opened by Peaker, closed by therve, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2662

[#2667] twisted.protocols.amp.Command should have methods for argument serialization and parsing (opened by radix, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2667

[#2664] twisted.protocols.amp._objectsToStrings doesn't document its `strings' parameter (opened by exarkun, closed by radix, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2664

[#2656] twisted.protocols.amp.Command.makeResponse docstring inaccurate (opened by exarkun, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2656





From maarten at treewalker.org  Sun May 27 02:20:30 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 27 May 2007 08:20:30 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <6C6D8683-E148-41D2-BE54-AC6A31C0F117@artins.org>
References: <200705261622.22995.maarten@treewalker.org>
	<200705270448.58306.maarten@treewalker.org>
	<6C6D8683-E148-41D2-BE54-AC6A31C0F117@artins.org>
Message-ID: <200705270820.41462.maarten@treewalker.org>

On Sunday 27 May 2007, Ben Artin wrote:
> > Since it is used as a decorator, the @sequential line will be
> > written by the
> > same person who wrote the function itself. If the author of the
> > function
> > knows it is not a generator, why would he apply @sequential (or
> > @inlineCallbacks) to it?
>
> One reason is that if the function returns None, then if you require
> it to be a generator, you have to add a gratuitous "yield None" just
> to shut up the piece of code that requires a generator.

Maybe it's more clear to call it @inlineCallbacks, since that is the name 
under which it is available; @sequential was just me re-inventing it.

I agree that adding "yield None" is an ugly fix, but why not just remove the 
@inlineCallbacks decoration from such a function instead? I still don't 
understand what the point is of decorating a non-generator function with 
@inlineCallbacks. 

> The other main case where I've run into this is when you have a
> protocol that expects some method to behave according to @sequential,
> but a particular implementation of that protocol doesn't need to do
> more than immediately return.

The external protocol of @inlineCallbacks is just Deferred. There are a lot of 
ways to convert something to a Deferred already, such as maybeDeferred, 
execute, succeed, fail (all in the "defer" module). Using @inlineCallbacks 
for that purpose seems a bit overcomplicated.

There is never a requirement for a function to be decorated with 
@inlineCallbacks, all the outside world sees is a Deferred. @inlineCallbacks 
is just an implementation technique to avoid having to split sequential 
asynchronous code over multiple functions.

> For example: 
>
> class TakesALongTime():
> 	@sequential
> 	def doSomething(self):
> 		yield doPart1()
> 		yield doPart2()
> 		yield someResult

This doesn't do what you might expect...

Let's assume doPart1 and doPart2 return Deferreds, named d1 and d2. When 
doSomething is called, inlineCallbacks will run doPart1, register itself on 
d1 and return its own Deferred (dr) to the caller of doSomething. When the 
reactor does the callback on d1, doPart2 will be called and inlineCallbacks 
will register itself on d2. Finally, when the callback of d2 is called, 
someResult will be discarded by inlineCallbacks and the callback of dr will 
be called with result None.

To do what you probably intended, the code would look like this:

class TakesALongTime():
	@defer.inlineCallbacks
	def doSomething(self):
		yield doPart1()
		yield doPart2()
		defer.returnValue(someResult)

Also note that neither of these examples blocks. Instead, the decorated method 
will typically return a Deferred (dr) very soon. However, it could take a 
long time before dr's callback (or errback) is called. During that time, the 
caller of doSomething will probably register itself on dr and end, to pass 
control to the reactor.

> Now, if you use "return" in the first class, you get a syntax error
> right away, because a non-empty return in a generator is a syntax
> error. On the other hand, if you use "return" in the second class,
> you don't get a syntax error, but your implementation of @sequential
> would produce a runtime error. I understand why it's easy to produce
> that runtime error, but I don't see any benefit to it -- it doesn't
> really save the users of @sequential any effort.

Well, if you consider using @inlineCallbacks on a non-generator an error, 
checking for this error as early as possible does save the user effort: you 
will see the error as soon as your module is imported, instead of having to 
trigger the function in question.

If you consider using @inlineCallbacks on a non-generator a valid scenario, 
there should not be a runtime error issued, neither at "decoration time" nor 
at "invocation time".

Note that the current implementation of @inlineCallbacks will raise an error 
at "invocation time", specifically when "g.send" or "g.throw" is called. I'm 
proposing to change that so an error will be raised by the decorator instead 
("decoration time", typically when the module is imported).

> > But should it be given any interpretation at all? Unless there is a
> > real use
> > case for it, I think it's better to consider it an error.
>
> I would agree with you if I thought there was any possibility that
> interpreting a plain function as a generator with a single yield
> could yield unintended results, but I have yet to find such a case.

Should something be given an interpretation because there are no unintended 
results, or because there are intended results?

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070527/ef81bdaf/attachment.pgp 

From ben at artins.org  Sun May 27 04:35:24 2007
From: ben at artins.org (Ben Artin)
Date: Sun, 27 May 2007 04:35:24 -0400
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705270820.41462.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
	<200705270448.58306.maarten@treewalker.org>
	<6C6D8683-E148-41D2-BE54-AC6A31C0F117@artins.org>
	<200705270820.41462.maarten@treewalker.org>
Message-ID: <F26AC322-58A8-4D5A-9106-92F721214E35@artins.org>

> Maybe it's more clear to call it @inlineCallbacks, since that is  
> the name
> under which it is available; @sequential was just me re-inventing it.

That's OK. I reinvented it and called it something else myself :-)

> I agree that adding "yield None" is an ugly fix, but why not just  
> remove the
> @inlineCallbacks decoration from such a function instead? I still  
> don't
> understand what the point is of decorating a non-generator function  
> with
> @inlineCallbacks.

There is no theoretical reason. Of course I can and remove the  
decorator, but that is not how my brain works when write the code,  
and I suspect I am not alone in this. This is how I usually write my  
code:

.oO(I am writing a function)
.oO(The function's interface is that it returns a deferred, so write  
@inlineCallbacks)

@inlineCallbacks
def functionName(args):

.oO(Now, what's the body going to be like?)
type type type type
twenty lines later:
.oO(Done!)

then I run the code, and find out that I have to either add a yield  
None or remove the decorator because as it happens, there's no yield  
or return in those twenty lines of code.

Now, the reason that my brain works this way is that I consider the  
fact that the function returns a deferred a part of its interface,  
and if I am using Python 2.5 (which I almost exclusively am), then  
@inlineCallbacks is by far the cleanest way to write Deferred-using  
code. It turns my control flow right-side out and it allows me to  
stop focusing on how I pass control around using deferreds and start  
focusing on the problem I am trying to solve.

To that end, requiring me to either add noise to my function's  
implementation (in the form of "yield None") or to tweak the  
function's header because of a happenstance of its implementation is  
just distracting me away from writing my code and pulling my  
attention to something irrelevant.

Again, my argument is that the distinction between:

@inlineCallbacks
def functionName(args):
	...some code...
	yield None

and

@inlineCallbacks
def functionName(args):
	...some code...
	... without a return statement...

is completely irrelevant and serves no purpose except to distract me  
from my code. If I could find *any* case in which treating the latter  
case exactly the same as the former case is not what was intended,  
then I might be willing to concede that there is value in forcing the  
user to clarify what they meant; however I do not see that case.

>> For example:
>>
>> class TakesALongTime():
>> 	@sequential
>> 	def doSomething(self):
>> 		yield doPart1()
>> 		yield doPart2()
>> 		yield someResult
>
> This doesn't do what you might expect...
>
> Let's assume doPart1 and doPart2 return Deferreds, named d1 and d2.  
> When
> doSomething is called, inlineCallbacks will run doPart1, register  
> itself on
> d1 and return its own Deferred (dr) to the caller of doSomething.  
> When the
> reactor does the callback on d1, doPart2 will be called and  
> inlineCallbacks
> will register itself on d2. Finally, when the callback of d2 is  
> called,
> someResult will be discarded by inlineCallbacks and the callback of  
> dr will
> be called with result None.
>
> To do what you probably intended, the code would look like this:
>
> class TakesALongTime():
> 	@defer.inlineCallbacks
> 	def doSomething(self):
> 		yield doPart1()
> 		yield doPart2()
> 		defer.returnValue(someResult)

Actually this in itself is IMO a bug in inlineCallbacks. The only  
reason why inlineCallbacks is implemented this way is that prior to  
Python 2.5 it was impossible to implement coroutines in terms of just  
the yield statement, and therefore some extra magic was needed to  
achieve the desired effect. If you read the coroutines PEP (<http:// 
www.python.org/dev/peps/pep-0342/>), you'll see that the syntax I  
used above is the syntax suggested by the PEP (and, not accidentally,  
also the syntax used by my own version of @inlineCallbacks)

> Note that the current implementation of @inlineCallbacks will raise  
> an error
> at "invocation time", specifically when "g.send" or "g.throw" is  
> called. I'm
> proposing to change that so an error will be raised by the  
> decorator instead
> ("decoration time", typically when the module is imported).

I understand. I am proposing that it's not an error, because there is  
no case in which it's ambiguous what the intent was.

Another argument I can make in favor of this idea is that:

@inlineCallbacks
def doSomething():
	raise SomeException()

works the way you'd think it would upon reading the code and therefore

@inlineCallbacks
def doSomething():
	return someValue

should also work the way you'd think it would upon reading the code.

> Should something be given an interpretation because there are no  
> unintended
> results, or because there are intended results?

I believe that anyone who writes code that returns a plain value out  
of a function decorated with @inlineCallbacks has a clear intent, and  
they merely did not fuss over the syntax of @inlineCallback. I  
further believe that is in no way beneficial to force people to fuss  
over that syntax, and in no way detrimental to allow them to just  
return a plain value (because there is no ambiguity). Therefore, it  
should be done.

Ben

--

<http://artins.org/ben>

"Computers! All they ever think of is hex!"





From ben at artins.org  Sun May 27 04:44:22 2007
From: ben at artins.org (Ben Artin)
Date: Sun, 27 May 2007 04:44:22 -0400
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705270820.41462.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
	<200705270448.58306.maarten@treewalker.org>
	<6C6D8683-E148-41D2-BE54-AC6A31C0F117@artins.org>
	<200705270820.41462.maarten@treewalker.org>
Message-ID: <C305AC6D-231F-46D8-B77F-0960E58273F7@artins.org>

Just a quick followup with something that I think I didn't state  
clearly in my previous email:

My mental model is that:
  - What I am writing are cooperative scheduled coroutines using  
Python yield statements
  - Deferreds are an implementation detail of those coroutines, and  
completely invisible to me

Because of this, saying "@inlineCallbacks", or "@sequential", or, as  
I called it, simply "@async" in front of a function is what matters  
when I am writing the code. I do not think about Deferreds when I am  
writing code. Your argument that @inlineCallbacks should error if  
given a "plain" function is a valid one from a "but you could just  
write your code differently" perspective, but the result is that my  
code no longer matches my mental model, because now I suddenly have  
to care about an implementation detail of @inlineCallbacks (namely,  
that the function it wraps has to yield even if it's merely to yield  
a None at the end).

Ben

--

<http://artins.org/ben>

"Love is an epic-level challenge." -- Durkon





From bhenry at pacecocorp.com  Tue May 29 12:09:45 2007
From: bhenry at pacecocorp.com (Benjamin Henry)
Date: Tue, 29 May 2007 12:09:45 -0400
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
Message-ID: <F8D3784FE4E93C4AA66BE8C551EBB5D17D3D31@ntxbeus12.exchange.xchg>

________________________________

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of
glyph at divmod.com
Sent: Saturday, May 26, 2007 10:42 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Sequential use of asynchronous calls

 


On 05:20 pm, gabor.bernath at gmail.com wrote:
>inlineCallbacks are similar to what you are doing. very cool stuff.

Unless I misunderstand, inlineCallbacks isn't just similar, it's exactly
the same :).  Is there any difference?

This highlights to me that we need someone to write about more of the
hidden corners of Twisted; there are a lot of features included that are
not well-known, and it's not clear that anyone would look for them (or
if they did, where). 

This is a great idea.  inlineCallbacks would have saved me a week of
figuring out which functions to start a new callback chain should be in
my project.  I had to figure this all out after I realized that adbapi
existed.  I think there is a need for documentation in the deferred
section regarding inlineCallbacks, and documentation related to
protocols (more) and modules that exist for common operations (i.e.
adbapi).  Just my 2 cents from trying to learn twisted in my freetime
over the last 8 months or so.

 

-Ben

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070529/e2a8468e/attachment.htm 

From LAdams at doubleclick.com  Tue May 29 16:47:10 2007
From: LAdams at doubleclick.com (Adams, Larry)
Date: Tue, 29 May 2007 14:47:10 -0600
Subject: [Twisted-Python] Modifying a web proxy to use SSL
Message-ID: <5DA9F92FACA0914D951AE5EB57F9236E02B9BB9E@THN-EXCLS1.dc1.doubleclick.corp>

I'm trying to use twisted to proxy all web requests for a set of PCs
(virtual machines actually). I've created my own ProxyRequest class to
override the process() method so that it will use SSL if the URL is
secure. It makes the connection and retrieves the data successfully, but
the browser still doesn't display the HTML. I must be missing some other
class/method that I have to override, but I'm at a loss as to which one
at the moment.

Below is some logging from my application for the same page called via
http and https respectively. Any help or pointers to working examples
would be greatly appreciated!

Thanks,
Larry Adams 
2007/05/29 15:10 -0500 [SerpicoProxy,11,172.18.36.22] Starting factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8cec>

2007/05/29 15:10 -0500 [Uninitialized] building protocol for addr:
IPv4Address(TCP, 'www.connectcommerce.com
<file://www.connectcommerce.com> ', 80)
2007/05/29 15:10 -0500 [Uninitialized] initializing connection
2007/05/29 15:10 -0500 [Uninitialized] MACHINE NAME IS surfsidekick
2007/05/29 15:10 -0500 [Uninitialized] PROXYREQUEST
http://www.connectcommerce.com/ <http://www.connectcommerce.com/> 
2007/05/29 15:10 -0500 [Uninitialized] TRANSPORT <<class
'twisted.internet.tcp.Client'> to ('www.connectcommerce.com
<file://www.connectcommerce.com> ', 80) at b71d8ccc>

2007/05/29 15:10 -0500 [Uninitialized] ISSECURE False
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Date : Tue, 29 May
2007 20:11:27 GMT added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Server :
Apache/1.3.33 (Unix) (Gentoo/Linux) added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Location :
http://www.connectcommerce.com/global/login.html
<http://www.connectcommerce.com/global/login.html>  added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Connection : close
added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Content-Type :
text/html; charset=iso-8859-1 added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] trying to lose
connection for transport: <<class 'twisted.internet.tcp.Client'> to
('www.connectcommerce.com <file://www.connectcommerce.com> ', 80) at
b71d8ccc>

2007/05/29 15:10 -0500 [SerpicoProxyClient,client] parent transport :
<SerpicoProxy #11 on 74007>
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Stopping factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8cec>

2007/05/29 15:11 -0500 [SerpicoProxy,18,172.18.36.22] Starting factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8d0c>

2007/05/29 15:11 -0500 [Uninitialized] building protocol for addr:
IPv4Address(TCP, 'www.connectcommerce.com
<file://www.connectcommerce.com> ', 443)
2007/05/29 15:11 -0500 [Uninitialized] initializing connection
2007/05/29 15:11 -0500 [Uninitialized] MACHINE NAME IS surfsidekick
2007/05/29 15:11 -0500 [Uninitialized] PROXYREQUEST
https://www.connectcommerce.com <https://www.connectcommerce.com> 
2007/05/29 15:11 -0500 [Uninitialized] TRANSPORT <<class
'twisted.internet.tcp.TLSConnection'> to ('www.connectcommerce.com
<file://www.connectcommerce.com> ', 443) at b71bd86c>

2007/05/29 15:11 -0500 [Uninitialized] ISSECURE True
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Date : Tue, 29 May
2007 20:12:00 GMT added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Server :
Apache/1.3.33 (Unix) (Gentoo/Linux) added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Location :
http://www.connectcommerce.com/global/login.html
<http://www.connectcommerce.com/global/login.html>  added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Connection : close
added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Content-Type :
text/html; charset=iso-8859-1 added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] trying to lose
connection for transport: <<class 'twisted.internet.tcp.TLSConnection'>
to ('www.connectcommerce.com <file://www.connectcommerce.com> ', 443) at
b71bd86c>

2007/05/29 15:11 -0500 [SerpicoProxyClient,client] parent transport :
<SerpicoProxy #18 on 74007>
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Stopping factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8d0c>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070529/ba240d33/attachment.htm 

From elicriffield at gmail.com  Tue May 29 18:24:17 2007
From: elicriffield at gmail.com (Eli Criffield)
Date: Tue, 29 May 2007 17:24:17 -0500
Subject: [Twisted-Python] better way to do this?
Message-ID: <18e3f33d0705291524q6c418d28ga04f82f5cb3e3814@mail.gmail.com>

What i want to do is validate the "From" host of an xmlrpc server
against a list of allowed servers.

Sounds easy enough but "connectionMade(self)" Call is way back in
http.HTTPChannel. That is set as the protocol in http.HTTPFactory and
HTTPFactory is inherits by server.Site.

So whats the best way to change one little function in http.HTTPChannel ?

Here is what i have now, but the I have to include all of server.Site
in my example, even though its unchanged except it inherits
myHTTPFactory instead of http.HTTPFactory.

Is there a simpler way to do this?

Eli Criffield

--example---
#!/usr/bin/env python

from twisted.web import xmlrpc, server, http, resource
from twisted.internet import reactor
from twisted.python.log import startLogging
from sys import stdout
import copy

class Example(xmlrpc.XMLRPC):
    """An example object to be published."""

    def xmlrpc_echo(self, x):
        """Return all passed args."""
        print "echo called"
        return x

    def xmlrpc_add(self, a, b):
        """Return sum of arguments."""
        print "add called"
        return a + b

class myHTTPChannel(http.HTTPChannel):
    def connectionMade(self):
        print "Check here if connection is allowed from",
self.transport.getPeer()
        self.setTimeout(self.timeOut)

class myHTTPFactory(http.HTTPFactory):
    protocol = myHTTPChannel


class mySite(myHTTPFactory):

    counter = 0
    requestFactory = server.Request
    displayTracebacks = True

    def __init__(self, resource, logPath=None, timeout=60*60*12):
        """Initialize.
        """
        http.HTTPFactory.__init__(self, logPath=logPath, timeout=timeout)
        self.sessions = {}
        self.resource = resource

    def _openLogFile(self, path):
        from twisted.python import logfile
        return logfile.LogFile(os.path.basename(path), os.path.dirname(path))

    def __getstate__(self):
        d = self.__dict__.copy()
        d['sessions'] = {}
        return d

    def _mkuid(self):
        """(internal) Generate an opaque, unique ID for a user's session.
        """
        import md5, random
        self.counter = self.counter + 1
        return md5.new("%s_%s" % (str(random.random()) ,
str(self.counter))).hexdigest()

    def makeSession(self):
        """Generate a new Session instance, and store it for future reference.
        """
        uid = self._mkuid()
        session = self.sessions[uid] = Session(self, uid)
        session.checkExpiredLoop.start(1800)
        return session

    def getSession(self, uid):
        """Get a previously generated session, by its unique ID.
        This raises a KeyError if the session is not found.
        """
        return self.sessions[uid]

    def buildProtocol(self, addr):
        """Generate a channel attached to this site.
        """
        channel = http.HTTPFactory.buildProtocol(self, addr)
        channel.requestFactory = self.requestFactory
        channel.site = self
        return channel

    isLeaf = 0

    def render(self, request):
        """Redirect because a Site is always a directory.
        """
        request.redirect(request.prePathURL() + '/')
        request.finish()

    def getChildWithDefault(self, pathEl, request):
        """Emulate a resource's getChild method.
        """
        request.site = self
        return self.resource.getChildWithDefault(pathEl, request)

    def getResourceFor(self, request):
        """Get a resource for a request.

        This iterates through the resource heirarchy, calling
        getChildWithDefault on each resource it finds for a path element,
        stopping when it hits an element where isLeaf is true.
        """
        request.site = self
        # Sitepath is used to determine cookie names between distributed
        # servers and disconnected sites.
        request.sitepath = copy.copy(request.prepath)
        return resource.getChildForRequest(self.resource, request)



if __name__ == '__main__':
    r = Example()

    reactor.listenTCP(7080,mySite(r),ctx)
    startLogging(stdout)
    reactor.run()



From gah at research.att.com  Tue May 29 19:24:09 2007
From: gah at research.att.com (Glenn Hochberg)
Date: Tue, 29 May 2007 19:24:09 -0400
Subject: [Twisted-Python] better way to do this?
In-Reply-To: <18e3f33d0705291524q6c418d28ga04f82f5cb3e3814@mail.gmail.com>
References: <18e3f33d0705291524q6c418d28ga04f82f5cb3e3814@mail.gmail.com>
Message-ID: <847F668D-81B5-4D8E-8E9A-13FA0D814CA1@research.att.com>

On May 29, 2007, at 6:24 PM, Eli Criffield wrote:

> What i want to do is validate the "From" host of an xmlrpc server
> against a list of allowed servers.
>
> Sounds easy enough but "connectionMade(self)" Call is way back in
> http.HTTPChannel. That is set as the protocol in http.HTTPFactory and
> HTTPFactory is inherits by server.Site.
>
> So whats the best way to change one little function in  
> http.HTTPChannel ?
>
> Here is what i have now, but the I have to include all of server.Site
> in my example, even though its unchanged except it inherits
> myHTTPFactory instead of http.HTTPFactory.
>
> Is there a simpler way to do this?
>
> Eli Criffield

<snip>

This seems like it should work; I tried it with your Example and it  
does seem to have the same effect:

class mySite(server.Site):

    protocol = myHTTPChannel


Glenn Hochberg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070529/949e0abb/attachment.htm 

From elicriffield at gmail.com  Wed May 30 00:33:24 2007
From: elicriffield at gmail.com (Eli Criffield)
Date: Tue, 29 May 2007 23:33:24 -0500
Subject: [Twisted-Python] better way to do this?
In-Reply-To: <847F668D-81B5-4D8E-8E9A-13FA0D814CA1@research.att.com>
References: <18e3f33d0705291524q6c418d28ga04f82f5cb3e3814@mail.gmail.com>
	<847F668D-81B5-4D8E-8E9A-13FA0D814CA1@research.att.com>
Message-ID: <18e3f33d0705292133g3d9b370cm840dc5a41a6637db@mail.gmail.com>

Yeah that works. I was racking my brain trying to figure out the easy
way to do it....

Thanks

Eli Criffield

On 5/29/07, Glenn Hochberg <gah at research.att.com> wrote:
>
> On May 29, 2007, at 6:24 PM, Eli Criffield wrote:
>
>
> What i want to do is validate the "From" host of an xmlrpc server
>
> against a list of allowed servers.
>
>
>
>
> Sounds easy enough but "connectionMade(self)" Call is way back in
>
> http.HTTPChannel. That is set as the protocol in http.HTTPFactory and
>
> HTTPFactory is inherits by server.Site.
>
>
>
>
> So whats the best way to change one little function in http.HTTPChannel ?
>
>
>
>
> Here is what i have now, but the I have to include all of server.Site
>
> in my example, even though its unchanged except it inherits
>
> myHTTPFactory instead of http.HTTPFactory.
>
>
>
>
> Is there a simpler way to do this?
>
>
>
>
> Eli Criffield
> <snip>
>
> This seems like it should work; I tried it with your Example and it does
> seem to have the same effect:
>
> class mySite(server.Site):
>
>    protocol = myHTTPChannel
>
>
> Glenn Hochberg
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From antoine.pitrou at wengo.com  Wed May 30 06:32:39 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Wed, 30 May 2007 12:32:39 +0200
Subject: [Twisted-Python] Re: Divmod Sine Broken?
In-Reply-To: <4656A37F.1050700@llaisdy.com>
References: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
	<4656A37F.1050700@llaisdy.com>
Message-ID: <1180521159.7009.5.camel@antoine-ubuntu>


Le vendredi 25 mai 2007 ? 09:51 +0100, Ivan Uemlianin a ?crit :
> Jean-Paul Calderone wrote:
> > The Divmod Sine SIP implementation has numerous bug fixes not present in
> > twisted.protocols.sip.  Once #2444 is resolved, the protocol support in
> > Twisted will be as good as the protocol support in Divmod Sine.  What 
> > Sine
> > will still offer above the code in Twisted is the higher level APIs which
> > make call setup easy enough so that novel applications can focus on their
> > novelty instead of on SIP details.
> I have attempted and failed to install Divmod Sine.  I posted the 
> message below to divmod-dev a few days ago but have yet to receive a 
> reply (it's a quiet list).  I am re-posting the message here in good 
> faith and in the belief that it is not entirely off-topic or plain stupid. 

Just my 2 cents... The Sine author looks dead for all purposes. He
doesn't answer bug reports for his own code.

After playing around with the SIP support in Twisted, finding a few bugs
whose correction (*) was refused on the grounds that the author had
forked his own code as a separate project, we at Wengo have written our
own SIP stack on top of a patched twisted.protocols.sip.

(*) http://twistedmatrix.com/trac/ticket/2220

Good luck :)

Regards

Antoine.





From bjorn at iki.fi  Wed May 30 07:26:55 2007
From: bjorn at iki.fi (Bjorn Andersson)
Date: Wed, 30 May 2007 14:26:55 +0300
Subject: [Twisted-Python] twisted.names.client.Resolver user neither
	'search' nor 'domain' from resolv.conf?
Message-ID: <88bc8c7a0705300426h185545c9o8ecd07aab9b4ca46@mail.gmail.com>

Hi,

I just briefly tested twisted.names.client.Resolver with a resolv.conf
configuration file. I noticed that it doesn't utilize the configured
'domain' or 'search' directives. Is there any plan to implement this
in the near future or is there a deliberate reason why these aren't
used?

  Bjorn A.



From exarkun at divmod.com  Wed May 30 08:04:04 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 30 May 2007 08:04:04 -0400
Subject: [Twisted-Python] twisted.names.client.Resolver user neither
	'search' nor 'domain' from resolv.conf?
In-Reply-To: <88bc8c7a0705300426h185545c9o8ecd07aab9b4ca46@mail.gmail.com>
Message-ID: <20070530120404.30678.630587854.divmod.quotient.7565@ohm>

On Wed, 30 May 2007 14:26:55 +0300, Bjorn Andersson <bjorn at iki.fi> wrote:
>Hi,
>
>I just briefly tested twisted.names.client.Resolver with a resolv.conf
>configuration file. I noticed that it doesn't utilize the configured
>'domain' or 'search' directives. Is there any plan to implement this
>in the near future or is there a deliberate reason why these aren't
>used?
>

I hadn't planned on implementing them, but only because I don't have any
need for these features myself.  If you'd like to add support for them,
please feel free; I'd be happy to apply a patch.  (If you do, take a look
at <http://twistedmatrix.com/trac/wiki/ReviewProcess> first.)

Jean-Paul



From krgkg at yahoo.com  Wed May 30 10:32:02 2007
From: krgkg at yahoo.com (Keith Gunderson)
Date: Wed, 30 May 2007 07:32:02 -0700 (PDT)
Subject: [Twisted-Python] New to twisted- need help to hit stride
Message-ID: <69537.95382.qm@web34514.mail.mud.yahoo.com>

Hello group,

I've been lurking and watching for a while.  I need to change hats now and get some coding done.  I'm an engineer/ sysadmin/ dev and a public university who's been willingly forced to be a sysadmin after years of C/C++ development.

I'll be on IRC in the evenings.  I'm hoping to converse with some of you well-known folks (and others) so I can pick up speed w/ twisted/ python.  I definitely want to do things "by the books" (w/ respect to twisted methodology.)

I seem to be a mere step or two away from clicking, but I'm thinking in circles at the transition between design and implementation.  I need to decide how much to code from scratch, how much to borrow from twisted-related libraries, and how much is available from twisted itself.  Please offer suggestion for which classes/ libraries to use (and avoid) and even project skeletons to start with.

Use Cases:
- Emacs fragment manager:  sent & receive  blocks of text to a twisted server from emacs.  Sort by user, time, name. 

-SSH command - line manager :  send command strings to twisted server.  Another fuzzy goal would be to have the commands run on other hosts by the twisted server.

-LDAP - user database authentication.

After implemeting those features, I expect to re-evaluate my skills and design so as to begin phase 2.

Feel free to make suggestions or wait for more pointed questions.    

KGunderson



 
---------------------------------
No need to miss a message. Get email on-the-go 
with Yahoo! Mail for Mobile. Get started.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070530/14052d65/attachment.htm 

From washort at twistedmatrix.com  Wed May 30 16:44:37 2007
From: washort at twistedmatrix.com (washort at twistedmatrix.com)
Date: Wed, 30 May 2007 16:44:37 -0400
Subject: [Twisted-Python] Re: Divmod Sine Broken?
In-Reply-To: <1180521159.7009.5.camel@antoine-ubuntu>
References: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
	<4656A37F.1050700@llaisdy.com>
	<1180521159.7009.5.camel@antoine-ubuntu>
Message-ID: <20070530204437.GG18017@localhost.localdomain>

On Wed, May 30, 2007 at 12:32:39PM +0200, Antoine Pitrou wrote:
> 
> Just my 2 cents... The Sine author looks dead for all purposes. He
> doesn't answer bug reports for his own code.

Hi. I'm not dead.                                                                                                                  
                                                                                                                                   
I'd be happy to look at any bug reports you want to file for Sine --                                                               
its bug tracker can be found at http://divmod.org/.




From LAdams at doubleclick.com  Wed May 30 17:20:56 2007
From: LAdams at doubleclick.com (Adams, Larry)
Date: Wed, 30 May 2007 15:20:56 -0600
Subject: [Twisted-Python] RE: Modifying a web proxy to use SSL
In-Reply-To: <5DA9F92FACA0914D951AE5EB57F9236E02B9BB8F@THN-EXCLS1.dc1.doubleclick.corp>
References: <5DA9F92FACA0914D951AE5EB57F9236E02B9BB8F@THN-EXCLS1.dc1.doubleclick.corp>
Message-ID: <5DA9F92FACA0914D951AE5EB57F9236E02B9C469@THN-EXCLS1.dc1.doubleclick.corp>

Here is a little more detail on my problem.  I've been able to verify
that the connection is made to the https server and that data is
received.  In fact, I've overridden the ProxyRequest.handleResponseEnd()
method to save this data to a database.  I can see the raw html and
image data in the database, but nothing is returned to the browser.
Does anyone have any experience implementing their own proxy with SSL
that might be able to point me in the right direction?  Any assistance
would be greatly appreciated.
 
-larry
 
Here is my custom ProxyRequest class (i had to modify some stuff because
secure urls have the https stripped and :443 added to the uri for some
reason):
 
class SerpicoProxyRequest(proxy.ProxyRequest):
    #protocols = {'http': SerpicoProxyClientFactory}
    #LEA - added https
    protocols = {'http': SerpicoProxyClientFactory, 'https' :
SerpicoProxyClientFactory}
    ports = {'http' : 80, 'https' : 443}
 
    def __init__(self, *args):
        proxy.ProxyRequest.__init__(self, *args)
 
    def process(self):
        if (self.uri.find(':443')>0):
            self.uri = 'https://' + self.uri.replace(':443','')
            self.method = 'GET'
            parsed = urlparse.urlparse(self.uri)
            protocol = parsed[0]
            host = parsed[1]
            port = self.ports[protocol]
            self.setHost(host,port,1)
            if ':' in host:
                host, port = host.split(':')
                port = int(port)
 
            rest = urlparse.urlunparse(('','')+parsed[2:])
            if not rest:
                rest = rest+'/'
            class_ = self.protocols[protocol]
            headers = self.getAllHeaders().copy()
            if not headers.has_key('host'):
                headers['host'] = host
            self.content.seek(0,0)
            s = self.content.read()
            clientFactory = class_(self.method, rest, self.clientproto,
headers, s, self)
            clientContextFactory = ssl.ClientContextFactory()
            c = reactor.connectSSL(host, port, clientFactory,
clientContextFactory)
        else:
            proxy.ProxyRequest.process(self)
 
Here is my custom ProxyClient (the Page() object is what I'm using to
save the data to the database):
 
class SerpicoProxyClient(proxy.ProxyClient):
    def connectionMade(self):
        global CURRENTJOBID
        global CURRENTCHILDID
        log.msg("initializing connection")
        self.page = Page()
        if not self.father.uri == "%s/command/get_agent_task/%s" %
(command_site,machine_name):
            self.page.instance = machine_name
            self.page.job_id = int(CURRENTJOBID or 0)
            self.page.task_id = int(CURRENTCHILDID or 0)
            # self.father refers to the http.Request object
            self.page.request_uri = self.father.uri
            self.page.save()
            log.msg("MACHINE NAME IS %s" % machine_name)
            log.msg("PROXYREQUEST %s" % self.father.uri)
            log.msg("TRANSPORT %s" % self.transport)
            log.msg("ISSECURE %s" % self.father.isSecure())
        proxy.ProxyClient.connectionMade(self)
 
    def handleHeader(self, key, value):
        proxy.ProxyClient.handleHeader(self, key, value)
#        log.msg("%s : %s added" % (key, value))
        if not self.father.uri == "%s/command/get_agent_task/%s" %
(command_site,machine_name):
            self.page.header_set.create(key=key, value=value)
 
    def handleResponsePart(self, data):
        if not self.father.uri == "%s/command/get_agent_task/%s" %
(command_site,machine_name):
            self.page.data = data
        proxy.ProxyClient.handleResponsePart(self, data)
 
    def handleResponseEnd(self):
        if not self.father.uri == "%s/command/get_agent_task/%s" %
(command_site,machine_name):
            self.page.save()
        log.msg('ending response with my
data::%s\n\nfatherdata::%s\n\nmytransport::%s' % (self.page.data,
self.father.c
hannel.transport, self.transport))
        self.transport.loseConnection()
        self.father.channel.transport.loseConnection()
 

________________________________

From: Adams, Larry 
Sent: Tuesday, May 29, 2007 3:42 PM
To: twisted-python at twistedmatrix.com
Subject: Modifying a web proxy to use SSL



I'm trying to use twisted to proxy all web requests for a set of PCs
(virtual machines actually). I've created my own ProxyRequest class to
override the process() method so that it will use SSL if the URL is
secure. It makes the connection and retrieves the data successfully, but
the browser still doesn't display the HTML. I must be missing some other
class/method that I have to override, but I'm at a loss as to which one
at the moment.

Below is some logging from my application for the same page called via
http and https respectively. Any help or pointers to working examples
would be greatly appreciated!

Thanks,
Larry Adams 
2007/05/29 15:10 -0500 [SerpicoProxy,11,172.18.36.22] Starting factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8cec>

2007/05/29 15:10 -0500 [Uninitialized] building protocol for addr:
IPv4Address(TCP, 'www.connectcommerce.com
<file://www.connectcommerce.com> ', 80)
2007/05/29 15:10 -0500 [Uninitialized] initializing connection
2007/05/29 15:10 -0500 [Uninitialized] MACHINE NAME IS surfsidekick
2007/05/29 15:10 -0500 [Uninitialized] PROXYREQUEST
http://www.connectcommerce.com/ <http://www.connectcommerce.com/> 
2007/05/29 15:10 -0500 [Uninitialized] TRANSPORT <<class
'twisted.internet.tcp.Client'> to ('www.connectcommerce.com
<file://www.connectcommerce.com> ', 80) at b71d8ccc>

2007/05/29 15:10 -0500 [Uninitialized] ISSECURE False
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Date : Tue, 29 May
2007 20:11:27 GMT added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Server :
Apache/1.3.33 (Unix) (Gentoo/Linux) added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Location :
http://www.connectcommerce.com/global/login.html
<http://www.connectcommerce.com/global/login.html>  added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Connection : close
added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Content-Type :
text/html; charset=iso-8859-1 added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] trying to lose
connection for transport: <<class 'twisted.internet.tcp.Client'> to
('www.connectcommerce.com <file://www.connectcommerce.com> ', 80) at
b71d8ccc>

2007/05/29 15:10 -0500 [SerpicoProxyClient,client] parent transport :
<SerpicoProxy #11 on 74007>
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Stopping factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8cec>

2007/05/29 15:11 -0500 [SerpicoProxy,18,172.18.36.22] Starting factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8d0c>

2007/05/29 15:11 -0500 [Uninitialized] building protocol for addr:
IPv4Address(TCP, 'www.connectcommerce.com
<file://www.connectcommerce.com> ', 443)
2007/05/29 15:11 -0500 [Uninitialized] initializing connection
2007/05/29 15:11 -0500 [Uninitialized] MACHINE NAME IS surfsidekick
2007/05/29 15:11 -0500 [Uninitialized] PROXYREQUEST
https://www.connectcommerce.com <https://www.connectcommerce.com> 
2007/05/29 15:11 -0500 [Uninitialized] TRANSPORT <<class
'twisted.internet.tcp.TLSConnection'> to ('www.connectcommerce.com
<file://www.connectcommerce.com> ', 443) at b71bd86c>

2007/05/29 15:11 -0500 [Uninitialized] ISSECURE True
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Date : Tue, 29 May
2007 20:12:00 GMT added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Server :
Apache/1.3.33 (Unix) (Gentoo/Linux) added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Location :
http://www.connectcommerce.com/global/login.html
<http://www.connectcommerce.com/global/login.html>  added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Connection : close
added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Content-Type :
text/html; charset=iso-8859-1 added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] trying to lose
connection for transport: <<class 'twisted.internet.tcp.TLSConnection'>
to ('www.connectcommerce.com <file://www.connectcommerce.com> ', 443) at
b71bd86c>

2007/05/29 15:11 -0500 [SerpicoProxyClient,client] parent transport :
<SerpicoProxy #18 on 74007>
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Stopping factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8d0c>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070530/890d0334/attachment.htm 

From glyph at divmod.com  Thu May 31 14:16:29 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 31 May 2007 18:16:29 -0000
Subject: [Twisted-Python] New to twisted- need help to hit stride
In-Reply-To: <69537.95382.qm@web34514.mail.mud.yahoo.com>
References: <69537.95382.qm@web34514.mail.mud.yahoo.com>
Message-ID: <20070531181629.24950.1256377948.divmod.xquotient.110@joule.divmod.com>

On 30 May, 02:32 pm, krgkg at yahoo.com wrote:
>Use Cases:
>- Emacs fragment manager:  sent & receive  blocks of text to a twisted 
>server from emacs.  Sort by user, time, name.

I have been looking for a use-case for an elisp implementation of AMP. 
I thought I'd filed a ticket a while ago, but apparently not, so I just 
made one.

Since this feature you've described would be a nice use-case, please 
feel free to comment on #2686 if you are so inclined.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070531/55759056/attachment.htm 

From matt at zgroupplc.com  Tue May  1 07:06:43 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Tue, 1 May 2007 14:06:43 +0100
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
Message-ID: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Dear All,

I have been benchmarking my twistd application (twisted.web.server)  
and I am seeing increasing memory usage that is never freed. Before I  
delve into GC and valgrind, I am interested in learning whether there  
are any fundamental no-nos under twisted that might result in a leak.  
I am relatively new to twisted and its entirely possible that I am  
doing something wrong.

I am also interested in learning what the stability of the epoll  
reactor is. I have come across a few (old) posts that pointed to it  
being incomplete. Would the epoll reactor be a possible cause of a  
memory leak? Leak aside, I have benchmarked my app up to 5000  
simultaneous connections with no obvious drop in performance.  
Switching to poll produces *terrible* results.

For the purposes of diagnosing the cause of the leak (C extension,  
python, twisted, or my code) I have removed external library  
dependencies and I have also swapped out reactors. The leak persists.

Does anyone have any good tips for diagnosing leaks under twisted?  
For what its worth, I am conducting my tests under an AMD 64bit  
architecture.

Regards,


Matt


m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGNztmyI6MkdKPngkRAnW5AJ9D8Lx2BN3Ds8BL33TL1TS1QnK1pgCgk2X5
2HVOxP93ZJCWWLQ7Tver3wE=
=1nnG
-----END PGP SIGNATURE-----



From andrew-twisted at puzzling.org  Tue May  1 07:38:10 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 1 May 2007 23:38:10 +1000
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
Message-ID: <20070501133810.GJ15094@steerpike.home.puzzling.org>

Matthew Glubb wrote:
[...]
> For the purposes of diagnosing the cause of the leak (C extension,  
> python, twisted, or my code) I have removed external library  
> dependencies and I have also swapped out reactors. The leak persists.

Those are all good steps to take to isolate the problem.

> Does anyone have any good tips for diagnosing leaks under twisted?  

Basically, the same as for any other long-lived Python program:

  * try to find a minimal case that reproduces the problem, e.g. a simple
    request that leaks some bytes when repeated, or even better a simple
    function call, and hope the cause becomes obvious as you narrow it down
  * try memory profilers like http://pysizer.8325.org/
  * try my crude hack: http://twistedmatrix.com/users/spiv/countrefs.py
  * try to reproduce without any C extensions, to determine if the leak is in a
    C extension or pure python code

-Andrew.




From itamar at itamarst.org  Tue May  1 07:41:35 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 01 May 2007 09:41:35 -0400
Subject: Memory leaks (was Re: [Twisted-Python] Twisted Memory Leaks & Epoll)
In-Reply-To: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
Message-ID: <1178026895.12122.11.camel@localhost.localdomain>

On Tue, 2007-05-01 at 14:06 +0100, Matthew Glubb wrote:

> I have been benchmarking my twistd application (twisted.web.server)  
> and I am seeing increasing memory usage that is never freed. Before I  
> delve into GC and valgrind, I am interested in learning whether there  
> are any fundamental no-nos under twisted that might result in a leak.  
> I am relatively new to twisted and its entirely possible that I am  
> doing something wrong.

What version Python? Pre-2.5 Python would never free up memory.

> I am also interested in learning what the stability of the epoll  
> reactor is. I have come across a few (old) posts that pointed to it  
> being incomplete. Would the epoll reactor be a possible cause of a  
> memory leak? Leak aside, I have benchmarked my app up to 5000  
> simultaneous connections with no obvious drop in performance.  
> Switching to poll produces *terrible* results.

So far there has been only one report of problems with epoll reactor. If
it's working for you, just use it.

Also:
1. It's not incomplete so far as we know, since it passes all tests.
(http://twistedmatrix.com/buildbot/)
2. You said below you had memory leak with other reactors, so it seems
unlikely that epoll is the main reason your application is leaking
memory.

> Does anyone have any good tips for diagnosing leaks under twisted?  
> For what its worth, I am conducting my tests under an AMD 64bit  
> architecture.

The gc module should let you, with a little work, figure out what the
most frequently used Python objects are in your code.




From exarkun at divmod.com  Tue May  1 07:44:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 1 May 2007 09:44:22 -0400
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
Message-ID: <20070501134422.19381.1457547633.divmod.quotient.7251@ohm>

On Tue, 1 May 2007 14:06:43 +0100, Matthew Glubb <matt at zgroupplc.com> wrote:
>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>Dear All,
>
>I have been benchmarking my twistd application (twisted.web.server)  and I 
>am seeing increasing memory usage that is never freed. Before I  delve into 
>GC and valgrind, I am interested in learning whether there  are any 
>fundamental no-nos under twisted that might result in a leak.  I am 
>relatively new to twisted and its entirely possible that I am  doing 
>something wrong.

All of the typical Python caveats apply.  There's little that's specific
to Twisted here, aside from general Python rules applied to Twisted objects
and APIs.

>
>I am also interested in learning what the stability of the epoll  reactor 
>is. I have come across a few (old) posts that pointed to it  being 
>incomplete. Would the epoll reactor be a possible cause of a  memory leak? 
>Leak aside, I have benchmarked my app up to 5000  simultaneous connections 
>with no obvious drop in performance.  Switching to poll produces *terrible* 
>results.

The epoll reactor is new in the latest release of Twisted.  It may well have
bugs. :)  It is capable of passing the full Twisted test suite (3100+ tests),
though, which at least says something.

>
>For the purposes of diagnosing the cause of the leak (C extension,  python, 
>twisted, or my code) I have removed external library  dependencies and I 
>have also swapped out reactors. The leak persists.
>
>Does anyone have any good tips for diagnosing leaks under twisted?  For what 
>its worth, I am conducting my tests under an AMD 64bit  architecture.

Having a manhole in a running server is pretty useful.  Once you have that,
you can poke around with the gc module, or maybe something like pysizer, or
things like http://twistedmatrix.com/users/spiv/countrefs.py or
http://twistedmatrix.com/trac/browser/sandbox/exarkun/instcount.py

Jean-Paul



From matt at zgroupplc.com  Tue May  1 08:09:25 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Tue, 1 May 2007 15:09:25 +0100
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <20070501133810.GJ15094@steerpike.home.puzzling.org>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
	<20070501133810.GJ15094@steerpike.home.puzzling.org>
Message-ID: <B566CAD7-64CF-4EC5-B4B3-A9AB37CC79D9@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi All,

Thanks for all of your tips. I am sure that I'll get to the bottom of  
it. I think I'll start with pysizer and Andrew's ref counter...


Matt

On 1 May 2007, at 14:38, Andrew Bennetts wrote:

> Matthew Glubb wrote:
> [...]
>> For the purposes of diagnosing the cause of the leak (C extension,
>> python, twisted, or my code) I have removed external library
>> dependencies and I have also swapped out reactors. The leak persists.
>
> Those are all good steps to take to isolate the problem.
>
>> Does anyone have any good tips for diagnosing leaks under twisted?
>
> Basically, the same as for any other long-lived Python program:
>
>   * try to find a minimal case that reproduces the problem, e.g. a  
> simple
>     request that leaks some bytes when repeated, or even better a  
> simple
>     function call, and hope the cause becomes obvious as you narrow  
> it down
>   * try memory profilers like http://pysizer.8325.org/
>   * try my crude hack: http://twistedmatrix.com/users/spiv/ 
> countrefs.py
>   * try to reproduce without any C extensions, to determine if the  
> leak is in a
>     C extension or pure python code
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGN0oVyI6MkdKPngkRAnOvAJ4/hJoYluJCvI5mwZpmg884L6d3vACdGhgQ
I1blYJEaH+nn+BiIcSIK9Ik=
=FwY8
-----END PGP SIGNATURE-----



From rampeters at gmail.com  Tue May  1 19:48:46 2007
From: rampeters at gmail.com (Ram Peters)
Date: Tue, 1 May 2007 21:48:46 -0400
Subject: [Twisted-Python] Polling a resource on another computer with Twisted
Message-ID: <81b45360705011848u5dde9165rcc345037ede117e1@mail.gmail.com>

I am looking for some guidance on how to poll a resource on another
computer using twisted.  Poll a remote resource, if a task is
available, I need to perform it on the twisted machine, not on the
remote resource machine.  Can anyone tell me how I can do this.
Twisted event loops only listens for incoming.  I need to go out and
check the resource and begin processing.

Thanks.



From matusis at matusis.com  Tue May  1 21:40:08 2007
From: matusis at matusis.com (Alec Matusis)
Date: Tue, 1 May 2007 20:40:08 -0700
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
Message-ID: <014501c78c6b$963bcfc0$c2b36f40$@com>

Our empirical experience with leaks is the following:
Python 2.4 never releases memory, but you can get very good results with
Twisted 2.2 when the servers are at high-load all the time. We have servers
that run at 70%+ CPU for more than a month without restarting.
When a server starts, it exhibits a memory increase from say 60MB in the
first hour to 70MB after the first 24 hours. The memory increase slows down,
asymptotically approaching some fixed value (which is possibly set by the
highest usage). Then it can run literally for months, never exceeding 80MB.

When there's a memory leak due to bad code, the best thing to do is to set
up a manhole, and inspect all objects. 
Also, manually decrementing reference counts like so:

def stat_collect():
    gc.collect()
    twisted.internet.reactor.callLater(config.gc_collect_interval,
stat_collect)

stat_collect()

helped us in one case.

With Twisted 2.5, we saw memory leaks for poll reactor for the same code
that was non-leaking on 2.2. 



> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Matthew Glubb
> Sent: Tuesday, May 01, 2007 6:07 AM
> To: Twisted general discussion
> Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
> 
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Dear All,
> 
> I have been benchmarking my twistd application (twisted.web.server)
> and I am seeing increasing memory usage that is never freed. Before I
> delve into GC and valgrind, I am interested in learning whether there
> are any fundamental no-nos under twisted that might result in a leak.
> I am relatively new to twisted and its entirely possible that I am
> doing something wrong.
> 
> I am also interested in learning what the stability of the epoll
> reactor is. I have come across a few (old) posts that pointed to it
> being incomplete. Would the epoll reactor be a possible cause of a
> memory leak? Leak aside, I have benchmarked my app up to 5000
> simultaneous connections with no obvious drop in performance.
> Switching to poll produces *terrible* results.
> 
> For the purposes of diagnosing the cause of the leak (C extension,
> python, twisted, or my code) I have removed external library
> dependencies and I have also swapped out reactors. The leak persists.
> 
> Does anyone have any good tips for diagnosing leaks under twisted?
> For what its worth, I am conducting my tests under an AMD 64bit
> architecture.
> 
> Regards,
> 
> 
> Matt
> 
> 
> m a t t h e w   g l u b b
> 
> _______________________________________________________________________
> _
> Z Group PLC
> 
> Tel: +44 (0) 8700 111 173
> Fax: +44 (0) 8707 051 393
> Txt: +44 (0) 7800 140 877
> Web: <http://www.zgroupplc.com/>
> 
> This  email  and  any  files  transmitted  with it are  confidential
> and
> intended solely for the use of the individual or entity to whom they
> are
> addressed.  The opinions  expressed in this mail are those of the
> author
> and do not necessarily  represent the views of the company.  If you
> have
> received this email in error please notify <service at zgroupplc.com>
> 
> 
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.1 (Darwin)
> 
> iD8DBQFGNztmyI6MkdKPngkRAnW5AJ9D8Lx2BN3Ds8BL33TL1TS1QnK1pgCgk2X5
> 2HVOxP93ZJCWWLQ7Tver3wE=
> =1nnG
> -----END PGP SIGNATURE-----
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at divmod.com  Tue May  1 21:55:51 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 02 May 2007 03:55:51 -0000
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <014501c78c6b$963bcfc0$c2b36f40$@com>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>
	<014501c78c6b$963bcfc0$c2b36f40$@com>
Message-ID: <20070502035551.18153.1559975523.divmod.xquotient.193@joule.divmod.com>


Hi Alec,

On 03:40 am, matusis at matusis.com wrote:
>With Twisted 2.5, we saw memory leaks for poll reactor for the same 
>code
>that was non-leaking on 2.2.

I'm sorry we could help you more with that particular leak when it 
happened.  Not that I know of any particular issues that have been fixed 
since the 2.5 release, but I wonder - have you yet tried this 
application with current trunk, and did you ever try it with Twisted 
2.4?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070502/e2508410/attachment.html>

From elicriffield at gmail.com  Tue May  1 22:30:27 2007
From: elicriffield at gmail.com (Eli Criffield)
Date: Tue, 1 May 2007 23:30:27 -0500
Subject: [Twisted-Python] client side cert?
Message-ID: <18e3f33d0705012130q627492a9v3973f634580d7b04@mail.gmail.com>

I'm trying to make a simple xmlrpc server that uses ssl and requires
the client to have a cert signed by me.

Sounds easy enough, It doesn't seem to work. It would appear that
twisted.internet.ssl.CertificateOptions() Has all the options i need
to make a ContextFactory object to feed to listenSSL, but i get this
error when i try to setup the listenSSL.

  File "./xmlrpc-server.py", line 38, in <module>
    reactor.listenSSL(7080,server.Site(r),ctx)
  File "/usr/lib/python2.5/site-packages/twisted/internet/posixbase.py",
line 492, in listenSSL
    p.startListening()
  File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
line 730, in startListening
    skt = self.createInternetSocket()
  File "/usr/lib/python2.5/site-packages/twisted/internet/ssl.py",
line 169, in createInternetSocket
    return SSL.Connection(self.ctxFactory.getContext(), sock)
  File "/usr/lib/python2.5/site-packages/twisted/internet/_sslverify.py",
line 901, in getContext
    self._context = self._makeContext()
  File "/usr/lib/python2.5/site-packages/twisted/internet/_sslverify.py",
line 910, in _makeContext
    ctx.use_certificate(self.certificate)
TypeError: Expected an X509 object


My code:
if __name__ == '__main__':
    from twisted.internet import reactor, ssl
    import OpenSSL
    r = Example()
    pem = OpenSSL.crypto.FILETYPE_PEM
    xfd = open('test.cert','r')
    x590cert = ssl.Certificate.loadPEM(xfd.read())
    pfd = open('test.key','r')
    pkeycert =  OpenSSL.crypto.load_privatekey(pem,pfd.read(),'password')
    ctx = ssl.CertificateOptions(privateKey=pkeycert,certificate=x590cert,method=OpenSSL.SSL.SSLv23_METHOD)
    reactor.listenSSL(7080,server.Site(r),ctx)
    reactor.run()

I try to make the x590 object to feed to CertificateOptions from
t.i.s.Certifcate.loadPEM() but it doesn't like it. I see nowhere in
t.i.ssl to make a PKey object that t.i.s.CertificationOptions() wants.

I've tried t.i.s.ContextFactory() but there is no options for
requiring a client side cert.
t.i.s.ClientContextFactory doesn't seem to have any options to tell it
what cert to use on the client side either, or how to verify the
server cert, I guess thats what t.i.s.CertificationOptions() is for
but it doesn't seem to work as documented.

Is there some great documentation out there about how to do this with
twisted.internet.ssl that I'm missing?

Eli Criffield



From glyph at divmod.com  Tue May  1 23:15:18 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 02 May 2007 05:15:18 -0000
Subject: [Twisted-Python] client side cert?
In-Reply-To: <18e3f33d0705012130q627492a9v3973f634580d7b04@mail.gmail.com>
References: <18e3f33d0705012130q627492a9v3973f634580d7b04@mail.gmail.com>
Message-ID: <20070502051518.18153.1548289072.divmod.xquotient.278@joule.divmod.com>

On 04:30 am, elicriffield at gmail.com wrote:
>I try to make the x590 object to feed to CertificateOptions from
>t.i.s.Certifcate.loadPEM() but it doesn't like it. I see nowhere in
>t.i.ssl to make a PKey object that t.i.s.CertificationOptions() wants.

>I've tried t.i.s.ContextFactory() but there is no options for
>requiring a client side cert.
>t.i.s.ClientContextFactory doesn't seem to have any options to tell it
>what cert to use on the client side either, or how to verify the
>server cert, I guess thats what t.i.s.CertificationOptions() is for
>but it doesn't seem to work as documented.

The "right" way to do this (and by "right" I mean the way I intended and 
used when I originally wrote this code, but never documented in any way) 
is by using the "PrivateCertificate" object, which represents a paired 
public/private key, and its (poorly named, and by the way did I mention 
it's undocumented) "options" method, which creates the 
CertificateOptions object for you.

I can see from your example that you're already expecting the key and 
certificate to be in the same PEM file (like everyone does) so it could 
be as easy as this:

    from twisted.internet.ssl import PrivateCertificate
    pc = PrivateCertificate.loadPEM(file('test.cert', r').read())
    ctxFactory = pc.options()

although if you want to verify client certificates, options() also 
takes, as varargs, a tuple of certificate authorities.  However, a 
private certificate can also fill the role of a public certificate, so 
you can do:

    ctxFactory = pc.options(pc)

to use a self-signed certificate as its own authority.

This context factory can be used either for client or server 
connections, as shown below.

If you are doing anything interesting with SSL, you might want to have a 
look at the source in the file twisted/internet/_sslverify.py, 
especially the other (undocumented) methods of PrivateCertificate, which 
implements a bit of CA functionality.
>Is there some great documentation out there about how to do this with
>twisted.internet.ssl that I'm missing?

Nope.  The documentation here is particularly thin, and to make matters 
work, there are certain operations that are unsupported due to bugs or 
non-wrapped functions in pyopenssl.

Please feel free to file a more specific documentation bug (and feel 
_double_ free to attach a patch) to add docstrings to _sslverify, and 
probably a separate bug to add an introductory document.

I'm a big fan of complete runnable examples, so here's something to get 
you started.  Hope that this helps:

--- cut here ---

from sys import stdout, argv

from twisted.python.filepath import FilePath
from twisted.python.log import startLogging

from twisted.internet.protocol import Protocol, Factory, ClientFactory

from twisted.internet import reactor
from twisted.internet.ssl import PrivateCertificate

class MyProto(Protocol):
    def connectionMade(self):
        self.transport.write(self.factory.stuff)
    def dataReceived(self, data):
        stdout.write('Received %r\n' % (data,))

theCert = PrivateCertificate.loadPEM(file('server.pem','r').read())
theOptions = theCert.options(theCert)

def server():
    f = Factory()
    f.stuff = 'hello, client'
    f.protocol = MyProto
    reactor.listenSSL(7080, f, theOptions)

def client():
    f = ClientFactory()
    f.stuff = 'hello, server'
    f.protocol = MyProto
    reactor.connectSSL('localhost', 7080, f, theOptions)

def main():
    startLogging(stdout)
    if argv[1] == 'server':
        server()
    else:
        client()
    reactor.run()

if __name__ == '__main__':
    main()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070502/0661da0e/attachment.html>

From glyph at divmod.com  Tue May  1 23:23:08 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 02 May 2007 05:23:08 -0000
Subject: [Twisted-Python] Polling a resource on another computer with
	Twisted
In-Reply-To: <81b45360705011848u5dde9165rcc345037ede117e1@mail.gmail.com>
References: <81b45360705011848u5dde9165rcc345037ede117e1@mail.gmail.com>
Message-ID: <20070502052308.18153.1995319705.divmod.xquotient.292@joule.divmod.com>

On 01:48 am, rampeters at gmail.com wrote:
>I am looking for some guidance on how to poll a resource on another
>computer using twisted.  Poll a remote resource, if a task is
>available, I need to perform it on the twisted machine, not on the
>remote resource machine.  Can anyone tell me how I can do this.
>Twisted event loops only listens for incoming.  I need to go out and
>check the resource and begin processing.

This question is extremely open-ended.  I could think of maybe 50 ways 
to implement this functionality as specified, and I'm not sure exactly 
what you're thinking.

Twisted does listen for incoming *events*, but I think what you mean is 
that it listens only for incoming *connections*.  If what you mean is 
simply "how do I connect to another host as a client", see this 
document:

http://twistedmatrix.com/projects/core/documentation/howto/clients.html

If what you mean is "how do I do something, such as check a remote 
resource, periodically", you might want to use Twisted's LoopingCall 
object:

http://twistedmatrix.com/documents/current/api/twisted.internet.task.LoopingCall.html

If what you mean is "how do I stop my program and wait for something to 
happen", you don't need to.  Simply ask the remote computer about the 
resource you are polling (by establishing a client connection and 
writing some bytes to it, for example), and then wait for the reactor to 
tell you that it has responded.  If you want to establish a timeout, set 
up a timed call using reactor.callLater, and cancel it if the response 
arrives first.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070502/2094f426/attachment.html>

From matusis at matusis.com  Wed May  2 02:23:05 2007
From: matusis at matusis.com (Alec Matusis)
Date: Wed, 2 May 2007 01:23:05 -0700
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <20070502035551.18153.1559975523.divmod.xquotient.193@joule.divmod.com>
References: <841030CD-6067-4B95-AB04-0FBBB01DB7F7@zgroupplc.com>	<014501c78c6b$963bcfc0$c2b36f40$@com>
	<20070502035551.18153.1559975523.divmod.xquotient.193@joule.divmod.com>
Message-ID: <018f01c78c93$1c041820$540c4860$@com>


Hi Glyph,

> I wonder - have you yet tried this application with current trunk, and did you ever try it with Twisted 2.4?

I have not tried with current trunk or Twisted 2.4.

We are getting another production machine ready with 2.6.18 kernel and Python 2.4.4, and we will migrate that server there within a week from the current 2.6.11 / 2.4.1.

We will try it there both with Twisted 2.2 poll and with 2.5 poll/epoll. I will post the results after we migrate, especially whether epoll is in the edge-triggered or in the level-triggered mode. 

From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of glyph at divmod.com
Sent: Tuesday, May 01, 2007 8:56 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] Twisted Memory Leaks & Epoll


Hi Alec,

On 03:40 am, matusis at matusis.com wrote:

>With Twisted 2.5, we saw memory leaks for poll reactor for the same code
>that was non-leaking on 2.2.

I'm sorry we could help you more with that particular leak when it happened.  Not that I know of any particular issues that have been fixed since the 2.5 release, but I wonder - have you yet tried this application with current trunk, and did you ever try it with Twisted 2.4?




From rampeters at gmail.com  Wed May  2 06:00:18 2007
From: rampeters at gmail.com (Ram Peters)
Date: Wed, 2 May 2007 08:00:18 -0400
Subject: [Twisted-Python] Polling a resource on another computer with
	Twisted
In-Reply-To: <20070502052308.18153.1995319705.divmod.xquotient.292@joule.divmod.com>
References: <81b45360705011848u5dde9165rcc345037ede117e1@mail.gmail.com>
	<20070502052308.18153.1995319705.divmod.xquotient.292@joule.divmod.com>
Message-ID: <81b45360705020500m67edff33rc1f7569ee3023f03@mail.gmail.com>

> If what you mean is "how do I do something, such as check a remote resource,
> periodically", you might want to use Twisted's LoopingCall object:
>
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.task.LoopingCall.html
>

This is what I need.

Thanks.



From exarkun at divmod.com  Wed May  2 07:17:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 2 May 2007 09:17:21 -0400
Subject: [Twisted-Python] Twisted Memory Leaks & Epoll
In-Reply-To: <018f01c78c93$1c041820$540c4860$@com>
Message-ID: <20070502131721.19381.606913015.divmod.quotient.7541@ohm>

On Wed, 2 May 2007 01:23:05 -0700, Alec Matusis <matusis at matusis.com> wrote:
> [snip]
>
>We will try it there both with Twisted 2.2 poll and with 2.5 poll/epoll.
>I will post the results after we migrate, especially whether epoll is in
>the edge-triggered or in the level-triggered mode.

Switching to a new machine won't have any affect on whether epoll is in
edge-triggered mode or level-triggered mode.  It will remain in level-
triggered mode, since that is the only mode it currently supports. ;)

Jean-Paul



From elicriffield at gmail.com  Wed May  2 08:24:32 2007
From: elicriffield at gmail.com (Eli Criffield)
Date: Wed, 2 May 2007 09:24:32 -0500
Subject: [Twisted-Python] client side cert?
In-Reply-To: <20070502051518.18153.1548289072.divmod.xquotient.278@joule.divmod.com>
References: <18e3f33d0705012130q627492a9v3973f634580d7b04@mail.gmail.com>
	<20070502051518.18153.1548289072.divmod.xquotient.278@joule.divmod.com>
Message-ID: <18e3f33d0705020724s43b7bb37n2d9998ca1ee1af73@mail.gmail.com>

Thats a huge help. I'll see how far i can get with this. I'll write a
short doc how to do client side cert verification once i get it
working. And some docstrings if i can figure them out.

Eli Criffield


On 5/2/07, glyph at divmod.com <glyph at divmod.com> wrote:
> On 04:30 am, elicriffield at gmail.com wrote:
>
> >I try to make the x590 object to feed to CertificateOptions from
> >t.i.s.Certifcate.loadPEM() but it doesn't like it. I see nowhere in
> >t.i.ssl to make a PKey object that t.i.s.CertificationOptions() wants.
>
> >I've tried t.i.s.ContextFactory() but there is no options for
> >requiring a client side cert.
> >t.i.s.ClientContextFactory doesn't seem to have any options to tell it
> >what cert to use on the client side either, or how to verify the
> >server cert, I guess thats what t.i.s.CertificationOptions() is for
> >but it doesn't seem to work as documented.
>
> The "right" way to do this (and by "right" I mean the way I intended and
> used when I originally wrote this code, but never documented in any way) is
> by using the "PrivateCertificate" object, which represents a paired
> public/private key, and its (poorly named, and by the way did I mention it's
> undocumented) "options" method, which creates the CertificateOptions object
> for you.
>
> I can see from your example that you're already expecting the key and
> certificate to be in the same PEM file (like everyone does) so it could be
> as easy as this:
>
>     from twisted.internet.ssl import PrivateCertificate
>     pc = PrivateCertificate.loadPEM(file('test.cert', r').read())
>     ctxFactory = pc.options()
>
> although if you want to verify client certificates, options() also takes, as
> varargs, a tuple of certificate authorities.  However, a private certificate
> can also fill the role of a public certificate, so you can do:
>
>     ctxFactory = pc.options(pc)
>
> to use a self-signed certificate as its own authority.
>
> This context factory can be used either for client or server connections, as
> shown below.
>
> If you are doing anything interesting with SSL, you might want to have a
> look at the source in the file twisted/internet/_sslverify.py, especially
> the other (undocumented) methods of PrivateCertificate, which implements a
> bit of CA functionality.
>
> >Is there some great documentation out there about how to do this with
> >twisted.internet.ssl that I'm missing?
>
> Nope.  The documentation here is particularly thin, and to make matters
> work, there are certain operations that are unsupported due to bugs or
> non-wrapped functions in pyopenssl.
>
> Please feel free to file a more specific documentation bug (and feel
> _double_ free to attach a patch) to add docstrings to _sslverify, and
> probably a separate bug to add an introductory document.
>
> I'm a big fan of complete runnable examples, so here's something to get you
> started.  Hope that this helps:
>
> --- cut here ---
>
> from sys import stdout, argv
>
> from twisted.python.filepath import FilePath
> from twisted.python.log import startLogging
>
> from twisted.internet.protocol import Protocol, Factory, ClientFactory
>
> from twisted.internet import reactor
> from twisted.internet.ssl import PrivateCertificate
>
> class MyProto(Protocol):
>     def connectionMade(self):
>         self.transport.write(self.factory.stuff)
>     def dataReceived(self, data):
>         stdout.write('Received %r\n' % (data,))
>
> theCert = PrivateCertificate.loadPEM(file('server.pem','r').read())
> theOptions = theCert.options(theCert)
>
> def server():
>     f = Factory()
>     f.stuff = 'hello, client'
>     f.protocol = MyProto
>     reactor.listenSSL(7080, f, theOptions)
>
> def client():
>     f = ClientFactory()
>     f.stuff = 'hello, server'
>     f.protocol = MyProto
>     reactor.connectSSL('localhost', 7080, f, theOptions)
>
> def main():
>     startLogging(stdout)
>     if argv[1] == 'server':
>         server()
>     else:
>         client()
>     reactor.run()
>
> if __name__ == '__main__':
>     main()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From einar.twisted at norsk-esport.no  Wed May  2 09:02:53 2007
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?=22Einar_S=2E_Ids=F8=22?=)
Date: Wed, 02 May 2007 17:02:53 +0200
Subject: [Twisted-Python] client side cert?
In-Reply-To: <18e3f33d0705020724s43b7bb37n2d9998ca1ee1af73@mail.gmail.com>
References: <18e3f33d0705012130q627492a9v3973f634580d7b04@mail.gmail.com>
	<20070502051518.18153.1548289072.divmod.xquotient.278@joule.divmod.com>
	<18e3f33d0705020724s43b7bb37n2d9998ca1ee1af73@mail.gmail.com>
Message-ID: <4638A81D.5020408@norsk-esport.no>

Eli Criffield wrote:
> Thats a huge help. I'll see how far i can get with this. I'll write a
> short doc how to do client side cert verification once i get it
> working. And some docstrings if i can figure them out.

I for one would be very interested in seeing some documentation and if
possible example code on getting this working as it is something I plan
on adding to my application at a later stage. Appreciate anything you
can share on this :)

Thanks,
Einar



From Sven-Erik.Tiberg at ltu.se  Thu May  3 02:42:46 2007
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Thu, 3 May 2007 10:42:46 +0200
Subject: [Twisted-Python] UDP some Q's
In-Reply-To: <4636D09A.9000202@thiengineering.ch>
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB910565BF81@EMMA.personal.adp.ltu.se>

Background; working on a two node simulation system using X3D
(www.h3d.org ) and simulink (www.mathworks.org) also CarSim
(www.carsim.com) using simulink in the future.

Made a first code suggestion on transmit / recive UDP. Se attached file
trancive_UDP.py
Used time. to restrict the transmit rate. Doesn't matter if I lose some
state update, 50 updates / second are enough for perception of a smooth
motion. Have to work on events from mouse click to togle them on for 0.2
second.
 
Don't know how to access objects from the main module in the classes in
the lib module.
The tricky part as I see it are ( part of from transive_UDP.py ):
# ------------------------------------------------------------------
 def datagramRecived(self, data):
        count = 0
        data_str = string.split(data)
        for recive_items in data_str:
            __main__.recived_data[ count ] = float( recive_items )
            count = count +1           
        __main__.update_on_recive()

#-----------------------------------------------------------------
The problems are that I need to update __main__.recive.dada before
calling __main__.updat_on_recive().

Second how to access the  .send_UDP from the __main__ module.

/Sven-Erik Tiberg
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trancive_UDP.py
Type: application/octet-stream
Size: 1611 bytes
Desc: trancive_UDP.py
URL: </pipermail/twisted-python/attachments/20070503/d30de264/attachment-0002.obj>

From glyph at divmod.com  Thu May  3 03:16:36 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 03 May 2007 09:16:36 -0000
Subject: [Twisted-Python] UDP some Q's
In-Reply-To: <668D1B8AD729C94DB91D17EC19B8BB910565BF81@EMMA.personal.adp.ltu.se>
References: <4636D09A.9000202@thiengineering.ch>
	<668D1B8AD729C94DB91D17EC19B8BB910565BF81@EMMA.personal.adp.ltu.se>
Message-ID: <20070503091636.18153.1714562903.divmod.xquotient.343@joule.divmod.com>

On 08:42 am, sven-erik.tiberg at ltu.se wrote:
>Don't know how to access objects from the main module in the classes in
>the lib module.
>The tricky part as I see it are ( part of from transive_UDP.py ):
># ------------------------------------------------------------------
>def datagramRecived(self, data):
>        count = 0
>        data_str = string.split(data)
>        for recive_items in data_str:
>            __main__.recived_data[ count ] = float( recive_items )
>            count = count +1
>        __main__.update_on_recive()
>
>#-----------------------------------------------------------------
>The problems are that I need to update __main__.recive.dada before
>calling __main__.updat_on_recive().

There is no Twisted API or special technique that you need to use.  Just 
create your objects with references to all the objects they need to 
manipulate.

For example, in main.py, instead of:

    reactor.listenUDP(self.port, transive_udp('...',2345, 0.05 ))

just do:

    reactor.listenUDP(self.port, transive_udp('...', 2345, 0.05, 
recive_data))

and then add an argument to transive_udp's constructor to refer to the 
data.
>Second how to access the  .send_UDP from the __main__ module.

Similarly, you can keep a reference to transive_udp object in the main 
module.

I might be able to comment more except the attached example is full of 
errors and will not even import.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070503/33de1faa/attachment.html>

From wthie at thiengineering.ch  Thu May  3 04:45:56 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Thu, 03 May 2007 12:45:56 +0200
Subject: [Twisted-Python] latest trunk revision breaks twistd utility on MSW
In-Reply-To: <79BBCF3C-2512-4F0A-B837-4DA0CD102086@gravina.com>
References: <20070321001953.GF29606@mithrandi.za.net>
	<79BBCF3C-2512-4F0A-B837-4DA0CD102086@gravina.com>
Message-ID: <4639BD64.1040802@thiengineering.ch>

Just checked out trunk of nevow and stumbled over the following

...snip
   ...\nevow\testutil.py", line 5, in <module>
     from popen2 import Popen3
exceptions.ImportError: cannot import name Popen3

when using twistd for starting processes.

As per documentation '17.4 popen2' Popen3 and Popen4 are only available 
on Unix.

Thxs, Werner

THIEngineering AG
Florenstrasse 21A
8405 Winterthur
Switzerland

Tel +41 52 238 12 50





From Sven-Erik.Tiberg at ltu.se  Thu May  3 13:11:58 2007
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Thu, 3 May 2007 21:11:58 +0200
Subject: [Twisted-Python] UDP some Q's
References: <4636D09A.9000202@thiengineering.ch><668D1B8AD729C94DB91D17EC19B8BB910565BF81@EMMA.personal.adp.ltu.se>
	<20070503091636.18153.1714562903.divmod.xquotient.343@joule.divmod.com>
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB9104E84BCA@EMMA.personal.adp.ltu.se>

Thanks 
working on it.
found some fault and learned a lot.
/BG
Sven-Erik
 

________________________________

From: twisted-python-bounces at twistedmatrix.com on behalf of glyph at divmod.com
Sent: Thu 5/3/2007 11:16 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] UDP some Q's


On 08:42 am, sven-erik.tiberg at ltu.se wrote:

>Don't know how to access objects from the main module in the classes in
>the lib module.
>The tricky part as I see it are ( part of from transive_UDP.py ):
># ------------------------------------------------------------------
> def datagramRecived(self, data):
>        count = 0
>        data_str = string.split(data)
>        for recive_items in data_str:
>            __main__.recived_data[ count ] = float( recive_items )
>            count = count +1
>        __main__.update_on_recive()
>
>#-----------------------------------------------------------------
>The problems are that I need to update __main__.recive.dada before
>calling __main__.updat_on_recive().

There is no Twisted API or special technique that you need to use.  Just create your objects with references to all the objects they need to manipulate.

For example, in main.py, instead of:

    reactor.listenUDP(self.port, transive_udp('...',2345, 0.05 ))

just do:

    reactor.listenUDP(self.port, transive_udp('...', 2345, 0.05, recive_data))

and then add an argument to transive_udp's constructor to refer to the data.

>Second how to access the  .send_UDP from the __main__ module.

Similarly, you can keep a reference to transive_udp object in the main module.

I might be able to comment more except the attached example is full of errors and will not even import.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 4770 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070503/757aae42/attachment-0002.bin>

From rampeters at gmail.com  Thu May  3 19:14:50 2007
From: rampeters at gmail.com (Ram Peters)
Date: Thu, 3 May 2007 21:14:50 -0400
Subject: [Twisted-Python] Twisted sAsync Help
Message-ID: <81b45360705031814p2b3e0302p11ca9e89d00795ed@mail.gmail.com>

I have already created tables in the database.  How do I use the table
using sAsync and introsception?

Something like this:
Profile = Table('Profile', BoundMetaData(mysql_db), autoload=True)

Thank you.



From itamar at itamarst.org  Fri May  4 09:44:34 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 04 May 2007 11:44:34 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r20190 - How to be totally
	awesome and strict and great in one lesson
In-Reply-To: <E1HjzvS-0006eu-00@wolfwood>
References: <E1HjzvS-0006eu-00@wolfwood>
Message-ID: <1178293474.32000.0.camel@localhost.localdomain>

Maybe we should add some utility code to trial for asserting
deprecation?




From exarkun at twistedmatrix.com  Sat May  5 22:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 May 2007 04:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1178424301.72.1354155533@twistedmatrix.com

Bug summary
______________________
Summary for 2007-04-29 through 2007-05-06
Bugs opened: 21    Bugs closed: 15  Total open bugs: 932 (+6)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +2  |Highest:  -1          |Conch:     +1          
|Enhancement:  +6  |Normal:  +10          |Core:      +3          
|Task:         +1                         |Ftp:       -1          
                                          |Pydoctor:  +2          
                                          |Trial:     +2          
                                          |Web:       -1          
                                          |Web2:      +1          
                                          |Words:     +2          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2610] addCleanup method on TestCase to allow for easier tear down. (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2610

[#2613] Provide easy way to create an XMPP response stanza. (opened by ralphm) (CLOSED, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2613

[#2615] Fully parse XMPP stream header (opened by ralphm) (CLOSED, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2615

[#2616] Event dispatching in Xish should trap errors (opened by ralphm) (CLOSED, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2616

[#2617] Add support for incoming XML streams and non-reconnecting client factories. (opened by ralphm)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2617

[#2622] Undocumented objects summary is always empty (opened by mithrandi) (CLOSED, fixed)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2622

[#739 ] Type enforcement for twisted.python.usage (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/739

[#2586] twisted.python.logfile.LogFile's defaultMode parameter is undocumented, untested, insecure (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2586

[#2616] Event dispatching in Xish should trap errors (opened by ralphm) (CLOSED, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2616

                    ===== Normal =====
[#2611] Protocols in twisted.protocols.basic use O(n**2) complexity (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2611

[#2612] Deferreds not returned in web2 test_wsgi (opened by karlb)
    defect          web2       http://twistedmatrix.com/trac/ticket/2612

[#2614] Responding with an error to an XMPP stanza with partial addressing fails. (opened by ralphm) (CLOSED, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2614

[#2618] Have Xish STREAM_END_EVENT carry the reason Failure. (opened by ralphm)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2618

[#2619] t.conch.ssh.filetransfer doesn't support SFTP v6 (opened by z3p)
    task            conch      http://twistedmatrix.com/trac/ticket/2619

[#2620] distribution needs fixups for "setup.py bdist_rpm" (opened by mengel) (CLOSED, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2620

[#2621] pydoctor's handling of duplicate names needs a rethink (opened by mithrandi)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/2621

[#2623] Only first value of multi-value parameter tilde-expanded (opened by mithrandi)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2623

[#2624] Cannot rename an osfs resource if the target name is inside an adhoc directory (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2624

[#2625] urlpath doesn't do any quoting (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/2625

[#2626] trial needs something to check DeprecationWarning (opened by therve)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2626

[#2627] twisted/internet/udp.py doesn't handle ECONNRESET from recvfrom() on cygwin (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2627



Closed Bugs
______________________
                    ===== Highest =====
[#1575] twisted.protocols.ftp.FTP.ftp_STOR() does not handle anonymous requests gracefully (opened by grimmtooth, closed by therve, fixed)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1575

[#739 ] Type enforcement for twisted.python.usage (opened by itamarst, closed by therve, )
    enhancement     core       http://twistedmatrix.com/trac/ticket/739

[#1351] log observer bridging to python logging facility (opened by ctheune, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1351

[#2609] Namespace issues with prefixes reuse in twisted.words.xish. (opened by ralphm, closed by ralphm, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2609

[#1832] test_threads.ReactorThreadsTestCase is very fragile (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1832

[#2297] Make rebuild.latestClass more compliant with new style classes (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2297

[#2505] twisted.xmlrpc.XMLRPC.render need more error handling (opened by yasusii, closed by therve, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2505

[#2586] twisted.python.logfile.LogFile's defaultMode parameter is undocumented, untested, insecure (opened by exarkun, closed by therve, )
    defect          core       http://twistedmatrix.com/trac/ticket/2586

[#2615] Fully parse XMPP stream header (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2615

[#2613] Provide easy way to create an XMPP response stanza. (opened by ralphm, closed by ralphm, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2613

[#2622] Undocumented objects summary is always empty (opened by mithrandi, closed by mwh, fixed)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2622

[#2616] Event dispatching in Xish should trap errors (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2616

[#2616] Event dispatching in Xish should trap errors (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2616

                    ===== Normal =====
[#2620] distribution needs fixups for "setup.py bdist_rpm" (opened by mengel, closed by exarkun, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2620

[#2614] Responding with an error to an XMPP stanza with partial addressing fails. (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2614





From eprparadocs at gmail.com  Sun May  6 09:53:13 2007
From: eprparadocs at gmail.com (Chaz.)
Date: Sun, 06 May 2007 11:53:13 -0400
Subject: [Twisted-Python] Question about twisted.web
Message-ID: <463DF9E9.5090601@gmail.com>

I have two questions about twisted.web that I am hoping someone can 
assist on. First, if I connect to my service via HTTPS how can I get the 
certificate of the client (I require them to have a certificate)? 
Secondly, how can I get the name or IP address of the machine that is 
talking to me?

Thanks,
Chaz



From jacob at internet24.de  Mon May  7 02:09:22 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Mon, 07 May 2007 10:09:22 +0200
Subject: [Twisted-Python] Question about twisted.web
In-Reply-To: <463DF9E9.5090601@gmail.com>
References: <463DF9E9.5090601@gmail.com>
Message-ID: <1178525362.5814.12.camel@enterprise>


1. (client cert)

Probably with the following class method, but I've never used it myself:

http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.Certificate.html#peerFromTransport


2. (client ip)

http://twistedmatrix.com/documents/current/api/twisted.web.http.Request.html

class Res(resource.Resource):
   def render_GET(self, request):
        request.getClientIP()



On Sun, 2007-05-06 at 11:53 -0400, Chaz. wrote:
> I have two questions about twisted.web that I am hoping someone can 
> assist on. First, if I connect to my service via HTTPS how can I get the 
> certificate of the client (I require them to have a certificate)? 
> Secondly, how can I get the name or IP address of the machine that is 
> talking to me?
> 
> Thanks,
> Chaz
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20070507/4a4fee39/attachment.sig>

From BRADLEY.S.GASPARD at saic.com  Mon May  7 09:32:55 2007
From: BRADLEY.S.GASPARD at saic.com (Gaspard, Bradley S.)
Date: Mon, 7 May 2007 11:32:55 -0400
Subject: [Twisted-Python] Resending a UDP datagram if a response is not
	received
Message-ID: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C7B@0015-its-exmb02.us.saic.com>

I am trying to write a client to an existing UDP server that requires a couple of data exchanges before the transaction is complete. Should any of the client's requests go unanswered I would like to resend the request after a timeout period. Perhaps something could be done with reactor.callLater to see if a response had been received but is there a better way to do this?

Any pointers/examples would be greatly appreciated. TCP is not an option.

Brad

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070507/168e9746/attachment.html>

From exarkun at divmod.com  Mon May  7 09:45:58 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 May 2007 11:45:58 -0400
Subject: [Twisted-Python] Resending a UDP datagram if a response is not
	received
In-Reply-To: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C7B@0015-its-exmb02.us.saic.com>
Message-ID: <20070507154558.19381.158731967.divmod.quotient.9716@ohm>

On Mon, 7 May 2007 11:32:55 -0400, "Gaspard, Bradley S." <bradley.s.gaspard at saic.com> wrote:
>I am trying to write a client to an existing UDP server that requires a couple of data exchanges before the transaction is complete. Should any of the client's requests go unanswered I would like to resend the request after a timeout period. Perhaps something could be done with reactor.callLater to see if a response had been received but is there a better way to do this?

That sounds like just the way to go about it.

>
>Any pointers/examples would be greatly appreciated. TCP is not an option.

You might want to take a look at the retry logic in the DNS client in
twisted.names.client.

Jean-Paul



From fairwinds at eastlink.ca  Mon May  7 10:26:36 2007
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 07 May 2007 13:26:36 -0300
Subject: [Twisted-Python] Getting multiservice from running reactor
Message-ID: <463F533C.5000106@eastlink.ca>

Can someone advise if it possible to obtain a service or multiservice
object from the reactor object. I am interested in status of services in 
multiservice. Many thanks.

Regards,
David



From exarkun at divmod.com  Mon May  7 10:51:33 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 May 2007 12:51:33 -0400
Subject: [Twisted-Python] Getting multiservice from running reactor
In-Reply-To: <463F533C.5000106@eastlink.ca>
Message-ID: <20070507165133.19381.852950918.divmod.quotient.9747@ohm>

On Mon, 07 May 2007 13:26:36 -0300, David Pratt <fairwinds at eastlink.ca> wrote:
>Can someone advise if it possible to obtain a service or multiservice
>object from the reactor object. I am interested in status of services in 
>multiservice. Many thanks.

There isn't necessarily a MultiService associated with the reactor, or
there may be several.  Most likely, whichever code you have which is
interested in the state of a service should already have a reference
to it, so it can just check directly.

Jean-Paul



From fairwinds at eastlink.ca  Mon May  7 13:08:25 2007
From: fairwinds at eastlink.ca (fairwinds at eastlink.ca)
Date: Mon, 07 May 2007 16:08:25 -0300
Subject: [Twisted-Python] Getting multiservice from running reactor
In-Reply-To: <20070507165133.19381.852950918.divmod.quotient.9747@ohm>
References: <463F533C.5000106@eastlink.ca>
	<20070507165133.19381.852950918.divmod.quotient.9747@ohm>
Message-ID: <f76ea58d1a6f4.463f4ef9@eastlink.ca>

Hi Jean Paul. Yes, normally this is the case for sure.  In this case, however, this is zope 3's  startup and I cannot get a handle on the multiservice after zope bootstraps. I am interested in adding services to running reactor with some control on starting and stopping them.  Is it not possible to determine what services the reactor is operating on another way. Many thanks.

Regards,
David

----- Original Message -----
From: Jean-Paul Calderone <exarkun at divmod.com>
Date: Monday, May 7, 2007 1:51 pm
Subject: Re: [Twisted-Python] Getting multiservice from running reactor

> On Mon, 07 May 2007 13:26:36 -0300, David Pratt 
> <fairwinds at eastlink.ca> wrote:
> >Can someone advise if it possible to obtain a service or multiservice
> >object from the reactor object. I am interested in status of 
> services in 
> >multiservice. Many thanks.
> 
> There isn't necessarily a MultiService associated with the reactor, or
> there may be several.  Most likely, whichever code you have which is
> interested in the state of a service should already have a reference
> to it, so it can just check directly.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From exarkun at divmod.com  Mon May  7 13:30:31 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 May 2007 15:30:31 -0400
Subject: [Twisted-Python] Getting multiservice from running reactor
In-Reply-To: <f76ea58d1a6f4.463f4ef9@eastlink.ca>
Message-ID: <20070507193031.19381.787395314.divmod.quotient.9821@ohm>

On Mon, 07 May 2007 16:08:25 -0300, fairwinds at eastlink.ca wrote:
>Hi Jean Paul. Yes, normally this is the case for sure.  In this case, however, this is zope 3's  startup and I cannot get a handle on the multiservice after zope bootstraps. I am interested in adding services to running reactor with some control on starting and stopping them.  Is it not possible to determine what services the reactor is operating on another way. Many thanks.

You should probably make a feature request of the Zope 3 developers.  They
should offer a way to get the IApplication (or IService or whatever) that
their setup code creates.  If they aren't willing to do this (I don't see
why they wouldn't be), then maybe you can think of ways to discover it,
but any such way is going to be pretty hackish and an official Zope 3 API
would be preferable.

Jean-Paul



From fairwinds at eastlink.ca  Mon May  7 20:48:05 2007
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 07 May 2007 23:48:05 -0300
Subject: [Twisted-Python] Getting multiservice from running reactor
In-Reply-To: <20070507193031.19381.787395314.divmod.quotient.9821@ohm>
References: <20070507193031.19381.787395314.divmod.quotient.9821@ohm>
Message-ID: <463FE4E5.8000707@eastlink.ca>

Thanks Jean-Paul. I agree. I brought this up on Zope3-dev list about a 
week ago but it is sort of quiet on the list so no +1  or -1. I 
recommended a utility that could be accessed following bootstrapping to 
obtain the multiservice object or any other app There are already 
methods available in twisted for handling it afterwards. I'll likely try 
this again. Many thanks.

Regards,
David

Jean-Paul Calderone wrote:
> On Mon, 07 May 2007 16:08:25 -0300, fairwinds at eastlink.ca wrote:
>> Hi Jean Paul. Yes, normally this is the case for sure.  In this case, 
>> however, this is zope 3's  startup and I cannot get a handle on the 
>> multiservice after zope bootstraps. I am interested in adding services 
>> to running reactor with some control on starting and stopping them.  
>> Is it not possible to determine what services the reactor is operating 
>> on another way. Many thanks.
> 
> You should probably make a feature request of the Zope 3 developers.  They
> should offer a way to get the IApplication (or IService or whatever) that
> their setup code creates.  If they aren't willing to do this (I don't see
> why they wouldn't be), then maybe you can think of ways to discover it,
> but any such way is going to be pretty hackish and an official Zope 3 API
> would be preferable.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From wthie at thiengineering.ch  Tue May  8 01:57:21 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 08 May 2007 09:57:21 +0200
Subject: [Twisted-Python] Distinguishing several open Firefox/Opera windows
 authorized in same realm 
Message-ID: <46402D61.9020200@thiengineering.ch>

Can someone advise if it is possible to distinguish two open 
Firefox/Opera windows authorized for the same realm?

Many thanks, Werner



From chaks.yoper at gmail.com  Wed May  9 19:42:43 2007
From: chaks.yoper at gmail.com (Chakkaradeep C C)
Date: Thu, 10 May 2007 13:42:43 +1200
Subject: [Twisted-Python] SSL Server and Client
Message-ID: <a54a308e0705091842j6af60fb2h859e86c6ff467d67@mail.gmail.com>

Hi,

I am trying out this
example<http://twistedmatrix.com/pipermail/twisted-python/2007-May/015325.html>to
start with twisted and ssl

I generated my certificate by the command,

openssl genrsa -des3 -out server.pem 1024

When I execute the program, I get this error,

chaks at chaks-laptop:~/LDMS$ python twisted-ssl.py
Enter PEM pass phrase:
Traceback (most recent call last):
  File "twisted-ssl.py", line 17, in <module>
    theCert = PrivateCertificate.loadPEM(file('server.pem','r').read())
  File "/usr/lib/python2.5/site-packages/twisted/internet/_sslverify.py",
line 584, in loadPEM
    crypto.FILETYPE_PEM)
  File "/usr/lib/python2.5/site-packages/twisted/internet/_sslverify.py",
line 561, in load
    return Class._load(data, format)._setPrivateKey(privateKey)
  File "/usr/lib/python2.5/site-packages/twisted/internet/_sslverify.py",
line 395, in load
    return Class(crypto.load_certificate(format, requestData), *args)
OpenSSL.crypto.Error: [('PEM routines', 'PEM_read_bio', 'no start line')]

What am i doing wrong ? Am i missing something here ?

Thanks.

-- 
Regards,
C.C.Chakkaradeep,
http://chakkaradeep.net
--
"Sometimes it's better not to ask - or to listen - when people tell you
something can't be done. I didnt ask for permission or approval. I just went
ahead and did it."  - from "Direct from Dell"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070510/91347986/attachment.html>

From glyph at divmod.com  Wed May  9 23:35:40 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 10 May 2007 05:35:40 -0000
Subject: [Twisted-Python] SSL Server and Client
In-Reply-To: <a54a308e0705091842j6af60fb2h859e86c6ff467d67@mail.gmail.com>
References: <a54a308e0705091842j6af60fb2h859e86c6ff467d67@mail.gmail.com>
Message-ID: <20070510053540.18153.1027763447.divmod.xquotient.734@joule.divmod.com>


On 01:42 am, chaks.yoper at gmail.com wrote:
>I generated my certificate by the command,
>
>openssl genrsa -des3 -out server.pem 1024

This command does not generate a certificate.  It creates a private key. 
The error you are getting from Twisted is simply telling you that there 
is no certificate in the file you're trying to load.  Apologies for the 
obscure error message, we're just passing through what pyopenssl says, 
which is the same as what the openssl library says.

You might want to post to one of those lists instead; while we can help 
with Twisted APIs for doing SSL, those would be better places to seek 
help with the OpenSSL tools themselves.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070510/98f477f2/attachment.html>

From lacrymology at gmail.com  Thu May 10 07:03:38 2007
From: lacrymology at gmail.com (Tomas Neme)
Date: Thu, 10 May 2007 10:03:38 -0300
Subject: [Twisted-Python] StdIO forwarding server
Message-ID: <2e6659dd0705100603r2ade9550ue2c1ffd0ff200381@mail.gmail.com>

I need to write a server that receives a command through stdIO and
forwards it to all of its clients. So far I've been able to create and
mantain a list of clients, but I can't send the message to all of
them.

This might be confusing, I think I have a completely wrong approach. I
used the echoclient.py example from O'Reilly's Network Programming
Essentials, and simply changed the ClientFactory to a ServerFactory,
added a clients list and changed

def dataReceived(self,data):
    self.output.write(data)

to

def dataReceived(self,data):
    for c in self.factory.clients:
        c.output.write(data)

but for some reason this comes out to the server's StdIO instead of the client's

can anyone give me some tip?

-- 
|_|0|_|
|_|_|0|
|0|0|0|



From matt at zgroupplc.com  Thu May 10 07:59:31 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Thu, 10 May 2007 14:59:31 +0100
Subject: [Twisted-Python] StdIO forwarding server
In-Reply-To: <2e6659dd0705100603r2ade9550ue2c1ffd0ff200381@mail.gmail.com>
References: <2e6659dd0705100603r2ade9550ue2c1ffd0ff200381@mail.gmail.com>
Message-ID: <4DAEA848-BF12-4538-B646-2D62F48B5DBD@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Tomas,

If the clients are already connected, you should just be able send  
your data as you describe.

If your clients are not connected to the server, your server factory  
should be hosted by the client and it should listen for incoming  
requests by your actual server.

Remember, the server factory creates a Protocol instance for *every*  
client connected to it. What this means is that you will have one  
server factory instance that listens for incoming connections. When a  
connection occurs, ServerFactory.buildProtocol will be called,  
creating a Protocol instance for that connection. Your protocol class  
should take the form of a state machine that copes with being in a  
listening or transmitting state. The other alternative is to use two  
Protocol classes, one for the server and one for the client.

Having little experience of twisted and network programming in  
general, it took a while for that to dawn on me. Hopefully I have  
grasped it correctly, if not, I am sure that others on the list will  
correct me :)

Hope that helps,

Matt

On 10 May 2007, at 14:03, Tomas Neme wrote:

> I need to write a server that receives a command through stdIO and
> forwards it to all of its clients. So far I've been able to create and
> mantain a list of clients, but I can't send the message to all of
> them.
>
> This might be confusing, I think I have a completely wrong approach. I
> used the echoclient.py example from O'Reilly's Network Programming
> Essentials, and simply changed the ClientFactory to a ServerFactory,
> added a clients list and changed
>
> def dataReceived(self,data):
>    self.output.write(data)
>
> to
>
> def dataReceived(self,data):
>    for c in self.factory.clients:
>        c.output.write(data)
>
> but for some reason this comes out to the server's StdIO instead of  
> the client's
>
> can anyone give me some tip?
>
> -- 
> |_|0|_|
> |_|_|0|
> |0|0|0|
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGQyVGyI6MkdKPngkRAgl1AKCzWua9rxmOnryL0XVSdAuwQLsb/gCcDasa
eKcyhV01VDpBGBGuI4YVssE=
=G9nQ
-----END PGP SIGNATURE-----



From jml at mumak.net  Thu May 10 21:33:16 2007
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 11 May 2007 13:33:16 +1000
Subject: [Twisted-Python] Hacking in Bazaar
Message-ID: <d06a5cd30705102033m64d68aadmdf921a89b8e3c3e2@mail.gmail.com>

Hey guys,

I've got a couple of longish flights coming up and I'd like to spend
at least some of the flight time contributing to Twisted.

Thing is, I'd like to be able to use some version control while I'm
working. Call me crazy. My plan is to branch off the Bazaar import at
https://code.launchpad.net/~vcs-imports/twisted/main, make changes,
then make SVN branches when I get back to the internet.

Sound good? Is there anything related to UQDS or Twisted's processes
that I should know now?

cheers,
jml



From radix at twistedmatrix.com  Thu May 10 21:46:36 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 10 May 2007 23:46:36 -0400
Subject: [Twisted-Python] Hacking in Bazaar
In-Reply-To: <d06a5cd30705102033m64d68aadmdf921a89b8e3c3e2@mail.gmail.com>
References: <d06a5cd30705102033m64d68aadmdf921a89b8e3c3e2@mail.gmail.com>
Message-ID: <60ed19d40705102046h6609bd3biaee039b5290e92b6@mail.gmail.com>

On 5/10/07, Jonathan Lange <jml at mumak.net> wrote:
> Hey guys,
>
> I've got a couple of longish flights coming up and I'd like to spend
> at least some of the flight time contributing to Twisted.
>
> Thing is, I'd like to be able to use some version control while I'm
> working. Call me crazy. My plan is to branch off the Bazaar import at
> https://code.launchpad.net/~vcs-imports/twisted/main, make changes,
> then make SVN branches when I get back to the internet.
>
> Sound good? Is there anything related to UQDS or Twisted's processes
> that I should know now?

Given that we accept patches at the very least, you can use tissue
paper for all anybody cares as long as the end result is a patch we
can apply or branch that we can merge.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andrewfr_ice at yahoo.com  Fri May 11 11:39:57 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 11 May 2007 10:39:57 -0700 (PDT)
Subject: [Twisted-Python] A Solution Re: [Stackless] Advice on Debugging
	Stackless/Twisted Problem
In-Reply-To: <mailman.3.1177495202.8620.stackless@stackless.com>
Message-ID: <62138.73968.qm@web34201.mail.mud.yahoo.com>

Hello Colleagues:

Earlier I posted that I was having a problem involving
the loss of deferred calls in a programme that uses
Stackless and Twisted. I found the problem and wrote a
solution. I think it interesting.

It helped when I started using the Twisted logging
facility :-)

The immediate reason the deferred were "lost" was
because the main reactor loop stopped iterating.

What happened was:

1. In the example, Stackless treats Twisted as a
tasklet. 

see:
http://www.stackless.com/pipermail/stackless/2007-April/002448.html

2. When the Request Handler is created, it is running
as a *part* of the Twisted tasklet. 

3. Consequently when the Request Handler blocked on a
channel, this blocked the entire reactor! In turn, 
doIteration() (doSelect) cannot do its work. Twisted
grinds to a halt. 

4. When the last tasklet (TestTasklet) blocked, all
the tasklets became blocked. Consequently the
programme ended. 

The solution was two-fold.

1) To prevent the reactor from blocking, I run the
request handler in its own tasklet. This prevents the
reactor from blocking for indeterminate periods of
time.

2) I modified doSelect to call stackless.schedule().
If the reactor does not call stackless.schedule(),
other tasklets will not get an opportunity to run.

(When I have time, I will write a proper reactor. This
should be a little more than overriding the
doIteration() method of selectReactor). Or re-read the
Blocking demo : I don't quite understand how it works)

With this approach, I 

1) Eliminate a OS-Thread (both Stackless and Twisted
folks concur that this is wrong, wrong, wrong).

2) Can execute tasklets in parallel with tasklets that
are blocked waiting for network I/O like an incoming
HTTP request.

I think it is neat that the Twisted framework is
flexible enough to be contorted in this fashion.
Unfortunately this approach is *very* slow. I feel it 
is wastefully that a tasklet is created for every
incoming request. I have to work on this. 

~

I understand the subset of Stackless and Twisted users
is small. And the philosophies are different. And what
I am doing is a bit esoteric and application specific.
Hopefully others will be able to build upon this : I
don't see why programmers can't get the best of the
Stackless and Twisted worlds.

Cheers,
Andrew 








       
____________________________________________________________________________________Yahoo! oneSearch: Finally, mobile search 
that gives answers, not web links. 
http://mobile.yahoo.com/mobileweb/onesearch?refer=1ONXIC
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Solution.py
Type: text/x-python
Size: 9599 bytes
Desc: 2700386180-Solution.py
URL: </pipermail/twisted-python/attachments/20070511/7f2c3259/attachment-0002.py>

From itamar at itamarst.org  Fri May 11 11:46:48 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 11 May 2007 13:46:48 -0400 (EDT)
Subject: [Twisted-Python] A Solution Re: [Stackless] Advice on 
	Debugging Stackless/Twisted Problem
In-Reply-To: <62138.73968.qm@web34201.mail.mud.yahoo.com>
References: <mailman.3.1177495202.8620.stackless@stackless.com>
	<62138.73968.qm@web34201.mail.mud.yahoo.com>
Message-ID: <58358.63.107.91.99.1178905608.squirrel@webmail.zoteca.com>

> 2) I modified doSelect to call stackless.schedule().
> If the reactor does not call stackless.schedule(),
> other tasklets will not get an opportunity to run.

Why not just use twisted.internet.task.LoopingCall?




From elicriffield at gmail.com  Fri May 11 14:36:07 2007
From: elicriffield at gmail.com (Eli Criffield)
Date: Fri, 11 May 2007 15:36:07 -0500
Subject: [Twisted-Python] SSL Cert Verification howto
Message-ID: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>

I was going to post to the twisted wiki, but apparently there isn't one?

 So here is how I made a twisted based xmlrpc client and server that do
all verification via SSL Certs.

 The model works like this, the RPC Server accepts all requests from
 anyone who connects with a cert signed by the CA it trusts.  The client
 verifies the server is valid because the server's cert is signed by the
 CA the client trusts.

 Some kind of key verification is the way to go if servers need to
 authenticate other servers.  Any password would have to be stored in a
 file somewhere.

 Once you have an authenticated server-to-server rpc connection there's
 no need to only show some functions to some servers and some to
 others.  You're in charge of both server and client, so you're trusted as
 a local superuser at that point.

 A base authentication model like this would work great for a
 centralized network management protocol, very much like how Puppet
 works, or a "Super Cron" that might do things like check workload and
 send scheduled jobs to places that can handle it.  You could work in a
 different request handler to http put files and use it to distribute
 files or even distribute files then execute a job to process them --
any kind of server-to-server automation, really.

 Here's how you set it up...

 Openssl packages have a script called CA.sh that's for demonstrating
 how to manage a CA. You will be the CA, anything you bless with your
 signature might as well have the root password.

 You'll want to customize the CA.sh script and the openssl.conf for
 your setup, but it will work something like this:

 # Make a new CA, it makes a private key and a public key then signs
 # the public key with its own private key (a signed public key is a
 # cert)
 CA.sh -newca

 # This makes a private key and a public key, the public key is what
 # you need to sign to make a cert
 CA.sh -newreq

 # This makes signs the public key you just created
 CA.sh -sign

 # Combine the private key and the signed public key (The Cert) and you
 # have the pem file needed for your program
 cat newkey.pem newcert.pem > server.pem
 # Don't need these anymore
 rm newcert.pem  newkey.pem  newreq.pem

 # same for the client key
 CA.sh -newreq
 CA.sh -sign
 cat newkey.pem newcert.pem > client.pem
 rm newcert.pem  newkey.pem  newreq.pem

 # the cacert.pem is what we use to check if the person connecting is
 # friend or foe
 cp demoCA/cacert.pem .


 --- the code ---

 #!/usr/bin/env python
 import sys
 from twisted.web import xmlrpc, server
 from twisted.internet import reactor, ssl
 from twisted.python import log

 def makeSSLContext(myKey,trustedCA):
     '''Returns an ssl Context Object
    @param myKey a pem formated key and certifcate with for my current host
           the other end of this connection must have the cert from the CA
           that signed this key
    @param trustedCA a pem formated certificat from a CA you trust
           you will only allow connections from clients signed by this CA
           and you will only allow connections to a server signed by this CA
     '''

     # our goal in here is to make a SSLContext object to pass to connectSSL
     # or listenSSL

     # Why these functioins... Not sure...
     fd = open(myKey,'r')
     theCert = ssl.PrivateCertificate.loadPEM(fd.read())
     fd.close()
     fd = open(trustedCA,'r')
     theCA = ssl.Certificate.loadPEM(fd.read())
     fd.close()
     ctx = theCert.options(theCA)

     # Now the options you can set look like Standard OpenSSL Library options

     # The SSL protocol to use, one of SSLv23_METHOD, SSLv2_METHOD,
     # SSLv3_METHOD, TLSv1_METHOD. Defaults to TLSv1_METHOD.
     ctx.method = ssl.SSL.TLSv1_METHOD

     # If True, verify certificates received from the peer and fail
     # the handshake if verification fails. Otherwise, allow anonymous
     # sessions and sessions with certificates which fail validation.
     ctx.verify = True

     # Depth in certificate chain down to which to verify.
     ctx.verifyDepth = 1

     # If True, do not allow anonymous sessions.
     ctx.requireCertification = True

     # If True, do not re-verify the certificate on session resumption.
     ctx.verifyOnce = True

     # If True, generate a new key whenever ephemeral DH parameters are used
     # to prevent small subgroup attacks.
     ctx.enableSingleUseKeys = True

     # If True, set a session ID on each context. This allows a shortened
     # handshake to be used when a known client reconnects.
     ctx.enableSessions = True

     # If True, enable various non-spec protocol fixes for broken
     # SSL implementations.
     ctx.fixBrokenPeers = False

     return ctx


 class Example(xmlrpc.XMLRPC):
     """An example object to be published.
        see: http://twistedmatrix.com/projects/web/documentation/howto/xmlrpc.html
     """

     def xmlrpc_echo(self, x):
         """Return all passed args."""
         log.msg('xmlrpc call echo, %s'%x)
         return x


 class Proxy(xmlrpc.Proxy):
     ''' See: http://twistedmatrix.com/projects/web/documentation/howto/xmlrpc.html
         this is eacly like the xmlrpc.Proxy included in twisted but you can
         give it a SSLContext object insted of just accepting the defaults..
     '''
     def setSSLClientContext(self,SSLClientContext):
         self.SSLClientContext = SSLClientContext
     def callRemote(self, method, *args):
         factory = xmlrpc._QueryFactory(
             self.path, self.host, method, self.user,
             self.password, self.allowNone, args)
         if self.secure:
             from twisted.internet import ssl
             try:
                 self.SSLClientContext
             except NameError:
                 print "Must Set a SSL Context"
                 print "use self.setSSLClientContext() first"
                 # Its very bad to connect to ssl without some kind of
                 # verfication of who your talking to
                 # Using the default sslcontext without verification
                 # Can lead to man in the middle attacks
             reactor.connectSSL(self.host, self.port or 443,
                                factory,self.SSLClientContext)
         else:
             reactor.connectTCP(self.host, self.port or 80, factory)
         return factory.deferred

 def printValue(value):
     print repr(value)
     reactor.stop()

 def printError(error):
     print 'error', error
     reactor.stop()

 if __name__ == '__main__':
     # this should look pretty much like the examples given in the twisted
     # documents

     print "running as", sys.argv[1]
     if sys.argv[1] == 'server':
         log.startLogging(sys.stdout)
         ctx = makeSSLContext(myKey='server.pem',trustedCA='cacert.pem')
         r = Example()
         reactor.listenSSL(7080, server.Site(r),ctx)
         reactor.run()
     elif sys.argv[1] == 'client':
         ctx = makeSSLContext(myKey='client.pem', trustedCA='cacert.pem')
         proxy = Proxy('https://localhost:7080/')
         proxy.setSSLClientContext(ctx)
         proxy.callRemote('echo',
                 'hello world').addCallbacks(printValue, printError)
         reactor.run()



From sflist at ihonk.com  Fri May 11 16:35:40 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 11 May 2007 16:35:40 -0600
Subject: [Twisted-Python] SSL Cert Verification howto
In-Reply-To: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>
References: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>
Message-ID: <1178922940.29195.16.camel@infidel.local>

On Fri, 2007-05-11 at 15:36 -0500, Eli Criffield wrote:
>  So here is how I made a twisted based xmlrpc client and server that do
> all verification via SSL Certs.

Awesome, thanks for that, Eli -- the question has been asked so many
times how to verify SSL certs in Twisted, this should definitely go
someplace on the website, perhaps in a generalized fashion to cover
reactor.connectSSL().

Steve




From glyph at divmod.com  Fri May 11 16:55:31 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 11 May 2007 22:55:31 -0000
Subject: [Twisted-Python] A Solution Re: [Stackless] Advice on Debugging
	Stackless/Twisted Problem
In-Reply-To: <62138.73968.qm@web34201.mail.mud.yahoo.com>
References: <mailman.3.1177495202.8620.stackless@stackless.com>
	<62138.73968.qm@web34201.mail.mud.yahoo.com>
Message-ID: <20070511225531.18153.1086946017.divmod.xquotient.791@joule.divmod.com>


On 05:39 pm, andrewfr_ice at yahoo.com wrote:
>(When I have time, I will write a proper reactor. This
>should be a little more than overriding the
>doIteration() method of selectReactor). Or re-read the
>Blocking demo : I don't quite understand how it works)

I've said it before and I'll say it again.  Writing a reactor is the 
_wrong_ way to attempt to integrate Twisted and stackless.  Reactors are 
implemented to implement operating system or platform multiplexing 
technologies, and stackless does not have its own multiplexor. 
Multiplexing technologies are things like kqueue, epoll, IOCP, 
WaitForMultipleObjects, and AIO: APIs that allow you to wait for 
multiple input/output sources (including the clock) at the same time.

The issue is confused somewhat by GUI toolkits, which have their own 
event loops that wrap these APIs, so we have a few things that use those 
reactors as a back-end to cooperate in the most friendly way possible 
with those GUIs, but ultimately what Twisted is talking to in GUI 
libraries is another multiplexing API.

Stackless does not have any such API, and nor should it.  Making a 
stackless reactor would needlessly couple stackless/twisted integration 
to a particular multiplexor.  For example, it would make it impossible 
to write an application which used both GTK and Stackless.  Also, you'd 
need to choose either a portable, but inefficient and non-scalable API 
(like select) or a highly performant, but highly platform-specific API 
(like kqueue).  This is a decision that should be made when an 
application is deployed, and only required by an application developer 
if they are using platform-specific features (which stackless is not).

I keep hearing this idea of a "stackless reactor" bandied about, and I 
don't know how I can make this any more clear.  Again I refer to my 
original post on the subject:

    http://article.gmane.org/gmane.comp.python.twisted/13946
>1) Eliminate a OS-Thread (both Stackless and Twisted
>folks concur that this is wrong, wrong, wrong).

Notwithstanding the above, I'm glad that you've eliminated this.  It's a 
step in the right direction.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070511/463b8883/attachment.html>

From glyph at divmod.com  Fri May 11 17:06:35 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 11 May 2007 23:06:35 -0000
Subject: [Twisted-Python] SSL Cert Verification howto
In-Reply-To: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>
References: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>
Message-ID: <20070511230635.18153.351401178.divmod.xquotient.810@joule.divmod.com>

On 08:36 pm, elicriffield at gmail.com wrote:
>I was going to post to the twisted wiki, but apparently there isn't 
>one?

twistedmatrix.com is the twisted wiki :).  You need wiki editor 
permission to add stuff to it, but I don't think that would be a 
problem.  What login did you register?
>So here is how I made a twisted based xmlrpc client and server that do
>all verification via SSL Certs.

Thanks so much for putting this example together.  However, I think we 
need a bit more introductory documentation; SSL is hard to understand by 
itself, and this might give people the impression that XMLRPC is a 
necessary component of SSL :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070511/1f39de41/attachment.html>

From andrewfr_ice at yahoo.com  Sat May 12 09:42:29 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 12 May 2007 08:42:29 -0700 (PDT)
Subject: [Twisted-Python] A Solution Re: [Stackless] Advice on
	Stackless/Twisted Problem
In-Reply-To: <E1Hme1R-0005r1-M6@cube.twistedmatrix.com>
Message-ID: <440808.98570.qm@web34214.mail.mud.yahoo.com>

Hello Itamar:


AF> 2) I modified doSelect to call
stackless.schedule().
AF> If the reactor does not call stackless.schedule(),
AF> other tasklets will not get an opportunity to run.

>Why not just use twisted.internet.task.LoopingCall?

I overlooked using task.LoopingCall in conjunction
with creating a request handler tasklet. I tried and
it works nicely. And LoopingCall is faster too. Sweet!
With the possible need to add critical sections to
stuff like add/remove reader/write, this means I can
leave the reactor alone. This is good.

In the past, I used task.LoopingCall to solve an
earlier problems. I guess I threw the baby out with
the bath water. 

Thanks alot!

Cheers,
Andrew


       
____________________________________________________________________________________Get the free Yahoo! toolbar and rest assured with the added security of spyware protection.
http://new.toolbar.yahoo.com/toolbar/features/norton/index.php



From rnc000 at gmail.com  Sat May 12 10:16:07 2007
From: rnc000 at gmail.com (Ricardo Niederberger Cabral)
Date: Sat, 12 May 2007 13:16:07 -0300
Subject: [Twisted-Python] Submission for the wiki page ProjectsUsingTwisted
In-Reply-To: <35f9d9da0705110929x1f1263acod625343e26c8cbc1@mail.gmail.com>
References: <35f9d9da0705110926y58cf6b83uffe7006a3c5cbfb4@mail.gmail.com>
	<35f9d9da0705110929x1f1263acod625343e26c8cbc1@mail.gmail.com>
Message-ID: <35f9d9da0705120916m16dd6385v9a5ceec0511b2ea9@mail.gmail.com>

Hi,

I'd like to submit a commercial software I'm working on. It's
basically a server-side database capable of easily adding visual
search technology for any image-related website.

Twisted is used on the web tier (server admin interface), on a
services tier (offering a server API using PB, XML-RPC and SOAP) and
for remote procedure calls among peers in a server cluster (PB).

The software homepage is: http://server.imgseek.net/

Architecture details where Twisted plays a crucial role is at:
http://server.imgseek.net/category/documentation/architecture/

Thanks for the great software and best regards,
Ricardo.

PS. sorry if this was sent more than once.



From foom at fuhm.net  Sat May 12 23:28:25 2007
From: foom at fuhm.net (James Y Knight)
Date: Sun, 13 May 2007 01:28:25 -0400
Subject: [Twisted-Python] pyramid.twistedmatrix.com (almost) retired
Message-ID: <BE6248D3-C484-4BB6-AB87-B646EEB9B816@fuhm.net>

If you have a login there, you now have a login on  
cube.twistedmatrix.com. But if you haven't logged in this year, your  
login is disabled. If you want it back, ask.

Logins to pyramid are permanently disabled.

Your user account and mail are migrated, but website isn't quite.  
Until the website is moved, any personal .twistd websites you may  
have won't be functioning. Also changes you make to ~/public_html  
won't appear.

If you had a crontab, it's disabled, and put in a file CRONTAB in  
your home directory.

Cube doesn't accept password-based ssh access, so if you don't have  
an ssh key, you can't login.

Other than that, if anything is broken, let me know.

James



From Sven-Erik.Tiberg at ltu.se  Mon May 14 05:39:15 2007
From: Sven-Erik.Tiberg at ltu.se (Sven-Erik Tiberg)
Date: Mon, 14 May 2007 13:39:15 +0200
Subject: [Twisted-Python] Eroors on Twisted 2.5 on python2.5.1 / win 
In-Reply-To: <BE6248D3-C484-4BB6-AB87-B646EEB9B816@fuhm.net>
Message-ID: <668D1B8AD729C94DB91D17EC19B8BB910565BFC0@EMMA.personal.adp.ltu.se>

Hi.
A Q before reinstalling the mashine: can
Twisted_NoDocs-2.5.0.win32-py2.5.exe run on python-2.5.1.msi, got some
strange errors testing with the examples in C:\Python25\scripts.

/BG
Sven-Erik Tiberg



From itamar at itamarst.org  Mon May 14 06:22:03 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 May 2007 08:22:03 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r20275 - Add
	blockingCallFromThread, some
	tests and docs, and use it in web2.wsgi.
In-Reply-To: <E1HnZAb-00010I-00@wolfwood.twistedmatrix.com>
References: <E1HnZAb-00010I-00@wolfwood.twistedmatrix.com>
Message-ID: <1179145323.3509.11.camel@localhost.localdomain>

I've heard some comments from new users who run the examples and
"nothing happens." So it's probably best to always have a reactor.run()
in introductory howtos' examples.




From mojira at free.fr  Mon May 14 09:54:24 2007
From: mojira at free.fr (mojira at free.fr)
Date: Mon, 14 May 2007 17:54:24 +0200
Subject: [Twisted-Python] twisted mail
Message-ID: <1179158064.464886302e63b@imp.free.fr>

hello,
i'am working with twisted mail and i would like to know if delivery status
notification are implemented ( notify parameter in RCPT command line, ESMTP
protocol )

thx




From terry at jon.es  Mon May 14 10:13:34 2007
From: terry at jon.es (Terry Jones)
Date: Mon, 14 May 2007 18:13:34 +0200
Subject: [Twisted-Python] Twisted/Python job in Barcelona
Message-ID: <17992.35502.215711.929755@terry-jones-computer.local>

With apologies to those who don't appreciate job ads or cross-posting, I've
just posted a Python job ad.

Briefly, I'm looking for someone to work with in Barcelona, Spain.  There's
a fair amount of Twisted coding involved, and hopefully there will be more.

Details at:

  http://fluidinfo.com/jobs/python-programmers.html

You can find out a little more about me at http://jon.es

Regards,
Terry Jones



From eli at criffield.net  Mon May 14 12:42:42 2007
From: eli at criffield.net (Eli Criffield)
Date: Mon, 14 May 2007 13:42:42 -0500
Subject: [Twisted-Python] SSL Cert Verification howto
In-Reply-To: <20070511230635.18153.351401178.divmod.xquotient.810@joule.divmod.com>
References: <18e3f33d0705111336u56438529sa22d83dd85f650a1@mail.gmail.com>
	<20070511230635.18153.351401178.divmod.xquotient.810@joule.divmod.com>
Message-ID: <18e3f33d0705141142u3d9bc48cj6f605e7451c623c1@mail.gmail.com>

My login to twistedmatrix.com is elicriffield.

I'll see if i can give a better general feel with the example being
XMLRPC. The meat howto is true for any type of twisted connection.

Eli Criffield

On 5/11/07, glyph at divmod.com <glyph at divmod.com> wrote:
> On 08:36 pm, elicriffield at gmail.com wrote:
> >I was going to post to the twisted wiki, but apparently there isn't one?
>
> twistedmatrix.com is the twisted wiki :).  You need wiki editor permission
> to add stuff to it, but I don't think that would be a problem.  What login
> did you register?
>
> >So here is how I made a twisted based xmlrpc client and server that do
> >all verification via SSL Certs.
>
> Thanks so much for putting this example together.  However, I think we need
> a bit more introductory documentation; SSL is hard to understand by itself,
> and this might give people the impression that XMLRPC is a necessary
> component of SSL :).
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From bjhearsu at learn.senecac.on.ca  Mon May 14 17:03:30 2007
From: bjhearsu at learn.senecac.on.ca (Ben Hearsum)
Date: Mon, 14 May 2007 19:03:30 -0400
Subject: [Twisted-Python] twistd.pid on win32
Message-ID: <4648EAC2.1050703@learn.senecac.on.ca>

I need to check if a paticular script is running, from an outside process. On
Linux I can simply use the twistd.pid file and verify that the given pid is
running but on Windows there doesn't appear to be a twistd.pid. Is there a way
to get Twisted to spit out a twistd.pid on Windows?

- Ben



From alpha04 at netvigator.com  Tue May 15 21:59:52 2007
From: alpha04 at netvigator.com (Andrey)
Date: Tue, 15 May 2007 20:59:52 -0700
Subject: [Twisted-Python] DeferToThread Max spawn num?
Message-ID: <f2dvjr$4s5$1@sea.gmane.org>

Hi

will twisted auto manage the Max num of spawned threads (default 20?) ?
while i using d=deferToThread(function to call)







From exarkun at twistedmatrix.com  Wed May 16 09:09:10 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 16 May 2007 15:09:10 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1179328150.57.184225905@twistedmatrix.com

Bug summary
______________________
Summary for 2007-05-06 through 2007-05-13
Bugs opened: 13    Bugs closed: 6  Total open bugs: 950 (+7)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +3  |Highest:  -1          |Conch:  +1             
|Enhancement:  +4  |High:     +2          |Core:   +8             
|Task:         +1  |Normal:   +7          |Trial:  -1             
                                          |Web:    +0             
                                          |Words:  +0             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2628] twisted.web.client._parse (and any other urlparse-using code) is succeptible to cache poisoning (opened by exarkun) (CLOSED, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2628

[#2630] XMPP stream error conditions incorrectly qualified. (opened by njoyce)
    defect          words      http://twistedmatrix.com/trac/ticket/2630

[#2633] LoopingCall should parameterize its scheduler (opened by radix) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2633

                    ===== High =====
[#1260] win32eventreactor goes crazy at 64 connections (opened by ghazel)
    defect          core       http://twistedmatrix.com/trac/ticket/1260

                    ===== Normal =====
[#2629] passing the "why" argument to log.err is hard and crappy (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2629

[#2631] Update coding standard to indicate preference for TestCase methods which being with "assert" and which do not have an underscore in their name (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2631

[#2632] LoopingCall should not have or use a __call__ method (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2632

[#2634] IReactorTime is missing method to determine the current time (opened by exarkun) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2634

[#2635] ReadlineIO - like t.i.stdio.StandardIO but using the callback api of readline (opened by strank)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2635

[#2636] stdio.StandardIO breaks, readhack code in process.py to blame (opened by gtalvola)
    defect          core       http://twistedmatrix.com/trac/ticket/2636

[#2637] Conch carries over line with each new character when at the bottom of terminal (opened by konrads)
    defect          conch      http://twistedmatrix.com/trac/ticket/2637

[#2638] createInternetSocket is misnamed and misplaced (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2638

[#2639] Allow access to the traceback associated with an error thrown into an inlineCallback (opened by Peaker)
    defect          core       http://twistedmatrix.com/trac/ticket/2639



Closed Bugs
______________________
                    ===== Highest =====
[#2586] twisted.python.logfile.LogFile's defaultMode parameter is undocumented, untested, insecure (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2586

[#2617] Add support for incoming XML streams and non-reconnecting client factories. (opened by ralphm, closed by ralphm, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2617

[#739 ] Type enforcement for twisted.python.usage (opened by itamarst, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/739

[#2628] twisted.web.client._parse (and any other urlparse-using code) is succeptible to cache poisoning (opened by exarkun, closed by exarkun, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2628

                    ===== Normal =====
[#2448] deferToThread w/ trial -u times out on second pass (opened by mwl, closed by therve, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2448

[#2233] twisted.internet.fdesc does not handle EINTR (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2233





From lists at collab.nl  Thu May 17 12:43:29 2007
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Thu, 17 May 2007 20:43:29 +0200
Subject: [Twisted-Python] Flash AMF and RTMP with Twisted
Message-ID: <BBB7E4A3-6D51-42B4-90E0-7707E5340F17@collab.nl>

hi guys,

I'm new to this list and to Twisted. I'm one of the flash/flex  
developers on the Red5 project [1], a open source RTMP/AMF/FLV server  
for Flash (written in Java with Mina), and I'm wondering if anyone is  
working on a Twisted version of these protocols. While searching the  
web for info I found a mailinglist topic [2] that discuss the  
possibility of a Twisted version but that was written in dec 2003,  
when the protocols weren't reverse engineered yet.

So now that they are reverse engineered, I'm wondering how hard it  
would be to do the same with Twisted? And has anyone worked on this  
before? I'm a Flex developer [3] and don't have much experience with  
Twisted but I hope with some help of the Red5 team and the Twisted  
community we can bring RTMP to Python. There is already a Python  
implementation for AMF [4], and I'm also wondering how this can be  
implemented with Twisted?

Regards,

Thijs

[1] http://osflash.org/red5
[2] http://twistedmatrix.com/pipermail/twisted-python/2003-December/ 
006872.html
[3] http://collab.com
[4] http://sourceforge.jp/projects/djangoamf/



From general at eepatents.com  Thu May 17 14:20:26 2007
From: general at eepatents.com (Ed Suominen)
Date: Thu, 17 May 2007 16:20:26 -0400
Subject: [Twisted-Python] Flash AMF and RTMP with Twisted
In-Reply-To: <BBB7E4A3-6D51-42B4-90E0-7707E5340F17@collab.nl>
References: <BBB7E4A3-6D51-42B4-90E0-7707E5340F17@collab.nl>
Message-ID: <464CB90A.30300@eepatents.com>

Thijs Triemstra|Collab wrote:
> So now that [various protocols] are reverse engineered, I'm wondering
>  how hard it would be to do the same with Twisted? And has anyone 
> worked on this before? I'm a Flex developer and don't have much 
> experience with Twisted but I hope with some help of the Red5 team 
> and the Twisted community we can bring RTMP to Python. There is 
> already a Python implementation for AMF, and I'm also wondering how
> this can be implemented with Twisted?

This seems like a natural fit for Twisted. Really, any TCP or UDP
protocol can be implemented pretty easily using a subclass of
twisted.internet.protocol.Protocol [1], or a class that otherwise
implements the interface twisted.internet.interfaces.IProtocol [2].

You can see a myriad of examples of protocols that have been implemented
with Twisted already, in the twisted.protocols sub-package [3]. I
suggest that you develop your AMF/RTMP implementations with the
possibility in mind of them being incorporated into that sub-package.

I'd be willing to some assistance here and there if you like, but
probably not major amounts of coding.

Best regards, Ed

[1]
http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.Protocol.html

[2]
http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IProtocol.html

[3] http://twistedmatrix.com/documents/current/api/twisted.protocols.html




From DBerkstresser at daviswire.com  Thu May 17 14:52:16 2007
From: DBerkstresser at daviswire.com (Berkstresser, Dan)
Date: Thu, 17 May 2007 13:52:16 -0700
Subject: [Twisted-Python] Windows NT Service Problem
In-Reply-To: <E1HoLv2-0003cs-0a@cube.twistedmatrix.com>
Message-ID: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>

Hello, I am trying to get my twisted project to run as a Windows
Service.  I have followed the instructions here:
http://gradstein.info/DeployingTwistedWindows
as well as here:
http://svn.twistedmatrix.com/cvs/sandbox/moonfallen/?rev=18080#dirlist

I have tried setting it up with twistd and also using the runner.py
script with the same result. 

I can build the executable and install the service, but whenever I try
to start it it exits immediately.  The Event Log shows this error:

The instance's SvcRun() method failed 
  File "win32serviceutil.pyc", line 785, in SvcRun
  File "ntsvc\runner.pyc", line 79, in SvcDoRun
  File "ntsvc\runner.pyc", line 48, in run
  File "twisted\application\reactors.pyc", line 82, in installReactor 
twisted.application.reactors.NoSuchReactor: ''

I have tried changing the ntsvc.cfg to 'default' for the reactor entry
and also leaving it blank.  (default says NoSuchReactor: 'default').

Any help would be greatly appreciated.

Thanks,

Dan Berkstresser

 



From bhenry at pacecocorp.com  Thu May 17 16:54:47 2007
From: bhenry at pacecocorp.com (Benjamin Henry)
Date: Thu, 17 May 2007 18:54:47 -0400
Subject: [Twisted-Python] Windows NT Service Problem
In-Reply-To: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
Message-ID: <F8D3784FE4E93C4AA66BE8C551EBB5D1750F0A@ntxbeus12.exchange.xchg>

What reactor are you using?

 

Code that I've used in the global scope for my .tac file is:

 

application=service.Application('Service Name',uid=1000,gid=100)

factory = DerivedFactory()

 

internet.TCPServer(80,
factory).setServiceParent(service.IServiceCollection(application))

 

I ran setup.py (moonfallen's code), registered the service, and it
worked fine.

 

Have you specified a specific reactor, or called reactor.run()?  You
don't need to do that.

 

Regards,

 

Ben

> -----Original Message-----

> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-

> bounces at twistedmatrix.com] On Behalf Of Berkstresser, Dan

> Sent: Thursday, May 17, 2007 1:52 PM

> To: twisted-python at twistedmatrix.com

> Subject: [Twisted-Python] Windows NT Service Problem

> 

> Hello, I am trying to get my twisted project to run as a Windows

> Service.  I have followed the instructions here:

> http://gradstein.info/DeployingTwistedWindows

> as well as here:

> http://svn.twistedmatrix.com/cvs/sandbox/moonfallen/?rev=18080#dirlist

> 

> I have tried setting it up with twistd and also using the runner.py

> script with the same result.

> 

> I can build the executable and install the service, but whenever I try

> to start it it exits immediately.  The Event Log shows this error:

> 

> The instance's SvcRun() method failed

>   File "win32serviceutil.pyc", line 785, in SvcRun

>   File "ntsvc\runner.pyc", line 79, in SvcDoRun

>   File "ntsvc\runner.pyc", line 48, in run

>   File "twisted\application\reactors.pyc", line 82, in installReactor

> twisted.application.reactors.NoSuchReactor: ''

> 

> I have tried changing the ntsvc.cfg to 'default' for the reactor entry

> and also leaving it blank.  (default says NoSuchReactor: 'default').

> 

> Any help would be greatly appreciated.

> 

> Thanks,

> 

> Dan Berkstresser

> 

> 

> 

> _______________________________________________

> Twisted-Python mailing list

> Twisted-Python at twistedmatrix.com

> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070517/ee909b85/attachment.html>

From lucas at lucaserve.com  Thu May 17 23:53:56 2007
From: lucas at lucaserve.com (Lucas Taylor)
Date: Fri, 18 May 2007 00:53:56 -0500
Subject: [Twisted-Python] Windows NT Service Problem
In-Reply-To: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
References: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
Message-ID: <464D3F74.1060403@lucaserve.com>

Berkstresser, Dan wrote:
> Hello, I am trying to get my twisted project to run as a Windows
> Service.  I have followed the instructions here:
> http://gradstein.info/DeployingTwistedWindows
> as well as here:
> http://svn.twistedmatrix.com/cvs/sandbox/moonfallen/?rev=18080#dirlist


This isn't really relevant to the references you've mentioned, but there
is a simple way to create Windows services with a minor amount of code
and it's not too onerous. You don't have to use py2exe, although it is
certainly possible to do so once you've got the rest working. I'm not
sure if this is the "best" way, but it has been successful for me in a
couple of projects over the past 2 years.

Below is a very simple example using the QOTD server from the core docs.
It doesn't use tac files, Application objects, or twistd, so it's very
basic. A "real" project will differ, but the basic mechanics of starting
and stopping the service are illustrated in the SvcDoRun() and
CheckForQuit() methods of the WindowsService object. The idea is to have
the reactor check for a Stop event periodically and exit if it is raised.

You should be able to install and remove it thusly:
python qotdservice.py install
python qotdservice.py remove

You can then test it out with the sample Echo client from the core docs.

"""qotdservice.py
Sample Twisted Windows Service
"""

# Service Utilities
import win32serviceutil
import win32service
import win32event

# Twisted imports
from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor

class QOTD(Protocol):

    def connectionMade(self):
        self.transport.write("An apple a day keeps the doctor away\r\n")
        self.transport.loseConnection()


class WindowsService(win32serviceutil.ServiceFramework):
    _svc_name_ = "TwistedWin32Service"
    _svc_display_name_ = "Twisted Win32 Service"

    def __init__(self, args):
        win32serviceutil.ServiceFramework.__init__(self, args)
        self.hWaitStop = win32event.CreateEvent(None, 0, 0, None)

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        win32event.SetEvent(self.hWaitStop)

    def SvcDoRun(self):
        import servicemanager

        self.CheckForQuit()

        factory = Factory()
        factory.protocol = QOTD

        reactor.listenTCP(8007, factory)
        reactor.run(installSignalHandlers=0)


    def CheckForQuit(self):
        retval = win32event.WaitForSingleObject(self.hWaitStop, 10)
        if not retval == win32event.WAIT_TIMEOUT:
            # Received Quit from Win32
            reactor.stop()

        reactor.callLater(1.0, self.CheckForQuit)

if __name__=='__main__':
    win32serviceutil.HandleCommandLine(WindowsService)






From wthie at thiengineering.ch  Fri May 18 01:31:01 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Fri, 18 May 2007 09:31:01 +0200
Subject: [Twisted-Python] Windows NT Service Problem
In-Reply-To: <464D3F74.1060403@lucaserve.com>
References: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
	<464D3F74.1060403@lucaserve.com>
Message-ID: <464D5635.5050901@thiengineering.ch>

May I chime in with a question:

Is there a decent way to redirect twisted logging to the system/app log 
facilities of MSW?

Thxs, Werner Thie

Lucas Taylor wrote:
> Berkstresser, Dan wrote:
>> Hello, I am trying to get my twisted project to run as a Windows
>> Service.  I have followed the instructions here:
>> http://gradstein.info/DeployingTwistedWindows
>> as well as here:
>> http://svn.twistedmatrix.com/cvs/sandbox/moonfallen/?rev=18080#dirlist
> 
> 
> This isn't really relevant to the references you've mentioned, but there
> is a simple way to create Windows services with a minor amount of code
> and it's not too onerous. You don't have to use py2exe, although it is
> certainly possible to do so once you've got the rest working. I'm not
> sure if this is the "best" way, but it has been successful for me in a
> couple of projects over the past 2 years.
> 
> Below is a very simple example using the QOTD server from the core docs.
> It doesn't use tac files, Application objects, or twistd, so it's very
> basic. A "real" project will differ, but the basic mechanics of starting
> and stopping the service are illustrated in the SvcDoRun() and
> CheckForQuit() methods of the WindowsService object. The idea is to have
> the reactor check for a Stop event periodically and exit if it is raised.
> 
> You should be able to install and remove it thusly:
> python qotdservice.py install
> python qotdservice.py remove
> 
> You can then test it out with the sample Echo client from the core docs.
> 
> """qotdservice.py
> Sample Twisted Windows Service
> """
> 
> # Service Utilities
> import win32serviceutil
> import win32service
> import win32event
> 
> # Twisted imports
> from twisted.internet.protocol import Protocol, Factory
> from twisted.internet import reactor
> 
> class QOTD(Protocol):
> 
>     def connectionMade(self):
>         self.transport.write("An apple a day keeps the doctor away\r\n")
>         self.transport.loseConnection()
> 
> 
> class WindowsService(win32serviceutil.ServiceFramework):
>     _svc_name_ = "TwistedWin32Service"
>     _svc_display_name_ = "Twisted Win32 Service"
> 
>     def __init__(self, args):
>         win32serviceutil.ServiceFramework.__init__(self, args)
>         self.hWaitStop = win32event.CreateEvent(None, 0, 0, None)
> 
>     def SvcStop(self):
>         self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
>         win32event.SetEvent(self.hWaitStop)
> 
>     def SvcDoRun(self):
>         import servicemanager
> 
>         self.CheckForQuit()
> 
>         factory = Factory()
>         factory.protocol = QOTD
> 
>         reactor.listenTCP(8007, factory)
>         reactor.run(installSignalHandlers=0)
> 
> 
>     def CheckForQuit(self):
>         retval = win32event.WaitForSingleObject(self.hWaitStop, 10)
>         if not retval == win32event.WAIT_TIMEOUT:
>             # Received Quit from Win32
>             reactor.stop()
> 
>         reactor.callLater(1.0, self.CheckForQuit)
> 
> if __name__=='__main__':
>     win32serviceutil.HandleCommandLine(WindowsService)
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From tnelson at onresolve.com  Fri May 18 06:44:38 2007
From: tnelson at onresolve.com (Trent Nelson)
Date: Fri, 18 May 2007 14:44:38 +0200
Subject: [Twisted-Python] Win32 IOCPReactor?
Message-ID: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>


I'm new to Twisted.  Perusing the documentation, I came across
IOCPReactor.  It's marked as 'extremely experimental', and it appears it
only provides support for TCP events.

It seems the last check in to anything IOCPReactor-related was back in
2005.  Is it dead?  Is anyone using it?  Is anyone planning to pick
development back up?  Were there specific issues with IOCP that impeded
development, or just a general lack of people with time, inclination, or
Win32-fu?

Assuming the IOCPReactor's not feasible for high load production
deployment, can anyone comment on how the default select()-based reactor
for Win32 fares under high load?


	Trent.



From arkanes at gmail.com  Fri May 18 08:02:16 2007
From: arkanes at gmail.com (Chris Mellon)
Date: Fri, 18 May 2007 09:02:16 -0500
Subject: [Twisted-Python] Windows NT Service Problem
In-Reply-To: <464D5635.5050901@thiengineering.ch>
References: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
	<464D3F74.1060403@lucaserve.com> <464D5635.5050901@thiengineering.ch>
Message-ID: <4866bea60705180702r49ab2df4o3e28b311943c2553@mail.gmail.com>

On 5/18/07, Werner Thie <wthie at thiengineering.ch> wrote:
> May I chime in with a question:
>
> Is there a decent way to redirect twisted logging to the system/app log
> facilities of MSW?
>

It's trivial to write a log observer that does so. Below is a snippet
from my app that writes errors  (logged with log.err) to the win32
event log. The servicemanager module is part of pywin32.


import servicemanager

def ErrorLogger(msg):
    """ A log observer which will write error messages
    to the windows event log

    Usage: log.addObserver(ErrorLogger)
    """
    if not "isError" in msg:
        return
    if not msg["isError"]:
        return
    #the value is sometimes (often? always?) a tuple
    messages = list(msg["message"])
    if "failure" in msg:
        thisFailure = msg["failure"]
        messages.append(thisFailure.getTraceback(detail="verbose"))
    message = '\n'.join(str(l) for l in messages)
    servicemanager.LogErrorMsg(message)



From teratorn at twistedmatrix.com  Fri May 18 11:58:37 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 18 May 2007 12:58:37 -0500 (CDT)
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
Message-ID: <4629.71.42.153.50.1179511117.squirrel@www.world-net.net>

IOCPReactor isn't production-ready for most people's definitions of
"production".

And yes, it's been stagnant for a long time.. AFAIK it's mostly just lack
of attention. It's a lot of work, and so far nobody has been able to
commit to finishing it.

As for the default select-based reactor it should work fine. There aren't
any outstanding performance concerns that I am aware of. You will have to
test for yourself if it meets your requirements.

Hope that helps,
--
Eric Mangold
Twisted/Win32 Maintainer

> I'm new to Twisted.  Perusing the documentation, I came across
> IOCPReactor.  It's marked as 'extremely experimental', and it appears it
> only provides support for TCP events.
>
> It seems the last check in to anything IOCPReactor-related was back in
> 2005.  Is it dead?  Is anyone using it?  Is anyone planning to pick
> development back up?  Were there specific issues with IOCP that impeded
> development, or just a general lack of people with time, inclination, or
> Win32-fu?
>
> Assuming the IOCPReactor's not feasible for high load production
> deployment, can anyone comment on how the default select()-based reactor
> for Win32 fares under high load?
>
>
> 	Trent.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From ivan at llaisdy.com  Fri May 18 12:57:12 2007
From: ivan at llaisdy.com (Ivan Uemlianin)
Date: Fri, 18 May 2007 19:57:12 +0100
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
Message-ID: <464DF708.7090907@llaisdy.com>

Dear All

I am interested in writing an MRCP (Media Resource Control Protocol [1])
server.  In particular I want to write an MRCP speech recognition
resource server as part of my trefnydd [2] project.  I am posting here
to ask for advice about the network programming part.

I shall also be writing an MRCP client (if only to test the server).
All the code will be GPL'd.

As far as I understand it, an overview of the networking would go like
this:

An MRCP session between client and server is initiated using the Session
Initiation Protocol (SIP).  Client and server negotiate using SIP
messages containing SDP message bodies to define the participants and
the resources required in the session.  After session initiation, two
channels are launched: a media channel using RTP to carry binary audio
(i.e., speech) data, and a control channel using TCP (control channel
messages are text-based and in MRCP format).

It seems to me that both client and server software would have to cope
with SIP, SDP, RTP, MRCP (message format) and plain old TCP (for the
SIP/SDP and MRCP control channel messages).

Here are my questions:

- Does anyone know of a FOSS project to write an MRCP server? preferably
in python. I know of mrcp4j [3].
- My first plan would be to make the MRCP client/server a subclass of an
SIP client/server, as SIP is used to set up (and tear down) the session.
  Does that sound sensible?
- Can twisted.protocols.sip be used to write a SIP server?  Would it
give me everything I need, or would I also need something like pjsip [4]
or jain-sip [5] for the low-level stuff?
- Have I missed anything?

Any advice would be gratefully received.  I'll report back with progress.

Best wishes

Ivan

[1] MRCP:  http://www.llaisdy.com/static/tech/mrcp/
[2] trefnydd:  http://www.llaisdy.com/static/trefnydd/
[3] mrcp4j: "MRCP4J provides a Java API that encapsulates the MRCPv2
protocol and can be used to implement MRCPv2 clients and/or servers."
http://mrcp4j.sourceforge.net/
[4] pjsip:  http://www.pjsip.org/
[5] jain-sip:  https://jain-sip.dev.java.net/






From fairwinds at eastlink.ca  Fri May 18 13:47:47 2007
From: fairwinds at eastlink.ca (David Pratt)
Date: Fri, 18 May 2007 16:47:47 -0300
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
In-Reply-To: <464DF708.7090907@llaisdy.com>
References: <464DF708.7090907@llaisdy.com>
Message-ID: <464E02E3.8040103@eastlink.ca>

You may wish to look at divmod's sine project that provides an sip 
server. Why not license under MIT so that if this is successful it may 
become another a supported protocol in the twisted stack.

Regards,
David

Ivan Uemlianin wrote:
> Dear All
> 
> I am interested in writing an MRCP (Media Resource Control Protocol [1])
> server.  In particular I want to write an MRCP speech recognition
> resource server as part of my trefnydd [2] project.  I am posting here
> to ask for advice about the network programming part.
> 
> I shall also be writing an MRCP client (if only to test the server).
> All the code will be GPL'd.
> 
> As far as I understand it, an overview of the networking would go like
> this:
> 
> An MRCP session between client and server is initiated using the Session
> Initiation Protocol (SIP).  Client and server negotiate using SIP
> messages containing SDP message bodies to define the participants and
> the resources required in the session.  After session initiation, two
> channels are launched: a media channel using RTP to carry binary audio
> (i.e., speech) data, and a control channel using TCP (control channel
> messages are text-based and in MRCP format).
> 
> It seems to me that both client and server software would have to cope
> with SIP, SDP, RTP, MRCP (message format) and plain old TCP (for the
> SIP/SDP and MRCP control channel messages).
> 
> Here are my questions:
> 
> - Does anyone know of a FOSS project to write an MRCP server? preferably
> in python. I know of mrcp4j [3].
> - My first plan would be to make the MRCP client/server a subclass of an
> SIP client/server, as SIP is used to set up (and tear down) the session.
>  Does that sound sensible?
> - Can twisted.protocols.sip be used to write a SIP server?  Would it
> give me everything I need, or would I also need something like pjsip [4]
> or jain-sip [5] for the low-level stuff?
> - Have I missed anything?
> 
> Any advice would be gratefully received.  I'll report back with progress.
> 
> Best wishes
> 
> Ivan
> 
> [1] MRCP:  http://www.llaisdy.com/static/tech/mrcp/
> [2] trefnydd:  http://www.llaisdy.com/static/trefnydd/
> [3] mrcp4j: "MRCP4J provides a Java API that encapsulates the MRCPv2
> protocol and can be used to implement MRCPv2 clients and/or servers."
> http://mrcp4j.sourceforge.net/
> [4] pjsip:  http://www.pjsip.org/
> [5] jain-sip:  https://jain-sip.dev.java.net/
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From db3l.net at gmail.com  Fri May 18 14:26:41 2007
From: db3l.net at gmail.com (David Bolen)
Date: Fri, 18 May 2007 16:26:41 -0400
Subject: [Twisted-Python] Re: Windows NT Service Problem
References: <522DFE1BD2489441978055A65C9DF437B3675F@KENSVR04.division.daviswire.com>
	<464D3F74.1060403@lucaserve.com>
Message-ID: <m1iraplvy6.fsf@osx.db3l.homeip.net>

Lucas Taylor <lucas at lucaserve.com> writes:

> Berkstresser, Dan wrote:
>> Hello, I am trying to get my twisted project to run as a Windows
>> Service.  I have followed the instructions here:
>> http://gradstein.info/DeployingTwistedWindows
>> as well as here:
>> http://svn.twistedmatrix.com/cvs/sandbox/moonfallen/?rev=18080#dirlist
>
>
> This isn't really relevant to the references you've mentioned, but there
> is a simple way to create Windows services with a minor amount of code
> and it's not too onerous. You don't have to use py2exe, although it is
> certainly possible to do so once you've got the rest working. I'm not
> sure if this is the "best" way, but it has been successful for me in a
> couple of projects over the past 2 years.

This is extremely close to how I've also been doing it for years.  One
suggestion is to handle reactor shutdown right within SvcStop,
avoiding the need for a polling loop, e.g.:

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        print '%s Service stopping' % self._svc_display_name_
        reactor.callFromThread(reactor.stop)
        self._stopped.wait(5)
        print '%s Service stopped' % self._svc_display_name_

You need the callFromThread since the service messages arrive on the
service thread.  Note that in my case, self._stopped is a
threading.Event that I set in SvcDoRun when reactor.run returns, for a
positive acknowledgement for the stop, although I choose not to wait
forever for it to happen in case something does go wrong.

It's not directly related to Twisted, but since I inevitably want
services built as executables for distribution, and often have a
handful of persistent config elements, here's a custom boot_service.py
module I use with py2exe.  In particular, it provides a single
implementation (rather than different pywin32 and py2exe) for command
line installation/removal, and adds updating support to py2exe's
version.  It also provides a debug mode where running the service
manually with "--debug" permits it to run from a normal console window
with I/O to the window, which I find handy.  The service when running
will be a subclass with a "debug" variable bound to True.

It takes service name information from the existing service class, but
is application specific in respects to command line parsing, so the
module would be adjusted by service - that could be factored out
easily enough.  Options are stored in the registry during installation
or update, and can be retrieved later by the main service module
(e.g., in SvcDoRun) with win32serviceutil.GetServiceCustomOption

          - - - - - - - - - - - - - - - - - - - - - - - - -

#
# boot_service.py
#
# This is a replacement for py2exe's own boot_service startup code that
# handles re-installation more gracefully, as well as supporting command
# line options during installation that get installed as parameters for
# the service in the registry.
#
# It is pulled in by the custom cmdclass in setup.py
#
#

import sys
import os
import getopt
import servicemanager
import winerror
import win32service
from win32serviceutil import InstallService, RemoveService, \
                             ChangeServiceConfig, SetServiceCustomOption

# Get access to our service class
from dataimportd import DataImportService


svc_display_name = getattr(DataImportService, "_svc_display_name_",
                           DataImportService._svc_name_)

#
# --------------------------------------------------------------------------
#

def usage():

    print svc_display_name, DataImportService.__version__
    print 'Usage: %s [ mode ] [ options ]' % os.path.basename(sys.argv[0])
    print 'mode (if not supplied, assumes Service Manager execution):'
    print '  --install       Install/Update the service'
    print '  --remove        Remove the service'
    print '  --debug         Run directly in current console for debugging'
    print '  --version       Display version and exit'
    print 'options (for installation/update):'
    print '  --config=name   Specify configuration file name (default is'
    print '                    data/dataimport.ini beneath installation)'
    print
    sys.exit(0)

#
# --------------------------------------------------------------------------
#

def update_service_options(options):
    for option, value in options.iteritems():
        SetServiceCustomOption(DataImportService._svc_name_, option, value)


#
# --------------------------------------------------------------------------
#

def main():

    try:
        opts, args = getopt.getopt(sys.argv[1:],'?',
                                   ['install','remove','debug',
                                    'help','version',
                                    'config='])
    except getopt.error, details:
        print details
        usage()

    opt_install = opt_remove = opt_debug = False
    service_options = {}

    for opt, optval in opts:
        if opt in ['-?', '--help']:
            usage()
        elif opt == '--install':
            opt_install = True
        elif opt == '--remove':
            opt_remove = True
        elif opt == '--debug':
            opt_debug = True
        elif opt == '--version':
            print DataImportService.__version__
            sys.exit(0)
        elif opt == '--config':
            service_options[opt[2:]] = optval

    if opt_install:

        try:
            InstallService(None,
                           serviceName = DataImportService._svc_name_,
                           displayName = svc_display_name,
                           exeName = sys.executable,
                           startType = win32service.SERVICE_AUTO_START,
                           serviceDeps = DataImportService._svc_deps_
                           )
            update_service_options(service_options)
            print svc_display_name, 'installed'

        except win32service.error, (hr, fn, msg):
            if hr != winerror.ERROR_SERVICE_EXISTS:
                raise

            ChangeServiceConfig(None,
                                serviceName = DataImportService._svc_name_,
                                displayName = svc_display_name,
                                exeName = sys.executable,
                                startType = win32service.SERVICE_AUTO_START,
                                serviceDeps = DataImportService._svc_deps_
                                )

            update_service_options(service_options)
            print svc_display_name, 'updated'

    elif opt_remove:
        RemoveService(DataImportService._svc_name_)
        print svc_display_name, 'removed'

    else:

        # Event source records come from servicemanager
        evtsrc_dll = os.path.abspath(servicemanager.__file__)

        servicemanager.Initialize(DataImportService._svc_name_, evtsrc_dll)
        servicemanager.PrepareToHostSingle(DataImportService)

        if opt_debug:
            print 'Debugging', svc_display_name
            # The normal registration that is done upon initialization by the
            # win32serviceutil.ServiceFramework class will fail, so we suppress
            # some of the __init__ processing.  This is fragile, but still
            # better than not being able to debug directly
            class DebugService(DataImportService):
                ssh = None   # Since this is dereferenced by the framework
                debug = True
                def __init__(self):
                    pass

            service = DebugService()
            service.initialize()
            service.SvcRun()

        else:
            try:
                servicemanager.StartServiceCtrlDispatcher()
            except:
                print 'Unable to start as service:'
                print sys.exc_info()[1]
                print
                usage()
    

# If we're running frozen, assume we should just start on import
if hasattr(sys, 'frozen'):
    main()


          - - - - - - - - - - - - - - - - - - - - - - - - -

Once you have this module, you can reuse it from the service
implementation module (for consistent command line parsing and debug
execution) instead of win32serviceutil with:

          - - - - - - - - - - - - - - - - - - - - - - - - -

if __name__ == "__main__":

    # Use the same boot code that we get when packaged
    import boot_service
    boot_service.main()

          - - - - - - - - - - - - - - - - - - - - - - - - -

And to wrap up the service with py2exe, subclass the default cmdclass
to return the right boot module (if you already have a subclass - for
example I use one which upx's binaries, just add the get_boot_script
method) and then reference it during the call to setup(), e.g.:

          - - - - - - - - - - - - - - - - - - - - - - - - -

from py2exe.build_exe import py2exe


class Py2exe(py2exe):

    # (... any other customizations ...)

    def get_boot_script(self, boot_type):
        if boot_type != 'service':
            return py2exe.get_boot_script(self, boot_type)
        else:
            return os.path.join(os.path.dirname(__file__),
                                "boot_" + boot_type + ".py")

# ...


setup( # (... normal options ...)
      cmdclass = {'py2exe': Py2exe})

          - - - - - - - - - - - - - - - - - - - - - - - - -


-- David




From mojira at free.fr  Sat May 19 06:00:48 2007
From: mojira at free.fr (mojira at free.fr)
Date: Sat, 19 May 2007 14:00:48 +0200
Subject: [Twisted-Python] twisted mail and DSN
Message-ID: <1179576048.464ee6f09666b@imp.free.fr>



hello,
i'am working with twisted mail and i would like to know if delivery status
notification are implemented ( notify parameter in RCPT command line, ESMTP
protocol )

thx



From exarkun at divmod.com  Sat May 19 09:53:49 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 19 May 2007 11:53:49 -0400
Subject: [Twisted-Python] twisted mail and DSN
In-Reply-To: <1179576048.464ee6f09666b@imp.free.fr>
Message-ID: <20070519155349.30678.1531221458.divmod.quotient.2287@ohm>

On Sat, 19 May 2007 14:00:48 +0200, mojira at free.fr wrote:
>
>
>hello,
>i'am working with twisted mail and i would like to know if delivery status
>notification are implemented ( notify parameter in RCPT command line, ESMTP
>protocol )

It isn't.

Jean-Paul



From jritter at bektel.com  Sat May 19 14:59:19 2007
From: jritter at bektel.com (Josh Ritter)
Date: Sat, 19 May 2007 15:59:19 -0500
Subject: [Twisted-Python] Win32 IOCPReactor?
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
Message-ID: <001b01c79a58$94921670$0400000a@spooge>

We use the iocp reactor on our Windows servers for our MMORPG Minions of 
Mirth.

The select reactor on Windows is *extremely* slow and bombs when you hit 
between 32-64 connections.

------------------------------------
-Josh Ritter
President
Prairie Games, Inc
http://www.prairiegames.com


----- Original Message ----- 
From: "Eric Mangold" <teratorn at twistedmatrix.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Friday, May 18, 2007 12:58 PM
Subject: Re: [Twisted-Python] Win32 IOCPReactor?


> IOCPReactor isn't production-ready for most people's definitions of
> "production".
>
> And yes, it's been stagnant for a long time.. AFAIK it's mostly just lack
> of attention. It's a lot of work, and so far nobody has been able to
> commit to finishing it.
>
> As for the default select-based reactor it should work fine. There aren't
> any outstanding performance concerns that I am aware of. You will have to
> test for yourself if it meets your requirements.
>
> Hope that helps,
> --
> Eric Mangold
> Twisted/Win32 Maintainer
>
>> I'm new to Twisted.  Perusing the documentation, I came across
>> IOCPReactor.  It's marked as 'extremely experimental', and it appears it
>> only provides support for TCP events.
>>
>> It seems the last check in to anything IOCPReactor-related was back in
>> 2005.  Is it dead?  Is anyone using it?  Is anyone planning to pick
>> development back up?  Were there specific issues with IOCP that impeded
>> development, or just a general lack of people with time, inclination, or
>> Win32-fu?
>>
>> Assuming the IOCPReactor's not feasible for high load production
>> deployment, can anyone comment on how the default select()-based reactor
>> for Win32 fares under high load?
>>
>>
>> Trent.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 




From itamar at itamarst.org  Sat May 19 15:11:07 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 19 May 2007 17:11:07 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <001b01c79a58$94921670$0400000a@spooge>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
Message-ID: <1179609067.26686.0.camel@localhost.localdomain>

On Sat, 2007-05-19 at 15:59 -0500, Josh Ritter wrote:

> The select reactor on Windows is *extremely* slow and bombs when you hit 
> between 32-64 connections.

The select reactor can go up to 512 connections... are you sure you're
not thinking of the win32eventreactor?




From jritter at bektel.com  Sat May 19 15:30:45 2007
From: jritter at bektel.com (Josh Ritter)
Date: Sat, 19 May 2007 16:30:45 -0500
Subject: [Twisted-Python] Win32 IOCPReactor?
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg><4629.71.42.153.50.1179511117.squirrel@www.world-net.net><001b01c79a58$94921670$0400000a@spooge>
	<1179609067.26686.0.camel@localhost.localdomain>
Message-ID: <003701c79a5c$f8d5d320$0400000a@spooge>


We've never used the event reactor.  It has been awhile since using the 
select reactor in Windows.  At the time, we wouldn't of had nearly 512 
simultaneous connections... It would bomb well before 512 connections.  It 
is possible that it would allow up to 512 connections to be made (not 
simultaneous) before the issue raised itself.  Though, once the problem 
happened no more connections were possible, regardless of some dropping, etc

The performance was also terrible.

-JR



----- Original Message ----- 
From: "Itamar Shtull-Trauring" <itamar at itamarst.org>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Saturday, May 19, 2007 4:11 PM
Subject: Re: [Twisted-Python] Win32 IOCPReactor?


> On Sat, 2007-05-19 at 15:59 -0500, Josh Ritter wrote:
>
>> The select reactor on Windows is *extremely* slow and bombs when you hit
>> between 32-64 connections.
>
> The select reactor can go up to 512 connections... are you sure you're
> not thinking of the win32eventreactor?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 




From itamar at itamarst.org  Sat May 19 15:55:03 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 19 May 2007 17:55:03 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <001b01c79a58$94921670$0400000a@spooge>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
Message-ID: <1179611703.26686.4.camel@localhost.localdomain>

On Sat, 2007-05-19 at 15:59 -0500, Josh Ritter wrote:
> We use the iocp reactor on our Windows servers for our MMORPG Minions of 
> Mirth.

Next question - who runs servers on *Windows*? :)




From exarkun at twistedmatrix.com  Sat May 19 22:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 20 May 2007 04:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1179633901.93.2047542063@twistedmatrix.com

Bug summary
______________________
Summary for 2007-05-13 through 2007-05-20
Bugs opened: 26    Bugs closed: 7  Total open bugs: 958 (+19)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +7  |Highest:  -1          |Conch:     +1          
|Enhancement: +10  |High:     +1          |Core:     +14          
|Task:         +2  |Normal:  +19          |Foolscap:  +0          
                                          |Trial:     +1          
                                          |Web:       +1          
                                          |Web2:      +2          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2640] fix epytext problems in SVN HEAD (opened by mwh)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2640

[#2663] t.conch.manhole does not exit continuation prompt after ctrl-c (opened by PenguinOfDoom)
    defect          conch      http://twistedmatrix.com/trac/ticket/2663

                    ===== High =====
[#2643] twisted.python.modules does not account for memory/disk inconsistencies when scanning packages (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2643

                    ===== Normal =====
[#2641] Circular reference in tcp.BaseClient (opened by mircea) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2641

[#2642] Circular reference in tcp.BaseClient (opened by mircea)
    defect          core       http://twistedmatrix.com/trac/ticket/2642

[#2644] Errors while writing dropin.cache should show a less horrible error message (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2644

[#2645] trial runner does not recognize class based decorators (opened by synapsis)
    defect          trial      http://twistedmatrix.com/trac/ticket/2645

[#2646] twistd should write a pidfile on win32 (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2646

[#2647] foolscap needs to move out of the sandbox (opened by warner)
    task            foolscap   http://twistedmatrix.com/trac/ticket/2647

[#2648] prePathURL does not uses the port number from the Host header (opened by synapsis)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2648

[#2649] using very small positive floats instead of zero achieves nothing except obscurity (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2649

[#2650] amp.Integer is either broken or incorrectly documented (opened by indigo)
    defect          core       http://twistedmatrix.com/trac/ticket/2650

[#2651] amp could be able to encode DateTime and Decimal (opened by indigo)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2651

[#2652] trial should call gc.collect() at the end (opened by exarkun)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2652

[#2653] 204 is not an error code, should not be treated as such for filters (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2653

[#2654] twisted.internet.abstract.isIPAddress rejects valid IPv4 strings (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2654

[#2655] minor documentation correction in howto/components.html (opened by zirpu) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2655

[#2656] twisted.protocols.amp.Command.makeResponse docstring inaccurate (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2656

[#2657] twisted.protocols.amp.Command should have an response parsing method parallel to makeResponse (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2657

[#2658] There should be a protocol wrapper which only wraps protocols (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2658

[#2659] Provide a way to run a sequence of Deferred-returning callables sequentially (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2659

[#2660] web2.client should have a getPage and downloadPage that is API compatible with twisted.web.client (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2660

[#2661] Deprecate IFinishableConsumer so it can be deleted (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2661

[#2662] ITransport shouldn't include getPeer/getHost (opened by Peaker)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2662

[#2664] twisted.protocols.amp._objectsToStrings doesn't document its `strings' parameter (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2664

[#2665] twisted.protocols.amp._objectsToStrings makes a copy of a the `objects' dictionary in the least efficient way possible (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2665



Closed Bugs
______________________
                    ===== Highest =====
[#2633] LoopingCall should parameterize its scheduler (opened by radix, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2633

[#2610] addCleanup method on TestCase to allow for easier tear down. (opened by jml, closed by jml, fixed)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2610

[#2315] Request to add int8 string support to basic protocols (opened by metcalfc, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2315

                    ===== Normal =====
[#2634] IReactorTime is missing method to determine the current time (opened by exarkun, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2634

[#2641] Circular reference in tcp.BaseClient (opened by mircea, closed by therve, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2641

[#2565] Exception occurring in Foolscap CopyableSlicer. (opened by kgi, closed by warner, fixed)
    defect          foolscap   http://twistedmatrix.com/trac/ticket/2565

[#2655] minor documentation correction in howto/components.html (opened by zirpu, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2655





From ivan at llaisdy.com  Sun May 20 09:15:44 2007
From: ivan at llaisdy.com (Ivan Uemlianin)
Date: Sun, 20 May 2007 16:15:44 +0100
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
In-Reply-To: <464E02E3.8040103@eastlink.ca>
References: <464DF708.7090907@llaisdy.com> <464E02E3.8040103@eastlink.ca>
Message-ID: <46506620.2000405@llaisdy.com>

David Pratt wrote:
> You may wish to look at divmod's sine project that provides an sip
> server. Why not license under MIT so that if this is successful it may
> become another a supported protocol in the twisted stack.

David

Thanks for your comments.

What does Divmod Sine provide that twisted.protocols.sip doesn't? For
example, see this ticket:

    http://twistedmatrix.com/trac/ticket/2444

Does that imply that twisted.protocols.sip can now (or soon) be used
instead of Sine?

If not, what is the difference between twisted's sip support and sine's?
And has anyone tried pjsip?


Best

Ivan





From exarkun at divmod.com  Sun May 20 09:15:13 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 20 May 2007 11:15:13 -0400
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
In-Reply-To: <46506620.2000405@llaisdy.com>
Message-ID: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>

On Sun, 20 May 2007 16:15:44 +0100, Ivan Uemlianin <ivan at llaisdy.com> wrote:
>David Pratt wrote:
>> You may wish to look at divmod's sine project that provides an sip
>> server. Why not license under MIT so that if this is successful it may
>> become another a supported protocol in the twisted stack.
>
>David
>
>Thanks for your comments.
>
>What does Divmod Sine provide that twisted.protocols.sip doesn't? For
>example, see this ticket:
>
>    http://twistedmatrix.com/trac/ticket/2444
>
>Does that imply that twisted.protocols.sip can now (or soon) be used
>instead of Sine?

The Divmod Sine SIP implementation has numerous bug fixes not present in
twisted.protocols.sip.  Once #2444 is resolved, the protocol support in
Twisted will be as good as the protocol support in Divmod Sine.  What Sine
will still offer above the code in Twisted is the higher level APIs which
make call setup easy enough so that novel applications can focus on their
novelty instead of on SIP details.

Jean-Paul



From tnelson at onresolve.com  Sun May 20 14:56:10 2007
From: tnelson at onresolve.com (Trent Nelson)
Date: Sun, 20 May 2007 22:56:10 +0200
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <001b01c79a58$94921670$0400000a@spooge>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg><4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
Message-ID: <AB1BB4CF81B9214682079EB55A7125ED01DDAA45@mapibe05.exchange.xchg>

 
> The select reactor on Windows is *extremely* slow and bombs when you
hit
> between 32-64 connections.

Out of interest, how many connections are you managing with the
IOCPReactor?

	Trent.



From orlenko at gmail.com  Sun May 20 17:06:26 2007
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Sun, 20 May 2007 16:06:26 -0700
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <1179611703.26686.4.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
Message-ID: <4650D472.5060009@gmail.com>


> Next question - who runs servers on *Windows*? :)
>   

I am new to Twisted, and I am considering porting my application to 
Twisted, (for performance and scalability reasons, and to take advantage 
of Comet). *All* our customers are running Windows. This discussion 
thread sounds scary! What works and what does not work in IOCP reactor? 
Will I be able to run PB and web server using IOCP reactor? Is select 
reactor really broken on Windows? Should I be looking at other server 
products instead?

Please, if someone has experience using Twisted for distributed 
applications with web interface on Windows, could you guide a newbie? 
Thank you very much!

Volodymyr Orlenko



From itamar at itamarst.org  Sun May 20 17:32:39 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 20 May 2007 19:32:39 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <4650D472.5060009@gmail.com>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<4650D472.5060009@gmail.com>
Message-ID: <1179703959.7838.5.camel@localhost.localdomain>

On Sun, 2007-05-20 at 16:06 -0700, Volodymyr Orlenko wrote:

> I am new to Twisted, and I am considering porting my application to 
> Twisted, (for performance and scalability reasons, and to take
> advantage 
> of Comet). *All* our customers are running Windows. This discussion 
> thread sounds scary! What works and what does not work in IOCP
> reactor? 

Basic TCP should work. There's a rewrite of the IOCP reactor in a branch
which is likely better.

> Will I be able to run PB and web server using IOCP reactor? 

Probably; some people at least seem to be able to use it.

> Is select reactor really broken on Windows?

All tests pass in the buildbot: http://twistedmatrix.com/buildbot/ and
we have no major bug reports against it as far as I know. I would trust
it more than the IOCP reactor (as long as you're OK with only 512
connections.)

>  Should I be looking at other server 
> products instead?

Well... it's probably hard to find something as powerful and extensive
as Twisted. So if your choice is building all this infrastructure on
some other framework, or just helping improve Twisted's IOCP support (if
you find it necessary), why not do the later? :)





From orlenko at gmail.com  Sun May 20 19:03:22 2007
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Sun, 20 May 2007 18:03:22 -0700
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <1179703959.7838.5.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<4650D472.5060009@gmail.com>
	<1179703959.7838.5.camel@localhost.localdomain>
Message-ID: <4650EFDA.8030605@gmail.com>

Itamar Shtull-Trauring wrote:
> Well... it's probably hard to find something as powerful and extensive
> as Twisted. So if your choice is building all this infrastructure on
> some other framework, or just helping improve Twisted's IOCP support (if
> you find it necessary), why not do the later? :)
>   
I guess you are right. I've worked with IOCP back in my C++ days, and I 
really liked the performance. Maybe what I should do is put together a 
simple application and do some benchmarking, to compare performance of 
IOCP reactor and select reactor on Windows (and of my existing 
application, which uses TurboGears/CherryPy and Python's built-in XMLRPC 
server). I'll keep you posted.

Is this 
<http://twistedmatrix.com/trac/browser/branches/iocpreactor-1760-3> the 
branch you mentioned?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070520/0476d77f/attachment.html>

From ivan at llaisdy.com  Mon May 21 04:22:47 2007
From: ivan at llaisdy.com (Ivan Uemlianin)
Date: Mon, 21 May 2007 11:22:47 +0100
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
In-Reply-To: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
References: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
Message-ID: <465172F7.5030501@llaisdy.com>

Jean-Paul Calderone wrote:
> The Divmod Sine SIP implementation has numerous bug fixes not present in
> twisted.protocols.sip.  Once #2444 is resolved, the protocol support in
> Twisted will be as good as the protocol support in Divmod Sine.  What 
> Sine
> will still offer above the code in Twisted is the higher level APIs which
> make call setup easy enough so that novel applications can focus on their
> novelty instead of on SIP details.
This sounds good. Thanks very much.  I'll look into Sine (and the Shtoom 
phone) and report back with progress.

Best

Ivan





From rgacote at AppropriateSolutions.com  Mon May 21 06:13:25 2007
From: rgacote at AppropriateSolutions.com (Ray Cote)
Date: Mon, 21 May 2007 08:13:25 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <1179611703.26686.4.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
Message-ID: <a0624087ec2773c5d92f0@[192.168.24.210]>

At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
>
>Next question - who runs servers on *Windows*? :)

We do [Raises hand].
Twisted built with Py2Exe and running as an NT service.
Have delivered several different applications in this configuration 
for clients.
--Ray

-- 

Raymond Cote
Appropriate Solutions, Inc.
PO Box 458 ~ Peterborough, NH 03458-0458
Phone: 603.924.6079 ~ Fax: 603.924.8668
rgacote(at)AppropriateSolutions.com
www.AppropriateSolutions.com



From itamar at itamarst.org  Mon May 21 06:34:52 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 21 May 2007 08:34:52 -0400
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <a0624087ec2773c5d92f0@[192.168.24.210]>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
Message-ID: <1179750893.7838.10.camel@localhost.localdomain>

On Mon, 2007-05-21 at 08:13 -0400, Ray Cote wrote:
> At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
> >
> >Next question - who runs servers on *Windows*? :)
> 
> We do [Raises hand].
> Twisted built with Py2Exe and running as an NT service.
> Have delivered several different applications in this configuration 
> for clients.
> --Ray

Oh, I certainly understand running on Windows when clients pay you to do
so. I was just surprised people do so on internal servers when they do
have a choice.

Anyway, since this is bringing users out into the open - I'm sure we'd
all like to hear what Twisted is being used for in different companies,
and under which platforms. Do tell!

My company uses Twisted for a variety of uses, including reliable
multicast data distribution, messaging, monitoring and managing complex
processes, in the airline industry. (http://itasoftware.com)

How about you all?




From tnelson at onresolve.com  Mon May 21 08:02:59 2007
From: tnelson at onresolve.com (Trent Nelson)
Date: Mon, 21 May 2007 16:02:59 +0200
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <1179703959.7838.5.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg><4629.71.42.153.50.1179511117.squirrel@www.world-net.net><001b01c79a58$94921670$0400000a@spooge><1179611703.26686.4.camel@localhost.localdomain><4650D472.5060009@gmail.com>
	<1179703959.7838.5.camel@localhost.localdomain>
Message-ID: <AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg>


> Basic TCP should work. There's a rewrite of the IOCP reactor in a
branch
> which is likely better.

I believe Volodymyr already pointed it out, but can I just confirm
you're referring to this branch:

  svn://svn.twistedmatrix.com/svn/Twisted/branches/iocpreactor-1760-3/

Can anyone comment on the status of these two branches?
	
	iocp-producer-1657/
	iocp_syshandle-2021/





From p.mayers at imperial.ac.uk  Mon May 21 08:23:47 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 21 May 2007 15:23:47 +0100
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <4651AB73.2050306@imperial.ac.uk>

> 
> How about you all?

High-throughput in-house network management (now libsnmp-based, formerly 
bespoke code).

Lots of little glue services e.g. tail a log using "tail -f" and a 
process protocol, extract stats, answer SNMP queries for those stats via 
a unix socket passthrough from the net-snmp snmpd daemon.

A couple of web servers; including one that parses a FreeRadius SQL 
accounting database and issues either a PB-based, SNMP-based or Radius 
packet-of-death based disconnect for kicking newly-banned users.

A couple of misc daemons; e.g. one on our mail relays that will run an 
MD5 of a file in the filesystem on request from a Unix socket (in a 
pyrex GIL-release thread using the OpenSSL functions) so we can block 
all instances of a specific attachment by MD5 at SMTP-DATA-time.

A very clever app that a colleague wrote that uses the QUEUE target of 
iptables to get TCP port 443 SYN packets from a walled garden network; 
then connects to that SSL service and gets the certificate; then permits 
or allows the original SYN based on a name-based wildcard of the 
certificate CN.

Loads of other misc stuff mostly in this vein. It's a great.



From itamar at itamarst.org  Mon May 21 08:25:09 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 21 May 2007 10:25:09 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<4650D472.5060009@gmail.com>
	<1179703959.7838.5.camel@localhost.localdomain>
	<AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg>
Message-ID: <1179757509.7838.25.camel@localhost.localdomain>

On Mon, 2007-05-21 at 16:02 +0200, Trent Nelson wrote:
> > Basic TCP should work. There's a rewrite of the IOCP reactor in a
> branch
> > which is likely better.
> 
> I believe Volodymyr already pointed it out, but can I just confirm
> you're referring to this branch:
> 
>   svn://svn.twistedmatrix.com/svn/Twisted/branches/iocpreactor-1760-3/

Yes.

> Can anyone comment on the status of these two branches?
> 	
> 	iocp-producer-1657/
> 	iocp_syshandle-2021/

I think these involve bugs in the current IOCP code.




From matt at zgroupplc.com  Mon May 21 08:43:20 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Mon, 21 May 2007 15:43:20 +0100
Subject: [Twisted-Python] Twisted & ZSI
Message-ID: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi All,

Apologies if this has been covered before but there seems to be a  
dearth of documentation and examples on the net.

Does anyone have any tips for integrating ZSI with twisted? I am  
struggling with the concept of the request / response objects and how  
they relate to a twisted deferred object. Normally, under twisted, I  
would return a deferred from the SOAP method call and let the reactor  
take care of returning the response on callback/errback. How do I do  
this using ZSI?

If anyone has got some *simple* example code, I'd love to see it. I  
am not particularly concerned with general inter-operability, I am  
more concerned with getting a particular SOAP client working with my  
application. SOAPpy doesn't seem to be cutting the mustard, hence the  
need to try ZSI.

Any tips *gratefully* received :)

Matt


m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
QBvvjGEhKT2AtEfhckjliNs=
=AnFA
-----END PGP SIGNATURE-----



From rgacote at AppropriateSolutions.com  Mon May 21 09:33:27 2007
From: rgacote at AppropriateSolutions.com (Ray Cote)
Date: Mon, 21 May 2007 11:33:27 -0400
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
	Win32 	IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <a06240883c2776b8ba1a5@[192.168.24.210]>

At 8:34 AM -0400 5/21/07, Itamar Shtull-Trauring wrote:
>Anyway, since this is bringing users out into the open - I'm sure we'd
>all like to hear what Twisted is being used for in different companies,
>and under which platforms. Do tell!

Windows:
- Web services front end for an Oracle database in the food/nutrition 
management industry.
     <http://www.AppropriateSolutions.com>

- Gateway to various payment processing services (still in development).
     <http://www.AuricSystems.com>

-- 

Raymond Cote
Appropriate Solutions, Inc.
PO Box 458 ~ Peterborough, NH 03458-0458
Phone: 603.924.6079 ~ Fax: 603.924.8668
rgacote(at)AppropriateSolutions.com
www.AppropriateSolutions.com



From zooko at zooko.com  Mon May 21 09:42:37 2007
From: zooko at zooko.com (zooko at zooko.com)
Date: Mon, 21 May 2007 09:42:37 -0600
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?) 
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain> 
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <20070521154237.C4A2680558@zooko.com>


Allmydata, Inc. uses Twisted in its current proprietary consumer backup product
[1] as well as in its free-software distributed storage grid project [2].

Regards,

Zooko

[1] http://allmydata.com/
[2] http://allmydata.org/




From jritter at bektel.com  Mon May 21 09:52:32 2007
From: jritter at bektel.com (Josh Ritter)
Date: Mon, 21 May 2007 10:52:32 -0500
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
	Win32IOCPReactor?)
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg><4629.71.42.153.50.1179511117.squirrel@www.world-net.net><001b01c79a58$94921670$0400000a@spooge><1179611703.26686.4.camel@localhost.localdomain><a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <004501c79bc0$0e2c9f60$0400000a@spooge>

We run a successful independent MMORPG called Minions of Mirth.

We use Twisted for our master, character, GM, world servers, and client. 
The game has more than 40,000 registered players.

We're also working on licensing the technology.  There's more information on 
this available here: http://www.mmoworkshop.com

----- Original Message ----- 
From: "Itamar Shtull-Trauring" <itamar at itamarst.org>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Monday, May 21, 2007 7:34 AM
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] 
Win32IOCPReactor?)


> On Mon, 2007-05-21 at 08:13 -0400, Ray Cote wrote:
>> At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
>> >
>> >Next question - who runs servers on *Windows*? :)
>>
>> We do [Raises hand].
>> Twisted built with Py2Exe and running as an NT service.
>> Have delivered several different applications in this configuration
>> for clients.
>> --Ray
>
> Oh, I certainly understand running on Windows when clients pay you to do
> so. I was just surprised people do so on internal servers when they do
> have a choice.
>
> Anyway, since this is bringing users out into the open - I'm sure we'd
> all like to hear what Twisted is being used for in different companies,
> and under which platforms. Do tell!
>
> My company uses Twisted for a variety of uses, including reliable
> multicast data distribution, messaging, monitoring and managing complex
> processes, in the airline industry. (http://itasoftware.com)
>
> How about you all?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 




From zooko at zooko.com  Mon May 21 09:56:15 2007
From: zooko at zooko.com (zooko at zooko.com)
Date: Mon, 21 May 2007 09:56:15 -0600
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?) 
In-Reply-To: <20070521154237.C4A2680558@zooko.com> 
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
	<20070521154237.C4A2680558@zooko.com>
Message-ID: <20070521155615.917F180558@zooko.com>


 I wrote:
> 
> Allmydata, Inc. uses Twisted in its current proprietary consumer backup product
> [1] as well as in its free-software distributed storage grid project [2].
...
> [1] http://allmydata.com/
> [2] http://allmydata.org/

Oh, and apropos the discussion about Twisted-on-Windows and iocp reactor, 
I should mention that the current consumer-usable product [1] runs exclusively
on Windows (although the non-GUI, server part of it also runs on our Linux
servers).  The new free-software project [2] runs on Linux, Mac, Windows,
Cygwin.  We use the select reactor exclusively.  Every couple of months we
experiment again with switching to iocp reactor, and we hit a bug that forces
us to switch back to the select reactor, e.g. [3].  The good news is that it's
a new bug each time...

Regards,

Zooko

[3] http://allmydata.org/trac/tahoe/changeset/524



From ww at groovy.net  Mon May 21 09:56:16 2007
From: ww at groovy.net (William Waites)
Date: Mon, 21 May 2007 17:56:16 +0200
Subject: [Twisted-Python] Re: Tell us how you're using Twisted
Message-ID: <20070521155616.GA5073@haagenti.com>

The Haagenti Group [0] uses Twisted in telephony call control and billing
applications in conjunction with Yate [1] and Django [2]. The basic
framework is distributed on the Python Cheeseshop [3].

One example of a publicly available service implemented using this
toolset is our Dialstation [4] long distance calling service.

[0] Haagenti Group Inc. http://www.haagenti.com/
[1] Yet Another Telephony Engine http://yate.null.ro/
[2] The Django Framework http://www.djangoproject.com/
[3] The Telnik Framework http://cheeseshop.python.org/pypi/telnik/
[4] Dialstation http://www.dialstation.com/

Haagenti Group Inc.
Bootlab Atelier
Historische Telegrafenamt.
Tucholskystr. 6
Berlin 10117
info - at - haagenti.com



From eprparadocs at gmail.com  Mon May 21 10:29:38 2007
From: eprparadocs at gmail.com (Chas.)
Date: Mon, 21 May 2007 12:29:38 -0400
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@192.168.24.210>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <2f66cbb30705210929v3849002fl59f0c091db11e4c0@mail.gmail.com>

I use it in a peer-to-peer content addressible storage application for
managing petabytes of store (twistedstorage.org).

Chuck Wegrzyn


On 5/21/07, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
> On Mon, 2007-05-21 at 08:13 -0400, Ray Cote wrote:
> > At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
> > >
> > >Next question - who runs servers on *Windows*? :)
> >
> > We do [Raises hand].
> > Twisted built with Py2Exe and running as an NT service.
> > Have delivered several different applications in this configuration
> > for clients.
> > --Ray
>
> Oh, I certainly understand running on Windows when clients pay you to do
> so. I was just surprised people do so on internal servers when they do
> have a choice.
>
> Anyway, since this is bringing users out into the open - I'm sure we'd
> all like to hear what Twisted is being used for in different companies,
> and under which platforms. Do tell!
>
> My company uses Twisted for a variety of uses, including reliable
> multicast data distribution, messaging, monitoring and managing complex
> processes, in the airline industry. (http://itasoftware.com)
>
> How about you all?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070521/37ea7211/attachment.html>

From jacob at internet24.de  Mon May 21 10:49:48 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Mon, 21 May 2007 18:49:48 +0200
Subject: [Twisted-Python] Twisted & ZSI
In-Reply-To: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
References: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
Message-ID: <1179766188.10941.22.camel@localhost>

ZSI 2.0 has built-in twisted support...

(see --twisted option for wsdl2py/dispatch)

Client side usage:

from MyService_services import *

port = MyServiceLocator().getMyService("http://myhost/MyService")
port.binding.defer = True

msg = myMethodRequest()
msg.value =...
...
deferred = port.myMethod(msg)
deferred.addCallback(....)


Server side usage:

Use twisted.web and derive a service class from WSResource:

The following should get you started:

http://proj.badc.rl.ac.uk/ndg/browser/TI12-security/trunk/python/ndg.security.server/ndg/security/server/SessionMgr/server-config.tac


On Mon, 2007-05-21 at 15:43 +0100, Matthew Glubb wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hi All,
> 
> Apologies if this has been covered before but there seems to be a  
> dearth of documentation and examples on the net.
> 
> Does anyone have any tips for integrating ZSI with twisted? I am  
> struggling with the concept of the request / response objects and how  
> they relate to a twisted deferred object. Normally, under twisted, I  
> would return a deferred from the SOAP method call and let the reactor  
> take care of returning the response on callback/errback. How do I do  
> this using ZSI?
> 
> If anyone has got some *simple* example code, I'd love to see it. I  
> am not particularly concerned with general inter-operability, I am  
> more concerned with getting a particular SOAP client working with my  
> application. SOAPpy doesn't seem to be cutting the mustard, hence the  
> need to try ZSI.
> 
> Any tips *gratefully* received :)
> 
> Matt
> 
> 
> m a t t h e w   g l u b b
> 
> ________________________________________________________________________
> Z Group PLC
> 
> Tel: +44 (0) 8700 111 173
> Fax: +44 (0) 8707 051 393
> Txt: +44 (0) 7800 140 877
> Web: <http://www.zgroupplc.com/>
> 
> This  email  and  any  files  transmitted  with it are  confidential and
> intended solely for the use of the individual or entity to whom they are
> addressed.  The opinions  expressed in this mail are those of the author
> and do not necessarily  represent the views of the company.  If you have
> received this email in error please notify <service at zgroupplc.com>
> 
> 
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.1 (Darwin)
> 
> iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
> QBvvjGEhKT2AtEfhckjliNs=
> =AnFA
> -----END PGP SIGNATURE-----
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From bhenry at pacecocorp.com  Mon May 21 12:50:03 2007
From: bhenry at pacecocorp.com (Benjamin Henry)
Date: Mon, 21 May 2007 14:50:03 -0400
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
	Win32IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <F8D3784FE4E93C4AA66BE8C551EBB5D175119C@ntxbeus12.exchange.xchg>

My company (pacecocorp.com) is using twisted for various services using
Windows Server 2003 for the purpose of tracking and controlling
containers, cranes and trucks for container tracking in ship and rail
yards around the world.  Currently, we're using it to send images and
data from an embedded machine which has OCR algorithms for container
identification.

Regards,
 
Ben Henry
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Itamar Shtull-Trauring
> Sent: Monday, May 21, 2007 5:35 AM
> To: Twisted general discussion
> Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
> Win32IOCPReactor?)
> 
> On Mon, 2007-05-21 at 08:13 -0400, Ray Cote wrote:
> > At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
> > >
> > >Next question - who runs servers on *Windows*? :)
> >
> > We do [Raises hand].
> > Twisted built with Py2Exe and running as an NT service.
> > Have delivered several different applications in this configuration
> > for clients.
> > --Ray
> 
> Oh, I certainly understand running on Windows when clients pay you to
do
> so. I was just surprised people do so on internal servers when they do
> have a choice.
> 
> Anyway, since this is bringing users out into the open - I'm sure we'd
> all like to hear what Twisted is being used for in different
companies,
> and under which platforms. Do tell!
> 
> My company uses Twisted for a variety of uses, including reliable
> multicast data distribution, messaging, monitoring and managing
complex
> processes, in the airline industry. (http://itasoftware.com)
> 
> How about you all?
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From daedalus at eigenmagic.com  Mon May 21 15:30:21 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 22 May 2007 07:30:21 +1000
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
	Win32 IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <1179783021.2054.17.camel@fnord.melbourne.eigenmagic.net>

On Mon, 2007-05-21 at 08:34 -0400, Itamar Shtull-Trauring wrote:

> How about you all?

Software to monitor anything connected to a computer, mostly via SNMP,
but also TCP, ICMP, and any custom program. [1]

The BEEPy pure Python BEEP implementation. [2]

libsnmp, a pure Python SNMP library.[3] Though not purely twisted code,
we use it with twisted in seafelt, and there are backburner plans to
merge it into twisted. (Thanks also to Phil Mayers for the libsnmp
mention. I'm really pleased that's worked out so well for you).

[1] http://www.seafelt.com
[2] http://beepy.sourceforge.net/
[3] http://www.seafelt.com/libsnmp

-- 
Justin Warren <daedalus at eigenmagic.com>



From DBerkstresser at daviswire.com  Mon May 21 15:53:09 2007
From: DBerkstresser at daviswire.com (Berkstresser, Dan)
Date: Mon, 21 May 2007 14:53:09 -0700
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <E1HqAIk-000166-Pi@cube.twistedmatrix.com>
Message-ID: <522DFE1BD2489441978055A65C9DF437B36A0B@KENSVR04.division.daviswire.com>

I am using twisted for an in-house production tracking system for a
large steel mill.  The twisted server handles communications between a
MySQL database, wireless barcode scanners that use WinCE/Python CE for
the clients, some networked industrial scales and interfaces with a
custom Quality Assurance database.

Lucas' response to my Windows NT Service question from the other day
worked like a charm BTW.  Not sure how to link/"re:" to it so I will
re-post it here for posterity:

>From: Lucas Taylor <lucas at lucaserve.com>
>Subject: Re: [Twisted-Python] Windows NT Service Problem
>To: Twisted general discussion <twisted-python at twistedmatrix.com>
>Message-ID: <464D3F74.1060403 at lucaserve.com>
>Content-Type: text/plain; charset=ISO-8859-1

>This isn't really relevant to the references you've mentioned, but
there
>is a simple way to create Windows services with a minor amount of code
>and it's not too onerous. You don't have to use py2exe, although it is
>certainly possible to do so once you've got the rest working. I'm not
>sure if this is the "best" way, but it has been successful for me in a
>couple of projects over the past 2 years.

>Below is a very simple example using the QOTD server from the core
docs.
>It doesn't use tac files, Application objects, or twistd, so it's very
>basic. A "real" project will differ, but the basic mechanics of
starting
>and stopping the service are illustrated in the SvcDoRun() and
>CheckForQuit() methods of the WindowsService object. The idea is to
have
>the reactor check for a Stop event periodically and exit if it is
raised.

>You should be able to install and remove it thusly:
>python qotdservice.py install
>python qotdservice.py remove

>You can then test it out with the sample Echo client from the core
docs.

"""qotdservice.py
Sample Twisted Windows Service
"""

# Service Utilities
import win32serviceutil
import win32service
import win32event

# Twisted imports
from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor

class QOTD(Protocol):

    def connectionMade(self):
        self.transport.write("An apple a day keeps the doctor away\r\n")
        self.transport.loseConnection()


class WindowsService(win32serviceutil.ServiceFramework):
    _svc_name_ = "TwistedWin32Service"
    _svc_display_name_ = "Twisted Win32 Service"

    def __init__(self, args):
        win32serviceutil.ServiceFramework.__init__(self, args)
        self.hWaitStop = win32event.CreateEvent(None, 0, 0, None)

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        win32event.SetEvent(self.hWaitStop)

    def SvcDoRun(self):
        import servicemanager

        self.CheckForQuit()

        factory = Factory()
        factory.protocol = QOTD

        reactor.listenTCP(8007, factory)
        reactor.run(installSignalHandlers=0)


    def CheckForQuit(self):
        retval = win32event.WaitForSingleObject(self.hWaitStop, 10)
        if not retval == win32event.WAIT_TIMEOUT:
            # Received Quit from Win32
            reactor.stop()

        reactor.callLater(1.0, self.CheckForQuit)

if __name__=='__main__':
    win32serviceutil.HandleCommandLine(WindowsService)








From matt at zgroupplc.com  Tue May 22 02:01:19 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Tue, 22 May 2007 09:01:19 +0100
Subject: [Twisted-Python] Twisted & ZSI
In-Reply-To: <1179766188.10941.22.camel@localhost>
References: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
	<1179766188.10941.22.camel@localhost>
Message-ID: <7B7067C5-96C3-47AF-8EEE-A654CD5E79E4@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Thomas,

Thanks for the pointer. From my quick glance at that code I seem to  
already be on the right track. I'll have a closer look and see if I  
can understand how deferreds interact with it all.

Regards,


Matt

On 21 May 2007, at 17:49, Thomas Jacob wrote:

> ZSI 2.0 has built-in twisted support...
>
> (see --twisted option for wsdl2py/dispatch)
>
> Client side usage:
>
> from MyService_services import *
>
> port = MyServiceLocator().getMyService("http://myhost/MyService")
> port.binding.defer = True
>
> msg = myMethodRequest()
> msg.value =...
> ...
> deferred = port.myMethod(msg)
> deferred.addCallback(....)
>
>
> Server side usage:
>
> Use twisted.web and derive a service class from WSResource:
>
> The following should get you started:
>
> http://proj.badc.rl.ac.uk/ndg/browser/TI12-security/trunk/python/ 
> ndg.security.server/ndg/security/server/SessionMgr/server-config.tac
>
>
> On Mon, 2007-05-21 at 15:43 +0100, Matthew Glubb wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> Hi All,
>>
>> Apologies if this has been covered before but there seems to be a
>> dearth of documentation and examples on the net.
>>
>> Does anyone have any tips for integrating ZSI with twisted? I am
>> struggling with the concept of the request / response objects and how
>> they relate to a twisted deferred object. Normally, under twisted, I
>> would return a deferred from the SOAP method call and let the reactor
>> take care of returning the response on callback/errback. How do I do
>> this using ZSI?
>>
>> If anyone has got some *simple* example code, I'd love to see it. I
>> am not particularly concerned with general inter-operability, I am
>> more concerned with getting a particular SOAP client working with my
>> application. SOAPpy doesn't seem to be cutting the mustard, hence the
>> need to try ZSI.
>>
>> Any tips *gratefully* received :)
>>
>> Matt
>>
>>
>> m a t t h e w   g l u b b
>>
>> _____________________________________________________________________ 
>> ___
>> Z Group PLC
>>
>> Tel: +44 (0) 8700 111 173
>> Fax: +44 (0) 8707 051 393
>> Txt: +44 (0) 7800 140 877
>> Web: <http://www.zgroupplc.com/>
>>
>> This  email  and  any  files  transmitted  with it are   
>> confidential and
>> intended solely for the use of the individual or entity to whom  
>> they are
>> addressed.  The opinions  expressed in this mail are those of the  
>> author
>> and do not necessarily  represent the views of the company.  If  
>> you have
>> received this email in error please notify <service at zgroupplc.com>
>>
>>
>>
>> -----BEGIN PGP SIGNATURE-----
>> Version: GnuPG v1.4.1 (Darwin)
>>
>> iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
>> QBvvjGEhKT2AtEfhckjliNs=
>> =AnFA
>> -----END PGP SIGNATURE-----
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGUqNPyI6MkdKPngkRAiMqAJ94XUKihT+eXd4DpYmvGxOjMuYdBgCgr0SJ
SZTUMxxMa91uFZb0PTvS4VM=
=ahqG
-----END PGP SIGNATURE-----



From karlb at gmx.net  Tue May 22 06:47:11 2007
From: karlb at gmx.net (Karl Bartel)
Date: Tue, 22 May 2007 14:47:11 +0200
Subject: [Twisted-Python] Dead link in wiki/ContributingToTwistedLabs
Message-ID: <14FBB459-F5F0-404C-B913-F68D077312E4@gmx.net>

The link to the Twisted coding standard on http://twistedmatrix.com/ 
trac/wiki/ContributingToTwistedLabs returns a 404. You probably want  
it to point to http://twistedmatrix.com/trac/browser/trunk/doc/ 
development/policy/coding-standard.xhtml?format=raw

It looks like I can't edit the page, and there's no contact email on  
that page, so I thought I'd write to the mailing list.

-- Karl



From matt at zgroupplc.com  Tue May 22 07:36:53 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Tue, 22 May 2007 14:36:53 +0100
Subject: [Twisted-Python] Twisted & ZSI
In-Reply-To: <1179766188.10941.22.camel@localhost>
References: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
	<1179766188.10941.22.camel@localhost>
Message-ID: <53F99A7A-89EE-462A-89FC-B499253941AB@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi All,

Thanks again Thomas for pointing me in the right direction with  
twisted and ZSI. I apologise if this is getting technically off-topic  
(ie. ZSI) but people seem to get more annoyed about cross posting.  
Berate me about that if it makes you feel better! If you still have  
the patience, I have one major problem that is bugging me:

At the moment, I have the following (test function) working fine  
within twisted and twistd:

def wsa_ProcessAip(self, ps, address, **kw):
     self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,  
ps, address, **kw)
     self.response._mode = False
     self.response._return = '127.0.0.1'
     return self.request, self.response

*However* I want to return a deferred from this method. I am not sure  
that this is easily possible as ZSI doesn't seem to be recognising a  
return value of either server.NOT_DONE_YET, or a deferred object. It  
is also forcing me to return a tuple containing the ZSI request and  
response objects which is confusing me as I want to return a  
deferred. My ideal would be:

def wsa_ProcessAip(self, ps, address, **kw):
     self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,  
ps, address, **kw)
     # Don't worry about there being nothing to call back this
     # In my reality it does get called back
     deferred = defer.Deferred()
     deferred.addBoth(self.aipBack)
     return deferred

def aipBack(self, result):
     ip, mode = result
     self.response._mode = mode
     self.response._return = ip
     return self.request, self.response

Is this possible? Scanning the ZSI twisted package, the only mention  
of a deferred object is in the client module. I am also puzzled with  
the 'Delayed Call Sweep' debug line. To me, this indicates some kind  
of deferred.

Thanks a lot for your time :)


Matt


On 21 May 2007, at 17:49, Thomas Jacob wrote:

> ZSI 2.0 has built-in twisted support...
>
> (see --twisted option for wsdl2py/dispatch)
>
> Client side usage:
>
> from MyService_services import *
>
> port = MyServiceLocator().getMyService("http://myhost/MyService")
> port.binding.defer = True
>
> msg = myMethodRequest()
> msg.value =...
> ...
> deferred = port.myMethod(msg)
> deferred.addCallback(....)
>
>
> Server side usage:
>
> Use twisted.web and derive a service class from WSResource:
>
> The following should get you started:
>
> http://proj.badc.rl.ac.uk/ndg/browser/TI12-security/trunk/python/ 
> ndg.security.server/ndg/security/server/SessionMgr/server-config.tac
>
>
> On Mon, 2007-05-21 at 15:43 +0100, Matthew Glubb wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> Hi All,
>>
>> Apologies if this has been covered before but there seems to be a
>> dearth of documentation and examples on the net.
>>
>> Does anyone have any tips for integrating ZSI with twisted? I am
>> struggling with the concept of the request / response objects and how
>> they relate to a twisted deferred object. Normally, under twisted, I
>> would return a deferred from the SOAP method call and let the reactor
>> take care of returning the response on callback/errback. How do I do
>> this using ZSI?
>>
>> If anyone has got some *simple* example code, I'd love to see it. I
>> am not particularly concerned with general inter-operability, I am
>> more concerned with getting a particular SOAP client working with my
>> application. SOAPpy doesn't seem to be cutting the mustard, hence the
>> need to try ZSI.
>>
>> Any tips *gratefully* received :)
>>
>> Matt
>>
>>
>> m a t t h e w   g l u b b
>>
>> _____________________________________________________________________ 
>> ___
>> Z Group PLC
>>
>> Tel: +44 (0) 8700 111 173
>> Fax: +44 (0) 8707 051 393
>> Txt: +44 (0) 7800 140 877
>> Web: <http://www.zgroupplc.com/>
>>
>> This  email  and  any  files  transmitted  with it are   
>> confidential and
>> intended solely for the use of the individual or entity to whom  
>> they are
>> addressed.  The opinions  expressed in this mail are those of the  
>> author
>> and do not necessarily  represent the views of the company.  If  
>> you have
>> received this email in error please notify <service at zgroupplc.com>
>>
>>
>>
>> -----BEGIN PGP SIGNATURE-----
>> Version: GnuPG v1.4.1 (Darwin)
>>
>> iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
>> QBvvjGEhKT2AtEfhckjliNs=
>> =AnFA
>> -----END PGP SIGNATURE-----
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGUvH4yI6MkdKPngkRAgKEAKCSaH+sOfF8M/DyqWCCz7Qy2YtYpQCgoZiH
zn42XMg+wNZvGsssTNr3tfg=
=WHLP
-----END PGP SIGNATURE-----



From jacob at internet24.de  Tue May 22 12:22:33 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Tue, 22 May 2007 20:22:33 +0200
Subject: [Twisted-Python] Twisted & ZSI
In-Reply-To: <53F99A7A-89EE-462A-89FC-B499253941AB@zgroupplc.com>
References: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
	<1179766188.10941.22.camel@localhost>
	<53F99A7A-89EE-462A-89FC-B499253941AB@zgroupplc.com>
Message-ID: <1179858153.15084.19.camel@localhost>

Actually, I'm not using the built-in twisted dispatching system
of ZSI myself, so you probably will have to read the source
to find out these things :-)

Alternatively you might just want to try to ask that question again on
pywebsvcs-talk at lists.sourceforge.net where the authors of ZSI post
regularly, they are generally very helpful....

But it's also pretty easy to build your own ZSI/twisted dispatcher,
that's
what I am doing (executing the method calls in separate threads, handing
deferred execution back the twisted reactor when I need deferreds,
waiting on a lock till the results come in) , I could mail you a rough
example if you like... 

On Tue, 2007-05-22 at 14:36 +0100, Matthew Glubb wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hi All,
> 
> Thanks again Thomas for pointing me in the right direction with  
> twisted and ZSI. I apologise if this is getting technically off-topic  
> (ie. ZSI) but people seem to get more annoyed about cross posting.  
> Berate me about that if it makes you feel better! If you still have  
> the patience, I have one major problem that is bugging me:
> 
> At the moment, I have the following (test function) working fine  
> within twisted and twistd:
> 
> def wsa_ProcessAip(self, ps, address, **kw):
>      self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,  
> ps, address, **kw)
>      self.response._mode = False
>      self.response._return = '127.0.0.1'
>      return self.request, self.response
> 
> *However* I want to return a deferred from this method. I am not sure  
> that this is easily possible as ZSI doesn't seem to be recognising a  
> return value of either server.NOT_DONE_YET, or a deferred object. It  
> is also forcing me to return a tuple containing the ZSI request and  
> response objects which is confusing me as I want to return a  
> deferred. My ideal would be:
> 
> def wsa_ProcessAip(self, ps, address, **kw):
>      self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,  
> ps, address, **kw)
>      # Don't worry about there being nothing to call back this
>      # In my reality it does get called back
>      deferred = defer.Deferred()
>      deferred.addBoth(self.aipBack)
>      return deferred
> 
> def aipBack(self, result):
>      ip, mode = result
>      self.response._mode = mode
>      self.response._return = ip
>      return self.request, self.response
> 
> Is this possible? Scanning the ZSI twisted package, the only mention  
> of a deferred object is in the client module. I am also puzzled with  
> the 'Delayed Call Sweep' debug line. To me, this indicates some kind  
> of deferred.
> 
> Thanks a lot for your time :)
> 
> 
> Matt
> 
> 
> On 21 May 2007, at 17:49, Thomas Jacob wrote:
> 
> > ZSI 2.0 has built-in twisted support...
> >
> > (see --twisted option for wsdl2py/dispatch)
> >
> > Client side usage:
> >
> > from MyService_services import *
> >
> > port = MyServiceLocator().getMyService("http://myhost/MyService")
> > port.binding.defer = True
> >
> > msg = myMethodRequest()
> > msg.value =...
> > ...
> > deferred = port.myMethod(msg)
> > deferred.addCallback(....)
> >
> >
> > Server side usage:
> >
> > Use twisted.web and derive a service class from WSResource:
> >
> > The following should get you started:
> >
> > http://proj.badc.rl.ac.uk/ndg/browser/TI12-security/trunk/python/ 
> > ndg.security.server/ndg/security/server/SessionMgr/server-config.tac
> >
> >
> > On Mon, 2007-05-21 at 15:43 +0100, Matthew Glubb wrote:
> >> -----BEGIN PGP SIGNED MESSAGE-----
> >> Hash: SHA1
> >>
> >> Hi All,
> >>
> >> Apologies if this has been covered before but there seems to be a
> >> dearth of documentation and examples on the net.
> >>
> >> Does anyone have any tips for integrating ZSI with twisted? I am
> >> struggling with the concept of the request / response objects and how
> >> they relate to a twisted deferred object. Normally, under twisted, I
> >> would return a deferred from the SOAP method call and let the reactor
> >> take care of returning the response on callback/errback. How do I do
> >> this using ZSI?
> >>
> >> If anyone has got some *simple* example code, I'd love to see it. I
> >> am not particularly concerned with general inter-operability, I am
> >> more concerned with getting a particular SOAP client working with my
> >> application. SOAPpy doesn't seem to be cutting the mustard, hence the
> >> need to try ZSI.
> >>
> >> Any tips *gratefully* received :)
> >>
> >> Matt
> >>
> >>
> >> m a t t h e w   g l u b b
> >>
> >> _____________________________________________________________________ 
> >> ___
> >> Z Group PLC
> >>
> >> Tel: +44 (0) 8700 111 173
> >> Fax: +44 (0) 8707 051 393
> >> Txt: +44 (0) 7800 140 877
> >> Web: <http://www.zgroupplc.com/>
> >>
> >> This  email  and  any  files  transmitted  with it are   
> >> confidential and
> >> intended solely for the use of the individual or entity to whom  
> >> they are
> >> addressed.  The opinions  expressed in this mail are those of the  
> >> author
> >> and do not necessarily  represent the views of the company.  If  
> >> you have
> >> received this email in error please notify <service at zgroupplc.com>
> >>
> >>
> >>
> >> -----BEGIN PGP SIGNATURE-----
> >> Version: GnuPG v1.4.1 (Darwin)
> >>
> >> iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
> >> QBvvjGEhKT2AtEfhckjliNs=
> >> =AnFA
> >> -----END PGP SIGNATURE-----
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> m a t t h e w   g l u b b
> 
> ________________________________________________________________________
> Z Group PLC
> 
> Tel: +44 (0) 8700 111 173
> Fax: +44 (0) 8707 051 393
> Txt: +44 (0) 7800 140 877
> Web: <http://www.zgroupplc.com/>
> 
> This  email  and  any  files  transmitted  with it are  confidential and
> intended solely for the use of the individual or entity to whom they are
> addressed.  The opinions  expressed in this mail are those of the author
> and do not necessarily  represent the views of the company.  If you have
> received this email in error please notify <service at zgroupplc.com>
> 
> 
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.1 (Darwin)
> 
> iD8DBQFGUvH4yI6MkdKPngkRAgKEAKCSaH+sOfF8M/DyqWCCz7Qy2YtYpQCgoZiH
> zn42XMg+wNZvGsssTNr3tfg=
> =WHLP
> -----END PGP SIGNATURE-----
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20070522/c06e348f/attachment.sig>

From brendoncolby at gmail.com  Tue May 22 13:32:02 2007
From: brendoncolby at gmail.com (Brendon Colby)
Date: Tue, 22 May 2007 14:32:02 -0500
Subject: [Twisted-Python] Need help pulling things together.
Message-ID: <e64b001e0705221232v70ce16d8x8c03970c4937dc56@mail.gmail.com>

Greetings,

I've struggled to learn Twisted for a couple of years, usually hitting
the same wall I've hit yet again and giving up. I acknowledge the huge
benefit to using Twisted for what I want to do, so I wanted to see if
some nice folks out there can help me pull some things together. I've
gone through the docs, previous posts, Twisted code and examples etc.
quite extensively. Things just have not gelled for me.

The project I'm working on is, at its core, a relatively basic chat
server. There are "Areas" and "Users". What I do now with asynchat is
create a new User() object for each UserSocket() object (each user who
connects). The UserSocket() class parses the socket data and does a
getattr(), i.e. if the client sends a "sendAreaMessage" command I
getattr() User.do_sendAreaMessage(). The work is done in the User
class, then an event is sent back to the user. This is the pattern my
brain wants to use with Twisted, and I'm not sure whether or not I'm
off to a bad start. I took this from the chat server example:

class ChatProtocol(basic.LineReceiver):
    delimiter = '\n'

    def connectionMade(self):
        print "Got new client!"
        self.user = User(self)
        self.message("Welcome to chat.")

    def connectionLost(self, reason):
        print "Lost a client!"

    def lineReceived(self, line):
        data = line.split(" ")
        getattr(self.user,'do_'+data[0])(data[1:])

    def message(self, message):
        self.transport.write(message + self.delimiter)

class ChatFactory(Factory):
    protocol = ChatProtocol

class Area:
    pass # Area stuff

class User:
    def __init__(self,protocol):
        print "New user"
        self.protocol = protocol

    def do_foo(self,args):
        message = "do_foo with args: "+ ' '.join(args)
        self.protocol.transport.write(message + "\n")

application = service.Application("sserverd")
internet.TCPServer(4001, ChatFactory()).setServiceParent(application)


With all the different examples I'm having a hard time finding the
"right" way to write my server using Twisted. I thought I was on to
something reading through the IRC server protocol, but without a full
server example I got lost. Do I set up a generic handleCommand() like
interface and define each command in the protocol class (i.e.
do_sendMessage) and have callbacks that my User class
redefines/implements? Or am I on the right path?

I really appreciate any input on this!

Brendon



From wthie at thiengineering.ch  Wed May 23 00:11:45 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 23 May 2007 08:11:45 +0200
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <4653DB21.8080807@thiengineering.ch>

We do most development on MSW and also have some non-productive 
testsites running for demonstration purposes. One is an implementation 
of the most popular Swiss card game 'Jass' where you can play against 
three 'computer players' on jass.thie.ch (use login/pass: sf.tv when 
propmted. The other is a demo for a webapp for looking up phone numbers 
and address details for all registered customers of Swiss Telecom. I 
also married some example code (serial GPS stuff) with Athena/LivePages 
thus providing a browser interface for a serially connected industrial 
SPS. Another Athena/Livepage mini example I wrote involved a standard 
IXUS Canon camera (USB connected), providing access to the cams 
functions via the browser.

Werner

Itamar Shtull-Trauring wrote:
> On Mon, 2007-05-21 at 08:13 -0400, Ray Cote wrote:
>> At 5:55 PM -0400 5/19/07, Itamar Shtull-Trauring wrote:
>>> Next question - who runs servers on *Windows*? :)
>> We do [Raises hand].
>> Twisted built with Py2Exe and running as an NT service.
>> Have delivered several different applications in this configuration 
>> for clients.
>> --Ray
> 
> Oh, I certainly understand running on Windows when clients pay you to do
> so. I was just surprised people do so on internal servers when they do
> have a choice.
> 
> Anyway, since this is bringing users out into the open - I'm sure we'd
> all like to hear what Twisted is being used for in different companies,
> and under which platforms. Do tell!
> 
> My company uses Twisted for a variety of uses, including reliable
> multicast data distribution, messaging, monitoring and managing complex
> processes, in the airline industry. (http://itasoftware.com)
> 
> How about you all?
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From michaelschneider at current.net  Wed May 23 07:42:34 2007
From: michaelschneider at current.net (Michael Schneider)
Date: Wed, 23 May 2007 09:42:34 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <1179757509.7838.25.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<4650D472.5060009@gmail.com>	<1179703959.7838.5.camel@localhost.localdomain>	<AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg>
	<1179757509.7838.25.camel@localhost.localdomain>
Message-ID: <465444CA.6030309@current.net>

There is an IOCP buildbot that illustrates the current state of the IOCP reator against the twisted test suite.


Just look at the win32-py2.5-iocp column on 
http://twistedmatrix.com/buildbot/

Happy coding,
Mike

Itamar Shtull-Trauring wrote:
> On Mon, 2007-05-21 at 16:02 +0200, Trent Nelson wrote:
>   
>>> Basic TCP should work. There's a rewrite of the IOCP reactor in a
>>>       
>> branch
>>     
>>> which is likely better.
>>>       
>> I believe Volodymyr already pointed it out, but can I just confirm
>> you're referring to this branch:
>>
>>   svn://svn.twistedmatrix.com/svn/Twisted/branches/iocpreactor-1760-3/
>>     
>
> Yes.
>
>   
>> Can anyone comment on the status of these two branches?
>> 	
>> 	iocp-producer-1657/
>> 	iocp_syshandle-2021/
>>     
>
> I think these involve bugs in the current IOCP code.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>   




From tnelson at onresolve.com  Wed May 23 07:52:24 2007
From: tnelson at onresolve.com (Trent Nelson)
Date: Wed, 23 May 2007 15:52:24 +0200
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <465444CA.6030309@current.net>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<4650D472.5060009@gmail.com>	<1179703959.7838.5.camel@localhost.localdomain>	<AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg><1179757509.7838.25.camel@localhost.localdomain>
	<465444CA.6030309@current.net>
Message-ID: <AB1BB4CF81B9214682079EB55A7125ED01DDAFC2@mapibe05.exchange.xchg>


> There is an IOCP buildbot that illustrates the current state of the
IOCP
> reator against the twisted test suite.
>
> Just look at the win32-py2.5-iocp column on
> http://twistedmatrix.com/buildbot/
> 
> Happy coding,
> Mike

Great link, thanks.  Least I've got a starting point now (address test
failures) if I want to start digging around in the code }:>

	Trent.



From matt at zgroupplc.com  Wed May 23 07:55:14 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Wed, 23 May 2007 14:55:14 +0100
Subject: [Twisted-Python] Twisted & ZSI
In-Reply-To: <1179858153.15084.19.camel@localhost>
References: <B2FBB331-5010-4B22-B3C4-9BC59F9CFDBA@zgroupplc.com>
	<1179766188.10941.22.camel@localhost>
	<53F99A7A-89EE-462A-89FC-B499253941AB@zgroupplc.com>
	<1179858153.15084.19.camel@localhost>
Message-ID: <8FB9023B-8B77-4DCB-9377-EA40CE8716E0@zgroupplc.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Thomas,

Thanks for your reply.

On 22 May 2007, at 19:22, Thomas Jacob wrote:

> Actually, I'm not using the built-in twisted dispatching system
> of ZSI myself, so you probably will have to read the source
> to find out these things :-)

Yes, I have been. With reference to deferreds, its not that  
illuminating :( From my investigations, I am beginning to suspect  
that whoever wrote the ZSI.twisted package overlooked the fact that  
someone might want to defer a server's response to a SOAP call. The  
callback handlers and chains may be disguising the use of deferreds  
though as ZSI.twisted.WSresource.WSResource.render_POST does return  
server.NOT_DONE_YET.

> Alternatively you might just want to try to ask that question again on
> pywebsvcs-talk at lists.sourceforge.net where the authors of ZSI post
> regularly, they are generally very helpful....

I'll do just that :)

> But it's also pretty easy to build your own ZSI/twisted dispatcher,
> that's
> what I am doing (executing the method calls in separate threads,  
> handing
> deferred execution back the twisted reactor when I need deferreds,
> waiting on a lock till the results come in) , I could mail you a rough
> example if you like...

Yes, that makes sense. I'd really like to use twistd as the service  
container rather than ZSI (I am just more familiar with twisted) if I  
can but I might come sheepishly knocking at your door should I fail ;)

Regards


Matt

>
> On Tue, 2007-05-22 at 14:36 +0100, Matthew Glubb wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> Hi All,
>>
>> Thanks again Thomas for pointing me in the right direction with
>> twisted and ZSI. I apologise if this is getting technically off-topic
>> (ie. ZSI) but people seem to get more annoyed about cross posting.
>> Berate me about that if it makes you feel better! If you still have
>> the patience, I have one major problem that is bugging me:
>>
>> At the moment, I have the following (test function) working fine
>> within twisted and twistd:
>>
>> def wsa_ProcessAip(self, ps, address, **kw):
>>      self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,
>> ps, address, **kw)
>>      self.response._mode = False
>>      self.response._return = '127.0.0.1'
>>      return self.request, self.response
>>
>> *However* I want to return a deferred from this method. I am not sure
>> that this is easily possible as ZSI doesn't seem to be recognising a
>> return value of either server.NOT_DONE_YET, or a deferred object. It
>> is also forcing me to return a tuple containing the ZSI request and
>> response objects which is confusing me as I want to return a
>> deferred. My ideal would be:
>>
>> def wsa_ProcessAip(self, ps, address, **kw):
>>      self.request, self.response = CPServiceWSRF.wsa_ProcessAip(self,
>> ps, address, **kw)
>>      # Don't worry about there being nothing to call back this
>>      # In my reality it does get called back
>>      deferred = defer.Deferred()
>>      deferred.addBoth(self.aipBack)
>>      return deferred
>>
>> def aipBack(self, result):
>>      ip, mode = result
>>      self.response._mode = mode
>>      self.response._return = ip
>>      return self.request, self.response
>>
>> Is this possible? Scanning the ZSI twisted package, the only mention
>> of a deferred object is in the client module. I am also puzzled with
>> the 'Delayed Call Sweep' debug line. To me, this indicates some kind
>> of deferred.
>>
>> Thanks a lot for your time :)
>>
>>
>> Matt
>>
>>
>> On 21 May 2007, at 17:49, Thomas Jacob wrote:
>>
>>> ZSI 2.0 has built-in twisted support...
>>>
>>> (see --twisted option for wsdl2py/dispatch)
>>>
>>> Client side usage:
>>>
>>> from MyService_services import *
>>>
>>> port = MyServiceLocator().getMyService("http://myhost/MyService")
>>> port.binding.defer = True
>>>
>>> msg = myMethodRequest()
>>> msg.value =...
>>> ...
>>> deferred = port.myMethod(msg)
>>> deferred.addCallback(....)
>>>
>>>
>>> Server side usage:
>>>
>>> Use twisted.web and derive a service class from WSResource:
>>>
>>> The following should get you started:
>>>
>>> http://proj.badc.rl.ac.uk/ndg/browser/TI12-security/trunk/python/
>>> ndg.security.server/ndg/security/server/SessionMgr/server-config.tac
>>>
>>>
>>> On Mon, 2007-05-21 at 15:43 +0100, Matthew Glubb wrote:
>>>> -----BEGIN PGP SIGNED MESSAGE-----
>>>> Hash: SHA1
>>>>
>>>> Hi All,
>>>>
>>>> Apologies if this has been covered before but there seems to be a
>>>> dearth of documentation and examples on the net.
>>>>
>>>> Does anyone have any tips for integrating ZSI with twisted? I am
>>>> struggling with the concept of the request / response objects  
>>>> and how
>>>> they relate to a twisted deferred object. Normally, under  
>>>> twisted, I
>>>> would return a deferred from the SOAP method call and let the  
>>>> reactor
>>>> take care of returning the response on callback/errback. How do  
>>>> I do
>>>> this using ZSI?
>>>>
>>>> If anyone has got some *simple* example code, I'd love to see it. I
>>>> am not particularly concerned with general inter-operability, I am
>>>> more concerned with getting a particular SOAP client working  
>>>> with my
>>>> application. SOAPpy doesn't seem to be cutting the mustard,  
>>>> hence the
>>>> need to try ZSI.
>>>>
>>>> Any tips *gratefully* received :)
>>>>
>>>> Matt
>>>>
>>>>
>>>> m a t t h e w   g l u b b
>>>>
>>>> ___________________________________________________________________ 
>>>> __
>>>> ___
>>>> Z Group PLC
>>>>
>>>> Tel: +44 (0) 8700 111 173
>>>> Fax: +44 (0) 8707 051 393
>>>> Txt: +44 (0) 7800 140 877
>>>> Web: <http://www.zgroupplc.com/>
>>>>
>>>> This  email  and  any  files  transmitted  with it are
>>>> confidential and
>>>> intended solely for the use of the individual or entity to whom
>>>> they are
>>>> addressed.  The opinions  expressed in this mail are those of the
>>>> author
>>>> and do not necessarily  represent the views of the company.  If
>>>> you have
>>>> received this email in error please notify <service at zgroupplc.com>
>>>>
>>>>
>>>>
>>>> -----BEGIN PGP SIGNATURE-----
>>>> Version: GnuPG v1.4.1 (Darwin)
>>>>
>>>> iD8DBQFGUbALyI6MkdKPngkRAtB7AJ9uSOBnIDBIxHCAcsw9XGt7TLzWjgCfbnhw
>>>> QBvvjGEhKT2AtEfhckjliNs=
>>>> =AnFA
>>>> -----END PGP SIGNATURE-----
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>>
>> m a t t h e w   g l u b b
>>
>> _____________________________________________________________________ 
>> ___
>> Z Group PLC
>>
>> Tel: +44 (0) 8700 111 173
>> Fax: +44 (0) 8707 051 393
>> Txt: +44 (0) 7800 140 877
>> Web: <http://www.zgroupplc.com/>
>>
>> This  email  and  any  files  transmitted  with it are   
>> confidential and
>> intended solely for the use of the individual or entity to whom  
>> they are
>> addressed.  The opinions  expressed in this mail are those of the  
>> author
>> and do not necessarily  represent the views of the company.  If  
>> you have
>> received this email in error please notify <service at zgroupplc.com>
>>
>>
>>
>> -----BEGIN PGP SIGNATURE-----
>> Version: GnuPG v1.4.1 (Darwin)
>>
>> iD8DBQFGUvH4yI6MkdKPngkRAgKEAKCSaH+sOfF8M/DyqWCCz7Qy2YtYpQCgoZiH
>> zn42XMg+wNZvGsssTNr3tfg=
>> =WHLP
>> -----END PGP SIGNATURE-----
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



m a t t h e w   g l u b b

________________________________________________________________________
Z Group PLC

Tel: +44 (0) 8700 111 173
Fax: +44 (0) 8707 051 393
Txt: +44 (0) 7800 140 877
Web: <http://www.zgroupplc.com/>

This  email  and  any  files  transmitted  with it are  confidential and
intended solely for the use of the individual or entity to whom they are
addressed.  The opinions  expressed in this mail are those of the author
and do not necessarily  represent the views of the company.  If you have
received this email in error please notify <service at zgroupplc.com>



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFGVEfCyI6MkdKPngkRAhOdAJ9E7Lo66q7Yr4lvyPaCvAlUt1GbgQCeNTDP
f3n+IuokHoymBVFlXwqJS2c=
=l/Xz
-----END PGP SIGNATURE-----



From clawsicus at gmail.com  Wed May 23 07:57:40 2007
From: clawsicus at gmail.com (Chris Laws)
Date: Wed, 23 May 2007 23:27:40 +0930
Subject: [Twisted-Python] Twisted, Tkinter and CORBA integration
Message-ID: <3ff1f41d0705230657m4fb3058ds99c4b9f1e4e1e648@mail.gmail.com>

Event loops everywhere…

I've inherited a small python utility that we use for system monitoring. It
uses CORBA to capture event traffic and report some status (using CORBA
EventService registration, status events) via a Tkinter GUI. The app is run
by the Tk "mainloop" and at frequent intervals calls the orb's
perform_work() method to process events. This approach of calling frequently
into the ORB seems to work OK and does not appear to hold up the GUI.

I need to update the app so that it can handle the event service
disappearing and re-appearing (i.e. Make it a bit more robust to handle the
remote end starting/stopping). We want this tool to run continuously while
the system we monitor is started and stopped. It needs to reconnect when the
system comes up and not crash when the system shuts down.

I would also like to take the opportunity to make the CORBA related code
somewhat more generic (not bound to the Tk mainloop) so I can use it for
other tools which will not have a GUI and hence no TK mainloop. The Twisted
framework seems ideal - I am familiar with Twisted, I think I could use it's
task.LoopingCall to perform the re-connections and the perform_work call,
the Tkinter mainloop can be integrated into the Twisted reactor etc. Many of
our apps are Twisted based so having a common code base is plus for future
maintenance too.

There is no point pursuing this approach if it is well known that the ORB
does not work within the reactor. So to possibly save me some prototyping
time, I was wondering if  anyone had (or heard of) any experience's of
running the ORB within the reactor? Specifically I'm using omniOrbPy and the
omniOrb ORB.

Regards,
Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070523/97a0c3e2/attachment.html>

From michaelschneider at current.net  Wed May 23 08:50:06 2007
From: michaelschneider at current.net (Michael Schneider)
Date: Wed, 23 May 2007 10:50:06 -0400
Subject: [Twisted-Python] Win32 IOCPReactor?
In-Reply-To: <AB1BB4CF81B9214682079EB55A7125ED01DDAFC2@mapibe05.exchange.xchg>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<4650D472.5060009@gmail.com>	<1179703959.7838.5.camel@localhost.localdomain>	<AB1BB4CF81B9214682079EB55A7125ED01DDABA4@mapibe05.exchange.xchg><1179757509.7838.25.camel@localhost.localdomain>	<465444CA.6030309@current.net>
	<AB1BB4CF81B9214682079EB55A7125ED01DDAFC2@mapibe05.exchange.xchg>
Message-ID: <4654549E.2070303@current.net>

Trent,

You can kick off a buildbot run against any brach.  Feel free do trigger 
a run against the IOCP branch if you want check the status of the
latest IOCP fixes.

By default, buildbot runs against trunk

Happy Coding,
Mike

Trent Nelson wrote:
>> There is an IOCP buildbot that illustrates the current state of the
>>     
> IOCP
>   
>> reator against the twisted test suite.
>>
>> Just look at the win32-py2.5-iocp column on
>> http://twistedmatrix.com/buildbot/
>>
>> Happy coding,
>> Mike
>>     
>
> Great link, thanks.  Least I've got a starting point now (address test
> failures) if I want to start digging around in the code }:>
>
> 	Trent.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>   




From konrads.smelkovs at gmail.com  Wed May 23 12:24:11 2007
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Wed, 23 May 2007 21:24:11 +0300
Subject: [Twisted-Python] Looking for work / Coder for hire
Message-ID: <465486CB.1080102@gmail.com>

Hello,

I am looking for contract work (long-term relationship possible too). I 
do web2 thingy (JavaScript/Ajax), Twisted Python (obviously) ,PERL, PHP, 
Linux and just about anything related or plugged into the internet.

I have experience with High-Availability, Clusters, know e-mail 
solutions (built one) really well.

I am based in Riga, Latvia (that's an EU country), time zone UTC+2

My CV is at http://konrads.net42.org/



From ivan at llaisdy.com  Fri May 25 02:51:11 2007
From: ivan at llaisdy.com (Ivan Uemlianin)
Date: Fri, 25 May 2007 09:51:11 +0100
Subject: Divmod Sine Broken? [WAS Re: [Twisted-Python] Media Resource Control
	Protocol (MRCP)]
In-Reply-To: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
References: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
Message-ID: <4656A37F.1050700@llaisdy.com>

Jean-Paul Calderone wrote:
> The Divmod Sine SIP implementation has numerous bug fixes not present in
> twisted.protocols.sip.  Once #2444 is resolved, the protocol support in
> Twisted will be as good as the protocol support in Divmod Sine.  What 
> Sine
> will still offer above the code in Twisted is the higher level APIs which
> make call setup easy enough so that novel applications can focus on their
> novelty instead of on SIP details.
I have attempted and failed to install Divmod Sine.  I posted the 
message below to divmod-dev a few days ago but have yet to receive a 
reply (it's a quiet list).  I am re-posting the message here in good 
faith and in the belief that it is not entirely off-topic or plain stupid. 

I'd really like to start writing an MRCP server, and if it's good enough 
to contribute it to Twisted, so any help would be much appreciated.

Best wishes

Ivan


Dear All

I am installing the Divmod frameworks, with the intention of
experimenting with Sine and Shtoom.  I have installed everything except
Sine with no problems (using python setup.py install).

With Sine I get the following error:

 File "/usr/lib/python2.4/site-packages/xmantissa/plugins/sineoff.py",
line 3, in ?
   from xmantissa import website, offering, provisioning
exceptions.ImportError: cannot import name provisioning

I have tried this with both the stable (0.6.1) and svn versions of 
Mantissa.

I have grepped through all of Divmod's frameworks (inc. Shtoom) and not
found provisioning except in import statements.  The only class used
from provisioning is BenefactorFactory.

Please could someone let me know either:
- Where I can get a version of xmantissa with provisioning and
BenefactorFactory, or
- Whether and how I can comment out the offending lines from Sine.

Thanks

Best wishes

Ivan





From m.hubbard at imperial.ac.uk  Fri May 25 05:19:35 2007
From: m.hubbard at imperial.ac.uk (Matt Hubbard)
Date: Fri, 25 May 2007 12:19:35 +0100
Subject: [Twisted-Python] Need help pulling things together.
In-Reply-To: <e64b001e0705221232v70ce16d8x8c03970c4937dc56@mail.gmail.com>
References: <e64b001e0705221232v70ce16d8x8c03970c4937dc56@mail.gmail.com>
Message-ID: <4656C647.1060700@imperial.ac.uk>

Brendon Colby wrote:
> With all the different examples I'm having a hard time finding the
> "right" way to write my server using Twisted. I thought I was on to
> something reading through the IRC server protocol, but without a full
> server example I got lost. Do I set up a generic handleCommand() like
> interface and define each command in the protocol class (i.e.
> do_sendMessage) and have callbacks that my User class
> redefines/implements? Or am I on the right path?
> 
> I really appreciate any input on this!


Hi Brendon,

I'm having a hard time working out what you've got and where you're trying to go.

I think you're asking where you should you place the abstraction between data from lineReceived and executing specific commands based on that data. I shall respond with the caveat that I'm not qualified to speak for the "right twisted way", but I hope I can be of some assistance.

The first answer that springs to mind for most of your questions is "depends on what you're trying to achieve with your project".

Where to place an abstraction layer is something that I often end up hitting my head against, and generally I've found this to be time-wasting vacillation.

I'd honestly recommend you get on and code your management of users and of areas and worry about the abstraction layer later. Sitting around postulating doesn't get any code written and re-factoring small projects doesn't take that long.


If it were me and I was writing a telnet-based chat server, I would probably separate chat messages from commands and make this distinction in the protocol. I'd handle command interpretation in the User class.

class ChatProtocol......
    def lineReceived(self,line):
        if line[0] == '/':
            self.user.cmdReceived(line[1:])
        else:
            self.user.msgReceived(line)


I hope this helps. Please point out if I've entirely misinterpreted your question.

Cheers,
Matt.



From brendoncolby at gmail.com  Fri May 25 17:35:02 2007
From: brendoncolby at gmail.com (Brendon Colby)
Date: Fri, 25 May 2007 18:35:02 -0500
Subject: [Twisted-Python] Need help pulling things together.
In-Reply-To: <4656C647.1060700@imperial.ac.uk>
References: <e64b001e0705221232v70ce16d8x8c03970c4937dc56@mail.gmail.com>
	<4656C647.1060700@imperial.ac.uk>
Message-ID: <e64b001e0705251635t3283a15bhb177db49e975994@mail.gmail.com>

On 5/25/07, Matt Hubbard <m.hubbard at imperial.ac.uk> wrote:
> Hi Brendon,
>
> I'm having a hard time working out what you've got and where you're trying to go.
>
> I think you're asking where you should you place the abstraction between data from lineReceived and executing specific commands based on that data. I shall respond with the caveat that I'm not qualified to speak for the "right twisted way", but I hope I can be of some assistance.
>
> The first answer that springs to mind for most of your questions is "depends on what you're trying to achieve with your project".
>
> Where to place an abstraction layer is something that I often end up hitting my head against, and generally I've found this to be time-wasting vacillation.
>
> I'd honestly recommend you get on and code your management of users and of areas and worry about the abstraction layer later. Sitting around postulating doesn't get any code written and re-factoring small projects doesn't take that long.
>
>
> If it were me and I was writing a telnet-based chat server, I would probably separate chat messages from commands and make this distinction in the protocol. I'd handle command interpretation in the User class.
>
> class ChatProtocol......
>     def lineReceived(self,line):
>         if line[0] == '/':
>             self.user.cmdReceived(line[1:])
>         else:
>             self.user.msgReceived(line)
>
>
> I hope this helps. Please point out if I've entirely misinterpreted your question.
>
> Cheers,
> Matt.

Hi Matt,

You are exactly right. I've decided to just start coding and figure it
out. I've been vacillating for two years! :) Plus I've found a
protocol class that I can model (roughly). Thank you for your input!

Brendon



From maarten at treewalker.org  Sat May 26 08:22:15 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 May 2007 16:22:15 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
Message-ID: <200705261622.22995.maarten@treewalker.org>

Hi,

Sometimes I want to use several asynchronous calls in a fixed sequence. For 
example, a web application might:
- authenticate the user
- fetch info from a database
- present the result

Implementing this using Deferreds and separate callback+errback functions has 
the disadvantage that the sequence itself is not easy to recognise anymore, 
as it gets spread out over multiple functions.

So I got creative with the new generator features of Python 2.5 and came up 
with a decorator named "sequential", which can be applied to generator 
functions. It consumes Deferreds that are yielded by the generator and sends 
back the result when it becomes available, or raises an Exception in the 
generator if the deferred action fails.

The decorated function returns a Deferred itself, which is fired upon 
completion of the sequence. In particular, this allows nesting sequences 
inside sequences.

This is an example of a program using it, it is an elaborated version of the 
first example from the Deferred Reference:

===
from twisted.internet import defer, reactor
from twisted.python import log

from sequential import sequential

def getDummyData(x):
    d = defer.Deferred()
    if x < 0:
        reactor.callLater(1, d.errback, ValueError('negative value: %d' % x))
    else:
        reactor.callLater(1, d.callback, x * 3)
    return d

@sequential
def work():
    print (yield getDummyData(3))
    print (yield getDummyData(4))
    print (yield 'immediate')
    print (yield getDummyData(6))
    try:
        print (yield getDummyData(-7))
    except ValueError, e:
        print 'failed:', e

@sequential
def main(message):
    print message, 'once...'
    yield work()
    print message, 'twice...'
    yield work()

def done(result):
    reactor.stop()

def failed(fail):
    log.err(fail)
    reactor.stop()

d = main('going')
d.addCallback(done)
d.addErrback(failed)

reactor.run()
===

And here is the implementation of the "sequential" module:

===
from twisted.internet import defer
from twisted.python import failure

from functools import wraps
from compiler.consts import CO_GENERATOR

class _SequentialCaller(object):
    '''Repeatedly reads a Deferred from a generator and feeds it back the 
    result when it becomes available.
    '''

    def __init__(self, gen):
        self.gen = gen
        self.deferred = defer.Deferred()

    def start(self):
        self.next(None)
        return self.deferred

    def next(self, result):
        while True:
            try:
                if isinstance(result, failure.Failure):
                    traceback = result.getTracebackObject() \
                        if hasattr(result, 'getTracebackObject') else None
                    d = self.gen.throw(
                        result.type, result.getErrorMessage(), traceback
                        )
                else:
                    d = self.gen.send(result)
            except StopIteration:
                self.deferred.callback(None)
                return
            except StandardError:
                self.deferred.errback(failure.Failure())
                return
            if isinstance(d, defer.Deferred):
                d.addCallback(lambda result: self.next(result))
                d.addErrback(lambda fail: self.next(fail))
                return
            else:
                # Allow non-deferred values as well: for some Twisted calls,
                # you don't know whether the result will be deferred or not.
                result = d

def sequential(f):
    if not (f.func_code.co_flags & CO_GENERATOR):
        raise TypeError('function "%s" is not a generator' % f.__name__)
    @wraps(f)
    def wrapper(*args, **kvArgs):
        return _SequentialCaller(f(*args, **kvArgs)).start()
    return wrapper
===

I'd like some feedback on this:
- would you consider this useful?
- is the interface right or can it be improved?
- is the implementation correct? (the example scenario doesn't test the error 
path extensively, so there might be problems there)
- is the use of Failure.getTracebackObject correct? (the version of Twisted 
installed on my machine does not have it yet, I only read about it in the 
sources on the API documentation site)
- the "compiler.consts" module is not documented in the Python Library 
Reference, does that mean it should not be used or did they forget to 
document it?
- anything else you'd like to say about it

Is there already something like this in Twisted or one of the toolkits built 
on Twisted? I took a quick look at the "flow" modules, but that seems like a 
more generic and flexible, but also more complex, approach.

If it would be a useful addition to Twisted or a Twisted-based toolkit, I'm 
willing to improve the documentation and write test cases.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070526/55a902dd/attachment.sig>

From general at eepatents.com  Sat May 26 09:18:28 2007
From: general at eepatents.com (Ed Suominen)
Date: Sat, 26 May 2007 08:18:28 -0700
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705261622.22995.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
Message-ID: <46584FC4.9050108@eepatents.com>

http://foss.eepatents.com/api/twisted-goodies/taskqueue.base.TaskQueue.html

Maarten ter Huurne wrote:
> Hi,
> 
> Sometimes I want to use several asynchronous calls in a fixed sequence. For 
> example, a web application might:
> - authenticate the user
> - fetch info from a database
> - present the result
> 
> Implementing this using Deferreds and separate callback+errback functions has 
> the disadvantage that the sequence itself is not easy to recognise anymore, 
> as it gets spread out over multiple functions.
> 
> So I got creative with the new generator features of Python 2.5 and came up 
> with a decorator named "sequential", which can be applied to generator 
> functions. It consumes Deferreds that are yielded by the generator and sends 
> back the result when it becomes available, or raises an Exception in the 
> generator if the deferred action fails.
> 
> The decorated function returns a Deferred itself, which is fired upon 
> completion of the sequence. In particular, this allows nesting sequences 
> inside sequences.
> 
> This is an example of a program using it, it is an elaborated version of the 
> first example from the Deferred Reference:
> 
> ===
> from twisted.internet import defer, reactor
> from twisted.python import log
> 
> from sequential import sequential
> 
> def getDummyData(x):
>     d = defer.Deferred()
>     if x < 0:
>         reactor.callLater(1, d.errback, ValueError('negative value: %d' % x))
>     else:
>         reactor.callLater(1, d.callback, x * 3)
>     return d
> 
> @sequential
> def work():
>     print (yield getDummyData(3))
>     print (yield getDummyData(4))
>     print (yield 'immediate')
>     print (yield getDummyData(6))
>     try:
>         print (yield getDummyData(-7))
>     except ValueError, e:
>         print 'failed:', e
> 
> @sequential
> def main(message):
>     print message, 'once...'
>     yield work()
>     print message, 'twice...'
>     yield work()
> 
> def done(result):
>     reactor.stop()
> 
> def failed(fail):
>     log.err(fail)
>     reactor.stop()
> 
> d = main('going')
> d.addCallback(done)
> d.addErrback(failed)
> 
> reactor.run()
> ===
> 
> And here is the implementation of the "sequential" module:
> 
> ===
> from twisted.internet import defer
> from twisted.python import failure
> 
> from functools import wraps
> from compiler.consts import CO_GENERATOR
> 
> class _SequentialCaller(object):
>     '''Repeatedly reads a Deferred from a generator and feeds it back the 
>     result when it becomes available.
>     '''
> 
>     def __init__(self, gen):
>         self.gen = gen
>         self.deferred = defer.Deferred()
> 
>     def start(self):
>         self.next(None)
>         return self.deferred
> 
>     def next(self, result):
>         while True:
>             try:
>                 if isinstance(result, failure.Failure):
>                     traceback = result.getTracebackObject() \
>                         if hasattr(result, 'getTracebackObject') else None
>                     d = self.gen.throw(
>                         result.type, result.getErrorMessage(), traceback
>                         )
>                 else:
>                     d = self.gen.send(result)
>             except StopIteration:
>                 self.deferred.callback(None)
>                 return
>             except StandardError:
>                 self.deferred.errback(failure.Failure())
>                 return
>             if isinstance(d, defer.Deferred):
>                 d.addCallback(lambda result: self.next(result))
>                 d.addErrback(lambda fail: self.next(fail))
>                 return
>             else:
>                 # Allow non-deferred values as well: for some Twisted calls,
>                 # you don't know whether the result will be deferred or not.
>                 result = d
> 
> def sequential(f):
>     if not (f.func_code.co_flags & CO_GENERATOR):
>         raise TypeError('function "%s" is not a generator' % f.__name__)
>     @wraps(f)
>     def wrapper(*args, **kvArgs):
>         return _SequentialCaller(f(*args, **kvArgs)).start()
>     return wrapper
> ===
> 
> I'd like some feedback on this:
> - would you consider this useful?
> - is the interface right or can it be improved?
> - is the implementation correct? (the example scenario doesn't test the error 
> path extensively, so there might be problems there)
> - is the use of Failure.getTracebackObject correct? (the version of Twisted 
> installed on my machine does not have it yet, I only read about it in the 
> sources on the API documentation site)
> - the "compiler.consts" module is not documented in the Python Library 
> Reference, does that mean it should not be used or did they forget to 
> document it?
> - anything else you'd like to say about it
> 
> Is there already something like this in Twisted or one of the toolkits built 
> on Twisted? I took a quick look at the "flow" modules, but that seems like a 
> more generic and flexible, but also more complex, approach.
> 
> If it would be a useful addition to Twisted or a Twisted-based toolkit, I'm 
> willing to improve the documentation and write test cases.
> 
> Bye,
> 		Maarten
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From maarten at treewalker.org  Sat May 26 10:45:21 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 May 2007 18:45:21 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <46584FC4.9050108@eepatents.com>
References: <200705261622.22995.maarten@treewalker.org>
	<46584FC4.9050108@eepatents.com>
Message-ID: <200705261845.27789.maarten@treewalker.org>

On Saturday 26 May 2007, Ed Suominen wrote:

> http://foss.eepatents.com/api/twisted-goodies/taskqueue.base.TaskQueue.html

That looks interesting, but I don't think it has the same purpose.

If I understand it correctly, TaskQueue dispatches synchronous calls to a pool 
of workers. The thing I posted runs a series of asynchronous calls in 
succession. In other words, TaskQueue handles callables, while "@sequential" 
handles Deferreds.

Also, TaskQueue seems to be designed for running a number of indepedent tasks, 
while "@sequential" is designed for situations in which call n+1 depends on 
the result of call n. The added value of "@sequential" is that you don't have 
to deal with Deferreds yourself, but can use the return value of the yield 
instead (or the exception thrown by it).

The original example did not demonstrate using the result of a previous call 
in the next call. Here is a new implementation of the "work" method which 
does:

===
@sequential
def work():
    value = 9
    try:
        while True:
            print value
            value = (yield getDummyData(value)) - 20
    except ValueError, e:
        print 'failed:', e
===

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070526/6fa149c5/attachment.sig>

From gabor.bernath at gmail.com  Sat May 26 11:20:31 2007
From: gabor.bernath at gmail.com (=?ISO-8859-1?Q?G=E1bor_Bern=E1th?=)
Date: Sat, 26 May 2007 18:20:31 +0100
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705261845.27789.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
	<46584FC4.9050108@eepatents.com>
	<200705261845.27789.maarten@treewalker.org>
Message-ID: <ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>

inlineCallbacks are similar to what you are doing. very cool stuff.

http://twistedmatrix.com/pipermail/twisted-python/2007-February/014869.html
http://mesozoic.geecs.org/

cheers,
gabor


On 5/26/07, Maarten ter Huurne <maarten at treewalker.org> wrote:
> On Saturday 26 May 2007, Ed Suominen wrote:
>
> > http://foss.eepatents.com/api/twisted-goodies/taskqueue.base.TaskQueue.html
>
> That looks interesting, but I don't think it has the same purpose.
>
> If I understand it correctly, TaskQueue dispatches synchronous calls to a pool
> of workers. The thing I posted runs a series of asynchronous calls in
> succession. In other words, TaskQueue handles callables, while "@sequential"
> handles Deferreds.
>
> Also, TaskQueue seems to be designed for running a number of indepedent tasks,
> while "@sequential" is designed for situations in which call n+1 depends on
> the result of call n. The added value of "@sequential" is that you don't have
> to deal with Deferreds yourself, but can use the return value of the yield
> instead (or the exception thrown by it).
>
> The original example did not demonstrate using the result of a previous call
> in the next call. Here is a new implementation of the "work" method which
> does:
>
> ===
> @sequential
> def work():
>     value = 9
>     try:
>         while True:
>             print value
>             value = (yield getDummyData(value)) - 20
>     except ValueError, e:
>         print 'failed:', e
> ===
>
> Bye,
>                 Maarten
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>



From glyph at divmod.com  Sat May 26 11:42:11 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 26 May 2007 17:42:11 -0000
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
References: <200705261622.22995.maarten@treewalker.org>
	<46584FC4.9050108@eepatents.com>
	<200705261845.27789.maarten@treewalker.org>
	<ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
Message-ID: <20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>


On 05:20 pm, gabor.bernath at gmail.com wrote:
>inlineCallbacks are similar to what you are doing. very cool stuff.

Unless I misunderstand, inlineCallbacks isn't just similar, it's exactly 
the same :).  Is there any difference?

This highlights to me that we need someone to write about more of the 
hidden corners of Twisted; there are a lot of features included that are 
not well-known, and it's not clear that anyone would look for them (or 
if they did, where).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070526/d1ca0d5e/attachment.html>

From maarten at treewalker.org  Sat May 26 11:48:07 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 May 2007 19:48:07 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
References: <200705261622.22995.maarten@treewalker.org>
	<200705261845.27789.maarten@treewalker.org>
	<ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
Message-ID: <200705261948.13056.maarten@treewalker.org>

On Saturday 26 May 2007, Gábor Bernáth wrote:

> inlineCallbacks are similar to what you are doing. very cool stuff.
>
> http://twistedmatrix.com/pipermail/twisted-python/2007-February/014869.html
> http://mesozoic.geecs.org/

So it already exists in Twisted 2.5. That's good, it means less code for me to 
maintain :) Thanks for the links.

By the way, I wonder why the API documentation doesn't use the decorator 
syntax. Since this won't work with anything older than Python 2.5 anyway, 
decorators are guaranteed to be available to anyone using this function.

http://twistedmatrix.com/documents/current/api/twisted.internet.defer.html#inlineCallbacks

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070526/92285c10/attachment.sig>

From maarten at treewalker.org  Sat May 26 11:57:48 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 May 2007 19:57:48 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
References: <200705261622.22995.maarten@treewalker.org>
	<ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
	<20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
Message-ID: <200705261957.52901.maarten@treewalker.org>

On Saturday 26 May 2007, glyph at divmod.com wrote:
> On 05:20 pm, gabor.bernath at gmail.com wrote:
> >inlineCallbacks are similar to what you are doing. very cool stuff.
>
> Unless I misunderstand, inlineCallbacks isn't just similar, it's exactly
> the same :).  Is there any difference?

inlineCallbacks is better, because it allows you to pass a result to the 
callback of the "outer" Deferred using "returnValue". My implementation just 
passed None.

Other than that, it seems to be the same thing indeed.

> This highlights to me that we need someone to write about more of the
> hidden corners of Twisted; there are a lot of features included that are
> not well-known, and it's not clear that anyone would look for them (or
> if they did, where).

In this particular case, it may be useful to add a section to the Deferred 
Reference.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070526/47cea423/attachment.sig>

From eprparadocs at gmail.com  Sat May 26 12:46:37 2007
From: eprparadocs at gmail.com (Chaz.)
Date: Sat, 26 May 2007 14:46:37 -0400
Subject: [Twisted-Python] Use of XML RPC, ssl and twisted.cred
Message-ID: <4658808D.4020400@gmail.com>

I have an issue I am having some trouble figuring out. I have been using 
SSL and XML-RPC/SOAP for a while without any problem. I now have to go 
past the "normal" usage.

Inside of my XML-RPC/SOAP handler I need to get access to the X509 
certificate of the client (I need to get access to some of the fields 
inside the certificate).

When I asked before I was told the correct way to solve the problem was 
to use avatars. Immediately I started looking into how to do it. 
Yesterday I seemed to come to the conclusion that I don't see how 
avatars (and realms) will help me.

It seems the SSL validation happens way before any sort of realm would 
be involved (since realms seem to be tied into "logging into" the 
system). All the examples I have found seem to be exactly this model. 
What I can't seem to find is first, how to tie realms into XML-RPC or 
SOAP. Secondly, how does the client's X509 certificate get into the 
avatar. And thirdly, I just don't see how the avatar is even past into 
the XML-RPC/SOAP handler.

I was wondering if one of the creators of Twisted could provide some 
detailed guidance? If so, I will be more than happy to write  it up and 
add it to the Twisted documentation for all to see and understand.

Thanks,
Chaz



From maarten at treewalker.org  Sat May 26 13:10:08 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 May 2007 21:10:08 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
References: <200705261622.22995.maarten@treewalker.org>
	<ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
	<20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
Message-ID: <200705262110.14557.maarten@treewalker.org>

Hi,

Reading through the implementation of inlineCallbacks, I found some more 
differences, but they are small.

In my implementation the decorator has a check whether the thing it is 
decorating is really a generator. Without this check, you will get an 
exception only when you start using the decorated function. I think it is 
usually better to detect errors at an early stage. However, the check uses 
compiler.consts.CO_GENERATOR, which is not documented in the Python Library 
Reference, so using it might be risky.

My implementation only catches StandardError being raised by the generator. 
That is a bad idea: it should certainly catch custom Exceptions as well. It 
should probably catch everything, like inlineCallbacks does, so the 
asynchronous equivalents of "finally" have a chance to clean things up on 
system exit.

inlineCallbacks has protection against a Deferred being returned which has 
already fired. My implementation treats that case the same as a Deferred that 
will be handled by the reactor and will therefore recurse.

The way the "throw" call is done is slightly different:

http://twistedmatrix.com/trac/browser/trunk/twisted/internet/defer.py#L724

    result = g.throw(result.type, result.value, result.tb)

My implementation:

    traceback = result.getTracebackObject() \
        if hasattr(result, 'getTracebackObject') else None
    d = self.gen.throw(result.type, result.getErrorMessage(), traceback)

The "value" part is different: result.getErrorMessage() returns the error 
message string, while result.value contains the exception object, 
however "throw" is designed to act like "raise" and will accept both uses.

Also the "traceback" part is different: if the "tb" field is None, 
getTracebackObject will construct a traceback object if possible. I don't 
know if that extra feature will ever be useful in this particular use case.

To summarize:
InlineCallbacks seems to be better than my implementation, except perhaps:
- it might be useful to add a check whether the function to be decorated is 
really a generator
- result.getTracebackObject() may or may not be better than result.tb

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070526/5c242b0f/attachment.sig>

From ben at artins.org  Sat May 26 15:53:57 2007
From: ben at artins.org (Ben Artin)
Date: Sat, 26 May 2007 17:53:57 -0400
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705262110.14557.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
	<ff49a2640705261020u3ade3609oc6d319d40fe885a2@mail.gmail.com>
	<20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
	<200705262110.14557.maarten@treewalker.org>
Message-ID: <5CFFF475-7F72-49CA-B049-5958BD91F232@artins.org>

> In my implementation the decorator has a check whether the thing it is
> decorating is really a generator. Without this check, you will get an
> exception only when you start using the decorated function. I think  
> it is
> usually better to detect errors at an early stage. However, the  
> check uses
> compiler.consts.CO_GENERATOR, which is not documented in the Python  
> Library
> Reference, so using it might be risky.

If the argument to the decorator is not a generator (i.e., it's a  
regular function), then you should just treat is as a generator that  
immediately returned. For example,

@sequential
def foo():
	yield retval

should just behave the same as

@sequential
def foo():
	return retval

I can't think of any case where passing a non-generator into  
@sequential is intended to mean anything other than this.

--

<http://artins.org/ben>

"And when I have understanding of computers, I shall be
         the supreme being!" -- Evil, "Time Bandits"





From maarten at treewalker.org  Sat May 26 20:48:51 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 27 May 2007 04:48:51 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <5CFFF475-7F72-49CA-B049-5958BD91F232@artins.org>
References: <200705261622.22995.maarten@treewalker.org>
	<200705262110.14557.maarten@treewalker.org>
	<5CFFF475-7F72-49CA-B049-5958BD91F232@artins.org>
Message-ID: <200705270448.58306.maarten@treewalker.org>

On Saturday 26 May 2007, Ben Artin wrote:

> > In my implementation the decorator has a check whether the thing it is
> > decorating is really a generator. Without this check, you will get an
> > exception only when you start using the decorated function. I think
> > it is
> > usually better to detect errors at an early stage. However, the
> > check uses
> > compiler.consts.CO_GENERATOR, which is not documented in the Python
> > Library
> > Reference, so using it might be risky.
>
> If the argument to the decorator is not a generator (i.e., it's a
> regular function), then you should just treat is as a generator that
> immediately returned.

Since it is used as a decorator, the @sequential line will be written by the 
same person who wrote the function itself. If the author of the function 
knows it is not a generator, why would he apply @sequential (or 
@inlineCallbacks) to it?

> For example, 
>
> @sequential
> def foo():
> 	yield retval
>
> should just behave the same as
>
> @sequential
> def foo():
> 	return retval

That behaviour would be: return a Deferred on which:
- callback is called immediately if retval is not a Deferred
- errback is called immediately if the function raises an exception
- callback or errback is called when the retval Deferred fires
And the result passed to the callback would be None, not retval.

Applying maybeDeferred to the return value sounds more useful, since that will 
do the Deferred part, but will also preserve the result.

By the way, without "@sequential" the closest non-generator equivalent of

def foo():
	yield retval

would be

def foo():
	return (retval, )

In other words, it would return a sequence containing retval rather than 
retval itself.

> I can't think of any case where passing a non-generator into
> @sequential is intended to mean anything other than this.

But should it be given any interpretation at all? Unless there is a real use 
case for it, I think it's better to consider it an error.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070527/16a6b6d7/attachment.sig>

From ben at artins.org  Sat May 26 21:45:14 2007
From: ben at artins.org (Ben Artin)
Date: Sat, 26 May 2007 23:45:14 -0400
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705270448.58306.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
	<200705262110.14557.maarten@treewalker.org>
	<5CFFF475-7F72-49CA-B049-5958BD91F232@artins.org>
	<200705270448.58306.maarten@treewalker.org>
Message-ID: <6C6D8683-E148-41D2-BE54-AC6A31C0F117@artins.org>

> Since it is used as a decorator, the @sequential line will be  
> written by the
> same person who wrote the function itself. If the author of the  
> function
> knows it is not a generator, why would he apply @sequential (or
> @inlineCallbacks) to it?

One reason is that if the function returns None, then if you require  
it to be a generator, you have to add a gratuitous "yield None" just  
to shut up the piece of code that requires a generator. For example:

@sequential
def foo():
	blah = blah

would cause the error, but

@sequential
def foo():
	blah = blah
	yield None

would not. In my opinion, that "yield None" is just noise, and  
doesn't make the code any better, faster, safer, or easier to read,  
so given the option I would make @sequential cope even when yield  
None is not there.


The other main case where I've run into this is when you have a  
protocol that expects some method to behave according to @sequential,  
but a particular implementation of that protocol doesn't need to do  
more than immediately return. For example:

class TakesALongTime():
	@sequential
	def doSomething(self):
		yield doPart1()
		yield doPart2()
		yield someResult


class ReturnsImmediately():
	@sequential
	def doSomething(self):
		return someResult


Now, if you use "return" in the first class, you get a syntax error  
right away, because a non-empty return in a generator is a syntax  
error. On the other hand, if you use "return" in the second class,  
you don't get a syntax error, but your implementation of @sequential  
would produce a runtime error. I understand why it's easy to produce  
that runtime error, but I don't see any benefit to it -- it doesn't  
really save the users of @sequential any effort.

> But should it be given any interpretation at all? Unless there is a  
> real use
> case for it, I think it's better to consider it an error.

I would agree with you if I thought there was any possibility that  
interpreting a plain function as a generator with a single yield  
could yield unintended results, but I have yet to find such a case.

Ben

--

<http://artins.org/ben>

"The last great thing written in C was Franz Schubert's Symphony  
number 9."





From exarkun at twistedmatrix.com  Sat May 26 22:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 May 2007 04:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1180238702.38.2098562584@twistedmatrix.com

Bug summary
______________________
Summary for 2007-05-20 through 2007-05-27
Bugs opened: 16    Bugs closed: 14  Total open bugs: 960 (+2)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +6  |Highest:  -3          |Conch:  +2             
|Enhancement:  -1  |High:     +1          |Core:   +1             
|Task:         -1  |Normal:   +5          |Trial:  +1             
                   |Low:      +1          |Vfs:    +0             
                                          |Web:    +0             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2670] amp tests fail on sixth run (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2670

[#2654] twisted.internet.abstract.isIPAddress rejects valid IPv4 strings (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2654

[#2604] SFTP VFS adapter mishandles renaming directories (opened by jml) (CLOSED, fixed)
    defect          vfs        http://twistedmatrix.com/trac/ticket/2604

                    ===== High =====
[#2678] twisted.conch.ssh.transport has poor tests. (opened by z3p)
    defect          conch      http://twistedmatrix.com/trac/ticket/2678

[#2679] twisted.conch.ssh.keys has poor tests. (opened by z3p)
    defect          conch      http://twistedmatrix.com/trac/ticket/2679

                    ===== Normal =====
[#2667] twisted.protocols.amp.Command should have methods for argument serialization and parsing (opened by radix) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2667

[#2668] It is impossible to create container Arguments without using private functions (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2668

[#2669] Avoid looping to find the next time that divides by interval (opened by Peaker)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2669

[#2671] twisted.protocols.amp should allow responding to a Command before returning from a responder (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2671

[#2672] `twisted.internet.task.coiterate`'s docstring doesn't explain how to use the function (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/2672

[#2673] test_synchronization fails sometimes (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2673

[#2674] t.i.defer.inlineCallbacks documentation issues (opened by indigo)
    defect          core       http://twistedmatrix.com/trac/ticket/2674

[#2675] Test timeout policy should be decided by runner (opened by jml)
    defect          trial      http://twistedmatrix.com/trac/ticket/2675

[#2676] connectionLost not invoked (opened by jrydberg)
    defect          conch      http://twistedmatrix.com/trac/ticket/2676

[#2677] twisted/web/proxy.py doesn't use IRequest.finish (opened by exarkun)
    defect          web        http://twistedmatrix.com/trac/ticket/2677

                    ===== Low =====
[#2666] twisted-dev.el should provide a custom variable to specify its tbformat (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2666



Closed Bugs
______________________
                    ===== Highest =====
[#2663] t.conch.manhole does not exit continuation prompt after ctrl-c (opened by PenguinOfDoom, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2663

[#2654] twisted.internet.abstract.isIPAddress rejects valid IPv4 strings (opened by exarkun, closed by exarkun, )
    defect          core       http://twistedmatrix.com/trac/ticket/2654

[#2640] fix epytext problems in SVN HEAD (opened by mwh, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2640

[#2604] SFTP VFS adapter mishandles renaming directories (opened by jml, closed by jml, fixed)
    defect          vfs        http://twistedmatrix.com/trac/ticket/2604

[#2604] SFTP VFS adapter mishandles renaming directories (opened by jml, closed by jml, fixed)
    defect          vfs        http://twistedmatrix.com/trac/ticket/2604

[#1134] Finite object leak in threadpool (opened by jeffsilver, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1134

[#2657] twisted.protocols.amp.Command should have an response parsing method parallel to makeResponse (opened by exarkun, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2657

[#2670] amp tests fail on sixth run (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2670

                    ===== High =====
[#2554] strange connect timeouts (opened by gudron, closed by therve, invalid)
    task            web        http://twistedmatrix.com/trac/ticket/2554

                    ===== Normal =====
[#2272] epytext errors in svn trunk, set up pydoctor buildbot (opened by mwh, closed by exarkun, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2272

[#2662] ITransport shouldn't include getPeer/getHost (opened by Peaker, closed by therve, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2662

[#2667] twisted.protocols.amp.Command should have methods for argument serialization and parsing (opened by radix, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2667

[#2664] twisted.protocols.amp._objectsToStrings doesn't document its `strings' parameter (opened by exarkun, closed by radix, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2664

[#2656] twisted.protocols.amp.Command.makeResponse docstring inaccurate (opened by exarkun, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2656





From maarten at treewalker.org  Sun May 27 00:20:30 2007
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 27 May 2007 08:20:30 +0200
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <6C6D8683-E148-41D2-BE54-AC6A31C0F117@artins.org>
References: <200705261622.22995.maarten@treewalker.org>
	<200705270448.58306.maarten@treewalker.org>
	<6C6D8683-E148-41D2-BE54-AC6A31C0F117@artins.org>
Message-ID: <200705270820.41462.maarten@treewalker.org>

On Sunday 27 May 2007, Ben Artin wrote:
> > Since it is used as a decorator, the @sequential line will be
> > written by the
> > same person who wrote the function itself. If the author of the
> > function
> > knows it is not a generator, why would he apply @sequential (or
> > @inlineCallbacks) to it?
>
> One reason is that if the function returns None, then if you require
> it to be a generator, you have to add a gratuitous "yield None" just
> to shut up the piece of code that requires a generator.

Maybe it's more clear to call it @inlineCallbacks, since that is the name 
under which it is available; @sequential was just me re-inventing it.

I agree that adding "yield None" is an ugly fix, but why not just remove the 
@inlineCallbacks decoration from such a function instead? I still don't 
understand what the point is of decorating a non-generator function with 
@inlineCallbacks. 

> The other main case where I've run into this is when you have a
> protocol that expects some method to behave according to @sequential,
> but a particular implementation of that protocol doesn't need to do
> more than immediately return.

The external protocol of @inlineCallbacks is just Deferred. There are a lot of 
ways to convert something to a Deferred already, such as maybeDeferred, 
execute, succeed, fail (all in the "defer" module). Using @inlineCallbacks 
for that purpose seems a bit overcomplicated.

There is never a requirement for a function to be decorated with 
@inlineCallbacks, all the outside world sees is a Deferred. @inlineCallbacks 
is just an implementation technique to avoid having to split sequential 
asynchronous code over multiple functions.

> For example: 
>
> class TakesALongTime():
> 	@sequential
> 	def doSomething(self):
> 		yield doPart1()
> 		yield doPart2()
> 		yield someResult

This doesn't do what you might expect...

Let's assume doPart1 and doPart2 return Deferreds, named d1 and d2. When 
doSomething is called, inlineCallbacks will run doPart1, register itself on 
d1 and return its own Deferred (dr) to the caller of doSomething. When the 
reactor does the callback on d1, doPart2 will be called and inlineCallbacks 
will register itself on d2. Finally, when the callback of d2 is called, 
someResult will be discarded by inlineCallbacks and the callback of dr will 
be called with result None.

To do what you probably intended, the code would look like this:

class TakesALongTime():
	@defer.inlineCallbacks
	def doSomething(self):
		yield doPart1()
		yield doPart2()
		defer.returnValue(someResult)

Also note that neither of these examples blocks. Instead, the decorated method 
will typically return a Deferred (dr) very soon. However, it could take a 
long time before dr's callback (or errback) is called. During that time, the 
caller of doSomething will probably register itself on dr and end, to pass 
control to the reactor.

> Now, if you use "return" in the first class, you get a syntax error
> right away, because a non-empty return in a generator is a syntax
> error. On the other hand, if you use "return" in the second class,
> you don't get a syntax error, but your implementation of @sequential
> would produce a runtime error. I understand why it's easy to produce
> that runtime error, but I don't see any benefit to it -- it doesn't
> really save the users of @sequential any effort.

Well, if you consider using @inlineCallbacks on a non-generator an error, 
checking for this error as early as possible does save the user effort: you 
will see the error as soon as your module is imported, instead of having to 
trigger the function in question.

If you consider using @inlineCallbacks on a non-generator a valid scenario, 
there should not be a runtime error issued, neither at "decoration time" nor 
at "invocation time".

Note that the current implementation of @inlineCallbacks will raise an error 
at "invocation time", specifically when "g.send" or "g.throw" is called. I'm 
proposing to change that so an error will be raised by the decorator instead 
("decoration time", typically when the module is imported).

> > But should it be given any interpretation at all? Unless there is a
> > real use
> > case for it, I think it's better to consider it an error.
>
> I would agree with you if I thought there was any possibility that
> interpreting a plain function as a generator with a single yield
> could yield unintended results, but I have yet to find such a case.

Should something be given an interpretation because there are no unintended 
results, or because there are intended results?

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070527/ef81bdaf/attachment.sig>

From ben at artins.org  Sun May 27 02:35:24 2007
From: ben at artins.org (Ben Artin)
Date: Sun, 27 May 2007 04:35:24 -0400
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705270820.41462.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
	<200705270448.58306.maarten@treewalker.org>
	<6C6D8683-E148-41D2-BE54-AC6A31C0F117@artins.org>
	<200705270820.41462.maarten@treewalker.org>
Message-ID: <F26AC322-58A8-4D5A-9106-92F721214E35@artins.org>

> Maybe it's more clear to call it @inlineCallbacks, since that is  
> the name
> under which it is available; @sequential was just me re-inventing it.

That's OK. I reinvented it and called it something else myself :-)

> I agree that adding "yield None" is an ugly fix, but why not just  
> remove the
> @inlineCallbacks decoration from such a function instead? I still  
> don't
> understand what the point is of decorating a non-generator function  
> with
> @inlineCallbacks.

There is no theoretical reason. Of course I can and remove the  
decorator, but that is not how my brain works when write the code,  
and I suspect I am not alone in this. This is how I usually write my  
code:

.oO(I am writing a function)
.oO(The function's interface is that it returns a deferred, so write  
@inlineCallbacks)

@inlineCallbacks
def functionName(args):

.oO(Now, what's the body going to be like?)
type type type type
twenty lines later:
.oO(Done!)

then I run the code, and find out that I have to either add a yield  
None or remove the decorator because as it happens, there's no yield  
or return in those twenty lines of code.

Now, the reason that my brain works this way is that I consider the  
fact that the function returns a deferred a part of its interface,  
and if I am using Python 2.5 (which I almost exclusively am), then  
@inlineCallbacks is by far the cleanest way to write Deferred-using  
code. It turns my control flow right-side out and it allows me to  
stop focusing on how I pass control around using deferreds and start  
focusing on the problem I am trying to solve.

To that end, requiring me to either add noise to my function's  
implementation (in the form of "yield None") or to tweak the  
function's header because of a happenstance of its implementation is  
just distracting me away from writing my code and pulling my  
attention to something irrelevant.

Again, my argument is that the distinction between:

@inlineCallbacks
def functionName(args):
	...some code...
	yield None

and

@inlineCallbacks
def functionName(args):
	...some code...
	... without a return statement...

is completely irrelevant and serves no purpose except to distract me  
from my code. If I could find *any* case in which treating the latter  
case exactly the same as the former case is not what was intended,  
then I might be willing to concede that there is value in forcing the  
user to clarify what they meant; however I do not see that case.

>> For example:
>>
>> class TakesALongTime():
>> 	@sequential
>> 	def doSomething(self):
>> 		yield doPart1()
>> 		yield doPart2()
>> 		yield someResult
>
> This doesn't do what you might expect...
>
> Let's assume doPart1 and doPart2 return Deferreds, named d1 and d2.  
> When
> doSomething is called, inlineCallbacks will run doPart1, register  
> itself on
> d1 and return its own Deferred (dr) to the caller of doSomething.  
> When the
> reactor does the callback on d1, doPart2 will be called and  
> inlineCallbacks
> will register itself on d2. Finally, when the callback of d2 is  
> called,
> someResult will be discarded by inlineCallbacks and the callback of  
> dr will
> be called with result None.
>
> To do what you probably intended, the code would look like this:
>
> class TakesALongTime():
> 	@defer.inlineCallbacks
> 	def doSomething(self):
> 		yield doPart1()
> 		yield doPart2()
> 		defer.returnValue(someResult)

Actually this in itself is IMO a bug in inlineCallbacks. The only  
reason why inlineCallbacks is implemented this way is that prior to  
Python 2.5 it was impossible to implement coroutines in terms of just  
the yield statement, and therefore some extra magic was needed to  
achieve the desired effect. If you read the coroutines PEP (<http:// 
www.python.org/dev/peps/pep-0342/>), you'll see that the syntax I  
used above is the syntax suggested by the PEP (and, not accidentally,  
also the syntax used by my own version of @inlineCallbacks)

> Note that the current implementation of @inlineCallbacks will raise  
> an error
> at "invocation time", specifically when "g.send" or "g.throw" is  
> called. I'm
> proposing to change that so an error will be raised by the  
> decorator instead
> ("decoration time", typically when the module is imported).

I understand. I am proposing that it's not an error, because there is  
no case in which it's ambiguous what the intent was.

Another argument I can make in favor of this idea is that:

@inlineCallbacks
def doSomething():
	raise SomeException()

works the way you'd think it would upon reading the code and therefore

@inlineCallbacks
def doSomething():
	return someValue

should also work the way you'd think it would upon reading the code.

> Should something be given an interpretation because there are no  
> unintended
> results, or because there are intended results?

I believe that anyone who writes code that returns a plain value out  
of a function decorated with @inlineCallbacks has a clear intent, and  
they merely did not fuss over the syntax of @inlineCallback. I  
further believe that is in no way beneficial to force people to fuss  
over that syntax, and in no way detrimental to allow them to just  
return a plain value (because there is no ambiguity). Therefore, it  
should be done.

Ben

--

<http://artins.org/ben>

"Computers! All they ever think of is hex!"





From ben at artins.org  Sun May 27 02:44:22 2007
From: ben at artins.org (Ben Artin)
Date: Sun, 27 May 2007 04:44:22 -0400
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <200705270820.41462.maarten@treewalker.org>
References: <200705261622.22995.maarten@treewalker.org>
	<200705270448.58306.maarten@treewalker.org>
	<6C6D8683-E148-41D2-BE54-AC6A31C0F117@artins.org>
	<200705270820.41462.maarten@treewalker.org>
Message-ID: <C305AC6D-231F-46D8-B77F-0960E58273F7@artins.org>

Just a quick followup with something that I think I didn't state  
clearly in my previous email:

My mental model is that:
  - What I am writing are cooperative scheduled coroutines using  
Python yield statements
  - Deferreds are an implementation detail of those coroutines, and  
completely invisible to me

Because of this, saying "@inlineCallbacks", or "@sequential", or, as  
I called it, simply "@async" in front of a function is what matters  
when I am writing the code. I do not think about Deferreds when I am  
writing code. Your argument that @inlineCallbacks should error if  
given a "plain" function is a valid one from a "but you could just  
write your code differently" perspective, but the result is that my  
code no longer matches my mental model, because now I suddenly have  
to care about an implementation detail of @inlineCallbacks (namely,  
that the function it wraps has to yield even if it's merely to yield  
a None at the end).

Ben

--

<http://artins.org/ben>

"Love is an epic-level challenge." -- Durkon





From bhenry at pacecocorp.com  Tue May 29 10:09:45 2007
From: bhenry at pacecocorp.com (Benjamin Henry)
Date: Tue, 29 May 2007 12:09:45 -0400
Subject: [Twisted-Python] Sequential use of asynchronous calls
In-Reply-To: <20070526174211.24950.2138122255.divmod.xquotient.41@joule.divmod.com>
Message-ID: <F8D3784FE4E93C4AA66BE8C551EBB5D17D3D31@ntxbeus12.exchange.xchg>

________________________________

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of
glyph at divmod.com
Sent: Saturday, May 26, 2007 10:42 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Sequential use of asynchronous calls

 


On 05:20 pm, gabor.bernath at gmail.com wrote:
>inlineCallbacks are similar to what you are doing. very cool stuff.

Unless I misunderstand, inlineCallbacks isn't just similar, it's exactly
the same :).  Is there any difference?

This highlights to me that we need someone to write about more of the
hidden corners of Twisted; there are a lot of features included that are
not well-known, and it's not clear that anyone would look for them (or
if they did, where). 

This is a great idea.  inlineCallbacks would have saved me a week of
figuring out which functions to start a new callback chain should be in
my project.  I had to figure this all out after I realized that adbapi
existed.  I think there is a need for documentation in the deferred
section regarding inlineCallbacks, and documentation related to
protocols (more) and modules that exist for common operations (i.e.
adbapi).  Just my 2 cents from trying to learn twisted in my freetime
over the last 8 months or so.

 

-Ben

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070529/e2a8468e/attachment.html>

From LAdams at doubleclick.com  Tue May 29 14:47:10 2007
From: LAdams at doubleclick.com (Adams, Larry)
Date: Tue, 29 May 2007 14:47:10 -0600
Subject: [Twisted-Python] Modifying a web proxy to use SSL
Message-ID: <5DA9F92FACA0914D951AE5EB57F9236E02B9BB9E@THN-EXCLS1.dc1.doubleclick.corp>

I'm trying to use twisted to proxy all web requests for a set of PCs
(virtual machines actually). I've created my own ProxyRequest class to
override the process() method so that it will use SSL if the URL is
secure. It makes the connection and retrieves the data successfully, but
the browser still doesn't display the HTML. I must be missing some other
class/method that I have to override, but I'm at a loss as to which one
at the moment.

Below is some logging from my application for the same page called via
http and https respectively. Any help or pointers to working examples
would be greatly appreciated!

Thanks,
Larry Adams 
2007/05/29 15:10 -0500 [SerpicoProxy,11,172.18.36.22] Starting factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8cec>

2007/05/29 15:10 -0500 [Uninitialized] building protocol for addr:
IPv4Address(TCP, 'www.connectcommerce.com
<file://www.connectcommerce.com> ', 80)
2007/05/29 15:10 -0500 [Uninitialized] initializing connection
2007/05/29 15:10 -0500 [Uninitialized] MACHINE NAME IS surfsidekick
2007/05/29 15:10 -0500 [Uninitialized] PROXYREQUEST
http://www.connectcommerce.com/ <http://www.connectcommerce.com/> 
2007/05/29 15:10 -0500 [Uninitialized] TRANSPORT <<class
'twisted.internet.tcp.Client'> to ('www.connectcommerce.com
<file://www.connectcommerce.com> ', 80) at b71d8ccc>

2007/05/29 15:10 -0500 [Uninitialized] ISSECURE False
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Date : Tue, 29 May
2007 20:11:27 GMT added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Server :
Apache/1.3.33 (Unix) (Gentoo/Linux) added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Location :
http://www.connectcommerce.com/global/login.html
<http://www.connectcommerce.com/global/login.html>  added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Connection : close
added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Content-Type :
text/html; charset=iso-8859-1 added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] trying to lose
connection for transport: <<class 'twisted.internet.tcp.Client'> to
('www.connectcommerce.com <file://www.connectcommerce.com> ', 80) at
b71d8ccc>

2007/05/29 15:10 -0500 [SerpicoProxyClient,client] parent transport :
<SerpicoProxy #11 on 74007>
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Stopping factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8cec>

2007/05/29 15:11 -0500 [SerpicoProxy,18,172.18.36.22] Starting factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8d0c>

2007/05/29 15:11 -0500 [Uninitialized] building protocol for addr:
IPv4Address(TCP, 'www.connectcommerce.com
<file://www.connectcommerce.com> ', 443)
2007/05/29 15:11 -0500 [Uninitialized] initializing connection
2007/05/29 15:11 -0500 [Uninitialized] MACHINE NAME IS surfsidekick
2007/05/29 15:11 -0500 [Uninitialized] PROXYREQUEST
https://www.connectcommerce.com <https://www.connectcommerce.com> 
2007/05/29 15:11 -0500 [Uninitialized] TRANSPORT <<class
'twisted.internet.tcp.TLSConnection'> to ('www.connectcommerce.com
<file://www.connectcommerce.com> ', 443) at b71bd86c>

2007/05/29 15:11 -0500 [Uninitialized] ISSECURE True
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Date : Tue, 29 May
2007 20:12:00 GMT added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Server :
Apache/1.3.33 (Unix) (Gentoo/Linux) added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Location :
http://www.connectcommerce.com/global/login.html
<http://www.connectcommerce.com/global/login.html>  added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Connection : close
added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Content-Type :
text/html; charset=iso-8859-1 added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] trying to lose
connection for transport: <<class 'twisted.internet.tcp.TLSConnection'>
to ('www.connectcommerce.com <file://www.connectcommerce.com> ', 443) at
b71bd86c>

2007/05/29 15:11 -0500 [SerpicoProxyClient,client] parent transport :
<SerpicoProxy #18 on 74007>
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Stopping factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8d0c>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070529/ba240d33/attachment.html>

From elicriffield at gmail.com  Tue May 29 16:24:17 2007
From: elicriffield at gmail.com (Eli Criffield)
Date: Tue, 29 May 2007 17:24:17 -0500
Subject: [Twisted-Python] better way to do this?
Message-ID: <18e3f33d0705291524q6c418d28ga04f82f5cb3e3814@mail.gmail.com>

What i want to do is validate the "From" host of an xmlrpc server
against a list of allowed servers.

Sounds easy enough but "connectionMade(self)" Call is way back in
http.HTTPChannel. That is set as the protocol in http.HTTPFactory and
HTTPFactory is inherits by server.Site.

So whats the best way to change one little function in http.HTTPChannel ?

Here is what i have now, but the I have to include all of server.Site
in my example, even though its unchanged except it inherits
myHTTPFactory instead of http.HTTPFactory.

Is there a simpler way to do this?

Eli Criffield

--example---
#!/usr/bin/env python

from twisted.web import xmlrpc, server, http, resource
from twisted.internet import reactor
from twisted.python.log import startLogging
from sys import stdout
import copy

class Example(xmlrpc.XMLRPC):
    """An example object to be published."""

    def xmlrpc_echo(self, x):
        """Return all passed args."""
        print "echo called"
        return x

    def xmlrpc_add(self, a, b):
        """Return sum of arguments."""
        print "add called"
        return a + b

class myHTTPChannel(http.HTTPChannel):
    def connectionMade(self):
        print "Check here if connection is allowed from",
self.transport.getPeer()
        self.setTimeout(self.timeOut)

class myHTTPFactory(http.HTTPFactory):
    protocol = myHTTPChannel


class mySite(myHTTPFactory):

    counter = 0
    requestFactory = server.Request
    displayTracebacks = True

    def __init__(self, resource, logPath=None, timeout=60*60*12):
        """Initialize.
        """
        http.HTTPFactory.__init__(self, logPath=logPath, timeout=timeout)
        self.sessions = {}
        self.resource = resource

    def _openLogFile(self, path):
        from twisted.python import logfile
        return logfile.LogFile(os.path.basename(path), os.path.dirname(path))

    def __getstate__(self):
        d = self.__dict__.copy()
        d['sessions'] = {}
        return d

    def _mkuid(self):
        """(internal) Generate an opaque, unique ID for a user's session.
        """
        import md5, random
        self.counter = self.counter + 1
        return md5.new("%s_%s" % (str(random.random()) ,
str(self.counter))).hexdigest()

    def makeSession(self):
        """Generate a new Session instance, and store it for future reference.
        """
        uid = self._mkuid()
        session = self.sessions[uid] = Session(self, uid)
        session.checkExpiredLoop.start(1800)
        return session

    def getSession(self, uid):
        """Get a previously generated session, by its unique ID.
        This raises a KeyError if the session is not found.
        """
        return self.sessions[uid]

    def buildProtocol(self, addr):
        """Generate a channel attached to this site.
        """
        channel = http.HTTPFactory.buildProtocol(self, addr)
        channel.requestFactory = self.requestFactory
        channel.site = self
        return channel

    isLeaf = 0

    def render(self, request):
        """Redirect because a Site is always a directory.
        """
        request.redirect(request.prePathURL() + '/')
        request.finish()

    def getChildWithDefault(self, pathEl, request):
        """Emulate a resource's getChild method.
        """
        request.site = self
        return self.resource.getChildWithDefault(pathEl, request)

    def getResourceFor(self, request):
        """Get a resource for a request.

        This iterates through the resource heirarchy, calling
        getChildWithDefault on each resource it finds for a path element,
        stopping when it hits an element where isLeaf is true.
        """
        request.site = self
        # Sitepath is used to determine cookie names between distributed
        # servers and disconnected sites.
        request.sitepath = copy.copy(request.prepath)
        return resource.getChildForRequest(self.resource, request)



if __name__ == '__main__':
    r = Example()

    reactor.listenTCP(7080,mySite(r),ctx)
    startLogging(stdout)
    reactor.run()



From gah at research.att.com  Tue May 29 17:24:09 2007
From: gah at research.att.com (Glenn Hochberg)
Date: Tue, 29 May 2007 19:24:09 -0400
Subject: [Twisted-Python] better way to do this?
In-Reply-To: <18e3f33d0705291524q6c418d28ga04f82f5cb3e3814@mail.gmail.com>
References: <18e3f33d0705291524q6c418d28ga04f82f5cb3e3814@mail.gmail.com>
Message-ID: <847F668D-81B5-4D8E-8E9A-13FA0D814CA1@research.att.com>

On May 29, 2007, at 6:24 PM, Eli Criffield wrote:

> What i want to do is validate the "From" host of an xmlrpc server
> against a list of allowed servers.
>
> Sounds easy enough but "connectionMade(self)" Call is way back in
> http.HTTPChannel. That is set as the protocol in http.HTTPFactory and
> HTTPFactory is inherits by server.Site.
>
> So whats the best way to change one little function in  
> http.HTTPChannel ?
>
> Here is what i have now, but the I have to include all of server.Site
> in my example, even though its unchanged except it inherits
> myHTTPFactory instead of http.HTTPFactory.
>
> Is there a simpler way to do this?
>
> Eli Criffield

<snip>

This seems like it should work; I tried it with your Example and it  
does seem to have the same effect:

class mySite(server.Site):

    protocol = myHTTPChannel


Glenn Hochberg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070529/949e0abb/attachment.html>

From elicriffield at gmail.com  Tue May 29 22:33:24 2007
From: elicriffield at gmail.com (Eli Criffield)
Date: Tue, 29 May 2007 23:33:24 -0500
Subject: [Twisted-Python] better way to do this?
In-Reply-To: <847F668D-81B5-4D8E-8E9A-13FA0D814CA1@research.att.com>
References: <18e3f33d0705291524q6c418d28ga04f82f5cb3e3814@mail.gmail.com>
	<847F668D-81B5-4D8E-8E9A-13FA0D814CA1@research.att.com>
Message-ID: <18e3f33d0705292133g3d9b370cm840dc5a41a6637db@mail.gmail.com>

Yeah that works. I was racking my brain trying to figure out the easy
way to do it....

Thanks

Eli Criffield

On 5/29/07, Glenn Hochberg <gah at research.att.com> wrote:
>
> On May 29, 2007, at 6:24 PM, Eli Criffield wrote:
>
>
> What i want to do is validate the "From" host of an xmlrpc server
>
> against a list of allowed servers.
>
>
>
>
> Sounds easy enough but "connectionMade(self)" Call is way back in
>
> http.HTTPChannel. That is set as the protocol in http.HTTPFactory and
>
> HTTPFactory is inherits by server.Site.
>
>
>
>
> So whats the best way to change one little function in http.HTTPChannel ?
>
>
>
>
> Here is what i have now, but the I have to include all of server.Site
>
> in my example, even though its unchanged except it inherits
>
> myHTTPFactory instead of http.HTTPFactory.
>
>
>
>
> Is there a simpler way to do this?
>
>
>
>
> Eli Criffield
> <snip>
>
> This seems like it should work; I tried it with your Example and it does
> seem to have the same effect:
>
> class mySite(server.Site):
>
>    protocol = myHTTPChannel
>
>
> Glenn Hochberg
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From antoine.pitrou at wengo.com  Wed May 30 04:32:39 2007
From: antoine.pitrou at wengo.com (Antoine Pitrou)
Date: Wed, 30 May 2007 12:32:39 +0200
Subject: [Twisted-Python] Re: Divmod Sine Broken?
In-Reply-To: <4656A37F.1050700@llaisdy.com>
References: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
	<4656A37F.1050700@llaisdy.com>
Message-ID: <1180521159.7009.5.camel@antoine-ubuntu>


Le vendredi 25 mai 2007 à 09:51 +0100, Ivan Uemlianin a écrit :
> Jean-Paul Calderone wrote:
> > The Divmod Sine SIP implementation has numerous bug fixes not present in
> > twisted.protocols.sip.  Once #2444 is resolved, the protocol support in
> > Twisted will be as good as the protocol support in Divmod Sine.  What 
> > Sine
> > will still offer above the code in Twisted is the higher level APIs which
> > make call setup easy enough so that novel applications can focus on their
> > novelty instead of on SIP details.
> I have attempted and failed to install Divmod Sine.  I posted the 
> message below to divmod-dev a few days ago but have yet to receive a 
> reply (it's a quiet list).  I am re-posting the message here in good 
> faith and in the belief that it is not entirely off-topic or plain stupid. 

Just my 2 cents... The Sine author looks dead for all purposes. He
doesn't answer bug reports for his own code.

After playing around with the SIP support in Twisted, finding a few bugs
whose correction (*) was refused on the grounds that the author had
forked his own code as a separate project, we at Wengo have written our
own SIP stack on top of a patched twisted.protocols.sip.

(*) http://twistedmatrix.com/trac/ticket/2220

Good luck :)

Regards

Antoine.





From bjorn at iki.fi  Wed May 30 05:26:55 2007
From: bjorn at iki.fi (Bjorn Andersson)
Date: Wed, 30 May 2007 14:26:55 +0300
Subject: [Twisted-Python] twisted.names.client.Resolver user neither
	'search' nor 'domain' from resolv.conf?
Message-ID: <88bc8c7a0705300426h185545c9o8ecd07aab9b4ca46@mail.gmail.com>

Hi,

I just briefly tested twisted.names.client.Resolver with a resolv.conf
configuration file. I noticed that it doesn't utilize the configured
'domain' or 'search' directives. Is there any plan to implement this
in the near future or is there a deliberate reason why these aren't
used?

  Bjorn A.



From exarkun at divmod.com  Wed May 30 06:04:04 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 30 May 2007 08:04:04 -0400
Subject: [Twisted-Python] twisted.names.client.Resolver user neither
	'search' nor 'domain' from resolv.conf?
In-Reply-To: <88bc8c7a0705300426h185545c9o8ecd07aab9b4ca46@mail.gmail.com>
Message-ID: <20070530120404.30678.630587854.divmod.quotient.7565@ohm>

On Wed, 30 May 2007 14:26:55 +0300, Bjorn Andersson <bjorn at iki.fi> wrote:
>Hi,
>
>I just briefly tested twisted.names.client.Resolver with a resolv.conf
>configuration file. I noticed that it doesn't utilize the configured
>'domain' or 'search' directives. Is there any plan to implement this
>in the near future or is there a deliberate reason why these aren't
>used?
>

I hadn't planned on implementing them, but only because I don't have any
need for these features myself.  If you'd like to add support for them,
please feel free; I'd be happy to apply a patch.  (If you do, take a look
at <http://twistedmatrix.com/trac/wiki/ReviewProcess> first.)

Jean-Paul



From krgkg at yahoo.com  Wed May 30 08:32:02 2007
From: krgkg at yahoo.com (Keith Gunderson)
Date: Wed, 30 May 2007 07:32:02 -0700 (PDT)
Subject: [Twisted-Python] New to twisted- need help to hit stride
Message-ID: <69537.95382.qm@web34514.mail.mud.yahoo.com>

Hello group,

I've been lurking and watching for a while.  I need to change hats now and get some coding done.  I'm an engineer/ sysadmin/ dev and a public university who's been willingly forced to be a sysadmin after years of C/C++ development.

I'll be on IRC in the evenings.  I'm hoping to converse with some of you well-known folks (and others) so I can pick up speed w/ twisted/ python.  I definitely want to do things "by the books" (w/ respect to twisted methodology.)

I seem to be a mere step or two away from clicking, but I'm thinking in circles at the transition between design and implementation.  I need to decide how much to code from scratch, how much to borrow from twisted-related libraries, and how much is available from twisted itself.  Please offer suggestion for which classes/ libraries to use (and avoid) and even project skeletons to start with.

Use Cases:
- Emacs fragment manager:  sent & receive  blocks of text to a twisted server from emacs.  Sort by user, time, name. 

-SSH command - line manager :  send command strings to twisted server.  Another fuzzy goal would be to have the commands run on other hosts by the twisted server.

-LDAP - user database authentication.

After implemeting those features, I expect to re-evaluate my skills and design so as to begin phase 2.

Feel free to make suggestions or wait for more pointed questions.    

KGunderson



 
---------------------------------
No need to miss a message. Get email on-the-go 
with Yahoo! Mail for Mobile. Get started.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070530/14052d65/attachment.html>

From washort at twistedmatrix.com  Wed May 30 14:44:37 2007
From: washort at twistedmatrix.com (washort at twistedmatrix.com)
Date: Wed, 30 May 2007 16:44:37 -0400
Subject: [Twisted-Python] Re: Divmod Sine Broken?
In-Reply-To: <1180521159.7009.5.camel@antoine-ubuntu>
References: <20070520151513.30678.599672052.divmod.quotient.2801@ohm>
	<4656A37F.1050700@llaisdy.com>
	<1180521159.7009.5.camel@antoine-ubuntu>
Message-ID: <20070530204437.GG18017@localhost.localdomain>

On Wed, May 30, 2007 at 12:32:39PM +0200, Antoine Pitrou wrote:
> 
> Just my 2 cents... The Sine author looks dead for all purposes. He
> doesn't answer bug reports for his own code.

Hi. I'm not dead.                                                                                                                  
                                                                                                                                   
I'd be happy to look at any bug reports you want to file for Sine --                                                               
its bug tracker can be found at http://divmod.org/.




From LAdams at doubleclick.com  Wed May 30 15:20:56 2007
From: LAdams at doubleclick.com (Adams, Larry)
Date: Wed, 30 May 2007 15:20:56 -0600
Subject: [Twisted-Python] RE: Modifying a web proxy to use SSL
In-Reply-To: <5DA9F92FACA0914D951AE5EB57F9236E02B9BB8F@THN-EXCLS1.dc1.doubleclick.corp>
References: <5DA9F92FACA0914D951AE5EB57F9236E02B9BB8F@THN-EXCLS1.dc1.doubleclick.corp>
Message-ID: <5DA9F92FACA0914D951AE5EB57F9236E02B9C469@THN-EXCLS1.dc1.doubleclick.corp>

Here is a little more detail on my problem.  I've been able to verify
that the connection is made to the https server and that data is
received.  In fact, I've overridden the ProxyRequest.handleResponseEnd()
method to save this data to a database.  I can see the raw html and
image data in the database, but nothing is returned to the browser.
Does anyone have any experience implementing their own proxy with SSL
that might be able to point me in the right direction?  Any assistance
would be greatly appreciated.
 
-larry
 
Here is my custom ProxyRequest class (i had to modify some stuff because
secure urls have the https stripped and :443 added to the uri for some
reason):
 
class SerpicoProxyRequest(proxy.ProxyRequest):
    #protocols = {'http': SerpicoProxyClientFactory}
    #LEA - added https
    protocols = {'http': SerpicoProxyClientFactory, 'https' :
SerpicoProxyClientFactory}
    ports = {'http' : 80, 'https' : 443}
 
    def __init__(self, *args):
        proxy.ProxyRequest.__init__(self, *args)
 
    def process(self):
        if (self.uri.find(':443')>0):
            self.uri = 'https://' + self.uri.replace(':443','')
            self.method = 'GET'
            parsed = urlparse.urlparse(self.uri)
            protocol = parsed[0]
            host = parsed[1]
            port = self.ports[protocol]
            self.setHost(host,port,1)
            if ':' in host:
                host, port = host.split(':')
                port = int(port)
 
            rest = urlparse.urlunparse(('','')+parsed[2:])
            if not rest:
                rest = rest+'/'
            class_ = self.protocols[protocol]
            headers = self.getAllHeaders().copy()
            if not headers.has_key('host'):
                headers['host'] = host
            self.content.seek(0,0)
            s = self.content.read()
            clientFactory = class_(self.method, rest, self.clientproto,
headers, s, self)
            clientContextFactory = ssl.ClientContextFactory()
            c = reactor.connectSSL(host, port, clientFactory,
clientContextFactory)
        else:
            proxy.ProxyRequest.process(self)
 
Here is my custom ProxyClient (the Page() object is what I'm using to
save the data to the database):
 
class SerpicoProxyClient(proxy.ProxyClient):
    def connectionMade(self):
        global CURRENTJOBID
        global CURRENTCHILDID
        log.msg("initializing connection")
        self.page = Page()
        if not self.father.uri == "%s/command/get_agent_task/%s" %
(command_site,machine_name):
            self.page.instance = machine_name
            self.page.job_id = int(CURRENTJOBID or 0)
            self.page.task_id = int(CURRENTCHILDID or 0)
            # self.father refers to the http.Request object
            self.page.request_uri = self.father.uri
            self.page.save()
            log.msg("MACHINE NAME IS %s" % machine_name)
            log.msg("PROXYREQUEST %s" % self.father.uri)
            log.msg("TRANSPORT %s" % self.transport)
            log.msg("ISSECURE %s" % self.father.isSecure())
        proxy.ProxyClient.connectionMade(self)
 
    def handleHeader(self, key, value):
        proxy.ProxyClient.handleHeader(self, key, value)
#        log.msg("%s : %s added" % (key, value))
        if not self.father.uri == "%s/command/get_agent_task/%s" %
(command_site,machine_name):
            self.page.header_set.create(key=key, value=value)
 
    def handleResponsePart(self, data):
        if not self.father.uri == "%s/command/get_agent_task/%s" %
(command_site,machine_name):
            self.page.data = data
        proxy.ProxyClient.handleResponsePart(self, data)
 
    def handleResponseEnd(self):
        if not self.father.uri == "%s/command/get_agent_task/%s" %
(command_site,machine_name):
            self.page.save()
        log.msg('ending response with my
data::%s\n\nfatherdata::%s\n\nmytransport::%s' % (self.page.data,
self.father.c
hannel.transport, self.transport))
        self.transport.loseConnection()
        self.father.channel.transport.loseConnection()
 

________________________________

From: Adams, Larry 
Sent: Tuesday, May 29, 2007 3:42 PM
To: twisted-python at twistedmatrix.com
Subject: Modifying a web proxy to use SSL



I'm trying to use twisted to proxy all web requests for a set of PCs
(virtual machines actually). I've created my own ProxyRequest class to
override the process() method so that it will use SSL if the URL is
secure. It makes the connection and retrieves the data successfully, but
the browser still doesn't display the HTML. I must be missing some other
class/method that I have to override, but I'm at a loss as to which one
at the moment.

Below is some logging from my application for the same page called via
http and https respectively. Any help or pointers to working examples
would be greatly appreciated!

Thanks,
Larry Adams 
2007/05/29 15:10 -0500 [SerpicoProxy,11,172.18.36.22] Starting factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8cec>

2007/05/29 15:10 -0500 [Uninitialized] building protocol for addr:
IPv4Address(TCP, 'www.connectcommerce.com
<file://www.connectcommerce.com> ', 80)
2007/05/29 15:10 -0500 [Uninitialized] initializing connection
2007/05/29 15:10 -0500 [Uninitialized] MACHINE NAME IS surfsidekick
2007/05/29 15:10 -0500 [Uninitialized] PROXYREQUEST
http://www.connectcommerce.com/ <http://www.connectcommerce.com/> 
2007/05/29 15:10 -0500 [Uninitialized] TRANSPORT <<class
'twisted.internet.tcp.Client'> to ('www.connectcommerce.com
<file://www.connectcommerce.com> ', 80) at b71d8ccc>

2007/05/29 15:10 -0500 [Uninitialized] ISSECURE False
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Date : Tue, 29 May
2007 20:11:27 GMT added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Server :
Apache/1.3.33 (Unix) (Gentoo/Linux) added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Location :
http://www.connectcommerce.com/global/login.html
<http://www.connectcommerce.com/global/login.html>  added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Connection : close
added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Content-Type :
text/html; charset=iso-8859-1 added
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] trying to lose
connection for transport: <<class 'twisted.internet.tcp.Client'> to
('www.connectcommerce.com <file://www.connectcommerce.com> ', 80) at
b71d8ccc>

2007/05/29 15:10 -0500 [SerpicoProxyClient,client] parent transport :
<SerpicoProxy #11 on 74007>
2007/05/29 15:10 -0500 [SerpicoProxyClient,client] Stopping factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8cec>

2007/05/29 15:11 -0500 [SerpicoProxy,18,172.18.36.22] Starting factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8d0c>

2007/05/29 15:11 -0500 [Uninitialized] building protocol for addr:
IPv4Address(TCP, 'www.connectcommerce.com
<file://www.connectcommerce.com> ', 443)
2007/05/29 15:11 -0500 [Uninitialized] initializing connection
2007/05/29 15:11 -0500 [Uninitialized] MACHINE NAME IS surfsidekick
2007/05/29 15:11 -0500 [Uninitialized] PROXYREQUEST
https://www.connectcommerce.com <https://www.connectcommerce.com> 
2007/05/29 15:11 -0500 [Uninitialized] TRANSPORT <<class
'twisted.internet.tcp.TLSConnection'> to ('www.connectcommerce.com
<file://www.connectcommerce.com> ', 443) at b71bd86c>

2007/05/29 15:11 -0500 [Uninitialized] ISSECURE True
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Date : Tue, 29 May
2007 20:12:00 GMT added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Server :
Apache/1.3.33 (Unix) (Gentoo/Linux) added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Location :
http://www.connectcommerce.com/global/login.html
<http://www.connectcommerce.com/global/login.html>  added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Connection : close
added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Content-Type :
text/html; charset=iso-8859-1 added
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] trying to lose
connection for transport: <<class 'twisted.internet.tcp.TLSConnection'>
to ('www.connectcommerce.com <file://www.connectcommerce.com> ', 443) at
b71bd86c>

2007/05/29 15:11 -0500 [SerpicoProxyClient,client] parent transport :
<SerpicoProxy #18 on 74007>
2007/05/29 15:11 -0500 [SerpicoProxyClient,client] Stopping factory
<__main__.SerpicoProxyClientFactory instance at 0xb71d8d0c>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070530/890d0334/attachment.html>

From glyph at divmod.com  Thu May 31 12:16:29 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 31 May 2007 18:16:29 -0000
Subject: [Twisted-Python] New to twisted- need help to hit stride
In-Reply-To: <69537.95382.qm@web34514.mail.mud.yahoo.com>
References: <69537.95382.qm@web34514.mail.mud.yahoo.com>
Message-ID: <20070531181629.24950.1256377948.divmod.xquotient.110@joule.divmod.com>

On 30 May, 02:32 pm, krgkg at yahoo.com wrote:
>Use Cases:
>- Emacs fragment manager:  sent & receive  blocks of text to a twisted 
>server from emacs.  Sort by user, time, name.

I have been looking for a use-case for an elisp implementation of AMP. 
I thought I'd filed a ticket a while ago, but apparently not, so I just 
made one.

Since this feature you've described would be a nice use-case, please 
feel free to comment on #2686 if you are so inclined.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070531/55759056/attachment.html>

