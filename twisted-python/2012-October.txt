From poalman at gmail.com  Mon Oct  1 05:38:32 2012
From: poalman at gmail.com (Paul Wiseman)
Date: Mon, 1 Oct 2012 10:38:32 +0100
Subject: [Twisted-Python] dynamic FTP realm
In-Reply-To: <CAOp9P3qQeou_vGz07k-750YeLdPaT8d3QwRsLLuuzmtV_oTLRw@mail.gmail.com>
References: <CAMBtMcudNicacdOA4rPiU9rq4iXtiDoZMwOmBziEfs4R5yr52g@mail.gmail.com>
	<CACgdh2iK5BAF3NYJVtFRvx33CuAFYkAd2Br0AdpcNuFsxiF3jQ@mail.gmail.com>
	<20120929202149.5616.2099791274.divmod.xquotient.9@localhost6.localdomain6>
	<CACgdh2igOHs3HrELQfLRuoRAfQLr_VOdL+Tbq6j5O7FHHwG=TQ@mail.gmail.com>
	<CAOp9P3qQeou_vGz07k-750YeLdPaT8d3QwRsLLuuzmtV_oTLRw@mail.gmail.com>
Message-ID: <CACgdh2h8Vojh71RYOi_tfuuZ-v6h-foBKyNXCAmxgfgn720fKQ@mail.gmail.com>

On 30 September 2012 13:59, Itamar Turner-Trauring <
itamar at futurefoundries.com> wrote:

>
>
> On Sun, Sep 30, 2012 at 8:38 AM, Paul Wiseman <poalman at gmail.com> wrote:
>
>>
>>  That is likely a much better idea! Will I need to use some threading if
>> I'm making web calls then from list? Presumably if I don't the whole
>> process will block while it's waiting for web responses?
>>
>
> If you're using Twisted's web clients (getPage or the more complex but
> superior Agent) you do not need threads, Twisted will do the networking in
> a non-blocking manner. E.g.
>
> def list(self, path):
>     return
> twisted.web.client.getPage(...).addCallback(convertHTTPResponseToFTPListing)
>
> --
> Itamar Turner-Trauring, Future Foundries LLC
> http://futurefoundries.com/ ? Twisted consulting, training and support.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
I made an api for the web requests- the call isn't so straightforward, all
the information is sent in POST formatted a certain way and there's also a
credentials part with a token and other bits with secrets used to auth the
request. So for instance I call the list dir method in the api and get back
a Response type object based on the web response. Is there still way I can
defer the returning of that web call, or would I need to tear the api apart
to use twisted deferred objects internally? or is this something Agent
could deal with?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121001/421f6a18/attachment.htm 

From itamar at futurefoundries.com  Mon Oct  1 11:52:22 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Mon, 1 Oct 2012 11:52:22 -0400
Subject: [Twisted-Python] dynamic FTP realm
In-Reply-To: <CACgdh2h8Vojh71RYOi_tfuuZ-v6h-foBKyNXCAmxgfgn720fKQ@mail.gmail.com>
References: <CAMBtMcudNicacdOA4rPiU9rq4iXtiDoZMwOmBziEfs4R5yr52g@mail.gmail.com>
	<CACgdh2iK5BAF3NYJVtFRvx33CuAFYkAd2Br0AdpcNuFsxiF3jQ@mail.gmail.com>
	<20120929202149.5616.2099791274.divmod.xquotient.9@localhost6.localdomain6>
	<CACgdh2igOHs3HrELQfLRuoRAfQLr_VOdL+Tbq6j5O7FHHwG=TQ@mail.gmail.com>
	<CAOp9P3qQeou_vGz07k-750YeLdPaT8d3QwRsLLuuzmtV_oTLRw@mail.gmail.com>
	<CACgdh2h8Vojh71RYOi_tfuuZ-v6h-foBKyNXCAmxgfgn720fKQ@mail.gmail.com>
Message-ID: <CAOp9P3ra3uhmpag4ByV1iXK76A=3mbbxxgcu8tQZ7vXGi4L7AQ@mail.gmail.com>

On Mon, Oct 1, 2012 at 5:38 AM, Paul Wiseman <poalman at gmail.com> wrote:

>
> I made an api for the web requests- the call isn't so straightforward, all
> the information is sent in POST formatted a certain way and there's also a
> credentials part with a token and other bits with secrets used to auth the
> request. So for instance I call the list dir method in the api and get back
> a Response type object based on the web response. Is there still way I can
> defer the returning of that web call, or would I need to tear the api apart
> to use twisted deferred objects internally? or is this something Agent
> could deal with?
>

Agent could certainly deal with this; alternatively, if you're using a
blocking API you could use deferToThread (make sure the function you call
that way doesn't touch any global state or call any Twisted APIs.)

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ ? Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121001/75ee65ae/attachment.htm 

From poalman at gmail.com  Mon Oct  1 15:18:42 2012
From: poalman at gmail.com (Paul Wiseman)
Date: Mon, 1 Oct 2012 20:18:42 +0100
Subject: [Twisted-Python] dynamic FTP realm
In-Reply-To: <CAOp9P3ra3uhmpag4ByV1iXK76A=3mbbxxgcu8tQZ7vXGi4L7AQ@mail.gmail.com>
References: <CAMBtMcudNicacdOA4rPiU9rq4iXtiDoZMwOmBziEfs4R5yr52g@mail.gmail.com>
	<CACgdh2iK5BAF3NYJVtFRvx33CuAFYkAd2Br0AdpcNuFsxiF3jQ@mail.gmail.com>
	<20120929202149.5616.2099791274.divmod.xquotient.9@localhost6.localdomain6>
	<CACgdh2igOHs3HrELQfLRuoRAfQLr_VOdL+Tbq6j5O7FHHwG=TQ@mail.gmail.com>
	<CAOp9P3qQeou_vGz07k-750YeLdPaT8d3QwRsLLuuzmtV_oTLRw@mail.gmail.com>
	<CACgdh2h8Vojh71RYOi_tfuuZ-v6h-foBKyNXCAmxgfgn720fKQ@mail.gmail.com>
	<CAOp9P3ra3uhmpag4ByV1iXK76A=3mbbxxgcu8tQZ7vXGi4L7AQ@mail.gmail.com>
Message-ID: <CACgdh2iokYK4-93ubA3Y9aQ2dhvoRGTPz8LF6KcHpNF2ps5VKw@mail.gmail.com>

On 1 October 2012 16:52, Itamar Turner-Trauring
<itamar at futurefoundries.com>wrote:

>
>
> On Mon, Oct 1, 2012 at 5:38 AM, Paul Wiseman <poalman at gmail.com> wrote:
>
>>
>> I made an api for the web requests- the call isn't so straightforward,
>> all the information is sent in POST formatted a certain way and there's
>> also a credentials part with a token and other bits with secrets used to
>> auth the request. So for instance I call the list dir method in the api and
>> get back a Response type object based on the web response. Is there still
>> way I can defer the returning of that web call, or would I need to tear the
>> api apart to use twisted deferred objects internally? or is this something
>> Agent could deal with?
>>
>
> Agent could certainly deal with this; alternatively, if you're using a
> blocking API you could use deferToThread (make sure the function you call
> that way doesn't touch any global state or call any Twisted APIs.)
>
> --
> Itamar Turner-Trauring, Future Foundries LLC
> http://futurefoundries.com/ ? Twisted consulting, training and support.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
This is twisting my brain slightly.

what if I have more than 1 blocking call to make in the list dir call?

One area that is especially confusing for me is where I have those blocking
webcalls in a recursive method.

Because the api needs a folder's unique id to return a folder list, if for
instance someone requests a file/folder 10 levels deep, the list dir will
need to walk up the path until it finds a cached node that it has an id
for, and then walk back down the path listing the folders using the api.

I read about chained deferreds and I think that might be the way to go but
I'm not sure how I'd chain them together as 1 webcall needs the id from its
parent folder they all need to be executed in a chain, but return down the
recursive method stack

Are there any examples of how I could make a recursive function with
deferreds?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121001/3f9f880b/attachment.htm 

From electric.or.sharp at gmail.com  Tue Oct  2 13:09:29 2012
From: electric.or.sharp at gmail.com (E S)
Date: Tue, 2 Oct 2012 12:09:29 -0500
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has gone
	away"
Message-ID: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>

I have a service running that occasionally connects to a MySQL
database. When there is no activity on it for some time, I eventually
get the the error

_mysql_exceptions.OperationalError: (2006, 'MySQL server has gone away')

I have found a few posts on this group related to this issue

http://twistedmatrix.com/pipermail/twisted-python/2007-July/015788.html
http://twistedmatrix.com/pipermail/twisted-python/2007-October/016178.html

as well as some tickets on the twisted homepage:

http://twistedmatrix.com/trac/ticket/4404
http://twistedmatrix.com/trac/ticket/4964

I have also seen this referenced as a potential fix:

http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/

I currently have the cp_reconnect parameter set to True, but it does
not appear to be doing the job. I don't really see much consensus on
how to properly handle this issue. Some people seem to think that the
cp_reconnect parameter should take care of it for you, other people
say that cp_reconnect is only part of the solution and that you have
to write your own error handling.

I realize that I could increase the value of MySQL's wait_timeout
parameter, but I would rather have the twisted code detect and handle
the situation. So, how does one do that?

Thanks,
Dave


From p.mayers at imperial.ac.uk  Wed Oct  3 04:28:06 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 03 Oct 2012 09:28:06 +0100
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
Message-ID: <506BF716.9050603@imperial.ac.uk>

On 10/02/2012 06:09 PM, E S wrote:
> I have a service running that occasionally connects to a MySQL
> database. When there is no activity on it for some time, I eventually
> get the the error
>
> _mysql_exceptions.OperationalError: (2006, 'MySQL server has gone away')
>
> I have found a few posts on this group related to this issue
>
> http://twistedmatrix.com/pipermail/twisted-python/2007-July/015788.html
> http://twistedmatrix.com/pipermail/twisted-python/2007-October/016178.html
>
> as well as some tickets on the twisted homepage:
>
> http://twistedmatrix.com/trac/ticket/4404
> http://twistedmatrix.com/trac/ticket/4964
>
> I have also seen this referenced as a potential fix:
>
> http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/
>
> I currently have the cp_reconnect parameter set to True, but it does
> not appear to be doing the job. I don't really see much consensus on
> how to properly handle this issue. Some people seem to think that the
> cp_reconnect parameter should take care of it for you, other people
> say that cp_reconnect is only part of the solution and that you have
> to write your own error handling.

For what it's worth - I think adbapi is seriously sub-optimal in this 
regard. We have continual low-level problems with Twisted apps getting 
stuck due to hung/dead ConnectionPool. And if you forget cp_reconnect, 
well you are basically committing suicide. Your Twisted app will need a 
restart.

In particular - it's not clear to my why CP isn't using "cp_good_sql" to 
probe a connection *before* starting the transaction, and to 
close/re-open it transparently if it has died and cp_reconnect==1.

Instead, the only place the "good" SQL is run is *after* a rollback, so 
the next N transactions into the pool (where N is the number of threads) 
all fail, because they don't get as far as "rollback".

I think the behaviour it should be aiming for is clear:

  1. Test each connection with "good_sql" before beginning the user 
interaction/query
  2. If execeptions occur inside the user interaction, either at cursor 
methods like execute, or connection methods like commit, then:
     1. rollback - if *this* raises an exception, throw the conn away
     2. propagate the original exception upwards unchanged (maybe 
wrapped, maybe not)

cp_reconnect should be the default.


From dynamicgl at gmail.com  Wed Oct  3 05:03:09 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Wed, 3 Oct 2012 17:03:09 +0800
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <506BF716.9050603@imperial.ac.uk>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk>
Message-ID: <CABkOF6Rif=L8Lt0ERCOwY5RFt6JCfOa-zz+UvHOZ9+mxGwDTFg@mail.gmail.com>

On Wed, Oct 3, 2012 at 4:28 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 10/02/2012 06:09 PM, E S wrote:
> > I have a service running that occasionally connects to a MySQL
> > database. When there is no activity on it for some time, I eventually
> > get the the error
> >
> > _mysql_exceptions.OperationalError: (2006, 'MySQL server has gone away')
> >
> > I have found a few posts on this group related to this issue
> >
> > http://twistedmatrix.com/pipermail/twisted-python/2007-July/015788.html
> >
> http://twistedmatrix.com/pipermail/twisted-python/2007-October/016178.html
> >
> > as well as some tickets on the twisted homepage:
> >
> > http://twistedmatrix.com/trac/ticket/4404
> > http://twistedmatrix.com/trac/ticket/4964
> >
> > I have also seen this referenced as a potential fix:
> >
> > http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/
> >
> > I currently have the cp_reconnect parameter set to True, but it does
> > not appear to be doing the job. I don't really see much consensus on
> > how to properly handle this issue. Some people seem to think that the
> > cp_reconnect parameter should take care of it for you, other people
> > say that cp_reconnect is only part of the solution and that you have
> > to write your own error handling.
>
> For what it's worth - I think adbapi is seriously sub-optimal in this
> regard. We have continual low-level problems with Twisted apps getting
> stuck due to hung/dead ConnectionPool. And if you forget cp_reconnect,
> well you are basically committing suicide. Your Twisted app will need a
> restart.
>
> In particular - it's not clear to my why CP isn't using "cp_good_sql" to
> probe a connection *before* starting the transaction, and to
> close/re-open it transparently if it has died and cp_reconnect==1.
>
> Instead, the only place the "good" SQL is run is *after* a rollback, so
> the next N transactions into the pool (where N is the number of threads)
> all fail, because they don't get as far as "rollback".
>
> I think the behaviour it should be aiming for is clear:
>
>   1. Test each connection with "good_sql" before beginning the user
> interaction/query
>   2. If execeptions occur inside the user interaction, either at cursor
> methods like execute, or connection methods like commit, then:
>      1. rollback - if *this* raises an exception, throw the conn away
>      2. propagate the original exception upwards unchanged (maybe
> wrapped, maybe not)
>
> cp_reconnect should be the default.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi

  MySQLdb (If you use it) has its own socket wrappers and callings so the
only way to co-operate with twisted is to use adbapi. It is possible to use
other implementations but there are no one claim production ready.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121003/b1b7b6f1/attachment.htm 

From itamar at itamarst.org  Wed Oct  3 07:27:56 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 03 Oct 2012 07:27:56 -0400
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <506BF716.9050603@imperial.ac.uk>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk>
Message-ID: <506C213C.6030108@itamarst.org>

On 10/03/2012 04:28 AM, Phil Mayers wrote:
> I think the behaviour it should be aiming for is clear: 
> 1. Test each connection with "good_sql" before beginning the user 
> interaction/query

The problem is that this adds latency; this can add up to quite a 
slowdown if your database server is on a remote server and you're doing 
lots of single queries (as opposed to runInteraction).


From tobias.oberstein at tavendo.de  Wed Oct  3 07:56:27 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 3 Oct 2012 04:56:27 -0700
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <506C213C.6030108@itamarst.org>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
Message-ID: <634914A010D0B943A035D226786325D4339113D707@EXVMBX020-12.exch020.serverdata.net>

> On 10/03/2012 04:28 AM, Phil Mayers wrote:
> > I think the behaviour it should be aiming for is clear:
> > 1. Test each connection with "good_sql" before beginning the user
> > interaction/query
> 
> The problem is that this adds latency; this can add up to quite a slowdown if
> your database server is on a remote server and you're doing lots of single
> queries (as opposed to runInteraction).

Yeah, running good_sql before every user query is bad.

Probably an option to run "good_sql" on an idle connection every n secs for fast detection of connection loss would be handy ..



From augustocaringi at gmail.com  Wed Oct  3 09:36:07 2012
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Wed, 3 Oct 2012 10:36:07 -0300
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <506C213C.6030108@itamarst.org>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
Message-ID: <CADFy_4F2DqKb4W5CB6HAw3NrZCAxfh4ETOpNJjzEAgCzSHvQEg@mail.gmail.com>

On Wed, Oct 3, 2012 at 8:27 AM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On 10/03/2012 04:28 AM, Phil Mayers wrote:
>> I think the behaviour it should be aiming for is clear:
>> 1. Test each connection with "good_sql" before beginning the user
>> interaction/query
>
> The problem is that this adds latency; this can add up to quite a
> slowdown if your database server is on a remote server and you're doing
> lots of single queries (as opposed to runInteraction).

Hi!

Sometime ago I faced some related problems and I found this code,
"ReconnectingConnectionPool":

http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/

What are your opinion about it?

-- 
Augusto Mecking Caringi


From p.mayers at imperial.ac.uk  Wed Oct  3 10:18:17 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 03 Oct 2012 15:18:17 +0100
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <506C213C.6030108@itamarst.org>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
Message-ID: <506C4929.50600@imperial.ac.uk>

On 03/10/12 12:27, Itamar Turner-Trauring wrote:
> On 10/03/2012 04:28 AM, Phil Mayers wrote:
>> I think the behaviour it should be aiming for is clear:
>> 1. Test each connection with "good_sql" before beginning the user
>> interaction/query
>
> The problem is that this adds latency; this can add up to quite a
> slowdown if your database server is on a remote server and you're doing
> lots of single queries (as opposed to runInteraction).

Fair point.


From glyph at twistedmatrix.com  Wed Oct  3 16:39:19 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Oct 2012 13:39:19 -0700
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
	gone away"
In-Reply-To: <CADFy_4F2DqKb4W5CB6HAw3NrZCAxfh4ETOpNJjzEAgCzSHvQEg@mail.gmail.com>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
	<CADFy_4F2DqKb4W5CB6HAw3NrZCAxfh4ETOpNJjzEAgCzSHvQEg@mail.gmail.com>
Message-ID: <B8D04641-1948-4512-9C54-764C68D564E8@twistedmatrix.com>


Le Oct 3, 2012 ? 6:36 AM, Augusto Mecking Caringi <augustocaringi at gmail.com> a ?crit :

> On Wed, Oct 3, 2012 at 8:27 AM, Itamar Turner-Trauring
> <itamar at itamarst.org> wrote:
>> On 10/03/2012 04:28 AM, Phil Mayers wrote:
>>> I think the behaviour it should be aiming for is clear:
>>> 1. Test each connection with "good_sql" before beginning the user
>>> interaction/query
>> 
>> The problem is that this adds latency; this can add up to quite a
>> slowdown if your database server is on a remote server and you're doing
>> lots of single queries (as opposed to runInteraction).
> 
> Hi!
> 
> Sometime ago I faced some related problems and I found this code,
> "ReconnectingConnectionPool":
> 
> http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/
> 
> What are your opinion about it?

If there are bugs in Twisted, or important missing features, step 1 should be to file a bug ? first, of course, searching for duplicates ? at <http://twistedmatrix.com/trac/newticket>.  Especially if the workaround involves calling or overriding some private, internal implementation detail.  If you're going to blog about a hack that fixes the problem for you, that post should link to the ticket, so that Twisted can move forward and provide a good experience for people getting started with it.

I hate the idea that step 1 for some poor new Twisted user would be to go searching around a couple dozen external websites to apply undocumented hacks to try to just get something basic, like relational database communication, to work acceptably for their application.

So, my opinion is that either this isn't a real problem, in which case you shouldn't use it, or it is a real problem, in which case Jeffrey Gelens and powdahound should open a ticket and explain why it's necessary :).

-glyph



From electric.or.sharp at gmail.com  Thu Oct  4 15:26:04 2012
From: electric.or.sharp at gmail.com (E S)
Date: Thu, 4 Oct 2012 14:26:04 -0500
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <B8D04641-1948-4512-9C54-764C68D564E8@twistedmatrix.com>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
	<CADFy_4F2DqKb4W5CB6HAw3NrZCAxfh4ETOpNJjzEAgCzSHvQEg@mail.gmail.com>
	<B8D04641-1948-4512-9C54-764C68D564E8@twistedmatrix.com>
Message-ID: <CAMwUOs2V5N=T2GNrTkLfAVmsD6i4N6J3Mv2EryXYz49kpa7-TQ@mail.gmail.com>

On Wed, Oct 3, 2012 at 3:39 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
> Le Oct 3, 2012 ? 6:36 AM, Augusto Mecking Caringi <augustocaringi at gmail.com> a ?crit :
>
>> On Wed, Oct 3, 2012 at 8:27 AM, Itamar Turner-Trauring
>> <itamar at itamarst.org> wrote:
>>> On 10/03/2012 04:28 AM, Phil Mayers wrote:
>>>> I think the behaviour it should be aiming for is clear:
>>>> 1. Test each connection with "good_sql" before beginning the user
>>>> interaction/query
>>>
>>> The problem is that this adds latency; this can add up to quite a
>>> slowdown if your database server is on a remote server and you're doing
>>> lots of single queries (as opposed to runInteraction).
>>
>> Hi!
>>
>> Sometime ago I faced some related problems and I found this code,
>> "ReconnectingConnectionPool":
>>
>> http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/
>>
>> What are your opinion about it?
>
> If there are bugs in Twisted, or important missing features, step 1 should be to file a bug ? first, of course, searching for duplicates ? at <http://twistedmatrix.com/trac/newticket>.  Especially if the workaround involves calling or overriding some private, internal implementation detail.  If you're going to blog about a hack that fixes the problem for you, that post should link to the ticket, so that Twisted can move forward and provide a good experience for people getting started with it.
>
> I hate the idea that step 1 for some poor new Twisted user would be to go searching around a couple dozen external websites to apply undocumented hacks to try to just get something basic, like relational database communication, to work acceptably for their application.
>
> So, my opinion is that either this isn't a real problem, in which case you shouldn't use it, or it is a real problem, in which case Jeffrey Gelens and powdahound should open a ticket and explain why it's necessary :).
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Well, I did reference two bugs already in the twisted bug tracker that
I believe are related to this issue (4964 definitely is anyway). These
issues have been in the bug tracking system for years now so I'm not
holding my breath on fixes any time soon. I appreciate your desire to
make twisted as good as it can be, but we all have schedules to meet
and hacks, documented or not, are sometimes necessary to move the
project along. So I definitely will consider input from people who
have run into this situation and found a solution that has worked for
them.

If you're not convinced it's a real problem, it's pretty easy to
recreate. Assuming your MySQL wait_timeout = 2, you can run the
following code and get the (2006, 'MySQL server has gone away') error:


from twisted.internet import reactor, defer
from twisted.enterprise import adbapi
import MySQLdb
import MySQLdb.cursors
from time import sleep

pool = adbapi.ConnectionPool("MySQLdb", host="1.2.3.4",
user="someuser", passwd="xxx", db="someschema",
cursorclass=MySQLdb.cursors.DictCursor, cp_reconnect=True)

def gopherIt(txn):
   txn.execute("UPDATE Table1 SET Field1 = 123 WHERE Field2 = 456")
   sleep(3)
   txn.execute("UPDATE Table1 SET Field1 = 123 WHERE Field2 = 456")

def done(x):
   print "done"

def error(f):
   print f.value

d = pool.runInteraction(gopherIt)
d.addCallback(done)
d.addErrback(error)

reactor.callLater(4, reactor.stop)
reactor.run()


So, unless I have a misunderstanding about what cp_reconnect is
supposed to do, this is a documented bug. The question is what, if
anything, can be done about it in the short term. Possible solutions
are:

1. Increase the wait_timeout value on the server
2. Override methods in the ConnectionPool class
(http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/)
3. Setup a periodic "ping" in each connection to keep it alive
4. Man up and fix adbapi myself

I'm leaning towards #1 since it seems to be least invasive, but I am
open to other opinions.


From washort at twistedmatrix.com  Thu Oct  4 16:55:04 2012
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 4 Oct 2012 13:55:04 -0700
Subject: [Twisted-Python] Introducing Frack, a (partial) replacement for Trac
Message-ID: <CAEzUHiMYj7hZR71ZLK8FqJO6HaFCPnzx=y4nByD3d_G0e-F0xA@mail.gmail.com>

Twisted's issue tracker is based on Trac, which has had
increasingly bad performance over the years. Also, its code and
deployment setup are so bad that everyone who has the ability to
improve it has tried as hard as possible to avoid touching it at all.

So I started writing a new issue tracker compatible with Trac's
database, based on Twisted and more modern web technology. But it's
incomplete and I'm not a JavaScript expert, so I need your help.

If you've ever tried to contribute to Twisted and had to wait on Trac
in order to read, comment on, or submit a ticket, contribute to Frack!
It's already much faster than Trac for what it does, and there's
plenty of room for you to help.

If you want to help out with Twisted, but like writing HTML or
Javascript too, contribute to Frack! It's written using modern,
modular JavaScript with client side templates. It uses Twisted on the
backend so using stuff like websockets for updates would be pretty
easy to add.

Interested? Here are some things we'd like to do soon:

 - Add a nice front page
 - Add a search page
 - Display more info on a ticket for reviewers

the code is at: http://launchpad.net/frack

The current prototype is running at
http://twistedmatrix.com/users/frack.twistd/ui/ticket.html?id=<ticket_id>.

You can contact me directly or post on the list with any issues or
questions you have.


From washort at twistedmatrix.com  Thu Oct  4 17:49:46 2012
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 4 Oct 2012 14:49:46 -0700
Subject: [Twisted-Python] Introducing Frack,
	a (partial) replacement for Trac
In-Reply-To: <634914A010D0B943A035D226786325D433911E3EBE@EXVMBX020-12.exch020.serverdata.net>
References: <CAEzUHiMYj7hZR71ZLK8FqJO6HaFCPnzx=y4nByD3d_G0e-F0xA@mail.gmail.com>
	<634914A010D0B943A035D226786325D433911E3EBE@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAEzUHiNL4oeGHwpyG4SEOk5iXvbvCh6buxNq1nHrntadf4JjHQ@mail.gmail.com>

That's strange. I believe that's due to twistedmatrix.com using PB to
connect different web server processes together, not anything directly
related to the code in Frack.

Try this URL? It's working for me currently.

http://twistedmatrix.com/users/frack.twistd/ui/ticket.html?id=1956


From glyph at twistedmatrix.com  Fri Oct  5 04:30:04 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 5 Oct 2012 01:30:04 -0700
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
	gone away"
In-Reply-To: <CAMwUOs2V5N=T2GNrTkLfAVmsD6i4N6J3Mv2EryXYz49kpa7-TQ@mail.gmail.com>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
	<CADFy_4F2DqKb4W5CB6HAw3NrZCAxfh4ETOpNJjzEAgCzSHvQEg@mail.gmail.com>
	<B8D04641-1948-4512-9C54-764C68D564E8@twistedmatrix.com>
	<CAMwUOs2V5N=T2GNrTkLfAVmsD6i4N6J3Mv2EryXYz49kpa7-TQ@mail.gmail.com>
Message-ID: <EDA13E64-F500-4A4C-A7FA-269C69659BD6@twistedmatrix.com>


Le Oct 4, 2012 ? 12:26 PM, E S <electric.or.sharp at gmail.com> a ?crit :

> On Wed, Oct 3, 2012 at 3:39 PM, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>> Le Oct 3, 2012 ? 6:36 AM, Augusto Mecking Caringi <augustocaringi at gmail.com> a ?crit :
>> 
>>> On Wed, Oct 3, 2012 at 8:27 AM, Itamar Turner-Trauring
>>> <itamar at itamarst.org> wrote:
>>>> On 10/03/2012 04:28 AM, Phil Mayers wrote:
>>>>> I think the behaviour it should be aiming for is clear:
>>>>> 1. Test each connection with "good_sql" before beginning the user
>>>>> interaction/query
>>>> 
>>>> The problem is that this adds latency; this can add up to quite a
>>>> slowdown if your database server is on a remote server and you're doing
>>>> lots of single queries (as opposed to runInteraction).
>>> 
>>> Hi!
>>> 
>>> Sometime ago I faced some related problems and I found this code,
>>> "ReconnectingConnectionPool":
>>> 
>>> http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/
>>> 
>>> What are your opinion about it?
>> 
>> If there are bugs in Twisted, or important missing features, step 1 should be to file a bug ? first, of course, searching for duplicates ? at <http://twistedmatrix.com/trac/newticket>.  Especially if the workaround involves calling or overriding some private, internal implementation detail.  If you're going to blog about a hack that fixes the problem for you, that post should link to the ticket, so that Twisted can move forward and provide a good experience for people getting started with it.
>> 
>> I hate the idea that step 1 for some poor new Twisted user would be to go searching around a couple dozen external websites to apply undocumented hacks to try to just get something basic, like relational database communication, to work acceptably for their application.
>> 
>> So, my opinion is that either this isn't a real problem, in which case you shouldn't use it, or it is a real problem, in which case Jeffrey Gelens and powdahound should open a ticket and explain why it's necessary :).
>> 
>> -glyph
>> 
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> Well, I did reference two bugs already in the twisted bug tracker that
> I believe are related to this issue (4964 definitely is anyway).

Aah, I'm terribly sorry.  #4964 is indeed this exact issue; I missed the link.

> These issues have been in the bug tracking system for years now so I'm not holding my breath on fixes any time soon.

Well, someone who cares will then need to fix the issue for real :).

> I appreciate your desire to make twisted as good as it can be, but we all have schedules to meet and hacks, documented or not, are sometimes necessary to move the project along. So I definitely will consider input from people who have run into this situation and found a solution that has worked for them.

Of course.  But you should be aware that this is how issues remain open in the bug tracker for years - they only get fixed when people fix them :).

> If you're not convinced it's a real problem, it's pretty easy to recreate. Assuming your MySQL wait_timeout = 2, you can run the following code and get the (2006, 'MySQL server has gone away') error:

No, I'm perfectly convinced it's a real problem.  The description on #4964 was very helpful.

> 4. Man up and fix adbapi myself

While I might disagree with the wording, this is what I'd suggest :).

> I'm leaning towards #1 since it seems to be least invasive, but I am open to other opinions.

I think you may be overestimating the difficulty involved in just fixing the bug for real.  The conflict between schedule and fixing bugs in the right place - i.e. in Twisted - is that there is some waiting involved, not that fixing the bug is super hard.  You have to wait for a code review, then wait for a release.  But, assuming your fix is not terribly invasive, you can just do this:

Fix the bug.
Submit your fix for review.
While you're waiting, of course, you need to ship some software, so ship a modified copy of the modified module with your package and hot-patch it at runtime, assuming the fix is not already applied.  You can see examples of other projects (that I've worked on) doing that here:<http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/view/head:/Epsilon/epsilon/hotfix.py> and here:<http://trac.calendarserver.org/browser/CalendarServer/trunk/twext/patches.py>.
Respond promptly to any review feedback, when it becomes available, and update your local copy.

When a new version of Twisted ships with the bug fixed, and you can update to depend on it, just delete your local copy.  Assuming that the final fix is reasonably close to the one that you implemented previously, even older versions of your software should keep working.

I hope you do elect to help out with this, we can always use more contributors :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121005/b068496c/attachment.htm 

From schenette at gmail.com  Sat Oct  6 18:30:11 2012
From: schenette at gmail.com (Stephan)
Date: Sat, 6 Oct 2012 15:30:11 -0700
Subject: [Twisted-Python] how to daemonize twisted...and detatch from shell
	process
Message-ID: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>

Hi,

I'm attempting to create an ubuntu service that when started will run in
the background processing beanstalk jobs.
I've taken the code from beanstalk-client twisted to act as my beanstalk
client (
https://github.com/dustin/beanstalk-client-twisted/blob/master/beanstalk.py)

The issue I'm having is how do I set up my service (ocapi.py) so that when
the daemon (ocapi) starts it detaches from the process, which isn't'
happening right now.

ocapi.py (service) <--this is what should detach and I put it in
/usr/sbin/ocapi.py code found at http://pastebin.com/29VnXnrm
ocapi (daemon) <-- goes int /etc/init.d/ocapi code found at
http://pastebin.com/0QgRfTfu

stephan at oc:~$ sudo /etc/init.d/ocapi start
 * Starting ocapi... Removing stale pidfile /var/run/ocapi.pid
Connected!

...problem is I don't get my shell prompt back when i start the service,
meaning it didn't detach from the parent process...hopefully someone can
shed some light on this.
Thanks,
Stephan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121006/5d28304d/attachment.htm 

From exarkun at twistedmatrix.com  Sat Oct  6 21:56:00 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Oct 2012 01:56:00 -0000
Subject: [Twisted-Python] how to daemonize twisted...and detatch from
 shell process
In-Reply-To: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
References: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
Message-ID: <20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>

On 6 Oct, 10:30 pm, schenette at gmail.com wrote:
>Hi,
>
>I'm attempting to create an ubuntu service that when started will run 
>in
>the background processing beanstalk jobs.
>I've taken the code from beanstalk-client twisted to act as my 
>beanstalk
>client (
>https://github.com/dustin/beanstalk-client- 
>twisted/blob/master/beanstalk.py)
>
>The issue I'm having is how do I set up my service (ocapi.py) so that 
>when
>the daemon (ocapi) starts it detaches from the process, which isn't'
>happening right now.

Use twistd, which comes with daemonization features.  From the looks of 
your code, you're halfway there already.

  http://twistedmatrix.com/documents/current/core/howto/basics.html#auto1
  http://twistedmatrix.com/documents/current/core/howto/application.html

Jean-Paul
>ocapi.py (service) <--this is what should detach and I put it in
>/usr/sbin/ocapi.py code found at http://pastebin.com/29VnXnrm
>ocapi (daemon) <-- goes int /etc/init.d/ocapi code found at
>http://pastebin.com/0QgRfTfu
>
>stephan at oc:~$ sudo /etc/init.d/ocapi start
>* Starting ocapi... Removing stale pidfile /var/run/ocapi.pid
>Connected!
>
>...problem is I don't get my shell prompt back when i start the 
>service,
>meaning it didn't detach from the parent process...hopefully someone 
>can
>shed some light on this.
>Thanks,
>Stephan


From exarkun at twistedmatrix.com  Sun Oct  7 00:05:28 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Oct 2012 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1349582728.15.1274983408@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121007/8f28ea9e/attachment.htm 

From schenette at gmail.com  Sun Oct  7 20:13:24 2012
From: schenette at gmail.com (Stephan)
Date: Sun, 7 Oct 2012 17:13:24 -0700
Subject: [Twisted-Python] how to daemonize twisted...and detatch from
 shell process
In-Reply-To: <20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>
References: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
	<20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>
Message-ID: <CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>

hey Jean-Paul,

I'm using twistd - if you see the daemon code it's in there to start and
manage the service.

For some reason the OC Daemon pastebin linkted didn't work but this one
does:

OC Daemon that starts the OC Service
http://pastebin.com/g0UE7An8

still know don't know what to change to get the service to run and detach
from the parent process. Any help is appreciated.

Stephan




On Sat, Oct 6, 2012 at 6:56 PM, <exarkun at twistedmatrix.com> wrote:

> On 6 Oct, 10:30 pm, schenette at gmail.com wrote:
> >Hi,
> >
> >I'm attempting to create an ubuntu service that when started will run
> >in
> >the background processing beanstalk jobs.
> >I've taken the code from beanstalk-client twisted to act as my
> >beanstalk
> >client (
> >https://github.com/dustin/beanstalk-client-
> >twisted/blob/master/beanstalk.py)
> >
> >The issue I'm having is how do I set up my service (ocapi.py) so that
> >when
> >the daemon (ocapi) starts it detaches from the process, which isn't'
> >happening right now.
>
> Use twistd, which comes with daemonization features.  From the looks of
> your code, you're halfway there already.
>
>   http://twistedmatrix.com/documents/current/core/howto/basics.html#auto1
>   http://twistedmatrix.com/documents/current/core/howto/application.html
>
> Jean-Paul
> >ocapi.py (service) <--this is what should detach and I put it in
> >/usr/sbin/ocapi.py code found at http://pastebin.com/29VnXnrm
> >ocapi (daemon) <-- goes int /etc/init.d/ocapi code found at
> >http://pastebin.com/0QgRfTfu
> >
> >stephan at oc:~$ sudo /etc/init.d/ocapi start
> >* Starting ocapi... Removing stale pidfile /var/run/ocapi.pid
> >Connected!
> >
> >...problem is I don't get my shell prompt back when i start the
> >service,
> >meaning it didn't detach from the parent process...hopefully someone
> >can
> >shed some light on this.
> >Thanks,
> >Stephan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121007/f5dced55/attachment.htm 

From meejah at meejah.ca  Fri Oct 12 11:52:10 2012
From: meejah at meejah.ca (meejah at meejah.ca)
Date: Fri, 12 Oct 2012 09:52:10 -0600
Subject: [Twisted-Python] txtorcon 0.6
Message-ID: <E1TMhX0-00052P-Nu@panthalassa.cg.shawcable.net>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1



txtorcon 0.6 is now tagged and released. 

txtorcon is a Twisted-based Python asynchronous implementation of the
Tor control protocol. It includes a state-tracking abstraction,
configuration abstraction, Twisted endpoint support for hidden
services, 96%+ unit-test coverage and many examples.

New in this release:

 . debian packaging (mmaker);
 . psutil fully gone;
 . *changed API* for launch_tor() to use TorConfig instead of args;
 . TorConfig.save() works properly with no connected Tor;
 . fix incorrect handling of 650 immediately after connect;
 . pep8 compliance;
 . use assertEqual in tests;
 . messages with embdedded keywords work properly;
 . fix bug with setup.py + pip;
 . issue #15 reported along with patch by Isis Lovecruft;
 . consolidate requirements (from aagbsn);
 . increased test coverage and various minor fixes;
 . https URIs for ReadTheDocs

Code and built documentation may be obtained:

   https://github.com/meejah/txtorcon
   https://txtorcon.readthedocs.org/en/latest/index.html

   git clone git://github.com/meejah/txtorcon.git

You may also install it directly:

   pip install txtorcon
   easy_install txtorcon

The sha256sum output is:

4f939e217ea3149175bb1285fa7296edc02ac245a71a60ec77b9cf48511e991e  txtorcon-0.6.tar.gz

thanks,
meejah

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)
Comment: Processed by Mailcrypt 3.5.8 <http://mailcrypt.sourceforge.net/>

iQEcBAEBAgAGBQJQd5uqAAoJEMJgKAMSgGmnTCkIAOGT6QaE+Q8jaBOedE79j/B3
QYMXh1SSfrvxn2x/utmjIgRbvCrCE+lzkxv9T9GXXjAhKSRN2xyyhRxq/Mbxvucd
FWb2zHyZIjsTcc//veHYNpRNEWORl1ZIG2kU0muHQPpxY5ZAvtEkW+RA5zMJbhHp
LF/JyltsAEu1Ja6HMFsfPmlLZiOtWBkBi3MgGGenUVJsScrtGRNCjWutGEkXxKXe
9pw2W0IGH5YmBAUiAuSW6q4cnyPQroqjSgO+RFfKMVGJNAaSqgUE8UCkcCifyjjM
2cDtGNA50kU0obT8QLgsiRyavePCQSfn9Jr1y8/Ck45Toa9a4FOQbBlOOyQSgrY=
=bORU
-----END PGP SIGNATURE-----


From exarkun at twistedmatrix.com  Sun Oct 14 00:05:24 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Oct 2012 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1350187524.0.1094802337@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121014/6dd015f0/attachment.html 

From terry at jon.es  Sun Oct 14 16:40:47 2012
From: terry at jon.es (Terry Jones)
Date: Sun, 14 Oct 2012 22:40:47 +0200
Subject: [Twisted-Python] Simpler Twisted deferred code via decorated
	callbacks
Message-ID: <20603.9039.693914.80962@jon.es>

This morning I was thinking about deferreds and how people find them
difficult to grasp, but how they're conceptually simple once you get it.  I
guess most of us tell people a deferred is something to hold a result that
hasn't arrived yet. Sometimes, though, deferreds do have a result in them
immediately (e.g., using succeed or fail to get an already-fired deferred).

I wondered if it might work to tell people to think of a deferred as really
being the result. If that were literally true, instead of writing:

    d = getPage(...)
    d.addErrback(errcheck, args)
    d.addCallback(cleanup, args)
    d.addCallback(reformat, args)
    return d

We might write something like:

    result1 = getPage(...)
    result2 = errcheck(result1, args)
    result3 = cleanup(result2, args)
    return reformat(result3, args)

And if you could write that, you could obviously instead write:

    return reformat(cleanup(errcheck(getPage(...), args), args), args)

If we could write Twisted code that way, I think using deferreds would be
simpler for people unfamiliar with them.

In the style we're all used to, the programmer manually adds callbacks and
errbacks.  That's basically boilerplate. It gets worse when you then need
to also use DeferredList, etc. It's a little confusing to read deferred
code at first, because you need to know that the deferred result/failure is
automatically passed as the first arg to callbacks/errbacks.  It seems to
take a year or more for people to finally realize how the callback &
errback chains actually interact :-) Also, I wonder how comfortable
programmers are with code ordered innermost function first, as in the
normal d.addCallback(inner).addCallback(outer) Twisted style, versus
outer(inner()), as in the line above.

Anyway... I realized we CAN let people use the succinct style above, by
putting boilerplate into decorators.  I wrote two decorators, called
(surprise!) callback and errback.  You can do this:

    @errback
    def errcheck(failure, arg):
        ...

    @callback
    def cleanup(page, arg):
        ...

    @callback
    def reformat(page, arg):
        ...

    reformat(cleanup(errcheck(getPage(...), arg1), arg2), arg3)

The deferred callback and errback chains are hooked up automatically. You
still get a regular deferred back as the return value.

And... the "deferred" aspect of the code (or at least the need to talk
about or explain it) has conveniently vanished.

You can also do things like

    func1(getDeferred1(), errcheck(func2(getDeferred2(), getDeferred3())))

This gets the result of deferreds 2 & 3 and (if neither fails) passes the
result of calling func2 on both results through to func1, which is also
called with the result of deferred 1. You don't need to use DeferredLists,
as the decorator makes them for you. The errcheck function wont be called
at all unless there's an error.

That's nice compared to the verbose equivalent:

    d1 = DeferredList([getDeferred2(), getDeferred3()])
    d1.addCallback(func2)
    d1.addErrback(errcheck)
    d2 = DeferredList([getDeferred1(), d1])
    d2.addCallback(func1)

Or the more compact but awkward:

    DeferredList([getDeferred(), DeferredList([getDeferred(), getDeferred()]).addCallback(func2).addErrback(errcheck)]).addCallback(func1)

There's lots more that could be said about this, but that's enough for now.
The code (surely not bulletproof) and some tests are at
https://github.com/terrycojones/twisted-callback-decorators

I'll add a README sometime soon.  This is still pretty much proof of
concept, and some it could be done slightly differently. I'm happy to
discuss in more detail if people are interested.

Terry


From exarkun at twistedmatrix.com  Mon Oct 15 09:49:39 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 15 Oct 2012 13:49:39 -0000
Subject: [Twisted-Python] how to daemonize twisted...and detatch from
 shell process
In-Reply-To: <CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>
References: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
	<20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>
	<CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>
Message-ID: <20121015134939.6851.50167297.divmod.xquotient.1@localhost6.localdomain6>

On 8 Oct, 12:13 am, schenette at gmail.com wrote:
>hey Jean-Paul,
>
>I'm using twistd - if you see the daemon code it's in there to start 
>and
>manage the service.

I see.  However, you are not using it correctly. ;)  The very last line 
of the code you pasted is:

    reactor.run()

When you use twistd, you do not call `reactor.run` yourself.  This is 
why your application isn't daemonizing.

Jean-Paul


From itamar at futurefoundries.com  Mon Oct 15 10:34:25 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Mon, 15 Oct 2012 10:34:25 -0400
Subject: [Twisted-Python] If you can read this,
	the mailing list is working again
Message-ID: <CAOp9P3rrRQ6PBM8mdLqD+_uz1OLUewFo8BwBT7wftROj=zAtRw@mail.gmail.com>

We've been having some delivery issues, if this arrives in your inbox then
probably the mailing list is working again.

-Itamar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121015/f21e61c7/attachment.htm 

From glyph at twistedmatrix.com  Mon Oct 15 12:01:46 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 15 Oct 2012 09:01:46 -0700
Subject: [Twisted-Python] how to daemonize twisted...and detatch from
	shell process
In-Reply-To: <CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>
References: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
	<20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>
	<CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>
Message-ID: <F101FA33-99EB-43AD-9994-EF7490349EA3@twistedmatrix.com>

On Oct 7, 2012, at 5:13 PM, Stephan <schenette at gmail.com> wrote:

> hey Jean-Paul,
> 
> I'm using twistd - if you see the daemon code it's in there to start and manage the service.
> 
> For some reason the OC Daemon pastebin linkted didn't work but this one does:
> 
> OC Daemon that starts the OC Service
> http://pastebin.com/g0UE7An8
> 
> still know don't know what to change to get the service to run and detach from the parent process. Any help is appreciated.
> 
> Stephan

The fact that "ocapi.py" is in "/usr/sbin" suggests that it's designed to be run as a script and not as a twistd plugin.  The shell script that you're citing is mostly irrelevant - that's just a wrapper to get twistd to run on your platform.

And, indeed, when I look at ocapi.py, I can see it has a 'reactor.run()' at the bottom of it, which means it's trying to run itself, not be run by twistd.  That's not how a file passed to '--python' is supposed to work.

Are you the maintainer of ocapi.py? If not, you'll have to get them to make some changes.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121015/23662e0a/attachment.htm 

From naveenm at enthought.com  Mon Oct 15 12:56:31 2012
From: naveenm at enthought.com (Naveen Michaud-Agrawal)
Date: Mon, 15 Oct 2012 12:56:31 -0400
Subject: [Twisted-Python] Simpler Twisted deferred code via decorated
	callbacks
In-Reply-To: <20603.9039.693914.80962@jon.es>
References: <20603.9039.693914.80962@jon.es>
Message-ID: <CAL7GHvfbjTgQQMRrMaAy-jTE=5n92U7XObYeYUib=C2YxFQMsA@mail.gmail.com>

Hi Terry,

This is a really nice approach. Thanks for sharing! Are there any downsides
or functionality that can't be accomplished using this approach? This
combined with the generator approach to deferreds will make it easier to
reason about the code flow.

Naveen

On Sun, Oct 14, 2012 at 4:40 PM, Terry Jones <terry at jon.es> wrote:

> This morning I was thinking about deferreds and how people find them
> difficult to grasp, but how they're conceptually simple once you get it.  I
> guess most of us tell people a deferred is something to hold a result that
> hasn't arrived yet. Sometimes, though, deferreds do have a result in them
> immediately (e.g., using succeed or fail to get an already-fired deferred).
>
> I wondered if it might work to tell people to think of a deferred as really
> being the result. If that were literally true, instead of writing:
>
>     d = getPage(...)
>     d.addErrback(errcheck, args)
>     d.addCallback(cleanup, args)
>     d.addCallback(reformat, args)
>     return d
>
> We might write something like:
>
>     result1 = getPage(...)
>     result2 = errcheck(result1, args)
>     result3 = cleanup(result2, args)
>     return reformat(result3, args)
>
> And if you could write that, you could obviously instead write:
>
>     return reformat(cleanup(errcheck(getPage(...), args), args), args)
>
> If we could write Twisted code that way, I think using deferreds would be
> simpler for people unfamiliar with them.
>
> In the style we're all used to, the programmer manually adds callbacks and
> errbacks.  That's basically boilerplate. It gets worse when you then need
> to also use DeferredList, etc. It's a little confusing to read deferred
> code at first, because you need to know that the deferred result/failure is
> automatically passed as the first arg to callbacks/errbacks.  It seems to
> take a year or more for people to finally realize how the callback &
> errback chains actually interact :-) Also, I wonder how comfortable
> programmers are with code ordered innermost function first, as in the
> normal d.addCallback(inner).addCallback(outer) Twisted style, versus
> outer(inner()), as in the line above.
>
> Anyway... I realized we CAN let people use the succinct style above, by
> putting boilerplate into decorators.  I wrote two decorators, called
> (surprise!) callback and errback.  You can do this:
>
>     @errback
>     def errcheck(failure, arg):
>         ...
>
>     @callback
>     def cleanup(page, arg):
>         ...
>
>     @callback
>     def reformat(page, arg):
>         ...
>
>     reformat(cleanup(errcheck(getPage(...), arg1), arg2), arg3)
>
> The deferred callback and errback chains are hooked up automatically. You
> still get a regular deferred back as the return value.
>
> And... the "deferred" aspect of the code (or at least the need to talk
> about or explain it) has conveniently vanished.
>
> You can also do things like
>
>     func1(getDeferred1(), errcheck(func2(getDeferred2(), getDeferred3())))
>
> This gets the result of deferreds 2 & 3 and (if neither fails) passes the
> result of calling func2 on both results through to func1, which is also
> called with the result of deferred 1. You don't need to use DeferredLists,
> as the decorator makes them for you. The errcheck function wont be called
> at all unless there's an error.
>
> That's nice compared to the verbose equivalent:
>
>     d1 = DeferredList([getDeferred2(), getDeferred3()])
>     d1.addCallback(func2)
>     d1.addErrback(errcheck)
>     d2 = DeferredList([getDeferred1(), d1])
>     d2.addCallback(func1)
>
> Or the more compact but awkward:
>
>     DeferredList([getDeferred(), DeferredList([getDeferred(),
> getDeferred()]).addCallback(func2).addErrback(errcheck)]).addCallback(func1)
>
> There's lots more that could be said about this, but that's enough for now.
> The code (surely not bulletproof) and some tests are at
> https://github.com/terrycojones/twisted-callback-decorators
>
> I'll add a README sometime soon.  This is still pretty much proof of
> concept, and some it could be done slightly differently. I'm happy to
> discuss in more detail if people are interested.
>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121015/82fe0f81/attachment.htm 

From terry at jon.es  Mon Oct 15 14:54:04 2012
From: terry at jon.es (Terry Jones)
Date: Mon, 15 Oct 2012 20:54:04 +0200
Subject: [Twisted-Python] Simpler Twisted deferred code via decorated
 callbacks
In-Reply-To: Your message at 12:56:31 on Monday, 15 October 2012
References: <20603.9039.693914.80962@jon.es>
	<CAL7GHvfbjTgQQMRrMaAy-jTE=5n92U7XObYeYUib=C2YxFQMsA@mail.gmail.com>
Message-ID: <20604.23500.206739.226560@jon.es>

Hi Naveen

> This is a really nice approach.

I'm glad you like it. I've learned over the years to avoid decorators, but
I nevertheless think these ones are promising.

> Are there any downsides or functionality that can't be accomplished using
> this approach?

The main thing that's a little different is that it doesn't (yet) help with
situations where you might want finer-grained control over callbacks and
errbacks, or to use addBoth. I didn't want to tackle everything at once.
Because the approach is all just normal deferreds, there was no need to.

I wasn't sure what to do about addBoth - add a new decorator for it, let
people use both decorators, etc.  You can still just do this:

    def both(result):
        # do something

    @callback
    def first(result):
        # do something

    @callback
    def second(result):
        # do something

    second(first(getPage('http://www.something.com')).addBoth(both)

The regular non-decorated Twisted code would be:

    def both(result):
        # do something

    def first(result):
        # do something

    def second(result):
        # do something

    getPage('http://www.something.com').addCallback(first)
        .addBoth(both).addCallback(second)


As another example, in regular Twisted code you might want to do this:

    d = getDeferred()
    d.addCallback(f1)
    d.addCallbacks(f2, e1)

Many people don't understand that that's not the same as

    d = getDeferred()
    d.addCallback(f1)
    d.addCallback(f2)
    d.addErrback(e1)

The decorator approach doesn't provide directly for the former. You get the
latter of course by writing e1(f2(f1(getDeferred))).  You could have the
former via f1(getDeferred).addCallbacks(f2, e1) in which case the
decorators aren't buying you much.

So I think there's some way to go on that front, but I've not yet thought
about what would be most elegant/simple etc.  Given a nice way to do
addCallbacks, it can be used to implement addBoth (as in defer.py), so
these two examples are really just the same thing.

Glyph suggested I post with a simple example explaining exactly what the
decorators are doing. I plan do that.

Terry


From terry at jon.es  Mon Oct 15 15:31:50 2012
From: terry at jon.es (Terry Jones)
Date: Mon, 15 Oct 2012 21:31:50 +0200
Subject: [Twisted-Python] Simpler Twisted deferred code via decorated
	callbacks
In-Reply-To: Your message at 22:40:47 on Sunday, 14 October 2012
References: <20603.9039.693914.80962@jon.es>
Message-ID: <20604.25766.428065.649859@jon.es>

Here's a description of what the 'callback' decorator in my code does.

Here's some normal Twisted code, assuming you do from twisted.web.client
import getPage (yes, getPage is kind-of obsolete, but it's a concrete and
conceptually simple deferred-returning function I like to use in examples).

    def pageLength(url):
        def _length(page):
            return len(page)
        return getPage(url).addCallback(_length)

Using the 'callback' decorator you could instead write:

    def pageLength(url):
        @callback
        def _length(page):
            return len(page)
        return _length(getPage(url)

The syntactic difference in this case is minimal. The saving is more
significant in other cases, but let's consider this simplest case.

The decorator returns a wrapping function that essentially does this:

  1. Look at all its arguments.  For any that are Deferreds, put them into
     a deferred list, which I'll call DL for this explanation. This is done
     for positional args (line 25) and keyword args (line 31).

  2. If no arguments are Deferreds, just call the original _length function
     with the original arguments, and return the result in a Deferred using
     maybeDeferred (line 44).  So, any function that is called with a set
     of arguments that are not Deferred instances just returns a deferred
     that fires with the function result or fails if the function raises
     (maybeDeferred takes care of that for us).

  3. The interesting part is when some of the arguments are deferreds (line
     36). In that case, we have a DeferredList called DL that will
     eventually fire when all the arguments are available.  The arguments
     are collected, as they arrive, into a list (fags) and a dictionary
     (fkw).  Args that were not deferreds are already put into fargs and
     fkw (lines 30 and 35).

  4. If DL fires normally, we can go ahead and call the wrapped original
     function with all the arguments it was supposed to receive.  In our
     _length case, there was only one argument, a deferred returning the
     content of a web page, so the original _length gets called with the
     page content. A lambda to call the original function is added to DL as
     a callback (line 41), and DL is returned.  Note that DL has already
     fired, so adding the callback function to call the original function
     results in the function being called immediately. By adding it as a
     callback to DL, we can return a deferred (DL) from the wrapper.

  5. When DL is made, I pass fireOnOneErrback=True to it. So if any of the
     arguments to the wrapped function result in an error (i.e., in our
     example, getPage fails), then DL will fail immediately.  In that case,
     an errback (getSubFailure) attached to DL will pull the original
     failure out of DL and return it.  Because one of the arguments to the
     original function has failed to materialize, we obviously can't call
     the original function.  By just returning DL (which has failed), the
     failure is propagated (in a deferred) to any caller we may have.

If you look at the code for the 'callback' decorator in decorate.py, the
above should help to make things clearer.  I'm happy to answer any
questions, of course.

I hope the description makes it clear how the decorator works on a function
called with multiple deferred arguments.  It's quite like a DeferredList
that you can put non-deferreds objects into and add a callback to (where
the callback is the decorated function). I implemented that once years ago,
but didn't bother to post it.

The 'errback' decorator is similar in structure, but operates differently
of course.  I'll send a separate mail describing it.

Terry


From terry at jon.es  Mon Oct 15 20:24:48 2012
From: terry at jon.es (Terry Jones)
Date: Tue, 16 Oct 2012 02:24:48 +0200
Subject: [Twisted-Python] Simpler Twisted deferred code via decorated
 callbacks
In-Reply-To: Your message at 22:40:47 on Sunday, 14 October 2012
References: <20603.9039.693914.80962@jon.es>
Message-ID: <20604.43344.335810.897192@jon.es>

Here's a description of what the 'errback' decorator in my code does. (BTW,
I've just updated it.)

Here's normal Twisted errback code, assuming you do from twisted.web.client
import getPage and from twisted.python import log.

    def logGetPageError(url):
        def handleError(failure, url):
            log.msg('Could not fetch URL %s.' % url)
        return getPage(url).addErrback(handleError, url)

Using the 'errback' decorator you could instead write:

    def logGetPageError(url):
        @errback
        def handleError(failure, url):
            log.msg('Could not fetch URL %s.' % url)
        return handleError(getPage(url), url)

As with the 'callback' decorator, the syntactic difference between the two
in this case is minimal.

The decorator returns a wrapping function that essentially does this:

  0. Return a failed Deferred if the decorated function is called with
     no positional arguments (line 69). The reason for this is below.

  1. Look at all its arguments.  For any that are Deferreds, put them into
     a deferred list, which I'll call DL for this explanation. This is done
     for positional args (line 76) and keyword args (line 82).  In our
     example, DL will contain the Deferred returned by getPage.

  2. Suppose none of the arguments were Deferreds. If any of the args were
     instances of Failure (line 96), return a deferred that will fire with
     the result of calling the original wrapped (errback) function with all
     the passed arguments (at least one of which is a Failure).  If no
     argument was a Failure, the original wrapped function is NOT called
     because there hasn't been any error. Instead (line 99), an
     already-fired Deferred (obtained via succeed) is returned with the
     value of the first positional argument.  This is how the wrapping
     errback function passes the result along to its caller (if any). The
     other arguments to the wrapped function were obviously intended for
     that function, and are unused (this mirrors the way args passed to
     addErrback are unused if the errback is never run due to no error
     occurring).

  3. If, as in our example, some of the arguments are deferreds (line 87)
     we have a DeferredList called DL that will eventually fire when all
     the Deferreds have fired (i.e., when all arguments are available for
     the wrapped function). Note that due to the use of addBoth (lines 79
     and 84) non-Failure and Failure arguments coming from arguments that
     were Deferreds are both collected. These are collected, as they
     arrive, into a list (fargs) and a dictionary (fkw).  Args that were
     not deferreds are already put into fargs and fkw (lines 78 and 86).

  4. If DL fires with no errors (in our case, that means getPage returns a
     page), we act as we did in step 2: If any of the args are instances of
     Failure (line 89), the 'finish' callback added to DL (line 93) will
     return the result of calling the original wrapped (errback) function
     (handleError in our case) with all the passed arguments.  If no
     argument was a Failure, the original wrapped function is NOT called
     because there hasn't been any error, and the callback on DL returns
     the first positional arg (on line 92).  This last case corresponds to
     getPage returning successfully and the handleError errback not being
     called.

The 'errback' decorator differs from the 'callback' decorator in that its
wrapper function:

  - Collects all Failures in all arguments (including any coming from
    Deferreds, of course) in order to call the wrapped errback function.
    The 'callback' decorator OTOH immediately returns a failed Deferred as
    soon as any error happens (which is why its DeferredList uses
    fireOnOneErrback=True).

  - Must be called with at least one positional argument, so that in the
    case where nothing goes wrong with any Deferred argument (and no other
    arg is already a Failure) it has a value to pass back to its caller (if
    any).

Both the wrapper functions sometimes do not call the wrapped function. This
is symmetric and is as you'd expect: the 'callback' decorator doesn't call
the wrapped (callback) function if there's any error, whereas the 'errback'
decorator doesn't call the wrapped (errback) function unless there's an
error.  This is very similar to regular Twisted call/errback processing: if
you're on the callback chain, errback functions aren't called & vice versa.
Just as in regular Twisted code, a callback can produce a Failure or an
errback can produce a non-Failure and you're back on the other chain.

If you've read all this, great :-) It should be clear that you can roll up
much more interesting cases, combining decorated callbacks and errbacks
that accept multiple Deferred and non-Deferred arguments.  Those are the
cases where the syntactic / code complexity savings are much more apparent
because (at least in many cases) there's no need to write code with
addCallback, addErrback, or to use DeferredList.

Some people's immediate reaction to all this is to tell me about
inlineCallbacks.  But this is very different, even though both share the
universal decorator goal of making code look simpler / easier.
inlineCallbacks lets you explicitly yield values from Deferreds.
Unfortunately, anything can happen while you're context switched out before
the yield yields.  The decorators I've posted just wire up regular Twisted
callback/errback processing chains, with no use of yield. There are other
differences, but this post is already way long...

Terry


From david at davidstrauss.net  Thu Oct 18 20:17:19 2012
From: david at davidstrauss.net (David Strauss)
Date: Thu, 18 Oct 2012 17:17:19 -0700
Subject: [Twisted-Python] how to daemonize twisted...and detatch from
 shell process
In-Reply-To: <F101FA33-99EB-43AD-9994-EF7490349EA3@twistedmatrix.com>
References: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
	<20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>
	<CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>
	<F101FA33-99EB-43AD-9994-EF7490349EA3@twistedmatrix.com>
Message-ID: <CAKz8sYWmEbxP+k69bovqugcR9y7smte-4vTi+g25GXVpUD0PzQ@mail.gmail.com>

I also recommend looking at systemd and Upstart, even in combination
with twistd. Twisted's twistd will daemonize the process, but it won't
give you named services and a clean environment.

-- 
David Strauss
   | david at davidstrauss.net


From nathanm at securitymetrics.com  Fri Oct 19 00:41:08 2012
From: nathanm at securitymetrics.com (Nathan Mower)
Date: Thu, 18 Oct 2012 22:41:08 -0600
Subject: [Twisted-Python] getpeername from verify callback
Message-ID: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>

The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...

exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'

...on line 9 where getpeername() is called by the verify() callback.

Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?

Thanks,
Nathan

----------------------------------------------
from OpenSSL import SSL
from twisted.internet import reactor, ssl
from twisted.internet.protocol import ClientFactory
from twisted.protocols.basic import LineReceiver

class VerifyContextFactory(ssl.ClientContextFactory):

    def verify(self, connection, x509, errnum, errdepth, ok):
        print connection.getpeername()[0]
        return ok

    def getContext(self):
        ctx = ssl.ClientContextFactory.getContext(self)
        ctx.set_verify(SSL.VERIFY_PEER|SSL.VERIFY_FAIL_IF_NO_PEER_CERT, self.verify)
        return ctx

class MyClient(LineReceiver):

    def connectionMade(self):
        print "connected to", self.transport.socket.getpeername()[0]
        return

    def connectionFailed(self, reason):
        reactor.stop()

    def connectionLost(self, reason):
        reactor.stop()

class MyClientFactory(ClientFactory):

    protocol = MyClient

if __name__ == "__main__":
    reactor.connectSSL('www.example.com', 443, MyClientFactory(), VerifyContextFactory())
    reactor.run()



From glyph at twistedmatrix.com  Fri Oct 19 02:28:53 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 18 Oct 2012 23:28:53 -0700
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
Message-ID: <2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>

On Oct 18, 2012, at 9:41 PM, Nathan Mower <nathanm at securitymetrics.com> wrote:

> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
> 
> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
> 
> ...on line 9 where getpeername() is called by the verify() callback.
> 
> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?

The 'socket' attribute that you're accessing is not a documented attribute of ITransport, so in a way I'm glad that your code broke - this wasn't a valid way to use Twisted in the first place :).  See <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html>.

Now, as it happens, <http://twistedmatrix.com/documents/current/api/twisted.protocols.tls.TLSMemoryBIOProtocol.html> implements <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ISSLTransport.html> which is a subinterface of <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html>, which is therefore guaranteed to have a getPeer method <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#getPeer> that returns an IPv4Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv4Address.html> or IPv6Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv6Address.html>, both of which have a 'host' attribute that is the hostname.

So, in short, substitute "self.transport.getPeer().host" and your code should work again.

-glyph



From adi at roiban.ro  Fri Oct 19 02:36:49 2012
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 19 Oct 2012 09:36:49 +0300
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
Message-ID: <CAFycZ9dKGNde6pKCB3iHO=y=OaWrpExiNEkxrLtGP=rKd-71cw@mail.gmail.com>

On 19 October 2012 07:41, Nathan Mower <nathanm at securitymetrics.com> wrote:
> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>
> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>
> ...on line 9 where getpeername() is called by the verify() callback.
>
> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?

Hi

I think that we are talking about this bug:
http://twistedmatrix.com/trac/ticket/5684

[snip]

-- 
Adi Roiban


From glyph at twistedmatrix.com  Fri Oct 19 02:50:13 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 18 Oct 2012 23:50:13 -0700
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <CAFycZ9dKGNde6pKCB3iHO=y=OaWrpExiNEkxrLtGP=rKd-71cw@mail.gmail.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
	<CAFycZ9dKGNde6pKCB3iHO=y=OaWrpExiNEkxrLtGP=rKd-71cw@mail.gmail.com>
Message-ID: <A91EEAF7-2AB0-42BE-9251-6254874D7517@twistedmatrix.com>


On Oct 18, 2012, at 11:36 PM, Adi Roiban <adi at roiban.ro> wrote:

> On 19 October 2012 07:41, Nathan Mower <nathanm at securitymetrics.com> wrote:
>> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>> 
>> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>> 
>> ...on line 9 where getpeername() is called by the verify() callback.
>> 
>> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?
> 
> Hi
> 
> I think that we are talking about this bug:
> http://twistedmatrix.com/trac/ticket/5684

Thanks for the pointer; I've just closed it with a similar answer.

-glyph

From adi at roiban.ro  Fri Oct 19 02:56:00 2012
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 19 Oct 2012 09:56:00 +0300
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
	<2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
Message-ID: <CAFycZ9c2T7FBRfQ6SU3V7h5fy1jhOViqu+yKjbFA8b=OHubS6A@mail.gmail.com>

On 19 October 2012 09:28, Glyph <glyph at twistedmatrix.com> wrote:
> On Oct 18, 2012, at 9:41 PM, Nathan Mower <nathanm at securitymetrics.com> wrote:
>
>> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>>
>> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>>
>> ...on line 9 where getpeername() is called by the verify() callback.
>>
>> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?
>
> The 'socket' attribute that you're accessing is not a documented attribute of ITransport, so in a way I'm glad that your code broke - this wasn't a valid way to use Twisted in the first place :).  See <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html>.
>
> Now, as it happens, <http://twistedmatrix.com/documents/current/api/twisted.protocols.tls.TLSMemoryBIOProtocol.html> implements <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ISSLTransport.html> which is a subinterface of <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html>, which is therefore guaranteed to have a getPeer method <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#getPeer> that returns an IPv4Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv4Address.html> or IPv6Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv6Address.html>, both of which have a 'host' attribute that is the hostname.
>
> So, in short, substitute "self.transport.getPeer().host" and your code should work again.

Hi,

Thanks for the explanation about new interfaces.

I think that the initial question was about the
SSL.Context.set_verify(connection, certificate, errnum, errdepth,
code) callback.


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.0.1350629769.10584.twisted-python@twistedmatrix.com>

te.

In previous version there was SSL.Connection.getpeername()

--=20
Adi Roiban


From nathanm at securitymetrics.com  Fri Oct 19 03:00:24 2012
From: nathanm at securitymetrics.com (Nathan Mower)
Date: Fri, 19 Oct 2012 01:00:24 -0600
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
	<2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
Message-ID: <15E27189-E9BB-4993-AE68-528264BE88C6@securitymetrics.com>


On Oct 19, 2012, at 12:28 AM, Glyph wrote:

> On Oct 18, 2012, at 9:41 PM, Nathan Mower <nathanm at securitymetrics.com> wrote:
> 
>> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>> 
>> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>> 
>> ...on line 9 where getpeername() is called by the verify() callback.
>> 
>> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?
> 
> The 'socket' attribute that you're accessing is not a documented attribute of ITransport, so in a way I'm glad that your code broke - this wasn't a valid way to use Twisted in the first place :).  See <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html>.
> 
> Now, as it happens, <http://twistedmatrix.com/documents/current/api/twisted.protocols.tls.TLSMemoryBIOProtocol.html> implements <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ISSLTransport.html> which is a subinterface of <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html>, which is therefore guaranteed to have a getPeer method <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#getPeer> that returns an IPv4Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv4Address.html> or IPv6Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv6Address.html>, both of which have a 'host' attribute that is the hostname.
> 
> So, in short, substitute "self.transport.getPeer().host" and your code should work again.

Remember, the real question is what to use in the verify() callback, where self is an instance of VerifyContextFactory, and connection is an instance of OpenSSL.SSL.Connection.  Any way to get the transport from there?

Nathan

From glyph at twistedmatrix.com  Fri Oct 19 03:14:53 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 19 Oct 2012 00:14:53 -0700
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <CAFycZ9c2T7FBRfQ6SU3V7h5fy1jhOViqu+yKjbFA8b=OHubS6A@mail.gmail.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
	<2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
	<CAFycZ9c2T7FBRfQ6SU3V7h5fy1jhOViqu+yKjbFA8b=OHubS6A@mail.gmail.com>
Message-ID: <171BA475-01A3-4A2D-9DE7-238E46D022B9@twistedmatrix.com>


On Oct 18, 2012, at 11:56 PM, Adi Roiban <adi at roiban.ro> wrote:

> On 19 October 2012 09:28, Glyph <glyph at twistedmatrix.com> wrote:
>> On Oct 18, 2012, at 9:41 PM, Nathan Mower <nathanm at securitymetrics.com> wrote:
>> 
>>> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>>> 
>>> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>>> 
>>> ...on line 9 where getpeername() is called by the verify() callback.
>>> 
>>> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?
>> 
>> The 'socket' attribute that you're accessing is not a documented attribute of ITransport, so in a way I'm glad that your code broke - this wasn't a valid way to use Twisted in the first place :).  See <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html>.
>> 
>> Now, as it happens, <http://twistedmatrix.com/documents/current/api/twisted.protocols.tls.TLSMemoryBIOProtocol.html> implements <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ISSLTransport.html> which is a subinterface of <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html>, which is therefore guaranteed to have a getPeer method <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#getPeer> that returns an IPv4Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv4Address.html> or IPv6Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv6Address.html>, both of which have a 'host' attribute that is the hostname.
>> 
>> So, in short, substitute "self.transport.getPeer().host" and your code should work again.
> 
> Hi,
> 
> Thanks for the explanation about new interfaces.
> 
> I think that the initial question was about the
> SSL.Context.set_verify(connection, certificate, errnum, errdepth,
> code) callback.
> 
> From what I can see, SSL.Context or SSL.Connection has no transport attribute.
> 
> In previous version there was SSL.Connection.getpeername()

In this case, you actually want to pass in the hostname to verify against, not look at the connection.  getpeername() ought to return the IP of the host you actually connected to, not the hostname, which is not meaningful to verify against.  You need to pass in the host name that the user specified, so that needs to be an argument to the verifying context factory.

If you need really need information from the connection itself for verification (although that is usually a bad idea, with the exception of the very specific case that SSH uses it for - although that grants little in the way of useful security, in my opinion), you will have to use connectTCP and startTLS rather than connectSSL, so you can construct a new TLS context once you already have a reference to the protocol object.

This is a good thing, though; connectSSL is a slightly silly API and something that I hope will eventually go away; now that we have memory BIOs, TLS can be accomplished just fine without adding additional APIs for every reactor to support.

-glyph

From nathanm at securitymetrics.com  Fri Oct 19 03:38:39 2012
From: nathanm at securitymetrics.com (Nathan Mower)
Date: Fri, 19 Oct 2012 01:38:39 -0600
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <171BA475-01A3-4A2D-9DE7-238E46D022B9@twistedmatrix.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
	<2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
	<CAFycZ9c2T7FBRfQ6SU3V7h5fy1jhOViqu+yKjbFA8b=OHubS6A@mail.gmail.com>
	<171BA475-01A3-4A2D-9DE7-238E46D022B9@twistedmatrix.com>
Message-ID: <1FD6A1AA-96B6-427A-BFCE-FA3391AB0E94@securitymetrics.com>

Thank you, Glyph.

On Oct 19, 2012, at 1:14 AM, Glyph wrote:

> 
> On Oct 18, 2012, at 11:56 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
>> On 19 October 2012 09:28, Glyph <glyph at twistedmatrix.com> wrote:
>>> On Oct 18, 2012, at 9:41 PM, Nathan Mower <nathanm at securitymetrics.com> wrote:
>>> 
>>>> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>>>> 
>>>> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>>>> 
>>>> ...on line 9 where getpeername() is called by the verify() callback.
>>>> 
>>>> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?
>>> 
>>> The 'socket' attribute that you're accessing is not a documented attribute of ITransport, so in a way I'm glad that your code broke - this wasn't a valid way to use Twisted in the first place :).  See <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html>.
>>> 
>>> Now, as it happens, <http://twistedmatrix.com/documents/current/api/twisted.protocols.tls.TLSMemoryBIOProtocol.html> implements <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ISSLTransport.html> which is a subinterface of <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html>, which is therefore guaranteed to have a getPeer method <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#getPeer> that returns an IPv4Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv4Address.html> or IPv6Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv6Address.html>, both of which have a 'host' attribute that is the hostname.
>>> 
>>> So, in short, substitute "self.transport.getPeer().host" and your code should work again.
>> 
>> Hi,
>> 
>> Thanks for the explanation about new interfaces.
>> 
>> I think that the initial question was about the
>> SSL.Context.set_verify(connection, certificate, errnum, errdepth,
>> code) callback.
>> 
>> From what I can see, SSL.Context or SSL.Connection has no transport attribute.
>> 
>> In previous version there was SSL.Connection.getpeername()
> 
> In this case, you actually want to pass in the hostname to verify against, not look at the connection.  getpeername() ought to return the IP of the host you actually connected to, not the hostname, which is not meaningful to verify against.  You need to pass in the host name that the user specified, so that needs to be an argument to the verifying context factory.
> 
> If you need really need information from the connection itself for verification (although that is usually a bad idea, with the exception of the very specific case that SSH uses it for - although that grants little in the way of useful security, in my opinion), you will have to use connectTCP and startTLS rather than connectSSL, so you can construct a new TLS context once you already have a reference to the protocol object.
> 
> This is a good thing, though; connectSSL is a slightly silly API and something that I hope will eventually go away; now that we have memory BIOs, TLS can be accomplished just fine without adding additional APIs for every reactor to support.
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dynamicgl at gmail.com  Sat Oct 20 11:29:10 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 20 Oct 2012 23:29:10 +0800
Subject: [Twisted-Python] a possible solution for ticket 5562
Message-ID: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>

Hi All

  A few months ago, I reported a bug about IOCP. Last night I spent several
hours on its implementation and finally found out a possible solution for
that.

  when sending some small chunks data continuously, the buffer will pile
them up and send to IOCP; however there is a SEND_LIMIT (128K) that means
only 128K will be handled. Now the problem is when we try to trigger the
next writing, IOCP will raise ERROR_IO_PENDING immediately and then
connection Lost.

  So I got a idea: if the size of data is larger than SEND_LIMIT, we can
wait a little bit time for the next writing instead of do it immediately.

in twisted\internet\iocpreactor\abstract.py there is a method

def _cbWrite(self, rc, bytes, evt):
        if self._handleWrite(rc, bytes, evt):
            self.doWrite()

now I modified a bit,

def _cbWrite(self, rc, bytes, evt):
        if self._handleWrite(rc, bytes, evt):
            if len(evt.buff) < self.SEND_LIMIT:
                self.doWrite()
            else:
                self.reactor.callLater(0.8,self.doWrite)



0.8 is a silly trial but I have no idea what is the right number for this
place. After this modification, previous problematic scripts can pass.

Maybe the better solution is to find a way to poll the complete port status
when read/write will be recovered from IO PENDING. Simply wait a little is
risky.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121020/d9ec2bc7/attachment.htm 

From miwinter at cisco.com  Sat Oct 20 12:07:21 2012
From: miwinter at cisco.com (Mike Winter)
Date: Sat, 20 Oct 2012 09:07:21 -0700
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
Message-ID: <7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>

This looks like the kind of thing that could involve using Deferred as part of solution. Instead of callLater(0.8,doWrite), design the mechanism to wire up event-source to fire the deferred and make doWrite be the callback.
 
On Oct 20, 2012, at 8:29:10AM, gelin yan wrote:

> Hi All
> 
>   A few months ago, I reported a bug about IOCP. Last night I spent several hours on its implementation and finally found out a possible solution for that.
> 
>   when sending some small chunks data continuously, the buffer will pile them up and send to IOCP; however there is a SEND_LIMIT (128K) that means only 128K will be handled. Now the problem is when we try to trigger the next writing, IOCP will raise ERROR_IO_PENDING immediately and then connection Lost.
> 
>   So I got a idea: if the size of data is larger than SEND_LIMIT, we can wait a little bit time for the next writing instead of do it immediately. 
> 
> in twisted\internet\iocpreactor\abstract.py there is a method
> 
> def _cbWrite(self, rc, bytes, evt):
>         if self._handleWrite(rc, bytes, evt):
>             self.doWrite()
> 
> now I modified a bit,
> 
> def _cbWrite(self, rc, bytes, evt):
>         if self._handleWrite(rc, bytes, evt):
>             if len(evt.buff) < self.SEND_LIMIT:
>                 self.doWrite()
>             else:
>                 self.reactor.callLater(0.8,self.doWrite)
> 
> 
> 
> 0.8 is a silly trial but I have no idea what is the right number for this place. After this modification, previous problematic scripts can pass.
> 
> Maybe the better solution is to find a way to poll the complete port status when read/write will be recovered from IO PENDING. Simply wait a little is risky.
> 
> Regards
> 
> gelin yan
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Sat Oct 20 15:35:20 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 20 Oct 2012 12:35:20 -0700
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
Message-ID: <51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>

I'm top-posting just for consistency in this thread, but in the future please comment inline with trimming :).  It's easier to follow for future readers; if they find a post stand-alone in some web archive, the question will come before the answer.

Anyhow; Mike, you're definitely closer to the answer; a callLater is unnecessary, the callback should be called on demand.  But, given that a queue of write operations is just that - a queue - we don't need a Deferred for every write; the callback to the write operation can just pick up the next queued item.

-g

On Oct 20, 2012, at 9:07 AM, Mike Winter <miwinter at cisco.com> wrote:

> This looks like the kind of thing that could involve using Deferred as part of solution. Instead of callLater(0.8,doWrite), design the mechanism to wire up event-source to fire the deferred and make doWrite be the callback.
> 
> On Oct 20, 2012, at 8:29:10AM, gelin yan wrote:
> 
>> Hi All
>> 
>>  A few months ago, I reported a bug about IOCP. Last night I spent several hours on its implementation and finally found out a possible solution for that.
>> 
>>  when sending some small chunks data continuously, the buffer will pile them up and send to IOCP; however there is a SEND_LIMIT (128K) that means only 128K will be handled. Now the problem is when we try to trigger the next writing, IOCP will raise ERROR_IO_PENDING immediately and then connection Lost.
>> 
>>  So I got a idea: if the size of data is larger than SEND_LIMIT, we can wait a little bit time for the next writing instead of do it immediately. 
>> 
>> in twisted\internet\iocpreactor\abstract.py there is a method
>> 
>> def _cbWrite(self, rc, bytes, evt):
>>        if self._handleWrite(rc, bytes, evt):
>>            self.doWrite()
>> 
>> now I modified a bit,
>> 
>> def _cbWrite(self, rc, bytes, evt):
>>        if self._handleWrite(rc, bytes, evt):
>>            if len(evt.buff) < self.SEND_LIMIT:
>>                self.doWrite()
>>            else:
>>                self.reactor.callLater(0.8,self.doWrite)
>> 
>> 
>> 
>> 0.8 is a silly trial but I have no idea what is the right number for this place. After this modification, previous problematic scripts can pass.
>> 
>> Maybe the better solution is to find a way to poll the complete port status when read/write will be recovered from IO PENDING. Simply wait a little is risky.
>> 
>> Regards




From oubiwann at twistedmatrix.com  Sat Oct 20 19:24:47 2012
From: oubiwann at twistedmatrix.com (Duncan McGreggor)
Date: Sat, 20 Oct 2012 16:24:47 -0700
Subject: [Twisted-Python] git repo maintenance
Message-ID: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>

Hey all,

At the sprint today, Glyph mentioned that the github repo hasn't been
updated recently and needs someone to maintain it regularly. He also
mentioned that pull requests would be accepted from github, at which point
I immediately volunteered to keep the repo up to date :-) (I can't bear
using svn anymore...)

I'll be putting things in place (infrastructure, scripts, etc.) to assist
me with this, so let me know if you have any concerns, questions, ideas,
etc.

Thanks,

d
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121020/377483a6/attachment.htm 

From exarkun at twistedmatrix.com  Sat Oct 20 19:51:33 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 20 Oct 2012 23:51:33 -0000
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
Message-ID: <20121020235133.30349.240011999.divmod.xquotient.51@localhost6.localdomain6>

On 11:24 pm, oubiwann at twistedmatrix.com wrote:
>Hey all,
>
>At the sprint today, Glyph mentioned that the github repo hasn't been
>updated recently and needs someone to maintain it regularly. He also
>mentioned that pull requests would be accepted from github, at which 
>point
>I immediately volunteered to keep the repo up to date :-) (I can't bear
>using svn anymore...)
>
>I'll be putting things in place (infrastructure, scripts, etc.) to 
>assist
>me with this, so let me know if you have any concerns, questions, 
>ideas,

And documentation about how this will integrate with the Twisted 
workflow, right?  For example, a walkthrough for taking a github pull 
request and getting the code into svn.

Thanks!
Jean-Paul


From duncan.mcgreggor at gmail.com  Sat Oct 20 22:45:48 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Sat, 20 Oct 2012 19:45:48 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <20121020235133.30349.240011999.divmod.xquotient.51@localhost6.localdomain6>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<20121020235133.30349.240011999.divmod.xquotient.51@localhost6.localdomain6>
Message-ID: <CAFJQhU6Sc7sX6OKSMzG_ZQybEA1-Fv3bg=aJxrst9Znnnp1BJQ@mail.gmail.com>

On Sat, Oct 20, 2012 at 4:51 PM,  <exarkun at twistedmatrix.com> wrote:
> On 11:24 pm, oubiwann at twistedmatrix.com wrote:
>>Hey all,
>>
>>At the sprint today, Glyph mentioned that the github repo hasn't been
>>updated recently and needs someone to maintain it regularly. He also
>>mentioned that pull requests would be accepted from github, at which
>>point
>>I immediately volunteered to keep the repo up to date :-) (I can't bear
>>using svn anymore...)
>>
>>I'll be putting things in place (infrastructure, scripts, etc.) to
>>assist
>>me with this, so let me know if you have any concerns, questions,
>>ideas,
>
> And documentation about how this will integrate with the Twisted
> workflow, right?  For example, a walkthrough for taking a github pull
> request and getting the code into svn.

Indeed!

d

> Thanks!
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From dynamicgl at gmail.com  Sat Oct 20 22:56:15 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sun, 21 Oct 2012 10:56:15 +0800
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
Message-ID: <CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>

On Sun, Oct 21, 2012 at 3:35 AM, Glyph <glyph at twistedmatrix.com> wrote:

> I'm top-posting just for consistency in this thread, but in the future
> please comment inline with trimming :).  It's easier to follow for future
> readers; if they find a post stand-alone in some web archive, the question
> will come before the answer.
>
> Anyhow; Mike, you're definitely closer to the answer; a callLater is
> unnecessary, the callback should be called on demand.  But, given that a
> queue of write operations is just that - a queue - we don't need a Deferred
> for every write; the callback to the write operation can just pick up the
> next queued item.
>
> -g
>
> On Oct 20, 2012, at 9:07 AM, Mike Winter <miwinter at cisco.com> wrote:
>
> > This looks like the kind of thing that could involve using Deferred as
> part of solution. Instead of callLater(0.8,doWrite), design the mechanism
> to wire up event-source to fire the deferred and make doWrite be the
> callback.
> >
> > On Oct 20, 2012, at 8:29:10AM, gelin yan wrote:
> >
> >> Hi All
> >>
> >>  A few months ago, I reported a bug about IOCP. Last night I spent
> several hours on its implementation and finally found out a possible
> solution for that.
> >>
> >>  when sending some small chunks data continuously, the buffer will pile
> them up and send to IOCP; however there is a SEND_LIMIT (128K) that means
> only 128K will be handled. Now the problem is when we try to trigger the
> next writing, IOCP will raise ERROR_IO_PENDING immediately and then
> connection Lost.
> >>
> >>  So I got a idea: if the size of data is larger than SEND_LIMIT, we can
> wait a little bit time for the next writing instead of do it immediately.
> >>
> >> in twisted\internet\iocpreactor\abstract.py there is a method
> >>
> >> def _cbWrite(self, rc, bytes, evt):
> >>        if self._handleWrite(rc, bytes, evt):
> >>            self.doWrite()
> >>
> >> now I modified a bit,
> >>
> >> def _cbWrite(self, rc, bytes, evt):
> >>        if self._handleWrite(rc, bytes, evt):
> >>            if len(evt.buff) < self.SEND_LIMIT:
> >>                self.doWrite()
> >>            else:
> >>                self.reactor.callLater(0.8,self.doWrite)
> >>
> >>
> >>
> >> 0.8 is a silly trial but I have no idea what is the right number for
> this place. After this modification, previous problematic scripts can pass.
> >>
> >> Maybe the better solution is to find a way to poll the complete port
> status when read/write will be recovered from IO PENDING. Simply wait a
> little is risky.
> >>
> >> Regards
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


Hi All

   Thanks for reply. According to MSDN (link here:
http://msdn.microsoft.com/en-us/library/windows/desktop/ms683209(v=vs.85).aspx
)

"A pending operation is indicated when the function that started the
operation returns *FALSE*, and the
*GetLastError*<http://msdn.microsoft.com/en-us/library/windows/desktop/ms679360(v=vs.85).aspx>
function
returns *ERROR_IO_PENDING*. When an I/O operation is pending, the function
that started the operation resets the *hEvent* member of the
*OVERLAPPED* structure
to the nonsignaled state. Then when the pending operation has been
completed, the system sets the event object to the signaled state."

  If we can know when event object is in the signaled state we definitely
can use a queue directly. Any idea?

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121021/0f04b061/attachment-0001.htm 

From exarkun at twistedmatrix.com  Sun Oct 21 00:05:28 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Oct 2012 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1350792328.1.251270403@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121021/9f75f9ee/attachment.htm 

From _ at lvh.cc  Sun Oct 21 10:02:21 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 21 Oct 2012 16:02:21 +0200
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
Message-ID: <CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>

Awesome!!!

At what point did this change? ISTR the lack of interest in maintaining the
Github account was pretty much a consequence of it seeming pretty
pointless: ie it was still easier to just use SVN than to figure out where
the parts work together.

Will code review also be happening at a pull request level?

On Sun, Oct 21, 2012 at 1:24 AM, Duncan McGreggor <
oubiwann at twistedmatrix.com> wrote:

> Hey all,
>
> At the sprint today, Glyph mentioned that the github repo hasn't been
> updated recently and needs someone to maintain it regularly. He also
> mentioned that pull requests would be accepted from github, at which point
> I immediately volunteered to keep the repo up to date :-) (I can't bear
> using svn anymore...)
>
> I'll be putting things in place (infrastructure, scripts, etc.) to assist
> me with this, so let me know if you have any concerns, questions, ideas,
> etc.
>
> Thanks,
>
> d
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121021/c46c65e3/attachment.htm 

From duncan.mcgreggor at gmail.com  Sun Oct 21 13:43:38 2012
From: duncan.mcgreggor at gmail.com (Duncan M. McGreggor)
Date: Sun, 21 Oct 2012 10:43:38 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
Message-ID: <21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>



On Oct 21, 2012, at 7:02 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Awesome!!!
> 
> At what point did this change?

Not sure. I don't know the history of the github repo nor its uses. I was certainly surprised with Glyph said that pull requests would be accepted.

> ISTR the lack of interest in maintaining the Github account was pretty much a consequence of it seeming pretty pointless: ie it was still easier to just use SVN than to figure out where the parts work together.
> 
> Will code review also be happening at a pull request level?

Here's what I envision...

1) a ticket is created on tm.com/trac for a feature, bug, etc.
2) the developer forks the github repo so they can work in their own space, e.g., creating a branch for the new ticket
3) the ticket is updated with a link to the branch they created on github (e.g., github.com/username/feature-name-1234).
4) when ready for review, the dev rebases against master (which will be syncing with svn every 30 minutes or so), squashing all commits into one and issues a pull request on github
5) the ticket is updated to review status
6) other devs take a look at the diff (git clone twisted repo, git pull dev's branch), with review comments going in the trac ticket
7) dev iterates on feedback, rebasing on master every time
8) once approved, perform final rebase, and ask that your pull request be merged on github
9) someone will then ensure that git master is merged into svn trunk

Note that this hasn't been fully tested yet, so one or more parts of this worklfow may have to change...

This would allow devs to do 100% of their iteration work in git or hg (hg plays well with github, I hear), basically removing the process itself as a barrier to contributions to Twisted.

Currently, my own biggest hurdle to resuming contributions to Twisted is the pain of old tech. I've gotten so used to the luxuries of git, hg, and bzr, that svn feels like walking for two days to pick up something at a store, when I can just drive an hour and be there (and not have to walk back home carrying lumber on my back). Everything else I work on (on a daily basis) uses fast, more efficient code repos and more efficient workflows. If forced to use things that slow me down, I'll just pass and do something that quite honestly is a lot more fun.

Hopefully supporting a workflow like this will bring Twisted contributions back into the "fun"realm for more folks...

d


> On Sun, Oct 21, 2012 at 1:24 AM, Duncan McGreggor <oubiwann at twistedmatrix.com> wrote:
> Hey all,
> 
> At the sprint today, Glyph mentioned that the github repo hasn't been updated recently and needs someone to maintain it regularly. He also mentioned that pull requests would be accepted from github, at which point  I immediately volunteered to keep the repo up to date :-) (I can't bear using svn anymore...)
> 
> I'll be putting things in place (infrastructure, scripts, etc.) to assist me with this, so let me know if you have any concerns, questions, ideas, etc.
> 
> Thanks,
> 
> d
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> -- 
> cheers
> lvh
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121021/df98cb88/attachment.htm 

From exarkun at twistedmatrix.com  Sun Oct 21 14:30:29 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Oct 2012 18:30:29 -0000
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
Message-ID: <20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>

On 05:43 pm, duncan.mcgreggor at gmail.com wrote:
>
>
>On Oct 21, 2012, at 7:02 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>>Awesome!!!
>>
>>At what point did this change?
>
>Not sure. I don't know the history of the github repo nor its uses. I 
>was certainly surprised with Glyph said that pull requests would be 
>accepted.

This has always been the case.  Anyone is free to contribute code in any 
way they want.  (Though, if you contribute code in some way that no one 
can understand, there may be a delay in the contribution being 
accepted.)

The blocker for people using git for Twisted development has been that 
no one has wanted to do it badly enough to commit to maintaining the git 
mirror.
>>ISTR the lack of interest in maintaining the Github account was pretty 
>>much a consequence of it seeming pretty pointless: ie it was still 
>>easier to just use SVN than to figure out where the parts work 
>>together.

As mentioned above, I have a slightly different perspective on this. :)
>>Will code review also be happening at a pull request level?
>
>Here's what I envision...
>
>1) a ticket is created on tm.com/trac for a feature, bug, etc.
>2) the developer forks the github repo so they can work in their own 
>space, e.g., creating a branch for the new ticket
>3) the ticket is updated with a link to the branch they created on 
>github (e.g., github.com/username/feature-name-1234).
>4) when ready for review, the dev rebases against master (which will be 
>syncing with svn every 30 minutes or so), squashing all commits into 
>one and issues a pull request on github
>5) the ticket is updated to review status
>6) other devs take a look at the diff (git clone twisted repo, git pull 
>dev's branch), with review comments going in the trac ticket
>7) dev iterates on feedback, rebasing on master every time
>8) once approved, perform final rebase, and ask that your pull request 
>be merged on github
>9) someone will then ensure that git master is merged into svn trunk
>
>Note that this hasn't been fully tested yet, so one or more parts of 
>this worklfow may have to change...

At some point *before* svn trunk is updated, Buildbot needs to be able 
to get the code so it can run tests on all our supported platforms. 
This is the actually important part of this email, you can ignore the 
rest if you want but this really needs to happen.
>This would allow devs to do 100% of their iteration work in git or hg 
>(hg plays well with github, I hear), basically removing the process 
>itself as a barrier to contributions to Twisted.
>
>Currently, my own biggest hurdle to resuming contributions to Twisted 
>is the pain of old tech. I've gotten so used to the luxuries of git, 
>hg, and bzr, that svn feels like walking for two days to pick up 
>something at a store, when I can just drive an hour and be there (and 
>not have to walk back home carrying lumber on my back). Everything else 
>I work on (on a daily basis) uses fast, more efficient code repos and 
>more efficient workflows. If forced to use things that slow me down, 
>I'll just pass and do something that quite honestly is a lot more fun.

While I'm sympathetic to toolchain woes, I can't help but wonder if 
you're being really honest here (with yourself, at least).  Running "svn 
diff" may make you feel bad inside, because svn isn't the latest cool 
toy, but a *hurdle*?  It's just difficult to understand.
>Hopefully supporting a workflow like this will bring Twisted 
>contributions back into the "fun"realm for more folks...

Yes, hopefully so.

Jean-Paul


From jstpierre at mecheye.net  Sun Oct 21 14:37:27 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Sun, 21 Oct 2012 14:37:27 -0400
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
Message-ID: <CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>

On Sun, Oct 21, 2012 at 2:30 PM,  <exarkun at twistedmatrix.com> wrote:

*snip*

> While I'm sympathetic to toolchain woes, I can't help but wonder if
> you're being really honest here (with yourself, at least).  Running "svn
> diff" may make you feel bad inside, because svn isn't the latest cool
> toy, but a *hurdle*?  It's just difficult to understand.

Yes. it's difficult to understand. I see that as a hurdle.

>
> Yes, hopefully so.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
  Jasper


From exarkun at twistedmatrix.com  Sun Oct 21 14:48:51 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Oct 2012 18:48:51 -0000
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
Message-ID: <20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>

On 06:37 pm, jstpierre at mecheye.net wrote:
>On Sun, Oct 21, 2012 at 2:30 PM,  <exarkun at twistedmatrix.com> wrote:
>
>*snip*
>>While I'm sympathetic to toolchain woes, I can't help but wonder if
>>you're being really honest here (with yourself, at least).  Running 
>>"svn
>>diff" may make you feel bad inside, because svn isn't the latest cool
>>toy, but a *hurdle*?  It's just difficult to understand.
>
>Yes. it's difficult to understand. I see that as a hurdle.

I would hope that we could keep the level of discourse above this.

Jean-Paul


From jstpierre at mecheye.net  Sun Oct 21 14:54:26 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Sun, 21 Oct 2012 14:54:26 -0400
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
	<20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
Message-ID: <CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>

On Sun, Oct 21, 2012 at 2:48 PM,  <exarkun at twistedmatrix.com> wrote:
> On 06:37 pm, jstpierre at mecheye.net wrote:
>>On Sun, Oct 21, 2012 at 2:30 PM,  <exarkun at twistedmatrix.com> wrote:
>>
>>*snip*
>>>While I'm sympathetic to toolchain woes, I can't help but wonder if
>>>you're being really honest here (with yourself, at least).  Running
>>>"svn
>>>diff" may make you feel bad inside, because svn isn't the latest cool
>>>toy, but a *hurdle*?  It's just difficult to understand.
>>
>>Yes. it's difficult to understand. I see that as a hurdle.
>
> I would hope that we could keep the level of discourse above this.

I'm not sure exactly what you want to hear. The few times I've tried
to contributed to Twisted, svn was actually a big barrier. Trying to
update my patches so that I'm sure the tests pass on trunk produced
mysterious merge conflicts in files I've never touched. Maybe I'm bad
at svn, but it's never worked well for me.

> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
  Jasper


From duncan.mcgreggor at gmail.com  Sun Oct 21 14:57:03 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Sun, 21 Oct 2012 11:57:03 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
Message-ID: <CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>

On Sun, Oct 21, 2012 at 11:30 AM,  <exarkun at twistedmatrix.com> wrote:
> On 05:43 pm, duncan.mcgreggor at gmail.com wrote:
>>
>>
>>On Oct 21, 2012, at 7:02 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>>>Awesome!!!
>>>
>>>At what point did this change?
>>
>>Not sure. I don't know the history of the github repo nor its uses. I
>>was certainly surprised with Glyph said that pull requests would be
>>accepted.
>
> This has always been the case.  Anyone is free to contribute code in any
> way they want.  (Though, if you contribute code in some way that no one
> can understand, there may be a delay in the contribution being
> accepted.)
>
> The blocker for people using git for Twisted development has been that
> no one has wanted to do it badly enough to commit to maintaining the git
> mirror.

I want to use git instead of svn so badly that I can taste it.
Hopefully this provides the motivation necessary to maintain the repo
:-)

>>>ISTR the lack of interest in maintaining the Github account was pretty
>>>much a consequence of it seeming pretty pointless: ie it was still
>>>easier to just use SVN than to figure out where the parts work
>>>together.
>
> As mentioned above, I have a slightly different perspective on this. :)
>>>Will code review also be happening at a pull request level?
>>
>>Here's what I envision...
>>
>>1) a ticket is created on tm.com/trac for a feature, bug, etc.
>>2) the developer forks the github repo so they can work in their own
>>space, e.g., creating a branch for the new ticket
>>3) the ticket is updated with a link to the branch they created on
>>github (e.g., github.com/username/feature-name-1234).
>>4) when ready for review, the dev rebases against master (which will be
>>syncing with svn every 30 minutes or so), squashing all commits into
>>one and issues a pull request on github
>>5) the ticket is updated to review status
>>6) other devs take a look at the diff (git clone twisted repo, git pull
>>dev's branch), with review comments going in the trac ticket
>>7) dev iterates on feedback, rebasing on master every time
>>8) once approved, perform final rebase, and ask that your pull request
>>be merged on github
>>9) someone will then ensure that git master is merged into svn trunk
>>
>>Note that this hasn't been fully tested yet, so one or more parts of
>>this worklfow may have to change...
>
> At some point *before* svn trunk is updated, Buildbot needs to be able
> to get the code so it can run tests on all our supported platforms.
> This is the actually important part of this email, you can ignore the
> rest if you want but this really needs to happen.

Excellent feedback -- thanks! This is the sort of thing I need in
order to plan this out sufficiently...

>>This would allow devs to do 100% of their iteration work in git or hg
>>(hg plays well with github, I hear), basically removing the process
>>itself as a barrier to contributions to Twisted.
>>
>>Currently, my own biggest hurdle to resuming contributions to Twisted
>>is the pain of old tech. I've gotten so used to the luxuries of git,
>>hg, and bzr, that svn feels like walking for two days to pick up
>>something at a store, when I can just drive an hour and be there (and
>>not have to walk back home carrying lumber on my back). Everything else
>>I work on (on a daily basis) uses fast, more efficient code repos and
>>more efficient workflows. If forced to use things that slow me down,
>>I'll just pass and do something that quite honestly is a lot more fun.
>
> While I'm sympathetic to toolchain woes, I can't help but wonder if
> you're being really honest here (with yourself, at least).  Running "svn
> diff" may make you feel bad inside, because svn isn't the latest cool
> toy, but a *hurdle*?  It's just difficult to understand.

Well, I viewed git and github as the hipster's latest cool toy for a
long time, but once I was force to use it, I was converted. The time I
spent wrestling with tool chains and workflows all but disappeared. I
never even thought about it anymore. That's the ideal user interface
with any tool, as far as I'm concerned. When you can use it to be
efficient and don't even think about the tool, where it's just an
extension of your natural thought process, that's a tool that has been
built correctly. Sadly, that's the opposite experience I have with
svn-based branch management :-/

d


From julian at grayvines.com  Sun Oct 21 22:45:31 2012
From: julian at grayvines.com (Julian Berman)
Date: Sun, 21 Oct 2012 22:45:31 -0400
Subject: [Twisted-Python] Adding mock as a test suite dependency
Message-ID: <20121022024531.GA46958@air>

Hi.

I'd like to gauge any interest in (or resistance towards) adding mock
(http://www.voidspace.org.uk/python/mock/mock.html) as a dependency for the
test suite.

In short, while I don't necessarily feel strongly about behavior vs. state
based verification being preferred in a general sense, I think both have their
place when used with sensibility. (Sorry, I know that's not saying too much of
substance, but I'm trying to ward off a discussion on whether or not it has a
place at all if possible).

The *benefit* though for me in having mock present is that it decreases the
lines of code necessary to write stubs and mocks. While doing so is not really
that difficult anyhow, it *is* just a bit more clutter to do so without mock,
and the extra 3 or 4 lines mean that in more than one instance I have found
myself pick a different strategy than I would have because of the extra lines
of code that clutter the test method.

To give a specific example, as I write this I'm writing tests for #6143 (which
will hopefully let trial drop into a debugger on an error or failure rather
than at the outset of a test run). To do so I want to write tests that look
like:

    def test_itDebugsOnError(self):
        result = mock.Mock()
        exc_type, exc_value, tb = mock.Mock(), mock.Mock(), mock.Mock()

        decorated = DebugDecorator(result)

        with mock.patch.object(decorated, "debug") as debug:
            decorated.addError(exc_type, exc_value, tb)

        debug.assert_called_once_with(tb)
        result.addError.assert_called_once_with(exc_type, exc_value, tb)

where I want to test that the decorated test result is being used as I expect
it to, and that debug is being called. Another test will test that debug does
what it's supposed to, also in isolation.

Of course none of the objects I used there were very interesting, but mock has
similarly terse syntax for creating mocks with attributes, return values, etc.
amongst a bunch of other useful features which I'll be happy to elaborate on if
anyone would like, I just had the above example at hand.

To add a few more notes:

 - mock is in the stdlib starting with 3.3 as unittest.mock, which as I
   understand it is the first version of Py3 for which support is planned. So
   really all that'd be needed would be to add mock as a dependency on 2.X.

 - it's a single file with no external deps, so installation is not difficult,
   and it'd only be a dep for running the tests (and presumably only a subset
   thereof that chose to use it)

 - there are other mocking libraries, but I don't like any of the others as
   much personally for various reasons. 

 - I'd be willing to do the small amount of work to add it if there'd be
   interest :)


Cheers,
Julian


From glyph at twistedmatrix.com  Sun Oct 21 23:00:14 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 21 Oct 2012 20:00:14 -0700
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <20121022024531.GA46958@air>
References: <20121022024531.GA46958@air>
Message-ID: <AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>

On Oct 21, 2012, at 7:45 PM, Julian Berman <julian at grayvines.com> wrote:

> The *benefit* though for me in having mock present is that it decreases the
> lines of code necessary to write stubs and mocks. While doing so is not really
> that difficult anyhow, it *is* just a bit more clutter to do so without mock,
> and the extra 3 or 4 lines mean that in more than one instance I have found
> myself pick a different strategy than I would have because of the extra lines
> of code that clutter the test method.

This seems like a pretty small benefit; adding a new dependency affects lots of people and introduces a new point of failure in the installation process, especially for Windows users who already have a devil of a time getting Twisted installed.

Also I don't particularly like the testing style associated with Mock.  I think it might discourage us yet further from writing verified fakes, i.e. supported in-memory implementations of things like IReactorTCP, that have somewhat intricate behavior that's tedious to emulate with Mock.

Personally I'm -0.  Don't let that stop you from cooking up a patch that would include it though, I might be in the minority here.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121021/d6c06285/attachment.htm 

From glyph at twistedmatrix.com  Mon Oct 22 00:05:05 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 21 Oct 2012 21:05:05 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
Message-ID: <2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>

On Oct 21, 2012, at 11:57 AM, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:

> I want to use git instead of svn so badly that I can taste it.
> Hopefully this provides the motivation necessary to maintain the repo
> :-)


For what it's worth, I haven't authored a branch for Twisted with SVN in the last 3 years.  I use Bazaar almost exclusively and I get all the fun tools one generally associates with a DVCS, including offline history and a nice graphical revision viewer.  (One reason I am concerned about migrating to Git is that this will stop working; in my opinions, Git's offline GUI tools are far worse than Bazaar's - almost as much worse as Launchpad's source browser is than Github.)

Similarly, I do code reviews by using a local 'bzr merge'.

The only weird workflow which isn't just built in to BZR-SVN is this:
<http://twistedmatrix.com/trac/wiki/BazaarMirror#CommittingaBazaarbranchtoaSubversionbranch>.  This involves rebasing, which makes me a little sad; I wish we could preserve more history, but it works fine.

I still land branches on trunk using SVN, but that takes about ten seconds assuming you use Combinator or svnmerge.py, so I don't see that being a big impediment.  You only need to worry about that if you have commit access anyway, so that's not most external contributors.  If the need to do that to land changes is preventing you from writing them in the first place, just let me know when you have a branch to land, and I'll do it for you.

You don't need to use SVN, you haven't needed to use SVN since git-svn came into existence, and we've had several threads on this list before about improving the Git instructions here: <http://twistedmatrix.com/trac/wiki/GitMirror>.  If you look at the history for that page, you can see that it is two years old, and originally created by exarkun, who is not a git user himself.

So, it strikes me as a bit odd, and I am a bit dismayed that anyone would have been put off of by the need to use Subversion when working with Twisted since you can use Git or Bazaar - or, I assume, Mercurial - right now.

I would find it a bit more understandable if you are dismayed by the need to use Trac, which is harder to avoid when working on Twisted.  For various reasons - which I hope we don't have to discuss right now - we aren't going to move the project to Github any time soon, so if anyone reading this thread is interested in alleviating some of the pain with Trac, <https://launchpad.net/frack> is a good place to get involved to help out.  There are some pretty straightforward bugs that anyone interested could fix there.

Frack is already up and running on twistedmatrix.com, albeit at a weird URL.  See, for example, <http://twistedmatrix.com/users/frack.twistd/ui/ticket.html?id=1956>. This might be useful because it is a considerably faster ticket-viewer than Trac, do to its somewhat more parsimonious issuance of SQL queries.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121021/8514c4bc/attachment.htm 

From glyph at twistedmatrix.com  Mon Oct 22 00:05:07 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 21 Oct 2012 21:05:07 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
	<20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
	<CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>
Message-ID: <AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>


On Oct 21, 2012, at 11:54 AM, Jasper St. Pierre <jstpierre at mecheye.net> wrote:

> On Sun, Oct 21, 2012 at 2:48 PM,  <exarkun at twistedmatrix.com> wrote:
>> On 06:37 pm, jstpierre at mecheye.net wrote:
>>> On Sun, Oct 21, 2012 at 2:30 PM,  <exarkun at twistedmatrix.com> wrote:
>>> 
>>> *snip*
>>>> While I'm sympathetic to toolchain woes, I can't help but wonder if
>>>> you're being really honest here (with yourself, at least).  Running
>>>> "svn
>>>> diff" may make you feel bad inside, because svn isn't the latest cool
>>>> toy, but a *hurdle*?  It's just difficult to understand.
>>> 
>>> Yes. it's difficult to understand. I see that as a hurdle.
>> 
>> I would hope that we could keep the level of discourse above this.
> 
> I'm not sure exactly what you want to hear.

In case it was actually not clear and you're not just being sarcastic, exarkun was saying that it's difficult to understand that someone with the required expertise to contribute to Twisted in the first place would have trouble with running the command 'svn diff'.  'svn diff' itself is not at all difficult to understand.

Since Subversion is effectively the baseline fisher-price "my first version control system", I would assume that anyone who could effectively use Git (which has all the user-interface convenience of an unshielded circular saw) would have no trouble with it, especially with the very basic usage that contributing to Twisted requires.

Since you asked, there are two things that I'd like to hear:

"Hooray!  I will help oubiwann maintain the git(hub) mirror!  what would you like me to do?"
specific problems that you've had with SVN that we might be able to address in the future or help you with, and not vague bellyaching about how we're not using the thing you happen to like best.

If you're going to say the first thing and commit to helping though, please be sure first that you actually have the time and energy to follow through.  At this point, the number of people who have appeared, volunteered to maintain a git mirror, done it for five minutes and then disappeared forever, leaving it in a broken, unmaintained state, is in the double digits.  (I am starting to wonder if Git gives it users some kind of brain damage that makes a person incapable of meeting commitments.)

> The few times I've tried to contributed to Twisted, svn was actually a big barrier. Trying to update my patches so that I'm sure the tests pass on trunk produced mysterious merge conflicts in files I've never touched. Maybe I'm bad at svn, but it's never worked well for me.

Why aren't you just using git for local development then?  You don't have commit access, so you should never need to touch an svn client other than git if you don't feel like it.

This is not entirely a rhetorical question.  We have always tried to be accommodating to DVCS users, providing instructions and repeated requests for both a plain git and/or a github ambassador to keep svn nicely synchronized and reduce the friction required for users of those tools to make contributions.  If the documentation we've offered on <http://twistedmatrix.com/trac/wiki/GitMirror> is in any way incorrect or non-optimal, please don't hesitate to say exactly what would be better.  If you need wiki edit permission to update the page, I'll gladly give it to you.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121021/368d852c/attachment-0001.htm 

From glyph at twistedmatrix.com  Mon Oct 22 00:06:15 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 21 Oct 2012 21:06:15 -0700
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
	<CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
Message-ID: <5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>


On Oct 20, 2012, at 7:56 PM, gelin yan <dynamicgl at gmail.com> wrote:

> "A pending operation is indicated when the function that started the operation returns FALSE, and the GetLastError function returns ERROR_IO_PENDING. When an I/O operation is pending, the function that started the operation resets the hEvent member of the OVERLAPPED structure to the nonsignaled state. Then when the pending operation has been completed, the system sets the event object to the signaled state."
> 
>   If we can know when event object is in the signaled state we definitely can use a queue directly. Any idea?
> 

Sounds like you're at the point where you should just try doing an implementation, and if it works and passes all the tests you can think of for it, submit it for code review.  Much more speculation without testing wouldn't be useful.

Thanks for working on this!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121021/2fffa951/attachment.htm 

From jstpierre at mecheye.net  Mon Oct 22 00:55:41 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 22 Oct 2012 00:55:41 -0400
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
	<20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
	<CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>
	<AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>
Message-ID: <CAA0H+QRso+T1itR6Ds_TgVZbYtR-yWa8Fr+Qx14mki-PSMcU+Q@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:05 AM, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Oct 21, 2012, at 11:54 AM, Jasper St. Pierre <jstpierre at mecheye.net>
> wrote:
>
> On Sun, Oct 21, 2012 at 2:48 PM,  <exarkun at twistedmatrix.com> wrote:
>
> On 06:37 pm, jstpierre at mecheye.net wrote:
>
> On Sun, Oct 21, 2012 at 2:30 PM,  <exarkun at twistedmatrix.com> wrote:
>
> *snip*
>
> While I'm sympathetic to toolchain woes, I can't help but wonder if
> you're being really honest here (with yourself, at least).  Running
> "svn
> diff" may make you feel bad inside, because svn isn't the latest cool
> toy, but a *hurdle*?  It's just difficult to understand.
>
>
> Yes. it's difficult to understand. I see that as a hurdle.
>
>
> I would hope that we could keep the level of discourse above this.
>
> I'm not sure exactly what you want to hear.
>
> In case it was actually not clear and you're not just being sarcastic,
> exarkun was saying that it's difficult to understand that someone with the
> required expertise to contribute to Twisted in the first place would have
> trouble with running the command 'svn diff'.  'svn diff' itself is not at
> all difficult to understand.

As I said, the issue I had was not "svn diff" -- I had been working on
my fix, uploaded it to Trac, and it was a few months or so before
someone reviewed it. I forget who it was, but the reviewer prompted me
to make a few small style changes, flesh out a testcase, write a .news
file, that sort of thing. I updated my source tree to pull in new
changes from trunk, to make sure the patch that I had been working on
didn't rot. I was frustrated when I got merge conflicts for files that
I've never touched before.

> Since Subversion is effectively the baseline fisher-price "my first version
> control system", I would assume that anyone who could effectively use Git
> (which has all the user-interface convenience of an unshielded circular saw)
> would have no trouble with it, especially with the very basic usage that
> contributing to Twisted requires.
>
> Since you asked, there are two things that I'd like to hear:
>
> "Hooray!  I will help oubiwann maintain the git(hub) mirror!  what would you
> like me to do?"

I'd love to help out and do things, but unfortunately I don't have the
time these days. If you think that we should review code on the
Twisted GitHub repository, I'd gladly help out with that. I would help
out and review patches on Trac, but it's not as convenient: as far as
I'm aware: I can't set Trac up so that I get emails when a patch comes
in in a module I'm comfortable with, and I can't get an RSS feed of
all the important events in the project I'm aware of. If that exists
and I couldn't find it, I'll gladly review patches today.

> specific problems that you've had with SVN that we might be able to address
> in the future or help you with, and not vague bellyaching about how we're
> not using the thing you happen to like best.
>
> If you're going to say the first thing and commit to helping though, please
> be sure first that you actually have the time and energy to follow through.
> At this point, the number of people who have appeared, volunteered to
> maintain a git mirror, done it for five minutes and then disappeared
> forever, leaving it in a broken, unmaintained state, is in the double
> digits.  (I am starting to wonder if Git gives it users some kind of brain
> damage that makes a person incapable of meeting commitments.)
>
> The few times I've tried to contributed to Twisted, svn was actually a big
> barrier. Trying to update my patches so that I'm sure the tests pass on
> trunk produced mysterious merge conflicts in files I've never touched. Maybe
> I'm bad at svn, but it's never worked well for me.
>
>
> Why aren't you just using git for local development then?  You don't have
> commit access, so you should never need to touch an svn client other than
> git if you don't feel like it.

This is another rhetorical anecdote, I tried using git-svn when I was
contributing to PyPy during the SVN days. It just didn't work out. I
don't know or can't say the same for bzr-svn or hg-svn or whatever
else cross-VCS systems there are, but I was left with a bad taste in
my mouth, so I figured it would be more worthwhile to stick with the
original source tool.

I may just be a drooling moron.

> This is not entirely a rhetorical question.  We have always tried to be
> accommodating to DVCS users, providing instructions and repeated requests
> for both a plain git and/or a github ambassador to keep svn nicely
> synchronized and reduce the friction required for users of those tools to
> make contributions.  If the documentation we've offered on
> <http://twistedmatrix.com/trac/wiki/GitMirror> is in any way incorrect or
> non-optimal, please don't hesitate to say exactly what would be better.  If
> you need wiki edit permission to update the page, I'll gladly give it to
> you.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
  Jasper


From itamar at futurefoundries.com  Mon Oct 22 08:47:39 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Mon, 22 Oct 2012 08:47:39 -0400
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
Message-ID: <CAOp9P3oCAtk2USohP+ETx4Szjrs7eGtLCYnqwv_RgM0GOi2THQ@mail.gmail.com>

On Sun, Oct 21, 2012 at 11:00 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> This seems like a pretty small benefit; adding a new dependency affects
> lots of people and introduces a new point of failure in the installation
> process, especially for Windows users who already have a devil of a time
> getting Twisted installed.
>

A testing dependency isn't quite as problematic as a regular dependency;
you'd only need to install it if you wanted to run Twisted's test suite,
which probably most users do not bother with.

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ ? Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/f2b3ec8f/attachment.htm 

From jstpierre at mecheye.net  Mon Oct 22 10:55:23 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 22 Oct 2012 10:55:23 -0400
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
Message-ID: <CAA0H+QREH9iFJvpK4qbtbN1s_U7w1ktfYP=N14iqNUu3AFr2gQ@mail.gmail.com>

On Sun, Oct 21, 2012 at 11:00 PM, Glyph <glyph at twistedmatrix.com> wrote:
> On Oct 21, 2012, at 7:45 PM, Julian Berman <julian at grayvines.com> wrote:
>
> This seems like a pretty small benefit; adding a new dependency affects lots
> of people and introduces a new point of failure in the installation process,
> especially for Windows users who already have a devil of a time getting
> Twisted installed.

Is there anything we can do to make the dependency stuff nicer to
install on Windows, other than throwing out all niceties that we can
depend on? It seems that the issue here is our lack of good
installation story on Windows.

> Also I don't particularly like the testing style associated with Mock.  I
> think it might discourage us yet further from writing verified fakes, i.e.
> supported in-memory implementations of things like IReactorTCP, that have
> somewhat intricate behavior that's tedious to emulate with Mock.
>
> Personally I'm -0.  Don't let that stop you from cooking up a patch that
> would include it though, I might be in the minority here.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
  Jasper


From lacrima.maxim at gmail.com  Mon Oct 22 11:00:02 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Mon, 22 Oct 2012 18:00:02 +0300
Subject: [Twisted-Python] Managing twisted application as init service.
Message-ID: <CAKef57O-fWG_fVoHfgt0M3Ski-A1e9Pbc0n2nkpsxkDG_QVa7A@mail.gmail.com>

Hi,

I have been developing an application, which I would like to manage in a
fashion similar to scripts placed in /etc/init.d. I.e. I want to start,
stop, restart and monitor the application.

Currently, I am trying to figure out a correct approach for this. Initially
I thought to create a wrapper shell script like here [1] and just copy it
into `/etc/init.d` directory. Then in that script I would make `twistd`
start the application.

However, today I discovered `twisted.runner` package,  which seems to do
the same thing.  So my question is how to run and monitor processes
using `twisted.runner`? I couldn't find any examples on how to use it.

Also, in 11th part of the tutorial [2] there is a mention that I can
package my application as rpm package, which, when installed, will
correctly register my package as `init.d` script.

So are there best practices in twisted about how to install twisted
applications and manage them as `init.d` services?

I am quite new to Twisted (and to Linux `init.d` scripts). Sorry, if my
question is unclear.

Thank you in advance.

[1] http://www.sensi.org/~alec/unix/redhat/sysvinit.html
[2]
http://twistedmatrix.com/documents/current/core/howto/tutorial/configuration.html#auto4

-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/022f9618/attachment.htm 

From exarkun at twistedmatrix.com  Mon Oct 22 12:46:08 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 22 Oct 2012 16:46:08 -0000
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
Message-ID: <20121022164608.30349.409512088.divmod.xquotient.105@localhost6.localdomain6>

On 03:00 am, glyph at twistedmatrix.com wrote:
>On Oct 21, 2012, at 7:45 PM, Julian Berman <julian at grayvines.com> 
>wrote:
>>The *benefit* though for me in having mock present is that it 
>>decreases the
>>lines of code necessary to write stubs and mocks. While doing so is 
>>not really
>>that difficult anyhow, it *is* just a bit more clutter to do so 
>>without mock,
>>and the extra 3 or 4 lines mean that in more than one instance I have 
>>found
>>myself pick a different strategy than I would have because of the 
>>extra lines
>>of code that clutter the test method.
>
>This seems like a pretty small benefit; adding a new dependency affects 
>lots of people and introduces a new point of failure in the 
>installation process, especially for Windows users who already have a 
>devil of a time getting Twisted installed.
>
>Also I don't particularly like the testing style associated with Mock. 
>I think it might discourage us yet further from writing verified fakes, 
>i.e. supported in-memory implementations of things like IReactorTCP, 
>that have somewhat intricate behavior that's tedious to emulate with 
>Mock.

I'm also not a huge fan of the *unverified* mock style of testing.  I 
don't think anything says that mocks *have* to be unverified, though it 
seems they're often used that way.

The mock library that got added to the stdlib has the notion of 
constructing a mock using another object as a template.  I haven't used 
this feature, but it seems like the intent is to at least take a step 
towards verification.  It'd be nice if someone who knows more about the 
features of this library could give some examples.

In case anyone isn't clear, the problem with unverified fakes is that 
they either start out incompatible with the objects they're fakes of, or 
else they become incompatible with them over time.  Once they're 
incompatible, the tests that use them become significantly less useful, 
since they demonstrate little or nothing about what will happen when you 
try to use the code for real.

Verified fakes solve this problem by adding assertions that objects and 
their fakes have the necessary overlap in either interface or 
functionality in order for the tests using them to be valid.

Beyond that, considering the particular example presented, I wouldn't 
actually use mocks to test this.  The real object, the debugger, should 
be perfectly usable in unit tests.  It doesn't allocate or depend on 
expensive resources, it doesn't do network I/O, etc.  Mocks are perhaps 
an attractive nuisance that distract from coming up with a better test.

Jean-Paul
>Personally I'm -0.  Don't let that stop you from cooking up a patch 
>that would include it though, I might be in the minority here.
>
>-glyph


From _ at lvh.cc  Mon Oct 22 12:57:53 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 22 Oct 2012 18:57:53 +0200
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <20121022164608.30349.409512088.divmod.xquotient.105@localhost6.localdomain6>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
	<20121022164608.30349.409512088.divmod.xquotient.105@localhost6.localdomain6>
Message-ID: <CAE_Hg6ZGWR8eNF9xeRW47-3wABXY4dQBNwB3T=-9HKu8jw95qg@mail.gmail.com>

So, mock does have an autospec mode, which is not the default, but does
result in eg methods undefined on the parent raising AttributeError.

I don't know if there's a way to generate a mock from an interface:
particularly the fact that interface methods don't have "self" in their
signature might trip it up.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/8a2ac918/attachment.htm 

From dreid at dreid.org  Mon Oct 22 13:22:03 2012
From: dreid at dreid.org (David Reid)
Date: Mon, 22 Oct 2012 10:22:03 -0700
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <CAE_Hg6ZGWR8eNF9xeRW47-3wABXY4dQBNwB3T=-9HKu8jw95qg@mail.gmail.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
	<20121022164608.30349.409512088.divmod.xquotient.105@localhost6.localdomain6>
	<CAE_Hg6ZGWR8eNF9xeRW47-3wABXY4dQBNwB3T=-9HKu8jw95qg@mail.gmail.com>
Message-ID: <CA+t4pawofw_kKS+JN7n-nDD9FsyMVqzhpF+gKY7Q_Y_svJPWvw@mail.gmail.com>

On Mon, Oct 22, 2012 at 9:57 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> So, mock does have an autospec mode, which is not the default, but does
> result in eg methods undefined on the parent raising AttributeError.
>

It does, but it won't for instance know that for:
    mock_agent = mock.Mock(Agent)

that mock_agent.request should return a thing that looks like a Deferred.
 So you still
end up with a bunch of setup code to enforce return types and things.


> I don't know if there's a way to generate a mock from an interface:
> particularly the fact that interface methods don't have "self" in their
> signature might trip it up.
>

Yeah, this doesn't work at all.  You end up having to always pass a thing
which provides the interface.  Or an unspecified Mock.

Of course, this isn't actually a "verified" Mock.  Because you still have
to specify all the behavior and constructing that behavior by setting
side_effect and return_value is often difficult and confusing.

So though I use mock quite a bit in my personal projects and at work I am
definitely against using it for twisted style tests.  I'd rather see some
energy put into things like a verified fake Request object and a
ResourceTraversingAgent.

-David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/ebb98326/attachment.htm 

From glyph at twistedmatrix.com  Mon Oct 22 13:25:33 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 10:25:33 -0700
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <CAOp9P3oCAtk2USohP+ETx4Szjrs7eGtLCYnqwv_RgM0GOi2THQ@mail.gmail.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
	<CAOp9P3oCAtk2USohP+ETx4Szjrs7eGtLCYnqwv_RgM0GOi2THQ@mail.gmail.com>
Message-ID: <79745938-AC18-483C-9888-006F6EA85595@twistedmatrix.com>

On Oct 22, 2012, at 5:47 AM, Itamar Turner-Trauring <itamar at futurefoundries.com> wrote:

> A testing dependency isn't quite as problematic as a regular dependency; you'd only need to install it if you wanted to run Twisted's test suite, which probably most users do not bother with.

This actually strikes me as a strong counter-argument for adding the dependency and as I'm considering it is pushing me from -0 to -1.

We already have a couple of problems running the tests when Twisted is system-installed and read-only to the user running the tests.  Running the tests is not a special thing that only developers should do in development configurations.  It is (well, ought to be, anyway) the way that you figure out if Twisted works on your system.  Every user should be encouraged to run the full test suite when submitting a bug report; every system integrator should run the tests before declaring their Twisted package working.

If we do add a dependency on mock, I would rather users have a slightly more inconvenient installation experience than have them unable to run the tests to figure out what is going on if they have a problem.  It should be imported in twisted/__init__.py to make sure that nobody accidentally forgets to install it along with Twisted.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/ca2f86c3/attachment.htm 

From glyph at twistedmatrix.com  Mon Oct 22 13:35:44 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 10:35:44 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAA0H+QRso+T1itR6Ds_TgVZbYtR-yWa8Fr+Qx14mki-PSMcU+Q@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
	<20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
	<CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>
	<AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>
	<CAA0H+QRso+T1itR6Ds_TgVZbYtR-yWa8Fr+Qx14mki-PSMcU+Q@mail.gmail.com>
Message-ID: <4BAD43E6-8676-47AE-ADD2-78EF526BCE65@twistedmatrix.com>

On Oct 21, 2012, at 9:55 PM, Jasper St. Pierre <jstpierre at mecheye.net> wrote:

> As I said, the issue I had was not "svn diff" -- I had been working on
> my fix, uploaded it to Trac, and it was a few months or so before
> someone reviewed it. I forget who it was, but the reviewer prompted me
> to make a few small style changes, flesh out a testcase, write a .news
> file, that sort of thing. I updated my source tree to pull in new
> changes from trunk, to make sure the patch that I had been working on
> didn't rot. I was frustrated when I got merge conflicts for files that
> I've never touched before.

If you can replicate the exact branch and changes you had difficulty with, I'd love to hear about the specifics, because this sounds like maybe it's a gotcha we should add to some development documentation.  It should not be possible for this to happen with a simple 'svn up' so I want to know what command to tell users they should avoid.

Feel free to reply off-list if it gets into fiddly details of subversion that might be off-topic.

> This is another rhetorical anecdote, I tried using git-svn when I was
> contributing to PyPy during the SVN days. It just didn't work out. I
> don't know or can't say the same for bzr-svn or hg-svn or whatever
> else cross-VCS systems there are, but I was left with a bad taste in
> my mouth, so I figured it would be more worthwhile to stick with the
> original source tool.


You say "rhetorical anecdote", I say "FUD" :).  But, perhaps you are more just in the class of users that need somebody like Duncan's help in order to use git against Twisted effectively, rather than the class of users who know the version control tools well enough to be able to provide that help.

> I may just be a drooling moron.


I didn't say you were a "moron", being unable to figure out git's UI for something is merely an indication that you probably aren't eligible for the Fields medal; frankly I have a great deal of difficulty with it as well.  If I didn't, I might have updated things myself.

I hope you'll have a better time once those instructions are updated.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/a14c0bc2/attachment-0001.htm 

From kevin.horn at gmail.com  Mon Oct 22 13:53:44 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 22 Oct 2012 12:53:44 -0500
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
	<2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>
Message-ID: <CA+U=zK1htddDFsjoQ7ciaoruKuuMK_M0E9L6gJ=vQOEiLLGvow@mail.gmail.com>

On Sun, Oct 21, 2012 at 11:05 PM, Glyph <glyph at twistedmatrix.com> wrote:

> On Oct 21, 2012, at 11:57 AM, Duncan McGreggor <duncan.mcgreggor at gmail.com>
> wrote:
>
> I want to use git instead of svn so badly that I can taste it.
> Hopefully this provides the motivation necessary to maintain the repo
> :-)
>
>
> For what it's worth, I haven't authored a branch for Twisted with SVN in
> the last 3 years.  I use Bazaar almost exclusively and I get all the fun
> tools one generally associates with a DVCS, including offline history and a
> nice graphical revision viewer.  (One reason I am concerned about migrating
> to Git is that this will stop working; in my opinions, Git's offline GUI
> tools are far worse than Bazaar's - almost as much worse as Launchpad's
> source browser is than Github.)
>

I really wish I could figure out how to do this.  The one page on the wiki
helps a bit, but is insufficient for those not already familiar with bzr
(like me).  I've tried setting this up a couple of times, and I always end
up just giving up on it. (and no I don't recall exactly why, except for the
one time when installing bzr on windows hosed my machine and made it
unbootable...not Twisted's fault of course).


> Similarly, I do code reviews by using a local 'bzr merge'.
>
> The only weird workflow which isn't just built in to BZR-SVN is this:
> <
> http://twistedmatrix.com/trac/wiki/BazaarMirror#CommittingaBazaarbranchtoaSubversionbranch>.
>  This involves rebasing, which makes me a little sad; I wish we could
> preserve more history, but it works fine.
>
> I still *land* branches on trunk using SVN, but that takes about ten
> seconds assuming you use Combinator or svnmerge.py, so I don't see that
> being a big impediment.  You only need to worry about that if you have
> commit access anyway, so that's not most external contributors.  If the
> need to do that to land changes is preventing you from writing them in the
> first place, just let me know when you have a branch to land, and I'll do
> it for you.
>

Unless someone applied my patch, Combinator won't work on Windows.  Also,
since the great Divmod site meltdown, there's not good instructions on how
to use it (aside from the wayback machine, which is what I've been using).

I'd never heard of svnmerge.py until you mentioned it.  Are there any
instructions on how to use it with Twisted?  I'm not finding any, and I'm
reluctant to experiment since Twisted has a very specific way on
interacting with the SVN repo.


> You don't need to use SVN, you haven't needed to use SVN since git-svn
> came into existence, and we've had several threads on this list before
> about improving the Git instructions here: <
> http://twistedmatrix.com/trac/wiki/GitMirror>.  If you look at the
> history for that page, you can see that it is two years old, and originally
> created by exarkun, who is not a git user himself.
>
> So, it strikes me as a bit odd, and I am a bit dismayed that anyone would
> have been put off of by the need to use Subversion when working with
> Twisted since you can use Git or Bazaar - or, I assume, Mercurial - right
> now*.*
>

Presumably you could use Mercurial with the hggit plugin against a git
repo, but you can't use it directly against the SVN repo, as it has a bad
commit in it that hgsubversion totally chokes on:
https://bitbucket.org/durin42/hgsubversion/issue/350


> I would find it a bit more understandable if you are dismayed by the need
> to use *Trac*, which is harder to avoid when working on Twisted.  For
> various reasons - which I hope we don't have to discuss right now - we
> aren't going to *move* the project to Github any time soon, so if anyone
> reading this thread is interested in alleviating some of the pain with
> Trac, <https://launchpad.net/frack> is a good place to get involved to
> help out.  There are some pretty straightforward bugs that anyone
> interested could fix there.
>
> Frack is already up and running on twistedmatrix.com, albeit at a weird
> URL.  See, for example, <
> http://twistedmatrix.com/users/frack.twistd/ui/ticket.html?id=1956>. This
> might be useful because it is a considerably faster ticket-viewer than
> Trac, do to its somewhat more parsimonious issuance of SQL queries.
>
> -glyph
>
>
Trac has never really bothered me that much. Yes, occasionally it will do
something stupid, and it's...not fast, but I guess I'm just used to the
pain.  I'm looking forward to Frack, though.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/109de860/attachment.htm 

From oubiwann at twistedmatrix.com  Mon Oct 22 13:55:48 2012
From: oubiwann at twistedmatrix.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 10:55:48 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
Message-ID: <CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>

On Sat, Oct 20, 2012 at 4:24 PM, Duncan McGreggor
<oubiwann at twistedmatrix.com> wrote:
> Hey all,
>
> At the sprint today, Glyph mentioned that the github repo hasn't been
> updated recently and needs someone to maintain it regularly. He also
> mentioned that pull requests would be accepted from github, at which point
> I immediately volunteered to keep the repo up to date :-) (I can't bear
> using svn anymore...)
>
> I'll be putting things in place (infrastructure, scripts, etc.) to assist me
> with this, so let me know if you have any concerns, questions, ideas, etc.

So, I've got a git repo set up for trunk of svn, and for the life of
me, I can't merge it with the git repo on github.

As such, my desire is to do a force push. *However* this would break
github forks that everyone has made so far, based on twisted/twisted
(the complete list is here:
https://github.com/twisted/twisted/network/members).

Thoughts? Permission to push the button?

d


From kevin.horn at gmail.com  Mon Oct 22 14:09:39 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 22 Oct 2012 13:09:39 -0500
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <20121022024531.GA46958@air>
References: <20121022024531.GA46958@air>
Message-ID: <CA+U=zK1qjd7X8hfcv_V_TK9589zEazZP9hSMu5hJQ0Z_==FpBg@mail.gmail.com>

On Sun, Oct 21, 2012 at 9:45 PM, Julian Berman <julian at grayvines.com> wrote:

> Hi.
>
> I'd like to gauge any interest in (or resistance towards) adding mock
> (http://www.voidspace.org.uk/python/mock/mock.html) as a dependency for
> the
> test suite.
>
> In short, while I don't necessarily feel strongly about behavior vs. state
> based verification being preferred in a general sense, I think both have
> their
> place when used with sensibility. (Sorry, I know that's not saying too
> much of
> substance, but I'm trying to ward off a discussion on whether or not it
> has a
> place at all if possible).
>
> The *benefit* though for me in having mock present is that it decreases the
> lines of code necessary to write stubs and mocks. While doing so is not
> really
> that difficult anyhow, it *is* just a bit more clutter to do so without
> mock,
> and the extra 3 or 4 lines mean that in more than one instance I have found
> myself pick a different strategy than I would have because of the extra
> lines
> of code that clutter the test method.
>
> To give a specific example, as I write this I'm writing tests for #6143
> (which
> will hopefully let trial drop into a debugger on an error or failure rather
> than at the outset of a test run). To do so I want to write tests that look
> like:
>
>     def test_itDebugsOnError(self):
>         result = mock.Mock()
>         exc_type, exc_value, tb = mock.Mock(), mock.Mock(), mock.Mock()
>
>         decorated = DebugDecorator(result)
>
>         with mock.patch.object(decorated, "debug") as debug:
>             decorated.addError(exc_type, exc_value, tb)
>
>         debug.assert_called_once_with(tb)
>         result.addError.assert_called_once_with(exc_type, exc_value, tb)
>
> where I want to test that the decorated test result is being used as I
> expect
> it to, and that debug is being called. Another test will test that debug
> does
> what it's supposed to, also in isolation.
>
> Of course none of the objects I used there were very interesting, but mock
> has
> similarly terse syntax for creating mocks with attributes, return values,
> etc.
> amongst a bunch of other useful features which I'll be happy to elaborate
> on if
> anyone would like, I just had the above example at hand.
>
> To add a few more notes:
>
>  - mock is in the stdlib starting with 3.3 as unittest.mock, which as I
>    understand it is the first version of Py3 for which support is planned.
> So
>    really all that'd be needed would be to add mock as a dependency on 2.X.
>
>  - it's a single file with no external deps, so installation is not
> difficult,
>    and it'd only be a dep for running the tests (and presumably only a
> subset
>    thereof that chose to use it)
>
>  - there are other mocking libraries, but I don't like any of the others as
>    much personally for various reasons.
>
>  - I'd be willing to do the small amount of work to add it if there'd be
>    interest :)
>
>
> Cheers,
> Julian
>
>
I like mock, but for me, using mocks is a method of last resort.  I don't
see a lot of need for it in internal Twisted tests (except maybe in adbapi?
 I don't know what the tests for that currently look like, but it seems a
logical place).

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/cf26cb29/attachment.htm 

From kevin.horn at gmail.com  Mon Oct 22 14:14:55 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 22 Oct 2012 13:14:55 -0500
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
Message-ID: <CA+U=zK2yEwjY=WpS_td9Y7SLeUh=KLU40WT9nPf=i+8dKbJKuw@mail.gmail.com>

On Sun, Oct 21, 2012 at 10:00 PM, Glyph <glyph at twistedmatrix.com> wrote:

> On Oct 21, 2012, at 7:45 PM, Julian Berman <julian at grayvines.com> wrote:
>
> The *benefit* though for me in having mock present is that it decreases the
> lines of code necessary to write stubs and mocks. While doing so is not
> really
> that difficult anyhow, it *is* just a bit more clutter to do so without
> mock,
> and the extra 3 or 4 lines mean that in more than one instance I have found
> myself pick a different strategy than I would have because of the extra
> lines
> of code that clutter the test method.
>
>
> This seems like a pretty small benefit; adding a new dependency affects
> lots of people and introduces a new point of failure in the installation
> process, especially for Windows users who already have a devil of a time
> getting Twisted installed.
>

I never have much trouble, of course I always have a C compiler installed
and never use the Windows installer for Twisted any more.  The main issue I
have with installing Twisted, is that in order to use any of the command
like tools I have to go in and muck with the files (I think they just have
to be renamed...been a while since I've done it), since Twisted uses the
old distutils "script" method of installing them, rather than using
setuptools/sitribute or distutils2/packaging or whatever.

This means the various command line tools get installed (IIRC and if my
info is up to date) without file extensions, which is fine in a Unixy
environment, but don't work a'tall on Windows.


> Also I don't particularly like the testing style associated with Mock.  I
> think it might discourage us yet further from writing verified fakes, i.e.
> supported in-memory implementations of things like IReactorTCP, that have
> somewhat intricate behavior that's tedious to emulate with Mock.
>
>
My experience with mock is that when you need it it's really really
obvious, and if you don't, you shouldn't start using it, as it starts to
become a crutch.


> Personally I'm -0.  Don't let that stop you from cooking up a patch that
> would include it though, I might be in the minority here.
>
> -glyph
>
>
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/9b164247/attachment-0001.htm 

From dreid at dreid.org  Mon Oct 22 14:30:52 2012
From: dreid at dreid.org (David Reid)
Date: Mon, 22 Oct 2012 11:30:52 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
Message-ID: <CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>

On Mon, Oct 22, 2012 at 10:55 AM, Duncan McGreggor <
oubiwann at twistedmatrix.com> wrote:

> On Sat, Oct 20, 2012 at 4:24 PM, Duncan McGreggor
> <oubiwann at twistedmatrix.com> wrote:
> > Hey all,
> >
> > At the sprint today, Glyph mentioned that the github repo hasn't been
> > updated recently and needs someone to maintain it regularly. He also
> > mentioned that pull requests would be accepted from github, at which
> point
> > I immediately volunteered to keep the repo up to date :-) (I can't bear
> > using svn anymore...)
> >
> > I'll be putting things in place (infrastructure, scripts, etc.) to
> assist me
> > with this, so let me know if you have any concerns, questions, ideas,
> etc.
>
> So, I've got a git repo set up for trunk of svn, and for the life of
> me, I can't merge it with the git repo on github.
>
> As such, my desire is to do a force push. *However* this would break
> github forks that everyone has made so far, based on twisted/twisted
> (the complete list is here:
> https://github.com/twisted/twisted/network/members).
>

Based on https://github.com/twisted/twisted/network

(That graph indicates that no one has actually done any substantial work
based on the old repository.)

I'm inclined to say do it.

I'm a little concerned about how you ended up with a thing that which
wasn't mergeable?  Could we start by you documenting how you created this
repo?

-David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/8b9e9727/attachment.htm 

From glyph at twistedmatrix.com  Mon Oct 22 14:49:45 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 11:49:45 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
Message-ID: <D776430E-8400-4E3F-A91C-CCF95A14BE18@twistedmatrix.com>


On Oct 22, 2012, at 11:30 AM, David Reid <dreid at dreid.org> wrote:

> I'm a little concerned about how you ended up with a thing that which wasn't mergeable?  Could we start by you documenting how you created this repo?

Also, how did powdahound create theirs?  Understanding the distinction so that other git users know how to create their repos the same way, or someone else wants to take over maintenance, would be _highly_ useful.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/0f583490/attachment.htm 

From julian at grayvines.com  Mon Oct 22 14:58:52 2012
From: julian at grayvines.com (Julian Berman)
Date: Mon, 22 Oct 2012 14:58:52 -0400
Subject: [Twisted-Python] Adding mock as a test suite dependency
Message-ID: <CABJQSknsdS9G36_rhi+3VyRaTaogjYtaMaOAhJhtPORUCpDjtg@mail.gmail.com>

From: exarkun at twistedmatrix.com

> Subject: Re: [Twisted-Python] Adding mock as a test suite dependency
>
> On 03:00 am, glyph at twistedmatrix.com wrote:
> >Also I don't particularly like the testing style associated with Mock.
> >I think it might discourage us yet further from writing verified fakes,
> >i.e. supported in-memory implementations of things like IReactorTCP,
> >that have somewhat intricate behavior that's tedious to emulate with
> >Mock.
>
> I'm also not a huge fan of the *unverified* mock style of testing.  I
> don't think anything says that mocks *have* to be unverified, though it
> seems they're often used that way.
>
> The mock library that got added to the stdlib has the notion of
> constructing a mock using another object as a template.  I haven't used
> this feature, but it seems like the intent is to at least take a step
> towards verification.  It'd be nice if someone who knows more about the
> features of this library could give some examples.
>
> In case anyone isn't clear, the problem with unverified fakes is that
> they either start out incompatible with the objects they're fakes of, or
> else they become incompatible with them over time.  Once they're
> incompatible, the tests that use them become significantly less useful,
> since they demonstrate little or nothing about what will happen when you
> try to use the code for real.
>
> Verified fakes solve this problem by adding assertions that objects and
> their fakes have the necessary overlap in either interface or
> functionality in order for the tests using them to be valid.
>
> Beyond that, considering the particular example presented, I wouldn't
> actually use mocks to test this.  The real object, the debugger, should
> be perfectly usable in unit tests.  It doesn't allocate or depend on
> expensive resources, it doesn't do network I/O, etc.  Mocks are perhaps
> an attractive nuisance that distract from coming up with a better test.
>
>
Well it seems I sidestepped behavior vs. state but fell into isolationist
vs integration :).

The reason I think even this was a reasonable example is because in the
code that this
will test, there is no dependence on an actual debugger whatsoever. What
this test should
be testing is that an object whose interface is irrelevant for the purpose
of the test was
handed off to another method in the case that that is expected.

In short, the isolationist view as I understand and have come to appreciate
says that
mocks (in a broader sense here since these aren't true mocks I guess)
aren't just for
cases where the real object is expensive or annoying to create ? they also
remove
irrelevant details from the body of the test.

That being said though, I'm still looking (read: I have not yet looked but
will do so when I
get home) for actual examples in the test suite I can point to and say that
real, actual mocks
would have helped if that's what you'd be looking for.

To go back to your first point about verification, mock has a bunch of
things there of which
if I'm truthful I only use some of them with any regularity. The thing that
sounds like what
you're referring to is likely the `spec` argument, which will do something
like:

>>> import mock
>>> from twisted.trial.itrial import ITestCase
>>> testCase = mock.Mock(spec=ITestCase.names())
>>> testCase.run
<Mock name='mock.run' id='4319309392'>
>>> testCase.jump
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File
"/usr/local/Cellar/python/2.7.3/lib/python2.7/site-packages/mock.py", line
647, in __getattr__
    raise AttributeError("Mock object has no attribute %r" % name)
AttributeError: Mock object has no attribute 'jump'


As someone mentioned you also can hand it an implementor of ITestCase too
but it will then pull
off all attributes that that object has.

There's plenty more granularity, but like anything else the design of the
test requires common sense.
If the test is meant to test how a specific method on the testCase mock is
being used then assertions
on how it was called generally seem most natural.

As an alternate approach, I've learned (from a few places I think) that in
cases where I want to verify
that the places I've mocked are being used in a way that isn't going to
differ from their actual use in the
code, that a much wider scoped test that does integrate but doesn't need to
be a unit test can be helpful,
such that there are a whole bunch of isolated tests for each piece of logic
and then one integrated test
that actually does push the real object through such that anyone who does
change the way that the two
objects interacts still will have something telling them that the tests
need updating as they would if all of
the tests integrated.

Jean-Paul
> >Personally I'm -0.  Don't let that stop you from cooking up a patch
> >that would include it though, I might be in the minority here.
> >
> >-glyph
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/da9e244d/attachment.htm 

From duncan.mcgreggor at gmail.com  Mon Oct 22 15:01:16 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:01:16 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
Message-ID: <CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>

On Mon, Oct 22, 2012 at 11:30 AM, David Reid <dreid at dreid.org> wrote:
>
>
> On Mon, Oct 22, 2012 at 10:55 AM, Duncan McGreggor
> <oubiwann at twistedmatrix.com> wrote:
>>
>> On Sat, Oct 20, 2012 at 4:24 PM, Duncan McGreggor
>> <oubiwann at twistedmatrix.com> wrote:
>> > Hey all,
>> >
>> > At the sprint today, Glyph mentioned that the github repo hasn't been
>> > updated recently and needs someone to maintain it regularly. He also
>> > mentioned that pull requests would be accepted from github, at which
>> > point
>> > I immediately volunteered to keep the repo up to date :-) (I can't bear
>> > using svn anymore...)
>> >
>> > I'll be putting things in place (infrastructure, scripts, etc.) to
>> > assist me
>> > with this, so let me know if you have any concerns, questions, ideas,
>> > etc.
>>
>> So, I've got a git repo set up for trunk of svn, and for the life of
>> me, I can't merge it with the git repo on github.
>>
>> As such, my desire is to do a force push. *However* this would break
>> github forks that everyone has made so far, based on twisted/twisted
>> (the complete list is here:
>> https://github.com/twisted/twisted/network/members).
>
>
> Based on https://github.com/twisted/twisted/network
>
> (That graph indicates that no one has actually done any substantial work
> based on the old repository.)
>
> I'm inclined to say do it.
>
> I'm a little concerned about how you ended up with a thing that which wasn't
> mergeable?  Could we start by you documenting how you created this repo?

Sure thing. All I did to build a git repo was the usual:

git svn clone svn://svn.twistedmatrix.com/svn/Twitsed/trunk twisted

All of my attempts to merge were using the local copy created by the
branch above (or by creating a clone of it with just one or two
revisions beyond what the github repo has, to minimize the commit #
and maximize the chance of a successful merge).

For instance:
 * git clone git at github.com:twisted/twisted.git twisted-github; cd
twisted-github; git pull ../twisted master

(and other variations upon that theme).

I've tried using several different merge strategies; either they
couldn't complete the merge, or they resulted in gobs of conflicts.

d


From duncan.mcgreggor at gmail.com  Mon Oct 22 15:01:48 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:01:48 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <D776430E-8400-4E3F-A91C-CCF95A14BE18@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<D776430E-8400-4E3F-A91C-CCF95A14BE18@twistedmatrix.com>
Message-ID: <CAFJQhU7BG784_Bqu_Q0-q25WLb6gzYrcMdi9udYb+R40hneXTg@mail.gmail.com>

On Mon, Oct 22, 2012 at 11:49 AM, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Oct 22, 2012, at 11:30 AM, David Reid <dreid at dreid.org> wrote:
>>
>> I'm a little concerned about how you ended up with a thing that which wasn't
>> mergeable?  Could we start by you documenting how you created this repo?
>
>
> Also, how did powdahound create theirs?  Understanding the distinction so
> that other git users know how to create their repos the same way, or someone
> else wants to take over maintenance, would be _highly_ useful.
>
> -g

Indeed, that could be illuminating.

d


From duncan.mcgreggor at gmail.com  Mon Oct 22 15:04:02 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:04:02 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
Message-ID: <CAFJQhU5k=y=XYcLjYpiuTUBb-_aXEEC=gBPUg6jJ4wA1nDNiwg@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:01 PM, Duncan McGreggor
<duncan.mcgreggor at gmail.com> wrote:
> On Mon, Oct 22, 2012 at 11:30 AM, David Reid <dreid at dreid.org> wrote:
>>
>>
>> On Mon, Oct 22, 2012 at 10:55 AM, Duncan McGreggor
>> <oubiwann at twistedmatrix.com> wrote:
>>>
>>> On Sat, Oct 20, 2012 at 4:24 PM, Duncan McGreggor
>>> <oubiwann at twistedmatrix.com> wrote:
>>> > Hey all,
>>> >
>>> > At the sprint today, Glyph mentioned that the github repo hasn't been
>>> > updated recently and needs someone to maintain it regularly. He also
>>> > mentioned that pull requests would be accepted from github, at which
>>> > point
>>> > I immediately volunteered to keep the repo up to date :-) (I can't bear
>>> > using svn anymore...)
>>> >
>>> > I'll be putting things in place (infrastructure, scripts, etc.) to
>>> > assist me
>>> > with this, so let me know if you have any concerns, questions, ideas,
>>> > etc.
>>>
>>> So, I've got a git repo set up for trunk of svn, and for the life of
>>> me, I can't merge it with the git repo on github.
>>>
>>> As such, my desire is to do a force push. *However* this would break
>>> github forks that everyone has made so far, based on twisted/twisted
>>> (the complete list is here:
>>> https://github.com/twisted/twisted/network/members).
>>
>>
>> Based on https://github.com/twisted/twisted/network
>>
>> (That graph indicates that no one has actually done any substantial work
>> based on the old repository.)
>>
>> I'm inclined to say do it.
>>
>> I'm a little concerned about how you ended up with a thing that which wasn't
>> mergeable?  Could we start by you documenting how you created this repo?
>
> Sure thing. All I did to build a git repo was the usual:
>
> git svn clone svn://svn.twistedmatrix.com/svn/Twitsed/trunk twisted
>
> All of my attempts to merge were using the local copy created by the
> branch above (or by creating a clone of it with just one or two
> revisions beyond what the github repo has, to minimize the commit #
> and maximize the chance of a successful merge).
>
> For instance:
>  * git clone git at github.com:twisted/twisted.git twisted-github; cd
> twisted-github; git pull ../twisted master
>
> (and other variations upon that theme).
>
> I've tried using several different merge strategies; either they
> couldn't complete the merge, or they resulted in gobs of conflicts.
>
> d

So I just tried something else:

git pull -s recursive -Xtheirs ../twisted master

since this was run in the github master, the "theirs" is the svn clone
master, and forcing the adoption of "theirs" resulted in many fewer
conflicts. Hundreds of fewer conflicts, maybe?

Looking into this to see if anything was broken by this approach...

d


From glyph at twistedmatrix.com  Mon Oct 22 15:22:15 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 12:22:15 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CA+U=zK1htddDFsjoQ7ciaoruKuuMK_M0E9L6gJ=vQOEiLLGvow@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
	<2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>
	<CA+U=zK1htddDFsjoQ7ciaoruKuuMK_M0E9L6gJ=vQOEiLLGvow@mail.gmail.com>
Message-ID: <176D327E-FA4F-4774-BA32-D56A83EDA73A@twistedmatrix.com>


On Oct 22, 2012, at 10:53 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> 
> 
> On Sun, Oct 21, 2012 at 11:05 PM, Glyph <glyph at twistedmatrix.com> wrote:
> On Oct 21, 2012, at 11:57 AM, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:
> 
>> I want to use git instead of svn so badly that I can taste it.
>> Hopefully this provides the motivation necessary to maintain the repo
>> :-)
> 
> 
> For what it's worth, I haven't authored a branch for Twisted with SVN in the last 3 years.  I use Bazaar almost exclusively and I get all the fun tools one generally associates with a DVCS, including offline history and a nice graphical revision viewer.  (One reason I am concerned about migrating to Git is that this will stop working; in my opinions, Git's offline GUI tools are far worse than Bazaar's - almost as much worse as Launchpad's source browser is than Github.)
> 
> I really wish I could figure out how to do this.  The one page on the wiki helps a bit, but is insufficient for those not already familiar with bzr (like me).  I've tried setting this up a couple of times, and I always end up just giving up on it.

Let me keep it super short and sweet for you:

C:\PROJEC~1> bzr branch http://svn.twistedmatrix.com/bzr/Twisted/trunk Twisted
C:\PROJEC~1> cd Twisted

as many times as desired,

C:\PROJEC~1\TWISTED> hack hack hack
C:\PROJEC~1\TWISTED> C:\python27\python.exe bin\trial twisted
C:\PROJEC~1\TWISTED> bzr commit

Review time!

C:\PROJEC~1\TWISTED> bzr send -o - > my.patch

Stick my.patch on a ticket and you're good to go.  No need for combinator, or virtualenv, or subversion (not even bzr-svn, we did that part for you), or even a C compiler, assuming the feature you're working on doesn't need one.

If any of this isn't covered in the wiki page then please update it.  And please feel free to ask more questions - if specific version control or workflow issues are preventing anyone from working on Twisted then it is definitely on-topic for this list and I will be happy to provide answers and update development documentation.

> (and no I don't recall exactly why, except for the one time when installing bzr on windows hosed my machine and made it unbootable...not Twisted's fault of course).

Can we just agree that you had a virus and that this had nothing to do with anything in this thread?  Even if that's not true I think it might be long-term more mentally healthy for you to believe :-)

> Similarly, I do code reviews by using a local 'bzr merge'.
> 
> The only weird workflow which isn't just built in to BZR-SVN is this:
> <http://twistedmatrix.com/trac/wiki/BazaarMirror#CommittingaBazaarbranchtoaSubversionbranch>.  This involves rebasing, which makes me a little sad; I wish we could preserve more history, but it works fine.
> 
> I still land branches on trunk using SVN, but that takes about ten seconds assuming you use Combinator or svnmerge.py, so I don't see that being a big impediment.  You only need to worry about that if you have commit access anyway, so that's not most external contributors.  If the need to do that to land changes is preventing you from writing them in the first place, just let me know when you have a branch to land, and I'll do it for you.
> 
> Unless someone applied my patch, Combinator won't work on Windows.  Also, since the great Divmod site meltdown, there's not good instructions on how to use it (aside from the wayback machine, which is what I've been using).
> 
> I'd never heard of svnmerge.py until you mentioned it.  Are there any instructions on how to use it with Twisted?  I'm not finding any, and I'm reluctant to experiment since Twisted has a very specific way on interacting with the SVN repo.

I guess I should test this out myself at least once, but my understanding is that you just do svnmerge.py --bidirectional -S the-branch-you-want-to-merge in trunk.  You can test this out for yourself though, since svnmerge.py is loudly advertised as "commit-free": you always have to do the commit yourself.

More info here: <http://www.orcaware.com/svn/wiki/Svnmerge.py>.

If we can ever upgrade to a version of SVN on the server that supports merge-tracking, the need for either of these tools will go away since a plain 'svn merge ../branches/branchname' will do the right thing.  Any volunteer sysadmins want to take the opportunity to crawl out of the woodwork?  (Please?)

But again: if you have trouble with this part, please just drop an email to the list and I will do it for you.  Do not let this minor step be an impediment to contributing to Twisted.

> You don't need to use SVN, you haven't needed to use SVN since git-svn came into existence, and we've had several threads on this list before about improving the Git instructions here: <http://twistedmatrix.com/trac/wiki/GitMirror>.  If you look at the history for that page, you can see that it is two years old, and originally created by exarkun, who is not a git user himself.
> 
> So, it strikes me as a bit odd, and I am a bit dismayed that anyone would have been put off of by the need to use Subversion when working with Twisted since you can use Git or Bazaar - or, I assume, Mercurial - right now.
> 
> Presumably you could use Mercurial with the hggit plugin against a git repo, but you can't use it directly against the SVN repo, as it has a bad commit in it that hgsubversion totally chokes on: https://bitbucket.org/durin42/hgsubversion/issue/350 

Sadness.  Hopefully this renewed attention will get the mercurial folks to fix this bug sooner?  Thanks for filing it.

> I would find it a bit more understandable if you are dismayed by the need to use Trac, which is harder to avoid when working on Twisted.  For various reasons - which I hope we don't have to discuss right now - we aren't going to move the project to Github any time soon, so if anyone reading this thread is interested in alleviating some of the pain with Trac, <https://launchpad.net/frack> is a good place to get involved to help out.  There are some pretty straightforward bugs that anyone interested could fix there.
> 
> Frack is already up and running on twistedmatrix.com, albeit at a weird URL.  See, for example, <http://twistedmatrix.com/users/frack.twistd/ui/ticket.html?id=1956>. This might be useful because it is a considerably faster ticket-viewer than Trac, do to its somewhat more parsimonious issuance of SQL queries.
> 
> -glyph
> 
> 
> Trac has never really bothered me that much. Yes, occasionally it will do something stupid, and it's...not fast, but I guess I'm just used to the pain.  I'm looking forward to Frack, though.

Great, glad to hear it.

By the way, if you've been shying away because it's slow, you should know that we did recently fix a major performance problem with the website.  Bots were running amok on some very CPU and memory intensive requests, and robots.txt was not deployed correctly so it wasn't reducing any of the traffic as it should have.  At the most recent sprint nobody complained about being unable to work because of the website falling over, which indicates that some of our more dire problems are now under control.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/5d78672a/attachment.htm 

From glyph at twistedmatrix.com  Mon Oct 22 15:23:30 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 12:23:30 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
Message-ID: <EA8E456C-113D-4C85-ACF1-8C0319DC8ED2@twistedmatrix.com>


On Oct 22, 2012, at 12:01 PM, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:

> Sure thing. All I did to build a git repo was the usual:
> 
> git svn clone svn://svn.twistedmatrix.com/svn/Twitsed/trunk twisted

The spelling error in this command makes me think that maybe you didn't copy the command exactly from wherever you did it? ;-)

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/7927f766/attachment-0001.htm 

From glyph at twistedmatrix.com  Mon Oct 22 15:30:49 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 12:30:49 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
Message-ID: <7139FEFC-9DF1-4E6D-BC90-29D4DFB5643D@twistedmatrix.com>

On Oct 22, 2012, at 12:01 PM, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:

> ... the local copy ...

I should also say that I think it's very important to set up a documented, automated process, ideally on the twistedmatrix.com infrastructure somewhere, that will do the pull and update and stuff.  There's already a git mirror on wolfwood in /var/www/git/Twisted.  I have no idea why it's not being automatically updated.

For example, there's a post-commit hook that updates the bzr mirror, so it's always up to date.  See wolfwood:/svn/Twisted/hooks/post-commit for the details of how that works.

A post-commit hook might not be appropriate for git; so you might want to queue up changes for a cron job.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/7e5b74c2/attachment.htm 

From duncan.mcgreggor at gmail.com  Mon Oct 22 15:39:23 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:39:23 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <EA8E456C-113D-4C85-ACF1-8C0319DC8ED2@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
	<EA8E456C-113D-4C85-ACF1-8C0319DC8ED2@twistedmatrix.com>
Message-ID: <CAFJQhU6apmgGOvspf3hZTT83eN9wG8ua93DseWg4H7EJ+L_RHQ@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:23 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Oct 22, 2012, at 12:01 PM, Duncan McGreggor <duncan.mcgreggor at gmail.com>
> wrote:
>
> Sure thing. All I did to build a git repo was the usual:
>
> git svn clone svn://svn.twistedmatrix.com/svn/Twitsed/trunk twisted
>
>
> The spelling error in this command makes me think that maybe you didn't copy
> the command exactly from wherever you did it? ;-)

That's correct -- I manually typed it in the email (I'm using xterm on
stumpwm in XQuartz, and haven't gotten bidirectional copy/paste set up
yet).

d


From duncan.mcgreggor at gmail.com  Mon Oct 22 15:46:41 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:46:41 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <7139FEFC-9DF1-4E6D-BC90-29D4DFB5643D@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
	<7139FEFC-9DF1-4E6D-BC90-29D4DFB5643D@twistedmatrix.com>
Message-ID: <CAFJQhU7MfHn5uvfhqjYUU8ZfHZOc=SAe7Yc0o2Rb23cAXiwvpQ@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:30 PM, Glyph <glyph at twistedmatrix.com> wrote:
> On Oct 22, 2012, at 12:01 PM, Duncan McGreggor <duncan.mcgreggor at gmail.com>
> wrote:
>>
>> ... the local copy ...
>>
>
> I should also say that I think it's very important to set up a documented,
> automated process,

Agreed.

> ideally on the twistedmatrix.com infrastructure
> somewhere, that will do the pull and update and stuff.

Excellent. I'll check to see if I have access to these.

> There's already a
> git mirror on wolfwood in /var/www/git/Twisted.

Now *that's* good information to have ;-)

> I have no idea why it's not
> being automatically updated.
>
> For example, there's a post-commit hook that updates the bzr mirror, so it's
> always up to date.  See wolfwood:/svn/Twisted/hooks/post-commit for the
> details of how that works.

Sweet. This is the sort of thing I need.

d

> A post-commit hook might not be appropriate for git; so you might want to
> queue up changes for a cron job.
>
> -glyph
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From oubiwann at twistedmatrix.com  Mon Oct 22 15:48:56 2012
From: oubiwann at twistedmatrix.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:48:56 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU5k=y=XYcLjYpiuTUBb-_aXEEC=gBPUg6jJ4wA1nDNiwg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
	<CAFJQhU5k=y=XYcLjYpiuTUBb-_aXEEC=gBPUg6jJ4wA1nDNiwg@mail.gmail.com>
Message-ID: <CAFJQhU7-r05LzT_afrtd9q+8qQwrhzifN0N4OvnA+dwQVtUP-w@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:04 PM, Duncan McGreggor
<duncan.mcgreggor at gmail.com> wrote:
> On Mon, Oct 22, 2012 at 12:01 PM, Duncan McGreggor
> <duncan.mcgreggor at gmail.com> wrote:
>> On Mon, Oct 22, 2012 at 11:30 AM, David Reid <dreid at dreid.org> wrote:
>>>
>>>
>>> On Mon, Oct 22, 2012 at 10:55 AM, Duncan McGreggor
>>> <oubiwann at twistedmatrix.com> wrote:
>>>>
>>>> On Sat, Oct 20, 2012 at 4:24 PM, Duncan McGreggor
>>>> <oubiwann at twistedmatrix.com> wrote:
>>>> > Hey all,
>>>> >
>>>> > At the sprint today, Glyph mentioned that the github repo hasn't been
>>>> > updated recently and needs someone to maintain it regularly. He also
>>>> > mentioned that pull requests would be accepted from github, at which
>>>> > point
>>>> > I immediately volunteered to keep the repo up to date :-) (I can't bear
>>>> > using svn anymore...)
>>>> >
>>>> > I'll be putting things in place (infrastructure, scripts, etc.) to
>>>> > assist me
>>>> > with this, so let me know if you have any concerns, questions, ideas,
>>>> > etc.
>>>>
>>>> So, I've got a git repo set up for trunk of svn, and for the life of
>>>> me, I can't merge it with the git repo on github.
>>>>
>>>> As such, my desire is to do a force push. *However* this would break
>>>> github forks that everyone has made so far, based on twisted/twisted
>>>> (the complete list is here:
>>>> https://github.com/twisted/twisted/network/members).
>>>
>>>
>>> Based on https://github.com/twisted/twisted/network
>>>
>>> (That graph indicates that no one has actually done any substantial work
>>> based on the old repository.)
>>>
>>> I'm inclined to say do it.
>>>
>>> I'm a little concerned about how you ended up with a thing that which wasn't
>>> mergeable?  Could we start by you documenting how you created this repo?
>>
>> Sure thing. All I did to build a git repo was the usual:
>>
>> git svn clone svn://svn.twistedmatrix.com/svn/Twitsed/trunk twisted
>>
>> All of my attempts to merge were using the local copy created by the
>> branch above (or by creating a clone of it with just one or two
>> revisions beyond what the github repo has, to minimize the commit #
>> and maximize the chance of a successful merge).
>>
>> For instance:
>>  * git clone git at github.com:twisted/twisted.git twisted-github; cd
>> twisted-github; git pull ../twisted master
>>
>> (and other variations upon that theme).
>>
>> I've tried using several different merge strategies; either they
>> couldn't complete the merge, or they resulted in gobs of conflicts.
>>
>> d
>
> So I just tried something else:
>
> git pull -s recursive -Xtheirs ../twisted master
>
> since this was run in the github master, the "theirs" is the svn clone
> master, and forcing the adoption of "theirs" resulted in many fewer
> conflicts. Hundreds of fewer conflicts, maybe?
>
> Looking into this to see if anything was broken by this approach...
>
> d

It seems that the topfiles were mostly affected by this. Some deleted
files git didn't know what do to with. But then I noticed that other
files that had been modified weren't included in the change set.

*sighs*

As a sanity check, I did a local rsync, and sure enough, there are a
bunch of files that didn't get merged using the strategy above that
were changed in the svn repo.

I'll put this part of the effort on hold, and take a look at the repo
mirror that Glyph pointed me to in his most recent email...

d


From ltaylor.volks at gmail.com  Mon Oct 22 16:09:43 2012
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Mon, 22 Oct 2012 15:09:43 -0500
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
	<20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
	<CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>
	<AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>
Message-ID: <64D743A0-ECF9-4BBA-A80D-C85B74DBE422@gmail.com>


On Oct 21, 2012, at 11:05 PM, Glyph wrote:

>> 
>> The few times I've tried to contributed to Twisted, svn was actually a big barrier. Trying to update my patches so that I'm sure the tests pass on trunk produced mysterious merge conflicts in files I've never touched. Maybe I'm bad at svn, but it's never worked well for me.
> 
> Why aren't you just using git for local development then?  You don't have commit access, so you should never need to touch an svn client other than git if you don't feel like it.
> 
> This is not entirely a rhetorical question.  We have always tried to be accommodating to DVCS users, providing instructions and repeated requests for both a plain git and/or a github ambassador to keep svn nicely synchronized and reduce the friction required for users of those tools to make contributions.  If the documentation we've offered on <http://twistedmatrix.com/trac/wiki/GitMirror> is in any way incorrect or non-optimal, please don't hesitate to say exactly what would be better.  If you need wiki edit permission to update the page, I'll gladly give it to you.
> 
> -glyph


I think there are a few issues with the documentation, from the standpoint of an infrequent contributor:

    ? It appears that you have to go "all in" with svn if you want to contribute, when that isn't actually the case

    ? <http://twistedmatrix.com/trac/wiki/GitMirror> is not terribly easy to find.
 	? It does come up in search, but is otherwise not easily accessible when you're spelunking for info on how to contribute
	? The page with the links has it as a parenthetical aside <http://twistedmatrix.com/trac/wiki/TwistedDevelopment>

    ? Casual contributors should have a different story than core committers, but the distinction isn't always prominent
		? <http://twistedmatrix.com/trac/wiki/GitMirror> makes this distinction, which is good
		? <http://twistedmatrix.com/trac/wiki/BazaarMirror> does not.


For what it's worth, I've been using Mercurial patch queues to manage a couple of infrequent, small contributions. It works pretty well and doesn't rely on svn history or an svn bridge. That's not terribly interesting, but the point is that there are probably other workflows that are effective and it would be useful if they could be documented and shared easily.

I created a ticket to address some of these points and carry on the docs discussion elsewhere. If it seems like a good idea I'll work on updating the wiki.
http://twistedmatrix.com/trac/ticket/6154


Lucas Taylor




From kevin.horn at gmail.com  Mon Oct 22 19:54:46 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 22 Oct 2012 18:54:46 -0500
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <176D327E-FA4F-4774-BA32-D56A83EDA73A@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
	<2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>
	<CA+U=zK1htddDFsjoQ7ciaoruKuuMK_M0E9L6gJ=vQOEiLLGvow@mail.gmail.com>
	<176D327E-FA4F-4774-BA32-D56A83EDA73A@twistedmatrix.com>
Message-ID: <CA+U=zK3pUjbGoq1uuXo0xT9dGuLygQ_HKF2J1-oAApw7o=O7yQ@mail.gmail.com>

On Mon, Oct 22, 2012 at 2:22 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Oct 22, 2012, at 10:53 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>
> On Sun, Oct 21, 2012 at 11:05 PM, Glyph <glyph at twistedmatrix.com> wrote:
>>
>>
>> For what it's worth, I haven't authored a branch for Twisted with SVN in
>> the last 3 years.  I use Bazaar almost exclusively and I get all the fun
>> tools one generally associates with a DVCS, including offline history and a
>> nice graphical revision viewer.  (One reason I am concerned about migrating
>> to Git is that this will stop working; in my opinions, Git's offline GUI
>> tools are far worse than Bazaar's - almost as much worse as Launchpad's
>> source browser is than Github.)
>>
>
> I really wish I could figure out how to do this.  The one page on the wiki
> helps a bit, but is insufficient for those not already familiar with bzr
> (like me).  I've tried setting this up a couple of times, and I always end
> up just giving up on it.
>
>
> Let me keep it super short and sweet for you:
>
> C:\PROJEC~1> bzr branch http://svn.twistedmatrix.com/bzr/Twisted/trunkTwisted
> C:\PROJEC~1> cd Twisted
>
> as many times as desired,
>
> C:\PROJEC~1\TWISTED> hack hack hack
>
> C:\PROJEC~1\TWISTED> C:\python27\python.exe bin\trial twisted
>
> C:\PROJEC~1\TWISTED> bzr commit
>
>
> Review time!
>
> C:\PROJEC~1\TWISTED> bzr send -o - > my.patch
>
> Stick my.patch on a ticket and you're good to go.  No need for combinator,
> or virtualenv, or subversion (not even bzr-svn, we did that part for you),
> or even a C compiler, assuming the feature you're working on doesn't need
> one.
>
> If any of this isn't covered in the wiki page then please update it.  And
> please feel free to ask more questions - if specific version control or
> workflow issues are preventing anyone from working on Twisted then it is
> definitely on-topic for this list and I will be happy to provide answers
> and update development documentation.
>
>
See that should totally be on a wiki page someplace.

I'd be happy to put it up there, but I don't have edit permissions on that
page (or any of them?) apparently...


> (and no I don't recall exactly why, except for the one time when
> installing bzr on windows hosed my machine and made it unbootable...not
> Twisted's fault of course).
>
>
> Can we just agree that you had a virus and that this had nothing to do
> with anything in this thread?  Even if that's not true I think it might be
> long-term more mentally healthy for you to believe :-)
>
>
Actually I know exactly why this happened, and it's because Windows has a
hard limit on the number of "icon overlays" you can add to Explorer.  I
installed TortoiseBzr along with bzr, and went over that limit.  This by
itself is not such a big deal, but it turns out that the failure behavior
of this particular issue is NOT BOOTING ANY MORE. (stupid Windows)

(FYI, I've since installed bzr again, and have had no similar problems.)

(also FYI, I haven't had a virus/spyware on a windows machine that I owned
in more than 10 years...<knock on wood>...the trick is renaming the
iexplore.exe executable...)

But aside from that, the couple of times I've tried messing around with bzr
I end up going in circles in their documentation, can't decide what I
should be doing, decide I don't have time to mess with it and just go back
to SVN (which is painful).  Of course by that time I've usually gotten
distracted and I never finish whatever it was I was working on...

Mostly these days I just bang my head against translating the Lore docs
into Sphinx (yes, I'm _still_ working on that).

Unless someone applied my patch, Combinator won't work on Windows.  Also,
> since the great Divmod site meltdown, there's not good instructions on how
> to use it (aside from the wayback machine, which is what I've been using).
>
> I'd never heard of svnmerge.py until you mentioned it.  Are there any
> instructions on how to use it with Twisted?  I'm not finding any, and I'm
> reluctant to experiment since Twisted has a very specific way on
> interacting with the SVN repo.
>
>
> I guess I should test this out myself at least once, but my understanding
> is that you just do svnmerge.py --bidirectional -S
> the-branch-you-want-to-merge in trunk.  You can test this out for yourself
> though, since svnmerge.py is loudly advertised as "commit-free": you always
> have to do the commit yourself.
>
> More info here: <http://www.orcaware.com/svn/wiki/Svnmerge.py>.
>
>
Hmmm...interesting.


> If we can ever upgrade to a version of SVN on the server that supports
> merge-tracking, the need for either of these tools will go away since a
> plain 'svn merge ../branches/branchname' will do the right thing.  Any
> volunteer sysadmins want to take the opportunity to crawl out of the
> woodwork?  (Please?)
>
>
I had no idea that Twisted was still using such an old version.  I was
under the impression that the hackery that Combinator used was incompatible
with the new merge tracking and that's why it wasn't being used (because it
would screw up those still using Combinator...this assumes there are any).
 If that's not true, perhaps I can take a look, though I likely wouldn't be
able to devote any serious time to it until at least Mid-November.


> But again: if you have trouble with this part, please just drop an email
> to the list and I will do it for you.  Do not let this minor step be an
> impediment to contributing to Twisted.
>

My _major_ impediments are 2 and 6 years old... :)  The above is at most a
_minor_ impediment.  But even minor impediments can drive away new
developers, which I assume is not what we want.

Presumably you could use Mercurial with the hggit plugin against a git
>> repo, but you can't use it directly against the SVN repo, as it has a bad
>> commit in it that hgsubversion totally chokes on:
>> https://bitbucket.org/durin42/hgsubversion/issue/350
>>
>
> Sadness.  Hopefully this renewed attention will get the mercurial folks to
> fix this bug sooner?  Thanks for filing it.
>

De nada...it was entirely self-interest-driven though. :)

>
> Trac has never really bothered me that much. Yes, occasionally it will do
> something stupid, and it's...not fast, but I guess I'm just used to the
> pain.  I'm looking forward to Frack, though.
>
>
> Great, glad to hear it.
>
> By the way, if you've been shying away because it's slow, you should know
> that we did recently fix a major performance problem with the website.
>  Bots were running amok on some very CPU and memory intensive requests, and
> robots.txt was not deployed correctly so it wasn't reducing any of the
> traffic as it should have.  At the most recent sprint nobody complained
> about being unable to work because of the website falling over, which
> indicates that some of our more dire problems are now under control.
>
> -glyph
>

I haven't noticed any real problems with it since the grand trac revamp a
couple years ago, when Twisted's Trac instance became mostly stable.
 Granted I'm not in there every day like some are...

--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/ea949c84/attachment-0001.htm 

From glyph at twistedmatrix.com  Mon Oct 22 20:45:09 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 17:45:09 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CA+U=zK3pUjbGoq1uuXo0xT9dGuLygQ_HKF2J1-oAApw7o=O7yQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
	<2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>
	<CA+U=zK1htddDFsjoQ7ciaoruKuuMK_M0E9L6gJ=vQOEiLLGvow@mail.gmail.com>
	<176D327E-FA4F-4774-BA32-D56A83EDA73A@twistedmatrix.com>
	<CA+U=zK3pUjbGoq1uuXo0xT9dGuLygQ_HKF2J1-oAApw7o=O7yQ@mail.gmail.com>
Message-ID: <60369106-22E6-4BF2-9DDA-EF9B3EC346C7@twistedmatrix.com>


On Oct 22, 2012, at 4:54 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Mon, Oct 22, 2012 at 2:22 PM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> On Oct 22, 2012, at 10:53 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>> 
>> On Sun, Oct 21, 2012 at 11:05 PM, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>> For what it's worth, I haven't authored a branch for Twisted with SVN in the last 3 years.  I use Bazaar almost exclusively and I get all the fun tools one generally associates with a DVCS, including offline history and a nice graphical revision viewer.  (One reason I am concerned about migrating to Git is that this will stop working; in my opinions, Git's offline GUI tools are far worse than Bazaar's - almost as much worse as Launchpad's source browser is than Github.)
>> 
>> I really wish I could figure out how to do this.  The one page on the wiki helps a bit, but is insufficient for those not already familiar with bzr (like me).  I've tried setting this up a couple of times, and I always end up just giving up on it.
> 
> Let me keep it super short and sweet for you:
> 
> C:\PROJEC~1> bzr branch http://svn.twistedmatrix.com/bzr/Twisted/trunk Twisted
> C:\PROJEC~1> cd Twisted
> 
> as many times as desired,
> 
> C:\PROJEC~1\TWISTED> hack hack hack
> C:\PROJEC~1\TWISTED> C:\python27\python.exe bin\trial twisted
> C:\PROJEC~1\TWISTED> bzr commit
> 
> Review time!
> 
> C:\PROJEC~1\TWISTED> bzr send -o - > my.patch
> 
> Stick my.patch on a ticket and you're good to go.  No need for combinator, or virtualenv, or subversion (not even bzr-svn, we did that part for you), or even a C compiler, assuming the feature you're working on doesn't need one.
> 
> If any of this isn't covered in the wiki page then please update it.  And please feel free to ask more questions - if specific version control or workflow issues are preventing anyone from working on Twisted then it is definitely on-topic for this list and I will be happy to provide answers and update development documentation.
> 
> 
> See that should totally be on a wiki page someplace.
> 
> I'd be happy to put it up there, but I don't have edit permissions on that page (or any of them?) apparently...

You're a trac admin now.  Enjoy; don't mess anything up too bad.

>  
>> (and no I don't recall exactly why, except for the one time when installing bzr on windows hosed my machine and made it unbootable...not Twisted's fault of course).
> 
> Can we just agree that you had a virus and that this had nothing to do with anything in this thread?  Even if that's not true I think it might be long-term more mentally healthy for you to believe :-)
> 
> 
> Actually I know exactly why this happened, and it's because Windows has a hard limit on the number of "icon overlays" you can add to Explorer.  I installed TortoiseBzr along with bzr, and went over that limit.  This by itself is not such a big deal, but it turns out that the failure behavior of this particular issue is NOT BOOTING ANY MORE. (stupid Windows)
> 
> (FYI, I've since installed bzr again, and have had no similar problems.)
> 
> (also FYI, I haven't had a virus/spyware on a windows machine that I owned in more than 10 years...<knock on wood>...the trick is renaming the iexplore.exe executable...)
> 
> But aside from that, the couple of times I've tried messing around with bzr I end up going in circles in their documentation, can't decide what I should be doing, decide I don't have time to mess with it and just go back to SVN (which is painful).  Of course by that time I've usually gotten distracted and I never finish whatever it was I was working on...
> 
> Mostly these days I just bang my head against translating the Lore docs into Sphinx (yes, I'm _still_ working on that).

Glad to hear this is still moving along, however glacially.

>> Unless someone applied my patch, Combinator won't work on Windows.  Also, since the great Divmod site meltdown, there's not good instructions on how to use it (aside from the wayback machine, which is what I've been using).
>> 
>> I'd never heard of svnmerge.py until you mentioned it.  Are there any instructions on how to use it with Twisted?  I'm not finding any, and I'm reluctant to experiment since Twisted has a very specific way on interacting with the SVN repo.
> 
> I guess I should test this out myself at least once, but my understanding is that you just do svnmerge.py --bidirectional -S the-branch-you-want-to-merge in trunk.  You can test this out for yourself though, since svnmerge.py is loudly advertised as "commit-free": you always have to do the commit yourself.
> 
> More info here: <http://www.orcaware.com/svn/wiki/Svnmerge.py>.
> 
> 
> Hmmm...interesting.
>  
> If we can ever upgrade to a version of SVN on the server that supports merge-tracking, the need for either of these tools will go away since a plain 'svn merge ../branches/branchname' will do the right thing.  Any volunteer sysadmins want to take the opportunity to crawl out of the woodwork?  (Please?)
> 
> 
> I had no idea that Twisted was still using such an old version.  I was under the impression that the hackery that Combinator used was incompatible with the new merge tracking and that's why it wasn't being used (because it would screw up those still using Combinator...this assumes there are any).  If that's not true, perhaps I can take a look, though I likely wouldn't be able to devote any serious time to it until at least Mid-November.

Nope, Combinator will keep working just fine if we upgrade.  Something to do with the subversion database itself, I think.... I don't know the details.  I really don't want to get sucked into maintaining that part of the infrastructure; anyone who would agrees with me and would like to keep me focused on the parts of Twisted which actually need my particular skills and knowledge (documentation for Deferreds, especially cancellation; Tubes, reactor improvements) would be advised to volunteer :).

> But again: if you have trouble with this part, please just drop an email to the list and I will do it for you.  Do not let this minor step be an impediment to contributing to Twisted.
> 
> My _major_ impediments are 2 and 6 years old... :)  The above is at most a _minor_ impediment.  But even minor impediments can drive away new developers, which I assume is not what we want.

Actually, we have tons of patches in the queue to review.  The main thing right now is not attracting new developers, but convincing developers who are already active in the project to do code review.  If every developer with a commit bit did one code review every week, I believe we'd be in great shape right now in terms of both the number of features being added, bugs being fixed, and the experience of the average new contributor.

Of course, that would itself attract more contributors until we reached the equilibrium of tickets hanging out for months with no reviews again ;-).  But we'd be getting hundreds more tickets into a state where they can make progress.

I think we can all agree, though, that the most frustrating part of this whole process is the waiting.  If code reviews were all instantaneous, it would be a lot less grating to have to deal with our respective pet peeves in the version control or ticket tracking infrastructure.

So please, if you're qualified to do code reviews for Twisted, hop on #twisted-dev and try to do just one a week.  It would make a _huge_ difference.

>> Presumably you could use Mercurial with the hggit plugin against a git repo, but you can't use it directly against the SVN repo, as it has a bad commit in it that hgsubversion totally chokes on: https://bitbucket.org/durin42/hgsubversion/issue/350 
> 
> Sadness.  Hopefully this renewed attention will get the mercurial folks to fix this bug sooner?  Thanks for filing it.
> 
> De nada...it was entirely self-interest-driven though. :)

Let's hope it pays off.

>> 
>> Trac has never really bothered me that much. Yes, occasionally it will do something stupid, and it's...not fast, but I guess I'm just used to the pain.  I'm looking forward to Frack, though.
> 
> Great, glad to hear it.
> 
> By the way, if you've been shying away because it's slow, you should know that we did recently fix a major performance problem with the website.  Bots were running amok on some very CPU and memory intensive requests, and robots.txt was not deployed correctly so it wasn't reducing any of the traffic as it should have.  At the most recent sprint nobody complained about being unable to work because of the website falling over, which indicates that some of our more dire problems are now under control.
> 
> -glyph
> 
> I haven't noticed any real problems with it since the grand trac revamp a couple years ago, when Twisted's Trac instance became mostly stable.  Granted I'm not in there every day like some are...

Well, personally, I can tell you it's way better than it was a few months ago ;-).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121022/8b16923b/attachment.htm 

From johnaherne at rocs.co.uk  Tue Oct 23 04:23:47 2012
From: johnaherne at rocs.co.uk (John Aherne)
Date: Tue, 23 Oct 2012 09:23:47 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
Message-ID: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>

I have been looking at running some twisted programs as a windows service.

So in the end I took a copy of twistd.py and adapted it to load my tac file
and run it as a windows service.

Of course the windows service will run it in a separate thread.

I now have it running on XP, 2003 Server Twisted 10 and 12 and it all
seemed fine.

However when I install it on Windows 7 I get an error

2012-10-23 07:54:49+0100 [-] Unhandled Error
Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 413,
in fireEvent
    DeferredList(beforeResults).addCallback(self._continueFiring)
  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 297,
in addCallback
    callbackKeywords=kw)
  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 286,
in addCallbacks
    self._runCallbacks()
  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 542,
in _runCallbacks
    current.result = callback(current.result, *args, **kw)
--- <exception caught here> ---
  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 426,
in _continueFiring
    callable(*args, **kwargs)
  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 1153,
in _reallyStartRunning
    self._handleSignals()
  File "C:\Python27\lib\site-packages\twisted\internet\posixbase.py", line
277, in _handleSignals
    _SignalReactorMixin._handleSignals(self)
  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 1118,
in _handleSignals
    signal.signal(signal.SIGINT, self.sigInt)
exceptions.ValueError: signal only works in main thread


Looking around it would seem I need to tell the reactor
 'installsignalhandlers=0'. I am not sure if I should do this with windows
or not.

Has anyone got twistd.py to run as a service on windows because I would be
glad to know what other people have done to solve the problem.

Thanks for any info.

*John Aherne*
*
*
*
*
*
*
*www.rocs.co.uk
*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121023/b048786e/attachment-0001.htm 

From lacrima.maxim at gmail.com  Tue Oct 23 04:43:01 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Tue, 23 Oct 2012 11:43:01 +0300
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
Message-ID: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>

Hi!

I tried to run twisted test suite. And there are some errors:
http://pastebin.com/em3NTN2B

Also tests in "twisted.test.test_udp" took too much time to run (trial
hanged for a couple of minutes on these tests).

I wonder if this is something wrong with my Twisted installation.

Thank you.

-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121023/47ec410e/attachment.htm 

From lacrima.maxim at gmail.com  Tue Oct 23 05:11:52 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Tue, 23 Oct 2012 12:11:52 +0300
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
In-Reply-To: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
Message-ID: <CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>

I believe in my previous post I launched tests incorrectly (I use twisted
with virtualenv, but I didn't activate it).

Now I run `trial twisted` in the activated virtualenv... But there are
still errors:
http://pastebin.com/6065dX6a

Thanks

On 23 October 2012 11:43, Maxim Lacrima <lacrima.maxim at gmail.com> wrote:

> Hi!
>
> I tried to run twisted test suite. And there are some errors:
> http://pastebin.com/em3NTN2B
>
> Also tests in "twisted.test.test_udp" took too much time to run (trial
> hanged for a couple of minutes on these tests).
>
> I wonder if this is something wrong with my Twisted installation.
>
> Thank you.
>
> --
> with regards,
> Maxim
>



-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121023/2d0e734b/attachment.htm 

From itamar at futurefoundries.com  Tue Oct 23 07:10:32 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 23 Oct 2012 07:10:32 -0400
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
In-Reply-To: <CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
	<CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
Message-ID: <CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>

On Tue, Oct 23, 2012 at 5:11 AM, Maxim Lacrima <lacrima.maxim at gmail.com>wrote:

> I believe in my previous post I launched tests incorrectly (I use twisted
> with virtualenv, but I didn't activate it).
>
> Now I run `trial twisted` in the activated virtualenv... But there are
> still errors:
> http://pastebin.com/6065dX6a
>

Which operating system, and what sort of environment? The UDP failures
suggest some sort of firewalling.

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ ? Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121023/e5d803cc/attachment.htm 

From lacrima.maxim at gmail.com  Tue Oct 23 07:31:16 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Tue, 23 Oct 2012 14:31:16 +0300
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
In-Reply-To: <CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
	<CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
	<CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>
Message-ID: <CAKef57PN_Sjx44Jof7_3OYp0ps_GpeKdp+c0rd4tzVBt8eaxig@mail.gmail.com>

>
>
> Which operating system, and what sort of environment? The UDP failures
> suggest some sort of firewalling.
>

CentOS 6.2.

I use Twisted inside virtualenv http://www.virtualenv.org/en/latest/

Currently, Twisted is the only package installed inside virtual
environment, where I run tests.

I don't know much about my global environment, since I am on corporate
machine and have limited privileges.

-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121023/41c8074c/attachment.htm 

From exarkun at twistedmatrix.com  Tue Oct 23 07:41:19 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 23 Oct 2012 11:41:19 -0000
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
Message-ID: <20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>

On 08:23 am, johnaherne at rocs.co.uk wrote:
>I have been looking at running some twisted programs as a windows 
>service.
>
>So in the end I took a copy of twistd.py and adapted it to load my tac 
>file
>and run it as a windows service.
>
>Of course the windows service will run it in a separate thread.
>
>I now have it running on XP, 2003 Server Twisted 10 and 12 and it all
>seemed fine.

To start off with, I'll point out that this isn't a supported mode of 
running Twisted (which I'm sure you noticed already :).

This feature has been requested several times and worked on by a couple 
people, but not quite to the point of completion.

Here's a related ticket:

    http://twistedmatrix.com/trac/ticket/4073

There's also some more code in the sandbox:

    http://twistedmatrix.com/trac/browser/sandbox/moonfallen

BuildBot also has some code, though I'm not exactly sure where it is. 
It would be really great for someone to actually complete and generalize 
one or more of these initial attempts so that Windows service 
integration could be a real, working feature. :)
>However when I install it on Windows 7 I get an error
>
>2012-10-23 07:54:49+0100 [-] Unhandled Error
>Traceback (most recent call last):
>  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 
>413,
>in fireEvent
>    DeferredList(beforeResults).addCallback(self._continueFiring)
>  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 
>297,
>in addCallback
>    callbackKeywords=kw)
>  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 
>286,
>in addCallbacks
>    self._runCallbacks()
>  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 
>542,
>in _runCallbacks
>    current.result = callback(current.result, *args, **kw)
>--- <exception caught here> ---
>  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 
>426,
>in _continueFiring
>    callable(*args, **kwargs)
>  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 
>1153,
>in _reallyStartRunning
>    self._handleSignals()
>  File "C:\Python27\lib\site-packages\twisted\internet\posixbase.py", 
>line
>277, in _handleSignals
>    _SignalReactorMixin._handleSignals(self)
>  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 
>1118,
>in _handleSignals
>    signal.signal(signal.SIGINT, self.sigInt)
>exceptions.ValueError: signal only works in main thread
>
>
>Looking around it would seem I need to tell the reactor
>'installsignalhandlers=0'. I am not sure if I should do this with 
>windows
>or not.

Yes, you'll need to do that.  It probably won't even break child process 
support (although other aspects of Windows services probably will). 
Notice it's failing on installing a SIGINT handler - ie, a Control-C 
handler.  Since you want the thing to run as a service, you probably 
aren't very interested in having Control-C do anything.

Jean-Paul
>Has anyone got twistd.py to run as a service on windows because I would 
>be
>glad to know what other people have done to solve the problem.
>
>Thanks for any info.
>
>*John Aherne*


From exarkun at twistedmatrix.com  Tue Oct 23 07:44:22 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 23 Oct 2012 11:44:22 -0000
Subject: [Twisted-Python] Running twisted test suite produces errors and
 hangs
In-Reply-To: <CAKef57PN_Sjx44Jof7_3OYp0ps_GpeKdp+c0rd4tzVBt8eaxig@mail.gmail.com>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
	<CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
	<CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>
	<CAKef57PN_Sjx44Jof7_3OYp0ps_GpeKdp+c0rd4tzVBt8eaxig@mail.gmail.com>
Message-ID: <20121023114422.4518.1023961593.divmod.xquotient.32@localhost6.localdomain6>

On 11:31 am, lacrima.maxim at gmail.com wrote:
>>
>>
>>Which operating system, and what sort of environment? The UDP failures
>>suggest some sort of firewalling.
>
>CentOS 6.2.

RHEL and derivatives typically seem to, by default, include a firewall 
configuration that drops multicast traffic, so perhaps that's what 
you're seeing.

Jean-Paul
>I use Twisted inside virtualenv http://www.virtualenv.org/en/latest/
>
>Currently, Twisted is the only package installed inside virtual
>environment, where I run tests.
>
>I don't know much about my global environment, since I am on corporate
>machine and have limited privileges.
>
>--
>with regards,
>Maxim


From itamar at futurefoundries.com  Tue Oct 23 09:35:48 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 23 Oct 2012 09:35:48 -0400
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
In-Reply-To: <20121023114422.4518.1023961593.divmod.xquotient.32@localhost6.localdomain6>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
	<CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
	<CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>
	<CAKef57PN_Sjx44Jof7_3OYp0ps_GpeKdp+c0rd4tzVBt8eaxig@mail.gmail.com>
	<20121023114422.4518.1023961593.divmod.xquotient.32@localhost6.localdomain6>
Message-ID: <CAOp9P3remHxkthzwrw0AUz3oyh55TMGnpX4YMAnuMYd__VUybQ@mail.gmail.com>

On Tue, Oct 23, 2012 at 7:44 AM, <exarkun at twistedmatrix.com> wrote:

> RHEL and derivatives typically seem to, by default, include a firewall
> configuration that drops multicast traffic, so perhaps that's what
> you're seeing.
>

http://twistedmatrix.com/trac/wiki/ContinuousIntegration/TestSlaveConfigurationhas
some more details on this.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121023/48bca4b9/attachment.htm 

From tom.prince at ualberta.net  Tue Oct 23 13:09:07 2012
From: tom.prince at ualberta.net (Tom Prince)
Date: Tue, 23 Oct 2012 11:09:07 -0600
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
Message-ID: <87r4op5d58.fsf@hermes.hocat.ca>

As JP said, buildbot has some code for this at
https://github.com/buildbot/buildbot/blob/master/master/contrib/windows/buildbot_service.py


From andrewfr_ice at yahoo.com  Tue Oct 23 13:31:05 2012
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 23 Oct 2012 10:31:05 -0700 (PDT)
Subject: [Twisted-Python] Silly txoauth with Twisted Client Question
Message-ID: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>

Hi Folks:

I am implementing a client that uses Twisted. I have to use oauth 2.0. I have started to read up on Oauth and Twisted cred. ?I noticed that there is a txoauth. For now, my client is of the "it can't keep secrets" nature as described by Google.?

From my understanding Twisted Cred is used for implementing servers. What is used for clients? Or do I roll my own headers and implement the handshakes myself?

Cheers,
Andrew

P.S - I just started using Agent and CookieAgent (as opposed to getPage). Wow!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121023/13111b07/attachment.htm 

From lacrima.maxim at gmail.com  Wed Oct 24 02:38:14 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Wed, 24 Oct 2012 09:38:14 +0300
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
In-Reply-To: <CAOp9P3remHxkthzwrw0AUz3oyh55TMGnpX4YMAnuMYd__VUybQ@mail.gmail.com>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
	<CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
	<CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>
	<CAKef57PN_Sjx44Jof7_3OYp0ps_GpeKdp+c0rd4tzVBt8eaxig@mail.gmail.com>
	<20121023114422.4518.1023961593.divmod.xquotient.32@localhost6.localdomain6>
	<CAOp9P3remHxkthzwrw0AUz3oyh55TMGnpX4YMAnuMYd__VUybQ@mail.gmail.com>
Message-ID: <CAKef57N5Y1KQERhFyj4tsGA7cemYyEoWwF-uT8g7xDKT_Q39HQ@mail.gmail.com>

Thanks for your assistance!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121024/3724c38c/attachment.htm 

From johnaherne at rocs.co.uk  Wed Oct 24 03:43:15 2012
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 24 Oct 2012 08:43:15 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
Message-ID: <CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>

> To start off with, I'll point out that this isn't a supported mode of
> running Twisted (which I'm sure you noticed already :).
>
> This feature has been requested several times and worked on by a couple
> people, but not quite to the point of completion.
>
> Here's a related ticket:
>
>     http://twistedmatrix.com/trac/ticket/4073
>
> There's also some more code in the sandbox:
>
>     http://twistedmatrix.com/trac/browser/sandbox/moonfallen
>
> BuildBot also has some code, though I'm not exactly sure where it is.
> It would be really great for someone to actually complete and generalize
> one or more of these initial attempts so that Windows service
> integration could be a real, working feature. :)
>
>
> Yes, you'll need to do that.  It probably won't even break child process
> support (although other aspects of Windows services probably will).
> Notice it's failing on installing a SIGINT handler - ie, a Control-C
> handler.  Since you want the thing to run as a service, you probably
> aren't very interested in having Control-C do anything.
>
> Jean-Paul
>
> Thanks for the pointers.

Some of the code seems pretty ancient and for setting up the service I
think the win32com stuff from Mark Hammond seems to have all covered.

I have started to look around twisted to see where I can stop the signal
handlers being installed.. I have landed in postApplication where
startReactor is called, but I have yet to work out how I can set
installSignalHandlers=False.

Am I right in assuming this is where I should be looking.

I don't have much idea about signalhandlers but I assume the one I am
interested in here is to stop ControlC. The others might need to stay on.
I'm not too sure about that without knowing more about windows services and
how they react to these signals.

Thanks for the pointers

John Aherne

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
*John Aherne*
*
*
*
*
*
*
*www.rocs.co.uk
*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121024/e77608ee/attachment.htm 

From johnaherne at rocs.co.uk  Wed Oct 24 03:53:04 2012
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 24 Oct 2012 08:53:04 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <87r4op5d58.fsf@hermes.hocat.ca>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<87r4op5d58.fsf@hermes.hocat.ca>
Message-ID: <CAKmUHjYRuA6xQsO1+wRFB=93sW_fR7bj1AKxm178sfeV1AwBhg@mail.gmail.com>

On Tue, Oct 23, 2012 at 6:09 PM, Tom Prince <tom.prince at ualberta.net> wrote:

> As JP said, buildbot has some code for this at
>
> https://github.com/buildbot/buildbot/blob/master/master/contrib/windows/buildbot_service.py
>



-- 
*John Aherne*
*
*
*
*
*
*
*www.rocs.co.uk
*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121024/71de5619/attachment.htm 

From _ at lvh.cc  Wed Oct 24 04:24:47 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 24 Oct 2012 10:24:47 +0200
Subject: [Twisted-Python] Silly txoauth with Twisted Client Question
In-Reply-To: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>
References: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>
Message-ID: <CAE_Hg6Z2WTc1bYwoh3BBRWFpKg2_RgVD=jm1KQ3uZf_ox4SX0g@mail.gmail.com>

txoauth is something I started, then I realized I really hate oauth, then
it was "adopted" by simplegeo who afaik proceeded to not do anything with
it, and then I readopted it on github. There's not much work on it, but
what's there has a complete test suite.

ISTR glyph at one point describing an entire three-party oauth interaction
to me on the mailing list in Cred terms. If that knowledge didn't make it
into txoauth as it stands to day, perhaps it could still be dug up ;)

I had a hard time understanding it at first as well, but Cred'd work just
fine for the client too. The way it would work, IIRC, is that you run cred
on your client. The credentials checker is simply something that makes
remote requests. The realm returns, as always, an authenticated client.
Presumably, that object would compose an Agent to do what it needs to do.

Best of luck! I haven't touched oauth in years, but hopefully it'll work
out for you.

On Tue, Oct 23, 2012 at 7:31 PM, Andrew Francis <andrewfr_ice at yahoo.com>wrote:

> Hi Folks:
>
> I am implementing a client that uses Twisted. I have to use oauth 2.0. I
> have started to read up on Oauth and Twisted cred.  I noticed that there is
> a txoauth. For now, my client is of the "it can't keep secrets" nature as
> described by Google.
>
> From my understanding Twisted Cred is used for implementing servers. What
> is used for clients? Or do I roll my own headers and implement the
> handshakes myself?
>
> Cheers,
> Andrew
>
> P.S - I just started using Agent and CookieAgent (as opposed to getPage).
> Wow!
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121024/21452d9c/attachment-0001.htm 

From p.mayers at imperial.ac.uk  Wed Oct 24 05:01:51 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 24 Oct 2012 10:01:51 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
	<CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
Message-ID: <5087AE7F.6030504@imperial.ac.uk>

On 10/24/2012 08:43 AM, John Aherne wrote:

> I don't have much idea about signalhandlers but I assume the one I am
> interested in here is to stop ControlC. The others might need to stay
> on. I'm not too sure about that without knowing more about windows
> services and how they react to these signals.

No, you need more than that removed. Otherwise you get a "signal" (can't 
remember which - SIGBRK?) when the logged-in workstation logs off, which 
terminates your twisted services. Very confusing.

[FWIW we don't use twistd/.tac on windows]


From adi at roiban.ro  Wed Oct 24 05:45:23 2012
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 24 Oct 2012 12:45:23 +0300
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <87r4op5d58.fsf@hermes.hocat.ca>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<87r4op5d58.fsf@hermes.hocat.ca>
Message-ID: <CAFycZ9cyUXNyF_bvPWMjGYQ3q0=xmZyqok-qyMTZvJfOoEDhLQ@mail.gmail.com>

On 23 October 2012 20:09, Tom Prince <tom.prince at ualberta.net> wrote:
> As JP said, buildbot has some code for this at
> https://github.com/buildbot/buildbot/blob/master/master/contrib/windows/buildbot_service.py
>

Just in case it might be of any help.

I am using something based on this code:
http://code.activestate.com/recipes/551780/

The code with Twisted reactor is here:

https://github.com/chevah/commons/blob/master/commons/compat/nt_service.py

It does not use .tac files. 'initialize' is used for creating the
services, 'start' for start listening and 'stop' for stop listening.

Cheers
-- 
Adi Roiban


From msc at contact.de  Wed Oct 24 07:33:26 2012
From: msc at contact.de (Michael Schlenker)
Date: Wed, 24 Oct 2012 13:33:26 +0200
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <5087AE7F.6030504@imperial.ac.uk>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
	<CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
	<5087AE7F.6030504@imperial.ac.uk>
Message-ID: <5087D206.80206@contact.de>

Am 24.10.2012 11:01, schrieb Phil Mayers:
> On 10/24/2012 08:43 AM, John Aherne wrote:
> 
>> I don't have much idea about signalhandlers but I assume the one I am
>> interested in here is to stop ControlC. The others might need to stay
>> on. I'm not too sure about that without knowing more about windows
>> services and how they react to these signals.
> 
> No, you need more than that removed. Otherwise you get a "signal" (can't 
> remember which - SIGBRK?) when the logged-in workstation logs off, which 
> terminates your twisted services. Very confusing.

There are no signals on windows.

But what you are talking about is the SetConsoleCtrlHandler function.
http://docs.activestate.com/activepython/2.4/pywin32/win32api__SetConsoleCtrlHandler_meth.html
http://msdn.microsoft.com/en-us/library/windows/desktop/ms686016%28v=vs.85%29.aspx

Thats relevant if your process has a console, e.g. is not a GUI app.
(pythonw.exe vs. python.exe). If you run as a GUI app you might get a
WM_QUERYENDSESSION or similar message.

You get a CTRL_LOGOFF_EVENT when a user on the machine logs off and you
run as a subprocess of a service and need to ignore it. The service
itself should deal with this already.

Michael


-- 
Michael Schlenker
Software Architect

CONTACT Software GmbH           Tel.:   +49 (421) 20153-80
Wiener Stra?e 1-3               Fax:    +49 (421) 20153-41
28359 Bremen
http://www.contact.de/          E-Mail: msc at contact.de

Sitz der Gesellschaft: Bremen
Gesch?ftsf?hrer: Karl Heinz Zachries, Ralf Holtgrefe
Eingetragen im Handelsregister des Amtsgerichts Bremen unter HRB 13215


From p.mayers at imperial.ac.uk  Wed Oct 24 08:14:19 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 24 Oct 2012 13:14:19 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <5087D206.80206@contact.de>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
	<CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
	<5087AE7F.6030504@imperial.ac.uk> <5087D206.80206@contact.de>
Message-ID: <5087DB9B.90305@imperial.ac.uk>

n 24/10/12 12:33, Michael Schlenker wrote:
> Am 24.10.2012 11:01, schrieb Phil Mayers:
>> On 10/24/2012 08:43 AM, John Aherne wrote:
>>
>>> I don't have much idea about signalhandlers but I assume the one I am
>>> interested in here is to stop ControlC. The others might need to stay
>>> on. I'm not too sure about that without knowing more about windows
>>> services and how they react to these signals.
>>
>> No, you need more than that removed. Otherwise you get a "signal" (can't
>> remember which - SIGBRK?) when the logged-in workstation logs off, which
>> terminates your twisted services. Very confusing.
>
> There are no signals on windows.

But Python for windows certain calls "signal()" handlers in response to 
certain events, in certain configurations. Whether they're actually 
"signals" is kind of moot, though interesting.

>
> But what you are talking about is the SetConsoleCtrlHandler function.
> http://docs.activestate.com/activepython/2.4/pywin32/win32api__SetConsoleCtrlHandler_meth.html
> http://msdn.microsoft.com/en-us/library/windows/desktop/ms686016%28v=vs.85%29.aspx
>
> Thats relevant if your process has a console, e.g. is not a GUI app.
> (pythonw.exe vs. python.exe). If you run as a GUI app you might get a
> WM_QUERYENDSESSION or similar message.
>
> You get a CTRL_LOGOFF_EVENT when a user on the machine logs off and you
> run as a subprocess of a service and need to ignore it. The service
> itself should deal with this already.

Interesting.

I've just looked over the code we've got. It actually does something 
rather more involved than I'd first thought. Specifcally, the "ntsvc.py" 
code is pure-python, no Twisted. It actually runs the Twisted daemon as 
a sub-process, like this:

import os

class MyService(win32serviceutil.ServiceFramework):
      """NT Service."""

      _svc_name_ = "opimport-wrap"
      _svc_display_name_ = "Marval opimport wrapper"

      def SvcDoRun(self):
          self.childServer = Popen([
            "c:/python25/pythonw.exe",SCRIPT,"svc"
          ])
          self.childServer.wait()

...and the Twisted script does this:


def main():
   args = sys.argv[1:]
   if args and args[0]=='svc':
     as_service = True
   else:
     as_service = False

   ...

   if as_service:
     log.startLogging(some_log_observer)
     reactor.run(installSignalHandlers=0)
   else:
     log.startLogging(sys.stderr)
     reactor.run()

My memory is hazy on this, but if I recall correctly the main reason it 
works this way is that I can execute the twisted script directly from 
the console (for debugging) or via the service wrapper.

Are you suggesting that if I change that subprocess to use "python.exe" 
versus "pythonw.exe" I would not need to disable the signal handlers?

Cheers,
Phil


From msc at contact.de  Wed Oct 24 12:14:33 2012
From: msc at contact.de (Michael Schlenker)
Date: Wed, 24 Oct 2012 18:14:33 +0200
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <5087DB9B.90305@imperial.ac.uk>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
	<CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
	<5087AE7F.6030504@imperial.ac.uk> <5087D206.80206@contact.de>
	<5087DB9B.90305@imperial.ac.uk>
Message-ID: <508813E9.7050106@contact.de>

Am 24.10.2012 14:14, schrieb Phil Mayers:
> n 24/10/12 12:33, Michael Schlenker wrote:
>> Am 24.10.2012 11:01, schrieb Phil Mayers:
>>> On 10/24/2012 08:43 AM, John Aherne wrote:
>>
>> But what you are talking about is the SetConsoleCtrlHandler function.
>> http://docs.activestate.com/activepython/2.4/pywin32/win32api__SetConsoleCtrlHandler_meth.html
>>
>> http://msdn.microsoft.com/en-us/library/windows/desktop/ms686016%28v=vs.85%29.aspx
>>
>>
>> Thats relevant if your process has a console, e.g. is not a GUI app.
>> (pythonw.exe vs. python.exe). If you run as a GUI app you might get a
>> WM_QUERYENDSESSION or similar message.
>>
>> You get a CTRL_LOGOFF_EVENT when a user on the machine logs off and you
>> run as a subprocess of a service and need to ignore it. The service
>> itself should deal with this already.
> 
> Interesting.
> 
> I've just looked over the code we've got. It actually does something
> rather more involved than I'd first thought. Specifcally, the "ntsvc.py"
> code is pure-python, no Twisted. It actually runs the Twisted daemon as
> a sub-process, like this:
> 
> import os
> 
> class MyService(win32serviceutil.ServiceFramework):
>      """NT Service."""
> 
>      _svc_name_ = "opimport-wrap"
>      _svc_display_name_ = "Marval opimport wrapper"
> 
>      def SvcDoRun(self):
>          self.childServer = Popen([
>            "c:/python25/pythonw.exe",SCRIPT,"svc"
>          ])
>          self.childServer.wait()
this looks dubious, are you sure you can still react to ServiceManager
actions like 'Stop' or 'Query' this way, isn't this wait() blocking?

> 
> My memory is hazy on this, but if I recall correctly the main reason it
> works this way is that I can execute the twisted script directly from
> the console (for debugging) or via the service wrapper.
> 
> Are you suggesting that if I change that subprocess to use "python.exe"
> versus "pythonw.exe" I would not need to disable the signal handlers?
> 

Won't probably help, not sure though.

If you ever import the 'time' module, as Python registers a control
handler there, to allow time.sleep() to wake up when ctrl-c is pressed
or the system shuts down, so i assume it has a console anyway.

from timemodule.c
#ifdef MS_WINDOWS
    /* Helper to allow interrupts for Windows.
       If Ctrl+C event delivered while not sleeping
       it will be ignored.
    */
    main_thread = PyThread_get_thread_ident();
    hInterruptEvent = CreateEvent(NULL, TRUE, FALSE, NULL);
    SetConsoleCtrlHandler( PyCtrlHandler, TRUE);
#endif /* MS_WINDOWS */

The usual workaround to keep a service subprocess with a console alive
is to simply register your own ConsoleHandler to override the default
(which is ExitProcess()) and return TRUE, so the default handler doesn't
run.

If you spawn a lot of subprocess (around 100 at a time) you will
additionally have fun with random crashes once you hit the DesktopHeap
Memory limit.

Michael

-- 
Michael Schlenker
Software Architect

CONTACT Software GmbH           Tel.:   +49 (421) 20153-80
Wiener Stra?e 1-3               Fax:    +49 (421) 20153-41
28359 Bremen
http://www.contact.de/          E-Mail: msc at contact.de

Sitz der Gesellschaft: Bremen
Gesch?ftsf?hrer: Karl Heinz Zachries, Ralf Holtgrefe
Eingetragen im Handelsregister des Amtsgerichts Bremen unter HRB 13215


From p.mayers at imperial.ac.uk  Wed Oct 24 13:13:09 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 24 Oct 2012 18:13:09 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <508813E9.7050106@contact.de>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
	<CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
	<5087AE7F.6030504@imperial.ac.uk> <5087D206.80206@contact.de>
	<5087DB9B.90305@imperial.ac.uk> <508813E9.7050106@contact.de>
Message-ID: <508821A5.6030208@imperial.ac.uk>

On 24/10/12 17:14, Michael Schlenker wrote:

> this looks dubious, are you sure you can still react to ServiceManager

Yes.

> actions like 'Stop' or 'Query' this way, isn't this wait() blocking?

AIUI, the "svc" methods are called from various threads?

I didn't create this code; I cribbed it from somewhere, but this was a 
long time ago (since I avoid Windows for anything other than playing games).

> If you spawn a lot of subprocess (around 100 at a time) you will
> additionally have fun with random crashes once you hit the DesktopHeap
> Memory limit.

This entire Twisted process exists to spawn processes that can only be 
run under Windows. Fortunately, the app in particular is so crappy that 
if I ever get *close* to 100 processes, I'm sure the app will die well 
before pywin does ;o)


From dynamicgl at gmail.com  Wed Oct 24 23:48:31 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Thu, 25 Oct 2012 11:48:31 +0800
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
	<CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
	<5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>
Message-ID: <CABkOF6ROagF682mg-4eRCge-XiLY7HuZrRcby-AEFZChTstLow@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:06 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Oct 20, 2012, at 7:56 PM, gelin yan <dynamicgl at gmail.com> wrote:
>
> "A pending operation is indicated when the function that started the
> operation returns *FALSE*, and the *GetLastError*<http://msdn.microsoft.com/en-us/library/windows/desktop/ms679360(v=vs.85).aspx> function
> returns *ERROR_IO_PENDING*. When an I/O operation is pending, the
> function that started the operation resets the *hEvent* member of the *
> OVERLAPPED* structure to the nonsignaled state. Then when the pending
> operation has been completed, the system sets the event object to the
> signaled state."
>
>   If we can know when event object is in the signaled state we definitely
> can use a queue directly. Any idea?
>
>
> Sounds like you're at the point where you should just try doing an
> implementation, and if it works and passes all the tests you can think of
> for it, submit it for code review.  Much more speculation without testing
> wouldn't be useful.
>
> Thanks for working on this!
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
Hi All

   Sorry for coming late. The day before yesterday, I dig out what happen
in that code. Actually, ERROR_IO_PENDING isn't the root of problem. The
problem is doWrite method might be triggered twice instead of once; in
particular, when trying to send a large chunks data whose size is bigger
then SEND_LIMIT, it will always happen.

    When doWrite being invoked twice, it means the same buffer data will be
sent twice. It is for sure that PB is unable to deserialize  these data and
finally it raise an exception, now, we can see connection lost.

    The solution is to make sure doWrite calling in order; hence I
introduce a new field named _doWriteCalling to detect whether doWrite call
is completed. (due to doWrite always post an event to IOCP, so once
_cbWrite get called, it means we can schedule another doWrite). If _cbWrite
isn't called, we simply re-schedule the doWrite by reactor.callLater.

    I attach a modified abstract.py here. You may put it in
 Path\twisted\internet\iocpreactor
and give it a try.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121025/2733f86f/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: abstract.py
Type: application/octet-stream
Size: 13357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20121025/2733f86f/attachment-0001.obj 

From glyph at twistedmatrix.com  Thu Oct 25 01:03:29 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 24 Oct 2012 22:03:29 -0700
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <CABkOF6ROagF682mg-4eRCge-XiLY7HuZrRcby-AEFZChTstLow@mail.gmail.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
	<CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
	<5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>
	<CABkOF6ROagF682mg-4eRCge-XiLY7HuZrRcby-AEFZChTstLow@mail.gmail.com>
Message-ID: <67C0B44C-5F3D-4A93-B5FB-ED5B9063A439@twistedmatrix.com>


On Oct 24, 2012, at 8:48 PM, gelin yan <dynamicgl at gmail.com> wrote:

>     I attach a modified abstract.py here. You may put it in  Path\twisted\internet\iocpreactor
> and give it a try.

Hi Gelin,

Can you generate and attach a patch to the ticket, as per the instructions on <http://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch>, so that this work does not get lost?

If you can write some test cases, you may want to also submit the ticket for review.

Thanks!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121024/3f6fc58f/attachment.htm 

From dynamicgl at gmail.com  Thu Oct 25 02:03:34 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Thu, 25 Oct 2012 14:03:34 +0800
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <67C0B44C-5F3D-4A93-B5FB-ED5B9063A439@twistedmatrix.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
	<CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
	<5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>
	<CABkOF6ROagF682mg-4eRCge-XiLY7HuZrRcby-AEFZChTstLow@mail.gmail.com>
	<67C0B44C-5F3D-4A93-B5FB-ED5B9063A439@twistedmatrix.com>
Message-ID: <CABkOF6S-BXf9u6WiqJb9AFjfShVDejY8jGHROK1J1u+DCRJ1hw@mail.gmail.com>

On Thu, Oct 25, 2012 at 1:03 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Oct 24, 2012, at 8:48 PM, gelin yan <dynamicgl at gmail.com> wrote:
>
>     I attach a modified abstract.py here. You may put it in
>  Path\twisted\internet\iocpreactor
> and give it a try.
>
>
> Hi Gelin,
>
> Can you generate and attach a patch to the ticket, as per the instructions
> on <http://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch>,
> so that this work does not get lost?
>
> If you can write some test cases, you may want to also submit the ticket
> for review.
>
> Thanks!
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
Hi Glyph

   Thanks for mentioning that. I never submitted any patch before so
probably I need to take some time to investigate how to do it.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121025/8a097045/attachment.htm 

From lacrima.maxim at gmail.com  Thu Oct 25 05:18:31 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Thu, 25 Oct 2012 12:18:31 +0300
Subject: [Twisted-Python] Avoiding network when testing Perspective Broker
Message-ID: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>

Hi!

I am learning to develop TDD way. I want to create a server that
understands PB protocol. Initially I thought it would be a good idea to
avoid real network connections in my tests, so I tried to use
`proto_helpers.StringTransport`:

----------
import cStringIO
from twisted.spread import pb
from twisted.trial import unittest
from twisted.test import proto_helpers

class Document(pb.Root):

    def remote_convert(self, props):
        self.props = props


class DocTestCase(unittest.TestCase):

    def setUp(self):

        # set up server
        self.doc = Document()
        factory = pb.PBServerFactory(self.doc)
        self.broker = factory.buildProtocol(('127.0.0.1', 0))
        tr = proto_helpers.StringTransport()
        self.broker.makeConnection(tr)


        # this is what a client sends
        self.props = {'name': 'MyDoc',
                      'path': '/path/'}

        # prepare data
        serialized_props = self.broker.serialize(self.props)
        msg = ('message', 1, 'root', 'convert', 1,
               ['tuple', serialized_props], ['dictionary'])
        io = cStringIO.StringIO()
        self.broker._encode(msg, io.write)
        self.chunk = io.getvalue()

    def test_convert(self):
        # data arrived
        self.broker.dataReceived(self.chunk)

        self.assertEqual(self.props, self.doc.props)
----------

However, `Document.remote_convert` is never executed so the test above
fails. After debugging I discovered that `Broker._encode` produces
different results depending on whether `self.broker.makeConnection(tr)` is
called or not.

And I created a test case that shows a difference. Here `test_convert1`
succeeds while `test_convert2` fails:
----------
class DocTestCase(unittest.TestCase):

    def setUp(self):
        self.doc = Document()
        factory = pb.PBServerFactory(self.doc)
        self.broker = factory.buildProtocol(('127.0.0.1', 0))

        self.props = {'name': 'MyDoc',
                      'path': '/path/'}

        serialized_props = self.broker.serialize(self.props)
        self.msg = ('message', 1, 'root', 'convert', 1,
                    ['tuple', serialized_props], ['dictionary'])

    def test_convert1(self):
        self.broker.currentDialect = 'pb'
        self.broker.setPrefixLimit(64)
        self.broker.transport = proto_helpers.StringTransport()

        io = cStringIO.StringIO()
        self.broker._encode(self.msg, io.write)
        self.broker.dataReceived(io.getvalue())

        self.assertEqual(self.props, self.doc.props)

    def test_convert2(self):
        self.tr = proto_helpers.StringTransport()
        self.broker.makeConnection(self.tr)

        io = cStringIO.StringIO()
        self.broker._encode(self.msg, io.write)
        self.broker.dataReceived(io.getvalue())

        self.assertEqual(self.props, self.doc.props)
----------

I wonder what causes this behavior and, in general, if `StringTransport` is
suitable for testing PB protocol.

Thanks in advance. For your convenience I attached files with these test
cases.

-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121025/65bb7b1b/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_pb.py
Type: application/octet-stream
Size: 1344 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20121025/65bb7b1b/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_pb1.py
Type: application/octet-stream
Size: 1098 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20121025/65bb7b1b/attachment-0001.obj 

From kevin.horn at gmail.com  Thu Oct 25 11:11:53 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 25 Oct 2012 10:11:53 -0500
Subject: [Twisted-Python] Silly txoauth with Twisted Client Question
In-Reply-To: <CAE_Hg6Z2WTc1bYwoh3BBRWFpKg2_RgVD=jm1KQ3uZf_ox4SX0g@mail.gmail.com>
References: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>
	<CAE_Hg6Z2WTc1bYwoh3BBRWFpKg2_RgVD=jm1KQ3uZf_ox4SX0g@mail.gmail.com>
Message-ID: <CA+U=zK0q5auGufKMJ-cBbWq7bq6HX82dCx+cimT-9rboni4hjQ@mail.gmail.com>

Probably this message:
http://twistedmatrix.com/pipermail/twisted-python/2010-July/022500.html

Kevin Horn

On Wed, Oct 24, 2012 at 3:24 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> txoauth is something I started, then I realized I really hate oauth, then
> it was "adopted" by simplegeo who afaik proceeded to not do anything with
> it, and then I readopted it on github. There's not much work on it, but
> what's there has a complete test suite.
>
> ISTR glyph at one point describing an entire three-party oauth interaction
> to me on the mailing list in Cred terms. If that knowledge didn't make it
> into txoauth as it stands to day, perhaps it could still be dug up ;)
>
> I had a hard time understanding it at first as well, but Cred'd work just
> fine for the client too. The way it would work, IIRC, is that you run cred
> on your client. The credentials checker is simply something that makes
> remote requests. The realm returns, as always, an authenticated client.
> Presumably, that object would compose an Agent to do what it needs to do.
>
> Best of luck! I haven't touched oauth in years, but hopefully it'll work
> out for you.
>
> On Tue, Oct 23, 2012 at 7:31 PM, Andrew Francis <andrewfr_ice at yahoo.com>wrote:
>
>> Hi Folks:
>>
>> I am implementing a client that uses Twisted. I have to use oauth 2.0. I
>> have started to read up on Oauth and Twisted cred.  I noticed that there is
>> a txoauth. For now, my client is of the "it can't keep secrets" nature as
>> described by Google.
>>
>> From my understanding Twisted Cred is used for implementing servers. What
>> is used for clients? Or do I roll my own headers and implement the
>> handshakes myself?
>>
>> Cheers,
>> Andrew
>>
>> P.S - I just started using Agent and CookieAgent (as opposed to getPage).
>> Wow!
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> --
> cheers
> lvh
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121025/3111d51c/attachment-0001.htm 

From glyph at twistedmatrix.com  Thu Oct 25 14:44:51 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 25 Oct 2012 11:44:51 -0700
Subject: [Twisted-Python] Silly txoauth with Twisted Client Question
In-Reply-To: <CA+U=zK0q5auGufKMJ-cBbWq7bq6HX82dCx+cimT-9rboni4hjQ@mail.gmail.com>
References: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>
	<CAE_Hg6Z2WTc1bYwoh3BBRWFpKg2_RgVD=jm1KQ3uZf_ox4SX0g@mail.gmail.com>
	<CA+U=zK0q5auGufKMJ-cBbWq7bq6HX82dCx+cimT-9rboni4hjQ@mail.gmail.com>
Message-ID: <90689530-3B40-478A-8CEA-E9BD3D4C6404@twistedmatrix.com>


On Oct 25, 2012, at 8:11 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> Probably this message: http://twistedmatrix.com/pipermail/twisted-python/2010-July/022500.html

Please post inline, not at the top.  It seems we've had a plague of this lately :).

Also, since we're still using a version of pipermail that can't wrap lines properly (sigh, are there any that do yet?) you can view this message more nicely here: <http://article.gmane.org/gmane.comp.python.twisted/21255>.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121025/11a28b3a/attachment.htm 

From glyph at twistedmatrix.com  Thu Oct 25 14:45:55 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 25 Oct 2012 11:45:55 -0700
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <CABkOF6S-BXf9u6WiqJb9AFjfShVDejY8jGHROK1J1u+DCRJ1hw@mail.gmail.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
	<CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
	<5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>
	<CABkOF6ROagF682mg-4eRCge-XiLY7HuZrRcby-AEFZChTstLow@mail.gmail.com>
	<67C0B44C-5F3D-4A93-B5FB-ED5B9063A439@twistedmatrix.com>
	<CABkOF6S-BXf9u6WiqJb9AFjfShVDejY8jGHROK1J1u+DCRJ1hw@mail.gmail.com>
Message-ID: <0F1B3CB5-DE12-4AAE-A55D-14A6ED113B2D@twistedmatrix.com>


On Oct 24, 2012, at 11:03 PM, gelin yan <dynamicgl at gmail.com> wrote:

>    Thanks for mentioning that. I never submitted any patch before so probably I need to take some time to investigate how to do it.

No problem.  It should be fairly easy.  If you have any trouble don't hesitate to ask questions.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121025/a7c31f45/attachment.htm 

From kevin.horn at gmail.com  Thu Oct 25 15:56:30 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 25 Oct 2012 14:56:30 -0500
Subject: [Twisted-Python] Silly txoauth with Twisted Client Question
In-Reply-To: <90689530-3B40-478A-8CEA-E9BD3D4C6404@twistedmatrix.com>
References: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>
	<CAE_Hg6Z2WTc1bYwoh3BBRWFpKg2_RgVD=jm1KQ3uZf_ox4SX0g@mail.gmail.com>
	<CA+U=zK0q5auGufKMJ-cBbWq7bq6HX82dCx+cimT-9rboni4hjQ@mail.gmail.com>
	<90689530-3B40-478A-8CEA-E9BD3D4C6404@twistedmatrix.com>
Message-ID: <CA+U=zK2BHv3avptdN_jGfdeo9fRTy7pANcgTMv2ohAfajOW-_g@mail.gmail.com>

On Thu, Oct 25, 2012 at 1:44 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Oct 25, 2012, at 8:11 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
> Probably this message:
> http://twistedmatrix.com/pipermail/twisted-python/2010-July/022500.html
>
>
> Please post inline, not at the top.  It seems we've had a plague of this
> lately :).
>
> Also, since we're still using a version of pipermail that can't wrap lines
> properly (sigh, are there any that do yet?) you can view this message more
> nicely here: <http://article.gmane.org/gmane.comp.python.twisted/21255>.
>
> -g
>
>
I usually do, but since lvh top-posted, I followed his lead for the thread.

--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121025/40e832a5/attachment.htm 

From exarkun at twistedmatrix.com  Thu Oct 25 17:22:42 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 25 Oct 2012 21:22:42 -0000
Subject: [Twisted-Python] Avoiding network when testing Perspective
	Broker
In-Reply-To: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
References: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
Message-ID: <20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>

On 09:18 am, lacrima.maxim at gmail.com wrote:
>Hi!
>
>I am learning to develop TDD way. I want to create a server that

Hooray!
>understands PB protocol. Initially I thought it would be a good idea to
>avoid real network connections in my tests, so I tried to use

Yes, that's definitely what you want to do.
>`proto_helpers.StringTransport`:

StringTransport is frequently what you want in order to test a protocol 
implementation, so you're on the right track.

Except... actually you're not implementing a protocol.  You're *using* a 
protocol implementation that exists already and has its own unit tests.

It would be better if you found a way to test your code without 
involving the PB protocol implementation or StringTransport.  However, I 
admit that the tools for doing this with PB are almost non-existent.  On 
the other hand, application code written for use with AMP is much more 
amenable to testing.

Just something to think about.
>----------
>import cStringIO
>from twisted.spread import pb
>from twisted.trial import unittest
>from twisted.test import proto_helpers
>
>class Document(pb.Root):
>
>    def remote_convert(self, props):
>        self.props = props
>
>
>class DocTestCase(unittest.TestCase):
>
>    def setUp(self):
>
>        # set up server
>        self.doc = Document()
>        factory = pb.PBServerFactory(self.doc)
>        self.broker = factory.buildProtocol(('127.0.0.1', 0))
>        tr = proto_helpers.StringTransport()
>        self.broker.makeConnection(tr)

So far so good.  You made a factory, got it to make you a protocol, and 
hooked the protocol up to a StringTransport you made.  That's all good 
stuff.
>
>        # this is what a client sends
>        self.props = {'name': 'MyDoc',
>                      'path': '/path/'}
>
>        # prepare data
>        serialized_props = self.broker.serialize(self.props)
>        msg = ('message', 1, 'root', 'convert', 1,
>               ['tuple', serialized_props], ['dictionary'])
>        io = cStringIO.StringIO()
>        self.broker._encode(msg, io.write)
>        self.chunk = io.getvalue()

This part isn't quite as good.  `broker.serialize` is basically an 
implementation detail.  `broker._encode` is *definitely* an 
implementation detail.  The exact structure of the message isn't quite 
an implementation detail, but it's such a low-level detail that you 
really don't want to be thinking about it while writing tests for 
something like Document.remote_convert.

Instead, you should probably use the PB client API (ie, PBClientFactory 
and what comes out of it) to interact with this server.  Let the PB 
client implementation figure out what bytes to "send" to your server.
>    def test_convert(self):
>        # data arrived
>        self.broker.dataReceived(self.chunk)

You'll definitely need to call dataReceived at some point.  Perhaps more 
than once.  So this is pretty good.
>        self.assertEqual(self.props, self.doc.props)
>----------
>
>However, `Document.remote_convert` is never executed so the test above
>fails. After debugging I discovered that `Broker._encode` produces
>different results depending on whether `self.broker.makeConnection(tr)` 
>is
>called or not.

I haven't bothered to look into what might be going on here, because I 
think you should forget about the `._encode` code and start using a 
client instead.  The client is much more likely to produce the correct 
network traffic to exercise the code you want to exercise.  The same 
goes for the two further tests below - which seem to differ only by a 
call to setPrefixLength, which should make absolutely no difference to 
this code when it is being used in practice, so the difference it makes 
in the tests is probably due to driving the code wrong, which problem 
will go away if you start using PBClientFactory etc.

Hope this helps,
Jean-Paul
>And I created a test case that shows a difference. Here `test_convert1`
>succeeds while `test_convert2` fails:
>----------
>class DocTestCase(unittest.TestCase):
>
>    def setUp(self):
>        self.doc = Document()
>        factory = pb.PBServerFactory(self.doc)
>        self.broker = factory.buildProtocol(('127.0.0.1', 0))
>
>        self.props = {'name': 'MyDoc',
>                      'path': '/path/'}
>
>        serialized_props = self.broker.serialize(self.props)
>        self.msg = ('message', 1, 'root', 'convert', 1,
>                    ['tuple', serialized_props], ['dictionary'])
>
>    def test_convert1(self):
>        self.broker.currentDialect = 'pb'
>        self.broker.setPrefixLimit(64)
>        self.broker.transport = proto_helpers.StringTransport()
>
>        io = cStringIO.StringIO()
>        self.broker._encode(self.msg, io.write)
>        self.broker.dataReceived(io.getvalue())
>
>        self.assertEqual(self.props, self.doc.props)
>
>    def test_convert2(self):
>        self.tr = proto_helpers.StringTransport()
>        self.broker.makeConnection(self.tr)
>
>        io = cStringIO.StringIO()
>        self.broker._encode(self.msg, io.write)
>        self.broker.dataReceived(io.getvalue())
>
>        self.assertEqual(self.props, self.doc.props)
>----------
>
>I wonder what causes this behavior and, in general, if 
>`StringTransport` is
>suitable for testing PB protocol.
>
>Thanks in advance. For your convenience I attached files with these 
>test
>cases.
>
>--
>with regards,
>Maxim


From glyph at twistedmatrix.com  Thu Oct 25 18:32:30 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 25 Oct 2012 15:32:30 -0700
Subject: [Twisted-Python] Avoiding network when testing Perspective
	Broker
In-Reply-To: <20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>
References: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
	<20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>
Message-ID: <BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>


On Oct 25, 2012, at 2:22 PM, exarkun at twistedmatrix.com wrote:

> On 09:18 am, lacrima.maxim at gmail.com wrote:
>> Hi!
>> 
>> I am learning to develop TDD way. I want to create a server that
> 
> Hooray!

Yes, hooray!  I wish that everyone did this.  Sorry that you've encountered trouble; I very much hope you will stick with this and help us make the process for doing TDD on PB (and generally, Twisted) applications much easier.

>> understands PB protocol. Initially I thought it would be a good idea to
>> avoid real network connections in my tests, so I tried to use
> 
> Yes, that's definitely what you want to do.
>> `proto_helpers.StringTransport`:
> 
> StringTransport is frequently what you want in order to test a protocol 
> implementation, so you're on the right track.
> 
> Except... actually you're not implementing a protocol.  You're *using* a 
> protocol implementation that exists already and has its own unit tests.
> 
> It would be better if you found a way to test your code without 
> involving the PB protocol implementation or StringTransport.  However, I 
> admit that the tools for doing this with PB are almost non-existent.  On 
> the other hand, application code written for use with AMP is much more 
> amenable to testing.
> 
> Just something to think about.

While I agree with everything exarkun has said here, I think we should note that using StringTransport is basically the state of the art in protocol testing at this point.  It's unfortunate that we don't have anything better, but you shouldn't feel the need to go scouring the code base for a good example or a testing utility that you've missed; unless it's immediately obvious to you how to remove byte-level parsing from the equation, this is just an area that Twisted needs to work on.

> So far so good.  You made a factory, got it to make you a protocol, and 
> hooked the protocol up to a StringTransport you made.  That's all good 
> stuff.

I'm curious, since we rarely get to see the positive impact of documentation, and only hear about it when it didn't exist - did you discover this testing style from http://twistedmatrix.com/documents/current/core/howto/trial.html#auto5 ? :)

> Instead, you should probably use the PB client API (ie, PBClientFactory 
> and what comes out of it) to interact with this server.  Let the PB 
> client implementation figure out what bytes to "send" to your server.

To be clear, you should use PBClientFactory in the same way you've been these other abstractions: create it with a string transport, don't hook it up to any sockets or anything.

There are three (count them, three!) classes called "IOPump" in various Twisted test-support modules.  Please note that unlike the stuff in proto_helpers these are not supported and will likely go away in a future version of Twisted.  However, they do provide a simple demonstration of how to hook up a client and server (calling dataReceived() with what transport.write() produced).

If you'd like to help Twisted itself, we could really use a patch that cleans up all three of those implementations of IOPump, tests them, documents them, and exposes them in a way that would be beneficial to those writing tests like yours.

Thanks for doing TDD,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121025/609f6436/attachment.htm 

From lacrima.maxim at gmail.com  Fri Oct 26 10:02:52 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Fri, 26 Oct 2012 17:02:52 +0300
Subject: [Twisted-Python] Avoiding network when testing Perspective
	Broker
In-Reply-To: <BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>
References: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
	<20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>
	<BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>
Message-ID: <CAKef57MfhBu5ynk2YXJR8_uyPagK_UpHZDOJ1zhwfqmAnt=YGQ@mail.gmail.com>

Hi!

Your replies are very encouraging. Thank you!


> I'm curious, since we rarely get to see the positive impact of
> documentation, and only hear about it when it didn't exist - did you
> discover this testing style from
> http://twistedmatrix.com/documents/current/core/howto/trial.html#auto5 ?
> :)
>
>
Yes, I started from that document. It describes well how to call certain
parts of Twisted to check some behavior and this stimulated me to discover
Twisted API.

I think I have finally discovered a good way for writing tests that use PB.
I used `test.test_pb.IOPump` `test.test_pb.connectedServerAndClient` as a
basis for my tests.
--------
from twisted.spread import pb
from twisted.trial import unittest
from twisted.test import proto_helpers

class Document(pb.Root):

    def remote_convert(self):
        return 'I was called'


class IOPump:

    def __init__(self, client, server, clientIO, serverIO):
        self.client = client
        self.server = server
        self.clientIO = clientIO
        self.serverIO = serverIO

    def pump(self):
        cData = self.clientIO.value()
        sData = self.serverIO.value()
        self.clientIO.clear()
        self.serverIO.clear()
        self.server.dataReceived(cData)
        self.client.dataReceived(sData)


def connect(root):
    serverFactory = pb.PBServerFactory(root())
    serverBroker = serverFactory.buildProtocol(())

    clientFactory = pb.PBClientFactory()
    clientBroker = clientFactory.buildProtocol(())

    clientTransport = proto_helpers.StringTransport()
    serverTransport = proto_helpers.StringTransport()
    clientBroker.makeConnection(clientTransport)
    serverBroker.makeConnection(serverTransport)

    pump = IOPump(clientBroker, serverBroker, clientTransport,
serverTransport)
    # initial communication
    pump.pump()

    return clientFactory, serverFactory, pump


class DocTestCase(unittest.TestCase):

    def test_convert(self):
        def cb0(doc):
            d = doc.callRemote('convert')
            return d

        def cb1(res):
            self.assertEqual('I was called', res)
            return res

        client, server, pump = connect(Document)

        d = client.getRootObject()
        d.addCallback(cb0)
        d.addCallback(cb1)

        pump.pump()
        pump.pump()

        return d

--------

The only caveat here is that if I forget to call pump.pump() sufficient
number of times, then the callback with an assertion may not be executed
and this can lead to false positives

-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121026/a10c59eb/attachment-0001.htm 

From itamar at futurefoundries.com  Fri Oct 26 10:16:46 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Fri, 26 Oct 2012 10:16:46 -0400
Subject: [Twisted-Python] Avoiding network when testing Perspective
	Broker
In-Reply-To: <BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>
References: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
	<20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>
	<BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>
Message-ID: <CAOp9P3qUh1f7cqz9GPvOwkoCXNyoxqEEJd9gROr=3tuuQCVhag@mail.gmail.com>

On Thu, Oct 25, 2012 at 6:32 PM, Glyph <glyph at twistedmatrix.com> wrote:


> There are three (count them, three!) classes called "IOPump" in various
> Twisted test-support modules.  Please note that *unlike the stuff in
> proto_helpers these are not supported and will likely go away in a future
> version of Twisted*.  However, they do provide a simple demonstration of
> how to hook up a client and server (calling dataReceived() with what
> transport.write() produced).
>
> If you'd like to help Twisted itself, we could really use a patch that
> cleans up all three of those implementations of IOPump, tests them,
> documents them, and exposes them in a way that would be beneficial to those
> writing tests like yours.
>

I guess none of the loopback implementations in twisted.protocols.loopback
use StringTransport?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121026/0a31490b/attachment.htm 

From dynamicgl at gmail.com  Fri Oct 26 12:40:54 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 27 Oct 2012 00:40:54 +0800
Subject: [Twisted-Python] Is it a typo in abstract.py ?
Message-ID: <CABkOF6R=XzA7oidBAKYwo5CQn_Wa8WDhCDPJYPo-u_p-9jRjRQ@mail.gmail.com>

Hi All

    I just noticed abstract.py from internet/iocpreactor/ has a possible
typo:

look at the method* *loseConnection
*
*
if self.connected and not self.disconnecting:
            if self._writeDisconnected:
                # doWrite won't trigger the connection close anymore
                self.stopReading()
                self.stopWriting
                self.connectionLost(_connDone)
            else:
                self.stopReading()
                self.startWriting()
                self.disconnecting = 1

in the first part I found
  self.stopWriting

Is it a typo for self.stopWriting()?


Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121027/5996bd83/attachment.htm 

From itamar at futurefoundries.com  Fri Oct 26 13:34:31 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Fri, 26 Oct 2012 13:34:31 -0400
Subject: [Twisted-Python] Is it a typo in abstract.py ?
In-Reply-To: <CABkOF6R=XzA7oidBAKYwo5CQn_Wa8WDhCDPJYPo-u_p-9jRjRQ@mail.gmail.com>
References: <CABkOF6R=XzA7oidBAKYwo5CQn_Wa8WDhCDPJYPo-u_p-9jRjRQ@mail.gmail.com>
Message-ID: <CAOp9P3rrROwEALksi3HQtjxRERWC-2gQemFaZXS9GVAp+9FebQ@mail.gmail.com>

Yes. I may even have filed a ticket for this once. The problem is writing a
unit test to prove it's necessary :)

On Fri, Oct 26, 2012 at 12:40 PM, gelin yan <dynamicgl at gmail.com> wrote:

> Hi All
>
>     I just noticed abstract.py from internet/iocpreactor/ has a possible
> typo:
>
> look at the method* *loseConnection
> *
> *
> if self.connected and not self.disconnecting:
>             if self._writeDisconnected:
>                 # doWrite won't trigger the connection close anymore
>                 self.stopReading()
>                 self.stopWriting
>                 self.connectionLost(_connDone)
>             else:
>                 self.stopReading()
>                 self.startWriting()
>                 self.disconnecting = 1
>
> in the first part I found
>   self.stopWriting
>
> Is it a typo for self.stopWriting()?
>
>
> Regards
>
> gelin yan
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ ? Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121026/38b0888a/attachment.htm 

From glyph at twistedmatrix.com  Fri Oct 26 16:18:43 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 26 Oct 2012 13:18:43 -0700
Subject: [Twisted-Python] Avoiding network when testing Perspective
	Broker
In-Reply-To: <CAOp9P3qUh1f7cqz9GPvOwkoCXNyoxqEEJd9gROr=3tuuQCVhag@mail.gmail.com>
References: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
	<20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>
	<BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>
	<CAOp9P3qUh1f7cqz9GPvOwkoCXNyoxqEEJd9gROr=3tuuQCVhag@mail.gmail.com>
Message-ID: <34B11984-EBD8-4442-8A0D-866DBAD1CEBA@twistedmatrix.com>


On Oct 26, 2012, at 7:16 AM, Itamar Turner-Trauring <itamar at futurefoundries.com> wrote:

> 
> 
> On Thu, Oct 25, 2012 at 6:32 PM, Glyph <glyph at twistedmatrix.com> wrote:
>  
> There are three (count them, three!) classes called "IOPump" in various Twisted test-support modules.  Please note that unlike the stuff in proto_helpers these are not supported and will likely go away in a future version of Twisted.  However, they do provide a simple demonstration of how to hook up a client and server (calling dataReceived() with what transport.write() produced).
> 
> If you'd like to help Twisted itself, we could really use a patch that cleans up all three of those implementations of IOPump, tests them, documents them, and exposes them in a way that would be beneficial to those writing tests like yours.
> 
> I guess none of the loopback implementations in twisted.protocols.loopback use StringTransport? 

Nope, it has two other transport implementations - _LoopbackTransport and LoopbackRelay; plus, unlike what IOPump does, loopback is written to encourage you to return a Deferred from your test, which is generally a bad idea if you can easily avoid it.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121026/0944fb6c/attachment.htm 

From exarkun at twistedmatrix.com  Sun Oct 28 00:05:31 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Oct 2012 04:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1351397131.88.581021358@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121028/f1214941/attachment.htm 

From dynamicgl at gmail.com  Sun Oct 28 01:57:03 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sun, 28 Oct 2012 13:57:03 +0800
Subject: [Twisted-Python] a question about monotonic clock
Message-ID: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>

Hi All

    I am quite concerned the ticket 2424 due to our system use
reactor.callLater almost anywhere. I know this issue is hard to be finxed
otherwise It wouldn't exist for such a long time. So any work around before
we getting fix it? The only way I can do is to disable NTP or stop process,
sync the time manually and then restart the process. The latter way is hard
to be accepted due to we have many machines.


Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121028/2eb3a337/attachment.htm 

From exarkun at twistedmatrix.com  Sun Oct 28 08:28:39 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Oct 2012 12:28:39 -0000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
Message-ID: <20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>

On 05:57 am, dynamicgl at gmail.com wrote:
>Hi All
>
>    I am quite concerned the ticket 2424 due to our system use
>reactor.callLater almost anywhere. I know this issue is hard to be 
>finxed
>otherwise It wouldn't exist for such a long time. So any work around 
>before
>we getting fix it? The only way I can do is to disable NTP or stop 
>process,
>sync the time manually and then restart the process. The latter way is 
>hard
>to be accepted due to we have many machines.

NTP does not cause problems with scheduling.  NTP gradually slews the 
system clock - it does not introduce discontinuities (either forward or 
backward), it changes the rate at which time passes until the system 
clock agrees with the external clock.

If you have systems configured to have their system clocks jump 
(`ntpdate` is sometimes used for this), fix them to not be configured 
this way.

#2424 is primarily about user-initiated events, primarily on desktop 
machines - a user changing the system time, a user suspending the 
machine (and later unsuspending it).  There's little or no reason for 
problems related to #2424 to ever come up on a properly maintained 
server.

Jean-Paul


From _ at lvh.cc  Sun Oct 28 11:17:53 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 28 Oct 2012 16:17:53 +0100
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
Message-ID: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>

Hi,


I've been trying to play with SockJS + Twisted. There's an implementation
here: https://github.com/Fugiman/sockjs-twisted

However, I'm already running a web server, and as the README says
sockjs-twisted is *not* intended to be run together with a web server. It
doesn't really use any of the mechanics in twisted.web.

So, I tried to make it work using Resources anyway: reconstructing the
equivalent bytes in render, and replaying them with the SockJSFactory:

class SockJSResource(resource.Resource):
    """
    A resource that defers to a SockJS factory.
    """
    isLeaf = True

    def __init__(self, factory, options=None):
        self._factory = SockJSFactory(factory, options)


    def render(self, request):
        transport, request.transport = request.transport, None
        protocol = self._factory.buildProtocol(transport.getPeer())
        protocol.makeConnection(transport)

        path = "/".join([""] + request.postpath)
        lines = ["{0} {1} HTTP/1.1".format(request.method, path)]
        for name, values in request.requestHeaders.getAllRawHeaders():
            lines.append("{0}: {1}".format(name, ",".join(values)))
        lines += ["", request.content.read()]

        data = "\r\n".join(lines)
        protocol.dataReceived(data)

        return server.NOT_DONE_YET



This only kind of works. There's an external sockjs test suite (more like
an acceptance test suite): https://github.com/sockjs/sockjs-protocol, that
has multiple failing tests. If anyone needs help running these, I'll gladly
assist there.

In an attempt to begin debugging this, I've found that basically none of
the protocol methods get called on that protocol instance I make on the
third line of render. This took me a while to figure out because
dataReceived *was* being called -- except then I realized I'm calling it
myself in that render method :)

This leads me to believe I'm essentially just screwing up transplanting
this transport entirely. Is that the case?

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121028/fb53c298/attachment-0001.htm 

From radix at twistedmatrix.com  Sun Oct 28 11:22:10 2012
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 28 Oct 2012 16:22:10 +0100
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
Message-ID: <CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>

On Sun, Oct 28, 2012 at 1:28 PM, <exarkun at twistedmatrix.com> wrote:

> On 05:57 am, dynamicgl at gmail.com wrote:
> >Hi All
> >
> >    I am quite concerned the ticket 2424 due to our system use
> >reactor.callLater almost anywhere. I know this issue is hard to be
> >finxed
> >otherwise It wouldn't exist for such a long time. So any work around
> >before
> >we getting fix it? The only way I can do is to disable NTP or stop
> >process,
> >sync the time manually and then restart the process. The latter way is
> >hard
> >to be accepted due to we have many machines.
>
> NTP does not cause problems with scheduling.  NTP gradually slews the
> system clock - it does not introduce discontinuities (either forward or
> backward), it changes the rate at which time passes until the system
> clock agrees with the external clock.
>
> If you have systems configured to have their system clocks jump
> (`ntpdate` is sometimes used for this), fix them to not be configured
> this way.
>
> #2424 is primarily about user-initiated events, primarily on desktop
> machines - a user changing the system time, a user suspending the
> machine (and later unsuspending it).  There's little or no reason for
> problems related to #2424 to ever come up on a properly maintained
> server.
>
>
I think that for *certain* uncommon types of applications, even the very
minor skewing of ntp can cause problems, but I wonder if gelin yan has
encountered real problems caused by the ntp skewing in the application
under discussion. Gelin, you did not describe what problem you're actually
having. If you would, that would benefit the continuation of the discussion.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121028/eba5bce7/attachment.htm 

From dynamicgl at gmail.com  Sun Oct 28 11:43:25 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sun, 28 Oct 2012 23:43:25 +0800
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
Message-ID: <CABkOF6Q0g=DWOuJw3DXpsPe8sV4vh18bM-Adjm2nt7_HfOewSg@mail.gmail.com>

On Sun, Oct 28, 2012 at 8:28 PM, <exarkun at twistedmatrix.com> wrote:

> On 05:57 am, dynamicgl at gmail.com wrote:
> >Hi All
> >
> >    I am quite concerned the ticket 2424 due to our system use
> >reactor.callLater almost anywhere. I know this issue is hard to be
> >finxed
> >otherwise It wouldn't exist for such a long time. So any work around
> >before
> >we getting fix it? The only way I can do is to disable NTP or stop
> >process,
> >sync the time manually and then restart the process. The latter way is
> >hard
> >to be accepted due to we have many machines.
>
> NTP does not cause problems with scheduling.  NTP gradually slews the
> system clock - it does not introduce discontinuities (either forward or
> backward), it changes the rate at which time passes until the system
> clock agrees with the external clock.
>
> If you have systems configured to have their system clocks jump
> (`ntpdate` is sometimes used for this), fix them to not be configured
> this way.
>
> #2424 is primarily about user-initiated events, primarily on desktop
> machines - a user changing the system time, a user suspending the
> machine (and later unsuspending it).  There's little or no reason for
> problems related to #2424 to ever come up on a properly maintained
> server.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Hi Jean-Paul

    Thanks for your answer. It is much clearer from now.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121028/6c86931c/attachment.htm 

From mithrandi at mithrandi.net  Sun Oct 28 11:45:14 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 28 Oct 2012 17:45:14 +0200
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
Message-ID: <CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>

On Sun, Oct 28, 2012 at 5:22 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> I think that for *certain* uncommon types of applications, even the very
> minor skewing of ntp can cause problems, but I wonder if gelin yan has

I'm having trouble imagining such an application. In particular, if
the application is sensitive to such minor fluctuations in the time
source, I don't see how it could operate on commodity hardware at all;
such fluctuations are present regardless of whether ntp is slewing the
clock or not. You would need to use a separate hardware time source
that is more reliable, at which point ntp is essentially out of the
picture.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From radix at twistedmatrix.com  Sun Oct 28 12:01:30 2012
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 28 Oct 2012 17:01:30 +0100
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
Message-ID: <CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>

On Sun, Oct 28, 2012 at 4:45 PM, Tristan Seligmann
<mithrandi at mithrandi.net>wrote:

> On Sun, Oct 28, 2012 at 5:22 PM, Christopher Armstrong
> <radix at twistedmatrix.com> wrote:
> > I think that for *certain* uncommon types of applications, even the very
> > minor skewing of ntp can cause problems, but I wonder if gelin yan has
>
> I'm having trouble imagining such an application. In particular, if
> the application is sensitive to such minor fluctuations in the time
> source, I don't see how it could operate on commodity hardware at all;
> such fluctuations are present regardless of whether ntp is slewing the
> clock or not. You would need to use a separate hardware time source
> that is more reliable, at which point ntp is essentially out of the
> picture.
>


I'm not speaking from experience, admittedly. How big exactly are the steps
in NTP skewing?

I'm remembering VOIP applications (or anything else with low-latency
streaming or real-time gaming or something like that), where you can have
timed intervals of ~20ms, and if you miss one, you drop packets and lower
the quality of the audio stream. In a case like that, using a monotonic
time source seems like it would be a good decision. That's why Twisted
should provide an API for scheduling calls based on one, if possible (that
doesn't seem like a contentious point to me; just the general applicability
of such a scheduling mechanism).

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121028/7b34e6a0/attachment.htm 

From glyph at twistedmatrix.com  Sun Oct 28 15:18:20 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 28 Oct 2012 12:18:20 -0700
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
Message-ID: <FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>


On Oct 28, 2012, at 9:01 AM, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> I'm not speaking from experience, admittedly. How big exactly are the steps in NTP skewing?

There are two things NTP can do: stepping and slewing.  (Skewing is not one of them.)

If you're stepping, the steps can be arbitrarily large.  This is what ntpdate does.

If you're slewing, there are no steps.  This is what ntpd does.  The frequency of your clock is just adjusted up or down by a small (configurable) amount.  Generally not enough to affect the pitch or network latency of 20ms sound sampling.  In fact, it would generally help, not hurt, because the only reason ntp would be issuing a slew is that your clock is faster or slower than real time anyway.

PEP 418 <http://www.python.org/dev/peps/pep-0418/> covers this stuff in a lot of detail; especially the glossary.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121028/9729bf79/attachment.htm 

From glyph at twistedmatrix.com  Sun Oct 28 16:17:25 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 28 Oct 2012 13:17:25 -0700
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
Message-ID: <33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>


On Oct 28, 2012, at 8:17 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> This leads me to believe I'm essentially just screwing up transplanting this transport entirely. Is that the case?

Since there's no supported way to transplant a transport (see <http://tm.tl/3204>)... yes.

But, even if you were going to rely on undefined behavior and private APIs, I don't see anything in your code sample that changes anything on the transport to point at your new protocol.  So I don't see why you would think that it would start calling methods on it :).

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121028/65a1b854/attachment.htm 

From _ at lvh.cc  Sun Oct 28 16:40:31 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 28 Oct 2012 21:40:31 +0100
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
Message-ID: <CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>

On Sun, Oct 28, 2012 at 9:17 PM, Glyph <glyph at twistedmatrix.com> wrote:

> Since there's no supported way to transplant a transport (see <
> http://tm.tl/3204>)... yes.
>

Aha!


> But, even if you were going to rely on undefined behavior and private
> APIs, I don't see anything in your code sample that changes anything on the
> *transport* to point at your new protocol.  So I don't see why you would
> think that it would start calling methods on it :).
>

For some reason I thought IProtocol.makeConnection did that; I guess it's
because the implementation in Protocol sets the `transport` attribute (I
thought it was the other way around).

I've set transport.protocol = myNewProtocol and now there's one extra
passing acceptance test.

I'm slowly beginning to wonder if it wouldn't be easier to write it from
scratch using t.w.websockets from the get-go...


> -g
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121028/24ee2d74/attachment.htm 

From p.mayers at imperial.ac.uk  Sun Oct 28 18:05:57 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 28 Oct 2012 22:05:57 +0000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
Message-ID: <f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>

This depends on how you're running ntpd. If you have "-x" on the command line, yes - ntpd will not step.

If not, there are circumstances it will step - clock diffs in excess of 128ms iirc?

Who knows what newer implementations like chrony or openntpd do!

Glyph <glyph at twistedmatrix.com> wrote:

>
>On Oct 28, 2012, at 9:01 AM, Christopher Armstrong
><radix at twistedmatrix.com> wrote:
>
>> I'm not speaking from experience, admittedly. How big exactly are the
>steps in NTP skewing?
>
>There are two things NTP can do: stepping and slewing.  (Skewing is not
>one of them.)
>
>If you're stepping, the steps can be arbitrarily large.  This is what
>ntpdate does.
>
>If you're slewing, there are no steps.  This is what ntpd does.  The
>frequency of your clock is just adjusted up or down by a small
>(configurable) amount.  Generally not enough to affect the pitch or
>network latency of 20ms sound sampling.  In fact, it would generally
>help, not hurt, because the only reason ntp would be issuing a slew is
>that your clock is faster or slower than real time anyway.
>
>PEP 418 <http://www.python.org/dev/peps/pep-0418/> covers this stuff in
>a lot of detail; especially the glossary.
>
>-glyph
>
>
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Sent from my mobile device, please excuse brevity and typos.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121028/3ff49fe8/attachment.htm 

From mithrandi at mithrandi.net  Sun Oct 28 18:16:09 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 29 Oct 2012 00:16:09 +0200
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
Message-ID: <CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>

On Mon, Oct 29, 2012 at 12:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> This depends on how you're running ntpd. If you have "-x" on the command
> line, yes - ntpd will not step.
>
> If not, there are circumstances it will step - clock diffs in excess of
> 128ms iirc?

If an offset of 128ms occurs at any time other than initial ntpd
startup (which will presumably occur at system startup), that means
you've either experienced a significant period of time without
connectivity to time servers[1], you have a hardware / kernel issue
that should be resolved, or some other software on the system is
messing with the clock. Aside from network issues, the other
possibilities are all serious issues that should be corrected, not
tolerated as a normal situation.

> Who knows what newer implementations like chrony or openntpd do!

If they're doing something silly, then maybe you shouldn't use them.

[1] Well, haha, just kidding; if this happens, then ntpd will remove
the servers as being unreachable, and terminate once they have all
been removed, thus resulting in the need to restart ntpd...
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From josh at bartletts.id.au  Mon Oct 29 02:35:56 2012
From: josh at bartletts.id.au (Joshua Bartlett)
Date: Mon, 29 Oct 2012 16:35:56 +1000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
Message-ID: <CABZk45zSYJFmWu8G_eMFPvg8hBNJZn6Spsm4vV1e6t1-9eYkig@mail.gmail.com>

On 29 October 2012 08:16, Tristan Seligmann <mithrandi at mithrandi.net> wrote:

> If an offset of 128ms occurs at any time other than initial ntpd
> startup (which will presumably occur at system startup), that means
> you've either experienced a significant period of time without
> connectivity to time servers[1], you have a hardware / kernel issue
> that should be resolved, or some other software on the system is
> messing with the clock. Aside from network issues, the other
> possibilities are all serious issues that should be corrected, not
> tolerated as a normal situation.
>

In my experience this sort of time drift happens quite frequently on
virtual machines.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121029/f43036a3/attachment.htm 

From dynamicgl at gmail.com  Mon Oct 29 03:09:14 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 29 Oct 2012 15:09:14 +0800
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
Message-ID: <CABkOF6Qv3bHdN1AFkiGD3mBTTPZ4XSu-EFbExn4UiFRHDCqaFA@mail.gmail.com>

On Sun, Oct 28, 2012 at 11:22 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> On Sun, Oct 28, 2012 at 1:28 PM, <exarkun at twistedmatrix.com> wrote:
>
>> On 05:57 am, dynamicgl at gmail.com wrote:
>> >Hi All
>> >
>> >    I am quite concerned the ticket 2424 due to our system use
>> >reactor.callLater almost anywhere. I know this issue is hard to be
>> >finxed
>> >otherwise It wouldn't exist for such a long time. So any work around
>> >before
>> >we getting fix it? The only way I can do is to disable NTP or stop
>> >process,
>> >sync the time manually and then restart the process. The latter way is
>> >hard
>> >to be accepted due to we have many machines.
>>
>> NTP does not cause problems with scheduling.  NTP gradually slews the
>> system clock - it does not introduce discontinuities (either forward or
>> backward), it changes the rate at which time passes until the system
>> clock agrees with the external clock.
>>
>> If you have systems configured to have their system clocks jump
>> (`ntpdate` is sometimes used for this), fix them to not be configured
>> this way.
>>
>> #2424 is primarily about user-initiated events, primarily on desktop
>> machines - a user changing the system time, a user suspending the
>> machine (and later unsuspending it).  There's little or no reason for
>> problems related to #2424 to ever come up on a properly maintained
>> server.
>>
>>
> I think that for *certain* uncommon types of applications, even the very
> minor skewing of ntp can cause problems, but I wonder if gelin yan has
> encountered real problems caused by the ntp skewing in the application
> under discussion. Gelin, you did not describe what problem you're actually
> having. If you would, that would benefit the continuation of the discussion.
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
Hi Christopher

   I didn't encounter any problem with twisted so far but it happened a few
years ago when I deployed the system (based on C#/C++) on windows.
Sometimes, the timer stopped running.

    Bugs triggered by this issue are not really easy to be detected. That
is why I am concerned.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121029/36a50ad1/attachment.htm 

From p.mayers at imperial.ac.uk  Mon Oct 29 04:33:48 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 29 Oct 2012 08:33:48 +0000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
Message-ID: <508E3F6C.1030301@imperial.ac.uk>

On 10/28/2012 10:16 PM, Tristan Seligmann wrote:
> On Mon, Oct 29, 2012 at 12:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> This depends on how you're running ntpd. If you have "-x" on the command
>> line, yes - ntpd will not step.
>>
>> If not, there are circumstances it will step - clock diffs in excess of
>> 128ms iirc?
>
> If an offset of 128ms occurs at any time other than initial ntpd
> startup (which will presumably occur at system startup), that means
> you've either experienced a significant period of time without
> connectivity to time servers[1], you have a hardware / kernel issue
> that should be resolved, or some other software on the system is
> messing with the clock. Aside from network issues, the other
> possibilities are all serious issues that should be corrected, not
> tolerated as a normal situation.

Sadly, this is not the case. As has already been pointed out, virtual 
machine clocks can undergo stepping in "normal" oepration. A specfic 
example: if a VMWare installation performs live migration of a host. We 
often see:

ntpd[1793]: time reset +0.263757 s

...when this happens. This can occur several times a day, as we're 
running vCenter-controlled auto-migration - a very common setup. This is 
forward stepping of course, so is relatively harmless (backward is a pain).

>
>> Who knows what newer implementations like chrony or openntpd do!
>
> If they're doing something silly, then maybe you shouldn't use them.

I have no reason to suspect they are doing somthing silly. I merely 
point out that there are other implmentations than the common ntpd, and 
that I don't know if they step or not. In fact, a little research 
suggests that chrony has *better* behaviour w.r.t stepping than ntpd:

http://lists.fedoraproject.org/pipermail/devel/2010-May/135679.html

...which is nice.

I sense a bit of defensiveness to this reply, TBH. Maybe I'm imagniing 
it, but if so that's unncessary. I don't hold a strong position about 
Twisted having a monotonic clock.

When the original ticket was discussed here months ago, I was quite 
alarmed because the symptoms sounded dire. Further discussion clarified 
what the issues were, and I decided they weren't significant (for us).

Maybe "Twisted doesn't need a monotonic clock" is the right reply, but 
it would be wrong to base that on the assumpton that "ntpd doesn't step" 
- that's all I was trying to say.

Cheers,
Phil


From mithrandi at mithrandi.net  Mon Oct 29 05:59:02 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 29 Oct 2012 11:59:02 +0200
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <508E3F6C.1030301@imperial.ac.uk>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
Message-ID: <CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>

On Mon, Oct 29, 2012 at 10:33 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 10/28/2012 10:16 PM, Tristan Seligmann wrote:
>> On Mon, Oct 29, 2012 at 12:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> Sadly, this is not the case. As has already been pointed out, virtual
> machine clocks can undergo stepping in "normal" oepration. A specfic
> example: if a VMWare installation performs live migration of a host. We
> often see:
>
> ntpd[1793]: time reset +0.263757 s
>
> ...when this happens. This can occur several times a day, as we're
> running vCenter-controlled auto-migration - a very common setup. This is
> forward stepping of course, so is relatively harmless (backward is a pain).

My original reply was perhaps a bit... exclusionary. But I think the
point I was trying to make is still valid; if your VM is suspended for
250ms due to a migration (or CPU throttling, or ...) then it is
impossible to maintain a consistent stream of time events because
there isn't any code executing at all. Whether the clock stalls, or is
jumped forward 250ms, you still have an unavoidable problem as far as
time-keeping is concerned.

>>> Who knows what newer implementations like chrony or openntpd do!
>>
>> If they're doing something silly, then maybe you shouldn't use them.

I didn't intend it that way, but I can see how what I said could be
read in a hostile / defensive tone. Perhaps this would be a better
phrasing:

If chrony or openntpd are doing something sensible, then there
shouldn't be any serious issues with using them; if they're doing
something that seriously destabilizes the system clock, then you
probably shouldn't be using them, at least not if you want reliable
timekeeping. I'm not familiar enough with either of them to know which
case applies, so I didn't intend to come across as bashing chrony
and/or openntpd.

> Maybe "Twisted doesn't need a monotonic clock" is the right reply, but
> it would be wrong to base that on the assumpton that "ntpd doesn't step"
> - that's all I was trying to say.

I don't think anyone in this thread is arguing *against* implementing
this functionality; I think the point was just that this functionality
is only of critical importance under a limited range of circumstances,
as opposed to being something of urgent need for every Twisted-using
program that needs to schedule timed events.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From exarkun at twistedmatrix.com  Mon Oct 29 11:02:45 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 29 Oct 2012 15:02:45 -0000
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
	<CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
Message-ID: <20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>

On 28 Oct, 08:40 pm, _ at lvh.cc wrote:
>
>For some reason I thought IProtocol.makeConnection did that; I guess 
>it's
>because the implementation in Protocol sets the `transport` attribute 
>(I
>thought it was the other way around).
>
>I've set transport.protocol = myNewProtocol and now there's one extra
>passing acceptance test.

In case anyone didn't read #3204: this is, of course, an unsupported use 
of transports and not guaranteed to work or continue working (currently 
it will not work if you happen to be using the (preferred) protocol- 
based SSL implementation).

Jean-Paul


From dynamicgl at gmail.com  Mon Oct 29 11:21:51 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 29 Oct 2012 23:21:51 +0800
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
	<CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
Message-ID: <CABkOF6RCWsFyXK-CXeiRDV=PsHz6L-2hJJwznz4vjsYLVoGT2g@mail.gmail.com>

On Mon, Oct 29, 2012 at 5:59 PM, Tristan Seligmann
<mithrandi at mithrandi.net>wrote:

> On Mon, Oct 29, 2012 at 10:33 AM, Phil Mayers <p.mayers at imperial.ac.uk>
> wrote:
> > On 10/28/2012 10:16 PM, Tristan Seligmann wrote:
> >> On Mon, Oct 29, 2012 at 12:05 AM, Phil Mayers <p.mayers at imperial.ac.uk>
> wrote:
> > Sadly, this is not the case. As has already been pointed out, virtual
> > machine clocks can undergo stepping in "normal" oepration. A specfic
> > example: if a VMWare installation performs live migration of a host. We
> > often see:
> >
> > ntpd[1793]: time reset +0.263757 s
> >
> > ...when this happens. This can occur several times a day, as we're
> > running vCenter-controlled auto-migration - a very common setup. This is
> > forward stepping of course, so is relatively harmless (backward is a
> pain).
>
> My original reply was perhaps a bit... exclusionary. But I think the
> point I was trying to make is still valid; if your VM is suspended for
> 250ms due to a migration (or CPU throttling, or ...) then it is
> impossible to maintain a consistent stream of time events because
> there isn't any code executing at all. Whether the clock stalls, or is
> jumped forward 250ms, you still have an unavoidable problem as far as
> time-keeping is concerned.
>
> >>> Who knows what newer implementations like chrony or openntpd do!
> >>
> >> If they're doing something silly, then maybe you shouldn't use them.
>
> I didn't intend it that way, but I can see how what I said could be
> read in a hostile / defensive tone. Perhaps this would be a better
> phrasing:
>
> If chrony or openntpd are doing something sensible, then there
> shouldn't be any serious issues with using them; if they're doing
> something that seriously destabilizes the system clock, then you
> probably shouldn't be using them, at least not if you want reliable
> timekeeping. I'm not familiar enough with either of them to know which
> case applies, so I didn't intend to come across as bashing chrony
> and/or openntpd.
>
> > Maybe "Twisted doesn't need a monotonic clock" is the right reply, but
> > it would be wrong to base that on the assumpton that "ntpd doesn't step"
> > - that's all I was trying to say.
>
> I don't think anyone in this thread is arguing *against* implementing
> this functionality; I think the point was just that this functionality
> is only of critical importance under a limited range of circumstances,
> as opposed to being something of urgent need for every Twisted-using
> program that needs to schedule timed events.
> --
> mithrandi, i Ainil en-Balandor, a faer Ambar
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi

   Actually clock forward can be accepted at least for my case but not
backward which may freeze the whole process and nobody know when it will be
resumed in the future.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121029/ba6fbc1c/attachment-0001.htm 

From glyph at twistedmatrix.com  Mon Oct 29 13:39:24 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 29 Oct 2012 10:39:24 -0700
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
	<CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
Message-ID: <85227B2E-8A05-4A16-8245-008511624029@twistedmatrix.com>


On Oct 29, 2012, at 2:59 AM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:

> I don't think anyone in this thread is arguing *against* implementing
> this functionality; I think the point was just that this functionality
> is only of critical importance under a limited range of circumstances,
> as opposed to being something of urgent need for every Twisted-using
> program that needs to schedule timed events.

Yes.  Even if the reasons cited in this thread are not 100% correct, the fact is that many thousands of Twisted servers that depend intimately on timed events are deployed, even on vmware-hosted virtual machine infrastructures, without experiencing difficulties related to #2424.

That said, it would be great if someone could implement a fix for that issue, as it's just one more thing that system operators need to be aware of and keep track of.  It would be really neat if you could totally screw up your timekeeping but have Twisted applications keep running reliably regardless.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121029/5bb395bb/attachment.htm 

From glyph at twistedmatrix.com  Mon Oct 29 13:41:28 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 29 Oct 2012 10:41:28 -0700
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
	<CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
	<20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
Message-ID: <D57321DD-67EF-4FF1-8DF1-657048E88A5A@twistedmatrix.com>


On Oct 29, 2012, at 8:02 AM, exarkun at twistedmatrix.com wrote:

> On 28 Oct, 08:40 pm, _ at lvh.cc wrote:
>> 
>> For some reason I thought IProtocol.makeConnection did that; I guess 
>> it's
>> because the implementation in Protocol sets the `transport` attribute 
>> (I
>> thought it was the other way around).
>> 
>> I've set transport.protocol = myNewProtocol and now there's one extra
>> passing acceptance test.
> 
> In case anyone didn't read #3204: this is, of course, an unsupported use 
> of transports and not guaranteed to work or continue working (currently 
> it will not work if you happen to be using the (preferred) protocol- 
> based SSL implementation).

Why would anyone not have read <http://tm.tl/3204>?  Everyone, go read it, right now.  (There's a branch, and everything!)

-glyph

From p.mayers at imperial.ac.uk  Mon Oct 29 13:52:17 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 29 Oct 2012 17:52:17 +0000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
	<CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
Message-ID: <508EC251.10604@imperial.ac.uk>

On 29/10/12 09:59, Tristan Seligmann wrote:

> I don't think anyone in this thread is arguing *against* implementing
> this functionality; I think the point was just that this functionality
> is only of critical importance under a limited range of circumstances,
> as opposed to being something of urgent need for every Twisted-using
> program that needs to schedule timed events.

I think this is a pretty good summary; it's rare to need this (though 
often essential when you do) and it's also hard. TBH I'm not sure there 
are any sensible semantics for a lot of the cases - the best the 
framework can do is give the app an option for clocks, and try to give 
them as much info as possible about how they've advanced or not.


From tobias.oberstein at tavendo.de  Mon Oct 29 13:58:02 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 29 Oct 2012 10:58:02 -0700
Subject: [Twisted-Python] deferToThread and reactor loop
Message-ID: <634914A010D0B943A035D226786325D433914E92BA@EXVMBX020-12.exch020.serverdata.net>

Hi,

I've got a question regarding

deferToThread / runWithConnection

I have a network server that accepts RPCs and forwards those to a relational database calling stored procedures.

The call of the stored procedures is happening via "runWithConnection" .. that is on a background thread pool (since that DBs driver is blocking).

Now, when there is a large number of RPCs coming in roughly at once, the latency of each call forwarded to the RDBMs increased into the 10's of ms.

I have created a self-contained test program without DB etc that I think reproduces the "issue":

https://github.com/oberstet/scratchbox/blob/master/python/twisted/threadpoollatency/test.py

**************
Am I correct that "deferToThread" does not immediately forward the call to a background thread, but only the next time the reactor loop runs?
**************

At least that is what I conclude from the test program's option
 
https://github.com/oberstet/scratchbox/blob/master/python/twisted/threadpoollatency/test.py#L58

which produces totally different timing results:

$ python test.py 800 no 20
2012-10-29 18:41:11+0100 [-] Log opened.
2012-10-29 18:41:11+0100 [-] Using Twisted reactor class <class 'twisted.internet.iocpreactor.reactor.IOCPReactor'>
2012-10-29 18:41:11+0100 [-] Thread pool size suggested: 20
2012-10-29 18:41:11+0100 [-] Worker count: 800
2012-10-29 18:41:11+0100 [-] release to reactor between deferToThread: False
2012-10-29 18:41:11+0100 [-] total run-time: 121 ms
2012-10-29 18:41:11+0100 [-] avg. thread switch IN  time: 61177 us
2012-10-29 18:41:11+0100 [-] max. thread switch IN  time: 79436 us
2012-10-29 18:41:11+0100 [-] avg. thread switch OUT time: 16021 us
2012-10-29 18:41:11+0100 [-] max. thread switch OUT time: 23150 us
2012-10-29 18:41:11+0100 [-] Main loop terminated.

$ python test.py 800 yes 20
2012-10-29 18:41:14+0100 [-] Log opened.
2012-10-29 18:41:14+0100 [-] Using Twisted reactor class <class 'twisted.internet.iocpreactor.reactor.IOCPReactor'>
2012-10-29 18:41:14+0100 [-] Thread pool size suggested: 20
2012-10-29 18:41:14+0100 [-] Worker count: 800
2012-10-29 18:41:14+0100 [-] release to reactor between deferToThread: True
2012-10-29 18:41:14+0100 [-] total run-time: 201 ms
2012-10-29 18:41:14+0100 [-] avg. thread switch IN  time: 127 us
2012-10-29 18:41:14+0100 [-] max. thread switch IN  time: 5131 us
2012-10-29 18:41:14+0100 [-] avg. thread switch OUT time: 166 us
2012-10-29 18:41:14+0100 [-] max. thread switch OUT time: 7886 us
2012-10-29 18:41:15+0100 [-] Main loop terminated.

===

Could someone pls enlighten me rgd the "issue"? What's the point, and how to interpret the timings?

Any hints greatly appreciated!

Thanks,
Tobias

Above timings are on Windows. Here other platforms:


Results on FreeBSD
================

[oberstet at www ~/scm/scratchbox/python/twisted/threadpoollatency]$ python test.py 800 no 20
2012-10-29 17:53:37+0000 [-] Log opened.
2012-10-29 17:53:37+0000 [-] Using Twisted reactor class <class 'twisted.internet.kqreactor.KQueueReactor'>
2012-10-29 17:53:37+0000 [-] Thread pool size suggested: 20
2012-10-29 17:53:37+0000 [-] Worker count: 800
2012-10-29 17:53:37+0000 [-] release to reactor between deferToThread: False
2012-10-29 17:53:37+0000 [-] total run-time: 469 ms
2012-10-29 17:53:37+0000 [-] avg. thread switch IN  time: 244311 us
2012-10-29 17:53:37+0000 [-] max. thread switch IN  time: 300846 us
2012-10-29 17:53:37+0000 [-] avg. thread switch OUT time: 2347 us
2012-10-29 17:53:37+0000 [-] max. thread switch OUT time: 25703 us
2012-10-29 17:53:37+0000 [-] Main loop terminated.

[oberstet at www ~/scm/scratchbox/python/twisted/threadpoollatency]$ python test.py 800 yes 20
2012-10-29 17:53:44+0000 [-] Log opened.
2012-10-29 17:53:44+0000 [-] Using Twisted reactor class <class 'twisted.internet.kqreactor.KQueueReactor'>
2012-10-29 17:53:44+0000 [-] Thread pool size suggested: 20
2012-10-29 17:53:44+0000 [-] Worker count: 800
2012-10-29 17:53:45+0000 [-] release to reactor between deferToThread: True
2012-10-29 17:53:45+0000 [-] total run-time: 707 ms
2012-10-29 17:53:45+0000 [-] avg. thread switch IN  time: 410 us
2012-10-29 17:53:45+0000 [-] max. thread switch IN  time: 6184 us
2012-10-29 17:53:45+0000 [-] avg. thread switch OUT time: 310 us
2012-10-29 17:53:45+0000 [-] max. thread switch OUT time: 1331 us
2012-10-29 17:53:45+0000 [-] Main loop terminated.


Results on Linux
=============

[webmq at webmqpgcentos threadpoollatency]$ python test.py 800 no 20
2012-10-29 18:56:13+0100 [-] Log opened.
2012-10-29 18:56:13+0100 [-] Using Twisted reactor class <class 'twisted.internet.epollreactor.EPollReactor'>
2012-10-29 18:56:13+0100 [-] Thread pool size suggested: 20
2012-10-29 18:56:13+0100 [-] Worker count: 800
2012-10-29 18:56:13+0100 [-] release to reactor between deferToThread: False
2012-10-29 18:56:13+0100 [-] total run-time: 178 ms
2012-10-29 18:56:13+0100 [-] avg. thread switch IN  time: 77332 us
2012-10-29 18:56:13+0100 [-] max. thread switch IN  time: 123225 us
2012-10-29 18:56:13+0100 [-] avg. thread switch OUT time: 22048 us
2012-10-29 18:56:13+0100 [-] max. thread switch OUT time: 43779 us
2012-10-29 18:56:13+0100 [-] Main loop terminated.

[webmq at webmqpgcentos threadpoollatency]$ python test.py 800 yes 20
2012-10-29 18:56:14+0100 [-] Log opened.
2012-10-29 18:56:14+0100 [-] Using Twisted reactor class <class 'twisted.internet.epollreactor.EPollReactor'>
2012-10-29 18:56:14+0100 [-] Thread pool size suggested: 20
2012-10-29 18:56:14+0100 [-] Worker count: 800
2012-10-29 18:56:15+0100 [-] release to reactor between deferToThread: True
2012-10-29 18:56:15+0100 [-] total run-time: 370 ms
2012-10-29 18:56:15+0100 [-] avg. thread switch IN  time: 694 us
2012-10-29 18:56:15+0100 [-] max. thread switch IN  time: 3204 us
2012-10-29 18:56:15+0100 [-] avg. thread switch OUT time: 483 us
2012-10-29 18:56:15+0100 [-] max. thread switch OUT time: 7991 us
2012-10-29 18:56:15+0100 [-] Main loop terminated.



From glyph at twistedmatrix.com  Mon Oct 29 14:08:15 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 29 Oct 2012 11:08:15 -0700
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <508EC251.10604@imperial.ac.uk>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
	<CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
	<508EC251.10604@imperial.ac.uk>
Message-ID: <6048BF5C-B7F5-47B9-B787-414168D5C592@twistedmatrix.com>


On Oct 29, 2012, at 10:52 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 29/10/12 09:59, Tristan Seligmann wrote:
> 
>> I don't think anyone in this thread is arguing *against* implementing
>> this functionality; I think the point was just that this functionality
>> is only of critical importance under a limited range of circumstances,
>> as opposed to being something of urgent need for every Twisted-using
>> program that needs to schedule timed events.
> 
> I think this is a pretty good summary; it's rare to need this (though 
> often essential when you do) and it's also hard. TBH I'm not sure there 
> are any sensible semantics for a lot of the cases - the best the 
> framework can do is give the app an option for clocks, and try to give 
> them as much info as possible about how they've advanced or not.

Right; callLater is not quite expressive enough.  I wouldn't want to expose the whole mess of clock nonsense to every application, but it would be necessary to split callLater into "callAfter" (delay a certain number of seconds from "now", to within a best guess, regardless of clock changes) and "callAt" (call as close as possible to a certain calendar time, respecting clock changes).

-glyph

From _ at lvh.cc  Tue Oct 30 02:50:17 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 30 Oct 2012 07:50:17 +0100
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
	<CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
	<20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
Message-ID: <CAE_Hg6bM+fV9HWMo8JSumkWY1-qSYgVqAxNhZq+Fp7pMVKbVEw@mail.gmail.com>

On Mon, Oct 29, 2012 at 4:02 PM, <exarkun at twistedmatrix.com> wrote:

>  In case anyone didn't read #3204: this is, of course, an unsupported use
> of transports and not guaranteed to work or continue working (currently
> it will not work if you happen to be using the (preferred) protocol-
> based SSL implementation).
>

So, is there a non-terrible way of doing "feed the raw HTTP bytes that
caused this request to this factory instead", in an IResource?


> Jean-Paul
>

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121030/0750ee05/attachment-0001.htm 

From josh at bartletts.id.au  Tue Oct 30 03:09:54 2012
From: josh at bartletts.id.au (Joshua Bartlett)
Date: Tue, 30 Oct 2012 17:09:54 +1000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <6048BF5C-B7F5-47B9-B787-414168D5C592@twistedmatrix.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
	<CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
	<508EC251.10604@imperial.ac.uk>
	<6048BF5C-B7F5-47B9-B787-414168D5C592@twistedmatrix.com>
Message-ID: <CABZk45xTBEQKiQmW14AsYaivz6TcDt6UPE1L-G4eYAcogSvR8A@mail.gmail.com>

On 30 October 2012 04:08, Glyph <glyph at twistedmatrix.com> wrote:

> Right; callLater is not quite expressive enough.  I wouldn't want to
> expose the whole mess of clock nonsense to every application, but it would
> be necessary to split callLater into "callAfter" (delay a certain number of
> seconds from "now", to within a best guess, regardless of clock changes)
> and "callAt" (call as close as possible to a certain calendar time,
> respecting clock changes).
>

+1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121030/41d3fe9c/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Oct 30 05:04:02 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 30 Oct 2012 09:04:02 +0000
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <CAE_Hg6bM+fV9HWMo8JSumkWY1-qSYgVqAxNhZq+Fp7pMVKbVEw@mail.gmail.com>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
	<CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
	<20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
	<CAE_Hg6bM+fV9HWMo8JSumkWY1-qSYgVqAxNhZq+Fp7pMVKbVEw@mail.gmail.com>
Message-ID: <508F9802.1030907@imperial.ac.uk>

On 10/30/2012 06:50 AM, Laurens Van Houtven wrote:
> On Mon, Oct 29, 2012 at 4:02 PM, <exarkun at twistedmatrix.com
> <mailto:exarkun at twistedmatrix.com>> wrote:
>
>     In case anyone didn't read #3204: this is, of course, an unsupported use
>     of transports and not guaranteed to work or continue working (currently
>     it will not work if you happen to be using the (preferred) protocol-
>     based SSL implementation).
>
>
> So, is there a non-terrible way of doing "feed the raw HTTP bytes that
> caused this request to this factory instead", in an IResource?

Would it not make more sense to subclass Site and swap out the Channel 
implementation for one that can be "pointed" somewhere else? It means 
you have to use that "Site" for any WebSocket enabled site, but it would 
be clean otherwise. Like so:

class WebSockCapableChannel(http.HTTPChannel):
   def __init__(self):
     http.HTTPChannel.__init__(self)
     self.websocket = False

   def startWebSocket(self, proto):
     self.websocket = True
     self.websocket_proto = proto
     proto.transport = someWrapper(self)
     proto.connectionMade(...)
     self.setRawMode()

   def rawDataReceived(self, data):
     if self.websocket:
       self.websocket_proto.dataReceived(data)
     else:
       http.HTTPChannel.rawDataReceived(self, data)

class WebSocketSite(server.Site):
   procol = WebSockCapableChannel

...then in your "Resource" do:

class MyResource(...):
   def render(...):
     request.channel.startWebSocket(someProto())


From _ at lvh.cc  Tue Oct 30 05:18:11 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 30 Oct 2012 10:18:11 +0100
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <508F9802.1030907@imperial.ac.uk>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
	<CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
	<20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
	<CAE_Hg6bM+fV9HWMo8JSumkWY1-qSYgVqAxNhZq+Fp7pMVKbVEw@mail.gmail.com>
	<508F9802.1030907@imperial.ac.uk>
Message-ID: <CAE_Hg6aSeSP9piF1oBY0_4qOctMqsgVQ0n5R_bnsZLFfbhF9MA@mail.gmail.com>

On Tue, Oct 30, 2012 at 10:04 AM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> Would it not make more sense to subclass Site and swap out the Channel
> implementation for one that can be "pointed" somewhere else? It means
> you have to use that "Site" for any WebSocket enabled site, but it would
> be clean otherwise. Like so:
>

Just to be clear (I'm not sure it matters): SockJS is something that gives
a WebSockets API on the client side, but implements that using whatever the
best API is available there. It may in fact be implemented using a whole
host of things, including XHR streaming and polling, iframes, ...


> class WebSockCapableChannel(http.HTTPChannel):
>    def __init__(self):
>      http.HTTPChannel.__init__(self)
>      self.websocket = False
>
>    def startWebSocket(self, proto):
>      self.websocket = True
>      self.websocket_proto = proto
>      proto.transport = someWrapper(self)
>      proto.connectionMade(...)
>      self.setRawMode()
>
>    def rawDataReceived(self, data):
>      if self.websocket:
>        self.websocket_proto.dataReceived(data)
>      else:
>        http.HTTPChannel.rawDataReceived(self, data)
>
> class WebSocketSite(server.Site):
>    procol = WebSockCapableChannel
>
> ...then in your "Resource" do:
>
> class MyResource(...):
>    def render(...):
>      request.channel.startWebSocket(someProto())
>

I'll try that; but isn't render called when an awful lot of parsing has
already been done? Query arguments and headers are already read and parsed;
sockjs-twisted expects its first line to be "POST /echo/bla/bla/bla
HTTP/1.1\r\n" :)


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20121030/2c8f43bb/attachment.htm 

From gregoire.leroy at retenodus.net  Wed Oct 31 03:14:34 2012
From: gregoire.leroy at retenodus.net (=?iso-8859-1?q?Gr=E9goire_Leroy?=)
Date: Wed, 31 Oct 2012 16:14:34 +0900
Subject: [Twisted-Python] Create client in Server factory
Message-ID: <201210311614.34673.gregoire.leroy@retenodus.net>

Hi,

I have a server who receive data from clients A/B/C (remote machines). I want 
to use a client D (on the same machine than the server) to send this data to 
another server (remote).

The difficulty is, I want to use the same client D connection for any client. I 
don't want open an new connection each time.

First thing I would think is to create the connection in my server factory, 
and use client's methods in my server protocol, for example with
[...]
class LocalProxyFactory(Factory):
        def __init__(self):
                f = LocalProxyClientFactory()
                reactor.connectTCP("retenodus.net", 4242, f)
                reactor.run()
[...]
But in this case, code execution will stay in the reactor, right ?

I have read that :
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother
But I don't know how it can be applied to my situation.

Thanks,
Gr?goire Leroy


From p.mayers at imperial.ac.uk  Wed Oct 31 05:49:33 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 31 Oct 2012 09:49:33 +0000
Subject: [Twisted-Python] Create client in Server factory
In-Reply-To: <201210311614.34673.gregoire.leroy@retenodus.net>
References: <201210311614.34673.gregoire.leroy@retenodus.net>
Message-ID: <5090F42D.4050303@imperial.ac.uk>

On 10/31/2012 07:14 AM, Gr?goire Leroy wrote:
> Hi,
>
> I have a server who receive data from clients A/B/C (remote machines). I want
> to use a client D (on the same machine than the server) to send this data to
> another server (remote).
>
> The difficulty is, I want to use the same client D connection for any client. I
> don't want open an new connection each time.
>
> First thing I would think is to create the connection in my server factory,
> and use client's methods in my server protocol, for example with
> [...]
> class LocalProxyFactory(Factory):
>          def __init__(self):
>                  f = LocalProxyClientFactory()
>                  reactor.connectTCP("retenodus.net", 4242, f)
>                  reactor.run()

The "reactor.run" is just wrong - remove it.

You need to connect to a server, and share this connection amongst some 
protocols. But you can't control the order in which these connections 
complete, so A/B/C might connect before D is ready.

You've really got two choices - accept the connections from A/B/C but 
have your server protocol "wait" until D is ready - something like this:

from twisted.internet.protocol import ClientCreator

class Server(...):
   def connectionMade(self):
     if self.factory.connD is None:
       self.factory.waitFor(self._ready)
       self.transport.pauseProducing()

   def _ready(self):
     self.transport.resumeProducing()

d_connect = ClientCreator(reactor, DProtocol)

class ServerFactory(...):
   def __init__(self):
     self.connD = None
     self._wait = []
     d_connect.connectTCP(Dhost, port).addCallback(self.dReady)

   def waitFor(self, _cb):
     if self.connD:
       _cb(self.connD)
     else:
       d = defer.Deferred()
       d.addCallback(_cb)
       self._wait.append(d)

   def dReady(self, proto):
     self.connD = proto
     cb = self._wait
     self._wait = []
     for c in cb:
       c.callback(proto)

def main():
   reactor.listenTCP(..., ServerFactory())
   reactor.run()

...or don't start listening until D has connected, like this:

class ServerFactory(...):
   def __init__(self, dProto):
     self.connD = dProto

def startListen(dProto):
   reactor.listenTCP(..., ServerFactory(dProto))

def main():
   d_connect.connectTCP(Dhost, port).addCallback(startListen)
   reactor.run()

The latter is simpler, but which is appropriate depends on your needs.

Note that I've used ClientCreator to get a callback when the connection 
to D is ready - remember that doesn't happen immediately.


From kevin.horn at gmail.com  Wed Oct 31 10:31:32 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 31 Oct 2012 09:31:32 -0500
Subject: [Twisted-Python] Create client in Server factory
In-Reply-To: <5090F42D.4050303@imperial.ac.uk>
References: <201210311614.34673.gregoire.leroy@retenodus.net>
	<5090F42D.4050303@imperial.ac.uk>
Message-ID: <CA+U=zK0YZ-CPmiJKPnH9YTes5BBuNt3AZCXm8h37xON=7yLyfA@mail.gmail.com>

On Wed, Oct 31, 2012 at 4:49 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 10/31/2012 07:14 AM, Gr?goire Leroy wrote:
>> Hi,
>>
>> I have a server who receive data from clients A/B/C (remote machines). I want
>> to use a client D (on the same machine than the server) to send this data to
>> another server (remote).
>>
>> The difficulty is, I want to use the same client D connection for any client. I
>> don't want open an new connection each time.
>>
>> First thing I would think is to create the connection in my server factory,
>> and use client's methods in my server protocol, for example with
>> [...]
>> class LocalProxyFactory(Factory):
>>          def __init__(self):
>>                  f = LocalProxyClientFactory()
>>                  reactor.connectTCP("retenodus.net", 4242, f)
>>                  reactor.run()
>
> The "reactor.run" is just wrong - remove it.
>
> You need to connect to a server, and share this connection amongst some
> protocols. But you can't control the order in which these connections
> complete, so A/B/C might connect before D is ready.
>
> You've really got two choices - accept the connections from A/B/C but
> have your server protocol "wait" until D is ready - something like this:
>
> from twisted.internet.protocol import ClientCreator
>
> class Server(...):
>    def connectionMade(self):
>      if self.factory.connD is None:
>        self.factory.waitFor(self._ready)
>        self.transport.pauseProducing()
>
>    def _ready(self):
>      self.transport.resumeProducing()
>
> d_connect = ClientCreator(reactor, DProtocol)
>
> class ServerFactory(...):
>    def __init__(self):
>      self.connD = None
>      self._wait = []
>      d_connect.connectTCP(Dhost, port).addCallback(self.dReady)
>
>    def waitFor(self, _cb):
>      if self.connD:
>        _cb(self.connD)
>      else:
>        d = defer.Deferred()
>        d.addCallback(_cb)
>        self._wait.append(d)
>
>    def dReady(self, proto):
>      self.connD = proto
>      cb = self._wait
>      self._wait = []
>      for c in cb:
>        c.callback(proto)
>
> def main():
>    reactor.listenTCP(..., ServerFactory())
>    reactor.run()
>
> ...or don't start listening until D has connected, like this:
>
> class ServerFactory(...):
>    def __init__(self, dProto):
>      self.connD = dProto
>
> def startListen(dProto):
>    reactor.listenTCP(..., ServerFactory(dProto))
>
> def main():
>    d_connect.connectTCP(Dhost, port).addCallback(startListen)
>    reactor.run()
>
> The latter is simpler, but which is appropriate depends on your needs.
>
> Note that I've used ClientCreator to get a callback when the connection
> to D is ready - remember that doesn't happen immediately.
>

See also:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

That example only uses a single connection in place of your clients
A/B/C, but should be adaptable to your situation.

--
Kevin Horn


From p.mayers at imperial.ac.uk  Wed Oct 31 17:06:33 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 31 Oct 2012 21:06:33 +0000
Subject: [Twisted-Python] Create client in Server factory
In-Reply-To: <CA+U=zK0YZ-CPmiJKPnH9YTes5BBuNt3AZCXm8h37xON=7yLyfA@mail.gmail.com>
References: <201210311614.34673.gregoire.leroy@retenodus.net>
	<5090F42D.4050303@imperial.ac.uk>
	<CA+U=zK0YZ-CPmiJKPnH9YTes5BBuNt3AZCXm8h37xON=7yLyfA@mail.gmail.com>
Message-ID: <509192D9.4040408@imperial.ac.uk>

On 10/31/2012 02:31 PM, Kevin Horn wrote:

> See also:
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother
>
> That example only uses a single connection in place of your clients
> A/B/C, but should be adaptable to your situation.
>

In fairness to the OP, he did say he'd seen that ;o)


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.2.1355012300.10584.twisted-python@twistedmatrix.com>

"As you observed, doing this on the server accepts and then
immediately closes the connection. There is no way to not accept the
connection. This is a limitation of the underlying platform APIs."

Is this still the case? We can't limit the number of accepted connections?

Regards,
 Miha.


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.4.1358351265.10584.twisted-python@twistedmatrix.com>

always returns False.

-----

I need to call

self._tlsConnection.set_shutdown(SENT_SHUTDOWN | RECEIVED_SHUTDOWN)

before calling

shutdownSuccess = self._tlsConnection.shutdown()

and then  self._tlsConnection.shutdown() returns True, otherwise it
returns False.

    def loseConnection(self):
        """
        Send a TLS close alert and close the underlying connection.
        """
        if self.disconnecting:
            return
        self.disconnecting = True
        if not self._writeBlockedOnRead and self._producer is None:
            from OpenSSL.SSL import RECEIVED_SHUTDOWN
            self._tlsConnection.set_shutdown(RECEIVED_SHUTDOWN)
            self._shutdownTLS()

    def _shutdownTLS(self):
        """
        Initiate, or reply to, the shutdown handshake of the TLS layer.
        """
        self._flushSendBIO()
        shutdownSuccess = self._tlsConnection.shutdown()
        self._flushSendBIO()
        if shutdownSuccess:
            # Both sides have shutdown, so we can start closing lower-level
            # transport. This will also happen if we haven't started
            # negotiation at all yet, in which case shutdown succeeds
            # immediately.
            self.transport.loseConnection()


----


How should the connection be handled when
self._tlsConnection.shutdown() returns False?


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.5.1358351265.10584.twisted-python@twistedmatrix.com>

self.transport.loseConnection() is never closed.

Many thanks,
Adi

-- 
Adi Roiban


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.6.1361063370.10584.twisted-python@twistedmatrix.com>


On Sat, Feb 16, 2013 at 11:53 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Feb 16, 2013, at 1:09 PM, Adam Heller <sk82712 at gmail.com> wrote:
>
> Guys,
> I'll try to be as exact as I can be with my question, but it may end up
> being pretty broad. (I'm also relatively new to python, please go easy on
> my code although suggestions are of course welcome.)
>
>
> The main suggestion is "you can't parse TCP like this" :).  You'll have
> this problem: <
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#Whyisprotocol.dataReceivedcalledwithonlypartofthedataIcalledtransport.writewith
> >
>
> The issue I'm running into:
> When a user connects to the TCP server, they are displayed a welcome menu
> of things they can do. I'm simply catching the 'data' in an if statement to
> determine which menu item was picked.  The problem is that some of the menu
> items require further input.  I've had to use a series of bools to
> determine if a certain menu option was previously picked that will then
> directly send the data into the function / class.  Is there an easier way
> to go about this? My current method seems a bit backwards and over
> complicated.  I'm thinking I missed something in the documentation.
>
>
> Anyway, here's the code: https://infotomb.com/q4293 // Pass: twisted
>
>
> You should really attach the code itself to the email, so that future
> readers of the archive have some idea what you're talking about.  Pastebins
> in general are not great, since the code will expire before your archived
> message does, and pastebins with passwords (!?) are even worse.
>
> (it was part of a challenge, so to speak, don't take too much out of
> context)
>
> You can see I had trouble with next() and dh().  I'm now trying to move
> this TCP 'framework' over to another project (the above was already
> submitted), and I'm still running into the same issues.
>
>
> You should try separating out your concerns a bit.  The protocol should
> just parse the bytes into something meaningful, then call methods on some
> other, higher-level object that isn't just manipulating strings.
>
> The "other, higher-level object" in your case might be a state machine of
> some kind, or you might just have an object representing the mode that
> you're currently in and switch that out for different modes.
>
> This isn't an issue with Twisted though; Twisted just calls some methods
> on your objects in order to tell you what happened; what happens next is up
> to you.  So it's a general program architecture issue.
>
> This is very general advice, obviously, because I'm not sure what you are
> specifically asking, nor what your program is really intended to do.  What
> kind of client is talking to this system?  Did you invent the protocol
> yourself, or did it come from somewhere else?  What is 'dh()' even trying
> to accomplish?  Etc, etc.
>
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

--20cf30334add3b384604d5e14260
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Glyph,<div style><br></div><div style>I will definately lo=
ok into that. =A0As far as the server spec, it&#39;s over TOR (This part of=
 the &#39;competition&#39; has since closed, but feel free to catch up: <a =
href=3D"http://uncovering-cicada.wikia.com/wiki/Uncovering_Cicada_Wiki">htt=
p://uncovering-cicada.wikia.com/wiki/Uncovering_Cicada_Wiki</a> and <a href=
=3D"http://mentalfloss.com/article/31932/chasing-cicada-exploring-darkest-c=
orridors-internet">http://mentalfloss.com/article/31932/chasing-cicada-expl=
oring-darkest-corridors-internet</a> (from last year&#39;s 3301). =A0I&#39;=
m simply trying to do the python thing and move classes around instead of t=
rying to reinvent the wheel [dh() is a rudimentary Diffie Helman key exchan=
ge] : &quot;</div>
<div style><span style=3D"color:rgb(0,0,0);font-family:Consolas,&#39;Lucida=
 Console&#39;,&#39;DejaVu Sans Mono&#39;,Monaco,monospace;font-size:12px;wh=
ite-space:pre-wrap"><br></span></div><div style><span style=3D"color:rgb(0,=
0,0);font-family:Consolas,&#39;Lucida Console&#39;,&#39;DejaVu Sans Mono&#3=
9;,Monaco,monospace;font-size:12px;white-space:pre-wrap">In the programming=
 language of your choice build a TCP server</span></div>
<span style=3D"color:rgb(0,0,0);font-family:Consolas,&#39;Lucida Console&#3=
9;,&#39;DejaVu Sans Mono&#39;,Monaco,monospace;font-size:12px;white-space:p=
re-wrap">that implements the protocol below.  The server code must be=20
written by you and you alone, although you are free to use any=20
modules or libraries publicly available for the selected=20
programming language.

Once you have done this, make it accessible as a Tor hidden=20
service.  Then provide us with the onion address and port
via a GPG-encrypted email to this address.

You have until 0:00 UTC on 3 Feb, 2013.  Any emails received
after that time will be ignored.

Good luck.

3301

=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D


1. INTRODUCTION

   The TCP server MUST listen on an arbitrary port, and send and=20
   receive plain text with lines separated by &lt;CRLF&gt; (representing
   a carriage return followed by a line feed).  The TCP server MUST
   disregard the case of input.

   In the examples below, lines sent by the server will be preceded
   with &quot;S:&quot; and lines sent by the client will be preceded by &qu=
ot;C:&quot;

   Each message sent by the server MUST conform to the format:

       [CODE] [RESPONSE NAME] [RESPONSE (optional)]&lt;CRLF&gt;

   Where [CODE] and [RESPONSE NAME] is one of:

       CODE   RESPONSE NAME
        00     Welcome=20
        01     Ok=20
        02     Error
        03     Data
        99     Goodbye


2. PROCEDURES

   a. Remote Connection

   Upon receiving a remote connection, the server MUST greet the=20
   client with a 00 WELCOME message.  The RESPONSE of a welcome
   message MAY contain arbitrary text.  The arbitrary text MUST
   at the very least contain the name of the programming language
   used to implement the server.

   Upon receiving a 00 WELCOME message, the client may begin=20
   initiating procedures.

   Example:

       S: 00 WELCOME [ARBITRARY RESPONSE TEXT]&lt;CRLF&gt;


   b. RAND [n]
  =20
   Upon receiving a &quot;RAND&quot; request by the client, the server will
   first send a 01 OK response, and will then provide the client=20
   with [n] cryptographically random numbers within the range of=20
   0-255.  Each number MUST be followed by &lt;CRLF&gt;.  After the last=20
   number has been sent, the server MUST send a dot (.) on a line=20
   by itself.

   Example:

       C: RAND 3&lt;CRLF&gt;
       S: 01 OK&lt;CRLF&gt;
       S: [first random number]&lt;CRLF&gt;
       S: [second random number]&lt;CRLF&gt;
       S: [third random number]&lt;CRLF&gt;
       S: .&lt;CRLF&gt;


   c. QUINE

   Upon receiving a &quot;QUINE&quot; request by the client, the server wil=
l
   first send a 01 OK response, and will then provide the client
   with a quine in the programming language used to implement the
   server.  This quine does not have to be original.  After the last=20
   line of code has been sent, the server MUST send a dot (.) on a=20
   line by itself.

   Example:

       C: QUINE&lt;CRLF&gt;
       S: 01 OK&lt;CRLF&gt;
       S: [quine code]&lt;CRLF&gt;
       S: .&lt;CRLF&gt;
  =20

   d. BASE29 [n]

   Upon receiving a &quot;BASE29&quot; request by the client, the server wi=
ll
   send a 01 OK response followed by the number [n] converted into=20
   its base 29 representation.

   Example:

       C: BASE29 3301&lt;CRLF&gt;
       S: 01 OK 3QO&lt;CRLF&gt;


   e. CODE

   Upon receiving a &quot;CODE&quot; request by the client, the server will
   send a 01 OK response followed by its own source code.  After the
   last line of code has been sent, the server MUST send a dot(.) on
   a line by itself.  =20

   Example:

       C: CODE&lt;CRLF&gt;
       S: 01 OK&lt;CRLF&gt;
       S: [Server Source Code]&lt;CRLF&gt;
       s: .&lt;CRLF&gt;


   f. KOAN

   Upon receiving a &quot;KOAN&quot; request by the client, the server will
   send a 01 OK response followed by a koan.  After the last line of
   the koan, the server MUST send a dot (.) on a line by itself.

   Example:

       C: KOAN&lt;CRLF&gt;
       S: 01 OK&lt;CRLF&gt;
       S: A master who lived as a hermit on a mountain was asked by a&lt;CR=
LF&gt;
       S: monk, &quot;What is the Way?&lt;CRLF&gt;
       S: &quot;What a fine mountain this is,&quot; the master said in repl=
y&lt;CRLF&gt;
       S: &quot;I am not asking you about the mountain, but about the Way.&=
lt;CRLF&gt;
       S: &quot;So long as you cannot go beyond the mountain, my son, you&l=
t;CRLF&gt;
       S: cannot reach the Way,&quot; replied the master&lt;CRLF&gt;
       S: .


   g. DH [p]

   Upon receiving a &quot;DH&quot; request by the client, the server will p=
roceed
   to perform a Diffie-Hellman key exchange using [p] as the prime modulus.
   The server will then select a base [b] to use in the protocol, as well a=
s
   its secret integer.  The server will then compute its exponent result [e=
]=20
   as specified within the Diffie-Hellman key exchange protocol. =20

   The server MUST then respond with a 01 OK response followed by the=20
   selected base [b] and computed exponent [e] separated by white space.

   The client MUST respond with its exponent result [e2], and the client an=
d=20
   server will follow the rest of the Diffie-Hellman key exchange protocol.

   The server MUST then compute the resulting secret key, and provide it
   using 03 DATA [k].

   Example:

       C: DH 23&lt;CRLF&gt;
       S: 01 OK 5 8&lt;CRLF&gt;
       C: 19&lt;CRLF&gt;
       S: 03 DATA 2&lt;CRLF&gt;


   j. NEXT

   Upon receiving a &quot;NEXT&quot; request by the client, the server will=
 respond
   with 01 OK and then listen for text data to be provided by the client. =
=20
   The client will send a dot (.) on a line by itself after the last line=
=20
   of text.  The server MUST record this.  This data will be the next set=
=20
   of instructions.  Once the data is received the server will respond=20
   with 01 OK.=20

   Example:

       C: NEXT&lt;CRLF&gt;
       S: 01 OK&lt;CRLF&gt;
       C: -----BEGIN PGP SIGNED MESSAGE-----&lt;CRLF&gt;
       C: [MESSAGE CONTENTS]&lt;CRLF&gt;
       C: -----END PGP SIGNATURE-----&lt;CRLF&gt;
       C: .&lt;CRLF&gt;
       S: 01 OK&lt;CRLF&gt;


   i. GOODBYE

   Upon receiving a &quot;DH&quot; request by the client, the server MUST r=
espond with
   99 GOODBYE and then gracefully close the connection.

   Example:

       C: GOODBYE&lt;CRLF&gt;
       S: 99 GOODBYE&lt;CRLF&gt;


=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D&quot;</span><div><sp=
an style=3D"color:rgb(0,0,0);font-family:Consolas,&#39;Lucida Console&#39;,=
&#39;DejaVu Sans Mono&#39;,Monaco,monospace;font-size:12px;white-space:pre-=
wrap"><br>
</span></div><div><span style=3D"color:rgb(0,0,0);font-family:Consolas,&#39=
;Lucida Console&#39;,&#39;DejaVu Sans Mono&#39;,Monaco,monospace;font-size:=
12px;white-space:pre-wrap"><br></span></div><div style><span style=3D"color=
:rgb(0,0,0);font-family:Consolas,&#39;Lucida Console&#39;,&#39;DejaVu Sans =
Mono&#39;,Monaco,monospace;font-size:12px;white-space:pre-wrap">From a sign=
ed GPG message.</span></div>
</div><div class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On Sat,=
 Feb 16, 2013 at 11:53 PM, Glyph <span dir=3D"ltr">&lt;<a href=3D"mailto:gl=
yph at twistedmatrix.com" target=3D"_blank">glyph at twistedmatrix.com</a>&gt;</s=
pan> wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex"><div style=3D"word-wrap:break-word"><br><div=
><div class=3D"im"><div>On Feb 16, 2013, at 1:09 PM, Adam Heller &lt;<a hre=
f=3D"mailto:sk82712 at gmail.com" target=3D"_blank">sk82712 at gmail.com</a>&gt; =
wrote:</div>
<br><blockquote type=3D"cite"><div dir=3D"ltr">Guys,<div>I&#39;ll try to be=
 as exact as I can be with my question, but it may end up being pretty broa=
d. (I&#39;m also relatively new to python, please go easy on my code althou=
gh suggestions are of course welcome.)</div>
</div></blockquote><div><br></div></div><div>The main suggestion is &quot;y=
ou can&#39;t parse TCP like this&quot; :). =A0You&#39;ll have this problem:=
 &lt;<a href=3D"http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions=
#Whyisprotocol.dataReceivedcalledwithonlypartofthedataIcalledtransport.writ=
ewith" target=3D"_blank">http://twistedmatrix.com/trac/wiki/FrequentlyAsked=
Questions#Whyisprotocol.dataReceivedcalledwithonlypartofthedataIcalledtrans=
port.writewith</a>&gt;</div>
<div class=3D"im"><br><blockquote type=3D"cite"><div dir=3D"ltr"><div>The i=
ssue I&#39;m running into:</div><div>When a user connects to the TCP server=
, they are displayed a welcome menu of things they can do. I&#39;m simply c=
atching the &#39;data&#39; in an if statement to determine which menu item =
was picked. =A0The problem is that some of the menu items require further i=
nput. =A0I&#39;ve had to use a series of bools to determine if a certain me=
nu option was previously picked that will then directly send the data into =
the function / class. =A0Is there an easier way to go about this? My curren=
t method seems a bit backwards and over complicated. =A0I&#39;m thinking I =
missed something in the documentation.</div>
</div></blockquote><div><br></div><blockquote type=3D"cite"><div dir=3D"ltr=
"><div>Anyway, here&#39;s the code:=A0<a href=3D"https://infotomb.com/q4293=
" target=3D"_blank">https://infotomb.com/q4293</a>=A0// Pass: twisted</div>=
</div></blockquote>
<div><br></div></div><div>You should really attach the code itself to the e=
mail, so that future readers of the archive have some idea what you&#39;re =
talking about. =A0Pastebins in general are not great, since the code will e=
xpire before your archived message does, and pastebins with passwords (!?) =
are even worse.</div>
<div class=3D"im"><br><blockquote type=3D"cite"><div dir=3D"ltr"><div>(it w=
as part of a challenge, so to speak, don&#39;t take too much out of context=
)</div>
<div><br></div><div>You can see I had trouble with next() and dh(). =A0I&#3=
9;m now trying to move this TCP &#39;framework&#39; over to another project=
 (the above was already submitted), and I&#39;m still running into the same=
 issues.</div>
</div></blockquote><br></div></div><div>You should try separating out your =
concerns a bit. =A0The protocol should just parse the bytes into something =
meaningful, then call methods on some other, higher-level object that isn&#=
39;t just manipulating strings.</div>
<div><br></div><div>The &quot;other, higher-level object&quot; in your case=
 might be a state machine of some kind, or you might just have an object re=
presenting the mode that you&#39;re currently in and switch that out for di=
fferent modes.</div>
<div><br></div><div>This isn&#39;t an issue with Twisted though; Twisted ju=
st calls some methods on your objects in order to tell you what happened; w=
hat happens next is up to you. =A0So it&#39;s a general program architectur=
e issue.</div>
<div><br></div><div>This is very general advice, obviously, because I&#39;m=
 not sure what you are specifically asking, nor what your program is really=
 intended to do. =A0What kind of client is talking to this system? =A0Did y=
ou invent the protocol yourself, or did it come from somewhere else? =A0Wha=
t is &#39;dh()&#39; even trying to accomplish? =A0Etc, etc.</div>
<span class=3D"HOEnZb"><font color=3D"#888888"><div><br></div><div><br></di=
v><div>-glyph</div></font></span></div><br>________________________________=
_______________<br>
Twisted-Python mailing list<br>
<a href=3D"mailto:Twisted-Python at twistedmatrix.com">Twisted-Python at twistedm=
atrix.com</a><br>
<a href=3D"http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python=
" target=3D"_blank">http://twistedmatrix.com/cgi-bin/mailman/listinfo/twist=
ed-python</a><br>
<br></blockquote></div><br></div>

--20cf30334add3b384604d5e14260--


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.7.1361859883.10584.twisted-python@twistedmatrix.com>

small sample size, users that run into this problem are those with higher
levels of usage, i.e. connections with more traffic.

Also, this *seems* to affect users in the same LAN more. The 2 groups of
affected users I worked closely with regarding this issue were both
connected to the same WiFi router.


On Mon, Feb 25, 2013 at 4:36 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Feb 25, 2013, at 4:17 PM, Wenxiang Wu <wenxiang at zopim.com> wrote:
>
>  Unfortunately for performance reasons, I cannot test this with any other
> reactor. And the only time I have ever been able to reproduce this was when
> I left my client running overnight.
>
>
> Understandable; I've never managed to reliably reproduce it in a test
> environment either.
>
> However due to the amount of traffic we are seeing, I am able to reliably
> find connections stuck in this state. I get 2-3 connections stuck every
> hour.
>
>
> Do these connections share any obvious attributes?  For example, are they
> to clients on some particular network?
>
> -g
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Wenxiang Wu
VP Partying / Engineering
www.zopim.com

[US] +1 (408) 680-9345
[SG] +65 9457-5822

--047d7bd91f10f8a97004d69ab578
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">From what I can tell, there isn&#39;t a specific pattern t=
hat. But from this small sample size, users that run into this problem are =
those with higher levels of usage, i.e. connections with more traffic.<div>

<br></div><div style>Also, this *seems* to affect users in the same LAN mor=
e. The 2 groups of affected users I worked closely with regarding this issu=
e were both connected to the same WiFi router.</div></div><div class=3D"gma=
il_extra">

<br><br><div class=3D"gmail_quote">On Mon, Feb 25, 2013 at 4:36 PM, Glyph <=
span dir=3D"ltr">&lt;<a href=3D"mailto:glyph at twistedmatrix.com" target=3D"_=
blank">glyph at twistedmatrix.com</a>&gt;</span> wrote:<br><blockquote class=
=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padd=
ing-left:1ex">

<div style=3D"word-wrap:break-word"><br><div><div class=3D"im"><div>On Feb =
25, 2013, at 4:17 PM, Wenxiang Wu &lt;<a href=3D"mailto:wenxiang at zopim.com"=
 target=3D"_blank">wenxiang at zopim.com</a>&gt; wrote:</div><br><blockquote t=
ype=3D"cite">

<div dir=3D"ltr" style=3D"font-family:Menlo;font-size:medium;font-style:nor=
mal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-heigh=
t:normal;text-align:-webkit-auto;text-indent:0px;text-transform:none;white-=
space:normal;word-spacing:0px">

Unfortunately for performance reasons, I cannot test this with any other re=
actor. And the only time I have ever been able to reproduce this was when I=
 left my client running overnight.</div></blockquote><div><br></div></div>

<div>Understandable; I&#39;ve never managed to reliably reproduce it in a t=
est environment either.</div><div class=3D"im"><br><blockquote type=3D"cite=
"><div dir=3D"ltr" style=3D"font-family:Menlo;font-size:medium;font-style:n=
ormal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-hei=
ght:normal;text-align:-webkit-auto;text-indent:0px;text-transform:none;whit=
e-space:normal;word-spacing:0px">

<div>However due to the amount of traffic we are seeing, I am able to relia=
bly find connections stuck in this state. I get 2-3 connections stuck every=
 hour.</div></div></blockquote><br></div></div><div>Do these connections sh=
are any obvious attributes? =C2=A0For example, are they to clients on some =
particular network?</div>

<span class=3D"HOEnZb"><font color=3D"#888888"><div><br></div><div>-g</div>=
<div><br></div><br></font></span></div><br>________________________________=
_______________<br>
Twisted-Python mailing list<br>
<a href=3D"mailto:Twisted-Python at twistedmatrix.com">Twisted-Python at twistedm=
atrix.com</a><br>
<a href=3D"http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python=
" target=3D"_blank">http://twistedmatrix.com/cgi-bin/mailman/listinfo/twist=
ed-python</a><br>
<br></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br><div>Wen=
xiang Wu</div><div>VP Partying / Engineering</div><div><a href=3D"http://ww=
w.zopim.com" target=3D"_blank">www.zopim.com</a></div><div><br></div><div>[=
US] +1 (408) 680-9345</div>

<div>[SG] +65 9457-5822</div>
</div>

--047d7bd91f10f8a97004d69ab578--


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.8.1362212307.10584.twisted-python@twistedmatrix.com>

approach. There isn't any rush, and it sounds like the final results
will be better, if we wait for lore2sphinx-ng + rstgen.


  Tom


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.10.1366541894.10584.twisted-python@twistedmatrix.com>

requests per second while Twisted and Cyclone were only handling 400-500
requests per second.

On loopback from the same m1.small I suspect I was starting to load test
the load testers more than the apps but locally all the frameworks were
performing similarly.

Load testing from another machine to my laptop I was seeing far better
performance from Twisted and Cyclone, both doing closer to 2k requests per
second. The other frameworks were only a little quicker but again, there's
a chance the machine running the load tests was the bottle neck.

These tests were very unscientifically done but I still wasn't expecting to
see such a big difference between specifically node and Twisted.  500
req/sec is plenty quick for 90% of what I do and of course I know there's
so much more to an application than returning hello world but I was
wondering if I was missing some trick to speed Twisted up to get close to
the others on EC2.

--00235429db04babb2704dadcd36a
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div><div>Hi all<br><br></div>I recently wrote a hello wor=
ld HTTP app in Twisted, Cyclone, node, Go and Scala on the Play framework, =
and used a combination of ab and gattling to see how fast each was on an m1=
.small instance on Amazon EC2. I also tested it on bare metal (my laptop:))=
 but I&#39;ll get to that later.<br>
<br></div><div>The code I used for twisted was the web server code sample f=
rom the front page of <a href=3D"http://twistedmatrix.com">twistedmatrix.co=
m</a> with the numberRequests increment dropped and a simple &quot;Hello Wo=
rld!&quot; returned instead.<br>
For cyclone I used the sample code from the cyclone docs with the same stri=
ng being returned.<br>Node was the sample from their front page.<br>Play an=
d Go I&#39;ve never worked with before so those were copy pastes from vario=
us examples on their pages but again same URI and return string as the othe=
r frameworks.<br>
</div><div><br></div><div>From one m1.small to another, Go, Play and node w=
ere handling about 1.5k requests per second while Twisted and Cyclone were =
only handling 400-500 requests per second.<br><br></div><div>On loopback fr=
om the same m1.small I suspect I was starting to load test the load testers=
 more than the apps but locally all the frameworks were performing similarl=
y.<br>
<br></div><div>Load testing from another machine to my laptop I was seeing =
far better performance from Twisted and Cyclone, both doing closer to 2k re=
quests per second. The other frameworks were only a little quicker but agai=
n, there&#39;s a chance the machine running the load tests was the bottle n=
eck.<br>
<br></div><div>These tests were very unscientifically done but I still wasn=
&#39;t expecting to see such a big difference between specifically node and=
 Twisted.=A0 500 req/sec is plenty quick for 90% of what I do and of course=
 I know there&#39;s=20
so much more to an application than returning hello world but I was=20
wondering if I was missing some trick to speed Twisted up to get close=20
to the others on EC2.<br></div></div>

--00235429db04babb2704dadcd36a--


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.11.1366547780.10584.twisted-python@twistedmatrix.com>

quests per second while Twisted and Cyclone were only handling 400-500 requ=
ests per second.
On loopback from the same m1.small I suspect I was starting to load test th=
e load testers more than the apps but locally all the frameworks were perfo=
rming similarly.
Load testing from another machine to my laptop I was seeing far better perf=
ormance from Twisted and Cyclone, both doing closer to 2k requests per seco=
nd. The other frameworks were only a little quicker but again, there's a ch=
ance the machine running the load tests was the bottle neck.
These tests were very unscientifically done but I still wasn't expecting to=
 see such a big difference between specifically node and Twisted.=A0 500 re=
q/sec is plenty quick for 90% of what I do and of course I know there's so =
much more to an application than returning hello world but I was wondering =
if I was missing some trick to speed Twisted up to get close to the others =
on EC2.


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.12.1366557996.10584.twisted-python@twistedmatrix.com>

quests per second while Twisted and Cyclone were only handling 400-500 requ=
ests per second.<br>
On loopback from the same m1.small I suspect I was starting to load test th=
e load testers more than the apps but locally all the frameworks were perfo=
rming similarly.<br>
Load testing from another machine to my laptop I was seeing far better perf=
ormance from Twisted and Cyclone, both doing closer to 2k requests per seco=
nd. The other frameworks were only a little quicker but again, there&#39;s =
a chance the machine running the load tests was the bottle neck.<br>

These tests were very unscientifically done but I still wasn&#39;t expectin=
g to see such a big difference between specifically node and Twisted.=A0 50=
0 req/sec is plenty quick for 90% of what I do and of course I know there&#=
39;s so much more to an application than returning hello world but I was wo=
ndering if I was missing some trick to speed Twisted up to get close to the=
 others on EC2.<br>

<br>
</div></div>_______________________________________________<br>
Twisted-Python mailing list<br>
<a href=3D"mailto:Twisted-Python at twistedmatrix.com">Twisted-Python at twistedm=
atrix.com</a><br>
<a href=3D"http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python=
" target=3D"_blank">http://twistedmatrix.com/cgi-bin/mailman/listinfo/twist=
ed-python</a><br>
</blockquote></div><br></div><div class=3D"gmail_extra"><br></div><div clas=
s=3D"gmail_extra" style>Hi=A0</div><div class=3D"gmail_extra" style><br></d=
iv><div class=3D"gmail_extra" style>=A0 =A0I suggest trying pypy. python ac=
tually is quite slow with lots of function calls. I did have a benchmark fo=
r cyclone &amp; pypy. it is almost 3 times faster. twisted can work with py=
py well so you definitely should give it a try.</div>
<div class=3D"gmail_extra" style><br></div><div class=3D"gmail_extra" style=
>Regards</div><div class=3D"gmail_extra" style><br></div><div class=3D"gmai=
l_extra" style>gelin yan</div></div>

--089e01183b7a7f505504dae093ff--


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.13.1366575850.10584.twisted-python@twistedmatrix.com>

quests per second while Twisted and Cyclone were only handling 400-500 requ=
ests per second.<br>
On loopback from the same m1.small I suspect I was starting to load test th=
e load testers more than the apps but locally all the frameworks were perfo=
rming similarly.<br>
Load testing from another machine to my laptop I was seeing far better perf=
ormance from Twisted and Cyclone, both doing closer to 2k requests per seco=
nd. The other frameworks were only a little quicker but again, there&#39;s =
a chance the machine running the load tests was the bottle neck.<br>

These tests were very unscientifically done but I still wasn&#39;t expectin=
g to see such a big difference between specifically node and Twisted.=A0 50=
0 req/sec is plenty quick for 90% of what I do and of course I know there&#=
39;s so much more to an application than returning hello world but I was wo=
ndering if I was missing some trick to speed Twisted up to get close to the=
 others on EC2.<br>

<br>
</div></div>_______________________________________________<br>
Twisted-Python mailing list<br>
<a href=3D"mailto:Twisted-Python at twistedmatrix.com">Twisted-Python at twistedm=
atrix.com</a><br>
<a href=3D"http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python=
" target=3D"_blank">http://twistedmatrix.com/cgi-bin/mailman/listinfo/twist=
ed-python</a><br>
</blockquote></div><br></div></div>

--001a11c2ffcca0fd4004dae4bb8b--


From bogus@does.not.exist.com  Mon Oct 15 08:52:25 2012
From: bogus@does.not.exist.com ()
Date: Mon, 15 Oct 2012 12:52:25 -0000
Subject: No subject
Message-ID: <mailman.14.1366576086.10584.twisted-python@twistedmatrix.com>

quests per second while Twisted and Cyclone were only handling 400-500 requ=
ests per second.<br>
On loopback from the same m1.small I suspect I was starting to load test th=
e load testers more than the apps but locally all the frameworks were perfo=
rming similarly.<br>
Load testing from another machine to my laptop I was seeing far better perf=
ormance from Twisted and Cyclone, both doing closer to 2k requests per seco=
nd. The other frameworks were only a little quicker but again, there&#39;s =
a chance the machine running the load tests was the bottle neck.<br>


These tests were very unscientifically done but I still wasn&#39;t expectin=
g to see such a big difference between specifically node and Twisted.=A0 50=
0 req/sec is plenty quick for 90% of what I do and of course I know there&#=
39;s so much more to an application than returning hello world but I was wo=
ndering if I was missing some trick to speed Twisted up to get close to the=
 others on EC2.<br>


<br>
</div></div>_______________________________________________<br>
Twisted-Python mailing list<br>
<a href=3D"mailto:Twisted-Python at twistedmatrix.com" target=3D"_blank">Twist=
ed-Python at twistedmatrix.com</a><br>
<a href=3D"http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python=
" target=3D"_blank">http://twistedmatrix.com/cgi-bin/mailman/listinfo/twist=
ed-python</a><br>
</blockquote></div><br></div><div class=3D"gmail_extra"><br></div></div></d=
iv><div class=3D"gmail_extra">Hi=A0</div><div class=3D"gmail_extra"><br></d=
iv><div class=3D"gmail_extra">=A0 =A0I suggest trying pypy. python actually=
 is quite slow with lots of function calls. I did have a benchmark for cycl=
one &amp; pypy. it is almost 3 times faster. twisted can work with pypy wel=
l so you definitely should give it a try.</div>

<div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">Regards</di=
v><span class=3D"HOEnZb"><font color=3D"#888888"><div class=3D"gmail_extra"=
><br></div><div class=3D"gmail_extra">gelin yan</div></font></span></div>
<br>_______________________________________________<br>
Twisted-Python mailing list<br>
<a href=3D"mailto:Twisted-Python at twistedmatrix.com">Twisted-Python at twistedm=
atrix.com</a><br>
<a href=3D"http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python=
" target=3D"_blank">http://twistedmatrix.com/cgi-bin/mailman/listinfo/twist=
ed-python</a><br>
<br></blockquote></div><br></div>

--14dae93995f5b56a2e04dae4c920--


From poalman at gmail.com  Mon Oct  1 03:38:32 2012
From: poalman at gmail.com (Paul Wiseman)
Date: Mon, 1 Oct 2012 10:38:32 +0100
Subject: [Twisted-Python] dynamic FTP realm
In-Reply-To: <CAOp9P3qQeou_vGz07k-750YeLdPaT8d3QwRsLLuuzmtV_oTLRw@mail.gmail.com>
References: <CAMBtMcudNicacdOA4rPiU9rq4iXtiDoZMwOmBziEfs4R5yr52g@mail.gmail.com>
	<CACgdh2iK5BAF3NYJVtFRvx33CuAFYkAd2Br0AdpcNuFsxiF3jQ@mail.gmail.com>
	<20120929202149.5616.2099791274.divmod.xquotient.9@localhost6.localdomain6>
	<CACgdh2igOHs3HrELQfLRuoRAfQLr_VOdL+Tbq6j5O7FHHwG=TQ@mail.gmail.com>
	<CAOp9P3qQeou_vGz07k-750YeLdPaT8d3QwRsLLuuzmtV_oTLRw@mail.gmail.com>
Message-ID: <CACgdh2h8Vojh71RYOi_tfuuZ-v6h-foBKyNXCAmxgfgn720fKQ@mail.gmail.com>

On 30 September 2012 13:59, Itamar Turner-Trauring <
itamar at futurefoundries.com> wrote:

>
>
> On Sun, Sep 30, 2012 at 8:38 AM, Paul Wiseman <poalman at gmail.com> wrote:
>
>>
>>  That is likely a much better idea! Will I need to use some threading if
>> I'm making web calls then from list? Presumably if I don't the whole
>> process will block while it's waiting for web responses?
>>
>
> If you're using Twisted's web clients (getPage or the more complex but
> superior Agent) you do not need threads, Twisted will do the networking in
> a non-blocking manner. E.g.
>
> def list(self, path):
>     return
> twisted.web.client.getPage(...).addCallback(convertHTTPResponseToFTPListing)
>
> --
> Itamar Turner-Trauring, Future Foundries LLC
> http://futurefoundries.com/ — Twisted consulting, training and support.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
I made an api for the web requests- the call isn't so straightforward, all
the information is sent in POST formatted a certain way and there's also a
credentials part with a token and other bits with secrets used to auth the
request. So for instance I call the list dir method in the api and get back
a Response type object based on the web response. Is there still way I can
defer the returning of that web call, or would I need to tear the api apart
to use twisted deferred objects internally? or is this something Agent
could deal with?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121001/421f6a18/attachment-0001.html>

From itamar at futurefoundries.com  Mon Oct  1 09:52:22 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Mon, 1 Oct 2012 11:52:22 -0400
Subject: [Twisted-Python] dynamic FTP realm
In-Reply-To: <CACgdh2h8Vojh71RYOi_tfuuZ-v6h-foBKyNXCAmxgfgn720fKQ@mail.gmail.com>
References: <CAMBtMcudNicacdOA4rPiU9rq4iXtiDoZMwOmBziEfs4R5yr52g@mail.gmail.com>
	<CACgdh2iK5BAF3NYJVtFRvx33CuAFYkAd2Br0AdpcNuFsxiF3jQ@mail.gmail.com>
	<20120929202149.5616.2099791274.divmod.xquotient.9@localhost6.localdomain6>
	<CACgdh2igOHs3HrELQfLRuoRAfQLr_VOdL+Tbq6j5O7FHHwG=TQ@mail.gmail.com>
	<CAOp9P3qQeou_vGz07k-750YeLdPaT8d3QwRsLLuuzmtV_oTLRw@mail.gmail.com>
	<CACgdh2h8Vojh71RYOi_tfuuZ-v6h-foBKyNXCAmxgfgn720fKQ@mail.gmail.com>
Message-ID: <CAOp9P3ra3uhmpag4ByV1iXK76A=3mbbxxgcu8tQZ7vXGi4L7AQ@mail.gmail.com>

On Mon, Oct 1, 2012 at 5:38 AM, Paul Wiseman <poalman at gmail.com> wrote:

>
> I made an api for the web requests- the call isn't so straightforward, all
> the information is sent in POST formatted a certain way and there's also a
> credentials part with a token and other bits with secrets used to auth the
> request. So for instance I call the list dir method in the api and get back
> a Response type object based on the web response. Is there still way I can
> defer the returning of that web call, or would I need to tear the api apart
> to use twisted deferred objects internally? or is this something Agent
> could deal with?
>

Agent could certainly deal with this; alternatively, if you're using a
blocking API you could use deferToThread (make sure the function you call
that way doesn't touch any global state or call any Twisted APIs.)

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ — Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121001/75ee65ae/attachment.html>

From poalman at gmail.com  Mon Oct  1 13:18:42 2012
From: poalman at gmail.com (Paul Wiseman)
Date: Mon, 1 Oct 2012 20:18:42 +0100
Subject: [Twisted-Python] dynamic FTP realm
In-Reply-To: <CAOp9P3ra3uhmpag4ByV1iXK76A=3mbbxxgcu8tQZ7vXGi4L7AQ@mail.gmail.com>
References: <CAMBtMcudNicacdOA4rPiU9rq4iXtiDoZMwOmBziEfs4R5yr52g@mail.gmail.com>
	<CACgdh2iK5BAF3NYJVtFRvx33CuAFYkAd2Br0AdpcNuFsxiF3jQ@mail.gmail.com>
	<20120929202149.5616.2099791274.divmod.xquotient.9@localhost6.localdomain6>
	<CACgdh2igOHs3HrELQfLRuoRAfQLr_VOdL+Tbq6j5O7FHHwG=TQ@mail.gmail.com>
	<CAOp9P3qQeou_vGz07k-750YeLdPaT8d3QwRsLLuuzmtV_oTLRw@mail.gmail.com>
	<CACgdh2h8Vojh71RYOi_tfuuZ-v6h-foBKyNXCAmxgfgn720fKQ@mail.gmail.com>
	<CAOp9P3ra3uhmpag4ByV1iXK76A=3mbbxxgcu8tQZ7vXGi4L7AQ@mail.gmail.com>
Message-ID: <CACgdh2iokYK4-93ubA3Y9aQ2dhvoRGTPz8LF6KcHpNF2ps5VKw@mail.gmail.com>

On 1 October 2012 16:52, Itamar Turner-Trauring
<itamar at futurefoundries.com>wrote:

>
>
> On Mon, Oct 1, 2012 at 5:38 AM, Paul Wiseman <poalman at gmail.com> wrote:
>
>>
>> I made an api for the web requests- the call isn't so straightforward,
>> all the information is sent in POST formatted a certain way and there's
>> also a credentials part with a token and other bits with secrets used to
>> auth the request. So for instance I call the list dir method in the api and
>> get back a Response type object based on the web response. Is there still
>> way I can defer the returning of that web call, or would I need to tear the
>> api apart to use twisted deferred objects internally? or is this something
>> Agent could deal with?
>>
>
> Agent could certainly deal with this; alternatively, if you're using a
> blocking API you could use deferToThread (make sure the function you call
> that way doesn't touch any global state or call any Twisted APIs.)
>
> --
> Itamar Turner-Trauring, Future Foundries LLC
> http://futurefoundries.com/ — Twisted consulting, training and support.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
This is twisting my brain slightly.

what if I have more than 1 blocking call to make in the list dir call?

One area that is especially confusing for me is where I have those blocking
webcalls in a recursive method.

Because the api needs a folder's unique id to return a folder list, if for
instance someone requests a file/folder 10 levels deep, the list dir will
need to walk up the path until it finds a cached node that it has an id
for, and then walk back down the path listing the folders using the api.

I read about chained deferreds and I think that might be the way to go but
I'm not sure how I'd chain them together as 1 webcall needs the id from its
parent folder they all need to be executed in a chain, but return down the
recursive method stack

Are there any examples of how I could make a recursive function with
deferreds?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121001/3f9f880b/attachment-0001.html>

From electric.or.sharp at gmail.com  Tue Oct  2 11:09:29 2012
From: electric.or.sharp at gmail.com (E S)
Date: Tue, 2 Oct 2012 12:09:29 -0500
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has gone
	away"
Message-ID: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>

I have a service running that occasionally connects to a MySQL
database. When there is no activity on it for some time, I eventually
get the the error

_mysql_exceptions.OperationalError: (2006, 'MySQL server has gone away')

I have found a few posts on this group related to this issue

http://twistedmatrix.com/pipermail/twisted-python/2007-July/015788.html
http://twistedmatrix.com/pipermail/twisted-python/2007-October/016178.html

as well as some tickets on the twisted homepage:

http://twistedmatrix.com/trac/ticket/4404
http://twistedmatrix.com/trac/ticket/4964

I have also seen this referenced as a potential fix:

http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/

I currently have the cp_reconnect parameter set to True, but it does
not appear to be doing the job. I don't really see much consensus on
how to properly handle this issue. Some people seem to think that the
cp_reconnect parameter should take care of it for you, other people
say that cp_reconnect is only part of the solution and that you have
to write your own error handling.

I realize that I could increase the value of MySQL's wait_timeout
parameter, but I would rather have the twisted code detect and handle
the situation. So, how does one do that?

Thanks,
Dave



From p.mayers at imperial.ac.uk  Wed Oct  3 02:28:06 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 03 Oct 2012 09:28:06 +0100
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
Message-ID: <506BF716.9050603@imperial.ac.uk>

On 10/02/2012 06:09 PM, E S wrote:
> I have a service running that occasionally connects to a MySQL
> database. When there is no activity on it for some time, I eventually
> get the the error
>
> _mysql_exceptions.OperationalError: (2006, 'MySQL server has gone away')
>
> I have found a few posts on this group related to this issue
>
> http://twistedmatrix.com/pipermail/twisted-python/2007-July/015788.html
> http://twistedmatrix.com/pipermail/twisted-python/2007-October/016178.html
>
> as well as some tickets on the twisted homepage:
>
> http://twistedmatrix.com/trac/ticket/4404
> http://twistedmatrix.com/trac/ticket/4964
>
> I have also seen this referenced as a potential fix:
>
> http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/
>
> I currently have the cp_reconnect parameter set to True, but it does
> not appear to be doing the job. I don't really see much consensus on
> how to properly handle this issue. Some people seem to think that the
> cp_reconnect parameter should take care of it for you, other people
> say that cp_reconnect is only part of the solution and that you have
> to write your own error handling.

For what it's worth - I think adbapi is seriously sub-optimal in this 
regard. We have continual low-level problems with Twisted apps getting 
stuck due to hung/dead ConnectionPool. And if you forget cp_reconnect, 
well you are basically committing suicide. Your Twisted app will need a 
restart.

In particular - it's not clear to my why CP isn't using "cp_good_sql" to 
probe a connection *before* starting the transaction, and to 
close/re-open it transparently if it has died and cp_reconnect==1.

Instead, the only place the "good" SQL is run is *after* a rollback, so 
the next N transactions into the pool (where N is the number of threads) 
all fail, because they don't get as far as "rollback".

I think the behaviour it should be aiming for is clear:

  1. Test each connection with "good_sql" before beginning the user 
interaction/query
  2. If execeptions occur inside the user interaction, either at cursor 
methods like execute, or connection methods like commit, then:
     1. rollback - if *this* raises an exception, throw the conn away
     2. propagate the original exception upwards unchanged (maybe 
wrapped, maybe not)

cp_reconnect should be the default.



From dynamicgl at gmail.com  Wed Oct  3 03:03:09 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Wed, 3 Oct 2012 17:03:09 +0800
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <506BF716.9050603@imperial.ac.uk>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk>
Message-ID: <CABkOF6Rif=L8Lt0ERCOwY5RFt6JCfOa-zz+UvHOZ9+mxGwDTFg@mail.gmail.com>

On Wed, Oct 3, 2012 at 4:28 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 10/02/2012 06:09 PM, E S wrote:
> > I have a service running that occasionally connects to a MySQL
> > database. When there is no activity on it for some time, I eventually
> > get the the error
> >
> > _mysql_exceptions.OperationalError: (2006, 'MySQL server has gone away')
> >
> > I have found a few posts on this group related to this issue
> >
> > http://twistedmatrix.com/pipermail/twisted-python/2007-July/015788.html
> >
> http://twistedmatrix.com/pipermail/twisted-python/2007-October/016178.html
> >
> > as well as some tickets on the twisted homepage:
> >
> > http://twistedmatrix.com/trac/ticket/4404
> > http://twistedmatrix.com/trac/ticket/4964
> >
> > I have also seen this referenced as a potential fix:
> >
> > http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/
> >
> > I currently have the cp_reconnect parameter set to True, but it does
> > not appear to be doing the job. I don't really see much consensus on
> > how to properly handle this issue. Some people seem to think that the
> > cp_reconnect parameter should take care of it for you, other people
> > say that cp_reconnect is only part of the solution and that you have
> > to write your own error handling.
>
> For what it's worth - I think adbapi is seriously sub-optimal in this
> regard. We have continual low-level problems with Twisted apps getting
> stuck due to hung/dead ConnectionPool. And if you forget cp_reconnect,
> well you are basically committing suicide. Your Twisted app will need a
> restart.
>
> In particular - it's not clear to my why CP isn't using "cp_good_sql" to
> probe a connection *before* starting the transaction, and to
> close/re-open it transparently if it has died and cp_reconnect==1.
>
> Instead, the only place the "good" SQL is run is *after* a rollback, so
> the next N transactions into the pool (where N is the number of threads)
> all fail, because they don't get as far as "rollback".
>
> I think the behaviour it should be aiming for is clear:
>
>   1. Test each connection with "good_sql" before beginning the user
> interaction/query
>   2. If execeptions occur inside the user interaction, either at cursor
> methods like execute, or connection methods like commit, then:
>      1. rollback - if *this* raises an exception, throw the conn away
>      2. propagate the original exception upwards unchanged (maybe
> wrapped, maybe not)
>
> cp_reconnect should be the default.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi

  MySQLdb (If you use it) has its own socket wrappers and callings so the
only way to co-operate with twisted is to use adbapi. It is possible to use
other implementations but there are no one claim production ready.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121003/b1b7b6f1/attachment-0001.html>

From itamar at itamarst.org  Wed Oct  3 05:27:56 2012
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 03 Oct 2012 07:27:56 -0400
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <506BF716.9050603@imperial.ac.uk>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk>
Message-ID: <506C213C.6030108@itamarst.org>

On 10/03/2012 04:28 AM, Phil Mayers wrote:
> I think the behaviour it should be aiming for is clear: 
> 1. Test each connection with "good_sql" before beginning the user 
> interaction/query

The problem is that this adds latency; this can add up to quite a 
slowdown if your database server is on a remote server and you're doing 
lots of single queries (as opposed to runInteraction).



From tobias.oberstein at tavendo.de  Wed Oct  3 05:56:27 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 3 Oct 2012 04:56:27 -0700
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <506C213C.6030108@itamarst.org>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
Message-ID: <634914A010D0B943A035D226786325D4339113D707@EXVMBX020-12.exch020.serverdata.net>

> On 10/03/2012 04:28 AM, Phil Mayers wrote:
> > I think the behaviour it should be aiming for is clear:
> > 1. Test each connection with "good_sql" before beginning the user
> > interaction/query
> 
> The problem is that this adds latency; this can add up to quite a slowdown if
> your database server is on a remote server and you're doing lots of single
> queries (as opposed to runInteraction).

Yeah, running good_sql before every user query is bad.

Probably an option to run "good_sql" on an idle connection every n secs for fast detection of connection loss would be handy ..




From augustocaringi at gmail.com  Wed Oct  3 07:36:07 2012
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Wed, 3 Oct 2012 10:36:07 -0300
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <506C213C.6030108@itamarst.org>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
Message-ID: <CADFy_4F2DqKb4W5CB6HAw3NrZCAxfh4ETOpNJjzEAgCzSHvQEg@mail.gmail.com>

On Wed, Oct 3, 2012 at 8:27 AM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On 10/03/2012 04:28 AM, Phil Mayers wrote:
>> I think the behaviour it should be aiming for is clear:
>> 1. Test each connection with "good_sql" before beginning the user
>> interaction/query
>
> The problem is that this adds latency; this can add up to quite a
> slowdown if your database server is on a remote server and you're doing
> lots of single queries (as opposed to runInteraction).

Hi!

Sometime ago I faced some related problems and I found this code,
"ReconnectingConnectionPool":

http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/

What are your opinion about it?

-- 
Augusto Mecking Caringi



From p.mayers at imperial.ac.uk  Wed Oct  3 08:18:17 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 03 Oct 2012 15:18:17 +0100
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <506C213C.6030108@itamarst.org>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
Message-ID: <506C4929.50600@imperial.ac.uk>

On 03/10/12 12:27, Itamar Turner-Trauring wrote:
> On 10/03/2012 04:28 AM, Phil Mayers wrote:
>> I think the behaviour it should be aiming for is clear:
>> 1. Test each connection with "good_sql" before beginning the user
>> interaction/query
>
> The problem is that this adds latency; this can add up to quite a
> slowdown if your database server is on a remote server and you're doing
> lots of single queries (as opposed to runInteraction).

Fair point.



From glyph at twistedmatrix.com  Wed Oct  3 14:39:19 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Oct 2012 13:39:19 -0700
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
	gone away"
In-Reply-To: <CADFy_4F2DqKb4W5CB6HAw3NrZCAxfh4ETOpNJjzEAgCzSHvQEg@mail.gmail.com>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
	<CADFy_4F2DqKb4W5CB6HAw3NrZCAxfh4ETOpNJjzEAgCzSHvQEg@mail.gmail.com>
Message-ID: <B8D04641-1948-4512-9C54-764C68D564E8@twistedmatrix.com>


Le Oct 3, 2012 à 6:36 AM, Augusto Mecking Caringi <augustocaringi at gmail.com> a écrit :

> On Wed, Oct 3, 2012 at 8:27 AM, Itamar Turner-Trauring
> <itamar at itamarst.org> wrote:
>> On 10/03/2012 04:28 AM, Phil Mayers wrote:
>>> I think the behaviour it should be aiming for is clear:
>>> 1. Test each connection with "good_sql" before beginning the user
>>> interaction/query
>> 
>> The problem is that this adds latency; this can add up to quite a
>> slowdown if your database server is on a remote server and you're doing
>> lots of single queries (as opposed to runInteraction).
> 
> Hi!
> 
> Sometime ago I faced some related problems and I found this code,
> "ReconnectingConnectionPool":
> 
> http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/
> 
> What are your opinion about it?

If there are bugs in Twisted, or important missing features, step 1 should be to file a bug – first, of course, searching for duplicates – at <http://twistedmatrix.com/trac/newticket>.  Especially if the workaround involves calling or overriding some private, internal implementation detail.  If you're going to blog about a hack that fixes the problem for you, that post should link to the ticket, so that Twisted can move forward and provide a good experience for people getting started with it.

I hate the idea that step 1 for some poor new Twisted user would be to go searching around a couple dozen external websites to apply undocumented hacks to try to just get something basic, like relational database communication, to work acceptably for their application.

So, my opinion is that either this isn't a real problem, in which case you shouldn't use it, or it is a real problem, in which case Jeffrey Gelens and powdahound should open a ticket and explain why it's necessary :).

-glyph




From electric.or.sharp at gmail.com  Thu Oct  4 13:26:04 2012
From: electric.or.sharp at gmail.com (E S)
Date: Thu, 4 Oct 2012 14:26:04 -0500
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
 gone away"
In-Reply-To: <B8D04641-1948-4512-9C54-764C68D564E8@twistedmatrix.com>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
	<CADFy_4F2DqKb4W5CB6HAw3NrZCAxfh4ETOpNJjzEAgCzSHvQEg@mail.gmail.com>
	<B8D04641-1948-4512-9C54-764C68D564E8@twistedmatrix.com>
Message-ID: <CAMwUOs2V5N=T2GNrTkLfAVmsD6i4N6J3Mv2EryXYz49kpa7-TQ@mail.gmail.com>

On Wed, Oct 3, 2012 at 3:39 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
> Le Oct 3, 2012 à 6:36 AM, Augusto Mecking Caringi <augustocaringi at gmail.com> a écrit :
>
>> On Wed, Oct 3, 2012 at 8:27 AM, Itamar Turner-Trauring
>> <itamar at itamarst.org> wrote:
>>> On 10/03/2012 04:28 AM, Phil Mayers wrote:
>>>> I think the behaviour it should be aiming for is clear:
>>>> 1. Test each connection with "good_sql" before beginning the user
>>>> interaction/query
>>>
>>> The problem is that this adds latency; this can add up to quite a
>>> slowdown if your database server is on a remote server and you're doing
>>> lots of single queries (as opposed to runInteraction).
>>
>> Hi!
>>
>> Sometime ago I faced some related problems and I found this code,
>> "ReconnectingConnectionPool":
>>
>> http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/
>>
>> What are your opinion about it?
>
> If there are bugs in Twisted, or important missing features, step 1 should be to file a bug – first, of course, searching for duplicates – at <http://twistedmatrix.com/trac/newticket>.  Especially if the workaround involves calling or overriding some private, internal implementation detail.  If you're going to blog about a hack that fixes the problem for you, that post should link to the ticket, so that Twisted can move forward and provide a good experience for people getting started with it.
>
> I hate the idea that step 1 for some poor new Twisted user would be to go searching around a couple dozen external websites to apply undocumented hacks to try to just get something basic, like relational database communication, to work acceptably for their application.
>
> So, my opinion is that either this isn't a real problem, in which case you shouldn't use it, or it is a real problem, in which case Jeffrey Gelens and powdahound should open a ticket and explain why it's necessary :).
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Well, I did reference two bugs already in the twisted bug tracker that
I believe are related to this issue (4964 definitely is anyway). These
issues have been in the bug tracking system for years now so I'm not
holding my breath on fixes any time soon. I appreciate your desire to
make twisted as good as it can be, but we all have schedules to meet
and hacks, documented or not, are sometimes necessary to move the
project along. So I definitely will consider input from people who
have run into this situation and found a solution that has worked for
them.

If you're not convinced it's a real problem, it's pretty easy to
recreate. Assuming your MySQL wait_timeout = 2, you can run the
following code and get the (2006, 'MySQL server has gone away') error:


from twisted.internet import reactor, defer
from twisted.enterprise import adbapi
import MySQLdb
import MySQLdb.cursors
from time import sleep

pool = adbapi.ConnectionPool("MySQLdb", host="1.2.3.4",
user="someuser", passwd="xxx", db="someschema",
cursorclass=MySQLdb.cursors.DictCursor, cp_reconnect=True)

def gopherIt(txn):
   txn.execute("UPDATE Table1 SET Field1 = 123 WHERE Field2 = 456")
   sleep(3)
   txn.execute("UPDATE Table1 SET Field1 = 123 WHERE Field2 = 456")

def done(x):
   print "done"

def error(f):
   print f.value

d = pool.runInteraction(gopherIt)
d.addCallback(done)
d.addErrback(error)

reactor.callLater(4, reactor.stop)
reactor.run()


So, unless I have a misunderstanding about what cp_reconnect is
supposed to do, this is a documented bug. The question is what, if
anything, can be done about it in the short term. Possible solutions
are:

1. Increase the wait_timeout value on the server
2. Override methods in the ConnectionPool class
(http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/)
3. Setup a periodic "ping" in each connection to keep it alive
4. Man up and fix adbapi myself

I'm leaning towards #1 since it seems to be least invasive, but I am
open to other opinions.



From washort at twistedmatrix.com  Thu Oct  4 14:55:04 2012
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 4 Oct 2012 13:55:04 -0700
Subject: [Twisted-Python] Introducing Frack, a (partial) replacement for Trac
Message-ID: <CAEzUHiMYj7hZR71ZLK8FqJO6HaFCPnzx=y4nByD3d_G0e-F0xA@mail.gmail.com>

Twisted's issue tracker is based on Trac, which has had
increasingly bad performance over the years. Also, its code and
deployment setup are so bad that everyone who has the ability to
improve it has tried as hard as possible to avoid touching it at all.

So I started writing a new issue tracker compatible with Trac's
database, based on Twisted and more modern web technology. But it's
incomplete and I'm not a JavaScript expert, so I need your help.

If you've ever tried to contribute to Twisted and had to wait on Trac
in order to read, comment on, or submit a ticket, contribute to Frack!
It's already much faster than Trac for what it does, and there's
plenty of room for you to help.

If you want to help out with Twisted, but like writing HTML or
Javascript too, contribute to Frack! It's written using modern,
modular JavaScript with client side templates. It uses Twisted on the
backend so using stuff like websockets for updates would be pretty
easy to add.

Interested? Here are some things we'd like to do soon:

 - Add a nice front page
 - Add a search page
 - Display more info on a ticket for reviewers

the code is at: http://launchpad.net/frack

The current prototype is running at
http://twistedmatrix.com/users/frack.twistd/ui/ticket.html?id=<ticket_id>.

You can contact me directly or post on the list with any issues or
questions you have.



From washort at twistedmatrix.com  Thu Oct  4 15:49:46 2012
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 4 Oct 2012 14:49:46 -0700
Subject: [Twisted-Python] Introducing Frack,
	a (partial) replacement for Trac
In-Reply-To: <634914A010D0B943A035D226786325D433911E3EBE@EXVMBX020-12.exch020.serverdata.net>
References: <CAEzUHiMYj7hZR71ZLK8FqJO6HaFCPnzx=y4nByD3d_G0e-F0xA@mail.gmail.com>
	<634914A010D0B943A035D226786325D433911E3EBE@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAEzUHiNL4oeGHwpyG4SEOk5iXvbvCh6buxNq1nHrntadf4JjHQ@mail.gmail.com>

That's strange. I believe that's due to twistedmatrix.com using PB to
connect different web server processes together, not anything directly
related to the code in Frack.

Try this URL? It's working for me currently.

http://twistedmatrix.com/users/frack.twistd/ui/ticket.html?id=1956



From glyph at twistedmatrix.com  Fri Oct  5 02:30:04 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 5 Oct 2012 01:30:04 -0700
Subject: [Twisted-Python] Consensus on how to handle "MySQL server has
	gone away"
In-Reply-To: <CAMwUOs2V5N=T2GNrTkLfAVmsD6i4N6J3Mv2EryXYz49kpa7-TQ@mail.gmail.com>
References: <CAMwUOs2bWAWKSFdPketJqV3dAf9QHHass0PL1r9FrBf=td1_0g@mail.gmail.com>
	<506BF716.9050603@imperial.ac.uk> <506C213C.6030108@itamarst.org>
	<CADFy_4F2DqKb4W5CB6HAw3NrZCAxfh4ETOpNJjzEAgCzSHvQEg@mail.gmail.com>
	<B8D04641-1948-4512-9C54-764C68D564E8@twistedmatrix.com>
	<CAMwUOs2V5N=T2GNrTkLfAVmsD6i4N6J3Mv2EryXYz49kpa7-TQ@mail.gmail.com>
Message-ID: <EDA13E64-F500-4A4C-A7FA-269C69659BD6@twistedmatrix.com>


Le Oct 4, 2012 à 12:26 PM, E S <electric.or.sharp at gmail.com> a écrit :

> On Wed, Oct 3, 2012 at 3:39 PM, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>> Le Oct 3, 2012 à 6:36 AM, Augusto Mecking Caringi <augustocaringi at gmail.com> a écrit :
>> 
>>> On Wed, Oct 3, 2012 at 8:27 AM, Itamar Turner-Trauring
>>> <itamar at itamarst.org> wrote:
>>>> On 10/03/2012 04:28 AM, Phil Mayers wrote:
>>>>> I think the behaviour it should be aiming for is clear:
>>>>> 1. Test each connection with "good_sql" before beginning the user
>>>>> interaction/query
>>>> 
>>>> The problem is that this adds latency; this can add up to quite a
>>>> slowdown if your database server is on a remote server and you're doing
>>>> lots of single queries (as opposed to runInteraction).
>>> 
>>> Hi!
>>> 
>>> Sometime ago I faced some related problems and I found this code,
>>> "ReconnectingConnectionPool":
>>> 
>>> http://www.gelens.org/2009/09/13/twisted-connectionpool-revisited/
>>> 
>>> What are your opinion about it?
>> 
>> If there are bugs in Twisted, or important missing features, step 1 should be to file a bug – first, of course, searching for duplicates – at <http://twistedmatrix.com/trac/newticket>.  Especially if the workaround involves calling or overriding some private, internal implementation detail.  If you're going to blog about a hack that fixes the problem for you, that post should link to the ticket, so that Twisted can move forward and provide a good experience for people getting started with it.
>> 
>> I hate the idea that step 1 for some poor new Twisted user would be to go searching around a couple dozen external websites to apply undocumented hacks to try to just get something basic, like relational database communication, to work acceptably for their application.
>> 
>> So, my opinion is that either this isn't a real problem, in which case you shouldn't use it, or it is a real problem, in which case Jeffrey Gelens and powdahound should open a ticket and explain why it's necessary :).
>> 
>> -glyph
>> 
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> Well, I did reference two bugs already in the twisted bug tracker that
> I believe are related to this issue (4964 definitely is anyway).

Aah, I'm terribly sorry.  #4964 is indeed this exact issue; I missed the link.

> These issues have been in the bug tracking system for years now so I'm not holding my breath on fixes any time soon.

Well, someone who cares will then need to fix the issue for real :).

> I appreciate your desire to make twisted as good as it can be, but we all have schedules to meet and hacks, documented or not, are sometimes necessary to move the project along. So I definitely will consider input from people who have run into this situation and found a solution that has worked for them.

Of course.  But you should be aware that this is how issues remain open in the bug tracker for years - they only get fixed when people fix them :).

> If you're not convinced it's a real problem, it's pretty easy to recreate. Assuming your MySQL wait_timeout = 2, you can run the following code and get the (2006, 'MySQL server has gone away') error:

No, I'm perfectly convinced it's a real problem.  The description on #4964 was very helpful.

> 4. Man up and fix adbapi myself

While I might disagree with the wording, this is what I'd suggest :).

> I'm leaning towards #1 since it seems to be least invasive, but I am open to other opinions.

I think you may be overestimating the difficulty involved in just fixing the bug for real.  The conflict between schedule and fixing bugs in the right place - i.e. in Twisted - is that there is some waiting involved, not that fixing the bug is super hard.  You have to wait for a code review, then wait for a release.  But, assuming your fix is not terribly invasive, you can just do this:

Fix the bug.
Submit your fix for review.
While you're waiting, of course, you need to ship some software, so ship a modified copy of the modified module with your package and hot-patch it at runtime, assuming the fix is not already applied.  You can see examples of other projects (that I've worked on) doing that here:<http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/view/head:/Epsilon/epsilon/hotfix.py> and here:<http://trac.calendarserver.org/browser/CalendarServer/trunk/twext/patches.py>.
Respond promptly to any review feedback, when it becomes available, and update your local copy.

When a new version of Twisted ships with the bug fixed, and you can update to depend on it, just delete your local copy.  Assuming that the final fix is reasonably close to the one that you implemented previously, even older versions of your software should keep working.

I hope you do elect to help out with this, we can always use more contributors :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121005/b068496c/attachment-0001.html>

From schenette at gmail.com  Sat Oct  6 16:30:11 2012
From: schenette at gmail.com (Stephan)
Date: Sat, 6 Oct 2012 15:30:11 -0700
Subject: [Twisted-Python] how to daemonize twisted...and detatch from shell
	process
Message-ID: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>

Hi,

I'm attempting to create an ubuntu service that when started will run in
the background processing beanstalk jobs.
I've taken the code from beanstalk-client twisted to act as my beanstalk
client (
https://github.com/dustin/beanstalk-client-twisted/blob/master/beanstalk.py)

The issue I'm having is how do I set up my service (ocapi.py) so that when
the daemon (ocapi) starts it detaches from the process, which isn't'
happening right now.

ocapi.py (service) <--this is what should detach and I put it in
/usr/sbin/ocapi.py code found at http://pastebin.com/29VnXnrm
ocapi (daemon) <-- goes int /etc/init.d/ocapi code found at
http://pastebin.com/0QgRfTfu

stephan at oc:~$ sudo /etc/init.d/ocapi start
 * Starting ocapi... Removing stale pidfile /var/run/ocapi.pid
Connected!

...problem is I don't get my shell prompt back when i start the service,
meaning it didn't detach from the parent process...hopefully someone can
shed some light on this.
Thanks,
Stephan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121006/5d28304d/attachment.html>

From exarkun at twistedmatrix.com  Sat Oct  6 19:56:00 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Oct 2012 01:56:00 -0000
Subject: [Twisted-Python] how to daemonize twisted...and detatch from
 shell process
In-Reply-To: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
References: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
Message-ID: <20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>

On 6 Oct, 10:30 pm, schenette at gmail.com wrote:
>Hi,
>
>I'm attempting to create an ubuntu service that when started will run 
>in
>the background processing beanstalk jobs.
>I've taken the code from beanstalk-client twisted to act as my 
>beanstalk
>client (
>https://github.com/dustin/beanstalk-client- 
>twisted/blob/master/beanstalk.py)
>
>The issue I'm having is how do I set up my service (ocapi.py) so that 
>when
>the daemon (ocapi) starts it detaches from the process, which isn't'
>happening right now.

Use twistd, which comes with daemonization features.  From the looks of 
your code, you're halfway there already.

  http://twistedmatrix.com/documents/current/core/howto/basics.html#auto1
  http://twistedmatrix.com/documents/current/core/howto/application.html

Jean-Paul
>ocapi.py (service) <--this is what should detach and I put it in
>/usr/sbin/ocapi.py code found at http://pastebin.com/29VnXnrm
>ocapi (daemon) <-- goes int /etc/init.d/ocapi code found at
>http://pastebin.com/0QgRfTfu
>
>stephan at oc:~$ sudo /etc/init.d/ocapi start
>* Starting ocapi... Removing stale pidfile /var/run/ocapi.pid
>Connected!
>
>...problem is I don't get my shell prompt back when i start the 
>service,
>meaning it didn't detach from the parent process...hopefully someone 
>can
>shed some light on this.
>Thanks,
>Stephan



From exarkun at twistedmatrix.com  Sat Oct  6 22:05:28 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Oct 2012 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1349582728.15.1274983408@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121007/8f28ea9e/attachment.html>

From schenette at gmail.com  Sun Oct  7 18:13:24 2012
From: schenette at gmail.com (Stephan)
Date: Sun, 7 Oct 2012 17:13:24 -0700
Subject: [Twisted-Python] how to daemonize twisted...and detatch from
 shell process
In-Reply-To: <20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>
References: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
	<20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>
Message-ID: <CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>

hey Jean-Paul,

I'm using twistd - if you see the daemon code it's in there to start and
manage the service.

For some reason the OC Daemon pastebin linkted didn't work but this one
does:

OC Daemon that starts the OC Service
http://pastebin.com/g0UE7An8

still know don't know what to change to get the service to run and detach
from the parent process. Any help is appreciated.

Stephan




On Sat, Oct 6, 2012 at 6:56 PM, <exarkun at twistedmatrix.com> wrote:

> On 6 Oct, 10:30 pm, schenette at gmail.com wrote:
> >Hi,
> >
> >I'm attempting to create an ubuntu service that when started will run
> >in
> >the background processing beanstalk jobs.
> >I've taken the code from beanstalk-client twisted to act as my
> >beanstalk
> >client (
> >https://github.com/dustin/beanstalk-client-
> >twisted/blob/master/beanstalk.py)
> >
> >The issue I'm having is how do I set up my service (ocapi.py) so that
> >when
> >the daemon (ocapi) starts it detaches from the process, which isn't'
> >happening right now.
>
> Use twistd, which comes with daemonization features.  From the looks of
> your code, you're halfway there already.
>
>   http://twistedmatrix.com/documents/current/core/howto/basics.html#auto1
>   http://twistedmatrix.com/documents/current/core/howto/application.html
>
> Jean-Paul
> >ocapi.py (service) <--this is what should detach and I put it in
> >/usr/sbin/ocapi.py code found at http://pastebin.com/29VnXnrm
> >ocapi (daemon) <-- goes int /etc/init.d/ocapi code found at
> >http://pastebin.com/0QgRfTfu
> >
> >stephan at oc:~$ sudo /etc/init.d/ocapi start
> >* Starting ocapi... Removing stale pidfile /var/run/ocapi.pid
> >Connected!
> >
> >...problem is I don't get my shell prompt back when i start the
> >service,
> >meaning it didn't detach from the parent process...hopefully someone
> >can
> >shed some light on this.
> >Thanks,
> >Stephan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121007/f5dced55/attachment-0001.html>

From meejah at meejah.ca  Fri Oct 12 09:52:10 2012
From: meejah at meejah.ca (meejah at meejah.ca)
Date: Fri, 12 Oct 2012 09:52:10 -0600
Subject: [Twisted-Python] txtorcon 0.6
Message-ID: <E1TMhX0-00052P-Nu@panthalassa.cg.shawcable.net>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1



txtorcon 0.6 is now tagged and released. 

txtorcon is a Twisted-based Python asynchronous implementation of the
Tor control protocol. It includes a state-tracking abstraction,
configuration abstraction, Twisted endpoint support for hidden
services, 96%+ unit-test coverage and many examples.

New in this release:

 . debian packaging (mmaker);
 . psutil fully gone;
 . *changed API* for launch_tor() to use TorConfig instead of args;
 . TorConfig.save() works properly with no connected Tor;
 . fix incorrect handling of 650 immediately after connect;
 . pep8 compliance;
 . use assertEqual in tests;
 . messages with embdedded keywords work properly;
 . fix bug with setup.py + pip;
 . issue #15 reported along with patch by Isis Lovecruft;
 . consolidate requirements (from aagbsn);
 . increased test coverage and various minor fixes;
 . https URIs for ReadTheDocs

Code and built documentation may be obtained:

   https://github.com/meejah/txtorcon
   https://txtorcon.readthedocs.org/en/latest/index.html

   git clone git://github.com/meejah/txtorcon.git

You may also install it directly:

   pip install txtorcon
   easy_install txtorcon

The sha256sum output is:

4f939e217ea3149175bb1285fa7296edc02ac245a71a60ec77b9cf48511e991e  txtorcon-0.6.tar.gz

thanks,
meejah

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)
Comment: Processed by Mailcrypt 3.5.8 <http://mailcrypt.sourceforge.net/>

iQEcBAEBAgAGBQJQd5uqAAoJEMJgKAMSgGmnTCkIAOGT6QaE+Q8jaBOedE79j/B3
QYMXh1SSfrvxn2x/utmjIgRbvCrCE+lzkxv9T9GXXjAhKSRN2xyyhRxq/Mbxvucd
FWb2zHyZIjsTcc//veHYNpRNEWORl1ZIG2kU0muHQPpxY5ZAvtEkW+RA5zMJbhHp
LF/JyltsAEu1Ja6HMFsfPmlLZiOtWBkBi3MgGGenUVJsScrtGRNCjWutGEkXxKXe
9pw2W0IGH5YmBAUiAuSW6q4cnyPQroqjSgO+RFfKMVGJNAaSqgUE8UCkcCifyjjM
2cDtGNA50kU0obT8QLgsiRyavePCQSfn9Jr1y8/Ck45Toa9a4FOQbBlOOyQSgrY=
=bORU
-----END PGP SIGNATURE-----



From exarkun at twistedmatrix.com  Sat Oct 13 22:05:24 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Oct 2012 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1350187524.0.1094802337@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121014/6dd015f0/attachment-0002.html>

From terry at jon.es  Sun Oct 14 14:40:47 2012
From: terry at jon.es (Terry Jones)
Date: Sun, 14 Oct 2012 22:40:47 +0200
Subject: [Twisted-Python] Simpler Twisted deferred code via decorated
	callbacks
Message-ID: <20603.9039.693914.80962@jon.es>

This morning I was thinking about deferreds and how people find them
difficult to grasp, but how they're conceptually simple once you get it.  I
guess most of us tell people a deferred is something to hold a result that
hasn't arrived yet. Sometimes, though, deferreds do have a result in them
immediately (e.g., using succeed or fail to get an already-fired deferred).

I wondered if it might work to tell people to think of a deferred as really
being the result. If that were literally true, instead of writing:

    d = getPage(...)
    d.addErrback(errcheck, args)
    d.addCallback(cleanup, args)
    d.addCallback(reformat, args)
    return d

We might write something like:

    result1 = getPage(...)
    result2 = errcheck(result1, args)
    result3 = cleanup(result2, args)
    return reformat(result3, args)

And if you could write that, you could obviously instead write:

    return reformat(cleanup(errcheck(getPage(...), args), args), args)

If we could write Twisted code that way, I think using deferreds would be
simpler for people unfamiliar with them.

In the style we're all used to, the programmer manually adds callbacks and
errbacks.  That's basically boilerplate. It gets worse when you then need
to also use DeferredList, etc. It's a little confusing to read deferred
code at first, because you need to know that the deferred result/failure is
automatically passed as the first arg to callbacks/errbacks.  It seems to
take a year or more for people to finally realize how the callback &
errback chains actually interact :-) Also, I wonder how comfortable
programmers are with code ordered innermost function first, as in the
normal d.addCallback(inner).addCallback(outer) Twisted style, versus
outer(inner()), as in the line above.

Anyway... I realized we CAN let people use the succinct style above, by
putting boilerplate into decorators.  I wrote two decorators, called
(surprise!) callback and errback.  You can do this:

    @errback
    def errcheck(failure, arg):
        ...

    @callback
    def cleanup(page, arg):
        ...

    @callback
    def reformat(page, arg):
        ...

    reformat(cleanup(errcheck(getPage(...), arg1), arg2), arg3)

The deferred callback and errback chains are hooked up automatically. You
still get a regular deferred back as the return value.

And... the "deferred" aspect of the code (or at least the need to talk
about or explain it) has conveniently vanished.

You can also do things like

    func1(getDeferred1(), errcheck(func2(getDeferred2(), getDeferred3())))

This gets the result of deferreds 2 & 3 and (if neither fails) passes the
result of calling func2 on both results through to func1, which is also
called with the result of deferred 1. You don't need to use DeferredLists,
as the decorator makes them for you. The errcheck function wont be called
at all unless there's an error.

That's nice compared to the verbose equivalent:

    d1 = DeferredList([getDeferred2(), getDeferred3()])
    d1.addCallback(func2)
    d1.addErrback(errcheck)
    d2 = DeferredList([getDeferred1(), d1])
    d2.addCallback(func1)

Or the more compact but awkward:

    DeferredList([getDeferred(), DeferredList([getDeferred(), getDeferred()]).addCallback(func2).addErrback(errcheck)]).addCallback(func1)

There's lots more that could be said about this, but that's enough for now.
The code (surely not bulletproof) and some tests are at
https://github.com/terrycojones/twisted-callback-decorators

I'll add a README sometime soon.  This is still pretty much proof of
concept, and some it could be done slightly differently. I'm happy to
discuss in more detail if people are interested.

Terry



From exarkun at twistedmatrix.com  Mon Oct 15 07:49:39 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 15 Oct 2012 13:49:39 -0000
Subject: [Twisted-Python] how to daemonize twisted...and detatch from
 shell process
In-Reply-To: <CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>
References: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
	<20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>
	<CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>
Message-ID: <20121015134939.6851.50167297.divmod.xquotient.1@localhost6.localdomain6>

On 8 Oct, 12:13 am, schenette at gmail.com wrote:
>hey Jean-Paul,
>
>I'm using twistd - if you see the daemon code it's in there to start 
>and
>manage the service.

I see.  However, you are not using it correctly. ;)  The very last line 
of the code you pasted is:

    reactor.run()

When you use twistd, you do not call `reactor.run` yourself.  This is 
why your application isn't daemonizing.

Jean-Paul



From itamar at futurefoundries.com  Mon Oct 15 08:34:25 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Mon, 15 Oct 2012 10:34:25 -0400
Subject: [Twisted-Python] If you can read this,
	the mailing list is working again
Message-ID: <CAOp9P3rrRQ6PBM8mdLqD+_uz1OLUewFo8BwBT7wftROj=zAtRw@mail.gmail.com>

We've been having some delivery issues, if this arrives in your inbox then
probably the mailing list is working again.

-Itamar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121015/f21e61c7/attachment.html>

From glyph at twistedmatrix.com  Mon Oct 15 10:01:46 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 15 Oct 2012 09:01:46 -0700
Subject: [Twisted-Python] how to daemonize twisted...and detatch from
	shell process
In-Reply-To: <CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>
References: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
	<20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>
	<CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>
Message-ID: <F101FA33-99EB-43AD-9994-EF7490349EA3@twistedmatrix.com>

On Oct 7, 2012, at 5:13 PM, Stephan <schenette at gmail.com> wrote:

> hey Jean-Paul,
> 
> I'm using twistd - if you see the daemon code it's in there to start and manage the service.
> 
> For some reason the OC Daemon pastebin linkted didn't work but this one does:
> 
> OC Daemon that starts the OC Service
> http://pastebin.com/g0UE7An8
> 
> still know don't know what to change to get the service to run and detach from the parent process. Any help is appreciated.
> 
> Stephan

The fact that "ocapi.py" is in "/usr/sbin" suggests that it's designed to be run as a script and not as a twistd plugin.  The shell script that you're citing is mostly irrelevant - that's just a wrapper to get twistd to run on your platform.

And, indeed, when I look at ocapi.py, I can see it has a 'reactor.run()' at the bottom of it, which means it's trying to run itself, not be run by twistd.  That's not how a file passed to '--python' is supposed to work.

Are you the maintainer of ocapi.py? If not, you'll have to get them to make some changes.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121015/23662e0a/attachment.html>

From naveenm at enthought.com  Mon Oct 15 10:56:31 2012
From: naveenm at enthought.com (Naveen Michaud-Agrawal)
Date: Mon, 15 Oct 2012 12:56:31 -0400
Subject: [Twisted-Python] Simpler Twisted deferred code via decorated
	callbacks
In-Reply-To: <20603.9039.693914.80962@jon.es>
References: <20603.9039.693914.80962@jon.es>
Message-ID: <CAL7GHvfbjTgQQMRrMaAy-jTE=5n92U7XObYeYUib=C2YxFQMsA@mail.gmail.com>

Hi Terry,

This is a really nice approach. Thanks for sharing! Are there any downsides
or functionality that can't be accomplished using this approach? This
combined with the generator approach to deferreds will make it easier to
reason about the code flow.

Naveen

On Sun, Oct 14, 2012 at 4:40 PM, Terry Jones <terry at jon.es> wrote:

> This morning I was thinking about deferreds and how people find them
> difficult to grasp, but how they're conceptually simple once you get it.  I
> guess most of us tell people a deferred is something to hold a result that
> hasn't arrived yet. Sometimes, though, deferreds do have a result in them
> immediately (e.g., using succeed or fail to get an already-fired deferred).
>
> I wondered if it might work to tell people to think of a deferred as really
> being the result. If that were literally true, instead of writing:
>
>     d = getPage(...)
>     d.addErrback(errcheck, args)
>     d.addCallback(cleanup, args)
>     d.addCallback(reformat, args)
>     return d
>
> We might write something like:
>
>     result1 = getPage(...)
>     result2 = errcheck(result1, args)
>     result3 = cleanup(result2, args)
>     return reformat(result3, args)
>
> And if you could write that, you could obviously instead write:
>
>     return reformat(cleanup(errcheck(getPage(...), args), args), args)
>
> If we could write Twisted code that way, I think using deferreds would be
> simpler for people unfamiliar with them.
>
> In the style we're all used to, the programmer manually adds callbacks and
> errbacks.  That's basically boilerplate. It gets worse when you then need
> to also use DeferredList, etc. It's a little confusing to read deferred
> code at first, because you need to know that the deferred result/failure is
> automatically passed as the first arg to callbacks/errbacks.  It seems to
> take a year or more for people to finally realize how the callback &
> errback chains actually interact :-) Also, I wonder how comfortable
> programmers are with code ordered innermost function first, as in the
> normal d.addCallback(inner).addCallback(outer) Twisted style, versus
> outer(inner()), as in the line above.
>
> Anyway... I realized we CAN let people use the succinct style above, by
> putting boilerplate into decorators.  I wrote two decorators, called
> (surprise!) callback and errback.  You can do this:
>
>     @errback
>     def errcheck(failure, arg):
>         ...
>
>     @callback
>     def cleanup(page, arg):
>         ...
>
>     @callback
>     def reformat(page, arg):
>         ...
>
>     reformat(cleanup(errcheck(getPage(...), arg1), arg2), arg3)
>
> The deferred callback and errback chains are hooked up automatically. You
> still get a regular deferred back as the return value.
>
> And... the "deferred" aspect of the code (or at least the need to talk
> about or explain it) has conveniently vanished.
>
> You can also do things like
>
>     func1(getDeferred1(), errcheck(func2(getDeferred2(), getDeferred3())))
>
> This gets the result of deferreds 2 & 3 and (if neither fails) passes the
> result of calling func2 on both results through to func1, which is also
> called with the result of deferred 1. You don't need to use DeferredLists,
> as the decorator makes them for you. The errcheck function wont be called
> at all unless there's an error.
>
> That's nice compared to the verbose equivalent:
>
>     d1 = DeferredList([getDeferred2(), getDeferred3()])
>     d1.addCallback(func2)
>     d1.addErrback(errcheck)
>     d2 = DeferredList([getDeferred1(), d1])
>     d2.addCallback(func1)
>
> Or the more compact but awkward:
>
>     DeferredList([getDeferred(), DeferredList([getDeferred(),
> getDeferred()]).addCallback(func2).addErrback(errcheck)]).addCallback(func1)
>
> There's lots more that could be said about this, but that's enough for now.
> The code (surely not bulletproof) and some tests are at
> https://github.com/terrycojones/twisted-callback-decorators
>
> I'll add a README sometime soon.  This is still pretty much proof of
> concept, and some it could be done slightly differently. I'm happy to
> discuss in more detail if people are interested.
>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121015/82fe0f81/attachment.html>

From terry at jon.es  Mon Oct 15 12:54:04 2012
From: terry at jon.es (Terry Jones)
Date: Mon, 15 Oct 2012 20:54:04 +0200
Subject: [Twisted-Python] Simpler Twisted deferred code via decorated
 callbacks
In-Reply-To: Your message at 12:56:31 on Monday, 15 October 2012
References: <20603.9039.693914.80962@jon.es>
	<CAL7GHvfbjTgQQMRrMaAy-jTE=5n92U7XObYeYUib=C2YxFQMsA@mail.gmail.com>
Message-ID: <20604.23500.206739.226560@jon.es>

Hi Naveen

> This is a really nice approach.

I'm glad you like it. I've learned over the years to avoid decorators, but
I nevertheless think these ones are promising.

> Are there any downsides or functionality that can't be accomplished using
> this approach?

The main thing that's a little different is that it doesn't (yet) help with
situations where you might want finer-grained control over callbacks and
errbacks, or to use addBoth. I didn't want to tackle everything at once.
Because the approach is all just normal deferreds, there was no need to.

I wasn't sure what to do about addBoth - add a new decorator for it, let
people use both decorators, etc.  You can still just do this:

    def both(result):
        # do something

    @callback
    def first(result):
        # do something

    @callback
    def second(result):
        # do something

    second(first(getPage('http://www.something.com')).addBoth(both)

The regular non-decorated Twisted code would be:

    def both(result):
        # do something

    def first(result):
        # do something

    def second(result):
        # do something

    getPage('http://www.something.com').addCallback(first)
        .addBoth(both).addCallback(second)


As another example, in regular Twisted code you might want to do this:

    d = getDeferred()
    d.addCallback(f1)
    d.addCallbacks(f2, e1)

Many people don't understand that that's not the same as

    d = getDeferred()
    d.addCallback(f1)
    d.addCallback(f2)
    d.addErrback(e1)

The decorator approach doesn't provide directly for the former. You get the
latter of course by writing e1(f2(f1(getDeferred))).  You could have the
former via f1(getDeferred).addCallbacks(f2, e1) in which case the
decorators aren't buying you much.

So I think there's some way to go on that front, but I've not yet thought
about what would be most elegant/simple etc.  Given a nice way to do
addCallbacks, it can be used to implement addBoth (as in defer.py), so
these two examples are really just the same thing.

Glyph suggested I post with a simple example explaining exactly what the
decorators are doing. I plan do that.

Terry



From terry at jon.es  Mon Oct 15 13:31:50 2012
From: terry at jon.es (Terry Jones)
Date: Mon, 15 Oct 2012 21:31:50 +0200
Subject: [Twisted-Python] Simpler Twisted deferred code via decorated
	callbacks
In-Reply-To: Your message at 22:40:47 on Sunday, 14 October 2012
References: <20603.9039.693914.80962@jon.es>
Message-ID: <20604.25766.428065.649859@jon.es>

Here's a description of what the 'callback' decorator in my code does.

Here's some normal Twisted code, assuming you do from twisted.web.client
import getPage (yes, getPage is kind-of obsolete, but it's a concrete and
conceptually simple deferred-returning function I like to use in examples).

    def pageLength(url):
        def _length(page):
            return len(page)
        return getPage(url).addCallback(_length)

Using the 'callback' decorator you could instead write:

    def pageLength(url):
        @callback
        def _length(page):
            return len(page)
        return _length(getPage(url)

The syntactic difference in this case is minimal. The saving is more
significant in other cases, but let's consider this simplest case.

The decorator returns a wrapping function that essentially does this:

  1. Look at all its arguments.  For any that are Deferreds, put them into
     a deferred list, which I'll call DL for this explanation. This is done
     for positional args (line 25) and keyword args (line 31).

  2. If no arguments are Deferreds, just call the original _length function
     with the original arguments, and return the result in a Deferred using
     maybeDeferred (line 44).  So, any function that is called with a set
     of arguments that are not Deferred instances just returns a deferred
     that fires with the function result or fails if the function raises
     (maybeDeferred takes care of that for us).

  3. The interesting part is when some of the arguments are deferreds (line
     36). In that case, we have a DeferredList called DL that will
     eventually fire when all the arguments are available.  The arguments
     are collected, as they arrive, into a list (fags) and a dictionary
     (fkw).  Args that were not deferreds are already put into fargs and
     fkw (lines 30 and 35).

  4. If DL fires normally, we can go ahead and call the wrapped original
     function with all the arguments it was supposed to receive.  In our
     _length case, there was only one argument, a deferred returning the
     content of a web page, so the original _length gets called with the
     page content. A lambda to call the original function is added to DL as
     a callback (line 41), and DL is returned.  Note that DL has already
     fired, so adding the callback function to call the original function
     results in the function being called immediately. By adding it as a
     callback to DL, we can return a deferred (DL) from the wrapper.

  5. When DL is made, I pass fireOnOneErrback=True to it. So if any of the
     arguments to the wrapped function result in an error (i.e., in our
     example, getPage fails), then DL will fail immediately.  In that case,
     an errback (getSubFailure) attached to DL will pull the original
     failure out of DL and return it.  Because one of the arguments to the
     original function has failed to materialize, we obviously can't call
     the original function.  By just returning DL (which has failed), the
     failure is propagated (in a deferred) to any caller we may have.

If you look at the code for the 'callback' decorator in decorate.py, the
above should help to make things clearer.  I'm happy to answer any
questions, of course.

I hope the description makes it clear how the decorator works on a function
called with multiple deferred arguments.  It's quite like a DeferredList
that you can put non-deferreds objects into and add a callback to (where
the callback is the decorated function). I implemented that once years ago,
but didn't bother to post it.

The 'errback' decorator is similar in structure, but operates differently
of course.  I'll send a separate mail describing it.

Terry



From terry at jon.es  Mon Oct 15 18:24:48 2012
From: terry at jon.es (Terry Jones)
Date: Tue, 16 Oct 2012 02:24:48 +0200
Subject: [Twisted-Python] Simpler Twisted deferred code via decorated
 callbacks
In-Reply-To: Your message at 22:40:47 on Sunday, 14 October 2012
References: <20603.9039.693914.80962@jon.es>
Message-ID: <20604.43344.335810.897192@jon.es>

Here's a description of what the 'errback' decorator in my code does. (BTW,
I've just updated it.)

Here's normal Twisted errback code, assuming you do from twisted.web.client
import getPage and from twisted.python import log.

    def logGetPageError(url):
        def handleError(failure, url):
            log.msg('Could not fetch URL %s.' % url)
        return getPage(url).addErrback(handleError, url)

Using the 'errback' decorator you could instead write:

    def logGetPageError(url):
        @errback
        def handleError(failure, url):
            log.msg('Could not fetch URL %s.' % url)
        return handleError(getPage(url), url)

As with the 'callback' decorator, the syntactic difference between the two
in this case is minimal.

The decorator returns a wrapping function that essentially does this:

  0. Return a failed Deferred if the decorated function is called with
     no positional arguments (line 69). The reason for this is below.

  1. Look at all its arguments.  For any that are Deferreds, put them into
     a deferred list, which I'll call DL for this explanation. This is done
     for positional args (line 76) and keyword args (line 82).  In our
     example, DL will contain the Deferred returned by getPage.

  2. Suppose none of the arguments were Deferreds. If any of the args were
     instances of Failure (line 96), return a deferred that will fire with
     the result of calling the original wrapped (errback) function with all
     the passed arguments (at least one of which is a Failure).  If no
     argument was a Failure, the original wrapped function is NOT called
     because there hasn't been any error. Instead (line 99), an
     already-fired Deferred (obtained via succeed) is returned with the
     value of the first positional argument.  This is how the wrapping
     errback function passes the result along to its caller (if any). The
     other arguments to the wrapped function were obviously intended for
     that function, and are unused (this mirrors the way args passed to
     addErrback are unused if the errback is never run due to no error
     occurring).

  3. If, as in our example, some of the arguments are deferreds (line 87)
     we have a DeferredList called DL that will eventually fire when all
     the Deferreds have fired (i.e., when all arguments are available for
     the wrapped function). Note that due to the use of addBoth (lines 79
     and 84) non-Failure and Failure arguments coming from arguments that
     were Deferreds are both collected. These are collected, as they
     arrive, into a list (fargs) and a dictionary (fkw).  Args that were
     not deferreds are already put into fargs and fkw (lines 78 and 86).

  4. If DL fires with no errors (in our case, that means getPage returns a
     page), we act as we did in step 2: If any of the args are instances of
     Failure (line 89), the 'finish' callback added to DL (line 93) will
     return the result of calling the original wrapped (errback) function
     (handleError in our case) with all the passed arguments.  If no
     argument was a Failure, the original wrapped function is NOT called
     because there hasn't been any error, and the callback on DL returns
     the first positional arg (on line 92).  This last case corresponds to
     getPage returning successfully and the handleError errback not being
     called.

The 'errback' decorator differs from the 'callback' decorator in that its
wrapper function:

  - Collects all Failures in all arguments (including any coming from
    Deferreds, of course) in order to call the wrapped errback function.
    The 'callback' decorator OTOH immediately returns a failed Deferred as
    soon as any error happens (which is why its DeferredList uses
    fireOnOneErrback=True).

  - Must be called with at least one positional argument, so that in the
    case where nothing goes wrong with any Deferred argument (and no other
    arg is already a Failure) it has a value to pass back to its caller (if
    any).

Both the wrapper functions sometimes do not call the wrapped function. This
is symmetric and is as you'd expect: the 'callback' decorator doesn't call
the wrapped (callback) function if there's any error, whereas the 'errback'
decorator doesn't call the wrapped (errback) function unless there's an
error.  This is very similar to regular Twisted call/errback processing: if
you're on the callback chain, errback functions aren't called & vice versa.
Just as in regular Twisted code, a callback can produce a Failure or an
errback can produce a non-Failure and you're back on the other chain.

If you've read all this, great :-) It should be clear that you can roll up
much more interesting cases, combining decorated callbacks and errbacks
that accept multiple Deferred and non-Deferred arguments.  Those are the
cases where the syntactic / code complexity savings are much more apparent
because (at least in many cases) there's no need to write code with
addCallback, addErrback, or to use DeferredList.

Some people's immediate reaction to all this is to tell me about
inlineCallbacks.  But this is very different, even though both share the
universal decorator goal of making code look simpler / easier.
inlineCallbacks lets you explicitly yield values from Deferreds.
Unfortunately, anything can happen while you're context switched out before
the yield yields.  The decorators I've posted just wire up regular Twisted
callback/errback processing chains, with no use of yield. There are other
differences, but this post is already way long...

Terry



From david at davidstrauss.net  Thu Oct 18 18:17:19 2012
From: david at davidstrauss.net (David Strauss)
Date: Thu, 18 Oct 2012 17:17:19 -0700
Subject: [Twisted-Python] how to daemonize twisted...and detatch from
 shell process
In-Reply-To: <F101FA33-99EB-43AD-9994-EF7490349EA3@twistedmatrix.com>
References: <CADozHMWhzvRraEPAVypMp_VQeidRszqWJ7Jz_Z8Ek7raVbXm3Q@mail.gmail.com>
	<20121007015600.7857.1959357521.divmod.xquotient.271@localhost6.localdomain6>
	<CADozHMW-AYGi5_C2jD0ydREqEVmm3NhUj0EXweaEub++zsQg+Q@mail.gmail.com>
	<F101FA33-99EB-43AD-9994-EF7490349EA3@twistedmatrix.com>
Message-ID: <CAKz8sYWmEbxP+k69bovqugcR9y7smte-4vTi+g25GXVpUD0PzQ@mail.gmail.com>

I also recommend looking at systemd and Upstart, even in combination
with twistd. Twisted's twistd will daemonize the process, but it won't
give you named services and a clean environment.

-- 
David Strauss
   | david at davidstrauss.net



From nathanm at securitymetrics.com  Thu Oct 18 22:41:08 2012
From: nathanm at securitymetrics.com (Nathan Mower)
Date: Thu, 18 Oct 2012 22:41:08 -0600
Subject: [Twisted-Python] getpeername from verify callback
Message-ID: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>

The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...

exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'

...on line 9 where getpeername() is called by the verify() callback.

Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?

Thanks,
Nathan

----------------------------------------------
from OpenSSL import SSL
from twisted.internet import reactor, ssl
from twisted.internet.protocol import ClientFactory
from twisted.protocols.basic import LineReceiver

class VerifyContextFactory(ssl.ClientContextFactory):

    def verify(self, connection, x509, errnum, errdepth, ok):
        print connection.getpeername()[0]
        return ok

    def getContext(self):
        ctx = ssl.ClientContextFactory.getContext(self)
        ctx.set_verify(SSL.VERIFY_PEER|SSL.VERIFY_FAIL_IF_NO_PEER_CERT, self.verify)
        return ctx

class MyClient(LineReceiver):

    def connectionMade(self):
        print "connected to", self.transport.socket.getpeername()[0]
        return

    def connectionFailed(self, reason):
        reactor.stop()

    def connectionLost(self, reason):
        reactor.stop()

class MyClientFactory(ClientFactory):

    protocol = MyClient

if __name__ == "__main__":
    reactor.connectSSL('www.example.com', 443, MyClientFactory(), VerifyContextFactory())
    reactor.run()




From glyph at twistedmatrix.com  Fri Oct 19 00:28:53 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 18 Oct 2012 23:28:53 -0700
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
Message-ID: <2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>

On Oct 18, 2012, at 9:41 PM, Nathan Mower <nathanm at securitymetrics.com> wrote:

> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
> 
> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
> 
> ...on line 9 where getpeername() is called by the verify() callback.
> 
> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?

The 'socket' attribute that you're accessing is not a documented attribute of ITransport, so in a way I'm glad that your code broke - this wasn't a valid way to use Twisted in the first place :).  See <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html>.

Now, as it happens, <http://twistedmatrix.com/documents/current/api/twisted.protocols.tls.TLSMemoryBIOProtocol.html> implements <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ISSLTransport.html> which is a subinterface of <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html>, which is therefore guaranteed to have a getPeer method <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#getPeer> that returns an IPv4Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv4Address.html> or IPv6Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv6Address.html>, both of which have a 'host' attribute that is the hostname.

So, in short, substitute "self.transport.getPeer().host" and your code should work again.

-glyph




From adi at roiban.ro  Fri Oct 19 00:36:49 2012
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 19 Oct 2012 09:36:49 +0300
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
Message-ID: <CAFycZ9dKGNde6pKCB3iHO=y=OaWrpExiNEkxrLtGP=rKd-71cw@mail.gmail.com>

On 19 October 2012 07:41, Nathan Mower <nathanm at securitymetrics.com> wrote:
> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>
> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>
> ...on line 9 where getpeername() is called by the verify() callback.
>
> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?

Hi

I think that we are talking about this bug:
http://twistedmatrix.com/trac/ticket/5684

[snip]

-- 
Adi Roiban



From glyph at twistedmatrix.com  Fri Oct 19 00:50:13 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 18 Oct 2012 23:50:13 -0700
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <CAFycZ9dKGNde6pKCB3iHO=y=OaWrpExiNEkxrLtGP=rKd-71cw@mail.gmail.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
	<CAFycZ9dKGNde6pKCB3iHO=y=OaWrpExiNEkxrLtGP=rKd-71cw@mail.gmail.com>
Message-ID: <A91EEAF7-2AB0-42BE-9251-6254874D7517@twistedmatrix.com>


On Oct 18, 2012, at 11:36 PM, Adi Roiban <adi at roiban.ro> wrote:

> On 19 October 2012 07:41, Nathan Mower <nathanm at securitymetrics.com> wrote:
>> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>> 
>> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>> 
>> ...on line 9 where getpeername() is called by the verify() callback.
>> 
>> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?
> 
> Hi
> 
> I think that we are talking about this bug:
> http://twistedmatrix.com/trac/ticket/5684

Thanks for the pointer; I've just closed it with a similar answer.

-glyph


From adi at roiban.ro  Fri Oct 19 00:56:00 2012
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 19 Oct 2012 09:56:00 +0300
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
	<2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
Message-ID: <CAFycZ9c2T7FBRfQ6SU3V7h5fy1jhOViqu+yKjbFA8b=OHubS6A@mail.gmail.com>

On 19 October 2012 09:28, Glyph <glyph at twistedmatrix.com> wrote:
> On Oct 18, 2012, at 9:41 PM, Nathan Mower <nathanm at securitymetrics.com> wrote:
>
>> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>>
>> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>>
>> ...on line 9 where getpeername() is called by the verify() callback.
>>
>> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?
>
> The 'socket' attribute that you're accessing is not a documented attribute of ITransport, so in a way I'm glad that your code broke - this wasn't a valid way to use Twisted in the first place :).  See <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html>.
>
> Now, as it happens, <http://twistedmatrix.com/documents/current/api/twisted.protocols.tls.TLSMemoryBIOProtocol.html> implements <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ISSLTransport.html> which is a subinterface of <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html>, which is therefore guaranteed to have a getPeer method <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#getPeer> that returns an IPv4Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv4Address.html> or IPv6Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv6Address.html>, both of which have a 'host' attribute that is the hostname.
>
> So, in short, substitute "self.transport.getPeer().host" and your code should work again.

Hi,

Thanks for the explanation about new interfaces.

I think that the initial question was about the
SSL.Context.set_verify(connection, certificate, errnum, errdepth,
code) callback.

>From what I can see, SSL.Context or SSL.Connection has no transport attribute.

In previous version there was SSL.Connection.getpeername()

-- 
Adi Roiban



From nathanm at securitymetrics.com  Fri Oct 19 01:00:24 2012
From: nathanm at securitymetrics.com (Nathan Mower)
Date: Fri, 19 Oct 2012 01:00:24 -0600
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
	<2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
Message-ID: <15E27189-E9BB-4993-AE68-528264BE88C6@securitymetrics.com>


On Oct 19, 2012, at 12:28 AM, Glyph wrote:

> On Oct 18, 2012, at 9:41 PM, Nathan Mower <nathanm at securitymetrics.com> wrote:
> 
>> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>> 
>> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>> 
>> ...on line 9 where getpeername() is called by the verify() callback.
>> 
>> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?
> 
> The 'socket' attribute that you're accessing is not a documented attribute of ITransport, so in a way I'm glad that your code broke - this wasn't a valid way to use Twisted in the first place :).  See <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html>.
> 
> Now, as it happens, <http://twistedmatrix.com/documents/current/api/twisted.protocols.tls.TLSMemoryBIOProtocol.html> implements <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ISSLTransport.html> which is a subinterface of <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html>, which is therefore guaranteed to have a getPeer method <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#getPeer> that returns an IPv4Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv4Address.html> or IPv6Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv6Address.html>, both of which have a 'host' attribute that is the hostname.
> 
> So, in short, substitute "self.transport.getPeer().host" and your code should work again.

Remember, the real question is what to use in the verify() callback, where self is an instance of VerifyContextFactory, and connection is an instance of OpenSSL.SSL.Connection.  Any way to get the transport from there?

Nathan


From glyph at twistedmatrix.com  Fri Oct 19 01:14:53 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 19 Oct 2012 00:14:53 -0700
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <CAFycZ9c2T7FBRfQ6SU3V7h5fy1jhOViqu+yKjbFA8b=OHubS6A@mail.gmail.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
	<2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
	<CAFycZ9c2T7FBRfQ6SU3V7h5fy1jhOViqu+yKjbFA8b=OHubS6A@mail.gmail.com>
Message-ID: <171BA475-01A3-4A2D-9DE7-238E46D022B9@twistedmatrix.com>


On Oct 18, 2012, at 11:56 PM, Adi Roiban <adi at roiban.ro> wrote:

> On 19 October 2012 09:28, Glyph <glyph at twistedmatrix.com> wrote:
>> On Oct 18, 2012, at 9:41 PM, Nathan Mower <nathanm at securitymetrics.com> wrote:
>> 
>>> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>>> 
>>> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>>> 
>>> ...on line 9 where getpeername() is called by the verify() callback.
>>> 
>>> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?
>> 
>> The 'socket' attribute that you're accessing is not a documented attribute of ITransport, so in a way I'm glad that your code broke - this wasn't a valid way to use Twisted in the first place :).  See <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html>.
>> 
>> Now, as it happens, <http://twistedmatrix.com/documents/current/api/twisted.protocols.tls.TLSMemoryBIOProtocol.html> implements <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ISSLTransport.html> which is a subinterface of <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html>, which is therefore guaranteed to have a getPeer method <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#getPeer> that returns an IPv4Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv4Address.html> or IPv6Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv6Address.html>, both of which have a 'host' attribute that is the hostname.
>> 
>> So, in short, substitute "self.transport.getPeer().host" and your code should work again.
> 
> Hi,
> 
> Thanks for the explanation about new interfaces.
> 
> I think that the initial question was about the
> SSL.Context.set_verify(connection, certificate, errnum, errdepth,
> code) callback.
> 
> From what I can see, SSL.Context or SSL.Connection has no transport attribute.
> 
> In previous version there was SSL.Connection.getpeername()

In this case, you actually want to pass in the hostname to verify against, not look at the connection.  getpeername() ought to return the IP of the host you actually connected to, not the hostname, which is not meaningful to verify against.  You need to pass in the host name that the user specified, so that needs to be an argument to the verifying context factory.

If you need really need information from the connection itself for verification (although that is usually a bad idea, with the exception of the very specific case that SSH uses it for - although that grants little in the way of useful security, in my opinion), you will have to use connectTCP and startTLS rather than connectSSL, so you can construct a new TLS context once you already have a reference to the protocol object.

This is a good thing, though; connectSSL is a slightly silly API and something that I hope will eventually go away; now that we have memory BIOs, TLS can be accomplished just fine without adding additional APIs for every reactor to support.

-glyph


From nathanm at securitymetrics.com  Fri Oct 19 01:38:39 2012
From: nathanm at securitymetrics.com (Nathan Mower)
Date: Fri, 19 Oct 2012 01:38:39 -0600
Subject: [Twisted-Python] getpeername from verify callback
In-Reply-To: <171BA475-01A3-4A2D-9DE7-238E46D022B9@twistedmatrix.com>
References: <E4153B5C-F891-4F7A-9614-B1F4A43C059C@securitymetrics.com>
	<2250F78E-EF68-475E-8F62-0C319B67CB54@twistedmatrix.com>
	<CAFycZ9c2T7FBRfQ6SU3V7h5fy1jhOViqu+yKjbFA8b=OHubS6A@mail.gmail.com>
	<171BA475-01A3-4A2D-9DE7-238E46D022B9@twistedmatrix.com>
Message-ID: <1FD6A1AA-96B6-427A-BFCE-FA3391AB0E94@securitymetrics.com>

Thank you, Glyph.

On Oct 19, 2012, at 1:14 AM, Glyph wrote:

> 
> On Oct 18, 2012, at 11:56 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
>> On 19 October 2012 09:28, Glyph <glyph at twistedmatrix.com> wrote:
>>> On Oct 18, 2012, at 9:41 PM, Nathan Mower <nathanm at securitymetrics.com> wrote:
>>> 
>>>> The following sample code worked until Twisted began to prefer memory BIOs over socket BIOs.  Now it produces this error...
>>>> 
>>>> exceptions.AttributeError: 'NoneType' object has no attribute 'getpeername'
>>>> 
>>>> ...on line 9 where getpeername() is called by the verify() callback.
>>>> 
>>>> Is there any way to obtain the peer name, given the OpenSSL.SSL.Connection object passed into verify()?  Anything that surfaces the underlying socket?  (Perhaps something similar to what is done in connectionMade(), which does work.)  Or alternatively, is there a way to tell the reactor to employ socket BIOs?
>>> 
>>> The 'socket' attribute that you're accessing is not a documented attribute of ITransport, so in a way I'm glad that your code broke - this wasn't a valid way to use Twisted in the first place :).  See <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html>.
>>> 
>>> Now, as it happens, <http://twistedmatrix.com/documents/current/api/twisted.protocols.tls.TLSMemoryBIOProtocol.html> implements <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ISSLTransport.html> which is a subinterface of <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html>, which is therefore guaranteed to have a getPeer method <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITCPTransport.html#getPeer> that returns an IPv4Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv4Address.html> or IPv6Address <http://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv6Address.html>, both of which have a 'host' attribute that is the hostname.
>>> 
>>> So, in short, substitute "self.transport.getPeer().host" and your code should work again.
>> 
>> Hi,
>> 
>> Thanks for the explanation about new interfaces.
>> 
>> I think that the initial question was about the
>> SSL.Context.set_verify(connection, certificate, errnum, errdepth,
>> code) callback.
>> 
>> From what I can see, SSL.Context or SSL.Connection has no transport attribute.
>> 
>> In previous version there was SSL.Connection.getpeername()
> 
> In this case, you actually want to pass in the hostname to verify against, not look at the connection.  getpeername() ought to return the IP of the host you actually connected to, not the hostname, which is not meaningful to verify against.  You need to pass in the host name that the user specified, so that needs to be an argument to the verifying context factory.
> 
> If you need really need information from the connection itself for verification (although that is usually a bad idea, with the exception of the very specific case that SSH uses it for - although that grants little in the way of useful security, in my opinion), you will have to use connectTCP and startTLS rather than connectSSL, so you can construct a new TLS context once you already have a reference to the protocol object.
> 
> This is a good thing, though; connectSSL is a slightly silly API and something that I hope will eventually go away; now that we have memory BIOs, TLS can be accomplished just fine without adding additional APIs for every reactor to support.
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dynamicgl at gmail.com  Sat Oct 20 09:29:10 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 20 Oct 2012 23:29:10 +0800
Subject: [Twisted-Python] a possible solution for ticket 5562
Message-ID: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>

Hi All

  A few months ago, I reported a bug about IOCP. Last night I spent several
hours on its implementation and finally found out a possible solution for
that.

  when sending some small chunks data continuously, the buffer will pile
them up and send to IOCP; however there is a SEND_LIMIT (128K) that means
only 128K will be handled. Now the problem is when we try to trigger the
next writing, IOCP will raise ERROR_IO_PENDING immediately and then
connection Lost.

  So I got a idea: if the size of data is larger than SEND_LIMIT, we can
wait a little bit time for the next writing instead of do it immediately.

in twisted\internet\iocpreactor\abstract.py there is a method

def _cbWrite(self, rc, bytes, evt):
        if self._handleWrite(rc, bytes, evt):
            self.doWrite()

now I modified a bit,

def _cbWrite(self, rc, bytes, evt):
        if self._handleWrite(rc, bytes, evt):
            if len(evt.buff) < self.SEND_LIMIT:
                self.doWrite()
            else:
                self.reactor.callLater(0.8,self.doWrite)



0.8 is a silly trial but I have no idea what is the right number for this
place. After this modification, previous problematic scripts can pass.

Maybe the better solution is to find a way to poll the complete port status
when read/write will be recovered from IO PENDING. Simply wait a little is
risky.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121020/d9ec2bc7/attachment-0001.html>

From miwinter at cisco.com  Sat Oct 20 10:07:21 2012
From: miwinter at cisco.com (Mike Winter)
Date: Sat, 20 Oct 2012 09:07:21 -0700
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
Message-ID: <7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>

This looks like the kind of thing that could involve using Deferred as part of solution. Instead of callLater(0.8,doWrite), design the mechanism to wire up event-source to fire the deferred and make doWrite be the callback.
 
On Oct 20, 2012, at 8:29:10AM, gelin yan wrote:

> Hi All
> 
>   A few months ago, I reported a bug about IOCP. Last night I spent several hours on its implementation and finally found out a possible solution for that.
> 
>   when sending some small chunks data continuously, the buffer will pile them up and send to IOCP; however there is a SEND_LIMIT (128K) that means only 128K will be handled. Now the problem is when we try to trigger the next writing, IOCP will raise ERROR_IO_PENDING immediately and then connection Lost.
> 
>   So I got a idea: if the size of data is larger than SEND_LIMIT, we can wait a little bit time for the next writing instead of do it immediately. 
> 
> in twisted\internet\iocpreactor\abstract.py there is a method
> 
> def _cbWrite(self, rc, bytes, evt):
>         if self._handleWrite(rc, bytes, evt):
>             self.doWrite()
> 
> now I modified a bit,
> 
> def _cbWrite(self, rc, bytes, evt):
>         if self._handleWrite(rc, bytes, evt):
>             if len(evt.buff) < self.SEND_LIMIT:
>                 self.doWrite()
>             else:
>                 self.reactor.callLater(0.8,self.doWrite)
> 
> 
> 
> 0.8 is a silly trial but I have no idea what is the right number for this place. After this modification, previous problematic scripts can pass.
> 
> Maybe the better solution is to find a way to poll the complete port status when read/write will be recovered from IO PENDING. Simply wait a little is risky.
> 
> Regards
> 
> gelin yan
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at twistedmatrix.com  Sat Oct 20 13:35:20 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 20 Oct 2012 12:35:20 -0700
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
Message-ID: <51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>

I'm top-posting just for consistency in this thread, but in the future please comment inline with trimming :).  It's easier to follow for future readers; if they find a post stand-alone in some web archive, the question will come before the answer.

Anyhow; Mike, you're definitely closer to the answer; a callLater is unnecessary, the callback should be called on demand.  But, given that a queue of write operations is just that - a queue - we don't need a Deferred for every write; the callback to the write operation can just pick up the next queued item.

-g

On Oct 20, 2012, at 9:07 AM, Mike Winter <miwinter at cisco.com> wrote:

> This looks like the kind of thing that could involve using Deferred as part of solution. Instead of callLater(0.8,doWrite), design the mechanism to wire up event-source to fire the deferred and make doWrite be the callback.
> 
> On Oct 20, 2012, at 8:29:10AM, gelin yan wrote:
> 
>> Hi All
>> 
>>  A few months ago, I reported a bug about IOCP. Last night I spent several hours on its implementation and finally found out a possible solution for that.
>> 
>>  when sending some small chunks data continuously, the buffer will pile them up and send to IOCP; however there is a SEND_LIMIT (128K) that means only 128K will be handled. Now the problem is when we try to trigger the next writing, IOCP will raise ERROR_IO_PENDING immediately and then connection Lost.
>> 
>>  So I got a idea: if the size of data is larger than SEND_LIMIT, we can wait a little bit time for the next writing instead of do it immediately. 
>> 
>> in twisted\internet\iocpreactor\abstract.py there is a method
>> 
>> def _cbWrite(self, rc, bytes, evt):
>>        if self._handleWrite(rc, bytes, evt):
>>            self.doWrite()
>> 
>> now I modified a bit,
>> 
>> def _cbWrite(self, rc, bytes, evt):
>>        if self._handleWrite(rc, bytes, evt):
>>            if len(evt.buff) < self.SEND_LIMIT:
>>                self.doWrite()
>>            else:
>>                self.reactor.callLater(0.8,self.doWrite)
>> 
>> 
>> 
>> 0.8 is a silly trial but I have no idea what is the right number for this place. After this modification, previous problematic scripts can pass.
>> 
>> Maybe the better solution is to find a way to poll the complete port status when read/write will be recovered from IO PENDING. Simply wait a little is risky.
>> 
>> Regards





From oubiwann at twistedmatrix.com  Sat Oct 20 17:24:47 2012
From: oubiwann at twistedmatrix.com (Duncan McGreggor)
Date: Sat, 20 Oct 2012 16:24:47 -0700
Subject: [Twisted-Python] git repo maintenance
Message-ID: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>

Hey all,

At the sprint today, Glyph mentioned that the github repo hasn't been
updated recently and needs someone to maintain it regularly. He also
mentioned that pull requests would be accepted from github, at which point
I immediately volunteered to keep the repo up to date :-) (I can't bear
using svn anymore...)

I'll be putting things in place (infrastructure, scripts, etc.) to assist
me with this, so let me know if you have any concerns, questions, ideas,
etc.

Thanks,

d
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121020/377483a6/attachment.html>

From exarkun at twistedmatrix.com  Sat Oct 20 17:51:33 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 20 Oct 2012 23:51:33 -0000
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
Message-ID: <20121020235133.30349.240011999.divmod.xquotient.51@localhost6.localdomain6>

On 11:24 pm, oubiwann at twistedmatrix.com wrote:
>Hey all,
>
>At the sprint today, Glyph mentioned that the github repo hasn't been
>updated recently and needs someone to maintain it regularly. He also
>mentioned that pull requests would be accepted from github, at which 
>point
>I immediately volunteered to keep the repo up to date :-) (I can't bear
>using svn anymore...)
>
>I'll be putting things in place (infrastructure, scripts, etc.) to 
>assist
>me with this, so let me know if you have any concerns, questions, 
>ideas,

And documentation about how this will integrate with the Twisted 
workflow, right?  For example, a walkthrough for taking a github pull 
request and getting the code into svn.

Thanks!
Jean-Paul



From duncan.mcgreggor at gmail.com  Sat Oct 20 20:45:48 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Sat, 20 Oct 2012 19:45:48 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <20121020235133.30349.240011999.divmod.xquotient.51@localhost6.localdomain6>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<20121020235133.30349.240011999.divmod.xquotient.51@localhost6.localdomain6>
Message-ID: <CAFJQhU6Sc7sX6OKSMzG_ZQybEA1-Fv3bg=aJxrst9Znnnp1BJQ@mail.gmail.com>

On Sat, Oct 20, 2012 at 4:51 PM,  <exarkun at twistedmatrix.com> wrote:
> On 11:24 pm, oubiwann at twistedmatrix.com wrote:
>>Hey all,
>>
>>At the sprint today, Glyph mentioned that the github repo hasn't been
>>updated recently and needs someone to maintain it regularly. He also
>>mentioned that pull requests would be accepted from github, at which
>>point
>>I immediately volunteered to keep the repo up to date :-) (I can't bear
>>using svn anymore...)
>>
>>I'll be putting things in place (infrastructure, scripts, etc.) to
>>assist
>>me with this, so let me know if you have any concerns, questions,
>>ideas,
>
> And documentation about how this will integrate with the Twisted
> workflow, right?  For example, a walkthrough for taking a github pull
> request and getting the code into svn.

Indeed!

d

> Thanks!
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dynamicgl at gmail.com  Sat Oct 20 20:56:15 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sun, 21 Oct 2012 10:56:15 +0800
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
Message-ID: <CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>

On Sun, Oct 21, 2012 at 3:35 AM, Glyph <glyph at twistedmatrix.com> wrote:

> I'm top-posting just for consistency in this thread, but in the future
> please comment inline with trimming :).  It's easier to follow for future
> readers; if they find a post stand-alone in some web archive, the question
> will come before the answer.
>
> Anyhow; Mike, you're definitely closer to the answer; a callLater is
> unnecessary, the callback should be called on demand.  But, given that a
> queue of write operations is just that - a queue - we don't need a Deferred
> for every write; the callback to the write operation can just pick up the
> next queued item.
>
> -g
>
> On Oct 20, 2012, at 9:07 AM, Mike Winter <miwinter at cisco.com> wrote:
>
> > This looks like the kind of thing that could involve using Deferred as
> part of solution. Instead of callLater(0.8,doWrite), design the mechanism
> to wire up event-source to fire the deferred and make doWrite be the
> callback.
> >
> > On Oct 20, 2012, at 8:29:10AM, gelin yan wrote:
> >
> >> Hi All
> >>
> >>  A few months ago, I reported a bug about IOCP. Last night I spent
> several hours on its implementation and finally found out a possible
> solution for that.
> >>
> >>  when sending some small chunks data continuously, the buffer will pile
> them up and send to IOCP; however there is a SEND_LIMIT (128K) that means
> only 128K will be handled. Now the problem is when we try to trigger the
> next writing, IOCP will raise ERROR_IO_PENDING immediately and then
> connection Lost.
> >>
> >>  So I got a idea: if the size of data is larger than SEND_LIMIT, we can
> wait a little bit time for the next writing instead of do it immediately.
> >>
> >> in twisted\internet\iocpreactor\abstract.py there is a method
> >>
> >> def _cbWrite(self, rc, bytes, evt):
> >>        if self._handleWrite(rc, bytes, evt):
> >>            self.doWrite()
> >>
> >> now I modified a bit,
> >>
> >> def _cbWrite(self, rc, bytes, evt):
> >>        if self._handleWrite(rc, bytes, evt):
> >>            if len(evt.buff) < self.SEND_LIMIT:
> >>                self.doWrite()
> >>            else:
> >>                self.reactor.callLater(0.8,self.doWrite)
> >>
> >>
> >>
> >> 0.8 is a silly trial but I have no idea what is the right number for
> this place. After this modification, previous problematic scripts can pass.
> >>
> >> Maybe the better solution is to find a way to poll the complete port
> status when read/write will be recovered from IO PENDING. Simply wait a
> little is risky.
> >>
> >> Regards
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


Hi All

   Thanks for reply. According to MSDN (link here:
http://msdn.microsoft.com/en-us/library/windows/desktop/ms683209(v=vs.85).aspx
)

"A pending operation is indicated when the function that started the
operation returns *FALSE*, and the
*GetLastError*<http://msdn.microsoft.com/en-us/library/windows/desktop/ms679360(v=vs.85).aspx>
function
returns *ERROR_IO_PENDING*. When an I/O operation is pending, the function
that started the operation resets the *hEvent* member of the
*OVERLAPPED* structure
to the nonsignaled state. Then when the pending operation has been
completed, the system sets the event object to the signaled state."

  If we can know when event object is in the signaled state we definitely
can use a queue directly. Any idea?

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121021/0f04b061/attachment.html>

From exarkun at twistedmatrix.com  Sat Oct 20 22:05:28 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Oct 2012 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1350792328.1.251270403@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121021/9f75f9ee/attachment-0001.html>

From _ at lvh.cc  Sun Oct 21 08:02:21 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 21 Oct 2012 16:02:21 +0200
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
Message-ID: <CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>

Awesome!!!

At what point did this change? ISTR the lack of interest in maintaining the
Github account was pretty much a consequence of it seeming pretty
pointless: ie it was still easier to just use SVN than to figure out where
the parts work together.

Will code review also be happening at a pull request level?

On Sun, Oct 21, 2012 at 1:24 AM, Duncan McGreggor <
oubiwann at twistedmatrix.com> wrote:

> Hey all,
>
> At the sprint today, Glyph mentioned that the github repo hasn't been
> updated recently and needs someone to maintain it regularly. He also
> mentioned that pull requests would be accepted from github, at which point
> I immediately volunteered to keep the repo up to date :-) (I can't bear
> using svn anymore...)
>
> I'll be putting things in place (infrastructure, scripts, etc.) to assist
> me with this, so let me know if you have any concerns, questions, ideas,
> etc.
>
> Thanks,
>
> d
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121021/c46c65e3/attachment.html>

From duncan.mcgreggor at gmail.com  Sun Oct 21 11:43:38 2012
From: duncan.mcgreggor at gmail.com (Duncan M. McGreggor)
Date: Sun, 21 Oct 2012 10:43:38 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
Message-ID: <21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>



On Oct 21, 2012, at 7:02 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Awesome!!!
> 
> At what point did this change?

Not sure. I don't know the history of the github repo nor its uses. I was certainly surprised with Glyph said that pull requests would be accepted.

> ISTR the lack of interest in maintaining the Github account was pretty much a consequence of it seeming pretty pointless: ie it was still easier to just use SVN than to figure out where the parts work together.
> 
> Will code review also be happening at a pull request level?

Here's what I envision...

1) a ticket is created on tm.com/trac for a feature, bug, etc.
2) the developer forks the github repo so they can work in their own space, e.g., creating a branch for the new ticket
3) the ticket is updated with a link to the branch they created on github (e.g., github.com/username/feature-name-1234).
4) when ready for review, the dev rebases against master (which will be syncing with svn every 30 minutes or so), squashing all commits into one and issues a pull request on github
5) the ticket is updated to review status
6) other devs take a look at the diff (git clone twisted repo, git pull dev's branch), with review comments going in the trac ticket
7) dev iterates on feedback, rebasing on master every time
8) once approved, perform final rebase, and ask that your pull request be merged on github
9) someone will then ensure that git master is merged into svn trunk

Note that this hasn't been fully tested yet, so one or more parts of this worklfow may have to change...

This would allow devs to do 100% of their iteration work in git or hg (hg plays well with github, I hear), basically removing the process itself as a barrier to contributions to Twisted.

Currently, my own biggest hurdle to resuming contributions to Twisted is the pain of old tech. I've gotten so used to the luxuries of git, hg, and bzr, that svn feels like walking for two days to pick up something at a store, when I can just drive an hour and be there (and not have to walk back home carrying lumber on my back). Everything else I work on (on a daily basis) uses fast, more efficient code repos and more efficient workflows. If forced to use things that slow me down, I'll just pass and do something that quite honestly is a lot more fun.

Hopefully supporting a workflow like this will bring Twisted contributions back into the "fun"realm for more folks...

d


> On Sun, Oct 21, 2012 at 1:24 AM, Duncan McGreggor <oubiwann at twistedmatrix.com> wrote:
> Hey all,
> 
> At the sprint today, Glyph mentioned that the github repo hasn't been updated recently and needs someone to maintain it regularly. He also mentioned that pull requests would be accepted from github, at which point  I immediately volunteered to keep the repo up to date :-) (I can't bear using svn anymore...)
> 
> I'll be putting things in place (infrastructure, scripts, etc.) to assist me with this, so let me know if you have any concerns, questions, ideas, etc.
> 
> Thanks,
> 
> d
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> -- 
> cheers
> lvh
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121021/df98cb88/attachment.html>

From exarkun at twistedmatrix.com  Sun Oct 21 12:30:29 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Oct 2012 18:30:29 -0000
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
Message-ID: <20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>

On 05:43 pm, duncan.mcgreggor at gmail.com wrote:
>
>
>On Oct 21, 2012, at 7:02 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>>Awesome!!!
>>
>>At what point did this change?
>
>Not sure. I don't know the history of the github repo nor its uses. I 
>was certainly surprised with Glyph said that pull requests would be 
>accepted.

This has always been the case.  Anyone is free to contribute code in any 
way they want.  (Though, if you contribute code in some way that no one 
can understand, there may be a delay in the contribution being 
accepted.)

The blocker for people using git for Twisted development has been that 
no one has wanted to do it badly enough to commit to maintaining the git 
mirror.
>>ISTR the lack of interest in maintaining the Github account was pretty 
>>much a consequence of it seeming pretty pointless: ie it was still 
>>easier to just use SVN than to figure out where the parts work 
>>together.

As mentioned above, I have a slightly different perspective on this. :)
>>Will code review also be happening at a pull request level?
>
>Here's what I envision...
>
>1) a ticket is created on tm.com/trac for a feature, bug, etc.
>2) the developer forks the github repo so they can work in their own 
>space, e.g., creating a branch for the new ticket
>3) the ticket is updated with a link to the branch they created on 
>github (e.g., github.com/username/feature-name-1234).
>4) when ready for review, the dev rebases against master (which will be 
>syncing with svn every 30 minutes or so), squashing all commits into 
>one and issues a pull request on github
>5) the ticket is updated to review status
>6) other devs take a look at the diff (git clone twisted repo, git pull 
>dev's branch), with review comments going in the trac ticket
>7) dev iterates on feedback, rebasing on master every time
>8) once approved, perform final rebase, and ask that your pull request 
>be merged on github
>9) someone will then ensure that git master is merged into svn trunk
>
>Note that this hasn't been fully tested yet, so one or more parts of 
>this worklfow may have to change...

At some point *before* svn trunk is updated, Buildbot needs to be able 
to get the code so it can run tests on all our supported platforms. 
This is the actually important part of this email, you can ignore the 
rest if you want but this really needs to happen.
>This would allow devs to do 100% of their iteration work in git or hg 
>(hg plays well with github, I hear), basically removing the process 
>itself as a barrier to contributions to Twisted.
>
>Currently, my own biggest hurdle to resuming contributions to Twisted 
>is the pain of old tech. I've gotten so used to the luxuries of git, 
>hg, and bzr, that svn feels like walking for two days to pick up 
>something at a store, when I can just drive an hour and be there (and 
>not have to walk back home carrying lumber on my back). Everything else 
>I work on (on a daily basis) uses fast, more efficient code repos and 
>more efficient workflows. If forced to use things that slow me down, 
>I'll just pass and do something that quite honestly is a lot more fun.

While I'm sympathetic to toolchain woes, I can't help but wonder if 
you're being really honest here (with yourself, at least).  Running "svn 
diff" may make you feel bad inside, because svn isn't the latest cool 
toy, but a *hurdle*?  It's just difficult to understand.
>Hopefully supporting a workflow like this will bring Twisted 
>contributions back into the "fun"realm for more folks...

Yes, hopefully so.

Jean-Paul



From jstpierre at mecheye.net  Sun Oct 21 12:37:27 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Sun, 21 Oct 2012 14:37:27 -0400
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
Message-ID: <CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>

On Sun, Oct 21, 2012 at 2:30 PM,  <exarkun at twistedmatrix.com> wrote:

*snip*

> While I'm sympathetic to toolchain woes, I can't help but wonder if
> you're being really honest here (with yourself, at least).  Running "svn
> diff" may make you feel bad inside, because svn isn't the latest cool
> toy, but a *hurdle*?  It's just difficult to understand.

Yes. it's difficult to understand. I see that as a hurdle.

>
> Yes, hopefully so.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
  Jasper



From exarkun at twistedmatrix.com  Sun Oct 21 12:48:51 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Oct 2012 18:48:51 -0000
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
Message-ID: <20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>

On 06:37 pm, jstpierre at mecheye.net wrote:
>On Sun, Oct 21, 2012 at 2:30 PM,  <exarkun at twistedmatrix.com> wrote:
>
>*snip*
>>While I'm sympathetic to toolchain woes, I can't help but wonder if
>>you're being really honest here (with yourself, at least).  Running 
>>"svn
>>diff" may make you feel bad inside, because svn isn't the latest cool
>>toy, but a *hurdle*?  It's just difficult to understand.
>
>Yes. it's difficult to understand. I see that as a hurdle.

I would hope that we could keep the level of discourse above this.

Jean-Paul



From jstpierre at mecheye.net  Sun Oct 21 12:54:26 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Sun, 21 Oct 2012 14:54:26 -0400
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
	<20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
Message-ID: <CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>

On Sun, Oct 21, 2012 at 2:48 PM,  <exarkun at twistedmatrix.com> wrote:
> On 06:37 pm, jstpierre at mecheye.net wrote:
>>On Sun, Oct 21, 2012 at 2:30 PM,  <exarkun at twistedmatrix.com> wrote:
>>
>>*snip*
>>>While I'm sympathetic to toolchain woes, I can't help but wonder if
>>>you're being really honest here (with yourself, at least).  Running
>>>"svn
>>>diff" may make you feel bad inside, because svn isn't the latest cool
>>>toy, but a *hurdle*?  It's just difficult to understand.
>>
>>Yes. it's difficult to understand. I see that as a hurdle.
>
> I would hope that we could keep the level of discourse above this.

I'm not sure exactly what you want to hear. The few times I've tried
to contributed to Twisted, svn was actually a big barrier. Trying to
update my patches so that I'm sure the tests pass on trunk produced
mysterious merge conflicts in files I've never touched. Maybe I'm bad
at svn, but it's never worked well for me.

> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
  Jasper



From duncan.mcgreggor at gmail.com  Sun Oct 21 12:57:03 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Sun, 21 Oct 2012 11:57:03 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
Message-ID: <CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>

On Sun, Oct 21, 2012 at 11:30 AM,  <exarkun at twistedmatrix.com> wrote:
> On 05:43 pm, duncan.mcgreggor at gmail.com wrote:
>>
>>
>>On Oct 21, 2012, at 7:02 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
>>>Awesome!!!
>>>
>>>At what point did this change?
>>
>>Not sure. I don't know the history of the github repo nor its uses. I
>>was certainly surprised with Glyph said that pull requests would be
>>accepted.
>
> This has always been the case.  Anyone is free to contribute code in any
> way they want.  (Though, if you contribute code in some way that no one
> can understand, there may be a delay in the contribution being
> accepted.)
>
> The blocker for people using git for Twisted development has been that
> no one has wanted to do it badly enough to commit to maintaining the git
> mirror.

I want to use git instead of svn so badly that I can taste it.
Hopefully this provides the motivation necessary to maintain the repo
:-)

>>>ISTR the lack of interest in maintaining the Github account was pretty
>>>much a consequence of it seeming pretty pointless: ie it was still
>>>easier to just use SVN than to figure out where the parts work
>>>together.
>
> As mentioned above, I have a slightly different perspective on this. :)
>>>Will code review also be happening at a pull request level?
>>
>>Here's what I envision...
>>
>>1) a ticket is created on tm.com/trac for a feature, bug, etc.
>>2) the developer forks the github repo so they can work in their own
>>space, e.g., creating a branch for the new ticket
>>3) the ticket is updated with a link to the branch they created on
>>github (e.g., github.com/username/feature-name-1234).
>>4) when ready for review, the dev rebases against master (which will be
>>syncing with svn every 30 minutes or so), squashing all commits into
>>one and issues a pull request on github
>>5) the ticket is updated to review status
>>6) other devs take a look at the diff (git clone twisted repo, git pull
>>dev's branch), with review comments going in the trac ticket
>>7) dev iterates on feedback, rebasing on master every time
>>8) once approved, perform final rebase, and ask that your pull request
>>be merged on github
>>9) someone will then ensure that git master is merged into svn trunk
>>
>>Note that this hasn't been fully tested yet, so one or more parts of
>>this worklfow may have to change...
>
> At some point *before* svn trunk is updated, Buildbot needs to be able
> to get the code so it can run tests on all our supported platforms.
> This is the actually important part of this email, you can ignore the
> rest if you want but this really needs to happen.

Excellent feedback -- thanks! This is the sort of thing I need in
order to plan this out sufficiently...

>>This would allow devs to do 100% of their iteration work in git or hg
>>(hg plays well with github, I hear), basically removing the process
>>itself as a barrier to contributions to Twisted.
>>
>>Currently, my own biggest hurdle to resuming contributions to Twisted
>>is the pain of old tech. I've gotten so used to the luxuries of git,
>>hg, and bzr, that svn feels like walking for two days to pick up
>>something at a store, when I can just drive an hour and be there (and
>>not have to walk back home carrying lumber on my back). Everything else
>>I work on (on a daily basis) uses fast, more efficient code repos and
>>more efficient workflows. If forced to use things that slow me down,
>>I'll just pass and do something that quite honestly is a lot more fun.
>
> While I'm sympathetic to toolchain woes, I can't help but wonder if
> you're being really honest here (with yourself, at least).  Running "svn
> diff" may make you feel bad inside, because svn isn't the latest cool
> toy, but a *hurdle*?  It's just difficult to understand.

Well, I viewed git and github as the hipster's latest cool toy for a
long time, but once I was force to use it, I was converted. The time I
spent wrestling with tool chains and workflows all but disappeared. I
never even thought about it anymore. That's the ideal user interface
with any tool, as far as I'm concerned. When you can use it to be
efficient and don't even think about the tool, where it's just an
extension of your natural thought process, that's a tool that has been
built correctly. Sadly, that's the opposite experience I have with
svn-based branch management :-/

d



From julian at grayvines.com  Sun Oct 21 20:45:31 2012
From: julian at grayvines.com (Julian Berman)
Date: Sun, 21 Oct 2012 22:45:31 -0400
Subject: [Twisted-Python] Adding mock as a test suite dependency
Message-ID: <20121022024531.GA46958@air>

Hi.

I'd like to gauge any interest in (or resistance towards) adding mock
(http://www.voidspace.org.uk/python/mock/mock.html) as a dependency for the
test suite.

In short, while I don't necessarily feel strongly about behavior vs. state
based verification being preferred in a general sense, I think both have their
place when used with sensibility. (Sorry, I know that's not saying too much of
substance, but I'm trying to ward off a discussion on whether or not it has a
place at all if possible).

The *benefit* though for me in having mock present is that it decreases the
lines of code necessary to write stubs and mocks. While doing so is not really
that difficult anyhow, it *is* just a bit more clutter to do so without mock,
and the extra 3 or 4 lines mean that in more than one instance I have found
myself pick a different strategy than I would have because of the extra lines
of code that clutter the test method.

To give a specific example, as I write this I'm writing tests for #6143 (which
will hopefully let trial drop into a debugger on an error or failure rather
than at the outset of a test run). To do so I want to write tests that look
like:

    def test_itDebugsOnError(self):
        result = mock.Mock()
        exc_type, exc_value, tb = mock.Mock(), mock.Mock(), mock.Mock()

        decorated = DebugDecorator(result)

        with mock.patch.object(decorated, "debug") as debug:
            decorated.addError(exc_type, exc_value, tb)

        debug.assert_called_once_with(tb)
        result.addError.assert_called_once_with(exc_type, exc_value, tb)

where I want to test that the decorated test result is being used as I expect
it to, and that debug is being called. Another test will test that debug does
what it's supposed to, also in isolation.

Of course none of the objects I used there were very interesting, but mock has
similarly terse syntax for creating mocks with attributes, return values, etc.
amongst a bunch of other useful features which I'll be happy to elaborate on if
anyone would like, I just had the above example at hand.

To add a few more notes:

 - mock is in the stdlib starting with 3.3 as unittest.mock, which as I
   understand it is the first version of Py3 for which support is planned. So
   really all that'd be needed would be to add mock as a dependency on 2.X.

 - it's a single file with no external deps, so installation is not difficult,
   and it'd only be a dep for running the tests (and presumably only a subset
   thereof that chose to use it)

 - there are other mocking libraries, but I don't like any of the others as
   much personally for various reasons. 

 - I'd be willing to do the small amount of work to add it if there'd be
   interest :)


Cheers,
Julian



From glyph at twistedmatrix.com  Sun Oct 21 21:00:14 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 21 Oct 2012 20:00:14 -0700
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <20121022024531.GA46958@air>
References: <20121022024531.GA46958@air>
Message-ID: <AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>

On Oct 21, 2012, at 7:45 PM, Julian Berman <julian at grayvines.com> wrote:

> The *benefit* though for me in having mock present is that it decreases the
> lines of code necessary to write stubs and mocks. While doing so is not really
> that difficult anyhow, it *is* just a bit more clutter to do so without mock,
> and the extra 3 or 4 lines mean that in more than one instance I have found
> myself pick a different strategy than I would have because of the extra lines
> of code that clutter the test method.

This seems like a pretty small benefit; adding a new dependency affects lots of people and introduces a new point of failure in the installation process, especially for Windows users who already have a devil of a time getting Twisted installed.

Also I don't particularly like the testing style associated with Mock.  I think it might discourage us yet further from writing verified fakes, i.e. supported in-memory implementations of things like IReactorTCP, that have somewhat intricate behavior that's tedious to emulate with Mock.

Personally I'm -0.  Don't let that stop you from cooking up a patch that would include it though, I might be in the minority here.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121021/d6c06285/attachment.html>

From glyph at twistedmatrix.com  Sun Oct 21 22:05:05 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 21 Oct 2012 21:05:05 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
Message-ID: <2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>

On Oct 21, 2012, at 11:57 AM, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:

> I want to use git instead of svn so badly that I can taste it.
> Hopefully this provides the motivation necessary to maintain the repo
> :-)


For what it's worth, I haven't authored a branch for Twisted with SVN in the last 3 years.  I use Bazaar almost exclusively and I get all the fun tools one generally associates with a DVCS, including offline history and a nice graphical revision viewer.  (One reason I am concerned about migrating to Git is that this will stop working; in my opinions, Git's offline GUI tools are far worse than Bazaar's - almost as much worse as Launchpad's source browser is than Github.)

Similarly, I do code reviews by using a local 'bzr merge'.

The only weird workflow which isn't just built in to BZR-SVN is this:
<http://twistedmatrix.com/trac/wiki/BazaarMirror#CommittingaBazaarbranchtoaSubversionbranch>.  This involves rebasing, which makes me a little sad; I wish we could preserve more history, but it works fine.

I still land branches on trunk using SVN, but that takes about ten seconds assuming you use Combinator or svnmerge.py, so I don't see that being a big impediment.  You only need to worry about that if you have commit access anyway, so that's not most external contributors.  If the need to do that to land changes is preventing you from writing them in the first place, just let me know when you have a branch to land, and I'll do it for you.

You don't need to use SVN, you haven't needed to use SVN since git-svn came into existence, and we've had several threads on this list before about improving the Git instructions here: <http://twistedmatrix.com/trac/wiki/GitMirror>.  If you look at the history for that page, you can see that it is two years old, and originally created by exarkun, who is not a git user himself.

So, it strikes me as a bit odd, and I am a bit dismayed that anyone would have been put off of by the need to use Subversion when working with Twisted since you can use Git or Bazaar - or, I assume, Mercurial - right now.

I would find it a bit more understandable if you are dismayed by the need to use Trac, which is harder to avoid when working on Twisted.  For various reasons - which I hope we don't have to discuss right now - we aren't going to move the project to Github any time soon, so if anyone reading this thread is interested in alleviating some of the pain with Trac, <https://launchpad.net/frack> is a good place to get involved to help out.  There are some pretty straightforward bugs that anyone interested could fix there.

Frack is already up and running on twistedmatrix.com, albeit at a weird URL.  See, for example, <http://twistedmatrix.com/users/frack.twistd/ui/ticket.html?id=1956>. This might be useful because it is a considerably faster ticket-viewer than Trac, do to its somewhat more parsimonious issuance of SQL queries.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121021/8514c4bc/attachment.html>

From glyph at twistedmatrix.com  Sun Oct 21 22:05:07 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 21 Oct 2012 21:05:07 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
	<20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
	<CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>
Message-ID: <AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>


On Oct 21, 2012, at 11:54 AM, Jasper St. Pierre <jstpierre at mecheye.net> wrote:

> On Sun, Oct 21, 2012 at 2:48 PM,  <exarkun at twistedmatrix.com> wrote:
>> On 06:37 pm, jstpierre at mecheye.net wrote:
>>> On Sun, Oct 21, 2012 at 2:30 PM,  <exarkun at twistedmatrix.com> wrote:
>>> 
>>> *snip*
>>>> While I'm sympathetic to toolchain woes, I can't help but wonder if
>>>> you're being really honest here (with yourself, at least).  Running
>>>> "svn
>>>> diff" may make you feel bad inside, because svn isn't the latest cool
>>>> toy, but a *hurdle*?  It's just difficult to understand.
>>> 
>>> Yes. it's difficult to understand. I see that as a hurdle.
>> 
>> I would hope that we could keep the level of discourse above this.
> 
> I'm not sure exactly what you want to hear.

In case it was actually not clear and you're not just being sarcastic, exarkun was saying that it's difficult to understand that someone with the required expertise to contribute to Twisted in the first place would have trouble with running the command 'svn diff'.  'svn diff' itself is not at all difficult to understand.

Since Subversion is effectively the baseline fisher-price "my first version control system", I would assume that anyone who could effectively use Git (which has all the user-interface convenience of an unshielded circular saw) would have no trouble with it, especially with the very basic usage that contributing to Twisted requires.

Since you asked, there are two things that I'd like to hear:

"Hooray!  I will help oubiwann maintain the git(hub) mirror!  what would you like me to do?"
specific problems that you've had with SVN that we might be able to address in the future or help you with, and not vague bellyaching about how we're not using the thing you happen to like best.

If you're going to say the first thing and commit to helping though, please be sure first that you actually have the time and energy to follow through.  At this point, the number of people who have appeared, volunteered to maintain a git mirror, done it for five minutes and then disappeared forever, leaving it in a broken, unmaintained state, is in the double digits.  (I am starting to wonder if Git gives it users some kind of brain damage that makes a person incapable of meeting commitments.)

> The few times I've tried to contributed to Twisted, svn was actually a big barrier. Trying to update my patches so that I'm sure the tests pass on trunk produced mysterious merge conflicts in files I've never touched. Maybe I'm bad at svn, but it's never worked well for me.

Why aren't you just using git for local development then?  You don't have commit access, so you should never need to touch an svn client other than git if you don't feel like it.

This is not entirely a rhetorical question.  We have always tried to be accommodating to DVCS users, providing instructions and repeated requests for both a plain git and/or a github ambassador to keep svn nicely synchronized and reduce the friction required for users of those tools to make contributions.  If the documentation we've offered on <http://twistedmatrix.com/trac/wiki/GitMirror> is in any way incorrect or non-optimal, please don't hesitate to say exactly what would be better.  If you need wiki edit permission to update the page, I'll gladly give it to you.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121021/368d852c/attachment.html>

From glyph at twistedmatrix.com  Sun Oct 21 22:06:15 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 21 Oct 2012 21:06:15 -0700
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
	<CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
Message-ID: <5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>


On Oct 20, 2012, at 7:56 PM, gelin yan <dynamicgl at gmail.com> wrote:

> "A pending operation is indicated when the function that started the operation returns FALSE, and the GetLastError function returns ERROR_IO_PENDING. When an I/O operation is pending, the function that started the operation resets the hEvent member of the OVERLAPPED structure to the nonsignaled state. Then when the pending operation has been completed, the system sets the event object to the signaled state."
> 
>   If we can know when event object is in the signaled state we definitely can use a queue directly. Any idea?
> 

Sounds like you're at the point where you should just try doing an implementation, and if it works and passes all the tests you can think of for it, submit it for code review.  Much more speculation without testing wouldn't be useful.

Thanks for working on this!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121021/2fffa951/attachment-0001.html>

From jstpierre at mecheye.net  Sun Oct 21 22:55:41 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 22 Oct 2012 00:55:41 -0400
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
	<20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
	<CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>
	<AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>
Message-ID: <CAA0H+QRso+T1itR6Ds_TgVZbYtR-yWa8Fr+Qx14mki-PSMcU+Q@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:05 AM, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Oct 21, 2012, at 11:54 AM, Jasper St. Pierre <jstpierre at mecheye.net>
> wrote:
>
> On Sun, Oct 21, 2012 at 2:48 PM,  <exarkun at twistedmatrix.com> wrote:
>
> On 06:37 pm, jstpierre at mecheye.net wrote:
>
> On Sun, Oct 21, 2012 at 2:30 PM,  <exarkun at twistedmatrix.com> wrote:
>
> *snip*
>
> While I'm sympathetic to toolchain woes, I can't help but wonder if
> you're being really honest here (with yourself, at least).  Running
> "svn
> diff" may make you feel bad inside, because svn isn't the latest cool
> toy, but a *hurdle*?  It's just difficult to understand.
>
>
> Yes. it's difficult to understand. I see that as a hurdle.
>
>
> I would hope that we could keep the level of discourse above this.
>
> I'm not sure exactly what you want to hear.
>
> In case it was actually not clear and you're not just being sarcastic,
> exarkun was saying that it's difficult to understand that someone with the
> required expertise to contribute to Twisted in the first place would have
> trouble with running the command 'svn diff'.  'svn diff' itself is not at
> all difficult to understand.

As I said, the issue I had was not "svn diff" -- I had been working on
my fix, uploaded it to Trac, and it was a few months or so before
someone reviewed it. I forget who it was, but the reviewer prompted me
to make a few small style changes, flesh out a testcase, write a .news
file, that sort of thing. I updated my source tree to pull in new
changes from trunk, to make sure the patch that I had been working on
didn't rot. I was frustrated when I got merge conflicts for files that
I've never touched before.

> Since Subversion is effectively the baseline fisher-price "my first version
> control system", I would assume that anyone who could effectively use Git
> (which has all the user-interface convenience of an unshielded circular saw)
> would have no trouble with it, especially with the very basic usage that
> contributing to Twisted requires.
>
> Since you asked, there are two things that I'd like to hear:
>
> "Hooray!  I will help oubiwann maintain the git(hub) mirror!  what would you
> like me to do?"

I'd love to help out and do things, but unfortunately I don't have the
time these days. If you think that we should review code on the
Twisted GitHub repository, I'd gladly help out with that. I would help
out and review patches on Trac, but it's not as convenient: as far as
I'm aware: I can't set Trac up so that I get emails when a patch comes
in in a module I'm comfortable with, and I can't get an RSS feed of
all the important events in the project I'm aware of. If that exists
and I couldn't find it, I'll gladly review patches today.

> specific problems that you've had with SVN that we might be able to address
> in the future or help you with, and not vague bellyaching about how we're
> not using the thing you happen to like best.
>
> If you're going to say the first thing and commit to helping though, please
> be sure first that you actually have the time and energy to follow through.
> At this point, the number of people who have appeared, volunteered to
> maintain a git mirror, done it for five minutes and then disappeared
> forever, leaving it in a broken, unmaintained state, is in the double
> digits.  (I am starting to wonder if Git gives it users some kind of brain
> damage that makes a person incapable of meeting commitments.)
>
> The few times I've tried to contributed to Twisted, svn was actually a big
> barrier. Trying to update my patches so that I'm sure the tests pass on
> trunk produced mysterious merge conflicts in files I've never touched. Maybe
> I'm bad at svn, but it's never worked well for me.
>
>
> Why aren't you just using git for local development then?  You don't have
> commit access, so you should never need to touch an svn client other than
> git if you don't feel like it.

This is another rhetorical anecdote, I tried using git-svn when I was
contributing to PyPy during the SVN days. It just didn't work out. I
don't know or can't say the same for bzr-svn or hg-svn or whatever
else cross-VCS systems there are, but I was left with a bad taste in
my mouth, so I figured it would be more worthwhile to stick with the
original source tool.

I may just be a drooling moron.

> This is not entirely a rhetorical question.  We have always tried to be
> accommodating to DVCS users, providing instructions and repeated requests
> for both a plain git and/or a github ambassador to keep svn nicely
> synchronized and reduce the friction required for users of those tools to
> make contributions.  If the documentation we've offered on
> <http://twistedmatrix.com/trac/wiki/GitMirror> is in any way incorrect or
> non-optimal, please don't hesitate to say exactly what would be better.  If
> you need wiki edit permission to update the page, I'll gladly give it to
> you.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
  Jasper



From itamar at futurefoundries.com  Mon Oct 22 06:47:39 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Mon, 22 Oct 2012 08:47:39 -0400
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
Message-ID: <CAOp9P3oCAtk2USohP+ETx4Szjrs7eGtLCYnqwv_RgM0GOi2THQ@mail.gmail.com>

On Sun, Oct 21, 2012 at 11:00 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> This seems like a pretty small benefit; adding a new dependency affects
> lots of people and introduces a new point of failure in the installation
> process, especially for Windows users who already have a devil of a time
> getting Twisted installed.
>

A testing dependency isn't quite as problematic as a regular dependency;
you'd only need to install it if you wanted to run Twisted's test suite,
which probably most users do not bother with.

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ — Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/f2b3ec8f/attachment.html>

From jstpierre at mecheye.net  Mon Oct 22 08:55:23 2012
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 22 Oct 2012 10:55:23 -0400
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
Message-ID: <CAA0H+QREH9iFJvpK4qbtbN1s_U7w1ktfYP=N14iqNUu3AFr2gQ@mail.gmail.com>

On Sun, Oct 21, 2012 at 11:00 PM, Glyph <glyph at twistedmatrix.com> wrote:
> On Oct 21, 2012, at 7:45 PM, Julian Berman <julian at grayvines.com> wrote:
>
> This seems like a pretty small benefit; adding a new dependency affects lots
> of people and introduces a new point of failure in the installation process,
> especially for Windows users who already have a devil of a time getting
> Twisted installed.

Is there anything we can do to make the dependency stuff nicer to
install on Windows, other than throwing out all niceties that we can
depend on? It seems that the issue here is our lack of good
installation story on Windows.

> Also I don't particularly like the testing style associated with Mock.  I
> think it might discourage us yet further from writing verified fakes, i.e.
> supported in-memory implementations of things like IReactorTCP, that have
> somewhat intricate behavior that's tedious to emulate with Mock.
>
> Personally I'm -0.  Don't let that stop you from cooking up a patch that
> would include it though, I might be in the minority here.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
  Jasper



From lacrima.maxim at gmail.com  Mon Oct 22 09:00:02 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Mon, 22 Oct 2012 18:00:02 +0300
Subject: [Twisted-Python] Managing twisted application as init service.
Message-ID: <CAKef57O-fWG_fVoHfgt0M3Ski-A1e9Pbc0n2nkpsxkDG_QVa7A@mail.gmail.com>

Hi,

I have been developing an application, which I would like to manage in a
fashion similar to scripts placed in /etc/init.d. I.e. I want to start,
stop, restart and monitor the application.

Currently, I am trying to figure out a correct approach for this. Initially
I thought to create a wrapper shell script like here [1] and just copy it
into `/etc/init.d` directory. Then in that script I would make `twistd`
start the application.

However, today I discovered `twisted.runner` package,  which seems to do
the same thing.  So my question is how to run and monitor processes
using `twisted.runner`? I couldn't find any examples on how to use it.

Also, in 11th part of the tutorial [2] there is a mention that I can
package my application as rpm package, which, when installed, will
correctly register my package as `init.d` script.

So are there best practices in twisted about how to install twisted
applications and manage them as `init.d` services?

I am quite new to Twisted (and to Linux `init.d` scripts). Sorry, if my
question is unclear.

Thank you in advance.

[1] http://www.sensi.org/~alec/unix/redhat/sysvinit.html
[2]
http://twistedmatrix.com/documents/current/core/howto/tutorial/configuration.html#auto4

-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/022f9618/attachment.html>

From exarkun at twistedmatrix.com  Mon Oct 22 10:46:08 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 22 Oct 2012 16:46:08 -0000
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
Message-ID: <20121022164608.30349.409512088.divmod.xquotient.105@localhost6.localdomain6>

On 03:00 am, glyph at twistedmatrix.com wrote:
>On Oct 21, 2012, at 7:45 PM, Julian Berman <julian at grayvines.com> 
>wrote:
>>The *benefit* though for me in having mock present is that it 
>>decreases the
>>lines of code necessary to write stubs and mocks. While doing so is 
>>not really
>>that difficult anyhow, it *is* just a bit more clutter to do so 
>>without mock,
>>and the extra 3 or 4 lines mean that in more than one instance I have 
>>found
>>myself pick a different strategy than I would have because of the 
>>extra lines
>>of code that clutter the test method.
>
>This seems like a pretty small benefit; adding a new dependency affects 
>lots of people and introduces a new point of failure in the 
>installation process, especially for Windows users who already have a 
>devil of a time getting Twisted installed.
>
>Also I don't particularly like the testing style associated with Mock. 
>I think it might discourage us yet further from writing verified fakes, 
>i.e. supported in-memory implementations of things like IReactorTCP, 
>that have somewhat intricate behavior that's tedious to emulate with 
>Mock.

I'm also not a huge fan of the *unverified* mock style of testing.  I 
don't think anything says that mocks *have* to be unverified, though it 
seems they're often used that way.

The mock library that got added to the stdlib has the notion of 
constructing a mock using another object as a template.  I haven't used 
this feature, but it seems like the intent is to at least take a step 
towards verification.  It'd be nice if someone who knows more about the 
features of this library could give some examples.

In case anyone isn't clear, the problem with unverified fakes is that 
they either start out incompatible with the objects they're fakes of, or 
else they become incompatible with them over time.  Once they're 
incompatible, the tests that use them become significantly less useful, 
since they demonstrate little or nothing about what will happen when you 
try to use the code for real.

Verified fakes solve this problem by adding assertions that objects and 
their fakes have the necessary overlap in either interface or 
functionality in order for the tests using them to be valid.

Beyond that, considering the particular example presented, I wouldn't 
actually use mocks to test this.  The real object, the debugger, should 
be perfectly usable in unit tests.  It doesn't allocate or depend on 
expensive resources, it doesn't do network I/O, etc.  Mocks are perhaps 
an attractive nuisance that distract from coming up with a better test.

Jean-Paul
>Personally I'm -0.  Don't let that stop you from cooking up a patch 
>that would include it though, I might be in the minority here.
>
>-glyph



From _ at lvh.cc  Mon Oct 22 10:57:53 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 22 Oct 2012 18:57:53 +0200
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <20121022164608.30349.409512088.divmod.xquotient.105@localhost6.localdomain6>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
	<20121022164608.30349.409512088.divmod.xquotient.105@localhost6.localdomain6>
Message-ID: <CAE_Hg6ZGWR8eNF9xeRW47-3wABXY4dQBNwB3T=-9HKu8jw95qg@mail.gmail.com>

So, mock does have an autospec mode, which is not the default, but does
result in eg methods undefined on the parent raising AttributeError.

I don't know if there's a way to generate a mock from an interface:
particularly the fact that interface methods don't have "self" in their
signature might trip it up.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/8a2ac918/attachment.html>

From dreid at dreid.org  Mon Oct 22 11:22:03 2012
From: dreid at dreid.org (David Reid)
Date: Mon, 22 Oct 2012 10:22:03 -0700
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <CAE_Hg6ZGWR8eNF9xeRW47-3wABXY4dQBNwB3T=-9HKu8jw95qg@mail.gmail.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
	<20121022164608.30349.409512088.divmod.xquotient.105@localhost6.localdomain6>
	<CAE_Hg6ZGWR8eNF9xeRW47-3wABXY4dQBNwB3T=-9HKu8jw95qg@mail.gmail.com>
Message-ID: <CA+t4pawofw_kKS+JN7n-nDD9FsyMVqzhpF+gKY7Q_Y_svJPWvw@mail.gmail.com>

On Mon, Oct 22, 2012 at 9:57 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> So, mock does have an autospec mode, which is not the default, but does
> result in eg methods undefined on the parent raising AttributeError.
>

It does, but it won't for instance know that for:
    mock_agent = mock.Mock(Agent)

that mock_agent.request should return a thing that looks like a Deferred.
 So you still
end up with a bunch of setup code to enforce return types and things.


> I don't know if there's a way to generate a mock from an interface:
> particularly the fact that interface methods don't have "self" in their
> signature might trip it up.
>

Yeah, this doesn't work at all.  You end up having to always pass a thing
which provides the interface.  Or an unspecified Mock.

Of course, this isn't actually a "verified" Mock.  Because you still have
to specify all the behavior and constructing that behavior by setting
side_effect and return_value is often difficult and confusing.

So though I use mock quite a bit in my personal projects and at work I am
definitely against using it for twisted style tests.  I'd rather see some
energy put into things like a verified fake Request object and a
ResourceTraversingAgent.

-David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/ebb98326/attachment.html>

From glyph at twistedmatrix.com  Mon Oct 22 11:25:33 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 10:25:33 -0700
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <CAOp9P3oCAtk2USohP+ETx4Szjrs7eGtLCYnqwv_RgM0GOi2THQ@mail.gmail.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
	<CAOp9P3oCAtk2USohP+ETx4Szjrs7eGtLCYnqwv_RgM0GOi2THQ@mail.gmail.com>
Message-ID: <79745938-AC18-483C-9888-006F6EA85595@twistedmatrix.com>

On Oct 22, 2012, at 5:47 AM, Itamar Turner-Trauring <itamar at futurefoundries.com> wrote:

> A testing dependency isn't quite as problematic as a regular dependency; you'd only need to install it if you wanted to run Twisted's test suite, which probably most users do not bother with.

This actually strikes me as a strong counter-argument for adding the dependency and as I'm considering it is pushing me from -0 to -1.

We already have a couple of problems running the tests when Twisted is system-installed and read-only to the user running the tests.  Running the tests is not a special thing that only developers should do in development configurations.  It is (well, ought to be, anyway) the way that you figure out if Twisted works on your system.  Every user should be encouraged to run the full test suite when submitting a bug report; every system integrator should run the tests before declaring their Twisted package working.

If we do add a dependency on mock, I would rather users have a slightly more inconvenient installation experience than have them unable to run the tests to figure out what is going on if they have a problem.  It should be imported in twisted/__init__.py to make sure that nobody accidentally forgets to install it along with Twisted.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/ca2f86c3/attachment.html>

From glyph at twistedmatrix.com  Mon Oct 22 11:35:44 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 10:35:44 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAA0H+QRso+T1itR6Ds_TgVZbYtR-yWa8Fr+Qx14mki-PSMcU+Q@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
	<20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
	<CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>
	<AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>
	<CAA0H+QRso+T1itR6Ds_TgVZbYtR-yWa8Fr+Qx14mki-PSMcU+Q@mail.gmail.com>
Message-ID: <4BAD43E6-8676-47AE-ADD2-78EF526BCE65@twistedmatrix.com>

On Oct 21, 2012, at 9:55 PM, Jasper St. Pierre <jstpierre at mecheye.net> wrote:

> As I said, the issue I had was not "svn diff" -- I had been working on
> my fix, uploaded it to Trac, and it was a few months or so before
> someone reviewed it. I forget who it was, but the reviewer prompted me
> to make a few small style changes, flesh out a testcase, write a .news
> file, that sort of thing. I updated my source tree to pull in new
> changes from trunk, to make sure the patch that I had been working on
> didn't rot. I was frustrated when I got merge conflicts for files that
> I've never touched before.

If you can replicate the exact branch and changes you had difficulty with, I'd love to hear about the specifics, because this sounds like maybe it's a gotcha we should add to some development documentation.  It should not be possible for this to happen with a simple 'svn up' so I want to know what command to tell users they should avoid.

Feel free to reply off-list if it gets into fiddly details of subversion that might be off-topic.

> This is another rhetorical anecdote, I tried using git-svn when I was
> contributing to PyPy during the SVN days. It just didn't work out. I
> don't know or can't say the same for bzr-svn or hg-svn or whatever
> else cross-VCS systems there are, but I was left with a bad taste in
> my mouth, so I figured it would be more worthwhile to stick with the
> original source tool.


You say "rhetorical anecdote", I say "FUD" :).  But, perhaps you are more just in the class of users that need somebody like Duncan's help in order to use git against Twisted effectively, rather than the class of users who know the version control tools well enough to be able to provide that help.

> I may just be a drooling moron.


I didn't say you were a "moron", being unable to figure out git's UI for something is merely an indication that you probably aren't eligible for the Fields medal; frankly I have a great deal of difficulty with it as well.  If I didn't, I might have updated things myself.

I hope you'll have a better time once those instructions are updated.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/a14c0bc2/attachment.html>

From kevin.horn at gmail.com  Mon Oct 22 11:53:44 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 22 Oct 2012 12:53:44 -0500
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
	<2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>
Message-ID: <CA+U=zK1htddDFsjoQ7ciaoruKuuMK_M0E9L6gJ=vQOEiLLGvow@mail.gmail.com>

On Sun, Oct 21, 2012 at 11:05 PM, Glyph <glyph at twistedmatrix.com> wrote:

> On Oct 21, 2012, at 11:57 AM, Duncan McGreggor <duncan.mcgreggor at gmail.com>
> wrote:
>
> I want to use git instead of svn so badly that I can taste it.
> Hopefully this provides the motivation necessary to maintain the repo
> :-)
>
>
> For what it's worth, I haven't authored a branch for Twisted with SVN in
> the last 3 years.  I use Bazaar almost exclusively and I get all the fun
> tools one generally associates with a DVCS, including offline history and a
> nice graphical revision viewer.  (One reason I am concerned about migrating
> to Git is that this will stop working; in my opinions, Git's offline GUI
> tools are far worse than Bazaar's - almost as much worse as Launchpad's
> source browser is than Github.)
>

I really wish I could figure out how to do this.  The one page on the wiki
helps a bit, but is insufficient for those not already familiar with bzr
(like me).  I've tried setting this up a couple of times, and I always end
up just giving up on it. (and no I don't recall exactly why, except for the
one time when installing bzr on windows hosed my machine and made it
unbootable...not Twisted's fault of course).


> Similarly, I do code reviews by using a local 'bzr merge'.
>
> The only weird workflow which isn't just built in to BZR-SVN is this:
> <
> http://twistedmatrix.com/trac/wiki/BazaarMirror#CommittingaBazaarbranchtoaSubversionbranch>.
>  This involves rebasing, which makes me a little sad; I wish we could
> preserve more history, but it works fine.
>
> I still *land* branches on trunk using SVN, but that takes about ten
> seconds assuming you use Combinator or svnmerge.py, so I don't see that
> being a big impediment.  You only need to worry about that if you have
> commit access anyway, so that's not most external contributors.  If the
> need to do that to land changes is preventing you from writing them in the
> first place, just let me know when you have a branch to land, and I'll do
> it for you.
>

Unless someone applied my patch, Combinator won't work on Windows.  Also,
since the great Divmod site meltdown, there's not good instructions on how
to use it (aside from the wayback machine, which is what I've been using).

I'd never heard of svnmerge.py until you mentioned it.  Are there any
instructions on how to use it with Twisted?  I'm not finding any, and I'm
reluctant to experiment since Twisted has a very specific way on
interacting with the SVN repo.


> You don't need to use SVN, you haven't needed to use SVN since git-svn
> came into existence, and we've had several threads on this list before
> about improving the Git instructions here: <
> http://twistedmatrix.com/trac/wiki/GitMirror>.  If you look at the
> history for that page, you can see that it is two years old, and originally
> created by exarkun, who is not a git user himself.
>
> So, it strikes me as a bit odd, and I am a bit dismayed that anyone would
> have been put off of by the need to use Subversion when working with
> Twisted since you can use Git or Bazaar - or, I assume, Mercurial - right
> now*.*
>

Presumably you could use Mercurial with the hggit plugin against a git
repo, but you can't use it directly against the SVN repo, as it has a bad
commit in it that hgsubversion totally chokes on:
https://bitbucket.org/durin42/hgsubversion/issue/350


> I would find it a bit more understandable if you are dismayed by the need
> to use *Trac*, which is harder to avoid when working on Twisted.  For
> various reasons - which I hope we don't have to discuss right now - we
> aren't going to *move* the project to Github any time soon, so if anyone
> reading this thread is interested in alleviating some of the pain with
> Trac, <https://launchpad.net/frack> is a good place to get involved to
> help out.  There are some pretty straightforward bugs that anyone
> interested could fix there.
>
> Frack is already up and running on twistedmatrix.com, albeit at a weird
> URL.  See, for example, <
> http://twistedmatrix.com/users/frack.twistd/ui/ticket.html?id=1956>. This
> might be useful because it is a considerably faster ticket-viewer than
> Trac, do to its somewhat more parsimonious issuance of SQL queries.
>
> -glyph
>
>
Trac has never really bothered me that much. Yes, occasionally it will do
something stupid, and it's...not fast, but I guess I'm just used to the
pain.  I'm looking forward to Frack, though.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/109de860/attachment.html>

From oubiwann at twistedmatrix.com  Mon Oct 22 11:55:48 2012
From: oubiwann at twistedmatrix.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 10:55:48 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
Message-ID: <CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>

On Sat, Oct 20, 2012 at 4:24 PM, Duncan McGreggor
<oubiwann at twistedmatrix.com> wrote:
> Hey all,
>
> At the sprint today, Glyph mentioned that the github repo hasn't been
> updated recently and needs someone to maintain it regularly. He also
> mentioned that pull requests would be accepted from github, at which point
> I immediately volunteered to keep the repo up to date :-) (I can't bear
> using svn anymore...)
>
> I'll be putting things in place (infrastructure, scripts, etc.) to assist me
> with this, so let me know if you have any concerns, questions, ideas, etc.

So, I've got a git repo set up for trunk of svn, and for the life of
me, I can't merge it with the git repo on github.

As such, my desire is to do a force push. *However* this would break
github forks that everyone has made so far, based on twisted/twisted
(the complete list is here:
https://github.com/twisted/twisted/network/members).

Thoughts? Permission to push the button?

d



From kevin.horn at gmail.com  Mon Oct 22 12:09:39 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 22 Oct 2012 13:09:39 -0500
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <20121022024531.GA46958@air>
References: <20121022024531.GA46958@air>
Message-ID: <CA+U=zK1qjd7X8hfcv_V_TK9589zEazZP9hSMu5hJQ0Z_==FpBg@mail.gmail.com>

On Sun, Oct 21, 2012 at 9:45 PM, Julian Berman <julian at grayvines.com> wrote:

> Hi.
>
> I'd like to gauge any interest in (or resistance towards) adding mock
> (http://www.voidspace.org.uk/python/mock/mock.html) as a dependency for
> the
> test suite.
>
> In short, while I don't necessarily feel strongly about behavior vs. state
> based verification being preferred in a general sense, I think both have
> their
> place when used with sensibility. (Sorry, I know that's not saying too
> much of
> substance, but I'm trying to ward off a discussion on whether or not it
> has a
> place at all if possible).
>
> The *benefit* though for me in having mock present is that it decreases the
> lines of code necessary to write stubs and mocks. While doing so is not
> really
> that difficult anyhow, it *is* just a bit more clutter to do so without
> mock,
> and the extra 3 or 4 lines mean that in more than one instance I have found
> myself pick a different strategy than I would have because of the extra
> lines
> of code that clutter the test method.
>
> To give a specific example, as I write this I'm writing tests for #6143
> (which
> will hopefully let trial drop into a debugger on an error or failure rather
> than at the outset of a test run). To do so I want to write tests that look
> like:
>
>     def test_itDebugsOnError(self):
>         result = mock.Mock()
>         exc_type, exc_value, tb = mock.Mock(), mock.Mock(), mock.Mock()
>
>         decorated = DebugDecorator(result)
>
>         with mock.patch.object(decorated, "debug") as debug:
>             decorated.addError(exc_type, exc_value, tb)
>
>         debug.assert_called_once_with(tb)
>         result.addError.assert_called_once_with(exc_type, exc_value, tb)
>
> where I want to test that the decorated test result is being used as I
> expect
> it to, and that debug is being called. Another test will test that debug
> does
> what it's supposed to, also in isolation.
>
> Of course none of the objects I used there were very interesting, but mock
> has
> similarly terse syntax for creating mocks with attributes, return values,
> etc.
> amongst a bunch of other useful features which I'll be happy to elaborate
> on if
> anyone would like, I just had the above example at hand.
>
> To add a few more notes:
>
>  - mock is in the stdlib starting with 3.3 as unittest.mock, which as I
>    understand it is the first version of Py3 for which support is planned.
> So
>    really all that'd be needed would be to add mock as a dependency on 2.X.
>
>  - it's a single file with no external deps, so installation is not
> difficult,
>    and it'd only be a dep for running the tests (and presumably only a
> subset
>    thereof that chose to use it)
>
>  - there are other mocking libraries, but I don't like any of the others as
>    much personally for various reasons.
>
>  - I'd be willing to do the small amount of work to add it if there'd be
>    interest :)
>
>
> Cheers,
> Julian
>
>
I like mock, but for me, using mocks is a method of last resort.  I don't
see a lot of need for it in internal Twisted tests (except maybe in adbapi?
 I don't know what the tests for that currently look like, but it seems a
logical place).

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/cf26cb29/attachment.html>

From kevin.horn at gmail.com  Mon Oct 22 12:14:55 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 22 Oct 2012 13:14:55 -0500
Subject: [Twisted-Python] Adding mock as a test suite dependency
In-Reply-To: <AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
References: <20121022024531.GA46958@air>
	<AA732414-3B2B-4085-9C0F-6B389C0FE009@twistedmatrix.com>
Message-ID: <CA+U=zK2yEwjY=WpS_td9Y7SLeUh=KLU40WT9nPf=i+8dKbJKuw@mail.gmail.com>

On Sun, Oct 21, 2012 at 10:00 PM, Glyph <glyph at twistedmatrix.com> wrote:

> On Oct 21, 2012, at 7:45 PM, Julian Berman <julian at grayvines.com> wrote:
>
> The *benefit* though for me in having mock present is that it decreases the
> lines of code necessary to write stubs and mocks. While doing so is not
> really
> that difficult anyhow, it *is* just a bit more clutter to do so without
> mock,
> and the extra 3 or 4 lines mean that in more than one instance I have found
> myself pick a different strategy than I would have because of the extra
> lines
> of code that clutter the test method.
>
>
> This seems like a pretty small benefit; adding a new dependency affects
> lots of people and introduces a new point of failure in the installation
> process, especially for Windows users who already have a devil of a time
> getting Twisted installed.
>

I never have much trouble, of course I always have a C compiler installed
and never use the Windows installer for Twisted any more.  The main issue I
have with installing Twisted, is that in order to use any of the command
like tools I have to go in and muck with the files (I think they just have
to be renamed...been a while since I've done it), since Twisted uses the
old distutils "script" method of installing them, rather than using
setuptools/sitribute or distutils2/packaging or whatever.

This means the various command line tools get installed (IIRC and if my
info is up to date) without file extensions, which is fine in a Unixy
environment, but don't work a'tall on Windows.


> Also I don't particularly like the testing style associated with Mock.  I
> think it might discourage us yet further from writing verified fakes, i.e.
> supported in-memory implementations of things like IReactorTCP, that have
> somewhat intricate behavior that's tedious to emulate with Mock.
>
>
My experience with mock is that when you need it it's really really
obvious, and if you don't, you shouldn't start using it, as it starts to
become a crutch.


> Personally I'm -0.  Don't let that stop you from cooking up a patch that
> would include it though, I might be in the minority here.
>
> -glyph
>
>
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/9b164247/attachment.html>

From dreid at dreid.org  Mon Oct 22 12:30:52 2012
From: dreid at dreid.org (David Reid)
Date: Mon, 22 Oct 2012 11:30:52 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
Message-ID: <CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>

On Mon, Oct 22, 2012 at 10:55 AM, Duncan McGreggor <
oubiwann at twistedmatrix.com> wrote:

> On Sat, Oct 20, 2012 at 4:24 PM, Duncan McGreggor
> <oubiwann at twistedmatrix.com> wrote:
> > Hey all,
> >
> > At the sprint today, Glyph mentioned that the github repo hasn't been
> > updated recently and needs someone to maintain it regularly. He also
> > mentioned that pull requests would be accepted from github, at which
> point
> > I immediately volunteered to keep the repo up to date :-) (I can't bear
> > using svn anymore...)
> >
> > I'll be putting things in place (infrastructure, scripts, etc.) to
> assist me
> > with this, so let me know if you have any concerns, questions, ideas,
> etc.
>
> So, I've got a git repo set up for trunk of svn, and for the life of
> me, I can't merge it with the git repo on github.
>
> As such, my desire is to do a force push. *However* this would break
> github forks that everyone has made so far, based on twisted/twisted
> (the complete list is here:
> https://github.com/twisted/twisted/network/members).
>

Based on https://github.com/twisted/twisted/network

(That graph indicates that no one has actually done any substantial work
based on the old repository.)

I'm inclined to say do it.

I'm a little concerned about how you ended up with a thing that which
wasn't mergeable?  Could we start by you documenting how you created this
repo?

-David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/8b9e9727/attachment.html>

From glyph at twistedmatrix.com  Mon Oct 22 12:49:45 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 11:49:45 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
Message-ID: <D776430E-8400-4E3F-A91C-CCF95A14BE18@twistedmatrix.com>


On Oct 22, 2012, at 11:30 AM, David Reid <dreid at dreid.org> wrote:

> I'm a little concerned about how you ended up with a thing that which wasn't mergeable?  Could we start by you documenting how you created this repo?

Also, how did powdahound create theirs?  Understanding the distinction so that other git users know how to create their repos the same way, or someone else wants to take over maintenance, would be _highly_ useful.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/0f583490/attachment.html>

From julian at grayvines.com  Mon Oct 22 12:58:52 2012
From: julian at grayvines.com (Julian Berman)
Date: Mon, 22 Oct 2012 14:58:52 -0400
Subject: [Twisted-Python] Adding mock as a test suite dependency
Message-ID: <CABJQSknsdS9G36_rhi+3VyRaTaogjYtaMaOAhJhtPORUCpDjtg@mail.gmail.com>

From: exarkun at twistedmatrix.com

> Subject: Re: [Twisted-Python] Adding mock as a test suite dependency
>
> On 03:00 am, glyph at twistedmatrix.com wrote:
> >Also I don't particularly like the testing style associated with Mock.
> >I think it might discourage us yet further from writing verified fakes,
> >i.e. supported in-memory implementations of things like IReactorTCP,
> >that have somewhat intricate behavior that's tedious to emulate with
> >Mock.
>
> I'm also not a huge fan of the *unverified* mock style of testing.  I
> don't think anything says that mocks *have* to be unverified, though it
> seems they're often used that way.
>
> The mock library that got added to the stdlib has the notion of
> constructing a mock using another object as a template.  I haven't used
> this feature, but it seems like the intent is to at least take a step
> towards verification.  It'd be nice if someone who knows more about the
> features of this library could give some examples.
>
> In case anyone isn't clear, the problem with unverified fakes is that
> they either start out incompatible with the objects they're fakes of, or
> else they become incompatible with them over time.  Once they're
> incompatible, the tests that use them become significantly less useful,
> since they demonstrate little or nothing about what will happen when you
> try to use the code for real.
>
> Verified fakes solve this problem by adding assertions that objects and
> their fakes have the necessary overlap in either interface or
> functionality in order for the tests using them to be valid.
>
> Beyond that, considering the particular example presented, I wouldn't
> actually use mocks to test this.  The real object, the debugger, should
> be perfectly usable in unit tests.  It doesn't allocate or depend on
> expensive resources, it doesn't do network I/O, etc.  Mocks are perhaps
> an attractive nuisance that distract from coming up with a better test.
>
>
Well it seems I sidestepped behavior vs. state but fell into isolationist
vs integration :).

The reason I think even this was a reasonable example is because in the
code that this
will test, there is no dependence on an actual debugger whatsoever. What
this test should
be testing is that an object whose interface is irrelevant for the purpose
of the test was
handed off to another method in the case that that is expected.

In short, the isolationist view as I understand and have come to appreciate
says that
mocks (in a broader sense here since these aren't true mocks I guess)
aren't just for
cases where the real object is expensive or annoying to create – they also
remove
irrelevant details from the body of the test.

That being said though, I'm still looking (read: I have not yet looked but
will do so when I
get home) for actual examples in the test suite I can point to and say that
real, actual mocks
would have helped if that's what you'd be looking for.

To go back to your first point about verification, mock has a bunch of
things there of which
if I'm truthful I only use some of them with any regularity. The thing that
sounds like what
you're referring to is likely the `spec` argument, which will do something
like:

>>> import mock
>>> from twisted.trial.itrial import ITestCase
>>> testCase = mock.Mock(spec=ITestCase.names())
>>> testCase.run
<Mock name='mock.run' id='4319309392'>
>>> testCase.jump
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File
"/usr/local/Cellar/python/2.7.3/lib/python2.7/site-packages/mock.py", line
647, in __getattr__
    raise AttributeError("Mock object has no attribute %r" % name)
AttributeError: Mock object has no attribute 'jump'


As someone mentioned you also can hand it an implementor of ITestCase too
but it will then pull
off all attributes that that object has.

There's plenty more granularity, but like anything else the design of the
test requires common sense.
If the test is meant to test how a specific method on the testCase mock is
being used then assertions
on how it was called generally seem most natural.

As an alternate approach, I've learned (from a few places I think) that in
cases where I want to verify
that the places I've mocked are being used in a way that isn't going to
differ from their actual use in the
code, that a much wider scoped test that does integrate but doesn't need to
be a unit test can be helpful,
such that there are a whole bunch of isolated tests for each piece of logic
and then one integrated test
that actually does push the real object through such that anyone who does
change the way that the two
objects interacts still will have something telling them that the tests
need updating as they would if all of
the tests integrated.

Jean-Paul
> >Personally I'm -0.  Don't let that stop you from cooking up a patch
> >that would include it though, I might be in the minority here.
> >
> >-glyph
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/da9e244d/attachment.html>

From duncan.mcgreggor at gmail.com  Mon Oct 22 13:01:16 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:01:16 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
Message-ID: <CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>

On Mon, Oct 22, 2012 at 11:30 AM, David Reid <dreid at dreid.org> wrote:
>
>
> On Mon, Oct 22, 2012 at 10:55 AM, Duncan McGreggor
> <oubiwann at twistedmatrix.com> wrote:
>>
>> On Sat, Oct 20, 2012 at 4:24 PM, Duncan McGreggor
>> <oubiwann at twistedmatrix.com> wrote:
>> > Hey all,
>> >
>> > At the sprint today, Glyph mentioned that the github repo hasn't been
>> > updated recently and needs someone to maintain it regularly. He also
>> > mentioned that pull requests would be accepted from github, at which
>> > point
>> > I immediately volunteered to keep the repo up to date :-) (I can't bear
>> > using svn anymore...)
>> >
>> > I'll be putting things in place (infrastructure, scripts, etc.) to
>> > assist me
>> > with this, so let me know if you have any concerns, questions, ideas,
>> > etc.
>>
>> So, I've got a git repo set up for trunk of svn, and for the life of
>> me, I can't merge it with the git repo on github.
>>
>> As such, my desire is to do a force push. *However* this would break
>> github forks that everyone has made so far, based on twisted/twisted
>> (the complete list is here:
>> https://github.com/twisted/twisted/network/members).
>
>
> Based on https://github.com/twisted/twisted/network
>
> (That graph indicates that no one has actually done any substantial work
> based on the old repository.)
>
> I'm inclined to say do it.
>
> I'm a little concerned about how you ended up with a thing that which wasn't
> mergeable?  Could we start by you documenting how you created this repo?

Sure thing. All I did to build a git repo was the usual:

git svn clone svn://svn.twistedmatrix.com/svn/Twitsed/trunk twisted

All of my attempts to merge were using the local copy created by the
branch above (or by creating a clone of it with just one or two
revisions beyond what the github repo has, to minimize the commit #
and maximize the chance of a successful merge).

For instance:
 * git clone git at github.com:twisted/twisted.git twisted-github; cd
twisted-github; git pull ../twisted master

(and other variations upon that theme).

I've tried using several different merge strategies; either they
couldn't complete the merge, or they resulted in gobs of conflicts.

d



From duncan.mcgreggor at gmail.com  Mon Oct 22 13:01:48 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:01:48 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <D776430E-8400-4E3F-A91C-CCF95A14BE18@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<D776430E-8400-4E3F-A91C-CCF95A14BE18@twistedmatrix.com>
Message-ID: <CAFJQhU7BG784_Bqu_Q0-q25WLb6gzYrcMdi9udYb+R40hneXTg@mail.gmail.com>

On Mon, Oct 22, 2012 at 11:49 AM, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Oct 22, 2012, at 11:30 AM, David Reid <dreid at dreid.org> wrote:
>>
>> I'm a little concerned about how you ended up with a thing that which wasn't
>> mergeable?  Could we start by you documenting how you created this repo?
>
>
> Also, how did powdahound create theirs?  Understanding the distinction so
> that other git users know how to create their repos the same way, or someone
> else wants to take over maintenance, would be _highly_ useful.
>
> -g

Indeed, that could be illuminating.

d



From duncan.mcgreggor at gmail.com  Mon Oct 22 13:04:02 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:04:02 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
Message-ID: <CAFJQhU5k=y=XYcLjYpiuTUBb-_aXEEC=gBPUg6jJ4wA1nDNiwg@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:01 PM, Duncan McGreggor
<duncan.mcgreggor at gmail.com> wrote:
> On Mon, Oct 22, 2012 at 11:30 AM, David Reid <dreid at dreid.org> wrote:
>>
>>
>> On Mon, Oct 22, 2012 at 10:55 AM, Duncan McGreggor
>> <oubiwann at twistedmatrix.com> wrote:
>>>
>>> On Sat, Oct 20, 2012 at 4:24 PM, Duncan McGreggor
>>> <oubiwann at twistedmatrix.com> wrote:
>>> > Hey all,
>>> >
>>> > At the sprint today, Glyph mentioned that the github repo hasn't been
>>> > updated recently and needs someone to maintain it regularly. He also
>>> > mentioned that pull requests would be accepted from github, at which
>>> > point
>>> > I immediately volunteered to keep the repo up to date :-) (I can't bear
>>> > using svn anymore...)
>>> >
>>> > I'll be putting things in place (infrastructure, scripts, etc.) to
>>> > assist me
>>> > with this, so let me know if you have any concerns, questions, ideas,
>>> > etc.
>>>
>>> So, I've got a git repo set up for trunk of svn, and for the life of
>>> me, I can't merge it with the git repo on github.
>>>
>>> As such, my desire is to do a force push. *However* this would break
>>> github forks that everyone has made so far, based on twisted/twisted
>>> (the complete list is here:
>>> https://github.com/twisted/twisted/network/members).
>>
>>
>> Based on https://github.com/twisted/twisted/network
>>
>> (That graph indicates that no one has actually done any substantial work
>> based on the old repository.)
>>
>> I'm inclined to say do it.
>>
>> I'm a little concerned about how you ended up with a thing that which wasn't
>> mergeable?  Could we start by you documenting how you created this repo?
>
> Sure thing. All I did to build a git repo was the usual:
>
> git svn clone svn://svn.twistedmatrix.com/svn/Twitsed/trunk twisted
>
> All of my attempts to merge were using the local copy created by the
> branch above (or by creating a clone of it with just one or two
> revisions beyond what the github repo has, to minimize the commit #
> and maximize the chance of a successful merge).
>
> For instance:
>  * git clone git at github.com:twisted/twisted.git twisted-github; cd
> twisted-github; git pull ../twisted master
>
> (and other variations upon that theme).
>
> I've tried using several different merge strategies; either they
> couldn't complete the merge, or they resulted in gobs of conflicts.
>
> d

So I just tried something else:

git pull -s recursive -Xtheirs ../twisted master

since this was run in the github master, the "theirs" is the svn clone
master, and forcing the adoption of "theirs" resulted in many fewer
conflicts. Hundreds of fewer conflicts, maybe?

Looking into this to see if anything was broken by this approach...

d



From glyph at twistedmatrix.com  Mon Oct 22 13:22:15 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 12:22:15 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CA+U=zK1htddDFsjoQ7ciaoruKuuMK_M0E9L6gJ=vQOEiLLGvow@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
	<2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>
	<CA+U=zK1htddDFsjoQ7ciaoruKuuMK_M0E9L6gJ=vQOEiLLGvow@mail.gmail.com>
Message-ID: <176D327E-FA4F-4774-BA32-D56A83EDA73A@twistedmatrix.com>


On Oct 22, 2012, at 10:53 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> 
> 
> On Sun, Oct 21, 2012 at 11:05 PM, Glyph <glyph at twistedmatrix.com> wrote:
> On Oct 21, 2012, at 11:57 AM, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:
> 
>> I want to use git instead of svn so badly that I can taste it.
>> Hopefully this provides the motivation necessary to maintain the repo
>> :-)
> 
> 
> For what it's worth, I haven't authored a branch for Twisted with SVN in the last 3 years.  I use Bazaar almost exclusively and I get all the fun tools one generally associates with a DVCS, including offline history and a nice graphical revision viewer.  (One reason I am concerned about migrating to Git is that this will stop working; in my opinions, Git's offline GUI tools are far worse than Bazaar's - almost as much worse as Launchpad's source browser is than Github.)
> 
> I really wish I could figure out how to do this.  The one page on the wiki helps a bit, but is insufficient for those not already familiar with bzr (like me).  I've tried setting this up a couple of times, and I always end up just giving up on it.

Let me keep it super short and sweet for you:

C:\PROJEC~1> bzr branch http://svn.twistedmatrix.com/bzr/Twisted/trunk Twisted
C:\PROJEC~1> cd Twisted

as many times as desired,

C:\PROJEC~1\TWISTED> hack hack hack
C:\PROJEC~1\TWISTED> C:\python27\python.exe bin\trial twisted
C:\PROJEC~1\TWISTED> bzr commit

Review time!

C:\PROJEC~1\TWISTED> bzr send -o - > my.patch

Stick my.patch on a ticket and you're good to go.  No need for combinator, or virtualenv, or subversion (not even bzr-svn, we did that part for you), or even a C compiler, assuming the feature you're working on doesn't need one.

If any of this isn't covered in the wiki page then please update it.  And please feel free to ask more questions - if specific version control or workflow issues are preventing anyone from working on Twisted then it is definitely on-topic for this list and I will be happy to provide answers and update development documentation.

> (and no I don't recall exactly why, except for the one time when installing bzr on windows hosed my machine and made it unbootable...not Twisted's fault of course).

Can we just agree that you had a virus and that this had nothing to do with anything in this thread?  Even if that's not true I think it might be long-term more mentally healthy for you to believe :-)

> Similarly, I do code reviews by using a local 'bzr merge'.
> 
> The only weird workflow which isn't just built in to BZR-SVN is this:
> <http://twistedmatrix.com/trac/wiki/BazaarMirror#CommittingaBazaarbranchtoaSubversionbranch>.  This involves rebasing, which makes me a little sad; I wish we could preserve more history, but it works fine.
> 
> I still land branches on trunk using SVN, but that takes about ten seconds assuming you use Combinator or svnmerge.py, so I don't see that being a big impediment.  You only need to worry about that if you have commit access anyway, so that's not most external contributors.  If the need to do that to land changes is preventing you from writing them in the first place, just let me know when you have a branch to land, and I'll do it for you.
> 
> Unless someone applied my patch, Combinator won't work on Windows.  Also, since the great Divmod site meltdown, there's not good instructions on how to use it (aside from the wayback machine, which is what I've been using).
> 
> I'd never heard of svnmerge.py until you mentioned it.  Are there any instructions on how to use it with Twisted?  I'm not finding any, and I'm reluctant to experiment since Twisted has a very specific way on interacting with the SVN repo.

I guess I should test this out myself at least once, but my understanding is that you just do svnmerge.py --bidirectional -S the-branch-you-want-to-merge in trunk.  You can test this out for yourself though, since svnmerge.py is loudly advertised as "commit-free": you always have to do the commit yourself.

More info here: <http://www.orcaware.com/svn/wiki/Svnmerge.py>.

If we can ever upgrade to a version of SVN on the server that supports merge-tracking, the need for either of these tools will go away since a plain 'svn merge ../branches/branchname' will do the right thing.  Any volunteer sysadmins want to take the opportunity to crawl out of the woodwork?  (Please?)

But again: if you have trouble with this part, please just drop an email to the list and I will do it for you.  Do not let this minor step be an impediment to contributing to Twisted.

> You don't need to use SVN, you haven't needed to use SVN since git-svn came into existence, and we've had several threads on this list before about improving the Git instructions here: <http://twistedmatrix.com/trac/wiki/GitMirror>.  If you look at the history for that page, you can see that it is two years old, and originally created by exarkun, who is not a git user himself.
> 
> So, it strikes me as a bit odd, and I am a bit dismayed that anyone would have been put off of by the need to use Subversion when working with Twisted since you can use Git or Bazaar - or, I assume, Mercurial - right now.
> 
> Presumably you could use Mercurial with the hggit plugin against a git repo, but you can't use it directly against the SVN repo, as it has a bad commit in it that hgsubversion totally chokes on: https://bitbucket.org/durin42/hgsubversion/issue/350 

Sadness.  Hopefully this renewed attention will get the mercurial folks to fix this bug sooner?  Thanks for filing it.

> I would find it a bit more understandable if you are dismayed by the need to use Trac, which is harder to avoid when working on Twisted.  For various reasons - which I hope we don't have to discuss right now - we aren't going to move the project to Github any time soon, so if anyone reading this thread is interested in alleviating some of the pain with Trac, <https://launchpad.net/frack> is a good place to get involved to help out.  There are some pretty straightforward bugs that anyone interested could fix there.
> 
> Frack is already up and running on twistedmatrix.com, albeit at a weird URL.  See, for example, <http://twistedmatrix.com/users/frack.twistd/ui/ticket.html?id=1956>. This might be useful because it is a considerably faster ticket-viewer than Trac, do to its somewhat more parsimonious issuance of SQL queries.
> 
> -glyph
> 
> 
> Trac has never really bothered me that much. Yes, occasionally it will do something stupid, and it's...not fast, but I guess I'm just used to the pain.  I'm looking forward to Frack, though.

Great, glad to hear it.

By the way, if you've been shying away because it's slow, you should know that we did recently fix a major performance problem with the website.  Bots were running amok on some very CPU and memory intensive requests, and robots.txt was not deployed correctly so it wasn't reducing any of the traffic as it should have.  At the most recent sprint nobody complained about being unable to work because of the website falling over, which indicates that some of our more dire problems are now under control.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/5d78672a/attachment.html>

From glyph at twistedmatrix.com  Mon Oct 22 13:23:30 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 12:23:30 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
Message-ID: <EA8E456C-113D-4C85-ACF1-8C0319DC8ED2@twistedmatrix.com>


On Oct 22, 2012, at 12:01 PM, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:

> Sure thing. All I did to build a git repo was the usual:
> 
> git svn clone svn://svn.twistedmatrix.com/svn/Twitsed/trunk twisted

The spelling error in this command makes me think that maybe you didn't copy the command exactly from wherever you did it? ;-)

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/7927f766/attachment.html>

From glyph at twistedmatrix.com  Mon Oct 22 13:30:49 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 12:30:49 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
Message-ID: <7139FEFC-9DF1-4E6D-BC90-29D4DFB5643D@twistedmatrix.com>

On Oct 22, 2012, at 12:01 PM, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:

> ... the local copy ...

I should also say that I think it's very important to set up a documented, automated process, ideally on the twistedmatrix.com infrastructure somewhere, that will do the pull and update and stuff.  There's already a git mirror on wolfwood in /var/www/git/Twisted.  I have no idea why it's not being automatically updated.

For example, there's a post-commit hook that updates the bzr mirror, so it's always up to date.  See wolfwood:/svn/Twisted/hooks/post-commit for the details of how that works.

A post-commit hook might not be appropriate for git; so you might want to queue up changes for a cron job.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/7e5b74c2/attachment.html>

From duncan.mcgreggor at gmail.com  Mon Oct 22 13:39:23 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:39:23 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <EA8E456C-113D-4C85-ACF1-8C0319DC8ED2@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
	<EA8E456C-113D-4C85-ACF1-8C0319DC8ED2@twistedmatrix.com>
Message-ID: <CAFJQhU6apmgGOvspf3hZTT83eN9wG8ua93DseWg4H7EJ+L_RHQ@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:23 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Oct 22, 2012, at 12:01 PM, Duncan McGreggor <duncan.mcgreggor at gmail.com>
> wrote:
>
> Sure thing. All I did to build a git repo was the usual:
>
> git svn clone svn://svn.twistedmatrix.com/svn/Twitsed/trunk twisted
>
>
> The spelling error in this command makes me think that maybe you didn't copy
> the command exactly from wherever you did it? ;-)

That's correct -- I manually typed it in the email (I'm using xterm on
stumpwm in XQuartz, and haven't gotten bidirectional copy/paste set up
yet).

d



From duncan.mcgreggor at gmail.com  Mon Oct 22 13:46:41 2012
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:46:41 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <7139FEFC-9DF1-4E6D-BC90-29D4DFB5643D@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
	<7139FEFC-9DF1-4E6D-BC90-29D4DFB5643D@twistedmatrix.com>
Message-ID: <CAFJQhU7MfHn5uvfhqjYUU8ZfHZOc=SAe7Yc0o2Rb23cAXiwvpQ@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:30 PM, Glyph <glyph at twistedmatrix.com> wrote:
> On Oct 22, 2012, at 12:01 PM, Duncan McGreggor <duncan.mcgreggor at gmail.com>
> wrote:
>>
>> ... the local copy ...
>>
>
> I should also say that I think it's very important to set up a documented,
> automated process,

Agreed.

> ideally on the twistedmatrix.com infrastructure
> somewhere, that will do the pull and update and stuff.

Excellent. I'll check to see if I have access to these.

> There's already a
> git mirror on wolfwood in /var/www/git/Twisted.

Now *that's* good information to have ;-)

> I have no idea why it's not
> being automatically updated.
>
> For example, there's a post-commit hook that updates the bzr mirror, so it's
> always up to date.  See wolfwood:/svn/Twisted/hooks/post-commit for the
> details of how that works.

Sweet. This is the sort of thing I need.

d

> A post-commit hook might not be appropriate for git; so you might want to
> queue up changes for a cron job.
>
> -glyph
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From oubiwann at twistedmatrix.com  Mon Oct 22 13:48:56 2012
From: oubiwann at twistedmatrix.com (Duncan McGreggor)
Date: Mon, 22 Oct 2012 12:48:56 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CAFJQhU5k=y=XYcLjYpiuTUBb-_aXEEC=gBPUg6jJ4wA1nDNiwg@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAFJQhU7suML=4Xg2KbajMc0F9mgdMJ88fJz=kbG3a1AQj_rmwQ@mail.gmail.com>
	<CA+t4paxnb9G9Lgyk6MWnH7XDqr1je3kHZPKN6BNBS4gh97-uAQ@mail.gmail.com>
	<CAFJQhU7H5fFnr7X3BCY3oXf2AeHj6TbMQ8sVEWtb6d9jg+aGxQ@mail.gmail.com>
	<CAFJQhU5k=y=XYcLjYpiuTUBb-_aXEEC=gBPUg6jJ4wA1nDNiwg@mail.gmail.com>
Message-ID: <CAFJQhU7-r05LzT_afrtd9q+8qQwrhzifN0N4OvnA+dwQVtUP-w@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:04 PM, Duncan McGreggor
<duncan.mcgreggor at gmail.com> wrote:
> On Mon, Oct 22, 2012 at 12:01 PM, Duncan McGreggor
> <duncan.mcgreggor at gmail.com> wrote:
>> On Mon, Oct 22, 2012 at 11:30 AM, David Reid <dreid at dreid.org> wrote:
>>>
>>>
>>> On Mon, Oct 22, 2012 at 10:55 AM, Duncan McGreggor
>>> <oubiwann at twistedmatrix.com> wrote:
>>>>
>>>> On Sat, Oct 20, 2012 at 4:24 PM, Duncan McGreggor
>>>> <oubiwann at twistedmatrix.com> wrote:
>>>> > Hey all,
>>>> >
>>>> > At the sprint today, Glyph mentioned that the github repo hasn't been
>>>> > updated recently and needs someone to maintain it regularly. He also
>>>> > mentioned that pull requests would be accepted from github, at which
>>>> > point
>>>> > I immediately volunteered to keep the repo up to date :-) (I can't bear
>>>> > using svn anymore...)
>>>> >
>>>> > I'll be putting things in place (infrastructure, scripts, etc.) to
>>>> > assist me
>>>> > with this, so let me know if you have any concerns, questions, ideas,
>>>> > etc.
>>>>
>>>> So, I've got a git repo set up for trunk of svn, and for the life of
>>>> me, I can't merge it with the git repo on github.
>>>>
>>>> As such, my desire is to do a force push. *However* this would break
>>>> github forks that everyone has made so far, based on twisted/twisted
>>>> (the complete list is here:
>>>> https://github.com/twisted/twisted/network/members).
>>>
>>>
>>> Based on https://github.com/twisted/twisted/network
>>>
>>> (That graph indicates that no one has actually done any substantial work
>>> based on the old repository.)
>>>
>>> I'm inclined to say do it.
>>>
>>> I'm a little concerned about how you ended up with a thing that which wasn't
>>> mergeable?  Could we start by you documenting how you created this repo?
>>
>> Sure thing. All I did to build a git repo was the usual:
>>
>> git svn clone svn://svn.twistedmatrix.com/svn/Twitsed/trunk twisted
>>
>> All of my attempts to merge were using the local copy created by the
>> branch above (or by creating a clone of it with just one or two
>> revisions beyond what the github repo has, to minimize the commit #
>> and maximize the chance of a successful merge).
>>
>> For instance:
>>  * git clone git at github.com:twisted/twisted.git twisted-github; cd
>> twisted-github; git pull ../twisted master
>>
>> (and other variations upon that theme).
>>
>> I've tried using several different merge strategies; either they
>> couldn't complete the merge, or they resulted in gobs of conflicts.
>>
>> d
>
> So I just tried something else:
>
> git pull -s recursive -Xtheirs ../twisted master
>
> since this was run in the github master, the "theirs" is the svn clone
> master, and forcing the adoption of "theirs" resulted in many fewer
> conflicts. Hundreds of fewer conflicts, maybe?
>
> Looking into this to see if anything was broken by this approach...
>
> d

It seems that the topfiles were mostly affected by this. Some deleted
files git didn't know what do to with. But then I noticed that other
files that had been modified weren't included in the change set.

*sighs*

As a sanity check, I did a local rsync, and sure enough, there are a
bunch of files that didn't get merged using the strategy above that
were changed in the svn repo.

I'll put this part of the effort on hold, and take a look at the repo
mirror that Glyph pointed me to in his most recent email...

d



From ltaylor.volks at gmail.com  Mon Oct 22 14:09:43 2012
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Mon, 22 Oct 2012 15:09:43 -0500
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAA0H+QSiVp3W2=o+KVGo_PuLwe1WXey9DahG1Nhhq3FaVfszEw@mail.gmail.com>
	<20121021184851.30349.1119113143.divmod.xquotient.73@localhost6.localdomain6>
	<CAA0H+QTs3vQGg-H1sVqEKnR7Rq7vwK0JujjtSY4OaAiswFtJ+A@mail.gmail.com>
	<AD13356A-1EDC-4CE7-83FD-F4BB763894AE@twistedmatrix.com>
Message-ID: <64D743A0-ECF9-4BBA-A80D-C85B74DBE422@gmail.com>


On Oct 21, 2012, at 11:05 PM, Glyph wrote:

>> 
>> The few times I've tried to contributed to Twisted, svn was actually a big barrier. Trying to update my patches so that I'm sure the tests pass on trunk produced mysterious merge conflicts in files I've never touched. Maybe I'm bad at svn, but it's never worked well for me.
> 
> Why aren't you just using git for local development then?  You don't have commit access, so you should never need to touch an svn client other than git if you don't feel like it.
> 
> This is not entirely a rhetorical question.  We have always tried to be accommodating to DVCS users, providing instructions and repeated requests for both a plain git and/or a github ambassador to keep svn nicely synchronized and reduce the friction required for users of those tools to make contributions.  If the documentation we've offered on <http://twistedmatrix.com/trac/wiki/GitMirror> is in any way incorrect or non-optimal, please don't hesitate to say exactly what would be better.  If you need wiki edit permission to update the page, I'll gladly give it to you.
> 
> -glyph


I think there are a few issues with the documentation, from the standpoint of an infrequent contributor:

    • It appears that you have to go "all in" with svn if you want to contribute, when that isn't actually the case

    • <http://twistedmatrix.com/trac/wiki/GitMirror> is not terribly easy to find.
 	• It does come up in search, but is otherwise not easily accessible when you're spelunking for info on how to contribute
	• The page with the links has it as a parenthetical aside <http://twistedmatrix.com/trac/wiki/TwistedDevelopment>

    • Casual contributors should have a different story than core committers, but the distinction isn't always prominent
		• <http://twistedmatrix.com/trac/wiki/GitMirror> makes this distinction, which is good
		• <http://twistedmatrix.com/trac/wiki/BazaarMirror> does not.


For what it's worth, I've been using Mercurial patch queues to manage a couple of infrequent, small contributions. It works pretty well and doesn't rely on svn history or an svn bridge. That's not terribly interesting, but the point is that there are probably other workflows that are effective and it would be useful if they could be documented and shared easily.

I created a ticket to address some of these points and carry on the docs discussion elsewhere. If it seems like a good idea I'll work on updating the wiki.
http://twistedmatrix.com/trac/ticket/6154


Lucas Taylor





From kevin.horn at gmail.com  Mon Oct 22 17:54:46 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 22 Oct 2012 18:54:46 -0500
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <176D327E-FA4F-4774-BA32-D56A83EDA73A@twistedmatrix.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
	<2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>
	<CA+U=zK1htddDFsjoQ7ciaoruKuuMK_M0E9L6gJ=vQOEiLLGvow@mail.gmail.com>
	<176D327E-FA4F-4774-BA32-D56A83EDA73A@twistedmatrix.com>
Message-ID: <CA+U=zK3pUjbGoq1uuXo0xT9dGuLygQ_HKF2J1-oAApw7o=O7yQ@mail.gmail.com>

On Mon, Oct 22, 2012 at 2:22 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Oct 22, 2012, at 10:53 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>
> On Sun, Oct 21, 2012 at 11:05 PM, Glyph <glyph at twistedmatrix.com> wrote:
>>
>>
>> For what it's worth, I haven't authored a branch for Twisted with SVN in
>> the last 3 years.  I use Bazaar almost exclusively and I get all the fun
>> tools one generally associates with a DVCS, including offline history and a
>> nice graphical revision viewer.  (One reason I am concerned about migrating
>> to Git is that this will stop working; in my opinions, Git's offline GUI
>> tools are far worse than Bazaar's - almost as much worse as Launchpad's
>> source browser is than Github.)
>>
>
> I really wish I could figure out how to do this.  The one page on the wiki
> helps a bit, but is insufficient for those not already familiar with bzr
> (like me).  I've tried setting this up a couple of times, and I always end
> up just giving up on it.
>
>
> Let me keep it super short and sweet for you:
>
> C:\PROJEC~1> bzr branch http://svn.twistedmatrix.com/bzr/Twisted/trunkTwisted
> C:\PROJEC~1> cd Twisted
>
> as many times as desired,
>
> C:\PROJEC~1\TWISTED> hack hack hack
>
> C:\PROJEC~1\TWISTED> C:\python27\python.exe bin\trial twisted
>
> C:\PROJEC~1\TWISTED> bzr commit
>
>
> Review time!
>
> C:\PROJEC~1\TWISTED> bzr send -o - > my.patch
>
> Stick my.patch on a ticket and you're good to go.  No need for combinator,
> or virtualenv, or subversion (not even bzr-svn, we did that part for you),
> or even a C compiler, assuming the feature you're working on doesn't need
> one.
>
> If any of this isn't covered in the wiki page then please update it.  And
> please feel free to ask more questions - if specific version control or
> workflow issues are preventing anyone from working on Twisted then it is
> definitely on-topic for this list and I will be happy to provide answers
> and update development documentation.
>
>
See that should totally be on a wiki page someplace.

I'd be happy to put it up there, but I don't have edit permissions on that
page (or any of them?) apparently...


> (and no I don't recall exactly why, except for the one time when
> installing bzr on windows hosed my machine and made it unbootable...not
> Twisted's fault of course).
>
>
> Can we just agree that you had a virus and that this had nothing to do
> with anything in this thread?  Even if that's not true I think it might be
> long-term more mentally healthy for you to believe :-)
>
>
Actually I know exactly why this happened, and it's because Windows has a
hard limit on the number of "icon overlays" you can add to Explorer.  I
installed TortoiseBzr along with bzr, and went over that limit.  This by
itself is not such a big deal, but it turns out that the failure behavior
of this particular issue is NOT BOOTING ANY MORE. (stupid Windows)

(FYI, I've since installed bzr again, and have had no similar problems.)

(also FYI, I haven't had a virus/spyware on a windows machine that I owned
in more than 10 years...<knock on wood>...the trick is renaming the
iexplore.exe executable...)

But aside from that, the couple of times I've tried messing around with bzr
I end up going in circles in their documentation, can't decide what I
should be doing, decide I don't have time to mess with it and just go back
to SVN (which is painful).  Of course by that time I've usually gotten
distracted and I never finish whatever it was I was working on...

Mostly these days I just bang my head against translating the Lore docs
into Sphinx (yes, I'm _still_ working on that).

Unless someone applied my patch, Combinator won't work on Windows.  Also,
> since the great Divmod site meltdown, there's not good instructions on how
> to use it (aside from the wayback machine, which is what I've been using).
>
> I'd never heard of svnmerge.py until you mentioned it.  Are there any
> instructions on how to use it with Twisted?  I'm not finding any, and I'm
> reluctant to experiment since Twisted has a very specific way on
> interacting with the SVN repo.
>
>
> I guess I should test this out myself at least once, but my understanding
> is that you just do svnmerge.py --bidirectional -S
> the-branch-you-want-to-merge in trunk.  You can test this out for yourself
> though, since svnmerge.py is loudly advertised as "commit-free": you always
> have to do the commit yourself.
>
> More info here: <http://www.orcaware.com/svn/wiki/Svnmerge.py>.
>
>
Hmmm...interesting.


> If we can ever upgrade to a version of SVN on the server that supports
> merge-tracking, the need for either of these tools will go away since a
> plain 'svn merge ../branches/branchname' will do the right thing.  Any
> volunteer sysadmins want to take the opportunity to crawl out of the
> woodwork?  (Please?)
>
>
I had no idea that Twisted was still using such an old version.  I was
under the impression that the hackery that Combinator used was incompatible
with the new merge tracking and that's why it wasn't being used (because it
would screw up those still using Combinator...this assumes there are any).
 If that's not true, perhaps I can take a look, though I likely wouldn't be
able to devote any serious time to it until at least Mid-November.


> But again: if you have trouble with this part, please just drop an email
> to the list and I will do it for you.  Do not let this minor step be an
> impediment to contributing to Twisted.
>

My _major_ impediments are 2 and 6 years old... :)  The above is at most a
_minor_ impediment.  But even minor impediments can drive away new
developers, which I assume is not what we want.

Presumably you could use Mercurial with the hggit plugin against a git
>> repo, but you can't use it directly against the SVN repo, as it has a bad
>> commit in it that hgsubversion totally chokes on:
>> https://bitbucket.org/durin42/hgsubversion/issue/350
>>
>
> Sadness.  Hopefully this renewed attention will get the mercurial folks to
> fix this bug sooner?  Thanks for filing it.
>

De nada...it was entirely self-interest-driven though. :)

>
> Trac has never really bothered me that much. Yes, occasionally it will do
> something stupid, and it's...not fast, but I guess I'm just used to the
> pain.  I'm looking forward to Frack, though.
>
>
> Great, glad to hear it.
>
> By the way, if you've been shying away because it's slow, you should know
> that we did recently fix a major performance problem with the website.
>  Bots were running amok on some very CPU and memory intensive requests, and
> robots.txt was not deployed correctly so it wasn't reducing any of the
> traffic as it should have.  At the most recent sprint nobody complained
> about being unable to work because of the website falling over, which
> indicates that some of our more dire problems are now under control.
>
> -glyph
>

I haven't noticed any real problems with it since the grand trac revamp a
couple years ago, when Twisted's Trac instance became mostly stable.
 Granted I'm not in there every day like some are...

--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/ea949c84/attachment.html>

From glyph at twistedmatrix.com  Mon Oct 22 18:45:09 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 22 Oct 2012 17:45:09 -0700
Subject: [Twisted-Python] git repo maintenance
In-Reply-To: <CA+U=zK3pUjbGoq1uuXo0xT9dGuLygQ_HKF2J1-oAApw7o=O7yQ@mail.gmail.com>
References: <CAFJQhU6b4vh=KKFUb4SAxWe+mamsFpas568kdnx5tx5PtSxyHg@mail.gmail.com>
	<CAE_Hg6YJnPTRT-756VyJpBYCTQ=i8T6Ny7RBrJt4hGHD0_dgMg@mail.gmail.com>
	<21E2811B-6E0C-47F4-9CD2-D9FC81ECEC4C@gmail.com>
	<20121021183029.30349.475980420.divmod.xquotient.71@localhost6.localdomain6>
	<CAFJQhU5Qf9usOK+TxnGjGX04DF25oWWCUnHw-1kTEtsORtDxNg@mail.gmail.com>
	<2542597B-A1EE-4333-BD63-9CD54C29FB23@twistedmatrix.com>
	<CA+U=zK1htddDFsjoQ7ciaoruKuuMK_M0E9L6gJ=vQOEiLLGvow@mail.gmail.com>
	<176D327E-FA4F-4774-BA32-D56A83EDA73A@twistedmatrix.com>
	<CA+U=zK3pUjbGoq1uuXo0xT9dGuLygQ_HKF2J1-oAApw7o=O7yQ@mail.gmail.com>
Message-ID: <60369106-22E6-4BF2-9DDA-EF9B3EC346C7@twistedmatrix.com>


On Oct 22, 2012, at 4:54 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Mon, Oct 22, 2012 at 2:22 PM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> On Oct 22, 2012, at 10:53 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>> 
>> On Sun, Oct 21, 2012 at 11:05 PM, Glyph <glyph at twistedmatrix.com> wrote:
>> 
>> For what it's worth, I haven't authored a branch for Twisted with SVN in the last 3 years.  I use Bazaar almost exclusively and I get all the fun tools one generally associates with a DVCS, including offline history and a nice graphical revision viewer.  (One reason I am concerned about migrating to Git is that this will stop working; in my opinions, Git's offline GUI tools are far worse than Bazaar's - almost as much worse as Launchpad's source browser is than Github.)
>> 
>> I really wish I could figure out how to do this.  The one page on the wiki helps a bit, but is insufficient for those not already familiar with bzr (like me).  I've tried setting this up a couple of times, and I always end up just giving up on it.
> 
> Let me keep it super short and sweet for you:
> 
> C:\PROJEC~1> bzr branch http://svn.twistedmatrix.com/bzr/Twisted/trunk Twisted
> C:\PROJEC~1> cd Twisted
> 
> as many times as desired,
> 
> C:\PROJEC~1\TWISTED> hack hack hack
> C:\PROJEC~1\TWISTED> C:\python27\python.exe bin\trial twisted
> C:\PROJEC~1\TWISTED> bzr commit
> 
> Review time!
> 
> C:\PROJEC~1\TWISTED> bzr send -o - > my.patch
> 
> Stick my.patch on a ticket and you're good to go.  No need for combinator, or virtualenv, or subversion (not even bzr-svn, we did that part for you), or even a C compiler, assuming the feature you're working on doesn't need one.
> 
> If any of this isn't covered in the wiki page then please update it.  And please feel free to ask more questions - if specific version control or workflow issues are preventing anyone from working on Twisted then it is definitely on-topic for this list and I will be happy to provide answers and update development documentation.
> 
> 
> See that should totally be on a wiki page someplace.
> 
> I'd be happy to put it up there, but I don't have edit permissions on that page (or any of them?) apparently...

You're a trac admin now.  Enjoy; don't mess anything up too bad.

>  
>> (and no I don't recall exactly why, except for the one time when installing bzr on windows hosed my machine and made it unbootable...not Twisted's fault of course).
> 
> Can we just agree that you had a virus and that this had nothing to do with anything in this thread?  Even if that's not true I think it might be long-term more mentally healthy for you to believe :-)
> 
> 
> Actually I know exactly why this happened, and it's because Windows has a hard limit on the number of "icon overlays" you can add to Explorer.  I installed TortoiseBzr along with bzr, and went over that limit.  This by itself is not such a big deal, but it turns out that the failure behavior of this particular issue is NOT BOOTING ANY MORE. (stupid Windows)
> 
> (FYI, I've since installed bzr again, and have had no similar problems.)
> 
> (also FYI, I haven't had a virus/spyware on a windows machine that I owned in more than 10 years...<knock on wood>...the trick is renaming the iexplore.exe executable...)
> 
> But aside from that, the couple of times I've tried messing around with bzr I end up going in circles in their documentation, can't decide what I should be doing, decide I don't have time to mess with it and just go back to SVN (which is painful).  Of course by that time I've usually gotten distracted and I never finish whatever it was I was working on...
> 
> Mostly these days I just bang my head against translating the Lore docs into Sphinx (yes, I'm _still_ working on that).

Glad to hear this is still moving along, however glacially.

>> Unless someone applied my patch, Combinator won't work on Windows.  Also, since the great Divmod site meltdown, there's not good instructions on how to use it (aside from the wayback machine, which is what I've been using).
>> 
>> I'd never heard of svnmerge.py until you mentioned it.  Are there any instructions on how to use it with Twisted?  I'm not finding any, and I'm reluctant to experiment since Twisted has a very specific way on interacting with the SVN repo.
> 
> I guess I should test this out myself at least once, but my understanding is that you just do svnmerge.py --bidirectional -S the-branch-you-want-to-merge in trunk.  You can test this out for yourself though, since svnmerge.py is loudly advertised as "commit-free": you always have to do the commit yourself.
> 
> More info here: <http://www.orcaware.com/svn/wiki/Svnmerge.py>.
> 
> 
> Hmmm...interesting.
>  
> If we can ever upgrade to a version of SVN on the server that supports merge-tracking, the need for either of these tools will go away since a plain 'svn merge ../branches/branchname' will do the right thing.  Any volunteer sysadmins want to take the opportunity to crawl out of the woodwork?  (Please?)
> 
> 
> I had no idea that Twisted was still using such an old version.  I was under the impression that the hackery that Combinator used was incompatible with the new merge tracking and that's why it wasn't being used (because it would screw up those still using Combinator...this assumes there are any).  If that's not true, perhaps I can take a look, though I likely wouldn't be able to devote any serious time to it until at least Mid-November.

Nope, Combinator will keep working just fine if we upgrade.  Something to do with the subversion database itself, I think.... I don't know the details.  I really don't want to get sucked into maintaining that part of the infrastructure; anyone who would agrees with me and would like to keep me focused on the parts of Twisted which actually need my particular skills and knowledge (documentation for Deferreds, especially cancellation; Tubes, reactor improvements) would be advised to volunteer :).

> But again: if you have trouble with this part, please just drop an email to the list and I will do it for you.  Do not let this minor step be an impediment to contributing to Twisted.
> 
> My _major_ impediments are 2 and 6 years old... :)  The above is at most a _minor_ impediment.  But even minor impediments can drive away new developers, which I assume is not what we want.

Actually, we have tons of patches in the queue to review.  The main thing right now is not attracting new developers, but convincing developers who are already active in the project to do code review.  If every developer with a commit bit did one code review every week, I believe we'd be in great shape right now in terms of both the number of features being added, bugs being fixed, and the experience of the average new contributor.

Of course, that would itself attract more contributors until we reached the equilibrium of tickets hanging out for months with no reviews again ;-).  But we'd be getting hundreds more tickets into a state where they can make progress.

I think we can all agree, though, that the most frustrating part of this whole process is the waiting.  If code reviews were all instantaneous, it would be a lot less grating to have to deal with our respective pet peeves in the version control or ticket tracking infrastructure.

So please, if you're qualified to do code reviews for Twisted, hop on #twisted-dev and try to do just one a week.  It would make a _huge_ difference.

>> Presumably you could use Mercurial with the hggit plugin against a git repo, but you can't use it directly against the SVN repo, as it has a bad commit in it that hgsubversion totally chokes on: https://bitbucket.org/durin42/hgsubversion/issue/350 
> 
> Sadness.  Hopefully this renewed attention will get the mercurial folks to fix this bug sooner?  Thanks for filing it.
> 
> De nada...it was entirely self-interest-driven though. :)

Let's hope it pays off.

>> 
>> Trac has never really bothered me that much. Yes, occasionally it will do something stupid, and it's...not fast, but I guess I'm just used to the pain.  I'm looking forward to Frack, though.
> 
> Great, glad to hear it.
> 
> By the way, if you've been shying away because it's slow, you should know that we did recently fix a major performance problem with the website.  Bots were running amok on some very CPU and memory intensive requests, and robots.txt was not deployed correctly so it wasn't reducing any of the traffic as it should have.  At the most recent sprint nobody complained about being unable to work because of the website falling over, which indicates that some of our more dire problems are now under control.
> 
> -glyph
> 
> I haven't noticed any real problems with it since the grand trac revamp a couple years ago, when Twisted's Trac instance became mostly stable.  Granted I'm not in there every day like some are...

Well, personally, I can tell you it's way better than it was a few months ago ;-).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121022/8b16923b/attachment.html>

From johnaherne at rocs.co.uk  Tue Oct 23 02:23:47 2012
From: johnaherne at rocs.co.uk (John Aherne)
Date: Tue, 23 Oct 2012 09:23:47 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
Message-ID: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>

I have been looking at running some twisted programs as a windows service.

So in the end I took a copy of twistd.py and adapted it to load my tac file
and run it as a windows service.

Of course the windows service will run it in a separate thread.

I now have it running on XP, 2003 Server Twisted 10 and 12 and it all
seemed fine.

However when I install it on Windows 7 I get an error

2012-10-23 07:54:49+0100 [-] Unhandled Error
Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 413,
in fireEvent
    DeferredList(beforeResults).addCallback(self._continueFiring)
  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 297,
in addCallback
    callbackKeywords=kw)
  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 286,
in addCallbacks
    self._runCallbacks()
  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 542,
in _runCallbacks
    current.result = callback(current.result, *args, **kw)
--- <exception caught here> ---
  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 426,
in _continueFiring
    callable(*args, **kwargs)
  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 1153,
in _reallyStartRunning
    self._handleSignals()
  File "C:\Python27\lib\site-packages\twisted\internet\posixbase.py", line
277, in _handleSignals
    _SignalReactorMixin._handleSignals(self)
  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 1118,
in _handleSignals
    signal.signal(signal.SIGINT, self.sigInt)
exceptions.ValueError: signal only works in main thread


Looking around it would seem I need to tell the reactor
 'installsignalhandlers=0'. I am not sure if I should do this with windows
or not.

Has anyone got twistd.py to run as a service on windows because I would be
glad to know what other people have done to solve the problem.

Thanks for any info.

*John Aherne*
*
*
*
*
*
*
*www.rocs.co.uk
*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121023/b048786e/attachment.html>

From lacrima.maxim at gmail.com  Tue Oct 23 02:43:01 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Tue, 23 Oct 2012 11:43:01 +0300
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
Message-ID: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>

Hi!

I tried to run twisted test suite. And there are some errors:
http://pastebin.com/em3NTN2B

Also tests in "twisted.test.test_udp" took too much time to run (trial
hanged for a couple of minutes on these tests).

I wonder if this is something wrong with my Twisted installation.

Thank you.

-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121023/47ec410e/attachment.html>

From lacrima.maxim at gmail.com  Tue Oct 23 03:11:52 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Tue, 23 Oct 2012 12:11:52 +0300
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
In-Reply-To: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
Message-ID: <CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>

I believe in my previous post I launched tests incorrectly (I use twisted
with virtualenv, but I didn't activate it).

Now I run `trial twisted` in the activated virtualenv... But there are
still errors:
http://pastebin.com/6065dX6a

Thanks

On 23 October 2012 11:43, Maxim Lacrima <lacrima.maxim at gmail.com> wrote:

> Hi!
>
> I tried to run twisted test suite. And there are some errors:
> http://pastebin.com/em3NTN2B
>
> Also tests in "twisted.test.test_udp" took too much time to run (trial
> hanged for a couple of minutes on these tests).
>
> I wonder if this is something wrong with my Twisted installation.
>
> Thank you.
>
> --
> with regards,
> Maxim
>



-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121023/2d0e734b/attachment.html>

From itamar at futurefoundries.com  Tue Oct 23 05:10:32 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 23 Oct 2012 07:10:32 -0400
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
In-Reply-To: <CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
	<CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
Message-ID: <CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>

On Tue, Oct 23, 2012 at 5:11 AM, Maxim Lacrima <lacrima.maxim at gmail.com>wrote:

> I believe in my previous post I launched tests incorrectly (I use twisted
> with virtualenv, but I didn't activate it).
>
> Now I run `trial twisted` in the activated virtualenv... But there are
> still errors:
> http://pastebin.com/6065dX6a
>

Which operating system, and what sort of environment? The UDP failures
suggest some sort of firewalling.

-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ — Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121023/e5d803cc/attachment.html>

From lacrima.maxim at gmail.com  Tue Oct 23 05:31:16 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Tue, 23 Oct 2012 14:31:16 +0300
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
In-Reply-To: <CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
	<CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
	<CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>
Message-ID: <CAKef57PN_Sjx44Jof7_3OYp0ps_GpeKdp+c0rd4tzVBt8eaxig@mail.gmail.com>

>
>
> Which operating system, and what sort of environment? The UDP failures
> suggest some sort of firewalling.
>

CentOS 6.2.

I use Twisted inside virtualenv http://www.virtualenv.org/en/latest/

Currently, Twisted is the only package installed inside virtual
environment, where I run tests.

I don't know much about my global environment, since I am on corporate
machine and have limited privileges.

-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121023/41c8074c/attachment.html>

From exarkun at twistedmatrix.com  Tue Oct 23 05:41:19 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 23 Oct 2012 11:41:19 -0000
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
Message-ID: <20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>

On 08:23 am, johnaherne at rocs.co.uk wrote:
>I have been looking at running some twisted programs as a windows 
>service.
>
>So in the end I took a copy of twistd.py and adapted it to load my tac 
>file
>and run it as a windows service.
>
>Of course the windows service will run it in a separate thread.
>
>I now have it running on XP, 2003 Server Twisted 10 and 12 and it all
>seemed fine.

To start off with, I'll point out that this isn't a supported mode of 
running Twisted (which I'm sure you noticed already :).

This feature has been requested several times and worked on by a couple 
people, but not quite to the point of completion.

Here's a related ticket:

    http://twistedmatrix.com/trac/ticket/4073

There's also some more code in the sandbox:

    http://twistedmatrix.com/trac/browser/sandbox/moonfallen

BuildBot also has some code, though I'm not exactly sure where it is. 
It would be really great for someone to actually complete and generalize 
one or more of these initial attempts so that Windows service 
integration could be a real, working feature. :)
>However when I install it on Windows 7 I get an error
>
>2012-10-23 07:54:49+0100 [-] Unhandled Error
>Traceback (most recent call last):
>  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 
>413,
>in fireEvent
>    DeferredList(beforeResults).addCallback(self._continueFiring)
>  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 
>297,
>in addCallback
>    callbackKeywords=kw)
>  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 
>286,
>in addCallbacks
>    self._runCallbacks()
>  File "C:\Python27\lib\site-packages\twisted\internet\defer.py", line 
>542,
>in _runCallbacks
>    current.result = callback(current.result, *args, **kw)
>--- <exception caught here> ---
>  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 
>426,
>in _continueFiring
>    callable(*args, **kwargs)
>  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 
>1153,
>in _reallyStartRunning
>    self._handleSignals()
>  File "C:\Python27\lib\site-packages\twisted\internet\posixbase.py", 
>line
>277, in _handleSignals
>    _SignalReactorMixin._handleSignals(self)
>  File "C:\Python27\lib\site-packages\twisted\internet\base.py", line 
>1118,
>in _handleSignals
>    signal.signal(signal.SIGINT, self.sigInt)
>exceptions.ValueError: signal only works in main thread
>
>
>Looking around it would seem I need to tell the reactor
>'installsignalhandlers=0'. I am not sure if I should do this with 
>windows
>or not.

Yes, you'll need to do that.  It probably won't even break child process 
support (although other aspects of Windows services probably will). 
Notice it's failing on installing a SIGINT handler - ie, a Control-C 
handler.  Since you want the thing to run as a service, you probably 
aren't very interested in having Control-C do anything.

Jean-Paul
>Has anyone got twistd.py to run as a service on windows because I would 
>be
>glad to know what other people have done to solve the problem.
>
>Thanks for any info.
>
>*John Aherne*



From exarkun at twistedmatrix.com  Tue Oct 23 05:44:22 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 23 Oct 2012 11:44:22 -0000
Subject: [Twisted-Python] Running twisted test suite produces errors and
 hangs
In-Reply-To: <CAKef57PN_Sjx44Jof7_3OYp0ps_GpeKdp+c0rd4tzVBt8eaxig@mail.gmail.com>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
	<CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
	<CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>
	<CAKef57PN_Sjx44Jof7_3OYp0ps_GpeKdp+c0rd4tzVBt8eaxig@mail.gmail.com>
Message-ID: <20121023114422.4518.1023961593.divmod.xquotient.32@localhost6.localdomain6>

On 11:31 am, lacrima.maxim at gmail.com wrote:
>>
>>
>>Which operating system, and what sort of environment? The UDP failures
>>suggest some sort of firewalling.
>
>CentOS 6.2.

RHEL and derivatives typically seem to, by default, include a firewall 
configuration that drops multicast traffic, so perhaps that's what 
you're seeing.

Jean-Paul
>I use Twisted inside virtualenv http://www.virtualenv.org/en/latest/
>
>Currently, Twisted is the only package installed inside virtual
>environment, where I run tests.
>
>I don't know much about my global environment, since I am on corporate
>machine and have limited privileges.
>
>--
>with regards,
>Maxim



From itamar at futurefoundries.com  Tue Oct 23 07:35:48 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Tue, 23 Oct 2012 09:35:48 -0400
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
In-Reply-To: <20121023114422.4518.1023961593.divmod.xquotient.32@localhost6.localdomain6>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
	<CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
	<CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>
	<CAKef57PN_Sjx44Jof7_3OYp0ps_GpeKdp+c0rd4tzVBt8eaxig@mail.gmail.com>
	<20121023114422.4518.1023961593.divmod.xquotient.32@localhost6.localdomain6>
Message-ID: <CAOp9P3remHxkthzwrw0AUz3oyh55TMGnpX4YMAnuMYd__VUybQ@mail.gmail.com>

On Tue, Oct 23, 2012 at 7:44 AM, <exarkun at twistedmatrix.com> wrote:

> RHEL and derivatives typically seem to, by default, include a firewall
> configuration that drops multicast traffic, so perhaps that's what
> you're seeing.
>

http://twistedmatrix.com/trac/wiki/ContinuousIntegration/TestSlaveConfigurationhas
some more details on this.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121023/48bca4b9/attachment.html>

From tom.prince at ualberta.net  Tue Oct 23 11:09:07 2012
From: tom.prince at ualberta.net (Tom Prince)
Date: Tue, 23 Oct 2012 11:09:07 -0600
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
Message-ID: <87r4op5d58.fsf@hermes.hocat.ca>

As JP said, buildbot has some code for this at
https://github.com/buildbot/buildbot/blob/master/master/contrib/windows/buildbot_service.py



From andrewfr_ice at yahoo.com  Tue Oct 23 11:31:05 2012
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 23 Oct 2012 10:31:05 -0700 (PDT)
Subject: [Twisted-Python] Silly txoauth with Twisted Client Question
Message-ID: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>

Hi Folks:

I am implementing a client that uses Twisted. I have to use oauth 2.0. I have started to read up on Oauth and Twisted cred.  I noticed that there is a txoauth. For now, my client is of the "it can't keep secrets" nature as described by Google. 

From my understanding Twisted Cred is used for implementing servers. What is used for clients? Or do I roll my own headers and implement the handshakes myself?

Cheers,
Andrew

P.S - I just started using Agent and CookieAgent (as opposed to getPage). Wow!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121023/13111b07/attachment.html>

From lacrima.maxim at gmail.com  Wed Oct 24 00:38:14 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Wed, 24 Oct 2012 09:38:14 +0300
Subject: [Twisted-Python] Running twisted test suite produces errors and
	hangs
In-Reply-To: <CAOp9P3remHxkthzwrw0AUz3oyh55TMGnpX4YMAnuMYd__VUybQ@mail.gmail.com>
References: <CAKef57Oi=iR5KRm_rpJ_DkXnZj7eN1YGJ7OX2UmNfqFB05872g@mail.gmail.com>
	<CAKef57PXtNJrB9HBAjS3o-wrWrVTJs137wq1LXaHTz+3-BAD0w@mail.gmail.com>
	<CAOp9P3p+hnc3tZo8=_Gg24mkk-U0-1pSnaiKpqUEuWfsMMJ_1A@mail.gmail.com>
	<CAKef57PN_Sjx44Jof7_3OYp0ps_GpeKdp+c0rd4tzVBt8eaxig@mail.gmail.com>
	<20121023114422.4518.1023961593.divmod.xquotient.32@localhost6.localdomain6>
	<CAOp9P3remHxkthzwrw0AUz3oyh55TMGnpX4YMAnuMYd__VUybQ@mail.gmail.com>
Message-ID: <CAKef57N5Y1KQERhFyj4tsGA7cemYyEoWwF-uT8g7xDKT_Q39HQ@mail.gmail.com>

Thanks for your assistance!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121024/3724c38c/attachment.html>

From johnaherne at rocs.co.uk  Wed Oct 24 01:43:15 2012
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 24 Oct 2012 08:43:15 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
Message-ID: <CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>

> To start off with, I'll point out that this isn't a supported mode of
> running Twisted (which I'm sure you noticed already :).
>
> This feature has been requested several times and worked on by a couple
> people, but not quite to the point of completion.
>
> Here's a related ticket:
>
>     http://twistedmatrix.com/trac/ticket/4073
>
> There's also some more code in the sandbox:
>
>     http://twistedmatrix.com/trac/browser/sandbox/moonfallen
>
> BuildBot also has some code, though I'm not exactly sure where it is.
> It would be really great for someone to actually complete and generalize
> one or more of these initial attempts so that Windows service
> integration could be a real, working feature. :)
>
>
> Yes, you'll need to do that.  It probably won't even break child process
> support (although other aspects of Windows services probably will).
> Notice it's failing on installing a SIGINT handler - ie, a Control-C
> handler.  Since you want the thing to run as a service, you probably
> aren't very interested in having Control-C do anything.
>
> Jean-Paul
>
> Thanks for the pointers.

Some of the code seems pretty ancient and for setting up the service I
think the win32com stuff from Mark Hammond seems to have all covered.

I have started to look around twisted to see where I can stop the signal
handlers being installed.. I have landed in postApplication where
startReactor is called, but I have yet to work out how I can set
installSignalHandlers=False.

Am I right in assuming this is where I should be looking.

I don't have much idea about signalhandlers but I assume the one I am
interested in here is to stop ControlC. The others might need to stay on.
I'm not too sure about that without knowing more about windows services and
how they react to these signals.

Thanks for the pointers

John Aherne

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
*John Aherne*
*
*
*
*
*
*
*www.rocs.co.uk
*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121024/e77608ee/attachment.html>

From johnaherne at rocs.co.uk  Wed Oct 24 01:53:04 2012
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 24 Oct 2012 08:53:04 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <87r4op5d58.fsf@hermes.hocat.ca>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<87r4op5d58.fsf@hermes.hocat.ca>
Message-ID: <CAKmUHjYRuA6xQsO1+wRFB=93sW_fR7bj1AKxm178sfeV1AwBhg@mail.gmail.com>

On Tue, Oct 23, 2012 at 6:09 PM, Tom Prince <tom.prince at ualberta.net> wrote:

> As JP said, buildbot has some code for this at
>
> https://github.com/buildbot/buildbot/blob/master/master/contrib/windows/buildbot_service.py
>



-- 
*John Aherne*
*
*
*
*
*
*
*www.rocs.co.uk
*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121024/71de5619/attachment.html>

From _ at lvh.cc  Wed Oct 24 02:24:47 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 24 Oct 2012 10:24:47 +0200
Subject: [Twisted-Python] Silly txoauth with Twisted Client Question
In-Reply-To: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>
References: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>
Message-ID: <CAE_Hg6Z2WTc1bYwoh3BBRWFpKg2_RgVD=jm1KQ3uZf_ox4SX0g@mail.gmail.com>

txoauth is something I started, then I realized I really hate oauth, then
it was "adopted" by simplegeo who afaik proceeded to not do anything with
it, and then I readopted it on github. There's not much work on it, but
what's there has a complete test suite.

ISTR glyph at one point describing an entire three-party oauth interaction
to me on the mailing list in Cred terms. If that knowledge didn't make it
into txoauth as it stands to day, perhaps it could still be dug up ;)

I had a hard time understanding it at first as well, but Cred'd work just
fine for the client too. The way it would work, IIRC, is that you run cred
on your client. The credentials checker is simply something that makes
remote requests. The realm returns, as always, an authenticated client.
Presumably, that object would compose an Agent to do what it needs to do.

Best of luck! I haven't touched oauth in years, but hopefully it'll work
out for you.

On Tue, Oct 23, 2012 at 7:31 PM, Andrew Francis <andrewfr_ice at yahoo.com>wrote:

> Hi Folks:
>
> I am implementing a client that uses Twisted. I have to use oauth 2.0. I
> have started to read up on Oauth and Twisted cred.  I noticed that there is
> a txoauth. For now, my client is of the "it can't keep secrets" nature as
> described by Google.
>
> From my understanding Twisted Cred is used for implementing servers. What
> is used for clients? Or do I roll my own headers and implement the
> handshakes myself?
>
> Cheers,
> Andrew
>
> P.S - I just started using Agent and CookieAgent (as opposed to getPage).
> Wow!
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121024/21452d9c/attachment.html>

From p.mayers at imperial.ac.uk  Wed Oct 24 03:01:51 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 24 Oct 2012 10:01:51 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
	<CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
Message-ID: <5087AE7F.6030504@imperial.ac.uk>

On 10/24/2012 08:43 AM, John Aherne wrote:

> I don't have much idea about signalhandlers but I assume the one I am
> interested in here is to stop ControlC. The others might need to stay
> on. I'm not too sure about that without knowing more about windows
> services and how they react to these signals.

No, you need more than that removed. Otherwise you get a "signal" (can't 
remember which - SIGBRK?) when the logged-in workstation logs off, which 
terminates your twisted services. Very confusing.

[FWIW we don't use twistd/.tac on windows]



From adi at roiban.ro  Wed Oct 24 03:45:23 2012
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 24 Oct 2012 12:45:23 +0300
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <87r4op5d58.fsf@hermes.hocat.ca>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<87r4op5d58.fsf@hermes.hocat.ca>
Message-ID: <CAFycZ9cyUXNyF_bvPWMjGYQ3q0=xmZyqok-qyMTZvJfOoEDhLQ@mail.gmail.com>

On 23 October 2012 20:09, Tom Prince <tom.prince at ualberta.net> wrote:
> As JP said, buildbot has some code for this at
> https://github.com/buildbot/buildbot/blob/master/master/contrib/windows/buildbot_service.py
>

Just in case it might be of any help.

I am using something based on this code:
http://code.activestate.com/recipes/551780/

The code with Twisted reactor is here:

https://github.com/chevah/commons/blob/master/commons/compat/nt_service.py

It does not use .tac files. 'initialize' is used for creating the
services, 'start' for start listening and 'stop' for stop listening.

Cheers
-- 
Adi Roiban



From msc at contact.de  Wed Oct 24 05:33:26 2012
From: msc at contact.de (Michael Schlenker)
Date: Wed, 24 Oct 2012 13:33:26 +0200
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <5087AE7F.6030504@imperial.ac.uk>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
	<CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
	<5087AE7F.6030504@imperial.ac.uk>
Message-ID: <5087D206.80206@contact.de>

Am 24.10.2012 11:01, schrieb Phil Mayers:
> On 10/24/2012 08:43 AM, John Aherne wrote:
> 
>> I don't have much idea about signalhandlers but I assume the one I am
>> interested in here is to stop ControlC. The others might need to stay
>> on. I'm not too sure about that without knowing more about windows
>> services and how they react to these signals.
> 
> No, you need more than that removed. Otherwise you get a "signal" (can't 
> remember which - SIGBRK?) when the logged-in workstation logs off, which 
> terminates your twisted services. Very confusing.

There are no signals on windows.

But what you are talking about is the SetConsoleCtrlHandler function.
http://docs.activestate.com/activepython/2.4/pywin32/win32api__SetConsoleCtrlHandler_meth.html
http://msdn.microsoft.com/en-us/library/windows/desktop/ms686016%28v=vs.85%29.aspx

Thats relevant if your process has a console, e.g. is not a GUI app.
(pythonw.exe vs. python.exe). If you run as a GUI app you might get a
WM_QUERYENDSESSION or similar message.

You get a CTRL_LOGOFF_EVENT when a user on the machine logs off and you
run as a subprocess of a service and need to ignore it. The service
itself should deal with this already.

Michael


-- 
Michael Schlenker
Software Architect

CONTACT Software GmbH           Tel.:   +49 (421) 20153-80
Wiener Straße 1-3               Fax:    +49 (421) 20153-41
28359 Bremen
http://www.contact.de/          E-Mail: msc at contact.de

Sitz der Gesellschaft: Bremen
Geschäftsführer: Karl Heinz Zachries, Ralf Holtgrefe
Eingetragen im Handelsregister des Amtsgerichts Bremen unter HRB 13215



From p.mayers at imperial.ac.uk  Wed Oct 24 06:14:19 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 24 Oct 2012 13:14:19 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <5087D206.80206@contact.de>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
	<CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
	<5087AE7F.6030504@imperial.ac.uk> <5087D206.80206@contact.de>
Message-ID: <5087DB9B.90305@imperial.ac.uk>

n 24/10/12 12:33, Michael Schlenker wrote:
> Am 24.10.2012 11:01, schrieb Phil Mayers:
>> On 10/24/2012 08:43 AM, John Aherne wrote:
>>
>>> I don't have much idea about signalhandlers but I assume the one I am
>>> interested in here is to stop ControlC. The others might need to stay
>>> on. I'm not too sure about that without knowing more about windows
>>> services and how they react to these signals.
>>
>> No, you need more than that removed. Otherwise you get a "signal" (can't
>> remember which - SIGBRK?) when the logged-in workstation logs off, which
>> terminates your twisted services. Very confusing.
>
> There are no signals on windows.

But Python for windows certain calls "signal()" handlers in response to 
certain events, in certain configurations. Whether they're actually 
"signals" is kind of moot, though interesting.

>
> But what you are talking about is the SetConsoleCtrlHandler function.
> http://docs.activestate.com/activepython/2.4/pywin32/win32api__SetConsoleCtrlHandler_meth.html
> http://msdn.microsoft.com/en-us/library/windows/desktop/ms686016%28v=vs.85%29.aspx
>
> Thats relevant if your process has a console, e.g. is not a GUI app.
> (pythonw.exe vs. python.exe). If you run as a GUI app you might get a
> WM_QUERYENDSESSION or similar message.
>
> You get a CTRL_LOGOFF_EVENT when a user on the machine logs off and you
> run as a subprocess of a service and need to ignore it. The service
> itself should deal with this already.

Interesting.

I've just looked over the code we've got. It actually does something 
rather more involved than I'd first thought. Specifcally, the "ntsvc.py" 
code is pure-python, no Twisted. It actually runs the Twisted daemon as 
a sub-process, like this:

import os

class MyService(win32serviceutil.ServiceFramework):
      """NT Service."""

      _svc_name_ = "opimport-wrap"
      _svc_display_name_ = "Marval opimport wrapper"

      def SvcDoRun(self):
          self.childServer = Popen([
            "c:/python25/pythonw.exe",SCRIPT,"svc"
          ])
          self.childServer.wait()

...and the Twisted script does this:


def main():
   args = sys.argv[1:]
   if args and args[0]=='svc':
     as_service = True
   else:
     as_service = False

   ...

   if as_service:
     log.startLogging(some_log_observer)
     reactor.run(installSignalHandlers=0)
   else:
     log.startLogging(sys.stderr)
     reactor.run()

My memory is hazy on this, but if I recall correctly the main reason it 
works this way is that I can execute the twisted script directly from 
the console (for debugging) or via the service wrapper.

Are you suggesting that if I change that subprocess to use "python.exe" 
versus "pythonw.exe" I would not need to disable the signal handlers?

Cheers,
Phil



From msc at contact.de  Wed Oct 24 10:14:33 2012
From: msc at contact.de (Michael Schlenker)
Date: Wed, 24 Oct 2012 18:14:33 +0200
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <5087DB9B.90305@imperial.ac.uk>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
	<CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
	<5087AE7F.6030504@imperial.ac.uk> <5087D206.80206@contact.de>
	<5087DB9B.90305@imperial.ac.uk>
Message-ID: <508813E9.7050106@contact.de>

Am 24.10.2012 14:14, schrieb Phil Mayers:
> n 24/10/12 12:33, Michael Schlenker wrote:
>> Am 24.10.2012 11:01, schrieb Phil Mayers:
>>> On 10/24/2012 08:43 AM, John Aherne wrote:
>>
>> But what you are talking about is the SetConsoleCtrlHandler function.
>> http://docs.activestate.com/activepython/2.4/pywin32/win32api__SetConsoleCtrlHandler_meth.html
>>
>> http://msdn.microsoft.com/en-us/library/windows/desktop/ms686016%28v=vs.85%29.aspx
>>
>>
>> Thats relevant if your process has a console, e.g. is not a GUI app.
>> (pythonw.exe vs. python.exe). If you run as a GUI app you might get a
>> WM_QUERYENDSESSION or similar message.
>>
>> You get a CTRL_LOGOFF_EVENT when a user on the machine logs off and you
>> run as a subprocess of a service and need to ignore it. The service
>> itself should deal with this already.
> 
> Interesting.
> 
> I've just looked over the code we've got. It actually does something
> rather more involved than I'd first thought. Specifcally, the "ntsvc.py"
> code is pure-python, no Twisted. It actually runs the Twisted daemon as
> a sub-process, like this:
> 
> import os
> 
> class MyService(win32serviceutil.ServiceFramework):
>      """NT Service."""
> 
>      _svc_name_ = "opimport-wrap"
>      _svc_display_name_ = "Marval opimport wrapper"
> 
>      def SvcDoRun(self):
>          self.childServer = Popen([
>            "c:/python25/pythonw.exe",SCRIPT,"svc"
>          ])
>          self.childServer.wait()
this looks dubious, are you sure you can still react to ServiceManager
actions like 'Stop' or 'Query' this way, isn't this wait() blocking?

> 
> My memory is hazy on this, but if I recall correctly the main reason it
> works this way is that I can execute the twisted script directly from
> the console (for debugging) or via the service wrapper.
> 
> Are you suggesting that if I change that subprocess to use "python.exe"
> versus "pythonw.exe" I would not need to disable the signal handlers?
> 

Won't probably help, not sure though.

If you ever import the 'time' module, as Python registers a control
handler there, to allow time.sleep() to wake up when ctrl-c is pressed
or the system shuts down, so i assume it has a console anyway.

from timemodule.c
#ifdef MS_WINDOWS
    /* Helper to allow interrupts for Windows.
       If Ctrl+C event delivered while not sleeping
       it will be ignored.
    */
    main_thread = PyThread_get_thread_ident();
    hInterruptEvent = CreateEvent(NULL, TRUE, FALSE, NULL);
    SetConsoleCtrlHandler( PyCtrlHandler, TRUE);
#endif /* MS_WINDOWS */

The usual workaround to keep a service subprocess with a console alive
is to simply register your own ConsoleHandler to override the default
(which is ExitProcess()) and return TRUE, so the default handler doesn't
run.

If you spawn a lot of subprocess (around 100 at a time) you will
additionally have fun with random crashes once you hit the DesktopHeap
Memory limit.

Michael

-- 
Michael Schlenker
Software Architect

CONTACT Software GmbH           Tel.:   +49 (421) 20153-80
Wiener Straße 1-3               Fax:    +49 (421) 20153-41
28359 Bremen
http://www.contact.de/          E-Mail: msc at contact.de

Sitz der Gesellschaft: Bremen
Geschäftsführer: Karl Heinz Zachries, Ralf Holtgrefe
Eingetragen im Handelsregister des Amtsgerichts Bremen unter HRB 13215



From p.mayers at imperial.ac.uk  Wed Oct 24 11:13:09 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 24 Oct 2012 18:13:09 +0100
Subject: [Twisted-Python] Running twistd and tac files as Windows service
In-Reply-To: <508813E9.7050106@contact.de>
References: <CAKmUHjYCurHzN1SfybP8Hfb61pKDArr11fLsbL_VfDHykseZxw@mail.gmail.com>
	<20121023114119.4518.813400477.divmod.xquotient.28@localhost6.localdomain6>
	<CAKmUHjYf2psy2Mch-=ZkExjxgfnabuHFbvgW8WfRebrWpb_F0Q@mail.gmail.com>
	<5087AE7F.6030504@imperial.ac.uk> <5087D206.80206@contact.de>
	<5087DB9B.90305@imperial.ac.uk> <508813E9.7050106@contact.de>
Message-ID: <508821A5.6030208@imperial.ac.uk>

On 24/10/12 17:14, Michael Schlenker wrote:

> this looks dubious, are you sure you can still react to ServiceManager

Yes.

> actions like 'Stop' or 'Query' this way, isn't this wait() blocking?

AIUI, the "svc" methods are called from various threads?

I didn't create this code; I cribbed it from somewhere, but this was a 
long time ago (since I avoid Windows for anything other than playing games).

> If you spawn a lot of subprocess (around 100 at a time) you will
> additionally have fun with random crashes once you hit the DesktopHeap
> Memory limit.

This entire Twisted process exists to spawn processes that can only be 
run under Windows. Fortunately, the app in particular is so crappy that 
if I ever get *close* to 100 processes, I'm sure the app will die well 
before pywin does ;o)



From dynamicgl at gmail.com  Wed Oct 24 21:48:31 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Thu, 25 Oct 2012 11:48:31 +0800
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
	<CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
	<5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>
Message-ID: <CABkOF6ROagF682mg-4eRCge-XiLY7HuZrRcby-AEFZChTstLow@mail.gmail.com>

On Mon, Oct 22, 2012 at 12:06 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Oct 20, 2012, at 7:56 PM, gelin yan <dynamicgl at gmail.com> wrote:
>
> "A pending operation is indicated when the function that started the
> operation returns *FALSE*, and the *GetLastError*<http://msdn.microsoft.com/en-us/library/windows/desktop/ms679360(v=vs.85).aspx> function
> returns *ERROR_IO_PENDING*. When an I/O operation is pending, the
> function that started the operation resets the *hEvent* member of the *
> OVERLAPPED* structure to the nonsignaled state. Then when the pending
> operation has been completed, the system sets the event object to the
> signaled state."
>
>   If we can know when event object is in the signaled state we definitely
> can use a queue directly. Any idea?
>
>
> Sounds like you're at the point where you should just try doing an
> implementation, and if it works and passes all the tests you can think of
> for it, submit it for code review.  Much more speculation without testing
> wouldn't be useful.
>
> Thanks for working on this!
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
Hi All

   Sorry for coming late. The day before yesterday, I dig out what happen
in that code. Actually, ERROR_IO_PENDING isn't the root of problem. The
problem is doWrite method might be triggered twice instead of once; in
particular, when trying to send a large chunks data whose size is bigger
then SEND_LIMIT, it will always happen.

    When doWrite being invoked twice, it means the same buffer data will be
sent twice. It is for sure that PB is unable to deserialize  these data and
finally it raise an exception, now, we can see connection lost.

    The solution is to make sure doWrite calling in order; hence I
introduce a new field named _doWriteCalling to detect whether doWrite call
is completed. (due to doWrite always post an event to IOCP, so once
_cbWrite get called, it means we can schedule another doWrite). If _cbWrite
isn't called, we simply re-schedule the doWrite by reactor.callLater.

    I attach a modified abstract.py here. You may put it in
 Path\twisted\internet\iocpreactor
and give it a try.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121025/2733f86f/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: abstract.py
Type: application/octet-stream
Size: 13358 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20121025/2733f86f/attachment-0002.obj>

From glyph at twistedmatrix.com  Wed Oct 24 23:03:29 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 24 Oct 2012 22:03:29 -0700
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <CABkOF6ROagF682mg-4eRCge-XiLY7HuZrRcby-AEFZChTstLow@mail.gmail.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
	<CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
	<5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>
	<CABkOF6ROagF682mg-4eRCge-XiLY7HuZrRcby-AEFZChTstLow@mail.gmail.com>
Message-ID: <67C0B44C-5F3D-4A93-B5FB-ED5B9063A439@twistedmatrix.com>


On Oct 24, 2012, at 8:48 PM, gelin yan <dynamicgl at gmail.com> wrote:

>     I attach a modified abstract.py here. You may put it in  Path\twisted\internet\iocpreactor
> and give it a try.

Hi Gelin,

Can you generate and attach a patch to the ticket, as per the instructions on <http://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch>, so that this work does not get lost?

If you can write some test cases, you may want to also submit the ticket for review.

Thanks!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121024/3f6fc58f/attachment.html>

From dynamicgl at gmail.com  Thu Oct 25 00:03:34 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Thu, 25 Oct 2012 14:03:34 +0800
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <67C0B44C-5F3D-4A93-B5FB-ED5B9063A439@twistedmatrix.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
	<CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
	<5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>
	<CABkOF6ROagF682mg-4eRCge-XiLY7HuZrRcby-AEFZChTstLow@mail.gmail.com>
	<67C0B44C-5F3D-4A93-B5FB-ED5B9063A439@twistedmatrix.com>
Message-ID: <CABkOF6S-BXf9u6WiqJb9AFjfShVDejY8jGHROK1J1u+DCRJ1hw@mail.gmail.com>

On Thu, Oct 25, 2012 at 1:03 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Oct 24, 2012, at 8:48 PM, gelin yan <dynamicgl at gmail.com> wrote:
>
>     I attach a modified abstract.py here. You may put it in
>  Path\twisted\internet\iocpreactor
> and give it a try.
>
>
> Hi Gelin,
>
> Can you generate and attach a patch to the ticket, as per the instructions
> on <http://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch>,
> so that this work does not get lost?
>
> If you can write some test cases, you may want to also submit the ticket
> for review.
>
> Thanks!
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
Hi Glyph

   Thanks for mentioning that. I never submitted any patch before so
probably I need to take some time to investigate how to do it.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121025/8a097045/attachment.html>

From lacrima.maxim at gmail.com  Thu Oct 25 03:18:31 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Thu, 25 Oct 2012 12:18:31 +0300
Subject: [Twisted-Python] Avoiding network when testing Perspective Broker
Message-ID: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>

Hi!

I am learning to develop TDD way. I want to create a server that
understands PB protocol. Initially I thought it would be a good idea to
avoid real network connections in my tests, so I tried to use
`proto_helpers.StringTransport`:

----------
import cStringIO
from twisted.spread import pb
from twisted.trial import unittest
from twisted.test import proto_helpers

class Document(pb.Root):

    def remote_convert(self, props):
        self.props = props


class DocTestCase(unittest.TestCase):

    def setUp(self):

        # set up server
        self.doc = Document()
        factory = pb.PBServerFactory(self.doc)
        self.broker = factory.buildProtocol(('127.0.0.1', 0))
        tr = proto_helpers.StringTransport()
        self.broker.makeConnection(tr)


        # this is what a client sends
        self.props = {'name': 'MyDoc',
                      'path': '/path/'}

        # prepare data
        serialized_props = self.broker.serialize(self.props)
        msg = ('message', 1, 'root', 'convert', 1,
               ['tuple', serialized_props], ['dictionary'])
        io = cStringIO.StringIO()
        self.broker._encode(msg, io.write)
        self.chunk = io.getvalue()

    def test_convert(self):
        # data arrived
        self.broker.dataReceived(self.chunk)

        self.assertEqual(self.props, self.doc.props)
----------

However, `Document.remote_convert` is never executed so the test above
fails. After debugging I discovered that `Broker._encode` produces
different results depending on whether `self.broker.makeConnection(tr)` is
called or not.

And I created a test case that shows a difference. Here `test_convert1`
succeeds while `test_convert2` fails:
----------
class DocTestCase(unittest.TestCase):

    def setUp(self):
        self.doc = Document()
        factory = pb.PBServerFactory(self.doc)
        self.broker = factory.buildProtocol(('127.0.0.1', 0))

        self.props = {'name': 'MyDoc',
                      'path': '/path/'}

        serialized_props = self.broker.serialize(self.props)
        self.msg = ('message', 1, 'root', 'convert', 1,
                    ['tuple', serialized_props], ['dictionary'])

    def test_convert1(self):
        self.broker.currentDialect = 'pb'
        self.broker.setPrefixLimit(64)
        self.broker.transport = proto_helpers.StringTransport()

        io = cStringIO.StringIO()
        self.broker._encode(self.msg, io.write)
        self.broker.dataReceived(io.getvalue())

        self.assertEqual(self.props, self.doc.props)

    def test_convert2(self):
        self.tr = proto_helpers.StringTransport()
        self.broker.makeConnection(self.tr)

        io = cStringIO.StringIO()
        self.broker._encode(self.msg, io.write)
        self.broker.dataReceived(io.getvalue())

        self.assertEqual(self.props, self.doc.props)
----------

I wonder what causes this behavior and, in general, if `StringTransport` is
suitable for testing PB protocol.

Thanks in advance. For your convenience I attached files with these test
cases.

-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121025/65bb7b1b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_pb.py
Type: application/octet-stream
Size: 1344 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20121025/65bb7b1b/attachment-0004.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_pb1.py
Type: application/octet-stream
Size: 1099 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20121025/65bb7b1b/attachment-0005.obj>

From kevin.horn at gmail.com  Thu Oct 25 09:11:53 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 25 Oct 2012 10:11:53 -0500
Subject: [Twisted-Python] Silly txoauth with Twisted Client Question
In-Reply-To: <CAE_Hg6Z2WTc1bYwoh3BBRWFpKg2_RgVD=jm1KQ3uZf_ox4SX0g@mail.gmail.com>
References: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>
	<CAE_Hg6Z2WTc1bYwoh3BBRWFpKg2_RgVD=jm1KQ3uZf_ox4SX0g@mail.gmail.com>
Message-ID: <CA+U=zK0q5auGufKMJ-cBbWq7bq6HX82dCx+cimT-9rboni4hjQ@mail.gmail.com>

Probably this message:
http://twistedmatrix.com/pipermail/twisted-python/2010-July/022500.html

Kevin Horn

On Wed, Oct 24, 2012 at 3:24 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> txoauth is something I started, then I realized I really hate oauth, then
> it was "adopted" by simplegeo who afaik proceeded to not do anything with
> it, and then I readopted it on github. There's not much work on it, but
> what's there has a complete test suite.
>
> ISTR glyph at one point describing an entire three-party oauth interaction
> to me on the mailing list in Cred terms. If that knowledge didn't make it
> into txoauth as it stands to day, perhaps it could still be dug up ;)
>
> I had a hard time understanding it at first as well, but Cred'd work just
> fine for the client too. The way it would work, IIRC, is that you run cred
> on your client. The credentials checker is simply something that makes
> remote requests. The realm returns, as always, an authenticated client.
> Presumably, that object would compose an Agent to do what it needs to do.
>
> Best of luck! I haven't touched oauth in years, but hopefully it'll work
> out for you.
>
> On Tue, Oct 23, 2012 at 7:31 PM, Andrew Francis <andrewfr_ice at yahoo.com>wrote:
>
>> Hi Folks:
>>
>> I am implementing a client that uses Twisted. I have to use oauth 2.0. I
>> have started to read up on Oauth and Twisted cred.  I noticed that there is
>> a txoauth. For now, my client is of the "it can't keep secrets" nature as
>> described by Google.
>>
>> From my understanding Twisted Cred is used for implementing servers. What
>> is used for clients? Or do I roll my own headers and implement the
>> handshakes myself?
>>
>> Cheers,
>> Andrew
>>
>> P.S - I just started using Agent and CookieAgent (as opposed to getPage).
>> Wow!
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> --
> cheers
> lvh
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121025/3111d51c/attachment.html>

From glyph at twistedmatrix.com  Thu Oct 25 12:44:51 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 25 Oct 2012 11:44:51 -0700
Subject: [Twisted-Python] Silly txoauth with Twisted Client Question
In-Reply-To: <CA+U=zK0q5auGufKMJ-cBbWq7bq6HX82dCx+cimT-9rboni4hjQ@mail.gmail.com>
References: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>
	<CAE_Hg6Z2WTc1bYwoh3BBRWFpKg2_RgVD=jm1KQ3uZf_ox4SX0g@mail.gmail.com>
	<CA+U=zK0q5auGufKMJ-cBbWq7bq6HX82dCx+cimT-9rboni4hjQ@mail.gmail.com>
Message-ID: <90689530-3B40-478A-8CEA-E9BD3D4C6404@twistedmatrix.com>


On Oct 25, 2012, at 8:11 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> Probably this message: http://twistedmatrix.com/pipermail/twisted-python/2010-July/022500.html

Please post inline, not at the top.  It seems we've had a plague of this lately :).

Also, since we're still using a version of pipermail that can't wrap lines properly (sigh, are there any that do yet?) you can view this message more nicely here: <http://article.gmane.org/gmane.comp.python.twisted/21255>.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121025/11a28b3a/attachment.html>

From glyph at twistedmatrix.com  Thu Oct 25 12:45:55 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 25 Oct 2012 11:45:55 -0700
Subject: [Twisted-Python] a possible solution for ticket 5562
In-Reply-To: <CABkOF6S-BXf9u6WiqJb9AFjfShVDejY8jGHROK1J1u+DCRJ1hw@mail.gmail.com>
References: <CABkOF6RxCa+CZBg02bYB1w6ZHbz31g-t98Hwjo_QfodPsiRFsw@mail.gmail.com>
	<7028300D-4D04-4DE0-AE8D-AA625169B886@cisco.com>
	<51B97A0D-9922-42A1-A67A-ED5E0544D692@twistedmatrix.com>
	<CABkOF6QEgtDqMVCnex0dGLXk+i+fy+Xz==tG8CAkBcGiYcmf_g@mail.gmail.com>
	<5F6CAE66-5E27-48DA-A94D-222FACFF4FE7@twistedmatrix.com>
	<CABkOF6ROagF682mg-4eRCge-XiLY7HuZrRcby-AEFZChTstLow@mail.gmail.com>
	<67C0B44C-5F3D-4A93-B5FB-ED5B9063A439@twistedmatrix.com>
	<CABkOF6S-BXf9u6WiqJb9AFjfShVDejY8jGHROK1J1u+DCRJ1hw@mail.gmail.com>
Message-ID: <0F1B3CB5-DE12-4AAE-A55D-14A6ED113B2D@twistedmatrix.com>


On Oct 24, 2012, at 11:03 PM, gelin yan <dynamicgl at gmail.com> wrote:

>    Thanks for mentioning that. I never submitted any patch before so probably I need to take some time to investigate how to do it.

No problem.  It should be fairly easy.  If you have any trouble don't hesitate to ask questions.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121025/a7c31f45/attachment.html>

From kevin.horn at gmail.com  Thu Oct 25 13:56:30 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 25 Oct 2012 14:56:30 -0500
Subject: [Twisted-Python] Silly txoauth with Twisted Client Question
In-Reply-To: <90689530-3B40-478A-8CEA-E9BD3D4C6404@twistedmatrix.com>
References: <1351013465.49343.YahooMailNeo@web140704.mail.bf1.yahoo.com>
	<CAE_Hg6Z2WTc1bYwoh3BBRWFpKg2_RgVD=jm1KQ3uZf_ox4SX0g@mail.gmail.com>
	<CA+U=zK0q5auGufKMJ-cBbWq7bq6HX82dCx+cimT-9rboni4hjQ@mail.gmail.com>
	<90689530-3B40-478A-8CEA-E9BD3D4C6404@twistedmatrix.com>
Message-ID: <CA+U=zK2BHv3avptdN_jGfdeo9fRTy7pANcgTMv2ohAfajOW-_g@mail.gmail.com>

On Thu, Oct 25, 2012 at 1:44 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Oct 25, 2012, at 8:11 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
> Probably this message:
> http://twistedmatrix.com/pipermail/twisted-python/2010-July/022500.html
>
>
> Please post inline, not at the top.  It seems we've had a plague of this
> lately :).
>
> Also, since we're still using a version of pipermail that can't wrap lines
> properly (sigh, are there any that do yet?) you can view this message more
> nicely here: <http://article.gmane.org/gmane.comp.python.twisted/21255>.
>
> -g
>
>
I usually do, but since lvh top-posted, I followed his lead for the thread.

--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121025/40e832a5/attachment.html>

From exarkun at twistedmatrix.com  Thu Oct 25 15:22:42 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 25 Oct 2012 21:22:42 -0000
Subject: [Twisted-Python] Avoiding network when testing Perspective
	Broker
In-Reply-To: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
References: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
Message-ID: <20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>

On 09:18 am, lacrima.maxim at gmail.com wrote:
>Hi!
>
>I am learning to develop TDD way. I want to create a server that

Hooray!
>understands PB protocol. Initially I thought it would be a good idea to
>avoid real network connections in my tests, so I tried to use

Yes, that's definitely what you want to do.
>`proto_helpers.StringTransport`:

StringTransport is frequently what you want in order to test a protocol 
implementation, so you're on the right track.

Except... actually you're not implementing a protocol.  You're *using* a 
protocol implementation that exists already and has its own unit tests.

It would be better if you found a way to test your code without 
involving the PB protocol implementation or StringTransport.  However, I 
admit that the tools for doing this with PB are almost non-existent.  On 
the other hand, application code written for use with AMP is much more 
amenable to testing.

Just something to think about.
>----------
>import cStringIO
>from twisted.spread import pb
>from twisted.trial import unittest
>from twisted.test import proto_helpers
>
>class Document(pb.Root):
>
>    def remote_convert(self, props):
>        self.props = props
>
>
>class DocTestCase(unittest.TestCase):
>
>    def setUp(self):
>
>        # set up server
>        self.doc = Document()
>        factory = pb.PBServerFactory(self.doc)
>        self.broker = factory.buildProtocol(('127.0.0.1', 0))
>        tr = proto_helpers.StringTransport()
>        self.broker.makeConnection(tr)

So far so good.  You made a factory, got it to make you a protocol, and 
hooked the protocol up to a StringTransport you made.  That's all good 
stuff.
>
>        # this is what a client sends
>        self.props = {'name': 'MyDoc',
>                      'path': '/path/'}
>
>        # prepare data
>        serialized_props = self.broker.serialize(self.props)
>        msg = ('message', 1, 'root', 'convert', 1,
>               ['tuple', serialized_props], ['dictionary'])
>        io = cStringIO.StringIO()
>        self.broker._encode(msg, io.write)
>        self.chunk = io.getvalue()

This part isn't quite as good.  `broker.serialize` is basically an 
implementation detail.  `broker._encode` is *definitely* an 
implementation detail.  The exact structure of the message isn't quite 
an implementation detail, but it's such a low-level detail that you 
really don't want to be thinking about it while writing tests for 
something like Document.remote_convert.

Instead, you should probably use the PB client API (ie, PBClientFactory 
and what comes out of it) to interact with this server.  Let the PB 
client implementation figure out what bytes to "send" to your server.
>    def test_convert(self):
>        # data arrived
>        self.broker.dataReceived(self.chunk)

You'll definitely need to call dataReceived at some point.  Perhaps more 
than once.  So this is pretty good.
>        self.assertEqual(self.props, self.doc.props)
>----------
>
>However, `Document.remote_convert` is never executed so the test above
>fails. After debugging I discovered that `Broker._encode` produces
>different results depending on whether `self.broker.makeConnection(tr)` 
>is
>called or not.

I haven't bothered to look into what might be going on here, because I 
think you should forget about the `._encode` code and start using a 
client instead.  The client is much more likely to produce the correct 
network traffic to exercise the code you want to exercise.  The same 
goes for the two further tests below - which seem to differ only by a 
call to setPrefixLength, which should make absolutely no difference to 
this code when it is being used in practice, so the difference it makes 
in the tests is probably due to driving the code wrong, which problem 
will go away if you start using PBClientFactory etc.

Hope this helps,
Jean-Paul
>And I created a test case that shows a difference. Here `test_convert1`
>succeeds while `test_convert2` fails:
>----------
>class DocTestCase(unittest.TestCase):
>
>    def setUp(self):
>        self.doc = Document()
>        factory = pb.PBServerFactory(self.doc)
>        self.broker = factory.buildProtocol(('127.0.0.1', 0))
>
>        self.props = {'name': 'MyDoc',
>                      'path': '/path/'}
>
>        serialized_props = self.broker.serialize(self.props)
>        self.msg = ('message', 1, 'root', 'convert', 1,
>                    ['tuple', serialized_props], ['dictionary'])
>
>    def test_convert1(self):
>        self.broker.currentDialect = 'pb'
>        self.broker.setPrefixLimit(64)
>        self.broker.transport = proto_helpers.StringTransport()
>
>        io = cStringIO.StringIO()
>        self.broker._encode(self.msg, io.write)
>        self.broker.dataReceived(io.getvalue())
>
>        self.assertEqual(self.props, self.doc.props)
>
>    def test_convert2(self):
>        self.tr = proto_helpers.StringTransport()
>        self.broker.makeConnection(self.tr)
>
>        io = cStringIO.StringIO()
>        self.broker._encode(self.msg, io.write)
>        self.broker.dataReceived(io.getvalue())
>
>        self.assertEqual(self.props, self.doc.props)
>----------
>
>I wonder what causes this behavior and, in general, if 
>`StringTransport` is
>suitable for testing PB protocol.
>
>Thanks in advance. For your convenience I attached files with these 
>test
>cases.
>
>--
>with regards,
>Maxim



From glyph at twistedmatrix.com  Thu Oct 25 16:32:30 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 25 Oct 2012 15:32:30 -0700
Subject: [Twisted-Python] Avoiding network when testing Perspective
	Broker
In-Reply-To: <20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>
References: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
	<20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>
Message-ID: <BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>


On Oct 25, 2012, at 2:22 PM, exarkun at twistedmatrix.com wrote:

> On 09:18 am, lacrima.maxim at gmail.com wrote:
>> Hi!
>> 
>> I am learning to develop TDD way. I want to create a server that
> 
> Hooray!

Yes, hooray!  I wish that everyone did this.  Sorry that you've encountered trouble; I very much hope you will stick with this and help us make the process for doing TDD on PB (and generally, Twisted) applications much easier.

>> understands PB protocol. Initially I thought it would be a good idea to
>> avoid real network connections in my tests, so I tried to use
> 
> Yes, that's definitely what you want to do.
>> `proto_helpers.StringTransport`:
> 
> StringTransport is frequently what you want in order to test a protocol 
> implementation, so you're on the right track.
> 
> Except... actually you're not implementing a protocol.  You're *using* a 
> protocol implementation that exists already and has its own unit tests.
> 
> It would be better if you found a way to test your code without 
> involving the PB protocol implementation or StringTransport.  However, I 
> admit that the tools for doing this with PB are almost non-existent.  On 
> the other hand, application code written for use with AMP is much more 
> amenable to testing.
> 
> Just something to think about.

While I agree with everything exarkun has said here, I think we should note that using StringTransport is basically the state of the art in protocol testing at this point.  It's unfortunate that we don't have anything better, but you shouldn't feel the need to go scouring the code base for a good example or a testing utility that you've missed; unless it's immediately obvious to you how to remove byte-level parsing from the equation, this is just an area that Twisted needs to work on.

> So far so good.  You made a factory, got it to make you a protocol, and 
> hooked the protocol up to a StringTransport you made.  That's all good 
> stuff.

I'm curious, since we rarely get to see the positive impact of documentation, and only hear about it when it didn't exist - did you discover this testing style from http://twistedmatrix.com/documents/current/core/howto/trial.html#auto5 ? :)

> Instead, you should probably use the PB client API (ie, PBClientFactory 
> and what comes out of it) to interact with this server.  Let the PB 
> client implementation figure out what bytes to "send" to your server.

To be clear, you should use PBClientFactory in the same way you've been these other abstractions: create it with a string transport, don't hook it up to any sockets or anything.

There are three (count them, three!) classes called "IOPump" in various Twisted test-support modules.  Please note that unlike the stuff in proto_helpers these are not supported and will likely go away in a future version of Twisted.  However, they do provide a simple demonstration of how to hook up a client and server (calling dataReceived() with what transport.write() produced).

If you'd like to help Twisted itself, we could really use a patch that cleans up all three of those implementations of IOPump, tests them, documents them, and exposes them in a way that would be beneficial to those writing tests like yours.

Thanks for doing TDD,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121025/609f6436/attachment.html>

From lacrima.maxim at gmail.com  Fri Oct 26 08:02:52 2012
From: lacrima.maxim at gmail.com (Maxim Lacrima)
Date: Fri, 26 Oct 2012 17:02:52 +0300
Subject: [Twisted-Python] Avoiding network when testing Perspective
	Broker
In-Reply-To: <BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>
References: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
	<20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>
	<BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>
Message-ID: <CAKef57MfhBu5ynk2YXJR8_uyPagK_UpHZDOJ1zhwfqmAnt=YGQ@mail.gmail.com>

Hi!

Your replies are very encouraging. Thank you!


> I'm curious, since we rarely get to see the positive impact of
> documentation, and only hear about it when it didn't exist - did you
> discover this testing style from
> http://twistedmatrix.com/documents/current/core/howto/trial.html#auto5 ?
> :)
>
>
Yes, I started from that document. It describes well how to call certain
parts of Twisted to check some behavior and this stimulated me to discover
Twisted API.

I think I have finally discovered a good way for writing tests that use PB.
I used `test.test_pb.IOPump` `test.test_pb.connectedServerAndClient` as a
basis for my tests.
--------
from twisted.spread import pb
from twisted.trial import unittest
from twisted.test import proto_helpers

class Document(pb.Root):

    def remote_convert(self):
        return 'I was called'


class IOPump:

    def __init__(self, client, server, clientIO, serverIO):
        self.client = client
        self.server = server
        self.clientIO = clientIO
        self.serverIO = serverIO

    def pump(self):
        cData = self.clientIO.value()
        sData = self.serverIO.value()
        self.clientIO.clear()
        self.serverIO.clear()
        self.server.dataReceived(cData)
        self.client.dataReceived(sData)


def connect(root):
    serverFactory = pb.PBServerFactory(root())
    serverBroker = serverFactory.buildProtocol(())

    clientFactory = pb.PBClientFactory()
    clientBroker = clientFactory.buildProtocol(())

    clientTransport = proto_helpers.StringTransport()
    serverTransport = proto_helpers.StringTransport()
    clientBroker.makeConnection(clientTransport)
    serverBroker.makeConnection(serverTransport)

    pump = IOPump(clientBroker, serverBroker, clientTransport,
serverTransport)
    # initial communication
    pump.pump()

    return clientFactory, serverFactory, pump


class DocTestCase(unittest.TestCase):

    def test_convert(self):
        def cb0(doc):
            d = doc.callRemote('convert')
            return d

        def cb1(res):
            self.assertEqual('I was called', res)
            return res

        client, server, pump = connect(Document)

        d = client.getRootObject()
        d.addCallback(cb0)
        d.addCallback(cb1)

        pump.pump()
        pump.pump()

        return d

--------

The only caveat here is that if I forget to call pump.pump() sufficient
number of times, then the callback with an assertion may not be executed
and this can lead to false positives

-- 
with regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121026/a10c59eb/attachment.html>

From itamar at futurefoundries.com  Fri Oct 26 08:16:46 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Fri, 26 Oct 2012 10:16:46 -0400
Subject: [Twisted-Python] Avoiding network when testing Perspective
	Broker
In-Reply-To: <BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>
References: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
	<20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>
	<BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>
Message-ID: <CAOp9P3qUh1f7cqz9GPvOwkoCXNyoxqEEJd9gROr=3tuuQCVhag@mail.gmail.com>

On Thu, Oct 25, 2012 at 6:32 PM, Glyph <glyph at twistedmatrix.com> wrote:


> There are three (count them, three!) classes called "IOPump" in various
> Twisted test-support modules.  Please note that *unlike the stuff in
> proto_helpers these are not supported and will likely go away in a future
> version of Twisted*.  However, they do provide a simple demonstration of
> how to hook up a client and server (calling dataReceived() with what
> transport.write() produced).
>
> If you'd like to help Twisted itself, we could really use a patch that
> cleans up all three of those implementations of IOPump, tests them,
> documents them, and exposes them in a way that would be beneficial to those
> writing tests like yours.
>

I guess none of the loopback implementations in twisted.protocols.loopback
use StringTransport?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121026/0a31490b/attachment-0001.html>

From dynamicgl at gmail.com  Fri Oct 26 10:40:54 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sat, 27 Oct 2012 00:40:54 +0800
Subject: [Twisted-Python] Is it a typo in abstract.py ?
Message-ID: <CABkOF6R=XzA7oidBAKYwo5CQn_Wa8WDhCDPJYPo-u_p-9jRjRQ@mail.gmail.com>

Hi All

    I just noticed abstract.py from internet/iocpreactor/ has a possible
typo:

look at the method* *loseConnection
*
*
if self.connected and not self.disconnecting:
            if self._writeDisconnected:
                # doWrite won't trigger the connection close anymore
                self.stopReading()
                self.stopWriting
                self.connectionLost(_connDone)
            else:
                self.stopReading()
                self.startWriting()
                self.disconnecting = 1

in the first part I found
  self.stopWriting

Is it a typo for self.stopWriting()?


Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121027/5996bd83/attachment-0001.html>

From itamar at futurefoundries.com  Fri Oct 26 11:34:31 2012
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Fri, 26 Oct 2012 13:34:31 -0400
Subject: [Twisted-Python] Is it a typo in abstract.py ?
In-Reply-To: <CABkOF6R=XzA7oidBAKYwo5CQn_Wa8WDhCDPJYPo-u_p-9jRjRQ@mail.gmail.com>
References: <CABkOF6R=XzA7oidBAKYwo5CQn_Wa8WDhCDPJYPo-u_p-9jRjRQ@mail.gmail.com>
Message-ID: <CAOp9P3rrROwEALksi3HQtjxRERWC-2gQemFaZXS9GVAp+9FebQ@mail.gmail.com>

Yes. I may even have filed a ticket for this once. The problem is writing a
unit test to prove it's necessary :)

On Fri, Oct 26, 2012 at 12:40 PM, gelin yan <dynamicgl at gmail.com> wrote:

> Hi All
>
>     I just noticed abstract.py from internet/iocpreactor/ has a possible
> typo:
>
> look at the method* *loseConnection
> *
> *
> if self.connected and not self.disconnecting:
>             if self._writeDisconnected:
>                 # doWrite won't trigger the connection close anymore
>                 self.stopReading()
>                 self.stopWriting
>                 self.connectionLost(_connDone)
>             else:
>                 self.stopReading()
>                 self.startWriting()
>                 self.disconnecting = 1
>
> in the first part I found
>   self.stopWriting
>
> Is it a typo for self.stopWriting()?
>
>
> Regards
>
> gelin yan
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Itamar Turner-Trauring, Future Foundries LLC
http://futurefoundries.com/ — Twisted consulting, training and support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121026/38b0888a/attachment.html>

From glyph at twistedmatrix.com  Fri Oct 26 14:18:43 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 26 Oct 2012 13:18:43 -0700
Subject: [Twisted-Python] Avoiding network when testing Perspective
	Broker
In-Reply-To: <CAOp9P3qUh1f7cqz9GPvOwkoCXNyoxqEEJd9gROr=3tuuQCVhag@mail.gmail.com>
References: <CAKef57ONuqx=PSap5y_yEAUm=pKbR7YnQrwJ9vbNMr-WEQKHFA@mail.gmail.com>
	<20121025212242.4363.274850472.divmod.xquotient.17@localhost6.localdomain6>
	<BEE992E2-058B-4307-9A36-07364E8F626B@twistedmatrix.com>
	<CAOp9P3qUh1f7cqz9GPvOwkoCXNyoxqEEJd9gROr=3tuuQCVhag@mail.gmail.com>
Message-ID: <34B11984-EBD8-4442-8A0D-866DBAD1CEBA@twistedmatrix.com>


On Oct 26, 2012, at 7:16 AM, Itamar Turner-Trauring <itamar at futurefoundries.com> wrote:

> 
> 
> On Thu, Oct 25, 2012 at 6:32 PM, Glyph <glyph at twistedmatrix.com> wrote:
>  
> There are three (count them, three!) classes called "IOPump" in various Twisted test-support modules.  Please note that unlike the stuff in proto_helpers these are not supported and will likely go away in a future version of Twisted.  However, they do provide a simple demonstration of how to hook up a client and server (calling dataReceived() with what transport.write() produced).
> 
> If you'd like to help Twisted itself, we could really use a patch that cleans up all three of those implementations of IOPump, tests them, documents them, and exposes them in a way that would be beneficial to those writing tests like yours.
> 
> I guess none of the loopback implementations in twisted.protocols.loopback use StringTransport? 

Nope, it has two other transport implementations - _LoopbackTransport and LoopbackRelay; plus, unlike what IOPump does, loopback is written to encourage you to return a Deferred from your test, which is generally a bad idea if you can easily avoid it.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121026/0944fb6c/attachment.html>

From exarkun at twistedmatrix.com  Sat Oct 27 22:05:31 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Oct 2012 04:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1351397131.88.581021358@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121028/f1214941/attachment.html>

From dynamicgl at gmail.com  Sat Oct 27 23:57:03 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sun, 28 Oct 2012 13:57:03 +0800
Subject: [Twisted-Python] a question about monotonic clock
Message-ID: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>

Hi All

    I am quite concerned the ticket 2424 due to our system use
reactor.callLater almost anywhere. I know this issue is hard to be finxed
otherwise It wouldn't exist for such a long time. So any work around before
we getting fix it? The only way I can do is to disable NTP or stop process,
sync the time manually and then restart the process. The latter way is hard
to be accepted due to we have many machines.


Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121028/2eb3a337/attachment.html>

From exarkun at twistedmatrix.com  Sun Oct 28 06:28:39 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Oct 2012 12:28:39 -0000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
Message-ID: <20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>

On 05:57 am, dynamicgl at gmail.com wrote:
>Hi All
>
>    I am quite concerned the ticket 2424 due to our system use
>reactor.callLater almost anywhere. I know this issue is hard to be 
>finxed
>otherwise It wouldn't exist for such a long time. So any work around 
>before
>we getting fix it? The only way I can do is to disable NTP or stop 
>process,
>sync the time manually and then restart the process. The latter way is 
>hard
>to be accepted due to we have many machines.

NTP does not cause problems with scheduling.  NTP gradually slews the 
system clock - it does not introduce discontinuities (either forward or 
backward), it changes the rate at which time passes until the system 
clock agrees with the external clock.

If you have systems configured to have their system clocks jump 
(`ntpdate` is sometimes used for this), fix them to not be configured 
this way.

#2424 is primarily about user-initiated events, primarily on desktop 
machines - a user changing the system time, a user suspending the 
machine (and later unsuspending it).  There's little or no reason for 
problems related to #2424 to ever come up on a properly maintained 
server.

Jean-Paul



From _ at lvh.cc  Sun Oct 28 09:17:53 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 28 Oct 2012 16:17:53 +0100
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
Message-ID: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>

Hi,


I've been trying to play with SockJS + Twisted. There's an implementation
here: https://github.com/Fugiman/sockjs-twisted

However, I'm already running a web server, and as the README says
sockjs-twisted is *not* intended to be run together with a web server. It
doesn't really use any of the mechanics in twisted.web.

So, I tried to make it work using Resources anyway: reconstructing the
equivalent bytes in render, and replaying them with the SockJSFactory:

class SockJSResource(resource.Resource):
    """
    A resource that defers to a SockJS factory.
    """
    isLeaf = True

    def __init__(self, factory, options=None):
        self._factory = SockJSFactory(factory, options)


    def render(self, request):
        transport, request.transport = request.transport, None
        protocol = self._factory.buildProtocol(transport.getPeer())
        protocol.makeConnection(transport)

        path = "/".join([""] + request.postpath)
        lines = ["{0} {1} HTTP/1.1".format(request.method, path)]
        for name, values in request.requestHeaders.getAllRawHeaders():
            lines.append("{0}: {1}".format(name, ",".join(values)))
        lines += ["", request.content.read()]

        data = "\r\n".join(lines)
        protocol.dataReceived(data)

        return server.NOT_DONE_YET



This only kind of works. There's an external sockjs test suite (more like
an acceptance test suite): https://github.com/sockjs/sockjs-protocol, that
has multiple failing tests. If anyone needs help running these, I'll gladly
assist there.

In an attempt to begin debugging this, I've found that basically none of
the protocol methods get called on that protocol instance I make on the
third line of render. This took me a while to figure out because
dataReceived *was* being called -- except then I realized I'm calling it
myself in that render method :)

This leads me to believe I'm essentially just screwing up transplanting
this transport entirely. Is that the case?

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121028/fb53c298/attachment.html>

From radix at twistedmatrix.com  Sun Oct 28 09:22:10 2012
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 28 Oct 2012 16:22:10 +0100
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
Message-ID: <CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>

On Sun, Oct 28, 2012 at 1:28 PM, <exarkun at twistedmatrix.com> wrote:

> On 05:57 am, dynamicgl at gmail.com wrote:
> >Hi All
> >
> >    I am quite concerned the ticket 2424 due to our system use
> >reactor.callLater almost anywhere. I know this issue is hard to be
> >finxed
> >otherwise It wouldn't exist for such a long time. So any work around
> >before
> >we getting fix it? The only way I can do is to disable NTP or stop
> >process,
> >sync the time manually and then restart the process. The latter way is
> >hard
> >to be accepted due to we have many machines.
>
> NTP does not cause problems with scheduling.  NTP gradually slews the
> system clock - it does not introduce discontinuities (either forward or
> backward), it changes the rate at which time passes until the system
> clock agrees with the external clock.
>
> If you have systems configured to have their system clocks jump
> (`ntpdate` is sometimes used for this), fix them to not be configured
> this way.
>
> #2424 is primarily about user-initiated events, primarily on desktop
> machines - a user changing the system time, a user suspending the
> machine (and later unsuspending it).  There's little or no reason for
> problems related to #2424 to ever come up on a properly maintained
> server.
>
>
I think that for *certain* uncommon types of applications, even the very
minor skewing of ntp can cause problems, but I wonder if gelin yan has
encountered real problems caused by the ntp skewing in the application
under discussion. Gelin, you did not describe what problem you're actually
having. If you would, that would benefit the continuation of the discussion.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121028/eba5bce7/attachment-0001.html>

From dynamicgl at gmail.com  Sun Oct 28 09:43:25 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Sun, 28 Oct 2012 23:43:25 +0800
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
Message-ID: <CABkOF6Q0g=DWOuJw3DXpsPe8sV4vh18bM-Adjm2nt7_HfOewSg@mail.gmail.com>

On Sun, Oct 28, 2012 at 8:28 PM, <exarkun at twistedmatrix.com> wrote:

> On 05:57 am, dynamicgl at gmail.com wrote:
> >Hi All
> >
> >    I am quite concerned the ticket 2424 due to our system use
> >reactor.callLater almost anywhere. I know this issue is hard to be
> >finxed
> >otherwise It wouldn't exist for such a long time. So any work around
> >before
> >we getting fix it? The only way I can do is to disable NTP or stop
> >process,
> >sync the time manually and then restart the process. The latter way is
> >hard
> >to be accepted due to we have many machines.
>
> NTP does not cause problems with scheduling.  NTP gradually slews the
> system clock - it does not introduce discontinuities (either forward or
> backward), it changes the rate at which time passes until the system
> clock agrees with the external clock.
>
> If you have systems configured to have their system clocks jump
> (`ntpdate` is sometimes used for this), fix them to not be configured
> this way.
>
> #2424 is primarily about user-initiated events, primarily on desktop
> machines - a user changing the system time, a user suspending the
> machine (and later unsuspending it).  There's little or no reason for
> problems related to #2424 to ever come up on a properly maintained
> server.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Hi Jean-Paul

    Thanks for your answer. It is much clearer from now.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121028/6c86931c/attachment.html>

From mithrandi at mithrandi.net  Sun Oct 28 09:45:14 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 28 Oct 2012 17:45:14 +0200
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
Message-ID: <CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>

On Sun, Oct 28, 2012 at 5:22 PM, Christopher Armstrong
<radix at twistedmatrix.com> wrote:
> I think that for *certain* uncommon types of applications, even the very
> minor skewing of ntp can cause problems, but I wonder if gelin yan has

I'm having trouble imagining such an application. In particular, if
the application is sensitive to such minor fluctuations in the time
source, I don't see how it could operate on commodity hardware at all;
such fluctuations are present regardless of whether ntp is slewing the
clock or not. You would need to use a separate hardware time source
that is more reliable, at which point ntp is essentially out of the
picture.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From radix at twistedmatrix.com  Sun Oct 28 10:01:30 2012
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 28 Oct 2012 17:01:30 +0100
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
Message-ID: <CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>

On Sun, Oct 28, 2012 at 4:45 PM, Tristan Seligmann
<mithrandi at mithrandi.net>wrote:

> On Sun, Oct 28, 2012 at 5:22 PM, Christopher Armstrong
> <radix at twistedmatrix.com> wrote:
> > I think that for *certain* uncommon types of applications, even the very
> > minor skewing of ntp can cause problems, but I wonder if gelin yan has
>
> I'm having trouble imagining such an application. In particular, if
> the application is sensitive to such minor fluctuations in the time
> source, I don't see how it could operate on commodity hardware at all;
> such fluctuations are present regardless of whether ntp is slewing the
> clock or not. You would need to use a separate hardware time source
> that is more reliable, at which point ntp is essentially out of the
> picture.
>


I'm not speaking from experience, admittedly. How big exactly are the steps
in NTP skewing?

I'm remembering VOIP applications (or anything else with low-latency
streaming or real-time gaming or something like that), where you can have
timed intervals of ~20ms, and if you miss one, you drop packets and lower
the quality of the audio stream. In a case like that, using a monotonic
time source seems like it would be a good decision. That's why Twisted
should provide an API for scheduling calls based on one, if possible (that
doesn't seem like a contentious point to me; just the general applicability
of such a scheduling mechanism).

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121028/7b34e6a0/attachment.html>

From glyph at twistedmatrix.com  Sun Oct 28 13:18:20 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 28 Oct 2012 12:18:20 -0700
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
Message-ID: <FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>


On Oct 28, 2012, at 9:01 AM, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> I'm not speaking from experience, admittedly. How big exactly are the steps in NTP skewing?

There are two things NTP can do: stepping and slewing.  (Skewing is not one of them.)

If you're stepping, the steps can be arbitrarily large.  This is what ntpdate does.

If you're slewing, there are no steps.  This is what ntpd does.  The frequency of your clock is just adjusted up or down by a small (configurable) amount.  Generally not enough to affect the pitch or network latency of 20ms sound sampling.  In fact, it would generally help, not hurt, because the only reason ntp would be issuing a slew is that your clock is faster or slower than real time anyway.

PEP 418 <http://www.python.org/dev/peps/pep-0418/> covers this stuff in a lot of detail; especially the glossary.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121028/9729bf79/attachment.html>

From glyph at twistedmatrix.com  Sun Oct 28 14:17:25 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 28 Oct 2012 13:17:25 -0700
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
Message-ID: <33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>


On Oct 28, 2012, at 8:17 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> This leads me to believe I'm essentially just screwing up transplanting this transport entirely. Is that the case?

Since there's no supported way to transplant a transport (see <http://tm.tl/3204>)... yes.

But, even if you were going to rely on undefined behavior and private APIs, I don't see anything in your code sample that changes anything on the transport to point at your new protocol.  So I don't see why you would think that it would start calling methods on it :).

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121028/65a1b854/attachment.html>

From _ at lvh.cc  Sun Oct 28 14:40:31 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 28 Oct 2012 21:40:31 +0100
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
Message-ID: <CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>

On Sun, Oct 28, 2012 at 9:17 PM, Glyph <glyph at twistedmatrix.com> wrote:

> Since there's no supported way to transplant a transport (see <
> http://tm.tl/3204>)... yes.
>

Aha!


> But, even if you were going to rely on undefined behavior and private
> APIs, I don't see anything in your code sample that changes anything on the
> *transport* to point at your new protocol.  So I don't see why you would
> think that it would start calling methods on it :).
>

For some reason I thought IProtocol.makeConnection did that; I guess it's
because the implementation in Protocol sets the `transport` attribute (I
thought it was the other way around).

I've set transport.protocol = myNewProtocol and now there's one extra
passing acceptance test.

I'm slowly beginning to wonder if it wouldn't be easier to write it from
scratch using t.w.websockets from the get-go...


> -g
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121028/24ee2d74/attachment.html>

From p.mayers at imperial.ac.uk  Sun Oct 28 16:05:57 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 28 Oct 2012 22:05:57 +0000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
Message-ID: <f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>

This depends on how you're running ntpd. If you have "-x" on the command line, yes - ntpd will not step.

If not, there are circumstances it will step - clock diffs in excess of 128ms iirc?

Who knows what newer implementations like chrony or openntpd do!

Glyph <glyph at twistedmatrix.com> wrote:

>
>On Oct 28, 2012, at 9:01 AM, Christopher Armstrong
><radix at twistedmatrix.com> wrote:
>
>> I'm not speaking from experience, admittedly. How big exactly are the
>steps in NTP skewing?
>
>There are two things NTP can do: stepping and slewing.  (Skewing is not
>one of them.)
>
>If you're stepping, the steps can be arbitrarily large.  This is what
>ntpdate does.
>
>If you're slewing, there are no steps.  This is what ntpd does.  The
>frequency of your clock is just adjusted up or down by a small
>(configurable) amount.  Generally not enough to affect the pitch or
>network latency of 20ms sound sampling.  In fact, it would generally
>help, not hurt, because the only reason ntp would be issuing a slew is
>that your clock is faster or slower than real time anyway.
>
>PEP 418 <http://www.python.org/dev/peps/pep-0418/> covers this stuff in
>a lot of detail; especially the glossary.
>
>-glyph
>
>
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Sent from my mobile device, please excuse brevity and typos.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121028/3ff49fe8/attachment.html>

From mithrandi at mithrandi.net  Sun Oct 28 16:16:09 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 29 Oct 2012 00:16:09 +0200
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
Message-ID: <CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>

On Mon, Oct 29, 2012 at 12:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> This depends on how you're running ntpd. If you have "-x" on the command
> line, yes - ntpd will not step.
>
> If not, there are circumstances it will step - clock diffs in excess of
> 128ms iirc?

If an offset of 128ms occurs at any time other than initial ntpd
startup (which will presumably occur at system startup), that means
you've either experienced a significant period of time without
connectivity to time servers[1], you have a hardware / kernel issue
that should be resolved, or some other software on the system is
messing with the clock. Aside from network issues, the other
possibilities are all serious issues that should be corrected, not
tolerated as a normal situation.

> Who knows what newer implementations like chrony or openntpd do!

If they're doing something silly, then maybe you shouldn't use them.

[1] Well, haha, just kidding; if this happens, then ntpd will remove
the servers as being unreachable, and terminate once they have all
been removed, thus resulting in the need to restart ntpd...
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From josh at bartletts.id.au  Mon Oct 29 00:35:56 2012
From: josh at bartletts.id.au (Joshua Bartlett)
Date: Mon, 29 Oct 2012 16:35:56 +1000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
Message-ID: <CABZk45zSYJFmWu8G_eMFPvg8hBNJZn6Spsm4vV1e6t1-9eYkig@mail.gmail.com>

On 29 October 2012 08:16, Tristan Seligmann <mithrandi at mithrandi.net> wrote:

> If an offset of 128ms occurs at any time other than initial ntpd
> startup (which will presumably occur at system startup), that means
> you've either experienced a significant period of time without
> connectivity to time servers[1], you have a hardware / kernel issue
> that should be resolved, or some other software on the system is
> messing with the clock. Aside from network issues, the other
> possibilities are all serious issues that should be corrected, not
> tolerated as a normal situation.
>

In my experience this sort of time drift happens quite frequently on
virtual machines.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121029/f43036a3/attachment.html>

From dynamicgl at gmail.com  Mon Oct 29 01:09:14 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 29 Oct 2012 15:09:14 +0800
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
Message-ID: <CABkOF6Qv3bHdN1AFkiGD3mBTTPZ4XSu-EFbExn4UiFRHDCqaFA@mail.gmail.com>

On Sun, Oct 28, 2012 at 11:22 PM, Christopher Armstrong <
radix at twistedmatrix.com> wrote:

> On Sun, Oct 28, 2012 at 1:28 PM, <exarkun at twistedmatrix.com> wrote:
>
>> On 05:57 am, dynamicgl at gmail.com wrote:
>> >Hi All
>> >
>> >    I am quite concerned the ticket 2424 due to our system use
>> >reactor.callLater almost anywhere. I know this issue is hard to be
>> >finxed
>> >otherwise It wouldn't exist for such a long time. So any work around
>> >before
>> >we getting fix it? The only way I can do is to disable NTP or stop
>> >process,
>> >sync the time manually and then restart the process. The latter way is
>> >hard
>> >to be accepted due to we have many machines.
>>
>> NTP does not cause problems with scheduling.  NTP gradually slews the
>> system clock - it does not introduce discontinuities (either forward or
>> backward), it changes the rate at which time passes until the system
>> clock agrees with the external clock.
>>
>> If you have systems configured to have their system clocks jump
>> (`ntpdate` is sometimes used for this), fix them to not be configured
>> this way.
>>
>> #2424 is primarily about user-initiated events, primarily on desktop
>> machines - a user changing the system time, a user suspending the
>> machine (and later unsuspending it).  There's little or no reason for
>> problems related to #2424 to ever come up on a properly maintained
>> server.
>>
>>
> I think that for *certain* uncommon types of applications, even the very
> minor skewing of ntp can cause problems, but I wonder if gelin yan has
> encountered real problems caused by the ntp skewing in the application
> under discussion. Gelin, you did not describe what problem you're actually
> having. If you would, that would benefit the continuation of the discussion.
>
> --
> Christopher Armstrong
> http://radix.twistedmatrix.com/
> http://planet-if.com/
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
Hi Christopher

   I didn't encounter any problem with twisted so far but it happened a few
years ago when I deployed the system (based on C#/C++) on windows.
Sometimes, the timer stopped running.

    Bugs triggered by this issue are not really easy to be detected. That
is why I am concerned.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121029/36a50ad1/attachment.html>

From p.mayers at imperial.ac.uk  Mon Oct 29 02:33:48 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 29 Oct 2012 08:33:48 +0000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
Message-ID: <508E3F6C.1030301@imperial.ac.uk>

On 10/28/2012 10:16 PM, Tristan Seligmann wrote:
> On Mon, Oct 29, 2012 at 12:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> This depends on how you're running ntpd. If you have "-x" on the command
>> line, yes - ntpd will not step.
>>
>> If not, there are circumstances it will step - clock diffs in excess of
>> 128ms iirc?
>
> If an offset of 128ms occurs at any time other than initial ntpd
> startup (which will presumably occur at system startup), that means
> you've either experienced a significant period of time without
> connectivity to time servers[1], you have a hardware / kernel issue
> that should be resolved, or some other software on the system is
> messing with the clock. Aside from network issues, the other
> possibilities are all serious issues that should be corrected, not
> tolerated as a normal situation.

Sadly, this is not the case. As has already been pointed out, virtual 
machine clocks can undergo stepping in "normal" oepration. A specfic 
example: if a VMWare installation performs live migration of a host. We 
often see:

ntpd[1793]: time reset +0.263757 s

...when this happens. This can occur several times a day, as we're 
running vCenter-controlled auto-migration - a very common setup. This is 
forward stepping of course, so is relatively harmless (backward is a pain).

>
>> Who knows what newer implementations like chrony or openntpd do!
>
> If they're doing something silly, then maybe you shouldn't use them.

I have no reason to suspect they are doing somthing silly. I merely 
point out that there are other implmentations than the common ntpd, and 
that I don't know if they step or not. In fact, a little research 
suggests that chrony has *better* behaviour w.r.t stepping than ntpd:

http://lists.fedoraproject.org/pipermail/devel/2010-May/135679.html

...which is nice.

I sense a bit of defensiveness to this reply, TBH. Maybe I'm imagniing 
it, but if so that's unncessary. I don't hold a strong position about 
Twisted having a monotonic clock.

When the original ticket was discussed here months ago, I was quite 
alarmed because the symptoms sounded dire. Further discussion clarified 
what the issues were, and I decided they weren't significant (for us).

Maybe "Twisted doesn't need a monotonic clock" is the right reply, but 
it would be wrong to base that on the assumpton that "ntpd doesn't step" 
- that's all I was trying to say.

Cheers,
Phil



From mithrandi at mithrandi.net  Mon Oct 29 03:59:02 2012
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 29 Oct 2012 11:59:02 +0200
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <508E3F6C.1030301@imperial.ac.uk>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
Message-ID: <CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>

On Mon, Oct 29, 2012 at 10:33 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 10/28/2012 10:16 PM, Tristan Seligmann wrote:
>> On Mon, Oct 29, 2012 at 12:05 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> Sadly, this is not the case. As has already been pointed out, virtual
> machine clocks can undergo stepping in "normal" oepration. A specfic
> example: if a VMWare installation performs live migration of a host. We
> often see:
>
> ntpd[1793]: time reset +0.263757 s
>
> ...when this happens. This can occur several times a day, as we're
> running vCenter-controlled auto-migration - a very common setup. This is
> forward stepping of course, so is relatively harmless (backward is a pain).

My original reply was perhaps a bit... exclusionary. But I think the
point I was trying to make is still valid; if your VM is suspended for
250ms due to a migration (or CPU throttling, or ...) then it is
impossible to maintain a consistent stream of time events because
there isn't any code executing at all. Whether the clock stalls, or is
jumped forward 250ms, you still have an unavoidable problem as far as
time-keeping is concerned.

>>> Who knows what newer implementations like chrony or openntpd do!
>>
>> If they're doing something silly, then maybe you shouldn't use them.

I didn't intend it that way, but I can see how what I said could be
read in a hostile / defensive tone. Perhaps this would be a better
phrasing:

If chrony or openntpd are doing something sensible, then there
shouldn't be any serious issues with using them; if they're doing
something that seriously destabilizes the system clock, then you
probably shouldn't be using them, at least not if you want reliable
timekeeping. I'm not familiar enough with either of them to know which
case applies, so I didn't intend to come across as bashing chrony
and/or openntpd.

> Maybe "Twisted doesn't need a monotonic clock" is the right reply, but
> it would be wrong to base that on the assumpton that "ntpd doesn't step"
> - that's all I was trying to say.

I don't think anyone in this thread is arguing *against* implementing
this functionality; I think the point was just that this functionality
is only of critical importance under a limited range of circumstances,
as opposed to being something of urgent need for every Twisted-using
program that needs to schedule timed events.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From exarkun at twistedmatrix.com  Mon Oct 29 09:02:45 2012
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 29 Oct 2012 15:02:45 -0000
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
	<CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
Message-ID: <20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>

On 28 Oct, 08:40 pm, _ at lvh.cc wrote:
>
>For some reason I thought IProtocol.makeConnection did that; I guess 
>it's
>because the implementation in Protocol sets the `transport` attribute 
>(I
>thought it was the other way around).
>
>I've set transport.protocol = myNewProtocol and now there's one extra
>passing acceptance test.

In case anyone didn't read #3204: this is, of course, an unsupported use 
of transports and not guaranteed to work or continue working (currently 
it will not work if you happen to be using the (preferred) protocol- 
based SSL implementation).

Jean-Paul



From dynamicgl at gmail.com  Mon Oct 29 09:21:51 2012
From: dynamicgl at gmail.com (gelin yan)
Date: Mon, 29 Oct 2012 23:21:51 +0800
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
	<CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
Message-ID: <CABkOF6RCWsFyXK-CXeiRDV=PsHz6L-2hJJwznz4vjsYLVoGT2g@mail.gmail.com>

On Mon, Oct 29, 2012 at 5:59 PM, Tristan Seligmann
<mithrandi at mithrandi.net>wrote:

> On Mon, Oct 29, 2012 at 10:33 AM, Phil Mayers <p.mayers at imperial.ac.uk>
> wrote:
> > On 10/28/2012 10:16 PM, Tristan Seligmann wrote:
> >> On Mon, Oct 29, 2012 at 12:05 AM, Phil Mayers <p.mayers at imperial.ac.uk>
> wrote:
> > Sadly, this is not the case. As has already been pointed out, virtual
> > machine clocks can undergo stepping in "normal" oepration. A specfic
> > example: if a VMWare installation performs live migration of a host. We
> > often see:
> >
> > ntpd[1793]: time reset +0.263757 s
> >
> > ...when this happens. This can occur several times a day, as we're
> > running vCenter-controlled auto-migration - a very common setup. This is
> > forward stepping of course, so is relatively harmless (backward is a
> pain).
>
> My original reply was perhaps a bit... exclusionary. But I think the
> point I was trying to make is still valid; if your VM is suspended for
> 250ms due to a migration (or CPU throttling, or ...) then it is
> impossible to maintain a consistent stream of time events because
> there isn't any code executing at all. Whether the clock stalls, or is
> jumped forward 250ms, you still have an unavoidable problem as far as
> time-keeping is concerned.
>
> >>> Who knows what newer implementations like chrony or openntpd do!
> >>
> >> If they're doing something silly, then maybe you shouldn't use them.
>
> I didn't intend it that way, but I can see how what I said could be
> read in a hostile / defensive tone. Perhaps this would be a better
> phrasing:
>
> If chrony or openntpd are doing something sensible, then there
> shouldn't be any serious issues with using them; if they're doing
> something that seriously destabilizes the system clock, then you
> probably shouldn't be using them, at least not if you want reliable
> timekeeping. I'm not familiar enough with either of them to know which
> case applies, so I didn't intend to come across as bashing chrony
> and/or openntpd.
>
> > Maybe "Twisted doesn't need a monotonic clock" is the right reply, but
> > it would be wrong to base that on the assumpton that "ntpd doesn't step"
> > - that's all I was trying to say.
>
> I don't think anyone in this thread is arguing *against* implementing
> this functionality; I think the point was just that this functionality
> is only of critical importance under a limited range of circumstances,
> as opposed to being something of urgent need for every Twisted-using
> program that needs to schedule timed events.
> --
> mithrandi, i Ainil en-Balandor, a faer Ambar
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Hi

   Actually clock forward can be accepted at least for my case but not
backward which may freeze the whole process and nobody know when it will be
resumed in the future.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121029/ba6fbc1c/attachment.html>

From glyph at twistedmatrix.com  Mon Oct 29 11:39:24 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 29 Oct 2012 10:39:24 -0700
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
	<CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
Message-ID: <85227B2E-8A05-4A16-8245-008511624029@twistedmatrix.com>


On Oct 29, 2012, at 2:59 AM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:

> I don't think anyone in this thread is arguing *against* implementing
> this functionality; I think the point was just that this functionality
> is only of critical importance under a limited range of circumstances,
> as opposed to being something of urgent need for every Twisted-using
> program that needs to schedule timed events.

Yes.  Even if the reasons cited in this thread are not 100% correct, the fact is that many thousands of Twisted servers that depend intimately on timed events are deployed, even on vmware-hosted virtual machine infrastructures, without experiencing difficulties related to #2424.

That said, it would be great if someone could implement a fix for that issue, as it's just one more thing that system operators need to be aware of and keep track of.  It would be really neat if you could totally screw up your timekeeping but have Twisted applications keep running reliably regardless.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121029/5bb395bb/attachment.html>

From glyph at twistedmatrix.com  Mon Oct 29 11:41:28 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 29 Oct 2012 10:41:28 -0700
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
	<CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
	<20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
Message-ID: <D57321DD-67EF-4FF1-8DF1-657048E88A5A@twistedmatrix.com>


On Oct 29, 2012, at 8:02 AM, exarkun at twistedmatrix.com wrote:

> On 28 Oct, 08:40 pm, _ at lvh.cc wrote:
>> 
>> For some reason I thought IProtocol.makeConnection did that; I guess 
>> it's
>> because the implementation in Protocol sets the `transport` attribute 
>> (I
>> thought it was the other way around).
>> 
>> I've set transport.protocol = myNewProtocol and now there's one extra
>> passing acceptance test.
> 
> In case anyone didn't read #3204: this is, of course, an unsupported use 
> of transports and not guaranteed to work or continue working (currently 
> it will not work if you happen to be using the (preferred) protocol- 
> based SSL implementation).

Why would anyone not have read <http://tm.tl/3204>?  Everyone, go read it, right now.  (There's a branch, and everything!)

-glyph


From p.mayers at imperial.ac.uk  Mon Oct 29 11:52:17 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 29 Oct 2012 17:52:17 +0000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
	<CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
Message-ID: <508EC251.10604@imperial.ac.uk>

On 29/10/12 09:59, Tristan Seligmann wrote:

> I don't think anyone in this thread is arguing *against* implementing
> this functionality; I think the point was just that this functionality
> is only of critical importance under a limited range of circumstances,
> as opposed to being something of urgent need for every Twisted-using
> program that needs to schedule timed events.

I think this is a pretty good summary; it's rare to need this (though 
often essential when you do) and it's also hard. TBH I'm not sure there 
are any sensible semantics for a lot of the cases - the best the 
framework can do is give the app an option for clocks, and try to give 
them as much info as possible about how they've advanced or not.



From tobias.oberstein at tavendo.de  Mon Oct 29 11:58:02 2012
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 29 Oct 2012 10:58:02 -0700
Subject: [Twisted-Python] deferToThread and reactor loop
Message-ID: <634914A010D0B943A035D226786325D433914E92BA@EXVMBX020-12.exch020.serverdata.net>

Hi,

I've got a question regarding

deferToThread / runWithConnection

I have a network server that accepts RPCs and forwards those to a relational database calling stored procedures.

The call of the stored procedures is happening via "runWithConnection" .. that is on a background thread pool (since that DBs driver is blocking).

Now, when there is a large number of RPCs coming in roughly at once, the latency of each call forwarded to the RDBMs increased into the 10's of ms.

I have created a self-contained test program without DB etc that I think reproduces the "issue":

https://github.com/oberstet/scratchbox/blob/master/python/twisted/threadpoollatency/test.py

**************
Am I correct that "deferToThread" does not immediately forward the call to a background thread, but only the next time the reactor loop runs?
**************

At least that is what I conclude from the test program's option
 
https://github.com/oberstet/scratchbox/blob/master/python/twisted/threadpoollatency/test.py#L58

which produces totally different timing results:

$ python test.py 800 no 20
2012-10-29 18:41:11+0100 [-] Log opened.
2012-10-29 18:41:11+0100 [-] Using Twisted reactor class <class 'twisted.internet.iocpreactor.reactor.IOCPReactor'>
2012-10-29 18:41:11+0100 [-] Thread pool size suggested: 20
2012-10-29 18:41:11+0100 [-] Worker count: 800
2012-10-29 18:41:11+0100 [-] release to reactor between deferToThread: False
2012-10-29 18:41:11+0100 [-] total run-time: 121 ms
2012-10-29 18:41:11+0100 [-] avg. thread switch IN  time: 61177 us
2012-10-29 18:41:11+0100 [-] max. thread switch IN  time: 79436 us
2012-10-29 18:41:11+0100 [-] avg. thread switch OUT time: 16021 us
2012-10-29 18:41:11+0100 [-] max. thread switch OUT time: 23150 us
2012-10-29 18:41:11+0100 [-] Main loop terminated.

$ python test.py 800 yes 20
2012-10-29 18:41:14+0100 [-] Log opened.
2012-10-29 18:41:14+0100 [-] Using Twisted reactor class <class 'twisted.internet.iocpreactor.reactor.IOCPReactor'>
2012-10-29 18:41:14+0100 [-] Thread pool size suggested: 20
2012-10-29 18:41:14+0100 [-] Worker count: 800
2012-10-29 18:41:14+0100 [-] release to reactor between deferToThread: True
2012-10-29 18:41:14+0100 [-] total run-time: 201 ms
2012-10-29 18:41:14+0100 [-] avg. thread switch IN  time: 127 us
2012-10-29 18:41:14+0100 [-] max. thread switch IN  time: 5131 us
2012-10-29 18:41:14+0100 [-] avg. thread switch OUT time: 166 us
2012-10-29 18:41:14+0100 [-] max. thread switch OUT time: 7886 us
2012-10-29 18:41:15+0100 [-] Main loop terminated.

===

Could someone pls enlighten me rgd the "issue"? What's the point, and how to interpret the timings?

Any hints greatly appreciated!

Thanks,
Tobias

Above timings are on Windows. Here other platforms:


Results on FreeBSD
================

[oberstet at www ~/scm/scratchbox/python/twisted/threadpoollatency]$ python test.py 800 no 20
2012-10-29 17:53:37+0000 [-] Log opened.
2012-10-29 17:53:37+0000 [-] Using Twisted reactor class <class 'twisted.internet.kqreactor.KQueueReactor'>
2012-10-29 17:53:37+0000 [-] Thread pool size suggested: 20
2012-10-29 17:53:37+0000 [-] Worker count: 800
2012-10-29 17:53:37+0000 [-] release to reactor between deferToThread: False
2012-10-29 17:53:37+0000 [-] total run-time: 469 ms
2012-10-29 17:53:37+0000 [-] avg. thread switch IN  time: 244311 us
2012-10-29 17:53:37+0000 [-] max. thread switch IN  time: 300846 us
2012-10-29 17:53:37+0000 [-] avg. thread switch OUT time: 2347 us
2012-10-29 17:53:37+0000 [-] max. thread switch OUT time: 25703 us
2012-10-29 17:53:37+0000 [-] Main loop terminated.

[oberstet at www ~/scm/scratchbox/python/twisted/threadpoollatency]$ python test.py 800 yes 20
2012-10-29 17:53:44+0000 [-] Log opened.
2012-10-29 17:53:44+0000 [-] Using Twisted reactor class <class 'twisted.internet.kqreactor.KQueueReactor'>
2012-10-29 17:53:44+0000 [-] Thread pool size suggested: 20
2012-10-29 17:53:44+0000 [-] Worker count: 800
2012-10-29 17:53:45+0000 [-] release to reactor between deferToThread: True
2012-10-29 17:53:45+0000 [-] total run-time: 707 ms
2012-10-29 17:53:45+0000 [-] avg. thread switch IN  time: 410 us
2012-10-29 17:53:45+0000 [-] max. thread switch IN  time: 6184 us
2012-10-29 17:53:45+0000 [-] avg. thread switch OUT time: 310 us
2012-10-29 17:53:45+0000 [-] max. thread switch OUT time: 1331 us
2012-10-29 17:53:45+0000 [-] Main loop terminated.


Results on Linux
=============

[webmq at webmqpgcentos threadpoollatency]$ python test.py 800 no 20
2012-10-29 18:56:13+0100 [-] Log opened.
2012-10-29 18:56:13+0100 [-] Using Twisted reactor class <class 'twisted.internet.epollreactor.EPollReactor'>
2012-10-29 18:56:13+0100 [-] Thread pool size suggested: 20
2012-10-29 18:56:13+0100 [-] Worker count: 800
2012-10-29 18:56:13+0100 [-] release to reactor between deferToThread: False
2012-10-29 18:56:13+0100 [-] total run-time: 178 ms
2012-10-29 18:56:13+0100 [-] avg. thread switch IN  time: 77332 us
2012-10-29 18:56:13+0100 [-] max. thread switch IN  time: 123225 us
2012-10-29 18:56:13+0100 [-] avg. thread switch OUT time: 22048 us
2012-10-29 18:56:13+0100 [-] max. thread switch OUT time: 43779 us
2012-10-29 18:56:13+0100 [-] Main loop terminated.

[webmq at webmqpgcentos threadpoollatency]$ python test.py 800 yes 20
2012-10-29 18:56:14+0100 [-] Log opened.
2012-10-29 18:56:14+0100 [-] Using Twisted reactor class <class 'twisted.internet.epollreactor.EPollReactor'>
2012-10-29 18:56:14+0100 [-] Thread pool size suggested: 20
2012-10-29 18:56:14+0100 [-] Worker count: 800
2012-10-29 18:56:15+0100 [-] release to reactor between deferToThread: True
2012-10-29 18:56:15+0100 [-] total run-time: 370 ms
2012-10-29 18:56:15+0100 [-] avg. thread switch IN  time: 694 us
2012-10-29 18:56:15+0100 [-] max. thread switch IN  time: 3204 us
2012-10-29 18:56:15+0100 [-] avg. thread switch OUT time: 483 us
2012-10-29 18:56:15+0100 [-] max. thread switch OUT time: 7991 us
2012-10-29 18:56:15+0100 [-] Main loop terminated.




From glyph at twistedmatrix.com  Mon Oct 29 12:08:15 2012
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 29 Oct 2012 11:08:15 -0700
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <508EC251.10604@imperial.ac.uk>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
	<CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
	<508EC251.10604@imperial.ac.uk>
Message-ID: <6048BF5C-B7F5-47B9-B787-414168D5C592@twistedmatrix.com>


On Oct 29, 2012, at 10:52 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> On 29/10/12 09:59, Tristan Seligmann wrote:
> 
>> I don't think anyone in this thread is arguing *against* implementing
>> this functionality; I think the point was just that this functionality
>> is only of critical importance under a limited range of circumstances,
>> as opposed to being something of urgent need for every Twisted-using
>> program that needs to schedule timed events.
> 
> I think this is a pretty good summary; it's rare to need this (though 
> often essential when you do) and it's also hard. TBH I'm not sure there 
> are any sensible semantics for a lot of the cases - the best the 
> framework can do is give the app an option for clocks, and try to give 
> them as much info as possible about how they've advanced or not.

Right; callLater is not quite expressive enough.  I wouldn't want to expose the whole mess of clock nonsense to every application, but it would be necessary to split callLater into "callAfter" (delay a certain number of seconds from "now", to within a best guess, regardless of clock changes) and "callAt" (call as close as possible to a certain calendar time, respecting clock changes).

-glyph


From _ at lvh.cc  Tue Oct 30 00:50:17 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 30 Oct 2012 07:50:17 +0100
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
	<CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
	<20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
Message-ID: <CAE_Hg6bM+fV9HWMo8JSumkWY1-qSYgVqAxNhZq+Fp7pMVKbVEw@mail.gmail.com>

On Mon, Oct 29, 2012 at 4:02 PM, <exarkun at twistedmatrix.com> wrote:

>  In case anyone didn't read #3204: this is, of course, an unsupported use
> of transports and not guaranteed to work or continue working (currently
> it will not work if you happen to be using the (preferred) protocol-
> based SSL implementation).
>

So, is there a non-terrible way of doing "feed the raw HTTP bytes that
caused this request to this factory instead", in an IResource?


> Jean-Paul
>

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121030/0750ee05/attachment.html>

From josh at bartletts.id.au  Tue Oct 30 01:09:54 2012
From: josh at bartletts.id.au (Joshua Bartlett)
Date: Tue, 30 Oct 2012 17:09:54 +1000
Subject: [Twisted-Python] a question about monotonic clock
In-Reply-To: <6048BF5C-B7F5-47B9-B787-414168D5C592@twistedmatrix.com>
References: <CABkOF6Ss6-TnZ2AJbCdmc3t5+FX51ZwpQ5+G+D9UOZsxNENPUg@mail.gmail.com>
	<20121028122839.4363.1912709965.divmod.xquotient.29@localhost6.localdomain6>
	<CAPkRfUQPgtWt-ZTHwTQ1UmNqBS7S7jQ-_a6wEgTNqD21hZhenA@mail.gmail.com>
	<CAMcKhMQry+buG5p4AbF31kRWmx1OZ6o+JhV7bvpRmWyOuS6zWA@mail.gmail.com>
	<CAPkRfUTv3DJrrcs96t_osrw_+e_kt-=1V0G0GViNefG8N6SwxA@mail.gmail.com>
	<FFF8AE97-3421-4115-9926-EC376C2A2256@twistedmatrix.com>
	<f0a24c34-c4db-4659-99de-86e09000a7f7@email.android.com>
	<CAMcKhMQDo7gukfnE34_FFLWZb46yY33Ps1fjOkN9BVmLGrU7hg@mail.gmail.com>
	<508E3F6C.1030301@imperial.ac.uk>
	<CAMcKhMRb4MG=EEckpm_ARDoFnc75gQW9NC8Cnbj+6rmG7qhbuQ@mail.gmail.com>
	<508EC251.10604@imperial.ac.uk>
	<6048BF5C-B7F5-47B9-B787-414168D5C592@twistedmatrix.com>
Message-ID: <CABZk45xTBEQKiQmW14AsYaivz6TcDt6UPE1L-G4eYAcogSvR8A@mail.gmail.com>

On 30 October 2012 04:08, Glyph <glyph at twistedmatrix.com> wrote:

> Right; callLater is not quite expressive enough.  I wouldn't want to
> expose the whole mess of clock nonsense to every application, but it would
> be necessary to split callLater into "callAfter" (delay a certain number of
> seconds from "now", to within a best guess, regardless of clock changes)
> and "callAt" (call as close as possible to a certain calendar time,
> respecting clock changes).
>

+1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121030/41d3fe9c/attachment-0001.html>

From p.mayers at imperial.ac.uk  Tue Oct 30 03:04:02 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 30 Oct 2012 09:04:02 +0000
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <CAE_Hg6bM+fV9HWMo8JSumkWY1-qSYgVqAxNhZq+Fp7pMVKbVEw@mail.gmail.com>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
	<CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
	<20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
	<CAE_Hg6bM+fV9HWMo8JSumkWY1-qSYgVqAxNhZq+Fp7pMVKbVEw@mail.gmail.com>
Message-ID: <508F9802.1030907@imperial.ac.uk>

On 10/30/2012 06:50 AM, Laurens Van Houtven wrote:
> On Mon, Oct 29, 2012 at 4:02 PM, <exarkun at twistedmatrix.com
> <mailto:exarkun at twistedmatrix.com>> wrote:
>
>     In case anyone didn't read #3204: this is, of course, an unsupported use
>     of transports and not guaranteed to work or continue working (currently
>     it will not work if you happen to be using the (preferred) protocol-
>     based SSL implementation).
>
>
> So, is there a non-terrible way of doing "feed the raw HTTP bytes that
> caused this request to this factory instead", in an IResource?

Would it not make more sense to subclass Site and swap out the Channel 
implementation for one that can be "pointed" somewhere else? It means 
you have to use that "Site" for any WebSocket enabled site, but it would 
be clean otherwise. Like so:

class WebSockCapableChannel(http.HTTPChannel):
   def __init__(self):
     http.HTTPChannel.__init__(self)
     self.websocket = False

   def startWebSocket(self, proto):
     self.websocket = True
     self.websocket_proto = proto
     proto.transport = someWrapper(self)
     proto.connectionMade(...)
     self.setRawMode()

   def rawDataReceived(self, data):
     if self.websocket:
       self.websocket_proto.dataReceived(data)
     else:
       http.HTTPChannel.rawDataReceived(self, data)

class WebSocketSite(server.Site):
   procol = WebSockCapableChannel

...then in your "Resource" do:

class MyResource(...):
   def render(...):
     request.channel.startWebSocket(someProto())



From _ at lvh.cc  Tue Oct 30 03:18:11 2012
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 30 Oct 2012 10:18:11 +0100
Subject: [Twisted-Python] Transplating a request's transport (SockJS)
In-Reply-To: <508F9802.1030907@imperial.ac.uk>
References: <CAE_Hg6b=wLRCg--S9jhgVBnrxpxGJn-OE=dVx85UPW4ZDrVitw@mail.gmail.com>
	<33F1CC8B-8DDB-4FED-B717-F06F09007BEE@twistedmatrix.com>
	<CAE_Hg6b_P+_eJZPRWFgCdXUDyXjWOmn2_7XRFUOmLL-XsOp+SA@mail.gmail.com>
	<20121029150245.4363.1497808766.divmod.xquotient.33@localhost6.localdomain6>
	<CAE_Hg6bM+fV9HWMo8JSumkWY1-qSYgVqAxNhZq+Fp7pMVKbVEw@mail.gmail.com>
	<508F9802.1030907@imperial.ac.uk>
Message-ID: <CAE_Hg6aSeSP9piF1oBY0_4qOctMqsgVQ0n5R_bnsZLFfbhF9MA@mail.gmail.com>

On Tue, Oct 30, 2012 at 10:04 AM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> Would it not make more sense to subclass Site and swap out the Channel
> implementation for one that can be "pointed" somewhere else? It means
> you have to use that "Site" for any WebSocket enabled site, but it would
> be clean otherwise. Like so:
>

Just to be clear (I'm not sure it matters): SockJS is something that gives
a WebSockets API on the client side, but implements that using whatever the
best API is available there. It may in fact be implemented using a whole
host of things, including XHR streaming and polling, iframes, ...


> class WebSockCapableChannel(http.HTTPChannel):
>    def __init__(self):
>      http.HTTPChannel.__init__(self)
>      self.websocket = False
>
>    def startWebSocket(self, proto):
>      self.websocket = True
>      self.websocket_proto = proto
>      proto.transport = someWrapper(self)
>      proto.connectionMade(...)
>      self.setRawMode()
>
>    def rawDataReceived(self, data):
>      if self.websocket:
>        self.websocket_proto.dataReceived(data)
>      else:
>        http.HTTPChannel.rawDataReceived(self, data)
>
> class WebSocketSite(server.Site):
>    procol = WebSockCapableChannel
>
> ...then in your "Resource" do:
>
> class MyResource(...):
>    def render(...):
>      request.channel.startWebSocket(someProto())
>

I'll try that; but isn't render called when an awful lot of parsing has
already been done? Query arguments and headers are already read and parsed;
sockjs-twisted expects its first line to be "POST /echo/bla/bla/bla
HTTP/1.1\r\n" :)


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20121030/2c8f43bb/attachment.html>

From gregoire.leroy at retenodus.net  Wed Oct 31 01:14:34 2012
From: gregoire.leroy at retenodus.net (=?iso-8859-1?q?Gr=E9goire_Leroy?=)
Date: Wed, 31 Oct 2012 16:14:34 +0900
Subject: [Twisted-Python] Create client in Server factory
Message-ID: <201210311614.34673.gregoire.leroy@retenodus.net>

Hi,

I have a server who receive data from clients A/B/C (remote machines). I want 
to use a client D (on the same machine than the server) to send this data to 
another server (remote).

The difficulty is, I want to use the same client D connection for any client. I 
don't want open an new connection each time.

First thing I would think is to create the connection in my server factory, 
and use client's methods in my server protocol, for example with
[...]
class LocalProxyFactory(Factory):
        def __init__(self):
                f = LocalProxyClientFactory()
                reactor.connectTCP("retenodus.net", 4242, f)
                reactor.run()
[...]
But in this case, code execution will stay in the reactor, right ?

I have read that :
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother
But I don't know how it can be applied to my situation.

Thanks,
Grégoire Leroy



From p.mayers at imperial.ac.uk  Wed Oct 31 03:49:33 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 31 Oct 2012 09:49:33 +0000
Subject: [Twisted-Python] Create client in Server factory
In-Reply-To: <201210311614.34673.gregoire.leroy@retenodus.net>
References: <201210311614.34673.gregoire.leroy@retenodus.net>
Message-ID: <5090F42D.4050303@imperial.ac.uk>

On 10/31/2012 07:14 AM, Grégoire Leroy wrote:
> Hi,
>
> I have a server who receive data from clients A/B/C (remote machines). I want
> to use a client D (on the same machine than the server) to send this data to
> another server (remote).
>
> The difficulty is, I want to use the same client D connection for any client. I
> don't want open an new connection each time.
>
> First thing I would think is to create the connection in my server factory,
> and use client's methods in my server protocol, for example with
> [...]
> class LocalProxyFactory(Factory):
>          def __init__(self):
>                  f = LocalProxyClientFactory()
>                  reactor.connectTCP("retenodus.net", 4242, f)
>                  reactor.run()

The "reactor.run" is just wrong - remove it.

You need to connect to a server, and share this connection amongst some 
protocols. But you can't control the order in which these connections 
complete, so A/B/C might connect before D is ready.

You've really got two choices - accept the connections from A/B/C but 
have your server protocol "wait" until D is ready - something like this:

from twisted.internet.protocol import ClientCreator

class Server(...):
   def connectionMade(self):
     if self.factory.connD is None:
       self.factory.waitFor(self._ready)
       self.transport.pauseProducing()

   def _ready(self):
     self.transport.resumeProducing()

d_connect = ClientCreator(reactor, DProtocol)

class ServerFactory(...):
   def __init__(self):
     self.connD = None
     self._wait = []
     d_connect.connectTCP(Dhost, port).addCallback(self.dReady)

   def waitFor(self, _cb):
     if self.connD:
       _cb(self.connD)
     else:
       d = defer.Deferred()
       d.addCallback(_cb)
       self._wait.append(d)

   def dReady(self, proto):
     self.connD = proto
     cb = self._wait
     self._wait = []
     for c in cb:
       c.callback(proto)

def main():
   reactor.listenTCP(..., ServerFactory())
   reactor.run()

...or don't start listening until D has connected, like this:

class ServerFactory(...):
   def __init__(self, dProto):
     self.connD = dProto

def startListen(dProto):
   reactor.listenTCP(..., ServerFactory(dProto))

def main():
   d_connect.connectTCP(Dhost, port).addCallback(startListen)
   reactor.run()

The latter is simpler, but which is appropriate depends on your needs.

Note that I've used ClientCreator to get a callback when the connection 
to D is ready - remember that doesn't happen immediately.



From kevin.horn at gmail.com  Wed Oct 31 08:31:32 2012
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 31 Oct 2012 09:31:32 -0500
Subject: [Twisted-Python] Create client in Server factory
In-Reply-To: <5090F42D.4050303@imperial.ac.uk>
References: <201210311614.34673.gregoire.leroy@retenodus.net>
	<5090F42D.4050303@imperial.ac.uk>
Message-ID: <CA+U=zK0YZ-CPmiJKPnH9YTes5BBuNt3AZCXm8h37xON=7yLyfA@mail.gmail.com>

On Wed, Oct 31, 2012 at 4:49 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 10/31/2012 07:14 AM, Grégoire Leroy wrote:
>> Hi,
>>
>> I have a server who receive data from clients A/B/C (remote machines). I want
>> to use a client D (on the same machine than the server) to send this data to
>> another server (remote).
>>
>> The difficulty is, I want to use the same client D connection for any client. I
>> don't want open an new connection each time.
>>
>> First thing I would think is to create the connection in my server factory,
>> and use client's methods in my server protocol, for example with
>> [...]
>> class LocalProxyFactory(Factory):
>>          def __init__(self):
>>                  f = LocalProxyClientFactory()
>>                  reactor.connectTCP("retenodus.net", 4242, f)
>>                  reactor.run()
>
> The "reactor.run" is just wrong - remove it.
>
> You need to connect to a server, and share this connection amongst some
> protocols. But you can't control the order in which these connections
> complete, so A/B/C might connect before D is ready.
>
> You've really got two choices - accept the connections from A/B/C but
> have your server protocol "wait" until D is ready - something like this:
>
> from twisted.internet.protocol import ClientCreator
>
> class Server(...):
>    def connectionMade(self):
>      if self.factory.connD is None:
>        self.factory.waitFor(self._ready)
>        self.transport.pauseProducing()
>
>    def _ready(self):
>      self.transport.resumeProducing()
>
> d_connect = ClientCreator(reactor, DProtocol)
>
> class ServerFactory(...):
>    def __init__(self):
>      self.connD = None
>      self._wait = []
>      d_connect.connectTCP(Dhost, port).addCallback(self.dReady)
>
>    def waitFor(self, _cb):
>      if self.connD:
>        _cb(self.connD)
>      else:
>        d = defer.Deferred()
>        d.addCallback(_cb)
>        self._wait.append(d)
>
>    def dReady(self, proto):
>      self.connD = proto
>      cb = self._wait
>      self._wait = []
>      for c in cb:
>        c.callback(proto)
>
> def main():
>    reactor.listenTCP(..., ServerFactory())
>    reactor.run()
>
> ...or don't start listening until D has connected, like this:
>
> class ServerFactory(...):
>    def __init__(self, dProto):
>      self.connD = dProto
>
> def startListen(dProto):
>    reactor.listenTCP(..., ServerFactory(dProto))
>
> def main():
>    d_connect.connectTCP(Dhost, port).addCallback(startListen)
>    reactor.run()
>
> The latter is simpler, but which is appropriate depends on your needs.
>
> Note that I've used ClientCreator to get a callback when the connection
> to D is ready - remember that doesn't happen immediately.
>

See also:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

That example only uses a single connection in place of your clients
A/B/C, but should be adaptable to your situation.

--
Kevin Horn



From p.mayers at imperial.ac.uk  Wed Oct 31 15:06:33 2012
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 31 Oct 2012 21:06:33 +0000
Subject: [Twisted-Python] Create client in Server factory
In-Reply-To: <CA+U=zK0YZ-CPmiJKPnH9YTes5BBuNt3AZCXm8h37xON=7yLyfA@mail.gmail.com>
References: <201210311614.34673.gregoire.leroy@retenodus.net>
	<5090F42D.4050303@imperial.ac.uk>
	<CA+U=zK0YZ-CPmiJKPnH9YTes5BBuNt3AZCXm8h37xON=7yLyfA@mail.gmail.com>
Message-ID: <509192D9.4040408@imperial.ac.uk>

On 10/31/2012 02:31 PM, Kevin Horn wrote:

> See also:
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother
>
> That example only uses a single connection in place of your clients
> A/B/C, but should be adaptable to your situation.
>

In fairness to the OP, he did say he'd seen that ;o)



