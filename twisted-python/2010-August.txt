From exarkun at twistedmatrix.com  Sun Aug  1 00:05:35 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Aug 2010 04:05:35 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1280635535.78.1764854842@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100801/4686e524/attachment.htm 

From alvinwang at gmail.com  Sun Aug  1 01:24:06 2010
From: alvinwang at gmail.com (Alvin Wang)
Date: Sat, 31 Jul 2010 22:24:06 -0700
Subject: [Twisted-Python] OpenStack uses Twisted
In-Reply-To: <8E5F8ACC-2715-464D-A69D-8FC9FC66E0CD@gmail.com>
References: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com> 
	<8E5F8ACC-2715-464D-A69D-8FC9FC66E0CD@gmail.com>
Message-ID: <AANLkTimguv5Sz7VvsPud=ZRCLQJRreJu-W-LW65PWCtZ@mail.gmail.com>

I went to a live Presentation at the cloudkick HQ last Thursday.
http://www.meetup.com/openstack/

If you are in the SF Bay Area, they are going to have a tour of NASA before
the next meeting.

Alvin

On Sat, Jul 31, 2010 at 2:51 PM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Hey Alvin,
>
> Where on the launchpad did you find the preso?
>
> -J
>
> Sent via iPhone
>
> Is your e-mail Premiere?
>
> On Jul 30, 2010, at 22:56, Alvin Wang <alvinwang at gmail.com> wrote:
>
> FYI - I went to a presentation on Nova/OpenStack
> <https://launchpad.net/nova>https://launchpad.net/nova
>
> They use Twisted and they are planning on taking out Tornado.  You can run
> your own amazon using Twisted.
>
> _______________________________________________
>
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100731/4b80a90d/attachment.htm 

From jasonjwwilliams at gmail.com  Mon Aug  2 02:08:13 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 2 Aug 2010 00:08:13 -0600
Subject: [Twisted-Python] OpenStack uses Twisted
In-Reply-To: <AANLkTimguv5Sz7VvsPud=ZRCLQJRreJu-W-LW65PWCtZ@mail.gmail.com>
References: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>
	<8E5F8ACC-2715-464D-A69D-8FC9FC66E0CD@gmail.com>
	<AANLkTimguv5Sz7VvsPud=ZRCLQJRreJu-W-LW65PWCtZ@mail.gmail.com>
Message-ID: <C1363B3D-0A56-4055-A73F-C1022EA2B19B@gmail.com>

I wonder if anyone on this list has a copy? :)

Sent via iPhone

Is your e-mail Premiere?

On Jul 31, 2010, at 23:24, Alvin Wang <alvinwang at gmail.com> wrote:

> I went to a live Presentation at the cloudkick HQ last Thursday.
> http://www.meetup.com/openstack/
> 
> If you are in the SF Bay Area, they are going to have a tour of NASA before the next meeting.
> 
> Alvin
> 
> On Sat, Jul 31, 2010 at 2:51 PM, Jason J. W. Williams <jasonjwwilliams at gmail.com> wrote:
> Hey Alvin,
> 
> Where on the launchpad did you find the preso?
> 
> -J
> 
> Sent via iPhone
> 
> Is your e-mail Premiere?
> 
> On Jul 30, 2010, at 22:56, Alvin Wang <alvinwang at gmail.com> wrote:
> 
>> FYI - I went to a presentation on Nova/OpenStack
>> https://launchpad.net/nova
>> 
>> They use Twisted and they are planning on taking out Tornado.  You can run your own amazon using Twisted.
>> _______________________________________________
>> 
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100802/0dac729c/attachment.htm 

From ssoni at nextdigital.com  Tue Aug  3 22:20:55 2010
From: ssoni at nextdigital.com (Sury Soni)
Date: Wed, 4 Aug 2010 02:20:55 +0000
Subject: [Twisted-Python] Cred question
Message-ID: <6CD03B2AA6AE4747BAF3A0D5EEEF728606EF7D@exmbx01.corp.nextdigital.com>

Hi,

I am using Cred authentication system in my Nevow based web application.

Admin user can see list of all users from admin interface of the application.

Now, admin user wants to do following things:

1.       Automatically login as other user

2.       Induce logout to already logged in user.

Q1. Since, admin user itself used cred authentication to login in first place, how do we do automatic login as different user programmatically or logout already logged in other user?

I tried to redirect my application to /__login__/?username=otherusername&password=itspassword and it went through Cred system, but I believe, since previous session was active as well, it triggered logout.

Q2. Does cred allow multiple login sessions in same browser? So, that admin user can maintain its own session and login into other user as well.

Please advice.

Regards,

Sury
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100804/4763d36c/attachment.htm 

From petshmidt at googlemail.com  Wed Aug  4 06:00:16 2010
From: petshmidt at googlemail.com (Pet)
Date: Wed, 4 Aug 2010 12:00:16 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
Message-ID: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>

Hello,

I've started learning twisted by implementing linereceiver, where for
each new connection a new instance of MyProtocol is created:

class MyFactory(protocol.ServerFactory):
    protocol = MyProtocol
    def __init__(self):
        self.db = adbapi.ConnectionPool()

class MyService(internet.TCPServer):
    def __init__(self):
        print "Starting Service..."
        internet.TCPServer.__init__(self, PORT, MyFactory())

def main():
    reactor.listenTCP(settings.PORT, MyFactory())
    reactor.run()

if __name__ == '__main__':
    main()


Now, for XMLRPC this looks for me like Protocol instance is reused for
all connection. If it is so, can I change this behavior, so I have one
instance of Protocol per connection?
Thanks for help!
Pet



class MyXMLRPCFactory(server.Site):
    def __init__(self):
        self.db = adbapi.ConnectionPool()
        self.r = MyXMLRPCProtokoll(self)
        server.Site.__init__(self,self.r)

class MyXMLRPCService(internet.TCPServer):
   def __init__(self):
       internet.TCPServer.__init__(self, settings.XMLRPC_PORT,
MyXMLRPCFactory())

def main():
   from twisted.internet import reactor
   r = MyXMLRPCProtokoll()
   reactor.listenTCP(settings.XMLRPC_PORT, server.Site(r))
   reactor.run()

if __name__ == '__main__':
   main()


From mailing at franzoni.eu  Wed Aug  4 06:25:08 2010
From: mailing at franzoni.eu (Alan Franzoni)
Date: Wed, 04 Aug 2010 12:25:08 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
Message-ID: <i3bf64$lkn$1@dough.gmane.org>

Just ovverride the "protocol" attribute on your factory with the
callable you want to be called when a new protocol needs to be
instanced. I'd suppose you'd probably want to subclass HTTPChannel or
something like that.






From petshmidt at googlemail.com  Wed Aug  4 07:30:26 2010
From: petshmidt at googlemail.com (Pet)
Date: Wed, 4 Aug 2010 13:30:26 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <i3bf64$lkn$1@dough.gmane.org>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<i3bf64$lkn$1@dough.gmane.org>
Message-ID: <AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>

On Wed, Aug 4, 2010 at 12:25 PM, Alan Franzoni <mailing at franzoni.eu> wrote:
> Just ovverride the "protocol" attribute on your factory with the
> callable you want to be called when a new protocol needs to be

Hello Alan,

AFAIU this works only if Factory is subclassing
protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
protocol attribute is not present

Thanks for suggestions!

> instanced. I'd suppose you'd probably want to subclass HTTPChannel or
> something like that.
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From itamar at itamarst.org  Wed Aug  4 08:13:32 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 04 Aug 2010 08:13:32 -0400
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
Message-ID: <1280924012.1699.3.camel@blake>

On Wed, 2010-08-04 at 12:00 +0200, Pet wrote:

> Now, for XMLRPC this looks for me like Protocol instance is reused for
> all connection. If it is so, can I change this behavior, so I have one
> instance of Protocol per connection?

XMLRPC is a Resource, not a Protocol: Resources handle HTTP *requests*.
The reason Resources don't care about connections is that HTTP doesn't
care about connections: you can send multiple requests over the same
connection, or one request per connection, and the semantics are the
same either way.



From petshmidt at googlemail.com  Wed Aug  4 08:59:22 2010
From: petshmidt at googlemail.com (Pet)
Date: Wed, 4 Aug 2010 14:59:22 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <1280924012.1699.3.camel@blake>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<1280924012.1699.3.camel@blake>
Message-ID: <AANLkTi=RmqmMP7iBjqzmoSK8PzRhbwOshNrux4SUy=B7@mail.gmail.com>

On Wed, Aug 4, 2010 at 2:13 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Wed, 2010-08-04 at 12:00 +0200, Pet wrote:
>
>> Now, for XMLRPC this looks for me like Protocol instance is reused for
>> all connection. If it is so, can I change this behavior, so I have one
>> instance of Protocol per connection?
>
> XMLRPC is a Resource, not a Protocol: Resources handle HTTP *requests*.
> The reason Resources don't care about connections is that HTTP doesn't
> care about connections: you can send multiple requests over the same
> connection, or one request per connection, and the semantics are the
> same either way.

That make sense, thanks. Is there a way to isolate requests from each other?

Pet

>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From itamar at itamarst.org  Wed Aug  4 10:13:06 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 04 Aug 2010 10:13:06 -0400
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTi=RmqmMP7iBjqzmoSK8PzRhbwOshNrux4SUy=B7@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
	<1280924012.1699.3.camel@blake>
	<AANLkTi=RmqmMP7iBjqzmoSK8PzRhbwOshNrux4SUy=B7@mail.gmail.com>
Message-ID: <1280931186.1699.12.camel@blake>

On Wed, 2010-08-04 at 14:59 +0200, Pet wrote:

> That make sense, thanks. Is there a way to isolate requests from each other?

Each call to Resource.render() (which in this case then calls
XMLRPC.xmlrpc_<yourmethod>) is a separate request.



From thomasdrake1 at gmail.com  Wed Aug  4 21:23:48 2010
From: thomasdrake1 at gmail.com (Thomas Drake)
Date: Wed, 4 Aug 2010 18:23:48 -0700
Subject: [Twisted-Python] service stops/twistd exits
Message-ID: <AANLkTikkfW29OFrPCSo13uaxzZkGkgkhx5YZH7n65eSN@mail.gmail.com>

Hello,

I'm wondering if there is an established pattern for having an application
running in twistd shut itself down in the absence of a running service?

The idea is that if a service fails it calls self.stopService() and the
application shuts itself down somehow (rather than having the service call
reactor.stop). Ideally, I was hoping to do with without any specialized code
within my service, ie subclass from a ManagedService class or using
decorators.

I supposed it's possible to write a monitoring service that checks to ensure
my service is running, but I'd prefer a tighter coupling like having a
FatalException bubble up from the failed service to the application,
MultiService, or whatever *should* be calling reactor.stop().

Otherwise, if having service (eventually) stop the reactor is totally
antithetical to how things should work in a twistd plugin, then I guess I'll
need to rethink things.

Thanks,

Tad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100804/306d6088/attachment.htm 

From valeriy.zamarayev at gmail.com  Thu Aug  5 00:44:43 2010
From: valeriy.zamarayev at gmail.com (Valeriy Zamarayev)
Date: Thu, 5 Aug 2010 07:44:43 +0300
Subject: [Twisted-Python] Configuring Twisted logging via plugins
Message-ID: <064DE39A-DCC2-4172-A023-5FAD4674E25B@gmail.com>

Hello, all.

There have been a few questions on this list about how to configure
Twisted logging via plugins, as opposed to .tac files. And we now know
about the #638 and #3534 tickets. Hopefully, they will be resolved
soon.

But before this happens, it seems to me there's no other way to handle
this than to use a "monkey patching" techinque on Twisted (excluding
patching the Twisted source code itself).

We need to access the 'application' object when the server starts. We
can do this when the 'twistd' code calls setServiceParent on the
service returned by the plugin. So if we wrap setServiceParent, we can
access the application object and do what we want.

See the code:  http://gist.github.com/505926

This works for me. I don't know if a better and less dangerous way to
achieve the same exists. Maybe there is one?

Best Regards,
Valeriy



From exarkun at twistedmatrix.com  Thu Aug  5 08:36:55 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Aug 2010 12:36:55 -0000
Subject: [Twisted-Python] Cred question
In-Reply-To: <6CD03B2AA6AE4747BAF3A0D5EEEF728606EF7D@exmbx01.corp.nextdigital.com>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF728606EF7D@exmbx01.corp.nextdigital.com>
Message-ID: <20100805123655.2908.168470113.divmod.xquotient.4@localhost.localdomain>

On 4 Aug, 02:20 am, ssoni at nextdigital.com wrote:
>Hi,
>
>I am using Cred authentication system in my Nevow based web 
>application.
>
>Admin user can see list of all users from admin interface of the 
>application.
>
>Now, admin user wants to do following things:
>
>1.       Automatically login as other user
>
>2.       Induce logout to already logged in user.
>
>Q1. Since, admin user itself used cred authentication to login in first 
>place, how do we do automatic login as different user programmatically 
>or logout already logged in other user?

I'm not sure what you're asking here.  Perhaps the answer is to call 
your realm's requestAvatar method with the avatarId of the admin user?

As far as logging out a user, that basically means dropping their 
session.
>
>I tried to redirect my application to 
>/__login__/?username=otherusername&password=itspassword and it went 
>through Cred system, but I believe, since previous session was active 
>as well, it triggered logout.
>
>Q2. Does cred allow multiple login sessions in same browser? So, that 
>admin user can maintain its own session and login into other user as 
>well.

nevow.guard is cookie-based.  There's no way to have multiple 
authentication cookies inside a single browser instance, as far as I 
know.

Jean-Paul


From mailing at franzoni.eu  Thu Aug  5 09:32:13 2010
From: mailing at franzoni.eu (Alan Franzoni)
Date: Thu, 05 Aug 2010 15:32:13 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>
Message-ID: <i3eegt$fl2$1@dough.gmane.org>

On 8/4/10 1:30 PM, Pet wrote:

> AFAIU this works only if Factory is subclassing
> protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
> protocol attribute is not present

server.Site subclasses  http.HTTPFactory which, in turns, subclasses
protocol.ServerFactory:

http://twistedmatrix.com/documents/10.0.0/api/twisted.web.server.Site.html


by the way, if I now understand your question: just subclass XMLRPC and
create your own xmlrpc resource class by adding methods like

xmlrpc_somemethod
xmlrpc_othermethod

then add such handler to your server.Site, and you're done. Your method
will be invoked once per request.

Alan Franzoni



From petshmidt at googlemail.com  Thu Aug  5 10:21:04 2010
From: petshmidt at googlemail.com (Pet)
Date: Thu, 5 Aug 2010 16:21:04 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <i3eegt$fl2$1@dough.gmane.org>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com> 
	<i3eegt$fl2$1@dough.gmane.org>
Message-ID: <AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>

On Thu, Aug 5, 2010 at 3:32 PM, Alan Franzoni <mailing at franzoni.eu> wrote:
> On 8/4/10 1:30 PM, Pet wrote:
>
>> AFAIU this works only if Factory is subclassing
>> protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
>> protocol attribute is not present
>
> server.Site subclasses ?http.HTTPFactory which, in turns, subclasses
> protocol.ServerFactory:
>
> http://twistedmatrix.com/documents/10.0.0/api/twisted.web.server.Site.html
>
>
> by the way, if I now understand your question: just subclass XMLRPC and
> create your own xmlrpc resource class by adding methods like
>
> xmlrpc_somemethod
> xmlrpc_othermethod
>
> then add such handler to your server.Site, and you're done. Your method
> will be invoked once per request.

what I've tried to do is to have objects, which were members of
XMLRPC. And these objects would have some internal state which is
isolated per request. But each new request has changed this objects,
because xmlrpc is created once and not for each request or connection.
I've solved this by modifying render_POST where I create those objects
before calling requested function and so they lives only there without
being overwritten by new request. Ugh... It's might be ugly, but works
for me

Pet

>
> Alan Franzoni
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From mailing at franzoni.eu  Thu Aug  5 10:36:24 2010
From: mailing at franzoni.eu (Alan Franzoni)
Date: Thu, 05 Aug 2010 16:36:24 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
	<i3bf64$lkn$1@dough.gmane.org>	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>
Message-ID: <i3ei98$2u7$1@dough.gmane.org>

On 8/5/10 4:21 PM, Pet wrote:
> what I've tried to do is to have objects, which were members of
> XMLRPC. And these objects would have some internal state which is
> isolated per request. But each new request has changed this objects,
> because xmlrpc is created once and not for each request or connection.
> I've solved this by modifying render_POST where I create those objects
> before calling requested function and so they lives only there without
> being overwritten by new request. Ugh... It's might be ugly, but works
> for me

I suppose you're creating such objects in your XMLRPC subclass
__init___(), that's your problem.

bye!

Alan Franzoni






From exarkun at twistedmatrix.com  Thu Aug  5 11:01:23 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Aug 2010 15:01:23 -0000
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>
Message-ID: <20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>

On 02:21 pm, petshmidt at googlemail.com wrote:
>On Thu, Aug 5, 2010 at 3:32 PM, Alan Franzoni <mailing at franzoni.eu> 
>wrote:
>>On 8/4/10 1:30 PM, Pet wrote:
>>>AFAIU this works only if Factory is subclassing
>>>protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
>>>protocol attribute is not present
>>
>>server.Site subclasses ?http.HTTPFactory which, in turns, subclasses
>>protocol.ServerFactory:
>>
>>http://twistedmatrix.com/documents/10.0.0/api/twisted.web.server.Site.html
>>
>>
>>by the way, if I now understand your question: just subclass XMLRPC 
>>and
>>create your own xmlrpc resource class by adding methods like
>>
>>xmlrpc_somemethod
>>xmlrpc_othermethod
>>
>>then add such handler to your server.Site, and you're done. Your 
>>method
>>will be invoked once per request.
>
>what I've tried to do is to have objects, which were members of
>XMLRPC. And these objects would have some internal state which is
>isolated per request. But each new request has changed this objects,
>because xmlrpc is created once and not for each request or connection.
>I've solved this by modifying render_POST where I create those objects
>before calling requested function and so they lives only there without
>being overwritten by new request. Ugh... It's might be ugly, but works
>for me

If you want a new XMLRPC instance per request, then create a new one per 
request.  http://twistedmatrix.com/documents/current/web/howto/web-in-60 
/dynamic-dispatch.html may help.

Re-using a single XMLRPC instance and mangling its state in render_POST 
will break as soon as your server receives two overlapping requests.

Jean-Paul


From petshmidt at googlemail.com  Thu Aug  5 12:23:09 2010
From: petshmidt at googlemail.com (Pet)
Date: Thu, 5 Aug 2010 18:23:09 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com> 
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com> 
	<20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
Message-ID: <AANLkTinhohJ4Cihrg-QF+-yg-narB_HS9hYRx3aYuj5Y@mail.gmail.com>

On Thu, Aug 5, 2010 at 5:01 PM,  <exarkun at twistedmatrix.com> wrote:
> On 02:21 pm, petshmidt at googlemail.com wrote:
>>
>> On Thu, Aug 5, 2010 at 3:32 PM, Alan Franzoni <mailing at franzoni.eu> wrote:
>>>
>>> On 8/4/10 1:30 PM, Pet wrote:
>>>>
>>>> AFAIU this works only if Factory is subclassing
>>>> protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
>>>> protocol attribute is not present
>>>
>>> server.Site subclasses ?http.HTTPFactory which, in turns, subclasses
>>> protocol.ServerFactory:
>>>
>>>
>>> http://twistedmatrix.com/documents/10.0.0/api/twisted.web.server.Site.html
>>>
>>>
>>> by the way, if I now understand your question: just subclass XMLRPC and
>>> create your own xmlrpc resource class by adding methods like
>>>
>>> xmlrpc_somemethod
>>> xmlrpc_othermethod
>>>
>>> then add such handler to your server.Site, and you're done. Your method
>>> will be invoked once per request.
>>
>> what I've tried to do is to have objects, which were members of
>> XMLRPC. And these objects would have some internal state which is
>> isolated per request. But each new request has changed this objects,
>> because xmlrpc is created once and not for each request or connection.
>> I've solved this by modifying render_POST where I create those objects
>> before calling requested function and so they lives only there without
>> being overwritten by new request. Ugh... It's might be ugly, but works
>> for me
>
> If you want a new XMLRPC instance per request, then create a new one per

That is what I've wanted

> request. ?http://twistedmatrix.com/documents/current/web/howto/web-in-60
> /dynamic-dispatch.html may help.

Thanks, will check it out

>
> Re-using a single XMLRPC instance and mangling its state in render_POST will
> break as soon as your server receives two overlapping requests.

I'm making only local variables in render_POST, not class wide, seems
to work even with 2 overlapping requests.

Pet

>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From konrads at smelkovs.com  Thu Aug  5 12:45:13 2010
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Thu, 5 Aug 2010 19:45:13 +0300
Subject: [Twisted-Python] Cred question
In-Reply-To: <20100805123655.2908.168470113.divmod.xquotient.4@localhost.localdomain>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF728606EF7D@exmbx01.corp.nextdigital.com>
	<20100805123655.2908.168470113.divmod.xquotient.4@localhost.localdomain>
Message-ID: <AANLkTimCHhrheBmCm2-SF9pwt9OHqTsOcQKgNWHhtg_E@mail.gmail.com>

i guess he wants admin to 1) impersonate another user, akin to su -u
anotheruser and 2) also to drop that user's session.
For 1) you'd have to set the avatar to the user's id (or at
application level implement something like effective uid). For 2)
you'd have to iterate over all active sessions and terminate the one
you want


2010/8/5, exarkun at twistedmatrix.com <exarkun at twistedmatrix.com>:
> On 4 Aug, 02:20 am, ssoni at nextdigital.com wrote:
>>Hi,
>>
>>I am using Cred authentication system in my Nevow based web
>>application.
>>
>>Admin user can see list of all users from admin interface of the
>>application.
>>
>>Now, admin user wants to do following things:
>>
>>1.       Automatically login as other user
>>
>>2.       Induce logout to already logged in user.
>>
>>Q1. Since, admin user itself used cred authentication to login in first
>>place, how do we do automatic login as different user programmatically
>>or logout already logged in other user?
>
> I'm not sure what you're asking here.  Perhaps the answer is to call
> your realm's requestAvatar method with the avatarId of the admin user?
>
> As far as logging out a user, that basically means dropping their
> session.
>>
>>I tried to redirect my application to
>>/__login__/?username=otherusername&password=itspassword and it went
>>through Cred system, but I believe, since previous session was active
>>as well, it triggered logout.
>>
>>Q2. Does cred allow multiple login sessions in same browser? So, that
>>admin user can maintain its own session and login into other user as
>>well.
>
> nevow.guard is cookie-based.  There's no way to have multiple
> authentication cookies inside a single browser instance, as far as I
> know.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
Nos?t?ts no manas mobil?s ier?ces

--
Konrads Smelkovs
Applied IT sorcery.


From glyph at twistedmatrix.com  Thu Aug  5 13:25:24 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 Aug 2010 13:25:24 -0400
Subject: [Twisted-Python] Configuring Twisted logging via plugins
In-Reply-To: <064DE39A-DCC2-4172-A023-5FAD4674E25B@gmail.com>
References: <064DE39A-DCC2-4172-A023-5FAD4674E25B@gmail.com>
Message-ID: <65297D84-50FD-4168-A826-B8D04251C6AA@twistedmatrix.com>

On Aug 5, 2010, at 12:44 AM, Valeriy Zamarayev wrote:

> Hello, all.
> 
> There have been a few questions on this list about how to configure
> Twisted logging via plugins, as opposed to .tac files. And we now know
> about the #638 and #3534 tickets. Hopefully, they will be resolved
> soon.
> 
> But before this happens, it seems to me there's no other way to handle
> this than to use a "monkey patching" techinque on Twisted (excluding
> patching the Twisted source code itself).
> 
> We need to access the 'application' object when the server starts. We
> can do this when the 'twistd' code calls setServiceParent on the
> service returned by the plugin. So if we wrap setServiceParent, we can
> access the application object and do what we want.
> 
> See the code:  http://gist.github.com/505926
> 
> This works for me. I don't know if a better and less dangerous way to
> achieve the same exists. Maybe there is one?


This actually looks pretty ingenious to me!  It uses public APIs... mostly.  I'd have to think pretty hard about whether this particular interface is actually supported, of course, since you're depending on extra stuff from your service parent which hypothetically may not actually be there.

If you're looking for aesthetic advice, it would be a bit nicer to use something like proxyForInterface and wrap the underlying service, rather than setting an attribute on it and clobbering its setServiceParent method.

Also... you could write a twistd plugin that could be used directly, instead of code that needs to be adapted / re-written for each different twistd plugin.  Your code can scan the IServiceMaker plugin registry just as well as twistd itself can.

So you could have

  twistd my-custom-logger --my-log-option-1 --my-log-option-2 web --path ~/public_html

and have the my-custom-logger plugin delegate to all twistd subcommands.

That's a pattern which should remain useful even after #638 is fixed.

Code to do this properly is left as an exercise for the reader, of course :).


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100805/f0e76757/attachment.htm 

From exarkun at twistedmatrix.com  Thu Aug  5 13:36:44 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Aug 2010 17:36:44 -0000
Subject: [Twisted-Python] Configuring Twisted logging via plugins
In-Reply-To: <65297D84-50FD-4168-A826-B8D04251C6AA@twistedmatrix.com>
References: <064DE39A-DCC2-4172-A023-5FAD4674E25B@gmail.com>
	<65297D84-50FD-4168-A826-B8D04251C6AA@twistedmatrix.com>
Message-ID: <20100805173644.2908.123075517.divmod.xquotient.17@localhost.localdomain>

On 05:25 pm, glyph at twistedmatrix.com wrote:
>On Aug 5, 2010, at 12:44 AM, Valeriy Zamarayev wrote:
>>Hello, all.
>>
>>There have been a few questions on this list about how to configure
>>Twisted logging via plugins, as opposed to .tac files. And we now know
>>about the #638 and #3534 tickets. Hopefully, they will be resolved
>>soon.
>>
>>But before this happens, it seems to me there's no other way to handle
>>this than to use a "monkey patching" techinque on Twisted (excluding
>>patching the Twisted source code itself).
>>
>>We need to access the 'application' object when the server starts. We
>>can do this when the 'twistd' code calls setServiceParent on the
>>service returned by the plugin. So if we wrap setServiceParent, we can
>>access the application object and do what we want.
>>
>>See the code:  http://gist.github.com/505926
>>
>>This works for me. I don't know if a better and less dangerous way to
>>achieve the same exists. Maybe there is one?
>
>
>This actually looks pretty ingenious to me!  It uses public APIs... 
>mostly.  I'd have to think pretty hard about whether this particular 
>interface is actually supported, of course, since you're depending on 
>extra stuff from your service parent which hypothetically may not 
>actually be there.
>
>If you're looking for aesthetic advice, it would be a bit nicer to use 
>something like proxyForInterface and wrap the underlying service, 
>rather than setting an attribute on it and clobbering its 
>setServiceParent method.
>
>Also... you could write a twistd plugin that could be used directly, 
>instead of code that needs to be adapted / re-written for each 
>different twistd plugin.  Your code can scan the IServiceMaker plugin 
>registry just as well as twistd itself can.
>
>So you could have
>
>  twistd my-custom-logger --my-log-option-1 --my-log-option-2 web --path 
>~/public_html
>
>and have the my-custom-logger plugin delegate to all twistd 
>subcommands.
>
>That's a pattern which should remain useful even after #638 is fixed.
>
>Code to do this properly is left as an exercise for the reader, of 
>course :).

This is probably possible, but not using the twisted.python.usage 
options parser, which doesn't support multiple subcommands.  This 
solution has been discussed on IRC before and probably the lack of 
multiple subcommand support in the options parser is the only reason it 
hasn't been implemented.

I think there was some consensus on an alternate way to spell this 
combination, but I don't remember what it was right now.  It's probably 
in someone's IRC logs.

Jean-Paul


From nathan.stocks at gmail.com  Thu Aug  5 14:33:31 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 5 Aug 2010 12:33:31 -0600
Subject: [Twisted-Python] Get trial to use the docstring?
Message-ID: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>

Is there already a way to get twisted to print out a test's docstring
(like unittest does) instead of the name of the function in it's
output?  I've looked at trial's options and searched the list
archives, but I'm not seeing anything...

For example, here's what my tests look like when run by unittest:

$ test/run.py -v
==> Starting Prerequisite Tests ... ok
Supported OS? ... ok
Supported version of Python? ... ok
...

And here's what they look like when run by trial:

$ trial test/run.py
run
  Test00Prerequisites
    test_00banner ...                                                      [OK]
    test_01os ...                                                          [OK]
...

~ Nathan


From valeriy.zamarayev at gmail.com  Thu Aug  5 15:06:11 2010
From: valeriy.zamarayev at gmail.com (Valeriy Zamarayev)
Date: Thu, 5 Aug 2010 22:06:11 +0300
Subject: [Twisted-Python] Configuring Twisted logging via plugins
In-Reply-To: <65297D84-50FD-4168-A826-B8D04251C6AA@twistedmatrix.com>
References: <064DE39A-DCC2-4172-A023-5FAD4674E25B@gmail.com>
	<65297D84-50FD-4168-A826-B8D04251C6AA@twistedmatrix.com>
Message-ID: <5966E51D-CCB9-4E42-BDAE-93BFB311DF96@gmail.com>


On Aug 5, 2010, at 20:25, Glyph Lefkowitz wrote:

> On Aug 5, 2010, at 12:44 AM, Valeriy Zamarayev wrote:
>>
>> See the code:  http://gist.github.com/505926
>>
>> This works for me. I don't know if a better and less dangerous way to
>> achieve the same exists. Maybe there is one?
>
>
> This actually looks pretty ingenious to me!  It uses public APIs...  
> mostly.  I'd have to think pretty hard about whether this particular  
> interface is actually supported, of course, since you're depending  
> on extra stuff from your service parent which hypothetically may not  
> actually be there.

The hack is based on a few assumptions:
  1. the service parent for a plugin is the application.
  2. setServiceParent will be called soon after plugin configuration.

I don't know how stable and safe these assumptions are, just hope that
by the time something changes, there will be an official way :)


> If you're looking for aesthetic advice, it would be a bit nicer to  
> use something like proxyForInterface and wrap the underlying  
> service, rather than setting an attribute on it and clobbering its  
> setServiceParent method.

Oh, yes. I'll change this, thanks.

>
> Also... you could write a twistd plugin that could be used directly,  
> instead of code that needs to be adapted / re-written for each  
> different twistd plugin.  Your code can scan the IServiceMaker  
> plugin registry just as well as twistd itself can.
>
> So you could have
>
>   twistd my-custom-logger --my-log-option-1 --my-log-option-2 web -- 
> path ~/public_html
>
> and have the my-custom-logger plugin delegate to all twistd  
> subcommands.
>
> That's a pattern which should remain useful even after #638 is fixed.
>
> Code to do this properly is left as an exercise for the reader, of  
> course :).
>

Nice idea. I actually though about writing a single .tac which could  
configure
logging and then find and start whatever plugin is given in the  
command line.
But then I found that a .tac isn't even necessary.

Given what Jean-Paul says about option parsing, it is not that  
straigtforward.
I don't need (yet) to configure logging of standard or third party  
plugins,
only my own.

So if the goal is just to reuse the code and not do the same with  
every plugin,
it's easy to use a template-method technique, and reuse the hack code  
across all
the plugins (The example in the gist is a bit artificial).

Regards,
Valeriy



From glyph at twistedmatrix.com  Thu Aug  5 15:08:03 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 Aug 2010 15:08:03 -0400
Subject: [Twisted-Python] Get trial to use the docstring?
In-Reply-To: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>
References: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>
Message-ID: <FCA0BCC9-EE49-44C4-9D47-AA5BB43C052B@twistedmatrix.com>

On Aug 5, 2010, at 2:33 PM, Nathan wrote:

> Is there already a way to get twisted to print out a test's docstring
> (like unittest does) instead of the name of the function in it's
> output?  I've looked at trial's options and searched the list
> archives, but I'm not seeing anything...
> 
> For example, here's what my tests look like when run by unittest:
> 
> $ test/run.py -v
> ==> Starting Prerequisite Tests ... ok
> Supported OS? ... ok
> Supported version of Python? ... ok
> ...
> 
> And here's what they look like when run by trial:
> 
> $ trial test/run.py
> run
>  Test00Prerequisites
>    test_00banner ...                                                      [OK]
>    test_01os ...                                                          [OK]
> ...

No.

If you want to add a feature that prints out the docstring (or some portion of it) _in addition_ to the test name, that would probably be accepted as a patch.  But, in my mind, one of the most important features of trial is the fact that it prints out stable identifiers for the tests so you can see how to run them again when you're looking at their results.  We should never omit that.  (In fact, I'd really like it if trial always printed out a _full_ test identifier for easy copy/pasting instead of sometimes only printing the method name.)

From glyph at twistedmatrix.com  Thu Aug  5 15:16:38 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 Aug 2010 15:16:38 -0400
Subject: [Twisted-Python] service stops/twistd exits
In-Reply-To: <AANLkTikkfW29OFrPCSo13uaxzZkGkgkhx5YZH7n65eSN@mail.gmail.com>
References: <AANLkTikkfW29OFrPCSo13uaxzZkGkgkhx5YZH7n65eSN@mail.gmail.com>
Message-ID: <8BC06BE4-7D09-464C-AE6D-7F8EDEA6C706@twistedmatrix.com>


On Aug 4, 2010, at 9:23 PM, Thomas Drake wrote:

> Hello,
> 
> I'm wondering if there is an established pattern for having an application running in twistd shut itself down in the absence of a running service?
> 
> The idea is that if a service fails it calls self.stopService() and the application shuts itself down somehow (rather than having the service call reactor.stop). Ideally, I was hoping to do with without any specialized code within my service, ie subclass from a ManagedService class or using decorators.
> 
> I supposed it's possible to write a monitoring service that checks to ensure my service is running, but I'd prefer a tighter coupling like having a FatalException bubble up from the failed service to the application, MultiService, or whatever *should* be calling reactor.stop().
> 
> Otherwise, if having service (eventually) stop the reactor is totally antithetical to how things should work in a twistd plugin, then I guess I'll need to rethink things.
> 
> Thanks,
> 
> Tad


Calling reactor.stop() is possibly the best that you're likely to do right now.  This is a known problem, and at least related to (if not the same as) <http://twistedmatrix.com/trac/ticket/718>.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100805/a7eb31b8/attachment-0001.htm 

From exarkun at twistedmatrix.com  Thu Aug  5 15:49:56 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Aug 2010 19:49:56 -0000
Subject: [Twisted-Python] Get trial to use the docstring?
In-Reply-To: <FCA0BCC9-EE49-44C4-9D47-AA5BB43C052B@twistedmatrix.com>
References: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>
	<FCA0BCC9-EE49-44C4-9D47-AA5BB43C052B@twistedmatrix.com>
Message-ID: <20100805194956.2908.869931520.divmod.xquotient.19@localhost.localdomain>

On 07:08 pm, glyph at twistedmatrix.com wrote:
>On Aug 5, 2010, at 2:33 PM, Nathan wrote:
>>Is there already a way to get twisted to print out a test's docstring
>>(like unittest does) instead of the name of the function in it's
>>output?  I've looked at trial's options and searched the list
>>archives, but I'm not seeing anything...
>>
>>For example, here's what my tests look like when run by unittest:
>>
>>$ test/run.py -v
>>==> Starting Prerequisite Tests ... ok
>>Supported OS? ... ok
>>Supported version of Python? ... ok
>>...
>>
>>And here's what they look like when run by trial:
>>
>>$ trial test/run.py
>>run
>>  Test00Prerequisites
>>    test_00banner ... 
>>[OK]
>>    test_01os ... 
>>[OK]
>>...
>
>No.
>
>If you want to add a feature that prints out the docstring (or some 
>portion of it) _in addition_ to the test name, that would probably be 
>accepted as a patch.  But, in my mind, one of the most important 
>features of trial is the fact that it prints out stable identifiers for 
>the tests so you can see how to run them again when you're looking at 
>their results.  We should never omit that.  (In fact, I'd really like 
>it if trial always printed out a _full_ test identifier for easy 
>copy/pasting instead of sometimes only printing the method name.)

Also, trial reporters are pluggable, so you can always write and use a 
reporter that prints out exactly what you want printed out.

Jean-Paul


From nathan.stocks at gmail.com  Thu Aug  5 19:25:35 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 5 Aug 2010 17:25:35 -0600
Subject: [Twisted-Python] Get trial to use the docstring?
In-Reply-To: <20100805194956.2908.869931520.divmod.xquotient.19@localhost.localdomain>
References: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>
	<FCA0BCC9-EE49-44C4-9D47-AA5BB43C052B@twistedmatrix.com>
	<20100805194956.2908.869931520.divmod.xquotient.19@localhost.localdomain>
Message-ID: <AANLkTinuMFdEqLo+wx-aodnNtv66xSY+mgT=oPv9p8FM@mail.gmail.com>

On Thu, Aug 5, 2010 at 1:49 PM,  <exarkun at twistedmatrix.com> wrote:
>>If you want to add a feature that prints out the docstring (or some
>>portion of it) _in addition_ to the test name, that would probably be
>>accepted as a patch. ?But, in my mind, one of the most important
>>features of trial is the fact that it prints out stable identifiers for
>>the tests so you can see how to run them again when you're looking at
>>their results. ?We should never omit that. ?(In fact, I'd really like
>>it if trial always printed out a _full_ test identifier for easy
>>copy/pasting instead of sometimes only printing the method name.)
>
> Also, trial reporters are pluggable, so you can always write and use a
> reporter that prints out exactly what you want printed out.
>
> Jean-Paul

I have a number of questions:

1) I found the TreeReporter class that produces the default output
(twisted/trial/reporter.py), and I found the file that seems to get
run by trial (twisted/scripts/trial.py) but for the life of me I
couldn't figure out how to get my own class to show up as one of the
reporters that you can select by means of the --reporter=whatever
argument.  How do you tie the two together?  I can just submit my
modified TreeReporter, but it'd be nice to be able to also submit a
wildly different option...

2) What's the official process for submitting a patch (or where is the
process documented)?  I've never actually contributed code to
twisted...

3) Every time I install my custom twisted (with "sudo python setup.py
install" on OS X 10.6.4 system python), trial starts spitting out the
"dropin cache" error (see [1] below) which persists until I run "sudo
twistd --help" as was suggested on the list last week or so.  Isn't
there some way we can just address that error condition at
installation time so that doesn't occur in the first place?

4) I'm sold on test-driven development (which is why I'm learning
trial), so I'd like to both check for regressions and write a test for
my patch.  I found twisted/trial/test/test_reporter.py -- how do I run
just the tests in that file?  Does trial run on itself?

~ Nathan


[1] Traceback (most recent call last):
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/python/usage.py",
line 241, in parseOptions
    self.postOptions()
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/scripts/trial.py",
line 295, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/scripts/trial.py",
line 281, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/plugin.py",
line 199, in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/plugin.py",
line 178, in getCache
    dropinPath.setContent(pickle.dumps(dropinDotCache))
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 765, in setContent
    f = sib.open('w')
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 515, in open
    return self.create()
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 791, in create
    fdint = os.open(self.path, _CREATE_FLAGS)
exceptions.OSError: [Errno 13] Permission denied:
'/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/plugins/bDcpsOvnXomi7b94dropin.cache.new'


From ssoni at nextdigital.com  Thu Aug  5 20:09:13 2010
From: ssoni at nextdigital.com (Sury Soni)
Date: Fri, 6 Aug 2010 00:09:13 +0000
Subject: [Twisted-Python] Cred question
In-Reply-To: <AANLkTimCHhrheBmCm2-SF9pwt9OHqTsOcQKgNWHhtg_E@mail.gmail.com>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF728606EF7D@exmbx01.corp.nextdigital.com>
	<20100805123655.2908.168470113.divmod.xquotient.4@localhost.localdomain>
	<AANLkTimCHhrheBmCm2-SF9pwt9OHqTsOcQKgNWHhtg_E@mail.gmail.com>
Message-ID: <6CD03B2AA6AE4747BAF3A0D5EEEF7286072DF2@exmbx01.corp.nextdigital.com>

> i guess he wants admin to 1) impersonate another user, akin to su -u
> anotheruser and 2) also to drop that user's session.
> For 1) you'd have to set the avatar to the user's id (or at application level
> implement something like effective uid). For 2) you'd have to iterate over all
> active sessions and terminate the one you want
> 

Hi Konrads,

You are right.

Can you elaborate your suggested solutions?

I am not sure, where do I set the avatar to user's id, as request will come from protocol while admin session is already active in the browser.

In nevow.guard login request usually comes through login form submit to http://yourhost/__login__ path.

And, then request goes to Realm, but since current (admin) session would be already active, how do we iterate over active session and drop admin session?

> 
> 2010/8/5, exarkun at twistedmatrix.com <exarkun at twistedmatrix.com>:
> > On 4 Aug, 02:20 am, ssoni at nextdigital.com wrote:
> >>Hi,
> >>
> >>I am using Cred authentication system in my Nevow based web
> >>application.
> >>
> >>Admin user can see list of all users from admin interface of the
> >>application.
> >>
> >>Now, admin user wants to do following things:
> >>
> >>1.       Automatically login as other user
> >>
> >>2.       Induce logout to already logged in user.
> >>
> >>Q1. Since, admin user itself used cred authentication to login in
> >>first place, how do we do automatic login as different user
> >>programmatically or logout already logged in other user?
> >
> > I'm not sure what you're asking here.  Perhaps the answer is to call
> > your realm's requestAvatar method with the avatarId of the admin user?
> >
> > As far as logging out a user, that basically means dropping their
> > session.
> >>
> >>I tried to redirect my application to
> >>/__login__/?username=otherusername&password=itspassword and it
> went
> >>through Cred system, but I believe, since previous session was active
> >>as well, it triggered logout.
> >>
> >>Q2. Does cred allow multiple login sessions in same browser? So, that
> >>admin user can maintain its own session and login into other user as
> >>well.
> >
> > nevow.guard is cookie-based.  There's no way to have multiple
> > authentication cookies inside a single browser instance, as far as I
> > know.
> >
> > Jean-Paul
> >

Thanks JP for the clarification on multiple sessions.

-Sury

From ltaylor.volks at gmail.com  Thu Aug  5 22:06:17 2010
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Thu, 05 Aug 2010 21:06:17 -0500
Subject: [Twisted-Python] Get trial to use the docstring?
In-Reply-To: <AANLkTinuMFdEqLo+wx-aodnNtv66xSY+mgT=oPv9p8FM@mail.gmail.com>
References: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>	<FCA0BCC9-EE49-44C4-9D47-AA5BB43C052B@twistedmatrix.com>	<20100805194956.2908.869931520.divmod.xquotient.19@localhost.localdomain>
	<AANLkTinuMFdEqLo+wx-aodnNtv66xSY+mgT=oPv9p8FM@mail.gmail.com>
Message-ID: <4C5B6E19.4050408@gmail.com>

On 8/5/10 6:25 PM, Nathan wrote:
 > I have a number of questions:
> 
> 1) I found the TreeReporter class that produces the default output
> (twisted/trial/reporter.py), and I found the file that seems to get
> run by trial (twisted/scripts/trial.py) but for the life of me I
> couldn't figure out how to get my own class to show up as one of the
> reporters that you can select by means of the --reporter=whatever
> argument.  How do you tie the two together?  I can just submit my
> modified TreeReporter, but it'd be nice to be able to also submit a
> wildly different option...

Wildly different options sound like a good case for plugins:
http://twistedmatrix.com/documents/current/core/howto/plugin.html

You need to create a plugin that makes your reporter accessible to
Trial. This means it needs to implement the IReporter interface:
http://twistedmatrix.com/documents/10.1.0/api/twisted.trial.itrial.IReporter.html

The plugin should be installed on your PYTHONPATH in a directory named
twisted/plugins. You could just place this in your project for instance,
or in the system twisted/plugins dir.

myproject/twisted/plugins/awesome_reporter.py

The plugin describes the reporter (for --help-reporters) and provides
the importable module and class that gets instantiated.

The reporter itself can be a subclass of TreeReporter or whatever, and
should implement the IReporter interface.

Here is a simple example:
http://gist.github.com/510688

For a much better example, check out the Tahoe-LAFS project
trialcoverage reporter:
http://tahoe-lafs.org/source/trialcoverage/trunk/


> 2) What's the official process for submitting a patch (or where is the
> process documented)?  I've never actually contributed code to
> twisted...

Start here:
http://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs


> 3) Every time I install my custom twisted (with "sudo python setup.py
> install" on OS X 10.6.4 system python), trial starts spitting out the
> "dropin cache" error (see [1] below) which persists until I run "sudo
> twistd --help" as was suggested on the list last week or so.  Isn't
> there some way we can just address that error condition at
> installation time so that doesn't occur in the first place?

"Some way" always comes down to "Someone", which I suspect is a bit like
that ghost the kid from Family Circus is always blaming for muddy
footprints or whatever counts for domestic drama in Bil Keane's
Geritol-addled imagination.

So....there's an existing ticket you could help out with:
http://twistedmatrix.com/trac/ticket/2409

> 4) I'm sold on test-driven development (which is why I'm learning
> trial), so I'd like to both check for regressions and write a test for
> my patch.  I found twisted/trial/test/test_reporter.py -- how do I run
> just the tests in that file?  Does trial run on itself?
> 

Yes.

Trial is pretty flexible about specifying tests to run, so you can run
the whole suite, specify a directory of tests, or point it to a specific
TestCase:

trial twisted
trial twisted/test
trial twisted.test

trial twisted/trial/test/test_reporter.py
trial twisted.trial.test.test_reporter.TestTreeReporter

The same holds for your own project:
trial myproject.tests.test_reporter.AwesomeTreeReporter


From smagafurov at naumen.ru  Thu Aug  5 23:06:04 2010
From: smagafurov at naumen.ru (=?UTF-8?B?0KHQtdGA0LPQtdC5INCc0LDQs9Cw0YTRg9GA0L7Qsg==?=)
Date: Fri, 06 Aug 2010 09:06:04 +0600
Subject: [Twisted-Python] inlineCallbacks yield tuple support
Message-ID: <4C5B7C1C.3020404@naumen.ru>

This example shows what i want:

@defer.inlineCallbacks
def create_audio_link(tel, addr1, addr2):
     try:
         connection1, connection2 = yield (tel.connect(addr1), tel.connect(addr2))
     except ConnectionError, exc:
         ... some error work ...
     else:
         return tel.create_audiolink(connection1, connection2)

At now we can do this with DeferredList but it is complex (compare with 
first example):

@defer.inlineCallbacks
def create_audio_link(tel, addr1, addr2):
     try:
         try:
             r = yield DeferredList([tel.connect(addr1), tel.connect(addr2)], fireOnOneErrback=1, consumeErrors=1)
         except FirstError, exc:
             raise exc.subFailure.value
         else:
             connection1, connection2 = tuple(_r for _s, _r in r)
     except ConnectionError, exc:
         ... some error work ...
     else:
         return tel.create_audiolink(connection1, connection2)

Approximate solution (idea) is patch in defer.py:

def _inlineCallbacks(result, g, deferred):
             ... skipped ...

         if isinstance(result, Deferred):
             # a deferred was yielded, get the result.

             ... skipped ...

             waiting[0] = True
             waiting[1] = None

         if isinstance(result, tuple):
             # a tuple was yielded, get the result.
             result = DeferredList(result, fireOnOneErrback=1, consumeErrors=1)
             def gotResult(r):
                 if isinstance(r, failure.Failure):
                     r = r.value.subFailure
                 else:
                     r = tuple(_r for _s, _r in r)
                 if waiting[0]:
                     waiting[0] = False
                     waiting[1] = r
                 else:
                     _inlineCallbacks(r, g, deferred)

             result.addBoth(gotResult)
             if waiting[0]:
                 # Haven't called back yet, set flag so that we get reinvoked
                 # and return from the loop
                 waiting[0] = False
                 return deferred

             result = waiting[1]
             # Reset waiting to initial values for next loop.  gotResult uses
             # waiting, but this isn't a problem because gotResult is only
             # executed once, and if it hasn't been executed yet, the return
             # branch above would have been taken.


             waiting[0] = True
             waiting[1] = None


     return deferred

I post this as ticket but was redirected to mailing-list
http://twistedmatrix.com/trac/ticket/4627

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100806/a23a3d0b/attachment.htm 

From smagafurov at naumen.ru  Thu Aug  5 23:15:11 2010
From: smagafurov at naumen.ru (=?UTF-8?B?0KHQtdGA0LPQtdC5INCc0LDQs9Cw0YTRg9GA0L7Qsg==?=)
Date: Fri, 06 Aug 2010 09:15:11 +0600
Subject: [Twisted-Python] strange bug with... something :)
Message-ID: <4C5B7E3F.5070401@naumen.ru>

Example code 1

{{{
class Example(object):
     def __init__(self, connection):
         self.connection = connection
         self.counter = 0
         self.requests = {}

     def generate_request_id(self):
         self.counter += 1
         return self.counter

     def request(self, data, timeout=10):
         deferred = defer.Deferred()
         request_id = self.generate_request_id()
         self.requests[request_id] = deferred

         # ATTENTION: I want to see current traceback when timeout occurs
         # therefore raise and catch here
         try:
             raise failure.TimeoutError()
         except failure.TimeoutError:
             failure = failure.Failure()

         # charge timer
         timer = reactor.callLater(timeout, self._on_timeout, 
request_id, failure)

         # send request
         self.connection.send_request(request_id, data)
         return deferred

     def _on_timeout(self, request_id, failure):
         deferred = self.requests.pop(request_id, None)
         if deferred is not None:
             deferred.errback(failure)

     def on_response_received(self, request_id, response):
         deferred = self.requests.pop(request_id, None)
         if deferred is not None:
             deferred.callback(response)
}}}

Disadvantage 1 of this code:
We construct failure.Failure() always although timeout may not occur at all.
If failure.Failure() was lazy it will be cool.

Disadvantage 2 (bug in twisted?) of this code:
This code doesn't work in some cases and I don't know why.
In some cases deferred.callback(response) does nothing although called.

But this code magically works properly in the same cases:

Example code 2 (one difference is just "lazy" failure construction using 
special FailureFactory class)

{{{
class FailureFactory(object):
     def __init__(self, arg):
         try:
             raise arg
         except:
             exc_info = sys.exc_info()
         self.exc_info = exc_info

     def __call__(self):
         exc_type, exc_value, tb = self.exc_info
         return Failure(exc_value, exc_type, tb)

class Example(object):
     def __init__(self, connection):
         self.connection = connection
         self.counter = 0
         self.requests = {}

     def generate_request_id(self):
         self.counter += 1
         return self.counter

     def request(self, data, timeout=10):
         deferred = defer.Deferred()
         request_id = self.generate_request_id()
         self.requests[request_id] = deferred

         # ATTENTION: I want to see current traceback when timeout occurs
         # therefore raise and catch here
         failure_factory = FailureFactory(failure.TimeoutError())

         # charge timer
         timer = reactor.callLater(timeout, self._on_timeout, 
request_id, failure_factory)

         # send request
         self.connection.send_request(request_id, data)
         return deferred

     def _on_timeout(self, request_id, failure_factory):
         deferred = self.requests.pop(request_id, None)
         if deferred is not None:
             deferred.errback(failure_factory())

     def on_response_received(self, request_id, response):
         deferred = self.requests.pop(request_id, None)
         if deferred is not None:
             deferred.callback(response)
}}}

Example 2 works but Example 1 does not.

What is wrong with example 1?

Bug in twisted?

I have posted this message as ticket but was redirected to mailing-list
http://twistedmatrix.com/trac/ticket/4628



From greenenergy at gmail.com  Fri Aug  6 14:02:33 2010
From: greenenergy at gmail.com (Colin Fox)
Date: Fri, 06 Aug 2010 11:02:33 -0700
Subject: [Twisted-Python] Question about XMLRPC, Sync and ASync
Message-ID: <4C5C4E39.6080807@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi everyone.

I'm relatively new to Twisted, though I have used parts of it for a while.

What I'm trying to do now has me a little stumped -- I have two servers,
one of which answers XMLRPC requests, and it calls another one using the
twisted basic.LineReceiver system.

So I have an incoming XMLRPC request, and I need to issue a command to
the other server and wait for it to come back before I respond to the
xmlrpc call. So I'm trying to do an async call inside a synchronous call.

I think that deferreds will play a part here, but I guess I must be
missing something, as I'm not sure how to proceed. Can I return a
deferred from my XMLRPC handler? And if so, how do I fire the callback
when the result comes in to the LineReceiver?

Thanks,
   Colin
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iQEcBAEBAgAGBQJMXE45AAoJEKVzdTf0DlfQ+vIH/RJFfIlVfUAkNXFER12eoY7E
TgtXYP4nLBMsBbaPUy7LROrfCl2gdxPdy/q2DI7JHueG2eUznW5IdG4Zipe6RFS/
xCAUebs7E2Cdkc0s+i+6zCvCZQvmUV20tunxyheuwc26PxPT0HEZGpGJhhKOGqGL
tYGr3OXAn7CEiAxwX3XMs4nMRVLAalMnKgsDLIRx4jZkaitvAQb/ufuJWmzf2+u2
dgbPREllAze3LrGsPFjCUdJToAE3AVzYIMbGQr/n/TsUK3v+hbAky2Xu8xuAkUgF
4y/5THaPw2EFKJsZNFhSY7b6hHbO+gr0VzRkx92sPKy4GxnxY7Br80n6A76LBoc=
=mRxr
-----END PGP SIGNATURE-----


From mailing at franzoni.eu  Fri Aug  6 14:20:07 2010
From: mailing at franzoni.eu (Alan Franzoni)
Date: Fri, 06 Aug 2010 20:20:07 +0200
Subject: [Twisted-Python] strange bug with... something :)
In-Reply-To: <4C5B7E3F.5070401@naumen.ru>
References: <4C5B7E3F.5070401@naumen.ru>
Message-ID: <i3hjon$r3f$1@dough.gmane.org>

On 8/6/10 5:15 AM, ?????? ????????? wrote:

[cut]

I'd like to help you, but I don't really get it.

First:

- What are you trying to do?
- What is your expected outcome?
- What is, on the contrary your program's output?

Second:

your example is too long and is not executable (I need to figure out
what you're calling. Could you shorten it and make it runnable out of
the box?

http://sscce.org/






From bmuller at butterfat.net  Fri Aug  6 15:09:34 2010
From: bmuller at butterfat.net (bmuller at butterfat.net)
Date: Fri, 06 Aug 2010 15:09:34 -0400
Subject: [Twisted-Python] Twisted ORM
Message-ID: <4C5C5DEE.3060606@butterfat.net>

Hello everyone,

I've just finished creating a basic Object Relational Mapper (ORM) in 
Twisted (http://trac.butterfat.net/public/twistar) called Twistar.  The 
goal of the project is most certainly not to duplicate the full 
functionality of existing Python ORM's, but rather to provide a simple 
interface to databases that obviates the need for writing SQL.

With the deprecation of twisted.enterprise.row and 
twisted.enterprise.reflection, the only option right now in twisted for 
database interaction (that I know of) is either via straight SQL through 
adbapi|||| or via patches on existing Python ORM's.  The goal behind 
Twistar is to provide basic ORM functionality but completely within the 
Twisted paradigm.

The code is fully documented (via pydoctor) and the package contains 
unit tests (which can be run by trial).

Who should I talk to concerning possible inclusion in twisted.enterprise?

Thanks,
Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100806/6be937df/attachment.htm 

From jkakar at kakar.ca  Fri Aug  6 15:22:28 2010
From: jkakar at kakar.ca (Jamu Kakar)
Date: Fri, 6 Aug 2010 12:22:28 -0700
Subject: [Twisted-Python] Twisted ORM
In-Reply-To: <4C5C5DEE.3060606@butterfat.net>
References: <4C5C5DEE.3060606@butterfat.net>
Message-ID: <AANLkTim3HKthZmpXth3pR0JdTyEDWm9EgA_rhf9qNBSt@mail.gmail.com>

Hi Brian,

On Fri, Aug 6, 2010 at 12:09 PM, bmuller at butterfat.net
<bmuller at butterfat.net> wrote:
> I've just finished creating a basic Object Relational Mapper (ORM) in
> Twisted (http://trac.butterfat.net/public/twistar) called Twistar.? The goal
> of the project is most certainly not to duplicate the full functionality of
> existing Python ORM's, but rather to provide a simple interface to databases
> that obviates the need for writing SQL.
>
> With the deprecation of twisted.enterprise.row and
> twisted.enterprise.reflection, the only option right now in twisted for
> database interaction (that I know of) is either via straight SQL through
> adbapi or via patches on existing Python ORM's.? The goal behind Twistar is
> to provide basic ORM functionality but completely within the Twisted
> paradigm.
>
> The code is fully documented (via pydoctor) and the package contains unit
> tests (which can be run by trial).
>
> Who should I talk to concerning possible inclusion in twisted.enterprise?

This looks quite interesting, thanks for sharing!  It might be worth
considering adding it to the tx project:

https://edge.launchpad.net/tx

tx is a collection of projects that extend Twisted.

Thanks,
J.


From itamar at itamarst.org  Fri Aug  6 15:47:53 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 6 Aug 2010 15:47:53 -0400 (EDT)
Subject: [Twisted-Python] Twisted ORM
In-Reply-To: <4C5C5DEE.3060606@butterfat.net>
References: <4C5C5DEE.3060606@butterfat.net>
Message-ID: <11711.63.107.91.99.1281124073.squirrel@webmail.zoteca.com>

> I've just finished creating a basic Object Relational Mapper (ORM) in
> Twisted (http://trac.butterfat.net/public/twistar) called Twistar.  The
> goal of the project is most certainly not to duplicate the full
> functionality of existing Python ORM's, but rather to provide a simple
> interface to databases that obviates the need for writing SQL.>

I glanced at the documentation, and was wondering what the transactional
model was?

> Who should I talk to concerning possible inclusion in twisted.enterprise?

This is probably beyond the scope of what we'd want to include in Twisted
(which aims to be a networking framework). Distributing it as a standalone
package is probably the way to go.



From jasonjwwilliams at gmail.com  Fri Aug  6 19:20:06 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 6 Aug 2010 17:20:06 -0600
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
Message-ID: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>

Hi,

I'm having an issue using twistd with --profiler=cprofile. I was using
hotshot, but there's a bug in loading big profile logs with it so I'm
trying cProfile instead.

The issue is that with --profiler=cprofile, the --profile=<filename>
flag seems to be ignored. That is no profile file gets created. Any
help is greatly appreciated.

-J


From jvalenzuela1977 at gmail.com  Fri Aug  6 23:41:11 2010
From: jvalenzuela1977 at gmail.com (Jason Valenzuela)
Date: Sat, 07 Aug 2010 11:41:11 +0800
Subject: [Twisted-Python] Question about XMLRPC, Sync and ASync
In-Reply-To: <4C5C4E39.6080807@gmail.com>
References: <4C5C4E39.6080807@gmail.com>
Message-ID: <4C5CD5D7.9040307@gmail.com>

On 8/7/2010 2:02 AM, Colin Fox wrote:


> I think that deferreds will play a part here, but I guess I must be
> missing something, as I'm not sure how to proceed. Can I return a
> deferred from my XMLRPC handler?

You may indeed return a deferred from an RPC method.


> And if so, how do I fire the callback
> when the result comes in to the LineReceiver?

Your remote method that returned the deferred must keep a reference of 
that deferred object until such time as the result is ready. You then 
call the deferred's callback method with the result as the argument.

On another note, if both of your servers are using twisted, a 
prospective broker interface may be easier than a low level LineReceiver 
protocol.


Jason Valenzuela


From general at vultaire.net  Fri Aug  6 23:42:56 2010
From: general at vultaire.net (Paul Goins)
Date: Sat, 07 Aug 2010 12:42:56 +0900
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
In-Reply-To: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>
References: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>
Message-ID: <4C5CD640.5040406@vultaire.net>

Add --savestats.  I'm on 8.2.0, but it probably should still work.

- Paul Goins

On 8/7/2010 8:20 AM, Jason J. W. Williams wrote:
> Hi,
>
> I'm having an issue using twistd with --profiler=cprofile. I was using
> hotshot, but there's a bug in loading big profile logs with it so I'm
> trying cProfile instead.
>
> The issue is that with --profiler=cprofile, the --profile=<filename>
> flag seems to be ignored. That is no profile file gets created. Any
> help is greatly appreciated.
>
> -J
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From werner at thieprojects.ch  Sat Aug  7 05:24:33 2010
From: werner at thieprojects.ch (Werner Thie)
Date: Sat, 07 Aug 2010 11:24:33 +0200
Subject: [Twisted-Python] Twisted ORM
In-Reply-To: <4C5C5DEE.3060606@butterfat.net>
References: <4C5C5DEE.3060606@butterfat.net>
Message-ID: <4C5D2651.2080101@thieprojects.ch>

Great work, I'm currently looking into doing some integration work with 
couchdb and stumbled over paisly https://launchpad.net/paisley but this 
piece of code is poorly maintained.

Not being the db master (neither from heart nor from profession) let me 
ask the dumb question:

How do you rate the chances of interfacing couchdb to your code?

Why am I fascinated by the promises couchdb makes? I really hate the 
overstructuring of data the SQL DBs impose - the moment you structure 
the data is the moment you realize that there is an impedance mismatch 
between data and its usage and technically ORMs are no more than 
impedance adapters, lightening the burden of the programmer to 
restructure data. With the promises couchdb makes in terms of imposing 
the least possible structuring onto the data and doing the 
(re)structuring when querying and retrieving it struck a note in me.

Thanks for comments, Werner

On 06.08.2010 21:09, bmuller at butterfat.net wrote:
> Hello everyone,
>
> I've just finished creating a basic Object Relational Mapper (ORM) in
> Twisted (http://trac.butterfat.net/public/twistar) called Twistar. The
> goal of the project is most certainly not to duplicate the full
> functionality of existing Python ORM's, but rather to provide a simple
> interface to databases that obviates the need for writing SQL.
>
> With the deprecation of twisted.enterprise.row and
> twisted.enterprise.reflection, the only option right now in twisted for
> database interaction (that I know of) is either via straight SQL through
> adbapi|||| or via patches on existing Python ORM's. The goal behind
> Twistar is to provide basic ORM functionality but completely within the
> Twisted paradigm.
>
> The code is fully documented (via pydoctor) and the package contains
> unit tests (which can be run by trial).
>
> Who should I talk to concerning possible inclusion in twisted.enterprise?
>
> Thanks,
> Brian
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From andrewfr_ice at yahoo.com  Sat Aug  7 14:36:02 2010
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 7 Aug 2010 11:36:02 -0700 (PDT)
Subject: [Twisted-Python] Question about XMLRPC, Sync and ASync
Message-ID: <984492.78838.qm@web120706.mail.ne1.yahoo.com>

Hi Colin:

> Message: 1
> Date: Fri, 06 Aug 2010 11:02:33 -0700
> From: Colin Fox <greenenergy at gmail.com>
> Subject: [Twisted-Python] Question about XMLRPC, Sync and
> ASync
> To: twisted-python at twistedmatrix.com
> Message-ID: <4C5C4E39.6080807 at gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1

> What I'm trying to do now has me a little stumped -- I have
> two servers, one of which answers XMLRPC requests, and it calls another
> one using the twisted basic.LineReceiver system.

I am a little confused about the basic.LineReceiver because I thought
that was used for creating server protocols?

> So I have an incoming XMLRPC request, and I need to issue a
> command to the other server and wait for it to come back before I
> respond to the xmlrpc call. So I'm trying to do an async call inside a
> synchronous call.

I'm a bit rusty but lets use this simple example of a XMLRPC server
making another XMLRPC request, processing the data and returning it:

class MyXMLRpcServer(xmlrpc.XMLRPC):
? ? def __init__(self):
        self.service = xmlrpc.Proxy("http://www.dude.com")

? ? def xmlrpc_someFunction(self, *argv, **kwargs):
? ? ? ? ....
? ? ? ? return self.service.callRemote(someFunction).\
               addCallback(processResult) 

self.service.callRemote returns a deferred. Returning a deferred
tells the reactor that someFunction() is not finished processing and
to call processResult when there is data from www.dude.com 

eventually processResult(data) is called

def processResult(data)
    """
    do something with data
    """
    return result

This should return a result to the XMLRPC client.


Cheers,
Andrew



      


From andrew at bemusement.org  Sat Aug  7 22:54:22 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Sun, 8 Aug 2010 12:54:22 +1000
Subject: [Twisted-Python] Question about XMLRPC, Sync and ASync
In-Reply-To: <984492.78838.qm@web120706.mail.ne1.yahoo.com>
References: <984492.78838.qm@web120706.mail.ne1.yahoo.com>
Message-ID: <20100808025422.GA8884@aihal.home.puzzling.org>

Andrew Francis wrote:
[...]
> I am a little confused about the basic.LineReceiver because I thought
> that was used for creating server protocols?

Why would you think that?  It's a perfectly good basis for implementing
the client or server side of a line-based protocol.  For example, the
SMTP server protocol and SMTP client protocol in twisted.mail both use
LineReceiver (or LineOnlyReceiver).

TCP is symmetric: once the connection has been established there's no
significant difference between the client and the server, both sides are
just peers.

-Andrew.


From exarkun at twistedmatrix.com  Sun Aug  8 00:05:23 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Aug 2010 04:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1281240323.19.2080754398@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100808/d5e93daa/attachment.htm 

From petshmidt at googlemail.com  Mon Aug  9 08:07:51 2010
From: petshmidt at googlemail.com (Pet)
Date: Mon, 9 Aug 2010 14:07:51 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com> 
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com> 
	<20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
Message-ID: <AANLkTinHJRwJGiMuR2keAsTHPqf0jHAiwJPszacc3ytR@mail.gmail.com>

On Thu, Aug 5, 2010 at 5:01 PM,  <exarkun at twistedmatrix.com> wrote:
> On 02:21 pm, petshmidt at googlemail.com wrote:
>>
>> On Thu, Aug 5, 2010 at 3:32 PM, Alan Franzoni <mailing at franzoni.eu> wrote:
>>>
>>> On 8/4/10 1:30 PM, Pet wrote:
>>>>
>>>> AFAIU this works only if Factory is subclassing
>>>> protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
>>>> protocol attribute is not present
>>>
>>> server.Site subclasses ?http.HTTPFactory which, in turns, subclasses
>>> protocol.ServerFactory:
>>>
>>>
>>> http://twistedmatrix.com/documents/10.0.0/api/twisted.web.server.Site.html
>>>
>>>
>>> by the way, if I now understand your question: just subclass XMLRPC and
>>> create your own xmlrpc resource class by adding methods like
>>>
>>> xmlrpc_somemethod
>>> xmlrpc_othermethod
>>>
>>> then add such handler to your server.Site, and you're done. Your method
>>> will be invoked once per request.
>>
>> what I've tried to do is to have objects, which were members of
>> XMLRPC. And these objects would have some internal state which is
>> isolated per request. But each new request has changed this objects,
>> because xmlrpc is created once and not for each request or connection.
>> I've solved this by modifying render_POST where I create those objects
>> before calling requested function and so they lives only there without
>> being overwritten by new request. Ugh... It's might be ugly, but works
>> for me
>
> If you want a new XMLRPC instance per request, then create a new one per
> request. ?http://twistedmatrix.com/documents/current/web/howto/web-in-60
> /dynamic-dispatch.html may help.

This works for me too. getChild() returns for each request new
instance. When is this object destroyed? I've putted print into
__del__, but can't see it in log.

Pet

>
> Re-using a single XMLRPC instance and mangling its state in render_POST will
> break as soon as your server receives two overlapping requests.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From exarkun at twistedmatrix.com  Mon Aug  9 09:18:09 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 09 Aug 2010 13:18:09 -0000
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTinHJRwJGiMuR2keAsTHPqf0jHAiwJPszacc3ytR@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>
	<20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
	<AANLkTinHJRwJGiMuR2keAsTHPqf0jHAiwJPszacc3ytR@mail.gmail.com>
Message-ID: <20100809131809.2470.973284262.divmod.xquotient.2@localhost.localdomain>

On 12:07 pm, petshmidt at googlemail.com wrote:
>[snip]
>>
>>If you want a new XMLRPC instance per request, then create a new one 
>>per
>>request. ?http://twistedmatrix.com/documents/current/web/howto/web- 
>>in-60
>>/dynamic-dispatch.html may help.
>
>This works for me too. getChild() returns for each request new
>instance. When is this object destroyed? I've putted print into
>__del__, but can't see it in log.

At the same time any Python object is destroyed, when there are no more 
references to it.  Twisted won't keep any references to it after the 
response has been completely generated.  So as long as your code also 
keeps no references, it will be destroyed shortly after each request.

Jean-Paul


From petshmidt at googlemail.com  Mon Aug  9 09:32:24 2010
From: petshmidt at googlemail.com (Pet)
Date: Mon, 9 Aug 2010 15:32:24 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <20100809131809.2470.973284262.divmod.xquotient.2@localhost.localdomain>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com> 
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com> 
	<20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
	<AANLkTinHJRwJGiMuR2keAsTHPqf0jHAiwJPszacc3ytR@mail.gmail.com> 
	<20100809131809.2470.973284262.divmod.xquotient.2@localhost.localdomain>
Message-ID: <AANLkTikxeXvq1ohE2sxZmoR6c4SY5LqpXU4dH8wLtEJ6@mail.gmail.com>

On Mon, Aug 9, 2010 at 3:18 PM,  <exarkun at twistedmatrix.com> wrote:
> On 12:07 pm, petshmidt at googlemail.com wrote:
>>
>> [snip]
>>>
>>> If you want a new XMLRPC instance per request, then create a new one per
>>> request. ?http://twistedmatrix.com/documents/current/web/howto/web- in-60
>>> /dynamic-dispatch.html may help.
>>
>> This works for me too. getChild() returns for each request new
>> instance. When is this object destroyed? I've putted print into
>> __del__, but can't see it in log.
>
> At the same time any Python object is destroyed, when there are no more
> references to it. ?Twisted won't keep any references to it after the
> response has been completely generated. ?So as long as your code also keeps
> no references, it will be destroyed shortly after each request.

getChild() is only defined in my code, I'm not calling it anywhere. so
it must be framework holding reference returned by getChild. Well now
after some minutes they were destroyed.

Thanks

Pet

>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From free at 64studio.com  Tue Aug 10 10:58:07 2010
From: free at 64studio.com (Free Ekanayaka)
Date: Tue, 10 Aug 2010 16:58:07 +0200
Subject: [Twisted-Python] Running tests in parallel with trial
Message-ID: <87zkwuqzuo.fsf@64studio.com>

Hi,

is there a way to tell trial run groups of tests in parallel in
different processes? Something like the "-jN" option in zope-testrunner.

Or alternatively, what's the recommended way to make better use of
multi-core CPUs when running a test suite with trial?

Thanks,

Free


From jml at mumak.net  Tue Aug 10 11:07:56 2010
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 10 Aug 2010 16:07:56 +0100
Subject: [Twisted-Python] Running tests in parallel with trial
In-Reply-To: <87zkwuqzuo.fsf@64studio.com>
References: <87zkwuqzuo.fsf@64studio.com>
Message-ID: <AANLkTi=2=yZ5MBp-+rHEbYZT=mDRdu71fuBv+WBZk6GS@mail.gmail.com>

On Tue, Aug 10, 2010 at 3:58 PM, Free Ekanayaka <free at 64studio.com> wrote:
> Hi,
>
> is there a way to tell trial run groups of tests in parallel in
> different processes? Something like the "-jN" option in zope-testrunner.
>
> Or alternatively, what's the recommended way to make better use of
> multi-core CPUs when running a test suite with trial?
>

In short, no. There's a longstanding ticket about doing this:
http://twistedmatrix.com/trac/ticket/1784.

It would be pretty easy to kludge something together that worked for
parallelizing across cores if you're willing to sacrifice the debugger
support and a bunch of the other advanced things that disttrial aim to
achieve.
  * Add a way for trial to run tests based off a list of FQPNs in a
file, say, --from-list
  * Write something that does:
    * trial --reporter=subunit --dry-run | subunit-ls > all-tests
    * split all-tests into N sublists however you fancy
    * trial --reporter=subunit --from-list=sublistN
    * Then something that aggregates those subunit streams into a real report.

jml


From free at 64studio.com  Tue Aug 10 11:26:40 2010
From: free at 64studio.com (Free Ekanayaka)
Date: Tue, 10 Aug 2010 17:26:40 +0200
Subject: [Twisted-Python] Running tests in parallel with trial
In-Reply-To: <AANLkTi=2=yZ5MBp-+rHEbYZT=mDRdu71fuBv+WBZk6GS@mail.gmail.com>
	(Jonathan Lange's message of "Tue, 10 Aug 2010 16:07:56 +0100")
References: <87zkwuqzuo.fsf@64studio.com>
	<AANLkTi=2=yZ5MBp-+rHEbYZT=mDRdu71fuBv+WBZk6GS@mail.gmail.com>
Message-ID: <87vd7iqyj3.fsf@64studio.com>

Hey,

|--==> On Tue, 10 Aug 2010 16:07:56 +0100, Jonathan Lange <jml at mumak.net> said:

  JL> On Tue, Aug 10, 2010 at 3:58 PM, Free Ekanayaka <free at 64studio.com> wrote:
  >>Hi,
  >>
  >>is there a way to tell trial run groups of tests in parallel in
  >>different processes? Something like the "-jN" option in zope-testrunner.
  >>
  >>Or alternatively, what's the recommended way to make better use of
  >>multi-core CPUs when running a test suite with trial?
  >>

  JL> In short, no. There's a longstanding ticket about doing this:
  JL> http://twistedmatrix.com/trac/ticket/1784.

Thanks for the pointer, it looks very promising.

  JL> It would be pretty easy to kludge something together that worked for
  JL> parallelizing across cores if you're willing to sacrifice the debugger
  JL> support and a bunch of the other advanced things that disttrial aim to
  JL> achieve.
  JL>   * Add a way for trial to run tests based off a list of FQPNs in a
  JL> file, say, --from-list
  JL>   * Write something that does:
  JL>     * trial --reporter=subunit --dry-run | subunit-ls > all-tests
  JL>     * split all-tests into N sublists however you fancy
  JL>     * trial --reporter=subunit --from-list=sublistN
  JL>     * Then something that aggregates those subunit streams into a real report.

That would be indeed easy, and probably acceptable while waiting for
disttrial to get its way into Twisted trunk.

Cheers,

Free


From exarkun at twistedmatrix.com  Tue Aug 10 11:36:51 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 10 Aug 2010 15:36:51 -0000
Subject: [Twisted-Python] Running tests in parallel with trial
In-Reply-To: <AANLkTi=2=yZ5MBp-+rHEbYZT=mDRdu71fuBv+WBZk6GS@mail.gmail.com>
References: <87zkwuqzuo.fsf@64studio.com>
	<AANLkTi=2=yZ5MBp-+rHEbYZT=mDRdu71fuBv+WBZk6GS@mail.gmail.com>
Message-ID: <20100810153651.2470.1448296829.divmod.xquotient.17@localhost.localdomain>

On 03:07 pm, jml at mumak.net wrote:
>On Tue, Aug 10, 2010 at 3:58 PM, Free Ekanayaka <free at 64studio.com> 
>wrote:
>>Hi,
>>
>>is there a way to tell trial run groups of tests in parallel in
>>different processes? Something like the "-jN" option in zope- 
>>testrunner.
>>
>>Or alternatively, what's the recommended way to make better use of
>>multi-core CPUs when running a test suite with trial?
>
>In short, no. There's a longstanding ticket about doing this:
>http://twistedmatrix.com/trac/ticket/1784.

fwiw, the code in the branch basically works.  The only problem it has 
is with doctests.

Jean-Paul


From jasonjwwilliams at gmail.com  Tue Aug 10 16:55:09 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 10 Aug 2010 14:55:09 -0600
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
In-Reply-To: <4C5CD640.5040406@vultaire.net>
References: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>
	<4C5CD640.5040406@vultaire.net>
Message-ID: <AANLkTimyqfC7YdV+M3zAXjLbMwaftG40_zpud+gwynS9@mail.gmail.com>

This doesn't seem to work either. Also on 8.2.0.

-J

On Fri, Aug 6, 2010 at 9:42 PM, Paul Goins <general at vultaire.net> wrote:
> Add --savestats. ?I'm on 8.2.0, but it probably should still work.
>
> - Paul Goins
>
> On 8/7/2010 8:20 AM, Jason J. W. Williams wrote:
>> Hi,
>>
>> I'm having an issue using twistd with --profiler=cprofile. I was using
>> hotshot, but there's a bug in loading big profile logs with it so I'm
>> trying cProfile instead.
>>
>> The issue is that with --profiler=cprofile, the --profile=<filename>
>> flag seems to be ignored. That is no profile file gets created. Any
>> help is greatly appreciated.
>>
>> -J
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From exarkun at twistedmatrix.com  Tue Aug 10 17:20:18 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 10 Aug 2010 21:20:18 -0000
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
In-Reply-To: <AANLkTimyqfC7YdV+M3zAXjLbMwaftG40_zpud+gwynS9@mail.gmail.com>
References: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>
	<4C5CD640.5040406@vultaire.net>
	<AANLkTimyqfC7YdV+M3zAXjLbMwaftG40_zpud+gwynS9@mail.gmail.com>
Message-ID: <20100810212018.2470.248538359.divmod.xquotient.26@localhost.localdomain>

On 08:55 pm, jasonjwwilliams at gmail.com wrote:
>This doesn't seem to work either. Also on 8.2.0.

This works for me:

    twistd --savestats --profiler cprofile -n --profile prof.stats web

prof.stats is written and contains a binary dump of the profile data. 
This also works:

    twistd --profiler cprofile -n --profile prof.stats web

and produces a prof.stats containing a plaintext dump of the profile.

I tested on the 8.2 release branch, which should be the same as the 8.2 
release.  I used Python 2.6 on Ubuntu 9.10.

Jean-Paul


From jasonjwwilliams at gmail.com  Tue Aug 10 17:39:50 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 10 Aug 2010 15:39:50 -0600
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
In-Reply-To: <20100810212018.2470.248538359.divmod.xquotient.26@localhost.localdomain>
References: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>
	<4C5CD640.5040406@vultaire.net>
	<AANLkTimyqfC7YdV+M3zAXjLbMwaftG40_zpud+gwynS9@mail.gmail.com>
	<20100810212018.2470.248538359.divmod.xquotient.26@localhost.localdomain>
Message-ID: <AANLkTi=aauAwF4h65e9E9p97XM_3xr6YrfEuy6z2avHq@mail.gmail.com>

I'm not sure what's wrong then. Tried your command line and got
nothing written. Tried it with 10.1 and same deal. I'll keep hacking
at it.

-J

On Tue, Aug 10, 2010 at 3:20 PM,  <exarkun at twistedmatrix.com> wrote:
> On 08:55 pm, jasonjwwilliams at gmail.com wrote:
>>This doesn't seem to work either. Also on 8.2.0.
>
> This works for me:
>
> ? ?twistd --savestats --profiler cprofile -n --profile prof.stats web
>
> prof.stats is written and contains a binary dump of the profile data.
> This also works:
>
> ? ?twistd --profiler cprofile -n --profile prof.stats web
>
> and produces a prof.stats containing a plaintext dump of the profile.
>
> I tested on the 8.2 release branch, which should be the same as the 8.2
> release. ?I used Python 2.6 on Ubuntu 9.10.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From peter.westlake at pobox.com  Wed Aug 11 12:30:36 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Wed, 11 Aug 2010 17:30:36 +0100
Subject: [Twisted-Python] How to bisect Twisted?
Message-ID: <1281544236.14078.1389420521@webmail.messagingengine.com>

In the Git version of the Twisted source code, there are tags for
releases, e.g. the revision with SHA id
85a6a0f9e3c4ea22d1d72d4ca8eb0c08ee99ca85 corresponds to 8.0.0. This is
good, but there aren't any intermediate changes on that branch (tag?),
just the releases! So there isn't much for "git bisect" to work with.
I'm trying to trace a bug that wasn't in 2.5.0 but is in 8.0.0; what
arguments should I give to bisect? Apologies if this is obvious to
anyone who knows how to use git, but I'm just a beginner.

Thanks,

Peter.


From jml at mumak.net  Wed Aug 11 12:50:22 2010
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 11 Aug 2010 17:50:22 +0100
Subject: [Twisted-Python] How to bisect Twisted?
In-Reply-To: <1281544236.14078.1389420521@webmail.messagingengine.com>
References: <1281544236.14078.1389420521@webmail.messagingengine.com>
Message-ID: <AANLkTi=zLkQ5pmLEb4svpyHK-CZDNsx91bN5D6o0r1rS@mail.gmail.com>

On Wed, Aug 11, 2010 at 5:30 PM, Peter Westlake
<peter.westlake at pobox.com> wrote:
> In the Git version of the Twisted source code, there are tags for
> releases, e.g. the revision with SHA id
> 85a6a0f9e3c4ea22d1d72d4ca8eb0c08ee99ca85 corresponds to 8.0.0. This is
> good, but there aren't any intermediate changes on that branch (tag?),
> just the releases! So there isn't much for "git bisect" to work with.
> I'm trying to trace a bug that wasn't in 2.5.0 but is in 8.0.0; what
> arguments should I give to bisect? Apologies if this is obvious to
> anyone who knows how to use git, but I'm just a beginner.
>

I don't know about git, but the way I'd do it in Bazaar is:
  bzr bisect -r svn:19165..svn:23025 run <script>

Where <script> is something that tests for the bug.

Revision numbers obtained from
http://twistedmatrix.com/trac/wiki/ReleaseRevisions; bzr-bisect from
https://launchpad.net/bzr-bisect; bzr-svn from
https://launchpad.net/bzr-svn.

jml


From general at vultaire.net  Wed Aug 11 20:31:01 2010
From: general at vultaire.net (Paul Goins)
Date: Thu, 12 Aug 2010 09:31:01 +0900
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
In-Reply-To: <AANLkTi=aauAwF4h65e9E9p97XM_3xr6YrfEuy6z2avHq@mail.gmail.com>
References: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>	<4C5CD640.5040406@vultaire.net>	<AANLkTimyqfC7YdV+M3zAXjLbMwaftG40_zpud+gwynS9@mail.gmail.com>	<20100810212018.2470.248538359.divmod.xquotient.26@localhost.localdomain>
	<AANLkTi=aauAwF4h65e9E9p97XM_3xr6YrfEuy6z2avHq@mail.gmail.com>
Message-ID: <4C6340C5.1050700@vultaire.net>

Let me ask this: if you use the exact same command line, but change 
"--profiler cprofile" to "--profiler profile"", is the file generated?

- Paul Goins

On 8/11/2010 6:39 AM, Jason J. W. Williams wrote:
> I'm not sure what's wrong then. Tried your command line and got
> nothing written. Tried it with 10.1 and same deal. I'll keep hacking
> at it.
>
> -J
>
> On Tue, Aug 10, 2010 at 3:20 PM,<exarkun at twistedmatrix.com>  wrote:
>> On 08:55 pm, jasonjwwilliams at gmail.com wrote:
>>> This doesn't seem to work either. Also on 8.2.0.
>>
>> This works for me:
>>
>>     twistd --savestats --profiler cprofile -n --profile prof.stats web
>>
>> prof.stats is written and contains a binary dump of the profile data.
>> This also works:
>>
>>     twistd --profiler cprofile -n --profile prof.stats web
>>
>> and produces a prof.stats containing a plaintext dump of the profile.
>>
>> I tested on the 8.2 release branch, which should be the same as the 8.2
>> release.  I used Python 2.6 on Ubuntu 9.10.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From screwtape at froup.com  Wed Aug 11 22:49:25 2010
From: screwtape at froup.com (Tim Allen)
Date: Thu, 12 Aug 2010 12:49:25 +1000
Subject: [Twisted-Python] How to bisect Twisted?
In-Reply-To: <1281544236.14078.1389420521@webmail.messagingengine.com>
References: <1281544236.14078.1389420521@webmail.messagingengine.com>
Message-ID: <20100812024925.GA27174@boombah.thristian.org>

On Wed, Aug 11, 2010 at 05:30:36PM +0100, Peter Westlake wrote:
> In the Git version of the Twisted source code, there are tags for
> releases, e.g. the revision with SHA id
> 85a6a0f9e3c4ea22d1d72d4ca8eb0c08ee99ca85 corresponds to 8.0.0.

When you say "git version of the Twisted source code", do you mean the
official git described here?

    http://twistedmatrix.com/trac/wiki/GitMirror

Do tags for the various Twisted releases show up if you run:
    
    git tag -l

?

> This is
> good, but there aren't any intermediate changes on that branch (tag?),
> just the releases! So there isn't much for "git bisect" to work with.
> I'm trying to trace a bug that wasn't in 2.5.0 but is in 8.0.0; what
> arguments should I give to bisect? Apologies if this is obvious to
> anyone who knows how to use git, but I'm just a beginner.

I haven't used the official git mirror myself, but I have my own mirror
created with "git-svn". It looks like git-svn got very confused about
Twisted's release-tagging system; of all the tags I see listed at:

    http://twistedmatrix.com/trac/browser/tags

...the only thing in .git/refs/remotes/tags is the "releases"
subdirectory, which isn't actually a proper tag at all.

So, uh, yeah, I'm stumped.

If you *do* figure out what to do, though, feel free to add it to the
GitMirror wiki-page - or I'd be happy to write it up for you.


From zoran.bosnjak at sloveniacontrol.si  Thu Aug 12 08:26:19 2010
From: zoran.bosnjak at sloveniacontrol.si (Zoran Bosnjak)
Date: Thu, 12 Aug 2010 14:26:19 +0200
Subject: [Twisted-Python] global exception handler
Message-ID: <1281615979.30773.16.camel@bosnjak-laptop>

Hello all,
is there a possibility to have a global (application wide) exception
handler in twisted application? I would like to stop application in case
of any unhandled error in deferred callbacks.

If application is run from twistd ..., is it correct to stop application
like this?

def quit(failure):
  log.err(str(failure))
  reactor.callWhenRunning(reactor.stop)

But the main problem is how to get this method called if exception is
not handled by explicitly doing d.addErrback for each case.

Zoran



From itamar at itamarst.org  Thu Aug 12 08:55:46 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 12 Aug 2010 08:55:46 -0400
Subject: [Twisted-Python] global exception handler
In-Reply-To: <1281615979.30773.16.camel@bosnjak-laptop>
References: <1281615979.30773.16.camel@bosnjak-laptop>
Message-ID: <1281617746.1558.3.camel@blake>

On Thu, 2010-08-12 at 14:26 +0200, Zoran Bosnjak wrote:
> Hello all,
> is there a possibility to have a global (application wide) exception
> handler in twisted application? I would like to stop application in case
> of any unhandled error in deferred callbacks.

Why not add an error handler yourself for these Deferreds?

It is possible to get a function called for all unhandled errors by
adding a log observer
(http://twistedmatrix.com/documents/current/core/howto/logging.html#auto5) but this logging only happens on garbage collection of the Deferred, which means it can be delayed indefinitely in some cases.



From peter.westlake at pobox.com  Thu Aug 12 10:28:29 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 12 Aug 2010 15:28:29 +0100
Subject: [Twisted-Python] How to bisect Twisted?
In-Reply-To: <AANLkTi=zLkQ5pmLEb4svpyHK-CZDNsx91bN5D6o0r1rS@mail.gmail.com>
References: <1281544236.14078.1389420521@webmail.messagingengine.com>
	<AANLkTi=zLkQ5pmLEb4svpyHK-CZDNsx91bN5D6o0r1rS@mail.gmail.com>
Message-ID: <1281623309.11717.1389585131@webmail.messagingengine.com>


On Wed, 11 Aug 2010 17:50 +0100, "Jonathan Lange" <jml at mumak.net> wrote:
> On Wed, Aug 11, 2010 at 5:30 PM, Peter Westlake
> <peter.westlake at pobox.com> wrote:
> > In the Git version of the Twisted source code, there are tags for
> > releases, e.g. the revision with SHA id
> > 85a6a0f9e3c4ea22d1d72d4ca8eb0c08ee99ca85 corresponds to 8.0.0. This is
> > good, but there aren't any intermediate changes on that branch (tag?),
> > just the releases! So there isn't much for "git bisect" to work with.
> > I'm trying to trace a bug that wasn't in 2.5.0 but is in 8.0.0; what
> > arguments should I give to bisect? Apologies if this is obvious to
> > anyone who knows how to use git, but I'm just a beginner.
> >
> 
> I don't know about git, but the way I'd do it in Bazaar is:
>   bzr bisect -r svn:19165..svn:23025 run <script>
> 
> Where <script> is something that tests for the bug.
> 
> Revision numbers obtained from
> http://twistedmatrix.com/trac/wiki/ReleaseRevisions; 

Excellent, thanks! The revision numbers are just what I need.

Peter.

> bzr-bisect from
> https://launchpad.net/bzr-bisect; bzr-svn from
> https://launchpad.net/bzr-svn.
> 
> jml
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


From peter.westlake at pobox.com  Thu Aug 12 10:49:03 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 12 Aug 2010 15:49:03 +0100
Subject: [Twisted-Python] How to bisect Twisted?
In-Reply-To: <20100812024925.GA27174@boombah.thristian.org>
References: <1281544236.14078.1389420521@webmail.messagingengine.com>
	<20100812024925.GA27174@boombah.thristian.org>
Message-ID: <1281624543.15869.1389588071@webmail.messagingengine.com>

On Thu, 12 Aug 2010 12:49 +1000, "Tim Allen" <screwtape at froup.com>
wrote:
> On Wed, Aug 11, 2010 at 05:30:36PM +0100, Peter Westlake wrote:
> > In the Git version of the Twisted source code, there are tags for
> > releases, e.g. the revision with SHA id
> > 85a6a0f9e3c4ea22d1d72d4ca8eb0c08ee99ca85 corresponds to 8.0.0.
> 
> When you say "git version of the Twisted source code", do you mean the
> official git described here?
> 
>     http://twistedmatrix.com/trac/wiki/GitMirror

Yes, that's the one.

> Do tags for the various Twisted releases show up if you run:
>     
>     git tag -l
> 
> ?

The only output is:

   svn/releases

Looking at the repo with "gitk --all", that appears to be the
name of a branch that is completely disconnected from all other
revisions. Its first change has no parent.

> > This is
> > good, but there aren't any intermediate changes on that branch (tag?),
> > just the releases! So there isn't much for "git bisect" to work with.
> > I'm trying to trace a bug that wasn't in 2.5.0 but is in 8.0.0; what
> > arguments should I give to bisect? Apologies if this is obvious to
> > anyone who knows how to use git, but I'm just a beginner.
> 
> I haven't used the official git mirror myself, but I have my own mirror
> created with "git-svn". It looks like git-svn got very confused about
> Twisted's release-tagging system; of all the tags I see listed at:
> 
>     http://twistedmatrix.com/trac/browser/tags
> 
> ...the only thing in .git/refs/remotes/tags is the "releases"
> subdirectory, which isn't actually a proper tag at all.
> 
> So, uh, yeah, I'm stumped.
> 
> If you *do* figure out what to do, though, feel free to add it to the
> GitMirror wiki-page - or I'd be happy to write it up for you.

Thanks! Jonathan's pointer to the list of revisions ought to be
enough for me to start bisecting, and I'll try to figure out what's
happening in Git as I go along.

Thanks for the help,

Peter.


From terry at jon.es  Fri Aug 13 21:12:52 2010
From: terry at jon.es (Terry Jones)
Date: Sat, 14 Aug 2010 03:12:52 +0200
Subject: [Twisted-Python] Deferred's chainDeferred is too simplistic?
Message-ID: <19557.60820.567617.444599@jon.es>

I think it's worth spending some time thinking about whether chainDeferred
in t.i.defer.Deferred is too simplistic. I've thought for a while that it
could be more helpful in preventing people from doing unintended things
and/or cause fewer surprises (e.g., see point #1 at http://bit.ly/bp6iT5
which JP agreed with in the followup).

Those are smaller things that people can obviously live with. But a more
important one concerns deferred cancellation. See uncalled.py below.

Here are five examples of chainDeferred behavior that I think could be
better. In an attempt to fix these, I made a few changes to a copy of
defer.py (immodestly called tdefer.py, sorry) which you can grab, with
runnable examples, from http://github.com/fluidinfo/chainDeferredExamples
The tdefer.py code is meant as a suggested approach. I doubt that it's
bulletproof.

Here are the examples.

boom1.py:

    # Normal deferreds: this raises defer.AlreadyCalledError because
    # the callback of d1 causes the callback of d2 to be called, but d2 has
    # already been cancelled (and hence called).

    # With tdefer.py: there is no error because d1.callback will not call
    # d2 as it has already been cancelled.

    def printCancel(fail):
        fail.trap(defer.CancelledError)
        print 'cancelled'

    def canceller(d):
        print 'cancelling'

    d1 = defer.Deferred()
    d2 = defer.Deferred(canceller)
    d2.addErrback(printCancel)
    d1.chainDeferred(d2)
    d2.cancel()
    d1.callback('hey')


boom2.py:

    # Normally: raises defer.AlreadyCalledError because calling d1.callback
    # will call d2, which has already been called.

    # With tdefer.py: Raises AssertionError: "Can't callback an already
    # chained deferred" because calling callback on a deferred that's
    # already been chained is asking for trouble (as above).

    d1 = defer.Deferred()
    d2 = defer.Deferred()
    d1.chainDeferred(d2)
    d2.callback('hey')
    d1.callback('jude')


uncalled.py:

    # Normally: although d2 has been chained to d1, when d1 is cancelled,
    # d2's cancel method is never called. Even calling d2.cancel ourselves
    # after the call to d1.cancel has no effect, as d2 has already been
    # called.

    # With tdefer: both cancel1 and cancel2 are called when d1.cancel is
    # called. The additional final call to d2.cancel correctly has no
    # effect as d2 has been called (via d1.cancel).

    def cancel1(d):
        print 'cancel one'

    def cancel2(d):
        print 'cancel two'

    def reportCancel(fail, which):
        fail.trap(defer.CancelledError)
        print 'cancelled', which

    d1 = defer.Deferred(cancel1)
    d1.addErrback(reportCancel, 'one')
    d2 = defer.Deferred(cancel2)
    d2.addErrback(reportCancel, 'two')
    d1.chainDeferred(d2)
    d1.cancel()
    d2.cancel()


unexpected1.py:

    # Normally: prints "called: None", instead of the probably expected
    # "called: hey"

    # tdefer.py: prints "called: hey"

    def called(result):
        print 'called:', result

    d1 = defer.Deferred()
    d2 = defer.Deferred()
    d1.chainDeferred(d2)
    d1.addCallback(called)
    d1.callback('hey')


unexpected2.py:

    # Normally: prints
    #   called 2: hey
    #   called 3: None

    # tdefer.py: prints
    #   called 2: hey
    #   called 3: hey

    def report2(result):
        print 'called 2:', result

    def report3(result):
        print 'called 3:', result

    d1 = defer.Deferred()
    d2 = defer.Deferred().addCallback(report2)
    d3 = defer.Deferred().addCallback(report3)
    d1.chainDeferred(d2)
    d1.chainDeferred(d3)
    d1.callback('hey')


I wont go into detail here as this post is already long enough. Those are 3
classes of behavior arising from chainDeferred being very simplistic.
Comments welcome, of course.  Once again, runnable code is at
http://github.com/fluidinfo/chainDeferredExamples

Terry


From bmuller at butterfat.net  Sat Aug 14 13:17:46 2010
From: bmuller at butterfat.net (bmuller at butterfat.net)
Date: Sat, 14 Aug 2010 13:17:46 -0400
Subject: [Twisted-Python] Twisted ORM
In-Reply-To: <4C5D2651.2080101@thieprojects.ch>
References: <4C5C5DEE.3060606@butterfat.net> <4C5D2651.2080101@thieprojects.ch>
Message-ID: <4C66CFBA.7030006@butterfat.net>

Thanks for the feedback Werner, see embedded:
> Great work, I'm currently looking into doing some integration work with
> couchdb and stumbled over paisly https://launchpad.net/paisley but this
> piece of code is poorly maintained.
>    
I've seem other projects that use twisted and couchdb, and they seemed 
to all just be using the twisted HTTP client to access the couchdb REST API.
> Not being the db master (neither from heart nor from profession) let me
> ask the dumb question:
>
> How do you rate the chances of interfacing couchdb to your code?
>    
It's not likely.  Twistar is designed specifically for relational 
databases - something like Paisley or accessing the REST API directly 
will likely be your best bet for couchdb.
> Why am I fascinated by the promises couchdb makes? I really hate the
> overstructuring of data the SQL DBs impose - the moment you structure
> the data is the moment you realize that there is an impedance mismatch
> between data and its usage and technically ORMs are no more than
> impedance adapters, lightening the burden of the programmer to
> restructure data. With the promises couchdb makes in terms of imposing
> the least possible structuring onto the data and doing the
> (re)structuring when querying and retrieving it struck a note in me.
>    
There are certainly benefits to loosely structured storage.  SQL based 
storage is not going away anytime soon, though, and hopefully Twistar 
can make interacting with those relational DB's a little easier.  Due to 
the structural differences, though, it would probably be a better idea 
to either start a new project or extend Paisley if you're interested in 
a better Twisted-based interface to CouchDB.


Brian



> On 06.08.2010 21:09, bmuller at butterfat.net wrote:
>    
>> Hello everyone,
>>
>> I've just finished creating a basic Object Relational Mapper (ORM) in
>> Twisted (http://trac.butterfat.net/public/twistar) called Twistar. The
>> goal of the project is most certainly not to duplicate the full
>> functionality of existing Python ORM's, but rather to provide a simple
>> interface to databases that obviates the need for writing SQL.
>>
>> With the deprecation of twisted.enterprise.row and
>> twisted.enterprise.reflection, the only option right now in twisted for
>> database interaction (that I know of) is either via straight SQL through
>> adbapi|||| or via patches on existing Python ORM's. The goal behind
>> Twistar is to provide basic ORM functionality but completely within the
>> Twisted paradigm.
>>
>> The code is fully documented (via pydoctor) and the package contains
>> unit tests (which can be run by trial).
>>
>> Who should I talk to concerning possible inclusion in twisted.enterprise?
>>
>> Thanks,
>> Brian
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>      
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>    



From exarkun at twistedmatrix.com  Sun Aug 15 00:05:25 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Aug 2010 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1281845125.56.650560046@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100815/107f9e0f/attachment.htm 

From smagafurov at naumen.ru  Mon Aug 16 04:34:35 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Mon, 16 Aug 2010 14:34:35 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
Message-ID: <4C68F81B.7020204@naumen.ru>

At first, sorry for my bad english
I will try to explain idea about Deferreds and inlineCallbacks

Wanted features:
1. Ability to delete callbacks (delCallbacks)
2. Automatic cancelling Deferreds if they are not needed any more (no 
callbacks registered any more, all was deleted)
3. Ability to add/del hooks on deferred's finishing with errback or 
callback (addFinalizer/delFinalizer)
4. Automatic call registered finalizers when deferred finished with 
errback or callback (and cancel due to cancel calls errback)

With this features we can make cascading cancelling of inlineCallbacks 
and cancelling full stack tree of inlineCallbacks when it is not needed 
any more (some shutdown occurs for example at top level)

See full code for details (this is runnable script):

from twisted.internet import defer
from twisted.python.failure import Failure
from sys import exc_info

import warnings

class InlineCallbacksManager(object):
     def __init__(self, *args, **kw):
         self.deferred = defer.Deferred()

     def send_result(self, g, result):
         return g.send(result)

     def throw_exception(self, g, result):
         return result.throwExceptionIntoGenerator(g)

     def stop_iteration(self):
         self.deferred.callback(None)
         return self.deferred

     def return_value(self, value):
         self.deferred.callback(value)
         return self.deferred

     def exception(self):
         self.deferred.errback()
         return self.deferred

     def _inlineCallbacks(self, result, g):
         """
         See L{inlineCallbacks}.
         """
         # This function is complicated by the need to prevent unbounded 
recursion
         # arising from repeatedly yielding immediately ready 
deferreds.  This while
         # loop and the waiting variable solve that by manually 
unfolding the
         # recursion.

         waiting = [True, # waiting for result?
                    None] # result

         while 1:
             try:
                 # Send the last result back as the result of the yield 
expression.
                 isFailure = isinstance(result, Failure)
                 if isFailure:
                     result = self.throw_exception(g, result)
                 else:
                     result = self.send_result(g, result)
             except StopIteration:
                 # fell off the end, or "return" statement
                 return self.stop_iteration()
             except defer._DefGen_Return, e:
                 # returnValue() was called; time to give a result to 
the original
                 # Deferred.  First though, let's try to identify the 
potentially
                 # confusing situation which results when returnValue() is
                 # accidentally invoked from a different function, one 
that wasn't
                 # decorated with @inlineCallbacks.

                 # The traceback starts in this frame (the one for
                 # _inlineCallbacks); the next one down should be the 
application
                 # code.
                 appCodeTrace = exc_info()[2].tb_next.tb_next
                 if isFailure:
                     # If we invoked this generator frame by throwing an 
exception
                     # into it, then throwExceptionIntoGenerator will 
consume an
                     # additional stack frame itself, so we need to skip 
that too.
                     appCodeTrace = appCodeTrace.tb_next
                 # Now that we've identified the frame being exited by the
                 # exception, let's figure out if returnValue was called 
from it
                 # directly.  returnValue itself consumes a stack frame, 
so the
                 # application code will have a tb_next, but it will 
*not* have a
                 # second tb_next.
                 if appCodeTrace.tb_next.tb_next:
                     # If returnValue was invoked non-local to the frame 
which it is
                     # exiting, identify the frame that ultimately invoked
                     # returnValue so that we can warn the user, as this 
behavior is
                     # confusing.
                     ultimateTrace = appCodeTrace
                     while ultimateTrace.tb_next.tb_next:
                         ultimateTrace = ultimateTrace.tb_next
                     filename = ultimateTrace.tb_frame.f_code.co_filename
                     lineno = ultimateTrace.tb_lineno
                     warnings.warn_explicit(
                         "returnValue() in %r causing %r to exit: "
                         "returnValue should only be invoked by 
functions decorated "
                         "with inlineCallbacks" % (
                             ultimateTrace.tb_frame.f_code.co_name,
                             appCodeTrace.tb_frame.f_code.co_name),
                         DeprecationWarning, filename, lineno)
                 return self.return_value(e.value)
             except:
                 return self.exception()

             if isinstance(result, tuple): # yield tuple support!!!
                 non_deferreds_cnt = 0
                 list_of_deferreds = []
                 for r in result:
                     if not isinstance(r, defer.Deferred):
                         r = defer.succeed(r)
                         non_deferreds_cnt += 1
                     list_of_deferreds.append(r)

                 if non_deferreds_cnt != len(result):
                     result = defer.DeferredList(list_of_deferreds, 
fireOnOneErrback=1)

             if isinstance(result, defer.Deferred):
                 # a deferred was yielded, get the result.
                 if isinstance(result, defer.DeferredList): # yield 
tuple support!!!
                     def gotResult(r):
                         if isinstance(r, Failure):
                             r = r.value.subFailure
                         else:
                             r = tuple(_r for _s, _r in r)
                         if waiting[0]:
                             waiting[0] = False
                             waiting[1] = r
                         else:
                             self.deferred.delFinalizer(result.delBoth, 
gotResult) # cascading cancelling support!!!
                             self._inlineCallbacks(r, g)
                 else:
                     def gotResult(r):
                         if waiting[0]:
                             waiting[0] = False
                             waiting[1] = r
                         else:
                             self.deferred.delFinalizer(result.delBoth, 
gotResult) # cascading cancelling support!!!
                             self._inlineCallbacks(r, g)

                 result.addBoth(gotResult)
                 if waiting[0]:
                     # Haven't called back yet, set flag so that we get 
reinvoked
                     # and return from the loop
                     waiting[0] = False
                     self.deferred.addFinalizer(result.delBoth, 
gotResult) # cascading cancelling support!!!
                     return self.deferred

                 result = waiting[1]
                 # Reset waiting to initial values for next loop.  
gotResult uses
                 # waiting, but this isn't a problem because gotResult 
is only
                 # executed once, and if it hasn't been executed yet, 
the return
                 # branch above would have been taken.

                 waiting[0] = True
                 waiting[1] = None

from twisted.python.util import mergeFunctionMetadata

def create_inline_callbacks_decorator(manager_factory):
     def inline_callbacks(f):
         def unwind_generator(*args, **kwargs):
             manager = manager_factory(*args, **kwargs)
             return manager._inlineCallbacks(None, f(*args, **kwargs))
         return mergeFunctionMetadata(f, unwind_generator)
     return inline_callbacks

inlineCallbacks = create_inline_callbacks_decorator(InlineCallbacksManager)

defer.inlineCallbacks = inlineCallbacks

# # # #
# Deferred
#

# Fixes:
# 1. raise CancelledError with current traceback (original twisted code 
raises with empty traceback)
# 2. ability to cancal with given traceback (parameter `failure`, if 
callable must return failure)
def deferred_cancel(self, failure=None):
     if not self.called:
         canceller = self._canceller
         if canceller:
             canceller(self)
         else:
             # Arrange to eat the callback that will eventually be fired
             # since there was no real canceller.
             self._suppressAlreadyCalled = 1
         if not self.called:
             # There was no canceller, or the canceller didn't call
             # callback or errback.
             if failure is not None:
                 if callable(failure):
                     failure = failure()
                 self.errback(failure)
             else:
                 try:
                     raise defer.CancelledError()
                 except defer.CancelledError:
                     self.errback(Failure())

     elif isinstance(self.result, defer.Deferred):
         # Waiting for another deferred -- cancel it instead.
         self.result.cancel()
defer.Deferred.cancel = deferred_cancel

# Fixes: add `finalizers` member
original_deferred___init__ = defer.Deferred.__init__
def deferred___init__(self, *args, **kw):
     original_deferred___init__(self, *args, **kw)
     self.finalizers = []
defer.Deferred.__init__ = deferred___init__

def deferred_addFinalizer(self, callback, *args, **kw):
     assert callable(callback)
     self.finalizers.append((callback, args, kw))
     if self.called:
         self._runFinalizers()
     return self
defer.Deferred.addFinalizer = deferred_addFinalizer

def deferred_delFinalizer(self, callback, *args, **kw):
     if self.called:
         defer.AlreadyCalledError
     assert callable(callback)
     self.finalizers.remove((callback, args, kw))
     return self
defer.Deferred.delFinalizer = deferred_delFinalizer

def deferred__runFinalizers(self):
     if not self._finalized:
         self._finalized = True
         for callback, args, kw in self.finalizers:
             callback(*args, **kw)
defer.Deferred._runFinalizers = deferred__runFinalizers
defer.Deferred._finalized = False

# Fixes: run `finalizers` when done
original_deferred_callback = defer.Deferred.callback
def deferred_callback(self, result):
     original_deferred_callback(self, result)
     self._runFinalizers()
defer.Deferred.callback = deferred_callback

# Fixes: run `finalizers` when done
original_deferred_errback = defer.Deferred.errback
def deferred_errback(self, fail=None):
     original_deferred_errback(self, fail=fail)
     self._runFinalizers()
defer.Deferred.errback = deferred_errback

def _skip_result(result):
     pass

def deferred_delCallbacks(self, callback, errback=None,
                  callbackArgs=None, callbackKeywords=None,
                  errbackArgs=None, errbackKeywords=None):
     if self.called:
         defer.AlreadyCalledError

     assert callable(callback)
     assert errback == None or callable(errback)
     cbs = ((callback, callbackArgs, callbackKeywords),
            (errback or (defer.passthru), errbackArgs, errbackKeywords))
     self.callbacks.remove(cbs)

     if not self.callbacks:
         self.addBoth(_skip_result)
         self.cancel()

     return self
defer.Deferred.delCallbacks = deferred_delCallbacks

def deferred_delCallback(self, callback, *args, **kw):
     return self.delCallbacks(callback, callbackArgs=args,
                              callbackKeywords=kw)
defer.Deferred.delCallback = deferred_delCallback

def deferred_delErrback(self, errback, *args, **kw):
     return self.delCallbacks(defer.passthru, errback,
                              errbackArgs=args,
                              errbackKeywords=kw)
defer.Deferred.delErrback = deferred_delErrback

def deferred_delBoth(self, callback, *args, **kw):
     return self.delCallbacks(callback, callback,
                              callbackArgs=args, errbackArgs=args,
                              callbackKeywords=kw, errbackKeywords=kw)
defer.Deferred.delBoth = deferred_delBoth

def deferred_unchainDeferred(self, d):
     return self.delCallbacks(d.callback, d.errback)
defer.Deferred.unchainDeferred = deferred_unchainDeferred

def deferred_delCallbacksSafe(self, *args, **kw):
     if not self.called:
         return self.delCallbacks(*args, **kw)
     return self
defer.Deferred.delCallbacksSafe = deferred_delCallbacksSafe

def deferred_delCallbackSafe(self, *args, **kw):
     if not self.called:
         return self.delCallback(*args, **kw)
     return self
defer.Deferred.delCallbackSafe = deferred_delCallbackSafe

def deferred_delErrbackSafe(self, *args, **kw):
     if not self.called:
         return self.delErrback(*args, **kw)
     return self
defer.Deferred.delErrbackSafe = deferred_delErrbackSafe

def deferred_delBothSafe(self, *args, **kw):
     if not self.called:
         return self.delBoth(*args, **kw)
     return self
defer.Deferred.delBothSafe = deferred_delBothSafe

def deferred_unchainDeferredSafe(self, *args, **kw):
     if not self.called:
         return self.unchainDeferred(*args, **kw)
     return self
defer.Deferred.unchainDeferredSafe = deferred_unchainDeferredSafe

# # # #
# DeferredList
#

# fixes: delCallbacks when finished
original_deferred_list___init__ = defer.DeferredList.__init__
def deferred_list___init__(self, deferredList, *args, **kw):
     original_deferred_list___init__(self, deferredList, *args, **kw)
     index = 0
     for deferred in deferredList:
         self.addFinalizer(
             deferred.delCallbacksSafe,
             self._cbDeferred,
             self._cbDeferred,
             callbackArgs=(index,defer.SUCCESS),
             errbackArgs=(index,defer.FAILURE),
         )
         index = index + 1
defer.DeferredList.__init__ = deferred_list___init__

# # # #
# Test
#

if __name__ == '__main__':
     from twisted.internet import reactor
     import threading
     import time

     def log(s):
         print time.strftime('%H:%M:%S'), s

     # some long deferred work
     def deferred_work():
         cancel_flag = [False]
         def my_canceller(d):
             cancel_flag[0] = True
         res = defer.Deferred(canceller=my_canceller)
         def work():
             log('start work')
             cnt = 7
             while cnt:
                 cnt -= 1
                 time.sleep(1)
                 if cancel_flag[0]:
                     log('work cancelled')
                     return
             log('finish work, work not cancelled!!!')
             return res.callback(7)
         threading.Thread(target=work).start()
         return res

     # # # #
     # Shuttingdown test
     # notes: register all inlineCallbacks deferreds and cancel them all 
when shuttingdown occurs
     #

     class ShuttingdownError(BaseException):
         pass

     # base class for shuttingdown support
     class ShuttingdownSupport(object):
         shuttingdown = 0

         def __init__(self):
             self._deferreds = {}

         def shutdown(self):
             self.shuttingdown = 1
             self.do_shutdown()

         def do_shutdown(self):
             log('SHUTDOWN')
             for deferred in self._deferreds.keys():
                 try:
                     raise ShuttingdownError
                 except ShuttingdownError:
                     deferred.errback()

         def _reg_deferred(self, deferred):
             self._deferreds[deferred] = 1

         def _unreg_deferred(self, deferred):
             del self._deferreds[deferred]

     # special inlineCallbacks manager for shuttingdown support
     class 
InlineCallbacksManagerWithShuttingdownSupport(InlineCallbacksManager):
         def __init__(self, instance, *args, **kw):
             self.deferred = defer.Deferred()
             self.instance = instance
             instance._reg_deferred(self.deferred)
             self.deferred.addFinalizer(instance._unreg_deferred, 
self.deferred)

         def send_result(self, g, result):
             if self.instance.shuttingdown: # if shuttingdown occurs 
while waiting result then raise ShuttingdownError into generator
                 try:
                     raise ShuttingdownError
                 except ShuttingdownError:
                     failure = Failure()
                     self.throw_exception(g, failure)
             else:
                 return InlineCallbacksManager.send_result(self, g, result)

     # decorator for methods of ShuttingdownSupport objects
     inlineCallbacksShuttingdown = 
create_inline_callbacks_decorator(InlineCallbacksManagerWithShuttingdownSupport)

     class ShuttingdownTest(ShuttingdownSupport):
         @inlineCallbacksShuttingdown
         def test1(self):
             log('start ShuttingdownTest.test1')
             try:
                 res = yield deferred_work()
             except defer.CancelledError:
                 log('ShuttingdownTest.test1 cancelled')
                 raise
             except ShuttingdownError:
                 log('ShuttingdownTest.test1 shuttingdown detected')
                 raise
             log('finish ShuttingdownTest.test1')
             defer.returnValue(res)

         @inlineCallbacksShuttingdown
         def test2(self):
             log('start ShuttingdownTest.test2')
             try:
                 res = yield self.test1(), self.test1() # test yield 
tuple!!!
             except defer.CancelledError:
                 log('ShuttingdownTest.test2 cancelled')
                 raise
             except ShuttingdownError:
                 log('ShuttingdownTest.test2 shuttingdown detected')
                 raise
             log('finish ShuttingdownTest.test2')
             defer.returnValue(res)

     # @defer.inlineCallbacks
     # def test1():
         # log('start test1')
         # try:
             # res = yield deferred_work()
         # except defer.CancelledError:
             # log('test1 cancelled')
             # raise
         # log('finish test1, test1 not cancelled!!!')
         # defer.returnValue(res)

     # @defer.inlineCallbacks
     # def test2():
         # log('start test2')
         # try:
             # res = yield test1()
         # except defer.CancelledError:
             # log('test2 cancelled')
             # raise
         # log('finish test2, test2 not cancelled!!!')
         # defer.returnValue(res)

     def ok(result):
         log('ok ' + repr(result))

     def error(result):
         log('error ' + repr(result))

     # def run_test1():
         # deferred = test2()
         # deferred.addCallbacks(ok, error)
         # reactor.callLater(1, deferred.cancel)

     # reactor.callLater(1, run_test1)
     # run_test1()

     def run_test2():
         obj = ShuttingdownTest()
         deferred = obj.test2()
         deferred.addCallbacks(ok, error)
         reactor.callLater(1, obj.shutdown)

     # reactor.callLater(3, run_test2)
     run_test2()

     reactor.callLater(10, reactor.stop)
     reactor.run()



From ivan at ludios.org  Mon Aug 16 15:46:25 2010
From: ivan at ludios.org (Ivan Kozik)
Date: Mon, 16 Aug 2010 19:46:25 +0000
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <4C68F81B.7020204@naumen.ru>
References: <4C68F81B.7020204@naumen.ru>
Message-ID: <AANLkTikdXDZ-KN7kMh5cPoqVhZp3DZ3E74wVwOt8_Ji5@mail.gmail.com>

On Mon, Aug 16, 2010 at 08:34, Sergey Magafurov <smagafurov at naumen.ru> wrote:
> Wanted features:
> 1. Ability to delete callbacks (delCallbacks)
> 2. Automatic cancelling Deferreds if they are not needed any more (no
> callbacks registered any more, all was deleted)
> 3. Ability to add/del hooks on deferred's finishing with errback or
> callback (addFinalizer/delFinalizer)
> 4. Automatic call registered finalizers when deferred finished with
> errback or callback (and cancel due to cancel calls errback)

I like to think of Deferreds as a good way to structure asynchronous
control flow.  For each synchronous Python control flow structure, you
can usually build an asynchronous variant of that control flow with
Deferreds.  For example, `addBoth` is like an asynchronous
try/finally.  I think Deferreds accomplish this task quite well, and I
would like to think that the API for Deferreds is essentially "done".
Most of those features don't look right to me, and the implementation
is complicated enough already.

> With this features we can make cascading cancelling of inlineCallbacks
> and cancelling full stack tree of inlineCallbacks when it is not needed
> any more (some shutdown occurs for example at top level)

Better cancellation for @inlineCallbacks functions would be great.
Cancellation was added recently, which is why most things don't yet
support it well.  But which of those four features are really required
to improve inlineCallbacks cancellation?  I see that you filed
http://twistedmatrix.com/trac/ticket/4632 - but the 'Solution (idea)'
there did not have API changes to Deferreds.  Did you discover
anything that makes those API changes necessary?

You're also welcome to discuss this on irc.freenode.net #twisted.  The
best time is usually early morning, Boston time.

> See full code for details (this is runnable script):

I didn't read this, because it's very long, and the lines were wrapped
at 80 characters.  If you want to contribute changes, it's better to
post Twisted patches to the bug tracker, rather than monkeypatching
code.  With the monkeypatching, it's very hard to tell what you've
changed.

Ivan


From glyph at twistedmatrix.com  Mon Aug 16 16:04:02 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Aug 2010 13:04:02 -0700
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <4C68F81B.7020204@naumen.ru>
References: <4C68F81B.7020204@naumen.ru>
Message-ID: <2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>

On Aug 16, 2010, at 1:34 AM, Sergey Magafurov wrote:

> At first, sorry for my bad english

No problem, Sergey.  I am sure that my Russian would be worse.

Ivan's response already covered a lot of the things I would say, but I did want to add a few things.

First, generally: the most important thing to provide here are unit tests with very clear documentation expressing why you would want these things to work.  The test code you provided is unclear because it does not succeed or fail, it just does some things, and then does some other things, without explaining why I would want to do those things.  Given that the implementation of Deferred is changing a lot now (see <http://twistedmatrix.com/trac/ticket/411>), if we agree with your features, the implementation may have to change completely.  So, it is important to have tests that describe just the behavior change, not the implementation.

More specifically:

> Wanted features:
> 1. Ability to delete callbacks (delCallbacks)

Can you please explain *why* you would want this?  Deleting callbacks from a Deferred would break a lot of assumptions about the way that Deferreds are used (at any particular point in the callback chain, you should be able to infer what the return type should be just by looking at the code, not running it).

So, it is very unlikely that we will add the ability to delete arbitrary callbacks.

> 3. Ability to add/del hooks on deferred's finishing with errback or callback (addFinalizer/delFinalizer)


You can already do this with weakref callbacks.  Why would you need Deferred to provide an alternate mechanism?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100816/1d596468/attachment.htm 

From disappearedng at gmail.com  Tue Aug 17 00:24:51 2010
From: disappearedng at gmail.com (disappearedng)
Date: Tue, 17 Aug 2010 00:24:51 -0400
Subject: [Twisted-Python] Multiple Sources for Logging
Message-ID: <AANLkTintbB-4ct38op4DALOS-PSna7ZydcZfBxDNoons@mail.gmail.com>

Dear Everyone,

I am running WSGI inside my twisted server. I am currently using
startLogging, but I am interested in separating the two sources of logs into
different destinations, i.e. different log files. Take a look at my log:

2010-08-17 00:20:19-0400 [-] Log opened./
2010-08-17 00:20:19-0400 [-] twisted.web.server.Site starting on 11111
2010-08-17 00:20:19-0400 [-] Starting factory <twisted.web.server.Site
instance at 0x1e65b00>
2010-08-17 00:20:19-0400 [-]
mycode.code.comet.ProxiedComet.ProxiedCometFactory starting on 12346
2010-08-17 00:20:19-0400 [-] Starting factory
<mycode.code.comet.ProxiedComet.ProxiedCometFactory instance at 0x1e65e18>
2010-08-16 23:20:39-0500 [-] 127.0.0.1 - - [17/Aug/2010:04:20:38 +0000] "GET
/ HTTP/1.1" 404 2666 "-" "Mozilla/5.0 (X11; U; Linux x86_64; en-US;
rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8"
2010-08-16 23:20:39-0500 [-] 127.0.0.1 - - [17/Aug/2010:04:20:39 +0000] "GET
/favicon.ico HTTP/1.1" 404 2699 "-" "Mozilla/5.0 (X11; U; Linux x86_64;
en-US; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8"
2010-08-16 23:20:42-0500 [-] 127.0.0.1 - - [17/Aug/2010:04:20:42 +0000] "GET
/favicon.ico HTTP/1.1" 404 2699 "-" "Mozilla/5.0 (X11; U; Linux x86_64;
en-US; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8"

First 5 lines are twisted's , remaining are my WSGI *running django. How
should I structure my logging to be able to split accordingly?


Victor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100817/5b6d1e5f/attachment.htm 

From smagafurov at naumen.ru  Tue Aug 17 01:49:32 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Tue, 17 Aug 2010 11:49:32 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
References: <4C68F81B.7020204@naumen.ru>
	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
Message-ID: <4C6A22EC.3020707@naumen.ru>


> First, generally: the most important thing to provide here are unit 
> tests with very clear documentation expressing why you would want 
> these things to work.  The test code you provided is unclear because 
> it does not succeed or fail, it just does some things, and then does 
> some other things, without explaining /why/ I would want to do those 
> things.  Given that the implementation of Deferred is changing a lot 
> now (see <http://twistedmatrix.com/trac/ticket/411>), if we agree with 
> your features, the implementation may have to change completely.  So, 
> it is important to have tests that describe just the behavior change, 
> not the implementation.
Agree! I precisely trying to suggest behavior, not the implementation :)
>> Wanted features:
>> 1. Ability to delete callbacks (delCallbacks)
>
> Can you please explain *why* you would want this?  Deleting callbacks 
> from a Deferred would break a lot of assumptions about the way that 
> Deferreds are used (at any particular point in the callback chain, you 
> should be able to infer what the return type should be just by looking 
> at the code, not running it).
>
> So, it is very unlikely that we will add the ability to delete 
> arbitrary callbacks.

>> 3. Ability to add/del hooks on deferred's finishing with errback 
>> or callback (addFinalizer/delFinalizer)
>
> You can already do this with weakref callbacks.  Why would you need 
> Deferred to provide an alternate mechanism?

I will try to explain why i want this features with example.
My task is about telephony.
Some user makes call and we want to acquire some TextToSpeach resource 
and AutomaticSpeachRecognition resource to do some automatic 
conversation with user.
We start playing music to user, launch long process to acquire this 
(expensive!) resources. After they have acquired, we establish audio 
links. After they established we speak something to user and start 
recognition. See NOTE in code.

@inlineCallbacks
def incoming_call(self, call):
     call.start_play('music')
     try:
         tts, asr = yield self.acquire_tts_for(call), 
self.acquire_asr_for(call) # tuple yield feature!
     except TimeoutError:
         # this occurs if TimeoutError raises in `self.acquire_tts_for` 
or `self.acquire_asr_for`
         # i.e. DeferredList(..., fireOnOneErrback=1)
         call.transfer_to('operator')
         # NOTE: at this point I want to automatically _recursively_ (to 
deep) stop all deferred processes
         # starting inside `self.acquire_tts_for` and `self.acquire_asr_for`
         # because I don't need their results (and expensive resources!) 
any more
     else:
         try:
             yield tts.speak('what you want? say me after signal')
             yield asr.start_recognition()
             call.start_play('signal')
             result = yield asr.wait_recognition_result()
             ... do something with result ...
         finally:
             tts.release()
             asr.release()

@inlineCallbacks
def acquire_tts_for(self, call):
     tts_connection = yield self.tts.acquire_connection(timeout=10) # 
may raise TimeoutError inside
     yield call.make_audio_link_with(tts_connection, 'in', timeout=10) # 
may raise TimeoutError inside
     return tts_connection

@inlineCallbacks
def acquire_asr_for(self, call):
     asr_connection = yield self.asr.acquire_connection(timeout=10) # 
may raise TimeoutError inside
     yield call.make_audio_link_with(asr_connection, 'out', timeout=10) 
# may raise TimeoutError inside
     return asr_connection

To do this code to work:
1. Deferred()s must have feature to be informed that somebody does't 
need their result any more (delCallbacks)
2. Deferred()s must track their usage, and automatically cancels (and 
therefore calls their finalizers, see below) when they not used any more 
(nobody needs their result any more)
3. inlineCallbacks must release (delCallbacks) their child Defered()s 
when it doesn't need their result any more, this allows them to 
autimatically cancelling (if they dont needed somebody else). To do this 
inlineCallbacks must add some hook (addFinalizer) to parent Deferred and 
release child Deferreds when parent Deferred finished 
(callbacked/errbacked and therefore cancelled due cancel call errback). 
Why we need addFinalizer mechanism? Because addCallbacks means that 
Deferred is used, that somebody needs their result. But addFinalizer 
means that we don't neeed result, we just want to know when Deferred 
finished (to release our child resources for example).

One more thing we may do with this features. What if our User hangs up 
call? What if our tcp connection lost (with that we have receive 
incoming call)? All resources (ASR and TTS) must be released as soon as 
possible! yields inside incoming_call must raise some ShuttingdownError 
for example. We may do this with above features.

>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>    

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100817/e8f38c30/attachment-0001.htm 

From smagafurov at naumen.ru  Tue Aug 17 02:30:59 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Tue, 17 Aug 2010 12:30:59 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <4C6A22EC.3020707@naumen.ru>
References: <4C68F81B.7020204@naumen.ru>
	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
	<4C6A22EC.3020707@naumen.ru>
Message-ID: <4C6A2CA3.3090109@naumen.ru>

Some mistake fixes in my previous message
> @inlineCallbacks
> def acquire_tts_for(self, call):
>     tts_connection = yield self.tts.acquire_connection(timeout=10) # 
> may raise TimeoutError inside
>     yield call.make_audio_link_with(tts_connection, 'in', timeout=10) 
> # may raise TimeoutError inside
>     return tts_connection
>
> @inlineCallbacks
> def acquire_asr_for(self, call):
>     asr_connection = yield self.asr.acquire_connection(timeout=10) # 
> may raise TimeoutError inside
>     yield call.make_audio_link_with(asr_connection, 'out', timeout=10) 
> # may raise TimeoutError inside
>     return asr_connection

Above code must be replaced with:

@inlineCallbacks
def acquire_tts_for(self, call):
     # may raise TimeoutError inside
     tts_connection = yield self.tts.acquire_connection(timeout=10)
     try:
         # may raise TimeoutError inside
         yield call.make_audio_link_with(tts_connection, 'in', timeout=10)
     except Exception:
         # we MAY receive this Exception when cascading cancellation occurs
         tts_connection.release()
         raise
     else:
         return tts_connection

@inlineCallbacks
def acquire_asr_for(self, call):
     # may raise TimeoutError inside
     asr_connection = yield self.asr.acquire_connection(timeout=10)
     try:
         # may raise TimeoutError inside
         yield call.make_audio_link_with(asr_connection, 'out', timeout=10)
     except Exception:
         # we MAY receive this Exception when cascading cancellation occurs
         asr_connection.release()
         raise
     else:
         return asr_connection



From jaroslaw.fedewicz at gmail.com  Tue Aug 17 03:46:58 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Tue, 17 Aug 2010 10:46:58 +0300
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <4C6A22EC.3020707@naumen.ru>
References: <4C68F81B.7020204@naumen.ru>
	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
	<4C6A22EC.3020707@naumen.ru>
Message-ID: <1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>


On Aug 17, 2010, at 8:49 AM, Sergey Magafurov wrote:

> ... lots of text skipped ...

You are currently considering your task from the viewpoint ?let's make a callback chain for the perfect workflow and alter this chain in case of anything going wrong.? I think the flaw with this approach is that you are trying to make your ?ideal? flow work at all in situations where it would, in fact, fail for the most of the time.

Instead of this, you could try to reconsider the task from the viewpoint of ?Let's not add any further callbacks until this is absolutely necessary?. For me, this approach rather works. Moreover, you have the means to do it ? a callback can return a Deferred, and so on.

Hope that helps.

From johan.rydberg at edgeware.tv  Tue Aug 17 03:56:39 2010
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Tue, 17 Aug 2010 09:56:39 +0200
Subject: [Twisted-Python] Multiple Sources for Logging
In-Reply-To: <AANLkTintbB-4ct38op4DALOS-PSna7ZydcZfBxDNoons@mail.gmail.com>
References: <AANLkTintbB-4ct38op4DALOS-PSna7ZydcZfBxDNoons@mail.gmail.com>
Message-ID: <4C6A40B7.4020105@edgeware.tv>

On 8/17/10 6:24 AM, disappearedng wrote:
> Dear Everyone,
>
> I am running WSGI inside my twisted server. I am currently using 
> startLogging, but I am interested in separating the two sources of 
> logs into different destinations, i.e. different log files. Take a 
> look at my log:
To the best of my knowledge the twisted.web.server.Site constructor 
takes a logPath argument,
that should point to a log-file where access loglines are put.




From smagafurov at naumen.ru  Tue Aug 17 06:56:06 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Tue, 17 Aug 2010 16:56:06 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
References: <4C68F81B.7020204@naumen.ru>	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>	<4C6A22EC.3020707@naumen.ru>
	<1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
Message-ID: <4C6A6AC6.7050404@naumen.ru>


> You are currently considering your task from the viewpoint ?let's make a callback chain for the perfect workflow and alter this chain in case of anything going wrong.? I think the flaw with this approach is that you are trying to make your ?ideal? flow work at all in situations where it would, in fact, fail for the most of the time.
>    

I am not sure I understand you correct...
In my case when ASR or TTS resource aquiring fails I must transfer call 
to operator but not fail.

> Instead of this, you could try to reconsider the task from the viewpoint of ?Let's not add any further callbacks until this is absolutely necessary?. For me, this approach rather works. Moreover, you have the means to do it ? a callback can return a Deferred, and so on.
>    

Good. But I need to start acquiring ASR and TTS resources at one time 
(in parallel) because this is very long operations and they can be good 
performed in parallel because physically this is other and different 
machines (computers). Why we can't do that way? Why user have to wait 
double time?

But it doesn't matter, because there is one more thing. Ok. Let's do it 
sequentially. But what if user hangs up call? I want to immediately stop 
all deferred processes due I don't need their results any more. All 
yields inside inlineCallbacks must raise some exception.

This code shows how we can solve this with feautures described

class DestroyingError(Exception):
     pass

class DestroySupport(object):
     __destroying_deferreds = None

     def __get_destroying_deferred(self):
         if self.__destroying_deferreds is None:
             self.__destroying_deferreds = {}
         deferred = defer.Deferred()
         self.__destroying_deferreds[deferred] = 1
         # delete "destroying" `deferred` when it finished
         deferred.addFinalizer(self.__destroying_deferreds.pop, deferred)
         return deferred

     def wait_destroying(self):
         return self.__get_destroying_deferred()

     def destroy(self):
         if self.__destroying_deferreds is not None:
             # errback all "destroying" deferreds
             for deferred in self.__destroying_deferreds.keys():
                 try:
                     raise DestroyingError('destroying')
                 except DestroyingError:
                     deferred.errback()
             self.__destroying_deferreds = None

# See InlineCallbacksManager in my first message in current discussion 
thread
class 
InlineCallbacksWithDestroySupportManager(defer.InlineCallbacksManager):
     def __init__(self, instance, *args, **kw):
         defer.InlineCallbacksManager.__init__(self, instance, *args, **kw)
         # chain Deferred with "destroying" deferred
         # therefore if destroy occurs Deferred errbacked with 
DestroyingError
         destroying_deferred = instance.wait_destroying()
         destroying_deferred.chainDeferred(self.deferred)
         # unchain if deferred finished (
         #     "destroying" deferred will be cancelled also due not used 
any more
         #     and deletes from DestroySupport.__destroying_deferreds 
due to its finalizer
         #     we add in DestroySupport.__get_destroying_deferred
         # )
         
self.deferred.addFinalizer(destroying_deferred.unchainDeferredSafe, 
self.deferred)

inlineCallbacksWithDestroySupport = defer.create_inline_callbacks_decorator(
     InlineCallbacksWithDestroySupportManager
)

class CallService(DestroySupport):
     def on_connection_lost(self):
         # launch cascade destroying when connection lost!!!
         # all yields will raise DestroyingError
         # therefore all resources will be released
         self.destroy()

     @inlineCallbacksWithDestroySupport
     def incoming_call(self, call):
         call.start_play('music')
         try:
             # tuple yield feature!
             tts, asr = yield self.acquire_tts_for(call), 
self.acquire_asr_for(call)
         except TimeoutError:
             # this occurs if TimeoutError raises in 
`self.acquire_tts_for` or `self.acquire_asr_for`
             # i.e. DeferredList(..., fireOnOneErrback=1)
             call.transfer_to('operator')
             # NOTE: at this point I want to automatically _recursively_ 
(in deep)
             # stop all deferred processes
             # starting inside `self.acquire_tts_for` and 
`self.acquire_asr_for`
             # because I don't need their results (and expensive 
resources!) any more
         except DestroyingError:
             log('Destroying detected')
             raise
         else:
             try:
                 try:
                     yield tts.speak('what you want? say me after signal')
                     yield asr.start_recognition()
                     call.start_play('signal')
                     result = yield asr.wait_recognition_result()
                     ... do something with result ...
                 except DestroyingError:
                     log('Destroying detected')
                     raise
             finally:
                 tts.release()
                 asr.release()

     @inlineCallbacksWithDestroySupport
     def acquire_tts_for(self, call):
         # may raise TimeoutError inside
         tts_connection = yield self.tts.acquire_connection(timeout=10)
         try:
             # may raise TimeoutError inside
             yield call.make_audio_link_with(tts_connection, 'in', 
timeout=10)
         except Exception:
             # we MAY receive this Exception when cascading cancellation 
occurs
             tts_connection.release()
             raise
         else:
             return tts_connection

     @inlineCallbacksWithDestroySupport
     def acquire_asr_for(self, call):
         # may raise TimeoutError inside
         asr_connection = yield self.asr.acquire_connection(timeout=10)
         try:
             # may raise TimeoutError inside
             yield call.make_audio_link_with(asr_connection, 'out', 
timeout=10)
         except Exception:
             # we MAY receive this Exception when cascading cancellation 
occurs
             asr_connection.release()
             raise
         else:
             return asr_connection

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100817/dd2975b7/attachment.htm 

From zoran.bosnjak at sloveniacontrol.si  Tue Aug 17 07:35:41 2010
From: zoran.bosnjak at sloveniacontrol.si (Zoran Bosnjak)
Date: Tue, 17 Aug 2010 13:35:41 +0200
Subject: [Twisted-Python] twistd --uid and --logfile
Message-ID: <1282044941.13984.19.camel@bosnjak-laptop>

I am running twisted application from /etc/init/myapp.conf by exec
statement like this:
exec /usr/bin/twistd --uid=<id> --gid=<gid> --logfile=/var/log/dir/file

The problem is when log file is first created under /var/log/dir (dir is
owned by user id), the owner of the file is 'root', not requested user.
As a consequence, the twistd is not able to rotate log files.

If the logfile is already created (and chowned) before running twistd,
there is no problem. It looks like set uid/gid is called too late inside
twistd. It is suppose to be called before creating a logfile.

Is this a bug or am I missing something?

Zoran



From exarkun at twistedmatrix.com  Tue Aug 17 13:40:34 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Aug 2010 17:40:34 -0000
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <1282044941.13984.19.camel@bosnjak-laptop>
References: <1282044941.13984.19.camel@bosnjak-laptop>
Message-ID: <20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>

On 11:35 am, zoran.bosnjak at sloveniacontrol.si wrote:
>I am running twisted application from /etc/init/myapp.conf by exec
>statement like this:
>exec /usr/bin/twistd --uid=<id> --gid=<gid> --logfile=/var/log/dir/file
>
>The problem is when log file is first created under /var/log/dir (dir 
>is
>owned by user id), the owner of the file is 'root', not requested user.
>As a consequence, the twistd is not able to rotate log files.
>
>If the logfile is already created (and chowned) before running twistd,
>there is no problem. It looks like set uid/gid is called too late 
>inside
>twistd. It is suppose to be called before creating a logfile.
>
>Is this a bug or am I missing something?

If <id> or <gid> has write permission on /var/log/dir/ then rotation 
should work, even if <id> or <gid> does not own the first logfile 
created.

Jean-Paul


From dave at krondo.com  Tue Aug 17 14:14:23 2010
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 17 Aug 2010 11:14:23 -0700
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
Message-ID: <AANLkTi=5ecKxywRGUjys1jmhNE8TyaBKZb6a3NsZ60y1@mail.gmail.com>

On Tue, Aug 17, 2010 at 10:40 AM,  <exarkun at twistedmatrix.com> wrote:
> On 11:35 am, zoran.bosnjak at sloveniacontrol.si wrote:
>>I am running twisted application from /etc/init/myapp.conf by exec
>>statement like this:
>>exec /usr/bin/twistd --uid=<id> --gid=<gid> --logfile=/var/log/dir/file
>>
>>The problem is when log file is first created under /var/log/dir (dir
>>is
>>owned by user id), the owner of the file is 'root', not requested user.
>>As a consequence, the twistd is not able to rotate log files.
>>
>>If the logfile is already created (and chowned) before running twistd,
>>there is no problem. It looks like set uid/gid is called too late
>>inside
>>twistd. It is suppose to be called before creating a logfile.
>>
>>Is this a bug or am I missing something?
>
> If <id> or <gid> has write permission on /var/log/dir/ then rotation
> should work, even if <id> or <gid> does not own the first logfile
> created.

That's true. It does seem reasonable, however, that the log files would
get created with the uid/gid that you specified. I've been surprised by this
in the past as well. Any reason not to do that?

dave


From disappearedng at gmail.com  Tue Aug 17 14:33:34 2010
From: disappearedng at gmail.com (disappearedng)
Date: Tue, 17 Aug 2010 14:33:34 -0400
Subject: [Twisted-Python] Multiple Sources for Logging
Message-ID: <AANLkTi=Jyxdm73TQw=d-y07rWyBMxF+tpuunavn3ng1f@mail.gmail.com>

Yes Server.site does indeed take a logPath arg.

Now how can I amend my code so that I can see both sys.stdout and my log
file both being written at the same time?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100817/158db1f6/attachment.htm 

From exarkun at twistedmatrix.com  Tue Aug 17 15:04:04 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Aug 2010 19:04:04 -0000
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <AANLkTi=5ecKxywRGUjys1jmhNE8TyaBKZb6a3NsZ60y1@mail.gmail.com>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<AANLkTi=5ecKxywRGUjys1jmhNE8TyaBKZb6a3NsZ60y1@mail.gmail.com>
Message-ID: <20100817190404.2470.1610974128.divmod.xquotient.57@localhost.localdomain>

On 06:14 pm, dave at krondo.com wrote:
>On Tue, Aug 17, 2010 at 10:40 AM,  <exarkun at twistedmatrix.com> wrote:
>>On 11:35 am, zoran.bosnjak at sloveniacontrol.si wrote:
>>>I am running twisted application from /etc/init/myapp.conf by exec
>>>statement like this:
>>>exec /usr/bin/twistd --uid=<id> --gid=<gid> 
>>>--logfile=/var/log/dir/file
>>>
>>>The problem is when log file is first created under /var/log/dir (dir
>>>is
>>>owned by user id), the owner of the file is 'root', not requested 
>>>user.
>>>As a consequence, the twistd is not able to rotate log files.
>>>
>>>If the logfile is already created (and chowned) before running 
>>>twistd,
>>>there is no problem. It looks like set uid/gid is called too late
>>>inside
>>>twistd. It is suppose to be called before creating a logfile.
>>>
>>>Is this a bug or am I missing something?
>>
>>If <id> or <gid> has write permission on /var/log/dir/ then rotation
>>should work, even if <id> or <gid> does not own the first logfile
>>created.
>
>That's true. It does seem reasonable, however, that the log files would
>get created with the uid/gid that you specified. I've been surprised by 
>this
>in the past as well. Any reason not to do that?

No.  It works the way it does now by accident.  The code in question is 
quite complicated and not necessarily fully covered by the test suite. 
And the actual behavior of the --uid/--gid options isn't documented 
anyway, so it's not clear what you *should* expect from it, nor which of 
its current behaviors people /do/ expect from it.

Jean-Paul


From twisted-web at udmvt.ru  Wed Aug 18 05:11:55 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Wed, 18 Aug 2010 13:11:55 +0400
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <1282044941.13984.19.camel@bosnjak-laptop>
References: <1282044941.13984.19.camel@bosnjak-laptop>
Message-ID: <20100818091155.GB4801@ruber.office.udmvt.ru>

On Tue, Aug 17, 2010 at 01:35:41PM +0200, Zoran Bosnjak wrote:
> I am running twisted application from /etc/init/myapp.conf by exec
> statement like this:
> exec /usr/bin/twistd --uid=<id> --gid=<gid> --logfile=/var/log/dir/file
> 
> The problem is when log file is first created under /var/log/dir (dir is
> owned by user id), the owner of the file is 'root', not requested user.
> As a consequence, the twistd is not able to rotate log files.
> 
> If the logfile is already created (and chowned) before running twistd,
> there is no problem. It looks like set uid/gid is called too late inside
> twistd. It is suppose to be called before creating a logfile.
> 
> Is this a bug or am I missing something?
It is always safer to use external tools to change uids and gids where possible.
It is also always safer to have logfiles always present on their place and with
correct ownership (or refuse to run entirely).

Having log files created by the superuser is not secure, especially when
log directory is user writeable. That is security vulnerability.

> 
> Zoran
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Alexey S.


From twisted-web at udmvt.ru  Wed Aug 18 05:25:11 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Wed, 18 Aug 2010 13:25:11 +0400
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
Message-ID: <20100818092511.GC4801@ruber.office.udmvt.ru>

On Tue, Aug 17, 2010 at 05:40:34PM -0000, exarkun at twistedmatrix.com wrote:
> On 11:35 am, zoran.bosnjak at sloveniacontrol.si wrote:
> >I am running twisted application from /etc/init/myapp.conf by exec
> >statement like this:
> >exec /usr/bin/twistd --uid=<id> --gid=<gid> --logfile=/var/log/dir/file
> >
> >The problem is when log file is first created under /var/log/dir (dir 
> >is
> >owned by user id), the owner of the file is 'root', not requested user.
> >As a consequence, the twistd is not able to rotate log files.
> >
> >If the logfile is already created (and chowned) before running twistd,
> >there is no problem. It looks like set uid/gid is called too late 
> >inside
> >twistd. It is suppose to be called before creating a logfile.
> >
> >Is this a bug or am I missing something?
> 
> If <id> or <gid> has write permission on /var/log/dir/ then rotation 
> should work, even if <id> or <gid> does not own the first logfile 
> created.

This is a way to screw up the system.
Consider this is run by the <uid> of the service:
  rm /var/log/dir/logfile
  ln -s /etc/shadow /var/log/dir/logfile

After the service restart the system will lose /etc/shadow.

In this case setuid() is called too late, truly.
I think --uid option is too dangerous.
sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is more
appropriate for changing uids.
It will always be hard to design application, that opens some files or
sockets and only then changes it's uids/gids.

> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Alexey S.


From cournape at gmail.com  Wed Aug 18 07:28:37 2010
From: cournape at gmail.com (David Cournapeau)
Date: Wed, 18 Aug 2010 20:28:37 +0900
Subject: [Twisted-Python] Add custom options handling to a twisted
	application running from twistd
Message-ID: <AANLkTinfpEDnt0+H9pac6_P1e77Ccd_R3OnBtzshf3e0@mail.gmail.com>

Hi,

I am trying to add some options handling to an existing twisted
application, which runs as an "app" from twistd through the -y
argument. It is not clear to me how to do that ?

cheers,

David


From itamar at itamarst.org  Wed Aug 18 08:10:27 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 18 Aug 2010 08:10:27 -0400
Subject: [Twisted-Python] Add custom options handling to a twisted
 application running from twistd
In-Reply-To: <AANLkTinfpEDnt0+H9pac6_P1e77Ccd_R3OnBtzshf3e0@mail.gmail.com>
References: <AANLkTinfpEDnt0+H9pac6_P1e77Ccd_R3OnBtzshf3e0@mail.gmail.com>
Message-ID: <1282133427.1630.0.camel@blake>

On Wed, 2010-08-18 at 20:28 +0900, David Cournapeau wrote:

> I am trying to add some options handling to an existing twisted
> application, which runs as an "app" from twistd through the -y
> argument. It is not clear to me how to do that ?

Instead of using a .tac file, write a twistd plugin:

http://twistedmatrix.com/documents/current/core/howto/tap.html



From p.mayers at imperial.ac.uk  Wed Aug 18 11:35:29 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 18 Aug 2010 16:35:29 +0100
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100818092511.GC4801@ruber.office.udmvt.ru>
References: <1282044941.13984.19.camel@bosnjak-laptop>	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<20100818092511.GC4801@ruber.office.udmvt.ru>
Message-ID: <4C6BFDC1.3000906@imperial.ac.uk>

On 18/08/10 10:25, twisted-web at udmvt.ru wrote:

> I think --uid option is too dangerous.
> sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is more
> appropriate for changing uids.

In all cases? I think not.

> It will always be hard to design application, that opens some files or
> sockets and only then changes it's uids/gids.

What about a daemon that needs to listen on ports <1024?

Sure it's hard and needs care. twistd may be doing it wrong at the 
moment. But it should be quite possible to fix that. "sudo" and "su" 
don't do anything magical. Nor does "apache", or any one of the hundreds 
of daemons that open sockets then setuid.


From exarkun at twistedmatrix.com  Wed Aug 18 12:01:52 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 18 Aug 2010 16:01:52 -0000
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <4C6BFDC1.3000906@imperial.ac.uk>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<20100818092511.GC4801@ruber.office.udmvt.ru>
	<4C6BFDC1.3000906@imperial.ac.uk>
Message-ID: <20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>

On 03:35 pm, p.mayers at imperial.ac.uk wrote:
>On 18/08/10 10:25, twisted-web at udmvt.ru wrote:
>>I think --uid option is too dangerous.
>>sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is 
>>more
>>appropriate for changing uids.
>
>In all cases? I think not.

Making the directory world writeable is certainly insane and dangerous. 
But in the case where the directory is only writeable by the user the 
daemon is going to run as, and access to that user is restricted, I 
don't see a problem.
>
>>It will always be hard to design application, that opens some files or
>>sockets and only then changes it's uids/gids.
>
>What about a daemon that needs to listen on ports <1024?

For this case, I would very strongly recommend authbind instead.  And I 
think this covers 99% of cases where you would otherwise need to start 
up as root.  For the remaining small number of cases, being able to 
start as root and then shed privileges is definitely more convenient 
than other approaches (although quite possibly inferior to them in all 
other regards).

Jean-Paul


From landreville at deadtreepages.com  Wed Aug 18 13:20:44 2010
From: landreville at deadtreepages.com (Landreville)
Date: Wed, 18 Aug 2010 13:20:44 -0400
Subject: [Twisted-Python] CentOS error installing
Message-ID: <AANLkTikGDOAHGOunFx-JdE-A6+iv6HP+ZMfBbmwBv217@mail.gmail.com>

Hello,

I'm running CentOS 5.5 64bit and when I tried to install twisted using
easy_install I get this error message:

Running Twisted-10.1.0/setup.py -q bdist_egg --dist-dir
/tmp/easy_install-tgKRDq/Twisted-10.1.0/egg-dist-tmp-wd-5Ri
twisted/runner/portmap.c:10:20: error: Python.h: No such file or directory
twisted/runner/portmap.c:14: error: expected ?=?, ?,?, ?;?, ?asm? or
?__attribute__? before ?*? token
twisted/runner/portmap.c:31: error: expected ?=?, ?,?, ?;?, ?asm? or
?__attribute__? before ?*? token
twisted/runner/portmap.c:45: error: expected ?=?, ?,?, ?;?, ?asm? or
?__attribute__? before ?PortmapMethods?
twisted/runner/portmap.c: In function ?initportmap?:
twisted/runner/portmap.c:55: warning: implicit declaration of function
?Py_InitModule?
twisted/runner/portmap.c:55: error: ?PortmapMethods? undeclared (first
use in this function)
twisted/runner/portmap.c:55: error: (Each undeclared identifier is
reported only once
twisted/runner/portmap.c:55: error: for each function it appears in.)
error: Setup script exited with error: command 'gcc' failed with exit status 1



Is this a bug I should submit, or something that is known that I am doing wrong?


Thanks,

Landreville


From maarten at treewalker.org  Wed Aug 18 13:36:33 2010
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Wed, 18 Aug 2010 19:36:33 +0200
Subject: [Twisted-Python] CentOS error installing
In-Reply-To: <AANLkTikGDOAHGOunFx-JdE-A6+iv6HP+ZMfBbmwBv217@mail.gmail.com>
References: <AANLkTikGDOAHGOunFx-JdE-A6+iv6HP+ZMfBbmwBv217@mail.gmail.com>
Message-ID: <201008181936.33521.maarten@treewalker.org>

On Wednesday 18 August 2010, Landreville wrote:
> Hello,
> 
> I'm running CentOS 5.5 64bit and when I tried to install twisted using
> easy_install I get this error message:
> 
> Running Twisted-10.1.0/setup.py -q bdist_egg --dist-dir
> /tmp/easy_install-tgKRDq/Twisted-10.1.0/egg-dist-tmp-wd-5Ri
> twisted/runner/portmap.c:10:20: error: Python.h: No such file or
> directory

Is it possible you don't have the Python headers installed? They are 
probably in a package named "python-dev", "python-devel" or something 
similar.

Bye,
		Maarten


From landreville at deadtreepages.com  Wed Aug 18 15:21:55 2010
From: landreville at deadtreepages.com (Landreville)
Date: Wed, 18 Aug 2010 15:21:55 -0400
Subject: [Twisted-Python] CentOS error installing
In-Reply-To: <201008181936.33521.maarten@treewalker.org>
References: <AANLkTikGDOAHGOunFx-JdE-A6+iv6HP+ZMfBbmwBv217@mail.gmail.com>
	<201008181936.33521.maarten@treewalker.org>
Message-ID: <AANLkTikfQz7Pk2igBdE0RMjMKR5BS4J4DF8XPCBnNcDk@mail.gmail.com>

On Wed, Aug 18, 2010 at 1:36 PM, Maarten ter Huurne
<maarten at treewalker.org> wrote:
> On Wednesday 18 August 2010, Landreville wrote:
>> Hello,
>>
>> I'm running CentOS 5.5 64bit and when I tried to install twisted using
>> easy_install I get this error message:
>>
>> Running Twisted-10.1.0/setup.py -q bdist_egg --dist-dir
>> /tmp/easy_install-tgKRDq/Twisted-10.1.0/egg-dist-tmp-wd-5Ri
>> twisted/runner/portmap.c:10:20: error: Python.h: No such file or
>> directory
>
> Is it possible you don't have the Python headers installed? They are
> probably in a package named "python-dev", "python-devel" or something
> similar.
>
> Bye,
> ? ? ? ? ? ? ? ?Maarten
>

CentOS comes with python 2.4, I installed python 2.7 beside it and
installed using it (python2.7 setup.py install) with no errors.


From cournape at gmail.com  Thu Aug 19 00:52:05 2010
From: cournape at gmail.com (David Cournapeau)
Date: Thu, 19 Aug 2010 13:52:05 +0900
Subject: [Twisted-Python] Add custom options handling to a twisted
 application running from twistd
In-Reply-To: <1282133427.1630.0.camel@blake>
References: <AANLkTinfpEDnt0+H9pac6_P1e77Ccd_R3OnBtzshf3e0@mail.gmail.com>
	<1282133427.1630.0.camel@blake>
Message-ID: <AANLkTinz9m--PLxJz-hihtuptDLfSqCUkz_YPLVuf_s5@mail.gmail.com>

On Wed, Aug 18, 2010 at 9:10 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Wed, 2010-08-18 at 20:28 +0900, David Cournapeau wrote:
>
>> I am trying to add some options handling to an existing twisted
>> application, which runs as an "app" from twistd through the -y
>> argument. It is not clear to me how to do that ?
>
> Instead of using a .tac file, write a twistd plugin:
>
> http://twistedmatrix.com/documents/current/core/howto/tap.html

ok, thanks. I see that plugins don't support everything supported in
.tac (like customizing logging), though. Is this solved in the trunk,
or is this still an issue ? Are there any workarounds ?

cheers,

David


From p.mayers at imperial.ac.uk  Thu Aug 19 02:22:37 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 19 Aug 2010 07:22:37 +0100
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>
References: <1282044941.13984.19.camel@bosnjak-laptop>	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>	<20100818092511.GC4801@ruber.office.udmvt.ru>	<4C6BFDC1.3000906@imperial.ac.uk>
	<20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>
Message-ID: <4C6CCDAD.50908@imperial.ac.uk>

On 08/18/2010 05:01 PM, exarkun at twistedmatrix.com wrote:
> On 03:35 pm, p.mayers at imperial.ac.uk wrote:
>> On 18/08/10 10:25, twisted-web at udmvt.ru wrote:
>>> I think --uid option is too dangerous.
>>> sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is
>>> more
>>> appropriate for changing uids.
>>
>> In all cases? I think not.
>
> Making the directory world writeable is certainly insane and dangerous.
> But in the case where the directory is only writeable by the user the
> daemon is going to run as, and access to that user is restricted, I
> don't see a problem.

I'm not sure which message you're replying to here. I don't disagree 
with you.

I was stating that I didn't think external tools such as "su" were *in 
all cases* appropriate for changing uid.

>> What about a daemon that needs to listen on ports<1024?
>
> For this case, I would very strongly recommend authbind instead.  And I

I'd never heard of authbind. It has some unfortunate limitations (ipv4 
only, no ports 512-1023) but is an interesting approach.

I wonder whether one could do something with SELinux today? (As an 
aside, one of the reasons to *not* use twistd is you can't separately 
label a .tac file - if of course you want to use SELinux)

> think this covers 99% of cases where you would otherwise need to start
> up as root.  For the remaining small number of cases, being able to
> start as root and then shed privileges is definitely more convenient
> than other approaches (although quite possibly inferior to them in all
> other regards).

Sure; that's what I was getting at.


From twisted-web at udmvt.ru  Thu Aug 19 02:55:23 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Thu, 19 Aug 2010 10:55:23 +0400
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <4C6BFDC1.3000906@imperial.ac.uk>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<20100818092511.GC4801@ruber.office.udmvt.ru>
	<4C6BFDC1.3000906@imperial.ac.uk>
Message-ID: <20100819065523.GA8187@ruber.office.udmvt.ru>

On Wed, Aug 18, 2010 at 04:35:29PM +0100, Phil Mayers wrote:
> On 18/08/10 10:25, twisted-web at udmvt.ru wrote:
> 
> > I think --uid option is too dangerous.
> > sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is more
> > appropriate for changing uids.
> 
> In all cases? I think not.
There is no option to tell the code when to setuid(), right?
So, is the place, where it happens now, appropriate for all of your cases?
I don't think so. And it will never be appropriate for all cases,
there is no one correct place where to do setuid, that heavily depends
on every particular case.

--uid is not that simple and magical solution to the "all cases", believe me.
twistd binary is not designed for "all cases" either.
If you have your special case, design outside of twistd binary, it is only
a helper to provide twisted power to command line.

> 
> > It will always be hard to design application, that opens some files or
> > sockets and only then changes it's uids/gids.
> 
> What about a daemon that needs to listen on ports <1024?
Use code, that opens a listening socket, binds it and then executes setuidgid
program that runs your particular program.
Clear and simple approach, separation, that is clearly visible outside of code.
Twisted is not ready for such simplification, it can't use pre-opened sockets,
at least without a hack.

> 
> Sure it's hard and needs care. twistd may be doing it wrong at the 
> moment. But it should be quite possible to fix that. "sudo" and "su" 
> don't do anything magical. Nor does "apache", or any one of the hundreds 
> of daemons that open sockets then setuid.
Ports < 1024 is not a newbie task. Professional programmers very rarely
able to design secure setuid code in one attempt. Even experienced
people have to redesign their setuid code several times and nobody blames them.

sudo and su do very obscure and magic things, they are not only used to
change uid by request of root, but they also have setuid bit set on their binary,
so they have to do a lot of voodoo to protect themselves from non-root users.

setuidgid is not setuid binary, so it only does one task at a time and it
separates this task from your application's task. So the user, the administrator
and the programmer can be sure, that there is nothing in application, that
can break security.

--uid option semantics is not trivial, not every user understands it's risks.
I'm afraid, not every twisted developer understand it's risks.
This is very bad option.
It is unclear, when setuid happens, or what is being done before setuid() happens.
Help only says "The uid to run as.", so it looks simple and without caveats,
but it is not simple as long as you have security concerns.

To twisted developers:
Don't encourage people to design insecure code, please.
Don't make others blame twisted for insecurity.
Just don't make twisted involved into any security issues.
Replace that option with a reminder on how to change uids properly.
It is very dangerous to have such option, especially if it is not test covered.

-- 
Alexey


From twisted-web at udmvt.ru  Thu Aug 19 03:06:02 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Thu, 19 Aug 2010 11:06:02 +0400
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<20100818092511.GC4801@ruber.office.udmvt.ru>
	<4C6BFDC1.3000906@imperial.ac.uk>
	<20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>
Message-ID: <20100819070602.GB8187@ruber.office.udmvt.ru>

On Wed, Aug 18, 2010 at 04:01:52PM -0000, exarkun at twistedmatrix.com wrote:
> On 03:35 pm, p.mayers at imperial.ac.uk wrote:
> >On 18/08/10 10:25, twisted-web at udmvt.ru wrote:
> >>I think --uid option is too dangerous.
> >>sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is 
> >>more
> >>appropriate for changing uids.
> >
> >In all cases? I think not.
> 
> Making the directory world writeable is certainly insane and dangerous. 
> But in the case where the directory is only writeable by the user the 
> daemon is going to run as, and access to that user is restricted, I 
> don't see a problem.
The problem is that you trust that user an ability to destroy any root-writeable
file contents, but you most likely do not realize that, so you most likely don't
take any extra measures to protect yourself.
For "most of the cases" it could be OK, but for the minority of others
it would be a disaster.


-- 
Alexey.


From twisted-web at udmvt.ru  Thu Aug 19 03:30:23 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Thu, 19 Aug 2010 11:30:23 +0400
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <4C6CCDAD.50908@imperial.ac.uk>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<20100818092511.GC4801@ruber.office.udmvt.ru>
	<4C6BFDC1.3000906@imperial.ac.uk>
	<20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>
	<4C6CCDAD.50908@imperial.ac.uk>
Message-ID: <20100819073023.GC8187@ruber.office.udmvt.ru>

On Thu, Aug 19, 2010 at 07:22:37AM +0100, Phil Mayers wrote:
> On 08/18/2010 05:01 PM, exarkun at twistedmatrix.com wrote:
> I wonder whether one could do something with SELinux today? (As an 
> aside, one of the reasons to *not* use twistd is you can't separately 
> label a .tac file - if of course you want to use SELinux)
You don't have to label .tac file if you don't want.
You may wish to label .py file or .sh file.

And using twisted with SELinux is not a problem.
.tac files are not twisted, it only a small part of the framework.

-- 
Alexey


From p.mayers at imperial.ac.uk  Thu Aug 19 03:56:38 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 19 Aug 2010 08:56:38 +0100
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100819065523.GA8187@ruber.office.udmvt.ru>
References: <1282044941.13984.19.camel@bosnjak-laptop>	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>	<20100818092511.GC4801@ruber.office.udmvt.ru>	<4C6BFDC1.3000906@imperial.ac.uk>
	<20100819065523.GA8187@ruber.office.udmvt.ru>
Message-ID: <4C6CE3B6.7050508@imperial.ac.uk>

On 08/19/2010 07:55 AM, twisted-web at udmvt.ru wrote:
> On Wed, Aug 18, 2010 at 04:35:29PM +0100, Phil Mayers wrote:
>> On 18/08/10 10:25, twisted-web at udmvt.ru wrote:
>>
>>> I think --uid option is too dangerous.
>>> sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is more
>>> appropriate for changing uids.
>>
>> In all cases? I think not.

> There is no option to tell the code when to setuid(), right?
> So, is the place, where it happens now, appropriate for all of your cases?

Honestly, I'm not that bothered. I don't use twistd, so it makes no 
difference to me. It seems to me that it ought to be possible to fix the 
twistd --uid option to be safe, but maybe I'm wrong. Your argument seems 
to be "it's not, remove it, always use setuid helpers" - and it's that 
last part I disagree with.

But this is getting rapidly more and more offtopic, so I'm going to drop 
out now.


From p.mayers at imperial.ac.uk  Thu Aug 19 03:59:59 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 19 Aug 2010 08:59:59 +0100
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100819073023.GC8187@ruber.office.udmvt.ru>
References: <1282044941.13984.19.camel@bosnjak-laptop>	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>	<20100818092511.GC4801@ruber.office.udmvt.ru>	<4C6BFDC1.3000906@imperial.ac.uk>	<20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>	<4C6CCDAD.50908@imperial.ac.uk>
	<20100819073023.GC8187@ruber.office.udmvt.ru>
Message-ID: <4C6CE47F.3040004@imperial.ac.uk>

On 08/19/2010 08:30 AM, twisted-web at udmvt.ru wrote:
> On Thu, Aug 19, 2010 at 07:22:37AM +0100, Phil Mayers wrote:
>> On 08/18/2010 05:01 PM, exarkun at twistedmatrix.com wrote:
>> I wonder whether one could do something with SELinux today? (As an
>> aside, one of the reasons to *not* use twistd is you can't separately
>> label a .tac file - if of course you want to use SELinux)
> You don't have to label .tac file if you don't want.
> You may wish to label .py file or .sh file.
>
> And using twisted with SELinux is not a problem.
> .tac files are not twisted, it only a small part of the framework.
>

?

Isn't that what I said?


From glyph at twistedmatrix.com  Sat Aug 21 03:06:25 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Aug 2010 00:06:25 -0700
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
References: <4C68F81B.7020204@naumen.ru>
	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
	<4C6A22EC.3020707@naumen.ru>
	<1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
Message-ID: <8CEDF43C-21E3-4002-9CEC-4B8FFCA03F7E@twistedmatrix.com>


On Aug 17, 2010, at 12:46 AM, Yaroslav Fedevych wrote:

> 
> On Aug 17, 2010, at 8:49 AM, Sergey Magafurov wrote:
> 
>> ... lots of text skipped ...
> 
> You are currently considering your task from the viewpoint ?let's make a callback chain for the perfect workflow and alter this chain in case of anything going wrong.? I think the flaw with this approach is that you are trying to make your ?ideal? flow work at all in situations where it would, in fact, fail for the most of the time.
> 
> Instead of this, you could try to reconsider the task from the viewpoint of ?Let's not add any further callbacks until this is absolutely necessary?. For me, this approach rather works. Moreover, you have the means to do it ? a callback can return a Deferred, and so on.

This code doesn't have any tests or documentation, but it's extremely simple, and might give you an idea of how to do something like what you want: <http://divmod.org/trac/browser/trunk/Epsilon/epsilon/pending.py>.

In this case, it's a multi-deferred in the sense that multiple parties might be interested in the initial value of the Deferred; but you could easily create something that would, for example, take a function which takes a Deferred and adds callbacks to it, then call that function to produce a new callback chain each time it happens.

I'm still not completely understanding why you want cancellation to cascade, since cancellation effectively _does_ cascade if you just allow CancellationError to propagate down the callback chains.

Basically, if you can implement a function in terms of functions that take Deferreds, you should really do that, rather than trying to change the way Deferred itself works.

Sorry that I wasn't able to understand your reasons for wanting this Deferred functionality.  It really sounds like Deferred already does all the stuff you want (releasing resources, getting garbage collected, etc) as long as you use them correctly, so I don't know what to suggest you do instead.



From exarkun at twistedmatrix.com  Sun Aug 22 00:05:23 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Aug 2010 04:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1282449923.67.987773371@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100822/7768a9e3/attachment.htm 

From konrads.smelkovs at gmail.com  Sun Aug 22 14:02:29 2010
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Sun, 22 Aug 2010 21:02:29 +0300
Subject: [Twisted-Python] CentOS error installing
In-Reply-To: <AANLkTikfQz7Pk2igBdE0RMjMKR5BS4J4DF8XPCBnNcDk@mail.gmail.com>
References: <AANLkTikGDOAHGOunFx-JdE-A6+iv6HP+ZMfBbmwBv217@mail.gmail.com>
	<201008181936.33521.maarten@treewalker.org>
	<AANLkTikfQz7Pk2igBdE0RMjMKR5BS4J4DF8XPCBnNcDk@mail.gmail.com>
Message-ID: <AANLkTikgXD5d4eqHjusYoNZAzJy1H024gPsbsn6pUATK@mail.gmail.com>

Compiler can't find headers. Please make sure that the easy_install
executes under your 2.7 and that includes are correct.
--
Konrads Smelkovs
Applied IT sorcery.


On Wed, Aug 18, 2010 at 10:21 PM, Landreville <landreville at deadtreepages.com
> wrote:

> On Wed, Aug 18, 2010 at 1:36 PM, Maarten ter Huurne
> <maarten at treewalker.org> wrote:
> > On Wednesday 18 August 2010, Landreville wrote:
> >> Hello,
> >>
> >> I'm running CentOS 5.5 64bit and when I tried to install twisted using
> >> easy_install I get this error message:
> >>
> >> Running Twisted-10.1.0/setup.py -q bdist_egg --dist-dir
> >> /tmp/easy_install-tgKRDq/Twisted-10.1.0/egg-dist-tmp-wd-5Ri
> >> twisted/runner/portmap.c:10:20: error: Python.h: No such file or
> >> directory
> >
> > Is it possible you don't have the Python headers installed? They are
> > probably in a package named "python-dev", "python-devel" or something
> > similar.
> >
> > Bye,
> >                Maarten
> >
>
> CentOS comes with python 2.4, I installed python 2.7 beside it and
> installed using it (python2.7 setup.py install) with no errors.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100822/b3b03874/attachment.htm 

From smagafurov at naumen.ru  Mon Aug 23 06:22:06 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Mon, 23 Aug 2010 16:22:06 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <8CEDF43C-21E3-4002-9CEC-4B8FFCA03F7E@twistedmatrix.com>
References: <4C68F81B.7020204@naumen.ru>	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>	<4C6A22EC.3020707@naumen.ru>	<1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
	<8CEDF43C-21E3-4002-9CEC-4B8FFCA03F7E@twistedmatrix.com>
Message-ID: <4C724BCE.5000605@naumen.ru>

Thanks to all!
Especially to Yaroslav Fedevych who explain me my misstake in my native 
language :)
I was wrong with deferreds usage.

Cascading cancelling of inlineCallbacks is still needed to me, but it 
can be realized with current Deferred API.

This way for example:

class InlineCallbacksManagerWithCascadeCancelling(object):
     _cancellation = False
     _wait_result = None

     def __init__(self):
         self.deferred = defer.Deferred()
         self.deferred.addBoth(self._cleanup)

     def _cleanup(self, result):
         if self._wait_result is not None:
             self._cancellation = True
             self._wait_result.cancel()
         self._wait_result = None
         self.deferred = None
         return result

     def _inlineCallbacks(self, result, g):
         """
         See L{inlineCallbacks}.
         """
         # This function is complicated by the need to prevent unbounded 
recursion
         # arising from repeatedly yielding immediately ready 
deferreds.  This while
         # loop and the waiting variable solve that by manually 
unfolding the
         # recursion.

         waiting = [True, # waiting for result?
                    None] # result

         deferred = self.deferred

         while 1:
             if self._cancellation:
                 g.close()
                 return

             try:
                 # Send the last result back as the result of the yield 
expression.
                 isFailure = isinstance(result, Failure)
                 if isFailure:
                     result = result.throwExceptionIntoGenerator(g)
                 else:
                     result = g.send(result)
             except StopIteration:
                 # fell off the end, or "return" statement
                 deferred.callback(None)
                 return deferred
             except defer._DefGen_Return, e:
                 # returnValue() was called; time to give a result to 
the original Deferred.
                 deferred.callback(e.value)
                 return deferred
             except:
                 deferred.errback()
                 return deferred

             if isinstance(result, defer.Deferred):
                 # a deferred was yielded, get the result.
                 def gotResult(r):
                     if waiting[0]:
                         waiting[0] = False
                         waiting[1] = r
                     else:
                         self._wait_result = None
                         self._inlineCallbacks(r, g)

                 result.addBoth(gotResult)
                 if waiting[0]:
                     # Haven't called back yet, set flag so that we get 
reinvoked
                     # and return from the loop
                     waiting[0] = False
                     self._wait_result = result
                     return deferred

                 result = waiting[1]
                 # Reset waiting to initial values for next loop.  
gotResult uses
                 # waiting, but this isn't a problem because gotResult 
is only
                 # executed once, and if it hasn't been executed yet, 
the return
                 # branch above would have been taken.

                 waiting[0] = True
                 waiting[1] = None

def inlineCallbacksWithCascadeCancelling(f):
     def unwind_generator(*args, **kwargs):
         manager = InlineCallbacksManagerWithCascadeCancelling(*args, 
**kwargs)
         return manager._inlineCallbacks(None, f(*args, **kwargs))
     return mergeFunctionMetadata(f, unwind_generator)

This inlineCallbacksWithCascadeCancelling cancels immediately "child" 
(wait result) deferred when "parent" deferred finished (canceled for 
example) and stops generator.

May be this behaviour must be default for inlineCallbacks (i.e. 
defer.inlineCallbacks = inlineCallbacksWithCascadeCancelling)?

I am happy with this behaviour :)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100823/c80f0a36/attachment.htm 

From exarkun at twistedmatrix.com  Mon Aug 23 10:23:12 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 23 Aug 2010 14:23:12 -0000
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <4C724BCE.5000605@naumen.ru>
References: <4C68F81B.7020204@naumen.ru>
	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
	<4C6A22EC.3020707@naumen.ru>
	<1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
	<8CEDF43C-21E3-4002-9CEC-4B8FFCA03F7E@twistedmatrix.com>
	<4C724BCE.5000605@naumen.ru>
Message-ID: <20100823142312.2470.1997864862.divmod.xquotient.249@localhost.localdomain>

On 10:22 am, smagafurov at naumen.ru wrote:
>Thanks to all!
>Especially to Yaroslav Fedevych who explain me my misstake in my native 
>language :)
>I was wrong with deferreds usage.
>
>Cascading cancelling of inlineCallbacks is still needed to me, but it 
>can be realized with current Deferred API.
>
>This way for example:
>
>[snip]
>
>This inlineCallbacksWithCascadeCancelling cancels immediately "child" 
>(wait result) deferred when "parent" deferred finished (canceled for 
>example) and stops generator.
>
>May be this behaviour must be default for inlineCallbacks (i.e. 
>defer.inlineCallbacks = inlineCallbacksWithCascadeCancelling)?

If you can write some unit tests for this, turn the whole thing into a 
patch (using svn diff), and attach it to ticket #4632, that'd be great.

Jean-Paul


From gabriel.rossetti at arimaz.com  Tue Aug 24 05:40:10 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 11:40:10 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
Message-ID: <4C73937A.4040806@arimaz.com>

Hello,

I can't find any examples of using Twisted with wxPython, were wx is in 
a seperate thread. I used to have one somewhere but can' t find it 
either. I'm looking because for some reason my code doesn't work (the 
GUI freezes), even though I use reactor.callFromThread() for Twisted 
calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone 
point me to an example?

Thank you,
Gabriel


From lvh at laurensvh.be  Tue Aug 24 06:57:29 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Tue, 24 Aug 2010 12:57:29 +0200
Subject: [Twisted-Python] Twisted.web, txOAuth and custom login pages
Message-ID: <AANLkTi=yQWAnRKy8atYxp5R7+Eh6fBQiSigGNxm5cabp@mail.gmail.com>

Hey,


I'm writing txOAuth. Basically the idea is to abstract all the OAuth stuff
away so that people can just do boring old web auth.

I've seen JP's 60 seconds post but it appears to be HTTP Authentication
centric. I'd like to be able to offer users pretty login pages. Also, OAuth
logins typically have to inform the user about more stuff, such as who *we*
think authenticated the request (as a measure against forgery), and which
privileges exactly they've requested. That makes a pretty login page
something to want.

I've also found sources on how to do it with Woven, but I'm pretty sure I'm
not supposed to do that anymore. Some of them refer to Nevow as the shiny
new thing to use, but since I'm not trying to actually BUILD such a login
page (I'm merely trying to cater to other people that do), I don't think I
need it.

I'm not sure how much of the default stuff can be reused, because OAuth is a
bit different: authenticating the end-user (that's you!) relies on
redirection. Unfortunately the login page itself might redirect the user
many times already, so there must be some way of getting back to my library
with a redirectable request

Also I'm not sure if I should be using Cred here or if it's just
complicating stuff. I think you can model the three-legged auth as two
two-legged auths: the client is authenticating to me, and the end-user is
authenticating to me. That way, you could use HTTPAuthSessionWrapper to
authenticate clients, and its realm would return the login page. This sounds
pretty complex to me.

One really simple API I can think of is just passing a custom object around
that has a deferred. Once you've successfully authenticated the end-user,
you fire it with a Request (which I can then properly redirect), as
explained above. (Same with errback chain; again, I need a request to return
the error to the client that initiated the request.)

Any thoughts?

Thanks,
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100824/acf3bab8/attachment.htm 

From smagafurov at naumen.ru  Tue Aug 24 07:10:32 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Tue, 24 Aug 2010 17:10:32 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <20100823142312.2470.1997864862.divmod.xquotient.249@localhost.localdomain>
References: <4C68F81B.7020204@naumen.ru>	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>	<4C6A22EC.3020707@naumen.ru>	<1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>	<8CEDF43C-21E3-4002-9CEC-4B8FFCA03F7E@twistedmatrix.com>	<4C724BCE.5000605@naumen.ru>
	<20100823142312.2470.1997864862.divmod.xquotient.249@localhost.localdomain>
Message-ID: <4C73A8A8.8050500@naumen.ru>


> If you can write some unit tests for this, turn the whole thing into a
> patch (using svn diff), and attach it to ticket #4632, that'd be great.
>
> Jean-Paul
>    
done!


From itamar at itamarst.org  Tue Aug 24 08:11:33 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 24 Aug 2010 08:11:33 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73937A.4040806@arimaz.com>
References: <4C73937A.4040806@arimaz.com>
Message-ID: <1282651893.1652.2.camel@blake>

On Tue, 2010-08-24 at 11:40 +0200, Gabriel Rossetti wrote:
> Hello,
> 
> I can't find any examples of using Twisted with wxPython, were wx is in 
> a seperate thread. I used to have one somewhere but can' t find it 
> either. I'm looking because for some reason my code doesn't work (the 
> GUI freezes), even though I use reactor.callFromThread() for Twisted 
> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone 
> point me to an example?

I would expect that to work (assuming wx.CallAfter works). Can you post
a minimal example of your code that demonstrates a freezing GUI?




From exarkun at twistedmatrix.com  Tue Aug 24 08:20:29 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Aug 2010 12:20:29 -0000
Subject: [Twisted-Python] Twisted.web, txOAuth and custom login pages
In-Reply-To: <AANLkTi=yQWAnRKy8atYxp5R7+Eh6fBQiSigGNxm5cabp@mail.gmail.com>
References: <AANLkTi=yQWAnRKy8atYxp5R7+Eh6fBQiSigGNxm5cabp@mail.gmail.com>
Message-ID: <20100824122029.2058.255505929.divmod.xquotient.4@localhost.localdomain>

On 10:57 am, lvh at laurensvh.be wrote:
>Hey,
>
>
>I'm writing txOAuth. Basically the idea is to abstract all the OAuth 
>stuff
>away so that people can just do boring old web auth.
>
>[snip]
>
>I've also found sources on how to do it with Woven, but I'm pretty sure 
>I'm
>not supposed to do that anymore. Some of them refer to Nevow as the 
>shiny
>new thing to use, but since I'm not trying to actually BUILD such a 
>login
>page (I'm merely trying to cater to other people that do), I don't 
>think I
>need it.

Even if you don't want to generate HTML, nevow.guard is an example of 
the rest of the authentication process (tied in to cred) from an HTML 
form.  So you still might want to take a look.  Not that it's extremely 
pretty... But it has lots of real-world use and does what people want.
>I'm not sure how much of the default stuff can be reused, because OAuth 
>is a
>bit different: authenticating the end-user (that's you!) relies on
>redirection. Unfortunately the login page itself might redirect the 
>user
>many times already, so there must be some way of getting back to my 
>library
>with a redirectable request
>
>Also I'm not sure if I should be using Cred here or if it's just
>complicating stuff.

I don't know if it's complicating things or not.  But using cred is a 
*feature* you provide people.  It means that your OAuth code is easier 
to use in their applications.  So it might be worth the extra work to 
figure out how to make them fit together.

Jean-Paul


From jrennie at gmail.com  Tue Aug 24 09:00:58 2010
From: jrennie at gmail.com (Jason Rennie)
Date: Tue, 24 Aug 2010 09:00:58 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73937A.4040806@arimaz.com>
References: <4C73937A.4040806@arimaz.com>
Message-ID: <AANLkTi=a3PqDT5VataFpkRDO8y16uKuOOipgLHjJAEQ6@mail.gmail.com>

I have experience getting cherrypy (web server) and Twisted to play together
nicely...  As you know, reactor.callFromThread is necessary for waking-up
twisted from a non-twisted thread.  Getting both cherrypy and the reactor
running required that I start cherrypy with a callback to run the reactor.
 I also needed to turn off twisted's signal handling and install my own
signal handling to ensure proper shut down.

Are you sure that wx.CallAfter is the right thing for wx calls from Twisted?
 Since Twisted is an event loop, it may not release control in the same
fashion as other wx calls.

Jason

On Tue, Aug 24, 2010 at 5:40 AM, Gabriel Rossetti <
gabriel.rossetti at arimaz.com> wrote:

> Hello,
>
> I can't find any examples of using Twisted with wxPython, were wx is in
> a seperate thread. I used to have one somewhere but can' t find it
> either. I'm looking because for some reason my code doesn't work (the
> GUI freezes), even though I use reactor.callFromThread() for Twisted
> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
> point me to an example?
>
> Thank you,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100824/d3cdb331/attachment.htm 

From stephen.c.waterbury at nasa.gov  Tue Aug 24 09:06:36 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Tue, 24 Aug 2010 09:06:36 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73937A.4040806@arimaz.com>
References: <4C73937A.4040806@arimaz.com>
Message-ID: <4C73C3DC.8050402@nasa.gov>

On 08/24/2010 05:40 AM, Gabriel Rossetti wrote:
> Hello,
>
> I can't find any examples of using Twisted with wxPython, were wx is in
> a seperate thread. I used to have one somewhere but can' t find it
> either. I'm looking because for some reason my code doesn't work (the
> GUI freezes), even though I use reactor.callFromThread() for Twisted
> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
> point me to an example?

I've used a method for running twisted and wxPython in separate threads
that was developed by someone at Solipsis (http://netofpeers.com).
I've put the example that was on their web site (since removed) on mine:
http://pangalactic.us/txwx/separate_thread_example.html

You can see a less trivial application of it here:
https://pangalactic.us/repo/ampchat

... in which I used that method in creating a wxpython-based client
to David Ripton's "ampchat" (wxchatclient.py).  This method has
worked for me, whereas I've observed the same (freezing) behavior
with wxreactor.

Steve


From gabriel.rossetti at arimaz.com  Tue Aug 24 09:19:06 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 15:19:06 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <1282651893.1652.2.camel@blake>
References: <4C73937A.4040806@arimaz.com> <1282651893.1652.2.camel@blake>
Message-ID: <4C73C6CA.20807@arimaz.com>

On 08/24/2010 02:11 PM, Itamar Turner-Trauring wrote:
> On Tue, 2010-08-24 at 11:40 +0200, Gabriel Rossetti wrote:
>    
>> Hello,
>>
>> I can't find any examples of using Twisted with wxPython, were wx is in
>> a seperate thread. I used to have one somewhere but can' t find it
>> either. I'm looking because for some reason my code doesn't work (the
>> GUI freezes), even though I use reactor.callFromThread() for Twisted
>> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
>> point me to an example?
>>      
> I would expect that to work (assuming wx.CallAfter works). Can you post
> a minimal example of your code that demonstrates a freezing GUI?
>
>    
Thanks for the reply, I'm going to try some other things before I make a 
minimal example, keep you up to date, thanks


From gabriel.rossetti at arimaz.com  Tue Aug 24 09:20:28 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 15:20:28 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <AANLkTi=a3PqDT5VataFpkRDO8y16uKuOOipgLHjJAEQ6@mail.gmail.com>
References: <4C73937A.4040806@arimaz.com>
	<AANLkTi=a3PqDT5VataFpkRDO8y16uKuOOipgLHjJAEQ6@mail.gmail.com>
Message-ID: <4C73C71C.6020809@arimaz.com>

It may not indeed, but from what I've read it should, I'll look into 
that, thanks for the reply and idea.

Gabriel

On 08/24/2010 03:00 PM, Jason Rennie wrote:
> I have experience getting cherrypy (web server) and Twisted to play 
> together nicely...  As you know, reactor.callFromThread is necessary 
> for waking-up twisted from a non-twisted thread.  Getting both 
> cherrypy and the reactor running required that I start cherrypy with a 
> callback to run the reactor.  I also needed to turn off twisted's 
> signal handling and install my own signal handling to ensure proper 
> shut down.
>
> Are you sure that wx.CallAfter is the right thing for wx calls from 
> Twisted?  Since Twisted is an event loop, it may not release control 
> in the same fashion as other wx calls.
>
> Jason
>
> On Tue, Aug 24, 2010 at 5:40 AM, Gabriel Rossetti 
> <gabriel.rossetti at arimaz.com <mailto:gabriel.rossetti at arimaz.com>> wrote:
>
>     Hello,
>
>     I can't find any examples of using Twisted with wxPython, were wx
>     is in
>     a seperate thread. I used to have one somewhere but can' t find it
>     either. I'm looking because for some reason my code doesn't work (the
>     GUI freezes), even though I use reactor.callFromThread() for Twisted
>     calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
>     point me to an example?
>
>     Thank you,
>     Gabriel
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
> -- 
> Jason Rennie
> Research Scientist, ITA Software
> 617-714-2645
> http://www.itasoftware.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100824/61b9a3fd/attachment-0001.htm 

From gabriel.rossetti at arimaz.com  Tue Aug 24 09:22:18 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 15:22:18 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73C3DC.8050402@nasa.gov>
References: <4C73937A.4040806@arimaz.com> <4C73C3DC.8050402@nasa.gov>
Message-ID: <4C73C78A.4090108@arimaz.com>

On 08/24/2010 03:06 PM, Stephen Waterbury wrote:
> On 08/24/2010 05:40 AM, Gabriel Rossetti wrote:
>    
>> Hello,
>>
>> I can't find any examples of using Twisted with wxPython, were wx is in
>> a seperate thread. I used to have one somewhere but can' t find it
>> either. I'm looking because for some reason my code doesn't work (the
>> GUI freezes), even though I use reactor.callFromThread() for Twisted
>> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
>> point me to an example?
>>      
> I've used a method for running twisted and wxPython in separate threads
> that was developed by someone at Solipsis (http://netofpeers.com).
> I've put the example that was on their web site (since removed) on mine:
> http://pangalactic.us/txwx/separate_thread_example.html
>
> You can see a less trivial application of it here:
> https://pangalactic.us/repo/ampchat
>
> ... in which I used that method in creating a wxpython-based client
> to David Ripton's "ampchat" (wxchatclient.py).  This method has
> worked for me, whereas I've observed the same (freezing) behavior
> with wxreactor.
>
> Steve
>    

Ok, so you put Twisted in a thread? I read in several posts that this 
posed problems, have you had any drawbacks?

Gabriel


From stephen.c.waterbury at nasa.gov  Tue Aug 24 09:24:42 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Tue, 24 Aug 2010 09:24:42 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73C78A.4090108@arimaz.com>
References: <4C73937A.4040806@arimaz.com> <4C73C3DC.8050402@nasa.gov>
	<4C73C78A.4090108@arimaz.com>
Message-ID: <4C73C81A.9060202@nasa.gov>

On 08/24/2010 09:22 AM, Gabriel Rossetti wrote:
> On 08/24/2010 03:06 PM, Stephen Waterbury wrote:
>> On 08/24/2010 05:40 AM, Gabriel Rossetti wrote:
>>
>>> Hello,
>>>
>>> I can't find any examples of using Twisted with wxPython, were wx is in
>>> a seperate thread. I used to have one somewhere but can' t find it
>>> either. I'm looking because for some reason my code doesn't work (the
>>> GUI freezes), even though I use reactor.callFromThread() for Twisted
>>> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
>>> point me to an example?
>>>
>> I've used a method for running twisted and wxPython in separate threads
>> that was developed by someone at Solipsis (http://netofpeers.com).
>> I've put the example that was on their web site (since removed) on mine:
>> http://pangalactic.us/txwx/separate_thread_example.html
>>
>> You can see a less trivial application of it here:
>> https://pangalactic.us/repo/ampchat
>>
>> ... in which I used that method in creating a wxpython-based client
>> to David Ripton's "ampchat" (wxchatclient.py).  This method has
>> worked for me, whereas I've observed the same (freezing) behavior
>> with wxreactor.
>>
>> Steve
>>
>
> Ok, so you put Twisted in a thread? I read in several posts that this
> posed problems, have you had any drawbacks?

I haven't observed any.

Steve


From stephen.c.waterbury at nasa.gov  Tue Aug 24 10:08:49 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Tue, 24 Aug 2010 10:08:49 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73C81A.9060202@nasa.gov>
References: <4C73937A.4040806@arimaz.com>
	<4C73C3DC.8050402@nasa.gov>	<4C73C78A.4090108@arimaz.com>
	<4C73C81A.9060202@nasa.gov>
Message-ID: <4C73D271.6080407@nasa.gov>

On 08/24/2010 09:24 AM, Stephen Waterbury wrote:
> On 08/24/2010 09:22 AM, Gabriel Rossetti wrote:
>> Ok, so you put Twisted in a thread? I read in several posts that this
>> posed problems, have you had any drawbacks?
>
> I haven't observed any.

Reflecting on this a little further (and with the caveat that I
am a complete ignoramus on threading), it seems to me that
problems happen when Twisted is not in the main thread.  Note
that in the example, the reactor starts first (i.e., before the
wx event loop), so I guess it is in the main thread ... I haven't
tried switching them, but if you do that or anything that breaks
this method, please let me know -- as I say, I haven't seen it
break (freeze or otherwise malfunction) yet.

Steve


From itamar at itamarst.org  Tue Aug 24 10:26:53 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 24 Aug 2010 10:26:53 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73C78A.4090108@arimaz.com>
References: <4C73937A.4040806@arimaz.com> <4C73C3DC.8050402@nasa.gov>
	<4C73C78A.4090108@arimaz.com>
Message-ID: <1282660013.1652.5.camel@blake>

On Tue, 2010-08-24 at 15:22 +0200, Gabriel Rossetti wrote:

> Ok, so you put Twisted in a thread? I read in several posts that this 
> posed problems, have you had any drawbacks?

reactor.spawnProcess won't notice processes have exited on posix
platforms (though you can fix this by installing your own SIGCHLD
handler in the main thread that does callFromThread on
t.i.process.reapAllProcesses).



From andrewfr_ice at yahoo.com  Tue Aug 24 13:32:06 2010
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 24 Aug 2010 10:32:06 -0700 (PDT)
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <mailman.208377.1282656033.23374.twisted-python@twistedmatrix.com>
Message-ID: <577217.97191.qm@web120706.mail.ne1.yahoo.com>

Hi 

>I can't find any examples of using Twisted with wxPython, were wx is in 
>a seperate thread. I used to have one somewhere but can' t find it 
>either. I'm looking because for some reason my code doesn't work (the 
>GUI freezes), even though I use reactor.callFromThread() for Twisted 
>calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone 
>point me to an example?

This may be off topic but isn't there a wxReactor() so that you can
avoid a separate thread?

Cheers,
Andrew


      


From gabriel.rossetti at arimaz.com  Tue Aug 24 16:56:33 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 22:56:33 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <577217.97191.qm@web120706.mail.ne1.yahoo.com>
References: <577217.97191.qm@web120706.mail.ne1.yahoo.com>
Message-ID: <4C743201.1090002@arimaz.com>

On 08/24/2010 07:32 PM, Andrew Francis wrote:
> Hi
>
>    
>> I can't find any examples of using Twisted with wxPython, were wx is in
>> a seperate thread. I used to have one somewhere but can' t find it
>> either. I'm looking because for some reason my code doesn't work (the
>> GUI freezes), even though I use reactor.callFromThread() for Twisted
>> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
>> point me to an example?
>>      
> This may be off topic but isn't there a wxReactor() so that you can
> avoid a separate thread?
>
> Cheers,
> Andrew
>    

Yes, I know, but I'm using Twisted in a way that I allow blocking 
because it doesn't matter in my application, I receive a msg then access 
hardware and therefor I can only do one thing at a time (with this 
hardware anyways). If I use wxreactor with this model the GUI freezes up 
when I access the IO. I used to use wxreactor, put the IO calls in a 
queue and run one after another in a thread but this posed other 
problems when I needed to interact in between the GUI, the network 
(Twisted) and the IO threads, with my current code it has become much 
simpler and more reliable.

Cheers,
Gabriel


From gabriel.rossetti at arimaz.com  Tue Aug 24 17:00:42 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 23:00:42 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73D92D.4060104@nasa.gov>
References: <4C73937A.4040806@arimaz.com>	<4C73C3DC.8050402@nasa.gov>	<4C73C78A.4090108@arimaz.com>	<4C73C81A.9060202@nasa.gov>
	<4C73D271.6080407@nasa.gov> <4C73D92D.4060104@nasa.gov>
Message-ID: <4C7432FA.1040703@arimaz.com>

On 08/24/2010 04:37 PM, Stephen Waterbury wrote:
> On 08/24/2010 10:08 AM, Stephen Waterbury wrote:
>> On 08/24/2010 09:24 AM, Stephen Waterbury wrote:
>>> On 08/24/2010 09:22 AM, Gabriel Rossetti wrote:
>>>> Ok, so you put Twisted in a thread? I read in several posts that this
>>>> posed problems, have you had any drawbacks?
>>>
>>> I haven't observed any.
>>
>> Reflecting on this a little further (and with the caveat that I
>> am a complete ignoramus on threading), it seems to me that
>> problems happen when Twisted is not in the main thread.  Note
>> that in the example, the reactor starts first (i.e., before the
>> wx event loop), so I guess it is in the main thread ... I haven't
>> tried switching them, but if you do that or anything that breaks
>> this method, please let me know -- as I say, I haven't seen it
>> break (freeze or otherwise malfunction) yet.
>
> BTW, Gabriel (sorry about spamming you about this -- this is the
> last thing I'll say, I promise! ;), I think what I said above is
> completely wrong:  the example code *is* running the reactor in a
> daemon thread -- it sets it explicitly using 'setDaemon(True)'.
> Anyway, if you get it to break, please let me know -- thanks!
>
> Steve

no worries Steve, it's cool of you to look into this. I'll give it a try 
if I can't get the wx-in-a-thread code to work by tomorrow. I just want 
to check some things first to make sure it's not another problem hiding. 
Thanks for your help, I'll keep you up to date!

Gabriel


From gabriel.rossetti at arimaz.com  Tue Aug 24 17:04:46 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 23:04:46 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <1282660013.1652.5.camel@blake>
References: <4C73937A.4040806@arimaz.com>
	<4C73C3DC.8050402@nasa.gov>	<4C73C78A.4090108@arimaz.com>
	<1282660013.1652.5.camel@blake>
Message-ID: <4C7433EE.4090204@arimaz.com>

On 08/24/2010 04:26 PM, Itamar Turner-Trauring wrote:
> On Tue, 2010-08-24 at 15:22 +0200, Gabriel Rossetti wrote:
>
>    
>> Ok, so you put Twisted in a thread? I read in several posts that this
>> posed problems, have you had any drawbacks?
>>      
> reactor.spawnProcess won't notice processes have exited on posix
> platforms (though you can fix this by installing your own SIGCHLD
> handler in the main thread that does callFromThread on
> t.i.process.reapAllProcesses).
>    
Ok, thanks for the info, I'll look into this if I go for the 
twisted-in-a-thread version, although I may no longer be using 
reactor.spawnProcess myself but it is probably being used somewhere by 
Twisted so it's beter to do that.


From shwetanka at gmail.com  Thu Aug 26 04:43:42 2010
From: shwetanka at gmail.com (shwetanka srivastava)
Date: Thu, 26 Aug 2010 14:13:42 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
Message-ID: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>

Hi

I'm using twisted api with starpy to make a conference call. After a
successful call this error is logged in my log file

ERROR:twsited:Unhandled error in Deferred:
ERROR:twsited:Unhandled Error
Traceback (most recent call last):
  File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
148, in dataReceived
    self.lineReceived(line)
  File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line 120,
in lineReceived
    df.callback( line )
  File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
243, in callback
    self._startRunCallbacks(result)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
312, in _startRunCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
328, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line 145,
in checkFailure
    raise error.AGICommandFailure( FAILURE_CODE, result )
starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')

Calls are perfectly ok. I tried to google about the error and found out if I
don't provide an errback() to a deferred object then this happens.
How do i find which deferred object is posing this problem and also whether
it affects the program execution because my program is working absolutely
fine.
-- 
Regards
Shwetanka
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100826/ebab99c2/attachment.htm 

From smagafurov at naumen.ru  Thu Aug 26 05:47:39 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Thu, 26 Aug 2010 15:47:39 +0600
Subject: [Twisted-Python] help with Deferreds
Message-ID: <4C76383B.5080708@naumen.ru>

How to rewrite this regular function with Deferred-style?

def getCachedResult(cache, key):
     try:
         item = cache.open(key)
     except NotFound:
         return None

     try:
         if item.obsolete():
             return None
         data = item.read()
     finally:
         item.release()

     result = renew(data)
     return result

Conditions:
1. 'cache.open' and 'item.read' become deffered
2. 'item.obsolete()' and 'renew(data)' are not deferred



From mithrandi at mithrandi.net  Thu Aug 26 06:04:55 2010
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 26 Aug 2010 12:04:55 +0200
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <4C76383B.5080708@naumen.ru>
References: <4C76383B.5080708@naumen.ru>
Message-ID: <AANLkTi=8ob-vhTv9-KxOuWfPN-i007YJ3c-CEkn6krqA@mail.gmail.com>

On Thu, Aug 26, 2010 at 11:47 AM, Sergey Magafurov <smagafurov at naumen.ru> wrote:
> How to rewrite this regular function with Deferred-style?

> Conditions:
> 1. 'cache.open' and 'item.read' become deffered
> 2. 'item.obsolete()' and 'renew(data)' are not deferred

I would probably write it something like this:

def getCachedResult(cache, key):
    def _gotResult(item):
        try:
            if item.obsolete():
                return None
            d = item.read()
            d.addCallback(lambda data: renew(data))
        except:
            item.release()
            raise
        d.addBoth(lambda ign: item.release())
        return d

    def _ebNotFound(f):
        f.trap(NotFound)
        return None

    return cache.open(key).addCallbacks(_gotResult, _ebNotFound)

Note: code is untested
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From einar.twisted at norsk-esport.no  Thu Aug 26 06:15:24 2010
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Thu, 26 Aug 2010 12:15:24 +0200
Subject: [Twisted-Python] Twisted and SOAP
Message-ID: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>

Hi,

What is currently the recommended option for letting Twisted
applications communicate with SOAP services?

Cheers,
Einar


From terry at jon.es  Thu Aug 26 06:17:41 2010
From: terry at jon.es (Terry Jones)
Date: Thu, 26 Aug 2010 12:17:41 +0200
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: Your message at 15:47:39 on Thursday, 26 August 2010
References: <4C76383B.5080708@naumen.ru>
Message-ID: <19574.16197.79319.11292@jon.es>

Hi Sergey

> How to rewrite this regular function with Deferred-style?

Something like the below (untested) will do the job.  You'd have to make
sure that cache.open returned a deferred that fails with NotFound in case
things don't work out.

It would be simpler to translate your code using inlineCallbacks, but it
might be to your advantage to first see how to do it without that.  If you
do take that approach you might want to do some timing tests.

Terry

---

def getCachedResult(cache, key):

    def release(result, item):
        item.release()
        return result

    def renew(data):
        return renew(data)

    def notFound(fail):
        fail.trap(NotFound)

    def checkObsolete(item):
        if item.obsolete():
            return None
        else:
            d = item.read()
            d.addBoth(release, item)
            d.addCallback(renew)
            return d

    d = cache.open(key)
    d.addCallbacks(checkObsolete, notFound)
    return d


From smagafurov at naumen.ru  Thu Aug 26 06:23:05 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Thu, 26 Aug 2010 16:23:05 +0600
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <AANLkTi=8ob-vhTv9-KxOuWfPN-i007YJ3c-CEkn6krqA@mail.gmail.com>
References: <4C76383B.5080708@naumen.ru>
	<AANLkTi=8ob-vhTv9-KxOuWfPN-i007YJ3c-CEkn6krqA@mail.gmail.com>
Message-ID: <4C764089.4080604@naumen.ru>


> I would probably write it something like this:
>
> def getCachedResult(cache, key):
>      def _gotResult(item):
>          try:
>              if item.obsolete():
>                  return None
>              d = item.read()
>              d.addCallback(lambda data: renew(data))
>          except:
>              item.release()
>              raise
>          d.addBoth(lambda ign: item.release())
>          return d
>
>      def _ebNotFound(f):
>          f.trap(NotFound)
>          return None
>
>      return cache.open(key).addCallbacks(_gotResult, _ebNotFound)
>
> Note: code is untested
>    
My variant is like yours.
I ask this question because I am confusing with this ugly slice of code:

try:
     ...
except:
     item.release()
     raise

Only inlineCallbacks helps me...
Thanks.



From smagafurov at naumen.ru  Thu Aug 26 06:31:13 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Thu, 26 Aug 2010 16:31:13 +0600
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <19574.16197.79319.11292@jon.es>
References: <4C76383B.5080708@naumen.ru> <19574.16197.79319.11292@jon.es>
Message-ID: <4C764271.5000001@naumen.ru>


> def getCachedResult(cache, key):
>
>      def release(result, item):
>          item.release()
>          return result
>
>      def renew(data):
>          return renew(data)
>
>      def notFound(fail):
>          fail.trap(NotFound)
>
>      def checkObsolete(item):
>          if item.obsolete():
>              return None
>          else:
>              d = item.read()
>              d.addBoth(release, item)
>              d.addCallback(renew)
>              return d
>
>      d = cache.open(key)
>      d.addCallbacks(checkObsolete, notFound)
>      return d
>    
Hi Terry
If item.obsolete() raise exception item remain not released.
Additional try ... except ... safe us but looks ugly


From mithrandi at mithrandi.net  Thu Aug 26 06:38:18 2010
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 26 Aug 2010 12:38:18 +0200
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <4C764089.4080604@naumen.ru>
References: <4C76383B.5080708@naumen.ru>
	<AANLkTi=8ob-vhTv9-KxOuWfPN-i007YJ3c-CEkn6krqA@mail.gmail.com>
	<4C764089.4080604@naumen.ru>
Message-ID: <AANLkTi=k9DVFTAKLU3LhAMbJpo_A_4pLb46HnAa2mR=-@mail.gmail.com>

On Thu, Aug 26, 2010 at 12:23 PM, Sergey Magafurov <smagafurov at naumen.ru> wrote:
> I ask this question because I am confusing with this ugly slice of code:
>
> try:
> ? ? ...
> except:
> ? ? item.release()
> ? ? raise

If you don't like that construct, perhaps this one is nicer:

from twisted.internet.defer import maybeDeferred

def getCachedResult(cache, key):
   def _readItem(item):
       if item.obsolete():
           return None
       return item.read()

   def _gotResult(item):
       def _release(ign):
           item.release()
           return item

       d = maybeDeferred(_readItem, item)
       d.addBoth(_release)
       d.addCallback(renew)
       return d

   def _ebNotFound(f):
       f.trap(NotFound)
       return None

   return cache.open(key).addCallbacks(_gotResult, _ebNotFound)

-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From terry at jon.es  Thu Aug 26 06:44:52 2010
From: terry at jon.es (Terry Jones)
Date: Thu, 26 Aug 2010 12:44:52 +0200
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: Your message at 16:31:13 on Thursday, 26 August 2010
References: <4C76383B.5080708@naumen.ru> <19574.16197.79319.11292@jon.es>
	<4C764271.5000001@naumen.ru>
Message-ID: <19574.17828.236399.757022@jon.es>

Hi Sergey

>      def checkObsolete(item):
>          if item.obsolete():
>              return None
>          else:
>              d = item.read()
>              d.addBoth(release, item)
>              d.addCallback(renew)
>              return d
>
>      d = cache.open(key)
>      d.addCallbacks(checkObsolete, notFound)
>      return d
>    

> Hi Terry
> If item.obsolete() raise exception item remain not released.
> Additional try ... except ... safe us but looks ugly

Yes, I was expecting you to wrap item.obsolete() and renew(data) in
try/except, as needed.  If you want a clean but slightly slower way to do
that, how about something like:


def getCachedResult(cache, key):

    def release(result, item):
        item.release()
        return result

    def renew(data):
        return renew(data)

    def notFound(fail):
        fail.trap(NotFound)

    def readItem(item):
        return item.read()

    def checkObsolete(item):
        d = defer.maybeDeferred(item.obsolete)
        d.addCallback(lambda _: readItem(item))
        d.addBoth(release, item)
        d.addCallback(renew)
        return d

    d = cache.open(key)
    d.addCallbacks(checkObsolete, notFound)
    return d


From smagafurov at naumen.ru  Thu Aug 26 06:49:25 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Thu, 26 Aug 2010 16:49:25 +0600
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <AANLkTi=k9DVFTAKLU3LhAMbJpo_A_4pLb46HnAa2mR=-@mail.gmail.com>
References: <4C76383B.5080708@naumen.ru>	<AANLkTi=8ob-vhTv9-KxOuWfPN-i007YJ3c-CEkn6krqA@mail.gmail.com>	<4C764089.4080604@naumen.ru>
	<AANLkTi=k9DVFTAKLU3LhAMbJpo_A_4pLb46HnAa2mR=-@mail.gmail.com>
Message-ID: <4C7646B5.8070203@naumen.ru>


> If you don't like that construct, perhaps this one is nicer:
>
> from twisted.internet.defer import maybeDeferred
>
> def getCachedResult(cache, key):
>     def _readItem(item):
>         if item.obsolete():
>             return None
>         return item.read()
>
>     def _gotResult(item):
>         def _release(ign):
>             item.release()
>             return item
>
>         d = maybeDeferred(_readItem, item)
>         d.addBoth(_release)
>         d.addCallback(renew)
>         return d
>
>     def _ebNotFound(f):
>         f.trap(NotFound)
>         return None
>
>     return cache.open(key).addCallbacks(_gotResult, _ebNotFound
Thanks, this is what I was looking for
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100826/5891151b/attachment-0001.htm 

From smagafurov at naumen.ru  Thu Aug 26 06:51:21 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Thu, 26 Aug 2010 16:51:21 +0600
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <19574.17828.236399.757022@jon.es>
References: <4C76383B.5080708@naumen.ru>
	<19574.16197.79319.11292@jon.es>	<4C764271.5000001@naumen.ru>
	<19574.17828.236399.757022@jon.es>
Message-ID: <4C764729.2020909@naumen.ru>


> Yes, I was expecting you to wrap item.obsolete() and renew(data) in
> try/except, as needed.  If you want a clean but slightly slower way to do
> that, how about something like:
>
>
> def getCachedResult(cache, key):
>
>      def release(result, item):
>          item.release()
>          return result
>
>      def renew(data):
>          return renew(data)
>
>      def notFound(fail):
>          fail.trap(NotFound)
>
>      def readItem(item):
>          return item.read()
>
>      def checkObsolete(item):
>          d = defer.maybeDeferred(item.obsolete)
>          d.addCallback(lambda _: readItem(item))
>          d.addBoth(release, item)
>          d.addCallback(renew)
>          return d
>
>      d = cache.open(key)
>      d.addCallbacks(checkObsolete, notFound)
>      return d
>
>    
Thanks, maybeDeferred is what I missed :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100826/25e4c987/attachment.htm 

From general at vultaire.net  Thu Aug 26 07:46:59 2010
From: general at vultaire.net (Paul Goins)
Date: Thu, 26 Aug 2010 20:46:59 +0900
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
Message-ID: <4C765433.4010006@vultaire.net>

Hello Shwetanka,

Just looking at this traceback, the error looks like it was raised at 
starpy/fastagi.py:145, and the Deferred in question had its callback 
called at starpy/fastagi.py:120.  Both are starpy code.

I'd suggest asking the starpy people.  This traceback makes it look like 
the error is coming out of their library.

- Paul Goins


On 8/26/2010 5:43 PM, shwetanka srivastava wrote:
> Hi
>
> I'm using twisted api with starpy to make a conference call. After a
> successful call this error is logged in my log file
>
> ERROR:twsited:Unhandled error in Deferred:
> ERROR:twsited:Unhandled Error
> Traceback (most recent call last):
>    File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py",
> line 148, in dataReceived
>      self.lineReceived(line)
>    File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
> 120, in lineReceived
>      df.callback( line )
>    File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
> line 243, in callback
>      self._startRunCallbacks(result)
>    File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
> line 312, in _startRunCallbacks
>      self._runCallbacks()
> --- <exception caught here> ---
>    File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
> line 328, in _runCallbacks
>      self.result = callback(self.result, *args, **kw)
>    File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
> 145, in checkFailure
>      raise error.AGICommandFailure( FAILURE_CODE, result )
> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>
> Calls are perfectly ok. I tried to google about the error and found out
> if I don't provide an errback() to a deferred object then this happens.
> How do i find which deferred object is posing this problem and also
> whether it affects the program execution because my program is working
> absolutely fine.
> --
> Regards
> Shwetanka
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From godson.g at gmail.com  Fri Aug 27 11:20:17 2010
From: godson.g at gmail.com (Godson Gera)
Date: Fri, 27 Aug 2010 20:50:17 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
Message-ID: <AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>

Hi,

This error is obviously raised when the issued command is failed to execute
at Asterisk end. However there could be variety of reasons for failure, one
common cause is call is hungup on which the command is issued.

By looking at the error it occurs that you might be trying to play some
audio file on the call. So check if the file really exists and is in the
format specified by Asterisk 8000Hz mono 16-bit . Looking at the Asterisk
console while this occurs will also give you useful cues.

As Paul mentioned this is really a starpy and Asterisk question, so posting
queries like this on starpy mailing list will get better insights.

-- 
Thanks & Regards,
Godson Gera
Starpy <http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>

On Thu, Aug 26, 2010 at 2:13 PM, shwetanka srivastava
<shwetanka at gmail.com>wrote:

> Hi
>
> I'm using twisted api with starpy to make a conference call. After a
> successful call this error is logged in my log file
>
> ERROR:twsited:Unhandled error in Deferred:
> ERROR:twsited:Unhandled Error
> Traceback (most recent call last):
>   File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
> 148, in dataReceived
>     self.lineReceived(line)
>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
> 120, in lineReceived
>     df.callback( line )
>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
> 243, in callback
>     self._startRunCallbacks(result)
>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
> 312, in _startRunCallbacks
>     self._runCallbacks()
> --- <exception caught here> ---
>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
> 328, in _runCallbacks
>     self.result = callback(self.result, *args, **kw)
>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
> 145, in checkFailure
>     raise error.AGICommandFailure( FAILURE_CODE, result )
> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>
> Calls are perfectly ok. I tried to google about the error and found out if
> I don't provide an errback() to a deferred object then this happens.
> How do i find which deferred object is posing this problem and also whether
> it affects the program execution because my program is working absolutely
> fine.
> --
> Regards
> Shwetanka
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100827/7401e7c1/attachment.htm 

From shwetanka at gmail.com  Fri Aug 27 11:51:11 2010
From: shwetanka at gmail.com (shwetanka srivastava)
Date: Fri, 27 Aug 2010 21:21:11 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
	<AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>
Message-ID: <AANLkTimUNghdZUjgoyy7ish8fFAvxLuTrLHBXONdKCuQ@mail.gmail.com>

Hi

Thanks...
I do am playing an audio file. This error is shown in log file but
everything calling and conferencing is working absolutely fine. I'll post to
starpy mailing list also.

Thanks again for the reply
Regards
Shwetanka

On Fri, Aug 27, 2010 at 8:50 PM, Godson Gera <godson.g at gmail.com> wrote:

> Hi,
>
> This error is obviously raised when the issued command is failed to execute
> at Asterisk end. However there could be variety of reasons for failure, one
> common cause is call is hungup on which the command is issued.
>
> By looking at the error it occurs that you might be trying to play some
> audio file on the call. So check if the file really exists and is in the
> format specified by Asterisk 8000Hz mono 16-bit . Looking at the Asterisk
> console while this occurs will also give you useful cues.
>
> As Paul mentioned this is really a starpy and Asterisk question, so posting
> queries like this on starpy mailing list will get better insights.
>
> --
> Thanks & Regards,
> Godson Gera
> Starpy<http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
>
> On Thu, Aug 26, 2010 at 2:13 PM, shwetanka srivastava <shwetanka at gmail.com
> > wrote:
>
>> Hi
>>
>> I'm using twisted api with starpy to make a conference call. After a
>> successful call this error is logged in my log file
>>
>> ERROR:twsited:Unhandled error in Deferred:
>> ERROR:twsited:Unhandled Error
>> Traceback (most recent call last):
>>   File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
>> 148, in dataReceived
>>     self.lineReceived(line)
>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>> 120, in lineReceived
>>     df.callback( line )
>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>> 243, in callback
>>     self._startRunCallbacks(result)
>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>> 312, in _startRunCallbacks
>>     self._runCallbacks()
>> --- <exception caught here> ---
>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>> 328, in _runCallbacks
>>     self.result = callback(self.result, *args, **kw)
>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>> 145, in checkFailure
>>     raise error.AGICommandFailure( FAILURE_CODE, result )
>> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>>
>> Calls are perfectly ok. I tried to google about the error and found out if
>> I don't provide an errback() to a deferred object then this happens.
>> How do i find which deferred object is posing this problem and also
>> whether it affects the program execution because my program is working
>> absolutely fine.
>> --
>> Regards
>> Shwetanka
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Regards
Shwetanka
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100827/188b60a2/attachment.htm 

From enselic at gmail.com  Sat Aug 28 03:34:24 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 09:34:24 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent socket
 data flow, any clue why?
Message-ID: <4C78BC00.3030807@gmail.com>

Hi

I am getting a weird problem where git cloning with 
reactor.spawnProcess() fails for some repositories. It appears as if 
Twisted blocks reading from the server socket that git packs should come on.

I originally got the problem with buildbot, but I have has isolated the 
problem further to Twisted. The following program can be used to 
reproduce the problem:

  #!/usr/bin/python

  from twisted.internet import reactor, protocol

  class ProcessPrinter(protocol.ProcessProtocol):
      def connectionMade(self):
          print "::connectionMade"

      def outReceived(self, data):
          print "::outReceived"
          print data

      def errReceived(self, data):
          print "::errReceived"
          print data

      def processEnded(self, status_object):
          print "::processEnded"
          print "exit code %d" % status_object.value.exitCode
          reactor.stop()

  def spawn_after_run():
      argv = ['/usr/bin/git', 'clone', 'git://git.gnome.org/gimp']
      reactor.spawnProcess(ProcessPrinter(), argv[0], argv)

  reactor.callLater(0, spawn_after_run);
  reactor.run();

If a debugger is attached to the spawned git process, it can be seen 
that the process blocks on read() on the socket that is supposed to be 
fed with git packs from the server.

I have done a tcpdump of the traffic between my computer and the git 
server, and there *is* successful communication going on. More 
specifically, the git client receives the refs the server has, and sends 
the refs it wants, which is acknowledged by the server, but for some 
reason it still eventually blocks on read().

Curiously enough, if the program is changed to clone e.g. 
'git://git.gnome.org/gegl' instead of 'git://git.gnome.org/gimp', it 
works! The GIMP repo is much bigger than the GEGL one, which might be 
the trigger for the bug, but I don't understand why it would matter.

I see this problem on Fedora 13 x86_64, both with the distro version 
Twisted 0.8.2, and with the latest stable release Twisted 10.1.0. My 
personal guess is that it has something to do with how spawnProcess() 
manages the fds or the child process.

Does anyone have any guess of what is going on?
Can you reproduce it on other systems?

Thanks in advance for any input.

Regards,
Martin




From enselic at gmail.com  Sat Aug 28 03:38:14 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 09:38:14 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C78BC00.3030807@gmail.com>
References: <4C78BC00.3030807@gmail.com>
Message-ID: <4C78BCE6.9000802@gmail.com>

On 08/28/2010 09:34 AM, Martin Nordholts wrote:
> I see this problem on Fedora 13 x86_64, both with the distro version
> Twisted 0.8.2

Sorry, that should have been 8.2.0.

  / Martin


From invite+zj4oao24jo_9 at facebookmail.com  Sat Aug 28 04:41:57 2010
From: invite+zj4oao24jo_9 at facebookmail.com (Raja Pavan)
Date: Sat, 28 Aug 2010 01:41:57 -0700
Subject: [Twisted-Python] Check out my photos on Facebook
Message-ID: <0f4af87c2a27f524f2dab57792ea6501@www.facebook.com>

Hi Twisted,

I set up a Facebook profile where I can post my pictures, videos and events and I want to add you as a friend so you can see it. First, you need to join Facebook! Once you join, you can also create your own profile.

Thanks,
Raja

To sign up for Facebook, follow the link below:
http://www.facebook.com/p.php?i=100001226497896&k=Z6E3Y6UYSZW1WKBJPB63QTWTP4D1YU2NUWHSJKQOYW&r

Already have an account? Add this email address to your account:
http://www.facebook.com/n/?merge_accounts.php&e=twisted-python%40twistedmatrix.com&c=46d744b8cb34ab4547db11de9168827d

=======================================
twisted-python at twistedmatrix.com was invited to join Facebook by Raja Pavan. If you do not wish to receive this type of email from Facebook in the future, please follow the link below to unsubscribe.
http://www.facebook.com/o.php?k=da0a54&u=100000673873684&mid=2e2c902G5af338a4bf14G0G8
Facebook, Inc. P.O. Box 10005, Palo Alto, CA 94303

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100828/1e3552aa/attachment.htm 

From enselic at gmail.com  Sat Aug 28 05:31:07 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 11:31:07 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C78BC00.3030807@gmail.com>
References: <4C78BC00.3030807@gmail.com>
Message-ID: <4C78D75B.30408@gmail.com>

On 08/28/2010 09:34 AM, Martin Nordholts wrote:
> Hi
>
> I am getting a weird problem where git cloning with
> reactor.spawnProcess() fails for some repositories. It appears as if
> Twisted blocks reading from the server socket that git packs should come
> on.

Started to debug this myself in Twisted, and it turns out that if I 
disable _setupChild() in twisted.internet.process.Process, the sample 
program that clones GIMP with spawnProcess() works as expected.


--- Twisted-10.1.0-orig/twisted/internet/process.py
+++ Twisted-10.1.0/twisted/internet/process.py
@@ -619,6 +619,9 @@ class Process(_BaseProcess):
                     original.
          """

+        # Don't do this..
+        return
+
          debug = self.debug_child
          if debug:
              errfd = sys.stderr


I'll see if I can pinpoint the bug...

  / Martin


From itamar at itamarst.org  Sat Aug 28 09:32:11 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 28 Aug 2010 09:32:11 -0400
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C78D75B.30408@gmail.com>
References: <4C78BC00.3030807@gmail.com>  <4C78D75B.30408@gmail.com>
Message-ID: <1283002331.1756.2.camel@blake>

On Sat, 2010-08-28 at 11:31 +0200, Martin Nordholts wrote:

> I'll see if I can pinpoint the bug...

If you can reproduce this with a Python program you launch, rather than
git, that would be ideal.

I assume you've tested this by running git without twisted, on the
command-line, just to make sure the problem doesn't occur there?



From enselic at gmail.com  Sat Aug 28 10:06:48 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 16:06:48 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <1283002331.1756.2.camel@blake>
References: <4C78BC00.3030807@gmail.com> <4C78D75B.30408@gmail.com>
	<1283002331.1756.2.camel@blake>
Message-ID: <4C7917F8.1060201@gmail.com>

On 08/28/2010 03:32 PM, Itamar Turner-Trauring wrote:
> On Sat, 2010-08-28 at 11:31 +0200, Martin Nordholts wrote:
>
>> I'll see if I can pinpoint the bug...
>
> If you can reproduce this with a Python program you launch, rather than
> git, that would be ideal.
>
> I assume you've tested this by running git without twisted, on the
> command-line, just to make sure the problem doesn't occur there?

Yes, I can clone fine if I don't use Twisted, and I think it worked fine 
to clone with Twisted when I ran git-daemon myself. It when cloning from 
a local repo copy with file:// in Twisted instead of from 
git://git.gnome.org.

Just out of curiosity, can you reproduce the problem on your machine? 
Does my test-program ever return for you?

  / Martin


From pm-twisted-python at anapol.cz  Sat Aug 28 11:02:20 2010
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Sat, 28 Aug 2010 17:02:20 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C7917F8.1060201@gmail.com>
References: <4C78BC00.3030807@gmail.com>
	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>
	<4C7917F8.1060201@gmail.com>
Message-ID: <4C7924FC.4060709@anapol.cz>

Hi Martin,

I tried your code just for the curiosity and it seems to work here. Are 
you sure it doesn't work? Cloning the Gimp repository takes ages here 
(half an hour - well, for a ~200MB compressed repository it isn't that 
bad given my connection speed now), but it eventually finishes. The 
error output handling behaves somewhat weird, but definitely Twisted 
doesn't seem to "block" git from doing it's job, at least not here.

See the output of your script here: http://paste.org/21833

Tested on Python 2.6.1/Twisted 8.2.0/OSX 10.6.

Cheers,
Petr

Martin Nordholts wrote:
> On 08/28/2010 03:32 PM, Itamar Turner-Trauring wrote:
>   
>> On Sat, 2010-08-28 at 11:31 +0200, Martin Nordholts wrote:
>>
>>     
>>> I'll see if I can pinpoint the bug...
>>>       
>> If you can reproduce this with a Python program you launch, rather than
>> git, that would be ideal.
>>
>> I assume you've tested this by running git without twisted, on the
>> command-line, just to make sure the problem doesn't occur there?
>>     
>
> Yes, I can clone fine if I don't use Twisted, and I think it worked fine 
> to clone with Twisted when I ran git-daemon myself. It when cloning from 
> a local repo copy with file:// in Twisted instead of from 
> git://git.gnome.org.
>
> Just out of curiosity, can you reproduce the problem on your machine? 
> Does my test-program ever return for you?
>
>   / Martin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   


From exarkun at twistedmatrix.com  Sat Aug 28 11:18:28 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 28 Aug 2010 15:18:28 -0000
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
	socket	data flow, any clue why?
In-Reply-To: <4C78BC00.3030807@gmail.com>
References: <4C78BC00.3030807@gmail.com>
Message-ID: <20100828151828.2058.686572818.divmod.xquotient.165@localhost.localdomain>

On 07:34 am, enselic at gmail.com wrote:
>Hi
>
>I am getting a weird problem where git cloning with
>reactor.spawnProcess() fails for some repositories. It appears as if
>Twisted blocks reading from the server socket that git packs should 
>come on.
>
>I originally got the problem with buildbot, but I have has isolated the
>problem further to Twisted. The following program can be used to
>reproduce the problem:
>
>[snip]
>
>I see this problem on Fedora 13 x86_64, both with the distro version
>Twisted 0.8.2, and with the latest stable release Twisted 10.1.0. My
>personal guess is that it has something to do with how spawnProcess()
>manages the fds or the child process.
>
>Does anyone have any guess of what is going on?
>Can you reproduce it on other systems?
>
>Thanks in advance for any input.

The git process gets all the way through the gimp checkout on my system, 
Ubuntu 9.10, with either Twisted 8.2.0 or current trunk at HEAD.

Jean-Paul


From enselic at gmail.com  Sat Aug 28 11:36:26 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 17:36:26 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C7924FC.4060709@anapol.cz>
References: <4C78BC00.3030807@gmail.com>	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>	<4C7917F8.1060201@gmail.com>
	<4C7924FC.4060709@anapol.cz>
Message-ID: <4C792CFA.1080509@gmail.com>

On 08/28/2010 05:02 PM, Petr Mifek wrote:
> Hi Martin,
>
> I tried your code just for the curiosity and it seems to work here. Are
> you sure it doesn't work?

Hi,

Thanks for testing the code. Interesting that it works for you. I hope 
we can understand why when we've found out why the bug is happening for 
me in the first place.

Yes I'm sure it doesn't work :) During my debugging now, the lack of 
heavy incoming network traffic shows early on if things works as they 
should. I've also inspected the process with GNU gdb and seen that the 
process makes no progress, and buildbot builds for GIMP times out on the 
git build step.

Regards,
Martin


From pm-twisted-python at anapol.cz  Sat Aug 28 12:00:16 2010
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Sat, 28 Aug 2010 18:00:16 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C792CFA.1080509@gmail.com>
References: <4C78BC00.3030807@gmail.com>	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>	<4C7917F8.1060201@gmail.com>	<4C7924FC.4060709@anapol.cz>
	<4C792CFA.1080509@gmail.com>
Message-ID: <4C793290.2060208@anapol.cz>

Interesting. Also you can check this file (given you started the clone 
on a directory with the sample script where no "gimp" subdir exists)

ls -l ./gimp/.git/objects/pack/tmp_pack_*

There should be one such file and it should grow up to ~175MB during the 
cloning.

BTW your git version? Here it is:

$ git --version
git version 1.7.0.3

Petr

Martin Nordholts wrote:
> On 08/28/2010 05:02 PM, Petr Mifek wrote:
>   
>> Hi Martin,
>>
>> I tried your code just for the curiosity and it seems to work here. Are
>> you sure it doesn't work?
>>     
>
> Hi,
>
> Thanks for testing the code. Interesting that it works for you. I hope 
> we can understand why when we've found out why the bug is happening for 
> me in the first place.
>
> Yes I'm sure it doesn't work :) During my debugging now, the lack of 
> heavy incoming network traffic shows early on if things works as they 
> should. I've also inspected the process with GNU gdb and seen that the 
> process makes no progress, and buildbot builds for GIMP times out on the 
> git build step.
>
> Regards,
> Martin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   


From enselic at gmail.com  Sat Aug 28 12:14:37 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 18:14:37 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C793290.2060208@anapol.cz>
References: <4C78BC00.3030807@gmail.com>	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>	<4C7917F8.1060201@gmail.com>	<4C7924FC.4060709@anapol.cz>	<4C792CFA.1080509@gmail.com>
	<4C793290.2060208@anapol.cz>
Message-ID: <4C7935ED.6060301@gmail.com>

On 08/28/2010 06:00 PM, Petr Mifek wrote:
> Interesting. Also you can check this file (given you started the clone
> on a directory with the sample script where no "gimp" subdir exists)
>
> ls -l ./gimp/.git/objects/pack/tmp_pack_*
>
> There should be one such file and it should grow up to ~175MB during the
> cloning.
>
> BTW your git version? Here it is:
>
> $ git --version
> git version 1.7.0.3

I never get any gimp dir created at all, presumably because it never 
gets any data to put in the dir. I guess git doesn't create the dir 
until it has things to put there.

I have git version 1.7.2.2

  / Martin


From pm-twisted-python at anapol.cz  Sat Aug 28 12:54:12 2010
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Sat, 28 Aug 2010 18:54:12 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C7935ED.6060301@gmail.com>
References: <4C78BC00.3030807@gmail.com>	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>	<4C7917F8.1060201@gmail.com>	<4C7924FC.4060709@anapol.cz>	<4C792CFA.1080509@gmail.com>	<4C793290.2060208@anapol.cz>
	<4C7935ED.6060301@gmail.com>
Message-ID: <4C793F34.4080609@anapol.cz>

Yes, here when git does connect but receives nothing, it doesn't make 
the directory. So your the sample script hangs at you with only

::connectionMade

in output? Does suppressing the git's output to stderr help? (a -q 
modifier to git clone)?

Petr

Martin Nordholts wrote:
> On 08/28/2010 06:00 PM, Petr Mifek wrote:
>   
>> Interesting. Also you can check this file (given you started the clone
>> on a directory with the sample script where no "gimp" subdir exists)
>>
>> ls -l ./gimp/.git/objects/pack/tmp_pack_*
>>
>> There should be one such file and it should grow up to ~175MB during the
>> cloning.
>>
>> BTW your git version? Here it is:
>>
>> $ git --version
>> git version 1.7.0.3
>>     
>
> I never get any gimp dir created at all, presumably because it never 
> gets any data to put in the dir. I guess git doesn't create the dir 
> until it has things to put there.
>
> I have git version 1.7.2.2
>
>   / Martin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   


From enselic at gmail.com  Sat Aug 28 13:15:10 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 19:15:10 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C793F34.4080609@anapol.cz>
References: <4C78BC00.3030807@gmail.com>	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>	<4C7917F8.1060201@gmail.com>	<4C7924FC.4060709@anapol.cz>	<4C792CFA.1080509@gmail.com>	<4C793290.2060208@anapol.cz>	<4C7935ED.6060301@gmail.com>
	<4C793F34.4080609@anapol.cz>
Message-ID: <4C79441E.40009@gmail.com>

On 08/28/2010 06:54 PM, Petr Mifek wrote:
> Yes, here when git does connect but receives nothing, it doesn't make
> the directory. So your the sample script hangs at you with only
>
> ::connectionMade
>
> in output? Does suppressing the git's output to stderr help? (a -q
> modifier to git clone)?

No I get more output than that, I get:


martin at ltop:~/source/temp$ ./git-clone-gimp.py
childFDs {0: 'w', 1: 'r', 2: 'r'}
[0] w
readFD=7, writeFD=8
[1] r
readFD=9, writeFD=10
[2] r
readFD=11, writeFD=14
fdmap {0: 7, 1: 10, 2: 14}
helpers {0: 8, 1: 9, 2: 11}
::connectionMade
starting _setupChild
fdmap {0: 7, 1: 10, 2: 14}
os.dup2(7,0)
os.dup2(10,1)
os.dup2(14,2)
::errReceived
old [7, 10, 14]

::outReceived
Cloning into gimp...


A -q argument did, as expected, not help.

  / Martin


From tomfmason at gmail.com  Sat Aug 28 14:37:01 2010
From: tomfmason at gmail.com (Thomas Johnson)
Date: Sat, 28 Aug 2010 13:37:01 -0500
Subject: [Twisted-Python] spawn wsgi resource into separate process
Message-ID: <AANLkTinDHe1Gdxw8ixp+-xwTxfTUG=Pt25AALC-JRdrn@mail.gmail.com>

In the following code I am attempting to host several django applications in
vhosts - http://pastie.org/1122806 . This code works fine if I only need one
settings module. In my case each vhost needs it's own(lines 32-38)
DJANGO_SETTINGS_MODULE environment variable. It appears that I need to use
reactor.spawnProcess to spawn a new process with the required environment
variable.

Can anyone give me a few suggestions as to how to accomplish this task?

I think that it involves writing a custom protocol that would communicate
with the wsgi process but there may be better options available. Any
suggestions would be greatly appreciated.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100828/8b3dd971/attachment.htm 

From jaroslaw.fedewicz at gmail.com  Sat Aug 28 17:49:52 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Sun, 29 Aug 2010 00:49:52 +0300
Subject: [Twisted-Python] spawn wsgi resource into separate process
In-Reply-To: <AANLkTinDHe1Gdxw8ixp+-xwTxfTUG=Pt25AALC-JRdrn@mail.gmail.com>
References: <AANLkTinDHe1Gdxw8ixp+-xwTxfTUG=Pt25AALC-JRdrn@mail.gmail.com>
Message-ID: <AANLkTimutQdFNNt89Yb4ddP1cT3ivV1VVGJXC_TNWcCC@mail.gmail.com>

On Sat, Aug 28, 2010 at 9:37 PM, Thomas Johnson <tomfmason at gmail.com> wrote:
>
> In the following code I am attempting to host several django applications in vhosts -?http://pastie.org/1122806?. This code works fine if I only need one settings module. In my case each vhost needs it's own(lines 32-38) DJANGO_SETTINGS_MODULE?environment?variable. It appears that I need to use reactor.spawnProcess to spawn a new process with the required environment variable.

I have run into a similar problem before. But did you know that any
dict to be treated as the environment can be passed as the first
argument to WSGIHandler()? That's exactly what helped me.


--
Engineer : How do I do it?
Economist : How much will it cost?
Twisted Developer: But does it block?


From exarkun at twistedmatrix.com  Sun Aug 29 00:05:31 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Aug 2010 04:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1283054731.87.1678171904@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100829/6bfbd57d/attachment.htm 

From superdupont at gmail.com  Sun Aug 29 03:55:56 2010
From: superdupont at gmail.com (Carlos Valiente)
Date: Sun, 29 Aug 2010 08:55:56 +0100
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C79441E.40009@gmail.com>
References: <4C78BC00.3030807@gmail.com> <4C78D75B.30408@gmail.com>
	<1283002331.1756.2.camel@blake> <4C7917F8.1060201@gmail.com>
	<4C7924FC.4060709@anapol.cz> <4C792CFA.1080509@gmail.com>
	<4C793290.2060208@anapol.cz> <4C7935ED.6060301@gmail.com>
	<4C793F34.4080609@anapol.cz> <4C79441E.40009@gmail.com>
Message-ID: <AANLkTikHubBmBerCzhMkH=RrghkxsTn5NDGEC9x_P01e@mail.gmail.com>

Does 'tcpdump' show any git activity when you run your program,
Martin? Once I had a problem like yours, and in my case it was caused
by git not using the HTTP proxy within my company's LAN.

C


From itamar at itamarst.org  Sun Aug 29 10:01:26 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 29 Aug 2010 10:01:26 -0400
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <AANLkTikHubBmBerCzhMkH=RrghkxsTn5NDGEC9x_P01e@mail.gmail.com>
References: <4C78BC00.3030807@gmail.com> <4C78D75B.30408@gmail.com>
	<1283002331.1756.2.camel@blake> <4C7917F8.1060201@gmail.com>
	<4C7924FC.4060709@anapol.cz> <4C792CFA.1080509@gmail.com>
	<4C793290.2060208@anapol.cz> <4C7935ED.6060301@gmail.com>
	<4C793F34.4080609@anapol.cz> <4C79441E.40009@gmail.com>
	<AANLkTikHubBmBerCzhMkH=RrghkxsTn5NDGEC9x_P01e@mail.gmail.com>
Message-ID: <1283090486.1795.0.camel@blake>

On Sun, 2010-08-29 at 08:55 +0100, Carlos Valiente wrote:
> Does 'tcpdump' show any git activity when you run your program,
> Martin? Once I had a problem like yours, and in my case it was caused
> by git not using the HTTP proxy within my company's LAN.

I notice the original code doesn't pass os.environ to the sub-process...
maybe doing so would help?



From tomfmason at gmail.com  Sun Aug 29 15:41:56 2010
From: tomfmason at gmail.com (Thomas Johnson)
Date: Sun, 29 Aug 2010 14:41:56 -0500
Subject: [Twisted-Python] spawn wsgi resource into separate process
In-Reply-To: <AANLkTimutQdFNNt89Yb4ddP1cT3ivV1VVGJXC_TNWcCC@mail.gmail.com>
References: <AANLkTinDHe1Gdxw8ixp+-xwTxfTUG=Pt25AALC-JRdrn@mail.gmail.com>
	<AANLkTimutQdFNNt89Yb4ddP1cT3ivV1VVGJXC_TNWcCC@mail.gmail.com>
Message-ID: <AANLkTikjz6VVS+sF9ey+aAOb-_TUHb0YH2D=Eo8db8fo@mail.gmail.com>

>
>
> I have run into a similar problem before. But did you know that any
> dict to be treated as the environment can be passed as the first
> argument to WSGIHandler()? That's exactly what helped me.


I have tried several different methods and game up with mixed results. I
have tried overriding the __call__ method in the WSGIHandler and it appears
to have the same results(same settings file being used).

How where you able to accomplish this task?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100829/71b2245d/attachment.htm 

From shwetanka at gmail.com  Mon Aug 30 01:42:36 2010
From: shwetanka at gmail.com (shwetanka srivastava)
Date: Mon, 30 Aug 2010 11:12:36 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTimUNghdZUjgoyy7ish8fFAvxLuTrLHBXONdKCuQ@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
	<AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>
	<AANLkTimUNghdZUjgoyy7ish8fFAvxLuTrLHBXONdKCuQ@mail.gmail.com>
Message-ID: <AANLkTi=PQVWmSeGOnUXo7vROSLOXMcCkxK8NQBcqJ5Zb@mail.gmail.com>

Hi

Actually I'm playing the file but even before it is completed I'm connecting
to another number and this is why Fastagi is sending an error. How can I add
errBack() to it. Like if playing of file is interrupted it should notify
somehow.
Thanks

Regards
Shwetanka

On Fri, Aug 27, 2010 at 9:21 PM, shwetanka srivastava
<shwetanka at gmail.com>wrote:

> Hi
>
> Thanks...
> I do am playing an audio file. This error is shown in log file but
> everything calling and conferencing is working absolutely fine. I'll post to
> starpy mailing list also.
>
> Thanks again for the reply
> Regards
> Shwetanka
>
> On Fri, Aug 27, 2010 at 8:50 PM, Godson Gera <godson.g at gmail.com> wrote:
>
>> Hi,
>>
>> This error is obviously raised when the issued command is failed to
>> execute at Asterisk end. However there could be variety of reasons for
>> failure, one common cause is call is hungup on which the command is issued.
>>
>> By looking at the error it occurs that you might be trying to play some
>> audio file on the call. So check if the file really exists and is in the
>> format specified by Asterisk 8000Hz mono 16-bit . Looking at the Asterisk
>> console while this occurs will also give you useful cues.
>>
>> As Paul mentioned this is really a starpy and Asterisk question, so
>> posting queries like this on starpy mailing list will get better insights.
>>
>> --
>> Thanks & Regards,
>> Godson Gera
>> Starpy<http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
>>
>> On Thu, Aug 26, 2010 at 2:13 PM, shwetanka srivastava <
>> shwetanka at gmail.com> wrote:
>>
>>> Hi
>>>
>>> I'm using twisted api with starpy to make a conference call. After a
>>> successful call this error is logged in my log file
>>>
>>> ERROR:twsited:Unhandled error in Deferred:
>>> ERROR:twsited:Unhandled Error
>>> Traceback (most recent call last):
>>>   File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py",
>>> line 148, in dataReceived
>>>     self.lineReceived(line)
>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>> 120, in lineReceived
>>>     df.callback( line )
>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>>> 243, in callback
>>>     self._startRunCallbacks(result)
>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>>> 312, in _startRunCallbacks
>>>     self._runCallbacks()
>>> --- <exception caught here> ---
>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>>> 328, in _runCallbacks
>>>     self.result = callback(self.result, *args, **kw)
>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>> 145, in checkFailure
>>>     raise error.AGICommandFailure( FAILURE_CODE, result )
>>> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>>>
>>> Calls are perfectly ok. I tried to google about the error and found out
>>> if I don't provide an errback() to a deferred object then this happens.
>>> How do i find which deferred object is posing this problem and also
>>> whether it affects the program execution because my program is working
>>> absolutely fine.
>>> --
>>> Regards
>>> Shwetanka
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> --
> Regards
> Shwetanka
>
>


-- 
Regards
Shwetanka
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100830/b8a94ef8/attachment.htm 

From petshmidt at googlemail.com  Mon Aug 30 04:54:11 2010
From: petshmidt at googlemail.com (Pet)
Date: Mon, 30 Aug 2010 10:54:11 +0200
Subject: [Twisted-Python] timeout in agent
Message-ID: <AANLkTikRPthxZp991CQ8M2m4JYTFu8afZftCnF9PBOXB@mail.gmail.com>

Hello!

I have modified Agent.request method (twisted.web.client.Agent) to
pass timeout parameter to
d = cc.connectTCP(host, port, timeout=timeout)

but it looks like timeout is ignored (cbConnected is called). Is this
known issue?

Thanks!


From godson.g at gmail.com  Mon Aug 30 05:30:10 2010
From: godson.g at gmail.com (Godson Gera)
Date: Mon, 30 Aug 2010 15:00:10 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTi=PQVWmSeGOnUXo7vROSLOXMcCkxK8NQBcqJ5Zb@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
	<AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>
	<AANLkTimUNghdZUjgoyy7ish8fFAvxLuTrLHBXONdKCuQ@mail.gmail.com>
	<AANLkTi=PQVWmSeGOnUXo7vROSLOXMcCkxK8NQBcqJ5Zb@mail.gmail.com>
Message-ID: <AANLkTi=GyyZnVNLrjSrsEv7DLVV40Bg+yrbyBOpyVDQC@mail.gmail.com>

Hi

All the starpy API calls return a deferred object. Adding an errback is just
like adding errback to any other deferred.

df = agi.streamFile("somefile")
df.addCallback(yourcallback)
df.addErrback(yourerrback)

It is no different from a deferred so it supports all the methods that a
normal twisted deferred object supports.

http://twistedmatrix.com/documents/10.0.0/api/twisted.internet.defer.Deferred.html

-- 
Thanks & Regards,
Godson Gera
Starpy <http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
FreeSWITCH Consulting <http://godson.in/freeswitch-radius-integration>

On Mon, Aug 30, 2010 at 11:12 AM, shwetanka srivastava
<shwetanka at gmail.com>wrote:

> Hi
>
> Actually I'm playing the file but even before it is completed I'm
> connecting to another number and this is why Fastagi is sending an error.
> How can I add errBack() to it. Like if playing of file is interrupted it
> should notify somehow.
> Thanks
>
> Regards
> Shwetanka
>
>
> On Fri, Aug 27, 2010 at 9:21 PM, shwetanka srivastava <shwetanka at gmail.com
> > wrote:
>
>> Hi
>>
>> Thanks...
>> I do am playing an audio file. This error is shown in log file but
>> everything calling and conferencing is working absolutely fine. I'll post to
>> starpy mailing list also.
>>
>> Thanks again for the reply
>> Regards
>> Shwetanka
>>
>> On Fri, Aug 27, 2010 at 8:50 PM, Godson Gera <godson.g at gmail.com> wrote:
>>
>>> Hi,
>>>
>>> This error is obviously raised when the issued command is failed to
>>> execute at Asterisk end. However there could be variety of reasons for
>>> failure, one common cause is call is hungup on which the command is issued.
>>>
>>> By looking at the error it occurs that you might be trying to play some
>>> audio file on the call. So check if the file really exists and is in the
>>> format specified by Asterisk 8000Hz mono 16-bit . Looking at the Asterisk
>>> console while this occurs will also give you useful cues.
>>>
>>> As Paul mentioned this is really a starpy and Asterisk question, so
>>> posting queries like this on starpy mailing list will get better insights.
>>>
>>> --
>>> Thanks & Regards,
>>> Godson Gera
>>> Starpy<http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
>>>
>>> On Thu, Aug 26, 2010 at 2:13 PM, shwetanka srivastava <
>>> shwetanka at gmail.com> wrote:
>>>
>>>> Hi
>>>>
>>>> I'm using twisted api with starpy to make a conference call. After a
>>>> successful call this error is logged in my log file
>>>>
>>>> ERROR:twsited:Unhandled error in Deferred:
>>>> ERROR:twsited:Unhandled Error
>>>> Traceback (most recent call last):
>>>>   File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py",
>>>> line 148, in dataReceived
>>>>     self.lineReceived(line)
>>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>>> 120, in lineReceived
>>>>     df.callback( line )
>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>> line 243, in callback
>>>>     self._startRunCallbacks(result)
>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>> line 312, in _startRunCallbacks
>>>>     self._runCallbacks()
>>>> --- <exception caught here> ---
>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>> line 328, in _runCallbacks
>>>>     self.result = callback(self.result, *args, **kw)
>>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>>> 145, in checkFailure
>>>>     raise error.AGICommandFailure( FAILURE_CODE, result )
>>>> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>>>>
>>>> Calls are perfectly ok. I tried to google about the error and found out
>>>> if I don't provide an errback() to a deferred object then this happens.
>>>> How do i find which deferred object is posing this problem and also
>>>> whether it affects the program execution because my program is working
>>>> absolutely fine.
>>>> --
>>>> Regards
>>>> Shwetanka
>>>>
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>>
>> --
>> Regards
>> Shwetanka
>>
>>
>
>
> --
> Regards
> Shwetanka
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100830/a8cc2ec2/attachment-0001.htm 

From shwetanka at gmail.com  Mon Aug 30 07:02:20 2010
From: shwetanka at gmail.com (shwetanka srivastava)
Date: Mon, 30 Aug 2010 16:32:20 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTi=GyyZnVNLrjSrsEv7DLVV40Bg+yrbyBOpyVDQC@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
	<AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>
	<AANLkTimUNghdZUjgoyy7ish8fFAvxLuTrLHBXONdKCuQ@mail.gmail.com>
	<AANLkTi=PQVWmSeGOnUXo7vROSLOXMcCkxK8NQBcqJ5Zb@mail.gmail.com>
	<AANLkTi=GyyZnVNLrjSrsEv7DLVV40Bg+yrbyBOpyVDQC@mail.gmail.com>
Message-ID: <AANLkTi=Y_=iOUVyhX29Nz1pQT73ei5MduDQGpxQefn-5@mail.gmail.com>

Hi

Thank you very much. After adding the errBack() code is working fine and
there is no error entry in the log.

Regards
Shwetanka

On Mon, Aug 30, 2010 at 3:00 PM, Godson Gera <godson.g at gmail.com> wrote:

> Hi
>
> All the starpy API calls return a deferred object. Adding an errback is
> just like adding errback to any other deferred.
>
> df = agi.streamFile("somefile")
> df.addCallback(yourcallback)
> df.addErrback(yourerrback)
>
> It is no different from a deferred so it supports all the methods that a
> normal twisted deferred object supports.
>
>
> http://twistedmatrix.com/documents/10.0.0/api/twisted.internet.defer.Deferred.html
>
> --
> Thanks & Regards,
> Godson Gera
> Starpy<http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
> FreeSWITCH Consulting <http://godson.in/freeswitch-radius-integration>
>
> On Mon, Aug 30, 2010 at 11:12 AM, shwetanka srivastava <
> shwetanka at gmail.com> wrote:
>
>> Hi
>>
>> Actually I'm playing the file but even before it is completed I'm
>> connecting to another number and this is why Fastagi is sending an error.
>> How can I add errBack() to it. Like if playing of file is interrupted it
>> should notify somehow.
>> Thanks
>>
>> Regards
>> Shwetanka
>>
>>
>> On Fri, Aug 27, 2010 at 9:21 PM, shwetanka srivastava <
>> shwetanka at gmail.com> wrote:
>>
>>> Hi
>>>
>>> Thanks...
>>> I do am playing an audio file. This error is shown in log file but
>>> everything calling and conferencing is working absolutely fine. I'll post to
>>> starpy mailing list also.
>>>
>>> Thanks again for the reply
>>> Regards
>>> Shwetanka
>>>
>>> On Fri, Aug 27, 2010 at 8:50 PM, Godson Gera <godson.g at gmail.com> wrote:
>>>
>>>> Hi,
>>>>
>>>> This error is obviously raised when the issued command is failed to
>>>> execute at Asterisk end. However there could be variety of reasons for
>>>> failure, one common cause is call is hungup on which the command is issued.
>>>>
>>>> By looking at the error it occurs that you might be trying to play some
>>>> audio file on the call. So check if the file really exists and is in the
>>>> format specified by Asterisk 8000Hz mono 16-bit . Looking at the Asterisk
>>>> console while this occurs will also give you useful cues.
>>>>
>>>> As Paul mentioned this is really a starpy and Asterisk question, so
>>>> posting queries like this on starpy mailing list will get better insights.
>>>>
>>>> --
>>>> Thanks & Regards,
>>>> Godson Gera
>>>> Starpy<http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
>>>>
>>>> On Thu, Aug 26, 2010 at 2:13 PM, shwetanka srivastava <
>>>> shwetanka at gmail.com> wrote:
>>>>
>>>>> Hi
>>>>>
>>>>> I'm using twisted api with starpy to make a conference call. After a
>>>>> successful call this error is logged in my log file
>>>>>
>>>>> ERROR:twsited:Unhandled error in Deferred:
>>>>> ERROR:twsited:Unhandled Error
>>>>> Traceback (most recent call last):
>>>>>   File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py",
>>>>> line 148, in dataReceived
>>>>>     self.lineReceived(line)
>>>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>>>> 120, in lineReceived
>>>>>     df.callback( line )
>>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>>> line 243, in callback
>>>>>     self._startRunCallbacks(result)
>>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>>> line 312, in _startRunCallbacks
>>>>>     self._runCallbacks()
>>>>> --- <exception caught here> ---
>>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>>> line 328, in _runCallbacks
>>>>>     self.result = callback(self.result, *args, **kw)
>>>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>>>> 145, in checkFailure
>>>>>     raise error.AGICommandFailure( FAILURE_CODE, result )
>>>>> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>>>>>
>>>>> Calls are perfectly ok. I tried to google about the error and found out
>>>>> if I don't provide an errback() to a deferred object then this happens.
>>>>> How do i find which deferred object is posing this problem and also
>>>>> whether it affects the program execution because my program is working
>>>>> absolutely fine.
>>>>> --
>>>>> Regards
>>>>> Shwetanka
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Twisted-Python mailing list
>>>>> Twisted-Python at twistedmatrix.com
>>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>>
>>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>>
>>>
>>> --
>>> Regards
>>> Shwetanka
>>>
>>>
>>
>>
>> --
>> Regards
>> Shwetanka
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Regards
Shwetanka
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100830/db318535/attachment.htm 

From itamar at itamarst.org  Mon Aug 30 07:56:07 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 30 Aug 2010 07:56:07 -0400
Subject: [Twisted-Python] timeout in agent
In-Reply-To: <AANLkTikRPthxZp991CQ8M2m4JYTFu8afZftCnF9PBOXB@mail.gmail.com>
References: <AANLkTikRPthxZp991CQ8M2m4JYTFu8afZftCnF9PBOXB@mail.gmail.com>
Message-ID: <1283169367.1582.2.camel@blake>

On Mon, 2010-08-30 at 10:54 +0200, Pet wrote:
> Hello!
> 
> I have modified Agent.request method (twisted.web.client.Agent) to
> pass timeout parameter to
> d = cc.connectTCP(host, port, timeout=timeout)
> 
> but it looks like timeout is ignored (cbConnected is called). Is this
> known issue?

Are you sure the connection happened after the timeout, not before?
Also, keep in mind that the timeout is only on the connection *attempt*,
once you're connected the timeout no longer applies.



From petshmidt at googlemail.com  Mon Aug 30 08:27:12 2010
From: petshmidt at googlemail.com (Pet)
Date: Mon, 30 Aug 2010 14:27:12 +0200
Subject: [Twisted-Python] timeout in agent
In-Reply-To: <1283169367.1582.2.camel@blake>
References: <AANLkTikRPthxZp991CQ8M2m4JYTFu8afZftCnF9PBOXB@mail.gmail.com>
	<1283169367.1582.2.camel@blake>
Message-ID: <AANLkTimQMKPFad1CFrgT0UvhfzoAwfqMnWRH42OiY5bi@mail.gmail.com>

On Mon, Aug 30, 2010 at 1:56 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Mon, 2010-08-30 at 10:54 +0200, Pet wrote:
>> Hello!
>>
>> I have modified Agent.request method (twisted.web.client.Agent) to
>> pass timeout parameter to
>> d = cc.connectTCP(host, port, timeout=timeout)
>>
>> but it looks like timeout is ignored (cbConnected is called). Is this
>> known issue?
>
> Are you sure the connection happened after the timeout, not before?
> Also, keep in mind that the timeout is only on the connection *attempt*,
> once you're connected the timeout no longer applies.

You are right, connection was maid. But the data wasn't there. Does
Twisted wait for data until remote server closes connection?

Thanks!

>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From vic.norman at gmail.com  Mon Aug 30 11:51:05 2010
From: vic.norman at gmail.com (Victor Norman)
Date: Mon, 30 Aug 2010 11:51:05 -0400
Subject: [Twisted-Python] How to package a program that I'm running as
	twistd dmucs.py
Message-ID: <AANLkTim=iJfu9sR0wLJFG736DVBcO45BfS5v6t-6QLwC@mail.gmail.com>

I am nearing the end of developing my application and am thinking about how
to package it up.  I have been testing it by running it this way:

twistd -ny dmucs.py

I was hoping I could just rename my dmucs.py to dmucsd   and then put this
in the first line of the file:

#!/bin/env twistd -ny

(or whatever other args instead of -ny)

But, this isn't working for me.

Can someone recommend the correct way to package up my application so that
it can be run by typing

dmucsd

?

Thanks.

Vic

-- 
?A designer knows he has achieved perfection not when there is nothing left
to add, but when there is nothing left to take away.? -- Antoine de Saint
Exup?ry
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100830/a13ae82d/attachment.htm 

From jasonjwwilliams at gmail.com  Mon Aug 30 11:54:14 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 30 Aug 2010 09:54:14 -0600
Subject: [Twisted-Python] How to package a program that I'm running as
 twistd dmucs.py
In-Reply-To: <AANLkTim=iJfu9sR0wLJFG736DVBcO45BfS5v6t-6QLwC@mail.gmail.com>
References: <AANLkTim=iJfu9sR0wLJFG736DVBcO45BfS5v6t-6QLwC@mail.gmail.com>
Message-ID: <AANLkTi=jE1xpY1KcrQL3Q2i0Qhg6DuZvaprAdxo4kgh0@mail.gmail.com>

I've typically accomplished this with a BASH script packaged with the
app or an init.d script.

-J

On Mon, Aug 30, 2010 at 9:51 AM, Victor Norman <vic.norman at gmail.com> wrote:
> I am nearing the end of developing my application and am thinking about how
> to package it up.? I have been testing it by running it this way:
>
> twistd -ny dmucs.py
>
> I was hoping I could just rename my dmucs.py to dmucsd?? and then put this
> in the first line of the file:
>
> #!/bin/env twistd -ny
>
> (or whatever other args instead of -ny)
>
> But, this isn't working for me.
>
> Can someone recommend the correct way to package up my application so that
> it can be run by typing
>
> dmucsd
>
> ?
>
> Thanks.
>
> Vic
>
> --
> ?A designer knows he has achieved perfection not when there is nothing left
> to add, but when there is nothing left to take away.? -- Antoine de Saint
> Exup?ry
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From glyph at twistedmatrix.com  Mon Aug 30 12:00:59 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Aug 2010 12:00:59 -0400
Subject: [Twisted-Python] How to package a program that I'm running as
	twistd dmucs.py
In-Reply-To: <AANLkTim=iJfu9sR0wLJFG736DVBcO45BfS5v6t-6QLwC@mail.gmail.com>
References: <AANLkTim=iJfu9sR0wLJFG736DVBcO45BfS5v6t-6QLwC@mail.gmail.com>
Message-ID: <0BD75DD0-3938-41F4-9B92-CEA8C824444C@twistedmatrix.com>


On Aug 30, 2010, at 11:51 AM, Victor Norman wrote:

> Can someone recommend the correct way to package up my application so that it can be run by typing 
> 
> dmucsd 
> 
> ?
> 
> Thanks.
> 
> Vic

The best way to do this is to write a twistd plugin (so your script can process its own arguments) and then have a wrapper that loads that plugin via the 'twistd' module and executes it.

See here: <http://divmod.org/trac/browser/trunk/Axiom/axiom/scripts/axiomatic.py>

and here:
<http://divmod.org/trac/browser/trunk/Axiom/twisted/plugins/axiom_plugins.py>

for examples.

From jasonjwwilliams at gmail.com  Tue Aug 31 17:17:48 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 31 Aug 2010 15:17:48 -0600
Subject: [Twisted-Python] adbapi MySQL read/write splitting
Message-ID: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>

Is anyone doing read/write splitting with adbapi? Looking for advice
if anyone has tackled this before. Thank you in advance.

-J


From itamar at itamarst.org  Tue Aug 31 22:32:04 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 31 Aug 2010 22:32:04 -0400
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
Message-ID: <1283308324.1538.0.camel@blake>

On Tue, 2010-08-31 at 15:17 -0600, Jason J. W. Williams wrote:
> Is anyone doing read/write splitting with adbapi? Looking for advice
> if anyone has tackled this before. Thank you in advance.

What is "read/write splitting"?



From jasonjwwilliams at gmail.com  Tue Aug 31 22:36:42 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 31 Aug 2010 20:36:42 -0600
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <1283308324.1538.0.camel@blake>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
Message-ID: <AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>

Sending writes (e.g. INSERTs and UPDATEs) to a master MySQL server and
reads (SELECTs) to a slave.

-J

On Tue, Aug 31, 2010 at 8:32 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Tue, 2010-08-31 at 15:17 -0600, Jason J. W. Williams wrote:
>> Is anyone doing read/write splitting with adbapi? Looking for advice
>> if anyone has tackled this before. Thank you in advance.
>
> What is "read/write splitting"?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From itamar at itamarst.org  Tue Aug 31 22:40:28 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 31 Aug 2010 22:40:28 -0400
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
Message-ID: <1283308828.1538.1.camel@blake>

On Tue, 2010-08-31 at 20:36 -0600, Jason J. W. Williams wrote:
> Sending writes (e.g. INSERTs and UPDATEs) to a master MySQL server and
> reads (SELECTs) to a slave.

So... two adbapi.ConnectionPool instances, one for the server, one for
the slave?



From jasonjwwilliams at gmail.com  Tue Aug 31 22:54:12 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 31 Aug 2010 20:54:12 -0600
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <1283308828.1538.1.camel@blake>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
	<1283308828.1538.1.camel@blake>
Message-ID: <AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>

That's one way of handling it. Another way is to wrap the library so
it does the splitting automatically. The advantage to the latter is
not making mistakes where you accidentally use the READ connection for
a write. For non-async Python there are some tools like SQL Relay
which will do this for you, but you have to setup SQL Relay servers
and use the SQL Relay dbapi driver. MySQL Proxy will also do it, but
it's not very stable.

I was somewhat hoping someone had already written a wrapper for doing
the splitting. Which brings me to a related question...if I were to
write a wrapper to do the splitting, would wrapping MySQLdb be
sufficient? Or would wrapping adbapi be the better path?

-J

On Tue, Aug 31, 2010 at 8:40 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Tue, 2010-08-31 at 20:36 -0600, Jason J. W. Williams wrote:
>> Sending writes (e.g. INSERTs and UPDATEs) to a master MySQL server and
>> reads (SELECTs) to a slave.
>
> So... two adbapi.ConnectionPool instances, one for the server, one for
> the slave?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From adelagon at gmail.com  Tue Aug 31 23:13:00 2010
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 1 Sep 2010 11:13:00 +0800
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
	<1283308828.1538.1.camel@blake>
	<AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
Message-ID: <AANLkTik-bjVS5nXJco8bNR9hWTZW7XDEbWBhT2pkezWC@mail.gmail.com>

Used to wrap MySQLdb for something like except that I did it for sharding.
It worked well on distributing load across multiple database servers. I
think the guys from my former company updated the wrapper to use adbapi.

- Alvin

On Wed, Sep 1, 2010 at 10:54 AM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> That's one way of handling it. Another way is to wrap the library so
> it does the splitting automatically. The advantage to the latter is
> not making mistakes where you accidentally use the READ connection for
> a write. For non-async Python there are some tools like SQL Relay
> which will do this for you, but you have to setup SQL Relay servers
> and use the SQL Relay dbapi driver. MySQL Proxy will also do it, but
> it's not very stable.
>
> I was somewhat hoping someone had already written a wrapper for doing
> the splitting. Which brings me to a related question...if I were to
> write a wrapper to do the splitting, would wrapping MySQLdb be
> sufficient? Or would wrapping adbapi be the better path?
>
> -J
>
> On Tue, Aug 31, 2010 at 8:40 PM, Itamar Turner-Trauring
> <itamar at itamarst.org> wrote:
> > On Tue, 2010-08-31 at 20:36 -0600, Jason J. W. Williams wrote:
> >> Sending writes (e.g. INSERTs and UPDATEs) to a master MySQL server and
> >> reads (SELECTs) to a slave.
> >
> > So... two adbapi.ConnectionPool instances, one for the server, one for
> > the slave?
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100901/3313031c/attachment.htm 

From jasonjwwilliams at gmail.com  Tue Aug 31 23:42:56 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 31 Aug 2010 21:42:56 -0600
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <AANLkTik-bjVS5nXJco8bNR9hWTZW7XDEbWBhT2pkezWC@mail.gmail.com>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
	<1283308828.1538.1.camel@blake>
	<AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
	<AANLkTik-bjVS5nXJco8bNR9hWTZW7XDEbWBhT2pkezWC@mail.gmail.com>
Message-ID: <AANLkTindJM51j5Afw4k+R3xvTdRHL8zLBmyEKGNeFdPQ@mail.gmail.com>

Hey Alvin,

Thank you for the info. Any idea what kind of changes they had to make
to the MySQLdb wrapper for adbapi to like it?

-J

On Tue, Aug 31, 2010 at 9:13 PM, Alvin Delagon <adelagon at gmail.com> wrote:
> Used to wrap MySQLdb for something like except that I did it for sharding.
> It worked well on distributing load across multiple database servers. I
> think the guys from my former company updated the wrapper to use adbapi.
> - Alvin
>
> On Wed, Sep 1, 2010 at 10:54 AM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>>
>> That's one way of handling it. Another way is to wrap the library so
>> it does the splitting automatically. The advantage to the latter is
>> not making mistakes where you accidentally use the READ connection for
>> a write. For non-async Python there are some tools like SQL Relay
>> which will do this for you, but you have to setup SQL Relay servers
>> and use the SQL Relay dbapi driver. MySQL Proxy will also do it, but
>> it's not very stable.
>>
>> I was somewhat hoping someone had already written a wrapper for doing
>> the splitting. Which brings me to a related question...if I were to
>> write a wrapper to do the splitting, would wrapping MySQLdb be
>> sufficient? Or would wrapping adbapi be the better path?
>>
>> -J
>>
>> On Tue, Aug 31, 2010 at 8:40 PM, Itamar Turner-Trauring
>> <itamar at itamarst.org> wrote:
>> > On Tue, 2010-08-31 at 20:36 -0600, Jason J. W. Williams wrote:
>> >> Sending writes (e.g. INSERTs and UPDATEs) to a master MySQL server and
>> >> reads (SELECTs) to a slave.
>> >
>> > So... two adbapi.ConnectionPool instances, one for the server, one for
>> > the slave?
>> >
>> >
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> >
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> --
> http://www.alvinatorsplayground.blogspot.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From jasonjwwilliams at gmail.com  Mon Aug  2 00:08:13 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 2 Aug 2010 00:08:13 -0600
Subject: [Twisted-Python] OpenStack uses Twisted
In-Reply-To: <AANLkTimguv5Sz7VvsPud=ZRCLQJRreJu-W-LW65PWCtZ@mail.gmail.com>
References: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>
	<8E5F8ACC-2715-464D-A69D-8FC9FC66E0CD@gmail.com>
	<AANLkTimguv5Sz7VvsPud=ZRCLQJRreJu-W-LW65PWCtZ@mail.gmail.com>
Message-ID: <C1363B3D-0A56-4055-A73F-C1022EA2B19B@gmail.com>

I wonder if anyone on this list has a copy? :)

Sent via iPhone

Is your e-mail Premiere?

On Jul 31, 2010, at 23:24, Alvin Wang <alvinwang at gmail.com> wrote:

> I went to a live Presentation at the cloudkick HQ last Thursday.
> http://www.meetup.com/openstack/
> 
> If you are in the SF Bay Area, they are going to have a tour of NASA before the next meeting.
> 
> Alvin
> 
> On Sat, Jul 31, 2010 at 2:51 PM, Jason J. W. Williams <jasonjwwilliams at gmail.com> wrote:
> Hey Alvin,
> 
> Where on the launchpad did you find the preso?
> 
> -J
> 
> Sent via iPhone
> 
> Is your e-mail Premiere?
> 
> On Jul 30, 2010, at 22:56, Alvin Wang <alvinwang at gmail.com> wrote:
> 
>> FYI - I went to a presentation on Nova/OpenStack
>> https://launchpad.net/nova
>> 
>> They use Twisted and they are planning on taking out Tornado.  You can run your own amazon using Twisted.
>> _______________________________________________
>> 
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100802/0dac729c/attachment-0001.html>

From ssoni at nextdigital.com  Tue Aug  3 20:20:55 2010
From: ssoni at nextdigital.com (Sury Soni)
Date: Wed, 4 Aug 2010 02:20:55 +0000
Subject: [Twisted-Python] Cred question
Message-ID: <6CD03B2AA6AE4747BAF3A0D5EEEF728606EF7D@exmbx01.corp.nextdigital.com>

Hi,

I am using Cred authentication system in my Nevow based web application.

Admin user can see list of all users from admin interface of the application.

Now, admin user wants to do following things:

1.       Automatically login as other user

2.       Induce logout to already logged in user.

Q1. Since, admin user itself used cred authentication to login in first place, how do we do automatic login as different user programmatically or logout already logged in other user?

I tried to redirect my application to /__login__/?username=otherusername&password=itspassword and it went through Cred system, but I believe, since previous session was active as well, it triggered logout.

Q2. Does cred allow multiple login sessions in same browser? So, that admin user can maintain its own session and login into other user as well.

Please advice.

Regards,

Sury
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100804/4763d36c/attachment-0001.html>

From petshmidt at googlemail.com  Wed Aug  4 04:00:16 2010
From: petshmidt at googlemail.com (Pet)
Date: Wed, 4 Aug 2010 12:00:16 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
Message-ID: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>

Hello,

I've started learning twisted by implementing linereceiver, where for
each new connection a new instance of MyProtocol is created:

class MyFactory(protocol.ServerFactory):
    protocol = MyProtocol
    def __init__(self):
        self.db = adbapi.ConnectionPool()

class MyService(internet.TCPServer):
    def __init__(self):
        print "Starting Service..."
        internet.TCPServer.__init__(self, PORT, MyFactory())

def main():
    reactor.listenTCP(settings.PORT, MyFactory())
    reactor.run()

if __name__ == '__main__':
    main()


Now, for XMLRPC this looks for me like Protocol instance is reused for
all connection. If it is so, can I change this behavior, so I have one
instance of Protocol per connection?
Thanks for help!
Pet



class MyXMLRPCFactory(server.Site):
    def __init__(self):
        self.db = adbapi.ConnectionPool()
        self.r = MyXMLRPCProtokoll(self)
        server.Site.__init__(self,self.r)

class MyXMLRPCService(internet.TCPServer):
   def __init__(self):
       internet.TCPServer.__init__(self, settings.XMLRPC_PORT,
MyXMLRPCFactory())

def main():
   from twisted.internet import reactor
   r = MyXMLRPCProtokoll()
   reactor.listenTCP(settings.XMLRPC_PORT, server.Site(r))
   reactor.run()

if __name__ == '__main__':
   main()



From mailing at franzoni.eu  Wed Aug  4 04:25:08 2010
From: mailing at franzoni.eu (Alan Franzoni)
Date: Wed, 04 Aug 2010 12:25:08 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
Message-ID: <i3bf64$lkn$1@dough.gmane.org>

Just ovverride the "protocol" attribute on your factory with the
callable you want to be called when a new protocol needs to be
instanced. I'd suppose you'd probably want to subclass HTTPChannel or
something like that.







From petshmidt at googlemail.com  Wed Aug  4 05:30:26 2010
From: petshmidt at googlemail.com (Pet)
Date: Wed, 4 Aug 2010 13:30:26 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <i3bf64$lkn$1@dough.gmane.org>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<i3bf64$lkn$1@dough.gmane.org>
Message-ID: <AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>

On Wed, Aug 4, 2010 at 12:25 PM, Alan Franzoni <mailing at franzoni.eu> wrote:
> Just ovverride the "protocol" attribute on your factory with the
> callable you want to be called when a new protocol needs to be

Hello Alan,

AFAIU this works only if Factory is subclassing
protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
protocol attribute is not present

Thanks for suggestions!

> instanced. I'd suppose you'd probably want to subclass HTTPChannel or
> something like that.
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Wed Aug  4 06:13:32 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 04 Aug 2010 08:13:32 -0400
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
Message-ID: <1280924012.1699.3.camel@blake>

On Wed, 2010-08-04 at 12:00 +0200, Pet wrote:

> Now, for XMLRPC this looks for me like Protocol instance is reused for
> all connection. If it is so, can I change this behavior, so I have one
> instance of Protocol per connection?

XMLRPC is a Resource, not a Protocol: Resources handle HTTP *requests*.
The reason Resources don't care about connections is that HTTP doesn't
care about connections: you can send multiple requests over the same
connection, or one request per connection, and the semantics are the
same either way.




From petshmidt at googlemail.com  Wed Aug  4 06:59:22 2010
From: petshmidt at googlemail.com (Pet)
Date: Wed, 4 Aug 2010 14:59:22 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <1280924012.1699.3.camel@blake>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<1280924012.1699.3.camel@blake>
Message-ID: <AANLkTi=RmqmMP7iBjqzmoSK8PzRhbwOshNrux4SUy=B7@mail.gmail.com>

On Wed, Aug 4, 2010 at 2:13 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Wed, 2010-08-04 at 12:00 +0200, Pet wrote:
>
>> Now, for XMLRPC this looks for me like Protocol instance is reused for
>> all connection. If it is so, can I change this behavior, so I have one
>> instance of Protocol per connection?
>
> XMLRPC is a Resource, not a Protocol: Resources handle HTTP *requests*.
> The reason Resources don't care about connections is that HTTP doesn't
> care about connections: you can send multiple requests over the same
> connection, or one request per connection, and the semantics are the
> same either way.

That make sense, thanks. Is there a way to isolate requests from each other?

Pet

>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Wed Aug  4 08:13:06 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 04 Aug 2010 10:13:06 -0400
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTi=RmqmMP7iBjqzmoSK8PzRhbwOshNrux4SUy=B7@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
	<1280924012.1699.3.camel@blake>
	<AANLkTi=RmqmMP7iBjqzmoSK8PzRhbwOshNrux4SUy=B7@mail.gmail.com>
Message-ID: <1280931186.1699.12.camel@blake>

On Wed, 2010-08-04 at 14:59 +0200, Pet wrote:

> That make sense, thanks. Is there a way to isolate requests from each other?

Each call to Resource.render() (which in this case then calls
XMLRPC.xmlrpc_<yourmethod>) is a separate request.




From thomasdrake1 at gmail.com  Wed Aug  4 19:23:48 2010
From: thomasdrake1 at gmail.com (Thomas Drake)
Date: Wed, 4 Aug 2010 18:23:48 -0700
Subject: [Twisted-Python] service stops/twistd exits
Message-ID: <AANLkTikkfW29OFrPCSo13uaxzZkGkgkhx5YZH7n65eSN@mail.gmail.com>

Hello,

I'm wondering if there is an established pattern for having an application
running in twistd shut itself down in the absence of a running service?

The idea is that if a service fails it calls self.stopService() and the
application shuts itself down somehow (rather than having the service call
reactor.stop). Ideally, I was hoping to do with without any specialized code
within my service, ie subclass from a ManagedService class or using
decorators.

I supposed it's possible to write a monitoring service that checks to ensure
my service is running, but I'd prefer a tighter coupling like having a
FatalException bubble up from the failed service to the application,
MultiService, or whatever *should* be calling reactor.stop().

Otherwise, if having service (eventually) stop the reactor is totally
antithetical to how things should work in a twistd plugin, then I guess I'll
need to rethink things.

Thanks,

Tad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100804/306d6088/attachment-0001.html>

From valeriy.zamarayev at gmail.com  Wed Aug  4 22:44:43 2010
From: valeriy.zamarayev at gmail.com (Valeriy Zamarayev)
Date: Thu, 5 Aug 2010 07:44:43 +0300
Subject: [Twisted-Python] Configuring Twisted logging via plugins
Message-ID: <064DE39A-DCC2-4172-A023-5FAD4674E25B@gmail.com>

Hello, all.

There have been a few questions on this list about how to configure
Twisted logging via plugins, as opposed to .tac files. And we now know
about the #638 and #3534 tickets. Hopefully, they will be resolved
soon.

But before this happens, it seems to me there's no other way to handle
this than to use a "monkey patching" techinque on Twisted (excluding
patching the Twisted source code itself).

We need to access the 'application' object when the server starts. We
can do this when the 'twistd' code calls setServiceParent on the
service returned by the plugin. So if we wrap setServiceParent, we can
access the application object and do what we want.

See the code:  http://gist.github.com/505926

This works for me. I don't know if a better and less dangerous way to
achieve the same exists. Maybe there is one?

Best Regards,
Valeriy




From exarkun at twistedmatrix.com  Thu Aug  5 06:36:55 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Aug 2010 12:36:55 -0000
Subject: [Twisted-Python] Cred question
In-Reply-To: <6CD03B2AA6AE4747BAF3A0D5EEEF728606EF7D@exmbx01.corp.nextdigital.com>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF728606EF7D@exmbx01.corp.nextdigital.com>
Message-ID: <20100805123655.2908.168470113.divmod.xquotient.4@localhost.localdomain>

On 4 Aug, 02:20 am, ssoni at nextdigital.com wrote:
>Hi,
>
>I am using Cred authentication system in my Nevow based web 
>application.
>
>Admin user can see list of all users from admin interface of the 
>application.
>
>Now, admin user wants to do following things:
>
>1.       Automatically login as other user
>
>2.       Induce logout to already logged in user.
>
>Q1. Since, admin user itself used cred authentication to login in first 
>place, how do we do automatic login as different user programmatically 
>or logout already logged in other user?

I'm not sure what you're asking here.  Perhaps the answer is to call 
your realm's requestAvatar method with the avatarId of the admin user?

As far as logging out a user, that basically means dropping their 
session.
>
>I tried to redirect my application to 
>/__login__/?username=otherusername&password=itspassword and it went 
>through Cred system, but I believe, since previous session was active 
>as well, it triggered logout.
>
>Q2. Does cred allow multiple login sessions in same browser? So, that 
>admin user can maintain its own session and login into other user as 
>well.

nevow.guard is cookie-based.  There's no way to have multiple 
authentication cookies inside a single browser instance, as far as I 
know.

Jean-Paul



From mailing at franzoni.eu  Thu Aug  5 07:32:13 2010
From: mailing at franzoni.eu (Alan Franzoni)
Date: Thu, 05 Aug 2010 15:32:13 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>
Message-ID: <i3eegt$fl2$1@dough.gmane.org>

On 8/4/10 1:30 PM, Pet wrote:

> AFAIU this works only if Factory is subclassing
> protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
> protocol attribute is not present

server.Site subclasses  http.HTTPFactory which, in turns, subclasses
protocol.ServerFactory:

http://twistedmatrix.com/documents/10.0.0/api/twisted.web.server.Site.html


by the way, if I now understand your question: just subclass XMLRPC and
create your own xmlrpc resource class by adding methods like

xmlrpc_somemethod
xmlrpc_othermethod

then add such handler to your server.Site, and you're done. Your method
will be invoked once per request.

Alan Franzoni




From petshmidt at googlemail.com  Thu Aug  5 08:21:04 2010
From: petshmidt at googlemail.com (Pet)
Date: Thu, 5 Aug 2010 16:21:04 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <i3eegt$fl2$1@dough.gmane.org>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com> 
	<i3eegt$fl2$1@dough.gmane.org>
Message-ID: <AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>

On Thu, Aug 5, 2010 at 3:32 PM, Alan Franzoni <mailing at franzoni.eu> wrote:
> On 8/4/10 1:30 PM, Pet wrote:
>
>> AFAIU this works only if Factory is subclassing
>> protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
>> protocol attribute is not present
>
> server.Site subclasses  http.HTTPFactory which, in turns, subclasses
> protocol.ServerFactory:
>
> http://twistedmatrix.com/documents/10.0.0/api/twisted.web.server.Site.html
>
>
> by the way, if I now understand your question: just subclass XMLRPC and
> create your own xmlrpc resource class by adding methods like
>
> xmlrpc_somemethod
> xmlrpc_othermethod
>
> then add such handler to your server.Site, and you're done. Your method
> will be invoked once per request.

what I've tried to do is to have objects, which were members of
XMLRPC. And these objects would have some internal state which is
isolated per request. But each new request has changed this objects,
because xmlrpc is created once and not for each request or connection.
I've solved this by modifying render_POST where I create those objects
before calling requested function and so they lives only there without
being overwritten by new request. Ugh... It's might be ugly, but works
for me

Pet

>
> Alan Franzoni
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From mailing at franzoni.eu  Thu Aug  5 08:36:24 2010
From: mailing at franzoni.eu (Alan Franzoni)
Date: Thu, 05 Aug 2010 16:36:24 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
	<i3bf64$lkn$1@dough.gmane.org>	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>
Message-ID: <i3ei98$2u7$1@dough.gmane.org>

On 8/5/10 4:21 PM, Pet wrote:
> what I've tried to do is to have objects, which were members of
> XMLRPC. And these objects would have some internal state which is
> isolated per request. But each new request has changed this objects,
> because xmlrpc is created once and not for each request or connection.
> I've solved this by modifying render_POST where I create those objects
> before calling requested function and so they lives only there without
> being overwritten by new request. Ugh... It's might be ugly, but works
> for me

I suppose you're creating such objects in your XMLRPC subclass
__init___(), that's your problem.

bye!

Alan Franzoni







From exarkun at twistedmatrix.com  Thu Aug  5 09:01:23 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Aug 2010 15:01:23 -0000
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>
Message-ID: <20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>

On 02:21 pm, petshmidt at googlemail.com wrote:
>On Thu, Aug 5, 2010 at 3:32 PM, Alan Franzoni <mailing at franzoni.eu> 
>wrote:
>>On 8/4/10 1:30 PM, Pet wrote:
>>>AFAIU this works only if Factory is subclassing
>>>protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
>>>protocol attribute is not present
>>
>>server.Site subclasses �http.HTTPFactory which, in turns, subclasses
>>protocol.ServerFactory:
>>
>>http://twistedmatrix.com/documents/10.0.0/api/twisted.web.server.Site.html
>>
>>
>>by the way, if I now understand your question: just subclass XMLRPC 
>>and
>>create your own xmlrpc resource class by adding methods like
>>
>>xmlrpc_somemethod
>>xmlrpc_othermethod
>>
>>then add such handler to your server.Site, and you're done. Your 
>>method
>>will be invoked once per request.
>
>what I've tried to do is to have objects, which were members of
>XMLRPC. And these objects would have some internal state which is
>isolated per request. But each new request has changed this objects,
>because xmlrpc is created once and not for each request or connection.
>I've solved this by modifying render_POST where I create those objects
>before calling requested function and so they lives only there without
>being overwritten by new request. Ugh... It's might be ugly, but works
>for me

If you want a new XMLRPC instance per request, then create a new one per 
request.  http://twistedmatrix.com/documents/current/web/howto/web-in-60 
/dynamic-dispatch.html may help.

Re-using a single XMLRPC instance and mangling its state in render_POST 
will break as soon as your server receives two overlapping requests.

Jean-Paul



From petshmidt at googlemail.com  Thu Aug  5 10:23:09 2010
From: petshmidt at googlemail.com (Pet)
Date: Thu, 5 Aug 2010 18:23:09 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com> 
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com> 
	<20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
Message-ID: <AANLkTinhohJ4Cihrg-QF+-yg-narB_HS9hYRx3aYuj5Y@mail.gmail.com>

On Thu, Aug 5, 2010 at 5:01 PM,  <exarkun at twistedmatrix.com> wrote:
> On 02:21 pm, petshmidt at googlemail.com wrote:
>>
>> On Thu, Aug 5, 2010 at 3:32 PM, Alan Franzoni <mailing at franzoni.eu> wrote:
>>>
>>> On 8/4/10 1:30 PM, Pet wrote:
>>>>
>>>> AFAIU this works only if Factory is subclassing
>>>> protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
>>>> protocol attribute is not present
>>>
>>> server.Site subclasses  http.HTTPFactory which, in turns, subclasses
>>> protocol.ServerFactory:
>>>
>>>
>>> http://twistedmatrix.com/documents/10.0.0/api/twisted.web.server.Site.html
>>>
>>>
>>> by the way, if I now understand your question: just subclass XMLRPC and
>>> create your own xmlrpc resource class by adding methods like
>>>
>>> xmlrpc_somemethod
>>> xmlrpc_othermethod
>>>
>>> then add such handler to your server.Site, and you're done. Your method
>>> will be invoked once per request.
>>
>> what I've tried to do is to have objects, which were members of
>> XMLRPC. And these objects would have some internal state which is
>> isolated per request. But each new request has changed this objects,
>> because xmlrpc is created once and not for each request or connection.
>> I've solved this by modifying render_POST where I create those objects
>> before calling requested function and so they lives only there without
>> being overwritten by new request. Ugh... It's might be ugly, but works
>> for me
>
> If you want a new XMLRPC instance per request, then create a new one per

That is what I've wanted

> request.  http://twistedmatrix.com/documents/current/web/howto/web-in-60
> /dynamic-dispatch.html may help.

Thanks, will check it out

>
> Re-using a single XMLRPC instance and mangling its state in render_POST will
> break as soon as your server receives two overlapping requests.

I'm making only local variables in render_POST, not class wide, seems
to work even with 2 overlapping requests.

Pet

>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From konrads at smelkovs.com  Thu Aug  5 10:45:13 2010
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Thu, 5 Aug 2010 19:45:13 +0300
Subject: [Twisted-Python] Cred question
In-Reply-To: <20100805123655.2908.168470113.divmod.xquotient.4@localhost.localdomain>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF728606EF7D@exmbx01.corp.nextdigital.com>
	<20100805123655.2908.168470113.divmod.xquotient.4@localhost.localdomain>
Message-ID: <AANLkTimCHhrheBmCm2-SF9pwt9OHqTsOcQKgNWHhtg_E@mail.gmail.com>

i guess he wants admin to 1) impersonate another user, akin to su -u
anotheruser and 2) also to drop that user's session.
For 1) you'd have to set the avatar to the user's id (or at
application level implement something like effective uid). For 2)
you'd have to iterate over all active sessions and terminate the one
you want


2010/8/5, exarkun at twistedmatrix.com <exarkun at twistedmatrix.com>:
> On 4 Aug, 02:20 am, ssoni at nextdigital.com wrote:
>>Hi,
>>
>>I am using Cred authentication system in my Nevow based web
>>application.
>>
>>Admin user can see list of all users from admin interface of the
>>application.
>>
>>Now, admin user wants to do following things:
>>
>>1.       Automatically login as other user
>>
>>2.       Induce logout to already logged in user.
>>
>>Q1. Since, admin user itself used cred authentication to login in first
>>place, how do we do automatic login as different user programmatically
>>or logout already logged in other user?
>
> I'm not sure what you're asking here.  Perhaps the answer is to call
> your realm's requestAvatar method with the avatarId of the admin user?
>
> As far as logging out a user, that basically means dropping their
> session.
>>
>>I tried to redirect my application to
>>/__login__/?username=otherusername&password=itspassword and it went
>>through Cred system, but I believe, since previous session was active
>>as well, it triggered logout.
>>
>>Q2. Does cred allow multiple login sessions in same browser? So, that
>>admin user can maintain its own session and login into other user as
>>well.
>
> nevow.guard is cookie-based.  There's no way to have multiple
> authentication cookies inside a single browser instance, as far as I
> know.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
Nosūtīts no manas mobilās ierīces

--
Konrads Smelkovs
Applied IT sorcery.



From glyph at twistedmatrix.com  Thu Aug  5 11:25:24 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 Aug 2010 13:25:24 -0400
Subject: [Twisted-Python] Configuring Twisted logging via plugins
In-Reply-To: <064DE39A-DCC2-4172-A023-5FAD4674E25B@gmail.com>
References: <064DE39A-DCC2-4172-A023-5FAD4674E25B@gmail.com>
Message-ID: <65297D84-50FD-4168-A826-B8D04251C6AA@twistedmatrix.com>

On Aug 5, 2010, at 12:44 AM, Valeriy Zamarayev wrote:

> Hello, all.
> 
> There have been a few questions on this list about how to configure
> Twisted logging via plugins, as opposed to .tac files. And we now know
> about the #638 and #3534 tickets. Hopefully, they will be resolved
> soon.
> 
> But before this happens, it seems to me there's no other way to handle
> this than to use a "monkey patching" techinque on Twisted (excluding
> patching the Twisted source code itself).
> 
> We need to access the 'application' object when the server starts. We
> can do this when the 'twistd' code calls setServiceParent on the
> service returned by the plugin. So if we wrap setServiceParent, we can
> access the application object and do what we want.
> 
> See the code:  http://gist.github.com/505926
> 
> This works for me. I don't know if a better and less dangerous way to
> achieve the same exists. Maybe there is one?


This actually looks pretty ingenious to me!  It uses public APIs... mostly.  I'd have to think pretty hard about whether this particular interface is actually supported, of course, since you're depending on extra stuff from your service parent which hypothetically may not actually be there.

If you're looking for aesthetic advice, it would be a bit nicer to use something like proxyForInterface and wrap the underlying service, rather than setting an attribute on it and clobbering its setServiceParent method.

Also... you could write a twistd plugin that could be used directly, instead of code that needs to be adapted / re-written for each different twistd plugin.  Your code can scan the IServiceMaker plugin registry just as well as twistd itself can.

So you could have

  twistd my-custom-logger --my-log-option-1 --my-log-option-2 web --path ~/public_html

and have the my-custom-logger plugin delegate to all twistd subcommands.

That's a pattern which should remain useful even after #638 is fixed.

Code to do this properly is left as an exercise for the reader, of course :).


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100805/f0e76757/attachment.html>

From exarkun at twistedmatrix.com  Thu Aug  5 11:36:44 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Aug 2010 17:36:44 -0000
Subject: [Twisted-Python] Configuring Twisted logging via plugins
In-Reply-To: <65297D84-50FD-4168-A826-B8D04251C6AA@twistedmatrix.com>
References: <064DE39A-DCC2-4172-A023-5FAD4674E25B@gmail.com>
	<65297D84-50FD-4168-A826-B8D04251C6AA@twistedmatrix.com>
Message-ID: <20100805173644.2908.123075517.divmod.xquotient.17@localhost.localdomain>

On 05:25 pm, glyph at twistedmatrix.com wrote:
>On Aug 5, 2010, at 12:44 AM, Valeriy Zamarayev wrote:
>>Hello, all.
>>
>>There have been a few questions on this list about how to configure
>>Twisted logging via plugins, as opposed to .tac files. And we now know
>>about the #638 and #3534 tickets. Hopefully, they will be resolved
>>soon.
>>
>>But before this happens, it seems to me there's no other way to handle
>>this than to use a "monkey patching" techinque on Twisted (excluding
>>patching the Twisted source code itself).
>>
>>We need to access the 'application' object when the server starts. We
>>can do this when the 'twistd' code calls setServiceParent on the
>>service returned by the plugin. So if we wrap setServiceParent, we can
>>access the application object and do what we want.
>>
>>See the code:  http://gist.github.com/505926
>>
>>This works for me. I don't know if a better and less dangerous way to
>>achieve the same exists. Maybe there is one?
>
>
>This actually looks pretty ingenious to me!  It uses public APIs... 
>mostly.  I'd have to think pretty hard about whether this particular 
>interface is actually supported, of course, since you're depending on 
>extra stuff from your service parent which hypothetically may not 
>actually be there.
>
>If you're looking for aesthetic advice, it would be a bit nicer to use 
>something like proxyForInterface and wrap the underlying service, 
>rather than setting an attribute on it and clobbering its 
>setServiceParent method.
>
>Also... you could write a twistd plugin that could be used directly, 
>instead of code that needs to be adapted / re-written for each 
>different twistd plugin.  Your code can scan the IServiceMaker plugin 
>registry just as well as twistd itself can.
>
>So you could have
>
>  twistd my-custom-logger --my-log-option-1 --my-log-option-2 web --path 
>~/public_html
>
>and have the my-custom-logger plugin delegate to all twistd 
>subcommands.
>
>That's a pattern which should remain useful even after #638 is fixed.
>
>Code to do this properly is left as an exercise for the reader, of 
>course :).

This is probably possible, but not using the twisted.python.usage 
options parser, which doesn't support multiple subcommands.  This 
solution has been discussed on IRC before and probably the lack of 
multiple subcommand support in the options parser is the only reason it 
hasn't been implemented.

I think there was some consensus on an alternate way to spell this 
combination, but I don't remember what it was right now.  It's probably 
in someone's IRC logs.

Jean-Paul



From nathan.stocks at gmail.com  Thu Aug  5 12:33:31 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 5 Aug 2010 12:33:31 -0600
Subject: [Twisted-Python] Get trial to use the docstring?
Message-ID: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>

Is there already a way to get twisted to print out a test's docstring
(like unittest does) instead of the name of the function in it's
output?  I've looked at trial's options and searched the list
archives, but I'm not seeing anything...

For example, here's what my tests look like when run by unittest:

$ test/run.py -v
==> Starting Prerequisite Tests ... ok
Supported OS? ... ok
Supported version of Python? ... ok
...

And here's what they look like when run by trial:

$ trial test/run.py
run
  Test00Prerequisites
    test_00banner ...                                                      [OK]
    test_01os ...                                                          [OK]
...

~ Nathan



From valeriy.zamarayev at gmail.com  Thu Aug  5 13:06:11 2010
From: valeriy.zamarayev at gmail.com (Valeriy Zamarayev)
Date: Thu, 5 Aug 2010 22:06:11 +0300
Subject: [Twisted-Python] Configuring Twisted logging via plugins
In-Reply-To: <65297D84-50FD-4168-A826-B8D04251C6AA@twistedmatrix.com>
References: <064DE39A-DCC2-4172-A023-5FAD4674E25B@gmail.com>
	<65297D84-50FD-4168-A826-B8D04251C6AA@twistedmatrix.com>
Message-ID: <5966E51D-CCB9-4E42-BDAE-93BFB311DF96@gmail.com>


On Aug 5, 2010, at 20:25, Glyph Lefkowitz wrote:

> On Aug 5, 2010, at 12:44 AM, Valeriy Zamarayev wrote:
>>
>> See the code:  http://gist.github.com/505926
>>
>> This works for me. I don't know if a better and less dangerous way to
>> achieve the same exists. Maybe there is one?
>
>
> This actually looks pretty ingenious to me!  It uses public APIs...  
> mostly.  I'd have to think pretty hard about whether this particular  
> interface is actually supported, of course, since you're depending  
> on extra stuff from your service parent which hypothetically may not  
> actually be there.

The hack is based on a few assumptions:
  1. the service parent for a plugin is the application.
  2. setServiceParent will be called soon after plugin configuration.

I don't know how stable and safe these assumptions are, just hope that
by the time something changes, there will be an official way :)


> If you're looking for aesthetic advice, it would be a bit nicer to  
> use something like proxyForInterface and wrap the underlying  
> service, rather than setting an attribute on it and clobbering its  
> setServiceParent method.

Oh, yes. I'll change this, thanks.

>
> Also... you could write a twistd plugin that could be used directly,  
> instead of code that needs to be adapted / re-written for each  
> different twistd plugin.  Your code can scan the IServiceMaker  
> plugin registry just as well as twistd itself can.
>
> So you could have
>
>   twistd my-custom-logger --my-log-option-1 --my-log-option-2 web -- 
> path ~/public_html
>
> and have the my-custom-logger plugin delegate to all twistd  
> subcommands.
>
> That's a pattern which should remain useful even after #638 is fixed.
>
> Code to do this properly is left as an exercise for the reader, of  
> course :).
>

Nice idea. I actually though about writing a single .tac which could  
configure
logging and then find and start whatever plugin is given in the  
command line.
But then I found that a .tac isn't even necessary.

Given what Jean-Paul says about option parsing, it is not that  
straigtforward.
I don't need (yet) to configure logging of standard or third party  
plugins,
only my own.

So if the goal is just to reuse the code and not do the same with  
every plugin,
it's easy to use a template-method technique, and reuse the hack code  
across all
the plugins (The example in the gist is a bit artificial).

Regards,
Valeriy




From glyph at twistedmatrix.com  Thu Aug  5 13:08:03 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 Aug 2010 15:08:03 -0400
Subject: [Twisted-Python] Get trial to use the docstring?
In-Reply-To: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>
References: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>
Message-ID: <FCA0BCC9-EE49-44C4-9D47-AA5BB43C052B@twistedmatrix.com>

On Aug 5, 2010, at 2:33 PM, Nathan wrote:

> Is there already a way to get twisted to print out a test's docstring
> (like unittest does) instead of the name of the function in it's
> output?  I've looked at trial's options and searched the list
> archives, but I'm not seeing anything...
> 
> For example, here's what my tests look like when run by unittest:
> 
> $ test/run.py -v
> ==> Starting Prerequisite Tests ... ok
> Supported OS? ... ok
> Supported version of Python? ... ok
> ...
> 
> And here's what they look like when run by trial:
> 
> $ trial test/run.py
> run
>  Test00Prerequisites
>    test_00banner ...                                                      [OK]
>    test_01os ...                                                          [OK]
> ...

No.

If you want to add a feature that prints out the docstring (or some portion of it) _in addition_ to the test name, that would probably be accepted as a patch.  But, in my mind, one of the most important features of trial is the fact that it prints out stable identifiers for the tests so you can see how to run them again when you're looking at their results.  We should never omit that.  (In fact, I'd really like it if trial always printed out a _full_ test identifier for easy copy/pasting instead of sometimes only printing the method name.)


From glyph at twistedmatrix.com  Thu Aug  5 13:16:38 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 5 Aug 2010 15:16:38 -0400
Subject: [Twisted-Python] service stops/twistd exits
In-Reply-To: <AANLkTikkfW29OFrPCSo13uaxzZkGkgkhx5YZH7n65eSN@mail.gmail.com>
References: <AANLkTikkfW29OFrPCSo13uaxzZkGkgkhx5YZH7n65eSN@mail.gmail.com>
Message-ID: <8BC06BE4-7D09-464C-AE6D-7F8EDEA6C706@twistedmatrix.com>


On Aug 4, 2010, at 9:23 PM, Thomas Drake wrote:

> Hello,
> 
> I'm wondering if there is an established pattern for having an application running in twistd shut itself down in the absence of a running service?
> 
> The idea is that if a service fails it calls self.stopService() and the application shuts itself down somehow (rather than having the service call reactor.stop). Ideally, I was hoping to do with without any specialized code within my service, ie subclass from a ManagedService class or using decorators.
> 
> I supposed it's possible to write a monitoring service that checks to ensure my service is running, but I'd prefer a tighter coupling like having a FatalException bubble up from the failed service to the application, MultiService, or whatever *should* be calling reactor.stop().
> 
> Otherwise, if having service (eventually) stop the reactor is totally antithetical to how things should work in a twistd plugin, then I guess I'll need to rethink things.
> 
> Thanks,
> 
> Tad


Calling reactor.stop() is possibly the best that you're likely to do right now.  This is a known problem, and at least related to (if not the same as) <http://twistedmatrix.com/trac/ticket/718>.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100805/a7eb31b8/attachment.html>

From exarkun at twistedmatrix.com  Thu Aug  5 13:49:56 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 05 Aug 2010 19:49:56 -0000
Subject: [Twisted-Python] Get trial to use the docstring?
In-Reply-To: <FCA0BCC9-EE49-44C4-9D47-AA5BB43C052B@twistedmatrix.com>
References: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>
	<FCA0BCC9-EE49-44C4-9D47-AA5BB43C052B@twistedmatrix.com>
Message-ID: <20100805194956.2908.869931520.divmod.xquotient.19@localhost.localdomain>

On 07:08 pm, glyph at twistedmatrix.com wrote:
>On Aug 5, 2010, at 2:33 PM, Nathan wrote:
>>Is there already a way to get twisted to print out a test's docstring
>>(like unittest does) instead of the name of the function in it's
>>output?  I've looked at trial's options and searched the list
>>archives, but I'm not seeing anything...
>>
>>For example, here's what my tests look like when run by unittest:
>>
>>$ test/run.py -v
>>==> Starting Prerequisite Tests ... ok
>>Supported OS? ... ok
>>Supported version of Python? ... ok
>>...
>>
>>And here's what they look like when run by trial:
>>
>>$ trial test/run.py
>>run
>>  Test00Prerequisites
>>    test_00banner ... 
>>[OK]
>>    test_01os ... 
>>[OK]
>>...
>
>No.
>
>If you want to add a feature that prints out the docstring (or some 
>portion of it) _in addition_ to the test name, that would probably be 
>accepted as a patch.  But, in my mind, one of the most important 
>features of trial is the fact that it prints out stable identifiers for 
>the tests so you can see how to run them again when you're looking at 
>their results.  We should never omit that.  (In fact, I'd really like 
>it if trial always printed out a _full_ test identifier for easy 
>copy/pasting instead of sometimes only printing the method name.)

Also, trial reporters are pluggable, so you can always write and use a 
reporter that prints out exactly what you want printed out.

Jean-Paul



From nathan.stocks at gmail.com  Thu Aug  5 17:25:35 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 5 Aug 2010 17:25:35 -0600
Subject: [Twisted-Python] Get trial to use the docstring?
In-Reply-To: <20100805194956.2908.869931520.divmod.xquotient.19@localhost.localdomain>
References: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>
	<FCA0BCC9-EE49-44C4-9D47-AA5BB43C052B@twistedmatrix.com>
	<20100805194956.2908.869931520.divmod.xquotient.19@localhost.localdomain>
Message-ID: <AANLkTinuMFdEqLo+wx-aodnNtv66xSY+mgT=oPv9p8FM@mail.gmail.com>

On Thu, Aug 5, 2010 at 1:49 PM,  <exarkun at twistedmatrix.com> wrote:
>>If you want to add a feature that prints out the docstring (or some
>>portion of it) _in addition_ to the test name, that would probably be
>>accepted as a patch.  But, in my mind, one of the most important
>>features of trial is the fact that it prints out stable identifiers for
>>the tests so you can see how to run them again when you're looking at
>>their results.  We should never omit that.  (In fact, I'd really like
>>it if trial always printed out a _full_ test identifier for easy
>>copy/pasting instead of sometimes only printing the method name.)
>
> Also, trial reporters are pluggable, so you can always write and use a
> reporter that prints out exactly what you want printed out.
>
> Jean-Paul

I have a number of questions:

1) I found the TreeReporter class that produces the default output
(twisted/trial/reporter.py), and I found the file that seems to get
run by trial (twisted/scripts/trial.py) but for the life of me I
couldn't figure out how to get my own class to show up as one of the
reporters that you can select by means of the --reporter=whatever
argument.  How do you tie the two together?  I can just submit my
modified TreeReporter, but it'd be nice to be able to also submit a
wildly different option...

2) What's the official process for submitting a patch (or where is the
process documented)?  I've never actually contributed code to
twisted...

3) Every time I install my custom twisted (with "sudo python setup.py
install" on OS X 10.6.4 system python), trial starts spitting out the
"dropin cache" error (see [1] below) which persists until I run "sudo
twistd --help" as was suggested on the list last week or so.  Isn't
there some way we can just address that error condition at
installation time so that doesn't occur in the first place?

4) I'm sold on test-driven development (which is why I'm learning
trial), so I'd like to both check for regressions and write a test for
my patch.  I found twisted/trial/test/test_reporter.py -- how do I run
just the tests in that file?  Does trial run on itself?

~ Nathan


[1] Traceback (most recent call last):
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/python/usage.py",
line 241, in parseOptions
    self.postOptions()
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/scripts/trial.py",
line 295, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/scripts/trial.py",
line 281, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/plugin.py",
line 199, in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/plugin.py",
line 178, in getCache
    dropinPath.setContent(pickle.dumps(dropinDotCache))
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 765, in setContent
    f = sib.open('w')
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 515, in open
    return self.create()
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 791, in create
    fdint = os.open(self.path, _CREATE_FLAGS)
exceptions.OSError: [Errno 13] Permission denied:
'/Library/Python/2.6/site-packages/Twisted-10.1.0_r29921-py2.6-macosx-10.6-universal.egg/twisted/plugins/bDcpsOvnXomi7b94dropin.cache.new'



From ssoni at nextdigital.com  Thu Aug  5 18:09:13 2010
From: ssoni at nextdigital.com (Sury Soni)
Date: Fri, 6 Aug 2010 00:09:13 +0000
Subject: [Twisted-Python] Cred question
In-Reply-To: <AANLkTimCHhrheBmCm2-SF9pwt9OHqTsOcQKgNWHhtg_E@mail.gmail.com>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF728606EF7D@exmbx01.corp.nextdigital.com>
	<20100805123655.2908.168470113.divmod.xquotient.4@localhost.localdomain>
	<AANLkTimCHhrheBmCm2-SF9pwt9OHqTsOcQKgNWHhtg_E@mail.gmail.com>
Message-ID: <6CD03B2AA6AE4747BAF3A0D5EEEF7286072DF2@exmbx01.corp.nextdigital.com>

> i guess he wants admin to 1) impersonate another user, akin to su -u
> anotheruser and 2) also to drop that user's session.
> For 1) you'd have to set the avatar to the user's id (or at application level
> implement something like effective uid). For 2) you'd have to iterate over all
> active sessions and terminate the one you want
> 

Hi Konrads,

You are right.

Can you elaborate your suggested solutions?

I am not sure, where do I set the avatar to user's id, as request will come from protocol while admin session is already active in the browser.

In nevow.guard login request usually comes through login form submit to http://yourhost/__login__ path.

And, then request goes to Realm, but since current (admin) session would be already active, how do we iterate over active session and drop admin session?

> 
> 2010/8/5, exarkun at twistedmatrix.com <exarkun at twistedmatrix.com>:
> > On 4 Aug, 02:20 am, ssoni at nextdigital.com wrote:
> >>Hi,
> >>
> >>I am using Cred authentication system in my Nevow based web
> >>application.
> >>
> >>Admin user can see list of all users from admin interface of the
> >>application.
> >>
> >>Now, admin user wants to do following things:
> >>
> >>1.       Automatically login as other user
> >>
> >>2.       Induce logout to already logged in user.
> >>
> >>Q1. Since, admin user itself used cred authentication to login in
> >>first place, how do we do automatic login as different user
> >>programmatically or logout already logged in other user?
> >
> > I'm not sure what you're asking here.  Perhaps the answer is to call
> > your realm's requestAvatar method with the avatarId of the admin user?
> >
> > As far as logging out a user, that basically means dropping their
> > session.
> >>
> >>I tried to redirect my application to
> >>/__login__/?username=otherusername&password=itspassword and it
> went
> >>through Cred system, but I believe, since previous session was active
> >>as well, it triggered logout.
> >>
> >>Q2. Does cred allow multiple login sessions in same browser? So, that
> >>admin user can maintain its own session and login into other user as
> >>well.
> >
> > nevow.guard is cookie-based.  There's no way to have multiple
> > authentication cookies inside a single browser instance, as far as I
> > know.
> >
> > Jean-Paul
> >

Thanks JP for the clarification on multiple sessions.

-Sury

From ltaylor.volks at gmail.com  Thu Aug  5 20:06:17 2010
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Thu, 05 Aug 2010 21:06:17 -0500
Subject: [Twisted-Python] Get trial to use the docstring?
In-Reply-To: <AANLkTinuMFdEqLo+wx-aodnNtv66xSY+mgT=oPv9p8FM@mail.gmail.com>
References: <AANLkTi=xNRpmdseXwbRq4sj3A-u54zuL4wyDAgQrYZBE@mail.gmail.com>	<FCA0BCC9-EE49-44C4-9D47-AA5BB43C052B@twistedmatrix.com>	<20100805194956.2908.869931520.divmod.xquotient.19@localhost.localdomain>
	<AANLkTinuMFdEqLo+wx-aodnNtv66xSY+mgT=oPv9p8FM@mail.gmail.com>
Message-ID: <4C5B6E19.4050408@gmail.com>

On 8/5/10 6:25 PM, Nathan wrote:
 > I have a number of questions:
> 
> 1) I found the TreeReporter class that produces the default output
> (twisted/trial/reporter.py), and I found the file that seems to get
> run by trial (twisted/scripts/trial.py) but for the life of me I
> couldn't figure out how to get my own class to show up as one of the
> reporters that you can select by means of the --reporter=whatever
> argument.  How do you tie the two together?  I can just submit my
> modified TreeReporter, but it'd be nice to be able to also submit a
> wildly different option...

Wildly different options sound like a good case for plugins:
http://twistedmatrix.com/documents/current/core/howto/plugin.html

You need to create a plugin that makes your reporter accessible to
Trial. This means it needs to implement the IReporter interface:
http://twistedmatrix.com/documents/10.1.0/api/twisted.trial.itrial.IReporter.html

The plugin should be installed on your PYTHONPATH in a directory named
twisted/plugins. You could just place this in your project for instance,
or in the system twisted/plugins dir.

myproject/twisted/plugins/awesome_reporter.py

The plugin describes the reporter (for --help-reporters) and provides
the importable module and class that gets instantiated.

The reporter itself can be a subclass of TreeReporter or whatever, and
should implement the IReporter interface.

Here is a simple example:
http://gist.github.com/510688

For a much better example, check out the Tahoe-LAFS project
trialcoverage reporter:
http://tahoe-lafs.org/source/trialcoverage/trunk/


> 2) What's the official process for submitting a patch (or where is the
> process documented)?  I've never actually contributed code to
> twisted...

Start here:
http://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs


> 3) Every time I install my custom twisted (with "sudo python setup.py
> install" on OS X 10.6.4 system python), trial starts spitting out the
> "dropin cache" error (see [1] below) which persists until I run "sudo
> twistd --help" as was suggested on the list last week or so.  Isn't
> there some way we can just address that error condition at
> installation time so that doesn't occur in the first place?

"Some way" always comes down to "Someone", which I suspect is a bit like
that ghost the kid from Family Circus is always blaming for muddy
footprints or whatever counts for domestic drama in Bil Keane's
Geritol-addled imagination.

So....there's an existing ticket you could help out with:
http://twistedmatrix.com/trac/ticket/2409

> 4) I'm sold on test-driven development (which is why I'm learning
> trial), so I'd like to both check for regressions and write a test for
> my patch.  I found twisted/trial/test/test_reporter.py -- how do I run
> just the tests in that file?  Does trial run on itself?
> 

Yes.

Trial is pretty flexible about specifying tests to run, so you can run
the whole suite, specify a directory of tests, or point it to a specific
TestCase:

trial twisted
trial twisted/test
trial twisted.test

trial twisted/trial/test/test_reporter.py
trial twisted.trial.test.test_reporter.TestTreeReporter

The same holds for your own project:
trial myproject.tests.test_reporter.AwesomeTreeReporter



From smagafurov at naumen.ru  Thu Aug  5 21:06:04 2010
From: smagafurov at naumen.ru (=?UTF-8?B?0KHQtdGA0LPQtdC5INCc0LDQs9Cw0YTRg9GA0L7Qsg==?=)
Date: Fri, 06 Aug 2010 09:06:04 +0600
Subject: [Twisted-Python] inlineCallbacks yield tuple support
Message-ID: <4C5B7C1C.3020404@naumen.ru>

This example shows what i want:

@defer.inlineCallbacks
def create_audio_link(tel, addr1, addr2):
     try:
         connection1, connection2 = yield (tel.connect(addr1), tel.connect(addr2))
     except ConnectionError, exc:
         ... some error work ...
     else:
         return tel.create_audiolink(connection1, connection2)

At now we can do this with DeferredList but it is complex (compare with 
first example):

@defer.inlineCallbacks
def create_audio_link(tel, addr1, addr2):
     try:
         try:
             r = yield DeferredList([tel.connect(addr1), tel.connect(addr2)], fireOnOneErrback=1, consumeErrors=1)
         except FirstError, exc:
             raise exc.subFailure.value
         else:
             connection1, connection2 = tuple(_r for _s, _r in r)
     except ConnectionError, exc:
         ... some error work ...
     else:
         return tel.create_audiolink(connection1, connection2)

Approximate solution (idea) is patch in defer.py:

def _inlineCallbacks(result, g, deferred):
             ... skipped ...

         if isinstance(result, Deferred):
             # a deferred was yielded, get the result.

             ... skipped ...

             waiting[0] = True
             waiting[1] = None

         if isinstance(result, tuple):
             # a tuple was yielded, get the result.
             result = DeferredList(result, fireOnOneErrback=1, consumeErrors=1)
             def gotResult(r):
                 if isinstance(r, failure.Failure):
                     r = r.value.subFailure
                 else:
                     r = tuple(_r for _s, _r in r)
                 if waiting[0]:
                     waiting[0] = False
                     waiting[1] = r
                 else:
                     _inlineCallbacks(r, g, deferred)

             result.addBoth(gotResult)
             if waiting[0]:
                 # Haven't called back yet, set flag so that we get reinvoked
                 # and return from the loop
                 waiting[0] = False
                 return deferred

             result = waiting[1]
             # Reset waiting to initial values for next loop.  gotResult uses
             # waiting, but this isn't a problem because gotResult is only
             # executed once, and if it hasn't been executed yet, the return
             # branch above would have been taken.


             waiting[0] = True
             waiting[1] = None


     return deferred

I post this as ticket but was redirected to mailing-list
http://twistedmatrix.com/trac/ticket/4627

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100806/a23a3d0b/attachment.html>

From smagafurov at naumen.ru  Thu Aug  5 21:15:11 2010
From: smagafurov at naumen.ru (=?UTF-8?B?0KHQtdGA0LPQtdC5INCc0LDQs9Cw0YTRg9GA0L7Qsg==?=)
Date: Fri, 06 Aug 2010 09:15:11 +0600
Subject: [Twisted-Python] strange bug with... something :)
Message-ID: <4C5B7E3F.5070401@naumen.ru>

Example code 1

{{{
class Example(object):
     def __init__(self, connection):
         self.connection = connection
         self.counter = 0
         self.requests = {}

     def generate_request_id(self):
         self.counter += 1
         return self.counter

     def request(self, data, timeout=10):
         deferred = defer.Deferred()
         request_id = self.generate_request_id()
         self.requests[request_id] = deferred

         # ATTENTION: I want to see current traceback when timeout occurs
         # therefore raise and catch here
         try:
             raise failure.TimeoutError()
         except failure.TimeoutError:
             failure = failure.Failure()

         # charge timer
         timer = reactor.callLater(timeout, self._on_timeout, 
request_id, failure)

         # send request
         self.connection.send_request(request_id, data)
         return deferred

     def _on_timeout(self, request_id, failure):
         deferred = self.requests.pop(request_id, None)
         if deferred is not None:
             deferred.errback(failure)

     def on_response_received(self, request_id, response):
         deferred = self.requests.pop(request_id, None)
         if deferred is not None:
             deferred.callback(response)
}}}

Disadvantage 1 of this code:
We construct failure.Failure() always although timeout may not occur at all.
If failure.Failure() was lazy it will be cool.

Disadvantage 2 (bug in twisted?) of this code:
This code doesn't work in some cases and I don't know why.
In some cases deferred.callback(response) does nothing although called.

But this code magically works properly in the same cases:

Example code 2 (one difference is just "lazy" failure construction using 
special FailureFactory class)

{{{
class FailureFactory(object):
     def __init__(self, arg):
         try:
             raise arg
         except:
             exc_info = sys.exc_info()
         self.exc_info = exc_info

     def __call__(self):
         exc_type, exc_value, tb = self.exc_info
         return Failure(exc_value, exc_type, tb)

class Example(object):
     def __init__(self, connection):
         self.connection = connection
         self.counter = 0
         self.requests = {}

     def generate_request_id(self):
         self.counter += 1
         return self.counter

     def request(self, data, timeout=10):
         deferred = defer.Deferred()
         request_id = self.generate_request_id()
         self.requests[request_id] = deferred

         # ATTENTION: I want to see current traceback when timeout occurs
         # therefore raise and catch here
         failure_factory = FailureFactory(failure.TimeoutError())

         # charge timer
         timer = reactor.callLater(timeout, self._on_timeout, 
request_id, failure_factory)

         # send request
         self.connection.send_request(request_id, data)
         return deferred

     def _on_timeout(self, request_id, failure_factory):
         deferred = self.requests.pop(request_id, None)
         if deferred is not None:
             deferred.errback(failure_factory())

     def on_response_received(self, request_id, response):
         deferred = self.requests.pop(request_id, None)
         if deferred is not None:
             deferred.callback(response)
}}}

Example 2 works but Example 1 does not.

What is wrong with example 1?

Bug in twisted?

I have posted this message as ticket but was redirected to mailing-list
http://twistedmatrix.com/trac/ticket/4628




From greenenergy at gmail.com  Fri Aug  6 12:02:33 2010
From: greenenergy at gmail.com (Colin Fox)
Date: Fri, 06 Aug 2010 11:02:33 -0700
Subject: [Twisted-Python] Question about XMLRPC, Sync and ASync
Message-ID: <4C5C4E39.6080807@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi everyone.

I'm relatively new to Twisted, though I have used parts of it for a while.

What I'm trying to do now has me a little stumped -- I have two servers,
one of which answers XMLRPC requests, and it calls another one using the
twisted basic.LineReceiver system.

So I have an incoming XMLRPC request, and I need to issue a command to
the other server and wait for it to come back before I respond to the
xmlrpc call. So I'm trying to do an async call inside a synchronous call.

I think that deferreds will play a part here, but I guess I must be
missing something, as I'm not sure how to proceed. Can I return a
deferred from my XMLRPC handler? And if so, how do I fire the callback
when the result comes in to the LineReceiver?

Thanks,
   Colin
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iQEcBAEBAgAGBQJMXE45AAoJEKVzdTf0DlfQ+vIH/RJFfIlVfUAkNXFER12eoY7E
TgtXYP4nLBMsBbaPUy7LROrfCl2gdxPdy/q2DI7JHueG2eUznW5IdG4Zipe6RFS/
xCAUebs7E2Cdkc0s+i+6zCvCZQvmUV20tunxyheuwc26PxPT0HEZGpGJhhKOGqGL
tYGr3OXAn7CEiAxwX3XMs4nMRVLAalMnKgsDLIRx4jZkaitvAQb/ufuJWmzf2+u2
dgbPREllAze3LrGsPFjCUdJToAE3AVzYIMbGQr/n/TsUK3v+hbAky2Xu8xuAkUgF
4y/5THaPw2EFKJsZNFhSY7b6hHbO+gr0VzRkx92sPKy4GxnxY7Br80n6A76LBoc=
=mRxr
-----END PGP SIGNATURE-----



From mailing at franzoni.eu  Fri Aug  6 12:20:07 2010
From: mailing at franzoni.eu (Alan Franzoni)
Date: Fri, 06 Aug 2010 20:20:07 +0200
Subject: [Twisted-Python] strange bug with... something :)
In-Reply-To: <4C5B7E3F.5070401@naumen.ru>
References: <4C5B7E3F.5070401@naumen.ru>
Message-ID: <i3hjon$r3f$1@dough.gmane.org>

On 8/6/10 5:15 AM, Сергей Магафуров wrote:

[cut]

I'd like to help you, but I don't really get it.

First:

- What are you trying to do?
- What is your expected outcome?
- What is, on the contrary your program's output?

Second:

your example is too long and is not executable (I need to figure out
what you're calling. Could you shorten it and make it runnable out of
the box?

http://sscce.org/







From bmuller at butterfat.net  Fri Aug  6 13:09:34 2010
From: bmuller at butterfat.net (bmuller at butterfat.net)
Date: Fri, 06 Aug 2010 15:09:34 -0400
Subject: [Twisted-Python] Twisted ORM
Message-ID: <4C5C5DEE.3060606@butterfat.net>

Hello everyone,

I've just finished creating a basic Object Relational Mapper (ORM) in 
Twisted (http://trac.butterfat.net/public/twistar) called Twistar.  The 
goal of the project is most certainly not to duplicate the full 
functionality of existing Python ORM's, but rather to provide a simple 
interface to databases that obviates the need for writing SQL.

With the deprecation of twisted.enterprise.row and 
twisted.enterprise.reflection, the only option right now in twisted for 
database interaction (that I know of) is either via straight SQL through 
adbapi|||| or via patches on existing Python ORM's.  The goal behind 
Twistar is to provide basic ORM functionality but completely within the 
Twisted paradigm.

The code is fully documented (via pydoctor) and the package contains 
unit tests (which can be run by trial).

Who should I talk to concerning possible inclusion in twisted.enterprise?

Thanks,
Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100806/6be937df/attachment-0001.html>

From jkakar at kakar.ca  Fri Aug  6 13:22:28 2010
From: jkakar at kakar.ca (Jamu Kakar)
Date: Fri, 6 Aug 2010 12:22:28 -0700
Subject: [Twisted-Python] Twisted ORM
In-Reply-To: <4C5C5DEE.3060606@butterfat.net>
References: <4C5C5DEE.3060606@butterfat.net>
Message-ID: <AANLkTim3HKthZmpXth3pR0JdTyEDWm9EgA_rhf9qNBSt@mail.gmail.com>

Hi Brian,

On Fri, Aug 6, 2010 at 12:09 PM, bmuller at butterfat.net
<bmuller at butterfat.net> wrote:
> I've just finished creating a basic Object Relational Mapper (ORM) in
> Twisted (http://trac.butterfat.net/public/twistar) called Twistar.  The goal
> of the project is most certainly not to duplicate the full functionality of
> existing Python ORM's, but rather to provide a simple interface to databases
> that obviates the need for writing SQL.
>
> With the deprecation of twisted.enterprise.row and
> twisted.enterprise.reflection, the only option right now in twisted for
> database interaction (that I know of) is either via straight SQL through
> adbapi or via patches on existing Python ORM's.  The goal behind Twistar is
> to provide basic ORM functionality but completely within the Twisted
> paradigm.
>
> The code is fully documented (via pydoctor) and the package contains unit
> tests (which can be run by trial).
>
> Who should I talk to concerning possible inclusion in twisted.enterprise?

This looks quite interesting, thanks for sharing!  It might be worth
considering adding it to the tx project:

https://edge.launchpad.net/tx

tx is a collection of projects that extend Twisted.

Thanks,
J.



From itamar at itamarst.org  Fri Aug  6 13:47:53 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 6 Aug 2010 15:47:53 -0400 (EDT)
Subject: [Twisted-Python] Twisted ORM
In-Reply-To: <4C5C5DEE.3060606@butterfat.net>
References: <4C5C5DEE.3060606@butterfat.net>
Message-ID: <11711.63.107.91.99.1281124073.squirrel@webmail.zoteca.com>

> I've just finished creating a basic Object Relational Mapper (ORM) in
> Twisted (http://trac.butterfat.net/public/twistar) called Twistar.  The
> goal of the project is most certainly not to duplicate the full
> functionality of existing Python ORM's, but rather to provide a simple
> interface to databases that obviates the need for writing SQL.>

I glanced at the documentation, and was wondering what the transactional
model was?

> Who should I talk to concerning possible inclusion in twisted.enterprise?

This is probably beyond the scope of what we'd want to include in Twisted
(which aims to be a networking framework). Distributing it as a standalone
package is probably the way to go.




From jasonjwwilliams at gmail.com  Fri Aug  6 17:20:06 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 6 Aug 2010 17:20:06 -0600
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
Message-ID: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>

Hi,

I'm having an issue using twistd with --profiler=cprofile. I was using
hotshot, but there's a bug in loading big profile logs with it so I'm
trying cProfile instead.

The issue is that with --profiler=cprofile, the --profile=<filename>
flag seems to be ignored. That is no profile file gets created. Any
help is greatly appreciated.

-J



From jvalenzuela1977 at gmail.com  Fri Aug  6 21:41:11 2010
From: jvalenzuela1977 at gmail.com (Jason Valenzuela)
Date: Sat, 07 Aug 2010 11:41:11 +0800
Subject: [Twisted-Python] Question about XMLRPC, Sync and ASync
In-Reply-To: <4C5C4E39.6080807@gmail.com>
References: <4C5C4E39.6080807@gmail.com>
Message-ID: <4C5CD5D7.9040307@gmail.com>

On 8/7/2010 2:02 AM, Colin Fox wrote:


> I think that deferreds will play a part here, but I guess I must be
> missing something, as I'm not sure how to proceed. Can I return a
> deferred from my XMLRPC handler?

You may indeed return a deferred from an RPC method.


> And if so, how do I fire the callback
> when the result comes in to the LineReceiver?

Your remote method that returned the deferred must keep a reference of 
that deferred object until such time as the result is ready. You then 
call the deferred's callback method with the result as the argument.

On another note, if both of your servers are using twisted, a 
prospective broker interface may be easier than a low level LineReceiver 
protocol.


Jason Valenzuela



From general at vultaire.net  Fri Aug  6 21:42:56 2010
From: general at vultaire.net (Paul Goins)
Date: Sat, 07 Aug 2010 12:42:56 +0900
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
In-Reply-To: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>
References: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>
Message-ID: <4C5CD640.5040406@vultaire.net>

Add --savestats.  I'm on 8.2.0, but it probably should still work.

- Paul Goins

On 8/7/2010 8:20 AM, Jason J. W. Williams wrote:
> Hi,
>
> I'm having an issue using twistd with --profiler=cprofile. I was using
> hotshot, but there's a bug in loading big profile logs with it so I'm
> trying cProfile instead.
>
> The issue is that with --profiler=cprofile, the --profile=<filename>
> flag seems to be ignored. That is no profile file gets created. Any
> help is greatly appreciated.
>
> -J
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From werner at thieprojects.ch  Sat Aug  7 03:24:33 2010
From: werner at thieprojects.ch (Werner Thie)
Date: Sat, 07 Aug 2010 11:24:33 +0200
Subject: [Twisted-Python] Twisted ORM
In-Reply-To: <4C5C5DEE.3060606@butterfat.net>
References: <4C5C5DEE.3060606@butterfat.net>
Message-ID: <4C5D2651.2080101@thieprojects.ch>

Great work, I'm currently looking into doing some integration work with 
couchdb and stumbled over paisly https://launchpad.net/paisley but this 
piece of code is poorly maintained.

Not being the db master (neither from heart nor from profession) let me 
ask the dumb question:

How do you rate the chances of interfacing couchdb to your code?

Why am I fascinated by the promises couchdb makes? I really hate the 
overstructuring of data the SQL DBs impose - the moment you structure 
the data is the moment you realize that there is an impedance mismatch 
between data and its usage and technically ORMs are no more than 
impedance adapters, lightening the burden of the programmer to 
restructure data. With the promises couchdb makes in terms of imposing 
the least possible structuring onto the data and doing the 
(re)structuring when querying and retrieving it struck a note in me.

Thanks for comments, Werner

On 06.08.2010 21:09, bmuller at butterfat.net wrote:
> Hello everyone,
>
> I've just finished creating a basic Object Relational Mapper (ORM) in
> Twisted (http://trac.butterfat.net/public/twistar) called Twistar. The
> goal of the project is most certainly not to duplicate the full
> functionality of existing Python ORM's, but rather to provide a simple
> interface to databases that obviates the need for writing SQL.
>
> With the deprecation of twisted.enterprise.row and
> twisted.enterprise.reflection, the only option right now in twisted for
> database interaction (that I know of) is either via straight SQL through
> adbapi|||| or via patches on existing Python ORM's. The goal behind
> Twistar is to provide basic ORM functionality but completely within the
> Twisted paradigm.
>
> The code is fully documented (via pydoctor) and the package contains
> unit tests (which can be run by trial).
>
> Who should I talk to concerning possible inclusion in twisted.enterprise?
>
> Thanks,
> Brian
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From andrewfr_ice at yahoo.com  Sat Aug  7 12:36:02 2010
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 7 Aug 2010 11:36:02 -0700 (PDT)
Subject: [Twisted-Python] Question about XMLRPC, Sync and ASync
Message-ID: <984492.78838.qm@web120706.mail.ne1.yahoo.com>

Hi Colin:

> Message: 1
> Date: Fri, 06 Aug 2010 11:02:33 -0700
> From: Colin Fox <greenenergy at gmail.com>
> Subject: [Twisted-Python] Question about XMLRPC, Sync and
> ASync
> To: twisted-python at twistedmatrix.com
> Message-ID: <4C5C4E39.6080807 at gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1

> What I'm trying to do now has me a little stumped -- I have
> two servers, one of which answers XMLRPC requests, and it calls another
> one using the twisted basic.LineReceiver system.

I am a little confused about the basic.LineReceiver because I thought
that was used for creating server protocols?

> So I have an incoming XMLRPC request, and I need to issue a
> command to the other server and wait for it to come back before I
> respond to the xmlrpc call. So I'm trying to do an async call inside a
> synchronous call.

I'm a bit rusty but lets use this simple example of a XMLRPC server
making another XMLRPC request, processing the data and returning it:

class MyXMLRpcServer(xmlrpc.XMLRPC):
    def __init__(self):
        self.service = xmlrpc.Proxy("http://www.dude.com")

    def xmlrpc_someFunction(self, *argv, **kwargs):
        ....
        return self.service.callRemote(someFunction).\
               addCallback(processResult) 

self.service.callRemote returns a deferred. Returning a deferred
tells the reactor that someFunction() is not finished processing and
to call processResult when there is data from www.dude.com 

eventually processResult(data) is called

def processResult(data)
    """
    do something with data
    """
    return result

This should return a result to the XMLRPC client.


Cheers,
Andrew



      



From andrew at bemusement.org  Sat Aug  7 20:54:22 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Sun, 8 Aug 2010 12:54:22 +1000
Subject: [Twisted-Python] Question about XMLRPC, Sync and ASync
In-Reply-To: <984492.78838.qm@web120706.mail.ne1.yahoo.com>
References: <984492.78838.qm@web120706.mail.ne1.yahoo.com>
Message-ID: <20100808025422.GA8884@aihal.home.puzzling.org>

Andrew Francis wrote:
[...]
> I am a little confused about the basic.LineReceiver because I thought
> that was used for creating server protocols?

Why would you think that?  It's a perfectly good basis for implementing
the client or server side of a line-based protocol.  For example, the
SMTP server protocol and SMTP client protocol in twisted.mail both use
LineReceiver (or LineOnlyReceiver).

TCP is symmetric: once the connection has been established there's no
significant difference between the client and the server, both sides are
just peers.

-Andrew.



From exarkun at twistedmatrix.com  Sat Aug  7 22:05:23 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Aug 2010 04:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1281240323.19.2080754398@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100808/d5e93daa/attachment-0001.html>

From petshmidt at googlemail.com  Mon Aug  9 06:07:51 2010
From: petshmidt at googlemail.com (Pet)
Date: Mon, 9 Aug 2010 14:07:51 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com> 
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com> 
	<20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
Message-ID: <AANLkTinHJRwJGiMuR2keAsTHPqf0jHAiwJPszacc3ytR@mail.gmail.com>

On Thu, Aug 5, 2010 at 5:01 PM,  <exarkun at twistedmatrix.com> wrote:
> On 02:21 pm, petshmidt at googlemail.com wrote:
>>
>> On Thu, Aug 5, 2010 at 3:32 PM, Alan Franzoni <mailing at franzoni.eu> wrote:
>>>
>>> On 8/4/10 1:30 PM, Pet wrote:
>>>>
>>>> AFAIU this works only if Factory is subclassing
>>>> protocol.ServerFactory, XMLRPCFactory subclasses server.Site, where
>>>> protocol attribute is not present
>>>
>>> server.Site subclasses  http.HTTPFactory which, in turns, subclasses
>>> protocol.ServerFactory:
>>>
>>>
>>> http://twistedmatrix.com/documents/10.0.0/api/twisted.web.server.Site.html
>>>
>>>
>>> by the way, if I now understand your question: just subclass XMLRPC and
>>> create your own xmlrpc resource class by adding methods like
>>>
>>> xmlrpc_somemethod
>>> xmlrpc_othermethod
>>>
>>> then add such handler to your server.Site, and you're done. Your method
>>> will be invoked once per request.
>>
>> what I've tried to do is to have objects, which were members of
>> XMLRPC. And these objects would have some internal state which is
>> isolated per request. But each new request has changed this objects,
>> because xmlrpc is created once and not for each request or connection.
>> I've solved this by modifying render_POST where I create those objects
>> before calling requested function and so they lives only there without
>> being overwritten by new request. Ugh... It's might be ugly, but works
>> for me
>
> If you want a new XMLRPC instance per request, then create a new one per
> request.  http://twistedmatrix.com/documents/current/web/howto/web-in-60
> /dynamic-dispatch.html may help.

This works for me too. getChild() returns for each request new
instance. When is this object destroyed? I've putted print into
__del__, but can't see it in log.

Pet

>
> Re-using a single XMLRPC instance and mangling its state in render_POST will
> break as soon as your server receives two overlapping requests.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From exarkun at twistedmatrix.com  Mon Aug  9 07:18:09 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 09 Aug 2010 13:18:09 -0000
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <AANLkTinHJRwJGiMuR2keAsTHPqf0jHAiwJPszacc3ytR@mail.gmail.com>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com>
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com>
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com>
	<20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
	<AANLkTinHJRwJGiMuR2keAsTHPqf0jHAiwJPszacc3ytR@mail.gmail.com>
Message-ID: <20100809131809.2470.973284262.divmod.xquotient.2@localhost.localdomain>

On 12:07 pm, petshmidt at googlemail.com wrote:
>[snip]
>>
>>If you want a new XMLRPC instance per request, then create a new one 
>>per
>>request. �http://twistedmatrix.com/documents/current/web/howto/web- 
>>in-60
>>/dynamic-dispatch.html may help.
>
>This works for me too. getChild() returns for each request new
>instance. When is this object destroyed? I've putted print into
>__del__, but can't see it in log.

At the same time any Python object is destroyed, when there are no more 
references to it.  Twisted won't keep any references to it after the 
response has been completely generated.  So as long as your code also 
keeps no references, it will be destroyed shortly after each request.

Jean-Paul



From petshmidt at googlemail.com  Mon Aug  9 07:32:24 2010
From: petshmidt at googlemail.com (Pet)
Date: Mon, 9 Aug 2010 15:32:24 +0200
Subject: [Twisted-Python] xmlrpc protocoll instanze per connection?
In-Reply-To: <20100809131809.2470.973284262.divmod.xquotient.2@localhost.localdomain>
References: <AANLkTin8aL_sJS6gdLs8PkhrO7ApCdO8pWEHta6B9G3s@mail.gmail.com> 
	<i3bf64$lkn$1@dough.gmane.org>
	<AANLkTimnz57LXBmT3WdH7PpcfqGBvm7X4mqbvqMYNok5@mail.gmail.com> 
	<i3eegt$fl2$1@dough.gmane.org>
	<AANLkTim9b=V9w8GhpcX5iJu7OPoUqep9wX-shanJ3GmH@mail.gmail.com> 
	<20100805150123.2908.1277297271.divmod.xquotient.9@localhost.localdomain>
	<AANLkTinHJRwJGiMuR2keAsTHPqf0jHAiwJPszacc3ytR@mail.gmail.com> 
	<20100809131809.2470.973284262.divmod.xquotient.2@localhost.localdomain>
Message-ID: <AANLkTikxeXvq1ohE2sxZmoR6c4SY5LqpXU4dH8wLtEJ6@mail.gmail.com>

On Mon, Aug 9, 2010 at 3:18 PM,  <exarkun at twistedmatrix.com> wrote:
> On 12:07 pm, petshmidt at googlemail.com wrote:
>>
>> [snip]
>>>
>>> If you want a new XMLRPC instance per request, then create a new one per
>>> request.  http://twistedmatrix.com/documents/current/web/howto/web- in-60
>>> /dynamic-dispatch.html may help.
>>
>> This works for me too. getChild() returns for each request new
>> instance. When is this object destroyed? I've putted print into
>> __del__, but can't see it in log.
>
> At the same time any Python object is destroyed, when there are no more
> references to it.  Twisted won't keep any references to it after the
> response has been completely generated.  So as long as your code also keeps
> no references, it will be destroyed shortly after each request.

getChild() is only defined in my code, I'm not calling it anywhere. so
it must be framework holding reference returned by getChild. Well now
after some minutes they were destroyed.

Thanks

Pet

>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From free at 64studio.com  Tue Aug 10 08:58:07 2010
From: free at 64studio.com (Free Ekanayaka)
Date: Tue, 10 Aug 2010 16:58:07 +0200
Subject: [Twisted-Python] Running tests in parallel with trial
Message-ID: <87zkwuqzuo.fsf@64studio.com>

Hi,

is there a way to tell trial run groups of tests in parallel in
different processes? Something like the "-jN" option in zope-testrunner.

Or alternatively, what's the recommended way to make better use of
multi-core CPUs when running a test suite with trial?

Thanks,

Free



From jml at mumak.net  Tue Aug 10 09:07:56 2010
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 10 Aug 2010 16:07:56 +0100
Subject: [Twisted-Python] Running tests in parallel with trial
In-Reply-To: <87zkwuqzuo.fsf@64studio.com>
References: <87zkwuqzuo.fsf@64studio.com>
Message-ID: <AANLkTi=2=yZ5MBp-+rHEbYZT=mDRdu71fuBv+WBZk6GS@mail.gmail.com>

On Tue, Aug 10, 2010 at 3:58 PM, Free Ekanayaka <free at 64studio.com> wrote:
> Hi,
>
> is there a way to tell trial run groups of tests in parallel in
> different processes? Something like the "-jN" option in zope-testrunner.
>
> Or alternatively, what's the recommended way to make better use of
> multi-core CPUs when running a test suite with trial?
>

In short, no. There's a longstanding ticket about doing this:
http://twistedmatrix.com/trac/ticket/1784.

It would be pretty easy to kludge something together that worked for
parallelizing across cores if you're willing to sacrifice the debugger
support and a bunch of the other advanced things that disttrial aim to
achieve.
  * Add a way for trial to run tests based off a list of FQPNs in a
file, say, --from-list
  * Write something that does:
    * trial --reporter=subunit --dry-run | subunit-ls > all-tests
    * split all-tests into N sublists however you fancy
    * trial --reporter=subunit --from-list=sublistN
    * Then something that aggregates those subunit streams into a real report.

jml



From free at 64studio.com  Tue Aug 10 09:26:40 2010
From: free at 64studio.com (Free Ekanayaka)
Date: Tue, 10 Aug 2010 17:26:40 +0200
Subject: [Twisted-Python] Running tests in parallel with trial
In-Reply-To: <AANLkTi=2=yZ5MBp-+rHEbYZT=mDRdu71fuBv+WBZk6GS@mail.gmail.com>
	(Jonathan Lange's message of "Tue, 10 Aug 2010 16:07:56 +0100")
References: <87zkwuqzuo.fsf@64studio.com>
	<AANLkTi=2=yZ5MBp-+rHEbYZT=mDRdu71fuBv+WBZk6GS@mail.gmail.com>
Message-ID: <87vd7iqyj3.fsf@64studio.com>

Hey,

|--==> On Tue, 10 Aug 2010 16:07:56 +0100, Jonathan Lange <jml at mumak.net> said:

  JL> On Tue, Aug 10, 2010 at 3:58 PM, Free Ekanayaka <free at 64studio.com> wrote:
  >>Hi,
  >>
  >>is there a way to tell trial run groups of tests in parallel in
  >>different processes? Something like the "-jN" option in zope-testrunner.
  >>
  >>Or alternatively, what's the recommended way to make better use of
  >>multi-core CPUs when running a test suite with trial?
  >>

  JL> In short, no. There's a longstanding ticket about doing this:
  JL> http://twistedmatrix.com/trac/ticket/1784.

Thanks for the pointer, it looks very promising.

  JL> It would be pretty easy to kludge something together that worked for
  JL> parallelizing across cores if you're willing to sacrifice the debugger
  JL> support and a bunch of the other advanced things that disttrial aim to
  JL> achieve.
  JL>   * Add a way for trial to run tests based off a list of FQPNs in a
  JL> file, say, --from-list
  JL>   * Write something that does:
  JL>     * trial --reporter=subunit --dry-run | subunit-ls > all-tests
  JL>     * split all-tests into N sublists however you fancy
  JL>     * trial --reporter=subunit --from-list=sublistN
  JL>     * Then something that aggregates those subunit streams into a real report.

That would be indeed easy, and probably acceptable while waiting for
disttrial to get its way into Twisted trunk.

Cheers,

Free



From exarkun at twistedmatrix.com  Tue Aug 10 09:36:51 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 10 Aug 2010 15:36:51 -0000
Subject: [Twisted-Python] Running tests in parallel with trial
In-Reply-To: <AANLkTi=2=yZ5MBp-+rHEbYZT=mDRdu71fuBv+WBZk6GS@mail.gmail.com>
References: <87zkwuqzuo.fsf@64studio.com>
	<AANLkTi=2=yZ5MBp-+rHEbYZT=mDRdu71fuBv+WBZk6GS@mail.gmail.com>
Message-ID: <20100810153651.2470.1448296829.divmod.xquotient.17@localhost.localdomain>

On 03:07 pm, jml at mumak.net wrote:
>On Tue, Aug 10, 2010 at 3:58 PM, Free Ekanayaka <free at 64studio.com> 
>wrote:
>>Hi,
>>
>>is there a way to tell trial run groups of tests in parallel in
>>different processes? Something like the "-jN" option in zope- 
>>testrunner.
>>
>>Or alternatively, what's the recommended way to make better use of
>>multi-core CPUs when running a test suite with trial?
>
>In short, no. There's a longstanding ticket about doing this:
>http://twistedmatrix.com/trac/ticket/1784.

fwiw, the code in the branch basically works.  The only problem it has 
is with doctests.

Jean-Paul



From jasonjwwilliams at gmail.com  Tue Aug 10 14:55:09 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 10 Aug 2010 14:55:09 -0600
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
In-Reply-To: <4C5CD640.5040406@vultaire.net>
References: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>
	<4C5CD640.5040406@vultaire.net>
Message-ID: <AANLkTimyqfC7YdV+M3zAXjLbMwaftG40_zpud+gwynS9@mail.gmail.com>

This doesn't seem to work either. Also on 8.2.0.

-J

On Fri, Aug 6, 2010 at 9:42 PM, Paul Goins <general at vultaire.net> wrote:
> Add --savestats.  I'm on 8.2.0, but it probably should still work.
>
> - Paul Goins
>
> On 8/7/2010 8:20 AM, Jason J. W. Williams wrote:
>> Hi,
>>
>> I'm having an issue using twistd with --profiler=cprofile. I was using
>> hotshot, but there's a bug in loading big profile logs with it so I'm
>> trying cProfile instead.
>>
>> The issue is that with --profiler=cprofile, the --profile=<filename>
>> flag seems to be ignored. That is no profile file gets created. Any
>> help is greatly appreciated.
>>
>> -J
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at twistedmatrix.com  Tue Aug 10 15:20:18 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 10 Aug 2010 21:20:18 -0000
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
In-Reply-To: <AANLkTimyqfC7YdV+M3zAXjLbMwaftG40_zpud+gwynS9@mail.gmail.com>
References: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>
	<4C5CD640.5040406@vultaire.net>
	<AANLkTimyqfC7YdV+M3zAXjLbMwaftG40_zpud+gwynS9@mail.gmail.com>
Message-ID: <20100810212018.2470.248538359.divmod.xquotient.26@localhost.localdomain>

On 08:55 pm, jasonjwwilliams at gmail.com wrote:
>This doesn't seem to work either. Also on 8.2.0.

This works for me:

    twistd --savestats --profiler cprofile -n --profile prof.stats web

prof.stats is written and contains a binary dump of the profile data. 
This also works:

    twistd --profiler cprofile -n --profile prof.stats web

and produces a prof.stats containing a plaintext dump of the profile.

I tested on the 8.2 release branch, which should be the same as the 8.2 
release.  I used Python 2.6 on Ubuntu 9.10.

Jean-Paul



From jasonjwwilliams at gmail.com  Tue Aug 10 15:39:50 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 10 Aug 2010 15:39:50 -0600
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
In-Reply-To: <20100810212018.2470.248538359.divmod.xquotient.26@localhost.localdomain>
References: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>
	<4C5CD640.5040406@vultaire.net>
	<AANLkTimyqfC7YdV+M3zAXjLbMwaftG40_zpud+gwynS9@mail.gmail.com>
	<20100810212018.2470.248538359.divmod.xquotient.26@localhost.localdomain>
Message-ID: <AANLkTi=aauAwF4h65e9E9p97XM_3xr6YrfEuy6z2avHq@mail.gmail.com>

I'm not sure what's wrong then. Tried your command line and got
nothing written. Tried it with 10.1 and same deal. I'll keep hacking
at it.

-J

On Tue, Aug 10, 2010 at 3:20 PM,  <exarkun at twistedmatrix.com> wrote:
> On 08:55 pm, jasonjwwilliams at gmail.com wrote:
>>This doesn't seem to work either. Also on 8.2.0.
>
> This works for me:
>
>    twistd --savestats --profiler cprofile -n --profile prof.stats web
>
> prof.stats is written and contains a binary dump of the profile data.
> This also works:
>
>    twistd --profiler cprofile -n --profile prof.stats web
>
> and produces a prof.stats containing a plaintext dump of the profile.
>
> I tested on the 8.2 release branch, which should be the same as the 8.2
> release.  I used Python 2.6 on Ubuntu 9.10.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From peter.westlake at pobox.com  Wed Aug 11 10:30:36 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Wed, 11 Aug 2010 17:30:36 +0100
Subject: [Twisted-Python] How to bisect Twisted?
Message-ID: <1281544236.14078.1389420521@webmail.messagingengine.com>

In the Git version of the Twisted source code, there are tags for
releases, e.g. the revision with SHA id
85a6a0f9e3c4ea22d1d72d4ca8eb0c08ee99ca85 corresponds to 8.0.0. This is
good, but there aren't any intermediate changes on that branch (tag?),
just the releases! So there isn't much for "git bisect" to work with.
I'm trying to trace a bug that wasn't in 2.5.0 but is in 8.0.0; what
arguments should I give to bisect? Apologies if this is obvious to
anyone who knows how to use git, but I'm just a beginner.

Thanks,

Peter.



From jml at mumak.net  Wed Aug 11 10:50:22 2010
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 11 Aug 2010 17:50:22 +0100
Subject: [Twisted-Python] How to bisect Twisted?
In-Reply-To: <1281544236.14078.1389420521@webmail.messagingengine.com>
References: <1281544236.14078.1389420521@webmail.messagingengine.com>
Message-ID: <AANLkTi=zLkQ5pmLEb4svpyHK-CZDNsx91bN5D6o0r1rS@mail.gmail.com>

On Wed, Aug 11, 2010 at 5:30 PM, Peter Westlake
<peter.westlake at pobox.com> wrote:
> In the Git version of the Twisted source code, there are tags for
> releases, e.g. the revision with SHA id
> 85a6a0f9e3c4ea22d1d72d4ca8eb0c08ee99ca85 corresponds to 8.0.0. This is
> good, but there aren't any intermediate changes on that branch (tag?),
> just the releases! So there isn't much for "git bisect" to work with.
> I'm trying to trace a bug that wasn't in 2.5.0 but is in 8.0.0; what
> arguments should I give to bisect? Apologies if this is obvious to
> anyone who knows how to use git, but I'm just a beginner.
>

I don't know about git, but the way I'd do it in Bazaar is:
  bzr bisect -r svn:19165..svn:23025 run <script>

Where <script> is something that tests for the bug.

Revision numbers obtained from
http://twistedmatrix.com/trac/wiki/ReleaseRevisions; bzr-bisect from
https://launchpad.net/bzr-bisect; bzr-svn from
https://launchpad.net/bzr-svn.

jml



From general at vultaire.net  Wed Aug 11 18:31:01 2010
From: general at vultaire.net (Paul Goins)
Date: Thu, 12 Aug 2010 09:31:01 +0900
Subject: [Twisted-Python] Using cProfile instead of hotshot with twistd
In-Reply-To: <AANLkTi=aauAwF4h65e9E9p97XM_3xr6YrfEuy6z2avHq@mail.gmail.com>
References: <AANLkTinngv0S1aVRxeOJYfkJfsfkVz4=g2SaO37iKM4B@mail.gmail.com>	<4C5CD640.5040406@vultaire.net>	<AANLkTimyqfC7YdV+M3zAXjLbMwaftG40_zpud+gwynS9@mail.gmail.com>	<20100810212018.2470.248538359.divmod.xquotient.26@localhost.localdomain>
	<AANLkTi=aauAwF4h65e9E9p97XM_3xr6YrfEuy6z2avHq@mail.gmail.com>
Message-ID: <4C6340C5.1050700@vultaire.net>

Let me ask this: if you use the exact same command line, but change 
"--profiler cprofile" to "--profiler profile"", is the file generated?

- Paul Goins

On 8/11/2010 6:39 AM, Jason J. W. Williams wrote:
> I'm not sure what's wrong then. Tried your command line and got
> nothing written. Tried it with 10.1 and same deal. I'll keep hacking
> at it.
>
> -J
>
> On Tue, Aug 10, 2010 at 3:20 PM,<exarkun at twistedmatrix.com>  wrote:
>> On 08:55 pm, jasonjwwilliams at gmail.com wrote:
>>> This doesn't seem to work either. Also on 8.2.0.
>>
>> This works for me:
>>
>>     twistd --savestats --profiler cprofile -n --profile prof.stats web
>>
>> prof.stats is written and contains a binary dump of the profile data.
>> This also works:
>>
>>     twistd --profiler cprofile -n --profile prof.stats web
>>
>> and produces a prof.stats containing a plaintext dump of the profile.
>>
>> I tested on the 8.2 release branch, which should be the same as the 8.2
>> release.  I used Python 2.6 on Ubuntu 9.10.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From screwtape at froup.com  Wed Aug 11 20:49:25 2010
From: screwtape at froup.com (Tim Allen)
Date: Thu, 12 Aug 2010 12:49:25 +1000
Subject: [Twisted-Python] How to bisect Twisted?
In-Reply-To: <1281544236.14078.1389420521@webmail.messagingengine.com>
References: <1281544236.14078.1389420521@webmail.messagingengine.com>
Message-ID: <20100812024925.GA27174@boombah.thristian.org>

On Wed, Aug 11, 2010 at 05:30:36PM +0100, Peter Westlake wrote:
> In the Git version of the Twisted source code, there are tags for
> releases, e.g. the revision with SHA id
> 85a6a0f9e3c4ea22d1d72d4ca8eb0c08ee99ca85 corresponds to 8.0.0.

When you say "git version of the Twisted source code", do you mean the
official git described here?

    http://twistedmatrix.com/trac/wiki/GitMirror

Do tags for the various Twisted releases show up if you run:
    
    git tag -l

?

> This is
> good, but there aren't any intermediate changes on that branch (tag?),
> just the releases! So there isn't much for "git bisect" to work with.
> I'm trying to trace a bug that wasn't in 2.5.0 but is in 8.0.0; what
> arguments should I give to bisect? Apologies if this is obvious to
> anyone who knows how to use git, but I'm just a beginner.

I haven't used the official git mirror myself, but I have my own mirror
created with "git-svn". It looks like git-svn got very confused about
Twisted's release-tagging system; of all the tags I see listed at:

    http://twistedmatrix.com/trac/browser/tags

...the only thing in .git/refs/remotes/tags is the "releases"
subdirectory, which isn't actually a proper tag at all.

So, uh, yeah, I'm stumped.

If you *do* figure out what to do, though, feel free to add it to the
GitMirror wiki-page - or I'd be happy to write it up for you.



From zoran.bosnjak at sloveniacontrol.si  Thu Aug 12 06:26:19 2010
From: zoran.bosnjak at sloveniacontrol.si (Zoran Bosnjak)
Date: Thu, 12 Aug 2010 14:26:19 +0200
Subject: [Twisted-Python] global exception handler
Message-ID: <1281615979.30773.16.camel@bosnjak-laptop>

Hello all,
is there a possibility to have a global (application wide) exception
handler in twisted application? I would like to stop application in case
of any unhandled error in deferred callbacks.

If application is run from twistd ..., is it correct to stop application
like this?

def quit(failure):
  log.err(str(failure))
  reactor.callWhenRunning(reactor.stop)

But the main problem is how to get this method called if exception is
not handled by explicitly doing d.addErrback for each case.

Zoran




From itamar at itamarst.org  Thu Aug 12 06:55:46 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 12 Aug 2010 08:55:46 -0400
Subject: [Twisted-Python] global exception handler
In-Reply-To: <1281615979.30773.16.camel@bosnjak-laptop>
References: <1281615979.30773.16.camel@bosnjak-laptop>
Message-ID: <1281617746.1558.3.camel@blake>

On Thu, 2010-08-12 at 14:26 +0200, Zoran Bosnjak wrote:
> Hello all,
> is there a possibility to have a global (application wide) exception
> handler in twisted application? I would like to stop application in case
> of any unhandled error in deferred callbacks.

Why not add an error handler yourself for these Deferreds?

It is possible to get a function called for all unhandled errors by
adding a log observer
(http://twistedmatrix.com/documents/current/core/howto/logging.html#auto5) but this logging only happens on garbage collection of the Deferred, which means it can be delayed indefinitely in some cases.




From peter.westlake at pobox.com  Thu Aug 12 08:28:29 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 12 Aug 2010 15:28:29 +0100
Subject: [Twisted-Python] How to bisect Twisted?
In-Reply-To: <AANLkTi=zLkQ5pmLEb4svpyHK-CZDNsx91bN5D6o0r1rS@mail.gmail.com>
References: <1281544236.14078.1389420521@webmail.messagingengine.com>
	<AANLkTi=zLkQ5pmLEb4svpyHK-CZDNsx91bN5D6o0r1rS@mail.gmail.com>
Message-ID: <1281623309.11717.1389585131@webmail.messagingengine.com>


On Wed, 11 Aug 2010 17:50 +0100, "Jonathan Lange" <jml at mumak.net> wrote:
> On Wed, Aug 11, 2010 at 5:30 PM, Peter Westlake
> <peter.westlake at pobox.com> wrote:
> > In the Git version of the Twisted source code, there are tags for
> > releases, e.g. the revision with SHA id
> > 85a6a0f9e3c4ea22d1d72d4ca8eb0c08ee99ca85 corresponds to 8.0.0. This is
> > good, but there aren't any intermediate changes on that branch (tag?),
> > just the releases! So there isn't much for "git bisect" to work with.
> > I'm trying to trace a bug that wasn't in 2.5.0 but is in 8.0.0; what
> > arguments should I give to bisect? Apologies if this is obvious to
> > anyone who knows how to use git, but I'm just a beginner.
> >
> 
> I don't know about git, but the way I'd do it in Bazaar is:
>   bzr bisect -r svn:19165..svn:23025 run <script>
> 
> Where <script> is something that tests for the bug.
> 
> Revision numbers obtained from
> http://twistedmatrix.com/trac/wiki/ReleaseRevisions; 

Excellent, thanks! The revision numbers are just what I need.

Peter.

> bzr-bisect from
> https://launchpad.net/bzr-bisect; bzr-svn from
> https://launchpad.net/bzr-svn.
> 
> jml
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From peter.westlake at pobox.com  Thu Aug 12 08:49:03 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 12 Aug 2010 15:49:03 +0100
Subject: [Twisted-Python] How to bisect Twisted?
In-Reply-To: <20100812024925.GA27174@boombah.thristian.org>
References: <1281544236.14078.1389420521@webmail.messagingengine.com>
	<20100812024925.GA27174@boombah.thristian.org>
Message-ID: <1281624543.15869.1389588071@webmail.messagingengine.com>

On Thu, 12 Aug 2010 12:49 +1000, "Tim Allen" <screwtape at froup.com>
wrote:
> On Wed, Aug 11, 2010 at 05:30:36PM +0100, Peter Westlake wrote:
> > In the Git version of the Twisted source code, there are tags for
> > releases, e.g. the revision with SHA id
> > 85a6a0f9e3c4ea22d1d72d4ca8eb0c08ee99ca85 corresponds to 8.0.0.
> 
> When you say "git version of the Twisted source code", do you mean the
> official git described here?
> 
>     http://twistedmatrix.com/trac/wiki/GitMirror

Yes, that's the one.

> Do tags for the various Twisted releases show up if you run:
>     
>     git tag -l
> 
> ?

The only output is:

   svn/releases

Looking at the repo with "gitk --all", that appears to be the
name of a branch that is completely disconnected from all other
revisions. Its first change has no parent.

> > This is
> > good, but there aren't any intermediate changes on that branch (tag?),
> > just the releases! So there isn't much for "git bisect" to work with.
> > I'm trying to trace a bug that wasn't in 2.5.0 but is in 8.0.0; what
> > arguments should I give to bisect? Apologies if this is obvious to
> > anyone who knows how to use git, but I'm just a beginner.
> 
> I haven't used the official git mirror myself, but I have my own mirror
> created with "git-svn". It looks like git-svn got very confused about
> Twisted's release-tagging system; of all the tags I see listed at:
> 
>     http://twistedmatrix.com/trac/browser/tags
> 
> ...the only thing in .git/refs/remotes/tags is the "releases"
> subdirectory, which isn't actually a proper tag at all.
> 
> So, uh, yeah, I'm stumped.
> 
> If you *do* figure out what to do, though, feel free to add it to the
> GitMirror wiki-page - or I'd be happy to write it up for you.

Thanks! Jonathan's pointer to the list of revisions ought to be
enough for me to start bisecting, and I'll try to figure out what's
happening in Git as I go along.

Thanks for the help,

Peter.



From terry at jon.es  Fri Aug 13 19:12:52 2010
From: terry at jon.es (Terry Jones)
Date: Sat, 14 Aug 2010 03:12:52 +0200
Subject: [Twisted-Python] Deferred's chainDeferred is too simplistic?
Message-ID: <19557.60820.567617.444599@jon.es>

I think it's worth spending some time thinking about whether chainDeferred
in t.i.defer.Deferred is too simplistic. I've thought for a while that it
could be more helpful in preventing people from doing unintended things
and/or cause fewer surprises (e.g., see point #1 at http://bit.ly/bp6iT5
which JP agreed with in the followup).

Those are smaller things that people can obviously live with. But a more
important one concerns deferred cancellation. See uncalled.py below.

Here are five examples of chainDeferred behavior that I think could be
better. In an attempt to fix these, I made a few changes to a copy of
defer.py (immodestly called tdefer.py, sorry) which you can grab, with
runnable examples, from http://github.com/fluidinfo/chainDeferredExamples
The tdefer.py code is meant as a suggested approach. I doubt that it's
bulletproof.

Here are the examples.

boom1.py:

    # Normal deferreds: this raises defer.AlreadyCalledError because
    # the callback of d1 causes the callback of d2 to be called, but d2 has
    # already been cancelled (and hence called).

    # With tdefer.py: there is no error because d1.callback will not call
    # d2 as it has already been cancelled.

    def printCancel(fail):
        fail.trap(defer.CancelledError)
        print 'cancelled'

    def canceller(d):
        print 'cancelling'

    d1 = defer.Deferred()
    d2 = defer.Deferred(canceller)
    d2.addErrback(printCancel)
    d1.chainDeferred(d2)
    d2.cancel()
    d1.callback('hey')


boom2.py:

    # Normally: raises defer.AlreadyCalledError because calling d1.callback
    # will call d2, which has already been called.

    # With tdefer.py: Raises AssertionError: "Can't callback an already
    # chained deferred" because calling callback on a deferred that's
    # already been chained is asking for trouble (as above).

    d1 = defer.Deferred()
    d2 = defer.Deferred()
    d1.chainDeferred(d2)
    d2.callback('hey')
    d1.callback('jude')


uncalled.py:

    # Normally: although d2 has been chained to d1, when d1 is cancelled,
    # d2's cancel method is never called. Even calling d2.cancel ourselves
    # after the call to d1.cancel has no effect, as d2 has already been
    # called.

    # With tdefer: both cancel1 and cancel2 are called when d1.cancel is
    # called. The additional final call to d2.cancel correctly has no
    # effect as d2 has been called (via d1.cancel).

    def cancel1(d):
        print 'cancel one'

    def cancel2(d):
        print 'cancel two'

    def reportCancel(fail, which):
        fail.trap(defer.CancelledError)
        print 'cancelled', which

    d1 = defer.Deferred(cancel1)
    d1.addErrback(reportCancel, 'one')
    d2 = defer.Deferred(cancel2)
    d2.addErrback(reportCancel, 'two')
    d1.chainDeferred(d2)
    d1.cancel()
    d2.cancel()


unexpected1.py:

    # Normally: prints "called: None", instead of the probably expected
    # "called: hey"

    # tdefer.py: prints "called: hey"

    def called(result):
        print 'called:', result

    d1 = defer.Deferred()
    d2 = defer.Deferred()
    d1.chainDeferred(d2)
    d1.addCallback(called)
    d1.callback('hey')


unexpected2.py:

    # Normally: prints
    #   called 2: hey
    #   called 3: None

    # tdefer.py: prints
    #   called 2: hey
    #   called 3: hey

    def report2(result):
        print 'called 2:', result

    def report3(result):
        print 'called 3:', result

    d1 = defer.Deferred()
    d2 = defer.Deferred().addCallback(report2)
    d3 = defer.Deferred().addCallback(report3)
    d1.chainDeferred(d2)
    d1.chainDeferred(d3)
    d1.callback('hey')


I wont go into detail here as this post is already long enough. Those are 3
classes of behavior arising from chainDeferred being very simplistic.
Comments welcome, of course.  Once again, runnable code is at
http://github.com/fluidinfo/chainDeferredExamples

Terry



From bmuller at butterfat.net  Sat Aug 14 11:17:46 2010
From: bmuller at butterfat.net (bmuller at butterfat.net)
Date: Sat, 14 Aug 2010 13:17:46 -0400
Subject: [Twisted-Python] Twisted ORM
In-Reply-To: <4C5D2651.2080101@thieprojects.ch>
References: <4C5C5DEE.3060606@butterfat.net> <4C5D2651.2080101@thieprojects.ch>
Message-ID: <4C66CFBA.7030006@butterfat.net>

Thanks for the feedback Werner, see embedded:
> Great work, I'm currently looking into doing some integration work with
> couchdb and stumbled over paisly https://launchpad.net/paisley but this
> piece of code is poorly maintained.
>    
I've seem other projects that use twisted and couchdb, and they seemed 
to all just be using the twisted HTTP client to access the couchdb REST API.
> Not being the db master (neither from heart nor from profession) let me
> ask the dumb question:
>
> How do you rate the chances of interfacing couchdb to your code?
>    
It's not likely.  Twistar is designed specifically for relational 
databases - something like Paisley or accessing the REST API directly 
will likely be your best bet for couchdb.
> Why am I fascinated by the promises couchdb makes? I really hate the
> overstructuring of data the SQL DBs impose - the moment you structure
> the data is the moment you realize that there is an impedance mismatch
> between data and its usage and technically ORMs are no more than
> impedance adapters, lightening the burden of the programmer to
> restructure data. With the promises couchdb makes in terms of imposing
> the least possible structuring onto the data and doing the
> (re)structuring when querying and retrieving it struck a note in me.
>    
There are certainly benefits to loosely structured storage.  SQL based 
storage is not going away anytime soon, though, and hopefully Twistar 
can make interacting with those relational DB's a little easier.  Due to 
the structural differences, though, it would probably be a better idea 
to either start a new project or extend Paisley if you're interested in 
a better Twisted-based interface to CouchDB.


Brian



> On 06.08.2010 21:09, bmuller at butterfat.net wrote:
>    
>> Hello everyone,
>>
>> I've just finished creating a basic Object Relational Mapper (ORM) in
>> Twisted (http://trac.butterfat.net/public/twistar) called Twistar. The
>> goal of the project is most certainly not to duplicate the full
>> functionality of existing Python ORM's, but rather to provide a simple
>> interface to databases that obviates the need for writing SQL.
>>
>> With the deprecation of twisted.enterprise.row and
>> twisted.enterprise.reflection, the only option right now in twisted for
>> database interaction (that I know of) is either via straight SQL through
>> adbapi|||| or via patches on existing Python ORM's. The goal behind
>> Twistar is to provide basic ORM functionality but completely within the
>> Twisted paradigm.
>>
>> The code is fully documented (via pydoctor) and the package contains
>> unit tests (which can be run by trial).
>>
>> Who should I talk to concerning possible inclusion in twisted.enterprise?
>>
>> Thanks,
>> Brian
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>      
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>    




From exarkun at twistedmatrix.com  Sat Aug 14 22:05:25 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Aug 2010 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1281845125.56.650560046@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100815/107f9e0f/attachment-0001.html>

From smagafurov at naumen.ru  Mon Aug 16 02:34:35 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Mon, 16 Aug 2010 14:34:35 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
Message-ID: <4C68F81B.7020204@naumen.ru>

At first, sorry for my bad english
I will try to explain idea about Deferreds and inlineCallbacks

Wanted features:
1. Ability to delete callbacks (delCallbacks)
2. Automatic cancelling Deferreds if they are not needed any more (no 
callbacks registered any more, all was deleted)
3. Ability to add/del hooks on deferred's finishing with errback or 
callback (addFinalizer/delFinalizer)
4. Automatic call registered finalizers when deferred finished with 
errback or callback (and cancel due to cancel calls errback)

With this features we can make cascading cancelling of inlineCallbacks 
and cancelling full stack tree of inlineCallbacks when it is not needed 
any more (some shutdown occurs for example at top level)

See full code for details (this is runnable script):

from twisted.internet import defer
from twisted.python.failure import Failure
from sys import exc_info

import warnings

class InlineCallbacksManager(object):
     def __init__(self, *args, **kw):
         self.deferred = defer.Deferred()

     def send_result(self, g, result):
         return g.send(result)

     def throw_exception(self, g, result):
         return result.throwExceptionIntoGenerator(g)

     def stop_iteration(self):
         self.deferred.callback(None)
         return self.deferred

     def return_value(self, value):
         self.deferred.callback(value)
         return self.deferred

     def exception(self):
         self.deferred.errback()
         return self.deferred

     def _inlineCallbacks(self, result, g):
         """
         See L{inlineCallbacks}.
         """
         # This function is complicated by the need to prevent unbounded 
recursion
         # arising from repeatedly yielding immediately ready 
deferreds.  This while
         # loop and the waiting variable solve that by manually 
unfolding the
         # recursion.

         waiting = [True, # waiting for result?
                    None] # result

         while 1:
             try:
                 # Send the last result back as the result of the yield 
expression.
                 isFailure = isinstance(result, Failure)
                 if isFailure:
                     result = self.throw_exception(g, result)
                 else:
                     result = self.send_result(g, result)
             except StopIteration:
                 # fell off the end, or "return" statement
                 return self.stop_iteration()
             except defer._DefGen_Return, e:
                 # returnValue() was called; time to give a result to 
the original
                 # Deferred.  First though, let's try to identify the 
potentially
                 # confusing situation which results when returnValue() is
                 # accidentally invoked from a different function, one 
that wasn't
                 # decorated with @inlineCallbacks.

                 # The traceback starts in this frame (the one for
                 # _inlineCallbacks); the next one down should be the 
application
                 # code.
                 appCodeTrace = exc_info()[2].tb_next.tb_next
                 if isFailure:
                     # If we invoked this generator frame by throwing an 
exception
                     # into it, then throwExceptionIntoGenerator will 
consume an
                     # additional stack frame itself, so we need to skip 
that too.
                     appCodeTrace = appCodeTrace.tb_next
                 # Now that we've identified the frame being exited by the
                 # exception, let's figure out if returnValue was called 
from it
                 # directly.  returnValue itself consumes a stack frame, 
so the
                 # application code will have a tb_next, but it will 
*not* have a
                 # second tb_next.
                 if appCodeTrace.tb_next.tb_next:
                     # If returnValue was invoked non-local to the frame 
which it is
                     # exiting, identify the frame that ultimately invoked
                     # returnValue so that we can warn the user, as this 
behavior is
                     # confusing.
                     ultimateTrace = appCodeTrace
                     while ultimateTrace.tb_next.tb_next:
                         ultimateTrace = ultimateTrace.tb_next
                     filename = ultimateTrace.tb_frame.f_code.co_filename
                     lineno = ultimateTrace.tb_lineno
                     warnings.warn_explicit(
                         "returnValue() in %r causing %r to exit: "
                         "returnValue should only be invoked by 
functions decorated "
                         "with inlineCallbacks" % (
                             ultimateTrace.tb_frame.f_code.co_name,
                             appCodeTrace.tb_frame.f_code.co_name),
                         DeprecationWarning, filename, lineno)
                 return self.return_value(e.value)
             except:
                 return self.exception()

             if isinstance(result, tuple): # yield tuple support!!!
                 non_deferreds_cnt = 0
                 list_of_deferreds = []
                 for r in result:
                     if not isinstance(r, defer.Deferred):
                         r = defer.succeed(r)
                         non_deferreds_cnt += 1
                     list_of_deferreds.append(r)

                 if non_deferreds_cnt != len(result):
                     result = defer.DeferredList(list_of_deferreds, 
fireOnOneErrback=1)

             if isinstance(result, defer.Deferred):
                 # a deferred was yielded, get the result.
                 if isinstance(result, defer.DeferredList): # yield 
tuple support!!!
                     def gotResult(r):
                         if isinstance(r, Failure):
                             r = r.value.subFailure
                         else:
                             r = tuple(_r for _s, _r in r)
                         if waiting[0]:
                             waiting[0] = False
                             waiting[1] = r
                         else:
                             self.deferred.delFinalizer(result.delBoth, 
gotResult) # cascading cancelling support!!!
                             self._inlineCallbacks(r, g)
                 else:
                     def gotResult(r):
                         if waiting[0]:
                             waiting[0] = False
                             waiting[1] = r
                         else:
                             self.deferred.delFinalizer(result.delBoth, 
gotResult) # cascading cancelling support!!!
                             self._inlineCallbacks(r, g)

                 result.addBoth(gotResult)
                 if waiting[0]:
                     # Haven't called back yet, set flag so that we get 
reinvoked
                     # and return from the loop
                     waiting[0] = False
                     self.deferred.addFinalizer(result.delBoth, 
gotResult) # cascading cancelling support!!!
                     return self.deferred

                 result = waiting[1]
                 # Reset waiting to initial values for next loop.  
gotResult uses
                 # waiting, but this isn't a problem because gotResult 
is only
                 # executed once, and if it hasn't been executed yet, 
the return
                 # branch above would have been taken.

                 waiting[0] = True
                 waiting[1] = None

from twisted.python.util import mergeFunctionMetadata

def create_inline_callbacks_decorator(manager_factory):
     def inline_callbacks(f):
         def unwind_generator(*args, **kwargs):
             manager = manager_factory(*args, **kwargs)
             return manager._inlineCallbacks(None, f(*args, **kwargs))
         return mergeFunctionMetadata(f, unwind_generator)
     return inline_callbacks

inlineCallbacks = create_inline_callbacks_decorator(InlineCallbacksManager)

defer.inlineCallbacks = inlineCallbacks

# # # #
# Deferred
#

# Fixes:
# 1. raise CancelledError with current traceback (original twisted code 
raises with empty traceback)
# 2. ability to cancal with given traceback (parameter `failure`, if 
callable must return failure)
def deferred_cancel(self, failure=None):
     if not self.called:
         canceller = self._canceller
         if canceller:
             canceller(self)
         else:
             # Arrange to eat the callback that will eventually be fired
             # since there was no real canceller.
             self._suppressAlreadyCalled = 1
         if not self.called:
             # There was no canceller, or the canceller didn't call
             # callback or errback.
             if failure is not None:
                 if callable(failure):
                     failure = failure()
                 self.errback(failure)
             else:
                 try:
                     raise defer.CancelledError()
                 except defer.CancelledError:
                     self.errback(Failure())

     elif isinstance(self.result, defer.Deferred):
         # Waiting for another deferred -- cancel it instead.
         self.result.cancel()
defer.Deferred.cancel = deferred_cancel

# Fixes: add `finalizers` member
original_deferred___init__ = defer.Deferred.__init__
def deferred___init__(self, *args, **kw):
     original_deferred___init__(self, *args, **kw)
     self.finalizers = []
defer.Deferred.__init__ = deferred___init__

def deferred_addFinalizer(self, callback, *args, **kw):
     assert callable(callback)
     self.finalizers.append((callback, args, kw))
     if self.called:
         self._runFinalizers()
     return self
defer.Deferred.addFinalizer = deferred_addFinalizer

def deferred_delFinalizer(self, callback, *args, **kw):
     if self.called:
         defer.AlreadyCalledError
     assert callable(callback)
     self.finalizers.remove((callback, args, kw))
     return self
defer.Deferred.delFinalizer = deferred_delFinalizer

def deferred__runFinalizers(self):
     if not self._finalized:
         self._finalized = True
         for callback, args, kw in self.finalizers:
             callback(*args, **kw)
defer.Deferred._runFinalizers = deferred__runFinalizers
defer.Deferred._finalized = False

# Fixes: run `finalizers` when done
original_deferred_callback = defer.Deferred.callback
def deferred_callback(self, result):
     original_deferred_callback(self, result)
     self._runFinalizers()
defer.Deferred.callback = deferred_callback

# Fixes: run `finalizers` when done
original_deferred_errback = defer.Deferred.errback
def deferred_errback(self, fail=None):
     original_deferred_errback(self, fail=fail)
     self._runFinalizers()
defer.Deferred.errback = deferred_errback

def _skip_result(result):
     pass

def deferred_delCallbacks(self, callback, errback=None,
                  callbackArgs=None, callbackKeywords=None,
                  errbackArgs=None, errbackKeywords=None):
     if self.called:
         defer.AlreadyCalledError

     assert callable(callback)
     assert errback == None or callable(errback)
     cbs = ((callback, callbackArgs, callbackKeywords),
            (errback or (defer.passthru), errbackArgs, errbackKeywords))
     self.callbacks.remove(cbs)

     if not self.callbacks:
         self.addBoth(_skip_result)
         self.cancel()

     return self
defer.Deferred.delCallbacks = deferred_delCallbacks

def deferred_delCallback(self, callback, *args, **kw):
     return self.delCallbacks(callback, callbackArgs=args,
                              callbackKeywords=kw)
defer.Deferred.delCallback = deferred_delCallback

def deferred_delErrback(self, errback, *args, **kw):
     return self.delCallbacks(defer.passthru, errback,
                              errbackArgs=args,
                              errbackKeywords=kw)
defer.Deferred.delErrback = deferred_delErrback

def deferred_delBoth(self, callback, *args, **kw):
     return self.delCallbacks(callback, callback,
                              callbackArgs=args, errbackArgs=args,
                              callbackKeywords=kw, errbackKeywords=kw)
defer.Deferred.delBoth = deferred_delBoth

def deferred_unchainDeferred(self, d):
     return self.delCallbacks(d.callback, d.errback)
defer.Deferred.unchainDeferred = deferred_unchainDeferred

def deferred_delCallbacksSafe(self, *args, **kw):
     if not self.called:
         return self.delCallbacks(*args, **kw)
     return self
defer.Deferred.delCallbacksSafe = deferred_delCallbacksSafe

def deferred_delCallbackSafe(self, *args, **kw):
     if not self.called:
         return self.delCallback(*args, **kw)
     return self
defer.Deferred.delCallbackSafe = deferred_delCallbackSafe

def deferred_delErrbackSafe(self, *args, **kw):
     if not self.called:
         return self.delErrback(*args, **kw)
     return self
defer.Deferred.delErrbackSafe = deferred_delErrbackSafe

def deferred_delBothSafe(self, *args, **kw):
     if not self.called:
         return self.delBoth(*args, **kw)
     return self
defer.Deferred.delBothSafe = deferred_delBothSafe

def deferred_unchainDeferredSafe(self, *args, **kw):
     if not self.called:
         return self.unchainDeferred(*args, **kw)
     return self
defer.Deferred.unchainDeferredSafe = deferred_unchainDeferredSafe

# # # #
# DeferredList
#

# fixes: delCallbacks when finished
original_deferred_list___init__ = defer.DeferredList.__init__
def deferred_list___init__(self, deferredList, *args, **kw):
     original_deferred_list___init__(self, deferredList, *args, **kw)
     index = 0
     for deferred in deferredList:
         self.addFinalizer(
             deferred.delCallbacksSafe,
             self._cbDeferred,
             self._cbDeferred,
             callbackArgs=(index,defer.SUCCESS),
             errbackArgs=(index,defer.FAILURE),
         )
         index = index + 1
defer.DeferredList.__init__ = deferred_list___init__

# # # #
# Test
#

if __name__ == '__main__':
     from twisted.internet import reactor
     import threading
     import time

     def log(s):
         print time.strftime('%H:%M:%S'), s

     # some long deferred work
     def deferred_work():
         cancel_flag = [False]
         def my_canceller(d):
             cancel_flag[0] = True
         res = defer.Deferred(canceller=my_canceller)
         def work():
             log('start work')
             cnt = 7
             while cnt:
                 cnt -= 1
                 time.sleep(1)
                 if cancel_flag[0]:
                     log('work cancelled')
                     return
             log('finish work, work not cancelled!!!')
             return res.callback(7)
         threading.Thread(target=work).start()
         return res

     # # # #
     # Shuttingdown test
     # notes: register all inlineCallbacks deferreds and cancel them all 
when shuttingdown occurs
     #

     class ShuttingdownError(BaseException):
         pass

     # base class for shuttingdown support
     class ShuttingdownSupport(object):
         shuttingdown = 0

         def __init__(self):
             self._deferreds = {}

         def shutdown(self):
             self.shuttingdown = 1
             self.do_shutdown()

         def do_shutdown(self):
             log('SHUTDOWN')
             for deferred in self._deferreds.keys():
                 try:
                     raise ShuttingdownError
                 except ShuttingdownError:
                     deferred.errback()

         def _reg_deferred(self, deferred):
             self._deferreds[deferred] = 1

         def _unreg_deferred(self, deferred):
             del self._deferreds[deferred]

     # special inlineCallbacks manager for shuttingdown support
     class 
InlineCallbacksManagerWithShuttingdownSupport(InlineCallbacksManager):
         def __init__(self, instance, *args, **kw):
             self.deferred = defer.Deferred()
             self.instance = instance
             instance._reg_deferred(self.deferred)
             self.deferred.addFinalizer(instance._unreg_deferred, 
self.deferred)

         def send_result(self, g, result):
             if self.instance.shuttingdown: # if shuttingdown occurs 
while waiting result then raise ShuttingdownError into generator
                 try:
                     raise ShuttingdownError
                 except ShuttingdownError:
                     failure = Failure()
                     self.throw_exception(g, failure)
             else:
                 return InlineCallbacksManager.send_result(self, g, result)

     # decorator for methods of ShuttingdownSupport objects
     inlineCallbacksShuttingdown = 
create_inline_callbacks_decorator(InlineCallbacksManagerWithShuttingdownSupport)

     class ShuttingdownTest(ShuttingdownSupport):
         @inlineCallbacksShuttingdown
         def test1(self):
             log('start ShuttingdownTest.test1')
             try:
                 res = yield deferred_work()
             except defer.CancelledError:
                 log('ShuttingdownTest.test1 cancelled')
                 raise
             except ShuttingdownError:
                 log('ShuttingdownTest.test1 shuttingdown detected')
                 raise
             log('finish ShuttingdownTest.test1')
             defer.returnValue(res)

         @inlineCallbacksShuttingdown
         def test2(self):
             log('start ShuttingdownTest.test2')
             try:
                 res = yield self.test1(), self.test1() # test yield 
tuple!!!
             except defer.CancelledError:
                 log('ShuttingdownTest.test2 cancelled')
                 raise
             except ShuttingdownError:
                 log('ShuttingdownTest.test2 shuttingdown detected')
                 raise
             log('finish ShuttingdownTest.test2')
             defer.returnValue(res)

     # @defer.inlineCallbacks
     # def test1():
         # log('start test1')
         # try:
             # res = yield deferred_work()
         # except defer.CancelledError:
             # log('test1 cancelled')
             # raise
         # log('finish test1, test1 not cancelled!!!')
         # defer.returnValue(res)

     # @defer.inlineCallbacks
     # def test2():
         # log('start test2')
         # try:
             # res = yield test1()
         # except defer.CancelledError:
             # log('test2 cancelled')
             # raise
         # log('finish test2, test2 not cancelled!!!')
         # defer.returnValue(res)

     def ok(result):
         log('ok ' + repr(result))

     def error(result):
         log('error ' + repr(result))

     # def run_test1():
         # deferred = test2()
         # deferred.addCallbacks(ok, error)
         # reactor.callLater(1, deferred.cancel)

     # reactor.callLater(1, run_test1)
     # run_test1()

     def run_test2():
         obj = ShuttingdownTest()
         deferred = obj.test2()
         deferred.addCallbacks(ok, error)
         reactor.callLater(1, obj.shutdown)

     # reactor.callLater(3, run_test2)
     run_test2()

     reactor.callLater(10, reactor.stop)
     reactor.run()




From ivan at ludios.org  Mon Aug 16 13:46:25 2010
From: ivan at ludios.org (Ivan Kozik)
Date: Mon, 16 Aug 2010 19:46:25 +0000
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <4C68F81B.7020204@naumen.ru>
References: <4C68F81B.7020204@naumen.ru>
Message-ID: <AANLkTikdXDZ-KN7kMh5cPoqVhZp3DZ3E74wVwOt8_Ji5@mail.gmail.com>

On Mon, Aug 16, 2010 at 08:34, Sergey Magafurov <smagafurov at naumen.ru> wrote:
> Wanted features:
> 1. Ability to delete callbacks (delCallbacks)
> 2. Automatic cancelling Deferreds if they are not needed any more (no
> callbacks registered any more, all was deleted)
> 3. Ability to add/del hooks on deferred's finishing with errback or
> callback (addFinalizer/delFinalizer)
> 4. Automatic call registered finalizers when deferred finished with
> errback or callback (and cancel due to cancel calls errback)

I like to think of Deferreds as a good way to structure asynchronous
control flow.  For each synchronous Python control flow structure, you
can usually build an asynchronous variant of that control flow with
Deferreds.  For example, `addBoth` is like an asynchronous
try/finally.  I think Deferreds accomplish this task quite well, and I
would like to think that the API for Deferreds is essentially "done".
Most of those features don't look right to me, and the implementation
is complicated enough already.

> With this features we can make cascading cancelling of inlineCallbacks
> and cancelling full stack tree of inlineCallbacks when it is not needed
> any more (some shutdown occurs for example at top level)

Better cancellation for @inlineCallbacks functions would be great.
Cancellation was added recently, which is why most things don't yet
support it well.  But which of those four features are really required
to improve inlineCallbacks cancellation?  I see that you filed
http://twistedmatrix.com/trac/ticket/4632 - but the 'Solution (idea)'
there did not have API changes to Deferreds.  Did you discover
anything that makes those API changes necessary?

You're also welcome to discuss this on irc.freenode.net #twisted.  The
best time is usually early morning, Boston time.

> See full code for details (this is runnable script):

I didn't read this, because it's very long, and the lines were wrapped
at 80 characters.  If you want to contribute changes, it's better to
post Twisted patches to the bug tracker, rather than monkeypatching
code.  With the monkeypatching, it's very hard to tell what you've
changed.

Ivan



From glyph at twistedmatrix.com  Mon Aug 16 14:04:02 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Aug 2010 13:04:02 -0700
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <4C68F81B.7020204@naumen.ru>
References: <4C68F81B.7020204@naumen.ru>
Message-ID: <2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>

On Aug 16, 2010, at 1:34 AM, Sergey Magafurov wrote:

> At first, sorry for my bad english

No problem, Sergey.  I am sure that my Russian would be worse.

Ivan's response already covered a lot of the things I would say, but I did want to add a few things.

First, generally: the most important thing to provide here are unit tests with very clear documentation expressing why you would want these things to work.  The test code you provided is unclear because it does not succeed or fail, it just does some things, and then does some other things, without explaining why I would want to do those things.  Given that the implementation of Deferred is changing a lot now (see <http://twistedmatrix.com/trac/ticket/411>), if we agree with your features, the implementation may have to change completely.  So, it is important to have tests that describe just the behavior change, not the implementation.

More specifically:

> Wanted features:
> 1. Ability to delete callbacks (delCallbacks)

Can you please explain *why* you would want this?  Deleting callbacks from a Deferred would break a lot of assumptions about the way that Deferreds are used (at any particular point in the callback chain, you should be able to infer what the return type should be just by looking at the code, not running it).

So, it is very unlikely that we will add the ability to delete arbitrary callbacks.

> 3. Ability to add/del hooks on deferred's finishing with errback or callback (addFinalizer/delFinalizer)


You can already do this with weakref callbacks.  Why would you need Deferred to provide an alternate mechanism?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100816/1d596468/attachment.html>

From disappearedng at gmail.com  Mon Aug 16 22:24:51 2010
From: disappearedng at gmail.com (disappearedng)
Date: Tue, 17 Aug 2010 00:24:51 -0400
Subject: [Twisted-Python] Multiple Sources for Logging
Message-ID: <AANLkTintbB-4ct38op4DALOS-PSna7ZydcZfBxDNoons@mail.gmail.com>

Dear Everyone,

I am running WSGI inside my twisted server. I am currently using
startLogging, but I am interested in separating the two sources of logs into
different destinations, i.e. different log files. Take a look at my log:

2010-08-17 00:20:19-0400 [-] Log opened./
2010-08-17 00:20:19-0400 [-] twisted.web.server.Site starting on 11111
2010-08-17 00:20:19-0400 [-] Starting factory <twisted.web.server.Site
instance at 0x1e65b00>
2010-08-17 00:20:19-0400 [-]
mycode.code.comet.ProxiedComet.ProxiedCometFactory starting on 12346
2010-08-17 00:20:19-0400 [-] Starting factory
<mycode.code.comet.ProxiedComet.ProxiedCometFactory instance at 0x1e65e18>
2010-08-16 23:20:39-0500 [-] 127.0.0.1 - - [17/Aug/2010:04:20:38 +0000] "GET
/ HTTP/1.1" 404 2666 "-" "Mozilla/5.0 (X11; U; Linux x86_64; en-US;
rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8"
2010-08-16 23:20:39-0500 [-] 127.0.0.1 - - [17/Aug/2010:04:20:39 +0000] "GET
/favicon.ico HTTP/1.1" 404 2699 "-" "Mozilla/5.0 (X11; U; Linux x86_64;
en-US; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8"
2010-08-16 23:20:42-0500 [-] 127.0.0.1 - - [17/Aug/2010:04:20:42 +0000] "GET
/favicon.ico HTTP/1.1" 404 2699 "-" "Mozilla/5.0 (X11; U; Linux x86_64;
en-US; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8"

First 5 lines are twisted's , remaining are my WSGI *running django. How
should I structure my logging to be able to split accordingly?


Victor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100817/5b6d1e5f/attachment.html>

From smagafurov at naumen.ru  Mon Aug 16 23:49:32 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Tue, 17 Aug 2010 11:49:32 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
References: <4C68F81B.7020204@naumen.ru>
	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
Message-ID: <4C6A22EC.3020707@naumen.ru>


> First, generally: the most important thing to provide here are unit 
> tests with very clear documentation expressing why you would want 
> these things to work.  The test code you provided is unclear because 
> it does not succeed or fail, it just does some things, and then does 
> some other things, without explaining /why/ I would want to do those 
> things.  Given that the implementation of Deferred is changing a lot 
> now (see <http://twistedmatrix.com/trac/ticket/411>), if we agree with 
> your features, the implementation may have to change completely.  So, 
> it is important to have tests that describe just the behavior change, 
> not the implementation.
Agree! I precisely trying to suggest behavior, not the implementation :)
>> Wanted features:
>> 1. Ability to delete callbacks (delCallbacks)
>
> Can you please explain *why* you would want this?  Deleting callbacks 
> from a Deferred would break a lot of assumptions about the way that 
> Deferreds are used (at any particular point in the callback chain, you 
> should be able to infer what the return type should be just by looking 
> at the code, not running it).
>
> So, it is very unlikely that we will add the ability to delete 
> arbitrary callbacks.

>> 3. Ability to add/del hooks on deferred's finishing with errback 
>> or callback (addFinalizer/delFinalizer)
>
> You can already do this with weakref callbacks.  Why would you need 
> Deferred to provide an alternate mechanism?

I will try to explain why i want this features with example.
My task is about telephony.
Some user makes call and we want to acquire some TextToSpeach resource 
and AutomaticSpeachRecognition resource to do some automatic 
conversation with user.
We start playing music to user, launch long process to acquire this 
(expensive!) resources. After they have acquired, we establish audio 
links. After they established we speak something to user and start 
recognition. See NOTE in code.

@inlineCallbacks
def incoming_call(self, call):
     call.start_play('music')
     try:
         tts, asr = yield self.acquire_tts_for(call), 
self.acquire_asr_for(call) # tuple yield feature!
     except TimeoutError:
         # this occurs if TimeoutError raises in `self.acquire_tts_for` 
or `self.acquire_asr_for`
         # i.e. DeferredList(..., fireOnOneErrback=1)
         call.transfer_to('operator')
         # NOTE: at this point I want to automatically _recursively_ (to 
deep) stop all deferred processes
         # starting inside `self.acquire_tts_for` and `self.acquire_asr_for`
         # because I don't need their results (and expensive resources!) 
any more
     else:
         try:
             yield tts.speak('what you want? say me after signal')
             yield asr.start_recognition()
             call.start_play('signal')
             result = yield asr.wait_recognition_result()
             ... do something with result ...
         finally:
             tts.release()
             asr.release()

@inlineCallbacks
def acquire_tts_for(self, call):
     tts_connection = yield self.tts.acquire_connection(timeout=10) # 
may raise TimeoutError inside
     yield call.make_audio_link_with(tts_connection, 'in', timeout=10) # 
may raise TimeoutError inside
     return tts_connection

@inlineCallbacks
def acquire_asr_for(self, call):
     asr_connection = yield self.asr.acquire_connection(timeout=10) # 
may raise TimeoutError inside
     yield call.make_audio_link_with(asr_connection, 'out', timeout=10) 
# may raise TimeoutError inside
     return asr_connection

To do this code to work:
1. Deferred()s must have feature to be informed that somebody does't 
need their result any more (delCallbacks)
2. Deferred()s must track their usage, and automatically cancels (and 
therefore calls their finalizers, see below) when they not used any more 
(nobody needs their result any more)
3. inlineCallbacks must release (delCallbacks) their child Defered()s 
when it doesn't need their result any more, this allows them to 
autimatically cancelling (if they dont needed somebody else). To do this 
inlineCallbacks must add some hook (addFinalizer) to parent Deferred and 
release child Deferreds when parent Deferred finished 
(callbacked/errbacked and therefore cancelled due cancel call errback). 
Why we need addFinalizer mechanism? Because addCallbacks means that 
Deferred is used, that somebody needs their result. But addFinalizer 
means that we don't neeed result, we just want to know when Deferred 
finished (to release our child resources for example).

One more thing we may do with this features. What if our User hangs up 
call? What if our tcp connection lost (with that we have receive 
incoming call)? All resources (ASR and TTS) must be released as soon as 
possible! yields inside incoming_call must raise some ShuttingdownError 
for example. We may do this with above features.

>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>    

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100817/e8f38c30/attachment.html>

From smagafurov at naumen.ru  Tue Aug 17 00:30:59 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Tue, 17 Aug 2010 12:30:59 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <4C6A22EC.3020707@naumen.ru>
References: <4C68F81B.7020204@naumen.ru>
	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
	<4C6A22EC.3020707@naumen.ru>
Message-ID: <4C6A2CA3.3090109@naumen.ru>

Some mistake fixes in my previous message
> @inlineCallbacks
> def acquire_tts_for(self, call):
>     tts_connection = yield self.tts.acquire_connection(timeout=10) # 
> may raise TimeoutError inside
>     yield call.make_audio_link_with(tts_connection, 'in', timeout=10) 
> # may raise TimeoutError inside
>     return tts_connection
>
> @inlineCallbacks
> def acquire_asr_for(self, call):
>     asr_connection = yield self.asr.acquire_connection(timeout=10) # 
> may raise TimeoutError inside
>     yield call.make_audio_link_with(asr_connection, 'out', timeout=10) 
> # may raise TimeoutError inside
>     return asr_connection

Above code must be replaced with:

@inlineCallbacks
def acquire_tts_for(self, call):
     # may raise TimeoutError inside
     tts_connection = yield self.tts.acquire_connection(timeout=10)
     try:
         # may raise TimeoutError inside
         yield call.make_audio_link_with(tts_connection, 'in', timeout=10)
     except Exception:
         # we MAY receive this Exception when cascading cancellation occurs
         tts_connection.release()
         raise
     else:
         return tts_connection

@inlineCallbacks
def acquire_asr_for(self, call):
     # may raise TimeoutError inside
     asr_connection = yield self.asr.acquire_connection(timeout=10)
     try:
         # may raise TimeoutError inside
         yield call.make_audio_link_with(asr_connection, 'out', timeout=10)
     except Exception:
         # we MAY receive this Exception when cascading cancellation occurs
         asr_connection.release()
         raise
     else:
         return asr_connection




From jaroslaw.fedewicz at gmail.com  Tue Aug 17 01:46:58 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Tue, 17 Aug 2010 10:46:58 +0300
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <4C6A22EC.3020707@naumen.ru>
References: <4C68F81B.7020204@naumen.ru>
	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
	<4C6A22EC.3020707@naumen.ru>
Message-ID: <1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>


On Aug 17, 2010, at 8:49 AM, Sergey Magafurov wrote:

> ... lots of text skipped ...

You are currently considering your task from the viewpoint “let's make a callback chain for the perfect workflow and alter this chain in case of anything going wrong.” I think the flaw with this approach is that you are trying to make your “ideal” flow work at all in situations where it would, in fact, fail for the most of the time.

Instead of this, you could try to reconsider the task from the viewpoint of “Let's not add any further callbacks until this is absolutely necessary”. For me, this approach rather works. Moreover, you have the means to do it — a callback can return a Deferred, and so on.

Hope that helps.


From johan.rydberg at edgeware.tv  Tue Aug 17 01:56:39 2010
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Tue, 17 Aug 2010 09:56:39 +0200
Subject: [Twisted-Python] Multiple Sources for Logging
In-Reply-To: <AANLkTintbB-4ct38op4DALOS-PSna7ZydcZfBxDNoons@mail.gmail.com>
References: <AANLkTintbB-4ct38op4DALOS-PSna7ZydcZfBxDNoons@mail.gmail.com>
Message-ID: <4C6A40B7.4020105@edgeware.tv>

On 8/17/10 6:24 AM, disappearedng wrote:
> Dear Everyone,
>
> I am running WSGI inside my twisted server. I am currently using 
> startLogging, but I am interested in separating the two sources of 
> logs into different destinations, i.e. different log files. Take a 
> look at my log:
To the best of my knowledge the twisted.web.server.Site constructor 
takes a logPath argument,
that should point to a log-file where access loglines are put.





From smagafurov at naumen.ru  Tue Aug 17 04:56:06 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Tue, 17 Aug 2010 16:56:06 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
References: <4C68F81B.7020204@naumen.ru>	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>	<4C6A22EC.3020707@naumen.ru>
	<1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
Message-ID: <4C6A6AC6.7050404@naumen.ru>


> You are currently considering your task from the viewpoint “let's make a callback chain for the perfect workflow and alter this chain in case of anything going wrong.” I think the flaw with this approach is that you are trying to make your “ideal” flow work at all in situations where it would, in fact, fail for the most of the time.
>    

I am not sure I understand you correct...
In my case when ASR or TTS resource aquiring fails I must transfer call 
to operator but not fail.

> Instead of this, you could try to reconsider the task from the viewpoint of “Let's not add any further callbacks until this is absolutely necessary”. For me, this approach rather works. Moreover, you have the means to do it — a callback can return a Deferred, and so on.
>    

Good. But I need to start acquiring ASR and TTS resources at one time 
(in parallel) because this is very long operations and they can be good 
performed in parallel because physically this is other and different 
machines (computers). Why we can't do that way? Why user have to wait 
double time?

But it doesn't matter, because there is one more thing. Ok. Let's do it 
sequentially. But what if user hangs up call? I want to immediately stop 
all deferred processes due I don't need their results any more. All 
yields inside inlineCallbacks must raise some exception.

This code shows how we can solve this with feautures described

class DestroyingError(Exception):
     pass

class DestroySupport(object):
     __destroying_deferreds = None

     def __get_destroying_deferred(self):
         if self.__destroying_deferreds is None:
             self.__destroying_deferreds = {}
         deferred = defer.Deferred()
         self.__destroying_deferreds[deferred] = 1
         # delete "destroying" `deferred` when it finished
         deferred.addFinalizer(self.__destroying_deferreds.pop, deferred)
         return deferred

     def wait_destroying(self):
         return self.__get_destroying_deferred()

     def destroy(self):
         if self.__destroying_deferreds is not None:
             # errback all "destroying" deferreds
             for deferred in self.__destroying_deferreds.keys():
                 try:
                     raise DestroyingError('destroying')
                 except DestroyingError:
                     deferred.errback()
             self.__destroying_deferreds = None

# See InlineCallbacksManager in my first message in current discussion 
thread
class 
InlineCallbacksWithDestroySupportManager(defer.InlineCallbacksManager):
     def __init__(self, instance, *args, **kw):
         defer.InlineCallbacksManager.__init__(self, instance, *args, **kw)
         # chain Deferred with "destroying" deferred
         # therefore if destroy occurs Deferred errbacked with 
DestroyingError
         destroying_deferred = instance.wait_destroying()
         destroying_deferred.chainDeferred(self.deferred)
         # unchain if deferred finished (
         #     "destroying" deferred will be cancelled also due not used 
any more
         #     and deletes from DestroySupport.__destroying_deferreds 
due to its finalizer
         #     we add in DestroySupport.__get_destroying_deferred
         # )
         
self.deferred.addFinalizer(destroying_deferred.unchainDeferredSafe, 
self.deferred)

inlineCallbacksWithDestroySupport = defer.create_inline_callbacks_decorator(
     InlineCallbacksWithDestroySupportManager
)

class CallService(DestroySupport):
     def on_connection_lost(self):
         # launch cascade destroying when connection lost!!!
         # all yields will raise DestroyingError
         # therefore all resources will be released
         self.destroy()

     @inlineCallbacksWithDestroySupport
     def incoming_call(self, call):
         call.start_play('music')
         try:
             # tuple yield feature!
             tts, asr = yield self.acquire_tts_for(call), 
self.acquire_asr_for(call)
         except TimeoutError:
             # this occurs if TimeoutError raises in 
`self.acquire_tts_for` or `self.acquire_asr_for`
             # i.e. DeferredList(..., fireOnOneErrback=1)
             call.transfer_to('operator')
             # NOTE: at this point I want to automatically _recursively_ 
(in deep)
             # stop all deferred processes
             # starting inside `self.acquire_tts_for` and 
`self.acquire_asr_for`
             # because I don't need their results (and expensive 
resources!) any more
         except DestroyingError:
             log('Destroying detected')
             raise
         else:
             try:
                 try:
                     yield tts.speak('what you want? say me after signal')
                     yield asr.start_recognition()
                     call.start_play('signal')
                     result = yield asr.wait_recognition_result()
                     ... do something with result ...
                 except DestroyingError:
                     log('Destroying detected')
                     raise
             finally:
                 tts.release()
                 asr.release()

     @inlineCallbacksWithDestroySupport
     def acquire_tts_for(self, call):
         # may raise TimeoutError inside
         tts_connection = yield self.tts.acquire_connection(timeout=10)
         try:
             # may raise TimeoutError inside
             yield call.make_audio_link_with(tts_connection, 'in', 
timeout=10)
         except Exception:
             # we MAY receive this Exception when cascading cancellation 
occurs
             tts_connection.release()
             raise
         else:
             return tts_connection

     @inlineCallbacksWithDestroySupport
     def acquire_asr_for(self, call):
         # may raise TimeoutError inside
         asr_connection = yield self.asr.acquire_connection(timeout=10)
         try:
             # may raise TimeoutError inside
             yield call.make_audio_link_with(asr_connection, 'out', 
timeout=10)
         except Exception:
             # we MAY receive this Exception when cascading cancellation 
occurs
             asr_connection.release()
             raise
         else:
             return asr_connection

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100817/dd2975b7/attachment-0001.html>

From zoran.bosnjak at sloveniacontrol.si  Tue Aug 17 05:35:41 2010
From: zoran.bosnjak at sloveniacontrol.si (Zoran Bosnjak)
Date: Tue, 17 Aug 2010 13:35:41 +0200
Subject: [Twisted-Python] twistd --uid and --logfile
Message-ID: <1282044941.13984.19.camel@bosnjak-laptop>

I am running twisted application from /etc/init/myapp.conf by exec
statement like this:
exec /usr/bin/twistd --uid=<id> --gid=<gid> --logfile=/var/log/dir/file

The problem is when log file is first created under /var/log/dir (dir is
owned by user id), the owner of the file is 'root', not requested user.
As a consequence, the twistd is not able to rotate log files.

If the logfile is already created (and chowned) before running twistd,
there is no problem. It looks like set uid/gid is called too late inside
twistd. It is suppose to be called before creating a logfile.

Is this a bug or am I missing something?

Zoran




From exarkun at twistedmatrix.com  Tue Aug 17 11:40:34 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Aug 2010 17:40:34 -0000
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <1282044941.13984.19.camel@bosnjak-laptop>
References: <1282044941.13984.19.camel@bosnjak-laptop>
Message-ID: <20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>

On 11:35 am, zoran.bosnjak at sloveniacontrol.si wrote:
>I am running twisted application from /etc/init/myapp.conf by exec
>statement like this:
>exec /usr/bin/twistd --uid=<id> --gid=<gid> --logfile=/var/log/dir/file
>
>The problem is when log file is first created under /var/log/dir (dir 
>is
>owned by user id), the owner of the file is 'root', not requested user.
>As a consequence, the twistd is not able to rotate log files.
>
>If the logfile is already created (and chowned) before running twistd,
>there is no problem. It looks like set uid/gid is called too late 
>inside
>twistd. It is suppose to be called before creating a logfile.
>
>Is this a bug or am I missing something?

If <id> or <gid> has write permission on /var/log/dir/ then rotation 
should work, even if <id> or <gid> does not own the first logfile 
created.

Jean-Paul



From dave at krondo.com  Tue Aug 17 12:14:23 2010
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 17 Aug 2010 11:14:23 -0700
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
Message-ID: <AANLkTi=5ecKxywRGUjys1jmhNE8TyaBKZb6a3NsZ60y1@mail.gmail.com>

On Tue, Aug 17, 2010 at 10:40 AM,  <exarkun at twistedmatrix.com> wrote:
> On 11:35 am, zoran.bosnjak at sloveniacontrol.si wrote:
>>I am running twisted application from /etc/init/myapp.conf by exec
>>statement like this:
>>exec /usr/bin/twistd --uid=<id> --gid=<gid> --logfile=/var/log/dir/file
>>
>>The problem is when log file is first created under /var/log/dir (dir
>>is
>>owned by user id), the owner of the file is 'root', not requested user.
>>As a consequence, the twistd is not able to rotate log files.
>>
>>If the logfile is already created (and chowned) before running twistd,
>>there is no problem. It looks like set uid/gid is called too late
>>inside
>>twistd. It is suppose to be called before creating a logfile.
>>
>>Is this a bug or am I missing something?
>
> If <id> or <gid> has write permission on /var/log/dir/ then rotation
> should work, even if <id> or <gid> does not own the first logfile
> created.

That's true. It does seem reasonable, however, that the log files would
get created with the uid/gid that you specified. I've been surprised by this
in the past as well. Any reason not to do that?

dave



From disappearedng at gmail.com  Tue Aug 17 12:33:34 2010
From: disappearedng at gmail.com (disappearedng)
Date: Tue, 17 Aug 2010 14:33:34 -0400
Subject: [Twisted-Python] Multiple Sources for Logging
Message-ID: <AANLkTi=Jyxdm73TQw=d-y07rWyBMxF+tpuunavn3ng1f@mail.gmail.com>

Yes Server.site does indeed take a logPath arg.

Now how can I amend my code so that I can see both sys.stdout and my log
file both being written at the same time?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100817/158db1f6/attachment-0001.html>

From exarkun at twistedmatrix.com  Tue Aug 17 13:04:04 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 17 Aug 2010 19:04:04 -0000
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <AANLkTi=5ecKxywRGUjys1jmhNE8TyaBKZb6a3NsZ60y1@mail.gmail.com>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<AANLkTi=5ecKxywRGUjys1jmhNE8TyaBKZb6a3NsZ60y1@mail.gmail.com>
Message-ID: <20100817190404.2470.1610974128.divmod.xquotient.57@localhost.localdomain>

On 06:14 pm, dave at krondo.com wrote:
>On Tue, Aug 17, 2010 at 10:40 AM,  <exarkun at twistedmatrix.com> wrote:
>>On 11:35 am, zoran.bosnjak at sloveniacontrol.si wrote:
>>>I am running twisted application from /etc/init/myapp.conf by exec
>>>statement like this:
>>>exec /usr/bin/twistd --uid=<id> --gid=<gid> 
>>>--logfile=/var/log/dir/file
>>>
>>>The problem is when log file is first created under /var/log/dir (dir
>>>is
>>>owned by user id), the owner of the file is 'root', not requested 
>>>user.
>>>As a consequence, the twistd is not able to rotate log files.
>>>
>>>If the logfile is already created (and chowned) before running 
>>>twistd,
>>>there is no problem. It looks like set uid/gid is called too late
>>>inside
>>>twistd. It is suppose to be called before creating a logfile.
>>>
>>>Is this a bug or am I missing something?
>>
>>If <id> or <gid> has write permission on /var/log/dir/ then rotation
>>should work, even if <id> or <gid> does not own the first logfile
>>created.
>
>That's true. It does seem reasonable, however, that the log files would
>get created with the uid/gid that you specified. I've been surprised by 
>this
>in the past as well. Any reason not to do that?

No.  It works the way it does now by accident.  The code in question is 
quite complicated and not necessarily fully covered by the test suite. 
And the actual behavior of the --uid/--gid options isn't documented 
anyway, so it's not clear what you *should* expect from it, nor which of 
its current behaviors people /do/ expect from it.

Jean-Paul



From twisted-web at udmvt.ru  Wed Aug 18 03:11:55 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Wed, 18 Aug 2010 13:11:55 +0400
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <1282044941.13984.19.camel@bosnjak-laptop>
References: <1282044941.13984.19.camel@bosnjak-laptop>
Message-ID: <20100818091155.GB4801@ruber.office.udmvt.ru>

On Tue, Aug 17, 2010 at 01:35:41PM +0200, Zoran Bosnjak wrote:
> I am running twisted application from /etc/init/myapp.conf by exec
> statement like this:
> exec /usr/bin/twistd --uid=<id> --gid=<gid> --logfile=/var/log/dir/file
> 
> The problem is when log file is first created under /var/log/dir (dir is
> owned by user id), the owner of the file is 'root', not requested user.
> As a consequence, the twistd is not able to rotate log files.
> 
> If the logfile is already created (and chowned) before running twistd,
> there is no problem. It looks like set uid/gid is called too late inside
> twistd. It is suppose to be called before creating a logfile.
> 
> Is this a bug or am I missing something?
It is always safer to use external tools to change uids and gids where possible.
It is also always safer to have logfiles always present on their place and with
correct ownership (or refuse to run entirely).

Having log files created by the superuser is not secure, especially when
log directory is user writeable. That is security vulnerability.

> 
> Zoran
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Alexey S.



From twisted-web at udmvt.ru  Wed Aug 18 03:25:11 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Wed, 18 Aug 2010 13:25:11 +0400
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
Message-ID: <20100818092511.GC4801@ruber.office.udmvt.ru>

On Tue, Aug 17, 2010 at 05:40:34PM -0000, exarkun at twistedmatrix.com wrote:
> On 11:35 am, zoran.bosnjak at sloveniacontrol.si wrote:
> >I am running twisted application from /etc/init/myapp.conf by exec
> >statement like this:
> >exec /usr/bin/twistd --uid=<id> --gid=<gid> --logfile=/var/log/dir/file
> >
> >The problem is when log file is first created under /var/log/dir (dir 
> >is
> >owned by user id), the owner of the file is 'root', not requested user.
> >As a consequence, the twistd is not able to rotate log files.
> >
> >If the logfile is already created (and chowned) before running twistd,
> >there is no problem. It looks like set uid/gid is called too late 
> >inside
> >twistd. It is suppose to be called before creating a logfile.
> >
> >Is this a bug or am I missing something?
> 
> If <id> or <gid> has write permission on /var/log/dir/ then rotation 
> should work, even if <id> or <gid> does not own the first logfile 
> created.

This is a way to screw up the system.
Consider this is run by the <uid> of the service:
  rm /var/log/dir/logfile
  ln -s /etc/shadow /var/log/dir/logfile

After the service restart the system will lose /etc/shadow.

In this case setuid() is called too late, truly.
I think --uid option is too dangerous.
sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is more
appropriate for changing uids.
It will always be hard to design application, that opens some files or
sockets and only then changes it's uids/gids.

> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Alexey S.



From cournape at gmail.com  Wed Aug 18 05:28:37 2010
From: cournape at gmail.com (David Cournapeau)
Date: Wed, 18 Aug 2010 20:28:37 +0900
Subject: [Twisted-Python] Add custom options handling to a twisted
	application running from twistd
Message-ID: <AANLkTinfpEDnt0+H9pac6_P1e77Ccd_R3OnBtzshf3e0@mail.gmail.com>

Hi,

I am trying to add some options handling to an existing twisted
application, which runs as an "app" from twistd through the -y
argument. It is not clear to me how to do that ?

cheers,

David



From itamar at itamarst.org  Wed Aug 18 06:10:27 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 18 Aug 2010 08:10:27 -0400
Subject: [Twisted-Python] Add custom options handling to a twisted
 application running from twistd
In-Reply-To: <AANLkTinfpEDnt0+H9pac6_P1e77Ccd_R3OnBtzshf3e0@mail.gmail.com>
References: <AANLkTinfpEDnt0+H9pac6_P1e77Ccd_R3OnBtzshf3e0@mail.gmail.com>
Message-ID: <1282133427.1630.0.camel@blake>

On Wed, 2010-08-18 at 20:28 +0900, David Cournapeau wrote:

> I am trying to add some options handling to an existing twisted
> application, which runs as an "app" from twistd through the -y
> argument. It is not clear to me how to do that ?

Instead of using a .tac file, write a twistd plugin:

http://twistedmatrix.com/documents/current/core/howto/tap.html




From p.mayers at imperial.ac.uk  Wed Aug 18 09:35:29 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 18 Aug 2010 16:35:29 +0100
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100818092511.GC4801@ruber.office.udmvt.ru>
References: <1282044941.13984.19.camel@bosnjak-laptop>	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<20100818092511.GC4801@ruber.office.udmvt.ru>
Message-ID: <4C6BFDC1.3000906@imperial.ac.uk>

On 18/08/10 10:25, twisted-web at udmvt.ru wrote:

> I think --uid option is too dangerous.
> sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is more
> appropriate for changing uids.

In all cases? I think not.

> It will always be hard to design application, that opens some files or
> sockets and only then changes it's uids/gids.

What about a daemon that needs to listen on ports <1024?

Sure it's hard and needs care. twistd may be doing it wrong at the 
moment. But it should be quite possible to fix that. "sudo" and "su" 
don't do anything magical. Nor does "apache", or any one of the hundreds 
of daemons that open sockets then setuid.



From exarkun at twistedmatrix.com  Wed Aug 18 10:01:52 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 18 Aug 2010 16:01:52 -0000
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <4C6BFDC1.3000906@imperial.ac.uk>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<20100818092511.GC4801@ruber.office.udmvt.ru>
	<4C6BFDC1.3000906@imperial.ac.uk>
Message-ID: <20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>

On 03:35 pm, p.mayers at imperial.ac.uk wrote:
>On 18/08/10 10:25, twisted-web at udmvt.ru wrote:
>>I think --uid option is too dangerous.
>>sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is 
>>more
>>appropriate for changing uids.
>
>In all cases? I think not.

Making the directory world writeable is certainly insane and dangerous. 
But in the case where the directory is only writeable by the user the 
daemon is going to run as, and access to that user is restricted, I 
don't see a problem.
>
>>It will always be hard to design application, that opens some files or
>>sockets and only then changes it's uids/gids.
>
>What about a daemon that needs to listen on ports <1024?

For this case, I would very strongly recommend authbind instead.  And I 
think this covers 99% of cases where you would otherwise need to start 
up as root.  For the remaining small number of cases, being able to 
start as root and then shed privileges is definitely more convenient 
than other approaches (although quite possibly inferior to them in all 
other regards).

Jean-Paul



From landreville at deadtreepages.com  Wed Aug 18 11:20:44 2010
From: landreville at deadtreepages.com (Landreville)
Date: Wed, 18 Aug 2010 13:20:44 -0400
Subject: [Twisted-Python] CentOS error installing
Message-ID: <AANLkTikGDOAHGOunFx-JdE-A6+iv6HP+ZMfBbmwBv217@mail.gmail.com>

Hello,

I'm running CentOS 5.5 64bit and when I tried to install twisted using
easy_install I get this error message:

Running Twisted-10.1.0/setup.py -q bdist_egg --dist-dir
/tmp/easy_install-tgKRDq/Twisted-10.1.0/egg-dist-tmp-wd-5Ri
twisted/runner/portmap.c:10:20: error: Python.h: No such file or directory
twisted/runner/portmap.c:14: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or
‘__attribute__’ before ‘*’ token
twisted/runner/portmap.c:31: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or
‘__attribute__’ before ‘*’ token
twisted/runner/portmap.c:45: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or
‘__attribute__’ before ‘PortmapMethods’
twisted/runner/portmap.c: In function ‘initportmap’:
twisted/runner/portmap.c:55: warning: implicit declaration of function
‘Py_InitModule’
twisted/runner/portmap.c:55: error: ‘PortmapMethods’ undeclared (first
use in this function)
twisted/runner/portmap.c:55: error: (Each undeclared identifier is
reported only once
twisted/runner/portmap.c:55: error: for each function it appears in.)
error: Setup script exited with error: command 'gcc' failed with exit status 1



Is this a bug I should submit, or something that is known that I am doing wrong?


Thanks,

Landreville



From maarten at treewalker.org  Wed Aug 18 11:36:33 2010
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Wed, 18 Aug 2010 19:36:33 +0200
Subject: [Twisted-Python] CentOS error installing
In-Reply-To: <AANLkTikGDOAHGOunFx-JdE-A6+iv6HP+ZMfBbmwBv217@mail.gmail.com>
References: <AANLkTikGDOAHGOunFx-JdE-A6+iv6HP+ZMfBbmwBv217@mail.gmail.com>
Message-ID: <201008181936.33521.maarten@treewalker.org>

On Wednesday 18 August 2010, Landreville wrote:
> Hello,
> 
> I'm running CentOS 5.5 64bit and when I tried to install twisted using
> easy_install I get this error message:
> 
> Running Twisted-10.1.0/setup.py -q bdist_egg --dist-dir
> /tmp/easy_install-tgKRDq/Twisted-10.1.0/egg-dist-tmp-wd-5Ri
> twisted/runner/portmap.c:10:20: error: Python.h: No such file or
> directory

Is it possible you don't have the Python headers installed? They are 
probably in a package named "python-dev", "python-devel" or something 
similar.

Bye,
		Maarten



From landreville at deadtreepages.com  Wed Aug 18 13:21:55 2010
From: landreville at deadtreepages.com (Landreville)
Date: Wed, 18 Aug 2010 15:21:55 -0400
Subject: [Twisted-Python] CentOS error installing
In-Reply-To: <201008181936.33521.maarten@treewalker.org>
References: <AANLkTikGDOAHGOunFx-JdE-A6+iv6HP+ZMfBbmwBv217@mail.gmail.com>
	<201008181936.33521.maarten@treewalker.org>
Message-ID: <AANLkTikfQz7Pk2igBdE0RMjMKR5BS4J4DF8XPCBnNcDk@mail.gmail.com>

On Wed, Aug 18, 2010 at 1:36 PM, Maarten ter Huurne
<maarten at treewalker.org> wrote:
> On Wednesday 18 August 2010, Landreville wrote:
>> Hello,
>>
>> I'm running CentOS 5.5 64bit and when I tried to install twisted using
>> easy_install I get this error message:
>>
>> Running Twisted-10.1.0/setup.py -q bdist_egg --dist-dir
>> /tmp/easy_install-tgKRDq/Twisted-10.1.0/egg-dist-tmp-wd-5Ri
>> twisted/runner/portmap.c:10:20: error: Python.h: No such file or
>> directory
>
> Is it possible you don't have the Python headers installed? They are
> probably in a package named "python-dev", "python-devel" or something
> similar.
>
> Bye,
>                Maarten
>

CentOS comes with python 2.4, I installed python 2.7 beside it and
installed using it (python2.7 setup.py install) with no errors.



From cournape at gmail.com  Wed Aug 18 22:52:05 2010
From: cournape at gmail.com (David Cournapeau)
Date: Thu, 19 Aug 2010 13:52:05 +0900
Subject: [Twisted-Python] Add custom options handling to a twisted
 application running from twistd
In-Reply-To: <1282133427.1630.0.camel@blake>
References: <AANLkTinfpEDnt0+H9pac6_P1e77Ccd_R3OnBtzshf3e0@mail.gmail.com>
	<1282133427.1630.0.camel@blake>
Message-ID: <AANLkTinz9m--PLxJz-hihtuptDLfSqCUkz_YPLVuf_s5@mail.gmail.com>

On Wed, Aug 18, 2010 at 9:10 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Wed, 2010-08-18 at 20:28 +0900, David Cournapeau wrote:
>
>> I am trying to add some options handling to an existing twisted
>> application, which runs as an "app" from twistd through the -y
>> argument. It is not clear to me how to do that ?
>
> Instead of using a .tac file, write a twistd plugin:
>
> http://twistedmatrix.com/documents/current/core/howto/tap.html

ok, thanks. I see that plugins don't support everything supported in
.tac (like customizing logging), though. Is this solved in the trunk,
or is this still an issue ? Are there any workarounds ?

cheers,

David



From p.mayers at imperial.ac.uk  Thu Aug 19 00:22:37 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 19 Aug 2010 07:22:37 +0100
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>
References: <1282044941.13984.19.camel@bosnjak-laptop>	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>	<20100818092511.GC4801@ruber.office.udmvt.ru>	<4C6BFDC1.3000906@imperial.ac.uk>
	<20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>
Message-ID: <4C6CCDAD.50908@imperial.ac.uk>

On 08/18/2010 05:01 PM, exarkun at twistedmatrix.com wrote:
> On 03:35 pm, p.mayers at imperial.ac.uk wrote:
>> On 18/08/10 10:25, twisted-web at udmvt.ru wrote:
>>> I think --uid option is too dangerous.
>>> sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is
>>> more
>>> appropriate for changing uids.
>>
>> In all cases? I think not.
>
> Making the directory world writeable is certainly insane and dangerous.
> But in the case where the directory is only writeable by the user the
> daemon is going to run as, and access to that user is restricted, I
> don't see a problem.

I'm not sure which message you're replying to here. I don't disagree 
with you.

I was stating that I didn't think external tools such as "su" were *in 
all cases* appropriate for changing uid.

>> What about a daemon that needs to listen on ports<1024?
>
> For this case, I would very strongly recommend authbind instead.  And I

I'd never heard of authbind. It has some unfortunate limitations (ipv4 
only, no ports 512-1023) but is an interesting approach.

I wonder whether one could do something with SELinux today? (As an 
aside, one of the reasons to *not* use twistd is you can't separately 
label a .tac file - if of course you want to use SELinux)

> think this covers 99% of cases where you would otherwise need to start
> up as root.  For the remaining small number of cases, being able to
> start as root and then shed privileges is definitely more convenient
> than other approaches (although quite possibly inferior to them in all
> other regards).

Sure; that's what I was getting at.



From twisted-web at udmvt.ru  Thu Aug 19 00:55:23 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Thu, 19 Aug 2010 10:55:23 +0400
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <4C6BFDC1.3000906@imperial.ac.uk>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<20100818092511.GC4801@ruber.office.udmvt.ru>
	<4C6BFDC1.3000906@imperial.ac.uk>
Message-ID: <20100819065523.GA8187@ruber.office.udmvt.ru>

On Wed, Aug 18, 2010 at 04:35:29PM +0100, Phil Mayers wrote:
> On 18/08/10 10:25, twisted-web at udmvt.ru wrote:
> 
> > I think --uid option is too dangerous.
> > sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is more
> > appropriate for changing uids.
> 
> In all cases? I think not.
There is no option to tell the code when to setuid(), right?
So, is the place, where it happens now, appropriate for all of your cases?
I don't think so. And it will never be appropriate for all cases,
there is no one correct place where to do setuid, that heavily depends
on every particular case.

--uid is not that simple and magical solution to the "all cases", believe me.
twistd binary is not designed for "all cases" either.
If you have your special case, design outside of twistd binary, it is only
a helper to provide twisted power to command line.

> 
> > It will always be hard to design application, that opens some files or
> > sockets and only then changes it's uids/gids.
> 
> What about a daemon that needs to listen on ports <1024?
Use code, that opens a listening socket, binds it and then executes setuidgid
program that runs your particular program.
Clear and simple approach, separation, that is clearly visible outside of code.
Twisted is not ready for such simplification, it can't use pre-opened sockets,
at least without a hack.

> 
> Sure it's hard and needs care. twistd may be doing it wrong at the 
> moment. But it should be quite possible to fix that. "sudo" and "su" 
> don't do anything magical. Nor does "apache", or any one of the hundreds 
> of daemons that open sockets then setuid.
Ports < 1024 is not a newbie task. Professional programmers very rarely
able to design secure setuid code in one attempt. Even experienced
people have to redesign their setuid code several times and nobody blames them.

sudo and su do very obscure and magic things, they are not only used to
change uid by request of root, but they also have setuid bit set on their binary,
so they have to do a lot of voodoo to protect themselves from non-root users.

setuidgid is not setuid binary, so it only does one task at a time and it
separates this task from your application's task. So the user, the administrator
and the programmer can be sure, that there is nothing in application, that
can break security.

--uid option semantics is not trivial, not every user understands it's risks.
I'm afraid, not every twisted developer understand it's risks.
This is very bad option.
It is unclear, when setuid happens, or what is being done before setuid() happens.
Help only says "The uid to run as.", so it looks simple and without caveats,
but it is not simple as long as you have security concerns.

To twisted developers:
Don't encourage people to design insecure code, please.
Don't make others blame twisted for insecurity.
Just don't make twisted involved into any security issues.
Replace that option with a reminder on how to change uids properly.
It is very dangerous to have such option, especially if it is not test covered.

-- 
Alexey



From twisted-web at udmvt.ru  Thu Aug 19 01:06:02 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Thu, 19 Aug 2010 11:06:02 +0400
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<20100818092511.GC4801@ruber.office.udmvt.ru>
	<4C6BFDC1.3000906@imperial.ac.uk>
	<20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>
Message-ID: <20100819070602.GB8187@ruber.office.udmvt.ru>

On Wed, Aug 18, 2010 at 04:01:52PM -0000, exarkun at twistedmatrix.com wrote:
> On 03:35 pm, p.mayers at imperial.ac.uk wrote:
> >On 18/08/10 10:25, twisted-web at udmvt.ru wrote:
> >>I think --uid option is too dangerous.
> >>sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is 
> >>more
> >>appropriate for changing uids.
> >
> >In all cases? I think not.
> 
> Making the directory world writeable is certainly insane and dangerous. 
> But in the case where the directory is only writeable by the user the 
> daemon is going to run as, and access to that user is restricted, I 
> don't see a problem.
The problem is that you trust that user an ability to destroy any root-writeable
file contents, but you most likely do not realize that, so you most likely don't
take any extra measures to protect yourself.
For "most of the cases" it could be OK, but for the minority of others
it would be a disaster.


-- 
Alexey.



From twisted-web at udmvt.ru  Thu Aug 19 01:30:23 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Thu, 19 Aug 2010 11:30:23 +0400
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <4C6CCDAD.50908@imperial.ac.uk>
References: <1282044941.13984.19.camel@bosnjak-laptop>
	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>
	<20100818092511.GC4801@ruber.office.udmvt.ru>
	<4C6BFDC1.3000906@imperial.ac.uk>
	<20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>
	<4C6CCDAD.50908@imperial.ac.uk>
Message-ID: <20100819073023.GC8187@ruber.office.udmvt.ru>

On Thu, Aug 19, 2010 at 07:22:37AM +0100, Phil Mayers wrote:
> On 08/18/2010 05:01 PM, exarkun at twistedmatrix.com wrote:
> I wonder whether one could do something with SELinux today? (As an 
> aside, one of the reasons to *not* use twistd is you can't separately 
> label a .tac file - if of course you want to use SELinux)
You don't have to label .tac file if you don't want.
You may wish to label .py file or .sh file.

And using twisted with SELinux is not a problem.
.tac files are not twisted, it only a small part of the framework.

-- 
Alexey



From p.mayers at imperial.ac.uk  Thu Aug 19 01:56:38 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 19 Aug 2010 08:56:38 +0100
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100819065523.GA8187@ruber.office.udmvt.ru>
References: <1282044941.13984.19.camel@bosnjak-laptop>	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>	<20100818092511.GC4801@ruber.office.udmvt.ru>	<4C6BFDC1.3000906@imperial.ac.uk>
	<20100819065523.GA8187@ruber.office.udmvt.ru>
Message-ID: <4C6CE3B6.7050508@imperial.ac.uk>

On 08/19/2010 07:55 AM, twisted-web at udmvt.ru wrote:
> On Wed, Aug 18, 2010 at 04:35:29PM +0100, Phil Mayers wrote:
>> On 18/08/10 10:25, twisted-web at udmvt.ru wrote:
>>
>>> I think --uid option is too dangerous.
>>> sudo or su or setuidgid (from http://cr.yp.to/daemontools.html) is more
>>> appropriate for changing uids.
>>
>> In all cases? I think not.

> There is no option to tell the code when to setuid(), right?
> So, is the place, where it happens now, appropriate for all of your cases?

Honestly, I'm not that bothered. I don't use twistd, so it makes no 
difference to me. It seems to me that it ought to be possible to fix the 
twistd --uid option to be safe, but maybe I'm wrong. Your argument seems 
to be "it's not, remove it, always use setuid helpers" - and it's that 
last part I disagree with.

But this is getting rapidly more and more offtopic, so I'm going to drop 
out now.



From p.mayers at imperial.ac.uk  Thu Aug 19 01:59:59 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 19 Aug 2010 08:59:59 +0100
Subject: [Twisted-Python] twistd --uid and --logfile
In-Reply-To: <20100819073023.GC8187@ruber.office.udmvt.ru>
References: <1282044941.13984.19.camel@bosnjak-laptop>	<20100817174034.2470.606886291.divmod.xquotient.53@localhost.localdomain>	<20100818092511.GC4801@ruber.office.udmvt.ru>	<4C6BFDC1.3000906@imperial.ac.uk>	<20100818160152.2470.333354881.divmod.xquotient.99@localhost.localdomain>	<4C6CCDAD.50908@imperial.ac.uk>
	<20100819073023.GC8187@ruber.office.udmvt.ru>
Message-ID: <4C6CE47F.3040004@imperial.ac.uk>

On 08/19/2010 08:30 AM, twisted-web at udmvt.ru wrote:
> On Thu, Aug 19, 2010 at 07:22:37AM +0100, Phil Mayers wrote:
>> On 08/18/2010 05:01 PM, exarkun at twistedmatrix.com wrote:
>> I wonder whether one could do something with SELinux today? (As an
>> aside, one of the reasons to *not* use twistd is you can't separately
>> label a .tac file - if of course you want to use SELinux)
> You don't have to label .tac file if you don't want.
> You may wish to label .py file or .sh file.
>
> And using twisted with SELinux is not a problem.
> .tac files are not twisted, it only a small part of the framework.
>

?

Isn't that what I said?



From glyph at twistedmatrix.com  Sat Aug 21 01:06:25 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 21 Aug 2010 00:06:25 -0700
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
References: <4C68F81B.7020204@naumen.ru>
	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
	<4C6A22EC.3020707@naumen.ru>
	<1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
Message-ID: <8CEDF43C-21E3-4002-9CEC-4B8FFCA03F7E@twistedmatrix.com>


On Aug 17, 2010, at 12:46 AM, Yaroslav Fedevych wrote:

> 
> On Aug 17, 2010, at 8:49 AM, Sergey Magafurov wrote:
> 
>> ... lots of text skipped ...
> 
> You are currently considering your task from the viewpoint “let's make a callback chain for the perfect workflow and alter this chain in case of anything going wrong.” I think the flaw with this approach is that you are trying to make your “ideal” flow work at all in situations where it would, in fact, fail for the most of the time.
> 
> Instead of this, you could try to reconsider the task from the viewpoint of “Let's not add any further callbacks until this is absolutely necessary”. For me, this approach rather works. Moreover, you have the means to do it — a callback can return a Deferred, and so on.

This code doesn't have any tests or documentation, but it's extremely simple, and might give you an idea of how to do something like what you want: <http://divmod.org/trac/browser/trunk/Epsilon/epsilon/pending.py>.

In this case, it's a multi-deferred in the sense that multiple parties might be interested in the initial value of the Deferred; but you could easily create something that would, for example, take a function which takes a Deferred and adds callbacks to it, then call that function to produce a new callback chain each time it happens.

I'm still not completely understanding why you want cancellation to cascade, since cancellation effectively _does_ cascade if you just allow CancellationError to propagate down the callback chains.

Basically, if you can implement a function in terms of functions that take Deferreds, you should really do that, rather than trying to change the way Deferred itself works.

Sorry that I wasn't able to understand your reasons for wanting this Deferred functionality.  It really sounds like Deferred already does all the stuff you want (releasing resources, getting garbage collected, etc) as long as you use them correctly, so I don't know what to suggest you do instead.




From exarkun at twistedmatrix.com  Sat Aug 21 22:05:23 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Aug 2010 04:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1282449923.67.987773371@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100822/7768a9e3/attachment.html>

From konrads.smelkovs at gmail.com  Sun Aug 22 12:02:29 2010
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Sun, 22 Aug 2010 21:02:29 +0300
Subject: [Twisted-Python] CentOS error installing
In-Reply-To: <AANLkTikfQz7Pk2igBdE0RMjMKR5BS4J4DF8XPCBnNcDk@mail.gmail.com>
References: <AANLkTikGDOAHGOunFx-JdE-A6+iv6HP+ZMfBbmwBv217@mail.gmail.com>
	<201008181936.33521.maarten@treewalker.org>
	<AANLkTikfQz7Pk2igBdE0RMjMKR5BS4J4DF8XPCBnNcDk@mail.gmail.com>
Message-ID: <AANLkTikgXD5d4eqHjusYoNZAzJy1H024gPsbsn6pUATK@mail.gmail.com>

Compiler can't find headers. Please make sure that the easy_install
executes under your 2.7 and that includes are correct.
--
Konrads Smelkovs
Applied IT sorcery.


On Wed, Aug 18, 2010 at 10:21 PM, Landreville <landreville at deadtreepages.com
> wrote:

> On Wed, Aug 18, 2010 at 1:36 PM, Maarten ter Huurne
> <maarten at treewalker.org> wrote:
> > On Wednesday 18 August 2010, Landreville wrote:
> >> Hello,
> >>
> >> I'm running CentOS 5.5 64bit and when I tried to install twisted using
> >> easy_install I get this error message:
> >>
> >> Running Twisted-10.1.0/setup.py -q bdist_egg --dist-dir
> >> /tmp/easy_install-tgKRDq/Twisted-10.1.0/egg-dist-tmp-wd-5Ri
> >> twisted/runner/portmap.c:10:20: error: Python.h: No such file or
> >> directory
> >
> > Is it possible you don't have the Python headers installed? They are
> > probably in a package named "python-dev", "python-devel" or something
> > similar.
> >
> > Bye,
> >                Maarten
> >
>
> CentOS comes with python 2.4, I installed python 2.7 beside it and
> installed using it (python2.7 setup.py install) with no errors.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100822/b3b03874/attachment-0001.html>

From smagafurov at naumen.ru  Mon Aug 23 04:22:06 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Mon, 23 Aug 2010 16:22:06 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <8CEDF43C-21E3-4002-9CEC-4B8FFCA03F7E@twistedmatrix.com>
References: <4C68F81B.7020204@naumen.ru>	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>	<4C6A22EC.3020707@naumen.ru>	<1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
	<8CEDF43C-21E3-4002-9CEC-4B8FFCA03F7E@twistedmatrix.com>
Message-ID: <4C724BCE.5000605@naumen.ru>

Thanks to all!
Especially to Yaroslav Fedevych who explain me my misstake in my native 
language :)
I was wrong with deferreds usage.

Cascading cancelling of inlineCallbacks is still needed to me, but it 
can be realized with current Deferred API.

This way for example:

class InlineCallbacksManagerWithCascadeCancelling(object):
     _cancellation = False
     _wait_result = None

     def __init__(self):
         self.deferred = defer.Deferred()
         self.deferred.addBoth(self._cleanup)

     def _cleanup(self, result):
         if self._wait_result is not None:
             self._cancellation = True
             self._wait_result.cancel()
         self._wait_result = None
         self.deferred = None
         return result

     def _inlineCallbacks(self, result, g):
         """
         See L{inlineCallbacks}.
         """
         # This function is complicated by the need to prevent unbounded 
recursion
         # arising from repeatedly yielding immediately ready 
deferreds.  This while
         # loop and the waiting variable solve that by manually 
unfolding the
         # recursion.

         waiting = [True, # waiting for result?
                    None] # result

         deferred = self.deferred

         while 1:
             if self._cancellation:
                 g.close()
                 return

             try:
                 # Send the last result back as the result of the yield 
expression.
                 isFailure = isinstance(result, Failure)
                 if isFailure:
                     result = result.throwExceptionIntoGenerator(g)
                 else:
                     result = g.send(result)
             except StopIteration:
                 # fell off the end, or "return" statement
                 deferred.callback(None)
                 return deferred
             except defer._DefGen_Return, e:
                 # returnValue() was called; time to give a result to 
the original Deferred.
                 deferred.callback(e.value)
                 return deferred
             except:
                 deferred.errback()
                 return deferred

             if isinstance(result, defer.Deferred):
                 # a deferred was yielded, get the result.
                 def gotResult(r):
                     if waiting[0]:
                         waiting[0] = False
                         waiting[1] = r
                     else:
                         self._wait_result = None
                         self._inlineCallbacks(r, g)

                 result.addBoth(gotResult)
                 if waiting[0]:
                     # Haven't called back yet, set flag so that we get 
reinvoked
                     # and return from the loop
                     waiting[0] = False
                     self._wait_result = result
                     return deferred

                 result = waiting[1]
                 # Reset waiting to initial values for next loop.  
gotResult uses
                 # waiting, but this isn't a problem because gotResult 
is only
                 # executed once, and if it hasn't been executed yet, 
the return
                 # branch above would have been taken.

                 waiting[0] = True
                 waiting[1] = None

def inlineCallbacksWithCascadeCancelling(f):
     def unwind_generator(*args, **kwargs):
         manager = InlineCallbacksManagerWithCascadeCancelling(*args, 
**kwargs)
         return manager._inlineCallbacks(None, f(*args, **kwargs))
     return mergeFunctionMetadata(f, unwind_generator)

This inlineCallbacksWithCascadeCancelling cancels immediately "child" 
(wait result) deferred when "parent" deferred finished (canceled for 
example) and stops generator.

May be this behaviour must be default for inlineCallbacks (i.e. 
defer.inlineCallbacks = inlineCallbacksWithCascadeCancelling)?

I am happy with this behaviour :)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100823/c80f0a36/attachment.html>

From exarkun at twistedmatrix.com  Mon Aug 23 08:23:12 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 23 Aug 2010 14:23:12 -0000
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <4C724BCE.5000605@naumen.ru>
References: <4C68F81B.7020204@naumen.ru>
	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>
	<4C6A22EC.3020707@naumen.ru>
	<1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>
	<8CEDF43C-21E3-4002-9CEC-4B8FFCA03F7E@twistedmatrix.com>
	<4C724BCE.5000605@naumen.ru>
Message-ID: <20100823142312.2470.1997864862.divmod.xquotient.249@localhost.localdomain>

On 10:22 am, smagafurov at naumen.ru wrote:
>Thanks to all!
>Especially to Yaroslav Fedevych who explain me my misstake in my native 
>language :)
>I was wrong with deferreds usage.
>
>Cascading cancelling of inlineCallbacks is still needed to me, but it 
>can be realized with current Deferred API.
>
>This way for example:
>
>[snip]
>
>This inlineCallbacksWithCascadeCancelling cancels immediately "child" 
>(wait result) deferred when "parent" deferred finished (canceled for 
>example) and stops generator.
>
>May be this behaviour must be default for inlineCallbacks (i.e. 
>defer.inlineCallbacks = inlineCallbacksWithCascadeCancelling)?

If you can write some unit tests for this, turn the whole thing into a 
patch (using svn diff), and attach it to ticket #4632, that'd be great.

Jean-Paul



From gabriel.rossetti at arimaz.com  Tue Aug 24 03:40:10 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 11:40:10 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
Message-ID: <4C73937A.4040806@arimaz.com>

Hello,

I can't find any examples of using Twisted with wxPython, were wx is in 
a seperate thread. I used to have one somewhere but can' t find it 
either. I'm looking because for some reason my code doesn't work (the 
GUI freezes), even though I use reactor.callFromThread() for Twisted 
calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone 
point me to an example?

Thank you,
Gabriel



From lvh at laurensvh.be  Tue Aug 24 04:57:29 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Tue, 24 Aug 2010 12:57:29 +0200
Subject: [Twisted-Python] Twisted.web, txOAuth and custom login pages
Message-ID: <AANLkTi=yQWAnRKy8atYxp5R7+Eh6fBQiSigGNxm5cabp@mail.gmail.com>

Hey,


I'm writing txOAuth. Basically the idea is to abstract all the OAuth stuff
away so that people can just do boring old web auth.

I've seen JP's 60 seconds post but it appears to be HTTP Authentication
centric. I'd like to be able to offer users pretty login pages. Also, OAuth
logins typically have to inform the user about more stuff, such as who *we*
think authenticated the request (as a measure against forgery), and which
privileges exactly they've requested. That makes a pretty login page
something to want.

I've also found sources on how to do it with Woven, but I'm pretty sure I'm
not supposed to do that anymore. Some of them refer to Nevow as the shiny
new thing to use, but since I'm not trying to actually BUILD such a login
page (I'm merely trying to cater to other people that do), I don't think I
need it.

I'm not sure how much of the default stuff can be reused, because OAuth is a
bit different: authenticating the end-user (that's you!) relies on
redirection. Unfortunately the login page itself might redirect the user
many times already, so there must be some way of getting back to my library
with a redirectable request

Also I'm not sure if I should be using Cred here or if it's just
complicating stuff. I think you can model the three-legged auth as two
two-legged auths: the client is authenticating to me, and the end-user is
authenticating to me. That way, you could use HTTPAuthSessionWrapper to
authenticate clients, and its realm would return the login page. This sounds
pretty complex to me.

One really simple API I can think of is just passing a custom object around
that has a deferred. Once you've successfully authenticated the end-user,
you fire it with a Request (which I can then properly redirect), as
explained above. (Same with errback chain; again, I need a request to return
the error to the client that initiated the request.)

Any thoughts?

Thanks,
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100824/acf3bab8/attachment.html>

From smagafurov at naumen.ru  Tue Aug 24 05:10:32 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Tue, 24 Aug 2010 17:10:32 +0600
Subject: [Twisted-Python] inlineCallbacks cascading cancelling and more
In-Reply-To: <20100823142312.2470.1997864862.divmod.xquotient.249@localhost.localdomain>
References: <4C68F81B.7020204@naumen.ru>	<2ACA618E-A238-4B64-8C13-4E17521C1C49@twistedmatrix.com>	<4C6A22EC.3020707@naumen.ru>	<1B323C5E-54F3-4EFC-9911-460C22068DC6@gmail.com>	<8CEDF43C-21E3-4002-9CEC-4B8FFCA03F7E@twistedmatrix.com>	<4C724BCE.5000605@naumen.ru>
	<20100823142312.2470.1997864862.divmod.xquotient.249@localhost.localdomain>
Message-ID: <4C73A8A8.8050500@naumen.ru>


> If you can write some unit tests for this, turn the whole thing into a
> patch (using svn diff), and attach it to ticket #4632, that'd be great.
>
> Jean-Paul
>    
done!



From itamar at itamarst.org  Tue Aug 24 06:11:33 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 24 Aug 2010 08:11:33 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73937A.4040806@arimaz.com>
References: <4C73937A.4040806@arimaz.com>
Message-ID: <1282651893.1652.2.camel@blake>

On Tue, 2010-08-24 at 11:40 +0200, Gabriel Rossetti wrote:
> Hello,
> 
> I can't find any examples of using Twisted with wxPython, were wx is in 
> a seperate thread. I used to have one somewhere but can' t find it 
> either. I'm looking because for some reason my code doesn't work (the 
> GUI freezes), even though I use reactor.callFromThread() for Twisted 
> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone 
> point me to an example?

I would expect that to work (assuming wx.CallAfter works). Can you post
a minimal example of your code that demonstrates a freezing GUI?





From exarkun at twistedmatrix.com  Tue Aug 24 06:20:29 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Aug 2010 12:20:29 -0000
Subject: [Twisted-Python] Twisted.web, txOAuth and custom login pages
In-Reply-To: <AANLkTi=yQWAnRKy8atYxp5R7+Eh6fBQiSigGNxm5cabp@mail.gmail.com>
References: <AANLkTi=yQWAnRKy8atYxp5R7+Eh6fBQiSigGNxm5cabp@mail.gmail.com>
Message-ID: <20100824122029.2058.255505929.divmod.xquotient.4@localhost.localdomain>

On 10:57 am, lvh at laurensvh.be wrote:
>Hey,
>
>
>I'm writing txOAuth. Basically the idea is to abstract all the OAuth 
>stuff
>away so that people can just do boring old web auth.
>
>[snip]
>
>I've also found sources on how to do it with Woven, but I'm pretty sure 
>I'm
>not supposed to do that anymore. Some of them refer to Nevow as the 
>shiny
>new thing to use, but since I'm not trying to actually BUILD such a 
>login
>page (I'm merely trying to cater to other people that do), I don't 
>think I
>need it.

Even if you don't want to generate HTML, nevow.guard is an example of 
the rest of the authentication process (tied in to cred) from an HTML 
form.  So you still might want to take a look.  Not that it's extremely 
pretty... But it has lots of real-world use and does what people want.
>I'm not sure how much of the default stuff can be reused, because OAuth 
>is a
>bit different: authenticating the end-user (that's you!) relies on
>redirection. Unfortunately the login page itself might redirect the 
>user
>many times already, so there must be some way of getting back to my 
>library
>with a redirectable request
>
>Also I'm not sure if I should be using Cred here or if it's just
>complicating stuff.

I don't know if it's complicating things or not.  But using cred is a 
*feature* you provide people.  It means that your OAuth code is easier 
to use in their applications.  So it might be worth the extra work to 
figure out how to make them fit together.

Jean-Paul



From jrennie at gmail.com  Tue Aug 24 07:00:58 2010
From: jrennie at gmail.com (Jason Rennie)
Date: Tue, 24 Aug 2010 09:00:58 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73937A.4040806@arimaz.com>
References: <4C73937A.4040806@arimaz.com>
Message-ID: <AANLkTi=a3PqDT5VataFpkRDO8y16uKuOOipgLHjJAEQ6@mail.gmail.com>

I have experience getting cherrypy (web server) and Twisted to play together
nicely...  As you know, reactor.callFromThread is necessary for waking-up
twisted from a non-twisted thread.  Getting both cherrypy and the reactor
running required that I start cherrypy with a callback to run the reactor.
 I also needed to turn off twisted's signal handling and install my own
signal handling to ensure proper shut down.

Are you sure that wx.CallAfter is the right thing for wx calls from Twisted?
 Since Twisted is an event loop, it may not release control in the same
fashion as other wx calls.

Jason

On Tue, Aug 24, 2010 at 5:40 AM, Gabriel Rossetti <
gabriel.rossetti at arimaz.com> wrote:

> Hello,
>
> I can't find any examples of using Twisted with wxPython, were wx is in
> a seperate thread. I used to have one somewhere but can' t find it
> either. I'm looking because for some reason my code doesn't work (the
> GUI freezes), even though I use reactor.callFromThread() for Twisted
> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
> point me to an example?
>
> Thank you,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100824/d3cdb331/attachment.html>

From stephen.c.waterbury at nasa.gov  Tue Aug 24 07:06:36 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Tue, 24 Aug 2010 09:06:36 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73937A.4040806@arimaz.com>
References: <4C73937A.4040806@arimaz.com>
Message-ID: <4C73C3DC.8050402@nasa.gov>

On 08/24/2010 05:40 AM, Gabriel Rossetti wrote:
> Hello,
>
> I can't find any examples of using Twisted with wxPython, were wx is in
> a seperate thread. I used to have one somewhere but can' t find it
> either. I'm looking because for some reason my code doesn't work (the
> GUI freezes), even though I use reactor.callFromThread() for Twisted
> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
> point me to an example?

I've used a method for running twisted and wxPython in separate threads
that was developed by someone at Solipsis (http://netofpeers.com).
I've put the example that was on their web site (since removed) on mine:
http://pangalactic.us/txwx/separate_thread_example.html

You can see a less trivial application of it here:
https://pangalactic.us/repo/ampchat

... in which I used that method in creating a wxpython-based client
to David Ripton's "ampchat" (wxchatclient.py).  This method has
worked for me, whereas I've observed the same (freezing) behavior
with wxreactor.

Steve



From gabriel.rossetti at arimaz.com  Tue Aug 24 07:19:06 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 15:19:06 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <1282651893.1652.2.camel@blake>
References: <4C73937A.4040806@arimaz.com> <1282651893.1652.2.camel@blake>
Message-ID: <4C73C6CA.20807@arimaz.com>

On 08/24/2010 02:11 PM, Itamar Turner-Trauring wrote:
> On Tue, 2010-08-24 at 11:40 +0200, Gabriel Rossetti wrote:
>    
>> Hello,
>>
>> I can't find any examples of using Twisted with wxPython, were wx is in
>> a seperate thread. I used to have one somewhere but can' t find it
>> either. I'm looking because for some reason my code doesn't work (the
>> GUI freezes), even though I use reactor.callFromThread() for Twisted
>> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
>> point me to an example?
>>      
> I would expect that to work (assuming wx.CallAfter works). Can you post
> a minimal example of your code that demonstrates a freezing GUI?
>
>    
Thanks for the reply, I'm going to try some other things before I make a 
minimal example, keep you up to date, thanks



From gabriel.rossetti at arimaz.com  Tue Aug 24 07:20:28 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 15:20:28 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <AANLkTi=a3PqDT5VataFpkRDO8y16uKuOOipgLHjJAEQ6@mail.gmail.com>
References: <4C73937A.4040806@arimaz.com>
	<AANLkTi=a3PqDT5VataFpkRDO8y16uKuOOipgLHjJAEQ6@mail.gmail.com>
Message-ID: <4C73C71C.6020809@arimaz.com>

It may not indeed, but from what I've read it should, I'll look into 
that, thanks for the reply and idea.

Gabriel

On 08/24/2010 03:00 PM, Jason Rennie wrote:
> I have experience getting cherrypy (web server) and Twisted to play 
> together nicely...  As you know, reactor.callFromThread is necessary 
> for waking-up twisted from a non-twisted thread.  Getting both 
> cherrypy and the reactor running required that I start cherrypy with a 
> callback to run the reactor.  I also needed to turn off twisted's 
> signal handling and install my own signal handling to ensure proper 
> shut down.
>
> Are you sure that wx.CallAfter is the right thing for wx calls from 
> Twisted?  Since Twisted is an event loop, it may not release control 
> in the same fashion as other wx calls.
>
> Jason
>
> On Tue, Aug 24, 2010 at 5:40 AM, Gabriel Rossetti 
> <gabriel.rossetti at arimaz.com <mailto:gabriel.rossetti at arimaz.com>> wrote:
>
>     Hello,
>
>     I can't find any examples of using Twisted with wxPython, were wx
>     is in
>     a seperate thread. I used to have one somewhere but can' t find it
>     either. I'm looking because for some reason my code doesn't work (the
>     GUI freezes), even though I use reactor.callFromThread() for Twisted
>     calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
>     point me to an example?
>
>     Thank you,
>     Gabriel
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
> -- 
> Jason Rennie
> Research Scientist, ITA Software
> 617-714-2645
> http://www.itasoftware.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>    
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100824/61b9a3fd/attachment.html>

From gabriel.rossetti at arimaz.com  Tue Aug 24 07:22:18 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 15:22:18 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73C3DC.8050402@nasa.gov>
References: <4C73937A.4040806@arimaz.com> <4C73C3DC.8050402@nasa.gov>
Message-ID: <4C73C78A.4090108@arimaz.com>

On 08/24/2010 03:06 PM, Stephen Waterbury wrote:
> On 08/24/2010 05:40 AM, Gabriel Rossetti wrote:
>    
>> Hello,
>>
>> I can't find any examples of using Twisted with wxPython, were wx is in
>> a seperate thread. I used to have one somewhere but can' t find it
>> either. I'm looking because for some reason my code doesn't work (the
>> GUI freezes), even though I use reactor.callFromThread() for Twisted
>> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
>> point me to an example?
>>      
> I've used a method for running twisted and wxPython in separate threads
> that was developed by someone at Solipsis (http://netofpeers.com).
> I've put the example that was on their web site (since removed) on mine:
> http://pangalactic.us/txwx/separate_thread_example.html
>
> You can see a less trivial application of it here:
> https://pangalactic.us/repo/ampchat
>
> ... in which I used that method in creating a wxpython-based client
> to David Ripton's "ampchat" (wxchatclient.py).  This method has
> worked for me, whereas I've observed the same (freezing) behavior
> with wxreactor.
>
> Steve
>    

Ok, so you put Twisted in a thread? I read in several posts that this 
posed problems, have you had any drawbacks?

Gabriel



From stephen.c.waterbury at nasa.gov  Tue Aug 24 07:24:42 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Tue, 24 Aug 2010 09:24:42 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73C78A.4090108@arimaz.com>
References: <4C73937A.4040806@arimaz.com> <4C73C3DC.8050402@nasa.gov>
	<4C73C78A.4090108@arimaz.com>
Message-ID: <4C73C81A.9060202@nasa.gov>

On 08/24/2010 09:22 AM, Gabriel Rossetti wrote:
> On 08/24/2010 03:06 PM, Stephen Waterbury wrote:
>> On 08/24/2010 05:40 AM, Gabriel Rossetti wrote:
>>
>>> Hello,
>>>
>>> I can't find any examples of using Twisted with wxPython, were wx is in
>>> a seperate thread. I used to have one somewhere but can' t find it
>>> either. I'm looking because for some reason my code doesn't work (the
>>> GUI freezes), even though I use reactor.callFromThread() for Twisted
>>> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
>>> point me to an example?
>>>
>> I've used a method for running twisted and wxPython in separate threads
>> that was developed by someone at Solipsis (http://netofpeers.com).
>> I've put the example that was on their web site (since removed) on mine:
>> http://pangalactic.us/txwx/separate_thread_example.html
>>
>> You can see a less trivial application of it here:
>> https://pangalactic.us/repo/ampchat
>>
>> ... in which I used that method in creating a wxpython-based client
>> to David Ripton's "ampchat" (wxchatclient.py).  This method has
>> worked for me, whereas I've observed the same (freezing) behavior
>> with wxreactor.
>>
>> Steve
>>
>
> Ok, so you put Twisted in a thread? I read in several posts that this
> posed problems, have you had any drawbacks?

I haven't observed any.

Steve



From stephen.c.waterbury at nasa.gov  Tue Aug 24 08:08:49 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Tue, 24 Aug 2010 10:08:49 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73C81A.9060202@nasa.gov>
References: <4C73937A.4040806@arimaz.com>
	<4C73C3DC.8050402@nasa.gov>	<4C73C78A.4090108@arimaz.com>
	<4C73C81A.9060202@nasa.gov>
Message-ID: <4C73D271.6080407@nasa.gov>

On 08/24/2010 09:24 AM, Stephen Waterbury wrote:
> On 08/24/2010 09:22 AM, Gabriel Rossetti wrote:
>> Ok, so you put Twisted in a thread? I read in several posts that this
>> posed problems, have you had any drawbacks?
>
> I haven't observed any.

Reflecting on this a little further (and with the caveat that I
am a complete ignoramus on threading), it seems to me that
problems happen when Twisted is not in the main thread.  Note
that in the example, the reactor starts first (i.e., before the
wx event loop), so I guess it is in the main thread ... I haven't
tried switching them, but if you do that or anything that breaks
this method, please let me know -- as I say, I haven't seen it
break (freeze or otherwise malfunction) yet.

Steve



From itamar at itamarst.org  Tue Aug 24 08:26:53 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 24 Aug 2010 10:26:53 -0400
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73C78A.4090108@arimaz.com>
References: <4C73937A.4040806@arimaz.com> <4C73C3DC.8050402@nasa.gov>
	<4C73C78A.4090108@arimaz.com>
Message-ID: <1282660013.1652.5.camel@blake>

On Tue, 2010-08-24 at 15:22 +0200, Gabriel Rossetti wrote:

> Ok, so you put Twisted in a thread? I read in several posts that this 
> posed problems, have you had any drawbacks?

reactor.spawnProcess won't notice processes have exited on posix
platforms (though you can fix this by installing your own SIGCHLD
handler in the main thread that does callFromThread on
t.i.process.reapAllProcesses).




From andrewfr_ice at yahoo.com  Tue Aug 24 11:32:06 2010
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 24 Aug 2010 10:32:06 -0700 (PDT)
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <mailman.208377.1282656033.23374.twisted-python@twistedmatrix.com>
Message-ID: <577217.97191.qm@web120706.mail.ne1.yahoo.com>

Hi 

>I can't find any examples of using Twisted with wxPython, were wx is in 
>a seperate thread. I used to have one somewhere but can' t find it 
>either. I'm looking because for some reason my code doesn't work (the 
>GUI freezes), even though I use reactor.callFromThread() for Twisted 
>calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone 
>point me to an example?

This may be off topic but isn't there a wxReactor() so that you can
avoid a separate thread?

Cheers,
Andrew


      



From gabriel.rossetti at arimaz.com  Tue Aug 24 14:56:33 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 22:56:33 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <577217.97191.qm@web120706.mail.ne1.yahoo.com>
References: <577217.97191.qm@web120706.mail.ne1.yahoo.com>
Message-ID: <4C743201.1090002@arimaz.com>

On 08/24/2010 07:32 PM, Andrew Francis wrote:
> Hi
>
>    
>> I can't find any examples of using Twisted with wxPython, were wx is in
>> a seperate thread. I used to have one somewhere but can' t find it
>> either. I'm looking because for some reason my code doesn't work (the
>> GUI freezes), even though I use reactor.callFromThread() for Twisted
>> calls from wx and wx.CallAfter() for wx calls from Twisted. Can anyone
>> point me to an example?
>>      
> This may be off topic but isn't there a wxReactor() so that you can
> avoid a separate thread?
>
> Cheers,
> Andrew
>    

Yes, I know, but I'm using Twisted in a way that I allow blocking 
because it doesn't matter in my application, I receive a msg then access 
hardware and therefor I can only do one thing at a time (with this 
hardware anyways). If I use wxreactor with this model the GUI freezes up 
when I access the IO. I used to use wxreactor, put the IO calls in a 
queue and run one after another in a thread but this posed other 
problems when I needed to interact in between the GUI, the network 
(Twisted) and the IO threads, with my current code it has become much 
simpler and more reliable.

Cheers,
Gabriel



From gabriel.rossetti at arimaz.com  Tue Aug 24 15:00:42 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 23:00:42 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <4C73D92D.4060104@nasa.gov>
References: <4C73937A.4040806@arimaz.com>	<4C73C3DC.8050402@nasa.gov>	<4C73C78A.4090108@arimaz.com>	<4C73C81A.9060202@nasa.gov>
	<4C73D271.6080407@nasa.gov> <4C73D92D.4060104@nasa.gov>
Message-ID: <4C7432FA.1040703@arimaz.com>

On 08/24/2010 04:37 PM, Stephen Waterbury wrote:
> On 08/24/2010 10:08 AM, Stephen Waterbury wrote:
>> On 08/24/2010 09:24 AM, Stephen Waterbury wrote:
>>> On 08/24/2010 09:22 AM, Gabriel Rossetti wrote:
>>>> Ok, so you put Twisted in a thread? I read in several posts that this
>>>> posed problems, have you had any drawbacks?
>>>
>>> I haven't observed any.
>>
>> Reflecting on this a little further (and with the caveat that I
>> am a complete ignoramus on threading), it seems to me that
>> problems happen when Twisted is not in the main thread.  Note
>> that in the example, the reactor starts first (i.e., before the
>> wx event loop), so I guess it is in the main thread ... I haven't
>> tried switching them, but if you do that or anything that breaks
>> this method, please let me know -- as I say, I haven't seen it
>> break (freeze or otherwise malfunction) yet.
>
> BTW, Gabriel (sorry about spamming you about this -- this is the
> last thing I'll say, I promise! ;), I think what I said above is
> completely wrong:  the example code *is* running the reactor in a
> daemon thread -- it sets it explicitly using 'setDaemon(True)'.
> Anyway, if you get it to break, please let me know -- thanks!
>
> Steve

no worries Steve, it's cool of you to look into this. I'll give it a try 
if I can't get the wx-in-a-thread code to work by tomorrow. I just want 
to check some things first to make sure it's not another problem hiding. 
Thanks for your help, I'll keep you up to date!

Gabriel



From gabriel.rossetti at arimaz.com  Tue Aug 24 15:04:46 2010
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Tue, 24 Aug 2010 23:04:46 +0200
Subject: [Twisted-Python] Twisted with wxPython in a thread
In-Reply-To: <1282660013.1652.5.camel@blake>
References: <4C73937A.4040806@arimaz.com>
	<4C73C3DC.8050402@nasa.gov>	<4C73C78A.4090108@arimaz.com>
	<1282660013.1652.5.camel@blake>
Message-ID: <4C7433EE.4090204@arimaz.com>

On 08/24/2010 04:26 PM, Itamar Turner-Trauring wrote:
> On Tue, 2010-08-24 at 15:22 +0200, Gabriel Rossetti wrote:
>
>    
>> Ok, so you put Twisted in a thread? I read in several posts that this
>> posed problems, have you had any drawbacks?
>>      
> reactor.spawnProcess won't notice processes have exited on posix
> platforms (though you can fix this by installing your own SIGCHLD
> handler in the main thread that does callFromThread on
> t.i.process.reapAllProcesses).
>    
Ok, thanks for the info, I'll look into this if I go for the 
twisted-in-a-thread version, although I may no longer be using 
reactor.spawnProcess myself but it is probably being used somewhere by 
Twisted so it's beter to do that.



From shwetanka at gmail.com  Thu Aug 26 02:43:42 2010
From: shwetanka at gmail.com (shwetanka srivastava)
Date: Thu, 26 Aug 2010 14:13:42 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
Message-ID: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>

Hi

I'm using twisted api with starpy to make a conference call. After a
successful call this error is logged in my log file

ERROR:twsited:Unhandled error in Deferred:
ERROR:twsited:Unhandled Error
Traceback (most recent call last):
  File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
148, in dataReceived
    self.lineReceived(line)
  File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line 120,
in lineReceived
    df.callback( line )
  File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
243, in callback
    self._startRunCallbacks(result)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
312, in _startRunCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
328, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line 145,
in checkFailure
    raise error.AGICommandFailure( FAILURE_CODE, result )
starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')

Calls are perfectly ok. I tried to google about the error and found out if I
don't provide an errback() to a deferred object then this happens.
How do i find which deferred object is posing this problem and also whether
it affects the program execution because my program is working absolutely
fine.
-- 
Regards
Shwetanka
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100826/ebab99c2/attachment.html>

From smagafurov at naumen.ru  Thu Aug 26 03:47:39 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Thu, 26 Aug 2010 15:47:39 +0600
Subject: [Twisted-Python] help with Deferreds
Message-ID: <4C76383B.5080708@naumen.ru>

How to rewrite this regular function with Deferred-style?

def getCachedResult(cache, key):
     try:
         item = cache.open(key)
     except NotFound:
         return None

     try:
         if item.obsolete():
             return None
         data = item.read()
     finally:
         item.release()

     result = renew(data)
     return result

Conditions:
1. 'cache.open' and 'item.read' become deffered
2. 'item.obsolete()' and 'renew(data)' are not deferred




From mithrandi at mithrandi.net  Thu Aug 26 04:04:55 2010
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 26 Aug 2010 12:04:55 +0200
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <4C76383B.5080708@naumen.ru>
References: <4C76383B.5080708@naumen.ru>
Message-ID: <AANLkTi=8ob-vhTv9-KxOuWfPN-i007YJ3c-CEkn6krqA@mail.gmail.com>

On Thu, Aug 26, 2010 at 11:47 AM, Sergey Magafurov <smagafurov at naumen.ru> wrote:
> How to rewrite this regular function with Deferred-style?

> Conditions:
> 1. 'cache.open' and 'item.read' become deffered
> 2. 'item.obsolete()' and 'renew(data)' are not deferred

I would probably write it something like this:

def getCachedResult(cache, key):
    def _gotResult(item):
        try:
            if item.obsolete():
                return None
            d = item.read()
            d.addCallback(lambda data: renew(data))
        except:
            item.release()
            raise
        d.addBoth(lambda ign: item.release())
        return d

    def _ebNotFound(f):
        f.trap(NotFound)
        return None

    return cache.open(key).addCallbacks(_gotResult, _ebNotFound)

Note: code is untested
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From einar.twisted at norsk-esport.no  Thu Aug 26 04:15:24 2010
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Thu, 26 Aug 2010 12:15:24 +0200
Subject: [Twisted-Python] Twisted and SOAP
Message-ID: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>

Hi,

What is currently the recommended option for letting Twisted
applications communicate with SOAP services?

Cheers,
Einar



From terry at jon.es  Thu Aug 26 04:17:41 2010
From: terry at jon.es (Terry Jones)
Date: Thu, 26 Aug 2010 12:17:41 +0200
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: Your message at 15:47:39 on Thursday, 26 August 2010
References: <4C76383B.5080708@naumen.ru>
Message-ID: <19574.16197.79319.11292@jon.es>

Hi Sergey

> How to rewrite this regular function with Deferred-style?

Something like the below (untested) will do the job.  You'd have to make
sure that cache.open returned a deferred that fails with NotFound in case
things don't work out.

It would be simpler to translate your code using inlineCallbacks, but it
might be to your advantage to first see how to do it without that.  If you
do take that approach you might want to do some timing tests.

Terry

---

def getCachedResult(cache, key):

    def release(result, item):
        item.release()
        return result

    def renew(data):
        return renew(data)

    def notFound(fail):
        fail.trap(NotFound)

    def checkObsolete(item):
        if item.obsolete():
            return None
        else:
            d = item.read()
            d.addBoth(release, item)
            d.addCallback(renew)
            return d

    d = cache.open(key)
    d.addCallbacks(checkObsolete, notFound)
    return d



From smagafurov at naumen.ru  Thu Aug 26 04:23:05 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Thu, 26 Aug 2010 16:23:05 +0600
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <AANLkTi=8ob-vhTv9-KxOuWfPN-i007YJ3c-CEkn6krqA@mail.gmail.com>
References: <4C76383B.5080708@naumen.ru>
	<AANLkTi=8ob-vhTv9-KxOuWfPN-i007YJ3c-CEkn6krqA@mail.gmail.com>
Message-ID: <4C764089.4080604@naumen.ru>


> I would probably write it something like this:
>
> def getCachedResult(cache, key):
>      def _gotResult(item):
>          try:
>              if item.obsolete():
>                  return None
>              d = item.read()
>              d.addCallback(lambda data: renew(data))
>          except:
>              item.release()
>              raise
>          d.addBoth(lambda ign: item.release())
>          return d
>
>      def _ebNotFound(f):
>          f.trap(NotFound)
>          return None
>
>      return cache.open(key).addCallbacks(_gotResult, _ebNotFound)
>
> Note: code is untested
>    
My variant is like yours.
I ask this question because I am confusing with this ugly slice of code:

try:
     ...
except:
     item.release()
     raise

Only inlineCallbacks helps me...
Thanks.




From smagafurov at naumen.ru  Thu Aug 26 04:31:13 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Thu, 26 Aug 2010 16:31:13 +0600
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <19574.16197.79319.11292@jon.es>
References: <4C76383B.5080708@naumen.ru> <19574.16197.79319.11292@jon.es>
Message-ID: <4C764271.5000001@naumen.ru>


> def getCachedResult(cache, key):
>
>      def release(result, item):
>          item.release()
>          return result
>
>      def renew(data):
>          return renew(data)
>
>      def notFound(fail):
>          fail.trap(NotFound)
>
>      def checkObsolete(item):
>          if item.obsolete():
>              return None
>          else:
>              d = item.read()
>              d.addBoth(release, item)
>              d.addCallback(renew)
>              return d
>
>      d = cache.open(key)
>      d.addCallbacks(checkObsolete, notFound)
>      return d
>    
Hi Terry
If item.obsolete() raise exception item remain not released.
Additional try ... except ... safe us but looks ugly



From mithrandi at mithrandi.net  Thu Aug 26 04:38:18 2010
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 26 Aug 2010 12:38:18 +0200
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <4C764089.4080604@naumen.ru>
References: <4C76383B.5080708@naumen.ru>
	<AANLkTi=8ob-vhTv9-KxOuWfPN-i007YJ3c-CEkn6krqA@mail.gmail.com>
	<4C764089.4080604@naumen.ru>
Message-ID: <AANLkTi=k9DVFTAKLU3LhAMbJpo_A_4pLb46HnAa2mR=-@mail.gmail.com>

On Thu, Aug 26, 2010 at 12:23 PM, Sergey Magafurov <smagafurov at naumen.ru> wrote:
> I ask this question because I am confusing with this ugly slice of code:
>
> try:
>     ...
> except:
>     item.release()
>     raise

If you don't like that construct, perhaps this one is nicer:

from twisted.internet.defer import maybeDeferred

def getCachedResult(cache, key):
   def _readItem(item):
       if item.obsolete():
           return None
       return item.read()

   def _gotResult(item):
       def _release(ign):
           item.release()
           return item

       d = maybeDeferred(_readItem, item)
       d.addBoth(_release)
       d.addCallback(renew)
       return d

   def _ebNotFound(f):
       f.trap(NotFound)
       return None

   return cache.open(key).addCallbacks(_gotResult, _ebNotFound)

-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From terry at jon.es  Thu Aug 26 04:44:52 2010
From: terry at jon.es (Terry Jones)
Date: Thu, 26 Aug 2010 12:44:52 +0200
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: Your message at 16:31:13 on Thursday, 26 August 2010
References: <4C76383B.5080708@naumen.ru> <19574.16197.79319.11292@jon.es>
	<4C764271.5000001@naumen.ru>
Message-ID: <19574.17828.236399.757022@jon.es>

Hi Sergey

>      def checkObsolete(item):
>          if item.obsolete():
>              return None
>          else:
>              d = item.read()
>              d.addBoth(release, item)
>              d.addCallback(renew)
>              return d
>
>      d = cache.open(key)
>      d.addCallbacks(checkObsolete, notFound)
>      return d
>    

> Hi Terry
> If item.obsolete() raise exception item remain not released.
> Additional try ... except ... safe us but looks ugly

Yes, I was expecting you to wrap item.obsolete() and renew(data) in
try/except, as needed.  If you want a clean but slightly slower way to do
that, how about something like:


def getCachedResult(cache, key):

    def release(result, item):
        item.release()
        return result

    def renew(data):
        return renew(data)

    def notFound(fail):
        fail.trap(NotFound)

    def readItem(item):
        return item.read()

    def checkObsolete(item):
        d = defer.maybeDeferred(item.obsolete)
        d.addCallback(lambda _: readItem(item))
        d.addBoth(release, item)
        d.addCallback(renew)
        return d

    d = cache.open(key)
    d.addCallbacks(checkObsolete, notFound)
    return d



From smagafurov at naumen.ru  Thu Aug 26 04:49:25 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Thu, 26 Aug 2010 16:49:25 +0600
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <AANLkTi=k9DVFTAKLU3LhAMbJpo_A_4pLb46HnAa2mR=-@mail.gmail.com>
References: <4C76383B.5080708@naumen.ru>	<AANLkTi=8ob-vhTv9-KxOuWfPN-i007YJ3c-CEkn6krqA@mail.gmail.com>	<4C764089.4080604@naumen.ru>
	<AANLkTi=k9DVFTAKLU3LhAMbJpo_A_4pLb46HnAa2mR=-@mail.gmail.com>
Message-ID: <4C7646B5.8070203@naumen.ru>


> If you don't like that construct, perhaps this one is nicer:
>
> from twisted.internet.defer import maybeDeferred
>
> def getCachedResult(cache, key):
>     def _readItem(item):
>         if item.obsolete():
>             return None
>         return item.read()
>
>     def _gotResult(item):
>         def _release(ign):
>             item.release()
>             return item
>
>         d = maybeDeferred(_readItem, item)
>         d.addBoth(_release)
>         d.addCallback(renew)
>         return d
>
>     def _ebNotFound(f):
>         f.trap(NotFound)
>         return None
>
>     return cache.open(key).addCallbacks(_gotResult, _ebNotFound
Thanks, this is what I was looking for
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100826/5891151b/attachment.html>

From smagafurov at naumen.ru  Thu Aug 26 04:51:21 2010
From: smagafurov at naumen.ru (Sergey Magafurov)
Date: Thu, 26 Aug 2010 16:51:21 +0600
Subject: [Twisted-Python] help with Deferreds
In-Reply-To: <19574.17828.236399.757022@jon.es>
References: <4C76383B.5080708@naumen.ru>
	<19574.16197.79319.11292@jon.es>	<4C764271.5000001@naumen.ru>
	<19574.17828.236399.757022@jon.es>
Message-ID: <4C764729.2020909@naumen.ru>


> Yes, I was expecting you to wrap item.obsolete() and renew(data) in
> try/except, as needed.  If you want a clean but slightly slower way to do
> that, how about something like:
>
>
> def getCachedResult(cache, key):
>
>      def release(result, item):
>          item.release()
>          return result
>
>      def renew(data):
>          return renew(data)
>
>      def notFound(fail):
>          fail.trap(NotFound)
>
>      def readItem(item):
>          return item.read()
>
>      def checkObsolete(item):
>          d = defer.maybeDeferred(item.obsolete)
>          d.addCallback(lambda _: readItem(item))
>          d.addBoth(release, item)
>          d.addCallback(renew)
>          return d
>
>      d = cache.open(key)
>      d.addCallbacks(checkObsolete, notFound)
>      return d
>
>    
Thanks, maybeDeferred is what I missed :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100826/25e4c987/attachment-0001.html>

From general at vultaire.net  Thu Aug 26 05:46:59 2010
From: general at vultaire.net (Paul Goins)
Date: Thu, 26 Aug 2010 20:46:59 +0900
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
Message-ID: <4C765433.4010006@vultaire.net>

Hello Shwetanka,

Just looking at this traceback, the error looks like it was raised at 
starpy/fastagi.py:145, and the Deferred in question had its callback 
called at starpy/fastagi.py:120.  Both are starpy code.

I'd suggest asking the starpy people.  This traceback makes it look like 
the error is coming out of their library.

- Paul Goins


On 8/26/2010 5:43 PM, shwetanka srivastava wrote:
> Hi
>
> I'm using twisted api with starpy to make a conference call. After a
> successful call this error is logged in my log file
>
> ERROR:twsited:Unhandled error in Deferred:
> ERROR:twsited:Unhandled Error
> Traceback (most recent call last):
>    File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py",
> line 148, in dataReceived
>      self.lineReceived(line)
>    File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
> 120, in lineReceived
>      df.callback( line )
>    File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
> line 243, in callback
>      self._startRunCallbacks(result)
>    File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
> line 312, in _startRunCallbacks
>      self._runCallbacks()
> --- <exception caught here> ---
>    File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
> line 328, in _runCallbacks
>      self.result = callback(self.result, *args, **kw)
>    File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
> 145, in checkFailure
>      raise error.AGICommandFailure( FAILURE_CODE, result )
> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>
> Calls are perfectly ok. I tried to google about the error and found out
> if I don't provide an errback() to a deferred object then this happens.
> How do i find which deferred object is posing this problem and also
> whether it affects the program execution because my program is working
> absolutely fine.
> --
> Regards
> Shwetanka
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From godson.g at gmail.com  Fri Aug 27 09:20:17 2010
From: godson.g at gmail.com (Godson Gera)
Date: Fri, 27 Aug 2010 20:50:17 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
Message-ID: <AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>

Hi,

This error is obviously raised when the issued command is failed to execute
at Asterisk end. However there could be variety of reasons for failure, one
common cause is call is hungup on which the command is issued.

By looking at the error it occurs that you might be trying to play some
audio file on the call. So check if the file really exists and is in the
format specified by Asterisk 8000Hz mono 16-bit . Looking at the Asterisk
console while this occurs will also give you useful cues.

As Paul mentioned this is really a starpy and Asterisk question, so posting
queries like this on starpy mailing list will get better insights.

-- 
Thanks & Regards,
Godson Gera
Starpy <http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>

On Thu, Aug 26, 2010 at 2:13 PM, shwetanka srivastava
<shwetanka at gmail.com>wrote:

> Hi
>
> I'm using twisted api with starpy to make a conference call. After a
> successful call this error is logged in my log file
>
> ERROR:twsited:Unhandled error in Deferred:
> ERROR:twsited:Unhandled Error
> Traceback (most recent call last):
>   File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
> 148, in dataReceived
>     self.lineReceived(line)
>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
> 120, in lineReceived
>     df.callback( line )
>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
> 243, in callback
>     self._startRunCallbacks(result)
>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
> 312, in _startRunCallbacks
>     self._runCallbacks()
> --- <exception caught here> ---
>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
> 328, in _runCallbacks
>     self.result = callback(self.result, *args, **kw)
>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
> 145, in checkFailure
>     raise error.AGICommandFailure( FAILURE_CODE, result )
> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>
> Calls are perfectly ok. I tried to google about the error and found out if
> I don't provide an errback() to a deferred object then this happens.
> How do i find which deferred object is posing this problem and also whether
> it affects the program execution because my program is working absolutely
> fine.
> --
> Regards
> Shwetanka
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100827/7401e7c1/attachment-0001.html>

From shwetanka at gmail.com  Fri Aug 27 09:51:11 2010
From: shwetanka at gmail.com (shwetanka srivastava)
Date: Fri, 27 Aug 2010 21:21:11 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
	<AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>
Message-ID: <AANLkTimUNghdZUjgoyy7ish8fFAvxLuTrLHBXONdKCuQ@mail.gmail.com>

Hi

Thanks...
I do am playing an audio file. This error is shown in log file but
everything calling and conferencing is working absolutely fine. I'll post to
starpy mailing list also.

Thanks again for the reply
Regards
Shwetanka

On Fri, Aug 27, 2010 at 8:50 PM, Godson Gera <godson.g at gmail.com> wrote:

> Hi,
>
> This error is obviously raised when the issued command is failed to execute
> at Asterisk end. However there could be variety of reasons for failure, one
> common cause is call is hungup on which the command is issued.
>
> By looking at the error it occurs that you might be trying to play some
> audio file on the call. So check if the file really exists and is in the
> format specified by Asterisk 8000Hz mono 16-bit . Looking at the Asterisk
> console while this occurs will also give you useful cues.
>
> As Paul mentioned this is really a starpy and Asterisk question, so posting
> queries like this on starpy mailing list will get better insights.
>
> --
> Thanks & Regards,
> Godson Gera
> Starpy<http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
>
> On Thu, Aug 26, 2010 at 2:13 PM, shwetanka srivastava <shwetanka at gmail.com
> > wrote:
>
>> Hi
>>
>> I'm using twisted api with starpy to make a conference call. After a
>> successful call this error is logged in my log file
>>
>> ERROR:twsited:Unhandled error in Deferred:
>> ERROR:twsited:Unhandled Error
>> Traceback (most recent call last):
>>   File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
>> 148, in dataReceived
>>     self.lineReceived(line)
>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>> 120, in lineReceived
>>     df.callback( line )
>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>> 243, in callback
>>     self._startRunCallbacks(result)
>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>> 312, in _startRunCallbacks
>>     self._runCallbacks()
>> --- <exception caught here> ---
>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>> 328, in _runCallbacks
>>     self.result = callback(self.result, *args, **kw)
>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>> 145, in checkFailure
>>     raise error.AGICommandFailure( FAILURE_CODE, result )
>> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>>
>> Calls are perfectly ok. I tried to google about the error and found out if
>> I don't provide an errback() to a deferred object then this happens.
>> How do i find which deferred object is posing this problem and also
>> whether it affects the program execution because my program is working
>> absolutely fine.
>> --
>> Regards
>> Shwetanka
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Regards
Shwetanka
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100827/188b60a2/attachment.html>

From enselic at gmail.com  Sat Aug 28 01:34:24 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 09:34:24 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent socket
 data flow, any clue why?
Message-ID: <4C78BC00.3030807@gmail.com>

Hi

I am getting a weird problem where git cloning with 
reactor.spawnProcess() fails for some repositories. It appears as if 
Twisted blocks reading from the server socket that git packs should come on.

I originally got the problem with buildbot, but I have has isolated the 
problem further to Twisted. The following program can be used to 
reproduce the problem:

  #!/usr/bin/python

  from twisted.internet import reactor, protocol

  class ProcessPrinter(protocol.ProcessProtocol):
      def connectionMade(self):
          print "::connectionMade"

      def outReceived(self, data):
          print "::outReceived"
          print data

      def errReceived(self, data):
          print "::errReceived"
          print data

      def processEnded(self, status_object):
          print "::processEnded"
          print "exit code %d" % status_object.value.exitCode
          reactor.stop()

  def spawn_after_run():
      argv = ['/usr/bin/git', 'clone', 'git://git.gnome.org/gimp']
      reactor.spawnProcess(ProcessPrinter(), argv[0], argv)

  reactor.callLater(0, spawn_after_run);
  reactor.run();

If a debugger is attached to the spawned git process, it can be seen 
that the process blocks on read() on the socket that is supposed to be 
fed with git packs from the server.

I have done a tcpdump of the traffic between my computer and the git 
server, and there *is* successful communication going on. More 
specifically, the git client receives the refs the server has, and sends 
the refs it wants, which is acknowledged by the server, but for some 
reason it still eventually blocks on read().

Curiously enough, if the program is changed to clone e.g. 
'git://git.gnome.org/gegl' instead of 'git://git.gnome.org/gimp', it 
works! The GIMP repo is much bigger than the GEGL one, which might be 
the trigger for the bug, but I don't understand why it would matter.

I see this problem on Fedora 13 x86_64, both with the distro version 
Twisted 0.8.2, and with the latest stable release Twisted 10.1.0. My 
personal guess is that it has something to do with how spawnProcess() 
manages the fds or the child process.

Does anyone have any guess of what is going on?
Can you reproduce it on other systems?

Thanks in advance for any input.

Regards,
Martin





From enselic at gmail.com  Sat Aug 28 01:38:14 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 09:38:14 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C78BC00.3030807@gmail.com>
References: <4C78BC00.3030807@gmail.com>
Message-ID: <4C78BCE6.9000802@gmail.com>

On 08/28/2010 09:34 AM, Martin Nordholts wrote:
> I see this problem on Fedora 13 x86_64, both with the distro version
> Twisted 0.8.2

Sorry, that should have been 8.2.0.

  / Martin



From invite+zj4oao24jo_9 at facebookmail.com  Sat Aug 28 02:41:57 2010
From: invite+zj4oao24jo_9 at facebookmail.com (Raja Pavan)
Date: Sat, 28 Aug 2010 01:41:57 -0700
Subject: [Twisted-Python] Check out my photos on Facebook
Message-ID: <0f4af87c2a27f524f2dab57792ea6501@www.facebook.com>

Hi Twisted,

I set up a Facebook profile where I can post my pictures, videos and events and I want to add you as a friend so you can see it. First, you need to join Facebook! Once you join, you can also create your own profile.

Thanks,
Raja

To sign up for Facebook, follow the link below:
http://www.facebook.com/p.php?i=100001226497896&k=Z6E3Y6UYSZW1WKBJPB63QTWTP4D1YU2NUWHSJKQOYW&r

Already have an account? Add this email address to your account:
http://www.facebook.com/n/?merge_accounts.php&e=twisted-python%40twistedmatrix.com&c=46d744b8cb34ab4547db11de9168827d

=======================================
twisted-python at twistedmatrix.com was invited to join Facebook by Raja Pavan. If you do not wish to receive this type of email from Facebook in the future, please follow the link below to unsubscribe.
http://www.facebook.com/o.php?k=da0a54&u=100000673873684&mid=2e2c902G5af338a4bf14G0G8
Facebook, Inc. P.O. Box 10005, Palo Alto, CA 94303

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100828/1e3552aa/attachment.html>

From enselic at gmail.com  Sat Aug 28 03:31:07 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 11:31:07 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C78BC00.3030807@gmail.com>
References: <4C78BC00.3030807@gmail.com>
Message-ID: <4C78D75B.30408@gmail.com>

On 08/28/2010 09:34 AM, Martin Nordholts wrote:
> Hi
>
> I am getting a weird problem where git cloning with
> reactor.spawnProcess() fails for some repositories. It appears as if
> Twisted blocks reading from the server socket that git packs should come
> on.

Started to debug this myself in Twisted, and it turns out that if I 
disable _setupChild() in twisted.internet.process.Process, the sample 
program that clones GIMP with spawnProcess() works as expected.


--- Twisted-10.1.0-orig/twisted/internet/process.py
+++ Twisted-10.1.0/twisted/internet/process.py
@@ -619,6 +619,9 @@ class Process(_BaseProcess):
                     original.
          """

+        # Don't do this..
+        return
+
          debug = self.debug_child
          if debug:
              errfd = sys.stderr


I'll see if I can pinpoint the bug...

  / Martin



From itamar at itamarst.org  Sat Aug 28 07:32:11 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 28 Aug 2010 09:32:11 -0400
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C78D75B.30408@gmail.com>
References: <4C78BC00.3030807@gmail.com>  <4C78D75B.30408@gmail.com>
Message-ID: <1283002331.1756.2.camel@blake>

On Sat, 2010-08-28 at 11:31 +0200, Martin Nordholts wrote:

> I'll see if I can pinpoint the bug...

If you can reproduce this with a Python program you launch, rather than
git, that would be ideal.

I assume you've tested this by running git without twisted, on the
command-line, just to make sure the problem doesn't occur there?




From enselic at gmail.com  Sat Aug 28 08:06:48 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 16:06:48 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <1283002331.1756.2.camel@blake>
References: <4C78BC00.3030807@gmail.com> <4C78D75B.30408@gmail.com>
	<1283002331.1756.2.camel@blake>
Message-ID: <4C7917F8.1060201@gmail.com>

On 08/28/2010 03:32 PM, Itamar Turner-Trauring wrote:
> On Sat, 2010-08-28 at 11:31 +0200, Martin Nordholts wrote:
>
>> I'll see if I can pinpoint the bug...
>
> If you can reproduce this with a Python program you launch, rather than
> git, that would be ideal.
>
> I assume you've tested this by running git without twisted, on the
> command-line, just to make sure the problem doesn't occur there?

Yes, I can clone fine if I don't use Twisted, and I think it worked fine 
to clone with Twisted when I ran git-daemon myself. It when cloning from 
a local repo copy with file:// in Twisted instead of from 
git://git.gnome.org.

Just out of curiosity, can you reproduce the problem on your machine? 
Does my test-program ever return for you?

  / Martin



From pm-twisted-python at anapol.cz  Sat Aug 28 09:02:20 2010
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Sat, 28 Aug 2010 17:02:20 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C7917F8.1060201@gmail.com>
References: <4C78BC00.3030807@gmail.com>
	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>
	<4C7917F8.1060201@gmail.com>
Message-ID: <4C7924FC.4060709@anapol.cz>

Hi Martin,

I tried your code just for the curiosity and it seems to work here. Are 
you sure it doesn't work? Cloning the Gimp repository takes ages here 
(half an hour - well, for a ~200MB compressed repository it isn't that 
bad given my connection speed now), but it eventually finishes. The 
error output handling behaves somewhat weird, but definitely Twisted 
doesn't seem to "block" git from doing it's job, at least not here.

See the output of your script here: http://paste.org/21833

Tested on Python 2.6.1/Twisted 8.2.0/OSX 10.6.

Cheers,
Petr

Martin Nordholts wrote:
> On 08/28/2010 03:32 PM, Itamar Turner-Trauring wrote:
>   
>> On Sat, 2010-08-28 at 11:31 +0200, Martin Nordholts wrote:
>>
>>     
>>> I'll see if I can pinpoint the bug...
>>>       
>> If you can reproduce this with a Python program you launch, rather than
>> git, that would be ideal.
>>
>> I assume you've tested this by running git without twisted, on the
>> command-line, just to make sure the problem doesn't occur there?
>>     
>
> Yes, I can clone fine if I don't use Twisted, and I think it worked fine 
> to clone with Twisted when I ran git-daemon myself. It when cloning from 
> a local repo copy with file:// in Twisted instead of from 
> git://git.gnome.org.
>
> Just out of curiosity, can you reproduce the problem on your machine? 
> Does my test-program ever return for you?
>
>   / Martin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From exarkun at twistedmatrix.com  Sat Aug 28 09:18:28 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 28 Aug 2010 15:18:28 -0000
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
	socket	data flow, any clue why?
In-Reply-To: <4C78BC00.3030807@gmail.com>
References: <4C78BC00.3030807@gmail.com>
Message-ID: <20100828151828.2058.686572818.divmod.xquotient.165@localhost.localdomain>

On 07:34 am, enselic at gmail.com wrote:
>Hi
>
>I am getting a weird problem where git cloning with
>reactor.spawnProcess() fails for some repositories. It appears as if
>Twisted blocks reading from the server socket that git packs should 
>come on.
>
>I originally got the problem with buildbot, but I have has isolated the
>problem further to Twisted. The following program can be used to
>reproduce the problem:
>
>[snip]
>
>I see this problem on Fedora 13 x86_64, both with the distro version
>Twisted 0.8.2, and with the latest stable release Twisted 10.1.0. My
>personal guess is that it has something to do with how spawnProcess()
>manages the fds or the child process.
>
>Does anyone have any guess of what is going on?
>Can you reproduce it on other systems?
>
>Thanks in advance for any input.

The git process gets all the way through the gimp checkout on my system, 
Ubuntu 9.10, with either Twisted 8.2.0 or current trunk at HEAD.

Jean-Paul



From enselic at gmail.com  Sat Aug 28 09:36:26 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 17:36:26 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C7924FC.4060709@anapol.cz>
References: <4C78BC00.3030807@gmail.com>	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>	<4C7917F8.1060201@gmail.com>
	<4C7924FC.4060709@anapol.cz>
Message-ID: <4C792CFA.1080509@gmail.com>

On 08/28/2010 05:02 PM, Petr Mifek wrote:
> Hi Martin,
>
> I tried your code just for the curiosity and it seems to work here. Are
> you sure it doesn't work?

Hi,

Thanks for testing the code. Interesting that it works for you. I hope 
we can understand why when we've found out why the bug is happening for 
me in the first place.

Yes I'm sure it doesn't work :) During my debugging now, the lack of 
heavy incoming network traffic shows early on if things works as they 
should. I've also inspected the process with GNU gdb and seen that the 
process makes no progress, and buildbot builds for GIMP times out on the 
git build step.

Regards,
Martin



From pm-twisted-python at anapol.cz  Sat Aug 28 10:00:16 2010
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Sat, 28 Aug 2010 18:00:16 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C792CFA.1080509@gmail.com>
References: <4C78BC00.3030807@gmail.com>	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>	<4C7917F8.1060201@gmail.com>	<4C7924FC.4060709@anapol.cz>
	<4C792CFA.1080509@gmail.com>
Message-ID: <4C793290.2060208@anapol.cz>

Interesting. Also you can check this file (given you started the clone 
on a directory with the sample script where no "gimp" subdir exists)

ls -l ./gimp/.git/objects/pack/tmp_pack_*

There should be one such file and it should grow up to ~175MB during the 
cloning.

BTW your git version? Here it is:

$ git --version
git version 1.7.0.3

Petr

Martin Nordholts wrote:
> On 08/28/2010 05:02 PM, Petr Mifek wrote:
>   
>> Hi Martin,
>>
>> I tried your code just for the curiosity and it seems to work here. Are
>> you sure it doesn't work?
>>     
>
> Hi,
>
> Thanks for testing the code. Interesting that it works for you. I hope 
> we can understand why when we've found out why the bug is happening for 
> me in the first place.
>
> Yes I'm sure it doesn't work :) During my debugging now, the lack of 
> heavy incoming network traffic shows early on if things works as they 
> should. I've also inspected the process with GNU gdb and seen that the 
> process makes no progress, and buildbot builds for GIMP times out on the 
> git build step.
>
> Regards,
> Martin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From enselic at gmail.com  Sat Aug 28 10:14:37 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 18:14:37 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C793290.2060208@anapol.cz>
References: <4C78BC00.3030807@gmail.com>	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>	<4C7917F8.1060201@gmail.com>	<4C7924FC.4060709@anapol.cz>	<4C792CFA.1080509@gmail.com>
	<4C793290.2060208@anapol.cz>
Message-ID: <4C7935ED.6060301@gmail.com>

On 08/28/2010 06:00 PM, Petr Mifek wrote:
> Interesting. Also you can check this file (given you started the clone
> on a directory with the sample script where no "gimp" subdir exists)
>
> ls -l ./gimp/.git/objects/pack/tmp_pack_*
>
> There should be one such file and it should grow up to ~175MB during the
> cloning.
>
> BTW your git version? Here it is:
>
> $ git --version
> git version 1.7.0.3

I never get any gimp dir created at all, presumably because it never 
gets any data to put in the dir. I guess git doesn't create the dir 
until it has things to put there.

I have git version 1.7.2.2

  / Martin



From pm-twisted-python at anapol.cz  Sat Aug 28 10:54:12 2010
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Sat, 28 Aug 2010 18:54:12 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C7935ED.6060301@gmail.com>
References: <4C78BC00.3030807@gmail.com>	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>	<4C7917F8.1060201@gmail.com>	<4C7924FC.4060709@anapol.cz>	<4C792CFA.1080509@gmail.com>	<4C793290.2060208@anapol.cz>
	<4C7935ED.6060301@gmail.com>
Message-ID: <4C793F34.4080609@anapol.cz>

Yes, here when git does connect but receives nothing, it doesn't make 
the directory. So your the sample script hangs at you with only

::connectionMade

in output? Does suppressing the git's output to stderr help? (a -q 
modifier to git clone)?

Petr

Martin Nordholts wrote:
> On 08/28/2010 06:00 PM, Petr Mifek wrote:
>   
>> Interesting. Also you can check this file (given you started the clone
>> on a directory with the sample script where no "gimp" subdir exists)
>>
>> ls -l ./gimp/.git/objects/pack/tmp_pack_*
>>
>> There should be one such file and it should grow up to ~175MB during the
>> cloning.
>>
>> BTW your git version? Here it is:
>>
>> $ git --version
>> git version 1.7.0.3
>>     
>
> I never get any gimp dir created at all, presumably because it never 
> gets any data to put in the dir. I guess git doesn't create the dir 
> until it has things to put there.
>
> I have git version 1.7.2.2
>
>   / Martin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From enselic at gmail.com  Sat Aug 28 11:15:10 2010
From: enselic at gmail.com (Martin Nordholts)
Date: Sat, 28 Aug 2010 19:15:10 +0200
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C793F34.4080609@anapol.cz>
References: <4C78BC00.3030807@gmail.com>	<4C78D75B.30408@gmail.com>	<1283002331.1756.2.camel@blake>	<4C7917F8.1060201@gmail.com>	<4C7924FC.4060709@anapol.cz>	<4C792CFA.1080509@gmail.com>	<4C793290.2060208@anapol.cz>	<4C7935ED.6060301@gmail.com>
	<4C793F34.4080609@anapol.cz>
Message-ID: <4C79441E.40009@gmail.com>

On 08/28/2010 06:54 PM, Petr Mifek wrote:
> Yes, here when git does connect but receives nothing, it doesn't make
> the directory. So your the sample script hangs at you with only
>
> ::connectionMade
>
> in output? Does suppressing the git's output to stderr help? (a -q
> modifier to git clone)?

No I get more output than that, I get:


martin at ltop:~/source/temp$ ./git-clone-gimp.py
childFDs {0: 'w', 1: 'r', 2: 'r'}
[0] w
readFD=7, writeFD=8
[1] r
readFD=9, writeFD=10
[2] r
readFD=11, writeFD=14
fdmap {0: 7, 1: 10, 2: 14}
helpers {0: 8, 1: 9, 2: 11}
::connectionMade
starting _setupChild
fdmap {0: 7, 1: 10, 2: 14}
os.dup2(7,0)
os.dup2(10,1)
os.dup2(14,2)
::errReceived
old [7, 10, 14]

::outReceived
Cloning into gimp...


A -q argument did, as expected, not help.

  / Martin



From tomfmason at gmail.com  Sat Aug 28 12:37:01 2010
From: tomfmason at gmail.com (Thomas Johnson)
Date: Sat, 28 Aug 2010 13:37:01 -0500
Subject: [Twisted-Python] spawn wsgi resource into separate process
Message-ID: <AANLkTinDHe1Gdxw8ixp+-xwTxfTUG=Pt25AALC-JRdrn@mail.gmail.com>

In the following code I am attempting to host several django applications in
vhosts - http://pastie.org/1122806 . This code works fine if I only need one
settings module. In my case each vhost needs it's own(lines 32-38)
DJANGO_SETTINGS_MODULE environment variable. It appears that I need to use
reactor.spawnProcess to spawn a new process with the required environment
variable.

Can anyone give me a few suggestions as to how to accomplish this task?

I think that it involves writing a custom protocol that would communicate
with the wsgi process but there may be better options available. Any
suggestions would be greatly appreciated.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100828/8b3dd971/attachment.html>

From jaroslaw.fedewicz at gmail.com  Sat Aug 28 15:49:52 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Sun, 29 Aug 2010 00:49:52 +0300
Subject: [Twisted-Python] spawn wsgi resource into separate process
In-Reply-To: <AANLkTinDHe1Gdxw8ixp+-xwTxfTUG=Pt25AALC-JRdrn@mail.gmail.com>
References: <AANLkTinDHe1Gdxw8ixp+-xwTxfTUG=Pt25AALC-JRdrn@mail.gmail.com>
Message-ID: <AANLkTimutQdFNNt89Yb4ddP1cT3ivV1VVGJXC_TNWcCC@mail.gmail.com>

On Sat, Aug 28, 2010 at 9:37 PM, Thomas Johnson <tomfmason at gmail.com> wrote:
>
> In the following code I am attempting to host several django applications in vhosts - http://pastie.org/1122806 . This code works fine if I only need one settings module. In my case each vhost needs it's own(lines 32-38) DJANGO_SETTINGS_MODULE environment variable. It appears that I need to use reactor.spawnProcess to spawn a new process with the required environment variable.

I have run into a similar problem before. But did you know that any
dict to be treated as the environment can be passed as the first
argument to WSGIHandler()? That's exactly what helped me.


--
Engineer : How do I do it?
Economist : How much will it cost?
Twisted Developer: But does it block?



From exarkun at twistedmatrix.com  Sat Aug 28 22:05:31 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Aug 2010 04:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1283054731.87.1678171904@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100829/6bfbd57d/attachment.html>

From superdupont at gmail.com  Sun Aug 29 01:55:56 2010
From: superdupont at gmail.com (Carlos Valiente)
Date: Sun, 29 Aug 2010 08:55:56 +0100
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <4C79441E.40009@gmail.com>
References: <4C78BC00.3030807@gmail.com> <4C78D75B.30408@gmail.com>
	<1283002331.1756.2.camel@blake> <4C7917F8.1060201@gmail.com>
	<4C7924FC.4060709@anapol.cz> <4C792CFA.1080509@gmail.com>
	<4C793290.2060208@anapol.cz> <4C7935ED.6060301@gmail.com>
	<4C793F34.4080609@anapol.cz> <4C79441E.40009@gmail.com>
Message-ID: <AANLkTikHubBmBerCzhMkH=RrghkxsTn5NDGEC9x_P01e@mail.gmail.com>

Does 'tcpdump' show any git activity when you run your program,
Martin? Once I had a problem like yours, and in my case it was caused
by git not using the HTTP proxy within my company's LAN.

C



From itamar at itamarst.org  Sun Aug 29 08:01:26 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 29 Aug 2010 10:01:26 -0400
Subject: [Twisted-Python] git clone with spawnProcess() can prevent
 socket data flow, any clue why?
In-Reply-To: <AANLkTikHubBmBerCzhMkH=RrghkxsTn5NDGEC9x_P01e@mail.gmail.com>
References: <4C78BC00.3030807@gmail.com> <4C78D75B.30408@gmail.com>
	<1283002331.1756.2.camel@blake> <4C7917F8.1060201@gmail.com>
	<4C7924FC.4060709@anapol.cz> <4C792CFA.1080509@gmail.com>
	<4C793290.2060208@anapol.cz> <4C7935ED.6060301@gmail.com>
	<4C793F34.4080609@anapol.cz> <4C79441E.40009@gmail.com>
	<AANLkTikHubBmBerCzhMkH=RrghkxsTn5NDGEC9x_P01e@mail.gmail.com>
Message-ID: <1283090486.1795.0.camel@blake>

On Sun, 2010-08-29 at 08:55 +0100, Carlos Valiente wrote:
> Does 'tcpdump' show any git activity when you run your program,
> Martin? Once I had a problem like yours, and in my case it was caused
> by git not using the HTTP proxy within my company's LAN.

I notice the original code doesn't pass os.environ to the sub-process...
maybe doing so would help?




From tomfmason at gmail.com  Sun Aug 29 13:41:56 2010
From: tomfmason at gmail.com (Thomas Johnson)
Date: Sun, 29 Aug 2010 14:41:56 -0500
Subject: [Twisted-Python] spawn wsgi resource into separate process
In-Reply-To: <AANLkTimutQdFNNt89Yb4ddP1cT3ivV1VVGJXC_TNWcCC@mail.gmail.com>
References: <AANLkTinDHe1Gdxw8ixp+-xwTxfTUG=Pt25AALC-JRdrn@mail.gmail.com>
	<AANLkTimutQdFNNt89Yb4ddP1cT3ivV1VVGJXC_TNWcCC@mail.gmail.com>
Message-ID: <AANLkTikjz6VVS+sF9ey+aAOb-_TUHb0YH2D=Eo8db8fo@mail.gmail.com>

>
>
> I have run into a similar problem before. But did you know that any
> dict to be treated as the environment can be passed as the first
> argument to WSGIHandler()? That's exactly what helped me.


I have tried several different methods and game up with mixed results. I
have tried overriding the __call__ method in the WSGIHandler and it appears
to have the same results(same settings file being used).

How where you able to accomplish this task?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100829/71b2245d/attachment.html>

From shwetanka at gmail.com  Sun Aug 29 23:42:36 2010
From: shwetanka at gmail.com (shwetanka srivastava)
Date: Mon, 30 Aug 2010 11:12:36 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTimUNghdZUjgoyy7ish8fFAvxLuTrLHBXONdKCuQ@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
	<AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>
	<AANLkTimUNghdZUjgoyy7ish8fFAvxLuTrLHBXONdKCuQ@mail.gmail.com>
Message-ID: <AANLkTi=PQVWmSeGOnUXo7vROSLOXMcCkxK8NQBcqJ5Zb@mail.gmail.com>

Hi

Actually I'm playing the file but even before it is completed I'm connecting
to another number and this is why Fastagi is sending an error. How can I add
errBack() to it. Like if playing of file is interrupted it should notify
somehow.
Thanks

Regards
Shwetanka

On Fri, Aug 27, 2010 at 9:21 PM, shwetanka srivastava
<shwetanka at gmail.com>wrote:

> Hi
>
> Thanks...
> I do am playing an audio file. This error is shown in log file but
> everything calling and conferencing is working absolutely fine. I'll post to
> starpy mailing list also.
>
> Thanks again for the reply
> Regards
> Shwetanka
>
> On Fri, Aug 27, 2010 at 8:50 PM, Godson Gera <godson.g at gmail.com> wrote:
>
>> Hi,
>>
>> This error is obviously raised when the issued command is failed to
>> execute at Asterisk end. However there could be variety of reasons for
>> failure, one common cause is call is hungup on which the command is issued.
>>
>> By looking at the error it occurs that you might be trying to play some
>> audio file on the call. So check if the file really exists and is in the
>> format specified by Asterisk 8000Hz mono 16-bit . Looking at the Asterisk
>> console while this occurs will also give you useful cues.
>>
>> As Paul mentioned this is really a starpy and Asterisk question, so
>> posting queries like this on starpy mailing list will get better insights.
>>
>> --
>> Thanks & Regards,
>> Godson Gera
>> Starpy<http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
>>
>> On Thu, Aug 26, 2010 at 2:13 PM, shwetanka srivastava <
>> shwetanka at gmail.com> wrote:
>>
>>> Hi
>>>
>>> I'm using twisted api with starpy to make a conference call. After a
>>> successful call this error is logged in my log file
>>>
>>> ERROR:twsited:Unhandled error in Deferred:
>>> ERROR:twsited:Unhandled Error
>>> Traceback (most recent call last):
>>>   File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py",
>>> line 148, in dataReceived
>>>     self.lineReceived(line)
>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>> 120, in lineReceived
>>>     df.callback( line )
>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>>> 243, in callback
>>>     self._startRunCallbacks(result)
>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>>> 312, in _startRunCallbacks
>>>     self._runCallbacks()
>>> --- <exception caught here> ---
>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py", line
>>> 328, in _runCallbacks
>>>     self.result = callback(self.result, *args, **kw)
>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>> 145, in checkFailure
>>>     raise error.AGICommandFailure( FAILURE_CODE, result )
>>> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>>>
>>> Calls are perfectly ok. I tried to google about the error and found out
>>> if I don't provide an errback() to a deferred object then this happens.
>>> How do i find which deferred object is posing this problem and also
>>> whether it affects the program execution because my program is working
>>> absolutely fine.
>>> --
>>> Regards
>>> Shwetanka
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
> --
> Regards
> Shwetanka
>
>


-- 
Regards
Shwetanka
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100830/b8a94ef8/attachment.html>

From petshmidt at googlemail.com  Mon Aug 30 02:54:11 2010
From: petshmidt at googlemail.com (Pet)
Date: Mon, 30 Aug 2010 10:54:11 +0200
Subject: [Twisted-Python] timeout in agent
Message-ID: <AANLkTikRPthxZp991CQ8M2m4JYTFu8afZftCnF9PBOXB@mail.gmail.com>

Hello!

I have modified Agent.request method (twisted.web.client.Agent) to
pass timeout parameter to
d = cc.connectTCP(host, port, timeout=timeout)

but it looks like timeout is ignored (cbConnected is called). Is this
known issue?

Thanks!



From godson.g at gmail.com  Mon Aug 30 03:30:10 2010
From: godson.g at gmail.com (Godson Gera)
Date: Mon, 30 Aug 2010 15:00:10 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTi=PQVWmSeGOnUXo7vROSLOXMcCkxK8NQBcqJ5Zb@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
	<AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>
	<AANLkTimUNghdZUjgoyy7ish8fFAvxLuTrLHBXONdKCuQ@mail.gmail.com>
	<AANLkTi=PQVWmSeGOnUXo7vROSLOXMcCkxK8NQBcqJ5Zb@mail.gmail.com>
Message-ID: <AANLkTi=GyyZnVNLrjSrsEv7DLVV40Bg+yrbyBOpyVDQC@mail.gmail.com>

Hi

All the starpy API calls return a deferred object. Adding an errback is just
like adding errback to any other deferred.

df = agi.streamFile("somefile")
df.addCallback(yourcallback)
df.addErrback(yourerrback)

It is no different from a deferred so it supports all the methods that a
normal twisted deferred object supports.

http://twistedmatrix.com/documents/10.0.0/api/twisted.internet.defer.Deferred.html

-- 
Thanks & Regards,
Godson Gera
Starpy <http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
FreeSWITCH Consulting <http://godson.in/freeswitch-radius-integration>

On Mon, Aug 30, 2010 at 11:12 AM, shwetanka srivastava
<shwetanka at gmail.com>wrote:

> Hi
>
> Actually I'm playing the file but even before it is completed I'm
> connecting to another number and this is why Fastagi is sending an error.
> How can I add errBack() to it. Like if playing of file is interrupted it
> should notify somehow.
> Thanks
>
> Regards
> Shwetanka
>
>
> On Fri, Aug 27, 2010 at 9:21 PM, shwetanka srivastava <shwetanka at gmail.com
> > wrote:
>
>> Hi
>>
>> Thanks...
>> I do am playing an audio file. This error is shown in log file but
>> everything calling and conferencing is working absolutely fine. I'll post to
>> starpy mailing list also.
>>
>> Thanks again for the reply
>> Regards
>> Shwetanka
>>
>> On Fri, Aug 27, 2010 at 8:50 PM, Godson Gera <godson.g at gmail.com> wrote:
>>
>>> Hi,
>>>
>>> This error is obviously raised when the issued command is failed to
>>> execute at Asterisk end. However there could be variety of reasons for
>>> failure, one common cause is call is hungup on which the command is issued.
>>>
>>> By looking at the error it occurs that you might be trying to play some
>>> audio file on the call. So check if the file really exists and is in the
>>> format specified by Asterisk 8000Hz mono 16-bit . Looking at the Asterisk
>>> console while this occurs will also give you useful cues.
>>>
>>> As Paul mentioned this is really a starpy and Asterisk question, so
>>> posting queries like this on starpy mailing list will get better insights.
>>>
>>> --
>>> Thanks & Regards,
>>> Godson Gera
>>> Starpy<http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
>>>
>>> On Thu, Aug 26, 2010 at 2:13 PM, shwetanka srivastava <
>>> shwetanka at gmail.com> wrote:
>>>
>>>> Hi
>>>>
>>>> I'm using twisted api with starpy to make a conference call. After a
>>>> successful call this error is logged in my log file
>>>>
>>>> ERROR:twsited:Unhandled error in Deferred:
>>>> ERROR:twsited:Unhandled Error
>>>> Traceback (most recent call last):
>>>>   File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py",
>>>> line 148, in dataReceived
>>>>     self.lineReceived(line)
>>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>>> 120, in lineReceived
>>>>     df.callback( line )
>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>> line 243, in callback
>>>>     self._startRunCallbacks(result)
>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>> line 312, in _startRunCallbacks
>>>>     self._runCallbacks()
>>>> --- <exception caught here> ---
>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>> line 328, in _runCallbacks
>>>>     self.result = callback(self.result, *args, **kw)
>>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>>> 145, in checkFailure
>>>>     raise error.AGICommandFailure( FAILURE_CODE, result )
>>>> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>>>>
>>>> Calls are perfectly ok. I tried to google about the error and found out
>>>> if I don't provide an errback() to a deferred object then this happens.
>>>> How do i find which deferred object is posing this problem and also
>>>> whether it affects the program execution because my program is working
>>>> absolutely fine.
>>>> --
>>>> Regards
>>>> Shwetanka
>>>>
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>>
>>
>> --
>> Regards
>> Shwetanka
>>
>>
>
>
> --
> Regards
> Shwetanka
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100830/a8cc2ec2/attachment.html>

From shwetanka at gmail.com  Mon Aug 30 05:02:20 2010
From: shwetanka at gmail.com (shwetanka srivastava)
Date: Mon, 30 Aug 2010 16:32:20 +0530
Subject: [Twisted-Python] Unhandled Deferred Error
In-Reply-To: <AANLkTi=GyyZnVNLrjSrsEv7DLVV40Bg+yrbyBOpyVDQC@mail.gmail.com>
References: <AANLkTinxor9sJPeM4siVaOWr=xUzwCvQLycdpic+Liev@mail.gmail.com>
	<AANLkTinAETOSojpzRGf+mV4i5bNDrjpwu=6K6h=B7w=x@mail.gmail.com>
	<AANLkTimUNghdZUjgoyy7ish8fFAvxLuTrLHBXONdKCuQ@mail.gmail.com>
	<AANLkTi=PQVWmSeGOnUXo7vROSLOXMcCkxK8NQBcqJ5Zb@mail.gmail.com>
	<AANLkTi=GyyZnVNLrjSrsEv7DLVV40Bg+yrbyBOpyVDQC@mail.gmail.com>
Message-ID: <AANLkTi=Y_=iOUVyhX29Nz1pQT73ei5MduDQGpxQefn-5@mail.gmail.com>

Hi

Thank you very much. After adding the errBack() code is working fine and
there is no error entry in the log.

Regards
Shwetanka

On Mon, Aug 30, 2010 at 3:00 PM, Godson Gera <godson.g at gmail.com> wrote:

> Hi
>
> All the starpy API calls return a deferred object. Adding an errback is
> just like adding errback to any other deferred.
>
> df = agi.streamFile("somefile")
> df.addCallback(yourcallback)
> df.addErrback(yourerrback)
>
> It is no different from a deferred so it supports all the methods that a
> normal twisted deferred object supports.
>
>
> http://twistedmatrix.com/documents/10.0.0/api/twisted.internet.defer.Deferred.html
>
> --
> Thanks & Regards,
> Godson Gera
> Starpy<http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
> FreeSWITCH Consulting <http://godson.in/freeswitch-radius-integration>
>
> On Mon, Aug 30, 2010 at 11:12 AM, shwetanka srivastava <
> shwetanka at gmail.com> wrote:
>
>> Hi
>>
>> Actually I'm playing the file but even before it is completed I'm
>> connecting to another number and this is why Fastagi is sending an error.
>> How can I add errBack() to it. Like if playing of file is interrupted it
>> should notify somehow.
>> Thanks
>>
>> Regards
>> Shwetanka
>>
>>
>> On Fri, Aug 27, 2010 at 9:21 PM, shwetanka srivastava <
>> shwetanka at gmail.com> wrote:
>>
>>> Hi
>>>
>>> Thanks...
>>> I do am playing an audio file. This error is shown in log file but
>>> everything calling and conferencing is working absolutely fine. I'll post to
>>> starpy mailing list also.
>>>
>>> Thanks again for the reply
>>> Regards
>>> Shwetanka
>>>
>>> On Fri, Aug 27, 2010 at 8:50 PM, Godson Gera <godson.g at gmail.com> wrote:
>>>
>>>> Hi,
>>>>
>>>> This error is obviously raised when the issued command is failed to
>>>> execute at Asterisk end. However there could be variety of reasons for
>>>> failure, one common cause is call is hungup on which the command is issued.
>>>>
>>>> By looking at the error it occurs that you might be trying to play some
>>>> audio file on the call. So check if the file really exists and is in the
>>>> format specified by Asterisk 8000Hz mono 16-bit . Looking at the Asterisk
>>>> console while this occurs will also give you useful cues.
>>>>
>>>> As Paul mentioned this is really a starpy and Asterisk question, so
>>>> posting queries like this on starpy mailing list will get better insights.
>>>>
>>>> --
>>>> Thanks & Regards,
>>>> Godson Gera
>>>> Starpy<http://blog.godson.in/2008/10/starpy-100a13-released-asterisk.html>
>>>>
>>>> On Thu, Aug 26, 2010 at 2:13 PM, shwetanka srivastava <
>>>> shwetanka at gmail.com> wrote:
>>>>
>>>>> Hi
>>>>>
>>>>> I'm using twisted api with starpy to make a conference call. After a
>>>>> successful call this error is logged in my log file
>>>>>
>>>>> ERROR:twsited:Unhandled error in Deferred:
>>>>> ERROR:twsited:Unhandled Error
>>>>> Traceback (most recent call last):
>>>>>   File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py",
>>>>> line 148, in dataReceived
>>>>>     self.lineReceived(line)
>>>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>>>> 120, in lineReceived
>>>>>     df.callback( line )
>>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>>> line 243, in callback
>>>>>     self._startRunCallbacks(result)
>>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>>> line 312, in _startRunCallbacks
>>>>>     self._runCallbacks()
>>>>> --- <exception caught here> ---
>>>>>   File "/usr/lib/python2.6/dist-packages/twisted/internet/defer.py",
>>>>> line 328, in _runCallbacks
>>>>>     self.result = callback(self.result, *args, **kw)
>>>>>   File "/usr/local/lib/python2.6/dist-packages/starpy/fastagi.py", line
>>>>> 145, in checkFailure
>>>>>     raise error.AGICommandFailure( FAILURE_CODE, result )
>>>>> starpy.error.AGICommandFailure: (-1, '-1 endpos=97440')
>>>>>
>>>>> Calls are perfectly ok. I tried to google about the error and found out
>>>>> if I don't provide an errback() to a deferred object then this happens.
>>>>> How do i find which deferred object is posing this problem and also
>>>>> whether it affects the program execution because my program is working
>>>>> absolutely fine.
>>>>> --
>>>>> Regards
>>>>> Shwetanka
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Twisted-Python mailing list
>>>>> Twisted-Python at twistedmatrix.com
>>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>>
>>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>>
>>>
>>> --
>>> Regards
>>> Shwetanka
>>>
>>>
>>
>>
>> --
>> Regards
>> Shwetanka
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Regards
Shwetanka
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100830/db318535/attachment-0001.html>

From itamar at itamarst.org  Mon Aug 30 05:56:07 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 30 Aug 2010 07:56:07 -0400
Subject: [Twisted-Python] timeout in agent
In-Reply-To: <AANLkTikRPthxZp991CQ8M2m4JYTFu8afZftCnF9PBOXB@mail.gmail.com>
References: <AANLkTikRPthxZp991CQ8M2m4JYTFu8afZftCnF9PBOXB@mail.gmail.com>
Message-ID: <1283169367.1582.2.camel@blake>

On Mon, 2010-08-30 at 10:54 +0200, Pet wrote:
> Hello!
> 
> I have modified Agent.request method (twisted.web.client.Agent) to
> pass timeout parameter to
> d = cc.connectTCP(host, port, timeout=timeout)
> 
> but it looks like timeout is ignored (cbConnected is called). Is this
> known issue?

Are you sure the connection happened after the timeout, not before?
Also, keep in mind that the timeout is only on the connection *attempt*,
once you're connected the timeout no longer applies.




From petshmidt at googlemail.com  Mon Aug 30 06:27:12 2010
From: petshmidt at googlemail.com (Pet)
Date: Mon, 30 Aug 2010 14:27:12 +0200
Subject: [Twisted-Python] timeout in agent
In-Reply-To: <1283169367.1582.2.camel@blake>
References: <AANLkTikRPthxZp991CQ8M2m4JYTFu8afZftCnF9PBOXB@mail.gmail.com>
	<1283169367.1582.2.camel@blake>
Message-ID: <AANLkTimQMKPFad1CFrgT0UvhfzoAwfqMnWRH42OiY5bi@mail.gmail.com>

On Mon, Aug 30, 2010 at 1:56 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Mon, 2010-08-30 at 10:54 +0200, Pet wrote:
>> Hello!
>>
>> I have modified Agent.request method (twisted.web.client.Agent) to
>> pass timeout parameter to
>> d = cc.connectTCP(host, port, timeout=timeout)
>>
>> but it looks like timeout is ignored (cbConnected is called). Is this
>> known issue?
>
> Are you sure the connection happened after the timeout, not before?
> Also, keep in mind that the timeout is only on the connection *attempt*,
> once you're connected the timeout no longer applies.

You are right, connection was maid. But the data wasn't there. Does
Twisted wait for data until remote server closes connection?

Thanks!

>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From vic.norman at gmail.com  Mon Aug 30 09:51:05 2010
From: vic.norman at gmail.com (Victor Norman)
Date: Mon, 30 Aug 2010 11:51:05 -0400
Subject: [Twisted-Python] How to package a program that I'm running as
	twistd dmucs.py
Message-ID: <AANLkTim=iJfu9sR0wLJFG736DVBcO45BfS5v6t-6QLwC@mail.gmail.com>

I am nearing the end of developing my application and am thinking about how
to package it up.  I have been testing it by running it this way:

twistd -ny dmucs.py

I was hoping I could just rename my dmucs.py to dmucsd   and then put this
in the first line of the file:

#!/bin/env twistd -ny

(or whatever other args instead of -ny)

But, this isn't working for me.

Can someone recommend the correct way to package up my application so that
it can be run by typing

dmucsd

?

Thanks.

Vic

-- 
“A designer knows he has achieved perfection not when there is nothing left
to add, but when there is nothing left to take away.” -- Antoine de Saint
Exupéry
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100830/a13ae82d/attachment.html>

From jasonjwwilliams at gmail.com  Mon Aug 30 09:54:14 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 30 Aug 2010 09:54:14 -0600
Subject: [Twisted-Python] How to package a program that I'm running as
 twistd dmucs.py
In-Reply-To: <AANLkTim=iJfu9sR0wLJFG736DVBcO45BfS5v6t-6QLwC@mail.gmail.com>
References: <AANLkTim=iJfu9sR0wLJFG736DVBcO45BfS5v6t-6QLwC@mail.gmail.com>
Message-ID: <AANLkTi=jE1xpY1KcrQL3Q2i0Qhg6DuZvaprAdxo4kgh0@mail.gmail.com>

I've typically accomplished this with a BASH script packaged with the
app or an init.d script.

-J

On Mon, Aug 30, 2010 at 9:51 AM, Victor Norman <vic.norman at gmail.com> wrote:
> I am nearing the end of developing my application and am thinking about how
> to package it up.  I have been testing it by running it this way:
>
> twistd -ny dmucs.py
>
> I was hoping I could just rename my dmucs.py to dmucsd   and then put this
> in the first line of the file:
>
> #!/bin/env twistd -ny
>
> (or whatever other args instead of -ny)
>
> But, this isn't working for me.
>
> Can someone recommend the correct way to package up my application so that
> it can be run by typing
>
> dmucsd
>
> ?
>
> Thanks.
>
> Vic
>
> --
> “A designer knows he has achieved perfection not when there is nothing left
> to add, but when there is nothing left to take away.” -- Antoine de Saint
> Exupéry
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From glyph at twistedmatrix.com  Mon Aug 30 10:00:59 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Aug 2010 12:00:59 -0400
Subject: [Twisted-Python] How to package a program that I'm running as
	twistd dmucs.py
In-Reply-To: <AANLkTim=iJfu9sR0wLJFG736DVBcO45BfS5v6t-6QLwC@mail.gmail.com>
References: <AANLkTim=iJfu9sR0wLJFG736DVBcO45BfS5v6t-6QLwC@mail.gmail.com>
Message-ID: <0BD75DD0-3938-41F4-9B92-CEA8C824444C@twistedmatrix.com>


On Aug 30, 2010, at 11:51 AM, Victor Norman wrote:

> Can someone recommend the correct way to package up my application so that it can be run by typing 
> 
> dmucsd 
> 
> ?
> 
> Thanks.
> 
> Vic

The best way to do this is to write a twistd plugin (so your script can process its own arguments) and then have a wrapper that loads that plugin via the 'twistd' module and executes it.

See here: <http://divmod.org/trac/browser/trunk/Axiom/axiom/scripts/axiomatic.py>

and here:
<http://divmod.org/trac/browser/trunk/Axiom/twisted/plugins/axiom_plugins.py>

for examples.


From jasonjwwilliams at gmail.com  Tue Aug 31 15:17:48 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 31 Aug 2010 15:17:48 -0600
Subject: [Twisted-Python] adbapi MySQL read/write splitting
Message-ID: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>

Is anyone doing read/write splitting with adbapi? Looking for advice
if anyone has tackled this before. Thank you in advance.

-J



From itamar at itamarst.org  Tue Aug 31 20:32:04 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 31 Aug 2010 22:32:04 -0400
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
Message-ID: <1283308324.1538.0.camel@blake>

On Tue, 2010-08-31 at 15:17 -0600, Jason J. W. Williams wrote:
> Is anyone doing read/write splitting with adbapi? Looking for advice
> if anyone has tackled this before. Thank you in advance.

What is "read/write splitting"?




From jasonjwwilliams at gmail.com  Tue Aug 31 20:36:42 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 31 Aug 2010 20:36:42 -0600
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <1283308324.1538.0.camel@blake>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
Message-ID: <AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>

Sending writes (e.g. INSERTs and UPDATEs) to a master MySQL server and
reads (SELECTs) to a slave.

-J

On Tue, Aug 31, 2010 at 8:32 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Tue, 2010-08-31 at 15:17 -0600, Jason J. W. Williams wrote:
>> Is anyone doing read/write splitting with adbapi? Looking for advice
>> if anyone has tackled this before. Thank you in advance.
>
> What is "read/write splitting"?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Tue Aug 31 20:40:28 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 31 Aug 2010 22:40:28 -0400
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
Message-ID: <1283308828.1538.1.camel@blake>

On Tue, 2010-08-31 at 20:36 -0600, Jason J. W. Williams wrote:
> Sending writes (e.g. INSERTs and UPDATEs) to a master MySQL server and
> reads (SELECTs) to a slave.

So... two adbapi.ConnectionPool instances, one for the server, one for
the slave?




From jasonjwwilliams at gmail.com  Tue Aug 31 20:54:12 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 31 Aug 2010 20:54:12 -0600
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <1283308828.1538.1.camel@blake>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
	<1283308828.1538.1.camel@blake>
Message-ID: <AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>

That's one way of handling it. Another way is to wrap the library so
it does the splitting automatically. The advantage to the latter is
not making mistakes where you accidentally use the READ connection for
a write. For non-async Python there are some tools like SQL Relay
which will do this for you, but you have to setup SQL Relay servers
and use the SQL Relay dbapi driver. MySQL Proxy will also do it, but
it's not very stable.

I was somewhat hoping someone had already written a wrapper for doing
the splitting. Which brings me to a related question...if I were to
write a wrapper to do the splitting, would wrapping MySQLdb be
sufficient? Or would wrapping adbapi be the better path?

-J

On Tue, Aug 31, 2010 at 8:40 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
> On Tue, 2010-08-31 at 20:36 -0600, Jason J. W. Williams wrote:
>> Sending writes (e.g. INSERTs and UPDATEs) to a master MySQL server and
>> reads (SELECTs) to a slave.
>
> So... two adbapi.ConnectionPool instances, one for the server, one for
> the slave?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From adelagon at gmail.com  Tue Aug 31 21:13:00 2010
From: adelagon at gmail.com (Alvin Delagon)
Date: Wed, 1 Sep 2010 11:13:00 +0800
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
	<1283308828.1538.1.camel@blake>
	<AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
Message-ID: <AANLkTik-bjVS5nXJco8bNR9hWTZW7XDEbWBhT2pkezWC@mail.gmail.com>

Used to wrap MySQLdb for something like except that I did it for sharding.
It worked well on distributing load across multiple database servers. I
think the guys from my former company updated the wrapper to use adbapi.

- Alvin

On Wed, Sep 1, 2010 at 10:54 AM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> That's one way of handling it. Another way is to wrap the library so
> it does the splitting automatically. The advantage to the latter is
> not making mistakes where you accidentally use the READ connection for
> a write. For non-async Python there are some tools like SQL Relay
> which will do this for you, but you have to setup SQL Relay servers
> and use the SQL Relay dbapi driver. MySQL Proxy will also do it, but
> it's not very stable.
>
> I was somewhat hoping someone had already written a wrapper for doing
> the splitting. Which brings me to a related question...if I were to
> write a wrapper to do the splitting, would wrapping MySQLdb be
> sufficient? Or would wrapping adbapi be the better path?
>
> -J
>
> On Tue, Aug 31, 2010 at 8:40 PM, Itamar Turner-Trauring
> <itamar at itamarst.org> wrote:
> > On Tue, 2010-08-31 at 20:36 -0600, Jason J. W. Williams wrote:
> >> Sending writes (e.g. INSERTs and UPDATEs) to a master MySQL server and
> >> reads (SELECTs) to a slave.
> >
> > So... two adbapi.ConnectionPool instances, one for the server, one for
> > the slave?
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100901/3313031c/attachment.html>

From jasonjwwilliams at gmail.com  Tue Aug 31 21:42:56 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 31 Aug 2010 21:42:56 -0600
Subject: [Twisted-Python] adbapi MySQL read/write splitting
In-Reply-To: <AANLkTik-bjVS5nXJco8bNR9hWTZW7XDEbWBhT2pkezWC@mail.gmail.com>
References: <AANLkTinNDwt=exuTv2Sa3kkEbO814LZgdyYKKaf9VDDD@mail.gmail.com>
	<1283308324.1538.0.camel@blake>
	<AANLkTikR4Vr3SYxo3+5QXJoK6+O5qhTF=1AdjVYEqBTY@mail.gmail.com>
	<1283308828.1538.1.camel@blake>
	<AANLkTimf9S1WceKC64Co+fs0qbc9vm1Zn0eVbW1yeC8x@mail.gmail.com>
	<AANLkTik-bjVS5nXJco8bNR9hWTZW7XDEbWBhT2pkezWC@mail.gmail.com>
Message-ID: <AANLkTindJM51j5Afw4k+R3xvTdRHL8zLBmyEKGNeFdPQ@mail.gmail.com>

Hey Alvin,

Thank you for the info. Any idea what kind of changes they had to make
to the MySQLdb wrapper for adbapi to like it?

-J

On Tue, Aug 31, 2010 at 9:13 PM, Alvin Delagon <adelagon at gmail.com> wrote:
> Used to wrap MySQLdb for something like except that I did it for sharding.
> It worked well on distributing load across multiple database servers. I
> think the guys from my former company updated the wrapper to use adbapi.
> - Alvin
>
> On Wed, Sep 1, 2010 at 10:54 AM, Jason J. W. Williams
> <jasonjwwilliams at gmail.com> wrote:
>>
>> That's one way of handling it. Another way is to wrap the library so
>> it does the splitting automatically. The advantage to the latter is
>> not making mistakes where you accidentally use the READ connection for
>> a write. For non-async Python there are some tools like SQL Relay
>> which will do this for you, but you have to setup SQL Relay servers
>> and use the SQL Relay dbapi driver. MySQL Proxy will also do it, but
>> it's not very stable.
>>
>> I was somewhat hoping someone had already written a wrapper for doing
>> the splitting. Which brings me to a related question...if I were to
>> write a wrapper to do the splitting, would wrapping MySQLdb be
>> sufficient? Or would wrapping adbapi be the better path?
>>
>> -J
>>
>> On Tue, Aug 31, 2010 at 8:40 PM, Itamar Turner-Trauring
>> <itamar at itamarst.org> wrote:
>> > On Tue, 2010-08-31 at 20:36 -0600, Jason J. W. Williams wrote:
>> >> Sending writes (e.g. INSERTs and UPDATEs) to a master MySQL server and
>> >> reads (SELECTs) to a slave.
>> >
>> > So... two adbapi.ConnectionPool instances, one for the server, one for
>> > the slave?
>> >
>> >
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> >
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> --
> http://www.alvinatorsplayground.blogspot.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From einar.twisted at norsk-esport.no  Tue Aug 31 23:16:04 2010
From: einar.twisted at norsk-esport.no (=?ISO-8859-1?Q?Einar_S=2E_Ids=F8?=)
Date: Wed, 1 Sep 2010 07:16:04 +0200
Subject: [Twisted-Python] Twisted and SOAP
In-Reply-To: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
References: <AANLkTimZtojgNvzqevccFd=+uVjpaYyGcC5G5H7YLQNM@mail.gmail.com>
Message-ID: <AANLkTim7eZB2YLXutYRWuDp2GUsA6cFNuypJQDNDtDzh@mail.gmail.com>

Well, at least I've found that the interest in SOAP in the Twisted
community is not very great ;) And understandably so. Unfortunately,
however, sometimes Twisted apps do need to talk to alternative
protocols, so it is a pity there's no recommended way of doing this.

For future reference: I ended up using suds with the following wrapper
provided to this list in April by Landreville. It seems to be working
great, so thanks Landreville :)

""" Wrapper for suds to create deferred instances. """
from suds.client import Client as SudsClient
from twisted.internet.threads import deferToThread

class Client(SudsClient):

   # method for returning a deferred for the RPC
   def callRemote(self, method, *args, **kwargs):
       def call(m, *a, **kw):
           result = self.service.__getattr__(m)(*a, **kw)
           return result
       d = deferToThread(call, method, *args, **kwargs)
       return d

Cheers,
Einar

On Thu, Aug 26, 2010 at 12:15 PM, Einar S. Idsø
<einar.twisted at norsk-esport.no> wrote:
> Hi,
>
> What is currently the recommended option for letting Twisted
> applications communicate with SOAP services?
>
> Cheers,
> Einar
>



