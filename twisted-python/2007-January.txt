From manlio_perillo at libero.it  Tue Jan  2 15:24:26 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue, 02 Jan 2007 21:24:26 +0100
Subject: [Twisted-Python] writing a newsletter manager in Twisted
Message-ID: <459ABF7A.50705@libero.it>

Hi and happy new year.

I would like to write a newsletter manager in Twisted, using
twisted.mail and twisted.names.

I have the following requirements:
1) The sending of mails should be queued.
    The sending should friendly to server and internet load

2) I should be notified when an email address in unreachable
    (after n tries)

3) I want to use a caching DNS server, where I should be able to control
    the TTL (not sure this is a good idea)


Is this possible with Twisted and how much code I have to write?

A much simpler solution is to just use a MTA like Postfix and a DNS
server like Bind, but Twisted is more portable and flexible (?).



Thanks   Manlio Perillo




From felipe.lessa at gmail.com  Tue Jan  2 16:24:10 2007
From: felipe.lessa at gmail.com (Felipe Almeida Lessa)
Date: Tue, 2 Jan 2007 19:24:10 -0200
Subject: [Twisted-Python] writing a newsletter manager in Twisted
In-Reply-To: <459ABF7A.50705@libero.it>
References: <459ABF7A.50705@libero.it>
Message-ID: <c2701f5c0701021324lf7a50cfx2b81edf1d2073d7a@mail.gmail.com>

On 1/2/07, Manlio Perillo <manlio_perillo at libero.it> wrote:
> I would like to write a newsletter manager in Twisted, using
> twisted.mail and twisted.names.

Another one? What's wrong with the others?

> 1) The sending of mails should be queued.
>     The sending should friendly to server and internet load

I think you could create sort of a queue per server, and deliver it
after N messages ou X minutes waiting. It would not be very difficult
using DeferredQueue, I imagine.

> 2) I should be notified when an email address in unreachable
>     (after n tries)

Well, I don't see any reason why this wouldn't be possible.

> 3) I want to use a caching DNS server, where I should be able to control
>     the TTL (not sure this is a good idea)

I can't answer this one.

> A much simpler solution is to just use a MTA like Postfix and a DNS
> server like Bind, but Twisted is more portable and flexible (?).

It would be simpler using something like Mailman
http://www.gnu.org/software/mailman/ .

-- 
Felipe.



From gsantonja at free.fr  Tue Jan  2 17:06:08 2007
From: gsantonja at free.fr (Gabriel Santonja)
Date: Tue, 2 Jan 2007 23:06:08 +0100
Subject: [Twisted-Python] how can i connect curses getch function and a
 process launched with spawnprocesss?
Message-ID: <20070102230608.6124f68c@versailles>


Hello,

first : Happy new year 2007.

second : I have some difficulties with curses getch() function  and process launch
with spawnprocess.

I'm newbie in Twisted so i'm using the curses example who work fine with irc factory.
i'm using the process howto too 

But when i try to send a message to a process with a 
    >>> self.transport.writeSequence(contents+"\n") 

It's work fine with deferred but never with the curses.getch()

i need a loop like that :
	-  a caracter is push on the keyboard
	- getch function of curses send it 
	- this event is processing
	- a message is send to the process (launch by spawnprocess) who is concerned
	- a result is  send by the process and he is processing by the program 

i think I need to work with the reactor but i do not know how. 

I have trie all i can imagine but nothing work. Could you help me?

Thanks gabriel



From exarkun at divmod.com  Tue Jan  2 17:10:28 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 2 Jan 2007 17:10:28 -0500
Subject: [Twisted-Python] how can i connect curses getch function and a
	process launched with spawnprocesss?
In-Reply-To: <20070102230608.6124f68c@versailles>
Message-ID: <20070102221028.11447.916720539.divmod.quotient.4859@ohm>

On Tue, 2 Jan 2007 23:06:08 +0100, Gabriel Santonja <gsantonja at free.fr> wrote:
>
>Hello,
>
>first : Happy new year 2007.
>
>second : I have some difficulties with curses getch() function  and process launch
>with spawnprocess.
>
>I'm newbie in Twisted so i'm using the curses example who work fine with irc factory.
>i'm using the process howto too
>
>But when i try to send a message to a process with a
>    >>> self.transport.writeSequence(contents+"\n")

You probably want to just use write() here.  writeSequence is for
lists of strings.  Of course, it works for regular strings too, but
there's little point.

>
>It's work fine with deferred but never with the curses.getch()
>
>i need a loop like that :
>	-  a caracter is push on the keyboard
>	- getch function of curses send it
>	- this event is processing
>	- a message is send to the process (launch by spawnprocess) who is concerned
>	- a result is  send by the process and he is processing by the program
>
>i think I need to work with the reactor but i do not know how.
>
>I have trie all i can imagine but nothing work. Could you help me?

It may be worth passing usePTY=True to spawnProcess.  I'm not sure what
curses' requirements are exactly, but I wouldn't be surprised if it wanted
something vaguely terminal like: the default with spawnProcess is to set
up something that looks more like a shell redirection.

Jean-Paul



From hzqij at qq.com  Tue Jan  2 21:32:41 2007
From: hzqij at qq.com (=?gb2312?B?aHpxaWo=?=)
Date: Wed, 3 Jan 2007 10:32:41 +0800
Subject: [Twisted-Python] a question ablout DeferredList
Message-ID: tencent_6B0945974B50F229186F5432@qq.com

i have a sample code about DeferredList like this:

from twisted.internet import reactor, defer

def printResult(results):
  for resultInfo in results:
      success, result = resultInfo
      if success:
          print result
  reactor.stop()

def addTen(result):
  return result + " ten"

deferred1 = defer.Deferred()
deferred2 = defer.Deferred()
deferred3 = defer.Deferred()
dl = defer.DeferredList([deferred1, deferred2,
deferred3]).addCallback(printResult)
deferred1.callback('one')
deferred2.callback('two')
deferred3.callback('three')
reactor.run()

then i run this code, it print:

one
two
three

but the reactor never stop even i have call reactor.stop() on
printResult, i press CTRL+C, some error happen:

Unhandled error in Deferred:
Traceback (most recent call last):
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/defer.py",
line 317, in _runCallbacks
  self.result = callback(self.result, *args, **kw)
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/defer.py",
line 507, in _cbDeferred
  self.callback(self.resultList)
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/defer.py",
line 239, in callback
  self._startRunCallbacks(result)
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/defer.py",
line 304, in _startRunCallbacks
  self._runCallbacks()
--- <exception caught here> ---
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/defer.py",
line 317, in _runCallbacks
  self.result = callback(self.result, *args, **kw)
 File "defer5.py", line 8, in printResult
  reactor.stop()
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/base.py",
line 342, in stop
  raise RuntimeError, "can't stop reactor that isn't running"
exceptions.RuntimeError: can't stop reactor that isn't running

plz help me, thank you!
 

From grant at osafoundation.org  Tue Jan  2 22:40:46 2007
From: grant at osafoundation.org (Grant Baillie)
Date: Tue, 2 Jan 2007 19:40:46 -0800
Subject: [Twisted-Python] a question ablout DeferredList
In-Reply-To: tencent_6B0945974B50F229186F5432@qq.com
References: tencent_6B0945974B50F229186F5432@qq.com
Message-ID: <7AD9D575-B77A-4335-B3F7-137E39A3C8DD@osafoundation.org>


On 2 Jan, 2007, at 18:32, hzqij wrote:

> i have a sample code about DeferredList like this:
>
> from twisted.internet import reactor, defer
>
> def printResult(results):
>   for resultInfo in results:
>       success, result = resultInfo
>       if success:
>           print result
>   reactor.stop()
>
> def addTen(result):
>   return result + " ten"
>
> deferred1 = defer.Deferred()
> deferred2 = defer.Deferred()
> deferred3 = defer.Deferred()
> dl = defer.DeferredList([deferred1, deferred2,
> deferred3]).addCallback(printResult)
> deferred1.callback('one')
> deferred2.callback('two')
> deferred3.callback('three')

At this point, printResult() will get called, because you just fired  
all the deferreds in the DeferredList. But, your printResult()  
assumes the reactor is running, and you haven't started it yet ...

> reactor.run()

It seems to me that if all you're doing is trying out Deferred/ 
DeferredList, you could just remove the calls to reactor.stop/start 
(): It kind of depends on what your sample code is going to be doing.

--Grant

> then i run this code, it print:
>
> one
> two
> three
>
> but the reactor never stop even i have call reactor.stop() on
> printResult, i press CTRL+C, some error happen:
>
> Unhandled error in Deferred:
> Traceback (most recent call last):
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> defer.py",
> line 317, in _runCallbacks
>   self.result = callback(self.result, *args, **kw)
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> defer.py",
> line 507, in _cbDeferred
>   self.callback(self.resultList)
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> defer.py",
> line 239, in callback
>   self._startRunCallbacks(result)
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> defer.py",
> line 304, in _startRunCallbacks
>   self._runCallbacks()
> --- <exception caught here> ---
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> defer.py",
> line 317, in _runCallbacks
>   self.result = callback(self.result, *args, **kw)
>  File "defer5.py", line 8, in printResult
>   reactor.stop()
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> base.py",
> line 342, in stop
>   raise RuntimeError, "can't stop reactor that isn't running"
> exceptions.RuntimeError: can't stop reactor that isn't running
>
> plz help me, thank you!
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From felipe.lessa at gmail.com  Wed Jan  3 10:12:53 2007
From: felipe.lessa at gmail.com (Felipe Almeida Lessa)
Date: Wed, 3 Jan 2007 13:12:53 -0200
Subject: [Twisted-Python] a question ablout DeferredList
In-Reply-To: <7AD9D575-B77A-4335-B3F7-137E39A3C8DD@osafoundation.org>
References: <7AD9D575-B77A-4335-B3F7-137E39A3C8DD@osafoundation.org>
Message-ID: <c2701f5c0701030712v1452ad02v6cee064126069c61@mail.gmail.com>

On 1/3/07, Grant Baillie <grant at osafoundation.org> wrote:
> It seems to me that if all you're doing is trying out Deferred/
> DeferredList, you could just remove the calls to reactor.stop/start
> (): It kind of depends on what your sample code is going to be doing.

Or use reactor.callLater:

from twisted.internet import reactor, defer

def printResult(results):
    for resultInfo in results:
        success, result = resultInfo
        if success:
            print result
    reactor.stop()

def doIt():
    deferred1 = defer.Deferred()
    deferred2 = defer.Deferred()
    deferred3 = defer.Deferred()
    dl = defer.DeferredList([deferred1, deferred2,
    deferred3]).addCallback(printResult)
    deferred1.callback('one')
    deferred2.callback('two')
    deferred3.callback('three')

reactor.callLater(0.0, doIt)
reactor.run()

-- 
Felipe.



From twisted-python at milkpotato.org  Wed Jan  3 14:54:39 2007
From: twisted-python at milkpotato.org (fritz)
Date: Wed, 03 Jan 2007 12:54:39 -0700
Subject: [Twisted-Python] How do I gracefully handle losing a connection?
Message-ID: <20070103125438.3a0ad024ae5a198c10a90d54bed1b07a.344a60f809.wbe@email.secureserver.net>

Hello all,
I'm building off of the ssh client example in the excellent O'Reilly
book on Twisted by Abe Fettig but I've run into some problems and I'm
not sure how I should proceed.

Basically, I've implemented additional methods in order to handle
connection issues with the client. The goal being, exiting of the
program and printing out an error message detailing why the connection
failed:

class ClientCommandFactory(protocol.ClientFactory):

    ...

    def clientConnectionFailed(self, connector, reason):
        print reason.getErrorMessage()
        reactor.stop()

class CommandChannel(channel.SSHChannel):

    ...

    def closed(self):
        reactor.stop()

    def openFailed(self, reason):
        print reason.getErrorMessage()
        reactor.stop()

class ClientCommandTransport(transport.SSHClientTransport):

    ...

    def connectionFailed(self, reason):
        print reason.getErrorMessage()
        reactor.stop()

    def connectionLost(self, reason):
        print reason.getErrorMessage()
        reactor.stop()



The problem I'm currently facing is that. The connection properly ends
and the program exits when bad data is supplied on the command line but
when the program exits cleanly CommandChannel.closed() forces a call to
ClientCommandTransport.connectionLost() and we see an exception thrown
on a connection that I thought should end cleanly:

Connection to the other side was lost in a non-clean fashion: Connection
lost.
Traceback (most recent call last):
  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py",
line 226, in mainLoop
    self.runUntilCurrent()
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line
555, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line
414, in _continueSystemEvent
    callable(*args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line
375, in disconnectAll
    failure.Failure(main.CONNECTION_LOST))
--- <exception caught here> ---
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line
53, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line
38, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/tcp.py", line
554, in connectionLost
    Connection.connectionLost(self, reason)
  File "/usr/lib/python2.3/site-packages/twisted/internet/tcp.py", line
402, in connectionLost
    protocol.connectionLost(reason)
  File "code/python/sshclient/sshclient.py", line 33, in connectionLost
    reactor.stop()
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line
342, in stop
    raise RuntimeError, "can't stop reactor that isn't running"
exceptions.RuntimeError: can't stop reactor that isn't running


If I remove reactor.stop() from ClientCommandTransport.connectionLost()
I then face the issue of some connection problems not being handled
correctly and the program will go idle on some bad connections.

So my question is, how can I fix my code to handle these exceptions and
all cases of bad connections and connections terminating abnormally?
Where should I implement connectionLost() and connectionFailed() and
how can I cleanly disconnect from the SSH server without seeing ugly
errors like the one above?

Thanks in advance,
Fritz




From gsantonja at free.fr  Wed Jan  3 16:33:01 2007
From: gsantonja at free.fr (Gabriel Santonja)
Date: Wed, 3 Jan 2007 22:33:01 +0100
Subject: [Twisted-Python] how can i connect curses getch function
	...[Solved]
In-Reply-To: <20070102221028.11447.916720539.divmod.quotient.4859@ohm>
References: <20070102230608.6124f68c@versailles>
	<20070102221028.11447.916720539.divmod.quotient.4859@ohm>
Message-ID: <20070103223301.21d76103@versailles>



> It may be worth passing usePTY=True to spawnProcess.  I'm not sure what
it's done
And i've made some minors change and it's seem to work.  

Thanks you



From manlio_perillo at libero.it  Thu Jan  4 05:47:24 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 04 Jan 2007 11:47:24 +0100
Subject: [Twisted-Python] writing a newsletter manager in Twisted
In-Reply-To: <c2701f5c0701021324lf7a50cfx2b81edf1d2073d7a@mail.gmail.com>
References: <459ABF7A.50705@libero.it>
	<c2701f5c0701021324lf7a50cfx2b81edf1d2073d7a@mail.gmail.com>
Message-ID: <459CDB3C.40702@libero.it>

Felipe Almeida Lessa ha scritto:
> On 1/2/07, Manlio Perillo <manlio_perillo at libero.it> wrote:
>> I would like to write a newsletter manager in Twisted, using
>> twisted.mail and twisted.names.
> 
> Another one? What's wrong with the others?
> 

They are written in PHP or Perl.

>> 1) The sending of mails should be queued.
>>     The sending should friendly to server and internet load
> 
> I think you could create sort of a queue per server, and deliver it
> after N messages ou X minutes waiting. It would not be very difficult
> using DeferredQueue, I imagine.
> 

I have read all the options available for Postfix, like sending methods, 
SMTP connection caching.
Its not so simple.

>> 2) I should be notified when an email address in unreachable
>>     (after n tries)
> 
> Well, I don't see any reason why this wouldn't be possible.
> 

The question is: is this possible with twisted.mail out of the box?

>> 3) I want to use a caching DNS server, where I should be able to control
>>     the TTL (not sure this is a good idea)
> 
> I can't answer this one.
> 
>> A much simpler solution is to just use a MTA like Postfix and a DNS
>> server like Bind, but Twisted is more portable and flexible (?).
> 
> It would be simpler using something like Mailman
> http://www.gnu.org/software/mailman/ .
> 

Yes, it is possible to do something with Mailman.
However I would like to have a solution in pure Twisted, since it can be 
used on Windows, too.



Regards  Manlio Perillo



From nico at tekNico.net  Thu Jan  4 06:14:09 2007
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 04 Jan 2007 12:14:09 +0100
Subject: [Twisted-Python] Re: writing a newsletter manager in Twisted
In-Reply-To: <459CDB3C.40702@libero.it>
References: <459ABF7A.50705@libero.it>	<c2701f5c0701021324lf7a50cfx2b81edf1d2073d7a@mail.gmail.com>
	<459CDB3C.40702@libero.it>
Message-ID: <eninhq$7h4$1@sea.gmane.org>

> Felipe Almeida Lessa ha scritto:
>> It would be simpler using something like Mailman
>> http://www.gnu.org/software/mailman/ .

Manlio Perillo wrote:
> Yes, it is possible to do something with Mailman.
> However I would like to have a solution in pure Twisted, since it can be
> used on Windows, too.

Did you see Enemies of Carlotta?

http://liw.iki.fi/liw/eoc/

Ha un front-end basato su Nevow, Eocmanage:

http://www.inoi.fi/open/trac/eocmanage


-- 
Nicola Larosa - http://www.tekNico.net/

I have been working on a design doc for restricted execution of Python
as part of my dissertation for getting Python into Firefox to replace
JavaScript on the web. -- Brett Cannon, June 2006




From n_draghetta at yahoo.com  Sat Jan  6 06:12:49 2007
From: n_draghetta at yahoo.com (n_draghetta)
Date: Sat, 6 Jan 2007 03:12:49 -0800 (PST)
Subject: [Twisted-Python] Twisted Adapter
Message-ID: <20070106111249.16385.qmail@web51502.mail.yahoo.com>

Hi all!
I have a wrapper in Python and I want to make an adapter in Twisted so that the wrapper can be used.I haven't found any informations about adapters in Twisted.Can anyone guide me please/send me to a tutorial?

Thanks.

 __________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070106/3ca36796/attachment.htm 

From glyph at divmod.com  Sat Jan  6 08:53:17 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 06 Jan 2007 13:53:17 -0000
Subject: [Twisted-Python] Twisted Adapter
Message-ID: <20070106135317.17094.716600902.divmod.xquotient.696@joule.divmod.com>

On 11:12 am, n_draghetta at yahoo.com wrote:
>Hi all!
>I have a wrapper in Python and I want to make an adapter in Twisted so that the wrapper can be used.I haven't found any informations about adapters in Twisted.Can anyone guide me please/send me to a tutorial?

What do you mean by "wrapper"?  Depending on what you mean, you might not need to write anything at all.

Here is a tutorial on Twisted's components / adapters system:

http://twistedmatrix.com/projects/core/documentation/howto/components.html

and there's something a bit more detailed here, that shows lots of protocol code hooked up to it:

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/components.html

Do these answer your question?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070106/0b42bcf5/attachment.htm 

From n_draghetta at yahoo.com  Sat Jan  6 09:09:56 2007
From: n_draghetta at yahoo.com (n_draghetta)
Date: Sat, 6 Jan 2007 06:09:56 -0800 (PST)
Subject: [Twisted-Python] Twisted Adapter
In-Reply-To: <20070106135317.17094.716600902.divmod.xquotient.696@joule.divmod.com>
Message-ID: <20070106140956.99013.qmail@web51504.mail.yahoo.com>

I have a wrapper written in Python for a TLS library written in C. I have to write an adapter in Twisted in order to encrypt the communication.

Thanks.

glyph at divmod.com wrote: On 11:12 am, n_draghetta at yahoo.com wrote:
>Hi all!
>I have a wrapper in Python and I want to make an adapter in Twisted so that the wrapper can be used.I haven't found any informations about adapters in Twisted.Can anyone guide me please/send me to a tutorial?

What do you mean by "wrapper"?  Depending on what you mean, you might not need to write anything at all.

Here is a tutorial on Twisted's components / adapters system:

http://twistedmatrix.com/projects/core/documentation/howto/components.html

and there's something a bit more detailed here, that shows lots of protocol code hooked up to it:

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/components.html

Do these answer your question?_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


 __________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070106/e3dc18f4/attachment.htm 

From glyph at divmod.com  Sat Jan  6 09:57:37 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 06 Jan 2007 14:57:37 -0000
Subject: [Twisted-Python] Twisted Adapter
Message-ID: <20070106145737.17094.987796594.divmod.xquotient.704@joule.divmod.com>

On 02:09 pm, n_draghetta at yahoo.com wrote:
>I have a wrapper written in Python for a TLS library written in C. I have to write an adapter in Twisted in order to encrypt the communication.

Twisted already includes TLS support via PyOpenSSL.  See:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorSSL.html

There are some annoying deficiencies, mainly where PyOpenSSL has left out wrapping an API, but in general it works well.

It is certainly possible to plug in your own, but it would involve a fairly deep understanding of the implementation details of both Twisted and your TLS library.

If you need some TLS feature that Twisted does not currently provide, your best bet would be looking at this ticket, and contributing patches to help us with it:

    http://twistedmatrix.com/trac/ticket/2293

We don't wish to fork PyOpenSSL, and certainly are not enthusiastic to maintain it, but the current maintainer seems to have abandoned it, and it would be easier to continue some light maintenance without him than to port to a whole new TLS layer.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070106/224448c4/attachment.htm 

From johna at johnaherne.co.uk  Sun Jan  7 06:41:52 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Sun, 07 Jan 2007 11:41:52 +0000
Subject: [Twisted-Python] twisted and gprs networks
Message-ID: <45A0DC80.2090807@johnaherne.co.uk>

I am looking at using PDA devices talking to a server over gprs.

I need to push data to the PDA over elapsed timeframes that might be 
hours. Naturally during this timespan the device may have been dropped 
from the network or acquire a different IP address.

However to push data to the PDA, I need to record the IP and port used 
by the PDA for its first contact since it is stuck behind a firewall.

The socket needs to be kept open on the PDA so the server can keep 
responding on the same session over a period of time.

Using straight sockets I can do this by holding the reference to the 
IP/port used by the PDA. And checking every now and then that the 
connection is still valid. But I am no comms expert and I need to keep 
track of over 100 devices and keep reliably sending messages to them at 
random intervals.

So, I thought it might be better to use some framework for the server 
since I am no expert on sockets.

But looking through the docs for twisted and some of the code, I can't 
see anywhere how I can get and use a reference to the port and reuse the 
open session on the PDA.

Can I do this with twisted or should I look for some other way of doing 
what I want.

I was thinking I could use irc with twisted but not sure if I am barking 
up the wrong tree.

Thanks for any ideas of solving the problem.

John Aherne




From p.mayers at imperial.ac.uk  Sun Jan  7 11:50:56 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 07 Jan 2007 16:50:56 +0000
Subject: [Twisted-Python] twisted and gprs networks
In-Reply-To: <45A0DC80.2090807@johnaherne.co.uk>
References: <45A0DC80.2090807@johnaherne.co.uk>
Message-ID: <45A124F0.7010805@imperial.ac.uk>

John Aherne wrote:
> I am looking at using PDA devices talking to a server over gprs.
> 
> I need to push data to the PDA over elapsed timeframes that might be 
> hours. Naturally during this timespan the device may have been dropped 
> from the network or acquire a different IP address.
> 
> However to push data to the PDA, I need to record the IP and port used 
> by the PDA for its first contact since it is stuck behind a firewall.

Those two paragraphs seem, to me, to be contradictory. The IP might 
change, but you need to know the IP?

> The socket needs to be kept open on the PDA so the server can keep 
> responding on the same session over a period of time.

Sessions need not be tied to a particular transport layer connection. 
HTTP applications commonly deploy sessions (for example, using cookies) 
that span multiple transport layer connections.

> 
> Using straight sockets I can do this by holding the reference to the 
> IP/port used by the PDA. And checking every now and then that the 
> connection is still valid. But I am no comms expert and I need to keep 
> track of over 100 devices and keep reliably sending messages to them at 
> random intervals.
> 
> So, I thought it might be better to use some framework for the server 
> since I am no expert on sockets.
> 
> But looking through the docs for twisted and some of the code, I can't 
> see anywhere how I can get and use a reference to the port and reuse the 
> open session on the PDA.
> 
> Can I do this with twisted or should I look for some other way of doing 
> what I want.
> 
> I was thinking I could use irc with twisted but not sure if I am barking 
> up the wrong tree.
> 
> Thanks for any ideas of solving the problem.

You haven't defined the problem well enough for me to suggest a specific 
solution, but Twisted can do all of the things above.

Could you give a bit more detail on what you want to achieve?



From zmola at acm.org  Sun Jan  7 11:56:37 2007
From: zmola at acm.org (Carl Zmola)
Date: Sun, 07 Jan 2007 11:56:37 -0500
Subject: [Twisted-Python] twisted and gprs networks
In-Reply-To: <45A0DC80.2090807@johnaherne.co.uk>
References: <45A0DC80.2090807@johnaherne.co.uk>
Message-ID: <45A12645.1000000@acm.org>

John,

 From my experience with mobile devices, you will need to do a little 
more work than just using TCP/IP or UDP for this. Sockets work well if 
the communication is reliable, but if the connection goes down regularly 
you will need to think about different ways of doing this.

I would suggest assigning each PDA a unique name (at the PDA device).  
Your GPRS device should have an ID that will serve this purpose.

It will be up to the PDA to reconnect the socket when the network 
becomes available again.

The server can do the mapping by the devices ID number.

Carl

John Aherne wrote:
> I am looking at using PDA devices talking to a server over gprs.
>
> I need to push data to the PDA over elapsed timeframes that might be 
> hours. Naturally during this timespan the device may have been dropped 
> from the network or acquire a different IP address.
>
> However to push data to the PDA, I need to record the IP and port used 
> by the PDA for its first contact since it is stuck behind a firewall.
>
> The socket needs to be kept open on the PDA so the server can keep 
> responding on the same session over a period of time.
>
> Using straight sockets I can do this by holding the reference to the 
> IP/port used by the PDA. And checking every now and then that the 
> connection is still valid. But I am no comms expert and I need to keep 
> track of over 100 devices and keep reliably sending messages to them 
> at random intervals.
>
> So, I thought it might be better to use some framework for the server 
> since I am no expert on sockets.
>
> But looking through the docs for twisted and some of the code, I can't 
> see anywhere how I can get and use a reference to the port and reuse 
> the open session on the PDA.
>
> Can I do this with twisted or should I look for some other way of 
> doing what I want.
>
> I was thinking I could use irc with twisted but not sure if I am 
> barking up the wrong tree.
>
> Thanks for any ideas of solving the problem.
>
> John Aherne
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Sun Jan  7 11:59:50 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 7 Jan 2007 11:59:50 -0500
Subject: [Twisted-Python] twisted and gprs networks
In-Reply-To: <45A0DC80.2090807@johnaherne.co.uk>
Message-ID: <20070107165950.11447.129653943.divmod.quotient.8976@ohm>

On Sun, 07 Jan 2007 11:41:52 +0000, John Aherne <johna at johnaherne.co.uk> wrote:
>I am looking at using PDA devices talking to a server over gprs.
>
>I need to push data to the PDA over elapsed timeframes that might be hours. 
>Naturally during this timespan the device may have been dropped from the 
>network or acquire a different IP address.
>
>However to push data to the PDA, I need to record the IP and port used by 
>the PDA for its first contact since it is stuck behind a firewall.
>
>The socket needs to be kept open on the PDA so the server can keep 
>responding on the same session over a period of time.
>
>Using straight sockets I can do this by holding the reference to the IP/port 
>used by the PDA. And checking every now and then that the connection is 
>still valid. But I am no comms expert and I need to keep track of over 100 
>devices and keep reliably sending messages to them at random intervals.
>
>So, I thought it might be better to use some framework for the server since 
>I am no expert on sockets.
>
>But looking through the docs for twisted and some of the code, I can't see 
>anywhere how I can get and use a reference to the port and reuse the open 
>session on the PDA.
>
>Can I do this with twisted or should I look for some other way of doing what 
>I want.
>
>I was thinking I could use irc with twisted but not sure if I am barking up 
>the wrong tree.
>
>Thanks for any ideas of solving the problem.
>

It's not totally clear to me what you're after.  Perhaps you could define
some terms.  What is a "session"?  What kind of sockets are involved?  What
does it mean to "hold a reference" to an IP/port?

If I try to guess at the answers to these questions, then it sounds like
a pretty straightforward problem involving multiple connections, which is
easily enough handled in Twisted.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Jan  7 13:07:55 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Jan 2007 18:07:55 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1168193275.04.17032369@twistedmatrix.com

Bug summary
______________________
Summary for 2006-12-31 through 2007-01-07
Bugs opened: 28    Bugs closed: 19  Total open bugs: 810 (+9)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +5  |Highest:  -3          |Conch:               +0  
|Enhancement:  +5  |High:     +0          |Core:                +4  
|Task:         +0  |Normal:  +12          |Mail:                +1  
                   |Low:      +1          |Names:               +0  
                                          |News:                +1  
                                          |Pb:                  -1  
                                          |Release Management:  +3  
                                          |Trial:               +1  
                                          |Web:                 -1  
                                          |Web2:                +0  
                                          |Website:             +1  
                                          |Words:               +1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2344] Typos in AMP docstrings (opened by scmikes) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2344

[#2365] trial should completely manage its output stream (opened by glyph)
    defect          trial      http://twistedmatrix.com/trac/ticket/2365

                    ===== High =====
[#2357] "twistd words" should also run an amp server (opened by glyph)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2357

[#1120] OS-X vs PTYProcess, OSError vs IOError (opened by warner)
    defect          core       http://twistedmatrix.com/trac/ticket/1120

                    ===== Normal =====
[#2340] Special case inlineCallbacks for case where Deferred already has value (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2340

[#2341] Merge twisted.internet.process.PTYProcess and Process (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/2341

[#2342] scgi client doesn't handle content-length (opened by jknight)
    defect          web2       http://twistedmatrix.com/trac/ticket/2342

[#2343] createCGIEnvironment should refuse if path segments have a / (opened by jknight)
    defect          web2       http://twistedmatrix.com/trac/ticket/2343

[#2346] Header generation not conforming to RFC822 and RFC2046 (opened by tekNico)
    defect          web2       http://twistedmatrix.com/trac/ticket/2346

[#2347] "Register" Trac link not working (opened by tekNico) (CLOSED, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/2347

[#2348] Does the ticket bot still work? (opened by jknight) (CLOSED, invalid)
    task            website    http://twistedmatrix.com/trac/ticket/2348

[#2349] unify "download" page on the web site (opened by glyph)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2349

[#2350] Update release process to only use one branch (opened by glyph)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2350

[#2351] Apt line for Ubuntu dapper that contains released Twisteds (opened by glyph)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2351

[#2352] Document and enforce deprecation policy (opened by glyph) (CLOSED, duplicate)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2352

[#2353] Change Twisted "main" release to a time-based version number (opened by glyph)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2353

[#2354] Handling of EINTR in threadedselectreactor.py (opened by dkosovic)
    defect          core       http://twistedmatrix.com/trac/ticket/2354

[#2355] twisted/protocols/stateful.py uses StringIO incorrectly (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2355

[#2356] twisted/test/test_banana.py uses StringIO incorrectly (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2356

[#2358] twisted.conch.insults.insults.ITerminalTransport.setScrollRegion missing (opened by exarkun)
    defect          conch      http://twistedmatrix.com/trac/ticket/2358

[#2359] Release TwistedConch-0.8 (opened by radix) (CLOSED, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2359

[#2360] Release TwistedMail-0.4 (opened by radix) (CLOSED, fixed)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/2360

[#2361] Release TwistedNames-0.4 (opened by radix) (CLOSED, fixed)
    enhancement     names      http://twistedmatrix.com/trac/ticket/2361

[#2362] Release TwistedWords-0.5.0 (opened by radix) (CLOSED, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2362

[#2363] Release TwistedLore-0.3.0 (opened by radix) (CLOSED, fixed)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2363

[#2364] Release TwistedNews-0.3.0 (opened by radix)
    enhancement     news       http://twistedmatrix.com/trac/ticket/2364

[#2366] Make filepath work on windows (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/2366

                    ===== Low =====
[#2345] All POP3 IMailbox should allow Deferred return values (opened by exarkun)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/2345



Closed Bugs
______________________
                    ===== Highest =====
[#1514] twisted.spread.banana check for INT vs. LONGINT will fail on some 64-bit platforms (opened by itamarst, closed by exarkun, fixed)
    defect          pb         http://twistedmatrix.com/trac/ticket/1514

[#2284] web2 submitRequest result does not have content-length (opened by ghazel, closed by foom, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2284

[#2344] Typos in AMP docstrings (opened by scmikes, closed by glyph, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2344

[#2329] Release TwistedCore-2.5 (opened by radix, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2329

[#2330] Release TwistedWeb-0.7 (opened by radix, closed by radix, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2330

                    ===== High =====
[#1120] OS-X vs PTYProcess, OSError vs IOError (opened by warner, closed by itamarst, )
    defect          core       http://twistedmatrix.com/trac/ticket/1120

[#484 ] manhole gtk2: Gtk-ERROR **: Char offset 1 is off the end of the line
aborting... (opened by slyphon, closed by acapnotic, worksforme)
    defect          conch      http://twistedmatrix.com/trac/ticket/484

[#2332] Subprojects Efficacy Review (opened by glyph, closed by glyph, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2332

                    ===== Normal =====
[#1605] twisted.python.components.{getAdapterClass,getAdapterClassWithInheritance} mispell "deprecated" in docstring (opened by exarkun, closed by itamarst, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1605

[#2302] t.web2.channel.http.HTTPParser deals with HEAD requests incorrectly (opened by ghazel, closed by foom, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2302

[#1619] Reloading html page with unchanged CSS generates traceback (opened by jacob, closed by jknight, duplicate)
    defect          web2       http://twistedmatrix.com/trac/ticket/1619

[#2347] "Register" Trac link not working (opened by tekNico, closed by jknight, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/2347

[#2348] Does the ticket bot still work? (opened by jknight, closed by jknight, invalid)
    task            website    http://twistedmatrix.com/trac/ticket/2348

[#2352] Document and enforce deprecation policy (opened by glyph, closed by radix, duplicate)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2352

[#2363] Release TwistedLore-0.3.0 (opened by radix, closed by radix, fixed)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2363

[#2359] Release TwistedConch-0.8 (opened by radix, closed by radix, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2359

[#2360] Release TwistedMail-0.4 (opened by radix, closed by radix, fixed)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/2360

[#2361] Release TwistedNames-0.4 (opened by radix, closed by radix, fixed)
    enhancement     names      http://twistedmatrix.com/trac/ticket/2361

[#2362] Release TwistedWords-0.5.0 (opened by radix, closed by radix, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2362





From stephen at thorne.id.au  Mon Jan  8 06:49:06 2007
From: stephen at thorne.id.au (Stephen Thorne)
Date: Mon, 08 Jan 2007 21:49:06 +1000
Subject: [Twisted-Python] Twisted
	=?iso-8859-1?q?=B5Conf_=40_linux=2Econf=2Eau?=
Message-ID: <45A22FB2.2080607@thorne.id.au>

It turns out there's going to be a sizable contingent of Twisted hackers 
at linux.conf.au '07. As such, I'm attempting to organise a Micro 
Conference on the sunday before the conference.

I'm planning on gathering at where we're staying Randwick Lodge, 211 
Avoca St because there's wifi access available, and I'd like to be able 
to sit down and hack.

Jonathan has mentioned wanting to hack on trial, and while I'm not 
resistant to that, I'm open to suggestions. :)

http://shiny.thorne.id.au/shiny/shiny.html	
http://zoomin.com.au/australia/nsw/sydney/randwick/avoca+street/211/

Stephen.

Scanned by the NetBox from NetBox Blue
(http://netboxblue.com/)



From srock258 at gmail.com  Mon Jan  8 11:18:16 2007
From: srock258 at gmail.com (Sean Roark)
Date: Mon, 8 Jan 2007 11:18:16 -0500
Subject: [Twisted-Python] twisted and gprs networks
In-Reply-To: <20070107165950.11447.129653943.divmod.quotient.8976@ohm>
References: <45A0DC80.2090807@johnaherne.co.uk>
	<20070107165950.11447.129653943.divmod.quotient.8976@ohm>
Message-ID: <a7964aae0701080818o1b696778w3955adff83779043@mail.gmail.com>

I have done some GPRS comms work with Python using asyncore and UDP sockets.
I'm in the process, if someone would give me a charge number, of moving to
Twisted as I am certain I can achieve the same goal in a much better design.

I had the same problem with the IP address of the client (the PDA in your
case). I used a polling design where each client routinely polled the
server. Every time a poll comes from a client I grab the IP and port form
the UDP header along with the client id embedded in the message. Saving this
in a dictionary gave me an easy to use lookup for pushing data out to the
client. You may need to get fancy with the dictionary. For example, I my add
a time stamp the record so I know the last time the client sent a response.
If a client has been down for some amount of time it could be removed the
dictionary.

So, you need:

1. Client has an id that it transmits with every message to the server
2. Client stores the server IP/PORT so it can poll independently.
3. RETRY LOGIC if you use UDP!!!

This has been deployed to the field server up to 3000 clients with a 25
second poll rate avg 22 bytes per message. In short, it works pretty well.

On 1/7/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Sun, 07 Jan 2007 11:41:52 +0000, John Aherne <johna at johnaherne.co.uk>
> wrote:
> >I am looking at using PDA devices talking to a server over gprs.
> >
> >I need to push data to the PDA over elapsed timeframes that might be
> hours.
> >Naturally during this timespan the device may have been dropped from the
> >network or acquire a different IP address.
> >
> >However to push data to the PDA, I need to record the IP and port used by
> >the PDA for its first contact since it is stuck behind a firewall.
> >
> >The socket needs to be kept open on the PDA so the server can keep
> >responding on the same session over a period of time.
> >
> >Using straight sockets I can do this by holding the reference to the
> IP/port
> >used by the PDA. And checking every now and then that the connection is
> >still valid. But I am no comms expert and I need to keep track of over
> 100
> >devices and keep reliably sending messages to them at random intervals.
> >
> >So, I thought it might be better to use some framework for the server
> since
> >I am no expert on sockets.
> >
> >But looking through the docs for twisted and some of the code, I can't
> see
> >anywhere how I can get and use a reference to the port and reuse the open
> >session on the PDA.
> >
> >Can I do this with twisted or should I look for some other way of doing
> what
> >I want.
> >
> >I was thinking I could use irc with twisted but not sure if I am barking
> up
> >the wrong tree.
> >
> >Thanks for any ideas of solving the problem.
> >
>
> It's not totally clear to me what you're after.  Perhaps you could define
> some terms.  What is a "session"?  What kind of sockets are
> involved?  What
> does it mean to "hold a reference" to an IP/port?
>
> If I try to guess at the answers to these questions, then it sounds like
> a pretty straightforward problem involving multiple connections, which is
> easily enough handled in Twisted.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070108/8c4789c6/attachment.htm 

From els24 at cornell.edu  Mon Jan  8 13:01:08 2007
From: els24 at cornell.edu (Eric Spaulding)
Date: Mon, 08 Jan 2007 13:01:08 -0500
Subject: [Twisted-Python] twisted and gprs networks
In-Reply-To: <45A0DC80.2090807@johnaherne.co.uk>
References: <45A0DC80.2090807@johnaherne.co.uk>
Message-ID: <45A286E4.2070502@cornell.edu>

In my very limited experience with GPRS and remote devices,  I would
suggest a polling model over a push.  Unless you're willing to pay for
extra vpn/static IP services to your GPRS provider,  the remote unit
will be, as you say, firewalled and should be responsible for starting
the connection to an accessible server process.

The merit of keeping the connection open is not obvious to me.

If you aren't transferring data constantly, why not have the pda poll
periodically?:
-open connection to server
-send PDA id, request available data.
-receive data, if available.
-close connection.
-wait n seconds

Good luck,
-ES


John Aherne wrote:
> I am looking at using PDA devices talking to a server over gprs.
>
> I need to push data to the PDA over elapsed timeframes that might be
> hours. Naturally during this timespan the device may have been dropped
> from the network or acquire a different IP address.
>
> However to push data to the PDA, I need to record the IP and port used
> by the PDA for its first contact since it is stuck behind a firewall.
>
> The socket needs to be kept open on the PDA so the server can keep
> responding on the same session over a period of time.
>
> Using straight sockets I can do this by holding the reference to the
> IP/port used by the PDA. And checking every now and then that the
> connection is still valid. But I am no comms expert and I need to keep
> track of over 100 devices and keep reliably sending messages to them
> at random intervals.
>
> So, I thought it might be better to use some framework for the server
> since I am no expert on sockets.
>
> But looking through the docs for twisted and some of the code, I can't
> see anywhere how I can get and use a reference to the port and reuse
> the open session on the PDA.
>
> Can I do this with twisted or should I look for some other way of
> doing what I want.
>
> I was thinking I could use irc with twisted but not sure if I am
> barking up the wrong tree.
>
> Thanks for any ideas of solving the problem.
>
> John Aherne
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From johna at johnaherne.co.uk  Mon Jan  8 14:46:15 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Mon, 08 Jan 2007 19:46:15 +0000
Subject: [Twisted-Python] twisted and gprs
Message-ID: <45A29F87.4070501@johnaherne.co.uk>

Thanks to Phil, Carl and JPCalderone for the replies.

I'll try and answer them by explaining more clearly what I am trying to 
do. And explaining some terms that I were vague.

The sessions are a connection that I need to keep open -  a combination 
of IP address and source port no - so the server can use the source port 
number that the PDA used when making the initial connection. The PDA 
will need to block on the TCPIP socket waiting for messages to be sent 
to it. It will process the message and then wait again. Provided the PDA 
does not close the socket and lose the connection with the original port 
no, the firewall will let the conversation keep going.

The server will send on the initial source/destination port nos and not 
close the connection. This way the PDA can still be contacted over a 
long period of time. Because the PDA is behind the network firewall, if 
the original port used by the PDA is lost, the server can no longer send 
data to the PDA, since the firewall will not let the traffic through 
even though the IP address had not changed.

As Carl pointed out I will need more than the IP address to identify the 
PDA. I will need an ID from the PDA that is unique so that if the PDA 
comes back in with a different IP address I can pick that up, drop the 
existing IP/port no if I still have it and register it with it's new IP 
address and source port no.

As i write this down, explaining it to myself as much as anyone else, I 
think to myself that the mechanics look very much like an irc 
connection. I might be wrong so please let me know.

The server will need to ping the PDA to confirm the connection is still 
there. If lost it will deregister the PDA and wait for it to reconnect 
again. What I am not sure about with irc is whether I can keep hold of 
the port no used by the PDA as its source port and maintain the 
connection with the IP address/port no combination.

What I would like is if I can find a framework that does most of the 
heavy work with the communications. I can then find a suitable point to 
make some not too difficult changes to accommodate my requirements.

I have done a very simple test using the socket library to confirm that 
the basics do work. The connection stays open and as long as I do not 
close the socket connection at either end and use the same 
source/destination port numbers the traffic flows.And I can push data 
without the PDA having to initiate new connections and requesting data.

I hope this a better explanation than my first post. I am sure there 
will still be bits that might not be clear so let me know and I will 
fill in any gaps.

If it is clear,  what I am looking to find out is which bits of twisted 
I would need to use and what parts would need changing and to what extent.

One final note, there could be around 100 of the PDAs to look after.

Thanks for any feedback.

John Aherne




From p.mayers at imperial.ac.uk  Mon Jan  8 15:21:42 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 08 Jan 2007 20:21:42 +0000
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A29F87.4070501@johnaherne.co.uk>
References: <45A29F87.4070501@johnaherne.co.uk>
Message-ID: <45A2A7D6.3030403@imperial.ac.uk>

John Aherne wrote:
> Thanks to Phil, Carl and JPCalderone for the replies.
> 
> I'll try and answer them by explaining more clearly what I am trying to 
> do. And explaining some terms that I were vague.
> 
> The sessions are a connection that I need to keep open -  a combination 
> of IP address and source port no - so the server can use the source port 
> number that the PDA used when making the initial connection. The PDA 

You only need to do this with UDP or other connection-less protocols. 
TCP will bind the connection and do the tracking for you.

> will need to block on the TCPIP socket waiting for messages to be sent 
> to it. It will process the message and then wait again. Provided the PDA 
> does not close the socket and lose the connection with the original port 
> no, the firewall will let the conversation keep going.

You will need keepalives for this, but yes.

> 
> The server will send on the initial source/destination port nos and not 

Again, TCP does this automatically

> close the connection. This way the PDA can still be contacted over a 
> long period of time. Because the PDA is behind the network firewall, if 
> the original port used by the PDA is lost, the server can no longer send 
> data to the PDA, since the firewall will not let the traffic through 
> even though the IP address had not changed.
> 
> As Carl pointed out I will need more than the IP address to identify the 
> PDA. I will need an ID from the PDA that is unique so that if the PDA 
> comes back in with a different IP address I can pick that up, drop the 
> existing IP/port no if I still have it and register it with it's new IP 
> address and source port no.
> 
> As i write this down, explaining it to myself as much as anyone else, I 
> think to myself that the mechanics look very much like an irc 
> connection. I might be wrong so please let me know.

I don't know why you're bringing up IRC. IRC uses TCP, so no port-number 
bookkeeping will be required.

> 
> The server will need to ping the PDA to confirm the connection is still 

Again, TCP keepalives

> there. If lost it will deregister the PDA and wait for it to reconnect 
> again. What I am not sure about with irc is whether I can keep hold of 
> the port no used by the PDA as its source port and maintain the 
> connection with the IP address/port no combination.

Again, IRC uses TCP which does this all automatically. Forget about the 
port numbers.

> 
> What I would like is if I can find a framework that does most of the 
> heavy work with the communications. I can then find a suitable point to 
> make some not too difficult changes to accommodate my requirements.
> 
> I have done a very simple test using the socket library to confirm that 
> the basics do work. The connection stays open and as long as I do not 
> close the socket connection at either end and use the same 
> source/destination port numbers the traffic flows.And I can push data 
> without the PDA having to initiate new connections and requesting data.
> 
> I hope this a better explanation than my first post. I am sure there 
> will still be bits that might not be clear so let me know and I will 
> fill in any gaps.
> 
> If it is clear,  what I am looking to find out is which bits of twisted 
> I would need to use and what parts would need changing and to what extent.
> 
> One final note, there could be around 100 of the PDAs to look after.

That's a tiny number.

Just have each PDA make a TCP connection to the server. Enable TCP 
keepalives on both the client and on the server ends of the connection. 
Have the first operation on a new TCP connection be a "login" i.e. PDA 
says here is my ID, server maps the ID to a TCP connection. Have your 
server message distribution look up the current TCP connection for a 
given ID and send the message.

It's a trivial application.



From johna at johnaherne.co.uk  Mon Jan  8 16:11:44 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Mon, 08 Jan 2007 21:11:44 +0000
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A2A7D6.3030403@imperial.ac.uk>
References: <45A29F87.4070501@johnaherne.co.uk>
	<45A2A7D6.3030403@imperial.ac.uk>
Message-ID: <45A2B390.6080508@johnaherne.co.uk>

Phil Mayers wrote:
> John Aherne wrote:
>> Thanks to Phil, Carl and JPCalderone for the replies.
>>
>> I'll try and answer them by explaining more clearly what I am trying 
>> to do. And explaining some terms that I were vague.
>>
>> The sessions are a connection that I need to keep open -  a 
>> combination of IP address and source port no - so the server can use 
>> the source port number that the PDA used when making the initial 
>> connection. The PDA 
>
> You only need to do this with UDP or other connection-less protocols. 
> TCP will bind the connection and do the tracking for you.
>
>> will need to block on the TCPIP socket waiting for messages to be 
>> sent to it. It will process the message and then wait again. Provided 
>> the PDA does not close the socket and lose the connection with the 
>> original port no, the firewall will let the conversation keep going.
>
> You will need keepalives for this, but yes.
>
>>
>> The server will send on the initial source/destination port nos and not 
>
> Again, TCP does this automatically
>
>> close the connection. This way the PDA can still be contacted over a 
>> long period of time. Because the PDA is behind the network firewall, 
>> if the original port used by the PDA is lost, the server can no 
>> longer send data to the PDA, since the firewall will not let the 
>> traffic through even though the IP address had not changed.
>>
>> As Carl pointed out I will need more than the IP address to identify 
>> the PDA. I will need an ID from the PDA that is unique so that if the 
>> PDA comes back in with a different IP address I can pick that up, 
>> drop the existing IP/port no if I still have it and register it with 
>> it's new IP address and source port no.
>>
>> As i write this down, explaining it to myself as much as anyone else, 
>> I think to myself that the mechanics look very much like an irc 
>> connection. I might be wrong so please let me know.
>
> I don't know why you're bringing up IRC. IRC uses TCP, so no 
> port-number bookkeeping will be required.
>
>>
>> The server will need to ping the PDA to confirm the connection is still 
>
> Again, TCP keepalives
>
>> there. If lost it will deregister the PDA and wait for it to 
>> reconnect again. What I am not sure about with irc is whether I can 
>> keep hold of the port no used by the PDA as its source port and 
>> maintain the connection with the IP address/port no combination.
>
> Again, IRC uses TCP which does this all automatically. Forget about 
> the port numbers.
>
>>
>> What I would like is if I can find a framework that does most of the 
>> heavy work with the communications. I can then find a suitable point 
>> to make some not too difficult changes to accommodate my requirements.
>>
>> I have done a very simple test using the socket library to confirm 
>> that the basics do work. The connection stays open and as long as I 
>> do not close the socket connection at either end and use the same 
>> source/destination port numbers the traffic flows.And I can push data 
>> without the PDA having to initiate new connections and requesting data.
>>
>> I hope this a better explanation than my first post. I am sure there 
>> will still be bits that might not be clear so let me know and I will 
>> fill in any gaps.
>>
>> If it is clear,  what I am looking to find out is which bits of 
>> twisted I would need to use and what parts would need changing and to 
>> what extent.
>>
>> One final note, there could be around 100 of the PDAs to look after.
>
> That's a tiny number.
>
> Just have each PDA make a TCP connection to the server. Enable TCP 
> keepalives on both the client and on the server ends of the 
> connection. Have the first operation on a new TCP connection be a 
> "login" i.e. PDA says here is my ID, server maps the ID to a TCP 
> connection. Have your server message distribution look up the current 
> TCP connection for a given ID and send the message.
>
> It's a trivial application.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Phil

Thanks for the reply.

I'm obviously missing some obvious point I think.

I need to be sure that the connection keeps on using the same 
source/destination ports for the duration, so the firewall lets the 
conversation carry on.

Provided I don't close the socket at either end will the PDA and server 
carry on using the same set of source/destination ports.

The test I did I purposely took note of the port used by the PDA as the 
network people told me to make sure I kept them the same. I then forced 
the server to send using that port as the destination. Over the time 
frame of about 40  minutes I did not need to issue any keepalives. I 
would rather not issue keepalives since this will cost money on a gprs 
network based on data usage.

Yes I know 100 is not much but I thought I would mention it as being 
more than 1.


Thanks for any clarification.

John Aherne




From andreas at kostyrka.org  Mon Jan  8 17:01:04 2007
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Mon, 8 Jan 2007 23:01:04 +0100
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A2B390.6080508@johnaherne.co.uk>
References: <45A29F87.4070501@johnaherne.co.uk>
	<45A2A7D6.3030403@imperial.ac.uk>
	<45A2B390.6080508@johnaherne.co.uk>
Message-ID: <20070108220104.GA29783@andi-lap.la.revver.com>

* John Aherne <johna at johnaherne.co.uk> [070108 22:28]:
> I'm obviously missing some obvious point I think.
> 
> I need to be sure that the connection keeps on using the same source/destination ports for the duration, so the firewall lets the conversation carry on.
> 
> Provided I don't close the socket at either end will the PDA and server carry on using the same set of source/destination ports.
> 
> The test I did I purposely took note of the port used by the PDA as the network people told me to make sure I kept them the same. I then forced the server to send using that port as 
> the destination. Over the time frame of about 40  minutes I did not need to issue any keepalives. I would rather not issue keepalives since this will cost money on a gprs network based 
> on data usage.

The huge problem here is, that there are no (repeat no) assertations
how long firewalls keep their association. Worse, you cannot be even
be sure that the IP addresses of your client are unique. Technically,
they have to unique up to the NAT gateway.

So basically, going the TCP way, with heart beats (that might need
automatic/manual tuning, depending upon the network) is a safe
conservative solution.

Furthermore, GPRS is usually billed at 10/100KB increments. So doing a
one byte keepalive message every minute, in both directions, would
mean 5000 minutes or 50000 minutes before the keep alives cause real
costs. While making the GPRS timeout implies a new connection, and
lost money, because the payment increments start from zero.

So sending a small keepalive packet is a sensible thing to do.

Andreas



From johna at johnaherne.co.uk  Mon Jan  8 17:30:25 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Mon, 08 Jan 2007 22:30:25 +0000
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <20070108220104.GA29783@andi-lap.la.revver.com>
References: <45A29F87.4070501@johnaherne.co.uk>	<45A2A7D6.3030403@imperial.ac.uk>	<45A2B390.6080508@johnaherne.co.uk>
	<20070108220104.GA29783@andi-lap.la.revver.com>
Message-ID: <45A2C601.8070106@johnaherne.co.uk>

Andreas Kostyrka wrote:
> * John Aherne <johna at johnaherne.co.uk> [070108 22:28]:
>   
>> I'm obviously missing some obvious point I think.
>>
>> I need to be sure that the connection keeps on using the same source/destination ports for the duration, so the firewall lets the conversation carry on.
>>
>> Provided I don't close the socket at either end will the PDA and server carry on using the same set of source/destination ports.
>>
>> The test I did I purposely took note of the port used by the PDA as the network people told me to make sure I kept them the same. I then forced the server to send using that port as 
>> the destination. Over the time frame of about 40  minutes I did not need to issue any keepalives. I would rather not issue keepalives since this will cost money on a gprs network based 
>> on data usage.
>>     
>
> The huge problem here is, that there are no (repeat no) assertations
> how long firewalls keep their association. Worse, you cannot be even
> be sure that the IP addresses of your client are unique. Technically,
> they have to unique up to the NAT gateway.
>
> So basically, going the TCP way, with heart beats (that might need
> automatic/manual tuning, depending upon the network) is a safe
> conservative solution.
>
> Furthermore, GPRS is usually billed at 10/100KB increments. So doing a
> one byte keepalive message every minute, in both directions, would
> mean 5000 minutes or 50000 minutes before the keep alives cause real
> costs. While making the GPRS timeout implies a new connection, and
> lost money, because the payment increments start from zero.
>
> So sending a small keepalive packet is a sensible thing to do.
>
> Andreas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   
Andreas

Thanks for the info.

You are right. The IP addresses are not unique. It is the combination of 
IP/PortNo that is unique if I understand the network people correctly. 
They share about 10 IPs with everyone.

I'll run some more tests on how long the firewall is designed to keep 
its associations. And as well I'll check with the network operators.

I'll also check re the costings for keepalives.

Thanks

John Aherne




From andreas at kostyrka.org  Mon Jan  8 19:37:17 2007
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Tue, 9 Jan 2007 01:37:17 +0100
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A2C601.8070106@johnaherne.co.uk>
References: <45A29F87.4070501@johnaherne.co.uk>
	<45A2A7D6.3030403@imperial.ac.uk>
	<45A2B390.6080508@johnaherne.co.uk>
	<20070108220104.GA29783@andi-lap.la.revver.com>
	<45A2C601.8070106@johnaherne.co.uk>
Message-ID: <20070109003716.GA11342@andi-lap.la.revver.com>

* John Aherne <johna at johnaherne.co.uk> [070108 23:44]:
> Andreas Kostyrka wrote:
> >* John Aherne <johna at johnaherne.co.uk> [070108 22:28]:
> >  
> >>I'm obviously missing some obvious point I think.
> >>
> >>I need to be sure that the connection keeps on using the same source/destination ports for the duration, so the firewall lets the conversation carry on.
> >>
> >>Provided I don't close the socket at either end will the PDA and server carry on using the same set of source/destination ports.
> >>
> >>The test I did I purposely took note of the port used by the PDA as the network people told me to make sure I kept them the same. I then forced the server to send using that port as 
> >>the destination. Over the time frame of about 40  minutes I did not need to issue any keepalives. I would rather not issue keepalives since this will cost money on a gprs network 
> >>based on data usage.
> >>    
> >
> >The huge problem here is, that there are no (repeat no) assertations
> >how long firewalls keep their association. Worse, you cannot be even
> >be sure that the IP addresses of your client are unique. Technically,
> >they have to unique up to the NAT gateway.
> >
> >So basically, going the TCP way, with heart beats (that might need
> >automatic/manual tuning, depending upon the network) is a safe
> >conservative solution.
> >
> >Furthermore, GPRS is usually billed at 10/100KB increments. So doing a
> >one byte keepalive message every minute, in both directions, would
> >mean 5000 minutes or 50000 minutes before the keep alives cause real
> >costs. While making the GPRS timeout implies a new connection, and
> >lost money, because the payment increments start from zero.
> >
> >So sending a small keepalive packet is a sensible thing to do.
> >
> >Andreas
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >  
> Andreas
> 
> Thanks for the info.
> 
> You are right. The IP addresses are not unique. It is the combination of IP/PortNo that is unique if I understand the network people correctly. They share about 10 IPs with everyone.
Not even that. At best ports are random. Ports are 16 bit integers
(and some ranges are reserved). So if you include somehow the client
IP, you've got a problem.

OTOH, client IPs as they arrive on the server (gateway IP so to say)
plus ports should be unique.


> 
> I'll run some more tests on how long the firewall is designed to keep its associations. And as well I'll check with the network operators.
The problem here is, that you need to consider:
*) your app will get deployed on some other network.
*) the network people change their config (e.g. because the gateway
has problems to remember all it's associations).
*) if you have not an insider connection to the real responsible, most
network operators won't be able to give you that information.
> 
> I'll also check re the costings for keepalives.

Just take a look at the rates for GPRS. In Europe, they are billed
usually at increments of 100KB. So making a connection timeout and
reestablishing the GPRS session costs you on average 50KB that you
could use for application level keep alives.

Andreas



From johna at johnaherne.co.uk  Tue Jan  9 03:20:12 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Tue, 09 Jan 2007 08:20:12 +0000
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <20070109003716.GA11342@andi-lap.la.revver.com>
References: <45A29F87.4070501@johnaherne.co.uk>	<45A2A7D6.3030403@imperial.ac.uk>	<45A2B390.6080508@johnaherne.co.uk>	<20070108220104.GA29783@andi-lap.la.revver.com>	<45A2C601.8070106@johnaherne.co.uk>
	<20070109003716.GA11342@andi-lap.la.revver.com>
Message-ID: <45A3503C.6020201@johnaherne.co.uk>


>> Andreas
>>
>> Thanks for the info.
>>
>> You are right. The IP addresses are not unique. It is the combination of IP/PortNo that is unique if I understand the network people correctly. They share about 10 IPs with everyone.
>>     
> Not even that. At best ports are random. Ports are 16 bit integers
> (and some ranges are reserved). So if you include somehow the client
> IP, you've got a problem.
>
> OTOH, client IPs as they arrive on the server (gateway IP so to say)
> plus ports should be unique.
>
>
>   
>> I'll run some more tests on how long the firewall is designed to keep its associations. And as well I'll check with the network operators.
>>     
> The problem here is, that you need to consider:
> *) your app will get deployed on some other network.
> *) the network people change their config (e.g. because the gateway
> has problems to remember all it's associations).
> *) if you have not an insider connection to the real responsible, most
> network operators won't be able to give you that information.
>   
>> I'll also check re the costings for keepalives.
>>     
>
> Just take a look at the rates for GPRS. In Europe, they are billed
> usually at increments of 100KB. So making a connection timeout and
> reestablishing the GPRS session costs you on average 50KB that you
> could use for application level keep alives.
>
> Andreas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   
Andreas

Thanks.

You are probably right about the cost of keepalives. I'll be setting up 
some sort of test for it.

And switching networks will no doubt prove a problem. But I have a 
feeling they all work on the same basis, so I may be ok if I get the 
basic protocol right.

One issue with the PDAs is as follows:--

One connection to the server is to set up a link the server can use to 
push data to the PDA. The PDA will wait on this connection for data to 
be sent through.

So it is the server that needs to know if this connection is down. The 
server will need to send the keepalives. If the connection is gone, the 
server will mark the unit as gone-away and wait for it to reconnect.

That will present a problem to send keepalives to 100 units and check 
responses. This will take a fair amount of time especially if some of 
them have dropped out. So I might need to have a lower rate of keepalive.

The PDA as client will send its data and status info to another server 
as simple http posts. If it can't find the server it will just timeout 
and the user will need to resend or reconnect.

So I was looking at using twisted for the part where the server was 
pushing data to the PDA based on events occurring elsewhere. I was 
hoping that twisted would give me a basic comms framework that did the 
nuts and bolts and I could plug my application into.

Is that a good possibility.

Thanks

John Aherne





From zmola at acm.org  Wed Jan 10 00:23:21 2007
From: zmola at acm.org (Carl Zmola)
Date: Wed, 10 Jan 2007 00:23:21 -0500
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A2B390.6080508@johnaherne.co.uk>
References: <45A29F87.4070501@johnaherne.co.uk>	<45A2A7D6.3030403@imperial.ac.uk>
	<45A2B390.6080508@johnaherne.co.uk>
Message-ID: <45A47849.8010302@acm.org>

John Aherne wrote:
> Phil
>
> Thanks for the reply.
>
> I'm obviously missing some obvious point I think.
I think the obvious point is that: Everything works find while the TCP 
socket is open.  The server knows everything about the client at that 
time.  Keep alives are sent  to keep the connection open. 

The only problem occurs when the connection is closed.  The client must 
be responsible for re-establishing the connection, since the server can 
not reach the client.
To make matters more fun, the client will not always know the connection 
is down unless the client is sending keep alives (with a watchdog timer 
going).

After you figure this all out, you can worry about UDP. UDP would only 
be useful in this situation when the client is pumping data to the 
server and does not need an immediate response, since the server may not 
be able to send UDP data to the client.  A good example would be 
position updates.  The client could send position updates every minute 
via UDP and connect via TCP every 15 minutes to guarantee the messages 
got through.

You should probably get familiar with IP, UDP and TCP framing and byte 
counting if you are working with GPRS.  Bytes can start to add up if you 
don't pay attention to them.



Carl



From johna at johnaherne.co.uk  Wed Jan 10 03:49:05 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Wed, 10 Jan 2007 08:49:05 +0000
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A47849.8010302@acm.org>
References: <45A29F87.4070501@johnaherne.co.uk>	<45A2A7D6.3030403@imperial.ac.uk>	<45A2B390.6080508@johnaherne.co.uk>
	<45A47849.8010302@acm.org>
Message-ID: <45A4A881.3090806@johnaherne.co.uk>

Carl Zmola wrote:
> John Aherne wrote:
>> Phil
>>
>> Thanks for the reply.
>>
>> I'm obviously missing some obvious point I think.
> I think the obvious point is that: Everything works find while the TCP 
> socket is open.  The server knows everything about the client at that 
> time.  Keep alives are sent  to keep the connection open.
> The only problem occurs when the connection is closed.  The client 
> must be responsible for re-establishing the connection, since the 
> server can not reach the client.
> To make matters more fun, the client will not always know the 
> connection is down unless the client is sending keep alives (with a 
> watchdog timer going).
>
> After you figure this all out, you can worry about UDP. UDP would only 
> be useful in this situation when the client is pumping data to the 
> server and does not need an immediate response, since the server may 
> not be able to send UDP data to the client.  A good example would be 
> position updates.  The client could send position updates every minute 
> via UDP and connect via TCP every 15 minutes to guarantee the messages 
> got through.
>
> You should probably get familiar with IP, UDP and TCP framing and byte 
> counting if you are working with GPRS.  Bytes can start to add up if 
> you don't pay attention to them.
>
>
>
> Carl
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Carl

Thanks for the reply.

I think the client can check its local IP address. If that has changed 
then it will know it has lost and regained its connection. It can then 
reconnect to the server. I'm not sure if this is cast in stone, but I 
can imagine a case where it might not apply.

OK, I have been looking up frame sizes etc. And I have been looking at 
the data sent through an ethernet analyser just to confirm what actually 
goes down the line.

Thansk for the advice.

John Aherne





From zmola at acm.org  Wed Jan 10 09:26:51 2007
From: zmola at acm.org (Carl Zmola)
Date: Wed, 10 Jan 2007 09:26:51 -0500
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A4A881.3090806@johnaherne.co.uk>
References: <45A29F87.4070501@johnaherne.co.uk>	<45A2A7D6.3030403@imperial.ac.uk>	<45A2B390.6080508@johnaherne.co.uk>	<45A47849.8010302@acm.org>
	<45A4A881.3090806@johnaherne.co.uk>
Message-ID: <45A4F7AB.1060408@acm.org>

John Aherne wrote:
> Carl Zmola wrote:
>> John Aherne wrote:
>>> Phil
>>>
>>> Thanks for the reply.
>>>
>>> I'm obviously missing some obvious point I think.
>> I think the obvious point is that: Everything works find while the 
>> TCP socket is open.  The server knows everything about the client at 
>> that time.  Keep alives are sent  to keep the connection open.
>> The only problem occurs when the connection is closed.  The client 
>> must be responsible for re-establishing the connection, since the 
>> server can not reach the client.
>> To make matters more fun, the client will not always know the 
>> connection is down unless the client is sending keep alives (with a 
>> watchdog timer going).
>>
>> After you figure this all out, you can worry about UDP. UDP would 
>> only be useful in this situation when the client is pumping data to 
>> the server and does not need an immediate response, since the server 
>> may not be able to send UDP data to the client.  A good example would 
>> be position updates.  The client could send position updates every 
>> minute via UDP and connect via TCP every 15 minutes to guarantee the 
>> messages got through.
>>
>> You should probably get familiar with IP, UDP and TCP framing and 
>> byte counting if you are working with GPRS.  Bytes can start to add 
>> up if you don't pay attention to them.
>>
>>
>>
>> Carl
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> Carl
>
> Thanks for the reply.
>
> I think the client can check its local IP address. If that has changed 
> then it will know it has lost and regained its connection. It can then 
> reconnect to the server. I'm not sure if this is cast in stone, but I 
> can imagine a case where it might not apply.
>
> OK, I have been looking up frame sizes etc. And I have been looking at 
> the data sent through an ethernet analyser just to confirm what 
> actually goes down the line.
>
> Thansk for the advice.
A great reference is W. Richard Stevens's book TCP-IP Illustrated.
http://www.amazon.com/Protocols-TCP-IP-Illustrated/dp/0201633469

Also, just play with it a little on a wired connection and unplug you 
Ethernet cable to see what happens.
>
> John Aherne
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From andrewfr_ice at yahoo.com  Wed Jan 10 17:44:16 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 10 Jan 2007 14:44:16 -0800 (PST)
Subject: [Twisted-Python] Advice on Writing a Custom Twisted Reactor
Message-ID: <911591.66363.qm@web34202.mail.mud.yahoo.com>

Hello Colleagues:

I am a first time poster...

For the past few months I have been experimenting with
using Stackless Python with Twisted. I still consider
myself very much a Twisted newbie. Currently my
problems involve deferreds.

>From doing online searches, I have run across
customized reactors for Twisted. Consequently I am
looking at the custom reactors that come with Twisted.
Like Stackless, many GUIs have a hard time working
with Twisted which blocks. Based on the
ThreadedSelectReactor, most of the reactors are for
GUIs. The general idea is that custom reactor's event
loop calls Twisted in its own thread. This approach
seems like it would work for Stackless and provide a
decent general solution. However there are a few
places where I am not quite clear.

Most of my Stackless programmes have the following
form (think of this as a MainLoop):

~

set up stuff

while (stackless.getruncount() > 1):
   stackless.schedule()

~

Since it seems my custom reactor has to call Twisted
as often as possible. I would wrap
stackless.schedule() (since this is often called):

stacklessReactor.schedule():
    __hook__() # some method that would call Twisted
    stackless.schedule()

Where I start to get a bit confused is:

1) In the Custom reactor.run() method, do I call 
self.__hook__() in the interleave() method? Is there
anything more I have to do in the run() method? Can I
avoid signal handler issues by passing False to
Twisted's reactor.run() ?

2) From my Stackless code, do I have to use
self.callFromThread() to call Twisted methods that
involve deferreds?

Again, any advice would be welcomed.

Cheers,
Andrew

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From exarkun at divmod.com  Wed Jan 10 18:32:43 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 10 Jan 2007 18:32:43 -0500
Subject: [Twisted-Python] Advice on Writing a Custom Twisted Reactor
In-Reply-To: <911591.66363.qm@web34202.mail.mud.yahoo.com>
Message-ID: <20070110233243.11447.1076809328.divmod.quotient.12503@ohm>

On Wed, 10 Jan 2007 14:44:16 -0800 (PST), Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>Hello Colleagues:
>
>I am a first time poster...

Welcome to the list. :)

>
>For the past few months I have been experimenting with
>using Stackless Python with Twisted. I still consider
>myself very much a Twisted newbie. Currently my
>problems involve deferreds.

Okay.  Hopefully this will be easy to straighten out:
Deferreds are quite simple.

>
>>From doing online searches, I have run across
>customized reactors for Twisted. Consequently I am
>looking at the custom reactors that come with Twisted.
>Like Stackless, many GUIs have a hard time working
>with Twisted which blocks. Based on the
>ThreadedSelectReactor, most of the reactors are for
>GUIs. The general idea is that custom reactor's event
>loop calls Twisted in its own thread. This approach
>seems like it would work for Stackless and provide a
>decent general solution. However there are a few
>places where I am not quite clear.

The split is pretty even, actually.  There's are GUI
reactors for Gtk, Gtk2, wxPython, and Qt.  There are
non-GUI reactors for select, poll, epoll, KQ, and IOCP.
There's also a Win32 event reactor, which is kind of
for GUI integration and kind of for other stuff.

Threaded select reactor actually isn't the same kind of
reactor as the rest of these, since it isn't intended
to be used via the normal reactor API (ie, run).  In
Twisted 2.5, we've renamed it to try to make this more
apparent: it's now in a "private" module which doesn't
have "reactor" in its name.  It still works in the
same way as it always did, though.

For most reactors, the behavior is actually to monitor
event sources and then dispatch received events to code
interested in them.  Whether these events are for GUI
elements or file descriptors doesn't really matter much.
Whether the monitoring is done in one thread or many is
also more or less irrelevant, as far as the external API
is concerned.  It _is_ important that all event dispatching
happens to a single thread, since this is what programs
written with Twisted expect to happen, and doing otherwise
would typically introduce bugs into these applications.

I'm not sure what "general solution" you have in mind, so
this may or may not be relevant to the problem you're
tackling.

>
>Most of my Stackless programmes have the following
>form (think of this as a MainLoop):
>
>~
>
>set up stuff
>
>while (stackless.getruncount() > 1):
>   stackless.schedule()
>
>~
>
>Since it seems my custom reactor has to call Twisted
>as often as possible. I would wrap
>stackless.schedule() (since this is often called):

All of the currently implemented Twisted reactors need
to wake up under two circumstances:

  * a network event has occurred and needs to be reacted to
  * a timing event has occurred and needs to be reacted to

The most correct integration will account for these two facts
and only wake up as often as is necessary to deal with the
relevant events.

Of course, waking up more often isn't necessarily incorrect,
but it is wasteful.  Also, if the scheduling strategy is "as
fast as possible", then the accuracy of timed event processing
typically suffers.

>
>stacklessReactor.schedule():
>    __hook__() # some method that would call Twisted
>    stackless.schedule()
>
>Where I start to get a bit confused is:
>
>1) In the Custom reactor.run() method, do I call
>self.__hook__() in the interleave() method? Is there
>anything more I have to do in the run() method? Can I
>avoid signal handler issues by passing False to
>Twisted's reactor.run() ?
>
>2) From my Stackless code, do I have to use
>self.callFromThread() to call Twisted methods that
>involve deferreds?
>

Okay.  I see that you're writing stackless integration
using TSR.  I'm not sure what the point of this is.  Can
you explain the functionality that's gained by doing this,
rather than using something like what's in Chris Armstrong's
sandbox in threadless.py?

>Again, any advice would be welcomed.

I don't think I've completely understood your goals, but I
hope this is a good starting point.

Jean-Paul



From prattnel at hotmail.com  Wed Jan 10 20:31:36 2007
From: prattnel at hotmail.com (Andrew Pratt)
Date: Thu, 11 Jan 2007 01:31:36 +0000
Subject: [Twisted-Python] Moonfallen's ntsvc code
Message-ID: <BAY115-F39093276067028DF7B447CBB10@phx.gbl>

Does anyone know if Moonfallen's ntsvc code (currently written as a 
distutils extension) has made it into Twisted Core 2.5?

If not, what is the likelihood of it being incorporated into twisted rather 
than remaining sandboxed?

_________________________________________________________________
Join the millions of Australians using Live Search. Try live.com.au 
http://ninemsn.com.au/share/redir/adTrack.asp?mode=click&clientID=740&referral=million&URL=http://live.com.au




From jeff at taupro.com  Thu Jan 11 07:55:33 2007
From: jeff at taupro.com (Jeff Rush)
Date: Thu, 11 Jan 2007 06:55:33 -0600
Subject: [Twisted-Python] Reminder: Early Bird Registration for PyCon Ending
	Soon
Message-ID: <45A633C5.9090403@taupro.com>

Greetings.  I'm the co-chair for an upcoming volunteer-run conference in the 
Dallas (Addison) area and would like to get an announcement into the hands of 
your members in some manner acceptable to your community.

The event is the fifth international Python Conference, being held Feb 23-25, 
2007 at the Marriott-Quorum in Addison, with early-bird registration ending 
Jan 15.

The conference draws approximately 400-500 attendees from diverse backgrounds 
such as scientists from national and medical labs, college/K-12 educators, web 
engineers and the myriad of IT developers and programming hobbyists.  Those 
new to the Python language are welcome, and we're offering a half-day "Python 
101" tutorial on the day before the conference, Thursday Feb 22 to help you 
get up to speed and better enjoy the rest of the conference.

While unfortunately no talks specifically on Twisted were submitted this year, 
some of the presentations that Twisted folk might find interesting are:

  - Web Frameworks Panel
  - WSGI: An Introduction
  - soaplib: an easy-to-use python soap library
  - Distributing your Project with Python Eggs
  - Easy Creation of Interactive Tutorials
  - How I Wrote a Python App and Got $5 Million
  - Scaling Python for High-Load Web Sites
  - Software Development with Trac

Being run by the Python community as a non-profit event, the conference 
strives to be inexpensive, with registration being only $260 (or $195 if you 
register prior to Jan 15th), with a further discount for students.  On the day 
before the conference we are running a full day of classroom tutorials (extra 
charge per class) and then after the conference is a free four-days of 
sprints, which are informal gatherings of programmers to work together in 
coding on various projects.  Sprints are excellent opportunities to do agile 
pair-programming side-by-side with experienced programmers and make new friends.

Other activities are lightning talks, which are 5-minute presentations to show 
off a cool technology or spread the word about a project, open space talks, 
which are spontaneous gatherings around a topic and, new this year, a Python 
Lab where experienced and novice programmers will work together to solve 
challenging problems and then present their solutions.

The conference is also running four keynote talks by leaders in the 
programming field, with a special focus on education this year:

   "The Power of Dangerous Ideas: Python and One Laptop per Child"
      by Ivan Krstic, senior member of the One Laptop per Child project

   "Premise: eLearning does not Belong in Public Schools"
      by Adele Goldberg, of SmallTalk fame

   "Python 3000"
      by Guido van Rossum, creator of Python

   "The Importance of Programming Literacy"
      by Robert M. "r0ml" Lefkowitz, a frequent speaker at O'Reilly conferences

I believe your members will find the conference educational and enjoyable. 
More information about the conference along with the full schedule of 
presentations with abstracts, is available online:

   http://us.pycon.org/

Thanks for any help you can give in spreading the word,

Jeff Rush
Co-Chair PyCon 2007




From itamar at itamarst.org  Thu Jan 11 10:04:37 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 11 Jan 2007 10:04:37 -0500
Subject: [Twisted-Python] Summary of wxPython and Twisted integration status
Message-ID: <1168527877.4207.7.camel@localhost.localdomain>

As of Twisted 2.1 you should be using twisted.internet.wxreactor for
Twisted/wxPython integration.

As of the just released 2.5, you should still be using wxreactor, but it
should work much better: on Mac OS X Twisted events will be handled even
when modal dialogs are open, and shutdown and startup events now work on
all platforms.

Please reports any bugs you find to our ticket tracker.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From radix at twistedmatrix.com  Thu Jan 11 10:53:54 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Jan 2007 10:53:54 -0500
Subject: [Twisted-Python] Twisted 2.5.0 released
Message-ID: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>

Get Twisted: http://twistedmatrix.com/

Twisted is an event-based framework for internet applications which
works on Python 2.3.x, 2.4.x, and 2.5.x.

Twisted 2.5.0 is a major feature release, with several interesting new
developments and a great number of bug fixes. Some of the highlights
follow.

 * AMP, the Asynchronous Messaging Protocol, was introduced.  AMP is a
protocol which provides request/response semantics over a persistent
connection in a very simple and extensible manner.

 * An Epoll-based reactor was added, which can be used with twistd or
trial by passing "-r epoll" on the command line. This may improve
performance of certain high-traffic network applications.

 * The 'twistd' command can now accept sub-commands which name an
application to run. For example, 'twistd web --path .' will start a
web server serving files out of the current directory. This
functionality is meant to replace the old way of doing things with
'mktap' and 'twistd -f'.

 * Python 2.5 is now supported. Previous releases of Twisted were
broken by changes in the release of Python 2.5.

 * 'inlineCallbacks' was added, which allows taking advantage of the
new 'yield' expression syntax in Python 2.5 to avoid writing callbacks
for Deferreds.

 * Many improvements were made to the Jabber support in twisted.words.

Hit http://twistedmatrix.com/trac/wiki/Downloads to see what's new and
to get the latest downloads, including tarballs and Windows
installers.

Again thanks to Jean-Paul Calderone and Cory Dodt for helping get this
release out the door, and thanks to all the Twisted contributors whose
work went into Twisted 2.5.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From manlio_perillo at libero.it  Thu Jan 11 11:21:24 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 11 Jan 2007 17:21:24 +0100
Subject: [Twisted-Python] Twisted 2.5.0 released
In-Reply-To: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>
Message-ID: <45A66404.3060809@libero.it>

Christopher Armstrong ha scritto:
> Get Twisted: http://twistedmatrix.com/
> 

Great, thanks for your work.

> Twisted is an event-based framework for internet applications which
> works on Python 2.3.x, 2.4.x, and 2.5.x.
> 
> Twisted 2.5.0 is a major feature release, with several interesting new
> developments and a great number of bug fixes. Some of the highlights
> follow.
> 
> * AMP, the Asynchronous Messaging Protocol, was introduced.  AMP is a
> protocol which provides request/response semantics over a persistent
> connection in a very simple and extensible manner.
> 
> * An Epoll-based reactor was added, which can be used with twistd or
> trial by passing "-r epoll" on the command line. This may improve
> performance of certain high-traffic network applications.
>

Any benchmarks?

> * The 'twistd' command can now accept sub-commands which name an
> application to run. For example, 'twistd web --path .' will start a
> web server serving files out of the current directory. This
> functionality is meant to replace the old way of doing things with
> 'mktap' and 'twistd -f'.
> 
> * Python 2.5 is now supported. Previous releases of Twisted were
> broken by changes in the release of Python 2.5.
> 
> * 'inlineCallbacks' was added, which allows taking advantage of the
> new 'yield' expression syntax in Python 2.5 to avoid writing callbacks
> for Deferreds.
> 

What is this?
It seems to be not in the documentation.

> * Many improvements were made to the Jabber support in twisted.words.
> 

Why not to mention the new chapters in the documentation?
http://twistedmatrix.com/projects/core/documentation/howto/producers.html
and
http://twistedmatrix.com/projects/core/documentation/howto/tap.html

And what about the new coiterate support?


 > [...]



Regards  Manlio Perillo




From nico at tekNico.net  Thu Jan 11 11:27:59 2007
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 11 Jan 2007 17:27:59 +0100
Subject: [Twisted-Python] Re: Twisted 2.5.0 released
In-Reply-To: <45A66404.3060809@libero.it>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>
	<45A66404.3060809@libero.it>
Message-ID: <eo5oib$kpq$1@sea.gmane.org>

Manlio Perillo wrote:
>> * 'inlineCallbacks' was added, which allows taking advantage of the
>> new 'yield' expression syntax in Python 2.5 to avoid writing callbacks
>> for Deferreds.

> What is this?
> It seems to be not in the documentation.

http://twistedmatrix.com/documents/current/api/twisted.internet.defer.html#inlineCallbacks


-- 
Nicola Larosa - http://www.tekNico.net/

Don?t get me wrong, I like Ruby. And it?s not particularly difficult
to read. But the philosophy of the language designers led to design
choices that emphasize writability over readability. And in that
department I think the advantage has to go to Python.
 -- Mark Ramm-Christensen, June 2006




From manlio_perillo at libero.it  Thu Jan 11 11:44:12 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 11 Jan 2007 17:44:12 +0100
Subject: [Twisted-Python] Re: Twisted 2.5.0 released
In-Reply-To: <eo5oib$kpq$1@sea.gmane.org>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>	<45A66404.3060809@libero.it>
	<eo5oib$kpq$1@sea.gmane.org>
Message-ID: <45A6695C.6010504@libero.it>

Nicola Larosa ha scritto:
> Manlio Perillo wrote:
>>> * 'inlineCallbacks' was added, which allows taking advantage of the
>>> new 'yield' expression syntax in Python 2.5 to avoid writing callbacks
>>> for Deferreds.
> 
>> What is this?
>> It seems to be not in the documentation.
> 
> http://twistedmatrix.com/documents/current/api/twisted.internet.defer.html#inlineCallbacks
> 
> 

Well, with documentation I mean the HOWTO ;-).
Thanks for the link!


Regards  Manlio Perillo



From radix at twistedmatrix.com  Thu Jan 11 12:46:07 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Jan 2007 12:46:07 -0500
Subject: [Twisted-Python] Twisted 2.5.0 released
In-Reply-To: <45A66404.3060809@libero.it>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>
	<45A66404.3060809@libero.it>
Message-ID: <60ed19d40701110946g1bb71733y37e0760b1b59cd2d@mail.gmail.com>

On 1/11/07, Manlio Perillo <manlio_perillo at libero.it> wrote:
> Why not to mention the new chapters in the documentation?
> http://twistedmatrix.com/projects/core/documentation/howto/producers.html
> and
> http://twistedmatrix.com/projects/core/documentation/howto/tap.html

Thanks.

> And what about the new coiterate support?

Coiterate was in Twisted 2.4.0, it is not new in 2.5.0.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From manlio_perillo at libero.it  Thu Jan 11 13:52:17 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 11 Jan 2007 19:52:17 +0100
Subject: [Twisted-Python] Twisted 2.5.0 released
In-Reply-To: <60ed19d40701110946g1bb71733y37e0760b1b59cd2d@mail.gmail.com>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>	<45A66404.3060809@libero.it>
	<60ed19d40701110946g1bb71733y37e0760b1b59cd2d@mail.gmail.com>
Message-ID: <45A68761.9090404@libero.it>

Christopher Armstrong ha scritto:
> On 1/11/07, Manlio Perillo <manlio_perillo at libero.it> wrote:
>> Why not to mention the new chapters in the documentation?
>> http://twistedmatrix.com/projects/core/documentation/howto/producers.html
>> and
>> http://twistedmatrix.com/projects/core/documentation/howto/tap.html
> 
> Thanks.
> 
>> And what about the new coiterate support?
> 
> Coiterate was in Twisted 2.4.0, it is not new in 2.5.0.
> 
> 

Is it possible to have a changelog with all the features added in Twisted?

I'm reading the main page of the site and I can only find
http://twistedmatrix.com/trac/wiki/ArchivedNews.

By the way: what's the state of the vfs package?


Thanks and regards  Manlio Perillo




From radix at twistedmatrix.com  Thu Jan 11 14:05:37 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Jan 2007 14:05:37 -0500
Subject: [Twisted-Python] Twisted 2.5.0 released
In-Reply-To: <45A68761.9090404@libero.it>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>
	<45A66404.3060809@libero.it>
	<60ed19d40701110946g1bb71733y37e0760b1b59cd2d@mail.gmail.com>
	<45A68761.9090404@libero.it>
Message-ID: <60ed19d40701111105l26a543e5teec523ecc056af75@mail.gmail.com>

On 1/11/07, Manlio Perillo <manlio_perillo at libero.it> wrote:
> Is it possible to have a changelog with all the features added in Twisted?
>
> I'm reading the main page of the site and I can only find
> http://twistedmatrix.com/trac/wiki/ArchivedNews.

ArchivedNews links to the Downloads page, which has detailed release
notes for every Twisted project. If those release notes are
insufficient (they are very detailed, even including ticket number
references for every change), then the next level of detail is svn
logs.

> By the way: what's the state of the vfs package?

It remains unreleased because it hasn't been deemed worthy of public
consumption.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andrewfr_ice at yahoo.com  Thu Jan 11 16:46:17 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 11 Jan 2007 13:46:17 -0800 (PST)
Subject: [Twisted-Python] Advice on Writing a Custom Twisted Stackless
	Reactor
In-Reply-To: <E1H52n2-0006cs-01@pyramid.twistedmatrix.com>
Message-ID: <408744.8368.qm@web34213.mail.mud.yahoo.com>

Date: Wed, 10 Jan 2007 18:32:43 -0500
From: Jean-Paul Calderone <exarkun at divmod.com>
Subject: 
To: Twisted general discussion
<twisted-python at twistedmatrix.com>
Message-ID:

<20070110233243.11447.1076809328.divmod.quotient.12503 at ohm>
Content-Type: text/plain; format=flowed

>Okay.  I see that you're writing stackless
integration
>using TSR.  I'm not sure what the point of this is. 
>Can you explain the functionality that's gained by
>doing this, rather than using something like what's
in >Chris Armstrong's sandbox in threadless.py?

Thank you Jean-Paul for your response. My goal is to
write a custom Twisted reactor for Stackless Python.
Although I have had success writing programmes that
use deferred (for client HTTP calls) and HTTP request
handlers, I have had problems doing both
simultaneously in one programme.

Some context : I am prototyping WS-BPEL (Web services
Business Process Execution Language) processors. In
the WS-BPEL language, it is possible for some
process's "threads" to act as a server and other
"threads" to act as a client simultaneously. 

The problem that I have found is that when Twisted
blocks waiting for a server request, Stackless will
also block, hence no progress on other tasklets that
could execute. I thought I got around this problem by
using task.LoopingCall/() that would issue a
stackless.schedule() at regular intervals. However
this approach turns out to be problematic. I thought I
could solve the problem by placing Twisted in a thread
but no. The main problem with placing Twisted in a
thread is that I seem to lose the deferred (and I
don't believe I am getting deadlock).

>Can you explain the functionality that's gained by
>doing this, 

1. I solve my problem in a clean fashion. 

2. If I write a custom Stackless Reactor, then I have
a solution that conforms to the way Twisted does
stuff. I think would make it easier for others to use
my stuff.

>rather than using something like what's in Chris
>Armstrong's sandbox in threadless.py? 

Chris's approach looks like the approach I currently
use.

>Threaded select reactor actually isn't the same kind
>of reactor as the rest of these, since it isn't
>intended to be used via the normal reactor API (ie,
>run).  

Right now I am using Twisted 2.4 with Stackless 2.4.3.

For now, I would like to build on top of
ThreadedSelectReactor.

Back to my original question, given my previous
example's "main loop", do I simply use interleave() to
get my processor to call Twisted?

Cheers,
Andrew



 
____________________________________________________________________________________
Want to start your own business?
Learn how on Yahoo! Small Business.
http://smallbusiness.yahoo.com/r-index



From ziade.tarek at gmail.com  Thu Jan 11 17:01:09 2007
From: ziade.tarek at gmail.com (=?ISO-8859-1?Q?Tarek_Ziad=E9?=)
Date: Thu, 11 Jan 2007 23:01:09 +0100
Subject: [Twisted-Python] A PyCon BoF about content repository in Python
Message-ID: <94bdd2610701111401t50019c13l3b6b27bc9817f447@mail.gmail.com>

Hello,

I have added a BoF in the PyCon wiki for the next session in Dallas.

It's about having a standard in Python for content repositories, that could
be used by any Python framework, like Twisted.

http://us.pycon.org/TX2007/PyJCR

Please react/participate on the wiki, if you think this could be a good
idea, for Twisted and other Python web frameworks.

My secret wish would be to see core developers from each framework
participate in this discussion, because I believe such a standard could be a
huge benefit for Python industrialisation and frameworks maturity

Cheers

Tarek Ziad?

-- 
Tarek Ziad? | Association AfPy | www.afpy.org
Blog FR | http://programmation-python.org
Blog EN | http://tarekziade.wordpress.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070111/d88f4fc1/attachment.htm 

From exarkun at divmod.com  Thu Jan 11 17:35:36 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 11 Jan 2007 17:35:36 -0500
Subject: [Twisted-Python] Advice on Writing a Custom Twisted Stackless
	Reactor
In-Reply-To: <408744.8368.qm@web34213.mail.mud.yahoo.com>
Message-ID: <20070111223536.11447.123887929.divmod.quotient.13521@ohm>

On Thu, 11 Jan 2007 13:46:17 -0800 (PST), Andrew Francis ><20070110233243.11447.1076809328.divmod.quotient.12503 at ohm>
>>Okay.  I see that you're writing stackless
>integration
>>using TSR.  I'm not sure what the point of this is.
>>Can you explain the functionality that's gained by
>>doing this, rather than using something like what's
>in >Chris Armstrong's sandbox in threadless.py?
>
>Thank you Jean-Paul for your response. My goal is to
>write a custom Twisted reactor for Stackless Python.
>Although I have had success writing programmes that
>use deferred (for client HTTP calls) and HTTP request
>handlers, I have had problems doing both
>simultaneously in one programme.
>
>Some context : I am prototyping WS-BPEL (Web services
>Business Process Execution Language) processors. In
>the WS-BPEL language, it is possible for some
>process's "threads" to act as a server and other
>"threads" to act as a client simultaneously.

This is possible without involving ThreadedSelectReactor
or Stackless Python, of course.  There may be a reason to
bring Stackless Python in to simplify the expression of
some ideas, but I'm still not sure I understand the reason
to bring in ThreadedSelectReactor.  This may just be due
to the fact that I haven't written a lot of code using
Stackless Python.  Some examples would be helpful here.

>
>The problem that I have found is that when Twisted
>blocks waiting for a server request, Stackless will
>also block, hence no progress on other tasklets that
>could execute.

Twisted will block while there are no events to process.
As soon as there is an event, though, it will wake up.  So,
if your tasklets are I/O bound, as soon as there is a network
event, Twisted will tell you about it and you can schedule
the next one to run.  If your tasklets are based on timing
events, as soon as the time comes for one of these to fire,
Twisted will also wake up and you can schedule one.  If there
is some other kind of event source, it may be a little more
challenging, but it sounds like that's not the case here.

>I thought I got around this problem by
>using task.LoopingCall/() that would issue a
>stackless.schedule() at regular intervals. However
>this approach turns out to be problematic. 

What problems did you face?  It certainly doesn't sound ideal,
but it does sound like it should give you something which does
more or less work.  Better would be to associate network and
timing events with specific tasklets and wake them up when the
reactor fires those events.

>I thought I
>could solve the problem by placing Twisted in a thread
>but no. The main problem with placing Twisted in a
>thread is that I seem to lose the deferred (and I
>don't believe I am getting deadlock).

Most Twisted APIs aren't threadsafe, so most likely what is
happening here is that you are using a Twisted API from the
wrong thread and it just isn't working right, which often
manifests as an event which never fires.

However, I still suspect bringing in a native thread is not
necessary to accomplish your goals.

>
>>Can you explain the functionality that's gained by
>>doing this,
>
>1. I solve my problem in a clean fashion.

Always a bonus. :)

>
>2. If I write a custom Stackless Reactor, then I have
>a solution that conforms to the way Twisted does
>stuff. I think would make it easier for others to use
>my stuff.

Possibly.  On the other hand, it may just introduce the
need for other people to be careful about threadsafety.

>
>>rather than using something like what's in Chris
>>Armstrong's sandbox in threadless.py?
>
>Chris's approach looks like the approach I currently
>use.

Unfortunately I still haven't managed to grasp why this
is undesirable. :(

>
>>Threaded select reactor actually isn't the same kind
>>of reactor as the rest of these, since it isn't
>>intended to be used via the normal reactor API (ie,
>>run).
>
>Right now I am using Twisted 2.4 with Stackless 2.4.3.
>
>For now, I would like to build on top of
>ThreadedSelectReactor.
>
>Back to my original question, given my previous
>example's "main loop", do I simply use interleave() to
>get my processor to call Twisted?

Roughly, yes.  blockingdemo.py in the examples directory
gives a fairly short, self-contained example of integrating
another loop using TSR.  If you haven't seen it yet, it'll
probably help or help verify your understanding.  If you have,
it might be a good basis to guide further questions.

Jean-Paul



From glyph at divmod.com  Fri Jan 12 08:14:59 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 12 Jan 2007 13:14:59 -0000
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian Warner
Message-ID: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>

Although we should all be happy for the Twisted 2.5 release, we still have an unfortunate track-record as far as responsiveness to bugs.

I encourage all readers of this list to have a look at lucky report 13:

    http://twistedmatrix.com/trac/report/13

Note that there are still high-priority tickets that haven't received even so much as an update since 2004.

Paul Swartz has recently removed himself as the ultimate loser of this non-contest, and Brian Warner has replaced him.  Don't want to be the biggest loser?  Update your tickets before they get to be years old!

Please keep in mind that "low" and "lowest" priority tickets don't currently participate, so if you've deemed something truly unimportant feel free to simply drop its priority.  There it can safely languish for an eternity.  Or at least until somebody changes the rules.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070112/710aee25/attachment.htm 

From jacob at internet24.de  Fri Jan 12 11:01:39 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 12 Jan 2007 17:01:39 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
Message-ID: <1168617699.26958.41.camel@enterprise>

On Fri, 2007-01-12 at 13:14 +0000, glyph at divmod.com wrote:
> Although we should all be happy for the Twisted 2.5 release, we still
> have an unfortunate track-record as far as responsiveness to bugs.

Maybe this a bit of a policy matter though. 

A little bit more flexibility on what patches are added might help. 

If somebody posts a patch to a problem that is not yet
covered by a unit test (so that would be most patches)
then not absolutely insisting that the patcher provides a unit test as
well
could speed up things considerably. If the  developer responsible for
that module thinks the patch is plausible and possibly covers a way to
use twisted which
probably couldn't have worked anyway because of the reported problem,
there
is not all that much risk, is there? After all, the existing tests
should bark if the patch breaks anything else.


Twisted is really a very cool and effective tool, and that it can
actually be used in a stable production environment is definitely not
something I
want to miss, but maybe that is not so much due to a strict development
policy
as it is due to the skills of the core developers in spotting bogus
changes ;)

Just a thought... 

Maybe I got the wrong impression on just how things are done
by the twisted team. 


BTW, the patch in ticket #1794 is already included in 2.5, it probably
shouldn't be an active ticket anymore.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070112/5629eaa5/attachment.pgp 

From radix at twistedmatrix.com  Fri Jan 12 11:15:35 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 12 Jan 2007 11:15:35 -0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168617699.26958.41.camel@enterprise>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
Message-ID: <60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>

On 1/12/07, Thomas Jacob <jacob at internet24.de> wrote:
<a bunch of stuff about how we should not necessarily require unit
tests with all changes>

> After all, the existing tests
> should bark if the patch breaks anything else.

This idea is contradictory with your proposal.  If we do not require
unit tests for all changes, then we *cannot* rely on the existing unit
tests to tell us when new changes break the code.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From therve at free.fr  Fri Jan 12 11:32:57 2007
From: therve at free.fr (therve at free.fr)
Date: Fri, 12 Jan 2007 17:32:57 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168617699.26958.41.camel@enterprise>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
Message-ID: <1168619577.45a7b839e2837@imp5-g19.free.fr>

Selon Thomas Jacob <jacob at internet24.de>:

> On Fri, 2007-01-12 at 13:14 +0000, glyph at divmod.com wrote:
> > Although we should all be happy for the Twisted 2.5 release, we still
> > have an unfortunate track-record as far as responsiveness to bugs.
>
> Maybe this a bit of a policy matter though.
>
> A little bit more flexibility on what patches are added might help.
>
> If somebody posts a patch to a problem that is not yet
> covered by a unit test (so that would be most patches)
> then not absolutely insisting that the patcher provides a unit test as
> well
> could speed up things considerably. If the  developer responsible for
> that module thinks the patch is plausible and possibly covers a way to
> use twisted which
> probably couldn't have worked anyway because of the reported problem,
> there
> is not all that much risk, is there? After all, the existing tests
> should bark if the patch breaks anything else.

I hope you'll see the irony here: "Let's be more flexible on unit tests. The
existing tests should be enough, no ?". The answer is obviously no, because one
of the biggest problem when you fix code like this is regression.

Furthermore, writing tests often shows real problems of an API, so are a good
step in code evaluation. If code can't be tested well, it probably means it's
not good code (that's not universally true, of course).

> BTW, the patch in ticket #1794 is already included in 2.5, it probably
> shouldn't be an active ticket anymore.

Thanks, closed. You'll notice this was corrected during the resolution of ticket
#428, which addressed problems in FTP tests :).

--
Thomas



From jacob at internet24.de  Fri Jan 12 11:51:36 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 12 Jan 2007 17:51:36 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
Message-ID: <1168620696.26958.64.camel@enterprise>

On Fri, 2007-01-12 at 11:15 -0500, Christopher Armstrong wrote:

> This idea is contradictory with your proposal.  If we do not require
> unit tests for all changes, then we *cannot* rely on the existing unit
> tests to tell us when new changes break the code.

Sure you can, you can check whether they break the old read already
existing
unit tests which were written with the "intended" functionality
of a particular module in mind when the module was first created.

Requiring people that submit patches that actually change or extend said
intended
functionality to also include unit testing code is perfectly fine.

But bug fixes that fix something which is somehow clearly
(in the responsible developer's view) intended functionality 
that is nevertheless not yet covered by an existing test
(obviously not ;) are a different matter...

Expecting twisted users that find such problems in Twisted to also
submit functional unit test is placing the hurdle
for bug fixes that get added to twisted quite high.

The idea of course is that later the Twisted developer
responsible for the module in question extends the unit
tests for that module's core functionality to also
include the bug fix case if they feel the need and/or
have the time.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070112/4c219842/attachment.pgp 

From twisted at ralphm.ik.nu  Fri Jan 12 11:55:38 2007
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Fri, 12 Jan 2007 17:55:38 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168619577.45a7b839e2837@imp5-g19.free.fr>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<1168619577.45a7b839e2837@imp5-g19.free.fr>
Message-ID: <1168620938.29720.9.camel@se-135.se.wtb.tue.nl>

On Fri, 2007-01-12 at 17:32 +0100, therve at free.fr wrote:
> > BTW, the patch in ticket #1794 is already included in 2.5, it probably
> > shouldn't be an active ticket anymore.
> 
> Thanks, closed. You'll notice this was corrected during the resolution of ticket
> #428, which addressed problems in FTP tests :).

Also funny to notice that spiv did offer to add tests to that patch
(time permitting) in #1794.

-- 
Groetjes,

ralphm




From jacob at internet24.de  Fri Jan 12 12:22:31 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 12 Jan 2007 18:22:31 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168620938.29720.9.camel@se-135.se.wtb.tue.nl>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<1168619577.45a7b839e2837@imp5-g19.free.fr>
	<1168620938.29720.9.camel@se-135.se.wtb.tue.nl>
Message-ID: <1168622551.26958.78.camel@enterprise>

On Fri, 2007-01-12 at 17:55 +0100, Ralph Meijer wrote:
> On Fri, 2007-01-12 at 17:32 +0100, therve at free.fr wrote:
> > > BTW, the patch in ticket #1794 is already included in 2.5, it probably
> > > shouldn't be an active ticket anymore.
> > 
> > Thanks, closed. You'll notice this was corrected during the resolution of ticket
> > #428, which addressed problems in FTP tests :).
> 
> Also funny to notice that spiv did offer to add tests to that patch
> (time permitting) in #1794.
> 

Well maybe it is more a question of who hast to come up with
the unit tests ;) 

The person submitting a bug patch
(often people that do not know the inner details
of twisted so well like myself) or the person later including 
that patch or a variation into the twisted repository
(probably an experienced Twisted developer that has a deeper
understanding of the module in question).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070112/506d726a/attachment.pgp 

From twisted at ralphm.ik.nu  Fri Jan 12 12:25:47 2007
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Fri, 12 Jan 2007 18:25:47 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168620696.26958.64.camel@enterprise>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
	<1168620696.26958.64.camel@enterprise>
Message-ID: <1168622747.29720.13.camel@se-135.se.wtb.tue.nl>

On Fri, 2007-01-12 at 17:51 +0100, Thomas Jacob wrote:
> On Fri, 2007-01-12 at 11:15 -0500, Christopher Armstrong wrote:
> [..]
>
> The idea of course is that later the Twisted developer
> responsible for the module in question extends the unit
> tests for that module's core functionality to also
> include the bug fix case if they feel the need and/or
> have the time.

The point is that there must be a test case covering the alleged issue,
that
does succeed with the given fix. It doesn't matter who writes it. If
other people would roam outstanding tickets and add test cases for
fix-only-patches that is great! Please do.

-- 
Groetjes,

ralphm




From itamar at itamarst.org  Fri Jan 12 12:28:34 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 12 Jan 2007 12:28:34 -0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168620696.26958.64.camel@enterprise>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
	<1168620696.26958.64.camel@enterprise>
Message-ID: <1168622914.4207.32.camel@localhost.localdomain>

On Fri, 2007-01-12 at 17:51 +0100, Thomas Jacob wrote:

> Expecting twisted users that find such problems in Twisted to also
> submit functional unit test is placing the hurdle
> for bug fixes that get added to twisted quite high.

We don't require unit tests for bug or patch submission, we require
tests for changes committed to Twisted. Indeed, we occasionally write
unit tests for fixes other people have submitted. But since all changes
must have tests, submitting tests along with patches greatly enhances
the chance a fix will go in quickly.

It's worth submitting fixes even if you don't attach a test, better than
no bug report at all. But we must have tests, whether written by
submitter or Twisted developer, to actually commit a patch. Without
tests we have no way of knowing:
1. whether a bug actually exists,
2. whether the patch fixes it, or
3. whether the patch introduces new bugs.





From glyph at divmod.com  Fri Jan 12 12:40:07 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 12 Jan 2007 17:40:07 -0000
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
Message-ID: <20070112174007.17094.557896436.divmod.xquotient.1839@joule.divmod.com>

On 04:01 pm, jacob at internet24.de wrote:
>On Fri, 2007-01-12 at 13:14 +0000, glyph at divmod.com wrote:
>> Although we should all be happy for the Twisted 2.5 release, we still
>> have an unfortunate track-record as far as responsiveness to bugs.

>A little bit more flexibility on what patches are added might help.

If nobody has said anything about a ticket in 2 years with no patches on it, I don't see how accepting crappy patches is going to help.

By "responsiveness" I meant responding to people who report bugs, and being clear on what we are vs. are not working on.  The problem I am trying to address is best described here:

    http://www.jwz.org/doc/cadt.html

By highlighting the least responsive developer (who, by the way, is Brian Warner) I hope to encourage people to keep their tickets up to date and respond when users report issues, even if the code in question has been rewritten.

>If somebody posts a patch to a problem that is not yet
>covered by a unit test (so that would be most patches)
>then not absolutely insisting that the patcher provides a unit test as
>well
>could speed up things considerably.

All the evidence I've seen (although I admit, there's not much of it) suggests that the opposite is true.  Bugs have been fixed faster and better since the institution of these requirements.

Most patches that get submitted without tests address a new ticket that was created specifically to hold the patch.  Very few outside contributors seem to be interested in trying to fix _known_ problems with Twisted.  Either they want a new feature or they want a new problem they've just discovered fixed.

Those outside contributors who do contribute to existing tickets have generally become involved with the project enough to know that they should be developing fixes test-first.

>If the  developer responsible for
>that module thinks the patch is plausible and possibly covers a way to
>use twisted which
>probably couldn't have worked anyway because of the reported problem,
>there
>is not all that much risk, is there? After all, the existing tests
>should bark if the patch breaks anything else.

As Mr. Armstrong already said, this idea doesn't make any sense.  If anything, we need to require tests for existing, old functionality that wasn't completely tested before the patch was applied.

>Twisted is really a very cool and effective tool, and that it can
>actually be used in a stable production environment is definitely not
>something I
>want to miss, but maybe that is not so much due to a strict development
>policy
>as it is due to the skills of the core developers in spotting bogus
>changes ;)

How do you think the core developers got to be skilled in this way?  By writing patches that don't have any tests or docs in them? :)

>Just a thought...

Thanks for trying to help with the suggestion.  However, I can guarantee that as long as I am involved with the project, these requirements will continue to stay in place.  You can continue talking about it if you like, but it will not change.

>Maybe I got the wrong impression on just how things are done
>by the twisted team.

You seem to have a roughly correct impression.  Tests and documentation are required before a patch will be accepted.

>BTW, the patch in ticket #1794 is already included in 2.5, it probably
>shouldn't be an active ticket anymore.

Thanks for the heads up - it looks like Thomas Herve closed it in response.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070112/904e912e/attachment.htm 

From jacob at internet24.de  Fri Jan 12 12:53:15 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 12 Jan 2007 18:53:15 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168622914.4207.32.camel@localhost.localdomain>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
	<1168620696.26958.64.camel@enterprise>
	<1168622914.4207.32.camel@localhost.localdomain>
Message-ID: <1168624395.26958.81.camel@enterprise>

On Fri, 2007-01-12 at 12:28 -0500, Itamar Shtull-Trauring wrote:
> We don't require unit tests for bug or patch submission, we require
> tests for changes committed to Twisted. Indeed, we occasionally write
> unit tests for fixes other people have submitted.

Alright, so this was basically a misunderstanding on my part.

Sorry about that...

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070112/712c0c47/attachment.pgp 

From radix at twistedmatrix.com  Fri Jan 12 13:02:57 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 12 Jan 2007 13:02:57 -0500
Subject: [Twisted-Python] Reminder: Early Bird Registration for PyCon
	Ending Soon
In-Reply-To: <45A633C5.9090403@taupro.com>
References: <45A633C5.9090403@taupro.com>
Message-ID: <60ed19d40701121002xd9b4650i36e17385e33645b2@mail.gmail.com>

On 1/11/07, Jeff Rush <jeff at taupro.com> wrote:
> Greetings.  I'm the co-chair for an upcoming volunteer-run conference in the
> Dallas (Addison) area and would like to get an announcement into the hands of
> your members in some manner acceptable to your community.

I'll just note that I am in fact going this year, and I believe glyph
is as well. I am not giving any full talks but I will probably end up
giving some lightning talks.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From slamb at slamb.org  Fri Jan 12 13:54:10 2007
From: slamb at slamb.org (Scott Lamb)
Date: Fri, 12 Jan 2007 10:54:10 -0800
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168622914.4207.32.camel@localhost.localdomain>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
	<1168620696.26958.64.camel@enterprise>
	<1168622914.4207.32.camel@localhost.localdomain>
Message-ID: <C19EFD81-45D3-411C-8D9B-43EF98F20101@slamb.org>

On Jan 12, 2007, at 9:28 AM, Itamar Shtull-Trauring wrote:
> It's worth submitting fixes even if you don't attach a test, better  
> than
> no bug report at all. But we must have tests, whether written by
> submitter or Twisted developer, to actually commit a patch. Without
> tests we have no way of knowing:
> 1. whether a bug actually exists,
> 2. whether the patch fixes it, or
> 3. whether the patch introduces new bugs.

What about race conditions? I ran into such a problem a while back in  
code using reactor.spawnProcess - seeing if it is a twisted bug and  
if it's valid in current versions is on my todo list, but the  
priority is low because of the insistence on having a test for  
everything. I like spending my time on things I can actually get fixed.

Say I find it is a still-valid twisted bug. What am I supposed to do?

(1) create a test that likely fails by running many, many times. It'd  
bog down the test suite.
(2) create a test that might fail sometime, maybe.
(3) add instrumentation to the main code solely for the purpose of  
the test (break twisted's kneecap before the race).
(4) just say "clearly[*] if event A happens between lines X and Y,  
then it is handled improperly."

I prefer #4.

[*] Of course, this word is a big lie that we inflict on people  
because others have done it to us. As one of my favorite physics  
professors would say, "clearly" means "be careful here".

-- 
Scott Lamb <http://www.slamb.org/>





From exarkun at divmod.com  Fri Jan 12 15:00:31 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 12 Jan 2007 15:00:31 -0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <C19EFD81-45D3-411C-8D9B-43EF98F20101@slamb.org>
Message-ID: <20070112200031.11447.1369488695.divmod.quotient.14498@ohm>

On Fri, 12 Jan 2007 10:54:10 -0800, Scott Lamb <slamb at slamb.org> wrote:
>On Jan 12, 2007, at 9:28 AM, Itamar Shtull-Trauring wrote:
>>It's worth submitting fixes even if you don't attach a test, better  than
>>no bug report at all. But we must have tests, whether written by
>>submitter or Twisted developer, to actually commit a patch. Without
>>tests we have no way of knowing:
>>1. whether a bug actually exists,
>>2. whether the patch fixes it, or
>>3. whether the patch introduces new bugs.
>
>What about race conditions? I ran into such a problem a while back in  code 
>using reactor.spawnProcess - seeing if it is a twisted bug and  if it's 
>valid in current versions is on my todo list, but the  priority is low 
>because of the insistence on having a test for  everything. I like spending 
>my time on things I can actually get fixed.
>
>Say I find it is a still-valid twisted bug. What am I supposed to do?
>
>(1) create a test that likely fails by running many, many times. It'd  bog 
>down the test suite.
>(2) create a test that might fail sometime, maybe.
>(3) add instrumentation to the main code solely for the purpose of  the test 
>(break twisted's kneecap before the race).
>(4) just say "clearly[*] if event A happens between lines X and Y,  then it 
>is handled improperly."
>
>I prefer #4.

I think this actually varies from case to case.  For a problem where all
of the relevant critical points cannot be hooked or mocked or stubbed or
what have you, then a combination of #2 and #4 seems correct to me.  You
should be able to demonstrate that a real problem does exist by adding a
test which will fail eventually when run repeatedly (eg, using trial -u)
and which runs for orders of magnitude longer without failing once a fix
has been applied.

Always feel free to file the ticket before figuring any of this out, by
the way.  It is still possible that it will strike someone else's fancy
and the rest of the work will be taken care of for you. :)

>
>[*] Of course, this word is a big lie that we inflict on people  because 
>others have done it to us. As one of my favorite physics  professors would 
>say, "clearly" means "be careful here".

:)

Jean-Paul




From glyph at divmod.com  Fri Jan 12 15:31:02 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 12 Jan 2007 20:31:02 -0000
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
Message-ID: <20070112203102.17094.891713132.divmod.xquotient.1886@joule.divmod.com>

On 08:00 pm, exarkun at divmod.com wrote:
>On Fri, 12 Jan 2007 10:54:10 -0800, Scott Lamb <slamb at slamb.org> wrote:

>>(1) create a test that likely fails by running many, many times. It'd  bog 
>>down the test suite.
>>(2) create a test that might fail sometime, maybe.
>>(3) add instrumentation to the main code solely for the purpose of  the 
>>test (break twisted's kneecap before the race).
>>(4) just say "clearly[*] if event A happens between lines X and Y,  then it 
>>is handled improperly."
>>
>>I prefer #4.
>
>I think this actually varies from case to case.  For a problem where all
>of the relevant critical points cannot be hooked or mocked or stubbed or
>what have you, then a combination of #2 and #4 seems correct to me.  You
>should be able to demonstrate that a real problem does exist by adding a
>test which will fail eventually when run repeatedly (eg, using trial -u)
>and which runs for orders of magnitude longer without failing once a fix
>has been applied.

Race conditions are tricky, but in every case it is worth _trying_ to mock/stub/hook the code as it already is to demonstrate it deterministically.  It isn't always possible with a reasonable amount of effort, but very often it is actually quite easy.  As you do it more, it gets easier to figure out the trickier cases.

In any case, writing a test (which runs quickly) to be used with trial -u is a pretty low bar.  There are some extremely rare cases (mostly involving threading infrastructure) where those tests take a long time to fail, but even there it is usually possible to make them *succeed* reliably.

>Always feel free to file the ticket before figuring any of this out, by
>the way.  It is still possible that it will strike someone else's fancy
>and the rest of the work will be taken care of for you. :)

And of course this is always true.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070112/2f60ca07/attachment.htm 

From andrewfr_ice at yahoo.com  Fri Jan 12 16:21:45 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 12 Jan 2007 13:21:45 -0800 (PST)
Subject: [Twisted-Python] Re: Advice on Writing a Custom Twisted Stackless
	Reactor
In-Reply-To: <E1H5P4C-0007WX-02@pyramid.twistedmatrix.com>
Message-ID: <22700.91143.qm@web34215.mail.mud.yahoo.com>

Hello Jean-Paul:

Once again, thanks for your response. 

>Twisted will block while there are no events to
>process. As soon as there is an event, though, it
will >wake up.  So, if your tasklets are I/O bound, as
soon >as there is a network event, Twisted will tell
you >about it and you can schedule the next one to
run.  

I know this. Since Twisted and Stackless are using the
same OS thread, this will block Stackless. Stackless
will block under the following condition - 

some notation:

S - tasklet waiting for a server call (waiting for a
Twisted request Handler )
C - tasklet waiting for a client call (deferred
request)
| - running in parallel 

if you have a sequence of the form (S | C[0] | C[1] |
c[n]) and S executes first, there will be no progress
on the client tasklets. I tried adding a timer but had
limited success.

(By the way, when I first mentioned this in the
Stackless mailing list, Bob Ipolito pointed this out
to me)

AF>I thought I got around this problem by
AF>using task.LoopingCall/() that would issue a
AF>stackless.schedule() at regular intervals. However
AF>this approach turns out to be problematic. 

>What problems did you face?  It certainly doesn't
>sound ideal, but it does sound like it should give
you >something which does more or less work.

In some tests I would get a Twisted error :

why = getAttr(selectable, method)()

others times my processor would simply hang because
the deferred function was not called.

from my logging, the common demoninator was that the
task.LoopingCall stopped.

>Better would be to associate network and
>timing events with specific tasklets and wake them up
>when the reactor fires those events.

I do this. 

>Most Twisted APIs aren't threadsafe, so most likely
>what is happening here is that you are using a
Twisted >API from the wrong thread and it just isn't
working >right, which often manifests as an event
which never >fires.

What is the wrong thread? How do I correct this?

>However, I still suspect bringing in a native thread
>is not necessary to accomplish your goals.

Maybe you are right. So far my experiences are
pointing in the opposite direction. Also I have read
posts involving integrating Chandler and IronPython
with Twisted and they are running Twisted in a
separate thread. 

That said, these are my deferred calls :

postRequest = client.getPage(self.address, method =
'POST', headers = self.headers, postdata = self.body) 
     
postRequest.addCallback(self.__handleResponse__).addErrback(self.__handleError__)
    

How should these be done from a thread?

>Roughly, yes.  blockingdemo.py in the examples
>directory gives a fairly short, self-contained
example >of integrating another loop using TSR.  If
you haven't >seen it yet, it'll probably help or help
verify your >understanding.  If you have, it might be
a good basis >to guide further questions.

I looked at blockingdemo.py. Blockingdemo is
structured different from the reactor examples in the
Twisted.internet module. Most of the example reactors
i have seen inherit from threadselectreactor and
override the run() method. What does
TwistedManager.poll() do? The method is defined but
called nowhere. I commented out poll() and the
programme did the same thing. 

That said, I have been looking at the wxreactor.py. 

My questions are:

1. With the customer reactor, it would be Stackless
that drives Twisted, not the other way around?

2. How exactly does interleave work? Some reactors
don't use it. My Stackless thread and Twisted talk
through stackless channels and a variation of a
stackless channel, the uthread Queue.

My strategy is as follows:

1. Inherit from threadselectreactor and override run()

2. in run(), my interleave calls __hook__()

3. In my Stackless Application, write a method 
__hook__. __hook__ looks like wxCallAfter in wxPython
:

def __hook__(self, function, *args, **kw):
    return function(*args, **kw)

3. Since stackless.schedule() is often called to yield
control, wrap the stackless.schedule() 

"""
call the underlying Stackless scheduler
"""
def __schedule__(self):
    # this is where I am a little fuzzy but
wxCallAfter
    # has to be called somehow
    self.__hook__(?) 
    stackless.schedule()
    
4. In the StacklessReactor.run(), the main loop that
is called will look like:
    
def MainLoop(self):

    while(stackless.getruncount() > 1):
         self.__schedule__()        


Again, I really appreciate insights. I really want to
get Stackless Python to properly work with Twisted.

Cheers,
Andrew






 
____________________________________________________________________________________
8:00? 8:25? 8:40? Find a flick in no time 
with the Yahoo! Search movie showtime shortcut.
http://tools.search.yahoo.com/shortcuts/#news



From jml at mumak.net  Fri Jan 12 17:11:11 2007
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 13 Jan 2007 09:11:11 +1100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168620696.26958.64.camel@enterprise>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
	<1168620696.26958.64.camel@enterprise>
Message-ID: <d06a5cd30701121411s6d453ef5m9d73427e871b4d34@mail.gmail.com>

On 1/13/07, Thomas Jacob <jacob at internet24.de> wrote:
> But bug fixes that fix something which is somehow clearly
> (in the responsible developer's view) intended functionality
> that is nevertheless not yet covered by an existing test
> (obviously not ;) are a different matter...
>
> Expecting twisted users that find such problems in Twisted to also
> submit functional unit test is placing the hurdle
> for bug fixes that get added to twisted quite high.

We don't expect bug *finders* to submit unit tests -- although every
one who does, ROCKS. We do expect bug *fixers* to submit unit tests.

Also, I don't think tests for bug fixes are a different matter from
features. Apart from being excellent descriptions of bugs, tests make
sure bugs stay fixed.

Remember, a bug fix still changes code. If you pile a hundred untested
bug fixes on an otherwise tested module, things get nasty. Suppose I
find a new bug in this module and try to submit a patch to Twisted.
I'd look at the source code and find maybe fifty chunks of code that
seem odd, but can all be changed without breaking any unit tests.
Without unit tests, I'd have no clue that this module was a
particularly difficult module to get right, and that any change I make
is likely to undo a number of bug fixes.

Maybe if I were being diligent, I'd look at the revision history of
the file, and find that out. But then I'd be in a difficult situation.
I'd essentially have to re-think the logic behind dozens of lines of
code in order to insert my patch safely.

Once I did that thinking, I'd write unit tests, because they are a way
of building understanding about behaviour into code.

Of course, I could always just look at the mess and give up, or maybe
contribute a 'helpful' patch that fixes one bug and re-opens five.

cheers,
jml



From lee.a.connell at gmail.com  Fri Jan 12 23:24:41 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Fri, 12 Jan 2007 23:24:41 -0500
Subject: [Twisted-Python] Twisted lineReceived (sender)
Message-ID: <000001c736ca$bf508f50$0200a8c0@leelaptop>

I just started with twisted and want to write a simple chat server.  This
code here works fine, however I want to know who the data is coming from in
the callbacks or events.  You can see where I commented code out in def
lineReceived as to what I want to do.  How can this be done in the easiest
way?

 

Thanks!

 

#!/usr/bin/env python

 

from twisted.protocols import basic

 

class MyChat(basic.LineReceiver):

  def connectionMade(self):

    print "Got new client!"

    self.factory.clients.append(self)

 

  def connectionLost(self, reason):

    print "Lost a client!"

    self.factory.clients.remove(self)

 

  def lineReceived(self, line):

    print "received", repr(line)

    for c in self.factory.clients:

        #if c != sender:

        c.message(line)

 

  def message(self, message):

    if message != '':

        self.transport.write(message + '\n')

 

from twisted.internet import protocol

from twisted.application import service, internet

 

factory = protocol.ServerFactory()

factory.protocol = MyChat

factory.clients = []

 

application = service.Application("chatserver")

internet.TCPServer(1025, factory).setServiceParent(application)


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070112/f3f64fa8/attachment.htm 

From teratorn at twistedmatrix.com  Sat Jan 13 00:31:09 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 12 Jan 2007 23:31:09 -0600
Subject: [Twisted-Python] Twisted lineReceived (sender)
In-Reply-To: <000001c736ca$bf508f50$0200a8c0@leelaptop>
References: <000001c736ca$bf508f50$0200a8c0@leelaptop>
Message-ID: <op.tl2ux7w2y3d107@office2>

On Fri, 12 Jan 2007 22:24:41 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> I just started with twisted and want to write a simple chat server.  This
> code here works fine, however I want to know who the data is coming from  
> in the callbacks or events.

Inside a Protocol method self.transport.getPeer() should give you what you  
want.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From gravesricharde at yahoo.com  Sat Jan 13 04:33:31 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Sat, 13 Jan 2007 01:33:31 -0800 (PST)
Subject: [Twisted-Python] client crashed
Message-ID: <20070113093331.41183.qmail@web37210.mail.mud.yahoo.com>

Hello,

I am new to twisted.

I got one unhandled error (twice) in Deferred:

In this code in client.py (you can skip to the 2nd line from the bottom):

def _parse(url, defaultPort=None):
    parsed = urlparse.urlparse(url)
    scheme = parsed[0]
    path = urlparse.urlunparse(('','')+parsed[2:])
    if defaultPort is None:
        if scheme == 'https':
            defaultPort = 443
        else:
            defaultPort = 80
    host, port = parsed[1], defaultPort
    if ':' in host:
        host, port = host.split(':')
        port = int(port)
    return scheme, host, port, path



Here is the end of the traceback:

 File "/usr/lib/python2.4/site-packages/twisted/web/client.py", line 376, in _parse
    port = int(port)
exceptions.ValueError: invalid literal for int():


I was running a script on a big list of URL's that I scraped off a google query.  

I looked at each URL including a colon, but nothing jumped out at me.

Maybe the port = int(port) line should be within a try/except structure.  

Should I report this somewhere else?

Thanks,

Rick Graves






From griph at mail.ru  Sat Jan 13 06:50:06 2007
From: griph at mail.ru (Mars Agliullin)
Date: Sat, 13 Jan 2007 16:50:06 +0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <20070112174007.17094.557896436.divmod.xquotient.1839@joule.divmod.com>
References: <20070112174007.17094.557896436.divmod.xquotient.1839@joule.divmod.com>
Message-ID: <45A8C76E.8080807@mail.ru>


glyph at divmod.com ?????:
> By "responsiveness" I meant responding to people who report bugs, and 
> being clear on what we are vs. are not working on.  The problem I am 
> trying to address is best described here:
>
>     http://www.jwz.org/doc/cadt.html
Yes! But there is another problem. Say, one wants some feature to be 
supported in twisted. He/she sends a patch, but it is dropped by the 
core team, since they think it should be implemented another way.
It is OK, but if the implementation had been discussed before, there 
would be less time lost. Correct me, if I miss something, but more 
detailed roadmaps by the core team would be helpful for everyone who 
wants to participate. If there _are_ roadmaps, give me an URL, please.

For example, I'd be happy to implement SCGI authentication (ticket 
#1300). But it is better to know in advance, how core team want this 
feature to be implemented. Otherwise it is just a lost time for me to 
code and for the core team to view it.

Sorry, if I'm crude here. I'm new to this list, although using twisted 
for several months (btw, it's cool & tasty!). And English is not my 
native language, so sorry again for style. :)

--
Best regards, Mars Agliullin




From andrew-twisted at puzzling.org  Sat Jan 13 07:46:52 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 13 Jan 2007 23:46:52 +1100
Subject: [Twisted-Python] client crashed
In-Reply-To: <20070113093331.41183.qmail@web37210.mail.mud.yahoo.com>
References: <20070113093331.41183.qmail@web37210.mail.mud.yahoo.com>
Message-ID: <20070113124652.GA25155@steerpike.home.puzzling.org>

Rick Graves wrote:
[...]
> 
> def _parse(url, defaultPort=None):
>     parsed = urlparse.urlparse(url)
>     scheme = parsed[0]
>     path = urlparse.urlunparse(('','')+parsed[2:])
>     if defaultPort is None:
>         if scheme == 'https':
>             defaultPort = 443
>         else:
>             defaultPort = 80
>     host, port = parsed[1], defaultPort
>     if ':' in host:
>         host, port = host.split(':')
>         port = int(port)
>     return scheme, host, port, path
> 
> 
> 
> Here is the end of the traceback:
> 
>  File "/usr/lib/python2.4/site-packages/twisted/web/client.py", line 376, in _parse
>     port = int(port)
> exceptions.ValueError: invalid literal for int():
> 
> 
> I was running a script on a big list of URL's that I scraped off a google query.  
> 
> I looked at each URL including a colon, but nothing jumped out at me.

Here's an example that will trigger that exception:

    >>> _parse('http://foo:/')
    Traceback (most recent call last):
      File "<stdin>", line 1, in ?
      File "<stdin>", line 13, in _parse
    ValueError: invalid literal for int(): 

If you're having trouble diagnosing the cause of your problem, I suggest putting
a try-except in your code to log the URL triggering it:

        try:
            port = int(port)
        except:
            print "Bad port, url is:", url
            raise

You could also put the try/except around the entire body of the function.

Anyway, there's nothing Twisted specific here that I can see.

-Andrew.




From gravesricharde at yahoo.com  Sat Jan 13 09:00:11 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Sat, 13 Jan 2007 06:00:11 -0800 (PST)
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
Message-ID: <20070113140012.12041.qmail@web37211.mail.mud.yahoo.com>

Hello,

I am new to twisted.

I was using client.downloadPage and reactor.

Twisted was hung on the following two for a whole hour:

http://75i.net/

http://www.theproxy.be/

I had to break out with Ctrl-C.  When I did that, they finally fired the Errorback. 

These two stood out, as I had successfully (otherwise) run through a list of about 850 URL's.  

Is my reporting this helpful?  

Should I be reporting this elsewhere?

Thanks,

Rick Graves






From radix at twistedmatrix.com  Sat Jan 13 12:31:13 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 13 Jan 2007 12:31:13 -0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <45A8C76E.8080807@mail.ru>
References: <20070112174007.17094.557896436.divmod.xquotient.1839@joule.divmod.com>
	<45A8C76E.8080807@mail.ru>
Message-ID: <60ed19d40701130931i7954c1e4qf8521c2bc4a902ca@mail.gmail.com>

On 1/13/07, Mars Agliullin <griph at mail.ru> wrote:
>
> glyph at divmod.com ?????:
> > By "responsiveness" I meant responding to people who report bugs, and
> > being clear on what we are vs. are not working on.  The problem I am
> > trying to address is best described here:
> >
> >     http://www.jwz.org/doc/cadt.html

> Yes! But there is another problem. Say, one wants some feature to be
> supported in twisted. He/she sends a patch, but it is dropped by the
> core team, since they think it should be implemented another way.
> It is OK, but if the implementation had been discussed before, there
> would be less time lost. Correct me, if I miss something, but more
> detailed roadmaps by the core team would be helpful for everyone who
> wants to participate. If there _are_ roadmaps, give me an URL, please.
>
> For example, I'd be happy to implement SCGI authentication (ticket
> #1300). But it is better to know in advance, how core team want this
> feature to be implemented. Otherwise it is just a lost time for me to
> code and for the core team to view it.

I don't think this is a systemic problem. If you want to work on SCGI
authentication, and you want to know how the developers think it ought
to be implemented, then you 1. look in the ticket for implementing
SCGI authentication to see if any discussion has happened (or make
one, if it doesn't exist), and 2. ASK the developers how they think it
ought to be implemented. If nobody responds, then there is not much
interest and you can probably feel free to do it however you want.

It's as simple as that. As for a roadmap: sure, roadmaps are nice, and
it'd be good if our project had more direction, but this wouldn't
solve your problem. It's impossible to make a roadmap that would lay
out designs for every possible feature anyone would ever want in
Twisted.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From lee.a.connell at gmail.com  Sat Jan 13 14:04:23 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 13 Jan 2007 14:04:23 -0500
Subject: [Twisted-Python] Twisted lineReceived (sender)
In-Reply-To: <op.tl2ux7w2y3d107@office2>
References: <000001c736ca$bf508f50$0200a8c0@leelaptop>
	<op.tl2ux7w2y3d107@office2>
Message-ID: <000d01c73745$a4a3ae50$0200a8c0@leelaptop>

Thanks,

getPeer() works for ip and port, however it wouldn't work in my case,
because I want to determine one client from another, if multiple clients
were coming from the same address this would fail.

Loop through the factory.clients first and...

I just compared "if client != self:" send the message

I just looked through the API to get more info on these, API seems a bit
scarce, is this something that will be complete soon?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Eric Mangold
Sent: Saturday, January 13, 2007 12:31 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Twisted lineReceived (sender)

On Fri, 12 Jan 2007 22:24:41 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> I just started with twisted and want to write a simple chat server.  This
> code here works fine, however I want to know who the data is coming from  
> in the callbacks or events.

Inside a Protocol method self.transport.getPeer() should give you what you  
want.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 




From lee.a.connell at gmail.com  Sat Jan 13 15:31:03 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 13 Jan 2007 15:31:03 -0500
Subject: [Twisted-Python] documentation
Message-ID: <000001c73751$bf8806b0$0200a8c0@leelaptop>

Didn?t mean it was scarce, I just am use to MSDN, I?ve managed to find what
I?ve needed so far.

 

Thanks!


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070113/eb6fc939/attachment.htm 

From gravesricharde at yahoo.com  Sat Jan 13 17:15:01 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Sat, 13 Jan 2007 14:15:01 -0800 (PST)
Subject: [Twisted-Python] Re: client crashed
In-Reply-To: <E1H5nAi-0006pw-02@pyramid.twistedmatrix.com>
Message-ID: <111475.26767.qm@web37206.mail.mud.yahoo.com>

Andrew,

Thanks for the feedback. 

BTW, I am new to twisted but not to python.

> Anyway, there's nothing Twisted specific here that I
can see.

I disagree -- I was trying to make a suggestion that
would make future releases of twisted more
bulletproof. 

Specifically, perhaps _parse() should be changed as
follows (4 out of the last 5 lines are different):


def _parse(url, defaultPort=None):
    parsed = urlparse.urlparse(url)
    scheme = parsed[0]
    path = urlparse.urlunparse(('','')+parsed[2:])
    if defaultPort is None:
        if scheme == 'https':
            defaultPort = 443
        else:
            defaultPort = 80
    host, port = parsed[1], defaultPort
    if ':' in host:
        host, port = host.split(':')
        try:
             port = int(port)
        except ValueError:
             port = defaultPort
    return scheme, host, port, path


But I will not change the copy of client.py on my
computer.  I worked around this problem by making sure
all the URL's were clean before giving them to
twisted.  

Going at this from the top down (or bottom up,
depending on your perspective):

lURLs = map( GetCleanURL, lURLs )

def GetCleanURL( sURL ):
    #
    return UrlUnSplitMore( UrlSplitMore( sURL ) )


UrlUnSplitMore and UrlSplitMore have longer lines
which this mail client would wrap, and the result
would look terrible.  In case you are interested, they
are in this plain text file:

http://www.advanced-app.com.hk/MiscJunk/UrlSplitAndUnSplit.txt

Maybe I am making a suggestion to change twisted in
the wrong place.  I will try posting my suggested
change as a "bug" -- client.py crashes on a URL that
most browsers clean up automatically with no problem. 


Thanks,

Rick




From teratorn at twistedmatrix.com  Sat Jan 13 17:15:07 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 13 Jan 2007 16:15:07 -0600
Subject: [Twisted-Python] Twisted lineReceived (sender)
In-Reply-To: <000d01c73745$a4a3ae50$0200a8c0@leelaptop>
References: <000001c736ca$bf508f50$0200a8c0@leelaptop>
	<op.tl2ux7w2y3d107@office2>
	<000d01c73745$a4a3ae50$0200a8c0@leelaptop>
Message-ID: <op.tl35fhgwy3d107@office2>

On Sat, 13 Jan 2007 13:04:23 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> Thanks,
>
> getPeer() works for ip and port, however it wouldn't work in my case,
> because I want to determine one client from another, if multiple clients
> were coming from the same address this would fail.

On the contrary, the combination of source IP and source port will be  
unique to each TCP connection, even coming from NAT devices.

> Loop through the factory.clients first and...
>
> I just compared "if client != self:" send the message

Yeah, if all you care about is differentiation then that works.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From teratorn at twistedmatrix.com  Sat Jan 13 17:38:04 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 13 Jan 2007 16:38:04 -0600
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <20070113140012.12041.qmail@web37211.mail.mud.yahoo.com>
References: <20070113140012.12041.qmail@web37211.mail.mud.yahoo.com>
Message-ID: <op.tl36hqdvy3d107@office2>

On Sat, 13 Jan 2007 08:00:11 -0600, Rick Graves <gravesricharde at yahoo.com>  
wrote:

> Hello,
>
> I am new to twisted.
>
> I was using client.downloadPage and reactor.
>
> Twisted was hung on the following two for a whole hour:
>
> http://75i.net/
>
> http://www.theproxy.be/
>
> I had to break out with Ctrl-C.  When I did that, they finally fired the  
> Errorback.

I just wrote a test program that uses downloadPage() and it downloaded  
both those URLs fine.

Are you still able to reproduce the problem? Does there seem to be any  
difference in downloading those URLs as part of a full run as opposed to  
individually? Do you have any proxies between you and those hosts? (Many  
ISPs have transparent proxies these days, *grrr*). If you can still  
reproduce then a traffic capture could be of use.

In any case, the deferred returned from downloadPage probably shouldn't  
take > 1 hour to errback. It's certainly possible that downloadPage could  
need more than 1 hour to download a large file over a slow pipe, but  
that's not the case here. There should probably be reasonable timeouts  
that trigger when no data has been received for a while. I'm not sure how  
downloadPage works as I haven't looked at the code yet.

Please file a bug at http://twistedmatrix.com/trac (You will need to  
register first). Include all the information you have, and a minimal  
example program that demonstrates the problem if at all possible.

Regards,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From lee.a.connell at gmail.com  Sat Jan 13 17:44:58 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 13 Jan 2007 17:44:58 -0500
Subject: [Twisted-Python] Twisted lineReceived (sender)
In-Reply-To: <op.tl35fhgwy3d107@office2>
References: <000001c736ca$bf508f50$0200a8c0@leelaptop><op.tl2ux7w2y3d107@office2><000d01c73745$a4a3ae50$0200a8c0@leelaptop>
	<op.tl35fhgwy3d107@office2>
Message-ID: <000001c73764$74ec50d0$0200a8c0@leelaptop>

Agh yes, should have thought of that!

Thank you.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Eric Mangold
Sent: Saturday, January 13, 2007 5:15 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Twisted lineReceived (sender)

On Sat, 13 Jan 2007 13:04:23 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> Thanks,
>
> getPeer() works for ip and port, however it wouldn't work in my case,
> because I want to determine one client from another, if multiple clients
> were coming from the same address this would fail.

On the contrary, the combination of source IP and source port will be  
unique to each TCP connection, even coming from NAT devices.

> Loop through the factory.clients first and...
>
> I just compared "if client != self:" send the message

Yeah, if all you care about is differentiation then that works.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 




From teratorn at twistedmatrix.com  Sat Jan 13 17:58:24 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 13 Jan 2007 16:58:24 -0600
Subject: [Twisted-Python] Re: client crashed
In-Reply-To: <111475.26767.qm@web37206.mail.mud.yahoo.com>
References: <111475.26767.qm@web37206.mail.mud.yahoo.com>
Message-ID: <op.tl37fmycy3d107@office2>

On Sat, 13 Jan 2007 16:15:01 -0600, Rick Graves <gravesricharde at yahoo.com>  
wrote:
[...]
> Maybe I am making a suggestion to change twisted in
> the wrong place.  I will try posting my suggested
> change as a "bug" -- client.py crashes on a URL that
> most browsers clean up automatically with no problem.

I don't think this is a bug. It's a given that you don't give Twisted junk  
input. And if you do you should catch any errors that may result. _parse()  
isn't special in this regard. Cleaning up input is a job for UI components  
and other things that are "higher up" than Twisted.

Regards,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From exarkun at divmod.com  Sat Jan 13 18:00:26 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 13 Jan 2007 18:00:26 -0500
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <op.tl36hqdvy3d107@office2>
Message-ID: <20070113230026.11447.1747369533.divmod.quotient.15708@ohm>

On Sat, 13 Jan 2007 16:38:04 -0600, Eric Mangold <teratorn at twistedmatrix.com> wrote:
>On Sat, 13 Jan 2007 08:00:11 -0600, Rick Graves <gravesricharde at yahoo.com> 
>wrote:
>>Hello,
>>
>>I am new to twisted.
>>
>>I was using client.downloadPage and reactor.
>>
>>Twisted was hung on the following two for a whole hour:
>>
>>http://75i.net/
>>
>>http://www.theproxy.be/
>>
>>I had to break out with Ctrl-C.  When I did that, they finally fired the 
>>Errorback.
>
>I just wrote a test program that uses downloadPage() and it downloaded  both 
>those URLs fine.
>
>Are you still able to reproduce the problem? Does there seem to be any 
>difference in downloading those URLs as part of a full run as opposed to 
>individually? Do you have any proxies between you and those hosts? (Many 
>ISPs have transparent proxies these days, *grrr*). If you can still 
>reproduce then a traffic capture could be of use.
>
>In any case, the deferred returned from downloadPage probably shouldn't 
>take > 1 hour to errback. It's certainly possible that downloadPage could 
>need more than 1 hour to download a large file over a slow pipe, but  that's 
>not the case here.

Not necessarily.  Networks have failures.  It seems likely that there was a
transient error of some sort while downloading two URLs (out of several
hundred).  Likely the connection would have eventually been lost, due to
TCP-level timeouts, but this would take longer than an hour.  If such long
timeouts are not desirable for a particular application, you can set a lower
timeout by passing the timeout keyword argument to downloadPage.  In these
cases, it may also be desirable to try again before ultimately reporting a
failure.

Jean-Paul



From smurf at smurf.noris.de  Sat Jan 13 13:09:45 2007
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Sat, 13 Jan 2007 18:09:45 +0000 (UTC)
Subject: [Twisted-Python] trac / website woes
Message-ID: <E1H5rzN-00060b-Us@smurf.noris.de>

I hate Trac. Especially the one on twistedmatrix.

- My previous login ("smurfix") seems to suffer from a lost password. The
website does not have an obvious place to request it.

- I tried to create a new login. Reporting a bug with it requires an email
address. The page to enter the email address does not have a Submit button.

- Not entering login data results in an empty page.

On to the real bug; somebody else can enter it into Trac.
Or, even better, fix the source.

It seems that Deferreds are tricky.

--- /usr/lib/python2.4/site-packages/twisted/spread/pb.py	2006-05-12 15:50:13.000000000 +0200
+++ /tmp/pb.py	2007-01-13 18:48:50.508925924 +0100
@@ -651,6 +651,9 @@
     def notifyOnDisconnect(self, notifier):
         """Call the given callback when the Broker disconnects."""
         assert callable(notifier)
-        self.disconnects.append(notifier)
+        if self.disconnected:
+            notifier()
+        else:
+            self.disconnects.append(notifier)
 
     def notifyOnFail(self, notifier):

... as exemplified by this traceback:

2007/01/13 18:26 CET [Broker,0,127.0.0.1] Error: <twisted.python.failure.Failure twisted.spread.pb.PBConnectionLost>
2007/01/13 18:26 CET [Broker,0,127.0.0.1] [Failure instance: Traceback (failure with no frames): twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback (failure with no frames): twisted.internet.error.ConnectionDone: Connection was closed cleanly.
2007/01/13 18:26 CET [Broker,0,127.0.0.1] ]
2007/01/13 18:26 CET [Broker,0,127.0.0.1] ]
2007/01/13 18:27 CET [Broker,1,127.0.0.1] Looking for 00:11:d8:54:e6:2d
2007/01/13 18:27 CET [-] Peer will receive following PB traceback:
2007/01/13 18:27 CET [-] Traceback (most recent call last):
          File "/usr/lib/python2.4/site-packages/twisted/internet/posixbase.py", line 226, in mainLoop
            self.runUntilCurrent()
          File "/usr/lib/python2.4/site-packages/twisted/internet/base.py", line 534, in runUntilCurrent
            f(*a, **kw)
          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 229, in callback
            self._startRunCallbacks(result)
          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 294, in _startRunCallbacks
            self._runCallbacks()
        --- <exception caught here> ---
          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 307, in _runCallbacks
            self.result = callback(self.result, *args, **kw)
          File "/usr/lib/python2.4/site-packages/twisted/spread/pb.py", line 1747, in _loggedIn
            self.portalWrapper.broker.notifyOnDisconnect(logout)
          File "/usr/lib/python2.4/site-packages/twisted/spread/pb.py", line 654, in notifyOnDisconnect
            self.disconnects.append(notifier)
        exceptions.AttributeError: 'NoneType' object has no attribute 'append'


-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
 - -
<dracus> Ctrl+Option+Command + P + R
<Knghtbrd> dracus - YE GODS!  That's worse than EMACS!
<LauraDax> hehehehe
<dracus> don't ask what that does :P



From george at ringdevelopment.com  Sat Jan 13 18:55:15 2007
From: george at ringdevelopment.com (George Pauly)
Date: Sat, 13 Jan 2007 18:55:15 -0500
Subject: [Twisted-Python] client, deferred and/or reactor hung on these
	2 URL's
In-Reply-To: <20070113230026.11447.1747369533.divmod.quotient.15708@ohm>
References: <20070113230026.11447.1747369533.divmod.quotient.15708@ohm>
Message-ID: <1168732516.28429.93.camel@localhost.localdomain>

On Sat, 2007-01-13 at 18:00 -0500, Jean-Paul Calderone wrote:
> On Sat, 13 Jan 2007 16:38:04 -0600, Eric Mangold <teratorn at twistedmatrix.com> wrote:
> >On Sat, 13 Jan 2007 08:00:11 -0600, Rick Graves <gravesricharde at yahoo.com> 
> >wrote:
> >>Hello,
> >>
> >>I am new to twisted.
> >>
> >>I was using client.downloadPage and reactor.
> >>
> >>Twisted was hung on the following two for a whole hour:
> >>
> >>http://75i.net/
> >>
> >>http://www.theproxy.be/
> >>
> >>I had to break out with Ctrl-C.  When I did that, they finally fired the 
> >>Errorback.
> >
> >I just wrote a test program that uses downloadPage() and it downloaded  both 
> >those URLs fine.
> >
> >Are you still able to reproduce the problem? Does there seem to be any 
> >difference in downloading those URLs as part of a full run as opposed to 
> >individually? Do you have any proxies between you and those hosts? (Many 
> >ISPs have transparent proxies these days, *grrr*). If you can still 
> >reproduce then a traffic capture could be of use.
> >
> >In any case, the deferred returned from downloadPage probably shouldn't 
> >take > 1 hour to errback. It's certainly possible that downloadPage could 
> >need more than 1 hour to download a large file over a slow pipe, but  that's 
> >not the case here.
> 
> Not necessarily.  Networks have failures.  It seems likely that there was a
> transient error of some sort while downloading two URLs (out of several
> hundred).  Likely the connection would have eventually been lost, due to
> TCP-level timeouts, but this would take longer than an hour.  If such long
> timeouts are not desirable for a particular application, you can set a lower
> timeout by passing the timeout keyword argument to downloadPage.  In these
> cases, it may also be desirable to try again before ultimately reporting a
> failure.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From exarkun at divmod.com  Sat Jan 13 18:55:45 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 13 Jan 2007 18:55:45 -0500
Subject: [Twisted-Python] trac / website woes
In-Reply-To: <E1H5rzN-00060b-Us@smurf.noris.de>
Message-ID: <20070113235545.11447.228742069.divmod.quotient.15750@ohm>

On Sat, 13 Jan 2007 18:09:45 +0000 (UTC), Matthias Urlichs <smurf at smurf.noris.de> wrote:
>I hate Trac. Especially the one on twistedmatrix.
>
>- My previous login ("smurfix") seems to suffer from a lost password. The
>website does not have an obvious place to request it.

It doesn't have a non-obvious way, either.

>
>- I tried to create a new login. Reporting a bug with it requires an email
>address. The page to enter the email address does not have a Submit button.

Coincidentally, I fixed both of these problems a couple hours ago.

>
>- Not entering login data results in an empty page.
>

I don't think we're going to do anything about that.

>On to the real bug; somebody else can enter it into Trac.
>Or, even better, fix the source.
>
>It seems that Deferreds are tricky.

Heh. :)

>
>--- /usr/lib/python2.4/site-packages/twisted/spread/pb.py	2006-05-12 15:50:13.000000000 +0200
>+++ /tmp/pb.py	2007-01-13 18:48:50.508925924 +0100
>@@ -651,6 +651,9 @@
>     def notifyOnDisconnect(self, notifier):
>         """Call the given callback when the Broker disconnects."""
>         assert callable(notifier)
>-        self.disconnects.append(notifier)
>+        if self.disconnected:
>+            notifier()
>+        else:
>+            self.disconnects.append(notifier)
>
>     def notifyOnFail(self, notifier):
>
>... as exemplified by this traceback:
>
>2007/01/13 18:26 CET [Broker,0,127.0.0.1] Error: <twisted.python.failure.Failure twisted.spread.pb.PBConnectionLost>
>2007/01/13 18:26 CET [Broker,0,127.0.0.1] [Failure instance: Traceback (failure with no frames): twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback (failure with no frames): twisted.internet.error.ConnectionDone: Connection was closed cleanly.
>2007/01/13 18:26 CET [Broker,0,127.0.0.1] ]
>2007/01/13 18:26 CET [Broker,0,127.0.0.1] ]
>2007/01/13 18:27 CET [Broker,1,127.0.0.1] Looking for 00:11:d8:54:e6:2d
>2007/01/13 18:27 CET [-] Peer will receive following PB traceback:
>2007/01/13 18:27 CET [-] Traceback (most recent call last):
>          File "/usr/lib/python2.4/site-packages/twisted/internet/posixbase.py", line 226, in mainLoop
>            self.runUntilCurrent()
>          File "/usr/lib/python2.4/site-packages/twisted/internet/base.py", line 534, in runUntilCurrent
>            f(*a, **kw)
>          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 229, in callback
>            self._startRunCallbacks(result)
>          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 294, in _startRunCallbacks
>            self._runCallbacks()
>        --- <exception caught here> ---
>          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 307, in _runCallbacks
>            self.result = callback(self.result, *args, **kw)
>          File "/usr/lib/python2.4/site-packages/twisted/spread/pb.py", line 1747, in _loggedIn
>            self.portalWrapper.broker.notifyOnDisconnect(logout)
>          File "/usr/lib/python2.4/site-packages/twisted/spread/pb.py", line 654, in notifyOnDisconnect
>            self.disconnects.append(notifier)
>        exceptions.AttributeError: 'NoneType' object has no attribute 'append'
>

Can you clarify the misbehavior you're reporting?  It looks to me like this
can only occur when the connection is lost between when an avatar is received
and when it is passed to the client-side cred callback, which seems like a
vanishingly small window to me.  Not suggesting this isn't a problem, just
that perhaps I don't understand it. :)

Jean-Paul



From andrew-twisted at puzzling.org  Sat Jan 13 19:29:55 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 14 Jan 2007 11:29:55 +1100
Subject: [Twisted-Python] Re: client crashed
In-Reply-To: <111475.26767.qm@web37206.mail.mud.yahoo.com>
References: <E1H5nAi-0006pw-02@pyramid.twistedmatrix.com>
	<111475.26767.qm@web37206.mail.mud.yahoo.com>
Message-ID: <20070114002954.GB25155@steerpike.home.puzzling.org>

On Sat, Jan 13, 2007 at 02:15:01PM -0800, Rick Graves wrote:
> Andrew,
> 
> Thanks for the feedback. 
> 
> BTW, I am new to twisted but not to python.
> 
> > Anyway, there's nothing Twisted specific here that I
> can see.
> 
> I disagree -- I was trying to make a suggestion that
> would make future releases of twisted more
> bulletproof. 
> 
> Specifically, perhaps _parse() should be changed as
> follows (4 out of the last 5 lines are different):

Ah, I didn't realise from your original message that _parse was part of Twisted,
rather than your own code.

-Andrew.




From lee.a.connell at gmail.com  Sat Jan 13 22:17:26 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 13 Jan 2007 22:17:26 -0500
Subject: [Twisted-Python] SSL
Message-ID: <000e01c7378a$852fb7e0$0200a8c0@leelaptop>

I am using SSL with LineReceiver on my server and it is working fine,
however when I start the server it asks me for the PEM key.  Is there a way
to automate this so the server can start with out user intervention?

 

Thanks!


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070113/df12cb6e/attachment.htm 

From griph at mail.ru  Sun Jan 14 02:05:59 2007
From: griph at mail.ru (Mars Agliullin)
Date: Sun, 14 Jan 2007 12:05:59 +0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <60ed19d40701130931i7954c1e4qf8521c2bc4a902ca@mail.gmail.com>
References: <20070112174007.17094.557896436.divmod.xquotient.1839@joule.divmod.com>	<45A8C76E.8080807@mail.ru>
	<60ed19d40701130931i7954c1e4qf8521c2bc4a902ca@mail.gmail.com>
Message-ID: <45A9D657.9070608@mail.ru>

Christopher Armstrong ?????:
>> For example, I'd be happy to implement SCGI authentication (ticket
>> #1300). But it is better to know in advance, how core team want this
>> feature to be implemented. Otherwise it is just a lost time for me to
>> code and for the core team to view it.
>
> I don't think this is a systemic problem. If you want to work on SCGI
> authentication, and you want to know how the developers think it ought
> to be implemented, then you 1. look in the ticket for implementing
> SCGI authentication to see if any discussion has happened (or make
> one, if it doesn't exist), and 2. ASK the developers how they think it
> ought to be implemented. If nobody responds, then there is not much
> interest and you can probably feel free to do it however you want.
... provided that rules described in the FAQ for contributors apply. OK. 
I got the point. Thank you a lot.

--
Best regards, Mars Agliullin




From smurf at smurf.noris.de  Sun Jan 14 02:05:32 2007
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Sun, 14 Jan 2007 08:05:32 +0100
Subject: [Twisted-Python] Re: trac / website woes
Message-ID: <20070114070532.GE8143@kiste.smurf.noris.de>

Hi,

Matthias Urlichs:
> It seems that Deferreds are tricky.
> 
Even more so -- apply on top of the last patch:

--- /tmp/pb.py  2007-01-13 18:48:50.508925924 +0100
+++ /usr/lib/python2.4/site-packages/twisted/spread/pb.py       2007-01-13 19:20:15.000000000 +0100
@@ -795,6 +795,9 @@
                 })
             return object
 
+        if not self.connected:
+            return deferred.fail(failure.Failure(DeadReferenceError()))
+
         # XXX This call is NOT REENTRANT and testing for reentrancy is just
         # crazy, so it likely won't be.  Don't ever write methods that call the
         # broker's serialize() method recursively (e.g. sending a method call

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
 - -
"Though a program be but three lines long,
someday it will have to be maintained."
-- The Tao of Programming



From gravesricharde at yahoo.com  Sun Jan 14 03:13:04 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Sun, 14 Jan 2007 00:13:04 -0800 (PST)
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <E1H5s01-0003e0-02@pyramid.twistedmatrix.com>
Message-ID: <20070114081304.92878.qmail@web37207.mail.mud.yahoo.com>

Eric,

I ran the same file of almost 850 URL's again today,
and again today, in the end the program was hung on
the same two URL's.  

I tried the URL's with a program like WebCat.py from
the Twisted book, which I also call WebCat.py.  Like
the one in the book, it uses client.getPage.  It is
different from the one in the book as follows:

1) The Errorback in the book did not work for me, so I
wrote a simple one, and 

2) I do not need to print the text of the page on the
screen, my WebCat.py only prints the number of bytes
received.

If you want to take a look and/or try it yourself, I
put it here:

http://www.advanced-app.com.hk/MiscJunk/WebCat.py.tar.gz

Those two URL's also hang my WebCat.py.  WebCat.py
does work with other URL's.

> (Many ISPs have transparent proxies these days,
*grrr*). 

I am definitely connecting through a proxy at the ISP.
 Around here, that is what you get.  

> If you can still reproduce then a traffic capture
could be of use.

How do I do that?

Thanks,

Rick




From christopher.zorn at gmail.com  Sun Jan 14 11:26:35 2007
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Sun, 14 Jan 2007 11:26:35 -0500
Subject: [Twisted-Python] poll reactor question
Message-ID: <149014b90701140826x3e211f3ck33735b15d81697d4@mail.gmail.com>

Hello,

When I use the poll reactor I get the following traceback every now and then :

 Traceback (most recent call last):
          File "/usr/lib/python2.3/site-packages/twisted/application/app.py",
line 278, in run
            runApp(config)
          File "/usr/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 197, in runApp
            app.runReactorWithLogging(config, oldstdout, oldstderr)
          File "/usr/lib/python2.3/site-packages/twisted/application/app.py",
line 131, in runReactorWithLogging
            reactor.run()
          File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py",
line 218, in run
            self.mainLoop()
        --- <exception caught here> ---
          File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py",
line 229, in mainLoop
            self.doIteration(t)
          File "/usr/lib/python2.3/site-packages/twisted/internet/pollreactor.py",
line 141, in doPoll
            for fd, event in l:
        exceptions.OverflowError: long int too large to convert to int


I looked in the tickets and could not find this. I am using twisted
2.4.0 and as you can see, python 2.3

Does anyone know what this could be? It only happens with this reactor.



From teratorn at twistedmatrix.com  Sun Jan 14 11:55:32 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sun, 14 Jan 2007 10:55:32 -0600
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <20070114081304.92878.qmail@web37207.mail.mud.yahoo.com>
References: <20070114081304.92878.qmail@web37207.mail.mud.yahoo.com>
Message-ID: <op.tl5lauoby3d107@office2>

On Sun, 14 Jan 2007 02:13:04 -0600, Rick Graves <gravesricharde at yahoo.com>  
wrote:

> Eric,
>
> I ran the same file of almost 850 URL's again today,
> and again today, in the end the program was hung on
> the same two URL's.
>
> I tried the URL's with a program like WebCat.py from
> the Twisted book, which I also call WebCat.py.  Like
> the one in the book, it uses client.getPage.  It is
> different from the one in the book as follows:
>
> 1) The Errorback in the book did not work for me, so I
> wrote a simple one, and
>
> 2) I do not need to print the text of the page on the
> screen, my WebCat.py only prints the number of bytes
> received.
>
> If you want to take a look and/or try it yourself, I
> put it here:
>
> http://www.advanced-app.com.hk/MiscJunk/WebCat.py.tar.gz
>
> Those two URL's also hang my WebCat.py.  WebCat.py
> does work with other URL's.
>
>> (Many ISPs have transparent proxies these days,
>> *grrr*).
>
> I am definitely connecting through a proxy at the ISP.
>  Around here, that is what you get.
>
>> If you can still reproduce then a traffic capture
>> could be of use.
>
> How do I do that?
>
> Thanks,
>
> Rick

Looks like we're getting somewhere. Like I said, those URLs don't hang for  
me. So it would seem that either 1) Our clients are different (Twisted  
trunk, here), and yours is broken somehow. Or 2) The traffic your client  
is seeing is different than the traffic my client is seeing (Maybe due to  
a proxy, or some other network device). Or maybe both.

What OS? Any personal firewalls or security software running?

To do a traffic capture you will probably want to use WireShark. You can  
configure it to only capture port 80 traffic between you and the host in  
question. That should keep other extraneous traffic out of your capture.  
Please attach it to the ticket. Use "pcap" format, I guess.

Can you get wget, or some other HTTP client to work? If so please attach a  
capture of that exchange too.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From exarkun at twistedmatrix.com  Sun Jan 14 12:00:16 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Jan 2007 17:00:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1168794016.63.28677350@twistedmatrix.com

Bug summary
______________________
Summary for 2007-01-07 through 2007-01-14
Bugs opened: 39    Bugs closed: 21  Total open bugs: 825 (+18)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:      +15  |Highest:  +2          |Conch:               +1  
|Enhancement:  +6  |High:     -1          |Core:                +7  
|Task:         +0  |Normal:  +20          |Ftp:                 -1  
                                          |Release Management:  +4  
                                          |Trial:               +3  
                                          |Web:                 +6  
                                          |Website:             +0  
                                          |Words:               +1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2371] twisted.conch.stdio.runWithProtocol writes to non-blocking file descriptor incorrectly (opened by exarkun)
    defect          conch      http://twistedmatrix.com/trac/ticket/2371

[#2382] twisted/web/test/test_http.py uses backticks (opened by exarkun)
    defect          web        http://twistedmatrix.com/trac/ticket/2382

[#1951] twisted.plugin should use twisted.python.modules (opened by glyph) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1951

[#1951] twisted.plugin should use twisted.python.modules (opened by glyph) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1951

                    ===== High =====
[#2367] twisted.test.test_failure.FailureTestCase.testBrokenStr breaks trial in debug mode (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2367

[#2372] rename "twisted projects" to "dot products" (maybe?) (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2372

[#2393] [buildbot]windows remove pyc state should use  "del /s *.pyc" (opened by scmikes) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2393

                    ===== Normal =====
[#2368] twisted.python.versions is broken with svn 1.4 (opened by psino) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2368

[#2369] twisted.python.versions is broken with svn 1.4 (opened by psino) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2369

[#2370] Cannot create new milestones. (opened by ralphm)
    defect          website    http://twistedmatrix.com/trac/ticket/2370

[#2373] Add timeout support to xmlrpc.Proxy.callRemote (opened by abierbaum)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2373

[#2374] testOpenSSLBuffering fails intermittently on a dapper machine (running in vmware) because it uses reactor.iterate (opened by radix)
    defect          core       http://twistedmatrix.com/trac/ticket/2374

[#2375] these objects' docstrings are not proper epytext: (opened by radix)
    defect          core       http://twistedmatrix.com/trac/ticket/2375

[#2376] release-twisted should generate guides with links to API docs (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2376

[#2377] setup.py could be better when there are other Twisteds in PYTHONPATH (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2377

[#2378] Comment for t.test.test_process.SignalMixin is egregiously wrong (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/2378

[#2379] process-docs uses #!/bin/sh but uses non-POSIX shell features (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2379

[#2380] Make it possible to update the website with new documentation (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2380

[#2381] Twisted CMD box doesn't always work (win32) (opened by teratorn)
    defect          core       http://twistedmatrix.com/trac/ticket/2381

[#2383] twisted/web/woven/utils.py uses backticks (opened by exarkun)
    defect          web        http://twistedmatrix.com/trac/ticket/2383

[#2384] twisted/web/woven/widgets.py uses backticks (opened by exarkun)
    defect          web        http://twistedmatrix.com/trac/ticket/2384

[#2385] twisted.words irc server does not work with gaim (opened by glyph)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2385

[#2386] Change log timestamp callLater thing to be attached to factory instead of module (opened by itamarst)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2386

[#2387] Deprecate twisted.enterprise.row (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2387

[#2388] twisted.runner.procmon not even importable on windows (opened by seletz) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2388

[#2389] twisted.runner.procmon not even importable on windows (opened by seletz)
    defect          core       http://twistedmatrix.com/trac/ticket/2389

[#2390] RuntimeError: Visit the 'User Configuration' page and enter an email address before you create a ticket. (opened by seletz) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2390

[#2391] Twisted Conch setup.py gives its name as "Conch" instead of "Twisted Conch" (opened by exarkun)
    defect          release management http://twistedmatrix.com/trac/ticket/2391

[#2392] trial aborts abnormally if it encounters a TestCase.run which raises an exception (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2392

[#2394] probable typo in twisted.internet._posixstdio (opened by soyt) (CLOSED, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/2394

[#2395] twisted.plugin dropin.cache race condition (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/2395

[#2396] Change the document about twistd plugins to not redefine the word "TAP" (opened by radix) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2396

[#2397] missing attribute causing a traceback when running trial (opened by jacques) (CLOSED, duplicate)
    defect          trial      http://twistedmatrix.com/trac/ticket/2397

[#2398] missing attribute causing a traceback when running trial (opened by jacques) (CLOSED, invalid)
    defect          trial      http://twistedmatrix.com/trac/ticket/2398

[#2399] Windows installers include old, warning-ridden zope.interface (opened by moonfallen)
    defect          release management http://twistedmatrix.com/trac/ticket/2399

[#2400] Test that trac plugin no longer rejects changes when an email address is missing (opened by exarkun) (CLOSED, duplicate)
    task            core       http://twistedmatrix.com/trac/ticket/2400

[#2401] Test that trac plugin no longer rejects changes when an email address is missing (opened by exarkun) (CLOSED, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2401

[#2402] client.py crashes on URL's that would be no problem for most browsers (opened by Rick Graves)
    defect          web        http://twistedmatrix.com/trac/ticket/2402

[#2392] trial aborts abnormally if it encounters a TestCase.run which raises an exception (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2392



Closed Bugs
______________________
                    ===== Highest =====
[#1951] twisted.plugin should use twisted.python.modules (opened by glyph, closed by glyph, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1951

[#1951] twisted.plugin should use twisted.python.modules (opened by glyph, closed by glyph, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1951

[#1951] twisted.plugin should use twisted.python.modules (opened by glyph, closed by glyph, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1951

[#1566] Allow tickets to be submitted if user enters an email address in the "Your email or username" field (opened by exarkun, closed by exarkun, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1566

                    ===== High =====
[#2393] [buildbot]windows remove pyc state should use  "del /s *.pyc" (opened by scmikes, closed by teratorn, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2393

[#1378] iocpreactor WindowsError: (0, 'De bewerking is voltooid') (opened by ghazel, closed by teratorn, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1378

[#1872] Fix "remove .pycs" step on Win32 builders (opened by exarkun, closed by exarkun, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/1872

[#2333] Release Twisted 2.5 (opened by glyph, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2333

                    ===== Normal =====
[#2368] twisted.python.versions is broken with svn 1.4 (opened by psino, closed by ralphm, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2368

[#2369] twisted.python.versions is broken with svn 1.4 (opened by psino, closed by ralphm, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2369

[#2349] unify "download" page on the web site (opened by glyph, closed by radix, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2349

[#2388] twisted.runner.procmon not even importable on windows (opened by seletz, closed by seletz, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2388

[#2392] trial aborts abnormally if it encounters a TestCase.run which raises an exception (opened by exarkun, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/2392

[#2394] probable typo in twisted.internet._posixstdio (opened by soyt, closed by exarkun, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/2394

[#1794] protocols/ftp.py SenderProtocol doesn't implement IFInishableConsumer even though it claims it does (opened by thor, closed by therve, fixed)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1794

[#2396] Change the document about twistd plugins to not redefine the word "TAP" (opened by radix, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2396

[#2398] missing attribute causing a traceback when running trial (opened by jacques, closed by exarkun, invalid)
    defect          trial      http://twistedmatrix.com/trac/ticket/2398

[#2397] missing attribute causing a traceback when running trial (opened by jacques, closed by exarkun, duplicate)
    defect          trial      http://twistedmatrix.com/trac/ticket/2397

[#2401] Test that trac plugin no longer rejects changes when an email address is missing (opened by exarkun, closed by exarkun, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2401

[#2400] Test that trac plugin no longer rejects changes when an email address is missing (opened by exarkun, closed by exarkun, duplicate)
    task            core       http://twistedmatrix.com/trac/ticket/2400

[#2390] RuntimeError: Visit the 'User Configuration' page and enter an email address before you create a ticket. (opened by seletz, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2390





From foom at fuhm.net  Sun Jan 14 14:58:35 2007
From: foom at fuhm.net (James Y Knight)
Date: Sun, 14 Jan 2007 14:58:35 -0500
Subject: [Twisted-Python] poll reactor question
In-Reply-To: <149014b90701140826x3e211f3ck33735b15d81697d4@mail.gmail.com>
References: <149014b90701140826x3e211f3ck33735b15d81697d4@mail.gmail.com>
Message-ID: <0939AAFD-C5ED-45C3-8708-2DB1A61223A1@fuhm.net>


On Jan 14, 2007, at 11:26 AM, Christopher Zorn wrote:
>          File "/usr/lib/python2.3/site-packages/twisted/internet/ 
> pollreactor.py",
> line 141, in doPoll
>            for fd, event in l:
>        exceptions.OverflowError: long int too large to convert to int
>
>
> I looked in the tickets and could not find this. I am using twisted
> 2.4.0 and as you can see, python 2.3
>
> Does anyone know what this could be? It only happens with this  
> reactor.

I don't see how that could possibly happen. poller.poll() (which is  
what l was assigned to) returns a standard list instance, so there  
should be no long/int conversion going on at all in executing this  
'for' statement. However, since it apparently can happen, I don't see  
how it could possibly be twisted's fault. It looks more like a Python  
bug. What OS/version are you running on, and what's the exact python  
version?

James



From christopher.zorn at gmail.com  Sun Jan 14 15:47:32 2007
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Sun, 14 Jan 2007 15:47:32 -0500
Subject: [Twisted-Python] poll reactor question
In-Reply-To: <0939AAFD-C5ED-45C3-8708-2DB1A61223A1@fuhm.net>
References: <149014b90701140826x3e211f3ck33735b15d81697d4@mail.gmail.com>
	<0939AAFD-C5ED-45C3-8708-2DB1A61223A1@fuhm.net>
Message-ID: <149014b90701141247w77b272efnface5df9fe9d74a6@mail.gmail.com>

On 1/14/07, James Y Knight <foom at fuhm.net> wrote:
>
> On Jan 14, 2007, at 11:26 AM, Christopher Zorn wrote:
> >          File "/usr/lib/python2.3/site-packages/twisted/internet/
> > pollreactor.py",
> > line 141, in doPoll
> >            for fd, event in l:
> >        exceptions.OverflowError: long int too large to convert to int
> >
> >
> > I looked in the tickets and could not find this. I am using twisted
> > 2.4.0 and as you can see, python 2.3
> >
> > Does anyone know what this could be? It only happens with this
> > reactor.
>
> I don't see how that could possibly happen. poller.poll() (which is
> what l was assigned to) returns a standard list instance, so there
> should be no long/int conversion going on at all in executing this
> 'for' statement. However, since it apparently can happen, I don't see
> how it could possibly be twisted's fault. It looks more like a Python
> bug. What OS/version are you running on, and what's the exact python
> version?

I was thinking it may be a python problem. It is Debian Sarge and
Python 2.3.5 (#2, Oct 16 2006, 19:19:48) is the exact version or
python.



>
> James
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From gravesricharde at yahoo.com  Mon Jan 15 00:12:55 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Sun, 14 Jan 2007 21:12:55 -0800 (PST)
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <E1H68e4-0006YW-00@pyramid.twistedmatrix.com>
Message-ID: <564880.20144.qm@web37214.mail.mud.yahoo.com>

Eric,

I ran wget on the 2 URL's, and what I got may lead to
the root cause of the problem. 

Here is the end of what appeared in the terminal
window:

begin quote

--11:56:34--  http://www.theproxy.be/link.php
           => `link.php'
Connecting to www.theproxy.be|209.67.219.74|:80...
connected.
HTTP request sent, awaiting response... 301 Moved
Permanently
Location: http://www.theproxy.be/link.php [following]
20 redirections exceeded.

end quote

I assume this is a case of endless loop redirection.

I got this for both URL's.  The complete transcript
for both is here:

http://www.advanced-app.com.hk/MiscJunk/wget.txt

I am running kubuntu, "codenamed 'Dapper Drake'" ver.
6.06.  For this version, I get ethereal not WireShark.
 I installed ethereal before running wget, but I am
wondering whether wget might zero in on the problem. 
So I hope to find out before spending some time trying
to figure ethereal out.  

Also, I have ADSL service from different ISP's at home
and at the office.  These two URL's hang for me at the
office, but work OK for me at home.  (They would be
going through different ISP's and different proxies.)

I have not filed a bug report yet.  If the wget output
does in fact zero in on the problem, I will do so
right away.

Thanks,

Rick




From teratorn at twistedmatrix.com  Mon Jan 15 02:01:42 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Mon, 15 Jan 2007 01:01:42 -0600
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <564880.20144.qm@web37214.mail.mud.yahoo.com>
References: <564880.20144.qm@web37214.mail.mud.yahoo.com>
Message-ID: <op.tl6og4lcy3d107@office2>

On Sun, 14 Jan 2007 23:12:55 -0600, Rick Graves <gravesricharde at yahoo.com>  
wrote:

> Eric,
>
> I ran wget on the 2 URL's, and what I got may lead to
> the root cause of the problem.
>
> Here is the end of what appeared in the terminal
> window:
[...]
> I assume this is a case of endless loop redirection.
>
> I got this for both URL's.  The complete transcript
> for both is here:
>
> http://www.advanced-app.com.hk/MiscJunk/wget.txt
>
> I am running kubuntu, "codenamed 'Dapper Drake'" ver.
> 6.06.  For this version, I get ethereal not WireShark.
> I installed ethereal before running wget, but I am
> wondering whether wget might zero in on the problem.So I hope to find  
> out before spending some time trying
> to figure ethereal out. Also, I have ADSL service from different ISP's  
> at home
> and at the office.  These two URL's hang for me at the
> office, but work OK for me at home.  (They would be
> going through different ISP's and different proxies.)
>I have not filed a bug report yet.  If the wget output
> does in fact zero in on the problem, I will do so
> right away.
>Thanks,
>Rick

It definitely seems that your ISP is at fault. I just tried the URL with  
the addition of "/link.php" and that works fine, too. The fact that you  
can demonstrate the problem on one ISP but not the other makes the case  
pretty clear.

This, however, raises the question of whether downloadPage and friends  
ought to support a redirection limit, and whether such a limit should be  
set by default. In anyone actually wants to discuss this please start a  
new thread on the Twisted Web mailing list.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From therve at free.fr  Mon Jan 15 03:47:27 2007
From: therve at free.fr (therve at free.fr)
Date: Mon, 15 Jan 2007 09:47:27 +0100
Subject: [Twisted-Python] poll reactor question
In-Reply-To: <149014b90701141247w77b272efnface5df9fe9d74a6@mail.gmail.com>
References: <149014b90701140826x3e211f3ck33735b15d81697d4@mail.gmail.com>
	<0939AAFD-C5ED-45C3-8708-2DB1A61223A1@fuhm.net>
	<149014b90701141247w77b272efnface5df9fe9d74a6@mail.gmail.com>
Message-ID: <1168850847.45ab3f9f9e030@imp5-g19.free.fr>

Selon Christopher Zorn <christopher.zorn at gmail.com>:

> I was thinking it may be a python problem. It is Debian Sarge and
> Python 2.3.5 (#2, Oct 16 2006, 19:19:48) is the exact version or
> python.

Do you have a 64bits system ? Can you provide a full reproductible example ? Can
you try with a more recent version of Python and see if you still get the
problem ?

With a quick look, it seems it could come from this bug :
https://sourceforge.net/tracker/?func=detail&atid=105470&aid=1346533&group_id=5470,
but without further information it'd be hard to pronounce.

--
Thomas



From richard.wall at appliansys.com  Mon Jan 15 11:00:54 2007
From: richard.wall at appliansys.com (Richard Wall)
Date: Mon, 15 Jan 2007 16:00:54 +0000
Subject: [Twisted-Python] JOB OPPORTUNITY - ApplianSys - Coventry (UK)
Message-ID: <45ABA536.2040000@appliansys.com>

I am a Twisted enthusiast and support engineer working for a company 
called ApplianSys based in Coventry (UK), we develop *nix based hardware 
appliances.
http://www.appliansys.com/

This year we are planning a rapid expansion of our product range as well 
as updating our underlying software and hardware platform. As such, we 
need a Lead Developer and three Product Developers all of whom must be 
able to demonstrate a high level of competency in Python.

http://www.appliansys.com/company/company_10d.shtml
http://www.appliansys.com/company/company_10e.shtml

Twisted is not specifically mentioned in the job ads above, but we are 
advised by Dr Tim Couper, a EuroPython organiser / speaker and Twisted 
enthusiast that we should be using Buildbot for automated unit testing.
Twisted may be put to further use in the WebGUI and underlying 
configuration system.

In any case, I would say that Twisted developers tend to be the cream of 
the Python crop and if you know Twisted well and are prepared to work in 
Coventry, we would be very interested in talking to you.

Thanks.

-RichardW.
-- 
Richard Wall
Support Engineer
ApplianSys Ltd
(d) +44 (0)2476 430 091
(m) +44 (0)7980 805 418
(e) richard.wall at appliansys.com



From 6b6 at 21cn.com  Mon Jan 15 11:17:02 2007
From: 6b6 at 21cn.com (=?gb2312?B?weXS9A==?=)
Date: Tue, 16 Jan 2007 00:17:02 +0800
Subject: [Twisted-Python] test maillist
Message-ID: <Ls929883997991.17371@send5.inner-21cn.com>

twisted-python????

	test,test..

?????????
??
 				

??????????
????????6b6 at 21cn.com
??????????2007-01-16

From slowtech.chen at yahoo.com  Mon Jan 15 23:17:09 2007
From: slowtech.chen at yahoo.com (slowtech chen)
Date: Tue, 16 Jan 2007 04:17:09 +0000 (GMT)
Subject: [Twisted-Python] How can I mix the proxy function into a special
	protocol
Message-ID: <20070116041709.41331.qmail@web59112.mail.re1.yahoo.com>

Hi guys,

I tried to do this with multiple inheritances:

class MyProxyServer(basic.Int32StringReceiver, ProxyServer):
    def dataReceived(self, data):        
        basic.Int32StringReceiver.dataReceived(self, data)      
        ProxyServer.dataReceived(self, data)

but I got the following errors:

    self.peer.transport.write(data)
exceptions.AttributeError: 'NoneType' object has no attribute 'transport'

why the setPeer method of ProxyServer isn't called here?  Are there any better solutions for this problem?
Thanks.

Best,
Chen









 
____________________________________________________________________________________
No need to miss a message. Get email on-the-go 
with Yahoo! Mail for Mobile. Get started.
http://mobile.yahoo.com/mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070116/1b03f894/attachment.htm 

From martin at browns.co.uk  Tue Jan 16 04:09:29 2007
From: martin at browns.co.uk (Martin Evans)
Date: Tue, 16 Jan 2007 09:09:29 +0000
Subject: [Twisted-Python] Server authentication
Message-ID: <200701160909.l0G99YBL001458@brownix.browns.co.uk>


I'm currently implementing a proprietary set of protocols for 
interacting with twisted running on a Microsoft server. All is 
working fine so far using the basic line receiver / raw methods.

I was hoping to add a form of authentication to the protocol. Is 
there anyway to interact with the existing accounts on the server?

The client wishes to make use of some of the lock down facilities 
based on the Microsoft Server accounts. ie in the same way MS Telnet 
server allows you to logon and then be taken to your own folder. I 
have taken a quick look at the cred module but have not seen anything 
suitable yet.

I am currently running "python twistd.py -y myserver.nac"

If such a module has not been developed, I assume I could develop a C 
extension module of some sort.

Any pointers would be a appreciated. Thanks.

Martin





From exarkun at divmod.com  Tue Jan 16 09:06:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 16 Jan 2007 09:06:21 -0500
Subject: [Twisted-Python] How can I mix the proxy function into a special
	protocol
In-Reply-To: <20070116041709.41331.qmail@web59112.mail.re1.yahoo.com>
Message-ID: <20070116140621.11447.147155516.divmod.quotient.18549@ohm>

On Tue, 16 Jan 2007 04:17:09 +0000 (GMT), slowtech chen <slowtech.chen at yahoo.com> wrote:
>Hi guys,
>
>I tried to do this with multiple inheritances:
>
>class MyProxyServer(basic.Int32StringReceiver, ProxyServer):
>    def dataReceived(self, data):
>        basic.Int32StringReceiver.dataReceived(self, data)
>        ProxyServer.dataReceived(self, data)
>
>but I got the following errors:
>
>    self.peer.transport.write(data)
>exceptions.AttributeError: 'NoneType' object has no attribute 'transport'
>
>why the setPeer method of ProxyServer isn't called here?  Are there any better solutions for this problem?

Probably because you didn't call it.  Anyhow, I wouldn't suggest doing this,
anyway.  ProxyServer is all of about 10 lines long.  It takes about as much
code to import, subclass, and upcall to it as it would take to implement
yourself.  Generally I wouldn't recommend re-implementing something which
already exists, but there's so little code involved here and ProxyServer isn't
really intended to be subclassed like this.

Jean-Paul



From lee.a.connell at gmail.com  Tue Jan 16 17:46:46 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Tue, 16 Jan 2007 17:46:46 -0500
Subject: [Twisted-Python] Server authentication
In-Reply-To: <200701160909.l0G99YBL001458@brownix.browns.co.uk>
References: <200701160909.l0G99YBL001458@brownix.browns.co.uk>
Message-ID: <003c01c739c0$341da2d0$0400a8c0@leelaptop>

So you need to access Active Directory?  Would ldap module help you with
this?  How bout the pywin32 extensions, anything in there that will help
with authenticating against local or domain accounts?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Martin Evans
Sent: Tuesday, January 16, 2007 4:09 AM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Server authentication


I'm currently implementing a proprietary set of protocols for 
interacting with twisted running on a Microsoft server. All is 
working fine so far using the basic line receiver / raw methods.

I was hoping to add a form of authentication to the protocol. Is 
there anyway to interact with the existing accounts on the server?

The client wishes to make use of some of the lock down facilities 
based on the Microsoft Server accounts. ie in the same way MS Telnet 
server allows you to logon and then be taken to your own folder. I 
have taken a quick look at the cred module but have not seen anything 
suitable yet.

I am currently running "python twistd.py -y myserver.nac"

If such a module has not been developed, I assume I could develop a C 
extension module of some sort.

Any pointers would be a appreciated. Thanks.

Martin



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.12/631 - Release Date: 1/16/2007
8:25 AM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.12/631 - Release Date: 1/16/2007
8:25 AM
 




From ellisonbg.net at gmail.com  Tue Jan 16 19:08:14 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 16 Jan 2007 17:08:14 -0700
Subject: [Twisted-Python] Hanging Deferreds in PB Paging code
Message-ID: <6ce0ac130701161608p1bbac74duca13915a5ef0bde2@mail.gmail.com>

Hi,

We are using PB as an initial protocol for some IPython related stuff.
 Overall, PB is working well, but we need to be able to send larger
things around so we have been trying to implement things using the
pb.util.Pager stuff.  I have spent a fair amount of time understanding
how the Paging works.

Now the fun part.  I have have two versions of our methods - one that
uses Paging and one that doesn't.  I am using trial to test these
methods.  The test passes for the non-Paging version, but not for the
Paging version.  The problem with the Paging version it seems is that
there are still unanswered PB requests (and associated Deferreds) that
haven't completed when my tearDown method is run.  Thus I see errors
like:

===============================================================================
[ERROR]: ipython1.test.test_enginepb.EnginePBTest.testSimplePushPull

Traceback (most recent call last):
Failure: twisted.spread.pb.PBConnectionLost: [Failure instance:
Traceback (failure with no frames):
twisted.internet.error.ConnectionDone: Connection was closed cleanly.

which indicates that the connection was closed before all PB requests
had finished.

We have written lots of unittests using trial so we are _very_ used to
making sure our Deferreds are cleaned up properly in tests.  It
appears that the problem is coming from this code in twisted.pb:

    def resumeProducing(self):
        """Called when the consumer attached to me runs out of buffer.
        """
        # Go backwards over the list so we can remove indexes from it as we go
        for pageridx in xrange(len(self.pageProducers)-1, -1, -1):
            pager = self.pageProducers[pageridx]
            pager.sendNextPage()
            if not pager.stillPaging():
                del self.pageProducers[pageridx]
        if not self.pageProducers:
            self.transport.unregisterProducer()

Both the pager.sendNextPage and pager.stillPaging calls invoke PB
calls to the other side.  But, notice that the Deferreds for these
calls are not dealt with in any way.  Thus there is no promise that
these PB requests have finished by the time the actual paged data has
been received and passed down the callback chain the completes the
Paged send (and test).

My overall feeling is that the Paging mechanism in PB in not used that
much and that I am likely running into uncharted territory/problems
with the underlying implementation.  We are trying to decide if we
should continue to struggle with this or just move on to using a
different protocol that is better suited to streaming large objects
(such as http/1.1).

Any thoughts on this dillema?

Thanks

Brian Granger



From orlenko at gmail.com  Tue Jan 16 21:19:51 2007
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Tue, 16 Jan 2007 18:19:51 -0800
Subject: [Twisted-Python] Server authentication
In-Reply-To: <200701160909.l0G99YBL001458@brownix.browns.co.uk>
References: <200701160909.l0G99YBL001458@brownix.browns.co.uk>
Message-ID: <45AD87C7.4060502@gmail.com>

Hi Martin,

To delegate user authentication to Windows, you can use win32security 
module.

from win32security import LogonUser, LOGON32_LOGON_NETWORK, 
LOGON32_PROVIDER_DEFAULT
from win32security import error as LogonError

def validate_password(username, domain, password):
    try:
        if LogonUser(username,
                     domain,
                     password,
                     LOGON32_LOGON_NETWORK,
                     LOGON32_PROVIDER_DEFAULT):
            print 'Yes!'
            return True
        else:
            print 'No'
    except LogonError, e:
        print 'No:', e
    return False

To use LogonUser(), calling process needs to have some special 
privileges, at least on Win2K. If I remember correctly, SE_TCB_NAME is 
required.

Hope this helps,
Volodymyr


Martin Evans wrote:
>
> I'm currently implementing a proprietary set of protocols for 
> interacting with twisted running on a Microsoft server. All is working 
> fine so far using the basic line receiver / raw methods.
>
> I was hoping to add a form of authentication to the protocol. Is there 
> anyway to interact with the existing accounts on the server?
>
> The client wishes to make use of some of the lock down facilities 
> based on the Microsoft Server accounts. ie in the same way MS Telnet 
> server allows you to logon and then be taken to your own folder. I 
> have taken a quick look at the cred module but have not seen anything 
> suitable yet.
>
> I am currently running "python twistd.py -y myserver.nac"
>
> If such a module has not been developed, I assume I could develop a C 
> extension module of some sort.
>
> Any pointers would be a appreciated. Thanks.
>
> Martin
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From sethia.vishal at gmail.com  Wed Jan 17 13:31:50 2007
From: sethia.vishal at gmail.com (Vishal Sethia)
Date: Wed, 17 Jan 2007 10:31:50 -0800
Subject: [Twisted-Python] Implementing parseargs or getopt using twisted
	trial
Message-ID: <2ee048b40701171031qf28fdf4wc8a99a33269366be@mail.gmail.com>

Hi,

How do I implement user defined command line options in addition to the
default switches that are available while running twisted trial.  For ex. if
I have my own py file which I execute using the python compiler has the
following line of code to support several command line options, how do I
achieve this using twisted trial

For eg,
    for o,a in opts:
        if o == "-d":
            debug = 1
        if o in ["-h","--help"]:
            Usage()
            sys.exit(2)
        if o in ["-c","--configfile"]:
            if debug:
            config_file = a
        if o in ["-f","--factory"]:
            flash="FALSE"
        if o in ["-o","--output"]:
            log_file = file(a,"w")


Any pointers would be greatly appreciated.
Thanks,

-- V
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070117/206b151d/attachment.htm 

From exarkun at divmod.com  Wed Jan 17 14:51:37 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 17 Jan 2007 14:51:37 -0500
Subject: [Twisted-Python] Implementing parseargs or getopt using twisted
	trial
In-Reply-To: <2ee048b40701171031qf28fdf4wc8a99a33269366be@mail.gmail.com>
Message-ID: <20070117195137.11447.6200390.divmod.quotient.19914@ohm>

On Wed, 17 Jan 2007 10:31:50 -0800, Vishal Sethia <sethia.vishal at gmail.com> wrote:
>Hi,
>
>How do I implement user defined command line options in addition to the
>default switches that are available while running twisted trial.  For ex. if
>I have my own py file which I execute using the python compiler has the
>following line of code to support several command line options, how do I
>achieve this using twisted trial

This isn't supported.  So, the way you achieve it is by modifying the
trial script and submitting a patch to Twisted. :)

Additionally, Options in Twisted programs are typically parsed using
twisted.python.usage, not getopt or optparse or argparse or getarg or
argopt or optarg.

Jean-Paul



From jarrod at vertigrated.com  Wed Jan 17 17:18:13 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 17 Jan 2007 17:18:13 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
Message-ID: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>

I we have a basic twisted server that we have doing nothing but dropping
received bits on the floor, and sending back a static response.

We have tested it on a Solaris 10 on a Sun T1000 ( 8 cores ) and on Solaris
8 on a Sun V210.
We did initial load testing on a Dell 2850 ( 2 Hyperthreaded P4's ) using
Red Hat WS 3 (Taroon Update 4) / (  Linux 2.4.21-27.ELsmp )

The Solaris boxes are all showing latency 5 times what we are seeing on the
Dell 2850 with 1/5 as many clients to boot.

On the Dell 2850 ( linux thinks it is a quad processor box ) our Twisted
server is more Network I/O bound than CPU bound until we get to around 800 -
900 clients, latency is manageable all the way up to about 1400 clients, at
which time they start getting progressively worse.

All the Sparc boxes start out CPU bound at about 200 clients and latencies
are way worse than Linux with 1400 clients.

The only Solaris 10 x86 box we have to test on is so old it is almost
impossible to compare to even the Dell 2850. :-(

We are using Python 2.4.4 and Twisted 2.4.0 using the poll reactor in all
cases.

Anyone have any idea why we are seeing such poor performance on Solaris?
Is it the Sparc hardware?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070117/39d32688/attachment.htm 

From ppergame at gmail.com  Wed Jan 17 17:32:13 2007
From: ppergame at gmail.com (Pavel Pergamenshchik)
Date: Wed, 17 Jan 2007 14:32:13 -0800
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
References: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
Message-ID: <4a5c1b500701171432j31ba8884n7aa7ad202f76d206@mail.gmail.com>

On 1/17/07, Jarrod Roberson <jarrod at vertigrated.com> wrote:
>
> I we have a basic twisted server that we have doing nothing but dropping
> received bits on the floor, and sending back a static response.


 Post your code somewhere. Perhaps you are doing something horribly wrong.

Anyone have any idea why we are seeing such poor performance on Solaris?
> Is it the Sparc hardware?


Sparc processors aren't exactly well known for their blazing speed. Try a
trivial CPU benchmark like hashcash. The Sparc box might be better at
concurrency, but your Twisted benchmark is probably not using multiple CPUs.

Also, Twisted 2.5 includes an epoll reactor. It should scale considerably
better than poll, but you need a 2.6 Linux kernel for it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070117/46222b4a/attachment.htm 

From exarkun at divmod.com  Wed Jan 17 17:37:19 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 17 Jan 2007 17:37:19 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	than Linux?
In-Reply-To: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
Message-ID: <20070117223719.11447.1130993531.divmod.quotient.20054@ohm>

On Wed, 17 Jan 2007 17:18:13 -0500, Jarrod Roberson <jarrod at vertigrated.com> wrote:
>I we have a basic twisted server that we have doing nothing but dropping
>received bits on the floor, and sending back a static response.
>
>We have tested it on a Solaris 10 on a Sun T1000 ( 8 cores ) and on Solaris
>8 on a Sun V210.
>We did initial load testing on a Dell 2850 ( 2 Hyperthreaded P4's ) using
>Red Hat WS 3 (Taroon Update 4) / (  Linux 2.4.21-27.ELsmp )
>
>The Solaris boxes are all showing latency 5 times what we are seeing on the
>Dell 2850 with 1/5 as many clients to boot.
>
>On the Dell 2850 ( linux thinks it is a quad processor box ) our Twisted
>server is more Network I/O bound than CPU bound until we get to around 800 -
>900 clients, latency is manageable all the way up to about 1400 clients, at
>which time they start getting progressively worse.
>
>All the Sparc boxes start out CPU bound at about 200 clients and latencies
>are way worse than Linux with 1400 clients.
>
>The only Solaris 10 x86 box we have to test on is so old it is almost
>impossible to compare to even the Dell 2850. :-(
>
>We are using Python 2.4.4 and Twisted 2.4.0 using the poll reactor in all
>cases.
>
>Anyone have any idea why we are seeing such poor performance on Solaris?
>Is it the Sparc hardware?
>

I don't have any specific experience with Twisted on Sparc hardware, but
one thing I'll point out is that Twisted is single threaded.  Whether there
are 4 cores or 8 probably won't make any noticable difference to a Twisted
application's performance.

It looks like a single core on a T1000 is much less powerful than a single
core in a Dell 2850, so this might account for some of the difference.

Jean-Paul



From jarrod at vertigrated.com  Wed Jan 17 17:55:34 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 17 Jan 2007 17:55:34 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <20070117223719.11447.1130993531.divmod.quotient.20054@ohm>
References: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
	<20070117223719.11447.1130993531.divmod.quotient.20054@ohm>
Message-ID: <fa3d0c740701171455h219db31coe985f68e5bc892d0@mail.gmail.com>

On 1/17/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>
> I don't have any specific experience with Twisted on Sparc hardware, but
> one thing I'll point out is that Twisted is single threaded.  Whether
> there
> are 4 cores or 8 probably won't make any noticable difference to a Twisted
> application's performance.
>
> It looks like a single core on a T1000 is much less powerful than a single
> core in a Dell 2850, so this might account for some of the difference.
>
> Jean-Paul



This is the conclusion we are coming to as well.
We found a Dual Dual Core Opteron box with Solaris 10 x86 on it.
The Opteron box was even faster than the Dual P4 box.
So we have pretty much ruled out Solaris as the problem, everything points
to sucky performance of the Sparc hardware.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070117/60214eb7/attachment.htm 

From fperez.net at gmail.com  Wed Jan 17 18:16:41 2007
From: fperez.net at gmail.com (Fernando Perez)
Date: Wed, 17 Jan 2007 16:16:41 -0700
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <fa3d0c740701171455h219db31coe985f68e5bc892d0@mail.gmail.com>
References: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
	<20070117223719.11447.1130993531.divmod.quotient.20054@ohm>
	<fa3d0c740701171455h219db31coe985f68e5bc892d0@mail.gmail.com>
Message-ID: <db6b5ecc0701171516uaf84c93jcf7dde9952b29dd1@mail.gmail.com>

> On 1/17/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> > It looks like a single core on a T1000 is much less powerful than a single
> > core in a Dell 2850, so this might account for some of the difference.

That is precisely the case.  A quote

Obviously, the UltraSparc T1 will perform quite poorly on workloads
that require single-threaded performance. For those types of
non-multithreaded workloads, Sun will rely for the time being on its
Opteron-powered Galaxy server line. In 2008, however, Sun plans to
release a new design codenamed "Rock" with better single-threaded
performance.

taken from http://arstechnica.com/news.ars/post/20051114-5569.html

You can find a bit more info here:

http://arstechnica.com/news.ars/post/20051116-5584.htm

This Sun hardware is built /specifically/ for running /highly/
multithreaded code, it has always sucked royally at single-threaded
performance, this was very much a design decision.

Cheers,

f



From jarrod at vertigrated.com  Wed Jan 17 18:35:10 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 17 Jan 2007 18:35:10 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <db6b5ecc0701171516uaf84c93jcf7dde9952b29dd1@mail.gmail.com>
References: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
	<20070117223719.11447.1130993531.divmod.quotient.20054@ohm>
	<fa3d0c740701171455h219db31coe985f68e5bc892d0@mail.gmail.com>
	<db6b5ecc0701171516uaf84c93jcf7dde9952b29dd1@mail.gmail.com>
Message-ID: <fa3d0c740701171535q2b7cbcc4v98e49b205271e5e3@mail.gmail.com>

On 1/17/07, Fernando Perez <fperez.net at gmail.com> wrote:
>
> > On 1/17/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> > > It looks like a single core on a T1000 is much less powerful than a
> single
> > > core in a Dell 2850, so this might account for some of the difference.
>
> That is precisely the case.  A quote
>
> Obviously, the UltraSparc T1 will perform quite poorly on workloads
> that require single-threaded performance. For those types of
> non-multithreaded workloads, Sun will rely for the time being on its
> Opteron-powered Galaxy server line. In 2008, however, Sun plans to
> release a new design codenamed "Rock" with better single-threaded
> performance.
>
> taken from http://arstechnica.com/news.ars/post/20051114-5569.html
>
> You can find a bit more info here:
>
> http://arstechnica.com/news.ars/post/20051116-5584.htm
>
> This Sun hardware is built /specifically/ for running /highly/
> multithreaded code, it has always sucked royally at single-threaded
> performance, this was very much a design decision.


There is a "backend" C module that our Twisted server front ends, and it is
highly multi-threaded.
So the T1000 is PERFECT for our application, except that now Twisted is the
bottleneck. :-(

Unfortunately we have a 11th hour constraint of a vendor library that we are
required to use, it is only available on Sparc Solaris.

So we either scrap our Twisted implementation and have to spend extra time
on another network handling layer, or run 5 times as many instances of our
server to service the same number of concurrent clients.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070117/555b750f/attachment.htm 

From fperez.net at gmail.com  Wed Jan 17 18:41:16 2007
From: fperez.net at gmail.com (Fernando Perez)
Date: Wed, 17 Jan 2007 16:41:16 -0700
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <fa3d0c740701171535q2b7cbcc4v98e49b205271e5e3@mail.gmail.com>
References: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
	<20070117223719.11447.1130993531.divmod.quotient.20054@ohm>
	<fa3d0c740701171455h219db31coe985f68e5bc892d0@mail.gmail.com>
	<db6b5ecc0701171516uaf84c93jcf7dde9952b29dd1@mail.gmail.com>
	<fa3d0c740701171535q2b7cbcc4v98e49b205271e5e3@mail.gmail.com>
Message-ID: <db6b5ecc0701171541v2e96c2ebkfb37662a750c7442@mail.gmail.com>

On 1/17/07, Jarrod Roberson <jarrod at vertigrated.com> wrote:

>  There is a "backend" C module that our Twisted server front ends, and it is
> highly multi-threaded.
> So the T1000 is PERFECT for our application, except that now Twisted is the
> bottleneck. :-(
>
> Unfortunately we have a 11th hour constraint of a vendor library that we are
> required to use, it is only available on Sparc Solaris.

Bummer.  It sounds like you have a slightly toxic combination of
constraints between the software (highly MT backend + single-threaded
Twisted) and your hardware (T1000, tuned for MT code).  Unpleasant...

Cheers,

f



From glyph at divmod.com  Wed Jan 17 19:09:47 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 18 Jan 2007 00:09:47 -0000
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
Message-ID: <20070118000947.17094.845374243.divmod.xquotient.2559@joule.divmod.com>

On 11:35 pm, jarrod at vertigrated.com wrote:

>There is a "backend" C module that our Twisted server front ends, and it is
>highly multi-threaded.
>So the T1000 is PERFECT for our application, except that now Twisted is the
>bottleneck. :-(

This seems odd to me.

If all the CPUs are going to be busy doing a multi-threaded back-end's work, and Twisted is just doing the I/O, then it seems the T1000 would still be a benefit.  The benchmark you mentioned was completely static; there was no backend library, no multithreaded CPU load.  Is the performance disparity similar when you're running actual workloads?

Sure, Twisted isn't going to be able to dole out as much work as something optimized to balance the I/O management CPU across N+1 cores; but if those cores are going to be busy anyway in realistic use, then presumably having Twisted contending for all of them wouldn't be much of a performance boost.

I actually do have a little experience with Twisted-*like* software on Solaris, although not Twisted itself.  The proprietary system which originally inspired Twisted's networking core was actually designed to run on Solaris, and took Sparc hardware advantages into account.  It still ran all of its I/O in a single thread.

>So we either scrap our Twisted implementation and have to spend extra time
>on another network handling layer, or run 5 times as many instances of our
>server to service the same number of concurrent clients.

Congratulations.  For years, I've been warning people that Twisted cannot transparently take full advantage of vertical scaling with SMP.  While I've heard a lot of uninformed whinging about how this is a huge problem, you are the first person to report an actual performance problem related to that fact :).

Running 5 times as many instances of the server does make sense, and shouldn't have a significant downside.  The parallelism strategy I've used pretty much everywhere is multiprocessing rather than multithreading, and it works well.

If the issue is that you don't want to have that many different open ports on each machine, would it be possible to have a small front-end server accept()ing and sending sockets to N+1 (where N is the number of cores) other Twisted processes?  I don't know how this might be accomplished on solaris, but if it's possible, it should be transparent to the clients and let Twisted itself take advantage of the hardware.  It would take some work, but not as much as a rewrite.

Again, it seems weird to me that this is necessary if the back-end library is really utilizing all the CPUs already and you are not I/O bound.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070118/6e05a7fe/attachment.htm 

From jarrod at vertigrated.com  Wed Jan 17 20:59:19 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 17 Jan 2007 20:59:19 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <20070118000947.17094.845374243.divmod.xquotient.2559@joule.divmod.com>
References: <20070118000947.17094.845374243.divmod.xquotient.2559@joule.divmod.com>
Message-ID: <fa3d0c740701171759la246fa6i48c185f3d7ab7c3d@mail.gmail.com>

On 1/17/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 11:35 pm, jarrod at vertigrated.com wrote:
>
> >There is a "backend" C module that our Twisted server front ends, and it
> is
> >highly multi-threaded.
> >So the T1000 is PERFECT for our application, except that now Twisted is
> the
> >bottleneck. :-(
>
> This seems odd to me.
>
> If all the CPUs are going to be busy doing a multi-threaded back-end's
> work, and Twisted is just doing the I/O, then it seems the T1000 would still
> be a benefit.  The benchmark you mentioned was completely static; there was
> no backend library, no multithreaded CPU load.  Is the performance disparity
> similar when you're running actual workloads?
>

snipped a  lot of good information :-)

Again, it seems weird to me that this is necessary if the back-end library
> is really utilizing all the CPUs already and you are not I/O bound.
>

Here is what we are doing basically.

Twisted takes in data and in a C extension we send the data to multiple
backends in parallel to do processing on it.
Then we aggregate the results and send information back to the client.
This is basically a fancy proxy that parallelizes and distributes work to
other machines on the network.
All the clients run in "keep-alive" mode, so they don't create new
connections for each piece of work they send to the system, so
once they are all connected, they stay connected for their lifetime ( long
time ).

On the Dell 2850's without any backend code, we see 600ms latency with a
test suite of 400 clients.
With the Solaris SPARC machines T1000 and V210 we see 4000 - 5000 ms latency
with the same no-op code and the same 400 clients.

With the backend code we see about an additional 250ms latency on both
platforms, since the "backend" code is just taking the data and sending it
out across the network to process, it just sits waiting on responses. The
backend code is just not doing enough work to stress the machine basically.

We have LOTS and LOTS of test harness code and profiling code to pinpoint
where bottlenecks are. We are going to have process a couple of terabytes a
day thru this system. Latency thru the system is a high priority because of
what kind of system it is.

We can get up to about 1400 clients on the Dell 2850 hardware before latency
starts climbing out of control.
The SPARC hardware is falling over at 400 clients :-(

Thanks to everyone for all the ideas and help.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070117/c8713457/attachment.htm 

From gravesricharde at yahoo.com  Thu Jan 18 01:39:38 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Wed, 17 Jan 2007 22:39:38 -0800 (PST)
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
Message-ID: <197789.58926.qm@web37215.mail.mud.yahoo.com>

Eric,

I ran wget on the 2 URL's, and what I got may lead to
the root cause of the problem. 

Here is the end of what appeared in the terminal
window:

begin quote

--11:56:34--  http://www.theproxy.be/link.php
           => `link.php'
Connecting to www.theproxy.be|209.67.219.74|:80...
connected.
HTTP request sent, awaiting response... 301 Moved
Permanently
Location: http://www.theproxy.be/link.php [following]
20 redirections exceeded.

end quote

I assume this is a case of endless loop redirection.

I got this for both URL's.  The complete transcript
for both is here:

http://www.advanced-app.com.hk/MiscJunk/wget.txt

I am running kubuntu, "codenamed 'Dapper Drake'" ver.
6.06.  For this version, I get ethereal not WireShark.
 I installed ethereal before running wget, but I am
wondering whether wget might zero in on the problem.
So I hope to find out before spending some time trying
to figure ethereal out.  

Also, I have ADSL service from different ISP's at home
and at the office.  These two URL's hang for me at the
office, but work OK for me at home.  (They would be
going through different ISP's and different proxies.)

I have not filed a bug report yet.  If the wget output
does in fact zero in on the problem, I will do so
right away.

This is a resend -- see below.  I sent this content on
Sunday, but it never came back to me on the mailing
list.

Thanks,

Rick


--- Rick Graves <gravesricharde at yahoo.com> wrote:

> Date: Sun, 14 Jan 2007 21:12:55 -0800 (PST)
> From: Rick Graves <gravesricharde at yahoo.com>
> Subject: Re: [Twisted-Python] client, deferred
> and/or reactor hung on these 2 URL's
> To: twisted-python at twistedmatrix.com
> 
> Eric,
> 
> I ran wget on the 2 URL's, and what I got may lead
> to
> the root cause of the problem. 
> 
{snip}




From martin at browns.co.uk  Thu Jan 18 02:40:53 2007
From: martin at browns.co.uk (Martin Evans)
Date: Thu, 18 Jan 2007 07:40:53 +0000
Subject: [Twisted-Python] Server authentication
In-Reply-To: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
Message-ID: <200701180741.l0I7exvl016854@brownix.browns.co.uk>


Many thanks to Volodymyr and Lee for the authentication pointers, 
both the ldap and win32security modules look like suitable 
candidates. At the end of the day it is whatever the client decides 
so it is great to have these alternatives.

Martin




From lee.a.connell at gmail.com  Thu Jan 18 07:36:18 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Thu, 18 Jan 2007 07:36:18 -0500
Subject: [Twisted-Python] Server authentication
In-Reply-To: <200701180741.l0I7exvl016854@brownix.browns.co.uk>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
	<200701180741.l0I7exvl016854@brownix.browns.co.uk>
Message-ID: <000c01c73afd$40e47780$0400a8c0@leelaptop>

Martin,

Glad you have a solution, I think Volodymyr's example would fit you better,
I have not used the module, but maybe Volodymyr can reply on this, but you
will probably want to get the users home directory once successfully logged
in as well as the groups the user belongs too.  I'm sure pywin32 extensions
will allow this.

Is win32security part of pywin32 extensions?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Martin Evans
Sent: Thursday, January 18, 2007 2:41 AM
To: twisted-python at twistedmatrix.com
Subject: RE: [Twisted-Python] Server authentication


Many thanks to Volodymyr and Lee for the authentication pointers, 
both the ldap and win32security modules look like suitable 
candidates. At the end of the day it is whatever the client decides 
so it is great to have these alternatives.

Martin


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.13/634 - Release Date: 1/17/2007
4:45 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.13/634 - Release Date: 1/17/2007
4:45 PM
 




From glyph at divmod.com  Thu Jan 18 07:38:00 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 18 Jan 2007 12:38:00 -0000
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
Message-ID: <20070118123800.17094.33278340.divmod.xquotient.2894@joule.divmod.com>

On 01:59 am, jarrod at vertigrated.com wrote:

>We have LOTS and LOTS of test harness code and profiling code to pinpoint
>where bottlenecks are. We are going to have process a couple of terabytes a
>day thru this system. Latency thru the system is a high priority because of
>what kind of system it is.

If you do manage to keep Twisted in the loop on this project, please share what strategy you used.  It is unfortunately rare that Twisted is itself a really performance-critical component of any system (especially a highly parallel system), so information about optimization is hard to find.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070118/3dacbb45/attachment.htm 

From dreid at dreid.org  Thu Jan 18 13:38:13 2007
From: dreid at dreid.org (David Reid)
Date: Thu, 18 Jan 2007 10:38:13 -0800
Subject: [Twisted-Python] Twisted sprint at SuperHappyDevHouse15?
References: <1169101008.113659.161150@l53g2000cwa.googlegroups.com>
Message-ID: <37187CE7-4383-4EDB-830D-FD980EB25D64@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Is anyone in the bay area (or willing to come to the bay area)  
interested in sprinting on Twisted at Super Happy Dev House 15?

- -David

Begin forwarded message:

> From: tomicles at gmail.com
> Date: January 17, 2007 10:16:48 PM PST
> To: "SuperHappyDevHouse Announcements" <SHDH- 
> Announce at googlegroups.com>
> Subject: [SHDH] SuperHappyDevHouse15!
> Reply-To: tomicles at gmail.com
> List-Id: <SHDH-Announce.googlegroups.com>
>
>
> You're Invited!  SuperHappyDevHouse15 has been scheduled and will take
> place at our south bay location in Los Gatos on February 3rd from  
> 1pm ~
> 2am.  Bring your laptop, your hacker friends and some snacks or drinks
> to share.  More information can be found on our site and you can RSVP
> on upcoming, both linked below.
>
> http://shdh.org
> http://upcoming.org/event/141406/
>
> -The Dev House Team
>
>
> --~--~---------~--~----~------------~-------~--~----~
> You received this message because you are subscribed to the Google  
> Groups "SuperHappyDevHouse Announcements" group.
> To post to this group, send email to SHDH-Announce at googlegroups.com
> To unsubscribe from this group, send email to SHDH-Announce- 
> unsubscribe at googlegroups.com
> For more options, visit this group at http://groups.google.com/ 
> group/SHDH-Announce?hl=en
> -~----------~----~----~----~------~----~------~--~---
>

David Reid
http://dreid.org/


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (Darwin)

iD8DBQFFr76arsrO6aeULcgRAkX+AKCex6BFZ5ChywpbFDiaA2mDxR4A0gCbBg+0
02YgFdEiJIUuvj28ULnMbSk=
=VxTs
-----END PGP SIGNATURE-----



From orlenko at gmail.com  Thu Jan 18 15:12:32 2007
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Thu, 18 Jan 2007 12:12:32 -0800
Subject: [Twisted-Python] Server authentication
In-Reply-To: <000c01c73afd$40e47780$0400a8c0@leelaptop>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>	<200701180741.l0I7exvl016854@brownix.browns.co.uk>
	<000c01c73afd$40e47780$0400a8c0@leelaptop>
Message-ID: <45AFD4B0.7080001@gmail.com>

Hi Lee,

Yes, win32security is a part of pywin32 extensions.

According to MSDN, you may be able to get user's directory by using 
win32net.NetUserGetInfo:

Calling win32net.NetUserGetInfo(None, 'test_user', 1) returns a dictionary:
{'comment': u'',
 'flags': 513,
 'home_dir': u'',
 'name': u'test_user',
 'password': None,
 'password_age': 324,
 'priv': 1,
 'script_path': u''}

In my case, home_dir is empty. This sucks, so I tried a different way:

from win32com.shell import shellcon, shell
path = shell.SHGetFolderPath(0, shellcon.CSIDL_APPDATA, 0, 0)

In this case, path is u'C:\\Documents and Settings\\<My 
Username>\\Application Data'. To get other users' data directories, you 
can either cheat and simply replace <My Username> with their usernames, 
or go the whole way honestly: get user's access token (I guess by 
impersonating him), and pass the token to the SHGetFolderPath function.

There's also a way to query Active Directory through LDAP, but it does 
not help much in my case:
 >>> adsi = win32com.client.Dispatch('ADSystemInfo')
 >>> u = win32com.client.GetObject('LDAP://%s' % adsi.UserName)
 >>> print u.homeDirectory
None

I guess the NetUserGetInfo and the LDAP methods rely on info in 
ActiveDirectory, which may or may not be present.

Volodymyr


Lee Connell wrote:
> Martin,
>
> Glad you have a solution, I think Volodymyr's example would fit you better,
> I have not used the module, but maybe Volodymyr can reply on this, but you
> will probably want to get the users home directory once successfully logged
> in as well as the groups the user belongs too.  I'm sure pywin32 extensions
> will allow this.
>
> Is win32security part of pywin32 extensions?
>
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Martin Evans
> Sent: Thursday, January 18, 2007 2:41 AM
> To: twisted-python at twistedmatrix.com
> Subject: RE: [Twisted-Python] Server authentication
>
>
> Many thanks to Volodymyr and Lee for the authentication pointers, 
> both the ldap and win32security modules look like suitable 
> candidates. At the end of the day it is whatever the client decides 
> so it is great to have these alternatives.
>
> Martin
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   




From jarrod at vertigrated.com  Thu Jan 18 17:10:44 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Thu, 18 Jan 2007 17:10:44 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <20070118123800.17094.33278340.divmod.xquotient.2894@joule.divmod.com>
References: <20070118123800.17094.33278340.divmod.xquotient.2894@joule.divmod.com>
Message-ID: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>

On 1/18/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 01:59 am, jarrod at vertigrated.com wrote:
>
> >We have LOTS and LOTS of test harness code and profiling code to pinpoint
> >where bottlenecks are. We are going to have process a couple of terabytes
> a
> >day thru this system. Latency thru the system is a high priority because
> of
> >what kind of system it is.
>
> If you do manage to keep Twisted in the loop on this project, please share
> what strategy you used.  It is unfortunately rare that Twisted is itself a
> really performance-critical component of any system (especially a highly
> parallel system), so information about optimization is hard to find.
>

It isn't really a failing of Twisted, on non-sparc hardware it preforms
awesome! The SPARC hardware is the problem, and the T1000 / T2000 we have be
benchmarking just doesn't place nice with single threaded CPU bound apps.

We are going to try and replace Twisted with Apache 2.2.x and create a
module that does raw connection handliing, and go with the threaded mpm and
see how that preforms with the same test client harness we are benchmarking
with now.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070118/dea53101/attachment.htm 

From jacob at cozi.com  Thu Jan 18 19:20:52 2007
From: jacob at cozi.com (Jacob Gabrielson)
Date: Thu, 18 Jan 2007 16:20:52 -0800
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
Message-ID: <5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>

It would be interesting to know where the CPU time is actually going.
>From what I've seen of this thread, performance is worst on the SPARC
hardware, but that doesn't necessarily mean that it's the root cause.
It may be, e.g., the implementation of some service call for that
hardware is especially slow.  Do you have any profiling information that
shows whether the CPU time is spent in Twisted code itself, or in some
system call that it's making?
 
BTW, the fact that you get 1k+ connections/s on the x86 hardware is
still slow (if you're just running benchmarking code that isn't doing
any work per request).  With epoll you should be able to get way more
than that.
 
Just my $.02,
 
-- Jacob

________________________________

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jarrod
Roberson
Sent: Thursday, January 18, 2007 2:11 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Twisted server is 5 times SLOWER on
Solaris thanLinux?




On 1/18/07, glyph at divmod.com <glyph at divmod.com> wrote: 

	On 01:59 am, jarrod at vertigrated.com wrote:
	
	>We have LOTS and LOTS of test harness code and profiling code
to pinpoint 
	>where bottlenecks are. We are going to have process a couple of
terabytes a
	>day thru this system. Latency thru the system is a high
priority because of
	>what kind of system it is.
	
	If you do manage to keep Twisted in the loop on this project,
please share what strategy you used.  It is unfortunately rare that
Twisted is itself a really performance-critical component of any system
(especially a highly parallel system), so information about optimization
is hard to find. 
	


It isn't really a failing of Twisted, on non-sparc hardware it preforms
awesome! The SPARC hardware is the problem, and the T1000 / T2000 we
have be benchmarking just doesn't place nice with single threaded CPU
bound apps. 

We are going to try and replace Twisted with Apache 2.2.x and create a
module that does raw connection handliing, and go with the threaded mpm
and see how that preforms with the same test client harness we are
benchmarking with now. 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070118/e47b97b4/attachment.htm 

From smurf at smurf.noris.de  Thu Jan 18 23:42:42 2007
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Fri, 19 Jan 2007 04:42:42 +0000 (UTC)
Subject: [Twisted-Python] trac / website woes
References: <E1H5rzN-00060b-Us@smurf.noris.de>
	<20070113235545.11447.228742069.divmod.quotient.15750@ohm>
Message-ID: <eopi82$d08$2@smurf.noris.de>

On Sat, 13 Jan 2007 23:55:45 +0000, Jean-Paul Calderone wrote:

> Can you clarify the misbehavior you're reporting?  It looks to me like this
> can only occur when the connection is lost between when an avatar is received
> and when it is passed to the client-side cred callback, which seems like a
> vanishingly small window to me. 

That's easy -- I'm looking for the thing in a database.
Thus, "vanishingly small" turns out not to be.

I hit the problem because the client managed to die on an exception
shortly after opening the connection...

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
 - -
BOFH excuse #109:

The electricity substation in the car park blew up.




From exarkun at divmod.com  Fri Jan 19 00:59:33 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 19 Jan 2007 00:59:33 -0500
Subject: [Twisted-Python] trac / website woes
In-Reply-To: <eopi82$d08$2@smurf.noris.de>
Message-ID: <20070119055933.17245.984932937.divmod.quotient.938@ohm>

On Fri, 19 Jan 2007 04:42:42 +0000 (UTC), Matthias Urlichs <smurf at smurf.noris.de> wrote:
>On Sat, 13 Jan 2007 23:55:45 +0000, Jean-Paul Calderone wrote:
>
>> Can you clarify the misbehavior you're reporting?  It looks to me like this
>> can only occur when the connection is lost between when an avatar is received
>> and when it is passed to the client-side cred callback, which seems like a
>> vanishingly small window to me.
>
>That's easy -- I'm looking for the thing in a database.
>Thus, "vanishingly small" turns out not to be.

Should still be small.  All of the database code should have run by the
time the window for this race opens.

>
>I hit the problem because the client managed to die on an exception
>shortly after opening the connection...
>

Can you provide a self-contained example which demonstrates the problem?

Jean-Paul



From johnpote at jptechnical.co.uk  Fri Jan 19 07:40:33 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Fri, 19 Jan 2007 12:40:33 +0000
Subject: [Twisted-Python] Best version to use with Centos4.4 Linux
In-Reply-To: <77d044440612202345x2af8a7fby688043d444992fd7@mail.gmail.com>
References: <77d044440612202045v2725e63eydf6ef59e861d60f4@mail.gmail.com>	<op.tkwed2cuy3d107@office2>
	<77d044440612202345x2af8a7fby688043d444992fd7@mail.gmail.com>
Message-ID: <45B0BC41.5060209@jptechnical.co.uk>

Hi everyone,

I have just got Centos4.4 (actually Red Hat Enterprise Linux 4 Update 4) 
running on a PC as I need a local TCP/IP server running a custom data 
collection protocol. As there may be many outstations sending data to 
the server I figured on using Twisted. Do any of you Twisted experts 
have any thoughts on the best versions of Python and Twisted to use 
bearing in mind that a key requirement is 24/7 operation.

Thanks for any help,
John




From jarrod at vertigrated.com  Fri Jan 19 11:13:43 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 19 Jan 2007 11:13:43 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
References: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
	<5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
Message-ID: <fa3d0c740701190813v663200dfgbe675d24e5ee4d4c@mail.gmail.com>

On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
>
>  It would be interesting to know where the CPU time is actually going.
>


The Twisted thread is eating up all the CPU time.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070119/1bf93376/attachment.htm 

From jarrod at vertigrated.com  Fri Jan 19 11:16:20 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 19 Jan 2007 11:16:20 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
References: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
	<5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
Message-ID: <fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>

On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
>
>  It would be interesting to know where the CPU time is actually going.
>

Sorry hit return by accident.

Twisted is eating up all the CPU time.

What is "slow" is the latency of the entire round trip thru the Twisted
reactor loop. It is without a doubt Twisted that is the bottleneck.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070119/20a5c1b9/attachment.htm 

From itamar at itamarst.org  Fri Jan 19 11:53:06 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 19 Jan 2007 11:53:06 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <fa3d0c740701190813v663200dfgbe675d24e5ee4d4c@mail.gmail.com>
References: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
	<5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
	<fa3d0c740701190813v663200dfgbe675d24e5ee4d4c@mail.gmail.com>
Message-ID: <1169225586.9764.36.camel@localhost.localdomain>

On Fri, 2007-01-19 at 11:13 -0500, Jarrod Roberson wrote:

> On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
>         It would be interesting to know where the CPU time is actually
>         going. 
> 
> 
> The Twisted thread is eating up all the CPU time.

Have you tried the poll reactor?





From bob at redivi.com  Fri Jan 19 13:47:52 2007
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 19 Jan 2007 10:47:52 -0800
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <1169225586.9764.36.camel@localhost.localdomain>
References: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
	<5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
	<fa3d0c740701190813v663200dfgbe675d24e5ee4d4c@mail.gmail.com>
	<1169225586.9764.36.camel@localhost.localdomain>
Message-ID: <6a36e7290701191047g1c40fe59qead0583174341826@mail.gmail.com>

On 1/19/07, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Fri, 2007-01-19 at 11:13 -0500, Jarrod Roberson wrote:
>
> > On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
> >         It would be interesting to know where the CPU time is actually
> >         going.
> >
> >
> > The Twisted thread is eating up all the CPU time.
>
> Have you tried the poll reactor?
>

That's what he said in the first message:
"We are using Python 2.4.4 and Twisted 2.4.0 using the poll reactor in
all cases."

-bob



From exarkun at divmod.com  Fri Jan 19 14:08:17 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 19 Jan 2007 14:08:17 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>
Message-ID: <20070119190817.17245.1417006931.divmod.quotient.1919@ohm>

On Fri, 19 Jan 2007 11:16:20 -0500, Jarrod Roberson <jarrod at vertigrated.com> wrote:
>On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
>>
>>  It would be interesting to know where the CPU time is actually going.
>
>Sorry hit return by accident.
>
>Twisted is eating up all the CPU time.
>
>What is "slow" is the latency of the entire round trip thru the Twisted
>reactor loop. It is without a doubt Twisted that is the bottleneck.
>

Can you tell if most of the time is user or system?  If system time is what
dominates, it may be worthwhile to investigate /dev/poll.  If most time is
spent in userspace, though, you may be right about Twisted being the bottle
neck.

Jean-Paul



From jacob at cozi.com  Fri Jan 19 14:45:28 2007
From: jacob at cozi.com (Jacob Gabrielson)
Date: Fri, 19 Jan 2007 11:45:28 -0800
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on
	SolaristhanLinux?
In-Reply-To: <20070119190817.17245.1417006931.divmod.quotient.1919@ohm>
References: <fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>
	<20070119190817.17245.1417006931.divmod.quotient.1919@ohm>
Message-ID: <5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A9025@ehost011-6.exch011.intermedia.net>

Yeah, it would be nice to see what the output of "vmstat 10" (or
whatever the equivalent is under Solaris) was during the test.

-- Jacob

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jean-Paul
Calderone
Sent: Friday, January 19, 2007 11:08 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Twisted server is 5 times SLOWER on
SolaristhanLinux?

On Fri, 19 Jan 2007 11:16:20 -0500, Jarrod Roberson
<jarrod at vertigrated.com> wrote:
>On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
>>
>>  It would be interesting to know where the CPU time is actually
going.
>
>Sorry hit return by accident.
>
>Twisted is eating up all the CPU time.
>
>What is "slow" is the latency of the entire round trip thru the Twisted
>reactor loop. It is without a doubt Twisted that is the bottleneck.
>

Can you tell if most of the time is user or system?  If system time is
what
dominates, it may be worthwhile to investigate /dev/poll.  If most time
is
spent in userspace, though, you may be right about Twisted being the
bottle
neck.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From jarrod at vertigrated.com  Fri Jan 19 15:49:22 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 19 Jan 2007 15:49:22 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <20070119190817.17245.1417006931.divmod.quotient.1919@ohm>
References: <fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>
	<20070119190817.17245.1417006931.divmod.quotient.1919@ohm>
Message-ID: <fa3d0c740701191249w61839702na2743ce7f94daff4@mail.gmail.com>

On 1/19/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>
> Can you tell if most of the time is user or system?
>


It is 99% user time :-(
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070119/da5bfbff/attachment.htm 

From general at eepatents.com  Fri Jan 19 19:08:23 2007
From: general at eepatents.com (Ed Suominen)
Date: Fri, 19 Jan 2007 16:08:23 -0800
Subject: [Twisted-Python] Re: Hanging Deferreds in PB Paging code
In-Reply-To: <E1H7F4u-0005ae-02@pyramid.twistedmatrix.com>
References: <E1H7F4u-0005ae-02@pyramid.twistedmatrix.com>
Message-ID: <45B15D77.7000103@eepatents.com>

From: "Brian Granger" <ellisonbg.net at gmail.com>
> We are using PB as an initial protocol for some IPython related
> stuff. Overall, PB is working well, but we need to be able to send
> larger things around so we have been trying to implement things using
> the pb.util.Pager stuff.  I have spent a fair amount of time
> understanding how the Paging works.

I looked at the PB paging stuff and decided to write my own simple
solution for it, borrowing the original code as needed. At the server,
just pass one of these to your PB client:

> class Receiver(pb.Referenceable):
>     """
>     Give a PB client a remote reference to an instance of me and it will
>     have a way to upload a file in chunks of whatever size it likes.
>     """
>     def __init__(self, destPath):
>         self.file = open(destPath, 'w')
> 
>     def remote_chunk(self, data):
>         self.file.write(data)
>         return True
> 
>     def remote_done(self, ok):
>         self.file.close()

At the client side, use the source path for the file and the reference
to the Receiver object to construct an Uploader object:

> from twisted.internet import defer, interfaces
> from twisted.python.filepath import FilePath
> 
> class Uploader(object):
>     """
>     I upload the file at the specified I{sourcePath} to the I{referenced} PB
>     referenceable object, both of which are supplied to my constructor.
> 
>     @ivar d: A deferred that fires when the file has been completely uploaded.
>     
>     """
>     implements(interfaces.IConsumer)
> 
>     def __init__(self, sourcePath, referenced):
>         self.ref = referenced
>         # The source file
>         fp = FilePath(sourcePath)
>         if not fp.isfile():
>             raise OSError("'%s' is not a valid file path" % result)
>         self.basename = fp.basename()
>         self.bytes = [0, fp.getsize()]
>         self.fh = fp.open()
>         # Pull producer for reading the file locally
>         self.producer = FileSender()
>         # Set up the deferred that fires when the upload is done
>         d = self.d = defer.Deferred()
>         d.addCallback(lambda ok: self.ref.callRemote('done', ok))
>         # Start the transfer at the file producer
>         self.producer.beginProducing(self.fh, self)
> 
>     def cancel(self):
>         if not self.d.called:
>             self.d.callback(False)
>         self.producer.stopProducing()
> 
>     #--- IConsumer API --------------------------------------------------------
>     
>     def registerProducer(self, producer, streaming):
>         self.producer = producer
>         if not streaming:
>             self.producer.resumeProducing()
> 
>     def unregisterProducer(self):
>         if not self.d.called:
>             self.d.callback(True)
> 
>     def write(self, data):
>         """
>         Writes the supplied chunk of file I{data}, no larger than
>         L{FileSender.CHUNK_SIZE} bytes, to the server using the referenceable
>         I've been given.
>         """
>         def oops(failure):
>             failure.printTraceback()
>             self.cancel()
> 
>         def update(sent):
>             sent = self.bytes[0] + sent
>             self.p.setValue(sent)
>             self.bytes[0] = sent
> 
>         d = self.ref.callRemote('chunk', data)
>         d.addCallback(lambda _: update(len(data)))
>         d.addCallback(lambda _: self.producer.resumeProducing())
>         d.addErrback(oops)

I excerpted this from code that queues up the remote calls via my
asynchronous task queue, and I'm not sure whether it will work well
without it. The taskqueue subpackage is part of
Twisted-Goodies, see http://foss.eepatents.com/Twisted-Goodies.

Anyhow, given how much it borrows from Twisted's own code, I hereby
license this code snippet for use under the same MIT-like license that
Twisted itself uses.

Best regards, Ed




From ellisonbg.net at gmail.com  Fri Jan 19 19:48:23 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 19 Jan 2007 17:48:23 -0700
Subject: [Twisted-Python] Re: Hanging Deferreds in PB Paging code
In-Reply-To: <45B15D77.7000103@eepatents.com>
References: <E1H7F4u-0005ae-02@pyramid.twistedmatrix.com>
	<45B15D77.7000103@eepatents.com>
Message-ID: <6ce0ac130701191648j20cff55dlee005cc27365a3bf@mail.gmail.com>

Ed,

Thanks for the code snippet.  I had thought about trying to implement
my own, less complicated solution for this issue but hadn't done
anything yet.  I will have a look at your code to see if I can adapt
it.  I am not dealing with files, but most of the ideas are the same.

Also, the task queue stuff looks interesting.  It is actually pretty
similar to what we have implemented in IPython:

http://ipython.scipy.org/moin/Parallel_Computing

We have abstracted things at a slightly lower level to allow various
types of higher level constructs (such as task farming) to be built
easily.  We haven't build the task farming interface fully yet, but
that is on our list of todos soon.  It might be nice to use some of
your work when we implement the task farming interface, but
unfortunately, IPython is BSD, so your GPL code won't help us much.

Brian

On 1/19/07, Ed Suominen <general at eepatents.com> wrote:
> From: "Brian Granger" <ellisonbg.net at gmail.com>
> > We are using PB as an initial protocol for some IPython related
> > stuff. Overall, PB is working well, but we need to be able to send
> > larger things around so we have been trying to implement things using
> > the pb.util.Pager stuff.  I have spent a fair amount of time
> > understanding how the Paging works.
>
> I looked at the PB paging stuff and decided to write my own simple
> solution for it, borrowing the original code as needed. At the server,
> just pass one of these to your PB client:
>
> > class Receiver(pb.Referenceable):
> >     """
> >     Give a PB client a remote reference to an instance of me and it will
> >     have a way to upload a file in chunks of whatever size it likes.
> >     """
> >     def __init__(self, destPath):
> >         self.file = open(destPath, 'w')
> >
> >     def remote_chunk(self, data):
> >         self.file.write(data)
> >         return True
> >
> >     def remote_done(self, ok):
> >         self.file.close()
>
> At the client side, use the source path for the file and the reference
> to the Receiver object to construct an Uploader object:
>
> > from twisted.internet import defer, interfaces
> > from twisted.python.filepath import FilePath
> >
> > class Uploader(object):
> >     """
> >     I upload the file at the specified I{sourcePath} to the I{referenced} PB
> >     referenceable object, both of which are supplied to my constructor.
> >
> >     @ivar d: A deferred that fires when the file has been completely uploaded.
> >
> >     """
> >     implements(interfaces.IConsumer)
> >
> >     def __init__(self, sourcePath, referenced):
> >         self.ref = referenced
> >         # The source file
> >         fp = FilePath(sourcePath)
> >         if not fp.isfile():
> >             raise OSError("'%s' is not a valid file path" % result)
> >         self.basename = fp.basename()
> >         self.bytes = [0, fp.getsize()]
> >         self.fh = fp.open()
> >         # Pull producer for reading the file locally
> >         self.producer = FileSender()
> >         # Set up the deferred that fires when the upload is done
> >         d = self.d = defer.Deferred()
> >         d.addCallback(lambda ok: self.ref.callRemote('done', ok))
> >         # Start the transfer at the file producer
> >         self.producer.beginProducing(self.fh, self)
> >
> >     def cancel(self):
> >         if not self.d.called:
> >             self.d.callback(False)
> >         self.producer.stopProducing()
> >
> >     #--- IConsumer API --------------------------------------------------------
> >
> >     def registerProducer(self, producer, streaming):
> >         self.producer = producer
> >         if not streaming:
> >             self.producer.resumeProducing()
> >
> >     def unregisterProducer(self):
> >         if not self.d.called:
> >             self.d.callback(True)
> >
> >     def write(self, data):
> >         """
> >         Writes the supplied chunk of file I{data}, no larger than
> >         L{FileSender.CHUNK_SIZE} bytes, to the server using the referenceable
> >         I've been given.
> >         """
> >         def oops(failure):
> >             failure.printTraceback()
> >             self.cancel()
> >
> >         def update(sent):
> >             sent = self.bytes[0] + sent
> >             self.p.setValue(sent)
> >             self.bytes[0] = sent
> >
> >         d = self.ref.callRemote('chunk', data)
> >         d.addCallback(lambda _: update(len(data)))
> >         d.addCallback(lambda _: self.producer.resumeProducing())
> >         d.addErrback(oops)
>
> I excerpted this from code that queues up the remote calls via my
> asynchronous task queue, and I'm not sure whether it will work well
> without it. The taskqueue subpackage is part of
> Twisted-Goodies, see http://foss.eepatents.com/Twisted-Goodies.
>
> Anyhow, given how much it borrows from Twisted's own code, I hereby
> license this code snippet for use under the same MIT-like license that
> Twisted itself uses.
>
> Best regards, Ed
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jarrod at vertigrated.com  Fri Jan 19 20:51:33 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 19 Jan 2007 20:51:33 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <20070118123800.17094.33278340.divmod.xquotient.2894@joule.divmod.com>
References: <20070118123800.17094.33278340.divmod.xquotient.2894@joule.divmod.com>
Message-ID: <fa3d0c740701191751g6d2a8606n721289648119d41e@mail.gmail.com>

On 1/18/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 01:59 am, jarrod at vertigrated.com wrote:
>
> >We have LOTS and LOTS of test harness code and profiling code to pinpoint
> >where bottlenecks are. We are going to have process a couple of terabytes
> a
> >day thru this system. Latency thru the system is a high priority because
> of
> >what kind of system it is.
>
> If you do manage to keep Twisted in the loop on this project, please share
> what strategy you used.  It is unfortunately rare that Twisted is itself a
> really performance-critical component of any system (especially a highly
> parallel system), so information about optimization is hard to find.
>
>

Here is an update. I have learned more about the Niagra chip in the
T1000/T2000 servers.
The T2000 we are using has a 8 core 1 Ghz processor, each core gets 4
threads, so Solaris sees a 32 processor machine.
We noticed from watching top that each thread is only getting 3.1% of CPU
time. Doing the math, that means our Twisted thread is running on a 250 mhz
processor :-(
The Niagra chip is basically like having 32 250mhz processors with a really
effiecient scheduler. With that information in hand, we can now begin to
understand how we need to approach deployment of our Twisted server in this
environment.

To get the kind of client counts ( 2000 clients ) we would have to run 20
instances of our Twisted server, with 100 clients each.
We have tried this and it appears it will work, we need more time to test.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070119/f031e79c/attachment.htm 

From smurf at smurf.noris.de  Sat Jan 20 08:18:40 2007
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Sat, 20 Jan 2007 13:18:40 +0000 (UTC)
Subject: [Twisted-Python] Serial port problem
Message-ID: <eot4rg$d08$3@smurf.noris.de>

Hello,

I'm writing to a serial port. That may of course stall. But what if a
delayed write results in an error? I didn't see any obvious way to catch
that.

As an aside, the error whioch prompts me to write this message was EINTR,
caused by a child process dying at the right moment. Shouldn't that be
retried, like EAGAIN? And shouldn't serial ports be set to be non-blocking?

(Linux, Twisted 2.4)

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
 - -
Saints should always be judged guilty until they are proven innocent.
- George Orwell



From general at eepatents.com  Sat Jan 20 13:55:46 2007
From: general at eepatents.com (Ed Suominen)
Date: Sat, 20 Jan 2007 10:55:46 -0800
Subject: [Twisted-Python] Hanging Deferreds in PB Paging code
In-Reply-To: <E1H8G7f-0005XO-02@pyramid.twistedmatrix.com>
References: <E1H8G7f-0005XO-02@pyramid.twistedmatrix.com>
Message-ID: <45B265B2.9090909@eepatents.com>

From: "Brian Granger" <ellisonbg.net at gmail.com>
> Thanks for the code snippet.  I had thought about trying to implement
> my own, less complicated solution for this issue but hadn't done
> anything yet.  I will have a look at your code to see if I can adapt
> it.  I am not dealing with files, but most of the ideas are the same.
> 
> Also, the task queue stuff looks interesting.  It is actually pretty
> similar to what we have implemented in IPython:
> 
> http://ipython.scipy.org/moin/Parallel_Computing
> 
> We have abstracted things at a slightly lower level to allow various
> types of higher level constructs (such as task farming) to be built
> easily.  We haven't build the task farming interface fully yet, but
> that is on our list of todos soon.  It might be nice to use some of
> your work when we implement the task farming interface, but
> unfortunately, IPython is BSD, so your GPL code won't help us much.

Well, as it says on the foss.eepatents.com site, "If you want to use
this software under different terms ... feel free to contact me about
it. Maybe we can work something out, maybe not." :-)

I'm interested in the idea of some of the work getting adapted for
IPython (a great project!), even if the adaptation winds up being
licensed differently. Also, I have already done quite a bit of task
farming in another as-yet-private package of mine, "AsynCluster" (is
what it sounds like), which I'm planning to incorporate into
Twisted-Goodies. Collaborating with someone capable like yourself on
this would be great for both of us, I would think. So, let's get
together on this off-list soon!

Best regards,

Ed Suominen
Registered Patent Agent & Independent Inventor (cathedral)
Open-Source Software Author (bazaar)





From exarkun at twistedmatrix.com  Sun Jan 21 09:42:39 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Jan 2007 14:42:39 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1169390559.79.63664564@twistedmatrix.com

Bug summary
______________________
Summary for 2007-01-14 through 2007-01-21
Bugs opened: 10    Bugs closed: 17  Total open bugs: 821 (-7)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       -3  |Highest:  -2          |Conch:               -1  
|Enhancement:  -2  |High:     +0          |Core:                +0  
|Task:         -2  |Normal:   -6          |News:                -1  
                   |Low:      +1          |Pb:                  -1  
                                          |Release Management:  -1  
                                          |Trial:               +1  
                                          |Web:                 -2  
                                          |Website:             -2  
                                          |Words:               +0  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2403] ITerminalTransport missing functions for setting and resetting private modes (opened by exarkun) (CLOSED, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2403

[#2408] Twisted Words 0.5.0 breaks import compatibility for interfaces without deprecation (opened by ralphm)
    defect          words      http://twistedmatrix.com/trac/ticket/2408

                    ===== High =====
[#2405] Various tests require stderr behavior CPython cannot and will not provide (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2405

[#2409] twisted.plugin should be quiet when it can't write cache file (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/2409

[#2410] setup.py should generate a twisted.plugin dropin.cache file during install. (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/2410

                    ===== Normal =====
[#2404] DST calculation problem in log.py/FileLogObserver.getTimezoneOffset (opened by thor)
    defect          core       http://twistedmatrix.com/trac/ticket/2404

[#2407] FilePath.alwaysCreate should be removed (opened by jknight)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2407

[#2411] Diverse improvements to IResult interface (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2411

[#2412] twisted hangs on infinite loop redirection (opened by Rick Graves)
    defect          web        http://twistedmatrix.com/trac/ticket/2412

                    ===== Low =====
[#2406] Location of basic pb tutorial not found until after monkeying with finger client tutorial (opened by arch_o_median)
    defect          pb         http://twistedmatrix.com/trac/ticket/2406



Closed Bugs
______________________
                    ===== Highest =====
[#1649] unused parameters in IRCClient.register (opened by synapsis, closed by exarkun, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1649

[#2403] ITerminalTransport missing functions for setting and resetting private modes (opened by exarkun, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2403

[#1996] Remove repr() and getDelayedCalls() usage from twisted.web.test.test_web.SessionTest.test_delayedCallCleanup (opened by exarkun, closed by therve, fixed)
    task            web        http://twistedmatrix.com/trac/ticket/1996

[#2382] twisted/web/test/test_http.py uses backticks (opened by exarkun, closed by therve, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2382

                    ===== High =====
[#2267] twisted.conch.test.test_conch tests leave the reactor unclean (opened by jml, closed by jml, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2267

[#1102] _Dereferences showing up in cyclic data structures with pb, jelly, and Cacheable (opened by phenyx, closed by warner, wontfix)
    defect          pb         http://twistedmatrix.com/trac/ticket/1102

[#1195] twisted.test.test_pb calls reactor.iterate() (opened by exarkun, closed by warner, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1195

                    ===== Normal =====
[#1512] macosx & twisted - unable to find a reactor (opened by cripcrip, closed by exarkun, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1512

[#2370] Cannot create new milestones. (opened by ralphm, closed by exarkun, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/2370

[#1792] qt step of reactors build fails due to Xlib spew on stderr (opened by spiv, closed by exarkun, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1792

[#1972] Python 2.5 warnings mangle output from child processes in test (opened by exarkun, closed by exarkun, wontfix)
    task            core       http://twistedmatrix.com/trac/ticket/1972

[#1390] Intermitent failure in newpb unit tests (opened by exarkun, closed by warner, worksforme)
    defect          pb         http://twistedmatrix.com/trac/ticket/1390

[#1531] QtReactor Problems with Modal Dialogs (opened by mustafa, closed by exarkun, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1531

[#2037] twisted.python.reflect.namedAny depends on undocumented import implementation details (opened by exarkun, closed by exarkun, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2037

[#1819] give permission to update the website to the people who occasionally need to do it (opened by dreid, closed by dreid, invalid)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1819

[#1090] twisted/web/server.py : Session expire times are hardwired (opened by loic, closed by therve, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1090

[#2364] Release TwistedNews-0.3.0 (opened by radix, closed by exarkun, fixed)
    enhancement     news       http://twistedmatrix.com/trac/ticket/2364





From jmp at MIT.EDU  Sun Jan 21 12:55:54 2007
From: jmp at MIT.EDU (Justin Mazzola Paluska)
Date: Sun, 21 Jan 2007 12:55:54 -0500
Subject: [Twisted-Python] Watching a File Descriptor
Message-ID: <20070121175554.GC16500@mit.edu>

Hi,

I?m playing with the inotify(7) interface on Linux.  When I call
inotify_init(), I get back a file descriptor that I?m supposed read
from when there are file system events.

What?s the best way to integrate the inotify file descriptor into the
Twisted reactor?  My question has two subparts:

1.  How do I tell Twisted to check my fd for readability? (Is
    reactor.addReader() all I need?

2.  How do I register a callback to my own code when my fd is
    readable?

All in all, it seems what I really want is something like
ProcessProtocol, but without spawning a process.  Forgive me if I?ve
missed something obvious, but searching google and the gmane mail
archives hasn?t turned up anything.

Thanks,
	?Justin



From therve at free.fr  Sun Jan 21 13:20:43 2007
From: therve at free.fr (Thomas =?utf-8?b?SGVydsOp?=)
Date: Sun, 21 Jan 2007 19:20:43 +0100
Subject: [Twisted-Python] Watching a File Descriptor
In-Reply-To: <20070121175554.GC16500@mit.edu>
References: <20070121175554.GC16500@mit.edu>
Message-ID: <20070121192043.zu4a65ne9a0wc4cc@wasabox.wasabout.net>

Quoting Justin Mazzola Paluska <jmp at MIT.EDU>:

> Hi,
>
> I?m playing with the inotify(7) interface on Linux.  When I call
> inotify_init(), I get back a file descriptor that I?m supposed read
> from when there are file system events.
>
> What?s the best way to integrate the inotify file descriptor into the
> Twisted reactor?  My question has two subparts:
>
> 1.  How do I tell Twisted to check my fd for readability? (Is
>    reactor.addReader() all I need?
>
> 2.  How do I register a callback to my own code when my fd is
>    readable?
>
> All in all, it seems what I really want is something like
> ProcessProtocol, but without spawning a process.  Forgive me if I?ve
> missed something obvious, but searching google and the gmane mail
> archives hasn?t turned up anything.

You should have a look at this:

http://twistedmatrix.com/trac/browser/sandbox/inotify.py

-- 
Thomas




From andrewfr_ice at yahoo.com  Sun Jan 21 15:57:08 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 21 Jan 2007 12:57:08 -0800 (PST)
Subject: [Twisted-Python] More Questions about Custom Reactors 
Message-ID: <276245.14642.qm@web34203.mail.mud.yahoo.com>

Hello Colleagues :

I am trying to write a reactor for Stackless Python. I
posted previously here and in the Stackless mailing
list but I am still stuck.  My problems are in the
following areas :

1. How does the custom reactor drive Twisted?
2. How does self.interleave() work?
3. How to use deferreds if Twisted is running in a
seperate thread. Is callFromThread() used?
4. Some custom reactor implementations  inherit and
some reactors simply install say
threadedselectorreactor? Which technique is
recommended?
 
For now, I am operating under the assumption that
Stackless Python and Twisted ought to be executed  in
seperate threads. This is because if Twisted blocks
then Stackless blocks. Since I am taking this
approach, I am assuming I will have to use
threadedselectorreactor.

I want my Stackless Python application to do two
things :

1. Process HTTP based SOAP server requests
2. From the Stackless thread, make client.getPage()
calls and use a deferred to process the result.

To promote decoupling, I want Twisted and Stackless to
communicate via queues. So my code looks as follows -


def processResponse(self, httpServer):
     reply = self.myQueue.get()
     httpServer.write(reply.toxml().encode("utf-8"))  
            
     httpServer.finish()
     return

example 2.

postRequest = client.getPage(self.address, method =
'POST', headers = self.headers, postdata =
self.body)postRequest.addCallback(self.__handleResponse__).addErrback(self.__handleError__)
    

def __handleResponse__(self, pageData):
         self.queue.put(pageData)

I have looked at the reactors included in the
twisted.internet. I also looked at Blockingdemo.py. I
find BlockingDemo.py confusing (i.e., where is poll()
called? It does not seem to do anything.)

Question about interleave():

"""
Taken from threadedselectorreactor  

In order for Twisted to do its work in the main thread
(the thread that interleave is called from), a waker
function is necessary.  The waker function will be
called from a "background" thread with one argument:
func. The waker function's purpose is to call func()
from the main thread. Many GUI toolkits ship with
appropriate waker functions.
"""

Using wxReactor as a basis, if the following is my
custom Stackless reactor's run method

def run(self):
      self.startRunning(...)
      self.interleave(some_waker_function)
      self.stacklessApplication.Loop()    

1. How does this drive Twisted (in wxReactor there
seems to be a second loop that sleeps every
millisecond)? .
2. What should the "some_waker_function" be doing? Is
the interleave() method always necessary?
3. What is the background thread? Twisted? A
workerThread in threadedselectorreactor?
4. To use client.getPage() and callbacks from
Stackless to a Twisted reactor running in a thread,
must I use callFromThread? Will the Stackless thread
block?

Once again, any advice would be appreciated. I will
happily summarise on the Stackless Wiki. Sorry for
the long message.

Thank you,
Andrew 


    


 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com



From p.mayers at imperial.ac.uk  Sun Jan 21 19:32:16 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 22 Jan 2007 00:32:16 +0000
Subject: [Twisted-Python] More Questions about Custom Reactors
In-Reply-To: <276245.14642.qm@web34203.mail.mud.yahoo.com>
References: <276245.14642.qm@web34203.mail.mud.yahoo.com>
Message-ID: <45B40610.7020607@imperial.ac.uk>

Andrew Francis wrote:
> Hello Colleagues :
> 
> I am trying to write a reactor for Stackless Python. I
> posted previously here and in the Stackless mailing
> list but I am still stuck.  My problems are in the
> following areas :

Perhaps you could explain what you're actually trying to achieve, rather 
than the solution you have decided on? An indeed, why you want to use 
stackless at all - Twisted is predicated around the assumption of a 
stackful i.e. single-threaded Python.

Since you're using stackless, I assume you want to use the 
microthreading capabilities to make async code look synchronous?

Alternatively you might be wanting long-running jobs to be interleaved 
with other code transparently but without using real threads?

If you're proposing using queues to communicate between a Twisted thread 
running the reactor and a stackless thread running your micro-threads, I 
don't see why you need to modify Twisted at all. You can just run the 
stackless microthreads from one "real" thread (started via 
callInThread), pass jobs from Twisted to the "real" thread and probably 
a stackless uthread, and pass the replies back to the twisted thread 
with a callFromThread.

So, can you not just do this?:

stacklessJobs = threading.deque()
stacklessReplies = {}

def queueToStackless(job):
     """returns a deferred which is fired with the job result"""
     while True:
         # generate a unused ID
         i = random.randint()
         if not i in stacklessReplies:
             d = stacklessReplies[i] = defer.Deferred()
             break
     stacklessJobs.append((job, i))
     return d

def replyFromStackless(idx, result):
     """Called in the reactor thread by the stackless thread"""
     d = stacklessReplies.pop(idx)
     d.callback(result)

def workfunc(job, idx):
     """Called via some kind of stackless uthread scheduler"""

     # do some stuff
     for thing in job:
         pass
     result = 'foo'

     # this is the ONLY THREAD SAFE reactor call...
     reactor.callFromThread(replyFromStackless, idx, result)

def emptyQueue(sched):
     """a stackless uthread, runs forever, empties the job pool"""
     while True:
         # replace with a stackless equivalent?
         job, i = stacklessJobs.pop()
         sched.add(workfunc, job, i)

def stacklessWork():
     """The stackless scheduler, runs in the 2nd thread"""
     sched = stacklessUthreadScheduler()
     sched.add(emptyQueue, sched)
     while True:
         sched.doThing()

# On startup, begin the stackless scheduler
reactor.callInThread(stacklessWork)



> 
> 1. How does the custom reactor drive Twisted?
> 2. How does self.interleave() work?
> 3. How to use deferreds if Twisted is running in a
> seperate thread. Is callFromThread() used?
> 4. Some custom reactor implementations  inherit and
> some reactors simply install say
> threadedselectorreactor? Which technique is
> recommended?
>  
> For now, I am operating under the assumption that
> Stackless Python and Twisted ought to be executed  in
> seperate threads. This is because if Twisted blocks
> then Stackless blocks. Since I am taking this
> approach, I am assuming I will have to use
> threadedselectorreactor.
> 
> I want my Stackless Python application to do two
> things :
> 
> 1. Process HTTP based SOAP server requests
> 2. From the Stackless thread, make client.getPage()
> calls and use a deferred to process the result.
> 
> To promote decoupling, I want Twisted and Stackless to
> communicate via queues. So my code looks as follows -
> 
> 
> def processResponse(self, httpServer):
>      reply = self.myQueue.get()
>      httpServer.write(reply.toxml().encode("utf-8"))  
>             
>      httpServer.finish()
>      return
> 
> example 2.
> 
> postRequest = client.getPage(self.address, method =
> 'POST', headers = self.headers, postdata =
> self.body)postRequest.addCallback(self.__handleResponse__).addErrback(self.__handleError__)
>     
> 
> def __handleResponse__(self, pageData):
>          self.queue.put(pageData)
> 
> I have looked at the reactors included in the
> twisted.internet. I also looked at Blockingdemo.py. I
> find BlockingDemo.py confusing (i.e., where is poll()
> called? It does not seem to do anything.)
> 
> Question about interleave():
> 
> """
> Taken from threadedselectorreactor  
> 
> In order for Twisted to do its work in the main thread
> (the thread that interleave is called from), a waker
> function is necessary.  The waker function will be
> called from a "background" thread with one argument:
> func. The waker function's purpose is to call func()
> from the main thread. Many GUI toolkits ship with
> appropriate waker functions.
> """
> 
> Using wxReactor as a basis, if the following is my
> custom Stackless reactor's run method
> 
> def run(self):
>       self.startRunning(...)
>       self.interleave(some_waker_function)
>       self.stacklessApplication.Loop()    
> 
> 1. How does this drive Twisted (in wxReactor there
> seems to be a second loop that sleeps every
> millisecond)? .
> 2. What should the "some_waker_function" be doing? Is
> the interleave() method always necessary?
> 3. What is the background thread? Twisted? A
> workerThread in threadedselectorreactor?
> 4. To use client.getPage() and callbacks from
> Stackless to a Twisted reactor running in a thread,
> must I use callFromThread? Will the Stackless thread
> block?
> 
> Once again, any advice would be appreciated. I will
> happily summarise on the Stackless Wiki. Sorry for
> the long message.
> 
> Thank you,
> Andrew 
> 
> 
>     
> 
> 
>  
> ____________________________________________________________________________________
> Do you Yahoo!?
> Everyone is raving about the all-new Yahoo! Mail beta.
> http://new.mail.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From anthony at interlink.com.au  Mon Jan 22 01:29:36 2007
From: anthony at interlink.com.au (Anthony Baxter)
Date: Mon, 22 Jan 2007 17:29:36 +1100
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>
References: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
	<5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
	<fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>
Message-ID: <200701221729.37026.anthony@interlink.com.au>

On Saturday 20 January 2007 03:16, Jarrod Roberson wrote:
> On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
> >  It would be interesting to know where the CPU time is actually
> > going.
>
> Sorry hit return by accident.
>
> Twisted is eating up all the CPU time.
>
> What is "slow" is the latency of the entire round trip thru the
> Twisted reactor loop. It is without a doubt Twisted that is the
> bottleneck.


Have you tried using cProfile to see where the time is going? I did 
this many years ago now with twisted when I first moved 
pythondirector across from asyncore to twisted, and found a couple 
of easily-fixed performance problems. It's quite possible you'll 
see a couple of easily-fixed optimisation targets if you profile 
the code.

Anthony



From hellojianwu at gmail.com  Mon Jan 22 02:59:20 2007
From: hellojianwu at gmail.com (jian wu)
Date: Sun, 21 Jan 2007 23:59:20 -0800
Subject: [Twisted-Python] How to set host/IP Address for reactor.listenTcp()
Message-ID: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>

Hi,

I'm new to Twisted, I only had a limited experience using python and its
asyncore/asynchat. I went through Twisted Howto doc.

I just realized that reactor.listenTcp() will only take "listening port" as its
parameter. If I want to run a Twisted Program on a machine with multiple
network cards(NICs) associated with different IP addresses and I only want
my program listening on a specific IP address or NIC, is there a way I
can pass listening IP address to reactor.listenTcp() so it'll only accept
the connections from a certain NIC/IP Address?

Thanks a lot for your help!

Jian



From therve at free.fr  Mon Jan 22 04:32:05 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Mon, 22 Jan 2007 10:32:05 +0100
Subject: [Twisted-Python] How to set host/IP Address for
	reactor.listenTcp()
In-Reply-To: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
Message-ID: <20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>

Quoting jian wu <hellojianwu at gmail.com>:

> Hi,

Hi,

> I'm new to Twisted, I only had a limited experience using python and its
> asyncore/asynchat. I went through Twisted Howto doc.
>
> I just realized that reactor.listenTcp() will only take "listening 
> port" as its
> parameter. If I want to run a Twisted Program on a machine with multiple
> network cards(NICs) associated with different IP addresses and I only want
> my program listening on a specific IP address or NIC, is there a way I
> can pass listening IP address to reactor.listenTcp() so it'll only accept
> the connections from a certain NIC/IP Address?

You should have a look at this:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorTCP.html


-- 
Thomas





From hellojianwu at gmail.com  Mon Jan 22 11:35:04 2007
From: hellojianwu at gmail.com (jian wu)
Date: Mon, 22 Jan 2007 08:35:04 -0800
Subject: [Twisted-Python] How to set host/IP Address for
	reactor.listenTcp()
In-Reply-To: <20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
Message-ID: <d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>

Hi Thomas,

Thanks a lot for your quick response!

Jian

On 1/22/07, Thomas Herv? <therve at free.fr> wrote:
> Quoting jian wu <hellojianwu at gmail.com>:
>
> > Hi,
>
> Hi,
>
> > I'm new to Twisted, I only had a limited experience using python and its
> > asyncore/asynchat. I went through Twisted Howto doc.
> >
> > I just realized that reactor.listenTcp() will only take "listening
> > port" as its
> > parameter. If I want to run a Twisted Program on a machine with multiple
> > network cards(NICs) associated with different IP addresses and I only want
> > my program listening on a specific IP address or NIC, is there a way I
> > can pass listening IP address to reactor.listenTcp() so it'll only accept
> > the connections from a certain NIC/IP Address?
>
> You should have a look at this:
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorTCP.html
>
>
> --
> Thomas
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From avindev at gmail.com  Tue Jan 23 01:00:50 2007
From: avindev at gmail.com (Arbow)
Date: Tue, 23 Jan 2007 14:00:50 +0800
Subject: [Twisted-Python] Could anyone send me a copy?
Message-ID: <ca75ec0701222200s5bc71740y1039b179df883688@mail.gmail.com>

Hi anyone:
      I could't download the v2.5 release for the bad network
condition (1k~2k, always disconnected), could anyone send me a copy to
my mailbox? I need these follows:

Twisted 2.5.0 tarball
Twisted 2.5 Win32 installer for Python 2.4
Twisted 2.5 Win32 installer for Python 2.5

Thanks
Arbow



From hellojianwu at gmail.com  Tue Jan 23 02:16:50 2007
From: hellojianwu at gmail.com (jian wu)
Date: Mon, 22 Jan 2007 23:16:50 -0800
Subject: [Twisted-Python] Is it a good/recommended practice to pass Instance
	Method into reactor.callFromThread()/callInThread()?
Message-ID: <d81c17cd0701222316y13774d00v6a09c8f17563a08a@mail.gmail.com>

Hi Twisted Guru,

I'm new to Twisted, I am just experimenting Twisted 2.5 with Python 2.5.

It seems that I can pass either a python function or a python object
instance method
to reactor.callInThread() for blocking operation and
reactor.callFromThread() in main
event loop.

I just want to see whether it is a good/recommended practice to pass
Instance Method
into reactor.callFromThread()/callInThread(), which implies that the
application level
context information stored in the python object instance is available
when the method
is invoked, so I don't have to pass all the context info as
parameters. Do I miss anything
in Twisted?

Any suggestion or tip is really appreciated.

Thanks a lot for your help!

Jian



From warner at lothar.com  Tue Jan 23 03:32:31 2007
From: warner at lothar.com (Brian Warner)
Date: Tue, 23 Jan 2007 00:32:31 -0800 (PST)
Subject: [Twisted-Python] Foolscap-0.0.7 (aka newpb) released
Message-ID: <20070123.003231.11951578.warner@lothar.com>


I've made a new release of Foolscap, 0.0.7, which fixes two irritating bugs:
in previous versions you could not connect to the same PBURL multiple times,
nor could you connect to yourself. The former would return None where it was
supposed to return a RemoteReference, the latter could cause a negotiation
timeout and failure. Both are fixed now.

There are no incompatible protocol changes in this release: 0.0.6 clients
will speak to 0.0.7 clients. There likely to be incompatible changes in the
future though: the protocol is not yet stabilized.

Foolscap is a next-generation RPC protocol for Twisted, under development as
"newpb" for the last several years. It is intended to eventually replace PB,
but it is not yet ready for production use. My hope is that Foolscap will
make it easier for python/twisted applications to use tools and concepts from
the object-capability world, in particular from E and the Web-Calculus.

Some useful URLs:
 Foolscap home page: http://twistedmatrix.com/trac/wiki/FoolsCap
 Download the release: http://twistedmatrix.com/~warner/Foolscap/
 Browse the source: http://twistedmatrix.com/trac/browser/sandbox/warner/Foolscap/trunk
 Read some docs: http://twistedmatrix.com/~warner/Foolscap/using-pb.html
 E: http://www.erights.org/
 Web-Calculus: http://www.waterken.com/dev/Web/


Also I'll probably organize a Foolscap BOF at PyCon this year.


share and enjoy,
 -Brian



From orlenko at gmail.com  Tue Jan 23 09:39:49 2007
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Tue, 23 Jan 2007 06:39:49 -0800
Subject: [Twisted-Python] Could anyone send me a copy?
In-Reply-To: <ca75ec0701222200s5bc71740y1039b179df883688@mail.gmail.com>
References: <ca75ec0701222200s5bc71740y1039b179df883688@mail.gmail.com>
Message-ID: <45B61E35.4070307@gmail.com>

Please check your inbox.

Arbow wrote:
> Hi anyone:
>      I could't download the v2.5 release for the bad network
> condition (1k~2k, always disconnected), could anyone send me a copy to
> my mailbox? I need these follows:
>
> Twisted 2.5.0 tarball
> Twisted 2.5 Win32 installer for Python 2.4
> Twisted 2.5 Win32 installer for Python 2.5
>
> Thanks
> Arbow
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From andrew-twisted at puzzling.org  Tue Jan 23 17:33:52 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 24 Jan 2007 09:33:52 +1100
Subject: [Twisted-Python] Is it a good/recommended practice to pass
	Instance Method into reactor.callFromThread()/callInThread()?
In-Reply-To: <d81c17cd0701222316y13774d00v6a09c8f17563a08a@mail.gmail.com>
References: <d81c17cd0701222316y13774d00v6a09c8f17563a08a@mail.gmail.com>
Message-ID: <20070123223352.GB6055@steerpike.home.puzzling.org>

jian wu wrote:
> Hi Twisted Guru,
> 
> I'm new to Twisted, I am just experimenting Twisted 2.5 with Python 2.5.
> 
> It seems that I can pass either a python function or a python object instance
> method to reactor.callInThread() for blocking operation and
> reactor.callFromThread() in main event loop.
> 
> I just want to see whether it is a good/recommended practice to pass Instance
> Method into reactor.callFromThread()/callInThread(), which implies that the
> application level context information stored in the python object instance is
> available when the method is invoked, so I don't have to pass all the context
> info as parameters. Do I miss anything in Twisted?

Yes, passing bound methods is fine, and often useful for the reasons you give.

-Andrew.




From avindev at gmail.com  Tue Jan 23 20:21:50 2007
From: avindev at gmail.com (Arbow)
Date: Wed, 24 Jan 2007 09:21:50 +0800
Subject: [Twisted-Python] Could anyone send me a copy?
In-Reply-To: <45B61E35.4070307@gmail.com>
References: <ca75ec0701222200s5bc71740y1039b179df883688@mail.gmail.com>
	<45B61E35.4070307@gmail.com>
Message-ID: <ca75ec0701231721v278cd1a1j277577140f26e969@mail.gmail.com>

Got it ! Thanks very much :)



From fperez.net at gmail.com  Wed Jan 24 00:33:58 2007
From: fperez.net at gmail.com (Fernando Perez)
Date: Tue, 23 Jan 2007 22:33:58 -0700
Subject: [Twisted-Python] Hanging Deferreds in PB Paging code
In-Reply-To: <45B265B2.9090909@eepatents.com>
References: <E1H8G7f-0005XO-02@pyramid.twistedmatrix.com>
	<45B265B2.9090909@eepatents.com>
Message-ID: <db6b5ecc0701232133t24973014y218375d9869dd4a7@mail.gmail.com>

Hi Ed,

On 1/20/07, Ed Suominen <general at eepatents.com> wrote:

> Well, as it says on the foss.eepatents.com site, "If you want to use
> this software under different terms ... feel free to contact me about
> it. Maybe we can work something out, maybe not." :-)
>
> I'm interested in the idea of some of the work getting adapted for
> IPython (a great project!), even if the adaptation winds up being
> licensed differently. Also, I have already done quite a bit of task
> farming in another as-yet-private package of mine, "AsynCluster" (is
> what it sounds like), which I'm planning to incorporate into
> Twisted-Goodies. Collaborating with someone capable like yourself on
> this would be great for both of us, I would think. So, let's get
> together on this off-list soon!

Well, from our side, we'd certainly be very interested in
collaborating with you.  Both Brian and I are developing ipython's
distributed computing capabilities because we need them in our
everyday work, and we'd be very happy to have more collaborators.
Brian knows a lot more about Twisted than I do so I'll defer detail
comments on your code to him, but as a general statement, we'd be
happy to have you on board.

Since this discussion may drift away from Twisted specifics and I
don't want to impose off-topic chat on this list, we'd be happy to
continue talking about the more ipython-specific questions on the
ipython lists (this is probably a -dev topic):

http://projects.scipy.org/mailman/listinfo/ipython-dev
http://projects.scipy.org/mailman/listinfo/ipython-user

If you feel you'd rather discuss licensing specifics off-list first,
then by all means go ahead (if you've already talked to Brian, I'll
catch up on the details directly from him, don't worry).

Thanks for your offer!

Best,

f



From hellojianwu at gmail.com  Wed Jan 24 02:49:16 2007
From: hellojianwu at gmail.com (jian wu)
Date: Tue, 23 Jan 2007 23:49:16 -0800
Subject: [Twisted-Python] Is it a good/recommended practice to pass
	Instance Method into reactor.callFromThread()/callInThread()?
In-Reply-To: <20070123223352.GB6055@steerpike.home.puzzling.org>
References: <d81c17cd0701222316y13774d00v6a09c8f17563a08a@mail.gmail.com>
	<20070123223352.GB6055@steerpike.home.puzzling.org>
Message-ID: <d81c17cd0701232349l64a59769if48ddb3bc5b830b5@mail.gmail.com>

Hi Andrew,

Thanks a lot for your quick reply!

Jian

On 1/23/07, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> jian wu wrote:
> > Hi Twisted Guru,
> >
> > I'm new to Twisted, I am just experimenting Twisted 2.5 with Python 2.5.
> >
> > It seems that I can pass either a python function or a python object instance
> > method to reactor.callInThread() for blocking operation and
> > reactor.callFromThread() in main event loop.
> >
> > I just want to see whether it is a good/recommended practice to pass Instance
> > Method into reactor.callFromThread()/callInThread(), which implies that the
> > application level context information stored in the python object instance is
> > available when the method is invoked, so I don't have to pass all the context
> > info as parameters. Do I miss anything in Twisted?
>
> Yes, passing bound methods is fine, and often useful for the reasons you give.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From yqiang at gmail.com  Wed Jan 24 16:02:54 2007
From: yqiang at gmail.com (Yi Qiang)
Date: Wed, 24 Jan 2007 13:02:54 -0800
Subject: [Twisted-Python] Foolscap-0.0.7 (aka newpb) released
In-Reply-To: <20070123.003231.11951578.warner@lothar.com>
References: <20070123.003231.11951578.warner@lothar.com>
Message-ID: <462750D5-4512-47CA-B0D6-673B727AE3AD@gmail.com>

On Jan 23, 2007, at 12:32 AM, Brian Warner wrote:

> Foolscap is a next-generation RPC protocol for Twisted, under  
> development as
> "newpb" for the last several years. It is intended to eventually  
> replace PB,
> but it is not yet ready for production use.
Hi Brian,
What are your plans for client-sever authentication with Foolscap?  I  
checked out the README and it made no mention of that capability yet.

Yi






From teratorn at twistedmatrix.com  Thu Jan 25 02:15:33 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Thu, 25 Jan 2007 01:15:33 -0600
Subject: [Twisted-Python] Pycon Twisted Sprint
Message-ID: <op.tmo7r7uxy3d107@office2>

Does anyone have any ideas for a Twisted Sprint? I will probably be  
staying at least through Monday.

Special-rate-registration ends in one week on February 1st. So if there is  
going to be any kind of organized activity we ought to figure it out in  
the next few days.

Please raise your hand if you want to hack on stuff after the 'con and,  
assuming enough peer interest, indicate how many days you would like to  
stay.

Personally if there was enough interest I would stay through Tuesday.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From therve at free.fr  Thu Jan 25 05:16:30 2007
From: therve at free.fr (Thomas =?utf-8?b?SGVydsOp?=)
Date: Thu, 25 Jan 2007 11:16:30 +0100
Subject: [Twisted-Python] Pycon Twisted Sprint
In-Reply-To: <op.tmo7r7uxy3d107@office2>
References: <op.tmo7r7uxy3d107@office2>
Message-ID: <20070125111630.naukia3jyzkkg4gc@wasabox.wasabout.net>

Quoting Eric Mangold <teratorn at twistedmatrix.com>:

> Does anyone have any ideas for a Twisted Sprint? I will probably be  
> staying at least through Monday.
>
> Special-rate-registration ends in one week on February 1st. So if 
> there is  going to be any kind of organized activity we ought to 
> figure it out in  the next few days.
>
> Please raise your hand if you want to hack on stuff after the 'con 
> and,  assuming enough peer interest, indicate how many days you would 
> like to  stay.
>
> Personally if there was enough interest I would stay through Tuesday.

I should be there on Monday, and ready to go for a sprint. Regarding 
what to do,
there's at least bug triage even if it's not fun. Otherwise, here are some
thoughts:
* the new process protocol (#2415)
* try to make a benchmark (#1177, #2201)
* epoll edge-triggered ?
* documentation

-- 
Thomas





From andrewfr_ice at yahoo.com  Thu Jan 25 11:44:01 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 25 Jan 2007 08:44:01 -0800 (PST)
Subject: [Twisted-Python] Losing Deferreds : Re: More Questions about Custom
	Reactors 
In-Reply-To: <E1H93Se-0007xs-02@pyramid.twistedmatrix.com>
Message-ID: <20070125164402.52226.qmail@web34211.mail.mud.yahoo.com>

Message: 3
Date: Mon, 22 Jan 2007 00:32:16 +0000
From: Phil Mayers <p.mayers at imperial.ac.uk>
Subject: Re: [Twisted-Python] More Questions about
Custom Reactors
To: Twisted general discussion
<twisted-python at twistedmatrix.com>
Message-ID: <45B40610.7020607 at imperial.ac.uk>
Content-Type: text/plain; charset=ISO-8859-1;
format=flowed

I am sorry that I am tardy in responding. I was trying
out your suggestions. Right now, my main question is
under which conditions do deferred fail to fire? How
do I know that the reactor is still running? Would
Manhole help? (Unfortunately I haven't been able to
get gtk to work Manhole with Twisted 2.4)

>Perhaps you could explain what you're actually trying
>to achieve, rather than the solution you have decided
>on? An indeed, why you want to use stackless at all -
>Twisted is predicated around the assumption of a 
>stackful i.e. single-threaded Python.

I understand your questioning. The main reason I am
using Stackless Python is for its process execution
state pickling abilities. A second reason is that I
find Stackless's communication model very handy for
modeling the type of thread synchronisation I wish to
do.

I know that Twisted assumes a stackful Python and it
is an uphill battle. However the gains from getting
Twisted to work with Stackless are so great, I think
it is worthwhile. For the most part, I have succeeded
in having Stackless Python work with Twisted. If you
read the Stackless mailing list, I have posted
examples. Soon, I will post on the Wiki.

My problems stem from situations where I have two or
more concurrent tasklets (Stackless threads) that do
the following)

tasklet[0] - waiting for a Twisted Request Handler
tasklet[1] - making a client.getPage call
tasklet[2] - making a client.getPage call
tasklet[3] - some other operation
tasklet[n] - some other operation

under these conditions, if tasklet[0] is executed
first, the other tasklets will block indefinitely. My
problems occur from trying to get around this.
Originally I tried taskLoop calling
stackless.schedule() to give other tasklets a chance
to execute but this would cause reactor problems.
Hence the current approach of looking at getting
Twisted to run in its own thread.

>Alternatively you might be wanting long-running jobs
>to be interleaved with other code transparently but
>without using real threads?

I am not sure how to do this.

>If you're proposing using queues to communicate
>between a Twisted thread running the reactor and a
>stackless thread running your micro-threads, 
>I don't see why you need to modify Twisted at all. 

I am a newbie to Twisted. Based on what I am reading,
I current assumption is that I would need to 

>You can just run the stackless microthreads from one
>"real" thread (started via callInThread), pass jobs
>from Twisted to the "real" thread and probably 
>a stackless uthread, and pass the replies back to the
>twisted thread with a callFromThread.

>So, can you not just do this?:

Philip, first the good news : thanks a million! This
is the exactly the type of example I wanted. It works.

The bad news - under certain conditions I am losing
deferreds. I think there are deadlock issues but that
is not Twisted's fault per se. Unfortunately debuggers
work poorly with Stackless so it is difficult for me
to know what is happening. I tried telneting but my
server is not responding - so I guess that implies
that Twisted is still listening but the reactor is not
working. Again, any suggestions would be more than
welcome.

Cheers,
Andrew


 
____________________________________________________________________________________
Bored stiff? Loosen up... 
Download and play hundreds of games for free on Yahoo! Games.
http://games.yahoo.com/games/front



From lee.a.connell at gmail.com  Thu Jan 25 21:57:32 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Thu, 25 Jan 2007 21:57:32 -0500
Subject: [Twisted-Python] xml
Message-ID: <000301c740f5$b9dfb700$0400a8c0@leelaptop>

Hey everyone,

 

I have been looking all night and I can?t find any examples of using simple
xml to write my own xml protocol for a chat server I intend to build.  All I
want to do is generate XML from commands and send it across the socket and
receive it on the other end and unpack it.  Any recommendations on what to
use and any tutorials or examples on how to do it.  I don?t know a whole lot
about XML programming, just it?s basic structure.

 

Thanks!


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.11/652 - Release Date: 1/25/2007
3:32 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070125/35e2e88c/attachment.htm 

From exarkun at divmod.com  Thu Jan 25 22:08:35 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 25 Jan 2007 22:08:35 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
Message-ID: <20070126030835.17245.482086047.divmod.quotient.11656@ohm>

On Thu, 25 Jan 2007 21:57:32 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>Hey everyone,
>
>I have been looking all night and I can?t find any examples of using simple
>xml to write my own xml protocol for a chat server I intend to build.  All I
>want to do is generate XML from commands and send it across the socket and
>receive it on the other end and unpack it.  Any recommendations on what to
>use and any tutorials or examples on how to do it.  I don?t know a whole lot
>about XML programming, just it?s basic structure.
>

Rather than developing a new protocol, have you considered using an existing
general purpose protocol to accomplish your goals?

For example, XMPP is an XML-based protocol which is already implemented in
Twisted.  You could use it to send messages.

Also, why are you interested in XML specifically?  Netstrings, AMP, or PB
might also be suitable.

Almost certainly, at least one of these is suited for the problem you are
trying to solve, and it is always beneficial to avoid implementing a new
protocol when possible.

Jean-Paul



From george at ringdevelopment.com  Fri Jan 26 08:38:21 2007
From: george at ringdevelopment.com (George Pauly)
Date: Fri, 26 Jan 2007 08:38:21 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
Message-ID: <1169818701.28429.298.camel@localhost.localdomain>

There's an example of twisted.web.xmlrpc in TNPE (the O'Reilly Twisted
book).  I think you can download the code from the O'Reilly website.

-George


On Thu, 2007-01-25 at 21:57 -0500, Lee Connell wrote:
> Hey everyone,
> 
>  
> 
> I have been looking all night and I can?t find any examples of using
> simple xml to write my own xml protocol for a chat server I intend to
> build.  All I want to do is generate XML from commands and send it
> across the socket and receive it on the other end and unpack it.  Any
> recommendations on what to use and any tutorials or examples on how to
> do it.  I don?t know a whole lot about XML programming, just it?s
> basic structure.
> 
>  
> 
> Thanks!
> 
> 
> 
> --
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.5.432 / Virus Database: 268.17.11/652 - Release Date:
> 1/25/2007 3:32 PM
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From rfg007 at yahoo.com  Fri Jan 26 09:33:21 2007
From: rfg007 at yahoo.com (Roberto Gomez)
Date: Fri, 26 Jan 2007 06:33:21 -0800 (PST)
Subject: [Twisted-Python] task.LoopingCall: a problem if change the system
	time
Message-ID: <20070126143321.90518.qmail@web52511.mail.yahoo.com>

Hi everyone,

I wrote a simple test trying to find why my app freeze
when change the system time:

#################
from twisted.internet import reactor, task
import time

def callback():
    print time.ctime(time.time())

t = task.LoopingCall(callback)
t.start(2.0)
reactor.run()

#################

If run this and change the system time, let's say a
day forward, everything work fine, but if change the
system time backward, the program freeze until you
change forward again. This is specially problematic
for a computer using ntp, updating its clock time to
time.

It seems that there is a problem in
LoopingCall._reschedule that don't play well when
"fromNow = self.starttime - self._seconds()" is
negative, and seems to be platform independent:

W2k Pro
python 2.4.4
twisted 2.4.0

Wxp Pro
python 2.4.4
twisted 2.4.0

Ubuntu Linux 5.1
python 2.4.2
twisted 2.0.1-4

I'm not a twisted expert, but and extensive user and
fan, and I don?t know how to workaround this.

Any clue?
TIA



 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com



From itamar at itamarst.org  Fri Jan 26 10:14:40 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 26 Jan 2007 10:14:40 -0500
Subject: [Twisted-Python] task.LoopingCall: a problem if change the
	system time
In-Reply-To: <20070126143321.90518.qmail@web52511.mail.yahoo.com>
References: <20070126143321.90518.qmail@web52511.mail.yahoo.com>
Message-ID: <1169824480.13155.10.camel@localhost.localdomain>

On Fri, 2007-01-26 at 06:33 -0800, Roberto Gomez wrote:

> It seems that there is a problem in
> LoopingCall._reschedule that don't play well when
> "fromNow = self.starttime - self._seconds()" is
> negative, and seems to be platform independent:

You probably want to file a bug on the website.





From rfg007 at yahoo.com  Fri Jan 26 10:57:22 2007
From: rfg007 at yahoo.com (Roberto Gomez)
Date: Fri, 26 Jan 2007 07:57:22 -0800 (PST)
Subject: [Twisted-Python] task.LoopingCall: a problem if change the system
	time
In-Reply-To: <1169824480.13155.10.camel@localhost.localdomain>
Message-ID: <917716.55246.qm@web52513.mail.yahoo.com>


--- Itamar Shtull-Trauring <itamar at itamarst.org>
wrote:

> On Fri, 2007-01-26 at 06:33 -0800, Roberto Gomez
> wrote:
> 
> > It seems that there is a problem in
> > LoopingCall._reschedule that don't play well when
> > "fromNow = self.starttime - self._seconds()" is
> > negative, and seems to be platform independent:
> 
> You probably want to file a bug on the website.
> 

filed. Ticket #2424
many thx

 



 
____________________________________________________________________________________
Get your own web address.  
Have a HUGE year through Yahoo! Small Business.
http://smallbusiness.yahoo.com/domains/?p=BESTDEAL



From lee.a.connell at gmail.com  Fri Jan 26 17:55:43 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Fri, 26 Jan 2007 17:55:43 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <1169818701.28429.298.camel@localhost.localdomain>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
	<1169818701.28429.298.camel@localhost.localdomain>
Message-ID: <000601c7419d$1ecf6e10$0400a8c0@leelaptop>

But can you use that with your own custom tcp servers? Like a chat server?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of George Pauly
Sent: Friday, January 26, 2007 8:38 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] xml

There's an example of twisted.web.xmlrpc in TNPE (the O'Reilly Twisted
book).  I think you can download the code from the O'Reilly website.

-George


On Thu, 2007-01-25 at 21:57 -0500, Lee Connell wrote:
> Hey everyone,
> 
>  
> 
> I have been looking all night and I can?t find any examples of using
> simple xml to write my own xml protocol for a chat server I intend to
> build.  All I want to do is generate XML from commands and send it
> across the socket and receive it on the other end and unpack it.  Any
> recommendations on what to use and any tutorials or examples on how to
> do it.  I don?t know a whole lot about XML programming, just it?s
> basic structure.
> 
>  
> 
> Thanks!
> 
> 
> 
> --
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.5.432 / Virus Database: 268.17.11/652 - Release Date:
> 1/25/2007 3:32 PM
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.11/652 - Release Date: 1/25/2007
3:32 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.12/653 - Release Date: 1/26/2007
11:11 AM
 




From ldanielburr at mac.com  Fri Jan 26 18:45:44 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 26 Jan 2007 17:45:44 -0600
Subject: [Twisted-Python] xml
In-Reply-To: <000601c7419d$1ecf6e10$0400a8c0@leelaptop>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
	<1169818701.28429.298.camel@localhost.localdomain>
	<000601c7419d$1ecf6e10$0400a8c0@leelaptop>
Message-ID: <op.tmscaix53oj628@l-daniel-burrs-powerbook-g4-17.local>

Hi Lee,

On Fri, 26 Jan 2007 16:55:43 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> But can you use that with your own custom tcp servers? Like a chat  
> server?
>

If it isn't a terrible nuisance, I'd like to ask you to please refrain
 from top-posting.  It makes following a thread harder, and that means
you're less likely to get good answers to your questions.  Not ragging
on you or anything, just making a request :)

Regarding twisted.web.xmlrpc: No, you cannot use it with any arbitrary
server; that module is specific to http.  You could certainly read over
the code (it is short) to get an idea of how
to implement xmlrpc atop your own tcp server.

For certain though, the best thing to look at is twisted.words, since
that package is full of chat protocols.  The jabber stuff, in particular,
should be helpful, since jabber uses a streaming XML protocol.  I'd
seriously suggest using the jabber stuff, rather than inventing your
own protocol.

Also, take a look at twisted.words.xish.xmlstream.  From the docstring:
"The most prominent use of XML Streams is Jabber, but this module is
generically usable. See Twisted Words for Jabber specific protocol
support."  That seems to me to be closest to what you want.

Hope this helps,

L. Daniel Burr



From lee.a.connell at gmail.com  Fri Jan 26 19:03:14 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Fri, 26 Jan 2007 19:03:14 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <op.tmscaix53oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop><1169818701.28429.298.camel@localhost.localdomain><000601c7419d$1ecf6e10$0400a8c0@leelaptop>
	<op.tmscaix53oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <000d01c741a6$8b15b260$0400a8c0@leelaptop>

> If it isn't a terrible nuisance, I'd like to ask you to please refrain
> from top-posting.

L. Daniel Burr,

Thanks for your response, I'm looking at twisted.words now.  What exactly is
top-posting?

-Lee

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.12/653 - Release Date: 1/26/2007
11:11 AM
 




From ldanielburr at mac.com  Fri Jan 26 19:19:37 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 26 Jan 2007 18:19:37 -0600
Subject: [Twisted-Python] xml
In-Reply-To: <000d01c741a6$8b15b260$0400a8c0@leelaptop>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
	<1169818701.28429.298.camel@localhost.localdomain>
	<000601c7419d$1ecf6e10$0400a8c0@leelaptop>
	<op.tmscaix53oj628@l-daniel-burrs-powerbook-g4-17.local>
	<000d01c741a6$8b15b260$0400a8c0@leelaptop>
Message-ID: <op.tmsduzsk3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Fri, 26 Jan 2007 18:03:14 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

>> If it isn't a terrible nuisance, I'd like to ask you to please refrain
>> from top-posting.
>
> L. Daniel Burr,
>
> Thanks for your response, I'm looking at twisted.words now.  What  
> exactly is
> top-posting?
>
> -Lee
>

Top-posting is the practice of putting your responses at the top of the
post, rather that in-line, following the comments to which you are
responding.

Have a good one,

L. Daniel Burr



From warner at lothar.com  Sat Jan 27 16:33:54 2007
From: warner at lothar.com (Brian Warner)
Date: Sat, 27 Jan 2007 13:33:54 -0800
Subject: [Twisted-Python] Foolscap-0.0.7 (aka newpb) released
In-Reply-To: <462750D5-4512-47CA-B0D6-673B727AE3AD@gmail.com> (Yi Qiang's
	message of "Wed, 24 Jan 2007 13:02:54 -0800")
References: <20070123.003231.11951578.warner@lothar.com>
	<462750D5-4512-47CA-B0D6-673B727AE3AD@gmail.com>
Message-ID: <87k5z8kvct.fsf@lothar.com>

>> Foolscap is a next-generation RPC protocol for Twisted, under development as
>> "newpb" for the last several years. It is intended to eventually replace PB,
>> but it is not yet ready for production use.

> Hi Brian,
> What are your plans for client-sever authentication with Foolscap?  I checked
> out the README and it made no mention of that capability yet.

I'm afraid I don't understand what you mean by "client-server
authentication".. can you expand upon that?

If what you want is a way to send a username/password to a server and have it
connect you to some resource based upon the validity of that pair, then it's
trivial to publish some sort of "login" object that has a method which
accepts that pair, and then does a lookup/verification and returns some sort
of avatar for that user, something like this:
  
  class Avatar(foolscap.Referenceable):
    def __init__(self, user_object):
        self.user_object = user_object
    def remote_stuff(self, args):
        return self.user_object.stuff(args)
  
  class Login(foolscap.Referenceable):
    def remote_login(self, username, password):
        if username in self.passwords and self.passwords[username] == password:
            return Avatar(self.user_objects[username])
        raise BadPasswordOrUnknownUserError()
  
  t = foolscap.Tub()
  pburl = t.registerReference(Login())
  print "connect your client to %s" % pburl

I haven't put a great deal of thought into how twisted.cred should be used in
conjunction with Foolscap, but my hunch is that it should just be a layer on
top, with some sort of convention for indicating what form of credentials the
client is offering.

cheers,
 -Brian




From lee.a.connell at gmail.com  Sat Jan 27 18:34:28 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 27 Jan 2007 18:34:28 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <20070126030835.17245.482086047.divmod.quotient.11656@ohm>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
	<20070126030835.17245.482086047.divmod.quotient.11656@ohm>
Message-ID: <000f01c7426b$b08dded0$0400a8c0@leelaptop>

Jean-Paul,

Thanks for your input,

I looked at them all, AMP looked pretty cool, but that's just something that
is enhancing XML-RPC correct?  Netstrings looked like a viable solution, but
I like XML formatting better.  

I am not sure if what I originally asked was correct, I am not designing
some new protocol, all I am doing is looking for something to wrap up my
packets which hold some commands and data, very basic stuff, is that
considered writing my own protocol?

Anyways, it looks like minidom will do what I want as far as parsing strings
and creating DOM's.  

Thank you!

////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
Rather than developing a new protocol, have you considered using an existing
general purpose protocol to accomplish your goals?

For example, XMPP is an XML-based protocol which is already implemented in
Twisted.  You could use it to send messages.

Also, why are you interested in XML specifically?  Netstrings, AMP, or PB
might also be suitable.

Almost certainly, at least one of these is suited for the problem you are
trying to solve, and it is always beneficial to avoid implementing a new
protocol when possible.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.11/652 - Release Date: 1/25/2007
3:32 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.12/653 - Release Date: 1/26/2007
11:11 AM
 




From radix at twistedmatrix.com  Sat Jan 27 19:38:13 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 27 Jan 2007 19:38:13 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <000f01c7426b$b08dded0$0400a8c0@leelaptop>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
	<20070126030835.17245.482086047.divmod.quotient.11656@ohm>
	<000f01c7426b$b08dded0$0400a8c0@leelaptop>
Message-ID: <60ed19d40701271638q244c2aa4w49af7b510ef6b03f@mail.gmail.com>

On 1/27/07, Lee Connell <lee.a.connell at gmail.com> wrote:
> Jean-Paul,
>
> Thanks for your input,
>
> I looked at them all, AMP looked pretty cool, but that's just something that
> is enhancing XML-RPC correct?

No, AMP is not based on XML-RPC at all; it's a custom protocol which
offers two-way communications (XML-RPC only supports client->server
request/response), and it doesn't use XML in the first place.

> Netstrings looked like a viable solution, but
> I like XML formatting better.

Why do you like XML formatting better? It's waaay more complicated
than netstrings, and if your protocol is simple, you shouldn't need
something too complicated.

> I am not sure if what I originally asked was correct, I am not designing
> some new protocol, all I am doing is looking for something to wrap up my
> packets which hold some commands and data, very basic stuff, is that
> considered writing my own protocol?

Yes :)

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From lee.a.connell at gmail.com  Sat Jan 27 22:27:02 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 27 Jan 2007 22:27:02 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <60ed19d40701271638q244c2aa4w49af7b510ef6b03f@mail.gmail.com>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop><20070126030835.17245.482086047.divmod.quotient.11656@ohm><000f01c7426b$b08dded0$0400a8c0@leelaptop>
	<60ed19d40701271638q244c2aa4w49af7b510ef6b03f@mail.gmail.com>
Message-ID: <000001c7428c$2dc6dad0$0400a8c0@leelaptop>

Jean Paul,

Do you use netstrings?  What version of netstrings.py do you use?  I'll have
another look at it, is this a non-maintained script? As far as XML, I'm just
use to it because of web development, that's all.

-Lee

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Christopher
Armstrong
Sent: Saturday, January 27, 2007 7:38 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] xml

On 1/27/07, Lee Connell <lee.a.connell at gmail.com> wrote:
> Jean-Paul,
>
> Thanks for your input,
>
> I looked at them all, AMP looked pretty cool, but that's just something
that
> is enhancing XML-RPC correct?

No, AMP is not based on XML-RPC at all; it's a custom protocol which
offers two-way communications (XML-RPC only supports client->server
request/response), and it doesn't use XML in the first place.

> Netstrings looked like a viable solution, but
> I like XML formatting better.

Why do you like XML formatting better? It's waaay more complicated
than netstrings, and if your protocol is simple, you shouldn't need
something too complicated.

> I am not sure if what I originally asked was correct, I am not designing
> some new protocol, all I am doing is looking for something to wrap up my
> packets which hold some commands and data, very basic stuff, is that
> considered writing my own protocol?

Yes :)

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.12/653 - Release Date: 1/26/2007
11:11 AM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.12/653 - Release Date: 1/26/2007
11:11 AM
 




From exarkun at twistedmatrix.com  Sun Jan 28 00:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Jan 2007 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1169960701.44.509208902@twistedmatrix.com

Bug summary
______________________
Summary for 2007-01-21 through 2007-01-28
Bugs opened: 12    Bugs closed: 6  Total open bugs: 826 (+6)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +4  |Highest:  -1          |Conch:     +2          
|Enhancement:  +0  |High:     +0          |Core:      +2          
|Task:         +2  |Normal:   +6          |Lore:      +1          
                   |Low:      +1          |Names:     +1          
                                          |Pydoctor:  +0          
                                          |Trial:     +1          
                                          |Web:       -1          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2413] Remove direct reactor usage from twisted.conch.insults.window.TopWindow to make it more easily testable (opened by exarkun) (CLOSED, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/2413

[#2414] Refactor DNSProtocol and DNSDatagramProtocol (opened by therve)
    enhancement     names      http://twistedmatrix.com/trac/ticket/2414

[#2421] Make sure that closing events are handled sanely with filetransfer (opened by jml)
    task            conch      http://twistedmatrix.com/trac/ticket/2421

                    ===== High =====
[#2423] ImportError on Nevow in pydoctor (opened by peterbe) (CLOSED, wontfix)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2423

                    ===== Normal =====
[#2415] update/replace spawnProcess and ProcessProtocol (opened by bigdog)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2415

[#2417] cannot import name page from nevow (0.9.0) (opened by kumar303) (CLOSED, wontfix)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2417

[#2418] Lore encourages duplicate data: <title> and <h1> (opened by jerub)
    defect          lore       http://twistedmatrix.com/trac/ticket/2418

[#2419] t.i.fdesc improvements (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2419

[#2420] os.kill in twisted.internet.process has no error handling (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/2420

[#2422] UnixSFTPFile os.write/os.read doesn't handle EINTR (opened by itamarst)
    defect          conch      http://twistedmatrix.com/trac/ticket/2422

[#2424] task.LoopingCall: a problem if change the system time (opened by rfg007)
    defect          core       http://twistedmatrix.com/trac/ticket/2424

                    ===== Low =====
[#2416] Move randomize logic from Loader to Runner (opened by jml)
    task            trial      http://twistedmatrix.com/trac/ticket/2416



Closed Bugs
______________________
                    ===== Highest =====
[#2413] Remove direct reactor usage from twisted.conch.insults.window.TopWindow to make it more easily testable (opened by exarkun, closed by exarkun, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/2413

[#867 ] Improvements to logging timestamp (opened by itamarst, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/867

[#2211] non-script files should not have shebang lines or be executable (opened by thomasvs, closed by therve, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2211

[#2323] support deque in objgrep (opened by glyph, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2323

                    ===== High =====
[#2423] ImportError on Nevow in pydoctor (opened by peterbe, closed by mwh, wontfix)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2423

                    ===== Normal =====
[#2417] cannot import name page from nevow (0.9.0) (opened by kumar303, closed by mwh, wontfix)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2417





From garyjefferson123 at gmail.com  Mon Jan 29 18:21:42 2007
From: garyjefferson123 at gmail.com (gary jefferson)
Date: Mon, 29 Jan 2007 16:21:42 -0700
Subject: [Twisted-Python] Re: Passing extra arguments to twistd?
Message-ID: <62ad745a0701291521h42d57af3x212231602ea130d7@mail.gmail.com>

It's been a while since this was discussed on the list, but I also
have a use-case where extra args to twistd would be far more useful
than any other option.  I'm doing a little p2p thing (which I'm sure
is not all that uncommon), and of course I want to test aggregate
behavior of many instances, so I instantiate 100 or so on my own box.
Not being able to pass in extra args to twistd makes this obviously
painful, as it adds the extra step of creating a bunch of
configuration or a hoard of different tac files, whereas I can spit
out a simple script that spawns instances with much more ease and
elegance.

Just something to chew on as you all think about adding such a feature
to twistd.

Gary


> On Fri, 9 Jun 2006 23:03:06 +0200, Terry Jones <terry at jon.es> wrote:
>> ...
>>Something like allowing
>>
>>  $ twistd -twistedopts file -- extra args here...
>>
>>would be nice. Or is there a better way to do this?
>
>.tac files _are_ configuration, so they don't _take_ configuration.  You
>should have so little code in your .tac file that it is neither burdensome
>nor distasteful to make a copy and change bits of it to meet particular
>configuration requirements.
>
>On the other hand, .tac files are far from the final word on configuration.
>They're just the last word Twisted has put in so far ;)  No doubt we'll see
>something better added at some future date.



From radix at twistedmatrix.com  Mon Jan 29 18:30:09 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 29 Jan 2007 18:30:09 -0500
Subject: [Twisted-Python] Re: Passing extra arguments to twistd?
In-Reply-To: <62ad745a0701291521h42d57af3x212231602ea130d7@mail.gmail.com>
References: <62ad745a0701291521h42d57af3x212231602ea130d7@mail.gmail.com>
Message-ID: <60ed19d40701291530t24953c14ra53cc9356323ae18@mail.gmail.com>

On 1/29/07, gary jefferson <garyjefferson123 at gmail.com> wrote:
> It's been a while since this was discussed on the list, but I also
> have a use-case where extra args to twistd would be far more useful
> than any other option.  I'm doing a little p2p thing (which I'm sure
> is not all that uncommon), and of course I want to test aggregate
> behavior of many instances, so I instantiate 100 or so on my own box.
> Not being able to pass in extra args to twistd makes this obviously
> painful, as it adds the extra step of creating a bunch of
> configuration or a hoard of different tac files, whereas I can spit
> out a simple script that spawns instances with much more ease and
> elegance.
>
> Just something to chew on as you all think about adding such a feature
> to twistd.

See the following:

  http://twistedmatrix.com/projects/core/documentation/howto/tap.html

And *maybe* the following

  http://twistedmatrix.com/trac/ticket/1490


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From garyjefferson123 at gmail.com  Tue Jan 30 11:43:22 2007
From: garyjefferson123 at gmail.com (gary jefferson)
Date: Tue, 30 Jan 2007 09:43:22 -0700
Subject: [Twisted-Python] Re: Passing extra arguments to twistd?
Message-ID: <62ad745a0701300843k385f0daidc6e251c983afb2c@mail.gmail.com>

On 1/29/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> See the following:
>
>  http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
> And *maybe* the following
>
>  http://twistedmatrix.com/trac/ticket/1490


Very cool, I like the idea of the run plugin.  Until that's ready, I
think I'll settle on the next easiest thing, which is just using ENV
variables to "pass in" args to each twistd process (which is easily
scripted).

Gary



From corydodt+hello at gmail.com  Tue Jan 30 11:50:30 2007
From: corydodt+hello at gmail.com (Cory Dodt)
Date: Tue, 30 Jan 2007 08:50:30 -0800
Subject: [Twisted-Python] Re: Passing extra arguments to twistd?
In-Reply-To: <62ad745a0701300843k385f0daidc6e251c983afb2c@mail.gmail.com>
References: <62ad745a0701300843k385f0daidc6e251c983afb2c@mail.gmail.com>
Message-ID: <c16a94ff0701300850r1e9083cbrb06f1c5a0329d2d9@mail.gmail.com>

Twistd plugins are available in the current release of Twisted, 2.5.

cory ~/wc/Twisted% python bin/twistd web
2007/01/30 09:50 -0700 [-] Log opened.
2007/01/30 09:50 -0700 [-] twistd 2.5.0+r19371 (c:\python24\python.exe 2.4.4)
starting up
2007/01/30 09:50 -0700 [-] reactor class: <class '
twisted.internet.selectreactor.SelectReactor'>
2007/01/30 09:50 -0700 [-] twisted.web.server.Site starting on 8080
2007/01/30 09:50 -0700 [-] Starting factory
<twisted.web.server.Siteinstance at 0x00F4A3F0>

C


On 1/30/07, gary jefferson <garyjefferson123 at gmail.com> wrote:
>
> On 1/29/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> > See the following:
> >
> >  http://twistedmatrix.com/projects/core/documentation/howto/tap.html
> >
> > And *maybe* the following
> >
> >  http://twistedmatrix.com/trac/ticket/1490
>
>
> Very cool, I like the idea of the run plugin.  Until that's ready, I
> think I'll settle on the next easiest thing, which is just using ENV
> variables to "pass in" args to each twistd process (which is easily
> scripted).
>
> Gary
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070130/1fda0da9/attachment.htm 

From manlio_perillo at libero.it  Tue Jan  2 13:24:26 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue, 02 Jan 2007 21:24:26 +0100
Subject: [Twisted-Python] writing a newsletter manager in Twisted
Message-ID: <459ABF7A.50705@libero.it>

Hi and happy new year.

I would like to write a newsletter manager in Twisted, using
twisted.mail and twisted.names.

I have the following requirements:
1) The sending of mails should be queued.
    The sending should friendly to server and internet load

2) I should be notified when an email address in unreachable
    (after n tries)

3) I want to use a caching DNS server, where I should be able to control
    the TTL (not sure this is a good idea)


Is this possible with Twisted and how much code I have to write?

A much simpler solution is to just use a MTA like Postfix and a DNS
server like Bind, but Twisted is more portable and flexible (?).



Thanks   Manlio Perillo




From felipe.lessa at gmail.com  Tue Jan  2 14:24:10 2007
From: felipe.lessa at gmail.com (Felipe Almeida Lessa)
Date: Tue, 2 Jan 2007 19:24:10 -0200
Subject: [Twisted-Python] writing a newsletter manager in Twisted
In-Reply-To: <459ABF7A.50705@libero.it>
References: <459ABF7A.50705@libero.it>
Message-ID: <c2701f5c0701021324lf7a50cfx2b81edf1d2073d7a@mail.gmail.com>

On 1/2/07, Manlio Perillo <manlio_perillo at libero.it> wrote:
> I would like to write a newsletter manager in Twisted, using
> twisted.mail and twisted.names.

Another one? What's wrong with the others?

> 1) The sending of mails should be queued.
>     The sending should friendly to server and internet load

I think you could create sort of a queue per server, and deliver it
after N messages ou X minutes waiting. It would not be very difficult
using DeferredQueue, I imagine.

> 2) I should be notified when an email address in unreachable
>     (after n tries)

Well, I don't see any reason why this wouldn't be possible.

> 3) I want to use a caching DNS server, where I should be able to control
>     the TTL (not sure this is a good idea)

I can't answer this one.

> A much simpler solution is to just use a MTA like Postfix and a DNS
> server like Bind, but Twisted is more portable and flexible (?).

It would be simpler using something like Mailman
http://www.gnu.org/software/mailman/ .

-- 
Felipe.



From gsantonja at free.fr  Tue Jan  2 15:06:08 2007
From: gsantonja at free.fr (Gabriel Santonja)
Date: Tue, 2 Jan 2007 23:06:08 +0100
Subject: [Twisted-Python] how can i connect curses getch function and a
 process launched with spawnprocesss?
Message-ID: <20070102230608.6124f68c@versailles>


Hello,

first : Happy new year 2007.

second : I have some difficulties with curses getch() function  and process launch
with spawnprocess.

I'm newbie in Twisted so i'm using the curses example who work fine with irc factory.
i'm using the process howto too 

But when i try to send a message to a process with a 
    >>> self.transport.writeSequence(contents+"\n") 

It's work fine with deferred but never with the curses.getch()

i need a loop like that :
	-  a caracter is push on the keyboard
	- getch function of curses send it 
	- this event is processing
	- a message is send to the process (launch by spawnprocess) who is concerned
	- a result is  send by the process and he is processing by the program 

i think I need to work with the reactor but i do not know how. 

I have trie all i can imagine but nothing work. Could you help me?

Thanks gabriel



From exarkun at divmod.com  Tue Jan  2 15:10:28 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 2 Jan 2007 17:10:28 -0500
Subject: [Twisted-Python] how can i connect curses getch function and a
	process launched with spawnprocesss?
In-Reply-To: <20070102230608.6124f68c@versailles>
Message-ID: <20070102221028.11447.916720539.divmod.quotient.4859@ohm>

On Tue, 2 Jan 2007 23:06:08 +0100, Gabriel Santonja <gsantonja at free.fr> wrote:
>
>Hello,
>
>first : Happy new year 2007.
>
>second : I have some difficulties with curses getch() function  and process launch
>with spawnprocess.
>
>I'm newbie in Twisted so i'm using the curses example who work fine with irc factory.
>i'm using the process howto too
>
>But when i try to send a message to a process with a
>    >>> self.transport.writeSequence(contents+"\n")

You probably want to just use write() here.  writeSequence is for
lists of strings.  Of course, it works for regular strings too, but
there's little point.

>
>It's work fine with deferred but never with the curses.getch()
>
>i need a loop like that :
>	-  a caracter is push on the keyboard
>	- getch function of curses send it
>	- this event is processing
>	- a message is send to the process (launch by spawnprocess) who is concerned
>	- a result is  send by the process and he is processing by the program
>
>i think I need to work with the reactor but i do not know how.
>
>I have trie all i can imagine but nothing work. Could you help me?

It may be worth passing usePTY=True to spawnProcess.  I'm not sure what
curses' requirements are exactly, but I wouldn't be surprised if it wanted
something vaguely terminal like: the default with spawnProcess is to set
up something that looks more like a shell redirection.

Jean-Paul



From hzqij at qq.com  Tue Jan  2 19:32:41 2007
From: hzqij at qq.com (=?gb2312?B?aHpxaWo=?=)
Date: Wed, 3 Jan 2007 10:32:41 +0800
Subject: [Twisted-Python] a question ablout DeferredList
Message-ID: tencent_6B0945974B50F229186F5432@qq.com

i have a sample code about DeferredList like this:

from twisted.internet import reactor, defer

def printResult(results):
  for resultInfo in results:
      success, result = resultInfo
      if success:
          print result
  reactor.stop()

def addTen(result):
  return result + " ten"

deferred1 = defer.Deferred()
deferred2 = defer.Deferred()
deferred3 = defer.Deferred()
dl = defer.DeferredList([deferred1, deferred2,
deferred3]).addCallback(printResult)
deferred1.callback('one')
deferred2.callback('two')
deferred3.callback('three')
reactor.run()

then i run this code, it print:

one
two
three

but the reactor never stop even i have call reactor.stop() on
printResult, i press CTRL+C, some error happen:

Unhandled error in Deferred:
Traceback (most recent call last):
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/defer.py",
line 317, in _runCallbacks
  self.result = callback(self.result, *args, **kw)
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/defer.py",
line 507, in _cbDeferred
  self.callback(self.resultList)
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/defer.py",
line 239, in callback
  self._startRunCallbacks(result)
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/defer.py",
line 304, in _startRunCallbacks
  self._runCallbacks()
--- <exception caught here> ---
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/defer.py",
line 317, in _runCallbacks
  self.result = callback(self.result, *args, **kw)
 File "defer5.py", line 8, in printResult
  reactor.stop()
 File "/usr/local/lib/python2.4/site-packages/twisted/internet/base.py",
line 342, in stop
  raise RuntimeError, "can't stop reactor that isn't running"
exceptions.RuntimeError: can't stop reactor that isn't running

plz help me, thank you!
 

From grant at osafoundation.org  Tue Jan  2 20:40:46 2007
From: grant at osafoundation.org (Grant Baillie)
Date: Tue, 2 Jan 2007 19:40:46 -0800
Subject: [Twisted-Python] a question ablout DeferredList
In-Reply-To: tencent_6B0945974B50F229186F5432@qq.com
References: tencent_6B0945974B50F229186F5432@qq.com
Message-ID: <7AD9D575-B77A-4335-B3F7-137E39A3C8DD@osafoundation.org>


On 2 Jan, 2007, at 18:32, hzqij wrote:

> i have a sample code about DeferredList like this:
>
> from twisted.internet import reactor, defer
>
> def printResult(results):
>   for resultInfo in results:
>       success, result = resultInfo
>       if success:
>           print result
>   reactor.stop()
>
> def addTen(result):
>   return result + " ten"
>
> deferred1 = defer.Deferred()
> deferred2 = defer.Deferred()
> deferred3 = defer.Deferred()
> dl = defer.DeferredList([deferred1, deferred2,
> deferred3]).addCallback(printResult)
> deferred1.callback('one')
> deferred2.callback('two')
> deferred3.callback('three')

At this point, printResult() will get called, because you just fired  
all the deferreds in the DeferredList. But, your printResult()  
assumes the reactor is running, and you haven't started it yet ...

> reactor.run()

It seems to me that if all you're doing is trying out Deferred/ 
DeferredList, you could just remove the calls to reactor.stop/start 
(): It kind of depends on what your sample code is going to be doing.

--Grant

> then i run this code, it print:
>
> one
> two
> three
>
> but the reactor never stop even i have call reactor.stop() on
> printResult, i press CTRL+C, some error happen:
>
> Unhandled error in Deferred:
> Traceback (most recent call last):
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> defer.py",
> line 317, in _runCallbacks
>   self.result = callback(self.result, *args, **kw)
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> defer.py",
> line 507, in _cbDeferred
>   self.callback(self.resultList)
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> defer.py",
> line 239, in callback
>   self._startRunCallbacks(result)
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> defer.py",
> line 304, in _startRunCallbacks
>   self._runCallbacks()
> --- <exception caught here> ---
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> defer.py",
> line 317, in _runCallbacks
>   self.result = callback(self.result, *args, **kw)
>  File "defer5.py", line 8, in printResult
>   reactor.stop()
>  File "/usr/local/lib/python2.4/site-packages/twisted/internet/ 
> base.py",
> line 342, in stop
>   raise RuntimeError, "can't stop reactor that isn't running"
> exceptions.RuntimeError: can't stop reactor that isn't running
>
> plz help me, thank you!
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From felipe.lessa at gmail.com  Wed Jan  3 08:12:53 2007
From: felipe.lessa at gmail.com (Felipe Almeida Lessa)
Date: Wed, 3 Jan 2007 13:12:53 -0200
Subject: [Twisted-Python] a question ablout DeferredList
In-Reply-To: <7AD9D575-B77A-4335-B3F7-137E39A3C8DD@osafoundation.org>
References: <7AD9D575-B77A-4335-B3F7-137E39A3C8DD@osafoundation.org>
Message-ID: <c2701f5c0701030712v1452ad02v6cee064126069c61@mail.gmail.com>

On 1/3/07, Grant Baillie <grant at osafoundation.org> wrote:
> It seems to me that if all you're doing is trying out Deferred/
> DeferredList, you could just remove the calls to reactor.stop/start
> (): It kind of depends on what your sample code is going to be doing.

Or use reactor.callLater:

from twisted.internet import reactor, defer

def printResult(results):
    for resultInfo in results:
        success, result = resultInfo
        if success:
            print result
    reactor.stop()

def doIt():
    deferred1 = defer.Deferred()
    deferred2 = defer.Deferred()
    deferred3 = defer.Deferred()
    dl = defer.DeferredList([deferred1, deferred2,
    deferred3]).addCallback(printResult)
    deferred1.callback('one')
    deferred2.callback('two')
    deferred3.callback('three')

reactor.callLater(0.0, doIt)
reactor.run()

-- 
Felipe.



From twisted-python at milkpotato.org  Wed Jan  3 12:54:39 2007
From: twisted-python at milkpotato.org (fritz)
Date: Wed, 03 Jan 2007 12:54:39 -0700
Subject: [Twisted-Python] How do I gracefully handle losing a connection?
Message-ID: <20070103125438.3a0ad024ae5a198c10a90d54bed1b07a.344a60f809.wbe@email.secureserver.net>

Hello all,
I'm building off of the ssh client example in the excellent O'Reilly
book on Twisted by Abe Fettig but I've run into some problems and I'm
not sure how I should proceed.

Basically, I've implemented additional methods in order to handle
connection issues with the client. The goal being, exiting of the
program and printing out an error message detailing why the connection
failed:

class ClientCommandFactory(protocol.ClientFactory):

    ...

    def clientConnectionFailed(self, connector, reason):
        print reason.getErrorMessage()
        reactor.stop()

class CommandChannel(channel.SSHChannel):

    ...

    def closed(self):
        reactor.stop()

    def openFailed(self, reason):
        print reason.getErrorMessage()
        reactor.stop()

class ClientCommandTransport(transport.SSHClientTransport):

    ...

    def connectionFailed(self, reason):
        print reason.getErrorMessage()
        reactor.stop()

    def connectionLost(self, reason):
        print reason.getErrorMessage()
        reactor.stop()



The problem I'm currently facing is that. The connection properly ends
and the program exits when bad data is supplied on the command line but
when the program exits cleanly CommandChannel.closed() forces a call to
ClientCommandTransport.connectionLost() and we see an exception thrown
on a connection that I thought should end cleanly:

Connection to the other side was lost in a non-clean fashion: Connection
lost.
Traceback (most recent call last):
  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py",
line 226, in mainLoop
    self.runUntilCurrent()
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line
555, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line
414, in _continueSystemEvent
    callable(*args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line
375, in disconnectAll
    failure.Failure(main.CONNECTION_LOST))
--- <exception caught here> ---
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line
53, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/python/log.py", line
38, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/python/context.py",
line 59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.3/site-packages/twisted/python/context.py",
line 37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/tcp.py", line
554, in connectionLost
    Connection.connectionLost(self, reason)
  File "/usr/lib/python2.3/site-packages/twisted/internet/tcp.py", line
402, in connectionLost
    protocol.connectionLost(reason)
  File "code/python/sshclient/sshclient.py", line 33, in connectionLost
    reactor.stop()
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line
342, in stop
    raise RuntimeError, "can't stop reactor that isn't running"
exceptions.RuntimeError: can't stop reactor that isn't running


If I remove reactor.stop() from ClientCommandTransport.connectionLost()
I then face the issue of some connection problems not being handled
correctly and the program will go idle on some bad connections.

So my question is, how can I fix my code to handle these exceptions and
all cases of bad connections and connections terminating abnormally?
Where should I implement connectionLost() and connectionFailed() and
how can I cleanly disconnect from the SSH server without seeing ugly
errors like the one above?

Thanks in advance,
Fritz




From gsantonja at free.fr  Wed Jan  3 14:33:01 2007
From: gsantonja at free.fr (Gabriel Santonja)
Date: Wed, 3 Jan 2007 22:33:01 +0100
Subject: [Twisted-Python] how can i connect curses getch function
	...[Solved]
In-Reply-To: <20070102221028.11447.916720539.divmod.quotient.4859@ohm>
References: <20070102230608.6124f68c@versailles>
	<20070102221028.11447.916720539.divmod.quotient.4859@ohm>
Message-ID: <20070103223301.21d76103@versailles>



> It may be worth passing usePTY=True to spawnProcess.  I'm not sure what
it's done
And i've made some minors change and it's seem to work.  

Thanks you



From manlio_perillo at libero.it  Thu Jan  4 03:47:24 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 04 Jan 2007 11:47:24 +0100
Subject: [Twisted-Python] writing a newsletter manager in Twisted
In-Reply-To: <c2701f5c0701021324lf7a50cfx2b81edf1d2073d7a@mail.gmail.com>
References: <459ABF7A.50705@libero.it>
	<c2701f5c0701021324lf7a50cfx2b81edf1d2073d7a@mail.gmail.com>
Message-ID: <459CDB3C.40702@libero.it>

Felipe Almeida Lessa ha scritto:
> On 1/2/07, Manlio Perillo <manlio_perillo at libero.it> wrote:
>> I would like to write a newsletter manager in Twisted, using
>> twisted.mail and twisted.names.
> 
> Another one? What's wrong with the others?
> 

They are written in PHP or Perl.

>> 1) The sending of mails should be queued.
>>     The sending should friendly to server and internet load
> 
> I think you could create sort of a queue per server, and deliver it
> after N messages ou X minutes waiting. It would not be very difficult
> using DeferredQueue, I imagine.
> 

I have read all the options available for Postfix, like sending methods, 
SMTP connection caching.
Its not so simple.

>> 2) I should be notified when an email address in unreachable
>>     (after n tries)
> 
> Well, I don't see any reason why this wouldn't be possible.
> 

The question is: is this possible with twisted.mail out of the box?

>> 3) I want to use a caching DNS server, where I should be able to control
>>     the TTL (not sure this is a good idea)
> 
> I can't answer this one.
> 
>> A much simpler solution is to just use a MTA like Postfix and a DNS
>> server like Bind, but Twisted is more portable and flexible (?).
> 
> It would be simpler using something like Mailman
> http://www.gnu.org/software/mailman/ .
> 

Yes, it is possible to do something with Mailman.
However I would like to have a solution in pure Twisted, since it can be 
used on Windows, too.



Regards  Manlio Perillo



From nico at tekNico.net  Thu Jan  4 04:14:09 2007
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 04 Jan 2007 12:14:09 +0100
Subject: [Twisted-Python] Re: writing a newsletter manager in Twisted
In-Reply-To: <459CDB3C.40702@libero.it>
References: <459ABF7A.50705@libero.it>	<c2701f5c0701021324lf7a50cfx2b81edf1d2073d7a@mail.gmail.com>
	<459CDB3C.40702@libero.it>
Message-ID: <eninhq$7h4$1@sea.gmane.org>

> Felipe Almeida Lessa ha scritto:
>> It would be simpler using something like Mailman
>> http://www.gnu.org/software/mailman/ .

Manlio Perillo wrote:
> Yes, it is possible to do something with Mailman.
> However I would like to have a solution in pure Twisted, since it can be
> used on Windows, too.

Did you see Enemies of Carlotta?

http://liw.iki.fi/liw/eoc/

Ha un front-end basato su Nevow, Eocmanage:

http://www.inoi.fi/open/trac/eocmanage


-- 
Nicola Larosa - http://www.tekNico.net/

I have been working on a design doc for restricted execution of Python
as part of my dissertation for getting Python into Firefox to replace
JavaScript on the web. -- Brett Cannon, June 2006




From n_draghetta at yahoo.com  Sat Jan  6 04:12:49 2007
From: n_draghetta at yahoo.com (n_draghetta)
Date: Sat, 6 Jan 2007 03:12:49 -0800 (PST)
Subject: [Twisted-Python] Twisted Adapter
Message-ID: <20070106111249.16385.qmail@web51502.mail.yahoo.com>

Hi all!
I have a wrapper in Python and I want to make an adapter in Twisted so that the wrapper can be used.I haven't found any informations about adapters in Twisted.Can anyone guide me please/send me to a tutorial?

Thanks.

 __________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070106/3ca36796/attachment.html>

From glyph at divmod.com  Sat Jan  6 06:53:17 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 06 Jan 2007 13:53:17 -0000
Subject: [Twisted-Python] Twisted Adapter
Message-ID: <20070106135317.17094.716600902.divmod.xquotient.696@joule.divmod.com>

On 11:12 am, n_draghetta at yahoo.com wrote:
>Hi all!
>I have a wrapper in Python and I want to make an adapter in Twisted so that the wrapper can be used.I haven't found any informations about adapters in Twisted.Can anyone guide me please/send me to a tutorial?

What do you mean by "wrapper"?  Depending on what you mean, you might not need to write anything at all.

Here is a tutorial on Twisted's components / adapters system:

http://twistedmatrix.com/projects/core/documentation/howto/components.html

and there's something a bit more detailed here, that shows lots of protocol code hooked up to it:

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/components.html

Do these answer your question?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070106/0b42bcf5/attachment.html>

From n_draghetta at yahoo.com  Sat Jan  6 07:09:56 2007
From: n_draghetta at yahoo.com (n_draghetta)
Date: Sat, 6 Jan 2007 06:09:56 -0800 (PST)
Subject: [Twisted-Python] Twisted Adapter
In-Reply-To: <20070106135317.17094.716600902.divmod.xquotient.696@joule.divmod.com>
Message-ID: <20070106140956.99013.qmail@web51504.mail.yahoo.com>

I have a wrapper written in Python for a TLS library written in C. I have to write an adapter in Twisted in order to encrypt the communication.

Thanks.

glyph at divmod.com wrote: On 11:12 am, n_draghetta at yahoo.com wrote:
>Hi all!
>I have a wrapper in Python and I want to make an adapter in Twisted so that the wrapper can be used.I haven't found any informations about adapters in Twisted.Can anyone guide me please/send me to a tutorial?

What do you mean by "wrapper"?  Depending on what you mean, you might not need to write anything at all.

Here is a tutorial on Twisted's components / adapters system:

http://twistedmatrix.com/projects/core/documentation/howto/components.html

and there's something a bit more detailed here, that shows lots of protocol code hooked up to it:

http://twistedmatrix.com/projects/core/documentation/howto/tutorial/components.html

Do these answer your question?_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


 __________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070106/e3dc18f4/attachment.html>

From glyph at divmod.com  Sat Jan  6 07:57:37 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 06 Jan 2007 14:57:37 -0000
Subject: [Twisted-Python] Twisted Adapter
Message-ID: <20070106145737.17094.987796594.divmod.xquotient.704@joule.divmod.com>

On 02:09 pm, n_draghetta at yahoo.com wrote:
>I have a wrapper written in Python for a TLS library written in C. I have to write an adapter in Twisted in order to encrypt the communication.

Twisted already includes TLS support via PyOpenSSL.  See:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorSSL.html

There are some annoying deficiencies, mainly where PyOpenSSL has left out wrapping an API, but in general it works well.

It is certainly possible to plug in your own, but it would involve a fairly deep understanding of the implementation details of both Twisted and your TLS library.

If you need some TLS feature that Twisted does not currently provide, your best bet would be looking at this ticket, and contributing patches to help us with it:

    http://twistedmatrix.com/trac/ticket/2293

We don't wish to fork PyOpenSSL, and certainly are not enthusiastic to maintain it, but the current maintainer seems to have abandoned it, and it would be easier to continue some light maintenance without him than to port to a whole new TLS layer.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070106/224448c4/attachment.html>

From johna at johnaherne.co.uk  Sun Jan  7 04:41:52 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Sun, 07 Jan 2007 11:41:52 +0000
Subject: [Twisted-Python] twisted and gprs networks
Message-ID: <45A0DC80.2090807@johnaherne.co.uk>

I am looking at using PDA devices talking to a server over gprs.

I need to push data to the PDA over elapsed timeframes that might be 
hours. Naturally during this timespan the device may have been dropped 
from the network or acquire a different IP address.

However to push data to the PDA, I need to record the IP and port used 
by the PDA for its first contact since it is stuck behind a firewall.

The socket needs to be kept open on the PDA so the server can keep 
responding on the same session over a period of time.

Using straight sockets I can do this by holding the reference to the 
IP/port used by the PDA. And checking every now and then that the 
connection is still valid. But I am no comms expert and I need to keep 
track of over 100 devices and keep reliably sending messages to them at 
random intervals.

So, I thought it might be better to use some framework for the server 
since I am no expert on sockets.

But looking through the docs for twisted and some of the code, I can't 
see anywhere how I can get and use a reference to the port and reuse the 
open session on the PDA.

Can I do this with twisted or should I look for some other way of doing 
what I want.

I was thinking I could use irc with twisted but not sure if I am barking 
up the wrong tree.

Thanks for any ideas of solving the problem.

John Aherne




From p.mayers at imperial.ac.uk  Sun Jan  7 09:50:56 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 07 Jan 2007 16:50:56 +0000
Subject: [Twisted-Python] twisted and gprs networks
In-Reply-To: <45A0DC80.2090807@johnaherne.co.uk>
References: <45A0DC80.2090807@johnaherne.co.uk>
Message-ID: <45A124F0.7010805@imperial.ac.uk>

John Aherne wrote:
> I am looking at using PDA devices talking to a server over gprs.
> 
> I need to push data to the PDA over elapsed timeframes that might be 
> hours. Naturally during this timespan the device may have been dropped 
> from the network or acquire a different IP address.
> 
> However to push data to the PDA, I need to record the IP and port used 
> by the PDA for its first contact since it is stuck behind a firewall.

Those two paragraphs seem, to me, to be contradictory. The IP might 
change, but you need to know the IP?

> The socket needs to be kept open on the PDA so the server can keep 
> responding on the same session over a period of time.

Sessions need not be tied to a particular transport layer connection. 
HTTP applications commonly deploy sessions (for example, using cookies) 
that span multiple transport layer connections.

> 
> Using straight sockets I can do this by holding the reference to the 
> IP/port used by the PDA. And checking every now and then that the 
> connection is still valid. But I am no comms expert and I need to keep 
> track of over 100 devices and keep reliably sending messages to them at 
> random intervals.
> 
> So, I thought it might be better to use some framework for the server 
> since I am no expert on sockets.
> 
> But looking through the docs for twisted and some of the code, I can't 
> see anywhere how I can get and use a reference to the port and reuse the 
> open session on the PDA.
> 
> Can I do this with twisted or should I look for some other way of doing 
> what I want.
> 
> I was thinking I could use irc with twisted but not sure if I am barking 
> up the wrong tree.
> 
> Thanks for any ideas of solving the problem.

You haven't defined the problem well enough for me to suggest a specific 
solution, but Twisted can do all of the things above.

Could you give a bit more detail on what you want to achieve?



From zmola at acm.org  Sun Jan  7 09:56:37 2007
From: zmola at acm.org (Carl Zmola)
Date: Sun, 07 Jan 2007 11:56:37 -0500
Subject: [Twisted-Python] twisted and gprs networks
In-Reply-To: <45A0DC80.2090807@johnaherne.co.uk>
References: <45A0DC80.2090807@johnaherne.co.uk>
Message-ID: <45A12645.1000000@acm.org>

John,

 From my experience with mobile devices, you will need to do a little 
more work than just using TCP/IP or UDP for this. Sockets work well if 
the communication is reliable, but if the connection goes down regularly 
you will need to think about different ways of doing this.

I would suggest assigning each PDA a unique name (at the PDA device).  
Your GPRS device should have an ID that will serve this purpose.

It will be up to the PDA to reconnect the socket when the network 
becomes available again.

The server can do the mapping by the devices ID number.

Carl

John Aherne wrote:
> I am looking at using PDA devices talking to a server over gprs.
>
> I need to push data to the PDA over elapsed timeframes that might be 
> hours. Naturally during this timespan the device may have been dropped 
> from the network or acquire a different IP address.
>
> However to push data to the PDA, I need to record the IP and port used 
> by the PDA for its first contact since it is stuck behind a firewall.
>
> The socket needs to be kept open on the PDA so the server can keep 
> responding on the same session over a period of time.
>
> Using straight sockets I can do this by holding the reference to the 
> IP/port used by the PDA. And checking every now and then that the 
> connection is still valid. But I am no comms expert and I need to keep 
> track of over 100 devices and keep reliably sending messages to them 
> at random intervals.
>
> So, I thought it might be better to use some framework for the server 
> since I am no expert on sockets.
>
> But looking through the docs for twisted and some of the code, I can't 
> see anywhere how I can get and use a reference to the port and reuse 
> the open session on the PDA.
>
> Can I do this with twisted or should I look for some other way of 
> doing what I want.
>
> I was thinking I could use irc with twisted but not sure if I am 
> barking up the wrong tree.
>
> Thanks for any ideas of solving the problem.
>
> John Aherne
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Sun Jan  7 09:59:50 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 7 Jan 2007 11:59:50 -0500
Subject: [Twisted-Python] twisted and gprs networks
In-Reply-To: <45A0DC80.2090807@johnaherne.co.uk>
Message-ID: <20070107165950.11447.129653943.divmod.quotient.8976@ohm>

On Sun, 07 Jan 2007 11:41:52 +0000, John Aherne <johna at johnaherne.co.uk> wrote:
>I am looking at using PDA devices talking to a server over gprs.
>
>I need to push data to the PDA over elapsed timeframes that might be hours. 
>Naturally during this timespan the device may have been dropped from the 
>network or acquire a different IP address.
>
>However to push data to the PDA, I need to record the IP and port used by 
>the PDA for its first contact since it is stuck behind a firewall.
>
>The socket needs to be kept open on the PDA so the server can keep 
>responding on the same session over a period of time.
>
>Using straight sockets I can do this by holding the reference to the IP/port 
>used by the PDA. And checking every now and then that the connection is 
>still valid. But I am no comms expert and I need to keep track of over 100 
>devices and keep reliably sending messages to them at random intervals.
>
>So, I thought it might be better to use some framework for the server since 
>I am no expert on sockets.
>
>But looking through the docs for twisted and some of the code, I can't see 
>anywhere how I can get and use a reference to the port and reuse the open 
>session on the PDA.
>
>Can I do this with twisted or should I look for some other way of doing what 
>I want.
>
>I was thinking I could use irc with twisted but not sure if I am barking up 
>the wrong tree.
>
>Thanks for any ideas of solving the problem.
>

It's not totally clear to me what you're after.  Perhaps you could define
some terms.  What is a "session"?  What kind of sockets are involved?  What
does it mean to "hold a reference" to an IP/port?

If I try to guess at the answers to these questions, then it sounds like
a pretty straightforward problem involving multiple connections, which is
easily enough handled in Twisted.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Jan  7 11:07:55 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Jan 2007 18:07:55 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1168193275.04.17032369@twistedmatrix.com

Bug summary
______________________
Summary for 2006-12-31 through 2007-01-07
Bugs opened: 28    Bugs closed: 19  Total open bugs: 810 (+9)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +5  |Highest:  -3          |Conch:               +0  
|Enhancement:  +5  |High:     +0          |Core:                +4  
|Task:         +0  |Normal:  +12          |Mail:                +1  
                   |Low:      +1          |Names:               +0  
                                          |News:                +1  
                                          |Pb:                  -1  
                                          |Release Management:  +3  
                                          |Trial:               +1  
                                          |Web:                 -1  
                                          |Web2:                +0  
                                          |Website:             +1  
                                          |Words:               +1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2344] Typos in AMP docstrings (opened by scmikes) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2344

[#2365] trial should completely manage its output stream (opened by glyph)
    defect          trial      http://twistedmatrix.com/trac/ticket/2365

                    ===== High =====
[#2357] "twistd words" should also run an amp server (opened by glyph)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2357

[#1120] OS-X vs PTYProcess, OSError vs IOError (opened by warner)
    defect          core       http://twistedmatrix.com/trac/ticket/1120

                    ===== Normal =====
[#2340] Special case inlineCallbacks for case where Deferred already has value (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2340

[#2341] Merge twisted.internet.process.PTYProcess and Process (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/2341

[#2342] scgi client doesn't handle content-length (opened by jknight)
    defect          web2       http://twistedmatrix.com/trac/ticket/2342

[#2343] createCGIEnvironment should refuse if path segments have a / (opened by jknight)
    defect          web2       http://twistedmatrix.com/trac/ticket/2343

[#2346] Header generation not conforming to RFC822 and RFC2046 (opened by tekNico)
    defect          web2       http://twistedmatrix.com/trac/ticket/2346

[#2347] "Register" Trac link not working (opened by tekNico) (CLOSED, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/2347

[#2348] Does the ticket bot still work? (opened by jknight) (CLOSED, invalid)
    task            website    http://twistedmatrix.com/trac/ticket/2348

[#2349] unify "download" page on the web site (opened by glyph)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2349

[#2350] Update release process to only use one branch (opened by glyph)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2350

[#2351] Apt line for Ubuntu dapper that contains released Twisteds (opened by glyph)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2351

[#2352] Document and enforce deprecation policy (opened by glyph) (CLOSED, duplicate)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2352

[#2353] Change Twisted "main" release to a time-based version number (opened by glyph)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2353

[#2354] Handling of EINTR in threadedselectreactor.py (opened by dkosovic)
    defect          core       http://twistedmatrix.com/trac/ticket/2354

[#2355] twisted/protocols/stateful.py uses StringIO incorrectly (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2355

[#2356] twisted/test/test_banana.py uses StringIO incorrectly (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2356

[#2358] twisted.conch.insults.insults.ITerminalTransport.setScrollRegion missing (opened by exarkun)
    defect          conch      http://twistedmatrix.com/trac/ticket/2358

[#2359] Release TwistedConch-0.8 (opened by radix) (CLOSED, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2359

[#2360] Release TwistedMail-0.4 (opened by radix) (CLOSED, fixed)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/2360

[#2361] Release TwistedNames-0.4 (opened by radix) (CLOSED, fixed)
    enhancement     names      http://twistedmatrix.com/trac/ticket/2361

[#2362] Release TwistedWords-0.5.0 (opened by radix) (CLOSED, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2362

[#2363] Release TwistedLore-0.3.0 (opened by radix) (CLOSED, fixed)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2363

[#2364] Release TwistedNews-0.3.0 (opened by radix)
    enhancement     news       http://twistedmatrix.com/trac/ticket/2364

[#2366] Make filepath work on windows (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/2366

                    ===== Low =====
[#2345] All POP3 IMailbox should allow Deferred return values (opened by exarkun)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/2345



Closed Bugs
______________________
                    ===== Highest =====
[#1514] twisted.spread.banana check for INT vs. LONGINT will fail on some 64-bit platforms (opened by itamarst, closed by exarkun, fixed)
    defect          pb         http://twistedmatrix.com/trac/ticket/1514

[#2284] web2 submitRequest result does not have content-length (opened by ghazel, closed by foom, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2284

[#2344] Typos in AMP docstrings (opened by scmikes, closed by glyph, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2344

[#2329] Release TwistedCore-2.5 (opened by radix, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2329

[#2330] Release TwistedWeb-0.7 (opened by radix, closed by radix, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2330

                    ===== High =====
[#1120] OS-X vs PTYProcess, OSError vs IOError (opened by warner, closed by itamarst, )
    defect          core       http://twistedmatrix.com/trac/ticket/1120

[#484 ] manhole gtk2: Gtk-ERROR **: Char offset 1 is off the end of the line
aborting... (opened by slyphon, closed by acapnotic, worksforme)
    defect          conch      http://twistedmatrix.com/trac/ticket/484

[#2332] Subprojects Efficacy Review (opened by glyph, closed by glyph, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2332

                    ===== Normal =====
[#1605] twisted.python.components.{getAdapterClass,getAdapterClassWithInheritance} mispell "deprecated" in docstring (opened by exarkun, closed by itamarst, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1605

[#2302] t.web2.channel.http.HTTPParser deals with HEAD requests incorrectly (opened by ghazel, closed by foom, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2302

[#1619] Reloading html page with unchanged CSS generates traceback (opened by jacob, closed by jknight, duplicate)
    defect          web2       http://twistedmatrix.com/trac/ticket/1619

[#2347] "Register" Trac link not working (opened by tekNico, closed by jknight, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/2347

[#2348] Does the ticket bot still work? (opened by jknight, closed by jknight, invalid)
    task            website    http://twistedmatrix.com/trac/ticket/2348

[#2352] Document and enforce deprecation policy (opened by glyph, closed by radix, duplicate)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2352

[#2363] Release TwistedLore-0.3.0 (opened by radix, closed by radix, fixed)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2363

[#2359] Release TwistedConch-0.8 (opened by radix, closed by radix, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2359

[#2360] Release TwistedMail-0.4 (opened by radix, closed by radix, fixed)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/2360

[#2361] Release TwistedNames-0.4 (opened by radix, closed by radix, fixed)
    enhancement     names      http://twistedmatrix.com/trac/ticket/2361

[#2362] Release TwistedWords-0.5.0 (opened by radix, closed by radix, fixed)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2362





From stephen at thorne.id.au  Mon Jan  8 04:49:06 2007
From: stephen at thorne.id.au (Stephen Thorne)
Date: Mon, 08 Jan 2007 21:49:06 +1000
Subject: [Twisted-Python] Twisted
	=?iso-8859-1?q?=B5Conf_=40_linux=2Econf=2Eau?=
Message-ID: <45A22FB2.2080607@thorne.id.au>

It turns out there's going to be a sizable contingent of Twisted hackers 
at linux.conf.au '07. As such, I'm attempting to organise a Micro 
Conference on the sunday before the conference.

I'm planning on gathering at where we're staying Randwick Lodge, 211 
Avoca St because there's wifi access available, and I'd like to be able 
to sit down and hack.

Jonathan has mentioned wanting to hack on trial, and while I'm not 
resistant to that, I'm open to suggestions. :)

http://shiny.thorne.id.au/shiny/shiny.html	
http://zoomin.com.au/australia/nsw/sydney/randwick/avoca+street/211/

Stephen.

Scanned by the NetBox from NetBox Blue
(http://netboxblue.com/)



From srock258 at gmail.com  Mon Jan  8 09:18:16 2007
From: srock258 at gmail.com (Sean Roark)
Date: Mon, 8 Jan 2007 11:18:16 -0500
Subject: [Twisted-Python] twisted and gprs networks
In-Reply-To: <20070107165950.11447.129653943.divmod.quotient.8976@ohm>
References: <45A0DC80.2090807@johnaherne.co.uk>
	<20070107165950.11447.129653943.divmod.quotient.8976@ohm>
Message-ID: <a7964aae0701080818o1b696778w3955adff83779043@mail.gmail.com>

I have done some GPRS comms work with Python using asyncore and UDP sockets.
I'm in the process, if someone would give me a charge number, of moving to
Twisted as I am certain I can achieve the same goal in a much better design.

I had the same problem with the IP address of the client (the PDA in your
case). I used a polling design where each client routinely polled the
server. Every time a poll comes from a client I grab the IP and port form
the UDP header along with the client id embedded in the message. Saving this
in a dictionary gave me an easy to use lookup for pushing data out to the
client. You may need to get fancy with the dictionary. For example, I my add
a time stamp the record so I know the last time the client sent a response.
If a client has been down for some amount of time it could be removed the
dictionary.

So, you need:

1. Client has an id that it transmits with every message to the server
2. Client stores the server IP/PORT so it can poll independently.
3. RETRY LOGIC if you use UDP!!!

This has been deployed to the field server up to 3000 clients with a 25
second poll rate avg 22 bytes per message. In short, it works pretty well.

On 1/7/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Sun, 07 Jan 2007 11:41:52 +0000, John Aherne <johna at johnaherne.co.uk>
> wrote:
> >I am looking at using PDA devices talking to a server over gprs.
> >
> >I need to push data to the PDA over elapsed timeframes that might be
> hours.
> >Naturally during this timespan the device may have been dropped from the
> >network or acquire a different IP address.
> >
> >However to push data to the PDA, I need to record the IP and port used by
> >the PDA for its first contact since it is stuck behind a firewall.
> >
> >The socket needs to be kept open on the PDA so the server can keep
> >responding on the same session over a period of time.
> >
> >Using straight sockets I can do this by holding the reference to the
> IP/port
> >used by the PDA. And checking every now and then that the connection is
> >still valid. But I am no comms expert and I need to keep track of over
> 100
> >devices and keep reliably sending messages to them at random intervals.
> >
> >So, I thought it might be better to use some framework for the server
> since
> >I am no expert on sockets.
> >
> >But looking through the docs for twisted and some of the code, I can't
> see
> >anywhere how I can get and use a reference to the port and reuse the open
> >session on the PDA.
> >
> >Can I do this with twisted or should I look for some other way of doing
> what
> >I want.
> >
> >I was thinking I could use irc with twisted but not sure if I am barking
> up
> >the wrong tree.
> >
> >Thanks for any ideas of solving the problem.
> >
>
> It's not totally clear to me what you're after.  Perhaps you could define
> some terms.  What is a "session"?  What kind of sockets are
> involved?  What
> does it mean to "hold a reference" to an IP/port?
>
> If I try to guess at the answers to these questions, then it sounds like
> a pretty straightforward problem involving multiple connections, which is
> easily enough handled in Twisted.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070108/8c4789c6/attachment.html>

From els24 at cornell.edu  Mon Jan  8 11:01:08 2007
From: els24 at cornell.edu (Eric Spaulding)
Date: Mon, 08 Jan 2007 13:01:08 -0500
Subject: [Twisted-Python] twisted and gprs networks
In-Reply-To: <45A0DC80.2090807@johnaherne.co.uk>
References: <45A0DC80.2090807@johnaherne.co.uk>
Message-ID: <45A286E4.2070502@cornell.edu>

In my very limited experience with GPRS and remote devices,  I would
suggest a polling model over a push.  Unless you're willing to pay for
extra vpn/static IP services to your GPRS provider,  the remote unit
will be, as you say, firewalled and should be responsible for starting
the connection to an accessible server process.

The merit of keeping the connection open is not obvious to me.

If you aren't transferring data constantly, why not have the pda poll
periodically?:
-open connection to server
-send PDA id, request available data.
-receive data, if available.
-close connection.
-wait n seconds

Good luck,
-ES


John Aherne wrote:
> I am looking at using PDA devices talking to a server over gprs.
>
> I need to push data to the PDA over elapsed timeframes that might be
> hours. Naturally during this timespan the device may have been dropped
> from the network or acquire a different IP address.
>
> However to push data to the PDA, I need to record the IP and port used
> by the PDA for its first contact since it is stuck behind a firewall.
>
> The socket needs to be kept open on the PDA so the server can keep
> responding on the same session over a period of time.
>
> Using straight sockets I can do this by holding the reference to the
> IP/port used by the PDA. And checking every now and then that the
> connection is still valid. But I am no comms expert and I need to keep
> track of over 100 devices and keep reliably sending messages to them
> at random intervals.
>
> So, I thought it might be better to use some framework for the server
> since I am no expert on sockets.
>
> But looking through the docs for twisted and some of the code, I can't
> see anywhere how I can get and use a reference to the port and reuse
> the open session on the PDA.
>
> Can I do this with twisted or should I look for some other way of
> doing what I want.
>
> I was thinking I could use irc with twisted but not sure if I am
> barking up the wrong tree.
>
> Thanks for any ideas of solving the problem.
>
> John Aherne
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From johna at johnaherne.co.uk  Mon Jan  8 12:46:15 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Mon, 08 Jan 2007 19:46:15 +0000
Subject: [Twisted-Python] twisted and gprs
Message-ID: <45A29F87.4070501@johnaherne.co.uk>

Thanks to Phil, Carl and JPCalderone for the replies.

I'll try and answer them by explaining more clearly what I am trying to 
do. And explaining some terms that I were vague.

The sessions are a connection that I need to keep open -  a combination 
of IP address and source port no - so the server can use the source port 
number that the PDA used when making the initial connection. The PDA 
will need to block on the TCPIP socket waiting for messages to be sent 
to it. It will process the message and then wait again. Provided the PDA 
does not close the socket and lose the connection with the original port 
no, the firewall will let the conversation keep going.

The server will send on the initial source/destination port nos and not 
close the connection. This way the PDA can still be contacted over a 
long period of time. Because the PDA is behind the network firewall, if 
the original port used by the PDA is lost, the server can no longer send 
data to the PDA, since the firewall will not let the traffic through 
even though the IP address had not changed.

As Carl pointed out I will need more than the IP address to identify the 
PDA. I will need an ID from the PDA that is unique so that if the PDA 
comes back in with a different IP address I can pick that up, drop the 
existing IP/port no if I still have it and register it with it's new IP 
address and source port no.

As i write this down, explaining it to myself as much as anyone else, I 
think to myself that the mechanics look very much like an irc 
connection. I might be wrong so please let me know.

The server will need to ping the PDA to confirm the connection is still 
there. If lost it will deregister the PDA and wait for it to reconnect 
again. What I am not sure about with irc is whether I can keep hold of 
the port no used by the PDA as its source port and maintain the 
connection with the IP address/port no combination.

What I would like is if I can find a framework that does most of the 
heavy work with the communications. I can then find a suitable point to 
make some not too difficult changes to accommodate my requirements.

I have done a very simple test using the socket library to confirm that 
the basics do work. The connection stays open and as long as I do not 
close the socket connection at either end and use the same 
source/destination port numbers the traffic flows.And I can push data 
without the PDA having to initiate new connections and requesting data.

I hope this a better explanation than my first post. I am sure there 
will still be bits that might not be clear so let me know and I will 
fill in any gaps.

If it is clear,  what I am looking to find out is which bits of twisted 
I would need to use and what parts would need changing and to what extent.

One final note, there could be around 100 of the PDAs to look after.

Thanks for any feedback.

John Aherne




From p.mayers at imperial.ac.uk  Mon Jan  8 13:21:42 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 08 Jan 2007 20:21:42 +0000
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A29F87.4070501@johnaherne.co.uk>
References: <45A29F87.4070501@johnaherne.co.uk>
Message-ID: <45A2A7D6.3030403@imperial.ac.uk>

John Aherne wrote:
> Thanks to Phil, Carl and JPCalderone for the replies.
> 
> I'll try and answer them by explaining more clearly what I am trying to 
> do. And explaining some terms that I were vague.
> 
> The sessions are a connection that I need to keep open -  a combination 
> of IP address and source port no - so the server can use the source port 
> number that the PDA used when making the initial connection. The PDA 

You only need to do this with UDP or other connection-less protocols. 
TCP will bind the connection and do the tracking for you.

> will need to block on the TCPIP socket waiting for messages to be sent 
> to it. It will process the message and then wait again. Provided the PDA 
> does not close the socket and lose the connection with the original port 
> no, the firewall will let the conversation keep going.

You will need keepalives for this, but yes.

> 
> The server will send on the initial source/destination port nos and not 

Again, TCP does this automatically

> close the connection. This way the PDA can still be contacted over a 
> long period of time. Because the PDA is behind the network firewall, if 
> the original port used by the PDA is lost, the server can no longer send 
> data to the PDA, since the firewall will not let the traffic through 
> even though the IP address had not changed.
> 
> As Carl pointed out I will need more than the IP address to identify the 
> PDA. I will need an ID from the PDA that is unique so that if the PDA 
> comes back in with a different IP address I can pick that up, drop the 
> existing IP/port no if I still have it and register it with it's new IP 
> address and source port no.
> 
> As i write this down, explaining it to myself as much as anyone else, I 
> think to myself that the mechanics look very much like an irc 
> connection. I might be wrong so please let me know.

I don't know why you're bringing up IRC. IRC uses TCP, so no port-number 
bookkeeping will be required.

> 
> The server will need to ping the PDA to confirm the connection is still 

Again, TCP keepalives

> there. If lost it will deregister the PDA and wait for it to reconnect 
> again. What I am not sure about with irc is whether I can keep hold of 
> the port no used by the PDA as its source port and maintain the 
> connection with the IP address/port no combination.

Again, IRC uses TCP which does this all automatically. Forget about the 
port numbers.

> 
> What I would like is if I can find a framework that does most of the 
> heavy work with the communications. I can then find a suitable point to 
> make some not too difficult changes to accommodate my requirements.
> 
> I have done a very simple test using the socket library to confirm that 
> the basics do work. The connection stays open and as long as I do not 
> close the socket connection at either end and use the same 
> source/destination port numbers the traffic flows.And I can push data 
> without the PDA having to initiate new connections and requesting data.
> 
> I hope this a better explanation than my first post. I am sure there 
> will still be bits that might not be clear so let me know and I will 
> fill in any gaps.
> 
> If it is clear,  what I am looking to find out is which bits of twisted 
> I would need to use and what parts would need changing and to what extent.
> 
> One final note, there could be around 100 of the PDAs to look after.

That's a tiny number.

Just have each PDA make a TCP connection to the server. Enable TCP 
keepalives on both the client and on the server ends of the connection. 
Have the first operation on a new TCP connection be a "login" i.e. PDA 
says here is my ID, server maps the ID to a TCP connection. Have your 
server message distribution look up the current TCP connection for a 
given ID and send the message.

It's a trivial application.



From johna at johnaherne.co.uk  Mon Jan  8 14:11:44 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Mon, 08 Jan 2007 21:11:44 +0000
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A2A7D6.3030403@imperial.ac.uk>
References: <45A29F87.4070501@johnaherne.co.uk>
	<45A2A7D6.3030403@imperial.ac.uk>
Message-ID: <45A2B390.6080508@johnaherne.co.uk>

Phil Mayers wrote:
> John Aherne wrote:
>> Thanks to Phil, Carl and JPCalderone for the replies.
>>
>> I'll try and answer them by explaining more clearly what I am trying 
>> to do. And explaining some terms that I were vague.
>>
>> The sessions are a connection that I need to keep open -  a 
>> combination of IP address and source port no - so the server can use 
>> the source port number that the PDA used when making the initial 
>> connection. The PDA 
>
> You only need to do this with UDP or other connection-less protocols. 
> TCP will bind the connection and do the tracking for you.
>
>> will need to block on the TCPIP socket waiting for messages to be 
>> sent to it. It will process the message and then wait again. Provided 
>> the PDA does not close the socket and lose the connection with the 
>> original port no, the firewall will let the conversation keep going.
>
> You will need keepalives for this, but yes.
>
>>
>> The server will send on the initial source/destination port nos and not 
>
> Again, TCP does this automatically
>
>> close the connection. This way the PDA can still be contacted over a 
>> long period of time. Because the PDA is behind the network firewall, 
>> if the original port used by the PDA is lost, the server can no 
>> longer send data to the PDA, since the firewall will not let the 
>> traffic through even though the IP address had not changed.
>>
>> As Carl pointed out I will need more than the IP address to identify 
>> the PDA. I will need an ID from the PDA that is unique so that if the 
>> PDA comes back in with a different IP address I can pick that up, 
>> drop the existing IP/port no if I still have it and register it with 
>> it's new IP address and source port no.
>>
>> As i write this down, explaining it to myself as much as anyone else, 
>> I think to myself that the mechanics look very much like an irc 
>> connection. I might be wrong so please let me know.
>
> I don't know why you're bringing up IRC. IRC uses TCP, so no 
> port-number bookkeeping will be required.
>
>>
>> The server will need to ping the PDA to confirm the connection is still 
>
> Again, TCP keepalives
>
>> there. If lost it will deregister the PDA and wait for it to 
>> reconnect again. What I am not sure about with irc is whether I can 
>> keep hold of the port no used by the PDA as its source port and 
>> maintain the connection with the IP address/port no combination.
>
> Again, IRC uses TCP which does this all automatically. Forget about 
> the port numbers.
>
>>
>> What I would like is if I can find a framework that does most of the 
>> heavy work with the communications. I can then find a suitable point 
>> to make some not too difficult changes to accommodate my requirements.
>>
>> I have done a very simple test using the socket library to confirm 
>> that the basics do work. The connection stays open and as long as I 
>> do not close the socket connection at either end and use the same 
>> source/destination port numbers the traffic flows.And I can push data 
>> without the PDA having to initiate new connections and requesting data.
>>
>> I hope this a better explanation than my first post. I am sure there 
>> will still be bits that might not be clear so let me know and I will 
>> fill in any gaps.
>>
>> If it is clear,  what I am looking to find out is which bits of 
>> twisted I would need to use and what parts would need changing and to 
>> what extent.
>>
>> One final note, there could be around 100 of the PDAs to look after.
>
> That's a tiny number.
>
> Just have each PDA make a TCP connection to the server. Enable TCP 
> keepalives on both the client and on the server ends of the 
> connection. Have the first operation on a new TCP connection be a 
> "login" i.e. PDA says here is my ID, server maps the ID to a TCP 
> connection. Have your server message distribution look up the current 
> TCP connection for a given ID and send the message.
>
> It's a trivial application.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Phil

Thanks for the reply.

I'm obviously missing some obvious point I think.

I need to be sure that the connection keeps on using the same 
source/destination ports for the duration, so the firewall lets the 
conversation carry on.

Provided I don't close the socket at either end will the PDA and server 
carry on using the same set of source/destination ports.

The test I did I purposely took note of the port used by the PDA as the 
network people told me to make sure I kept them the same. I then forced 
the server to send using that port as the destination. Over the time 
frame of about 40  minutes I did not need to issue any keepalives. I 
would rather not issue keepalives since this will cost money on a gprs 
network based on data usage.

Yes I know 100 is not much but I thought I would mention it as being 
more than 1.


Thanks for any clarification.

John Aherne




From andreas at kostyrka.org  Mon Jan  8 15:01:04 2007
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Mon, 8 Jan 2007 23:01:04 +0100
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A2B390.6080508@johnaherne.co.uk>
References: <45A29F87.4070501@johnaherne.co.uk>
	<45A2A7D6.3030403@imperial.ac.uk>
	<45A2B390.6080508@johnaherne.co.uk>
Message-ID: <20070108220104.GA29783@andi-lap.la.revver.com>

* John Aherne <johna at johnaherne.co.uk> [070108 22:28]:
> I'm obviously missing some obvious point I think.
> 
> I need to be sure that the connection keeps on using the same source/destination ports for the duration, so the firewall lets the conversation carry on.
> 
> Provided I don't close the socket at either end will the PDA and server carry on using the same set of source/destination ports.
> 
> The test I did I purposely took note of the port used by the PDA as the network people told me to make sure I kept them the same. I then forced the server to send using that port as 
> the destination. Over the time frame of about 40  minutes I did not need to issue any keepalives. I would rather not issue keepalives since this will cost money on a gprs network based 
> on data usage.

The huge problem here is, that there are no (repeat no) assertations
how long firewalls keep their association. Worse, you cannot be even
be sure that the IP addresses of your client are unique. Technically,
they have to unique up to the NAT gateway.

So basically, going the TCP way, with heart beats (that might need
automatic/manual tuning, depending upon the network) is a safe
conservative solution.

Furthermore, GPRS is usually billed at 10/100KB increments. So doing a
one byte keepalive message every minute, in both directions, would
mean 5000 minutes or 50000 minutes before the keep alives cause real
costs. While making the GPRS timeout implies a new connection, and
lost money, because the payment increments start from zero.

So sending a small keepalive packet is a sensible thing to do.

Andreas



From johna at johnaherne.co.uk  Mon Jan  8 15:30:25 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Mon, 08 Jan 2007 22:30:25 +0000
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <20070108220104.GA29783@andi-lap.la.revver.com>
References: <45A29F87.4070501@johnaherne.co.uk>	<45A2A7D6.3030403@imperial.ac.uk>	<45A2B390.6080508@johnaherne.co.uk>
	<20070108220104.GA29783@andi-lap.la.revver.com>
Message-ID: <45A2C601.8070106@johnaherne.co.uk>

Andreas Kostyrka wrote:
> * John Aherne <johna at johnaherne.co.uk> [070108 22:28]:
>   
>> I'm obviously missing some obvious point I think.
>>
>> I need to be sure that the connection keeps on using the same source/destination ports for the duration, so the firewall lets the conversation carry on.
>>
>> Provided I don't close the socket at either end will the PDA and server carry on using the same set of source/destination ports.
>>
>> The test I did I purposely took note of the port used by the PDA as the network people told me to make sure I kept them the same. I then forced the server to send using that port as 
>> the destination. Over the time frame of about 40  minutes I did not need to issue any keepalives. I would rather not issue keepalives since this will cost money on a gprs network based 
>> on data usage.
>>     
>
> The huge problem here is, that there are no (repeat no) assertations
> how long firewalls keep their association. Worse, you cannot be even
> be sure that the IP addresses of your client are unique. Technically,
> they have to unique up to the NAT gateway.
>
> So basically, going the TCP way, with heart beats (that might need
> automatic/manual tuning, depending upon the network) is a safe
> conservative solution.
>
> Furthermore, GPRS is usually billed at 10/100KB increments. So doing a
> one byte keepalive message every minute, in both directions, would
> mean 5000 minutes or 50000 minutes before the keep alives cause real
> costs. While making the GPRS timeout implies a new connection, and
> lost money, because the payment increments start from zero.
>
> So sending a small keepalive packet is a sensible thing to do.
>
> Andreas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   
Andreas

Thanks for the info.

You are right. The IP addresses are not unique. It is the combination of 
IP/PortNo that is unique if I understand the network people correctly. 
They share about 10 IPs with everyone.

I'll run some more tests on how long the firewall is designed to keep 
its associations. And as well I'll check with the network operators.

I'll also check re the costings for keepalives.

Thanks

John Aherne




From andreas at kostyrka.org  Mon Jan  8 17:37:17 2007
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Tue, 9 Jan 2007 01:37:17 +0100
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A2C601.8070106@johnaherne.co.uk>
References: <45A29F87.4070501@johnaherne.co.uk>
	<45A2A7D6.3030403@imperial.ac.uk>
	<45A2B390.6080508@johnaherne.co.uk>
	<20070108220104.GA29783@andi-lap.la.revver.com>
	<45A2C601.8070106@johnaherne.co.uk>
Message-ID: <20070109003716.GA11342@andi-lap.la.revver.com>

* John Aherne <johna at johnaherne.co.uk> [070108 23:44]:
> Andreas Kostyrka wrote:
> >* John Aherne <johna at johnaherne.co.uk> [070108 22:28]:
> >  
> >>I'm obviously missing some obvious point I think.
> >>
> >>I need to be sure that the connection keeps on using the same source/destination ports for the duration, so the firewall lets the conversation carry on.
> >>
> >>Provided I don't close the socket at either end will the PDA and server carry on using the same set of source/destination ports.
> >>
> >>The test I did I purposely took note of the port used by the PDA as the network people told me to make sure I kept them the same. I then forced the server to send using that port as 
> >>the destination. Over the time frame of about 40  minutes I did not need to issue any keepalives. I would rather not issue keepalives since this will cost money on a gprs network 
> >>based on data usage.
> >>    
> >
> >The huge problem here is, that there are no (repeat no) assertations
> >how long firewalls keep their association. Worse, you cannot be even
> >be sure that the IP addresses of your client are unique. Technically,
> >they have to unique up to the NAT gateway.
> >
> >So basically, going the TCP way, with heart beats (that might need
> >automatic/manual tuning, depending upon the network) is a safe
> >conservative solution.
> >
> >Furthermore, GPRS is usually billed at 10/100KB increments. So doing a
> >one byte keepalive message every minute, in both directions, would
> >mean 5000 minutes or 50000 minutes before the keep alives cause real
> >costs. While making the GPRS timeout implies a new connection, and
> >lost money, because the payment increments start from zero.
> >
> >So sending a small keepalive packet is a sensible thing to do.
> >
> >Andreas
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >  
> Andreas
> 
> Thanks for the info.
> 
> You are right. The IP addresses are not unique. It is the combination of IP/PortNo that is unique if I understand the network people correctly. They share about 10 IPs with everyone.
Not even that. At best ports are random. Ports are 16 bit integers
(and some ranges are reserved). So if you include somehow the client
IP, you've got a problem.

OTOH, client IPs as they arrive on the server (gateway IP so to say)
plus ports should be unique.


> 
> I'll run some more tests on how long the firewall is designed to keep its associations. And as well I'll check with the network operators.
The problem here is, that you need to consider:
*) your app will get deployed on some other network.
*) the network people change their config (e.g. because the gateway
has problems to remember all it's associations).
*) if you have not an insider connection to the real responsible, most
network operators won't be able to give you that information.
> 
> I'll also check re the costings for keepalives.

Just take a look at the rates for GPRS. In Europe, they are billed
usually at increments of 100KB. So making a connection timeout and
reestablishing the GPRS session costs you on average 50KB that you
could use for application level keep alives.

Andreas



From johna at johnaherne.co.uk  Tue Jan  9 01:20:12 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Tue, 09 Jan 2007 08:20:12 +0000
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <20070109003716.GA11342@andi-lap.la.revver.com>
References: <45A29F87.4070501@johnaherne.co.uk>	<45A2A7D6.3030403@imperial.ac.uk>	<45A2B390.6080508@johnaherne.co.uk>	<20070108220104.GA29783@andi-lap.la.revver.com>	<45A2C601.8070106@johnaherne.co.uk>
	<20070109003716.GA11342@andi-lap.la.revver.com>
Message-ID: <45A3503C.6020201@johnaherne.co.uk>


>> Andreas
>>
>> Thanks for the info.
>>
>> You are right. The IP addresses are not unique. It is the combination of IP/PortNo that is unique if I understand the network people correctly. They share about 10 IPs with everyone.
>>     
> Not even that. At best ports are random. Ports are 16 bit integers
> (and some ranges are reserved). So if you include somehow the client
> IP, you've got a problem.
>
> OTOH, client IPs as they arrive on the server (gateway IP so to say)
> plus ports should be unique.
>
>
>   
>> I'll run some more tests on how long the firewall is designed to keep its associations. And as well I'll check with the network operators.
>>     
> The problem here is, that you need to consider:
> *) your app will get deployed on some other network.
> *) the network people change their config (e.g. because the gateway
> has problems to remember all it's associations).
> *) if you have not an insider connection to the real responsible, most
> network operators won't be able to give you that information.
>   
>> I'll also check re the costings for keepalives.
>>     
>
> Just take a look at the rates for GPRS. In Europe, they are billed
> usually at increments of 100KB. So making a connection timeout and
> reestablishing the GPRS session costs you on average 50KB that you
> could use for application level keep alives.
>
> Andreas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   
Andreas

Thanks.

You are probably right about the cost of keepalives. I'll be setting up 
some sort of test for it.

And switching networks will no doubt prove a problem. But I have a 
feeling they all work on the same basis, so I may be ok if I get the 
basic protocol right.

One issue with the PDAs is as follows:--

One connection to the server is to set up a link the server can use to 
push data to the PDA. The PDA will wait on this connection for data to 
be sent through.

So it is the server that needs to know if this connection is down. The 
server will need to send the keepalives. If the connection is gone, the 
server will mark the unit as gone-away and wait for it to reconnect.

That will present a problem to send keepalives to 100 units and check 
responses. This will take a fair amount of time especially if some of 
them have dropped out. So I might need to have a lower rate of keepalive.

The PDA as client will send its data and status info to another server 
as simple http posts. If it can't find the server it will just timeout 
and the user will need to resend or reconnect.

So I was looking at using twisted for the part where the server was 
pushing data to the PDA based on events occurring elsewhere. I was 
hoping that twisted would give me a basic comms framework that did the 
nuts and bolts and I could plug my application into.

Is that a good possibility.

Thanks

John Aherne





From zmola at acm.org  Tue Jan  9 22:23:21 2007
From: zmola at acm.org (Carl Zmola)
Date: Wed, 10 Jan 2007 00:23:21 -0500
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A2B390.6080508@johnaherne.co.uk>
References: <45A29F87.4070501@johnaherne.co.uk>	<45A2A7D6.3030403@imperial.ac.uk>
	<45A2B390.6080508@johnaherne.co.uk>
Message-ID: <45A47849.8010302@acm.org>

John Aherne wrote:
> Phil
>
> Thanks for the reply.
>
> I'm obviously missing some obvious point I think.
I think the obvious point is that: Everything works find while the TCP 
socket is open.  The server knows everything about the client at that 
time.  Keep alives are sent  to keep the connection open. 

The only problem occurs when the connection is closed.  The client must 
be responsible for re-establishing the connection, since the server can 
not reach the client.
To make matters more fun, the client will not always know the connection 
is down unless the client is sending keep alives (with a watchdog timer 
going).

After you figure this all out, you can worry about UDP. UDP would only 
be useful in this situation when the client is pumping data to the 
server and does not need an immediate response, since the server may not 
be able to send UDP data to the client.  A good example would be 
position updates.  The client could send position updates every minute 
via UDP and connect via TCP every 15 minutes to guarantee the messages 
got through.

You should probably get familiar with IP, UDP and TCP framing and byte 
counting if you are working with GPRS.  Bytes can start to add up if you 
don't pay attention to them.



Carl



From johna at johnaherne.co.uk  Wed Jan 10 01:49:05 2007
From: johna at johnaherne.co.uk (John Aherne)
Date: Wed, 10 Jan 2007 08:49:05 +0000
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A47849.8010302@acm.org>
References: <45A29F87.4070501@johnaherne.co.uk>	<45A2A7D6.3030403@imperial.ac.uk>	<45A2B390.6080508@johnaherne.co.uk>
	<45A47849.8010302@acm.org>
Message-ID: <45A4A881.3090806@johnaherne.co.uk>

Carl Zmola wrote:
> John Aherne wrote:
>> Phil
>>
>> Thanks for the reply.
>>
>> I'm obviously missing some obvious point I think.
> I think the obvious point is that: Everything works find while the TCP 
> socket is open.  The server knows everything about the client at that 
> time.  Keep alives are sent  to keep the connection open.
> The only problem occurs when the connection is closed.  The client 
> must be responsible for re-establishing the connection, since the 
> server can not reach the client.
> To make matters more fun, the client will not always know the 
> connection is down unless the client is sending keep alives (with a 
> watchdog timer going).
>
> After you figure this all out, you can worry about UDP. UDP would only 
> be useful in this situation when the client is pumping data to the 
> server and does not need an immediate response, since the server may 
> not be able to send UDP data to the client.  A good example would be 
> position updates.  The client could send position updates every minute 
> via UDP and connect via TCP every 15 minutes to guarantee the messages 
> got through.
>
> You should probably get familiar with IP, UDP and TCP framing and byte 
> counting if you are working with GPRS.  Bytes can start to add up if 
> you don't pay attention to them.
>
>
>
> Carl
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
Carl

Thanks for the reply.

I think the client can check its local IP address. If that has changed 
then it will know it has lost and regained its connection. It can then 
reconnect to the server. I'm not sure if this is cast in stone, but I 
can imagine a case where it might not apply.

OK, I have been looking up frame sizes etc. And I have been looking at 
the data sent through an ethernet analyser just to confirm what actually 
goes down the line.

Thansk for the advice.

John Aherne





From zmola at acm.org  Wed Jan 10 07:26:51 2007
From: zmola at acm.org (Carl Zmola)
Date: Wed, 10 Jan 2007 09:26:51 -0500
Subject: [Twisted-Python] twisted and gprs
In-Reply-To: <45A4A881.3090806@johnaherne.co.uk>
References: <45A29F87.4070501@johnaherne.co.uk>	<45A2A7D6.3030403@imperial.ac.uk>	<45A2B390.6080508@johnaherne.co.uk>	<45A47849.8010302@acm.org>
	<45A4A881.3090806@johnaherne.co.uk>
Message-ID: <45A4F7AB.1060408@acm.org>

John Aherne wrote:
> Carl Zmola wrote:
>> John Aherne wrote:
>>> Phil
>>>
>>> Thanks for the reply.
>>>
>>> I'm obviously missing some obvious point I think.
>> I think the obvious point is that: Everything works find while the 
>> TCP socket is open.  The server knows everything about the client at 
>> that time.  Keep alives are sent  to keep the connection open.
>> The only problem occurs when the connection is closed.  The client 
>> must be responsible for re-establishing the connection, since the 
>> server can not reach the client.
>> To make matters more fun, the client will not always know the 
>> connection is down unless the client is sending keep alives (with a 
>> watchdog timer going).
>>
>> After you figure this all out, you can worry about UDP. UDP would 
>> only be useful in this situation when the client is pumping data to 
>> the server and does not need an immediate response, since the server 
>> may not be able to send UDP data to the client.  A good example would 
>> be position updates.  The client could send position updates every 
>> minute via UDP and connect via TCP every 15 minutes to guarantee the 
>> messages got through.
>>
>> You should probably get familiar with IP, UDP and TCP framing and 
>> byte counting if you are working with GPRS.  Bytes can start to add 
>> up if you don't pay attention to them.
>>
>>
>>
>> Carl
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> Carl
>
> Thanks for the reply.
>
> I think the client can check its local IP address. If that has changed 
> then it will know it has lost and regained its connection. It can then 
> reconnect to the server. I'm not sure if this is cast in stone, but I 
> can imagine a case where it might not apply.
>
> OK, I have been looking up frame sizes etc. And I have been looking at 
> the data sent through an ethernet analyser just to confirm what 
> actually goes down the line.
>
> Thansk for the advice.
A great reference is W. Richard Stevens's book TCP-IP Illustrated.
http://www.amazon.com/Protocols-TCP-IP-Illustrated/dp/0201633469

Also, just play with it a little on a wired connection and unplug you 
Ethernet cable to see what happens.
>
> John Aherne
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From andrewfr_ice at yahoo.com  Wed Jan 10 15:44:16 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 10 Jan 2007 14:44:16 -0800 (PST)
Subject: [Twisted-Python] Advice on Writing a Custom Twisted Reactor
Message-ID: <911591.66363.qm@web34202.mail.mud.yahoo.com>

Hello Colleagues:

I am a first time poster...

For the past few months I have been experimenting with
using Stackless Python with Twisted. I still consider
myself very much a Twisted newbie. Currently my
problems involve deferreds.

>From doing online searches, I have run across
customized reactors for Twisted. Consequently I am
looking at the custom reactors that come with Twisted.
Like Stackless, many GUIs have a hard time working
with Twisted which blocks. Based on the
ThreadedSelectReactor, most of the reactors are for
GUIs. The general idea is that custom reactor's event
loop calls Twisted in its own thread. This approach
seems like it would work for Stackless and provide a
decent general solution. However there are a few
places where I am not quite clear.

Most of my Stackless programmes have the following
form (think of this as a MainLoop):

~

set up stuff

while (stackless.getruncount() > 1):
   stackless.schedule()

~

Since it seems my custom reactor has to call Twisted
as often as possible. I would wrap
stackless.schedule() (since this is often called):

stacklessReactor.schedule():
    __hook__() # some method that would call Twisted
    stackless.schedule()

Where I start to get a bit confused is:

1) In the Custom reactor.run() method, do I call 
self.__hook__() in the interleave() method? Is there
anything more I have to do in the run() method? Can I
avoid signal handler issues by passing False to
Twisted's reactor.run() ?

2) From my Stackless code, do I have to use
self.callFromThread() to call Twisted methods that
involve deferreds?

Again, any advice would be welcomed.

Cheers,
Andrew

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From exarkun at divmod.com  Wed Jan 10 16:32:43 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 10 Jan 2007 18:32:43 -0500
Subject: [Twisted-Python] Advice on Writing a Custom Twisted Reactor
In-Reply-To: <911591.66363.qm@web34202.mail.mud.yahoo.com>
Message-ID: <20070110233243.11447.1076809328.divmod.quotient.12503@ohm>

On Wed, 10 Jan 2007 14:44:16 -0800 (PST), Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>Hello Colleagues:
>
>I am a first time poster...

Welcome to the list. :)

>
>For the past few months I have been experimenting with
>using Stackless Python with Twisted. I still consider
>myself very much a Twisted newbie. Currently my
>problems involve deferreds.

Okay.  Hopefully this will be easy to straighten out:
Deferreds are quite simple.

>
>>From doing online searches, I have run across
>customized reactors for Twisted. Consequently I am
>looking at the custom reactors that come with Twisted.
>Like Stackless, many GUIs have a hard time working
>with Twisted which blocks. Based on the
>ThreadedSelectReactor, most of the reactors are for
>GUIs. The general idea is that custom reactor's event
>loop calls Twisted in its own thread. This approach
>seems like it would work for Stackless and provide a
>decent general solution. However there are a few
>places where I am not quite clear.

The split is pretty even, actually.  There's are GUI
reactors for Gtk, Gtk2, wxPython, and Qt.  There are
non-GUI reactors for select, poll, epoll, KQ, and IOCP.
There's also a Win32 event reactor, which is kind of
for GUI integration and kind of for other stuff.

Threaded select reactor actually isn't the same kind of
reactor as the rest of these, since it isn't intended
to be used via the normal reactor API (ie, run).  In
Twisted 2.5, we've renamed it to try to make this more
apparent: it's now in a "private" module which doesn't
have "reactor" in its name.  It still works in the
same way as it always did, though.

For most reactors, the behavior is actually to monitor
event sources and then dispatch received events to code
interested in them.  Whether these events are for GUI
elements or file descriptors doesn't really matter much.
Whether the monitoring is done in one thread or many is
also more or less irrelevant, as far as the external API
is concerned.  It _is_ important that all event dispatching
happens to a single thread, since this is what programs
written with Twisted expect to happen, and doing otherwise
would typically introduce bugs into these applications.

I'm not sure what "general solution" you have in mind, so
this may or may not be relevant to the problem you're
tackling.

>
>Most of my Stackless programmes have the following
>form (think of this as a MainLoop):
>
>~
>
>set up stuff
>
>while (stackless.getruncount() > 1):
>   stackless.schedule()
>
>~
>
>Since it seems my custom reactor has to call Twisted
>as often as possible. I would wrap
>stackless.schedule() (since this is often called):

All of the currently implemented Twisted reactors need
to wake up under two circumstances:

  * a network event has occurred and needs to be reacted to
  * a timing event has occurred and needs to be reacted to

The most correct integration will account for these two facts
and only wake up as often as is necessary to deal with the
relevant events.

Of course, waking up more often isn't necessarily incorrect,
but it is wasteful.  Also, if the scheduling strategy is "as
fast as possible", then the accuracy of timed event processing
typically suffers.

>
>stacklessReactor.schedule():
>    __hook__() # some method that would call Twisted
>    stackless.schedule()
>
>Where I start to get a bit confused is:
>
>1) In the Custom reactor.run() method, do I call
>self.__hook__() in the interleave() method? Is there
>anything more I have to do in the run() method? Can I
>avoid signal handler issues by passing False to
>Twisted's reactor.run() ?
>
>2) From my Stackless code, do I have to use
>self.callFromThread() to call Twisted methods that
>involve deferreds?
>

Okay.  I see that you're writing stackless integration
using TSR.  I'm not sure what the point of this is.  Can
you explain the functionality that's gained by doing this,
rather than using something like what's in Chris Armstrong's
sandbox in threadless.py?

>Again, any advice would be welcomed.

I don't think I've completely understood your goals, but I
hope this is a good starting point.

Jean-Paul



From prattnel at hotmail.com  Wed Jan 10 18:31:36 2007
From: prattnel at hotmail.com (Andrew Pratt)
Date: Thu, 11 Jan 2007 01:31:36 +0000
Subject: [Twisted-Python] Moonfallen's ntsvc code
Message-ID: <BAY115-F39093276067028DF7B447CBB10@phx.gbl>

Does anyone know if Moonfallen's ntsvc code (currently written as a 
distutils extension) has made it into Twisted Core 2.5?

If not, what is the likelihood of it being incorporated into twisted rather 
than remaining sandboxed?

_________________________________________________________________
Join the millions of Australians using Live Search. Try live.com.au 
http://ninemsn.com.au/share/redir/adTrack.asp?mode=click&clientID=740&referral=million&URL=http://live.com.au




From jeff at taupro.com  Thu Jan 11 05:55:33 2007
From: jeff at taupro.com (Jeff Rush)
Date: Thu, 11 Jan 2007 06:55:33 -0600
Subject: [Twisted-Python] Reminder: Early Bird Registration for PyCon Ending
	Soon
Message-ID: <45A633C5.9090403@taupro.com>

Greetings.  I'm the co-chair for an upcoming volunteer-run conference in the 
Dallas (Addison) area and would like to get an announcement into the hands of 
your members in some manner acceptable to your community.

The event is the fifth international Python Conference, being held Feb 23-25, 
2007 at the Marriott-Quorum in Addison, with early-bird registration ending 
Jan 15.

The conference draws approximately 400-500 attendees from diverse backgrounds 
such as scientists from national and medical labs, college/K-12 educators, web 
engineers and the myriad of IT developers and programming hobbyists.  Those 
new to the Python language are welcome, and we're offering a half-day "Python 
101" tutorial on the day before the conference, Thursday Feb 22 to help you 
get up to speed and better enjoy the rest of the conference.

While unfortunately no talks specifically on Twisted were submitted this year, 
some of the presentations that Twisted folk might find interesting are:

  - Web Frameworks Panel
  - WSGI: An Introduction
  - soaplib: an easy-to-use python soap library
  - Distributing your Project with Python Eggs
  - Easy Creation of Interactive Tutorials
  - How I Wrote a Python App and Got $5 Million
  - Scaling Python for High-Load Web Sites
  - Software Development with Trac

Being run by the Python community as a non-profit event, the conference 
strives to be inexpensive, with registration being only $260 (or $195 if you 
register prior to Jan 15th), with a further discount for students.  On the day 
before the conference we are running a full day of classroom tutorials (extra 
charge per class) and then after the conference is a free four-days of 
sprints, which are informal gatherings of programmers to work together in 
coding on various projects.  Sprints are excellent opportunities to do agile 
pair-programming side-by-side with experienced programmers and make new friends.

Other activities are lightning talks, which are 5-minute presentations to show 
off a cool technology or spread the word about a project, open space talks, 
which are spontaneous gatherings around a topic and, new this year, a Python 
Lab where experienced and novice programmers will work together to solve 
challenging problems and then present their solutions.

The conference is also running four keynote talks by leaders in the 
programming field, with a special focus on education this year:

   "The Power of Dangerous Ideas: Python and One Laptop per Child"
      by Ivan Krstic, senior member of the One Laptop per Child project

   "Premise: eLearning does not Belong in Public Schools"
      by Adele Goldberg, of SmallTalk fame

   "Python 3000"
      by Guido van Rossum, creator of Python

   "The Importance of Programming Literacy"
      by Robert M. "r0ml" Lefkowitz, a frequent speaker at O'Reilly conferences

I believe your members will find the conference educational and enjoyable. 
More information about the conference along with the full schedule of 
presentations with abstracts, is available online:

   http://us.pycon.org/

Thanks for any help you can give in spreading the word,

Jeff Rush
Co-Chair PyCon 2007




From itamar at itamarst.org  Thu Jan 11 08:04:37 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 11 Jan 2007 10:04:37 -0500
Subject: [Twisted-Python] Summary of wxPython and Twisted integration status
Message-ID: <1168527877.4207.7.camel@localhost.localdomain>

As of Twisted 2.1 you should be using twisted.internet.wxreactor for
Twisted/wxPython integration.

As of the just released 2.5, you should still be using wxreactor, but it
should work much better: on Mac OS X Twisted events will be handled even
when modal dialogs are open, and shutdown and startup events now work on
all platforms.

Please reports any bugs you find to our ticket tracker.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From radix at twistedmatrix.com  Thu Jan 11 08:53:54 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Jan 2007 10:53:54 -0500
Subject: [Twisted-Python] Twisted 2.5.0 released
Message-ID: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>

Get Twisted: http://twistedmatrix.com/

Twisted is an event-based framework for internet applications which
works on Python 2.3.x, 2.4.x, and 2.5.x.

Twisted 2.5.0 is a major feature release, with several interesting new
developments and a great number of bug fixes. Some of the highlights
follow.

 * AMP, the Asynchronous Messaging Protocol, was introduced.  AMP is a
protocol which provides request/response semantics over a persistent
connection in a very simple and extensible manner.

 * An Epoll-based reactor was added, which can be used with twistd or
trial by passing "-r epoll" on the command line. This may improve
performance of certain high-traffic network applications.

 * The 'twistd' command can now accept sub-commands which name an
application to run. For example, 'twistd web --path .' will start a
web server serving files out of the current directory. This
functionality is meant to replace the old way of doing things with
'mktap' and 'twistd -f'.

 * Python 2.5 is now supported. Previous releases of Twisted were
broken by changes in the release of Python 2.5.

 * 'inlineCallbacks' was added, which allows taking advantage of the
new 'yield' expression syntax in Python 2.5 to avoid writing callbacks
for Deferreds.

 * Many improvements were made to the Jabber support in twisted.words.

Hit http://twistedmatrix.com/trac/wiki/Downloads to see what's new and
to get the latest downloads, including tarballs and Windows
installers.

Again thanks to Jean-Paul Calderone and Cory Dodt for helping get this
release out the door, and thanks to all the Twisted contributors whose
work went into Twisted 2.5.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From manlio_perillo at libero.it  Thu Jan 11 09:21:24 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 11 Jan 2007 17:21:24 +0100
Subject: [Twisted-Python] Twisted 2.5.0 released
In-Reply-To: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>
Message-ID: <45A66404.3060809@libero.it>

Christopher Armstrong ha scritto:
> Get Twisted: http://twistedmatrix.com/
> 

Great, thanks for your work.

> Twisted is an event-based framework for internet applications which
> works on Python 2.3.x, 2.4.x, and 2.5.x.
> 
> Twisted 2.5.0 is a major feature release, with several interesting new
> developments and a great number of bug fixes. Some of the highlights
> follow.
> 
> * AMP, the Asynchronous Messaging Protocol, was introduced.  AMP is a
> protocol which provides request/response semantics over a persistent
> connection in a very simple and extensible manner.
> 
> * An Epoll-based reactor was added, which can be used with twistd or
> trial by passing "-r epoll" on the command line. This may improve
> performance of certain high-traffic network applications.
>

Any benchmarks?

> * The 'twistd' command can now accept sub-commands which name an
> application to run. For example, 'twistd web --path .' will start a
> web server serving files out of the current directory. This
> functionality is meant to replace the old way of doing things with
> 'mktap' and 'twistd -f'.
> 
> * Python 2.5 is now supported. Previous releases of Twisted were
> broken by changes in the release of Python 2.5.
> 
> * 'inlineCallbacks' was added, which allows taking advantage of the
> new 'yield' expression syntax in Python 2.5 to avoid writing callbacks
> for Deferreds.
> 

What is this?
It seems to be not in the documentation.

> * Many improvements were made to the Jabber support in twisted.words.
> 

Why not to mention the new chapters in the documentation?
http://twistedmatrix.com/projects/core/documentation/howto/producers.html
and
http://twistedmatrix.com/projects/core/documentation/howto/tap.html

And what about the new coiterate support?


 > [...]



Regards  Manlio Perillo




From nico at tekNico.net  Thu Jan 11 09:27:59 2007
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 11 Jan 2007 17:27:59 +0100
Subject: [Twisted-Python] Re: Twisted 2.5.0 released
In-Reply-To: <45A66404.3060809@libero.it>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>
	<45A66404.3060809@libero.it>
Message-ID: <eo5oib$kpq$1@sea.gmane.org>

Manlio Perillo wrote:
>> * 'inlineCallbacks' was added, which allows taking advantage of the
>> new 'yield' expression syntax in Python 2.5 to avoid writing callbacks
>> for Deferreds.

> What is this?
> It seems to be not in the documentation.

http://twistedmatrix.com/documents/current/api/twisted.internet.defer.html#inlineCallbacks


-- 
Nicola Larosa - http://www.tekNico.net/

Don’t get me wrong, I like Ruby. And it’s not particularly difficult
to read. But the philosophy of the language designers led to design
choices that emphasize writability over readability. And in that
department I think the advantage has to go to Python.
 -- Mark Ramm-Christensen, June 2006




From manlio_perillo at libero.it  Thu Jan 11 09:44:12 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 11 Jan 2007 17:44:12 +0100
Subject: [Twisted-Python] Re: Twisted 2.5.0 released
In-Reply-To: <eo5oib$kpq$1@sea.gmane.org>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>	<45A66404.3060809@libero.it>
	<eo5oib$kpq$1@sea.gmane.org>
Message-ID: <45A6695C.6010504@libero.it>

Nicola Larosa ha scritto:
> Manlio Perillo wrote:
>>> * 'inlineCallbacks' was added, which allows taking advantage of the
>>> new 'yield' expression syntax in Python 2.5 to avoid writing callbacks
>>> for Deferreds.
> 
>> What is this?
>> It seems to be not in the documentation.
> 
> http://twistedmatrix.com/documents/current/api/twisted.internet.defer.html#inlineCallbacks
> 
> 

Well, with documentation I mean the HOWTO ;-).
Thanks for the link!


Regards  Manlio Perillo



From radix at twistedmatrix.com  Thu Jan 11 10:46:07 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Jan 2007 12:46:07 -0500
Subject: [Twisted-Python] Twisted 2.5.0 released
In-Reply-To: <45A66404.3060809@libero.it>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>
	<45A66404.3060809@libero.it>
Message-ID: <60ed19d40701110946g1bb71733y37e0760b1b59cd2d@mail.gmail.com>

On 1/11/07, Manlio Perillo <manlio_perillo at libero.it> wrote:
> Why not to mention the new chapters in the documentation?
> http://twistedmatrix.com/projects/core/documentation/howto/producers.html
> and
> http://twistedmatrix.com/projects/core/documentation/howto/tap.html

Thanks.

> And what about the new coiterate support?

Coiterate was in Twisted 2.4.0, it is not new in 2.5.0.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From manlio_perillo at libero.it  Thu Jan 11 11:52:17 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 11 Jan 2007 19:52:17 +0100
Subject: [Twisted-Python] Twisted 2.5.0 released
In-Reply-To: <60ed19d40701110946g1bb71733y37e0760b1b59cd2d@mail.gmail.com>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>	<45A66404.3060809@libero.it>
	<60ed19d40701110946g1bb71733y37e0760b1b59cd2d@mail.gmail.com>
Message-ID: <45A68761.9090404@libero.it>

Christopher Armstrong ha scritto:
> On 1/11/07, Manlio Perillo <manlio_perillo at libero.it> wrote:
>> Why not to mention the new chapters in the documentation?
>> http://twistedmatrix.com/projects/core/documentation/howto/producers.html
>> and
>> http://twistedmatrix.com/projects/core/documentation/howto/tap.html
> 
> Thanks.
> 
>> And what about the new coiterate support?
> 
> Coiterate was in Twisted 2.4.0, it is not new in 2.5.0.
> 
> 

Is it possible to have a changelog with all the features added in Twisted?

I'm reading the main page of the site and I can only find
http://twistedmatrix.com/trac/wiki/ArchivedNews.

By the way: what's the state of the vfs package?


Thanks and regards  Manlio Perillo




From radix at twistedmatrix.com  Thu Jan 11 12:05:37 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Jan 2007 14:05:37 -0500
Subject: [Twisted-Python] Twisted 2.5.0 released
In-Reply-To: <45A68761.9090404@libero.it>
References: <60ed19d40701110753x4a17fdb3kfde85f2c8d30b3c7@mail.gmail.com>
	<45A66404.3060809@libero.it>
	<60ed19d40701110946g1bb71733y37e0760b1b59cd2d@mail.gmail.com>
	<45A68761.9090404@libero.it>
Message-ID: <60ed19d40701111105l26a543e5teec523ecc056af75@mail.gmail.com>

On 1/11/07, Manlio Perillo <manlio_perillo at libero.it> wrote:
> Is it possible to have a changelog with all the features added in Twisted?
>
> I'm reading the main page of the site and I can only find
> http://twistedmatrix.com/trac/wiki/ArchivedNews.

ArchivedNews links to the Downloads page, which has detailed release
notes for every Twisted project. If those release notes are
insufficient (they are very detailed, even including ticket number
references for every change), then the next level of detail is svn
logs.

> By the way: what's the state of the vfs package?

It remains unreleased because it hasn't been deemed worthy of public
consumption.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andrewfr_ice at yahoo.com  Thu Jan 11 14:46:17 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 11 Jan 2007 13:46:17 -0800 (PST)
Subject: [Twisted-Python] Advice on Writing a Custom Twisted Stackless
	Reactor
In-Reply-To: <E1H52n2-0006cs-01@pyramid.twistedmatrix.com>
Message-ID: <408744.8368.qm@web34213.mail.mud.yahoo.com>

Date: Wed, 10 Jan 2007 18:32:43 -0500
From: Jean-Paul Calderone <exarkun at divmod.com>
Subject: 
To: Twisted general discussion
<twisted-python at twistedmatrix.com>
Message-ID:

<20070110233243.11447.1076809328.divmod.quotient.12503 at ohm>
Content-Type: text/plain; format=flowed

>Okay.  I see that you're writing stackless
integration
>using TSR.  I'm not sure what the point of this is. 
>Can you explain the functionality that's gained by
>doing this, rather than using something like what's
in >Chris Armstrong's sandbox in threadless.py?

Thank you Jean-Paul for your response. My goal is to
write a custom Twisted reactor for Stackless Python.
Although I have had success writing programmes that
use deferred (for client HTTP calls) and HTTP request
handlers, I have had problems doing both
simultaneously in one programme.

Some context : I am prototyping WS-BPEL (Web services
Business Process Execution Language) processors. In
the WS-BPEL language, it is possible for some
process's "threads" to act as a server and other
"threads" to act as a client simultaneously. 

The problem that I have found is that when Twisted
blocks waiting for a server request, Stackless will
also block, hence no progress on other tasklets that
could execute. I thought I got around this problem by
using task.LoopingCall/() that would issue a
stackless.schedule() at regular intervals. However
this approach turns out to be problematic. I thought I
could solve the problem by placing Twisted in a thread
but no. The main problem with placing Twisted in a
thread is that I seem to lose the deferred (and I
don't believe I am getting deadlock).

>Can you explain the functionality that's gained by
>doing this, 

1. I solve my problem in a clean fashion. 

2. If I write a custom Stackless Reactor, then I have
a solution that conforms to the way Twisted does
stuff. I think would make it easier for others to use
my stuff.

>rather than using something like what's in Chris
>Armstrong's sandbox in threadless.py? 

Chris's approach looks like the approach I currently
use.

>Threaded select reactor actually isn't the same kind
>of reactor as the rest of these, since it isn't
>intended to be used via the normal reactor API (ie,
>run).  

Right now I am using Twisted 2.4 with Stackless 2.4.3.

For now, I would like to build on top of
ThreadedSelectReactor.

Back to my original question, given my previous
example's "main loop", do I simply use interleave() to
get my processor to call Twisted?

Cheers,
Andrew



 
____________________________________________________________________________________
Want to start your own business?
Learn how on Yahoo! Small Business.
http://smallbusiness.yahoo.com/r-index



From ziade.tarek at gmail.com  Thu Jan 11 15:01:09 2007
From: ziade.tarek at gmail.com (=?ISO-8859-1?Q?Tarek_Ziad=E9?=)
Date: Thu, 11 Jan 2007 23:01:09 +0100
Subject: [Twisted-Python] A PyCon BoF about content repository in Python
Message-ID: <94bdd2610701111401t50019c13l3b6b27bc9817f447@mail.gmail.com>

Hello,

I have added a BoF in the PyCon wiki for the next session in Dallas.

It's about having a standard in Python for content repositories, that could
be used by any Python framework, like Twisted.

http://us.pycon.org/TX2007/PyJCR

Please react/participate on the wiki, if you think this could be a good
idea, for Twisted and other Python web frameworks.

My secret wish would be to see core developers from each framework
participate in this discussion, because I believe such a standard could be a
huge benefit for Python industrialisation and frameworks maturity

Cheers

Tarek Ziadé

-- 
Tarek Ziadé | Association AfPy | www.afpy.org
Blog FR | http://programmation-python.org
Blog EN | http://tarekziade.wordpress.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070111/d88f4fc1/attachment.html>

From exarkun at divmod.com  Thu Jan 11 15:35:36 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 11 Jan 2007 17:35:36 -0500
Subject: [Twisted-Python] Advice on Writing a Custom Twisted Stackless
	Reactor
In-Reply-To: <408744.8368.qm@web34213.mail.mud.yahoo.com>
Message-ID: <20070111223536.11447.123887929.divmod.quotient.13521@ohm>

On Thu, 11 Jan 2007 13:46:17 -0800 (PST), Andrew Francis ><20070110233243.11447.1076809328.divmod.quotient.12503 at ohm>
>>Okay.  I see that you're writing stackless
>integration
>>using TSR.  I'm not sure what the point of this is.
>>Can you explain the functionality that's gained by
>>doing this, rather than using something like what's
>in >Chris Armstrong's sandbox in threadless.py?
>
>Thank you Jean-Paul for your response. My goal is to
>write a custom Twisted reactor for Stackless Python.
>Although I have had success writing programmes that
>use deferred (for client HTTP calls) and HTTP request
>handlers, I have had problems doing both
>simultaneously in one programme.
>
>Some context : I am prototyping WS-BPEL (Web services
>Business Process Execution Language) processors. In
>the WS-BPEL language, it is possible for some
>process's "threads" to act as a server and other
>"threads" to act as a client simultaneously.

This is possible without involving ThreadedSelectReactor
or Stackless Python, of course.  There may be a reason to
bring Stackless Python in to simplify the expression of
some ideas, but I'm still not sure I understand the reason
to bring in ThreadedSelectReactor.  This may just be due
to the fact that I haven't written a lot of code using
Stackless Python.  Some examples would be helpful here.

>
>The problem that I have found is that when Twisted
>blocks waiting for a server request, Stackless will
>also block, hence no progress on other tasklets that
>could execute.

Twisted will block while there are no events to process.
As soon as there is an event, though, it will wake up.  So,
if your tasklets are I/O bound, as soon as there is a network
event, Twisted will tell you about it and you can schedule
the next one to run.  If your tasklets are based on timing
events, as soon as the time comes for one of these to fire,
Twisted will also wake up and you can schedule one.  If there
is some other kind of event source, it may be a little more
challenging, but it sounds like that's not the case here.

>I thought I got around this problem by
>using task.LoopingCall/() that would issue a
>stackless.schedule() at regular intervals. However
>this approach turns out to be problematic. 

What problems did you face?  It certainly doesn't sound ideal,
but it does sound like it should give you something which does
more or less work.  Better would be to associate network and
timing events with specific tasklets and wake them up when the
reactor fires those events.

>I thought I
>could solve the problem by placing Twisted in a thread
>but no. The main problem with placing Twisted in a
>thread is that I seem to lose the deferred (and I
>don't believe I am getting deadlock).

Most Twisted APIs aren't threadsafe, so most likely what is
happening here is that you are using a Twisted API from the
wrong thread and it just isn't working right, which often
manifests as an event which never fires.

However, I still suspect bringing in a native thread is not
necessary to accomplish your goals.

>
>>Can you explain the functionality that's gained by
>>doing this,
>
>1. I solve my problem in a clean fashion.

Always a bonus. :)

>
>2. If I write a custom Stackless Reactor, then I have
>a solution that conforms to the way Twisted does
>stuff. I think would make it easier for others to use
>my stuff.

Possibly.  On the other hand, it may just introduce the
need for other people to be careful about threadsafety.

>
>>rather than using something like what's in Chris
>>Armstrong's sandbox in threadless.py?
>
>Chris's approach looks like the approach I currently
>use.

Unfortunately I still haven't managed to grasp why this
is undesirable. :(

>
>>Threaded select reactor actually isn't the same kind
>>of reactor as the rest of these, since it isn't
>>intended to be used via the normal reactor API (ie,
>>run).
>
>Right now I am using Twisted 2.4 with Stackless 2.4.3.
>
>For now, I would like to build on top of
>ThreadedSelectReactor.
>
>Back to my original question, given my previous
>example's "main loop", do I simply use interleave() to
>get my processor to call Twisted?

Roughly, yes.  blockingdemo.py in the examples directory
gives a fairly short, self-contained example of integrating
another loop using TSR.  If you haven't seen it yet, it'll
probably help or help verify your understanding.  If you have,
it might be a good basis to guide further questions.

Jean-Paul



From glyph at divmod.com  Fri Jan 12 06:14:59 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 12 Jan 2007 13:14:59 -0000
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian Warner
Message-ID: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>

Although we should all be happy for the Twisted 2.5 release, we still have an unfortunate track-record as far as responsiveness to bugs.

I encourage all readers of this list to have a look at lucky report 13:

    http://twistedmatrix.com/trac/report/13

Note that there are still high-priority tickets that haven't received even so much as an update since 2004.

Paul Swartz has recently removed himself as the ultimate loser of this non-contest, and Brian Warner has replaced him.  Don't want to be the biggest loser?  Update your tickets before they get to be years old!

Please keep in mind that "low" and "lowest" priority tickets don't currently participate, so if you've deemed something truly unimportant feel free to simply drop its priority.  There it can safely languish for an eternity.  Or at least until somebody changes the rules.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070112/710aee25/attachment.html>

From jacob at internet24.de  Fri Jan 12 09:01:39 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 12 Jan 2007 17:01:39 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
Message-ID: <1168617699.26958.41.camel@enterprise>

On Fri, 2007-01-12 at 13:14 +0000, glyph at divmod.com wrote:
> Although we should all be happy for the Twisted 2.5 release, we still
> have an unfortunate track-record as far as responsiveness to bugs.

Maybe this a bit of a policy matter though. 

A little bit more flexibility on what patches are added might help. 

If somebody posts a patch to a problem that is not yet
covered by a unit test (so that would be most patches)
then not absolutely insisting that the patcher provides a unit test as
well
could speed up things considerably. If the  developer responsible for
that module thinks the patch is plausible and possibly covers a way to
use twisted which
probably couldn't have worked anyway because of the reported problem,
there
is not all that much risk, is there? After all, the existing tests
should bark if the patch breaks anything else.


Twisted is really a very cool and effective tool, and that it can
actually be used in a stable production environment is definitely not
something I
want to miss, but maybe that is not so much due to a strict development
policy
as it is due to the skills of the core developers in spotting bogus
changes ;)

Just a thought... 

Maybe I got the wrong impression on just how things are done
by the twisted team. 


BTW, the patch in ticket #1794 is already included in 2.5, it probably
shouldn't be an active ticket anymore.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20070112/5629eaa5/attachment.sig>

From radix at twistedmatrix.com  Fri Jan 12 09:15:35 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 12 Jan 2007 11:15:35 -0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168617699.26958.41.camel@enterprise>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
Message-ID: <60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>

On 1/12/07, Thomas Jacob <jacob at internet24.de> wrote:
<a bunch of stuff about how we should not necessarily require unit
tests with all changes>

> After all, the existing tests
> should bark if the patch breaks anything else.

This idea is contradictory with your proposal.  If we do not require
unit tests for all changes, then we *cannot* rely on the existing unit
tests to tell us when new changes break the code.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From therve at free.fr  Fri Jan 12 09:32:57 2007
From: therve at free.fr (therve at free.fr)
Date: Fri, 12 Jan 2007 17:32:57 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168617699.26958.41.camel@enterprise>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
Message-ID: <1168619577.45a7b839e2837@imp5-g19.free.fr>

Selon Thomas Jacob <jacob at internet24.de>:

> On Fri, 2007-01-12 at 13:14 +0000, glyph at divmod.com wrote:
> > Although we should all be happy for the Twisted 2.5 release, we still
> > have an unfortunate track-record as far as responsiveness to bugs.
>
> Maybe this a bit of a policy matter though.
>
> A little bit more flexibility on what patches are added might help.
>
> If somebody posts a patch to a problem that is not yet
> covered by a unit test (so that would be most patches)
> then not absolutely insisting that the patcher provides a unit test as
> well
> could speed up things considerably. If the  developer responsible for
> that module thinks the patch is plausible and possibly covers a way to
> use twisted which
> probably couldn't have worked anyway because of the reported problem,
> there
> is not all that much risk, is there? After all, the existing tests
> should bark if the patch breaks anything else.

I hope you'll see the irony here: "Let's be more flexible on unit tests. The
existing tests should be enough, no ?". The answer is obviously no, because one
of the biggest problem when you fix code like this is regression.

Furthermore, writing tests often shows real problems of an API, so are a good
step in code evaluation. If code can't be tested well, it probably means it's
not good code (that's not universally true, of course).

> BTW, the patch in ticket #1794 is already included in 2.5, it probably
> shouldn't be an active ticket anymore.

Thanks, closed. You'll notice this was corrected during the resolution of ticket
#428, which addressed problems in FTP tests :).

--
Thomas



From jacob at internet24.de  Fri Jan 12 09:51:36 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 12 Jan 2007 17:51:36 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
Message-ID: <1168620696.26958.64.camel@enterprise>

On Fri, 2007-01-12 at 11:15 -0500, Christopher Armstrong wrote:

> This idea is contradictory with your proposal.  If we do not require
> unit tests for all changes, then we *cannot* rely on the existing unit
> tests to tell us when new changes break the code.

Sure you can, you can check whether they break the old read already
existing
unit tests which were written with the "intended" functionality
of a particular module in mind when the module was first created.

Requiring people that submit patches that actually change or extend said
intended
functionality to also include unit testing code is perfectly fine.

But bug fixes that fix something which is somehow clearly
(in the responsible developer's view) intended functionality 
that is nevertheless not yet covered by an existing test
(obviously not ;) are a different matter...

Expecting twisted users that find such problems in Twisted to also
submit functional unit test is placing the hurdle
for bug fixes that get added to twisted quite high.

The idea of course is that later the Twisted developer
responsible for the module in question extends the unit
tests for that module's core functionality to also
include the bug fix case if they feel the need and/or
have the time.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20070112/4c219842/attachment.sig>

From twisted at ralphm.ik.nu  Fri Jan 12 09:55:38 2007
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Fri, 12 Jan 2007 17:55:38 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168619577.45a7b839e2837@imp5-g19.free.fr>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<1168619577.45a7b839e2837@imp5-g19.free.fr>
Message-ID: <1168620938.29720.9.camel@se-135.se.wtb.tue.nl>

On Fri, 2007-01-12 at 17:32 +0100, therve at free.fr wrote:
> > BTW, the patch in ticket #1794 is already included in 2.5, it probably
> > shouldn't be an active ticket anymore.
> 
> Thanks, closed. You'll notice this was corrected during the resolution of ticket
> #428, which addressed problems in FTP tests :).

Also funny to notice that spiv did offer to add tests to that patch
(time permitting) in #1794.

-- 
Groetjes,

ralphm




From jacob at internet24.de  Fri Jan 12 10:22:31 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 12 Jan 2007 18:22:31 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168620938.29720.9.camel@se-135.se.wtb.tue.nl>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<1168619577.45a7b839e2837@imp5-g19.free.fr>
	<1168620938.29720.9.camel@se-135.se.wtb.tue.nl>
Message-ID: <1168622551.26958.78.camel@enterprise>

On Fri, 2007-01-12 at 17:55 +0100, Ralph Meijer wrote:
> On Fri, 2007-01-12 at 17:32 +0100, therve at free.fr wrote:
> > > BTW, the patch in ticket #1794 is already included in 2.5, it probably
> > > shouldn't be an active ticket anymore.
> > 
> > Thanks, closed. You'll notice this was corrected during the resolution of ticket
> > #428, which addressed problems in FTP tests :).
> 
> Also funny to notice that spiv did offer to add tests to that patch
> (time permitting) in #1794.
> 

Well maybe it is more a question of who hast to come up with
the unit tests ;) 

The person submitting a bug patch
(often people that do not know the inner details
of twisted so well like myself) or the person later including 
that patch or a variation into the twisted repository
(probably an experienced Twisted developer that has a deeper
understanding of the module in question).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20070112/506d726a/attachment.sig>

From twisted at ralphm.ik.nu  Fri Jan 12 10:25:47 2007
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Fri, 12 Jan 2007 18:25:47 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168620696.26958.64.camel@enterprise>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
	<1168620696.26958.64.camel@enterprise>
Message-ID: <1168622747.29720.13.camel@se-135.se.wtb.tue.nl>

On Fri, 2007-01-12 at 17:51 +0100, Thomas Jacob wrote:
> On Fri, 2007-01-12 at 11:15 -0500, Christopher Armstrong wrote:
> [..]
>
> The idea of course is that later the Twisted developer
> responsible for the module in question extends the unit
> tests for that module's core functionality to also
> include the bug fix case if they feel the need and/or
> have the time.

The point is that there must be a test case covering the alleged issue,
that
does succeed with the given fix. It doesn't matter who writes it. If
other people would roam outstanding tickets and add test cases for
fix-only-patches that is great! Please do.

-- 
Groetjes,

ralphm




From itamar at itamarst.org  Fri Jan 12 10:28:34 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 12 Jan 2007 12:28:34 -0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168620696.26958.64.camel@enterprise>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
	<1168620696.26958.64.camel@enterprise>
Message-ID: <1168622914.4207.32.camel@localhost.localdomain>

On Fri, 2007-01-12 at 17:51 +0100, Thomas Jacob wrote:

> Expecting twisted users that find such problems in Twisted to also
> submit functional unit test is placing the hurdle
> for bug fixes that get added to twisted quite high.

We don't require unit tests for bug or patch submission, we require
tests for changes committed to Twisted. Indeed, we occasionally write
unit tests for fixes other people have submitted. But since all changes
must have tests, submitting tests along with patches greatly enhances
the chance a fix will go in quickly.

It's worth submitting fixes even if you don't attach a test, better than
no bug report at all. But we must have tests, whether written by
submitter or Twisted developer, to actually commit a patch. Without
tests we have no way of knowing:
1. whether a bug actually exists,
2. whether the patch fixes it, or
3. whether the patch introduces new bugs.





From glyph at divmod.com  Fri Jan 12 10:40:07 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 12 Jan 2007 17:40:07 -0000
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
Message-ID: <20070112174007.17094.557896436.divmod.xquotient.1839@joule.divmod.com>

On 04:01 pm, jacob at internet24.de wrote:
>On Fri, 2007-01-12 at 13:14 +0000, glyph at divmod.com wrote:
>> Although we should all be happy for the Twisted 2.5 release, we still
>> have an unfortunate track-record as far as responsiveness to bugs.

>A little bit more flexibility on what patches are added might help.

If nobody has said anything about a ticket in 2 years with no patches on it, I don't see how accepting crappy patches is going to help.

By "responsiveness" I meant responding to people who report bugs, and being clear on what we are vs. are not working on.  The problem I am trying to address is best described here:

    http://www.jwz.org/doc/cadt.html

By highlighting the least responsive developer (who, by the way, is Brian Warner) I hope to encourage people to keep their tickets up to date and respond when users report issues, even if the code in question has been rewritten.

>If somebody posts a patch to a problem that is not yet
>covered by a unit test (so that would be most patches)
>then not absolutely insisting that the patcher provides a unit test as
>well
>could speed up things considerably.

All the evidence I've seen (although I admit, there's not much of it) suggests that the opposite is true.  Bugs have been fixed faster and better since the institution of these requirements.

Most patches that get submitted without tests address a new ticket that was created specifically to hold the patch.  Very few outside contributors seem to be interested in trying to fix _known_ problems with Twisted.  Either they want a new feature or they want a new problem they've just discovered fixed.

Those outside contributors who do contribute to existing tickets have generally become involved with the project enough to know that they should be developing fixes test-first.

>If the  developer responsible for
>that module thinks the patch is plausible and possibly covers a way to
>use twisted which
>probably couldn't have worked anyway because of the reported problem,
>there
>is not all that much risk, is there? After all, the existing tests
>should bark if the patch breaks anything else.

As Mr. Armstrong already said, this idea doesn't make any sense.  If anything, we need to require tests for existing, old functionality that wasn't completely tested before the patch was applied.

>Twisted is really a very cool and effective tool, and that it can
>actually be used in a stable production environment is definitely not
>something I
>want to miss, but maybe that is not so much due to a strict development
>policy
>as it is due to the skills of the core developers in spotting bogus
>changes ;)

How do you think the core developers got to be skilled in this way?  By writing patches that don't have any tests or docs in them? :)

>Just a thought...

Thanks for trying to help with the suggestion.  However, I can guarantee that as long as I am involved with the project, these requirements will continue to stay in place.  You can continue talking about it if you like, but it will not change.

>Maybe I got the wrong impression on just how things are done
>by the twisted team.

You seem to have a roughly correct impression.  Tests and documentation are required before a patch will be accepted.

>BTW, the patch in ticket #1794 is already included in 2.5, it probably
>shouldn't be an active ticket anymore.

Thanks for the heads up - it looks like Thomas Herve closed it in response.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070112/904e912e/attachment.html>

From jacob at internet24.de  Fri Jan 12 10:53:15 2007
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 12 Jan 2007 18:53:15 +0100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168622914.4207.32.camel@localhost.localdomain>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
	<1168620696.26958.64.camel@enterprise>
	<1168622914.4207.32.camel@localhost.localdomain>
Message-ID: <1168624395.26958.81.camel@enterprise>

On Fri, 2007-01-12 at 12:28 -0500, Itamar Shtull-Trauring wrote:
> We don't require unit tests for bug or patch submission, we require
> tests for changes committed to Twisted. Indeed, we occasionally write
> unit tests for fixes other people have submitted.

Alright, so this was basically a misunderstanding on my part.

Sorry about that...

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20070112/712c0c47/attachment.sig>

From radix at twistedmatrix.com  Fri Jan 12 11:02:57 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 12 Jan 2007 13:02:57 -0500
Subject: [Twisted-Python] Reminder: Early Bird Registration for PyCon
	Ending Soon
In-Reply-To: <45A633C5.9090403@taupro.com>
References: <45A633C5.9090403@taupro.com>
Message-ID: <60ed19d40701121002xd9b4650i36e17385e33645b2@mail.gmail.com>

On 1/11/07, Jeff Rush <jeff at taupro.com> wrote:
> Greetings.  I'm the co-chair for an upcoming volunteer-run conference in the
> Dallas (Addison) area and would like to get an announcement into the hands of
> your members in some manner acceptable to your community.

I'll just note that I am in fact going this year, and I believe glyph
is as well. I am not giving any full talks but I will probably end up
giving some lightning talks.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From slamb at slamb.org  Fri Jan 12 11:54:10 2007
From: slamb at slamb.org (Scott Lamb)
Date: Fri, 12 Jan 2007 10:54:10 -0800
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168622914.4207.32.camel@localhost.localdomain>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
	<1168620696.26958.64.camel@enterprise>
	<1168622914.4207.32.camel@localhost.localdomain>
Message-ID: <C19EFD81-45D3-411C-8D9B-43EF98F20101@slamb.org>

On Jan 12, 2007, at 9:28 AM, Itamar Shtull-Trauring wrote:
> It's worth submitting fixes even if you don't attach a test, better  
> than
> no bug report at all. But we must have tests, whether written by
> submitter or Twisted developer, to actually commit a patch. Without
> tests we have no way of knowing:
> 1. whether a bug actually exists,
> 2. whether the patch fixes it, or
> 3. whether the patch introduces new bugs.

What about race conditions? I ran into such a problem a while back in  
code using reactor.spawnProcess - seeing if it is a twisted bug and  
if it's valid in current versions is on my todo list, but the  
priority is low because of the insistence on having a test for  
everything. I like spending my time on things I can actually get fixed.

Say I find it is a still-valid twisted bug. What am I supposed to do?

(1) create a test that likely fails by running many, many times. It'd  
bog down the test suite.
(2) create a test that might fail sometime, maybe.
(3) add instrumentation to the main code solely for the purpose of  
the test (break twisted's kneecap before the race).
(4) just say "clearly[*] if event A happens between lines X and Y,  
then it is handled improperly."

I prefer #4.

[*] Of course, this word is a big lie that we inflict on people  
because others have done it to us. As one of my favorite physics  
professors would say, "clearly" means "be careful here".

-- 
Scott Lamb <http://www.slamb.org/>





From exarkun at divmod.com  Fri Jan 12 13:00:31 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 12 Jan 2007 15:00:31 -0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <C19EFD81-45D3-411C-8D9B-43EF98F20101@slamb.org>
Message-ID: <20070112200031.11447.1369488695.divmod.quotient.14498@ohm>

On Fri, 12 Jan 2007 10:54:10 -0800, Scott Lamb <slamb at slamb.org> wrote:
>On Jan 12, 2007, at 9:28 AM, Itamar Shtull-Trauring wrote:
>>It's worth submitting fixes even if you don't attach a test, better  than
>>no bug report at all. But we must have tests, whether written by
>>submitter or Twisted developer, to actually commit a patch. Without
>>tests we have no way of knowing:
>>1. whether a bug actually exists,
>>2. whether the patch fixes it, or
>>3. whether the patch introduces new bugs.
>
>What about race conditions? I ran into such a problem a while back in  code 
>using reactor.spawnProcess - seeing if it is a twisted bug and  if it's 
>valid in current versions is on my todo list, but the  priority is low 
>because of the insistence on having a test for  everything. I like spending 
>my time on things I can actually get fixed.
>
>Say I find it is a still-valid twisted bug. What am I supposed to do?
>
>(1) create a test that likely fails by running many, many times. It'd  bog 
>down the test suite.
>(2) create a test that might fail sometime, maybe.
>(3) add instrumentation to the main code solely for the purpose of  the test 
>(break twisted's kneecap before the race).
>(4) just say "clearly[*] if event A happens between lines X and Y,  then it 
>is handled improperly."
>
>I prefer #4.

I think this actually varies from case to case.  For a problem where all
of the relevant critical points cannot be hooked or mocked or stubbed or
what have you, then a combination of #2 and #4 seems correct to me.  You
should be able to demonstrate that a real problem does exist by adding a
test which will fail eventually when run repeatedly (eg, using trial -u)
and which runs for orders of magnitude longer without failing once a fix
has been applied.

Always feel free to file the ticket before figuring any of this out, by
the way.  It is still possible that it will strike someone else's fancy
and the rest of the work will be taken care of for you. :)

>
>[*] Of course, this word is a big lie that we inflict on people  because 
>others have done it to us. As one of my favorite physics  professors would 
>say, "clearly" means "be careful here".

:)

Jean-Paul




From glyph at divmod.com  Fri Jan 12 13:31:02 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 12 Jan 2007 20:31:02 -0000
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
Message-ID: <20070112203102.17094.891713132.divmod.xquotient.1886@joule.divmod.com>

On 08:00 pm, exarkun at divmod.com wrote:
>On Fri, 12 Jan 2007 10:54:10 -0800, Scott Lamb <slamb at slamb.org> wrote:

>>(1) create a test that likely fails by running many, many times. It'd  bog 
>>down the test suite.
>>(2) create a test that might fail sometime, maybe.
>>(3) add instrumentation to the main code solely for the purpose of  the 
>>test (break twisted's kneecap before the race).
>>(4) just say "clearly[*] if event A happens between lines X and Y,  then it 
>>is handled improperly."
>>
>>I prefer #4.
>
>I think this actually varies from case to case.  For a problem where all
>of the relevant critical points cannot be hooked or mocked or stubbed or
>what have you, then a combination of #2 and #4 seems correct to me.  You
>should be able to demonstrate that a real problem does exist by adding a
>test which will fail eventually when run repeatedly (eg, using trial -u)
>and which runs for orders of magnitude longer without failing once a fix
>has been applied.

Race conditions are tricky, but in every case it is worth _trying_ to mock/stub/hook the code as it already is to demonstrate it deterministically.  It isn't always possible with a reasonable amount of effort, but very often it is actually quite easy.  As you do it more, it gets easier to figure out the trickier cases.

In any case, writing a test (which runs quickly) to be used with trial -u is a pretty low bar.  There are some extremely rare cases (mostly involving threading infrastructure) where those tests take a long time to fail, but even there it is usually possible to make them *succeed* reliably.

>Always feel free to file the ticket before figuring any of this out, by
>the way.  It is still possible that it will strike someone else's fancy
>and the rest of the work will be taken care of for you. :)

And of course this is always true.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070112/2f60ca07/attachment.html>

From andrewfr_ice at yahoo.com  Fri Jan 12 14:21:45 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 12 Jan 2007 13:21:45 -0800 (PST)
Subject: [Twisted-Python] Re: Advice on Writing a Custom Twisted Stackless
	Reactor
In-Reply-To: <E1H5P4C-0007WX-02@pyramid.twistedmatrix.com>
Message-ID: <22700.91143.qm@web34215.mail.mud.yahoo.com>

Hello Jean-Paul:

Once again, thanks for your response. 

>Twisted will block while there are no events to
>process. As soon as there is an event, though, it
will >wake up.  So, if your tasklets are I/O bound, as
soon >as there is a network event, Twisted will tell
you >about it and you can schedule the next one to
run.  

I know this. Since Twisted and Stackless are using the
same OS thread, this will block Stackless. Stackless
will block under the following condition - 

some notation:

S - tasklet waiting for a server call (waiting for a
Twisted request Handler )
C - tasklet waiting for a client call (deferred
request)
| - running in parallel 

if you have a sequence of the form (S | C[0] | C[1] |
c[n]) and S executes first, there will be no progress
on the client tasklets. I tried adding a timer but had
limited success.

(By the way, when I first mentioned this in the
Stackless mailing list, Bob Ipolito pointed this out
to me)

AF>I thought I got around this problem by
AF>using task.LoopingCall/() that would issue a
AF>stackless.schedule() at regular intervals. However
AF>this approach turns out to be problematic. 

>What problems did you face?  It certainly doesn't
>sound ideal, but it does sound like it should give
you >something which does more or less work.

In some tests I would get a Twisted error :

why = getAttr(selectable, method)()

others times my processor would simply hang because
the deferred function was not called.

from my logging, the common demoninator was that the
task.LoopingCall stopped.

>Better would be to associate network and
>timing events with specific tasklets and wake them up
>when the reactor fires those events.

I do this. 

>Most Twisted APIs aren't threadsafe, so most likely
>what is happening here is that you are using a
Twisted >API from the wrong thread and it just isn't
working >right, which often manifests as an event
which never >fires.

What is the wrong thread? How do I correct this?

>However, I still suspect bringing in a native thread
>is not necessary to accomplish your goals.

Maybe you are right. So far my experiences are
pointing in the opposite direction. Also I have read
posts involving integrating Chandler and IronPython
with Twisted and they are running Twisted in a
separate thread. 

That said, these are my deferred calls :

postRequest = client.getPage(self.address, method =
'POST', headers = self.headers, postdata = self.body) 
     
postRequest.addCallback(self.__handleResponse__).addErrback(self.__handleError__)
    

How should these be done from a thread?

>Roughly, yes.  blockingdemo.py in the examples
>directory gives a fairly short, self-contained
example >of integrating another loop using TSR.  If
you haven't >seen it yet, it'll probably help or help
verify your >understanding.  If you have, it might be
a good basis >to guide further questions.

I looked at blockingdemo.py. Blockingdemo is
structured different from the reactor examples in the
Twisted.internet module. Most of the example reactors
i have seen inherit from threadselectreactor and
override the run() method. What does
TwistedManager.poll() do? The method is defined but
called nowhere. I commented out poll() and the
programme did the same thing. 

That said, I have been looking at the wxreactor.py. 

My questions are:

1. With the customer reactor, it would be Stackless
that drives Twisted, not the other way around?

2. How exactly does interleave work? Some reactors
don't use it. My Stackless thread and Twisted talk
through stackless channels and a variation of a
stackless channel, the uthread Queue.

My strategy is as follows:

1. Inherit from threadselectreactor and override run()

2. in run(), my interleave calls __hook__()

3. In my Stackless Application, write a method 
__hook__. __hook__ looks like wxCallAfter in wxPython
:

def __hook__(self, function, *args, **kw):
    return function(*args, **kw)

3. Since stackless.schedule() is often called to yield
control, wrap the stackless.schedule() 

"""
call the underlying Stackless scheduler
"""
def __schedule__(self):
    # this is where I am a little fuzzy but
wxCallAfter
    # has to be called somehow
    self.__hook__(?) 
    stackless.schedule()
    
4. In the StacklessReactor.run(), the main loop that
is called will look like:
    
def MainLoop(self):

    while(stackless.getruncount() > 1):
         self.__schedule__()        


Again, I really appreciate insights. I really want to
get Stackless Python to properly work with Twisted.

Cheers,
Andrew






 
____________________________________________________________________________________
8:00? 8:25? 8:40? Find a flick in no time 
with the Yahoo! Search movie showtime shortcut.
http://tools.search.yahoo.com/shortcuts/#news



From jml at mumak.net  Fri Jan 12 15:11:11 2007
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 13 Jan 2007 09:11:11 +1100
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <1168620696.26958.64.camel@enterprise>
References: <20070112131459.17094.888626350.divmod.xquotient.1375@joule.divmod.com>
	<1168617699.26958.41.camel@enterprise>
	<60ed19d40701120815k2e1681d0i1b4ab00ac6e5b768@mail.gmail.com>
	<1168620696.26958.64.camel@enterprise>
Message-ID: <d06a5cd30701121411s6d453ef5m9d73427e871b4d34@mail.gmail.com>

On 1/13/07, Thomas Jacob <jacob at internet24.de> wrote:
> But bug fixes that fix something which is somehow clearly
> (in the responsible developer's view) intended functionality
> that is nevertheless not yet covered by an existing test
> (obviously not ;) are a different matter...
>
> Expecting twisted users that find such problems in Twisted to also
> submit functional unit test is placing the hurdle
> for bug fixes that get added to twisted quite high.

We don't expect bug *finders* to submit unit tests -- although every
one who does, ROCKS. We do expect bug *fixers* to submit unit tests.

Also, I don't think tests for bug fixes are a different matter from
features. Apart from being excellent descriptions of bugs, tests make
sure bugs stay fixed.

Remember, a bug fix still changes code. If you pile a hundred untested
bug fixes on an otherwise tested module, things get nasty. Suppose I
find a new bug in this module and try to submit a patch to Twisted.
I'd look at the source code and find maybe fifty chunks of code that
seem odd, but can all be changed without breaking any unit tests.
Without unit tests, I'd have no clue that this module was a
particularly difficult module to get right, and that any change I make
is likely to undo a number of bug fixes.

Maybe if I were being diligent, I'd look at the revision history of
the file, and find that out. But then I'd be in a difficult situation.
I'd essentially have to re-think the logic behind dozens of lines of
code in order to insert my patch safely.

Once I did that thinking, I'd write unit tests, because they are a way
of building understanding about behaviour into code.

Of course, I could always just look at the mess and give up, or maybe
contribute a 'helpful' patch that fixes one bug and re-opens five.

cheers,
jml



From lee.a.connell at gmail.com  Fri Jan 12 21:24:41 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Fri, 12 Jan 2007 23:24:41 -0500
Subject: [Twisted-Python] Twisted lineReceived (sender)
Message-ID: <000001c736ca$bf508f50$0200a8c0@leelaptop>

I just started with twisted and want to write a simple chat server.  This
code here works fine, however I want to know who the data is coming from in
the callbacks or events.  You can see where I commented code out in def
lineReceived as to what I want to do.  How can this be done in the easiest
way?

 

Thanks!

 

#!/usr/bin/env python

 

from twisted.protocols import basic

 

class MyChat(basic.LineReceiver):

  def connectionMade(self):

    print "Got new client!"

    self.factory.clients.append(self)

 

  def connectionLost(self, reason):

    print "Lost a client!"

    self.factory.clients.remove(self)

 

  def lineReceived(self, line):

    print "received", repr(line)

    for c in self.factory.clients:

        #if c != sender:

        c.message(line)

 

  def message(self, message):

    if message != '':

        self.transport.write(message + '\n')

 

from twisted.internet import protocol

from twisted.application import service, internet

 

factory = protocol.ServerFactory()

factory.protocol = MyChat

factory.clients = []

 

application = service.Application("chatserver")

internet.TCPServer(1025, factory).setServiceParent(application)


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070112/f3f64fa8/attachment.html>

From teratorn at twistedmatrix.com  Fri Jan 12 22:31:09 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Fri, 12 Jan 2007 23:31:09 -0600
Subject: [Twisted-Python] Twisted lineReceived (sender)
In-Reply-To: <000001c736ca$bf508f50$0200a8c0@leelaptop>
References: <000001c736ca$bf508f50$0200a8c0@leelaptop>
Message-ID: <op.tl2ux7w2y3d107@office2>

On Fri, 12 Jan 2007 22:24:41 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> I just started with twisted and want to write a simple chat server.  This
> code here works fine, however I want to know who the data is coming from  
> in the callbacks or events.

Inside a Protocol method self.transport.getPeer() should give you what you  
want.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From gravesricharde at yahoo.com  Sat Jan 13 02:33:31 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Sat, 13 Jan 2007 01:33:31 -0800 (PST)
Subject: [Twisted-Python] client crashed
Message-ID: <20070113093331.41183.qmail@web37210.mail.mud.yahoo.com>

Hello,

I am new to twisted.

I got one unhandled error (twice) in Deferred:

In this code in client.py (you can skip to the 2nd line from the bottom):

def _parse(url, defaultPort=None):
    parsed = urlparse.urlparse(url)
    scheme = parsed[0]
    path = urlparse.urlunparse(('','')+parsed[2:])
    if defaultPort is None:
        if scheme == 'https':
            defaultPort = 443
        else:
            defaultPort = 80
    host, port = parsed[1], defaultPort
    if ':' in host:
        host, port = host.split(':')
        port = int(port)
    return scheme, host, port, path



Here is the end of the traceback:

 File "/usr/lib/python2.4/site-packages/twisted/web/client.py", line 376, in _parse
    port = int(port)
exceptions.ValueError: invalid literal for int():


I was running a script on a big list of URL's that I scraped off a google query.  

I looked at each URL including a colon, but nothing jumped out at me.

Maybe the port = int(port) line should be within a try/except structure.  

Should I report this somewhere else?

Thanks,

Rick Graves






From griph at mail.ru  Sat Jan 13 04:50:06 2007
From: griph at mail.ru (Mars Agliullin)
Date: Sat, 13 Jan 2007 16:50:06 +0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <20070112174007.17094.557896436.divmod.xquotient.1839@joule.divmod.com>
References: <20070112174007.17094.557896436.divmod.xquotient.1839@joule.divmod.com>
Message-ID: <45A8C76E.8080807@mail.ru>


glyph at divmod.com пишет:
> By "responsiveness" I meant responding to people who report bugs, and 
> being clear on what we are vs. are not working on.  The problem I am 
> trying to address is best described here:
>
>     http://www.jwz.org/doc/cadt.html
Yes! But there is another problem. Say, one wants some feature to be 
supported in twisted. He/she sends a patch, but it is dropped by the 
core team, since they think it should be implemented another way.
It is OK, but if the implementation had been discussed before, there 
would be less time lost. Correct me, if I miss something, but more 
detailed roadmaps by the core team would be helpful for everyone who 
wants to participate. If there _are_ roadmaps, give me an URL, please.

For example, I'd be happy to implement SCGI authentication (ticket 
#1300). But it is better to know in advance, how core team want this 
feature to be implemented. Otherwise it is just a lost time for me to 
code and for the core team to view it.

Sorry, if I'm crude here. I'm new to this list, although using twisted 
for several months (btw, it's cool & tasty!). And English is not my 
native language, so sorry again for style. :)

--
Best regards, Mars Agliullin




From andrew-twisted at puzzling.org  Sat Jan 13 05:46:52 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 13 Jan 2007 23:46:52 +1100
Subject: [Twisted-Python] client crashed
In-Reply-To: <20070113093331.41183.qmail@web37210.mail.mud.yahoo.com>
References: <20070113093331.41183.qmail@web37210.mail.mud.yahoo.com>
Message-ID: <20070113124652.GA25155@steerpike.home.puzzling.org>

Rick Graves wrote:
[...]
> 
> def _parse(url, defaultPort=None):
>     parsed = urlparse.urlparse(url)
>     scheme = parsed[0]
>     path = urlparse.urlunparse(('','')+parsed[2:])
>     if defaultPort is None:
>         if scheme == 'https':
>             defaultPort = 443
>         else:
>             defaultPort = 80
>     host, port = parsed[1], defaultPort
>     if ':' in host:
>         host, port = host.split(':')
>         port = int(port)
>     return scheme, host, port, path
> 
> 
> 
> Here is the end of the traceback:
> 
>  File "/usr/lib/python2.4/site-packages/twisted/web/client.py", line 376, in _parse
>     port = int(port)
> exceptions.ValueError: invalid literal for int():
> 
> 
> I was running a script on a big list of URL's that I scraped off a google query.  
> 
> I looked at each URL including a colon, but nothing jumped out at me.

Here's an example that will trigger that exception:

    >>> _parse('http://foo:/')
    Traceback (most recent call last):
      File "<stdin>", line 1, in ?
      File "<stdin>", line 13, in _parse
    ValueError: invalid literal for int(): 

If you're having trouble diagnosing the cause of your problem, I suggest putting
a try-except in your code to log the URL triggering it:

        try:
            port = int(port)
        except:
            print "Bad port, url is:", url
            raise

You could also put the try/except around the entire body of the function.

Anyway, there's nothing Twisted specific here that I can see.

-Andrew.




From gravesricharde at yahoo.com  Sat Jan 13 07:00:11 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Sat, 13 Jan 2007 06:00:11 -0800 (PST)
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
Message-ID: <20070113140012.12041.qmail@web37211.mail.mud.yahoo.com>

Hello,

I am new to twisted.

I was using client.downloadPage and reactor.

Twisted was hung on the following two for a whole hour:

http://75i.net/

http://www.theproxy.be/

I had to break out with Ctrl-C.  When I did that, they finally fired the Errorback. 

These two stood out, as I had successfully (otherwise) run through a list of about 850 URL's.  

Is my reporting this helpful?  

Should I be reporting this elsewhere?

Thanks,

Rick Graves






From radix at twistedmatrix.com  Sat Jan 13 10:31:13 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 13 Jan 2007 12:31:13 -0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <45A8C76E.8080807@mail.ru>
References: <20070112174007.17094.557896436.divmod.xquotient.1839@joule.divmod.com>
	<45A8C76E.8080807@mail.ru>
Message-ID: <60ed19d40701130931i7954c1e4qf8521c2bc4a902ca@mail.gmail.com>

On 1/13/07, Mars Agliullin <griph at mail.ru> wrote:
>
> glyph at divmod.com пишет:
> > By "responsiveness" I meant responding to people who report bugs, and
> > being clear on what we are vs. are not working on.  The problem I am
> > trying to address is best described here:
> >
> >     http://www.jwz.org/doc/cadt.html

> Yes! But there is another problem. Say, one wants some feature to be
> supported in twisted. He/she sends a patch, but it is dropped by the
> core team, since they think it should be implemented another way.
> It is OK, but if the implementation had been discussed before, there
> would be less time lost. Correct me, if I miss something, but more
> detailed roadmaps by the core team would be helpful for everyone who
> wants to participate. If there _are_ roadmaps, give me an URL, please.
>
> For example, I'd be happy to implement SCGI authentication (ticket
> #1300). But it is better to know in advance, how core team want this
> feature to be implemented. Otherwise it is just a lost time for me to
> code and for the core team to view it.

I don't think this is a systemic problem. If you want to work on SCGI
authentication, and you want to know how the developers think it ought
to be implemented, then you 1. look in the ticket for implementing
SCGI authentication to see if any discussion has happened (or make
one, if it doesn't exist), and 2. ASK the developers how they think it
ought to be implemented. If nobody responds, then there is not much
interest and you can probably feel free to do it however you want.

It's as simple as that. As for a roadmap: sure, roadmaps are nice, and
it'd be good if our project had more direction, but this wouldn't
solve your problem. It's impossible to make a roadmap that would lay
out designs for every possible feature anyone would ever want in
Twisted.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From lee.a.connell at gmail.com  Sat Jan 13 12:04:23 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 13 Jan 2007 14:04:23 -0500
Subject: [Twisted-Python] Twisted lineReceived (sender)
In-Reply-To: <op.tl2ux7w2y3d107@office2>
References: <000001c736ca$bf508f50$0200a8c0@leelaptop>
	<op.tl2ux7w2y3d107@office2>
Message-ID: <000d01c73745$a4a3ae50$0200a8c0@leelaptop>

Thanks,

getPeer() works for ip and port, however it wouldn't work in my case,
because I want to determine one client from another, if multiple clients
were coming from the same address this would fail.

Loop through the factory.clients first and...

I just compared "if client != self:" send the message

I just looked through the API to get more info on these, API seems a bit
scarce, is this something that will be complete soon?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Eric Mangold
Sent: Saturday, January 13, 2007 12:31 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Twisted lineReceived (sender)

On Fri, 12 Jan 2007 22:24:41 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> I just started with twisted and want to write a simple chat server.  This
> code here works fine, however I want to know who the data is coming from  
> in the callbacks or events.

Inside a Protocol method self.transport.getPeer() should give you what you  
want.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 




From lee.a.connell at gmail.com  Sat Jan 13 13:31:03 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 13 Jan 2007 15:31:03 -0500
Subject: [Twisted-Python] documentation
Message-ID: <000001c73751$bf8806b0$0200a8c0@leelaptop>

Didn’t mean it was scarce, I just am use to MSDN, I’ve managed to find what
I’ve needed so far.

 

Thanks!


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070113/eb6fc939/attachment.html>

From gravesricharde at yahoo.com  Sat Jan 13 15:15:01 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Sat, 13 Jan 2007 14:15:01 -0800 (PST)
Subject: [Twisted-Python] Re: client crashed
In-Reply-To: <E1H5nAi-0006pw-02@pyramid.twistedmatrix.com>
Message-ID: <111475.26767.qm@web37206.mail.mud.yahoo.com>

Andrew,

Thanks for the feedback. 

BTW, I am new to twisted but not to python.

> Anyway, there's nothing Twisted specific here that I
can see.

I disagree -- I was trying to make a suggestion that
would make future releases of twisted more
bulletproof. 

Specifically, perhaps _parse() should be changed as
follows (4 out of the last 5 lines are different):


def _parse(url, defaultPort=None):
    parsed = urlparse.urlparse(url)
    scheme = parsed[0]
    path = urlparse.urlunparse(('','')+parsed[2:])
    if defaultPort is None:
        if scheme == 'https':
            defaultPort = 443
        else:
            defaultPort = 80
    host, port = parsed[1], defaultPort
    if ':' in host:
        host, port = host.split(':')
        try:
             port = int(port)
        except ValueError:
             port = defaultPort
    return scheme, host, port, path


But I will not change the copy of client.py on my
computer.  I worked around this problem by making sure
all the URL's were clean before giving them to
twisted.  

Going at this from the top down (or bottom up,
depending on your perspective):

lURLs = map( GetCleanURL, lURLs )

def GetCleanURL( sURL ):
    #
    return UrlUnSplitMore( UrlSplitMore( sURL ) )


UrlUnSplitMore and UrlSplitMore have longer lines
which this mail client would wrap, and the result
would look terrible.  In case you are interested, they
are in this plain text file:

http://www.advanced-app.com.hk/MiscJunk/UrlSplitAndUnSplit.txt

Maybe I am making a suggestion to change twisted in
the wrong place.  I will try posting my suggested
change as a "bug" -- client.py crashes on a URL that
most browsers clean up automatically with no problem. 


Thanks,

Rick




From teratorn at twistedmatrix.com  Sat Jan 13 15:15:07 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 13 Jan 2007 16:15:07 -0600
Subject: [Twisted-Python] Twisted lineReceived (sender)
In-Reply-To: <000d01c73745$a4a3ae50$0200a8c0@leelaptop>
References: <000001c736ca$bf508f50$0200a8c0@leelaptop>
	<op.tl2ux7w2y3d107@office2>
	<000d01c73745$a4a3ae50$0200a8c0@leelaptop>
Message-ID: <op.tl35fhgwy3d107@office2>

On Sat, 13 Jan 2007 13:04:23 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> Thanks,
>
> getPeer() works for ip and port, however it wouldn't work in my case,
> because I want to determine one client from another, if multiple clients
> were coming from the same address this would fail.

On the contrary, the combination of source IP and source port will be  
unique to each TCP connection, even coming from NAT devices.

> Loop through the factory.clients first and...
>
> I just compared "if client != self:" send the message

Yeah, if all you care about is differentiation then that works.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From teratorn at twistedmatrix.com  Sat Jan 13 15:38:04 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 13 Jan 2007 16:38:04 -0600
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <20070113140012.12041.qmail@web37211.mail.mud.yahoo.com>
References: <20070113140012.12041.qmail@web37211.mail.mud.yahoo.com>
Message-ID: <op.tl36hqdvy3d107@office2>

On Sat, 13 Jan 2007 08:00:11 -0600, Rick Graves <gravesricharde at yahoo.com>  
wrote:

> Hello,
>
> I am new to twisted.
>
> I was using client.downloadPage and reactor.
>
> Twisted was hung on the following two for a whole hour:
>
> http://75i.net/
>
> http://www.theproxy.be/
>
> I had to break out with Ctrl-C.  When I did that, they finally fired the  
> Errorback.

I just wrote a test program that uses downloadPage() and it downloaded  
both those URLs fine.

Are you still able to reproduce the problem? Does there seem to be any  
difference in downloading those URLs as part of a full run as opposed to  
individually? Do you have any proxies between you and those hosts? (Many  
ISPs have transparent proxies these days, *grrr*). If you can still  
reproduce then a traffic capture could be of use.

In any case, the deferred returned from downloadPage probably shouldn't  
take > 1 hour to errback. It's certainly possible that downloadPage could  
need more than 1 hour to download a large file over a slow pipe, but  
that's not the case here. There should probably be reasonable timeouts  
that trigger when no data has been received for a while. I'm not sure how  
downloadPage works as I haven't looked at the code yet.

Please file a bug at http://twistedmatrix.com/trac (You will need to  
register first). Include all the information you have, and a minimal  
example program that demonstrates the problem if at all possible.

Regards,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From lee.a.connell at gmail.com  Sat Jan 13 15:44:58 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 13 Jan 2007 17:44:58 -0500
Subject: [Twisted-Python] Twisted lineReceived (sender)
In-Reply-To: <op.tl35fhgwy3d107@office2>
References: <000001c736ca$bf508f50$0200a8c0@leelaptop><op.tl2ux7w2y3d107@office2><000d01c73745$a4a3ae50$0200a8c0@leelaptop>
	<op.tl35fhgwy3d107@office2>
Message-ID: <000001c73764$74ec50d0$0200a8c0@leelaptop>

Agh yes, should have thought of that!

Thank you.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Eric Mangold
Sent: Saturday, January 13, 2007 5:15 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Twisted lineReceived (sender)

On Sat, 13 Jan 2007 13:04:23 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> Thanks,
>
> getPeer() works for ip and port, however it wouldn't work in my case,
> because I want to determine one client from another, if multiple clients
> were coming from the same address this would fail.

On the contrary, the combination of source IP and source port will be  
unique to each TCP connection, even coming from NAT devices.

> Loop through the factory.clients first and...
>
> I just compared "if client != self:" send the message

Yeah, if all you care about is differentiation then that works.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 




From teratorn at twistedmatrix.com  Sat Jan 13 15:58:24 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 13 Jan 2007 16:58:24 -0600
Subject: [Twisted-Python] Re: client crashed
In-Reply-To: <111475.26767.qm@web37206.mail.mud.yahoo.com>
References: <111475.26767.qm@web37206.mail.mud.yahoo.com>
Message-ID: <op.tl37fmycy3d107@office2>

On Sat, 13 Jan 2007 16:15:01 -0600, Rick Graves <gravesricharde at yahoo.com>  
wrote:
[...]
> Maybe I am making a suggestion to change twisted in
> the wrong place.  I will try posting my suggested
> change as a "bug" -- client.py crashes on a URL that
> most browsers clean up automatically with no problem.

I don't think this is a bug. It's a given that you don't give Twisted junk  
input. And if you do you should catch any errors that may result. _parse()  
isn't special in this regard. Cleaning up input is a job for UI components  
and other things that are "higher up" than Twisted.

Regards,
-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From exarkun at divmod.com  Sat Jan 13 16:00:26 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 13 Jan 2007 18:00:26 -0500
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <op.tl36hqdvy3d107@office2>
Message-ID: <20070113230026.11447.1747369533.divmod.quotient.15708@ohm>

On Sat, 13 Jan 2007 16:38:04 -0600, Eric Mangold <teratorn at twistedmatrix.com> wrote:
>On Sat, 13 Jan 2007 08:00:11 -0600, Rick Graves <gravesricharde at yahoo.com> 
>wrote:
>>Hello,
>>
>>I am new to twisted.
>>
>>I was using client.downloadPage and reactor.
>>
>>Twisted was hung on the following two for a whole hour:
>>
>>http://75i.net/
>>
>>http://www.theproxy.be/
>>
>>I had to break out with Ctrl-C.  When I did that, they finally fired the 
>>Errorback.
>
>I just wrote a test program that uses downloadPage() and it downloaded  both 
>those URLs fine.
>
>Are you still able to reproduce the problem? Does there seem to be any 
>difference in downloading those URLs as part of a full run as opposed to 
>individually? Do you have any proxies between you and those hosts? (Many 
>ISPs have transparent proxies these days, *grrr*). If you can still 
>reproduce then a traffic capture could be of use.
>
>In any case, the deferred returned from downloadPage probably shouldn't 
>take > 1 hour to errback. It's certainly possible that downloadPage could 
>need more than 1 hour to download a large file over a slow pipe, but  that's 
>not the case here.

Not necessarily.  Networks have failures.  It seems likely that there was a
transient error of some sort while downloading two URLs (out of several
hundred).  Likely the connection would have eventually been lost, due to
TCP-level timeouts, but this would take longer than an hour.  If such long
timeouts are not desirable for a particular application, you can set a lower
timeout by passing the timeout keyword argument to downloadPage.  In these
cases, it may also be desirable to try again before ultimately reporting a
failure.

Jean-Paul



From smurf at smurf.noris.de  Sat Jan 13 11:09:45 2007
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Sat, 13 Jan 2007 18:09:45 +0000 (UTC)
Subject: [Twisted-Python] trac / website woes
Message-ID: <E1H5rzN-00060b-Us@smurf.noris.de>

I hate Trac. Especially the one on twistedmatrix.

- My previous login ("smurfix") seems to suffer from a lost password. The
website does not have an obvious place to request it.

- I tried to create a new login. Reporting a bug with it requires an email
address. The page to enter the email address does not have a Submit button.

- Not entering login data results in an empty page.

On to the real bug; somebody else can enter it into Trac.
Or, even better, fix the source.

It seems that Deferreds are tricky.

--- /usr/lib/python2.4/site-packages/twisted/spread/pb.py	2006-05-12 15:50:13.000000000 +0200
+++ /tmp/pb.py	2007-01-13 18:48:50.508925924 +0100
@@ -651,6 +651,9 @@
     def notifyOnDisconnect(self, notifier):
         """Call the given callback when the Broker disconnects."""
         assert callable(notifier)
-        self.disconnects.append(notifier)
+        if self.disconnected:
+            notifier()
+        else:
+            self.disconnects.append(notifier)
 
     def notifyOnFail(self, notifier):

... as exemplified by this traceback:

2007/01/13 18:26 CET [Broker,0,127.0.0.1] Error: <twisted.python.failure.Failure twisted.spread.pb.PBConnectionLost>
2007/01/13 18:26 CET [Broker,0,127.0.0.1] [Failure instance: Traceback (failure with no frames): twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback (failure with no frames): twisted.internet.error.ConnectionDone: Connection was closed cleanly.
2007/01/13 18:26 CET [Broker,0,127.0.0.1] ]
2007/01/13 18:26 CET [Broker,0,127.0.0.1] ]
2007/01/13 18:27 CET [Broker,1,127.0.0.1] Looking for 00:11:d8:54:e6:2d
2007/01/13 18:27 CET [-] Peer will receive following PB traceback:
2007/01/13 18:27 CET [-] Traceback (most recent call last):
          File "/usr/lib/python2.4/site-packages/twisted/internet/posixbase.py", line 226, in mainLoop
            self.runUntilCurrent()
          File "/usr/lib/python2.4/site-packages/twisted/internet/base.py", line 534, in runUntilCurrent
            f(*a, **kw)
          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 229, in callback
            self._startRunCallbacks(result)
          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 294, in _startRunCallbacks
            self._runCallbacks()
        --- <exception caught here> ---
          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 307, in _runCallbacks
            self.result = callback(self.result, *args, **kw)
          File "/usr/lib/python2.4/site-packages/twisted/spread/pb.py", line 1747, in _loggedIn
            self.portalWrapper.broker.notifyOnDisconnect(logout)
          File "/usr/lib/python2.4/site-packages/twisted/spread/pb.py", line 654, in notifyOnDisconnect
            self.disconnects.append(notifier)
        exceptions.AttributeError: 'NoneType' object has no attribute 'append'


-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
 - -
<dracus> Ctrl+Option+Command + P + R
<Knghtbrd> dracus - YE GODS!  That's worse than EMACS!
<LauraDax> hehehehe
<dracus> don't ask what that does :P



From george at ringdevelopment.com  Sat Jan 13 16:55:15 2007
From: george at ringdevelopment.com (George Pauly)
Date: Sat, 13 Jan 2007 18:55:15 -0500
Subject: [Twisted-Python] client, deferred and/or reactor hung on these
	2 URL's
In-Reply-To: <20070113230026.11447.1747369533.divmod.quotient.15708@ohm>
References: <20070113230026.11447.1747369533.divmod.quotient.15708@ohm>
Message-ID: <1168732516.28429.93.camel@localhost.localdomain>

On Sat, 2007-01-13 at 18:00 -0500, Jean-Paul Calderone wrote:
> On Sat, 13 Jan 2007 16:38:04 -0600, Eric Mangold <teratorn at twistedmatrix.com> wrote:
> >On Sat, 13 Jan 2007 08:00:11 -0600, Rick Graves <gravesricharde at yahoo.com> 
> >wrote:
> >>Hello,
> >>
> >>I am new to twisted.
> >>
> >>I was using client.downloadPage and reactor.
> >>
> >>Twisted was hung on the following two for a whole hour:
> >>
> >>http://75i.net/
> >>
> >>http://www.theproxy.be/
> >>
> >>I had to break out with Ctrl-C.  When I did that, they finally fired the 
> >>Errorback.
> >
> >I just wrote a test program that uses downloadPage() and it downloaded  both 
> >those URLs fine.
> >
> >Are you still able to reproduce the problem? Does there seem to be any 
> >difference in downloading those URLs as part of a full run as opposed to 
> >individually? Do you have any proxies between you and those hosts? (Many 
> >ISPs have transparent proxies these days, *grrr*). If you can still 
> >reproduce then a traffic capture could be of use.
> >
> >In any case, the deferred returned from downloadPage probably shouldn't 
> >take > 1 hour to errback. It's certainly possible that downloadPage could 
> >need more than 1 hour to download a large file over a slow pipe, but  that's 
> >not the case here.
> 
> Not necessarily.  Networks have failures.  It seems likely that there was a
> transient error of some sort while downloading two URLs (out of several
> hundred).  Likely the connection would have eventually been lost, due to
> TCP-level timeouts, but this would take longer than an hour.  If such long
> timeouts are not desirable for a particular application, you can set a lower
> timeout by passing the timeout keyword argument to downloadPage.  In these
> cases, it may also be desirable to try again before ultimately reporting a
> failure.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From exarkun at divmod.com  Sat Jan 13 16:55:45 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 13 Jan 2007 18:55:45 -0500
Subject: [Twisted-Python] trac / website woes
In-Reply-To: <E1H5rzN-00060b-Us@smurf.noris.de>
Message-ID: <20070113235545.11447.228742069.divmod.quotient.15750@ohm>

On Sat, 13 Jan 2007 18:09:45 +0000 (UTC), Matthias Urlichs <smurf at smurf.noris.de> wrote:
>I hate Trac. Especially the one on twistedmatrix.
>
>- My previous login ("smurfix") seems to suffer from a lost password. The
>website does not have an obvious place to request it.

It doesn't have a non-obvious way, either.

>
>- I tried to create a new login. Reporting a bug with it requires an email
>address. The page to enter the email address does not have a Submit button.

Coincidentally, I fixed both of these problems a couple hours ago.

>
>- Not entering login data results in an empty page.
>

I don't think we're going to do anything about that.

>On to the real bug; somebody else can enter it into Trac.
>Or, even better, fix the source.
>
>It seems that Deferreds are tricky.

Heh. :)

>
>--- /usr/lib/python2.4/site-packages/twisted/spread/pb.py	2006-05-12 15:50:13.000000000 +0200
>+++ /tmp/pb.py	2007-01-13 18:48:50.508925924 +0100
>@@ -651,6 +651,9 @@
>     def notifyOnDisconnect(self, notifier):
>         """Call the given callback when the Broker disconnects."""
>         assert callable(notifier)
>-        self.disconnects.append(notifier)
>+        if self.disconnected:
>+            notifier()
>+        else:
>+            self.disconnects.append(notifier)
>
>     def notifyOnFail(self, notifier):
>
>... as exemplified by this traceback:
>
>2007/01/13 18:26 CET [Broker,0,127.0.0.1] Error: <twisted.python.failure.Failure twisted.spread.pb.PBConnectionLost>
>2007/01/13 18:26 CET [Broker,0,127.0.0.1] [Failure instance: Traceback (failure with no frames): twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback (failure with no frames): twisted.internet.error.ConnectionDone: Connection was closed cleanly.
>2007/01/13 18:26 CET [Broker,0,127.0.0.1] ]
>2007/01/13 18:26 CET [Broker,0,127.0.0.1] ]
>2007/01/13 18:27 CET [Broker,1,127.0.0.1] Looking for 00:11:d8:54:e6:2d
>2007/01/13 18:27 CET [-] Peer will receive following PB traceback:
>2007/01/13 18:27 CET [-] Traceback (most recent call last):
>          File "/usr/lib/python2.4/site-packages/twisted/internet/posixbase.py", line 226, in mainLoop
>            self.runUntilCurrent()
>          File "/usr/lib/python2.4/site-packages/twisted/internet/base.py", line 534, in runUntilCurrent
>            f(*a, **kw)
>          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 229, in callback
>            self._startRunCallbacks(result)
>          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 294, in _startRunCallbacks
>            self._runCallbacks()
>        --- <exception caught here> ---
>          File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", line 307, in _runCallbacks
>            self.result = callback(self.result, *args, **kw)
>          File "/usr/lib/python2.4/site-packages/twisted/spread/pb.py", line 1747, in _loggedIn
>            self.portalWrapper.broker.notifyOnDisconnect(logout)
>          File "/usr/lib/python2.4/site-packages/twisted/spread/pb.py", line 654, in notifyOnDisconnect
>            self.disconnects.append(notifier)
>        exceptions.AttributeError: 'NoneType' object has no attribute 'append'
>

Can you clarify the misbehavior you're reporting?  It looks to me like this
can only occur when the connection is lost between when an avatar is received
and when it is passed to the client-side cred callback, which seems like a
vanishingly small window to me.  Not suggesting this isn't a problem, just
that perhaps I don't understand it. :)

Jean-Paul



From andrew-twisted at puzzling.org  Sat Jan 13 17:29:55 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 14 Jan 2007 11:29:55 +1100
Subject: [Twisted-Python] Re: client crashed
In-Reply-To: <111475.26767.qm@web37206.mail.mud.yahoo.com>
References: <E1H5nAi-0006pw-02@pyramid.twistedmatrix.com>
	<111475.26767.qm@web37206.mail.mud.yahoo.com>
Message-ID: <20070114002954.GB25155@steerpike.home.puzzling.org>

On Sat, Jan 13, 2007 at 02:15:01PM -0800, Rick Graves wrote:
> Andrew,
> 
> Thanks for the feedback. 
> 
> BTW, I am new to twisted but not to python.
> 
> > Anyway, there's nothing Twisted specific here that I
> can see.
> 
> I disagree -- I was trying to make a suggestion that
> would make future releases of twisted more
> bulletproof. 
> 
> Specifically, perhaps _parse() should be changed as
> follows (4 out of the last 5 lines are different):

Ah, I didn't realise from your original message that _parse was part of Twisted,
rather than your own code.

-Andrew.




From lee.a.connell at gmail.com  Sat Jan 13 20:17:26 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 13 Jan 2007 22:17:26 -0500
Subject: [Twisted-Python] SSL
Message-ID: <000e01c7378a$852fb7e0$0200a8c0@leelaptop>

I am using SSL with LineReceiver on my server and it is working fine,
however when I start the server it asks me for the PEM key.  Is there a way
to automate this so the server can start with out user intervention?

 

Thanks!


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.10/624 - Release Date: 1/12/2007
2:04 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070113/df12cb6e/attachment.html>

From griph at mail.ru  Sun Jan 14 00:05:59 2007
From: griph at mail.ru (Mars Agliullin)
Date: Sun, 14 Jan 2007 12:05:59 +0500
Subject: [Twisted-Python] Ticket Hall of Shame - Current Loser: Brian
	Warner
In-Reply-To: <60ed19d40701130931i7954c1e4qf8521c2bc4a902ca@mail.gmail.com>
References: <20070112174007.17094.557896436.divmod.xquotient.1839@joule.divmod.com>	<45A8C76E.8080807@mail.ru>
	<60ed19d40701130931i7954c1e4qf8521c2bc4a902ca@mail.gmail.com>
Message-ID: <45A9D657.9070608@mail.ru>

Christopher Armstrong пишет:
>> For example, I'd be happy to implement SCGI authentication (ticket
>> #1300). But it is better to know in advance, how core team want this
>> feature to be implemented. Otherwise it is just a lost time for me to
>> code and for the core team to view it.
>
> I don't think this is a systemic problem. If you want to work on SCGI
> authentication, and you want to know how the developers think it ought
> to be implemented, then you 1. look in the ticket for implementing
> SCGI authentication to see if any discussion has happened (or make
> one, if it doesn't exist), and 2. ASK the developers how they think it
> ought to be implemented. If nobody responds, then there is not much
> interest and you can probably feel free to do it however you want.
... provided that rules described in the FAQ for contributors apply. OK. 
I got the point. Thank you a lot.

--
Best regards, Mars Agliullin




From smurf at smurf.noris.de  Sun Jan 14 00:05:32 2007
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Sun, 14 Jan 2007 08:05:32 +0100
Subject: [Twisted-Python] Re: trac / website woes
Message-ID: <20070114070532.GE8143@kiste.smurf.noris.de>

Hi,

Matthias Urlichs:
> It seems that Deferreds are tricky.
> 
Even more so -- apply on top of the last patch:

--- /tmp/pb.py  2007-01-13 18:48:50.508925924 +0100
+++ /usr/lib/python2.4/site-packages/twisted/spread/pb.py       2007-01-13 19:20:15.000000000 +0100
@@ -795,6 +795,9 @@
                 })
             return object
 
+        if not self.connected:
+            return deferred.fail(failure.Failure(DeadReferenceError()))
+
         # XXX This call is NOT REENTRANT and testing for reentrancy is just
         # crazy, so it likely won't be.  Don't ever write methods that call the
         # broker's serialize() method recursively (e.g. sending a method call

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
 - -
"Though a program be but three lines long,
someday it will have to be maintained."
-- The Tao of Programming



From gravesricharde at yahoo.com  Sun Jan 14 01:13:04 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Sun, 14 Jan 2007 00:13:04 -0800 (PST)
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <E1H5s01-0003e0-02@pyramid.twistedmatrix.com>
Message-ID: <20070114081304.92878.qmail@web37207.mail.mud.yahoo.com>

Eric,

I ran the same file of almost 850 URL's again today,
and again today, in the end the program was hung on
the same two URL's.  

I tried the URL's with a program like WebCat.py from
the Twisted book, which I also call WebCat.py.  Like
the one in the book, it uses client.getPage.  It is
different from the one in the book as follows:

1) The Errorback in the book did not work for me, so I
wrote a simple one, and 

2) I do not need to print the text of the page on the
screen, my WebCat.py only prints the number of bytes
received.

If you want to take a look and/or try it yourself, I
put it here:

http://www.advanced-app.com.hk/MiscJunk/WebCat.py.tar.gz

Those two URL's also hang my WebCat.py.  WebCat.py
does work with other URL's.

> (Many ISPs have transparent proxies these days,
*grrr*). 

I am definitely connecting through a proxy at the ISP.
 Around here, that is what you get.  

> If you can still reproduce then a traffic capture
could be of use.

How do I do that?

Thanks,

Rick




From christopher.zorn at gmail.com  Sun Jan 14 09:26:35 2007
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Sun, 14 Jan 2007 11:26:35 -0500
Subject: [Twisted-Python] poll reactor question
Message-ID: <149014b90701140826x3e211f3ck33735b15d81697d4@mail.gmail.com>

Hello,

When I use the poll reactor I get the following traceback every now and then :

 Traceback (most recent call last):
          File "/usr/lib/python2.3/site-packages/twisted/application/app.py",
line 278, in run
            runApp(config)
          File "/usr/lib/python2.3/site-packages/twisted/scripts/twistd.py",
line 197, in runApp
            app.runReactorWithLogging(config, oldstdout, oldstderr)
          File "/usr/lib/python2.3/site-packages/twisted/application/app.py",
line 131, in runReactorWithLogging
            reactor.run()
          File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py",
line 218, in run
            self.mainLoop()
        --- <exception caught here> ---
          File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py",
line 229, in mainLoop
            self.doIteration(t)
          File "/usr/lib/python2.3/site-packages/twisted/internet/pollreactor.py",
line 141, in doPoll
            for fd, event in l:
        exceptions.OverflowError: long int too large to convert to int


I looked in the tickets and could not find this. I am using twisted
2.4.0 and as you can see, python 2.3

Does anyone know what this could be? It only happens with this reactor.



From teratorn at twistedmatrix.com  Sun Jan 14 09:55:32 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sun, 14 Jan 2007 10:55:32 -0600
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <20070114081304.92878.qmail@web37207.mail.mud.yahoo.com>
References: <20070114081304.92878.qmail@web37207.mail.mud.yahoo.com>
Message-ID: <op.tl5lauoby3d107@office2>

On Sun, 14 Jan 2007 02:13:04 -0600, Rick Graves <gravesricharde at yahoo.com>  
wrote:

> Eric,
>
> I ran the same file of almost 850 URL's again today,
> and again today, in the end the program was hung on
> the same two URL's.
>
> I tried the URL's with a program like WebCat.py from
> the Twisted book, which I also call WebCat.py.  Like
> the one in the book, it uses client.getPage.  It is
> different from the one in the book as follows:
>
> 1) The Errorback in the book did not work for me, so I
> wrote a simple one, and
>
> 2) I do not need to print the text of the page on the
> screen, my WebCat.py only prints the number of bytes
> received.
>
> If you want to take a look and/or try it yourself, I
> put it here:
>
> http://www.advanced-app.com.hk/MiscJunk/WebCat.py.tar.gz
>
> Those two URL's also hang my WebCat.py.  WebCat.py
> does work with other URL's.
>
>> (Many ISPs have transparent proxies these days,
>> *grrr*).
>
> I am definitely connecting through a proxy at the ISP.
>  Around here, that is what you get.
>
>> If you can still reproduce then a traffic capture
>> could be of use.
>
> How do I do that?
>
> Thanks,
>
> Rick

Looks like we're getting somewhere. Like I said, those URLs don't hang for  
me. So it would seem that either 1) Our clients are different (Twisted  
trunk, here), and yours is broken somehow. Or 2) The traffic your client  
is seeing is different than the traffic my client is seeing (Maybe due to  
a proxy, or some other network device). Or maybe both.

What OS? Any personal firewalls or security software running?

To do a traffic capture you will probably want to use WireShark. You can  
configure it to only capture port 80 traffic between you and the host in  
question. That should keep other extraneous traffic out of your capture.  
Please attach it to the ticket. Use "pcap" format, I guess.

Can you get wget, or some other HTTP client to work? If so please attach a  
capture of that exchange too.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From exarkun at twistedmatrix.com  Sun Jan 14 10:00:16 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Jan 2007 17:00:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1168794016.63.28677350@twistedmatrix.com

Bug summary
______________________
Summary for 2007-01-07 through 2007-01-14
Bugs opened: 39    Bugs closed: 21  Total open bugs: 825 (+18)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:      +15  |Highest:  +2          |Conch:               +1  
|Enhancement:  +6  |High:     -1          |Core:                +7  
|Task:         +0  |Normal:  +20          |Ftp:                 -1  
                                          |Release Management:  +4  
                                          |Trial:               +3  
                                          |Web:                 +6  
                                          |Website:             +0  
                                          |Words:               +1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2371] twisted.conch.stdio.runWithProtocol writes to non-blocking file descriptor incorrectly (opened by exarkun)
    defect          conch      http://twistedmatrix.com/trac/ticket/2371

[#2382] twisted/web/test/test_http.py uses backticks (opened by exarkun)
    defect          web        http://twistedmatrix.com/trac/ticket/2382

[#1951] twisted.plugin should use twisted.python.modules (opened by glyph) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1951

[#1951] twisted.plugin should use twisted.python.modules (opened by glyph) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1951

                    ===== High =====
[#2367] twisted.test.test_failure.FailureTestCase.testBrokenStr breaks trial in debug mode (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2367

[#2372] rename "twisted projects" to "dot products" (maybe?) (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2372

[#2393] [buildbot]windows remove pyc state should use  "del /s *.pyc" (opened by scmikes) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2393

                    ===== Normal =====
[#2368] twisted.python.versions is broken with svn 1.4 (opened by psino) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2368

[#2369] twisted.python.versions is broken with svn 1.4 (opened by psino) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2369

[#2370] Cannot create new milestones. (opened by ralphm)
    defect          website    http://twistedmatrix.com/trac/ticket/2370

[#2373] Add timeout support to xmlrpc.Proxy.callRemote (opened by abierbaum)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2373

[#2374] testOpenSSLBuffering fails intermittently on a dapper machine (running in vmware) because it uses reactor.iterate (opened by radix)
    defect          core       http://twistedmatrix.com/trac/ticket/2374

[#2375] these objects' docstrings are not proper epytext: (opened by radix)
    defect          core       http://twistedmatrix.com/trac/ticket/2375

[#2376] release-twisted should generate guides with links to API docs (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2376

[#2377] setup.py could be better when there are other Twisteds in PYTHONPATH (opened by radix)
    enhancement     release management http://twistedmatrix.com/trac/ticket/2377

[#2378] Comment for t.test.test_process.SignalMixin is egregiously wrong (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/2378

[#2379] process-docs uses #!/bin/sh but uses non-POSIX shell features (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2379

[#2380] Make it possible to update the website with new documentation (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2380

[#2381] Twisted CMD box doesn't always work (win32) (opened by teratorn)
    defect          core       http://twistedmatrix.com/trac/ticket/2381

[#2383] twisted/web/woven/utils.py uses backticks (opened by exarkun)
    defect          web        http://twistedmatrix.com/trac/ticket/2383

[#2384] twisted/web/woven/widgets.py uses backticks (opened by exarkun)
    defect          web        http://twistedmatrix.com/trac/ticket/2384

[#2385] twisted.words irc server does not work with gaim (opened by glyph)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2385

[#2386] Change log timestamp callLater thing to be attached to factory instead of module (opened by itamarst)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2386

[#2387] Deprecate twisted.enterprise.row (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2387

[#2388] twisted.runner.procmon not even importable on windows (opened by seletz) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2388

[#2389] twisted.runner.procmon not even importable on windows (opened by seletz)
    defect          core       http://twistedmatrix.com/trac/ticket/2389

[#2390] RuntimeError: Visit the 'User Configuration' page and enter an email address before you create a ticket. (opened by seletz) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2390

[#2391] Twisted Conch setup.py gives its name as "Conch" instead of "Twisted Conch" (opened by exarkun)
    defect          release management http://twistedmatrix.com/trac/ticket/2391

[#2392] trial aborts abnormally if it encounters a TestCase.run which raises an exception (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2392

[#2394] probable typo in twisted.internet._posixstdio (opened by soyt) (CLOSED, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/2394

[#2395] twisted.plugin dropin.cache race condition (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/2395

[#2396] Change the document about twistd plugins to not redefine the word "TAP" (opened by radix) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2396

[#2397] missing attribute causing a traceback when running trial (opened by jacques) (CLOSED, duplicate)
    defect          trial      http://twistedmatrix.com/trac/ticket/2397

[#2398] missing attribute causing a traceback when running trial (opened by jacques) (CLOSED, invalid)
    defect          trial      http://twistedmatrix.com/trac/ticket/2398

[#2399] Windows installers include old, warning-ridden zope.interface (opened by moonfallen)
    defect          release management http://twistedmatrix.com/trac/ticket/2399

[#2400] Test that trac plugin no longer rejects changes when an email address is missing (opened by exarkun) (CLOSED, duplicate)
    task            core       http://twistedmatrix.com/trac/ticket/2400

[#2401] Test that trac plugin no longer rejects changes when an email address is missing (opened by exarkun) (CLOSED, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2401

[#2402] client.py crashes on URL's that would be no problem for most browsers (opened by Rick Graves)
    defect          web        http://twistedmatrix.com/trac/ticket/2402

[#2392] trial aborts abnormally if it encounters a TestCase.run which raises an exception (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2392



Closed Bugs
______________________
                    ===== Highest =====
[#1951] twisted.plugin should use twisted.python.modules (opened by glyph, closed by glyph, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1951

[#1951] twisted.plugin should use twisted.python.modules (opened by glyph, closed by glyph, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1951

[#1951] twisted.plugin should use twisted.python.modules (opened by glyph, closed by glyph, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1951

[#1566] Allow tickets to be submitted if user enters an email address in the "Your email or username" field (opened by exarkun, closed by exarkun, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1566

                    ===== High =====
[#2393] [buildbot]windows remove pyc state should use  "del /s *.pyc" (opened by scmikes, closed by teratorn, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2393

[#1378] iocpreactor WindowsError: (0, 'De bewerking is voltooid') (opened by ghazel, closed by teratorn, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1378

[#1872] Fix "remove .pycs" step on Win32 builders (opened by exarkun, closed by exarkun, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/1872

[#2333] Release Twisted 2.5 (opened by glyph, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2333

                    ===== Normal =====
[#2368] twisted.python.versions is broken with svn 1.4 (opened by psino, closed by ralphm, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2368

[#2369] twisted.python.versions is broken with svn 1.4 (opened by psino, closed by ralphm, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2369

[#2349] unify "download" page on the web site (opened by glyph, closed by radix, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2349

[#2388] twisted.runner.procmon not even importable on windows (opened by seletz, closed by seletz, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2388

[#2392] trial aborts abnormally if it encounters a TestCase.run which raises an exception (opened by exarkun, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/2392

[#2394] probable typo in twisted.internet._posixstdio (opened by soyt, closed by exarkun, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/2394

[#1794] protocols/ftp.py SenderProtocol doesn't implement IFInishableConsumer even though it claims it does (opened by thor, closed by therve, fixed)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1794

[#2396] Change the document about twistd plugins to not redefine the word "TAP" (opened by radix, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2396

[#2398] missing attribute causing a traceback when running trial (opened by jacques, closed by exarkun, invalid)
    defect          trial      http://twistedmatrix.com/trac/ticket/2398

[#2397] missing attribute causing a traceback when running trial (opened by jacques, closed by exarkun, duplicate)
    defect          trial      http://twistedmatrix.com/trac/ticket/2397

[#2401] Test that trac plugin no longer rejects changes when an email address is missing (opened by exarkun, closed by exarkun, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2401

[#2400] Test that trac plugin no longer rejects changes when an email address is missing (opened by exarkun, closed by exarkun, duplicate)
    task            core       http://twistedmatrix.com/trac/ticket/2400

[#2390] RuntimeError: Visit the 'User Configuration' page and enter an email address before you create a ticket. (opened by seletz, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2390





From foom at fuhm.net  Sun Jan 14 12:58:35 2007
From: foom at fuhm.net (James Y Knight)
Date: Sun, 14 Jan 2007 14:58:35 -0500
Subject: [Twisted-Python] poll reactor question
In-Reply-To: <149014b90701140826x3e211f3ck33735b15d81697d4@mail.gmail.com>
References: <149014b90701140826x3e211f3ck33735b15d81697d4@mail.gmail.com>
Message-ID: <0939AAFD-C5ED-45C3-8708-2DB1A61223A1@fuhm.net>


On Jan 14, 2007, at 11:26 AM, Christopher Zorn wrote:
>          File "/usr/lib/python2.3/site-packages/twisted/internet/ 
> pollreactor.py",
> line 141, in doPoll
>            for fd, event in l:
>        exceptions.OverflowError: long int too large to convert to int
>
>
> I looked in the tickets and could not find this. I am using twisted
> 2.4.0 and as you can see, python 2.3
>
> Does anyone know what this could be? It only happens with this  
> reactor.

I don't see how that could possibly happen. poller.poll() (which is  
what l was assigned to) returns a standard list instance, so there  
should be no long/int conversion going on at all in executing this  
'for' statement. However, since it apparently can happen, I don't see  
how it could possibly be twisted's fault. It looks more like a Python  
bug. What OS/version are you running on, and what's the exact python  
version?

James



From christopher.zorn at gmail.com  Sun Jan 14 13:47:32 2007
From: christopher.zorn at gmail.com (Christopher Zorn)
Date: Sun, 14 Jan 2007 15:47:32 -0500
Subject: [Twisted-Python] poll reactor question
In-Reply-To: <0939AAFD-C5ED-45C3-8708-2DB1A61223A1@fuhm.net>
References: <149014b90701140826x3e211f3ck33735b15d81697d4@mail.gmail.com>
	<0939AAFD-C5ED-45C3-8708-2DB1A61223A1@fuhm.net>
Message-ID: <149014b90701141247w77b272efnface5df9fe9d74a6@mail.gmail.com>

On 1/14/07, James Y Knight <foom at fuhm.net> wrote:
>
> On Jan 14, 2007, at 11:26 AM, Christopher Zorn wrote:
> >          File "/usr/lib/python2.3/site-packages/twisted/internet/
> > pollreactor.py",
> > line 141, in doPoll
> >            for fd, event in l:
> >        exceptions.OverflowError: long int too large to convert to int
> >
> >
> > I looked in the tickets and could not find this. I am using twisted
> > 2.4.0 and as you can see, python 2.3
> >
> > Does anyone know what this could be? It only happens with this
> > reactor.
>
> I don't see how that could possibly happen. poller.poll() (which is
> what l was assigned to) returns a standard list instance, so there
> should be no long/int conversion going on at all in executing this
> 'for' statement. However, since it apparently can happen, I don't see
> how it could possibly be twisted's fault. It looks more like a Python
> bug. What OS/version are you running on, and what's the exact python
> version?

I was thinking it may be a python problem. It is Debian Sarge and
Python 2.3.5 (#2, Oct 16 2006, 19:19:48) is the exact version or
python.



>
> James
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From gravesricharde at yahoo.com  Sun Jan 14 22:12:55 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Sun, 14 Jan 2007 21:12:55 -0800 (PST)
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <E1H68e4-0006YW-00@pyramid.twistedmatrix.com>
Message-ID: <564880.20144.qm@web37214.mail.mud.yahoo.com>

Eric,

I ran wget on the 2 URL's, and what I got may lead to
the root cause of the problem. 

Here is the end of what appeared in the terminal
window:

begin quote

--11:56:34--  http://www.theproxy.be/link.php
           => `link.php'
Connecting to www.theproxy.be|209.67.219.74|:80...
connected.
HTTP request sent, awaiting response... 301 Moved
Permanently
Location: http://www.theproxy.be/link.php [following]
20 redirections exceeded.

end quote

I assume this is a case of endless loop redirection.

I got this for both URL's.  The complete transcript
for both is here:

http://www.advanced-app.com.hk/MiscJunk/wget.txt

I am running kubuntu, "codenamed 'Dapper Drake'" ver.
6.06.  For this version, I get ethereal not WireShark.
 I installed ethereal before running wget, but I am
wondering whether wget might zero in on the problem. 
So I hope to find out before spending some time trying
to figure ethereal out.  

Also, I have ADSL service from different ISP's at home
and at the office.  These two URL's hang for me at the
office, but work OK for me at home.  (They would be
going through different ISP's and different proxies.)

I have not filed a bug report yet.  If the wget output
does in fact zero in on the problem, I will do so
right away.

Thanks,

Rick




From teratorn at twistedmatrix.com  Mon Jan 15 00:01:42 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Mon, 15 Jan 2007 01:01:42 -0600
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
In-Reply-To: <564880.20144.qm@web37214.mail.mud.yahoo.com>
References: <564880.20144.qm@web37214.mail.mud.yahoo.com>
Message-ID: <op.tl6og4lcy3d107@office2>

On Sun, 14 Jan 2007 23:12:55 -0600, Rick Graves <gravesricharde at yahoo.com>  
wrote:

> Eric,
>
> I ran wget on the 2 URL's, and what I got may lead to
> the root cause of the problem.
>
> Here is the end of what appeared in the terminal
> window:
[...]
> I assume this is a case of endless loop redirection.
>
> I got this for both URL's.  The complete transcript
> for both is here:
>
> http://www.advanced-app.com.hk/MiscJunk/wget.txt
>
> I am running kubuntu, "codenamed 'Dapper Drake'" ver.
> 6.06.  For this version, I get ethereal not WireShark.
> I installed ethereal before running wget, but I am
> wondering whether wget might zero in on the problem.So I hope to find  
> out before spending some time trying
> to figure ethereal out. Also, I have ADSL service from different ISP's  
> at home
> and at the office.  These two URL's hang for me at the
> office, but work OK for me at home.  (They would be
> going through different ISP's and different proxies.)
>I have not filed a bug report yet.  If the wget output
> does in fact zero in on the problem, I will do so
> right away.
>Thanks,
>Rick

It definitely seems that your ISP is at fault. I just tried the URL with  
the addition of "/link.php" and that works fine, too. The fact that you  
can demonstrate the problem on one ISP but not the other makes the case  
pretty clear.

This, however, raises the question of whether downloadPage and friends  
ought to support a redirection limit, and whether such a limit should be  
set by default. In anyone actually wants to discuss this please start a  
new thread on the Twisted Web mailing list.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From therve at free.fr  Mon Jan 15 01:47:27 2007
From: therve at free.fr (therve at free.fr)
Date: Mon, 15 Jan 2007 09:47:27 +0100
Subject: [Twisted-Python] poll reactor question
In-Reply-To: <149014b90701141247w77b272efnface5df9fe9d74a6@mail.gmail.com>
References: <149014b90701140826x3e211f3ck33735b15d81697d4@mail.gmail.com>
	<0939AAFD-C5ED-45C3-8708-2DB1A61223A1@fuhm.net>
	<149014b90701141247w77b272efnface5df9fe9d74a6@mail.gmail.com>
Message-ID: <1168850847.45ab3f9f9e030@imp5-g19.free.fr>

Selon Christopher Zorn <christopher.zorn at gmail.com>:

> I was thinking it may be a python problem. It is Debian Sarge and
> Python 2.3.5 (#2, Oct 16 2006, 19:19:48) is the exact version or
> python.

Do you have a 64bits system ? Can you provide a full reproductible example ? Can
you try with a more recent version of Python and see if you still get the
problem ?

With a quick look, it seems it could come from this bug :
https://sourceforge.net/tracker/?func=detail&atid=105470&aid=1346533&group_id=5470,
but without further information it'd be hard to pronounce.

--
Thomas



From richard.wall at appliansys.com  Mon Jan 15 09:00:54 2007
From: richard.wall at appliansys.com (Richard Wall)
Date: Mon, 15 Jan 2007 16:00:54 +0000
Subject: [Twisted-Python] JOB OPPORTUNITY - ApplianSys - Coventry (UK)
Message-ID: <45ABA536.2040000@appliansys.com>

I am a Twisted enthusiast and support engineer working for a company 
called ApplianSys based in Coventry (UK), we develop *nix based hardware 
appliances.
http://www.appliansys.com/

This year we are planning a rapid expansion of our product range as well 
as updating our underlying software and hardware platform. As such, we 
need a Lead Developer and three Product Developers all of whom must be 
able to demonstrate a high level of competency in Python.

http://www.appliansys.com/company/company_10d.shtml
http://www.appliansys.com/company/company_10e.shtml

Twisted is not specifically mentioned in the job ads above, but we are 
advised by Dr Tim Couper, a EuroPython organiser / speaker and Twisted 
enthusiast that we should be using Buildbot for automated unit testing.
Twisted may be put to further use in the WebGUI and underlying 
configuration system.

In any case, I would say that Twisted developers tend to be the cream of 
the Python crop and if you know Twisted well and are prepared to work in 
Coventry, we would be very interested in talking to you.

Thanks.

-RichardW.
-- 
Richard Wall
Support Engineer
ApplianSys Ltd
(d) +44 (0)2476 430 091
(m) +44 (0)7980 805 418
(e) richard.wall at appliansys.com



From 6b6 at 21cn.com  Mon Jan 15 09:17:02 2007
From: 6b6 at 21cn.com (=?gb2312?B?weXS9A==?=)
Date: Tue, 16 Jan 2007 00:17:02 +0800
Subject: [Twisted-Python] test maillist
Message-ID: <Ls929883997991.17371@send5.inner-21cn.com>

twisted-python，您好！

	test,test..

　　　　　　　　致
礼！
 				

　　　　　　　　铃音
　　　　　　　　6b6 at 21cn.com
　　　　　　　　　　2007-01-16

From slowtech.chen at yahoo.com  Mon Jan 15 21:17:09 2007
From: slowtech.chen at yahoo.com (slowtech chen)
Date: Tue, 16 Jan 2007 04:17:09 +0000 (GMT)
Subject: [Twisted-Python] How can I mix the proxy function into a special
	protocol
Message-ID: <20070116041709.41331.qmail@web59112.mail.re1.yahoo.com>

Hi guys,

I tried to do this with multiple inheritances:

class MyProxyServer(basic.Int32StringReceiver, ProxyServer):
    def dataReceived(self, data):        
        basic.Int32StringReceiver.dataReceived(self, data)      
        ProxyServer.dataReceived(self, data)

but I got the following errors:

    self.peer.transport.write(data)
exceptions.AttributeError: 'NoneType' object has no attribute 'transport'

why the setPeer method of ProxyServer isn't called here?  Are there any better solutions for this problem?
Thanks.

Best,
Chen









 
____________________________________________________________________________________
No need to miss a message. Get email on-the-go 
with Yahoo! Mail for Mobile. Get started.
http://mobile.yahoo.com/mail 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070116/1b03f894/attachment.html>

From martin at browns.co.uk  Tue Jan 16 02:09:29 2007
From: martin at browns.co.uk (Martin Evans)
Date: Tue, 16 Jan 2007 09:09:29 +0000
Subject: [Twisted-Python] Server authentication
Message-ID: <200701160909.l0G99YBL001458@brownix.browns.co.uk>


I'm currently implementing a proprietary set of protocols for 
interacting with twisted running on a Microsoft server. All is 
working fine so far using the basic line receiver / raw methods.

I was hoping to add a form of authentication to the protocol. Is 
there anyway to interact with the existing accounts on the server?

The client wishes to make use of some of the lock down facilities 
based on the Microsoft Server accounts. ie in the same way MS Telnet 
server allows you to logon and then be taken to your own folder. I 
have taken a quick look at the cred module but have not seen anything 
suitable yet.

I am currently running "python twistd.py -y myserver.nac"

If such a module has not been developed, I assume I could develop a C 
extension module of some sort.

Any pointers would be a appreciated. Thanks.

Martin





From exarkun at divmod.com  Tue Jan 16 07:06:21 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 16 Jan 2007 09:06:21 -0500
Subject: [Twisted-Python] How can I mix the proxy function into a special
	protocol
In-Reply-To: <20070116041709.41331.qmail@web59112.mail.re1.yahoo.com>
Message-ID: <20070116140621.11447.147155516.divmod.quotient.18549@ohm>

On Tue, 16 Jan 2007 04:17:09 +0000 (GMT), slowtech chen <slowtech.chen at yahoo.com> wrote:
>Hi guys,
>
>I tried to do this with multiple inheritances:
>
>class MyProxyServer(basic.Int32StringReceiver, ProxyServer):
>    def dataReceived(self, data):
>        basic.Int32StringReceiver.dataReceived(self, data)
>        ProxyServer.dataReceived(self, data)
>
>but I got the following errors:
>
>    self.peer.transport.write(data)
>exceptions.AttributeError: 'NoneType' object has no attribute 'transport'
>
>why the setPeer method of ProxyServer isn't called here?  Are there any better solutions for this problem?

Probably because you didn't call it.  Anyhow, I wouldn't suggest doing this,
anyway.  ProxyServer is all of about 10 lines long.  It takes about as much
code to import, subclass, and upcall to it as it would take to implement
yourself.  Generally I wouldn't recommend re-implementing something which
already exists, but there's so little code involved here and ProxyServer isn't
really intended to be subclassed like this.

Jean-Paul



From lee.a.connell at gmail.com  Tue Jan 16 15:46:46 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Tue, 16 Jan 2007 17:46:46 -0500
Subject: [Twisted-Python] Server authentication
In-Reply-To: <200701160909.l0G99YBL001458@brownix.browns.co.uk>
References: <200701160909.l0G99YBL001458@brownix.browns.co.uk>
Message-ID: <003c01c739c0$341da2d0$0400a8c0@leelaptop>

So you need to access Active Directory?  Would ldap module help you with
this?  How bout the pywin32 extensions, anything in there that will help
with authenticating against local or domain accounts?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Martin Evans
Sent: Tuesday, January 16, 2007 4:09 AM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Server authentication


I'm currently implementing a proprietary set of protocols for 
interacting with twisted running on a Microsoft server. All is 
working fine so far using the basic line receiver / raw methods.

I was hoping to add a form of authentication to the protocol. Is 
there anyway to interact with the existing accounts on the server?

The client wishes to make use of some of the lock down facilities 
based on the Microsoft Server accounts. ie in the same way MS Telnet 
server allows you to logon and then be taken to your own folder. I 
have taken a quick look at the cred module but have not seen anything 
suitable yet.

I am currently running "python twistd.py -y myserver.nac"

If such a module has not been developed, I assume I could develop a C 
extension module of some sort.

Any pointers would be a appreciated. Thanks.

Martin



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.12/631 - Release Date: 1/16/2007
8:25 AM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.12/631 - Release Date: 1/16/2007
8:25 AM
 




From ellisonbg.net at gmail.com  Tue Jan 16 17:08:14 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 16 Jan 2007 17:08:14 -0700
Subject: [Twisted-Python] Hanging Deferreds in PB Paging code
Message-ID: <6ce0ac130701161608p1bbac74duca13915a5ef0bde2@mail.gmail.com>

Hi,

We are using PB as an initial protocol for some IPython related stuff.
 Overall, PB is working well, but we need to be able to send larger
things around so we have been trying to implement things using the
pb.util.Pager stuff.  I have spent a fair amount of time understanding
how the Paging works.

Now the fun part.  I have have two versions of our methods - one that
uses Paging and one that doesn't.  I am using trial to test these
methods.  The test passes for the non-Paging version, but not for the
Paging version.  The problem with the Paging version it seems is that
there are still unanswered PB requests (and associated Deferreds) that
haven't completed when my tearDown method is run.  Thus I see errors
like:

===============================================================================
[ERROR]: ipython1.test.test_enginepb.EnginePBTest.testSimplePushPull

Traceback (most recent call last):
Failure: twisted.spread.pb.PBConnectionLost: [Failure instance:
Traceback (failure with no frames):
twisted.internet.error.ConnectionDone: Connection was closed cleanly.

which indicates that the connection was closed before all PB requests
had finished.

We have written lots of unittests using trial so we are _very_ used to
making sure our Deferreds are cleaned up properly in tests.  It
appears that the problem is coming from this code in twisted.pb:

    def resumeProducing(self):
        """Called when the consumer attached to me runs out of buffer.
        """
        # Go backwards over the list so we can remove indexes from it as we go
        for pageridx in xrange(len(self.pageProducers)-1, -1, -1):
            pager = self.pageProducers[pageridx]
            pager.sendNextPage()
            if not pager.stillPaging():
                del self.pageProducers[pageridx]
        if not self.pageProducers:
            self.transport.unregisterProducer()

Both the pager.sendNextPage and pager.stillPaging calls invoke PB
calls to the other side.  But, notice that the Deferreds for these
calls are not dealt with in any way.  Thus there is no promise that
these PB requests have finished by the time the actual paged data has
been received and passed down the callback chain the completes the
Paged send (and test).

My overall feeling is that the Paging mechanism in PB in not used that
much and that I am likely running into uncharted territory/problems
with the underlying implementation.  We are trying to decide if we
should continue to struggle with this or just move on to using a
different protocol that is better suited to streaming large objects
(such as http/1.1).

Any thoughts on this dillema?

Thanks

Brian Granger



From orlenko at gmail.com  Tue Jan 16 19:19:51 2007
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Tue, 16 Jan 2007 18:19:51 -0800
Subject: [Twisted-Python] Server authentication
In-Reply-To: <200701160909.l0G99YBL001458@brownix.browns.co.uk>
References: <200701160909.l0G99YBL001458@brownix.browns.co.uk>
Message-ID: <45AD87C7.4060502@gmail.com>

Hi Martin,

To delegate user authentication to Windows, you can use win32security 
module.

from win32security import LogonUser, LOGON32_LOGON_NETWORK, 
LOGON32_PROVIDER_DEFAULT
from win32security import error as LogonError

def validate_password(username, domain, password):
    try:
        if LogonUser(username,
                     domain,
                     password,
                     LOGON32_LOGON_NETWORK,
                     LOGON32_PROVIDER_DEFAULT):
            print 'Yes!'
            return True
        else:
            print 'No'
    except LogonError, e:
        print 'No:', e
    return False

To use LogonUser(), calling process needs to have some special 
privileges, at least on Win2K. If I remember correctly, SE_TCB_NAME is 
required.

Hope this helps,
Volodymyr


Martin Evans wrote:
>
> I'm currently implementing a proprietary set of protocols for 
> interacting with twisted running on a Microsoft server. All is working 
> fine so far using the basic line receiver / raw methods.
>
> I was hoping to add a form of authentication to the protocol. Is there 
> anyway to interact with the existing accounts on the server?
>
> The client wishes to make use of some of the lock down facilities 
> based on the Microsoft Server accounts. ie in the same way MS Telnet 
> server allows you to logon and then be taken to your own folder. I 
> have taken a quick look at the cred module but have not seen anything 
> suitable yet.
>
> I am currently running "python twistd.py -y myserver.nac"
>
> If such a module has not been developed, I assume I could develop a C 
> extension module of some sort.
>
> Any pointers would be a appreciated. Thanks.
>
> Martin
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From sethia.vishal at gmail.com  Wed Jan 17 11:31:50 2007
From: sethia.vishal at gmail.com (Vishal Sethia)
Date: Wed, 17 Jan 2007 10:31:50 -0800
Subject: [Twisted-Python] Implementing parseargs or getopt using twisted
	trial
Message-ID: <2ee048b40701171031qf28fdf4wc8a99a33269366be@mail.gmail.com>

Hi,

How do I implement user defined command line options in addition to the
default switches that are available while running twisted trial.  For ex. if
I have my own py file which I execute using the python compiler has the
following line of code to support several command line options, how do I
achieve this using twisted trial

For eg,
    for o,a in opts:
        if o == "-d":
            debug = 1
        if o in ["-h","--help"]:
            Usage()
            sys.exit(2)
        if o in ["-c","--configfile"]:
            if debug:
            config_file = a
        if o in ["-f","--factory"]:
            flash="FALSE"
        if o in ["-o","--output"]:
            log_file = file(a,"w")


Any pointers would be greatly appreciated.
Thanks,

-- V
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070117/206b151d/attachment.html>

From exarkun at divmod.com  Wed Jan 17 12:51:37 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 17 Jan 2007 14:51:37 -0500
Subject: [Twisted-Python] Implementing parseargs or getopt using twisted
	trial
In-Reply-To: <2ee048b40701171031qf28fdf4wc8a99a33269366be@mail.gmail.com>
Message-ID: <20070117195137.11447.6200390.divmod.quotient.19914@ohm>

On Wed, 17 Jan 2007 10:31:50 -0800, Vishal Sethia <sethia.vishal at gmail.com> wrote:
>Hi,
>
>How do I implement user defined command line options in addition to the
>default switches that are available while running twisted trial.  For ex. if
>I have my own py file which I execute using the python compiler has the
>following line of code to support several command line options, how do I
>achieve this using twisted trial

This isn't supported.  So, the way you achieve it is by modifying the
trial script and submitting a patch to Twisted. :)

Additionally, Options in Twisted programs are typically parsed using
twisted.python.usage, not getopt or optparse or argparse or getarg or
argopt or optarg.

Jean-Paul



From jarrod at vertigrated.com  Wed Jan 17 15:18:13 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 17 Jan 2007 17:18:13 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
Message-ID: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>

I we have a basic twisted server that we have doing nothing but dropping
received bits on the floor, and sending back a static response.

We have tested it on a Solaris 10 on a Sun T1000 ( 8 cores ) and on Solaris
8 on a Sun V210.
We did initial load testing on a Dell 2850 ( 2 Hyperthreaded P4's ) using
Red Hat WS 3 (Taroon Update 4) / (  Linux 2.4.21-27.ELsmp )

The Solaris boxes are all showing latency 5 times what we are seeing on the
Dell 2850 with 1/5 as many clients to boot.

On the Dell 2850 ( linux thinks it is a quad processor box ) our Twisted
server is more Network I/O bound than CPU bound until we get to around 800 -
900 clients, latency is manageable all the way up to about 1400 clients, at
which time they start getting progressively worse.

All the Sparc boxes start out CPU bound at about 200 clients and latencies
are way worse than Linux with 1400 clients.

The only Solaris 10 x86 box we have to test on is so old it is almost
impossible to compare to even the Dell 2850. :-(

We are using Python 2.4.4 and Twisted 2.4.0 using the poll reactor in all
cases.

Anyone have any idea why we are seeing such poor performance on Solaris?
Is it the Sparc hardware?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070117/39d32688/attachment.html>

From ppergame at gmail.com  Wed Jan 17 15:32:13 2007
From: ppergame at gmail.com (Pavel Pergamenshchik)
Date: Wed, 17 Jan 2007 14:32:13 -0800
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
References: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
Message-ID: <4a5c1b500701171432j31ba8884n7aa7ad202f76d206@mail.gmail.com>

On 1/17/07, Jarrod Roberson <jarrod at vertigrated.com> wrote:
>
> I we have a basic twisted server that we have doing nothing but dropping
> received bits on the floor, and sending back a static response.


 Post your code somewhere. Perhaps you are doing something horribly wrong.

Anyone have any idea why we are seeing such poor performance on Solaris?
> Is it the Sparc hardware?


Sparc processors aren't exactly well known for their blazing speed. Try a
trivial CPU benchmark like hashcash. The Sparc box might be better at
concurrency, but your Twisted benchmark is probably not using multiple CPUs.

Also, Twisted 2.5 includes an epoll reactor. It should scale considerably
better than poll, but you need a 2.6 Linux kernel for it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070117/46222b4a/attachment.html>

From exarkun at divmod.com  Wed Jan 17 15:37:19 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 17 Jan 2007 17:37:19 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	than Linux?
In-Reply-To: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
Message-ID: <20070117223719.11447.1130993531.divmod.quotient.20054@ohm>

On Wed, 17 Jan 2007 17:18:13 -0500, Jarrod Roberson <jarrod at vertigrated.com> wrote:
>I we have a basic twisted server that we have doing nothing but dropping
>received bits on the floor, and sending back a static response.
>
>We have tested it on a Solaris 10 on a Sun T1000 ( 8 cores ) and on Solaris
>8 on a Sun V210.
>We did initial load testing on a Dell 2850 ( 2 Hyperthreaded P4's ) using
>Red Hat WS 3 (Taroon Update 4) / (  Linux 2.4.21-27.ELsmp )
>
>The Solaris boxes are all showing latency 5 times what we are seeing on the
>Dell 2850 with 1/5 as many clients to boot.
>
>On the Dell 2850 ( linux thinks it is a quad processor box ) our Twisted
>server is more Network I/O bound than CPU bound until we get to around 800 -
>900 clients, latency is manageable all the way up to about 1400 clients, at
>which time they start getting progressively worse.
>
>All the Sparc boxes start out CPU bound at about 200 clients and latencies
>are way worse than Linux with 1400 clients.
>
>The only Solaris 10 x86 box we have to test on is so old it is almost
>impossible to compare to even the Dell 2850. :-(
>
>We are using Python 2.4.4 and Twisted 2.4.0 using the poll reactor in all
>cases.
>
>Anyone have any idea why we are seeing such poor performance on Solaris?
>Is it the Sparc hardware?
>

I don't have any specific experience with Twisted on Sparc hardware, but
one thing I'll point out is that Twisted is single threaded.  Whether there
are 4 cores or 8 probably won't make any noticable difference to a Twisted
application's performance.

It looks like a single core on a T1000 is much less powerful than a single
core in a Dell 2850, so this might account for some of the difference.

Jean-Paul



From jarrod at vertigrated.com  Wed Jan 17 15:55:34 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 17 Jan 2007 17:55:34 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <20070117223719.11447.1130993531.divmod.quotient.20054@ohm>
References: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
	<20070117223719.11447.1130993531.divmod.quotient.20054@ohm>
Message-ID: <fa3d0c740701171455h219db31coe985f68e5bc892d0@mail.gmail.com>

On 1/17/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>
> I don't have any specific experience with Twisted on Sparc hardware, but
> one thing I'll point out is that Twisted is single threaded.  Whether
> there
> are 4 cores or 8 probably won't make any noticable difference to a Twisted
> application's performance.
>
> It looks like a single core on a T1000 is much less powerful than a single
> core in a Dell 2850, so this might account for some of the difference.
>
> Jean-Paul



This is the conclusion we are coming to as well.
We found a Dual Dual Core Opteron box with Solaris 10 x86 on it.
The Opteron box was even faster than the Dual P4 box.
So we have pretty much ruled out Solaris as the problem, everything points
to sucky performance of the Sparc hardware.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070117/60214eb7/attachment.html>

From fperez.net at gmail.com  Wed Jan 17 16:16:41 2007
From: fperez.net at gmail.com (Fernando Perez)
Date: Wed, 17 Jan 2007 16:16:41 -0700
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <fa3d0c740701171455h219db31coe985f68e5bc892d0@mail.gmail.com>
References: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
	<20070117223719.11447.1130993531.divmod.quotient.20054@ohm>
	<fa3d0c740701171455h219db31coe985f68e5bc892d0@mail.gmail.com>
Message-ID: <db6b5ecc0701171516uaf84c93jcf7dde9952b29dd1@mail.gmail.com>

> On 1/17/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:

> > It looks like a single core on a T1000 is much less powerful than a single
> > core in a Dell 2850, so this might account for some of the difference.

That is precisely the case.  A quote

Obviously, the UltraSparc T1 will perform quite poorly on workloads
that require single-threaded performance. For those types of
non-multithreaded workloads, Sun will rely for the time being on its
Opteron-powered Galaxy server line. In 2008, however, Sun plans to
release a new design codenamed "Rock" with better single-threaded
performance.

taken from http://arstechnica.com/news.ars/post/20051114-5569.html

You can find a bit more info here:

http://arstechnica.com/news.ars/post/20051116-5584.htm

This Sun hardware is built /specifically/ for running /highly/
multithreaded code, it has always sucked royally at single-threaded
performance, this was very much a design decision.

Cheers,

f



From jarrod at vertigrated.com  Wed Jan 17 16:35:10 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 17 Jan 2007 18:35:10 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <db6b5ecc0701171516uaf84c93jcf7dde9952b29dd1@mail.gmail.com>
References: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
	<20070117223719.11447.1130993531.divmod.quotient.20054@ohm>
	<fa3d0c740701171455h219db31coe985f68e5bc892d0@mail.gmail.com>
	<db6b5ecc0701171516uaf84c93jcf7dde9952b29dd1@mail.gmail.com>
Message-ID: <fa3d0c740701171535q2b7cbcc4v98e49b205271e5e3@mail.gmail.com>

On 1/17/07, Fernando Perez <fperez.net at gmail.com> wrote:
>
> > On 1/17/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> > > It looks like a single core on a T1000 is much less powerful than a
> single
> > > core in a Dell 2850, so this might account for some of the difference.
>
> That is precisely the case.  A quote
>
> Obviously, the UltraSparc T1 will perform quite poorly on workloads
> that require single-threaded performance. For those types of
> non-multithreaded workloads, Sun will rely for the time being on its
> Opteron-powered Galaxy server line. In 2008, however, Sun plans to
> release a new design codenamed "Rock" with better single-threaded
> performance.
>
> taken from http://arstechnica.com/news.ars/post/20051114-5569.html
>
> You can find a bit more info here:
>
> http://arstechnica.com/news.ars/post/20051116-5584.htm
>
> This Sun hardware is built /specifically/ for running /highly/
> multithreaded code, it has always sucked royally at single-threaded
> performance, this was very much a design decision.


There is a "backend" C module that our Twisted server front ends, and it is
highly multi-threaded.
So the T1000 is PERFECT for our application, except that now Twisted is the
bottleneck. :-(

Unfortunately we have a 11th hour constraint of a vendor library that we are
required to use, it is only available on Sparc Solaris.

So we either scrap our Twisted implementation and have to spend extra time
on another network handling layer, or run 5 times as many instances of our
server to service the same number of concurrent clients.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070117/555b750f/attachment.html>

From fperez.net at gmail.com  Wed Jan 17 16:41:16 2007
From: fperez.net at gmail.com (Fernando Perez)
Date: Wed, 17 Jan 2007 16:41:16 -0700
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <fa3d0c740701171535q2b7cbcc4v98e49b205271e5e3@mail.gmail.com>
References: <fa3d0c740701171418o77eb07e3nfdb25644d6680607@mail.gmail.com>
	<20070117223719.11447.1130993531.divmod.quotient.20054@ohm>
	<fa3d0c740701171455h219db31coe985f68e5bc892d0@mail.gmail.com>
	<db6b5ecc0701171516uaf84c93jcf7dde9952b29dd1@mail.gmail.com>
	<fa3d0c740701171535q2b7cbcc4v98e49b205271e5e3@mail.gmail.com>
Message-ID: <db6b5ecc0701171541v2e96c2ebkfb37662a750c7442@mail.gmail.com>

On 1/17/07, Jarrod Roberson <jarrod at vertigrated.com> wrote:

>  There is a "backend" C module that our Twisted server front ends, and it is
> highly multi-threaded.
> So the T1000 is PERFECT for our application, except that now Twisted is the
> bottleneck. :-(
>
> Unfortunately we have a 11th hour constraint of a vendor library that we are
> required to use, it is only available on Sparc Solaris.

Bummer.  It sounds like you have a slightly toxic combination of
constraints between the software (highly MT backend + single-threaded
Twisted) and your hardware (T1000, tuned for MT code).  Unpleasant...

Cheers,

f



From glyph at divmod.com  Wed Jan 17 17:09:47 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 18 Jan 2007 00:09:47 -0000
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
Message-ID: <20070118000947.17094.845374243.divmod.xquotient.2559@joule.divmod.com>

On 11:35 pm, jarrod at vertigrated.com wrote:

>There is a "backend" C module that our Twisted server front ends, and it is
>highly multi-threaded.
>So the T1000 is PERFECT for our application, except that now Twisted is the
>bottleneck. :-(

This seems odd to me.

If all the CPUs are going to be busy doing a multi-threaded back-end's work, and Twisted is just doing the I/O, then it seems the T1000 would still be a benefit.  The benchmark you mentioned was completely static; there was no backend library, no multithreaded CPU load.  Is the performance disparity similar when you're running actual workloads?

Sure, Twisted isn't going to be able to dole out as much work as something optimized to balance the I/O management CPU across N+1 cores; but if those cores are going to be busy anyway in realistic use, then presumably having Twisted contending for all of them wouldn't be much of a performance boost.

I actually do have a little experience with Twisted-*like* software on Solaris, although not Twisted itself.  The proprietary system which originally inspired Twisted's networking core was actually designed to run on Solaris, and took Sparc hardware advantages into account.  It still ran all of its I/O in a single thread.

>So we either scrap our Twisted implementation and have to spend extra time
>on another network handling layer, or run 5 times as many instances of our
>server to service the same number of concurrent clients.

Congratulations.  For years, I've been warning people that Twisted cannot transparently take full advantage of vertical scaling with SMP.  While I've heard a lot of uninformed whinging about how this is a huge problem, you are the first person to report an actual performance problem related to that fact :).

Running 5 times as many instances of the server does make sense, and shouldn't have a significant downside.  The parallelism strategy I've used pretty much everywhere is multiprocessing rather than multithreading, and it works well.

If the issue is that you don't want to have that many different open ports on each machine, would it be possible to have a small front-end server accept()ing and sending sockets to N+1 (where N is the number of cores) other Twisted processes?  I don't know how this might be accomplished on solaris, but if it's possible, it should be transparent to the clients and let Twisted itself take advantage of the hardware.  It would take some work, but not as much as a rewrite.

Again, it seems weird to me that this is necessary if the back-end library is really utilizing all the CPUs already and you are not I/O bound.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070118/6e05a7fe/attachment.html>

From jarrod at vertigrated.com  Wed Jan 17 18:59:19 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 17 Jan 2007 20:59:19 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <20070118000947.17094.845374243.divmod.xquotient.2559@joule.divmod.com>
References: <20070118000947.17094.845374243.divmod.xquotient.2559@joule.divmod.com>
Message-ID: <fa3d0c740701171759la246fa6i48c185f3d7ab7c3d@mail.gmail.com>

On 1/17/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 11:35 pm, jarrod at vertigrated.com wrote:
>
> >There is a "backend" C module that our Twisted server front ends, and it
> is
> >highly multi-threaded.
> >So the T1000 is PERFECT for our application, except that now Twisted is
> the
> >bottleneck. :-(
>
> This seems odd to me.
>
> If all the CPUs are going to be busy doing a multi-threaded back-end's
> work, and Twisted is just doing the I/O, then it seems the T1000 would still
> be a benefit.  The benchmark you mentioned was completely static; there was
> no backend library, no multithreaded CPU load.  Is the performance disparity
> similar when you're running actual workloads?
>

snipped a  lot of good information :-)

Again, it seems weird to me that this is necessary if the back-end library
> is really utilizing all the CPUs already and you are not I/O bound.
>

Here is what we are doing basically.

Twisted takes in data and in a C extension we send the data to multiple
backends in parallel to do processing on it.
Then we aggregate the results and send information back to the client.
This is basically a fancy proxy that parallelizes and distributes work to
other machines on the network.
All the clients run in "keep-alive" mode, so they don't create new
connections for each piece of work they send to the system, so
once they are all connected, they stay connected for their lifetime ( long
time ).

On the Dell 2850's without any backend code, we see 600ms latency with a
test suite of 400 clients.
With the Solaris SPARC machines T1000 and V210 we see 4000 - 5000 ms latency
with the same no-op code and the same 400 clients.

With the backend code we see about an additional 250ms latency on both
platforms, since the "backend" code is just taking the data and sending it
out across the network to process, it just sits waiting on responses. The
backend code is just not doing enough work to stress the machine basically.

We have LOTS and LOTS of test harness code and profiling code to pinpoint
where bottlenecks are. We are going to have process a couple of terabytes a
day thru this system. Latency thru the system is a high priority because of
what kind of system it is.

We can get up to about 1400 clients on the Dell 2850 hardware before latency
starts climbing out of control.
The SPARC hardware is falling over at 400 clients :-(

Thanks to everyone for all the ideas and help.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070117/c8713457/attachment.html>

From gravesricharde at yahoo.com  Wed Jan 17 23:39:38 2007
From: gravesricharde at yahoo.com (Rick Graves)
Date: Wed, 17 Jan 2007 22:39:38 -0800 (PST)
Subject: [Twisted-Python] client,
	deferred and/or reactor hung on these 2 URL's
Message-ID: <197789.58926.qm@web37215.mail.mud.yahoo.com>

Eric,

I ran wget on the 2 URL's, and what I got may lead to
the root cause of the problem. 

Here is the end of what appeared in the terminal
window:

begin quote

--11:56:34--  http://www.theproxy.be/link.php
           => `link.php'
Connecting to www.theproxy.be|209.67.219.74|:80...
connected.
HTTP request sent, awaiting response... 301 Moved
Permanently
Location: http://www.theproxy.be/link.php [following]
20 redirections exceeded.

end quote

I assume this is a case of endless loop redirection.

I got this for both URL's.  The complete transcript
for both is here:

http://www.advanced-app.com.hk/MiscJunk/wget.txt

I am running kubuntu, "codenamed 'Dapper Drake'" ver.
6.06.  For this version, I get ethereal not WireShark.
 I installed ethereal before running wget, but I am
wondering whether wget might zero in on the problem.
So I hope to find out before spending some time trying
to figure ethereal out.  

Also, I have ADSL service from different ISP's at home
and at the office.  These two URL's hang for me at the
office, but work OK for me at home.  (They would be
going through different ISP's and different proxies.)

I have not filed a bug report yet.  If the wget output
does in fact zero in on the problem, I will do so
right away.

This is a resend -- see below.  I sent this content on
Sunday, but it never came back to me on the mailing
list.

Thanks,

Rick


--- Rick Graves <gravesricharde at yahoo.com> wrote:

> Date: Sun, 14 Jan 2007 21:12:55 -0800 (PST)
> From: Rick Graves <gravesricharde at yahoo.com>
> Subject: Re: [Twisted-Python] client, deferred
> and/or reactor hung on these 2 URL's
> To: twisted-python at twistedmatrix.com
> 
> Eric,
> 
> I ran wget on the 2 URL's, and what I got may lead
> to
> the root cause of the problem. 
> 
{snip}




From martin at browns.co.uk  Thu Jan 18 00:40:53 2007
From: martin at browns.co.uk (Martin Evans)
Date: Thu, 18 Jan 2007 07:40:53 +0000
Subject: [Twisted-Python] Server authentication
In-Reply-To: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
Message-ID: <200701180741.l0I7exvl016854@brownix.browns.co.uk>


Many thanks to Volodymyr and Lee for the authentication pointers, 
both the ldap and win32security modules look like suitable 
candidates. At the end of the day it is whatever the client decides 
so it is great to have these alternatives.

Martin




From lee.a.connell at gmail.com  Thu Jan 18 05:36:18 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Thu, 18 Jan 2007 07:36:18 -0500
Subject: [Twisted-Python] Server authentication
In-Reply-To: <200701180741.l0I7exvl016854@brownix.browns.co.uk>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>
	<200701180741.l0I7exvl016854@brownix.browns.co.uk>
Message-ID: <000c01c73afd$40e47780$0400a8c0@leelaptop>

Martin,

Glad you have a solution, I think Volodymyr's example would fit you better,
I have not used the module, but maybe Volodymyr can reply on this, but you
will probably want to get the users home directory once successfully logged
in as well as the groups the user belongs too.  I'm sure pywin32 extensions
will allow this.

Is win32security part of pywin32 extensions?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Martin Evans
Sent: Thursday, January 18, 2007 2:41 AM
To: twisted-python at twistedmatrix.com
Subject: RE: [Twisted-Python] Server authentication


Many thanks to Volodymyr and Lee for the authentication pointers, 
both the ldap and win32security modules look like suitable 
candidates. At the end of the day it is whatever the client decides 
so it is great to have these alternatives.

Martin


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.13/634 - Release Date: 1/17/2007
4:45 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.13/634 - Release Date: 1/17/2007
4:45 PM
 




From glyph at divmod.com  Thu Jan 18 05:38:00 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 18 Jan 2007 12:38:00 -0000
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
Message-ID: <20070118123800.17094.33278340.divmod.xquotient.2894@joule.divmod.com>

On 01:59 am, jarrod at vertigrated.com wrote:

>We have LOTS and LOTS of test harness code and profiling code to pinpoint
>where bottlenecks are. We are going to have process a couple of terabytes a
>day thru this system. Latency thru the system is a high priority because of
>what kind of system it is.

If you do manage to keep Twisted in the loop on this project, please share what strategy you used.  It is unfortunately rare that Twisted is itself a really performance-critical component of any system (especially a highly parallel system), so information about optimization is hard to find.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070118/3dacbb45/attachment.html>

From dreid at dreid.org  Thu Jan 18 11:38:13 2007
From: dreid at dreid.org (David Reid)
Date: Thu, 18 Jan 2007 10:38:13 -0800
Subject: [Twisted-Python] Twisted sprint at SuperHappyDevHouse15?
References: <1169101008.113659.161150@l53g2000cwa.googlegroups.com>
Message-ID: <37187CE7-4383-4EDB-830D-FD980EB25D64@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Is anyone in the bay area (or willing to come to the bay area)  
interested in sprinting on Twisted at Super Happy Dev House 15?

- -David

Begin forwarded message:

> From: tomicles at gmail.com
> Date: January 17, 2007 10:16:48 PM PST
> To: "SuperHappyDevHouse Announcements" <SHDH- 
> Announce at googlegroups.com>
> Subject: [SHDH] SuperHappyDevHouse15!
> Reply-To: tomicles at gmail.com
> List-Id: <SHDH-Announce.googlegroups.com>
>
>
> You're Invited!  SuperHappyDevHouse15 has been scheduled and will take
> place at our south bay location in Los Gatos on February 3rd from  
> 1pm ~
> 2am.  Bring your laptop, your hacker friends and some snacks or drinks
> to share.  More information can be found on our site and you can RSVP
> on upcoming, both linked below.
>
> http://shdh.org
> http://upcoming.org/event/141406/
>
> -The Dev House Team
>
>
> --~--~---------~--~----~------------~-------~--~----~
> You received this message because you are subscribed to the Google  
> Groups "SuperHappyDevHouse Announcements" group.
> To post to this group, send email to SHDH-Announce at googlegroups.com
> To unsubscribe from this group, send email to SHDH-Announce- 
> unsubscribe at googlegroups.com
> For more options, visit this group at http://groups.google.com/ 
> group/SHDH-Announce?hl=en
> -~----------~----~----~----~------~----~------~--~---
>

David Reid
http://dreid.org/


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (Darwin)

iD8DBQFFr76arsrO6aeULcgRAkX+AKCex6BFZ5ChywpbFDiaA2mDxR4A0gCbBg+0
02YgFdEiJIUuvj28ULnMbSk=
=VxTs
-----END PGP SIGNATURE-----



From orlenko at gmail.com  Thu Jan 18 13:12:32 2007
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Thu, 18 Jan 2007 12:12:32 -0800
Subject: [Twisted-Python] Server authentication
In-Reply-To: <000c01c73afd$40e47780$0400a8c0@leelaptop>
References: <E1H7F4u-0005ae-03@pyramid.twistedmatrix.com>	<200701180741.l0I7exvl016854@brownix.browns.co.uk>
	<000c01c73afd$40e47780$0400a8c0@leelaptop>
Message-ID: <45AFD4B0.7080001@gmail.com>

Hi Lee,

Yes, win32security is a part of pywin32 extensions.

According to MSDN, you may be able to get user's directory by using 
win32net.NetUserGetInfo:

Calling win32net.NetUserGetInfo(None, 'test_user', 1) returns a dictionary:
{'comment': u'',
 'flags': 513,
 'home_dir': u'',
 'name': u'test_user',
 'password': None,
 'password_age': 324,
 'priv': 1,
 'script_path': u''}

In my case, home_dir is empty. This sucks, so I tried a different way:

from win32com.shell import shellcon, shell
path = shell.SHGetFolderPath(0, shellcon.CSIDL_APPDATA, 0, 0)

In this case, path is u'C:\\Documents and Settings\\<My 
Username>\\Application Data'. To get other users' data directories, you 
can either cheat and simply replace <My Username> with their usernames, 
or go the whole way honestly: get user's access token (I guess by 
impersonating him), and pass the token to the SHGetFolderPath function.

There's also a way to query Active Directory through LDAP, but it does 
not help much in my case:
 >>> adsi = win32com.client.Dispatch('ADSystemInfo')
 >>> u = win32com.client.GetObject('LDAP://%s' % adsi.UserName)
 >>> print u.homeDirectory
None

I guess the NetUserGetInfo and the LDAP methods rely on info in 
ActiveDirectory, which may or may not be present.

Volodymyr


Lee Connell wrote:
> Martin,
>
> Glad you have a solution, I think Volodymyr's example would fit you better,
> I have not used the module, but maybe Volodymyr can reply on this, but you
> will probably want to get the users home directory once successfully logged
> in as well as the groups the user belongs too.  I'm sure pywin32 extensions
> will allow this.
>
> Is win32security part of pywin32 extensions?
>
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Martin Evans
> Sent: Thursday, January 18, 2007 2:41 AM
> To: twisted-python at twistedmatrix.com
> Subject: RE: [Twisted-Python] Server authentication
>
>
> Many thanks to Volodymyr and Lee for the authentication pointers, 
> both the ldap and win32security modules look like suitable 
> candidates. At the end of the day it is whatever the client decides 
> so it is great to have these alternatives.
>
> Martin
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   




From jarrod at vertigrated.com  Thu Jan 18 15:10:44 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Thu, 18 Jan 2007 17:10:44 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <20070118123800.17094.33278340.divmod.xquotient.2894@joule.divmod.com>
References: <20070118123800.17094.33278340.divmod.xquotient.2894@joule.divmod.com>
Message-ID: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>

On 1/18/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 01:59 am, jarrod at vertigrated.com wrote:
>
> >We have LOTS and LOTS of test harness code and profiling code to pinpoint
> >where bottlenecks are. We are going to have process a couple of terabytes
> a
> >day thru this system. Latency thru the system is a high priority because
> of
> >what kind of system it is.
>
> If you do manage to keep Twisted in the loop on this project, please share
> what strategy you used.  It is unfortunately rare that Twisted is itself a
> really performance-critical component of any system (especially a highly
> parallel system), so information about optimization is hard to find.
>

It isn't really a failing of Twisted, on non-sparc hardware it preforms
awesome! The SPARC hardware is the problem, and the T1000 / T2000 we have be
benchmarking just doesn't place nice with single threaded CPU bound apps.

We are going to try and replace Twisted with Apache 2.2.x and create a
module that does raw connection handliing, and go with the threaded mpm and
see how that preforms with the same test client harness we are benchmarking
with now.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070118/dea53101/attachment.html>

From jacob at cozi.com  Thu Jan 18 17:20:52 2007
From: jacob at cozi.com (Jacob Gabrielson)
Date: Thu, 18 Jan 2007 16:20:52 -0800
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
Message-ID: <5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>

It would be interesting to know where the CPU time is actually going.
>From what I've seen of this thread, performance is worst on the SPARC
hardware, but that doesn't necessarily mean that it's the root cause.
It may be, e.g., the implementation of some service call for that
hardware is especially slow.  Do you have any profiling information that
shows whether the CPU time is spent in Twisted code itself, or in some
system call that it's making?
 
BTW, the fact that you get 1k+ connections/s on the x86 hardware is
still slow (if you're just running benchmarking code that isn't doing
any work per request).  With epoll you should be able to get way more
than that.
 
Just my $.02,
 
-- Jacob

________________________________

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jarrod
Roberson
Sent: Thursday, January 18, 2007 2:11 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Twisted server is 5 times SLOWER on
Solaris thanLinux?




On 1/18/07, glyph at divmod.com <glyph at divmod.com> wrote: 

	On 01:59 am, jarrod at vertigrated.com wrote:
	
	>We have LOTS and LOTS of test harness code and profiling code
to pinpoint 
	>where bottlenecks are. We are going to have process a couple of
terabytes a
	>day thru this system. Latency thru the system is a high
priority because of
	>what kind of system it is.
	
	If you do manage to keep Twisted in the loop on this project,
please share what strategy you used.  It is unfortunately rare that
Twisted is itself a really performance-critical component of any system
(especially a highly parallel system), so information about optimization
is hard to find. 
	


It isn't really a failing of Twisted, on non-sparc hardware it preforms
awesome! The SPARC hardware is the problem, and the T1000 / T2000 we
have be benchmarking just doesn't place nice with single threaded CPU
bound apps. 

We are going to try and replace Twisted with Apache 2.2.x and create a
module that does raw connection handliing, and go with the threaded mpm
and see how that preforms with the same test client harness we are
benchmarking with now. 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070118/e47b97b4/attachment.html>

From smurf at smurf.noris.de  Thu Jan 18 21:42:42 2007
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Fri, 19 Jan 2007 04:42:42 +0000 (UTC)
Subject: [Twisted-Python] trac / website woes
References: <E1H5rzN-00060b-Us@smurf.noris.de>
	<20070113235545.11447.228742069.divmod.quotient.15750@ohm>
Message-ID: <eopi82$d08$2@smurf.noris.de>

On Sat, 13 Jan 2007 23:55:45 +0000, Jean-Paul Calderone wrote:

> Can you clarify the misbehavior you're reporting?  It looks to me like this
> can only occur when the connection is lost between when an avatar is received
> and when it is passed to the client-side cred callback, which seems like a
> vanishingly small window to me. 

That's easy -- I'm looking for the thing in a database.
Thus, "vanishingly small" turns out not to be.

I hit the problem because the client managed to die on an exception
shortly after opening the connection...

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
 - -
BOFH excuse #109:

The electricity substation in the car park blew up.




From exarkun at divmod.com  Thu Jan 18 22:59:33 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 19 Jan 2007 00:59:33 -0500
Subject: [Twisted-Python] trac / website woes
In-Reply-To: <eopi82$d08$2@smurf.noris.de>
Message-ID: <20070119055933.17245.984932937.divmod.quotient.938@ohm>

On Fri, 19 Jan 2007 04:42:42 +0000 (UTC), Matthias Urlichs <smurf at smurf.noris.de> wrote:
>On Sat, 13 Jan 2007 23:55:45 +0000, Jean-Paul Calderone wrote:
>
>> Can you clarify the misbehavior you're reporting?  It looks to me like this
>> can only occur when the connection is lost between when an avatar is received
>> and when it is passed to the client-side cred callback, which seems like a
>> vanishingly small window to me.
>
>That's easy -- I'm looking for the thing in a database.
>Thus, "vanishingly small" turns out not to be.

Should still be small.  All of the database code should have run by the
time the window for this race opens.

>
>I hit the problem because the client managed to die on an exception
>shortly after opening the connection...
>

Can you provide a self-contained example which demonstrates the problem?

Jean-Paul



From johnpote at jptechnical.co.uk  Fri Jan 19 05:40:33 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Fri, 19 Jan 2007 12:40:33 +0000
Subject: [Twisted-Python] Best version to use with Centos4.4 Linux
In-Reply-To: <77d044440612202345x2af8a7fby688043d444992fd7@mail.gmail.com>
References: <77d044440612202045v2725e63eydf6ef59e861d60f4@mail.gmail.com>	<op.tkwed2cuy3d107@office2>
	<77d044440612202345x2af8a7fby688043d444992fd7@mail.gmail.com>
Message-ID: <45B0BC41.5060209@jptechnical.co.uk>

Hi everyone,

I have just got Centos4.4 (actually Red Hat Enterprise Linux 4 Update 4) 
running on a PC as I need a local TCP/IP server running a custom data 
collection protocol. As there may be many outstations sending data to 
the server I figured on using Twisted. Do any of you Twisted experts 
have any thoughts on the best versions of Python and Twisted to use 
bearing in mind that a key requirement is 24/7 operation.

Thanks for any help,
John




From jarrod at vertigrated.com  Fri Jan 19 09:13:43 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 19 Jan 2007 11:13:43 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
References: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
	<5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
Message-ID: <fa3d0c740701190813v663200dfgbe675d24e5ee4d4c@mail.gmail.com>

On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
>
>  It would be interesting to know where the CPU time is actually going.
>


The Twisted thread is eating up all the CPU time.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070119/1bf93376/attachment.html>

From jarrod at vertigrated.com  Fri Jan 19 09:16:20 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 19 Jan 2007 11:16:20 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
References: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
	<5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
Message-ID: <fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>

On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
>
>  It would be interesting to know where the CPU time is actually going.
>

Sorry hit return by accident.

Twisted is eating up all the CPU time.

What is "slow" is the latency of the entire round trip thru the Twisted
reactor loop. It is without a doubt Twisted that is the bottleneck.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070119/20a5c1b9/attachment.html>

From itamar at itamarst.org  Fri Jan 19 09:53:06 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 19 Jan 2007 11:53:06 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <fa3d0c740701190813v663200dfgbe675d24e5ee4d4c@mail.gmail.com>
References: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
	<5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
	<fa3d0c740701190813v663200dfgbe675d24e5ee4d4c@mail.gmail.com>
Message-ID: <1169225586.9764.36.camel@localhost.localdomain>

On Fri, 2007-01-19 at 11:13 -0500, Jarrod Roberson wrote:

> On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
>         It would be interesting to know where the CPU time is actually
>         going. 
> 
> 
> The Twisted thread is eating up all the CPU time.

Have you tried the poll reactor?





From bob at redivi.com  Fri Jan 19 11:47:52 2007
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 19 Jan 2007 10:47:52 -0800
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <1169225586.9764.36.camel@localhost.localdomain>
References: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
	<5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
	<fa3d0c740701190813v663200dfgbe675d24e5ee4d4c@mail.gmail.com>
	<1169225586.9764.36.camel@localhost.localdomain>
Message-ID: <6a36e7290701191047g1c40fe59qead0583174341826@mail.gmail.com>

On 1/19/07, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Fri, 2007-01-19 at 11:13 -0500, Jarrod Roberson wrote:
>
> > On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
> >         It would be interesting to know where the CPU time is actually
> >         going.
> >
> >
> > The Twisted thread is eating up all the CPU time.
>
> Have you tried the poll reactor?
>

That's what he said in the first message:
"We are using Python 2.4.4 and Twisted 2.4.0 using the poll reactor in
all cases."

-bob



From exarkun at divmod.com  Fri Jan 19 12:08:17 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 19 Jan 2007 14:08:17 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>
Message-ID: <20070119190817.17245.1417006931.divmod.quotient.1919@ohm>

On Fri, 19 Jan 2007 11:16:20 -0500, Jarrod Roberson <jarrod at vertigrated.com> wrote:
>On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
>>
>>  It would be interesting to know where the CPU time is actually going.
>
>Sorry hit return by accident.
>
>Twisted is eating up all the CPU time.
>
>What is "slow" is the latency of the entire round trip thru the Twisted
>reactor loop. It is without a doubt Twisted that is the bottleneck.
>

Can you tell if most of the time is user or system?  If system time is what
dominates, it may be worthwhile to investigate /dev/poll.  If most time is
spent in userspace, though, you may be right about Twisted being the bottle
neck.

Jean-Paul



From jacob at cozi.com  Fri Jan 19 12:45:28 2007
From: jacob at cozi.com (Jacob Gabrielson)
Date: Fri, 19 Jan 2007 11:45:28 -0800
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on
	SolaristhanLinux?
In-Reply-To: <20070119190817.17245.1417006931.divmod.quotient.1919@ohm>
References: <fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>
	<20070119190817.17245.1417006931.divmod.quotient.1919@ohm>
Message-ID: <5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A9025@ehost011-6.exch011.intermedia.net>

Yeah, it would be nice to see what the output of "vmstat 10" (or
whatever the equivalent is under Solaris) was during the test.

-- Jacob

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jean-Paul
Calderone
Sent: Friday, January 19, 2007 11:08 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Twisted server is 5 times SLOWER on
SolaristhanLinux?

On Fri, 19 Jan 2007 11:16:20 -0500, Jarrod Roberson
<jarrod at vertigrated.com> wrote:
>On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
>>
>>  It would be interesting to know where the CPU time is actually
going.
>
>Sorry hit return by accident.
>
>Twisted is eating up all the CPU time.
>
>What is "slow" is the latency of the entire round trip thru the Twisted
>reactor loop. It is without a doubt Twisted that is the bottleneck.
>

Can you tell if most of the time is user or system?  If system time is
what
dominates, it may be worthwhile to investigate /dev/poll.  If most time
is
spent in userspace, though, you may be right about Twisted being the
bottle
neck.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From jarrod at vertigrated.com  Fri Jan 19 13:49:22 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 19 Jan 2007 15:49:22 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <20070119190817.17245.1417006931.divmod.quotient.1919@ohm>
References: <fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>
	<20070119190817.17245.1417006931.divmod.quotient.1919@ohm>
Message-ID: <fa3d0c740701191249w61839702na2743ce7f94daff4@mail.gmail.com>

On 1/19/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>
> Can you tell if most of the time is user or system?
>


It is 99% user time :-(
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070119/da5bfbff/attachment.html>

From general at eepatents.com  Fri Jan 19 17:08:23 2007
From: general at eepatents.com (Ed Suominen)
Date: Fri, 19 Jan 2007 16:08:23 -0800
Subject: [Twisted-Python] Re: Hanging Deferreds in PB Paging code
In-Reply-To: <E1H7F4u-0005ae-02@pyramid.twistedmatrix.com>
References: <E1H7F4u-0005ae-02@pyramid.twistedmatrix.com>
Message-ID: <45B15D77.7000103@eepatents.com>

From: "Brian Granger" <ellisonbg.net at gmail.com>
> We are using PB as an initial protocol for some IPython related
> stuff. Overall, PB is working well, but we need to be able to send
> larger things around so we have been trying to implement things using
> the pb.util.Pager stuff.  I have spent a fair amount of time
> understanding how the Paging works.

I looked at the PB paging stuff and decided to write my own simple
solution for it, borrowing the original code as needed. At the server,
just pass one of these to your PB client:

> class Receiver(pb.Referenceable):
>     """
>     Give a PB client a remote reference to an instance of me and it will
>     have a way to upload a file in chunks of whatever size it likes.
>     """
>     def __init__(self, destPath):
>         self.file = open(destPath, 'w')
> 
>     def remote_chunk(self, data):
>         self.file.write(data)
>         return True
> 
>     def remote_done(self, ok):
>         self.file.close()

At the client side, use the source path for the file and the reference
to the Receiver object to construct an Uploader object:

> from twisted.internet import defer, interfaces
> from twisted.python.filepath import FilePath
> 
> class Uploader(object):
>     """
>     I upload the file at the specified I{sourcePath} to the I{referenced} PB
>     referenceable object, both of which are supplied to my constructor.
> 
>     @ivar d: A deferred that fires when the file has been completely uploaded.
>     
>     """
>     implements(interfaces.IConsumer)
> 
>     def __init__(self, sourcePath, referenced):
>         self.ref = referenced
>         # The source file
>         fp = FilePath(sourcePath)
>         if not fp.isfile():
>             raise OSError("'%s' is not a valid file path" % result)
>         self.basename = fp.basename()
>         self.bytes = [0, fp.getsize()]
>         self.fh = fp.open()
>         # Pull producer for reading the file locally
>         self.producer = FileSender()
>         # Set up the deferred that fires when the upload is done
>         d = self.d = defer.Deferred()
>         d.addCallback(lambda ok: self.ref.callRemote('done', ok))
>         # Start the transfer at the file producer
>         self.producer.beginProducing(self.fh, self)
> 
>     def cancel(self):
>         if not self.d.called:
>             self.d.callback(False)
>         self.producer.stopProducing()
> 
>     #--- IConsumer API --------------------------------------------------------
>     
>     def registerProducer(self, producer, streaming):
>         self.producer = producer
>         if not streaming:
>             self.producer.resumeProducing()
> 
>     def unregisterProducer(self):
>         if not self.d.called:
>             self.d.callback(True)
> 
>     def write(self, data):
>         """
>         Writes the supplied chunk of file I{data}, no larger than
>         L{FileSender.CHUNK_SIZE} bytes, to the server using the referenceable
>         I've been given.
>         """
>         def oops(failure):
>             failure.printTraceback()
>             self.cancel()
> 
>         def update(sent):
>             sent = self.bytes[0] + sent
>             self.p.setValue(sent)
>             self.bytes[0] = sent
> 
>         d = self.ref.callRemote('chunk', data)
>         d.addCallback(lambda _: update(len(data)))
>         d.addCallback(lambda _: self.producer.resumeProducing())
>         d.addErrback(oops)

I excerpted this from code that queues up the remote calls via my
asynchronous task queue, and I'm not sure whether it will work well
without it. The taskqueue subpackage is part of
Twisted-Goodies, see http://foss.eepatents.com/Twisted-Goodies.

Anyhow, given how much it borrows from Twisted's own code, I hereby
license this code snippet for use under the same MIT-like license that
Twisted itself uses.

Best regards, Ed




From ellisonbg.net at gmail.com  Fri Jan 19 17:48:23 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Fri, 19 Jan 2007 17:48:23 -0700
Subject: [Twisted-Python] Re: Hanging Deferreds in PB Paging code
In-Reply-To: <45B15D77.7000103@eepatents.com>
References: <E1H7F4u-0005ae-02@pyramid.twistedmatrix.com>
	<45B15D77.7000103@eepatents.com>
Message-ID: <6ce0ac130701191648j20cff55dlee005cc27365a3bf@mail.gmail.com>

Ed,

Thanks for the code snippet.  I had thought about trying to implement
my own, less complicated solution for this issue but hadn't done
anything yet.  I will have a look at your code to see if I can adapt
it.  I am not dealing with files, but most of the ideas are the same.

Also, the task queue stuff looks interesting.  It is actually pretty
similar to what we have implemented in IPython:

http://ipython.scipy.org/moin/Parallel_Computing

We have abstracted things at a slightly lower level to allow various
types of higher level constructs (such as task farming) to be built
easily.  We haven't build the task farming interface fully yet, but
that is on our list of todos soon.  It might be nice to use some of
your work when we implement the task farming interface, but
unfortunately, IPython is BSD, so your GPL code won't help us much.

Brian

On 1/19/07, Ed Suominen <general at eepatents.com> wrote:
> From: "Brian Granger" <ellisonbg.net at gmail.com>
> > We are using PB as an initial protocol for some IPython related
> > stuff. Overall, PB is working well, but we need to be able to send
> > larger things around so we have been trying to implement things using
> > the pb.util.Pager stuff.  I have spent a fair amount of time
> > understanding how the Paging works.
>
> I looked at the PB paging stuff and decided to write my own simple
> solution for it, borrowing the original code as needed. At the server,
> just pass one of these to your PB client:
>
> > class Receiver(pb.Referenceable):
> >     """
> >     Give a PB client a remote reference to an instance of me and it will
> >     have a way to upload a file in chunks of whatever size it likes.
> >     """
> >     def __init__(self, destPath):
> >         self.file = open(destPath, 'w')
> >
> >     def remote_chunk(self, data):
> >         self.file.write(data)
> >         return True
> >
> >     def remote_done(self, ok):
> >         self.file.close()
>
> At the client side, use the source path for the file and the reference
> to the Receiver object to construct an Uploader object:
>
> > from twisted.internet import defer, interfaces
> > from twisted.python.filepath import FilePath
> >
> > class Uploader(object):
> >     """
> >     I upload the file at the specified I{sourcePath} to the I{referenced} PB
> >     referenceable object, both of which are supplied to my constructor.
> >
> >     @ivar d: A deferred that fires when the file has been completely uploaded.
> >
> >     """
> >     implements(interfaces.IConsumer)
> >
> >     def __init__(self, sourcePath, referenced):
> >         self.ref = referenced
> >         # The source file
> >         fp = FilePath(sourcePath)
> >         if not fp.isfile():
> >             raise OSError("'%s' is not a valid file path" % result)
> >         self.basename = fp.basename()
> >         self.bytes = [0, fp.getsize()]
> >         self.fh = fp.open()
> >         # Pull producer for reading the file locally
> >         self.producer = FileSender()
> >         # Set up the deferred that fires when the upload is done
> >         d = self.d = defer.Deferred()
> >         d.addCallback(lambda ok: self.ref.callRemote('done', ok))
> >         # Start the transfer at the file producer
> >         self.producer.beginProducing(self.fh, self)
> >
> >     def cancel(self):
> >         if not self.d.called:
> >             self.d.callback(False)
> >         self.producer.stopProducing()
> >
> >     #--- IConsumer API --------------------------------------------------------
> >
> >     def registerProducer(self, producer, streaming):
> >         self.producer = producer
> >         if not streaming:
> >             self.producer.resumeProducing()
> >
> >     def unregisterProducer(self):
> >         if not self.d.called:
> >             self.d.callback(True)
> >
> >     def write(self, data):
> >         """
> >         Writes the supplied chunk of file I{data}, no larger than
> >         L{FileSender.CHUNK_SIZE} bytes, to the server using the referenceable
> >         I've been given.
> >         """
> >         def oops(failure):
> >             failure.printTraceback()
> >             self.cancel()
> >
> >         def update(sent):
> >             sent = self.bytes[0] + sent
> >             self.p.setValue(sent)
> >             self.bytes[0] = sent
> >
> >         d = self.ref.callRemote('chunk', data)
> >         d.addCallback(lambda _: update(len(data)))
> >         d.addCallback(lambda _: self.producer.resumeProducing())
> >         d.addErrback(oops)
>
> I excerpted this from code that queues up the remote calls via my
> asynchronous task queue, and I'm not sure whether it will work well
> without it. The taskqueue subpackage is part of
> Twisted-Goodies, see http://foss.eepatents.com/Twisted-Goodies.
>
> Anyhow, given how much it borrows from Twisted's own code, I hereby
> license this code snippet for use under the same MIT-like license that
> Twisted itself uses.
>
> Best regards, Ed
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jarrod at vertigrated.com  Fri Jan 19 18:51:33 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Fri, 19 Jan 2007 20:51:33 -0500
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris than
	Linux?
In-Reply-To: <20070118123800.17094.33278340.divmod.xquotient.2894@joule.divmod.com>
References: <20070118123800.17094.33278340.divmod.xquotient.2894@joule.divmod.com>
Message-ID: <fa3d0c740701191751g6d2a8606n721289648119d41e@mail.gmail.com>

On 1/18/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 01:59 am, jarrod at vertigrated.com wrote:
>
> >We have LOTS and LOTS of test harness code and profiling code to pinpoint
> >where bottlenecks are. We are going to have process a couple of terabytes
> a
> >day thru this system. Latency thru the system is a high priority because
> of
> >what kind of system it is.
>
> If you do manage to keep Twisted in the loop on this project, please share
> what strategy you used.  It is unfortunately rare that Twisted is itself a
> really performance-critical component of any system (especially a highly
> parallel system), so information about optimization is hard to find.
>
>

Here is an update. I have learned more about the Niagra chip in the
T1000/T2000 servers.
The T2000 we are using has a 8 core 1 Ghz processor, each core gets 4
threads, so Solaris sees a 32 processor machine.
We noticed from watching top that each thread is only getting 3.1% of CPU
time. Doing the math, that means our Twisted thread is running on a 250 mhz
processor :-(
The Niagra chip is basically like having 32 250mhz processors with a really
effiecient scheduler. With that information in hand, we can now begin to
understand how we need to approach deployment of our Twisted server in this
environment.

To get the kind of client counts ( 2000 clients ) we would have to run 20
instances of our Twisted server, with 100 clients each.
We have tried this and it appears it will work, we need more time to test.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070119/f031e79c/attachment.html>

From smurf at smurf.noris.de  Sat Jan 20 06:18:40 2007
From: smurf at smurf.noris.de (Matthias Urlichs)
Date: Sat, 20 Jan 2007 13:18:40 +0000 (UTC)
Subject: [Twisted-Python] Serial port problem
Message-ID: <eot4rg$d08$3@smurf.noris.de>

Hello,

I'm writing to a serial port. That may of course stall. But what if a
delayed write results in an error? I didn't see any obvious way to catch
that.

As an aside, the error whioch prompts me to write this message was EINTR,
caused by a child process dying at the right moment. Shouldn't that be
retried, like EAGAIN? And shouldn't serial ports be set to be non-blocking?

(Linux, Twisted 2.4)

-- 
Matthias Urlichs   |   {M:U} IT Design @ m-u-it.de   |  smurf at smurf.noris.de
Disclaimer: The quote was selected randomly. Really. | http://smurf.noris.de
 - -
Saints should always be judged guilty until they are proven innocent.
- George Orwell



From general at eepatents.com  Sat Jan 20 11:55:46 2007
From: general at eepatents.com (Ed Suominen)
Date: Sat, 20 Jan 2007 10:55:46 -0800
Subject: [Twisted-Python] Hanging Deferreds in PB Paging code
In-Reply-To: <E1H8G7f-0005XO-02@pyramid.twistedmatrix.com>
References: <E1H8G7f-0005XO-02@pyramid.twistedmatrix.com>
Message-ID: <45B265B2.9090909@eepatents.com>

From: "Brian Granger" <ellisonbg.net at gmail.com>
> Thanks for the code snippet.  I had thought about trying to implement
> my own, less complicated solution for this issue but hadn't done
> anything yet.  I will have a look at your code to see if I can adapt
> it.  I am not dealing with files, but most of the ideas are the same.
> 
> Also, the task queue stuff looks interesting.  It is actually pretty
> similar to what we have implemented in IPython:
> 
> http://ipython.scipy.org/moin/Parallel_Computing
> 
> We have abstracted things at a slightly lower level to allow various
> types of higher level constructs (such as task farming) to be built
> easily.  We haven't build the task farming interface fully yet, but
> that is on our list of todos soon.  It might be nice to use some of
> your work when we implement the task farming interface, but
> unfortunately, IPython is BSD, so your GPL code won't help us much.

Well, as it says on the foss.eepatents.com site, "If you want to use
this software under different terms ... feel free to contact me about
it. Maybe we can work something out, maybe not." :-)

I'm interested in the idea of some of the work getting adapted for
IPython (a great project!), even if the adaptation winds up being
licensed differently. Also, I have already done quite a bit of task
farming in another as-yet-private package of mine, "AsynCluster" (is
what it sounds like), which I'm planning to incorporate into
Twisted-Goodies. Collaborating with someone capable like yourself on
this would be great for both of us, I would think. So, let's get
together on this off-list soon!

Best regards,

Ed Suominen
Registered Patent Agent & Independent Inventor (cathedral)
Open-Source Software Author (bazaar)





From exarkun at twistedmatrix.com  Sun Jan 21 07:42:39 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Jan 2007 14:42:39 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1169390559.79.63664564@twistedmatrix.com

Bug summary
______________________
Summary for 2007-01-14 through 2007-01-21
Bugs opened: 10    Bugs closed: 17  Total open bugs: 821 (-7)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       -3  |Highest:  -2          |Conch:               -1  
|Enhancement:  -2  |High:     +0          |Core:                +0  
|Task:         -2  |Normal:   -6          |News:                -1  
                   |Low:      +1          |Pb:                  -1  
                                          |Release Management:  -1  
                                          |Trial:               +1  
                                          |Web:                 -2  
                                          |Website:             -2  
                                          |Words:               +0  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2403] ITerminalTransport missing functions for setting and resetting private modes (opened by exarkun) (CLOSED, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2403

[#2408] Twisted Words 0.5.0 breaks import compatibility for interfaces without deprecation (opened by ralphm)
    defect          words      http://twistedmatrix.com/trac/ticket/2408

                    ===== High =====
[#2405] Various tests require stderr behavior CPython cannot and will not provide (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2405

[#2409] twisted.plugin should be quiet when it can't write cache file (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/2409

[#2410] setup.py should generate a twisted.plugin dropin.cache file during install. (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/2410

                    ===== Normal =====
[#2404] DST calculation problem in log.py/FileLogObserver.getTimezoneOffset (opened by thor)
    defect          core       http://twistedmatrix.com/trac/ticket/2404

[#2407] FilePath.alwaysCreate should be removed (opened by jknight)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2407

[#2411] Diverse improvements to IResult interface (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2411

[#2412] twisted hangs on infinite loop redirection (opened by Rick Graves)
    defect          web        http://twistedmatrix.com/trac/ticket/2412

                    ===== Low =====
[#2406] Location of basic pb tutorial not found until after monkeying with finger client tutorial (opened by arch_o_median)
    defect          pb         http://twistedmatrix.com/trac/ticket/2406



Closed Bugs
______________________
                    ===== Highest =====
[#1649] unused parameters in IRCClient.register (opened by synapsis, closed by exarkun, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1649

[#2403] ITerminalTransport missing functions for setting and resetting private modes (opened by exarkun, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2403

[#1996] Remove repr() and getDelayedCalls() usage from twisted.web.test.test_web.SessionTest.test_delayedCallCleanup (opened by exarkun, closed by therve, fixed)
    task            web        http://twistedmatrix.com/trac/ticket/1996

[#2382] twisted/web/test/test_http.py uses backticks (opened by exarkun, closed by therve, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2382

                    ===== High =====
[#2267] twisted.conch.test.test_conch tests leave the reactor unclean (opened by jml, closed by jml, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2267

[#1102] _Dereferences showing up in cyclic data structures with pb, jelly, and Cacheable (opened by phenyx, closed by warner, wontfix)
    defect          pb         http://twistedmatrix.com/trac/ticket/1102

[#1195] twisted.test.test_pb calls reactor.iterate() (opened by exarkun, closed by warner, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1195

                    ===== Normal =====
[#1512] macosx & twisted - unable to find a reactor (opened by cripcrip, closed by exarkun, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1512

[#2370] Cannot create new milestones. (opened by ralphm, closed by exarkun, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/2370

[#1792] qt step of reactors build fails due to Xlib spew on stderr (opened by spiv, closed by exarkun, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1792

[#1972] Python 2.5 warnings mangle output from child processes in test (opened by exarkun, closed by exarkun, wontfix)
    task            core       http://twistedmatrix.com/trac/ticket/1972

[#1390] Intermitent failure in newpb unit tests (opened by exarkun, closed by warner, worksforme)
    defect          pb         http://twistedmatrix.com/trac/ticket/1390

[#1531] QtReactor Problems with Modal Dialogs (opened by mustafa, closed by exarkun, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1531

[#2037] twisted.python.reflect.namedAny depends on undocumented import implementation details (opened by exarkun, closed by exarkun, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2037

[#1819] give permission to update the website to the people who occasionally need to do it (opened by dreid, closed by dreid, invalid)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1819

[#1090] twisted/web/server.py : Session expire times are hardwired (opened by loic, closed by therve, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1090

[#2364] Release TwistedNews-0.3.0 (opened by radix, closed by exarkun, fixed)
    enhancement     news       http://twistedmatrix.com/trac/ticket/2364





From jmp at MIT.EDU  Sun Jan 21 10:55:54 2007
From: jmp at MIT.EDU (Justin Mazzola Paluska)
Date: Sun, 21 Jan 2007 12:55:54 -0500
Subject: [Twisted-Python] Watching a File Descriptor
Message-ID: <20070121175554.GC16500@mit.edu>

Hi,

I’m playing with the inotify(7) interface on Linux.  When I call
inotify_init(), I get back a file descriptor that I’m supposed read
from when there are file system events.

What’s the best way to integrate the inotify file descriptor into the
Twisted reactor?  My question has two subparts:

1.  How do I tell Twisted to check my fd for readability? (Is
    reactor.addReader() all I need?

2.  How do I register a callback to my own code when my fd is
    readable?

All in all, it seems what I really want is something like
ProcessProtocol, but without spawning a process.  Forgive me if I’ve
missed something obvious, but searching google and the gmane mail
archives hasn’t turned up anything.

Thanks,
	—Justin



From therve at free.fr  Sun Jan 21 11:20:43 2007
From: therve at free.fr (Thomas =?utf-8?b?SGVydsOp?=)
Date: Sun, 21 Jan 2007 19:20:43 +0100
Subject: [Twisted-Python] Watching a File Descriptor
In-Reply-To: <20070121175554.GC16500@mit.edu>
References: <20070121175554.GC16500@mit.edu>
Message-ID: <20070121192043.zu4a65ne9a0wc4cc@wasabox.wasabout.net>

Quoting Justin Mazzola Paluska <jmp at MIT.EDU>:

> Hi,
>
> I’m playing with the inotify(7) interface on Linux.  When I call
> inotify_init(), I get back a file descriptor that I’m supposed read
> from when there are file system events.
>
> What’s the best way to integrate the inotify file descriptor into the
> Twisted reactor?  My question has two subparts:
>
> 1.  How do I tell Twisted to check my fd for readability? (Is
>    reactor.addReader() all I need?
>
> 2.  How do I register a callback to my own code when my fd is
>    readable?
>
> All in all, it seems what I really want is something like
> ProcessProtocol, but without spawning a process.  Forgive me if I’ve
> missed something obvious, but searching google and the gmane mail
> archives hasn’t turned up anything.

You should have a look at this:

http://twistedmatrix.com/trac/browser/sandbox/inotify.py

-- 
Thomas




From andrewfr_ice at yahoo.com  Sun Jan 21 13:57:08 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 21 Jan 2007 12:57:08 -0800 (PST)
Subject: [Twisted-Python] More Questions about Custom Reactors 
Message-ID: <276245.14642.qm@web34203.mail.mud.yahoo.com>

Hello Colleagues :

I am trying to write a reactor for Stackless Python. I
posted previously here and in the Stackless mailing
list but I am still stuck.  My problems are in the
following areas :

1. How does the custom reactor drive Twisted?
2. How does self.interleave() work?
3. How to use deferreds if Twisted is running in a
seperate thread. Is callFromThread() used?
4. Some custom reactor implementations  inherit and
some reactors simply install say
threadedselectorreactor? Which technique is
recommended?
 
For now, I am operating under the assumption that
Stackless Python and Twisted ought to be executed  in
seperate threads. This is because if Twisted blocks
then Stackless blocks. Since I am taking this
approach, I am assuming I will have to use
threadedselectorreactor.

I want my Stackless Python application to do two
things :

1. Process HTTP based SOAP server requests
2. From the Stackless thread, make client.getPage()
calls and use a deferred to process the result.

To promote decoupling, I want Twisted and Stackless to
communicate via queues. So my code looks as follows -


def processResponse(self, httpServer):
     reply = self.myQueue.get()
     httpServer.write(reply.toxml().encode("utf-8"))  
            
     httpServer.finish()
     return

example 2.

postRequest = client.getPage(self.address, method =
'POST', headers = self.headers, postdata =
self.body)postRequest.addCallback(self.__handleResponse__).addErrback(self.__handleError__)
    

def __handleResponse__(self, pageData):
         self.queue.put(pageData)

I have looked at the reactors included in the
twisted.internet. I also looked at Blockingdemo.py. I
find BlockingDemo.py confusing (i.e., where is poll()
called? It does not seem to do anything.)

Question about interleave():

"""
Taken from threadedselectorreactor  

In order for Twisted to do its work in the main thread
(the thread that interleave is called from), a waker
function is necessary.  The waker function will be
called from a "background" thread with one argument:
func. The waker function's purpose is to call func()
from the main thread. Many GUI toolkits ship with
appropriate waker functions.
"""

Using wxReactor as a basis, if the following is my
custom Stackless reactor's run method

def run(self):
      self.startRunning(...)
      self.interleave(some_waker_function)
      self.stacklessApplication.Loop()    

1. How does this drive Twisted (in wxReactor there
seems to be a second loop that sleeps every
millisecond)? .
2. What should the "some_waker_function" be doing? Is
the interleave() method always necessary?
3. What is the background thread? Twisted? A
workerThread in threadedselectorreactor?
4. To use client.getPage() and callbacks from
Stackless to a Twisted reactor running in a thread,
must I use callFromThread? Will the Stackless thread
block?

Once again, any advice would be appreciated. I will
happily summarise on the Stackless Wiki. Sorry for
the long message.

Thank you,
Andrew 


    


 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com



From p.mayers at imperial.ac.uk  Sun Jan 21 17:32:16 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 22 Jan 2007 00:32:16 +0000
Subject: [Twisted-Python] More Questions about Custom Reactors
In-Reply-To: <276245.14642.qm@web34203.mail.mud.yahoo.com>
References: <276245.14642.qm@web34203.mail.mud.yahoo.com>
Message-ID: <45B40610.7020607@imperial.ac.uk>

Andrew Francis wrote:
> Hello Colleagues :
> 
> I am trying to write a reactor for Stackless Python. I
> posted previously here and in the Stackless mailing
> list but I am still stuck.  My problems are in the
> following areas :

Perhaps you could explain what you're actually trying to achieve, rather 
than the solution you have decided on? An indeed, why you want to use 
stackless at all - Twisted is predicated around the assumption of a 
stackful i.e. single-threaded Python.

Since you're using stackless, I assume you want to use the 
microthreading capabilities to make async code look synchronous?

Alternatively you might be wanting long-running jobs to be interleaved 
with other code transparently but without using real threads?

If you're proposing using queues to communicate between a Twisted thread 
running the reactor and a stackless thread running your micro-threads, I 
don't see why you need to modify Twisted at all. You can just run the 
stackless microthreads from one "real" thread (started via 
callInThread), pass jobs from Twisted to the "real" thread and probably 
a stackless uthread, and pass the replies back to the twisted thread 
with a callFromThread.

So, can you not just do this?:

stacklessJobs = threading.deque()
stacklessReplies = {}

def queueToStackless(job):
     """returns a deferred which is fired with the job result"""
     while True:
         # generate a unused ID
         i = random.randint()
         if not i in stacklessReplies:
             d = stacklessReplies[i] = defer.Deferred()
             break
     stacklessJobs.append((job, i))
     return d

def replyFromStackless(idx, result):
     """Called in the reactor thread by the stackless thread"""
     d = stacklessReplies.pop(idx)
     d.callback(result)

def workfunc(job, idx):
     """Called via some kind of stackless uthread scheduler"""

     # do some stuff
     for thing in job:
         pass
     result = 'foo'

     # this is the ONLY THREAD SAFE reactor call...
     reactor.callFromThread(replyFromStackless, idx, result)

def emptyQueue(sched):
     """a stackless uthread, runs forever, empties the job pool"""
     while True:
         # replace with a stackless equivalent?
         job, i = stacklessJobs.pop()
         sched.add(workfunc, job, i)

def stacklessWork():
     """The stackless scheduler, runs in the 2nd thread"""
     sched = stacklessUthreadScheduler()
     sched.add(emptyQueue, sched)
     while True:
         sched.doThing()

# On startup, begin the stackless scheduler
reactor.callInThread(stacklessWork)



> 
> 1. How does the custom reactor drive Twisted?
> 2. How does self.interleave() work?
> 3. How to use deferreds if Twisted is running in a
> seperate thread. Is callFromThread() used?
> 4. Some custom reactor implementations  inherit and
> some reactors simply install say
> threadedselectorreactor? Which technique is
> recommended?
>  
> For now, I am operating under the assumption that
> Stackless Python and Twisted ought to be executed  in
> seperate threads. This is because if Twisted blocks
> then Stackless blocks. Since I am taking this
> approach, I am assuming I will have to use
> threadedselectorreactor.
> 
> I want my Stackless Python application to do two
> things :
> 
> 1. Process HTTP based SOAP server requests
> 2. From the Stackless thread, make client.getPage()
> calls and use a deferred to process the result.
> 
> To promote decoupling, I want Twisted and Stackless to
> communicate via queues. So my code looks as follows -
> 
> 
> def processResponse(self, httpServer):
>      reply = self.myQueue.get()
>      httpServer.write(reply.toxml().encode("utf-8"))  
>             
>      httpServer.finish()
>      return
> 
> example 2.
> 
> postRequest = client.getPage(self.address, method =
> 'POST', headers = self.headers, postdata =
> self.body)postRequest.addCallback(self.__handleResponse__).addErrback(self.__handleError__)
>     
> 
> def __handleResponse__(self, pageData):
>          self.queue.put(pageData)
> 
> I have looked at the reactors included in the
> twisted.internet. I also looked at Blockingdemo.py. I
> find BlockingDemo.py confusing (i.e., where is poll()
> called? It does not seem to do anything.)
> 
> Question about interleave():
> 
> """
> Taken from threadedselectorreactor  
> 
> In order for Twisted to do its work in the main thread
> (the thread that interleave is called from), a waker
> function is necessary.  The waker function will be
> called from a "background" thread with one argument:
> func. The waker function's purpose is to call func()
> from the main thread. Many GUI toolkits ship with
> appropriate waker functions.
> """
> 
> Using wxReactor as a basis, if the following is my
> custom Stackless reactor's run method
> 
> def run(self):
>       self.startRunning(...)
>       self.interleave(some_waker_function)
>       self.stacklessApplication.Loop()    
> 
> 1. How does this drive Twisted (in wxReactor there
> seems to be a second loop that sleeps every
> millisecond)? .
> 2. What should the "some_waker_function" be doing? Is
> the interleave() method always necessary?
> 3. What is the background thread? Twisted? A
> workerThread in threadedselectorreactor?
> 4. To use client.getPage() and callbacks from
> Stackless to a Twisted reactor running in a thread,
> must I use callFromThread? Will the Stackless thread
> block?
> 
> Once again, any advice would be appreciated. I will
> happily summarise on the Stackless Wiki. Sorry for
> the long message.
> 
> Thank you,
> Andrew 
> 
> 
>     
> 
> 
>  
> ____________________________________________________________________________________
> Do you Yahoo!?
> Everyone is raving about the all-new Yahoo! Mail beta.
> http://new.mail.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From anthony at interlink.com.au  Sun Jan 21 23:29:36 2007
From: anthony at interlink.com.au (Anthony Baxter)
Date: Mon, 22 Jan 2007 17:29:36 +1100
Subject: [Twisted-Python] Twisted server is 5 times SLOWER on Solaris
	thanLinux?
In-Reply-To: <fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>
References: <fa3d0c740701181410v605e6b56m7a5461a9e9ecb6a7@mail.gmail.com>
	<5AD9DC1AD1BC4241A8AB56D46DE5DFA80B5A88D6@ehost011-6.exch011.intermedia.net>
	<fa3d0c740701190816p2a7bbf06r300e8309e3ad1538@mail.gmail.com>
Message-ID: <200701221729.37026.anthony@interlink.com.au>

On Saturday 20 January 2007 03:16, Jarrod Roberson wrote:
> On 1/18/07, Jacob Gabrielson <jacob at cozi.com> wrote:
> >  It would be interesting to know where the CPU time is actually
> > going.
>
> Sorry hit return by accident.
>
> Twisted is eating up all the CPU time.
>
> What is "slow" is the latency of the entire round trip thru the
> Twisted reactor loop. It is without a doubt Twisted that is the
> bottleneck.


Have you tried using cProfile to see where the time is going? I did 
this many years ago now with twisted when I first moved 
pythondirector across from asyncore to twisted, and found a couple 
of easily-fixed performance problems. It's quite possible you'll 
see a couple of easily-fixed optimisation targets if you profile 
the code.

Anthony



From hellojianwu at gmail.com  Mon Jan 22 00:59:20 2007
From: hellojianwu at gmail.com (jian wu)
Date: Sun, 21 Jan 2007 23:59:20 -0800
Subject: [Twisted-Python] How to set host/IP Address for reactor.listenTcp()
Message-ID: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>

Hi,

I'm new to Twisted, I only had a limited experience using python and its
asyncore/asynchat. I went through Twisted Howto doc.

I just realized that reactor.listenTcp() will only take "listening port" as its
parameter. If I want to run a Twisted Program on a machine with multiple
network cards(NICs) associated with different IP addresses and I only want
my program listening on a specific IP address or NIC, is there a way I
can pass listening IP address to reactor.listenTcp() so it'll only accept
the connections from a certain NIC/IP Address?

Thanks a lot for your help!

Jian



From therve at free.fr  Mon Jan 22 02:32:05 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Mon, 22 Jan 2007 10:32:05 +0100
Subject: [Twisted-Python] How to set host/IP Address for
	reactor.listenTcp()
In-Reply-To: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
Message-ID: <20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>

Quoting jian wu <hellojianwu at gmail.com>:

> Hi,

Hi,

> I'm new to Twisted, I only had a limited experience using python and its
> asyncore/asynchat. I went through Twisted Howto doc.
>
> I just realized that reactor.listenTcp() will only take "listening 
> port" as its
> parameter. If I want to run a Twisted Program on a machine with multiple
> network cards(NICs) associated with different IP addresses and I only want
> my program listening on a specific IP address or NIC, is there a way I
> can pass listening IP address to reactor.listenTcp() so it'll only accept
> the connections from a certain NIC/IP Address?

You should have a look at this:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorTCP.html


-- 
Thomas





From hellojianwu at gmail.com  Mon Jan 22 09:35:04 2007
From: hellojianwu at gmail.com (jian wu)
Date: Mon, 22 Jan 2007 08:35:04 -0800
Subject: [Twisted-Python] How to set host/IP Address for
	reactor.listenTcp()
In-Reply-To: <20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
References: <d81c17cd0701212359s191033f5yd3cda2f27453949b@mail.gmail.com>
	<20070122103205.zxunofmfk9lw888g@wasabox.wasabout.net>
Message-ID: <d81c17cd0701220835h57c21a00ue1e0793bfb17941a@mail.gmail.com>

Hi Thomas,

Thanks a lot for your quick response!

Jian

On 1/22/07, Thomas Hervé <therve at free.fr> wrote:
> Quoting jian wu <hellojianwu at gmail.com>:
>
> > Hi,
>
> Hi,
>
> > I'm new to Twisted, I only had a limited experience using python and its
> > asyncore/asynchat. I went through Twisted Howto doc.
> >
> > I just realized that reactor.listenTcp() will only take "listening
> > port" as its
> > parameter. If I want to run a Twisted Program on a machine with multiple
> > network cards(NICs) associated with different IP addresses and I only want
> > my program listening on a specific IP address or NIC, is there a way I
> > can pass listening IP address to reactor.listenTcp() so it'll only accept
> > the connections from a certain NIC/IP Address?
>
> You should have a look at this:
>
> http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorTCP.html
>
>
> --
> Thomas
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From avindev at gmail.com  Mon Jan 22 23:00:50 2007
From: avindev at gmail.com (Arbow)
Date: Tue, 23 Jan 2007 14:00:50 +0800
Subject: [Twisted-Python] Could anyone send me a copy?
Message-ID: <ca75ec0701222200s5bc71740y1039b179df883688@mail.gmail.com>

Hi anyone:
      I could't download the v2.5 release for the bad network
condition (1k~2k, always disconnected), could anyone send me a copy to
my mailbox? I need these follows:

Twisted 2.5.0 tarball
Twisted 2.5 Win32 installer for Python 2.4
Twisted 2.5 Win32 installer for Python 2.5

Thanks
Arbow



From hellojianwu at gmail.com  Tue Jan 23 00:16:50 2007
From: hellojianwu at gmail.com (jian wu)
Date: Mon, 22 Jan 2007 23:16:50 -0800
Subject: [Twisted-Python] Is it a good/recommended practice to pass Instance
	Method into reactor.callFromThread()/callInThread()?
Message-ID: <d81c17cd0701222316y13774d00v6a09c8f17563a08a@mail.gmail.com>

Hi Twisted Guru,

I'm new to Twisted, I am just experimenting Twisted 2.5 with Python 2.5.

It seems that I can pass either a python function or a python object
instance method
to reactor.callInThread() for blocking operation and
reactor.callFromThread() in main
event loop.

I just want to see whether it is a good/recommended practice to pass
Instance Method
into reactor.callFromThread()/callInThread(), which implies that the
application level
context information stored in the python object instance is available
when the method
is invoked, so I don't have to pass all the context info as
parameters. Do I miss anything
in Twisted?

Any suggestion or tip is really appreciated.

Thanks a lot for your help!

Jian



From warner at lothar.com  Tue Jan 23 01:32:31 2007
From: warner at lothar.com (Brian Warner)
Date: Tue, 23 Jan 2007 00:32:31 -0800 (PST)
Subject: [Twisted-Python] Foolscap-0.0.7 (aka newpb) released
Message-ID: <20070123.003231.11951578.warner@lothar.com>


I've made a new release of Foolscap, 0.0.7, which fixes two irritating bugs:
in previous versions you could not connect to the same PBURL multiple times,
nor could you connect to yourself. The former would return None where it was
supposed to return a RemoteReference, the latter could cause a negotiation
timeout and failure. Both are fixed now.

There are no incompatible protocol changes in this release: 0.0.6 clients
will speak to 0.0.7 clients. There likely to be incompatible changes in the
future though: the protocol is not yet stabilized.

Foolscap is a next-generation RPC protocol for Twisted, under development as
"newpb" for the last several years. It is intended to eventually replace PB,
but it is not yet ready for production use. My hope is that Foolscap will
make it easier for python/twisted applications to use tools and concepts from
the object-capability world, in particular from E and the Web-Calculus.

Some useful URLs:
 Foolscap home page: http://twistedmatrix.com/trac/wiki/FoolsCap
 Download the release: http://twistedmatrix.com/~warner/Foolscap/
 Browse the source: http://twistedmatrix.com/trac/browser/sandbox/warner/Foolscap/trunk
 Read some docs: http://twistedmatrix.com/~warner/Foolscap/using-pb.html
 E: http://www.erights.org/
 Web-Calculus: http://www.waterken.com/dev/Web/


Also I'll probably organize a Foolscap BOF at PyCon this year.


share and enjoy,
 -Brian



From orlenko at gmail.com  Tue Jan 23 07:39:49 2007
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Tue, 23 Jan 2007 06:39:49 -0800
Subject: [Twisted-Python] Could anyone send me a copy?
In-Reply-To: <ca75ec0701222200s5bc71740y1039b179df883688@mail.gmail.com>
References: <ca75ec0701222200s5bc71740y1039b179df883688@mail.gmail.com>
Message-ID: <45B61E35.4070307@gmail.com>

Please check your inbox.

Arbow wrote:
> Hi anyone:
>      I could't download the v2.5 release for the bad network
> condition (1k~2k, always disconnected), could anyone send me a copy to
> my mailbox? I need these follows:
>
> Twisted 2.5.0 tarball
> Twisted 2.5 Win32 installer for Python 2.4
> Twisted 2.5 Win32 installer for Python 2.5
>
> Thanks
> Arbow
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From andrew-twisted at puzzling.org  Tue Jan 23 15:33:52 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 24 Jan 2007 09:33:52 +1100
Subject: [Twisted-Python] Is it a good/recommended practice to pass
	Instance Method into reactor.callFromThread()/callInThread()?
In-Reply-To: <d81c17cd0701222316y13774d00v6a09c8f17563a08a@mail.gmail.com>
References: <d81c17cd0701222316y13774d00v6a09c8f17563a08a@mail.gmail.com>
Message-ID: <20070123223352.GB6055@steerpike.home.puzzling.org>

jian wu wrote:
> Hi Twisted Guru,
> 
> I'm new to Twisted, I am just experimenting Twisted 2.5 with Python 2.5.
> 
> It seems that I can pass either a python function or a python object instance
> method to reactor.callInThread() for blocking operation and
> reactor.callFromThread() in main event loop.
> 
> I just want to see whether it is a good/recommended practice to pass Instance
> Method into reactor.callFromThread()/callInThread(), which implies that the
> application level context information stored in the python object instance is
> available when the method is invoked, so I don't have to pass all the context
> info as parameters. Do I miss anything in Twisted?

Yes, passing bound methods is fine, and often useful for the reasons you give.

-Andrew.




From avindev at gmail.com  Tue Jan 23 18:21:50 2007
From: avindev at gmail.com (Arbow)
Date: Wed, 24 Jan 2007 09:21:50 +0800
Subject: [Twisted-Python] Could anyone send me a copy?
In-Reply-To: <45B61E35.4070307@gmail.com>
References: <ca75ec0701222200s5bc71740y1039b179df883688@mail.gmail.com>
	<45B61E35.4070307@gmail.com>
Message-ID: <ca75ec0701231721v278cd1a1j277577140f26e969@mail.gmail.com>

Got it ! Thanks very much :)



From fperez.net at gmail.com  Tue Jan 23 22:33:58 2007
From: fperez.net at gmail.com (Fernando Perez)
Date: Tue, 23 Jan 2007 22:33:58 -0700
Subject: [Twisted-Python] Hanging Deferreds in PB Paging code
In-Reply-To: <45B265B2.9090909@eepatents.com>
References: <E1H8G7f-0005XO-02@pyramid.twistedmatrix.com>
	<45B265B2.9090909@eepatents.com>
Message-ID: <db6b5ecc0701232133t24973014y218375d9869dd4a7@mail.gmail.com>

Hi Ed,

On 1/20/07, Ed Suominen <general at eepatents.com> wrote:

> Well, as it says on the foss.eepatents.com site, "If you want to use
> this software under different terms ... feel free to contact me about
> it. Maybe we can work something out, maybe not." :-)
>
> I'm interested in the idea of some of the work getting adapted for
> IPython (a great project!), even if the adaptation winds up being
> licensed differently. Also, I have already done quite a bit of task
> farming in another as-yet-private package of mine, "AsynCluster" (is
> what it sounds like), which I'm planning to incorporate into
> Twisted-Goodies. Collaborating with someone capable like yourself on
> this would be great for both of us, I would think. So, let's get
> together on this off-list soon!

Well, from our side, we'd certainly be very interested in
collaborating with you.  Both Brian and I are developing ipython's
distributed computing capabilities because we need them in our
everyday work, and we'd be very happy to have more collaborators.
Brian knows a lot more about Twisted than I do so I'll defer detail
comments on your code to him, but as a general statement, we'd be
happy to have you on board.

Since this discussion may drift away from Twisted specifics and I
don't want to impose off-topic chat on this list, we'd be happy to
continue talking about the more ipython-specific questions on the
ipython lists (this is probably a -dev topic):

http://projects.scipy.org/mailman/listinfo/ipython-dev
http://projects.scipy.org/mailman/listinfo/ipython-user

If you feel you'd rather discuss licensing specifics off-list first,
then by all means go ahead (if you've already talked to Brian, I'll
catch up on the details directly from him, don't worry).

Thanks for your offer!

Best,

f



From hellojianwu at gmail.com  Wed Jan 24 00:49:16 2007
From: hellojianwu at gmail.com (jian wu)
Date: Tue, 23 Jan 2007 23:49:16 -0800
Subject: [Twisted-Python] Is it a good/recommended practice to pass
	Instance Method into reactor.callFromThread()/callInThread()?
In-Reply-To: <20070123223352.GB6055@steerpike.home.puzzling.org>
References: <d81c17cd0701222316y13774d00v6a09c8f17563a08a@mail.gmail.com>
	<20070123223352.GB6055@steerpike.home.puzzling.org>
Message-ID: <d81c17cd0701232349l64a59769if48ddb3bc5b830b5@mail.gmail.com>

Hi Andrew,

Thanks a lot for your quick reply!

Jian

On 1/23/07, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> jian wu wrote:
> > Hi Twisted Guru,
> >
> > I'm new to Twisted, I am just experimenting Twisted 2.5 with Python 2.5.
> >
> > It seems that I can pass either a python function or a python object instance
> > method to reactor.callInThread() for blocking operation and
> > reactor.callFromThread() in main event loop.
> >
> > I just want to see whether it is a good/recommended practice to pass Instance
> > Method into reactor.callFromThread()/callInThread(), which implies that the
> > application level context information stored in the python object instance is
> > available when the method is invoked, so I don't have to pass all the context
> > info as parameters. Do I miss anything in Twisted?
>
> Yes, passing bound methods is fine, and often useful for the reasons you give.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From yqiang at gmail.com  Wed Jan 24 14:02:54 2007
From: yqiang at gmail.com (Yi Qiang)
Date: Wed, 24 Jan 2007 13:02:54 -0800
Subject: [Twisted-Python] Foolscap-0.0.7 (aka newpb) released
In-Reply-To: <20070123.003231.11951578.warner@lothar.com>
References: <20070123.003231.11951578.warner@lothar.com>
Message-ID: <462750D5-4512-47CA-B0D6-673B727AE3AD@gmail.com>

On Jan 23, 2007, at 12:32 AM, Brian Warner wrote:

> Foolscap is a next-generation RPC protocol for Twisted, under  
> development as
> "newpb" for the last several years. It is intended to eventually  
> replace PB,
> but it is not yet ready for production use.
Hi Brian,
What are your plans for client-sever authentication with Foolscap?  I  
checked out the README and it made no mention of that capability yet.

Yi






From teratorn at twistedmatrix.com  Thu Jan 25 00:15:33 2007
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Thu, 25 Jan 2007 01:15:33 -0600
Subject: [Twisted-Python] Pycon Twisted Sprint
Message-ID: <op.tmo7r7uxy3d107@office2>

Does anyone have any ideas for a Twisted Sprint? I will probably be  
staying at least through Monday.

Special-rate-registration ends in one week on February 1st. So if there is  
going to be any kind of organized activity we ought to figure it out in  
the next few days.

Please raise your hand if you want to hack on stuff after the 'con and,  
assuming enough peer interest, indicate how many days you would like to  
stay.

Personally if there was enough interest I would stay through Tuesday.

-- 
Eric Mangold
Twisted/Win32 Co-Maintainer



From therve at free.fr  Thu Jan 25 03:16:30 2007
From: therve at free.fr (Thomas =?utf-8?b?SGVydsOp?=)
Date: Thu, 25 Jan 2007 11:16:30 +0100
Subject: [Twisted-Python] Pycon Twisted Sprint
In-Reply-To: <op.tmo7r7uxy3d107@office2>
References: <op.tmo7r7uxy3d107@office2>
Message-ID: <20070125111630.naukia3jyzkkg4gc@wasabox.wasabout.net>

Quoting Eric Mangold <teratorn at twistedmatrix.com>:

> Does anyone have any ideas for a Twisted Sprint? I will probably be  
> staying at least through Monday.
>
> Special-rate-registration ends in one week on February 1st. So if 
> there is  going to be any kind of organized activity we ought to 
> figure it out in  the next few days.
>
> Please raise your hand if you want to hack on stuff after the 'con 
> and,  assuming enough peer interest, indicate how many days you would 
> like to  stay.
>
> Personally if there was enough interest I would stay through Tuesday.

I should be there on Monday, and ready to go for a sprint. Regarding 
what to do,
there's at least bug triage even if it's not fun. Otherwise, here are some
thoughts:
* the new process protocol (#2415)
* try to make a benchmark (#1177, #2201)
* epoll edge-triggered ?
* documentation

-- 
Thomas





From andrewfr_ice at yahoo.com  Thu Jan 25 09:44:01 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 25 Jan 2007 08:44:01 -0800 (PST)
Subject: [Twisted-Python] Losing Deferreds : Re: More Questions about Custom
	Reactors 
In-Reply-To: <E1H93Se-0007xs-02@pyramid.twistedmatrix.com>
Message-ID: <20070125164402.52226.qmail@web34211.mail.mud.yahoo.com>

Message: 3
Date: Mon, 22 Jan 2007 00:32:16 +0000
From: Phil Mayers <p.mayers at imperial.ac.uk>
Subject: Re: [Twisted-Python] More Questions about
Custom Reactors
To: Twisted general discussion
<twisted-python at twistedmatrix.com>
Message-ID: <45B40610.7020607 at imperial.ac.uk>
Content-Type: text/plain; charset=ISO-8859-1;
format=flowed

I am sorry that I am tardy in responding. I was trying
out your suggestions. Right now, my main question is
under which conditions do deferred fail to fire? How
do I know that the reactor is still running? Would
Manhole help? (Unfortunately I haven't been able to
get gtk to work Manhole with Twisted 2.4)

>Perhaps you could explain what you're actually trying
>to achieve, rather than the solution you have decided
>on? An indeed, why you want to use stackless at all -
>Twisted is predicated around the assumption of a 
>stackful i.e. single-threaded Python.

I understand your questioning. The main reason I am
using Stackless Python is for its process execution
state pickling abilities. A second reason is that I
find Stackless's communication model very handy for
modeling the type of thread synchronisation I wish to
do.

I know that Twisted assumes a stackful Python and it
is an uphill battle. However the gains from getting
Twisted to work with Stackless are so great, I think
it is worthwhile. For the most part, I have succeeded
in having Stackless Python work with Twisted. If you
read the Stackless mailing list, I have posted
examples. Soon, I will post on the Wiki.

My problems stem from situations where I have two or
more concurrent tasklets (Stackless threads) that do
the following)

tasklet[0] - waiting for a Twisted Request Handler
tasklet[1] - making a client.getPage call
tasklet[2] - making a client.getPage call
tasklet[3] - some other operation
tasklet[n] - some other operation

under these conditions, if tasklet[0] is executed
first, the other tasklets will block indefinitely. My
problems occur from trying to get around this.
Originally I tried taskLoop calling
stackless.schedule() to give other tasklets a chance
to execute but this would cause reactor problems.
Hence the current approach of looking at getting
Twisted to run in its own thread.

>Alternatively you might be wanting long-running jobs
>to be interleaved with other code transparently but
>without using real threads?

I am not sure how to do this.

>If you're proposing using queues to communicate
>between a Twisted thread running the reactor and a
>stackless thread running your micro-threads, 
>I don't see why you need to modify Twisted at all. 

I am a newbie to Twisted. Based on what I am reading,
I current assumption is that I would need to 

>You can just run the stackless microthreads from one
>"real" thread (started via callInThread), pass jobs
>from Twisted to the "real" thread and probably 
>a stackless uthread, and pass the replies back to the
>twisted thread with a callFromThread.

>So, can you not just do this?:

Philip, first the good news : thanks a million! This
is the exactly the type of example I wanted. It works.

The bad news - under certain conditions I am losing
deferreds. I think there are deadlock issues but that
is not Twisted's fault per se. Unfortunately debuggers
work poorly with Stackless so it is difficult for me
to know what is happening. I tried telneting but my
server is not responding - so I guess that implies
that Twisted is still listening but the reactor is not
working. Again, any suggestions would be more than
welcome.

Cheers,
Andrew


 
____________________________________________________________________________________
Bored stiff? Loosen up... 
Download and play hundreds of games for free on Yahoo! Games.
http://games.yahoo.com/games/front



From lee.a.connell at gmail.com  Thu Jan 25 19:57:32 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Thu, 25 Jan 2007 21:57:32 -0500
Subject: [Twisted-Python] xml
Message-ID: <000301c740f5$b9dfb700$0400a8c0@leelaptop>

Hey everyone,

 

I have been looking all night and I can’t find any examples of using simple
xml to write my own xml protocol for a chat server I intend to build.  All I
want to do is generate XML from commands and send it across the socket and
receive it on the other end and unpack it.  Any recommendations on what to
use and any tutorials or examples on how to do it.  I don’t know a whole lot
about XML programming, just it’s basic structure.

 

Thanks!


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.11/652 - Release Date: 1/25/2007
3:32 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070125/35e2e88c/attachment.html>

From exarkun at divmod.com  Thu Jan 25 20:08:35 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 25 Jan 2007 22:08:35 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
Message-ID: <20070126030835.17245.482086047.divmod.quotient.11656@ohm>

On Thu, 25 Jan 2007 21:57:32 -0500, Lee Connell <lee.a.connell at gmail.com> wrote:
>Hey everyone,
>
>I have been looking all night and I can’t find any examples of using simple
>xml to write my own xml protocol for a chat server I intend to build.  All I
>want to do is generate XML from commands and send it across the socket and
>receive it on the other end and unpack it.  Any recommendations on what to
>use and any tutorials or examples on how to do it.  I don’t know a whole lot
>about XML programming, just it’s basic structure.
>

Rather than developing a new protocol, have you considered using an existing
general purpose protocol to accomplish your goals?

For example, XMPP is an XML-based protocol which is already implemented in
Twisted.  You could use it to send messages.

Also, why are you interested in XML specifically?  Netstrings, AMP, or PB
might also be suitable.

Almost certainly, at least one of these is suited for the problem you are
trying to solve, and it is always beneficial to avoid implementing a new
protocol when possible.

Jean-Paul



From george at ringdevelopment.com  Fri Jan 26 06:38:21 2007
From: george at ringdevelopment.com (George Pauly)
Date: Fri, 26 Jan 2007 08:38:21 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
Message-ID: <1169818701.28429.298.camel@localhost.localdomain>

There's an example of twisted.web.xmlrpc in TNPE (the O'Reilly Twisted
book).  I think you can download the code from the O'Reilly website.

-George


On Thu, 2007-01-25 at 21:57 -0500, Lee Connell wrote:
> Hey everyone,
> 
>  
> 
> I have been looking all night and I can’t find any examples of using
> simple xml to write my own xml protocol for a chat server I intend to
> build.  All I want to do is generate XML from commands and send it
> across the socket and receive it on the other end and unpack it.  Any
> recommendations on what to use and any tutorials or examples on how to
> do it.  I don’t know a whole lot about XML programming, just it’s
> basic structure.
> 
>  
> 
> Thanks!
> 
> 
> 
> --
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.5.432 / Virus Database: 268.17.11/652 - Release Date:
> 1/25/2007 3:32 PM
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From rfg007 at yahoo.com  Fri Jan 26 07:33:21 2007
From: rfg007 at yahoo.com (Roberto Gomez)
Date: Fri, 26 Jan 2007 06:33:21 -0800 (PST)
Subject: [Twisted-Python] task.LoopingCall: a problem if change the system
	time
Message-ID: <20070126143321.90518.qmail@web52511.mail.yahoo.com>

Hi everyone,

I wrote a simple test trying to find why my app freeze
when change the system time:

#################
from twisted.internet import reactor, task
import time

def callback():
    print time.ctime(time.time())

t = task.LoopingCall(callback)
t.start(2.0)
reactor.run()

#################

If run this and change the system time, let's say a
day forward, everything work fine, but if change the
system time backward, the program freeze until you
change forward again. This is specially problematic
for a computer using ntp, updating its clock time to
time.

It seems that there is a problem in
LoopingCall._reschedule that don't play well when
"fromNow = self.starttime - self._seconds()" is
negative, and seems to be platform independent:

W2k Pro
python 2.4.4
twisted 2.4.0

Wxp Pro
python 2.4.4
twisted 2.4.0

Ubuntu Linux 5.1
python 2.4.2
twisted 2.0.1-4

I'm not a twisted expert, but and extensive user and
fan, and I don´t know how to workaround this.

Any clue?
TIA



 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com



From itamar at itamarst.org  Fri Jan 26 08:14:40 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 26 Jan 2007 10:14:40 -0500
Subject: [Twisted-Python] task.LoopingCall: a problem if change the
	system time
In-Reply-To: <20070126143321.90518.qmail@web52511.mail.yahoo.com>
References: <20070126143321.90518.qmail@web52511.mail.yahoo.com>
Message-ID: <1169824480.13155.10.camel@localhost.localdomain>

On Fri, 2007-01-26 at 06:33 -0800, Roberto Gomez wrote:

> It seems that there is a problem in
> LoopingCall._reschedule that don't play well when
> "fromNow = self.starttime - self._seconds()" is
> negative, and seems to be platform independent:

You probably want to file a bug on the website.





From rfg007 at yahoo.com  Fri Jan 26 08:57:22 2007
From: rfg007 at yahoo.com (Roberto Gomez)
Date: Fri, 26 Jan 2007 07:57:22 -0800 (PST)
Subject: [Twisted-Python] task.LoopingCall: a problem if change the system
	time
In-Reply-To: <1169824480.13155.10.camel@localhost.localdomain>
Message-ID: <917716.55246.qm@web52513.mail.yahoo.com>


--- Itamar Shtull-Trauring <itamar at itamarst.org>
wrote:

> On Fri, 2007-01-26 at 06:33 -0800, Roberto Gomez
> wrote:
> 
> > It seems that there is a problem in
> > LoopingCall._reschedule that don't play well when
> > "fromNow = self.starttime - self._seconds()" is
> > negative, and seems to be platform independent:
> 
> You probably want to file a bug on the website.
> 

filed. Ticket #2424
many thx

 



 
____________________________________________________________________________________
Get your own web address.  
Have a HUGE year through Yahoo! Small Business.
http://smallbusiness.yahoo.com/domains/?p=BESTDEAL



From lee.a.connell at gmail.com  Fri Jan 26 15:55:43 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Fri, 26 Jan 2007 17:55:43 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <1169818701.28429.298.camel@localhost.localdomain>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
	<1169818701.28429.298.camel@localhost.localdomain>
Message-ID: <000601c7419d$1ecf6e10$0400a8c0@leelaptop>

But can you use that with your own custom tcp servers? Like a chat server?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of George Pauly
Sent: Friday, January 26, 2007 8:38 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] xml

There's an example of twisted.web.xmlrpc in TNPE (the O'Reilly Twisted
book).  I think you can download the code from the O'Reilly website.

-George


On Thu, 2007-01-25 at 21:57 -0500, Lee Connell wrote:
> Hey everyone,
> 
>  
> 
> I have been looking all night and I can’t find any examples of using
> simple xml to write my own xml protocol for a chat server I intend to
> build.  All I want to do is generate XML from commands and send it
> across the socket and receive it on the other end and unpack it.  Any
> recommendations on what to use and any tutorials or examples on how to
> do it.  I don’t know a whole lot about XML programming, just it’s
> basic structure.
> 
>  
> 
> Thanks!
> 
> 
> 
> --
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.5.432 / Virus Database: 268.17.11/652 - Release Date:
> 1/25/2007 3:32 PM
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.11/652 - Release Date: 1/25/2007
3:32 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.12/653 - Release Date: 1/26/2007
11:11 AM
 




From ldanielburr at mac.com  Fri Jan 26 16:45:44 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 26 Jan 2007 17:45:44 -0600
Subject: [Twisted-Python] xml
In-Reply-To: <000601c7419d$1ecf6e10$0400a8c0@leelaptop>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
	<1169818701.28429.298.camel@localhost.localdomain>
	<000601c7419d$1ecf6e10$0400a8c0@leelaptop>
Message-ID: <op.tmscaix53oj628@l-daniel-burrs-powerbook-g4-17.local>

Hi Lee,

On Fri, 26 Jan 2007 16:55:43 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

> But can you use that with your own custom tcp servers? Like a chat  
> server?
>

If it isn't a terrible nuisance, I'd like to ask you to please refrain
 from top-posting.  It makes following a thread harder, and that means
you're less likely to get good answers to your questions.  Not ragging
on you or anything, just making a request :)

Regarding twisted.web.xmlrpc: No, you cannot use it with any arbitrary
server; that module is specific to http.  You could certainly read over
the code (it is short) to get an idea of how
to implement xmlrpc atop your own tcp server.

For certain though, the best thing to look at is twisted.words, since
that package is full of chat protocols.  The jabber stuff, in particular,
should be helpful, since jabber uses a streaming XML protocol.  I'd
seriously suggest using the jabber stuff, rather than inventing your
own protocol.

Also, take a look at twisted.words.xish.xmlstream.  From the docstring:
"The most prominent use of XML Streams is Jabber, but this module is
generically usable. See Twisted Words for Jabber specific protocol
support."  That seems to me to be closest to what you want.

Hope this helps,

L. Daniel Burr



From lee.a.connell at gmail.com  Fri Jan 26 17:03:14 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Fri, 26 Jan 2007 19:03:14 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <op.tmscaix53oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop><1169818701.28429.298.camel@localhost.localdomain><000601c7419d$1ecf6e10$0400a8c0@leelaptop>
	<op.tmscaix53oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <000d01c741a6$8b15b260$0400a8c0@leelaptop>

> If it isn't a terrible nuisance, I'd like to ask you to please refrain
> from top-posting.

L. Daniel Burr,

Thanks for your response, I'm looking at twisted.words now.  What exactly is
top-posting?

-Lee

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.12/653 - Release Date: 1/26/2007
11:11 AM
 




From ldanielburr at mac.com  Fri Jan 26 17:19:37 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 26 Jan 2007 18:19:37 -0600
Subject: [Twisted-Python] xml
In-Reply-To: <000d01c741a6$8b15b260$0400a8c0@leelaptop>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
	<1169818701.28429.298.camel@localhost.localdomain>
	<000601c7419d$1ecf6e10$0400a8c0@leelaptop>
	<op.tmscaix53oj628@l-daniel-burrs-powerbook-g4-17.local>
	<000d01c741a6$8b15b260$0400a8c0@leelaptop>
Message-ID: <op.tmsduzsk3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Fri, 26 Jan 2007 18:03:14 -0600, Lee Connell <lee.a.connell at gmail.com>  
wrote:

>> If it isn't a terrible nuisance, I'd like to ask you to please refrain
>> from top-posting.
>
> L. Daniel Burr,
>
> Thanks for your response, I'm looking at twisted.words now.  What  
> exactly is
> top-posting?
>
> -Lee
>

Top-posting is the practice of putting your responses at the top of the
post, rather that in-line, following the comments to which you are
responding.

Have a good one,

L. Daniel Burr



From warner at lothar.com  Sat Jan 27 14:33:54 2007
From: warner at lothar.com (Brian Warner)
Date: Sat, 27 Jan 2007 13:33:54 -0800
Subject: [Twisted-Python] Foolscap-0.0.7 (aka newpb) released
In-Reply-To: <462750D5-4512-47CA-B0D6-673B727AE3AD@gmail.com> (Yi Qiang's
	message of "Wed, 24 Jan 2007 13:02:54 -0800")
References: <20070123.003231.11951578.warner@lothar.com>
	<462750D5-4512-47CA-B0D6-673B727AE3AD@gmail.com>
Message-ID: <87k5z8kvct.fsf@lothar.com>

>> Foolscap is a next-generation RPC protocol for Twisted, under development as
>> "newpb" for the last several years. It is intended to eventually replace PB,
>> but it is not yet ready for production use.

> Hi Brian,
> What are your plans for client-sever authentication with Foolscap?  I checked
> out the README and it made no mention of that capability yet.

I'm afraid I don't understand what you mean by "client-server
authentication".. can you expand upon that?

If what you want is a way to send a username/password to a server and have it
connect you to some resource based upon the validity of that pair, then it's
trivial to publish some sort of "login" object that has a method which
accepts that pair, and then does a lookup/verification and returns some sort
of avatar for that user, something like this:
  
  class Avatar(foolscap.Referenceable):
    def __init__(self, user_object):
        self.user_object = user_object
    def remote_stuff(self, args):
        return self.user_object.stuff(args)
  
  class Login(foolscap.Referenceable):
    def remote_login(self, username, password):
        if username in self.passwords and self.passwords[username] == password:
            return Avatar(self.user_objects[username])
        raise BadPasswordOrUnknownUserError()
  
  t = foolscap.Tub()
  pburl = t.registerReference(Login())
  print "connect your client to %s" % pburl

I haven't put a great deal of thought into how twisted.cred should be used in
conjunction with Foolscap, but my hunch is that it should just be a layer on
top, with some sort of convention for indicating what form of credentials the
client is offering.

cheers,
 -Brian




From lee.a.connell at gmail.com  Sat Jan 27 16:34:28 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 27 Jan 2007 18:34:28 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <20070126030835.17245.482086047.divmod.quotient.11656@ohm>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
	<20070126030835.17245.482086047.divmod.quotient.11656@ohm>
Message-ID: <000f01c7426b$b08dded0$0400a8c0@leelaptop>

Jean-Paul,

Thanks for your input,

I looked at them all, AMP looked pretty cool, but that's just something that
is enhancing XML-RPC correct?  Netstrings looked like a viable solution, but
I like XML formatting better.  

I am not sure if what I originally asked was correct, I am not designing
some new protocol, all I am doing is looking for something to wrap up my
packets which hold some commands and data, very basic stuff, is that
considered writing my own protocol?

Anyways, it looks like minidom will do what I want as far as parsing strings
and creating DOM's.  

Thank you!

////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
Rather than developing a new protocol, have you considered using an existing
general purpose protocol to accomplish your goals?

For example, XMPP is an XML-based protocol which is already implemented in
Twisted.  You could use it to send messages.

Also, why are you interested in XML specifically?  Netstrings, AMP, or PB
might also be suitable.

Almost certainly, at least one of these is suited for the problem you are
trying to solve, and it is always beneficial to avoid implementing a new
protocol when possible.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.11/652 - Release Date: 1/25/2007
3:32 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.12/653 - Release Date: 1/26/2007
11:11 AM
 




From radix at twistedmatrix.com  Sat Jan 27 17:38:13 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 27 Jan 2007 19:38:13 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <000f01c7426b$b08dded0$0400a8c0@leelaptop>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop>
	<20070126030835.17245.482086047.divmod.quotient.11656@ohm>
	<000f01c7426b$b08dded0$0400a8c0@leelaptop>
Message-ID: <60ed19d40701271638q244c2aa4w49af7b510ef6b03f@mail.gmail.com>

On 1/27/07, Lee Connell <lee.a.connell at gmail.com> wrote:
> Jean-Paul,
>
> Thanks for your input,
>
> I looked at them all, AMP looked pretty cool, but that's just something that
> is enhancing XML-RPC correct?

No, AMP is not based on XML-RPC at all; it's a custom protocol which
offers two-way communications (XML-RPC only supports client->server
request/response), and it doesn't use XML in the first place.

> Netstrings looked like a viable solution, but
> I like XML formatting better.

Why do you like XML formatting better? It's waaay more complicated
than netstrings, and if your protocol is simple, you shouldn't need
something too complicated.

> I am not sure if what I originally asked was correct, I am not designing
> some new protocol, all I am doing is looking for something to wrap up my
> packets which hold some commands and data, very basic stuff, is that
> considered writing my own protocol?

Yes :)

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From lee.a.connell at gmail.com  Sat Jan 27 20:27:02 2007
From: lee.a.connell at gmail.com (Lee Connell)
Date: Sat, 27 Jan 2007 22:27:02 -0500
Subject: [Twisted-Python] xml
In-Reply-To: <60ed19d40701271638q244c2aa4w49af7b510ef6b03f@mail.gmail.com>
References: <000301c740f5$b9dfb700$0400a8c0@leelaptop><20070126030835.17245.482086047.divmod.quotient.11656@ohm><000f01c7426b$b08dded0$0400a8c0@leelaptop>
	<60ed19d40701271638q244c2aa4w49af7b510ef6b03f@mail.gmail.com>
Message-ID: <000001c7428c$2dc6dad0$0400a8c0@leelaptop>

Jean Paul,

Do you use netstrings?  What version of netstrings.py do you use?  I'll have
another look at it, is this a non-maintained script? As far as XML, I'm just
use to it because of web development, that's all.

-Lee

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Christopher
Armstrong
Sent: Saturday, January 27, 2007 7:38 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] xml

On 1/27/07, Lee Connell <lee.a.connell at gmail.com> wrote:
> Jean-Paul,
>
> Thanks for your input,
>
> I looked at them all, AMP looked pretty cool, but that's just something
that
> is enhancing XML-RPC correct?

No, AMP is not based on XML-RPC at all; it's a custom protocol which
offers two-way communications (XML-RPC only supports client->server
request/response), and it doesn't use XML in the first place.

> Netstrings looked like a viable solution, but
> I like XML formatting better.

Why do you like XML formatting better? It's waaay more complicated
than netstrings, and if your protocol is simple, you shouldn't need
something too complicated.

> I am not sure if what I originally asked was correct, I am not designing
> some new protocol, all I am doing is looking for something to wrap up my
> packets which hold some commands and data, very basic stuff, is that
> considered writing my own protocol?

Yes :)

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.12/653 - Release Date: 1/26/2007
11:11 AM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.17.12/653 - Release Date: 1/26/2007
11:11 AM
 




From exarkun at twistedmatrix.com  Sat Jan 27 22:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Jan 2007 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1169960701.44.509208902@twistedmatrix.com

Bug summary
______________________
Summary for 2007-01-21 through 2007-01-28
Bugs opened: 12    Bugs closed: 6  Total open bugs: 826 (+6)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +4  |Highest:  -1          |Conch:     +2          
|Enhancement:  +0  |High:     +0          |Core:      +2          
|Task:         +2  |Normal:   +6          |Lore:      +1          
                   |Low:      +1          |Names:     +1          
                                          |Pydoctor:  +0          
                                          |Trial:     +1          
                                          |Web:       -1          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2413] Remove direct reactor usage from twisted.conch.insults.window.TopWindow to make it more easily testable (opened by exarkun) (CLOSED, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/2413

[#2414] Refactor DNSProtocol and DNSDatagramProtocol (opened by therve)
    enhancement     names      http://twistedmatrix.com/trac/ticket/2414

[#2421] Make sure that closing events are handled sanely with filetransfer (opened by jml)
    task            conch      http://twistedmatrix.com/trac/ticket/2421

                    ===== High =====
[#2423] ImportError on Nevow in pydoctor (opened by peterbe) (CLOSED, wontfix)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2423

                    ===== Normal =====
[#2415] update/replace spawnProcess and ProcessProtocol (opened by bigdog)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2415

[#2417] cannot import name page from nevow (0.9.0) (opened by kumar303) (CLOSED, wontfix)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2417

[#2418] Lore encourages duplicate data: <title> and <h1> (opened by jerub)
    defect          lore       http://twistedmatrix.com/trac/ticket/2418

[#2419] t.i.fdesc improvements (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2419

[#2420] os.kill in twisted.internet.process has no error handling (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/2420

[#2422] UnixSFTPFile os.write/os.read doesn't handle EINTR (opened by itamarst)
    defect          conch      http://twistedmatrix.com/trac/ticket/2422

[#2424] task.LoopingCall: a problem if change the system time (opened by rfg007)
    defect          core       http://twistedmatrix.com/trac/ticket/2424

                    ===== Low =====
[#2416] Move randomize logic from Loader to Runner (opened by jml)
    task            trial      http://twistedmatrix.com/trac/ticket/2416



Closed Bugs
______________________
                    ===== Highest =====
[#2413] Remove direct reactor usage from twisted.conch.insults.window.TopWindow to make it more easily testable (opened by exarkun, closed by exarkun, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/2413

[#867 ] Improvements to logging timestamp (opened by itamarst, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/867

[#2211] non-script files should not have shebang lines or be executable (opened by thomasvs, closed by therve, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2211

[#2323] support deque in objgrep (opened by glyph, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2323

                    ===== High =====
[#2423] ImportError on Nevow in pydoctor (opened by peterbe, closed by mwh, wontfix)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2423

                    ===== Normal =====
[#2417] cannot import name page from nevow (0.9.0) (opened by kumar303, closed by mwh, wontfix)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2417





From garyjefferson123 at gmail.com  Mon Jan 29 16:21:42 2007
From: garyjefferson123 at gmail.com (gary jefferson)
Date: Mon, 29 Jan 2007 16:21:42 -0700
Subject: [Twisted-Python] Re: Passing extra arguments to twistd?
Message-ID: <62ad745a0701291521h42d57af3x212231602ea130d7@mail.gmail.com>

It's been a while since this was discussed on the list, but I also
have a use-case where extra args to twistd would be far more useful
than any other option.  I'm doing a little p2p thing (which I'm sure
is not all that uncommon), and of course I want to test aggregate
behavior of many instances, so I instantiate 100 or so on my own box.
Not being able to pass in extra args to twistd makes this obviously
painful, as it adds the extra step of creating a bunch of
configuration or a hoard of different tac files, whereas I can spit
out a simple script that spawns instances with much more ease and
elegance.

Just something to chew on as you all think about adding such a feature
to twistd.

Gary


> On Fri, 9 Jun 2006 23:03:06 +0200, Terry Jones <terry at jon.es> wrote:
>> ...
>>Something like allowing
>>
>>  $ twistd -twistedopts file -- extra args here...
>>
>>would be nice. Or is there a better way to do this?
>
>.tac files _are_ configuration, so they don't _take_ configuration.  You
>should have so little code in your .tac file that it is neither burdensome
>nor distasteful to make a copy and change bits of it to meet particular
>configuration requirements.
>
>On the other hand, .tac files are far from the final word on configuration.
>They're just the last word Twisted has put in so far ;)  No doubt we'll see
>something better added at some future date.



From radix at twistedmatrix.com  Mon Jan 29 16:30:09 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 29 Jan 2007 18:30:09 -0500
Subject: [Twisted-Python] Re: Passing extra arguments to twistd?
In-Reply-To: <62ad745a0701291521h42d57af3x212231602ea130d7@mail.gmail.com>
References: <62ad745a0701291521h42d57af3x212231602ea130d7@mail.gmail.com>
Message-ID: <60ed19d40701291530t24953c14ra53cc9356323ae18@mail.gmail.com>

On 1/29/07, gary jefferson <garyjefferson123 at gmail.com> wrote:
> It's been a while since this was discussed on the list, but I also
> have a use-case where extra args to twistd would be far more useful
> than any other option.  I'm doing a little p2p thing (which I'm sure
> is not all that uncommon), and of course I want to test aggregate
> behavior of many instances, so I instantiate 100 or so on my own box.
> Not being able to pass in extra args to twistd makes this obviously
> painful, as it adds the extra step of creating a bunch of
> configuration or a hoard of different tac files, whereas I can spit
> out a simple script that spawns instances with much more ease and
> elegance.
>
> Just something to chew on as you all think about adding such a feature
> to twistd.

See the following:

  http://twistedmatrix.com/projects/core/documentation/howto/tap.html

And *maybe* the following

  http://twistedmatrix.com/trac/ticket/1490


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From garyjefferson123 at gmail.com  Tue Jan 30 09:43:22 2007
From: garyjefferson123 at gmail.com (gary jefferson)
Date: Tue, 30 Jan 2007 09:43:22 -0700
Subject: [Twisted-Python] Re: Passing extra arguments to twistd?
Message-ID: <62ad745a0701300843k385f0daidc6e251c983afb2c@mail.gmail.com>

On 1/29/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> See the following:
>
>  http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
> And *maybe* the following
>
>  http://twistedmatrix.com/trac/ticket/1490


Very cool, I like the idea of the run plugin.  Until that's ready, I
think I'll settle on the next easiest thing, which is just using ENV
variables to "pass in" args to each twistd process (which is easily
scripted).

Gary



From corydodt+hello at gmail.com  Tue Jan 30 09:50:30 2007
From: corydodt+hello at gmail.com (Cory Dodt)
Date: Tue, 30 Jan 2007 08:50:30 -0800
Subject: [Twisted-Python] Re: Passing extra arguments to twistd?
In-Reply-To: <62ad745a0701300843k385f0daidc6e251c983afb2c@mail.gmail.com>
References: <62ad745a0701300843k385f0daidc6e251c983afb2c@mail.gmail.com>
Message-ID: <c16a94ff0701300850r1e9083cbrb06f1c5a0329d2d9@mail.gmail.com>

Twistd plugins are available in the current release of Twisted, 2.5.

cory ~/wc/Twisted% python bin/twistd web
2007/01/30 09:50 -0700 [-] Log opened.
2007/01/30 09:50 -0700 [-] twistd 2.5.0+r19371 (c:\python24\python.exe 2.4.4)
starting up
2007/01/30 09:50 -0700 [-] reactor class: <class '
twisted.internet.selectreactor.SelectReactor'>
2007/01/30 09:50 -0700 [-] twisted.web.server.Site starting on 8080
2007/01/30 09:50 -0700 [-] Starting factory
<twisted.web.server.Siteinstance at 0x00F4A3F0>

C


On 1/30/07, gary jefferson <garyjefferson123 at gmail.com> wrote:
>
> On 1/29/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> > See the following:
> >
> >  http://twistedmatrix.com/projects/core/documentation/howto/tap.html
> >
> > And *maybe* the following
> >
> >  http://twistedmatrix.com/trac/ticket/1490
>
>
> Very cool, I like the idea of the run plugin.  Until that's ready, I
> think I'll settle on the next easiest thing, which is just using ENV
> variables to "pass in" args to each twistd process (which is easily
> scripted).
>
> Gary
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070130/1fda0da9/attachment.html>

