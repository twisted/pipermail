From trac at twistedmatrix.com  Sun Nov  2 00:05:16 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 02 Nov 2014 06:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1414908316.73.7520038844013268653@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141102/8ec61c0e/attachment.html>

From wolfgang.kde at rohdewald.de  Mon Nov  3 03:18:27 2014
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Mon, 03 Nov 2014 11:18:27 +0100
Subject: [Twisted-Python] porting twisted.spread to Python3
In-Reply-To: <20141005195829.17800.1945780271.divmod.xquotient.1155@top>
References: <4121201.VS1rzsEyV3@i5> <12076355.cZLe9KzarU@i5>
 <20141005195829.17800.1945780271.divmod.xquotient.1155@top>
Message-ID: <1863819.V4sVH8pbgI@i5>

there now is https://github.com/wrohdewald/twisted.git

branch spread-py3-7598

Not all is finished, especially utf-8 wherever Python 3
allows it, pbfailure, and handling of wired exceptions.


what should I do next to start getting this into trunk? 
Maybe

- open a ticket for porting banana
- create a branch with all commits for that
- do a pull request

I do not want to create one big patch because I think
it is helpful to have more smaller commits.


But I probably should wait with all that until 
ticket 7664 is merged.

-- 
Wolfgang


From hawkowl at atleastfornow.net  Mon Nov  3 06:43:40 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Mon, 3 Nov 2014 21:43:40 +0800
Subject: [Twisted-Python] The Path to Twisted 14.1
Message-ID: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>

Hi everyone,

To keep everyone in the loop...

Since 14.0 came out months ago, and we really should have 14.1, I think it?s time we bit the bullet and cleaned out the regressions to get it out the door. Unfortunately, all of the currently open regressions are from the new logging system (#6750, plus #7548 and #7545) Since these regressions are introduced by a new ticket, we should revert them, and get the regressions fixed before it is remerged. I?ll make a new milestone called ?New Twisted Logging? or similar so that they?re all still kept track of as a group.

The only other big thing preventing 14.1 is https://twistedmatrix.com/trac/ticket/7647 , the patch that 14.0.1/14.0.2 was released to include. The patch fixes it, but not ideally, so it needs looking at.

Once I?ve reverted those tickets and we can get #7647 refined and merged in some form, 14.1 will be out the door :)

- hawkowl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141103/cc6538f0/attachment.pgp>

From glyph at twistedmatrix.com  Mon Nov  3 20:20:52 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 4 Nov 2014 04:20:52 +0100
Subject: [Twisted-Python] porting twisted.spread to Python3
In-Reply-To: <1863819.V4sVH8pbgI@i5>
References: <4121201.VS1rzsEyV3@i5> <12076355.cZLe9KzarU@i5>
 <20141005195829.17800.1945780271.divmod.xquotient.1155@top>
 <1863819.V4sVH8pbgI@i5>
Message-ID: <9354C696-1DFC-45BC-939A-53CEEB4BFFA9@twistedmatrix.com>


> On Nov 3, 2014, at 11:18 AM, Wolfgang Rohdewald <wolfgang.kde at rohdewald.de> wrote:
> 
> there now is https://github.com/wrohdewald/twisted.git
> 
> branch spread-py3-7598
> 
> Not all is finished, especially utf-8 wherever Python 3
> allows it, pbfailure, and handling of wired exceptions.
> 
> 
> what should I do next to start getting this into trunk? 
> Maybe
> 
> - open a ticket for porting banana
> - create a branch with all commits for that

Yep, this is right.  Creating a patch and attaching it to the ticket would also be useful.

> - do a pull request

Opening a pull request is not a particularly useful part of this workflow :-).  The ticket is sufficient.  See <https://github.com/twisted/twisted/pull/46> or any pull request closed recently for more information.

> I do not want to create one big patch because I think
> it is helpful to have more smaller commits.


> But I probably should wait with all that until ticket 7664 is merged.

I should note that this is already in review.  Anyone want to have a look?

-g
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141104/4d0c6fb6/attachment.bin>

From glyph at twistedmatrix.com  Mon Nov  3 21:10:53 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 4 Nov 2014 05:10:53 +0100
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
Message-ID: <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>


> On Nov 3, 2014, at 2:43 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
> Hi everyone,
> 
> To keep everyone in the loop...

Thanks for the update!

> Since 14.0 came out months ago, and we really should have 14.1, I think it?s time we bit the bullet and cleaned out the regressions to get it out the door. Unfortunately, all of the currently open regressions are from the new logging system (#6750, plus #7548 and #7545) Since these regressions are introduced by a new ticket, we should revert them, and get the regressions fixed before it is remerged. I?ll make a new milestone called ?New Twisted Logging? or similar so that they?re all still kept track of as a group.
> 
> The only other big thing preventing 14.1 is https://twistedmatrix.com/trac/ticket/7647 , the patch that 14.0.1/14.0.2 was released to include. The patch fixes it, but not ideally, so it needs looking at.
> 
> Once I?ve reverted those tickets and we can get #7647 refined and merged in some form, 14.1 will be out the door :)

I have mixed feelings about this plan.

On the one hand, this is technically the way the policy works: if there's a regression that hasn't been in a release, it's supposed to be reverted.

On the other hand, this is not the way the policy has been enforced in the past.  Particularly, we've rarely done reverts where we had to revert multiple changes which depended upon each other, where regression fixes had already been accepted onto trunk and multiple outstanding branches which had already been through review were pending.  It would be nice if we could just get the regression fixes landed.

On the gripping hand, many of these regressions have been outstanding for months, and so if we could get these fixed promptly enough, presumably we would have done that already.

In favor again of reverting is the fact that no code outside twisted.python.logger or twisted.python.log has been modified to take advantage of the new system, so we're not going to be breaking any dependencies on trunk.

My biggest concern is that this feature was big enough that it dang near broke the review process the first time.  Clearly code review wasn't sufficient to spot these regressions in the first place.  There's no reason to believe that anything but code that lives on trunk for a while is going to flush out these more complex interactions.

Delaying the revert is likely to just make things more painful.  Tempting as it is to suggest, bitter experience has taught me that trying to cram things into a release is a recipe for sadness.  So rather than asking if you could hold off, could I instead make two requests for this feature:

Can please we do reviews of the fixes to the regressions as if they were landing on trunk, and not have this revert re-open the need to review the entire (rather large) change?
If we can manage to get this feature landed again quickly after 14.1, will you have time to do a fast-following 14.2?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141104/0ec78832/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141104/0ec78832/attachment.bin>

From hawkowl at atleastfornow.net  Tue Nov  4 02:38:13 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Tue, 4 Nov 2014 17:38:13 +0800
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
Message-ID: <A1B7F520-B08A-4319-B051-CC8F62B03BFE@atleastfornow.net>


On 4 Nov 2014, at 12:10, Glyph <glyph at twistedmatrix.com> wrote:
> 
> On the gripping hand, many of these regressions have been outstanding for months, and so if we could get these fixed promptly enough, presumably we would have done that already.

This is mainly why I am in favour of this plan. They?re not small fixes, so we can?t just mop them up in a day.
> 
> Delaying the revert is likely to just make things more painful.  Tempting as it is to suggest, bitter experience has taught me that trying to cram things into a release is a recipe for sadness.

*cough* 14.0 *cough* :)

> So rather than asking if you could hold off, could I instead make two requests for this feature:
> 
> 	? Can please we do reviews of the fixes to the regressions as if they were landing on trunk, and not have this revert re-open the need to review the entire (rather large) change?

How are we going to manage this? Do we need an ?alternate? branch, which consists of #6750 + all the regression fixes, and the ?review? is making sure that all of the known regressions are fixed? Or do we remerge it as a ?private? API, maybe, so that we can still fit it mostly into our dev process? Or do we do a tubes and just spin it off into another thing of its own, then merge it when it?s finished? I?m not sure.

> 	? If we can manage to get this feature landed again quickly after 14.1, will you have time to do a fast-following 14.2?

As long as it?s not the 22nd of November or the weekend of the 7th of Dec (the former of which will be spent in a drunk stupor and the latter is my birthday), I can do it no problem.

- hawkie

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141104/7c682bbd/attachment-0001.pgp>

From glyph at twistedmatrix.com  Tue Nov  4 03:07:14 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 4 Nov 2014 11:07:14 +0100
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <A1B7F520-B08A-4319-B051-CC8F62B03BFE@atleastfornow.net>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <A1B7F520-B08A-4319-B051-CC8F62B03BFE@atleastfornow.net>
Message-ID: <ACA36E7C-218B-463F-9EB6-6105D8A861EC@twistedmatrix.com>


> On Nov 4, 2014, at 10:38 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
>> 	? Can please we do reviews of the fixes to the regressions as if they were landing on trunk, and not have this revert re-open the need to review the entire (rather large) change?
> 
> How are we going to manage this? Do we need an ?alternate? branch, which consists of #6750 + all the regression fixes, and the ?review? is making sure that all of the known regressions are fixed? Or do we remerge it as a ?private? API, maybe, so that we can still fit it mostly into our dev process? Or do we do a tubes and just spin it off into another thing of its own, then merge it when it?s finished? I?m not sure.

My idea would be to have a new 6750 branch, and have each regression branch be rebased off of that; then, each review would be merging an individual regression fix into new-6750, and finally, when they're all fixed, landing new-6750 on trunk with no new review provided all buildbots pass.

>> 	? If we can manage to get this feature landed again quickly after 14.1, will you have time to do a fast-following 14.2?
> 
> As long as it?s not the 22nd of November or the weekend of the 7th of Dec (the former of which will be spent in a drunk stupor and the latter is my birthday), I can do it no problem.

I figured you could be accommodating, but thanks a lot for confirming!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141104/d399675a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141104/d399675a/attachment.bin>

From hawkowl at atleastfornow.net  Tue Nov  4 03:14:01 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Tue, 4 Nov 2014 18:14:01 +0800
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <ACA36E7C-218B-463F-9EB6-6105D8A861EC@twistedmatrix.com>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <A1B7F520-B08A-4319-B051-CC8F62B03BFE@atleastfornow.net>
 <ACA36E7C-218B-463F-9EB6-6105D8A861EC@twistedmatrix.com>
Message-ID: <4AF27F9F-4EC1-4A16-987C-AE6B0C4CEECF@atleastfornow.net>


On 4 Nov 2014, at 18:07, Glyph <glyph at twistedmatrix.com> wrote:

> 
>> On Nov 4, 2014, at 10:38 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
>> 
>>> 	? Can please we do reviews of the fixes to the regressions as if they were landing on trunk, and not have this revert re-open the need to review the entire (rather large) change?
>> 
>> How are we going to manage this? Do we need an ?alternate? branch, which consists of #6750 + all the regression fixes, and the ?review? is making sure that all of the known regressions are fixed? Or do we remerge it as a ?private? API, maybe, so that we can still fit it mostly into our dev process? Or do we do a tubes and just spin it off into another thing of its own, then merge it when it?s finished? I?m not sure.
> 
> My idea would be to have a new 6750 branch, and have each regression branch be rebased off of that; then, each review would be merging an individual regression fix into new-6750, and finally, when they're all fixed, landing new-6750 on trunk with no new review provided all buildbots pass.

That seems logical to me.

> 
>>> 	? If we can manage to get this feature landed again quickly after 14.1, will you have time to do a fast-following 14.2?
>> 
>> As long as it?s not the 22nd of November or the weekend of the 7th of Dec (the former of which will be spent in a drunk stupor and the latter is my birthday), I can do it no problem.
> 
> I figured you could be accommodating, but thanks a lot for confirming!


:)

-hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141104/d0c3bd66/attachment.pgp>

From itamar at itamarst.org  Tue Nov  4 11:44:02 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 04 Nov 2014 13:44:02 -0500
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
Message-ID: <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>

 

On 2014-11-03 23:10, Glyph wrote: 

> In favor again of reverting is the fact that no code outside twisted.python.logger or twisted.python.log has been modified to take advantage of the new system, so we're not going to be breaking any dependencies on trunk.

Except for the fact that Twisted trunk is unusable on Python 3. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141104/23ba207c/attachment.html>

From glyph at twistedmatrix.com  Tue Nov  4 19:54:03 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Nov 2014 03:54:03 +0100
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
Message-ID: <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>


> On Nov 4, 2014, at 7:44 PM, Itamar Turner-Trauring <itamar at itamarst.org> wrote:
> 
> On 2014-11-03 23:10, Glyph wrote:
> 
>> In favor again of reverting is the fact that no code outside twisted.python.logger or twisted.python.log has been modified to take advantage of the new system, so we're not going to be breaking any dependencies on trunk.
> Except for the fact that Twisted trunk is unusable on Python 3.
> 

I don't follow.  Are you saying that logger fixed some python 3 stuff, and by reverting it we're losing that, or that log regressed after 14.0 and logger fixed it and that by reverting it we are regressing with respect to its usability in 14.0?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141105/7c1c48af/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141105/7c1c48af/attachment.bin>

From glyph at twistedmatrix.com  Wed Nov  5 01:28:03 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Nov 2014 09:28:03 +0100
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
 <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
Message-ID: <AF07B936-273C-4640-AF30-BE9ED80BDB82@twistedmatrix.com>


> On Nov 5, 2014, at 3:54 AM, Glyph <glyph at twistedmatrix.com> wrote:
> 
>> On Nov 4, 2014, at 7:44 PM, Itamar Turner-Trauring <itamar at itamarst.org <mailto:itamar at itamarst.org>> wrote:
>> 
>> On 2014-11-03 23:10, Glyph wrote:
>> 
>>> In favor again of reverting is the fact that no code outside twisted.python.logger or twisted.python.log has been modified to take advantage of the new system, so we're not going to be breaking any dependencies on trunk.
>> Except for the fact that Twisted trunk is unusable on Python 3.
>> 
> 
> I don't follow.  Are you saying that logger fixed some python 3 stuff, and by reverting it we're losing that, or that log regressed after 14.0 and logger fixed it and that by reverting it we are regressing with respect to its usability in 14.0?

On second thought, a more appropriate question:

What's the link to the ticket? :)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141105/431df273/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141105/431df273/attachment.bin>

From johnaherne at rocs.co.uk  Wed Nov  5 03:54:38 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 5 Nov 2014 10:54:38 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHjYVVPBw8QNNjxbaPKr9a0Kj4yBUgy65jZJP_5KQfu3oBA@mail.gmail.com>

Apologies in advance for the rather basic questions I have here, but I am a
bit stuck.

I am looking at ssl with twisted 14.0.0

I have loaded all the dependencies crypto, pycrypto, service_identity, six,
idna, cffi, pyasn1, pyopenssl 0.14, openssl 1.0.1g

I am running this on windows7, windows 2008r2

I have read through Using TLS in Twisted several times but still find
myself not sure as to what I should do.

I need both server and client set up.

I have a server end where I have a GoDaddy certificate and certificate
chain. So on the server end I need to pass to ssl.CertificateOptions the
privatekey and certificate.

I also need to pass in the location of the GoDaddy bundle.

I have a set up using Cherrypy and this now works fine. But I need it
working with Twisted.


Now this is where I am not so clear. Should I pass the bundle as TrustRoot
or as extraCertChain.

The docs seem to say that on Windows there is no cert store to be used as
trustRoot.

If anyone can throw some light on this I would be very grateful.

For the client using Twisted.web.Agent, I need to verify a different ssl
certificate on another server system I connect to.

At the moment, I can connect without verifying the certificate, but these
days that is no longer acceptable.

So I try the example in the docs for checking a certificate but it fails on
all examples, including www.twistedmatrix.com. I assume this is because I
do not have a default set of certificates in a store to check against.

If I use the requests package I can get it to verify or not the server
certificate,  but when I turn to twisted it is not clear what I should be
doing.

The example specifies an 'authority' public.pem for the client to check
against.

So should I be looking for the way requests works where I do not specify an
authority  and it works by finding a bunch of certs somewhere.

Or do I pass in a cert that is specific to the server I am connecting to
and it will only check against that. This seems more specific and more
secure.


A final point. I need to be able to confirm which version of openssl I am
connecting with. Is there a way to pin down which version pyopenssl is
finding.


Thanks for any information and pointers.





-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141105/b8459aff/attachment-0001.html>

From itamar at itamarst.org  Wed Nov  5 16:57:37 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 05 Nov 2014 18:57:37 -0500
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
 <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
Message-ID: <545AB971.2030708@itamarst.org>

On 11/04/2014 09:54 PM, Glyph wrote:
>
>
> I don't follow.  Are you saying that logger fixed some python 3 stuff, 
> and by reverting it we're losing that, or that log regressed after 
> 14.0 and logger fixed it and that by reverting it we are regressing 
> with respect to its usability in 14.0?
>
Logger broke installation on Python 3; Twisted trunk is unusable on 
Python 3 because of logger. It's a breakage that can be easily fixed 
(one of the modules isn't on the list of things to be installed) but 
it's incorrect to say that logger didn't break existing code.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141105/d412ec4d/attachment.html>

From itamar at itamarst.org  Wed Nov  5 17:25:05 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 05 Nov 2014 19:25:05 -0500
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <545AB971.2030708@itamarst.org>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
 <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
 <545AB971.2030708@itamarst.org>
Message-ID: <545ABFE1.3090904@itamarst.org>

http://twistedmatrix.com/trac/ticket/7563


From exarkun at twistedmatrix.com  Wed Nov  5 18:03:56 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 06 Nov 2014 01:03:56 -0000
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <545AB971.2030708@itamarst.org>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
 <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
 <545AB971.2030708@itamarst.org>
Message-ID: <20141106010356.5924.264490254.divmod.xquotient.13@top>




On 5 Nov, 11:57 pm, itamar at itamarst.org wrote:
>On 11/04/2014 09:54 PM, Glyph wrote:
>>
>>
>>I don't follow.  Are you saying that logger fixed some python 3 stuff, 
>>and by reverting it we're losing that, or that log regressed after 
>>14.0 and logger fixed it and that by reverting it we are regressing 
>>with respect to its usability in 14.0?
>Logger broke installation on Python 3; Twisted trunk is unusable on 
>Python 3 because of logger. It's a breakage that can be easily fixed 
>(one of the modules isn't on the list of things to be installed) but 
>it's incorrect to say that logger didn't break existing code.

This sub-thread seems to be based on a misreading/misunderstanding of an 
earlier statement.  This one, I think:
>In favor again of reverting is the fact that no code outside 
>twisted.python.logger or twisted.python.log has been modified to take 
>advantage of the new system, so we're not going to be breaking any 
>dependencies on trunk.

I don't think it has been suggested that logger didn't break anything 
(in fact, clearly it broke many things - that's why it's being reverted 
;).

Instead, Glyph was just commenting that removing logger doesn't have 
particularly far-reaching consequences throughout Twisted because none 
of Twisted has been updated to use the new API instead of the old API.

Jean-Paul


From glyph at twistedmatrix.com  Thu Nov  6 12:04:42 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 6 Nov 2014 20:04:42 +0100
Subject: [Twisted-Python] twisted ssl server and client
In-Reply-To: <CAKmUHjYVVPBw8QNNjxbaPKr9a0Kj4yBUgy65jZJP_5KQfu3oBA@mail.gmail.com>
References: <CAKmUHjYVVPBw8QNNjxbaPKr9a0Kj4yBUgy65jZJP_5KQfu3oBA@mail.gmail.com>
Message-ID: <E66944DD-C500-4160-8DCB-FB902260C51D@twistedmatrix.com>

> On Nov 5, 2014, at 11:54 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

You're asking a lot of questions in your original message, so let me just focus on this one:

> The docs seem to say that on Windows there is no cert store to be used as trustRoot.
> 
> If anyone can throw some light on this I would be very grateful.

On Windows, most distributions of OpenSSL don't include a default cert store.  However, you can bundle your own certificates as OpenSSL's default trust store, put them in the correct location, and Twisted will load them; there's nothing platform-specific about that code.  That's probably your best bet, right now.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141106/4ed62d0a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141106/4ed62d0a/attachment.bin>

From johnaherne at rocs.co.uk  Fri Nov  7 06:14:10 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Fri, 7 Nov 2014 13:14:10 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHja1d3_v119Hx+j0i=zt50FcA8+NCjnPYqimmFthq+R4jw@mail.gmail.com>

Thanks for the reply.

In the end I took the examples in the docs and changed them to fit.

So I have ended up with something that seems to work.

But I wouldn't mind if someone can tell me if what I have done is miles
wrong or spot on or could do with improvement or you have missed the point
completely.

Thanks for any pointers


Below is the code with simple changes made

#!/usr/bin/env python
# Copyright (c) Twisted Matrix Laboratories.
# See LICENSE for details.

echoserv_ssl.py

import sys

from twisted.internet import reactor, ssl, protocol, task, defer
from twisted.python import log

import echoserv

log.startLogging(sys.stdout)
#certificate = ssl.PrivateCertificate.loadPEM(certData)
certificate2 =
ssl.DefaultOpenSSLContextFactory('d:\\openssl\\ibook\\ibookservernp.key',

 'd:\\openssl\\ibook\\7044921f82b7.crt')
print 'CERT2', certificate2

my_context2 = certificate2.getContext()
my_context2.load_verify_locations('d:\\openssl\\ibook\\gd_bundle-g2-g1.crt')

factory = protocol.Factory.forProtocol(echoserv.Echo)
print 'CERT OPTIONS', dir(certificate2)
reactor.listenSSL(8000, factory, certificate2)



echoserv.py

#!/usr/bin/env python

# Copyright (c) Twisted Matrix Laboratories.
# See LICENSE for details.

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor

### Protocol Implementation

# This is just about the simplest possible protocol
class Echo(Protocol):
    def dataReceived(self, data):
        """
        As soon as any data is received, write it back.
        """
        print 'MESSAGE', data
        self.transport.write(data)  #'HELLO THERE?\r\n')


def main():
    f = Factory()
    f.protocol = Echo
    reactor.listenTCP(8000, f)
    reactor.run()

if __name__ == '__main__':
    main()


-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141107/a1202f31/attachment.html>

From trac at twistedmatrix.com  Sun Nov  9 00:05:18 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 09 Nov 2014 07:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1415516718.27.1495649607994392280@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141109/f31e729a/attachment.html>

From hs at ox.cx  Sun Nov  9 03:47:39 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Sun, 09 Nov 2014 11:47:39 +0100
Subject: [Twisted-Python] twisted ssl server and client
In-Reply-To: <CAKmUHja1d3_v119Hx+j0i=zt50FcA8+NCjnPYqimmFthq+R4jw@mail.gmail.com>
References: <CAKmUHja1d3_v119Hx+j0i=zt50FcA8+NCjnPYqimmFthq+R4jw@mail.gmail.com>
Message-ID: <A0BF42BE-C144-4EFF-BBC1-4AA30A520099@ox.cx>

John,

On 7 Nov 2014, at 14:14, John Aherne wrote:

> Thanks for the reply.
>
> In the end I took the examples in the docs and changed them to fit.
>
> So I have ended up with something that seems to work.
>
> But I wouldn't mind if someone can tell me if what I have done is 
> miles
> wrong or spot on or could do with improvement or you have missed the 
> point
> completely.

I?m a bit confused as for what you?re trying to achieve.  Let me 
give you general pointers and maybe you?ll ask more specific questions 
afterwards.

I understand you want to use TLS both from a server and a client.  
Servers and clients have very different duties when it comes to TLS (and 
if you want to hear/learn more about them, you may want to take some 
time and watch my PyCon talk about it: 
https://www.youtube.com/watch?v=SBQB_yS2K4M ).

The *server* needs to make sure that its certificate chain is 
trustworthy, for that you need to load the certificate and the chain 
file you got from GoDaddy.  FWIW, you may want to use 
https://warehouse.python.org/project/pem/ for that because it takes some 
tediousness from it.

You should use some third-party application to verify you really got 
that right (don?t use the openssl CLI program, it?s confusing).

The *client* needs to verify the aforementioned certificate chain for 
its trustworthiness and whether it?s valid for the hostname you wanted 
to connect to.  In order to verify the trustworthiness, it requires a 
list of CAs it trusts.  One of them has to sign your final certificate 
in your chain file.

As glyph mentioned, loading CAs is a bit finicky and I have no 
experience on Windows unfortunately.  There is 
https://warehouse.python.org/project/wincertstore/ to extract them from 
the Windows store but I have no idea whether the output is useful with 
pyOpenSSL/Twisted.  A useful fallback is to use the bundle you get from 
https://warehouse.python.org/project/certifi/ .  If you?d like to help 
us to make this more friendly for Windows users we?d (and they!) would 
be eternally indebted. :)

It?s also worth noting, that you?re using the obsolete 
`DefaultOpenSSLContextFactory`, please use 
`twisted.internet.ssl.CertificateOptions` instead.  Is it possible, that 
you?re reading an older version of the TLS docs? Make sure to use 
http://twistedmatrix.com/documents/current/core/howto/ssl.html and also 
run Twisted 14.0.2 if you?re serious about using TLS.

Let us know if there?s something else unclear.

?h


From johnaherne at rocs.co.uk  Sun Nov  9 23:54:48 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Mon, 10 Nov 2014 06:54:48 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHjYh3C8ROZRWDgD+FS7RCqpG3GKQYZhuEc=mH8cWLBuerg@mail.gmail.com>

Hynek

Thanks for the information.

Very interesting. I was wondering how to get the mozilla cert package.

For the server I need to provide a certificate that can be verified by an
external source.

I used the requests package to test that it could verify my certificate
without knowing exactly what it was doing.

As far as I could see it verified the certificate and I then got an
external source to also connect and send information having verified the
certificate. That worked whereas before they had failed with SSL errors.

So for the server, the certificate, key and godaddy bundle seem to be
working.

I found the DefaultOpenSSLContextFactory by googling for clues as to what
to do.

I then looked up the source to see what it required. And it seemed to do
the trick.

I have seen the documentation pointing at CertificateOptions but while I
was trying to find out how I could get my godaddy bundle added in I found
DefaultOpenSSlContextFactory which was easy to add my bundle to.

It was not clear how I could do that with CertificateOptions. When I tried,
I got unknown key argument because it seemed I could pass a key argument in
but all my attempts failed.

I have twisted 14.0.0 on one machine and twisted 14.0.2 on another and I
bounce between them checking what works on one also works on the other.

I have a lot of stuff running on the machine with 14.0.0 so I was not keen
to upgrade until I had a clear idea of what I as doing.

For the client I need to connect back to the external site. I can do this
without verifying the certificate, but it would seem these days that is no
longer sufficient.

So I needed twisted.web.Agent to be able to verify the remote certificate.

Trying that and once again googling for BrowserLikeContextFactory, I find
that it has a real problem verifying hostnames. And your name features
heavily in the list of people who have looked at the problem.

I found that on windows 7 32 bit I could not get it to work. It always
returned an SSL error. So for the time being I have abandoned that and am
ignoring the problem. Just relying on finding and accepting any certificate.

I need most of all to make sure that the server side is working properly,
so your information is extremely welcome.

I shall have to look at CertificateOptions again and see what the problem
is.

I have a feeling that everything is working with SSLv3 since all the error
messages come back mentioning SSLv3. So I imagine at some point I need to
be able to specify TLS and one of its variants.

I hope I have explained a bit more clearly what I am trying to do.

Regards

-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141110/61048e40/attachment.html>

From johnaherne at rocs.co.uk  Mon Nov 10 03:32:01 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Mon, 10 Nov 2014 10:32:01 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHjbg28KDVBKBWNfq5NwVWwJ_EAxsTcxZKP2HBi_q56OGmg@mail.gmail.com>

So I am now looking at CertificateOptions in more detail.

But I am stuck trying to figure out how to add my GoDaddy cert to trustRoot.

Here is what I am doing so far to see what is happening. Bu I think I am
getting further and further from what I should be doing.

If anyone can point out what must be the obvious thing to do, GREAT!


#!/usr/bin/env python
# Copyright (c) Twisted Matrix Laboratories.
# See LICENSE for details.

import sys

from twisted.internet import reactor, ssl, protocol, task, defer
from twisted.python import log

import echoserv

log.startLogging(sys.stdout)

ctx = ssl.CertificateOptions()

certData2 = open('d:\\openssl\\ibook\\ibook2.pem', 'rb').read()
certificate2 = ssl.PrivateCertificate.loadPEM(certData2)

print 'CERT2', certificate2.options
print 'CERT2', dir(certificate2)
print 'CERT2 OPTIONS', certificate2.options()
print 'CERT2OPTS', dir(certificate2.options)
certGD = open('d:\\openssl\\ibook\\gd_bundle-g2-g1.crt', 'rb').read()
#ctx.trustRoot = ssl.Certificate.loadPEM(certGD)
certificate3  = certificate2.options(ssl.Certificate.loadPEM(certGD))
print 'cERT3', certificate3.privateKey
print 'trustRoot2TROOT', certificate3.trustRoot
#certificate2.options().trustRoot = ssl.Certificate.loadPEM(certGD)
print 'trustRoot', certificate3
print 'trustRoot2type', type(certificate3.trustRoot)
print 'trustRoot2TROOT', certificate3.trustRoot
print 'trustRoot2PK', certificate3.privateKey
print 'trustRoot2CERT', certificate3.certificate
print 'trustRoot2VER', certificate3.verify
#print 'trustRoot2', ctx.trustRoot

factory = protocol.Factory.forProtocol(echoserv.Echo)
reactor.listenSSL(8000, factory, certificate2.options(certificate3))
#reactor.listenSSL(8000, factory, certificate3)


reactor.run()


Thanks for any pointers.



-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141110/d44bfef7/attachment.html>

From hs at ox.cx  Mon Nov 10 03:48:15 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Mon, 10 Nov 2014 11:48:15 +0100
Subject: [Twisted-Python] twisted ssl server and client
In-Reply-To: <CAKmUHjbg28KDVBKBWNfq5NwVWwJ_EAxsTcxZKP2HBi_q56OGmg@mail.gmail.com>
References: <CAKmUHjbg28KDVBKBWNfq5NwVWwJ_EAxsTcxZKP2HBi_q56OGmg@mail.gmail.com>
Message-ID: <DC3EABE7-94F7-4130-9C82-8F9EB27B2ACA@ox.cx>

On 10 Nov 2014, at 11:32, John Aherne wrote:

> So I am now looking at CertificateOptions in more detail.
>
> But I am stuck trying to figure out how to add my GoDaddy cert to 
> trustRoot.

You don?t need trustRoot for servers.  You need to supply an 
extraCertChain which ? as I?ve mentioned before ? is easiest with 
the help of pem: https://github.com/hynek/pem#twisted


From johnaherne at rocs.co.uk  Mon Nov 10 05:28:25 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Mon, 10 Nov 2014 12:28:25 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHjZ+5mU8icM_=VPDSy=jA32uMtS-WDJ4fTc1P_p7Dbatjw@mail.gmail.com>

<<You don?t need trustRoot for servers.  You need to supply an
extraCertChain which ? as I?ve mentioned before ? is easiest with the help
of pem: https://github.com/hynek/pem#twisted>>

Thanks.

That link may be just what I need.

I'll see how I get on.



-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141110/07c59294/attachment.html>

From johnaherne at rocs.co.uk  Mon Nov 10 06:20:34 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Mon, 10 Nov 2014 13:20:34 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHjY+P1vK4CZ6PWiDVL0hq-JqPD8nCbWE0sP0q9BMoPSQ2w@mail.gmail.com>

Hynek

Well, thank you very much!

Put it in and tested with request package and all seems to be working.

Will test it later with the real system.

That has saved me a lot of hassle.

-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141110/b4319f17/attachment.html>

From greytiger63 at yahoo.com  Mon Nov 10 07:47:50 2014
From: greytiger63 at yahoo.com (Tracy Email)
Date: Mon, 10 Nov 2014 08:47:50 -0600
Subject: [Twisted-Python] twisted ssl server and client
In-Reply-To: <CAKmUHjY+P1vK4CZ6PWiDVL0hq-JqPD8nCbWE0sP0q9BMoPSQ2w@mail.gmail.com>
References: <CAKmUHjY+P1vK4CZ6PWiDVL0hq-JqPD8nCbWE0sP0q9BMoPSQ2w@mail.gmail.com>
Message-ID: <697A82ED-8D12-4A2F-B53A-5677896D0CD2@yahoo.com>

Do I have to sue this company? Stop sending me emails!

Sent from my iPhone

> On Nov 10, 2014, at 7:20 AM, John Aherne <johnaherne at rocs.co.uk> wrote:
> 
> Hynek
> 
> Well, thank you very much!
> 
> Put it in and tested with request package and all seems to be working.
> 
> Will test it later with the real system.
> 
> That has saved me a lot of hassle.
> 
> -- 
> John Aherne
> 
> 
> 
> www.rocs.co.uk
> 020 7223 7567
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141110/eae66301/attachment-0001.html>

From kumarvikas2605 at gmail.com  Mon Nov 10 08:07:55 2014
From: kumarvikas2605 at gmail.com (Vikas Kumar)
Date: Mon, 10 Nov 2014 20:37:55 +0530
Subject: [Twisted-Python] Manhole info needed
Message-ID: <CAP91sFXE1_6UqZ2gdif_rBJn-=P-dEK6vHycPw-T1tutsNBuHg@mail.gmail.com>

Hi,

Can somebody tell me what is the need of manhole in twisted? Specially I've
seen them in files like tap.py (twisted application process).

One usecase I've seen them is wrt ShellFactory classes:

manhole = ShellFactory()
            manhole.setService(self)

internet.TCPServer(<someservice_name>.config.dget('jsonapi.port') + 10000,
manhole, interface='127.0.0.1').setServiceParent(self)

Could somebody please tell me what is being tried to achieve over here in
the above code?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141110/84dabe1e/attachment.html>

From glyph at twistedmatrix.com  Mon Nov 10 12:46:54 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 10 Nov 2014 20:46:54 +0100
Subject: [Twisted-Python] Manhole info needed
In-Reply-To: <CAP91sFXE1_6UqZ2gdif_rBJn-=P-dEK6vHycPw-T1tutsNBuHg@mail.gmail.com>
References: <CAP91sFXE1_6UqZ2gdif_rBJn-=P-dEK6vHycPw-T1tutsNBuHg@mail.gmail.com>
Message-ID: <0A8A2BAE-4B62-4902-ADCD-DC0F8942C4CB@twistedmatrix.com>


> On Nov 10, 2014, at 4:07 PM, Vikas Kumar <kumarvikas2605 at gmail.com> wrote:
> 
> Could somebody please tell me what is being tried to achieve over here in the above code?

As with the real object of a <https://en.wikipedia.org/wiki/Manhole>, a Twisted manhole is a maintenance hatch to get into your program and see what's going on.

That code is just creating one so you can telnet in to your program from localhost and execute Python code to inspect its state.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141110/a7311779/attachment.html>

From greytiger63 at yahoo.com  Mon Nov 10 14:21:21 2014
From: greytiger63 at yahoo.com (Tracy Email)
Date: Mon, 10 Nov 2014 15:21:21 -0600
Subject: [Twisted-Python] Manhole info needed
In-Reply-To: <0A8A2BAE-4B62-4902-ADCD-DC0F8942C4CB@twistedmatrix.com>
References: <CAP91sFXE1_6UqZ2gdif_rBJn-=P-dEK6vHycPw-T1tutsNBuHg@mail.gmail.com>
 <0A8A2BAE-4B62-4902-ADCD-DC0F8942C4CB@twistedmatrix.com>
Message-ID: <FC2B46C9-6CC3-4068-92BE-14D2019D1782@yahoo.com>

By law I am requesting that you stop sending me emails from this company or I will file suit against you.

Sent from my iPhone

> On Nov 10, 2014, at 1:46 PM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Nov 10, 2014, at 4:07 PM, Vikas Kumar <kumarvikas2605 at gmail.com> wrote:
>> 
>> Could somebody please tell me what is being tried to achieve over here in the above code?
> 
> As with the real object of a <https://en.wikipedia.org/wiki/Manhole>, a Twisted manhole is a maintenance hatch to get into your program and see what's going on.
> 
> That code is just creating one so you can telnet in to your program from localhost and execute Python code to inspect its state.
> 
> -g
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141110/4a9f1c30/attachment.html>

From peter.westlake at pobox.com  Thu Nov 13 05:15:28 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 13 Nov 2014 12:15:28 +0000
Subject: [Twisted-Python] How do I debug this network problem?
Message-ID: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>

TL;DR - how do I debug the sequence of events between an AMP answer box
arriving at a NIC, and AMP firing the callRemote Deferred?

I have an application with two processes, on separate machines,
communicating using AMP. One process does a callRemote, which returns a
Deferred, which is never fired. I know from tcpdump that the AMP answer
box arrives safely at the network interface card.

This isn't something which can easily be reproduced. Instead, I want to
ask the specific question: how do I debug the data path from the NIC to
AMP firing its Deferred?

I've had a look at the code, and got rather lost amongst the interfaces
and inheritance and protocols and transports. If someone can help me
narrow down the relevant bits of code, I can put in some Python tracing.

FWIW, this is happening on Debian Squeeze and Wheezy, on VMs hosted on
Xen 6.5. It only happens on some specific machines, and only sometimes.
The same code has run flawlessly for many years elsewhere, though this
same bug did happen there too some years ago. That time, it went away
after most of the software in the system was upgraded. I tried that this
time - Debian Squeeze to Wheezy, with associated kernel, Python and
Twisted versions - but the problem persists. Anyway, I don't want to
make the problem go away without understanding it, for fear that it will
come back a third time.

Peter.


From glyph at twistedmatrix.com  Thu Nov 13 06:17:19 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 13 Nov 2014 14:17:19 +0100
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
Message-ID: <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>


> On Nov 13, 2014, at 1:15 PM, Peter Westlake <peter.westlake at pobox.com> wrote:
> 
> I've had a look at the code, and got rather lost amongst the interfaces
> and inheritance and protocols and transports. If someone can help me
> narrow down the relevant bits of code, I can put in some Python tracing.
> 

I could describe all the interfaces and inheritance and protocols and transports, but since you don't want to puzzle out all that code, presumably such a description would be overly complex :).

A good place to start would be to figure out if the data is getting to Twisted at all, which means instrumenting your Protocol.

If you've done the default thing, and just done class Something(AMP):, this means you should override dataReceived, like so:

from __future__ import print_function
from twisted.protocols.amp import AMP
class MyAMP(AMP, object):
    def dataReceived(self, data):
        print("Got some data", repr(data))
        return super(MyAMP, self).dataReceived(data)

If you're not seeing anything, that will give you an idea of whether your kernel is not actually delivering that data to Twisted.

There are, of course, a plethora of other things that could be going wrong - maybe your Twisted program is stuck in some blocking function elsewhere and the reactor loop isn't running at all, maybe you're using some policy wrapper which is buffering incorrectly... but that's a good sanity check to start with.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141113/64afb8c9/attachment.html>

From peter.westlake at pobox.com  Thu Nov 13 07:40:30 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 13 Nov 2014 14:40:30 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
Message-ID: <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>



On Thu, 13 Nov 2014, at 13:17, Glyph wrote:
>
>> On Nov 13, 2014, at 1:15 PM, Peter Westlake
>> <peter.westlake at pobox.com> wrote:
>>
>> I've had a look at the code, and got rather lost amongst the
>> interfaces and inheritance and protocols and transports. If someone
>> can help me narrow down the relevant bits of code, I can put in some
>> Python tracing.
>>
>
> I could describe all the interfaces and inheritance and protocols and
> transports, but since you don't want to puzzle out all that code,
> presumably such a description would be overly complex :).
>
> A good place to start would be to figure out if the data is getting to
> Twisted at all, which means instrumenting your Protocol.
>
> If you've done the default thing, and just done class Something(AMP):,
> this means you should override dataReceived, like so:
>
>> *from* *__future__* *import* print_function
>> *from**twisted.protocols.amp**import* AMP *class**MyAMP*(AMP,
>> object): *def* dataReceived(self, data): *print*("Got some data",
>> repr(data)) *return* super(MyAMP, self).dataReceived(data)
>
> If you're not seeing anything, that will give you an idea of whether
> your kernel is not actually delivering that data to Twisted.
>
> There are, of course, a plethora of other things that could be going
> wrong - maybe your Twisted program is stuck in some blocking function
> elsewhere and the reactor loop isn't running at all, maybe you're
> using some policy wrapper which is buffering incorrectly... but that's
> a good sanity check to start with.
>

I'm certainly not averse to understanding the code, and if you had time
to describe it, that would be very kind, thank you!

I've put in the dataReceived, and the answer box does *not* make it into
the Protocol. There are two entries in protocol._outstandingRequests:
{'2189': <Deferred...>, '2188': <Deferred...>} and the log output shows
2186, 2187, 218a, 218b, ...

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141113/01fd6de4/attachment.html>

From gavin at gromper.net  Thu Nov 13 07:57:40 2014
From: gavin at gromper.net (Gavin Panella)
Date: Thu, 13 Nov 2014 14:57:40 +0000
Subject: [Twisted-Python] Sending longer messages in AMP
Message-ID: <CALL7chnBJR9oz4PDi5GkD-7hTtFSsz2Y0085T6qaoJ0AfKkNMg@mail.gmail.com>

Hi,

We're using AMP and are starting to hit TooLong errors when scaling
our application. In one respect it's a sign that we should do
something like paging large requests and responses, but that's a lot
more work, and comes with its own problems. We also don't need
particularly large payloads: right now, a limit of ~500kiB would allow
us to scale as far as we need and beyond.

I've put together a fork of Twisted's AMP implementation that uses
32-bit length prefixes everywhere, though it limits the maximum
message size to 2MiB. Every other aspect of it is the same so it's a
drop-in replacement, as long as both ends of a connection use it.
However, there's no negotiation phase so it's completely incompatible
on the wire. The overhead of a few extra bytes is negligible for our
use cases, where the networks are all assumed to be low-latency
high-bandwidth LANs.

Are there any reasons that we shouldn't be doing this? Was there a
good reason for 16-bit length prefixes that still holds? Should we be
doing something else?

If I assume that the answers are all no, would someone find this
protocol useful if we submitted it for inclusion in Twisted itself?
The code right now is a straight copy of amp.py and test_amp.py with
changes to 32-bit length prefixes everywhere, but for upstreaming we'd
probably propose instead to modify the original to have an optional
negotiation phase, and to make the maximum message size a parameter.

Thanks!

Gavin.


From glyph at twistedmatrix.com  Thu Nov 13 09:23:15 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 13 Nov 2014 17:23:15 +0100
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
Message-ID: <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>

> On Nov 13, 2014, at 3:40 PM, Peter Westlake <peter.westlake at pobox.com> wrote:
> 
> I'm certainly not averse to understanding the code, and if you had time to describe it, that would be very kind, thank you!

Well if it's not even hitting dataReceived then a more subtle exploration is not necessary! ;-)

> I've put in the dataReceived, and the answer box does not make it into the Protocol. There are two entries in protocol._outstandingRequests: {'2189': <Deferred...>, '2188': <Deferred...>} and the log output shows 2186, 2187, 218a, 218b, ...

So, wait a second.

You said you're looking at tcpdump, and it's showing you that your outstanding requests - in this case, 2188 and 2189 - are in fact being answered. But then you say you're looking at the dump from dataReceived, and seeing that not only are 2188 and 2189 not being answered from that layer, but 218a and 218b are being answered?

Simply put: that should be impossible.  TCP is an ordered stream.  If you received answers to 2188 and 2189 on the wire in tcpdump, you should see those come back to dataReceived first.  What kind of transport is this hooked up to?  A regular socket?  Is there TLS involved?  Did you run tcpdump for that same session?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141113/285ffe3c/attachment-0001.html>

From twisted-python at 2xlp.com  Thu Nov 13 09:56:04 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Thu, 13 Nov 2014 11:56:04 -0500
Subject: [Twisted-Python] is it possible to change the isolation level of a
	psycopg2 connection under enterprise.adbapi ?
Message-ID: <0B68D519-F1B8-4A12-B63A-180B6587A39E@2xlp.com>

there doesn't seem to be a way to access the connection objects within the pool ( psycopg2 manages this via `connection.set_isolation_level(X)`

the only workaround I can think of seems to be emitting raw sql when I first start the transaction - but this doesn't seem right.

am i missing anything?

From peter.westlake at pobox.com  Thu Nov 13 10:01:46 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 13 Nov 2014 17:01:46 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
Message-ID: <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>



>> I've put in the dataReceived, and the answer box does*not*make it
>> into the Protocol. There are two entries in
>> protocol._outstandingRequests: {'2189': <Deferred...>, '2188':
>> <Deferred...>} and the log output shows 2186, 2187, 218a, 218b, ...
>
> So, wait a second.
>
> You said you're looking at tcpdump, and it's showing you that your
> outstanding requests - in this case, 2188 and 2189 - are in fact being
> answered. But then you say you're looking at the dump from
> dataReceived, and seeing that not only are 2188 and 2189 not being
> answered from that layer, but 218a and 218b *are* being answered?
>
> Simply put: that should be impossible. TCP is an ordered stream. If
> you received answers to 2188 and 2189 on the wire in tcpdump, you
> should see those come back to dataReceived first. What kind of
> transport is this hooked up to? A regular socket? Is there TLS
> involved? Did you run tcpdump for that same session?

No TLS, just TCP, created with
twisted.application.internet.TCPClient(host, port, protocolfactory).

I didn't record this session with tcpdump, but from a previous one I can
say that yes, some Deferreds are left hanging around waiting for a
response while subsequent ones have already received one. There was no
interruption or irregularity in the TCP stream.

tcpdump: 2186, 2187, 2188, 2189, 218a, 218b

dataReceived: 2186, 2187, 218a, 218b

_outstandingRequests: {2188, 2189}

So as you say, TCP must have delivered the data to someone, or at least
believe it has. How much code is there between there and dataReceived? I
imagine most of it is in the kernel?

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141113/b3770ca2/attachment.html>

From exarkun at twistedmatrix.com  Thu Nov 13 11:19:20 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 13 Nov 2014 18:19:20 -0000
Subject: [Twisted-Python] Sending longer messages in AMP
In-Reply-To: <CALL7chnBJR9oz4PDi5GkD-7hTtFSsz2Y0085T6qaoJ0AfKkNMg@mail.gmail.com>
References: <CALL7chnBJR9oz4PDi5GkD-7hTtFSsz2Y0085T6qaoJ0AfKkNMg@mail.gmail.com>
Message-ID: <20141113181920.5924.1200765606.divmod.xquotient.45@top>

On 02:57 pm, gavin at gromper.net wrote:
>Hi,
>
>We're using AMP and are starting to hit TooLong errors when scaling
>our application. In one respect it's a sign that we should do
>something like paging large requests and responses, but that's a lot
>more work, and comes with its own problems. We also don't need
>particularly large payloads: right now, a limit of ~500kiB would allow
>us to scale as far as we need and beyond.
>
>I've put together a fork of Twisted's AMP implementation that uses
>32-bit length prefixes everywhere, though it limits the maximum
>message size to 2MiB. Every other aspect of it is the same so it's a
>drop-in replacement, as long as both ends of a connection use it.
>However, there's no negotiation phase so it's completely incompatible
>on the wire. The overhead of a few extra bytes is negligible for our
>use cases, where the networks are all assumed to be low-latency
>high-bandwidth LANs.
>
>Are there any reasons that we shouldn't be doing this? Was there a
>good reason for 16-bit length prefixes that still holds? Should we be
>doing something else?

The short length limit is in place to encourage two things:

  * messages that can be processed in a cooperative-multitasking-friendly 
way

  * the AMP channel can reliably used to multiplex multiple operations

The limit encourages the former by limiting the total amount of data 
it's possible to receive in a single command.  Of course, you can still 
do ridiculously complicated work based on a small bit of data so this 
doesn't guarantee that no matter what you do you'll be safe.  But doing 
even something simple on a ridiculously large amount of data is probably 
guaranteed to take a while.

The limit encourages the latter by putting a limit on the data that 
needs to be transferred to complete any one command (or answer).  Again, 
this isn't a guarantee of safety (you could always have a `for i in 
range(1e10): callRemote(...)` loop and clog up the channel for ages) but 
it pushes things a bit more in that direction.

At ClusterHQ we *also* maintained a fork of AMP with this limit raised. 
Basically, it worked.  It did let us get into the kind of trouble that 
the limit was supposed to try to avoid (in particular it let us send 
around messages that would take longer and longer to be processed - in a 
system where keeping latency down was actually sort of important; 
fortunately we had *worse* problems introducing latency so this in 
particular never bit us too hard ;).
>If I assume that the answers are all no, would someone find this
>protocol useful if we submitted it for inclusion in Twisted itself?

There are better solutions to the problem.  The trouble is that they're 
also more work to implement. ;)  I think Twisted should hold out for the 
better solutions though, not adopt a like-AMP-but-with-different-hard- 
coded-limits solution.

What are the better solutions?  Library support for paging, basically. 
Or, to consider things more generally, library support for streaming. 
The AMP implementation in Twisted (note, not the *protocol*) should be 
extended to make it easy to pass arbitrarily large streams of data 
around - suitably broken into smaller pieces at the box level.

As of right now, the way I'd do that is by introducing a new argument 
type (or two) supporting `IProducer` and `IConsumer`.  Pass in an 
`IProducer` and the library will take the necessary steps to read data 
out of it, chunk it up into <=16kB chunks, and re-assemble them on the 
receiving side (as another `IProducer`).

There are two reasons I'm not working on this right now (apart from the 
standard reasons of not having time to do so ;):

  1) IProducer / IConsumer aren't amenable to this kind of decoupling. 
You can register a producer with a consumer but you can't register a 
consumer with a producer.  By the time you give the IProducer to AMP, 
it's too late to tell it you want it to send its data into the AMP 
implementation for the necessary handling.  We worked around this in 
twisted.web.client.Agent by introducing a new IProducer-like interface. 
It solves the basic problem but it doesn't go any further to improve the 
usability of the interfaces.

  2) Tubes.  Glyph is working on a replacement for IProducer/IConsumer 
that does go a lot further to improve usability.  With this promise of a 
bright, prosperous future looming, it's hard to get excited about 
implementing for AMP a just-barely-good-enough solution like the one 
used by Agent (in particular, with the knowledge that the tubes solution 
will be API incompatible and we'll most likely want to deprecate the 
IProducer/IConsumer thing).

Jean-Paul
>The code right now is a straight copy of amp.py and test_amp.py with
>changes to 32-bit length prefixes everywhere, but for upstreaming we'd
>probably propose instead to modify the original to have an optional
>negotiation phase, and to make the maximum message size a parameter.
>
>Thanks!
>
>Gavin.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Thu Nov 13 11:24:56 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 13 Nov 2014 18:24:56 -0000
Subject: [Twisted-Python] is it possible to change the isolation level
 of a psycopg2 connection under enterprise.adbapi ?
In-Reply-To: <0B68D519-F1B8-4A12-B63A-180B6587A39E@2xlp.com>
References: <0B68D519-F1B8-4A12-B63A-180B6587A39E@2xlp.com>
Message-ID: <20141113182456.5924.624205883.divmod.xquotient.52@top>

On 04:56 pm, twisted-python at 2xlp.com wrote:
>there doesn't seem to be a way to access the connection objects within 
>the pool ( psycopg2 manages this via 
>`connection.set_isolation_level(X)`

Basically.  There is a trick to work around this, invent your own DB-API 
2.0 wrapper around psycopg2 that is a pass-through except that it makes 
this `connection` object call before it gives back a new connection.

You might want to look at twextpy's adbapi2. It provides an interface 
slightly more amenable to customizations like this one. Off the top of 
my head, I don't know if it supports psycopg2 (but I know it supports 
postgresql somehow).

Jean-Paul
>the only workaround I can think of seems to be emitting raw sql when I 
>first start the transaction - but this doesn't seem right.
>
>am i missing anything?
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From gavin at gromper.net  Fri Nov 14 04:59:02 2014
From: gavin at gromper.net (Gavin Panella)
Date: Fri, 14 Nov 2014 11:59:02 +0000
Subject: [Twisted-Python] Sending longer messages in AMP
In-Reply-To: <20141113181920.5924.1200765606.divmod.xquotient.45@top>
References: <CALL7chnBJR9oz4PDi5GkD-7hTtFSsz2Y0085T6qaoJ0AfKkNMg@mail.gmail.com>
 <20141113181920.5924.1200765606.divmod.xquotient.45@top>
Message-ID: <CALL7chkXB-b+5kiZt0ocU+beaaxr35zxejhtrodYjTdkMfvMcg@mail.gmail.com>

On 13 November 2014 18:19,  <exarkun at twistedmatrix.com> wrote:
> On 02:57 pm, gavin at gromper.net wrote:
>>
>> Hi,
>>
>> We're using AMP and are starting to hit TooLong errors when scaling
>> our application. In one respect it's a sign that we should do
>> something like paging large requests and responses, but that's a lot
>> more work, and comes with its own problems. We also don't need
>> particularly large payloads: right now, a limit of ~500kiB would
>> allow us to scale as far as we need and beyond.
>>
>> I've put together a fork of Twisted's AMP implementation that uses
>> 32-bit length prefixes everywhere, though it limits the maximum
>> message size to 2MiB. Every other aspect of it is the same so it's a
>> drop-in replacement, as long as both ends of a connection use it.
>> However, there's no negotiation phase so it's completely incompatible
>> on the wire. The overhead of a few extra bytes is negligible for our
>> use cases, where the networks are all assumed to be low-latency
>> high-bandwidth LANs.
>>
>> Are there any reasons that we shouldn't be doing this? Was there a
>> good reason for 16-bit length prefixes that still holds? Should we be
>> doing something else?
>
>
> The short length limit is in place to encourage two things:
>
>  * messages that can be processed in a
>    cooperative-multitasking-friendly way
>
>  * the AMP channel can reliably used to multiplex multiple operations
>
> The limit encourages the former by limiting the total amount of data
> it's possible to receive in a single command. Of course, you can still
> do ridiculously complicated work based on a small bit of data so this
> doesn't guarantee that no matter what you do you'll be safe. But doing
> even something simple on a ridiculously large amount of data is
> probably guaranteed to take a while.
>
> The limit encourages the latter by putting a limit on the data that
> needs to be transferred to complete any one command (or answer).
> Again, this isn't a guarantee of safety (you could always have a `for
> i in range(1e10): callRemote(...)` loop and clog up the channel for
> ages) but it pushes things a bit more in that direction.
>
> At ClusterHQ we *also* maintained a fork of AMP with this limit
> raised. Basically, it worked. It did let us get into the kind of
> trouble that the limit was supposed to try to avoid (in particular it
> let us send around messages that would take longer and longer to be
> processed - in a system where keeping latency down was actually sort
> of important; fortunately we had *worse* problems introducing latency
> so this in particular never bit us too hard ;).
>>
>> If I assume that the answers are all no, would someone find this
>> protocol useful if we submitted it for inclusion in Twisted itself?
>
> There are better solutions to the problem. The trouble is that they're
> also more work to implement. ;) I think Twisted should hold out for
> the better solutions though, not adopt a like-AMP-but-with-different-
> hard-coded-limits solution.
>
> What are the better solutions? Library support for paging, basically.
> Or, to consider things more generally, library support for streaming.
> The AMP implementation in Twisted (note, not the *protocol*) should be
> extended to make it easy to pass arbitrarily large streams of data
> around - suitably broken into smaller pieces at the box level.
>
> As of right now, the way I'd do that is by introducing a new argument
> type (or two) supporting `IProducer` and `IConsumer`. Pass in an
> `IProducer` and the library will take the necessary steps to read data
> out of it, chunk it up into <=16kB chunks, and re-assemble them on the
> receiving side (as another `IProducer`).
>
> There are two reasons I'm not working on this right now (apart from
> the standard reasons of not having time to do so ;):
>
>  1) IProducer / IConsumer aren't amenable to this kind of decoupling.
> You can register a producer with a consumer but you can't register a
> consumer with a producer. By the time you give the IProducer to AMP,
> it's too late to tell it you want it to send its data into the AMP
> implementation for the necessary handling. We worked around this in
> twisted.web.client.Agent by introducing a new IProducer-like
> interface. It solves the basic problem but it doesn't go any further
> to improve the usability of the interfaces.
>
>  2) Tubes. Glyph is working on a replacement for IProducer/IConsumer
> that does go a lot further to improve usability. With this promise of
> a bright, prosperous future looming, it's hard to get excited about
> implementing for AMP a just-barely-good-enough solution like the one
> used by Agent (in particular, with the knowledge that the tubes
> solution will be API incompatible and we'll most likely want to
> deprecate the IProducer/IConsumer thing).

Thank you for such a comprehensive reply. It's really helped.

As a result we're going to stick with the 16-bit AMP, by changing the
calls we're making. In one particular case we'll change our code to
regularly (with a throttle) fetch small batches from a priority queue
instead of getting all-the-things periodically. That'll avoid the need
to switch to 32-bit AMP, and will also be good for the responsiveness of
the overall application.

The Tubes stuff is interesting. As that matures we may look at doing the
work to bring Tubes and AMP together.

Gavin.


From peter.westlake at pobox.com  Fri Nov 14 10:38:38 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 14 Nov 2014 17:38:38 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
Message-ID: <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>


On Thu, 13 Nov 2014, at 17:01, Peter Westlake wrote:
>
>>> I've put in the dataReceived, and the answer box does*not*make it
>>> into the Protocol. There are two entries in
>>> protocol._outstandingRequests: {'2189': <Deferred...>, '2188':
>>> <Deferred...>} and the log output shows 2186, 2187, 218a, 218b, ...
>>
>> So, wait a second.
>>
>> You said you're looking at tcpdump, and it's showing you that your
>> outstanding requests - in this case, 2188 and 2189 - are in fact
>> being answered. But then you say you're looking at the dump from
>> dataReceived, and seeing that not only are 2188 and 2189 not being
>> answered from that layer, but 218a and 218b *are* being answered?
>>
>> Simply put: that should be impossible. TCP is an ordered stream. If
>> you received answers to 2188 and 2189 on the wire in tcpdump, you
>> should see those come back to dataReceived first. What kind of
>> transport is this hooked up to? A regular socket? Is there TLS
>> involved? Did you run tcpdump for that same session?
>
> No TLS, just TCP, created with
> twisted.application.internet.TCPClient(host, port, protocolfactory).
>
> I didn't record this session with tcpdump, but from a previous one I
> can say that yes, some Deferreds are left hanging around waiting for a
> response while subsequent ones have already received one. There was no
> interruption or irregularity in the TCP stream.
>
> tcpdump: 2186, 2187, 2188, 2189, 218a, 218b
>
> dataReceived: 2186, 2187, 218a, 218b
>
> _outstandingRequests: {2188, 2189}

Here is some highly suspicious-looking output from strace:

sendto(5, "\0\4_ask\0\004867c\0\10_command\0\tLogOutpu"..., 343, 0,
NULL, 0) = 343 recvfrom(5,
"\0\7_answer\0\004867c\0\6status\0\4True\0\0", 65536, 0, NULL, NULL) =
31 sendto(5, "\0\4_ask\0\004867d\0\10_command\0\tLogOutpu"..., 183, 0,
NULL, 0) = 183 sendto(5, "\0\4_ask\0\004867e\0\10_command\0\4Ping\0\0",
30, 0, NULL, 0) = 30 recvfrom(5, 0x7fec3005c6d4, 65536, 0, 0, 0) = -1
EAGAIN (Resource temporarily unavailable) sendto(5,
"\0\4_ask\0\004867f\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0) = 30
recvfrom(5, "\0\7_answer\0\004867f\0\3ack\0\4True\0\0", 65536, 0, NULL,
NULL) = 28

Requests 867d and 867e never receive their callbacks.

I see that twisted.internet.tcp.Connection.doRead() does check for
EWOULDBLOCK (=EAGAIN), and returns None. Shouldn't it try to read again?

Peter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141114/1e2997e3/attachment.html>

From exarkun at twistedmatrix.com  Fri Nov 14 13:36:07 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 14 Nov 2014 20:36:07 -0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
Message-ID: <20141114203607.13007.153683668.divmod.xquotient.8@top>

On 05:38 pm, peter.westlake at pobox.com wrote:
>
>Here is some highly suspicious-looking output from strace:
>
>sendto(5, "\0\4_ask\0\004867c\0\10_command\0\tLogOutpu"..., 343, 0,
>NULL, 0) = 343 recvfrom(5,
>"\0\7_answer\0\004867c\0\6status\0\4True\0\0", 65536, 0, NULL, NULL) =
>31 sendto(5, "\0\4_ask\0\004867d\0\10_command\0\tLogOutpu"..., 183, 0,
>NULL, 0) = 183 sendto(5, "\0\4_ask\0\004867e\0\10_command\0\4Ping\0\0",
>30, 0, NULL, 0) = 30 recvfrom(5, 0x7fec3005c6d4, 65536, 0, 0, 0) = -1
>EAGAIN (Resource temporarily unavailable) sendto(5,
>"\0\4_ask\0\004867f\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0) = 30
>recvfrom(5, "\0\7_answer\0\004867f\0\3ack\0\4True\0\0", 65536, 0, NULL,
>NULL) = 28
>
>Requests 867d and 867e never receive their callbacks.

But in this trace, it looks like those two calls also never received a 
response from the server - so it's correct that the callbacks never 
fire.

Keep in mind this is a totally valid AMP interaction.  The reason these 
things have unique identifiers is so responses can arrive out of order.

Earlier you mentioned you saw tcpdump reporting that the response data 
corresponding to the unfired Deferreds was arriving.  Can you double 
check that?  From this `strace` output I would guess that it isn't.  The 
alternative explanation is a terrible, data-losing bug in the kernel's 
TCP stack...
>I see that twisted.internet.tcp.Connection.doRead() does check for
>EWOULDBLOCK (=EAGAIN), and returns None. Shouldn't it try to read 
>again?

It will try again - later, when select or epoll or whatever tells it 
that there's a better chance of some data coming out.

Jean-Paul


From peter.westlake at pobox.com  Fri Nov 14 18:27:45 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Sat, 15 Nov 2014 01:27:45 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <20141114203607.13007.153683668.divmod.xquotient.8@top>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
Message-ID: <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>


On Fri, 14 Nov 2014, at 20:36, exarkun at twistedmatrix.com wrote:
> On 05:38 pm, peter.westlake at pobox.com wrote:
> >
> >Here is some highly suspicious-looking output from strace:
> >
> >sendto(5, "\0\4_ask\0\004867c\0\10_command\0\tLogOutpu"..., 343, 0,
> >NULL, 0) = 343 recvfrom(5, >
> >>"\0\7_answer\0\004867c\0\6status\0\4True\0\0", 65536, 0, NULL, NULL)
> >=31 sendto(5, "\0\4_ask\0\004867d\0\10_command\0\tLogOutpu"..., 183,
> >0, NULL, 0) = 183 sendto(5,
> >"\0\4_ask\0\004867e\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0) = 30
> >recvfrom(5, 0x7fec3005c6d4, 65536, 0, 0, 0) = -1 EAGAIN (Resource
> >temporarily unavailable) sendto(5,
> >"\0\4_ask\0\004867f\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0) = 30
> >recvfrom(5, "\0\7_answer\0\004867f\0\3ack\0\4True\0\0", 65536, 0,
> >NULL, NULL) = 28
> >
> >Requests 867d and 867e never receive their callbacks.
>
> But in this trace, it looks like those two calls also never received
> a response from the server - so it's correct that the callbacks
> never fire.
>
> Keep in mind this is a totally valid AMP interaction. The reason
> these things have unique identifiers is so responses can arrive out
> of order.
>
> Earlier you mentioned you saw tcpdump reporting that the response data
> corresponding to the unfired Deferreds was arriving. Can you double
> check that? From this `strace` output I would guess that it isn't. The
> alternative explanation is a terrible, data-losing bug in the kernel's
> TCP stack...

It really does arrive. Here's the relevant bit of tcpdump output for
867d, hostnames redacted:

16:19:33.542428 IP wheezy-1.example.com.43517 >
xenbuilder.example.com.8091: Flags [P.], seq 6156084:6156267, ack
807019, win 296, options [nop,nop,TS val 62810704 ecr 696524361],
length 183
E...b. at .@... . ..........7.....(/...... ..jP)..I.._ask..867d.._command.
  LogOutput..action..xe-clean..branch..test-secure-build..data..16:19:33
  00:00:00 E: + dry=
  ..job..core..number..89613..product..carbon..site..cam..stream..out..

16:19:33.542935 IP xenbuilder.example.com.8091 >
wheezy-1.example.com.43517: Flags [P.], seq 807019:807050, ack 6156267,
win 816, options [nop,nop,TS val 696524413 ecr 62810704], length 31
F..S.P at .@.U. . ......7.........0Zm.....
  )..}..jP.._answer..867d..status..True.. 16:19:33.542986 IP
  wheezy-1.example.com.43517 > xenbuilder.example.com.8091: Flags [.],
  ack 807050, win 296, options [nop,nop,TS val 62810705 ecr 696524413],
  length 0 (etc)

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141115/dc49a4e9/attachment.html>

From trac at twistedmatrix.com  Sun Nov 16 00:05:16 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 16 Nov 2014 07:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1416121516.65.2729629835846811642@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141116/90e1d058/attachment.html>

From adi at roiban.ro  Sun Nov 16 03:04:40 2014
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 16 Nov 2014 10:04:40 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
Message-ID: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>

Hi,

To help with the review process I would like to ask permissions for
triggering buildbot builds.

Is there a wiki page describing what are the steps required for a regular
contributor to get permissions to run buildbot tests and get write access
to the repo?


--------

In the same time, maybe we can write a few words about the steps required
for a new contributor to become a full reviewer. Ex.

1. Contribute a few patches (ex 10) and learn the basic review process.
   Observe how reviewers respond to your patch.

2. Start doing review as junior reviewer, without merging. Once you are ok
with the patch, invite another core developer to take a final view and
merge the patch

3. Once you have reviewed a few patches without errors (ex 10) you can ask
for full review permission or a core developer will let you know that you
can merge the patch without asking someone else.

This can be part of the current review process page:
https://twistedmatrix.com/trac/wiki/ReviewProcess

What do you think?
Is not much, but should provide some guidance and hope!

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141116/2f721aa0/attachment.html>

From exarkun at twistedmatrix.com  Sun Nov 16 15:44:13 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 16 Nov 2014 22:44:13 -0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
Message-ID: <20141116224413.7281.1835854865.divmod.xquotient.16@top>

On 10:04 am, adi at roiban.ro wrote:
>Hi,
>
>To help with the review process I would like to ask permissions for
>triggering buildbot builds.
>
>Is there a wiki page describing what are the steps required for a 
>regular
>contributor to get permissions to run buildbot tests and get write 
>access
>to the repo?

I'll send you the credentials off-list.  FWIW, this is password 
protected only because spambots found the form and kept triggering 
garbage builds.

There's no standard policy or procedure for granting commit access to 
the repository.  Usually it goes like "someone asks for it, someone 
gives it to them".
>
>--------
>
>In the same time, maybe we can write a few words about the steps 
>required
>for a new contributor to become a full reviewer. Ex.

There is no official process but the frequently discussed unofficialy 
process is just getting commit access.  The project doesn't distinguish 
between committers in any way as far as the development workflow is 
concerned.

Perhaps it should and we should discuss how it could do this.
>1. Contribute a few patches (ex 10) and learn the basic review process.
>   Observe how reviewers respond to your patch.
>
>2. Start doing review as junior reviewer, without merging. Once you are 
>ok
>with the patch, invite another core developer to take a final view and
>merge the patch
>
>3. Once you have reviewed a few patches without errors (ex 10) you can 
>ask
>for full review permission or a core developer will let you know that 
>you
>can merge the patch without asking someone else.
>
>This can be part of the current review process page:
>https://twistedmatrix.com/trac/wiki/ReviewProcess
>
>What do you think?

I think this process probably involves little enough learning that it 
won't make a significant difference to the quality of code reviews done 
for the project (so it will only add overhead to the process of keeping 
track of different kinds of reviewers and where in their progression 
"junior" reviewers are).

A modification that would help very slightly (but I think still not 
enough to be worthwhile, particularly since it adds even more overhead) 
would be to require a correct review covering each of the many relevant 
areas - for example, howto-style docs, example-style docs, api-style 
docs, unit test coverage, coding convention compliance (whitespace, 
variable naming, etc), etc.  After demonstrating competence in all areas 
the "junior" reviewer could advance to normal review status.

Unfortunately notice I didn't say anything about the software being 
built or changed itself.  I don't know of an easy way to test folks for 
competence at that kind of thing except to see them write a lot of code.

Jean-Paul


From glyph at twistedmatrix.com  Sun Nov 16 18:46:28 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 17 Nov 2014 02:46:28 +0100
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <20141116224413.7281.1835854865.divmod.xquotient.16@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
Message-ID: <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>


> On Nov 16, 2014, at 23:44, exarkun at twistedmatrix.com wrote:
> 
> On 10:04 am, adi at roiban.ro wrote:
>> Hi,
>> 
>> To help with the review process I would like to ask permissions for
>> triggering buildbot builds.
>> 
>> Is there a wiki page describing what are the steps required for a regular
>> contributor to get permissions to run buildbot tests and get write access
>> to the repo?
> 
> I'll send you the credentials off-list.  FWIW, this is password protected only because spambots found the form and kept triggering garbage builds.
> 
> There's no standard policy or procedure for granting commit access to the repository.  Usually it goes like "someone asks for it, someone gives it to them".
>> 
>> --------
>> 
>> In the same time, maybe we can write a few words about the steps required
>> for a new contributor to become a full reviewer. Ex.
> 
> There is no official process but the frequently discussed unofficialy process is just getting commit access.  The project doesn't distinguish between committers in any way as far as the development workflow is concerned.
> 
> Perhaps it should and we should discuss how it could do this.

I think that we should have an official process; the way we do it is pretty arbitrary.  An official advancement process can be a motivator for contributors, as well as a way to more clearly establish community norms.  (I have a feeling if we did have an official process for getting commit access we would actually have more active committers.)

(This is a good talk on the subject: <http://www.kateheddleston.com/talk/ef464595-b113-4c1b-9c5b-cc1f3681055c <http://www.kateheddleston.com/talk/ef464595-b113-4c1b-9c5b-cc1f3681055c>>)

>> 1. Contribute a few patches (ex 10) and learn the basic review process.
>>  Observe how reviewers respond to your patch.
>> 
>> 2. Start doing review as junior reviewer, without merging. Once you are ok
>> with the patch, invite another core developer to take a final view and
>> merge the patch
>> 
>> 3. Once you have reviewed a few patches without errors (ex 10) you can ask
>> for full review permission or a core developer will let you know that you
>> can merge the patch without asking someone else.
>> 
>> This can be part of the current review process page:
>> https://twistedmatrix.com/trac/wiki/ReviewProcess
>> 
>> What do you think?
> 
> I think this process probably involves little enough learning that it won't make a significant difference to the quality of code reviews done for the project (so it will only add overhead to the process of keeping track of different kinds of reviewers and where in their progression "junior" reviewers are).
> 
> A modification that would help very slightly (but I think still not enough to be worthwhile, particularly since it adds even more overhead) would be to require a correct review covering each of the many relevant areas - for example, howto-style docs, example-style docs, api-style docs, unit test coverage, coding convention compliance (whitespace, variable naming, etc), etc.  After demonstrating competence in all areas the "junior" reviewer could advance to normal review status.

This sounds great. Could you jot it down on a wiki page?

> Unfortunately notice I didn't say anything about the software being built or changed itself.  I don't know of an easy way to test folks for competence at that kind of thing except to see them write a lot of code.

We can easily have a suggested process for this too, if we have to have subjective evaluations, then let's just be explicit that some specific group has to make some specific evaluation...

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/9f03d0e1/attachment.html>

From adi at roiban.ro  Mon Nov 17 02:44:21 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 09:44:21 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <20141116224413.7281.1835854865.divmod.xquotient.16@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
Message-ID: <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>

On 16 November 2014 22:44, <exarkun at twistedmatrix.com> wrote:

> On 10:04 am, adi at roiban.ro wrote:
>
>> Hi,
>>
>> To help with the review process I would like to ask permissions for
>> triggering buildbot builds.
>>
>> Is there a wiki page describing what are the steps required for a regular
>> contributor to get permissions to run buildbot tests and get write access
>> to the repo?
>>
>
> I'll send you the credentials off-list.  FWIW, this is password protected
> only because spambots found the form and kept triggering garbage builds.
>
> There's no standard policy or procedure for granting commit access to the
> repository.  Usually it goes like "someone asks for it, someone gives it to
> them".


I got them.

Is there a wiki page describing how buildbot should be used?

I found some notes hidden in the review process page... it looks like
builds are triggered from the web page with click.
The review page also talks about a misterious force-builds.py script which
is not part of the main twisted repo.. or at least, I could not found it

I was expecting a buidbot try scheduler  and use buildbot command line
tools to trigger remote tests



>> --------
>>
>> In the same time, maybe we can write a few words about the steps required
>> for a new contributor to become a full reviewer. Ex.
>>
>
> There is no official process but the frequently discussed unofficialy
> process is just getting commit access.  The project doesn't distinguish
> between committers in any way as far as the development workflow is
> concerned.
>
> Perhaps it should and we should discuss how it could do this.
>
>> 1. Contribute a few patches (ex 10) and learn the basic review process.
>>   Observe how reviewers respond to your patch.
>>
>> 2. Start doing review as junior reviewer, without merging. Once you are ok
>> with the patch, invite another core developer to take a final view and
>> merge the patch
>>
>> 3. Once you have reviewed a few patches without errors (ex 10) you can ask
>> for full review permission or a core developer will let you know that you
>> can merge the patch without asking someone else.
>>
>> This can be part of the current review process page:
>> https://twistedmatrix.com/trac/wiki/ReviewProcess
>>
>> What do you think?
>>
>
> I think this process probably involves little enough learning that it
> won't make a significant difference to the quality of code reviews done for
> the project (so it will only add overhead to the process of keeping track
> of different kinds of reviewers and where in their progression "junior"
> reviewers are).
>
> A modification that would help very slightly (but I think still not enough
> to be worthwhile, particularly since it adds even more overhead) would be
> to require a correct review covering each of the many relevant areas - for
> example, howto-style docs, example-style docs, api-style docs, unit test
> coverage, coding convention compliance (whitespace, variable naming, etc),
> etc.  After demonstrating competence in all areas the "junior" reviewer
> could advance to normal review status.
>
> Unfortunately notice I didn't say anything about the software being built
> or changed itself.  I don't know of an easy way to test folks for
> competence at that kind of thing except to see them write a lot of code.
>

Ok. In this case, maybe just a note that developers should send enough
patches and do enough "junior reviews" until their patches are submitted
for the first time without major errors and no major errors pass their
initial review.. this is close to common sense, but some might argue that
there is no such thing as common sense.


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/34e361ac/attachment.html>

From adi at roiban.ro  Mon Nov 17 02:53:07 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 09:53:07 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
Message-ID: <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>

On 17 November 2014 09:44, Adi Roiban <adi at roiban.ro> wrote:
[snip]

There's no standard policy or procedure for granting commit access to the
>> repository.  Usually it goes like "someone asks for it, someone gives it to
>> them".
>
>
> I got them.
>
> Is there a wiki page describing how buildbot should be used?
>
> I found some notes hidden in the review process page... it looks like
> builds are triggered from the web page with click.
> The review page also talks about a misterious force-builds.py script which
> is not part of the main twisted repo.. or at least, I could not found it
>
> I was expecting a buidbot try scheduler  and use buildbot command line
> tools to trigger remote tests
>

I tried to use buildbot, but I failed :)

I want to ask buildbot to run the test for a patch:
* apply the patch to trunk
* run all test
* publish a link to trac

How do I do that without creating a branch, ie requiring write permissions
to main repo?

Thanks!

[snip]


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/0c9abf51/attachment-0001.html>

From glyph at twistedmatrix.com  Mon Nov 17 04:04:47 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 17 Nov 2014 12:04:47 +0100
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
Message-ID: <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>


> On Nov 17, 2014, at 10:53, Adi Roiban <adi at roiban.ro> wrote:
> 
> I tried to use buildbot, but I failed :)
> 
> I want to ask buildbot to run the test for a patch:
> * apply the patch to trunk
> * run all test
> * publish a link to trac
> 
> How do I do that without creating a branch, ie requiring write permissions to main repo?


This is not currently possible.  Permission to get the buildbots to run code is managed via write permissions to the SVN repository.  In other words: we do not have a buildbot try scheduler.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/bbfe4f2b/attachment.html>

From exarkun at twistedmatrix.com  Mon Nov 17 04:48:10 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 11:48:10 -0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
Message-ID: <20141117114810.27773.865613325.divmod.xquotient.11@top>

On 01:46 am, glyph at twistedmatrix.com wrote:
>
>>On Nov 16, 2014, at 23:44, exarkun at twistedmatrix.com wrote:
>>
>>On 10:04 am, adi at roiban.ro wrote:
>>>
>>>This can be part of the current review process page:
>>>https://twistedmatrix.com/trac/wiki/ReviewProcess
>>>
>>>What do you think?
>>
>>I think this process probably involves little enough learning that it 
>>won't make a significant difference to the quality of code reviews 
>>done for the project (so it will only add overhead to the process of 
>>keeping track of different kinds of reviewers and where in their 
>>progression "junior" reviewers are).
>>
>>A modification that would help very slightly (but I think still not 
>>enough to be worthwhile, particularly since it adds even more 
>>overhead) would be to require a correct review covering each of the 
>>many relevant areas - for example, howto-style docs, example-style 
>>docs, api-style docs, unit test coverage, coding convention compliance 
>>(whitespace, variable naming, etc), etc.  After demonstrating 
>>competence in all areas the "junior" reviewer could advance to normal 
>>review status.
>
>This sounds great. Could you jot it down on a wiki page?

Hmmm okay. :P
>>Unfortunately notice I didn't say anything about the software being 
>>built or changed itself.  I don't know of an easy way to test folks 
>>for competence at that kind of thing except to see them write a lot of 
>>code.
>
>We can easily have a suggested process for this too, if we have to have 
>subjective evaluations, then let's just be explicit that some specific 
>group has to make some specific evaluation...

After sleeping on this, it doesn't seem quite as bad as I thought, I 
guess.

The tracking overhead can mainly be taken on by contributors who are 
interested in gaining access.  Casual committers can just ignore this 
and their lives will be unchanged.

Perhaps we can put together a committer "bingo card" and let people fill 
in the boxes.  When someone has checked all the boxes they can hand over 
the information to a ... review committee?  to verify everything looks 
good or point out areas where improvement is needed (either because some 
task didn't really satisfy a box or because of subjective reasons).

Jean-Paul


From adi at roiban.ro  Mon Nov 17 04:48:57 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 11:48:57 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
 <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>
Message-ID: <CAFycZ9erKKFXrQgHfZgJSoFqnvTz3SeHHA+rhb-UQgY-jBsO0w@mail.gmail.com>

On 17 November 2014 11:04, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Nov 17, 2014, at 10:53, Adi Roiban <adi at roiban.ro> wrote:
>
> I tried to use buildbot, but I failed :)
>
> I want to ask buildbot to run the test for a patch:
> * apply the patch to trunk
> * run all test
> * publish a link to trac
>
> How do I do that without creating a branch, ie requiring write permissions
> to main repo?
>
>
> This is not currently possible.  Permission to get the buildbots to run
> code is managed via write permissions to the SVN repository.  In other
> words: we do not have a buildbot try scheduler.
>

Can I then get write permissions for SVN repo?
I will not touch trunk, only create branches for tests.

----

Is there a reason why a try scheduler is not implemented? I find it awesome
for TDD!

On my normal workflow I can do this, even without commiting changes:

./HELPER test some.test
./HELPER test-remote sol-10-sparc some.test

test-remote just wraps buildot try --builder --properties --wait --vc


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/cde73e36/attachment.html>

From exarkun at twistedmatrix.com  Mon Nov 17 04:55:24 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 11:55:24 -0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9erKKFXrQgHfZgJSoFqnvTz3SeHHA+rhb-UQgY-jBsO0w@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
 <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>
 <CAFycZ9erKKFXrQgHfZgJSoFqnvTz3SeHHA+rhb-UQgY-jBsO0w@mail.gmail.com>
Message-ID: <20141117115524.27773.234643654.divmod.xquotient.13@top>

On 11:48 am, adi at roiban.ro wrote:
>
>Is there a reason why a try scheduler is not implemented? I find it 
>awesome
>for TDD!
>
>On my normal workflow I can do this, even without commiting changes:
>
>./HELPER test some.test
>./HELPER test-remote sol-10-sparc some.test
>
>test-remote just wraps buildot try --builder --properties --wait --vc

Because it requires setting up proper credentials to access control the 
feature.

Jean-Paul


From adi at roiban.ro  Mon Nov 17 05:10:30 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 12:10:30 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <20141117115524.27773.234643654.divmod.xquotient.13@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
 <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>
 <CAFycZ9erKKFXrQgHfZgJSoFqnvTz3SeHHA+rhb-UQgY-jBsO0w@mail.gmail.com>
 <20141117115524.27773.234643654.divmod.xquotient.13@top>
Message-ID: <CAFycZ9eK7EYYC9MEmSXejM4+FXky8KXBCOZ+TcAL9zxr5Bw7eg@mail.gmail.com>

On 17 November 2014 11:55, <exarkun at twistedmatrix.com> wrote:

> On 11:48 am, adi at roiban.ro wrote:
>
>>
>> Is there a reason why a try scheduler is not implemented? I find it
>> awesome
>> for TDD!
>>
>> On my normal workflow I can do this, even without commiting changes:
>>
>> ./HELPER test some.test
>> ./HELPER test-remote sol-10-sparc some.test
>>
>> test-remote just wraps buildot try --builder --properties --wait --vc
>>
>
> Because it requires setting up proper credentials to access control the
> feature.


But there are already credentials for the HTTP status page... why not
configure the same credentials for buildbot try?

What I would like to hear is something like this:

* buildbot try is too simple, does not work with our workflow and for our
project... we don't want to spend time implementing it

or

* buildbot try could help, it still has some problems and  we don't have
time to fix issue 1, 2, 3, ... etc


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/d5b6a3f5/attachment.html>

From exarkun at twistedmatrix.com  Mon Nov 17 06:23:16 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 13:23:16 -0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9eK7EYYC9MEmSXejM4+FXky8KXBCOZ+TcAL9zxr5Bw7eg@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
 <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>
 <CAFycZ9erKKFXrQgHfZgJSoFqnvTz3SeHHA+rhb-UQgY-jBsO0w@mail.gmail.com>
 <20141117115524.27773.234643654.divmod.xquotient.13@top>
 <CAFycZ9eK7EYYC9MEmSXejM4+FXky8KXBCOZ+TcAL9zxr5Bw7eg@mail.gmail.com>
Message-ID: <20141117132316.27773.596656730.divmod.xquotient.18@top>

On 12:10 pm, adi at roiban.ro wrote:
>On 17 November 2014 11:55, <exarkun at twistedmatrix.com> wrote:
>>On 11:48 am, adi at roiban.ro wrote:
>>>
>>>Is there a reason why a try scheduler is not implemented? I find it
>>>awesome
>>>for TDD!
>>>
>>>On my normal workflow I can do this, even without commiting changes:
>>>
>>>./HELPER test some.test
>>>./HELPER test-remote sol-10-sparc some.test
>>>
>>>test-remote just wraps buildot try --builder --properties --wait --vc
>>
>>Because it requires setting up proper credentials to access control 
>>the
>>feature.
>
>
>But there are already credentials for the HTTP status page... why not
>configure the same credentials for buildbot try?

The credentials for the HTTP status page are there to prevent annoying 
spurious builds.  The credentials for `buildbot try` need to be serious, 
secure credentials because they prevent attackers from submitting 
arbitrary code to execute on the buildslaves.

Basically, it's more work.  If someone wanted to set it up right, I 
don't know of any reason we wouldn't want to allow it.  Though that may 
just be because we haven't ever used it so I haven't yet learned the 
reasons it's undesirable to have enabled. ;)

Jean-Paul
>What I would like to hear is something like this:
>
>* buildbot try is too simple, does not work with our workflow and for 
>our
>project... we don't want to spend time implementing it
>
>or
>
>* buildbot try could help, it still has some problems and  we don't 
>have
>time to fix issue 1, 2, 3, ... etc
>
>
>--
>Adi Roiban


From exarkun at twistedmatrix.com  Mon Nov 17 06:40:48 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 13:40:48 -0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
Message-ID: <20141117134048.27773.1088753912.divmod.xquotient.23@top>

On 09:44 am, adi at roiban.ro wrote:
>On 16 November 2014 22:44, <exarkun at twistedmatrix.com> wrote:
>>>Is there a wiki page describing what are the steps required for a 
>>>regular
>>>contributor to get permissions to run buildbot tests and get write 
>>>access
>>>to the repo?
>>
>>I'll send you the credentials off-list.  FWIW, this is password 
>>protected
>>only because spambots found the form and kept triggering garbage 
>>builds.
>>
>>There's no standard policy or procedure for granting commit access to 
>>the
>>repository.  Usually it goes like "someone asks for it, someone gives 
>>it to
>>them".
>
>
>I got them.
>
>Is there a wiki page describing how buildbot should be used?

I just created 
<https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow>. 
Feel free to edit it if you think parts are unclear.  Or point out any 
questions you think it doesn't answer.  I haven't linked to it from 
anywhere yet.  Suggestions about where a good place (such that people 
will actually find it) welcome.
>I found some notes hidden in the review process page... it looks like
>builds are triggered from the web page with click.

I guess maybe this would be an okay place?
>The review page also talks about a misterious force-builds.py script 
>which
>is not part of the main twisted repo.. or at least, I could not found 
>it

It's part of one of the twisted dev tools repositories (used to be 
twisted-dev-tools but I think someone moved it, not sure exactly to 
where).  Perhaps you could update this page to mention where - if you 
find it.

Jean-Paul


From exarkun at twistedmatrix.com  Mon Nov 17 06:44:18 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 13:44:18 -0000
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
In-Reply-To: <20141117114810.27773.865613325.divmod.xquotient.11@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
Message-ID: <20141117134418.27773.566781633.divmod.xquotient.29@top>

On 11:48 am, exarkun at twistedmatrix.com wrote:
>>
>>This sounds great. Could you jot it down on a wiki page?
>
>Hmmm okay. :P

I wrote up 
<https://twistedmatrix.com/trac/wiki/Proposal/ContributorAdvancementPath>. 
Notice "Proposal" in the URL.  It would be nice to get feedback from 
some more contributors - particularly people who have recently gotten 
commit access (about whether the problems are real and what they think 
of the proposed solutions) but also from other long-time Twisted 
contributors about whether they like this new idea about how to bring 
more people in (and whether they would volunteer to do the necessary 
candidate reviews - without which effort this isn't practical).

Jean-Paul


From peter.westlake at pobox.com  Mon Nov 17 06:46:24 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 17 Nov 2014 13:46:24 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
Message-ID: <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>


My previous strace output didn't include the poll() calls. This one
does, with the list of file descriptors shortened for readability.
According to the man page, the last parameter to poll() is a timeout,
in milliseconds. Looking at these calls, there are some very odd
values indeed: 154538, 154331, 2999999, 8, 0, 0, 0. The last four
calls time out, which isn't surprising if that's how long they wait!
The full strace output shows descending runs of values, with some
omissions and duplicates. If this was C, it would be an uninitialised
variable for sure.

Peter.

poll([{fd=5, events=POLLIN|POLLOUT}], 7, 154538) = 1 ([{fd=5,
revents=POLLOUT}]) sendto(5,
"\0\4_ask\0\004867c\0\10_command\0\tLogOutpu"..., 343, 0, NULL, 0) = 343
poll([{fd=5, events=POLLIN}], 7, 154537) = 1 ([{fd=5, revents=POLLIN}])
recvfrom(5, "\0\7_answer\0\004867c\0\6status\0\4True\0\0", 65536, 0,
NULL, NULL) = 31 poll([{fd=5, events=POLLIN|POLLOUT}], 7, 154331) = 1
([{fd=5, revents=POLLOUT}]) sendto(5,
"\0\4_ask\0\004867d\0\10_command\0\tLogOutpu"..., 183, 0, NULL, 0) = 183
poll([{fd=5, events=POLLIN}], 7, 3) = 0 (Timeout) poll([{fd=5,
events=POLLIN|POLLOUT}], 7, 299999) = 1 ([{fd=5, revents=POLLOUT}])
sendto(5, "\0\4_ask\0\004867e\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0)
= 30 poll([{fd=5, events=POLLIN}], 7, 299999) = 1 ([{fd=5,
revents=POLLIN}]) recvfrom(5, 0x7fec3005c6d4, 65536, 0, 0, 0) = -1
EAGAIN (Resource temporarily unavailable) poll([{fd=5, events=POLLIN}],
7, 8) = 0 (Timeout) poll([{fd=5, events=POLLIN}], 7, 0) = 0 (Timeout)
poll([{fd=5, events=POLLIN}], 7, 0) = 0 (Timeout) poll([{fd=5,
events=POLLIN}], 7, 0) = 0 (Timeout) poll([{fd=5,
events=POLLIN|POLLOUT}], 7, 299999) = 1 ([{fd=5, revents=POLLOUT}])
sendto(5, "\0\4_ask\0\004867f\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0)
= 30 poll([{fd=5, events=POLLIN}], 7, 299999) = 1 ([{fd=5,
revents=POLLIN}]) recvfrom(5,
"\0\7_answer\0\004867f\0\3ack\0\4True\0\0", 65536, 0, NULL, NULL) = 28


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/ff4b5a55/attachment.html>

From adi at roiban.ro  Mon Nov 17 07:10:31 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 14:10:31 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <20141117134048.27773.1088753912.divmod.xquotient.23@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
Message-ID: <CAFycZ9f8i3QzBYRuRc3VzTDxPVUyp3wPxzd2NyzFcWsnezf2tg@mail.gmail.com>

On 17 November 2014 13:40, <exarkun at twistedmatrix.com> wrote:

> On 09:44 am, adi at roiban.ro wrote:
>
>> On 16 November 2014 22:44, <exarkun at twistedmatrix.com> wrote:
>>
>>> Is there a wiki page describing what are the steps required for a regular
>>>> contributor to get permissions to run buildbot tests and get write
>>>> access
>>>> to the repo?
>>>>
>>>
>>> I'll send you the credentials off-list.  FWIW, this is password protected
>>> only because spambots found the form and kept triggering garbage builds.
>>>
>>> There's no standard policy or procedure for granting commit access to the
>>> repository.  Usually it goes like "someone asks for it, someone gives it
>>> to
>>> them".
>>>
>>
>>
>> I got them.
>>
>> Is there a wiki page describing how buildbot should be used?
>>
>
> I just created <https://twistedmatrix.com/trac/wiki/ContinuousIntegration/
> DeveloperWorkflow>. Feel free to edit it if you think parts are unclear.
> Or point out any questions you think it doesn't answer.  I haven't linked
> to it from anywhere yet.  Suggestions about where a good place (such that
> people will actually find it) welcome.
>
>> I found some notes hidden in the review process page... it looks like
>> builds are triggered from the web page with click.
>>
>
> I guess maybe this would be an okay place?


I have added a link to the new page in both author and reviewer section..
and remove duplicate info.

I did read the review page many times but always skipped the section
dedicated to comitters... I now see that username and password is public..
so I moved the credentials on the new wiki page. Feel free to remove them.



>  The review page also talks about a misterious force-builds.py script which
>> is not part of the main twisted repo.. or at least, I could not found it
>>
>
> It's part of one of the twisted dev tools repositories (used to be
> twisted-dev-tools but I think someone moved it, not sure exactly to
> where).  Perhaps you could update this page to mention where - if you find
> it.


Will search for it and try to update the wiki.


Thanks!

>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/2d303bc2/attachment.html>

From glyph at twistedmatrix.com  Mon Nov 17 07:17:50 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 17 Nov 2014 15:17:50 +0100
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
In-Reply-To: <20141117134418.27773.566781633.divmod.xquotient.29@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
 <20141117134418.27773.566781633.divmod.xquotient.29@top>
Message-ID: <E7FF7471-529E-4906-902B-9558D5668CC8@twistedmatrix.com>


> On Nov 17, 2014, at 14:44, exarkun at twistedmatrix.com wrote:
> 
> On 11:48 am, exarkun at twistedmatrix.com wrote:
>>> 
>>> This sounds great. Could you jot it down on a wiki page?
>> 
>> Hmmm okay. :P
> 
> I wrote up <https://twistedmatrix.com/trac/wiki/Proposal/ContributorAdvancementPath>. Notice "Proposal" in the URL.  It would be nice to get feedback from some more contributors - particularly people who have recently gotten commit access (about whether the problems are real and what they think of the proposed solutions) but also from other long-time Twisted contributors about whether they like this new idea about how to bring more people in (and whether they would volunteer to do the necessary candidate reviews - without which effort this isn't practical).

Thank you so much for doing this, JP.  I've wanted to do something about onboarding for a while and it's just been difficult to work up the enthusiasm.

-glyph

From glyph at twistedmatrix.com  Mon Nov 17 07:21:14 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 17 Nov 2014 15:21:14 +0100
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <20141117134048.27773.1088753912.divmod.xquotient.23@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
Message-ID: <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>


> On Nov 17, 2014, at 14:40, exarkun at twistedmatrix.com wrote:
> 
>> The review page also talks about a misterious force-builds.py script which
>> is not part of the main twisted repo.. or at least, I could not found it
> 
> It's part of one of the twisted dev tools repositories (used to be twisted-dev-tools but I think someone moved it, not sure exactly to where).  Perhaps you could update this page to mention where - if you find it.

Since we've added the buildbot link to trac pages, force-builds.py is basically obsolete.  I think we should just scrub all mentions of it, and probably delete it.

However, here's where it lives now:

<https://github.com/twisted/twisted-dev-tools/blob/master/bin/force-build <https://github.com/twisted/twisted-dev-tools/blob/master/bin/force-build>>

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/9e5679bd/attachment-0001.html>

From adi at roiban.ro  Mon Nov 17 07:40:00 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 14:40:00 +0000
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
In-Reply-To: <20141117134418.27773.566781633.divmod.xquotient.29@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
 <20141117134418.27773.566781633.divmod.xquotient.29@top>
Message-ID: <CAFycZ9eAGxa-V+BBvseZ90CyCsMeBP6yHyu5KSS-BaEWnBNqEg@mail.gmail.com>

On 17 November 2014 13:44, <exarkun at twistedmatrix.com> wrote:

> On 11:48 am, exarkun at twistedmatrix.com wrote:
>
>>
>>> This sounds great. Could you jot it down on a wiki page?
>>>
>>
>> Hmmm okay. :P
>>
>
> I wrote up <https://twistedmatrix.com/trac/wiki/Proposal/
> ContributorAdvancementPath>. Notice "Proposal" in the URL.  It would be
> nice to get feedback from some more contributors - particularly people who
> have recently gotten commit access (about whether the problems are real and
> what they think of the proposed solutions) but also from other long-time
> Twisted contributors about whether they like this new idea about how to
> bring more people in (and whether they would volunteer to do the necessary
> candidate reviews - without which effort this isn't practical).
>

Many thanks!

Twisted requires a high/excellent quality for contributions. This is great
and hope it will never change and will never lower the barrier.
As a new developer, who was formed in a mediocre university and working for
a mediocre/shitty company, learning what are the real good manners is not
easy.

Having the possibility to progress based on well defined skill/competencies
should make it easier to contribute and solve at least some of the tickets
from the review queue.

Once the skills are defined I am up for setting up a page and following the
process.

What is not clear for me, is in what circumstance I can consider a patch or
review successful and able to put in on my progress page / bingo card ?

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/fc4d870a/attachment.html>

From adi at roiban.ro  Mon Nov 17 07:43:54 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 14:43:54 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
 <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>
Message-ID: <CAFycZ9diQEe=0XqyXkp_DDX-6YYuU4pYTSDF5_-y5o4O+xidMg@mail.gmail.com>

On 17 November 2014 14:21, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Nov 17, 2014, at 14:40, exarkun at twistedmatrix.com wrote:
>
> The review page also talks about a misterious force-builds.py script which
> is not part of the main twisted repo.. or at least, I could not found it
>
>
> It's part of one of the twisted dev tools repositories (used to be
> twisted-dev-tools but I think someone moved it, not sure exactly to
> where).  Perhaps you could update this page to mention where - if you find
> it.
>
>
> Since we've added the buildbot link to trac pages, force-builds.py is
> basically obsolete.  I think we should just scrub all mentions of it, and
> probably delete it.
>
> I can take care of this
https://github.com/twisted/twisted-dev-tools/issues/5

Can you please update the wiki page
https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow
to describe how builds are linked to tickets?

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/7b1a3cf6/attachment.html>

From peter.westlake at pobox.com  Mon Nov 17 07:51:31 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 17 Nov 2014 14:51:31 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
Message-ID: <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>


Looking at the code, _SignalReactorMixin.mainLoop() takes the output of
ReactorBase.timeout() and passes it to doIteration(). The implementation
of doIteration() in PollReactor passes the value straight through to
poll(). If there is any kind of timed call pending (which there is), the
timeout value counts down. Eventually it gets very close to zero. If
there is a burst of AMP activity around that time, there's a good chance
that the one of the poll() calls will time out.

How this leads to the data being lost is another question, but the
coincidence of events is too much to ignore.

Peter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/d59c479a/attachment.html>

From exarkun at twistedmatrix.com  Mon Nov 17 08:38:03 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 15:38:03 -0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
Message-ID: <20141117153803.27773.1192805613.divmod.xquotient.31@top>

On 02:51 pm, peter.westlake at pobox.com wrote:
>
>Looking at the code, _SignalReactorMixin.mainLoop() takes the output of
>ReactorBase.timeout() and passes it to doIteration(). The 
>implementation
>of doIteration() in PollReactor passes the value straight through to
>poll(). If there is any kind of timed call pending (which there is), 
>the
>timeout value counts down. Eventually it gets very close to zero. If
>there is a burst of AMP activity around that time, there's a good 
>chance
>that the one of the poll() calls will time out.
>
>How this leads to the data being lost is another question, but the
>coincidence of events is too much to ignore.

This is entirely normal.  It's how timed calls are implemented in almost 
all of the reactors and it's how they've been implemented for at least 
13 years. :)

It's possible there's a bug here but this sequence of poll() calls with 
these timeout values doesn't surprise me at all.

Jean-Paul


From peter.westlake at pobox.com  Mon Nov 17 11:32:48 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 17 Nov 2014 18:32:48 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <20141117153803.27773.1192805613.divmod.xquotient.31@top>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
Message-ID: <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>

On Mon, 17 Nov 2014, at 15:38, exarkun at twistedmatrix.com wrote:
...
> This is entirely normal.  It's how timed calls are implemented in almost 
> all of the reactors and it's how they've been implemented for at least 
> 13 years. :)
> 
> It's possible there's a bug here but this sequence of poll() calls with 
> these timeout values doesn't surprise me at all.

Yes, I ran it again (using the select reactor this time) and the
failures
happened even without the timing out.

The one thing that is consistent is the loss of data after EAGAIN.
recvfrom returns EAGAIN and the next AMP reply is lost.

It's a known bug in Python! http://bugs.python.org/issue1038591,
"Python 2.3+ socket._fileobject handles EAGAIN with data loss".
This bug has been there for TEN YEARS without being fixed. It's
still right there in the source of 2.7.8. The ticket has a comment
from 2011 saying it should work in Python 3.x (and the code does
look as though it should), and a suggestion from 2013 that it
should be closed.

So, how's that port to Python 3 going?

Peter.


From glyph at twistedmatrix.com  Mon Nov 17 13:25:38 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 17 Nov 2014 21:25:38 +0100
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
Message-ID: <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>


> On Nov 17, 2014, at 19:32, Peter Westlake <peter.westlake at pobox.com> wrote:
> 
> It's a known bug in Python! http://bugs.python.org/issue1038591 <http://bugs.python.org/issue1038591>,
> "Python 2.3+ socket._fileobject handles EAGAIN with data loss".

This bug is in socket.makefile(), which Twisted never uses - not socket.socket().

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141117/2713cbc8/attachment.html>

From peter.westlake at pobox.com  Mon Nov 17 17:42:19 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Tue, 18 Nov 2014 00:42:19 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
Message-ID: <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>


On Mon, 17 Nov 2014, at 20:25, Glyph wrote:
>
>> On Nov 17, 2014, at 19:32, Peter Westlake
>> <peter.westlake at pobox.com> wrote:
>>
>> It's a known bug in Python!http://bugs.python.org/issue1038591,
>> "Python 2.3+ socket._fileobject handles EAGAIN with data loss".
>
> This bug is in socket.makefile(), which Twisted never uses - not
> socket.socket().

Okay, how about http://bugs.python.org/issue9090, "Issue #9090 : Error
code 10035 calling socket.recv() on a socket with a timeout
(WSAEWOULDBLOCK - A non-blocking socket operation could not be completed
immediately)"?

I actually found that one first, but it appeared to be Windows-only.
Further down the comments it becomes clear that it's not, and the patch
at https://hg.python.org/cpython/rev/8ec39bfd1f01 confirms that.

It would be good news if it was 9090, because it's easier to switch to
Python 2.7.8 than 3.

Peter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141118/8e1cfe51/attachment.html>

From exarkun at twistedmatrix.com  Mon Nov 17 18:09:10 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 18 Nov 2014 01:09:10 -0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
Message-ID: <20141118010910.27773.128714459.divmod.xquotient.34@top>

On 12:42 am, peter.westlake at pobox.com wrote:
>
>On Mon, 17 Nov 2014, at 20:25, Glyph wrote:
>>
>>>On Nov 17, 2014, at 19:32, Peter Westlake
>>><peter.westlake at pobox.com> wrote:
>>>
>>>It's a known bug in Python!http://bugs.python.org/issue1038591,
>>>"Python 2.3+ socket._fileobject handles EAGAIN with data loss".
>>
>>This bug is in socket.makefile(), which Twisted never uses - not
>>socket.socket().
>
>Okay, how about http://bugs.python.org/issue9090, "Issue #9090 : Error
>code 10035 calling socket.recv() on a socket with a timeout
>(WSAEWOULDBLOCK - A non-blocking socket operation could not be 
>completed
>immediately)"?

Twisted also doesn't use sockets with timeouts - although the way socket 
timeouts are implemented in Python, I could perhaps imagine some timeout 
configuration leaking into Twisted's sockets due to some other code 
running in the same process.

Can you check to see if your AMP connection's underlying socket has a 
timeout set?  It *shouldn't*.  Twisted doesn't set one.  If some other 
code is causing a timeout to be set, I guess this could be the culprit.

Jean-Paul
>I actually found that one first, but it appeared to be Windows-only.
>Further down the comments it becomes clear that it's not, and the patch
>at https://hg.python.org/cpython/rev/8ec39bfd1f01 confirms that.
>
>It would be good news if it was 9090, because it's easier to switch to
>Python 2.7.8 than 3.
>
>Peter.


From peter.westlake at pobox.com  Tue Nov 18 05:52:26 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Tue, 18 Nov 2014 12:52:26 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <20141118010910.27773.128714459.divmod.xquotient.34@top>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
Message-ID: <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>

On Tue, 18 Nov 2014, at 01:09, exarkun at twistedmatrix.com wrote:
> On 12:42 am, peter.westlake at pobox.com wrote:

> >Okay, how about http://bugs.python.org/issue9090, "Issue #9090 : Error
> >code 10035 calling socket.recv() on a socket with a timeout
> >(WSAEWOULDBLOCK - A non-blocking socket operation could not be 
> >completed
> >immediately)"?
> 
> Twisted also doesn't use sockets with timeouts - although the way socket 
> timeouts are implemented in Python, I could perhaps imagine some timeout 
> configuration leaking into Twisted's sockets due to some other code 
> running in the same process.
> 
> Can you check to see if your AMP connection's underlying socket has a 
> timeout set?  It *shouldn't*.  Twisted doesn't set one.  If some other 
> code is causing a timeout to be set, I guess this could be the culprit.

socket.gettimeout() returns 0.0, which just means non-blocking, right?

Given that strace shows a recvfrom failing with an EAGAIN, followed by
a recvfrom reading the AMP reply after the missing one, I think this
must
be a kernel or hypervisor bug. In hindsight it could never have been
1038591
even if Twisted had used that bit of code, because that reads the data
in and
then loses it. So strace would have shown it being read.

I'll get some help from my local TCP experts, and let you know if I find
anything
out. In the meantime, thank you all for your patience and help.

Peter.


From adi at roiban.ro  Tue Nov 18 11:40:47 2014
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 18 Nov 2014 18:40:47 +0000
Subject: [Twisted-Python] (no subject)
Message-ID: <CAFycZ9fjCWBja+25mxszzpZwK-2DSHan7unPBDaX=_6ffc=sqA@mail.gmail.com>

As commented by @glyph

Since we've added the buildbot link to trac pages, force-builds.py is
basically obsolete.  I think we should  just scrub all mentions of it,
and probably delete it.

I have created a ticket to remove it and clean documentation:

https://github.com/twisted/twisted-dev-tools/issues/5

Is there anyone else still using this tool?
Should we keep it and rather than removing it, improve its documentation?

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141118/91fea279/attachment.html>

From exarkun at twistedmatrix.com  Tue Nov 18 18:17:37 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 19 Nov 2014 01:17:37 -0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
Message-ID: <20141119011737.27773.1732196958.divmod.xquotient.39@top>

On 18 Nov, 12:52 pm, peter.westlake at pobox.com wrote:
>On Tue, 18 Nov 2014, at 01:09, exarkun at twistedmatrix.com wrote:
>>On 12:42 am, peter.westlake at pobox.com wrote:
>
>> >Okay, how about http://bugs.python.org/issue9090, "Issue #9090 : 
>>Error
>> >code 10035 calling socket.recv() on a socket with a timeout
>> >(WSAEWOULDBLOCK - A non-blocking socket operation could not be
>> >completed
>> >immediately)"?
>>
>>Twisted also doesn't use sockets with timeouts - although the way 
>>socket
>>timeouts are implemented in Python, I could perhaps imagine some 
>>timeout
>>configuration leaking into Twisted's sockets due to some other code
>>running in the same process.
>>
>>Can you check to see if your AMP connection's underlying socket has a
>>timeout set?  It *shouldn't*.  Twisted doesn't set one.  If some other
>>code is causing a timeout to be set, I guess this could be the 
>>culprit.
>
>socket.gettimeout() returns 0.0, which just means non-blocking, right?

According to the Python documentation, yes.  I was expecting to see 
`None` instead, though.
>Given that strace shows a recvfrom failing with an EAGAIN, followed by
>a recvfrom reading the AMP reply after the missing one, I think this
>must
>be a kernel or hypervisor bug. In hindsight it could never have been
>1038591
>even if Twisted had used that bit of code, because that reads the data
>in and
>then loses it. So strace would have shown it being read.
>
>I'll get some help from my local TCP experts, and let you know if I 
>find
>anything
>out. In the meantime, thank you all for your patience and help.

Good luck!  Please let us know if you discover anything else.

Jean-Paul


From exarkun at twistedmatrix.com  Tue Nov 18 18:20:02 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 19 Nov 2014 01:20:02 -0000
Subject: [Twisted-Python] to force-builds.py or not to force-builds.py
In-Reply-To: <CAFycZ9fjCWBja+25mxszzpZwK-2DSHan7unPBDaX=_6ffc=sqA@mail.gmail.com>
References: <CAFycZ9fjCWBja+25mxszzpZwK-2DSHan7unPBDaX=_6ffc=sqA@mail.gmail.com>
Message-ID: <20141119012002.27773.661610386.divmod.xquotient.42@top>

On 18 Nov, 06:40 pm, adi at roiban.ro wrote:
>As commented by @glyph
>
>Since we've added the buildbot link to trac pages, force-builds.py is
>basically obsolete.  I think we should  just scrub all mentions of it,
>and probably delete it.
>
>I have created a ticket to remove it and clean documentation:
>
>https://github.com/twisted/twisted-dev-tools/issues/5
>
>Is there anyone else still using this tool?
>Should we keep it and rather than removing it, improve its 
>documentation?

Given that it already exists, I'm not sure it makes much sense to delete 
it.  Perhaps some folks prefer a workflow that is command-line oriented 
rather than web-browser based.

I don't really feel very strongly about it, though.

Jean-Paul


From glyph at twistedmatrix.com  Wed Nov 19 07:47:05 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 19 Nov 2014 15:47:05 +0100
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9diQEe=0XqyXkp_DDX-6YYuU4pYTSDF5_-y5o4O+xidMg@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
 <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>
 <CAFycZ9diQEe=0XqyXkp_DDX-6YYuU4pYTSDF5_-y5o4O+xidMg@mail.gmail.com>
Message-ID: <32E4523B-5D23-4B94-8AE1-0B67E9E87C09@twistedmatrix.com>


> On Nov 17, 2014, at 15:43, Adi Roiban <adi at roiban.ro> wrote:
> 
> Can you please update the wiki page https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow <https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow> to describe how builds are linked to tickets?
> 

I may have been overly verbose, so feel free to edit it, but I added a new section on this.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141119/77321986/attachment.html>

From glyph at twistedmatrix.com  Wed Nov 19 13:20:56 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 19 Nov 2014 21:20:56 +0100
Subject: [Twisted-Python] to force-builds.py or not to force-builds.py
In-Reply-To: <20141119012002.27773.661610386.divmod.xquotient.42@top>
References: <CAFycZ9fjCWBja+25mxszzpZwK-2DSHan7unPBDaX=_6ffc=sqA@mail.gmail.com>
 <20141119012002.27773.661610386.divmod.xquotient.42@top>
Message-ID: <5EBBA15A-81F1-430F-A2A3-23A0E1C5B7C6@twistedmatrix.com>


> On Nov 19, 2014, at 02:20, exarkun at twistedmatrix.com wrote:
> 
> Given that it already exists, I'm not sure it makes much sense to delete it.  Perhaps some folks prefer a workflow that is command-line oriented rather than web-browser based.
> 
> I don't really feel very strongly about it, though.

I guess we should do two things, really:

1. remove it from the onboarding documentation so there are fewer choices / things to learn when getting started

2. *add it* to some documentation for itself, so that people know how to use it.

While in its current state it isn't really useful to me, I would _love_ to be able to use this to spin off some tests ... if I could then view their output on the command line as well, and not just have to hit a browser immediately anyway :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141119/9ba9eb3b/attachment.html>

From peter.westlake at pobox.com  Fri Nov 21 07:08:38 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 21 Nov 2014 14:08:38 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <20141119011737.27773.1732196958.divmod.xquotient.39@top>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
Message-ID: <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>


Found it!

from twisted.internet.protocol import ClientFactory, Protocol,
ProcessProtocol from twisted.internet import reactor

devnull = open('/dev/null').fileno() print devnull

factory = ClientFactory() factory.protocol = Protocol
reactor.connectTCP('localhost', 'http', factory)
reactor.callWhenRunning(reactor.spawnProcess, ProcessProtocol(),
'/bin/sleep', args=['/bin/sleep', '1000'], childFDs={0: devnull, 1: 'r',
2:'r'}) reactor.run()

Run this, then:

lsof -I @localhost

will show that the child process has the socket open on FD 0.

Now I grant that there's no need to pass /dev/null to the stdin of the
process. I should just leave 0 out of childFDs instead. But why does
this not work? lsof shows that the socket is on FD 3 in the parent
process, and the print statement shows that the FD of devnull is 3 as
well! Am I missing something obvious?

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141121/3ecf6b9f/attachment.html>

From peter.westlake at pobox.com  Fri Nov 21 07:13:59 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 21 Nov 2014 14:13:59 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
 <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
Message-ID: <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>


On Fri, 21 Nov 2014, at 14:08, Peter Westlake wrote:
> Found it!
>
> from twisted.internet.protocol import ClientFactory, Protocol,
> ProcessProtocol from twisted.internet import reactor
>
> devnull = open('/dev/null').fileno() print devnull
>
> factory = ClientFactory() factory.protocol = Protocol
> reactor.connectTCP('localhost', 'http', factory)
> reactor.callWhenRunning(reactor.spawnProcess, ProcessProtocol(),
> '/bin/sleep', args=['/bin/sleep', '1000'], childFDs={0: devnull, 1:
> 'r', 2:'r'}) reactor.run()
>
> Run this, then:
>
> lsof -I @localhost
>
> will show that the child process has the socket open on FD 0.
>
> Now I grant that there's no need to pass /dev/null to the stdin of the
> process. I should just leave 0 out of childFDs instead. But why does
> this not work? lsof shows that the socket is on FD 3 in the parent
> process, and the print statement shows that the FD of devnull is 3 as
> well! Am I missing something obvious?
>
> Peter.

I *am* missing something obvious. The file opened by open() immediately
goes out of scope. AAAUGH!

Peter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141121/d839de62/attachment.html>

From glyph at twistedmatrix.com  Fri Nov 21 12:26:35 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 21 Nov 2014 20:26:35 +0100
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
 <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
 <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>
Message-ID: <BAA62123-D02F-4908-A4CD-DDCE0787BEF6@twistedmatrix.com>

> On Nov 21, 2014, at 15:13, Peter Westlake <peter.westlake at pobox.com> wrote:
> 
> I am missing something obvious. The file opened by open() immediately goes out of scope.  AAAUGH!

So... back to square one?  Or is this the solution to your problem?  I don't entirely follow how this connects...

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141121/67943769/attachment.html>

From jasonjwwilliams at gmail.com  Fri Nov 21 17:12:48 2014
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 21 Nov 2014 16:12:48 -0800
Subject: [Twisted-Python] Twisted 14.0.2 & edns client subnet
Message-ID: <CAHZAEpdBhfON2VN1Bdz6f0NadORPUGeP2osqtK48Xec--EqjKg@mail.gmail.com>

Has anyone used the support for EDNS option information in the 14.0.2
twisted.names client to transmit EDNS client subnet information in upstream
DNS queries? Any advice/pointers would be greatly appreciated.

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141121/316f02fc/attachment.html>

From peter.westlake at pobox.com  Fri Nov 21 17:50:25 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Sat, 22 Nov 2014 00:50:25 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <BAA62123-D02F-4908-A4CD-DDCE0787BEF6@twistedmatrix.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
 <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
 <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>
 <BAA62123-D02F-4908-A4CD-DDCE0787BEF6@twistedmatrix.com>
Message-ID: <1416617425.1937490.193999589.07DD7931@webmail.messagingengine.com>


On Fri, 21 Nov 2014, at 19:26, Glyph wrote:
>> On Nov 21, 2014, at 15:13, Peter Westlake
>> <peter.westlake at pobox.com> wrote:
>>
>> I*am*missing something obvious. The file opened by open() immediately
>> goes out of scope. AAAUGH!
>
> So... back to square one? Or is this the solution to your problem? I
> don't entirely follow how this connects..

I didn't explain, sorry. This does indeed solve my problem!

It's a mistake in very nearly the first line of the first real Python
program I wrote. It goes likes this:

devnull = open('/dev/null').fileno()

# 1. Create a Python file object on /dev/null. Its file descriptor is
#    the first one available, 3.
# 2. Use it in an expression, and store the FD (3) in the variable
#    devnull.
# 3. Lose the last reference to it.
# 4. *The file object is garbage collected and the file is closed.*
# 5. The variable devnull remembers the file descriptor number of this
#    short-lived file.

reactor.connectTCP('localhost', 'http', factory)
# 6. Open a socket. Its file number is the first one available, which is
#    3 again.

reactor.callWhenRunning(reactor.spawnProcess, ProcessProtocol(),
'/bin/sleep', args=['/bin/sleep', '1000'], childFDs={0: devnull, 1:
'r', 2:'r'})

# 7. Pass the file on descriptor 3 to the spawned process. But it's the
#    socket, not /dev/null!

In the real program the socket is an AMP connection, and the
spawnProcess is a vast tree of processes that build a large and complex
piece of software. Eventually the build process reaches an SSH call, and
for some reason SSH sometimes reads from its stdin. I don't know why,
and I don't know why it always tried to read at precisely the same time
at Twisted. But I do know that it does, thanks to a systemtap probe.

To fix the bug (and it *is* fixed, and passes testing) I had the option
of either saving the file object:

devnull = open('/dev/null') ... spawnProcess(...childFDS{0:
devnull.fileno(), 1: 'r', 2: 'r'}...)

or closing stdin:

spawnProcess(...childFDS{1: 'r', 2: 'r'}...)

The fact that the AMP connection ever worked at all showed that the
build process didn't try to read stdin, so I chose the latter option.
The SSH still works, so I suppose it is using a select() or similar
to read stdin. That would account for it being synchronised with
Twisted: when they are both waiting for data, both of them see it at
once and collide.

I suspect that the reason this went away in 2009 was because a load of
SSH calls were removed (they were to Windows machines, and very
unreliable!), and the reason it came back now was because a load more
were put in. The system was moved behind a firewall, and had to do a lot
of its former work by remote control using SSH.

Again, thank you for all the help. I do like Twisted!

Peter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141122/e2e02b40/attachment.html>

From glyph at twistedmatrix.com  Fri Nov 21 19:58:09 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 22 Nov 2014 03:58:09 +0100
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416617425.1937490.193999589.07DD7931@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
 <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
 <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>
 <BAA62123-D02F-4908-A4CD-DDCE0787BEF6@twistedmatrix.com>
 <1416617425.1937490.193999589.07DD7931@webmail.messagingengine.com>
Message-ID: <49CEBBAB-9C87-4E15-8283-AFF71A86A951@twistedmatrix.com>


> On Nov 22, 2014, at 01:50, Peter Westlake <peter.westlake at pobox.com> wrote:
> 
> On Fri, 21 Nov 2014, at 19:26, Glyph wrote:
>>> On Nov 21, 2014, at 15:13, Peter Westlake <peter.westlake at pobox.com <mailto:peter.westlake at pobox.com>> wrote:
>>>  
>>> Iammissing something obvious. The file opened by open() immediately goes out of scope.  AAAUGH!
>> 
>>  
>> So... back to square one?  Or is this the solution to your problem?  I don't entirely follow how this connects..
>  
> I didn't explain, sorry. This does indeed solve my problem!

Thanks for explaining that whole interaction.  Wow, that is a scary amount of abstraction-boundary-crossing, congratulations on diagnosing it :-).

> To fix the bug (and it is fixed, and passes testing) I had the option of either saving the file object:
>  
> devnull = open('/dev/null')
> ...
> spawnProcess(...childFDS{0: devnull.fileno(), 1: 'r', 2: 'r'}...)
>  
> or closing stdin:
>  
> spawnProcess(...childFDS{1: 'r', 2: 'r'}...)

Closing stdin is probably the best option here, but the original problem was caused by a mixing of levels.

On one level, you've got open(), which wants to sort of pretend that an open file is an object, and that the operating system resource involved is an implementation detail that can be cleaned up by the garbage collector.

On the other level, you've got spawnProcess, which is operating entirely in terms of file descriptors as process-global state.

Any time you want to open a file descriptor for spawnProcess to consume, I suggest that you open it with os.open <https://docs.python.org/2/library/os.html#os.open <https://docs.python.org/2/library/os.html#os.open>>, which just hands you an integer and makes it your own problem to close it explicitly with os.close <https://docs.python.org/2/library/os.html#os.close <https://docs.python.org/2/library/os.html#os.close>>; this is operating at the same abstraction level and therefore less error-prone.

-glyph



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141122/baa86dd3/attachment-0001.html>

From jml at mumak.net  Sat Nov 22 07:59:13 2014
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 22 Nov 2014 14:59:13 +0000
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
 <20141117134418.27773.566781633.divmod.xquotient.29@top>
 <E7FF7471-529E-4906-902B-9558D5668CC8@twistedmatrix.com>
Message-ID: <CAHZ8tnaGfBMDhf0CX2=_f=19+JvEkYk3rYwLyDwLQHdzLkgJKw@mail.gmail.com>

On Mon Nov 17 2014 at 2:18:13 PM Glyph <glyph at twistedmatrix.com> wrote:

>
> > On Nov 17, 2014, at 14:44, exarkun at twistedmatrix.com wrote:
> >
> > On 11:48 am, exarkun at twistedmatrix.com wrote:
> >>>
> >>> This sounds great. Could you jot it down on a wiki page?
> >>
> >> Hmmm okay. :P
> >
> > I wrote up <https://twistedmatrix.com/trac/wiki/Proposal/
> ContributorAdvancementPath>. Notice "Proposal" in the URL.  It would be
> nice to get feedback from some more contributors - particularly people who
> have recently gotten commit access (about whether the problems are real and
> what they think of the proposed solutions) but also from other long-time
> Twisted contributors about whether they like this new idea about how to
> bring more people in (and whether they would volunteer to do the necessary
> candidate reviews - without which effort this isn't practical).
>
> Thank you so much for doing this, JP.  I've wanted to do something about
> onboarding for a while and it's just been difficult to work up the
> enthusiasm.
>
>
Thanks indeed!

I like this idea, and think it's worth trying. I can participate in one or
two candidate reviews (depending on exactly when).

jml
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141122/c7330607/attachment.html>

From peter.westlake at pobox.com  Sat Nov 22 09:11:07 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Sat, 22 Nov 2014 16:11:07 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <49CEBBAB-9C87-4E15-8283-AFF71A86A951@twistedmatrix.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
 <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
 <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>
 <BAA62123-D02F-4908-A4CD-DDCE0787BEF6@twistedmatrix.com>
 <1416617425.1937490.193999589.07DD7931@webmail.messagingengine.com>
 <49CEBBAB-9C87-4E15-8283-AFF71A86A951@twistedmatrix.com>
Message-ID: <1416672667.2144637.194151221.457731ED@webmail.messagingengine.com>


>
> Closing stdin is probably the best option here, but the original
> problem was caused by a mixing of levels.
>
> On one level, you've got open(), which wants to sort of pretend that
> an open file is an object, and that the operating system resource
> involved is an implementation detail that can be cleaned up by the
> garbage collector.
>
> On the other level, you've got spawnProcess, which is operating
> entirely in terms of file descriptors as process-global state.
>
> Any time you want to open a file descriptor for spawnProcess to
> consume, I suggest that you open it with os.open
> <https://docs.python.org/2/library/os.html#os.open>, which just hands
> you an integer and makes it your own problem to close it explicitly
> with os.close <https://docs.python.org/2/library/os.html#os.close>;
> this is operating at the same abstraction level and therefore less
> error-prone.

That's useful to know, thanks. I'll remember it for next time!

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141122/2a3d5fa1/attachment.html>

From trac at twistedmatrix.com  Sun Nov 23 00:05:17 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 23 Nov 2014 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1416726317.55.966663814855696549@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141123/10c0b4af/attachment.html>

From adi at roiban.ro  Tue Nov 25 01:52:29 2014
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 25 Nov 2014 08:52:29 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <32E4523B-5D23-4B94-8AE1-0B67E9E87C09@twistedmatrix.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
 <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>
 <CAFycZ9diQEe=0XqyXkp_DDX-6YYuU4pYTSDF5_-y5o4O+xidMg@mail.gmail.com>
 <32E4523B-5D23-4B94-8AE1-0B67E9E87C09@twistedmatrix.com>
Message-ID: <CAFycZ9fnAWGbmfFNDzVsP3GBT4jpt8mZkiCtt-MY3BAeUXvHOQ@mail.gmail.com>

Looks good.

I would like to ask write permissions for Twisted SVN repo.
For now, I plan to use this power to create branches for tickets in the
review queue launch a buildbot test for a submitted patch. I think that
this will make my review more useful as the developer could see the exact
impact of the patch against the test.

What do you think?

Thanks!

On 19 November 2014 14:47, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Nov 17, 2014, at 15:43, Adi Roiban <adi at roiban.ro> wrote:
>
> Can you please update the wiki page
> https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow
>  to describe how builds are linked to tickets?
>
>
> I may have been overly verbose, so feel free to edit it, but I added a new
> section on this.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141125/e33788be/attachment.html>

From free at 64studio.com  Tue Nov 25 08:26:41 2014
From: free at 64studio.com (Free Ekanayaka)
Date: Tue, 25 Nov 2014 16:26:41 +0100
Subject: [Twisted-Python] HTTP combined log format in twisted.web.http
	changed from 13.2.0 to 14.0.0
Message-ID: <CABJ6WihNk2-yPSeUNCfA5OajPy9kLW=7pNDfak+6MN=X9Hd_zw@mail.gmail.com>

Hi,

it was

            line = '%s - - %s "%s" %d %s "%s" "%s"\n' % (

in 13.2.0 (twisted/web/http.py line 1920), and it's

        u'"%(ip)s" - - %(timestamp)s "%(method)s %(uri)s %(protocol)s" '

so basically the client IP now gets wrapped within double quotes, e.g. a
log line that was looking like:

1.2.3.4 - - [25/Oct/2004:12:31:59 +0000] "GET /dummy HTTP/1.0" 123 - "-" "-"

it now looks like:

"1.2.3.4" - - [25/Oct/2004:12:31:59 +0000] "GET /dummy HTTP/1.0" 123 - "-"
"-"

as one can see in the unit tests in test_web.py too.

What's the reason for this change?

It feels it can potentially break code that parses log files and it also
seems to diverge from the format described on the Apache web site:

http://httpd.apache.org/docs/1.3/logs.html

Cheers,

Free
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141125/ac59cdd3/attachment.html>

From glyph at twistedmatrix.com  Wed Nov 26 17:39:22 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 27 Nov 2014 01:39:22 +0100
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9fnAWGbmfFNDzVsP3GBT4jpt8mZkiCtt-MY3BAeUXvHOQ@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
 <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>
 <CAFycZ9diQEe=0XqyXkp_DDX-6YYuU4pYTSDF5_-y5o4O+xidMg@mail.gmail.com>
 <32E4523B-5D23-4B94-8AE1-0B67E9E87C09@twistedmatrix.com>
 <CAFycZ9fnAWGbmfFNDzVsP3GBT4jpt8mZkiCtt-MY3BAeUXvHOQ@mail.gmail.com>
Message-ID: <D9BD7D53-FF33-44E2-B8A9-04653CF44E60@twistedmatrix.com>

I am certainly in favor, especially given that I had already offered commit access based on our previous informal process for this very reason :-).

-glyph

> On Nov 25, 2014, at 09:52, Adi Roiban <adi at roiban.ro> wrote:
> 
> Looks good.
> 
> I would like to ask write permissions for Twisted SVN repo.
> For now, I plan to use this power to create branches for tickets in the review queue launch a buildbot test for a submitted patch. I think that this will make my review more useful as the developer could see the exact impact of the patch against the test.
> 
> What do you think?
> 
> Thanks!
> 
> On 19 November 2014 14:47, Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Nov 17, 2014, at 15:43, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>> 
>> Can you please update the wiki page https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow <https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow> to describe how builds are linked to tickets?
>> 
> 
> I may have been overly verbose, so feel free to edit it, but I added a new section on this.
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> 
> 
> -- 
> Adi Roiban
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141127/8a8ba184/attachment.html>

From dany74q at gmail.com  Fri Nov 28 03:43:30 2014
From: dany74q at gmail.com (Danny Shemesh)
Date: Fri, 28 Nov 2014 12:43:30 +0200
Subject: [Twisted-Python] I would like to port twisted to c++(14)
Message-ID: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>

Hello everyone,

I am Danny, a C++ dev,
I'm familiar with twisted from past projects and by this day I am enchanted
with its magic.

I would like to port twisted to c++ (or at least the base ot it) and have
couple of questions -
1. Is it legally ok to port it and open source it at github ?
2. Would anyone consider helping to this cause ?
3. Would you know of a code base that would benefit from such port ?

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141128/4c01c829/attachment.html>

From hawkowl at atleastfornow.net  Fri Nov 28 04:22:51 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 28 Nov 2014 19:22:51 +0800
Subject: [Twisted-Python] I would like to port twisted to c++(14)
In-Reply-To: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
References: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
Message-ID: <166ABDA9-1975-4AF0-9D4A-85FC0CA3EEB5@atleastfornow.net>

On 28 Nov 2014, at 18:43, Danny Shemesh <dany74q at gmail.com> wrote:

> Hello everyone,
> 
> I am Danny, a C++ dev, 
> I'm familiar with twisted from past projects and by this day I am enchanted with its magic.
> 
> I would like to port twisted to c++ (or at least the base ot it) and have couple of questions -
> 1. Is it legally ok to port it and open source it at github ?
> 2. Would anyone consider helping to this cause ?
> 3. Would you know of a code base that would benefit from such port ?
> 
> Thanks!

Hi Danny,

As Twisted is offered under a MIT license, you can legally port it without worry. However, I am not sure about the usefulness of it ? part of the greatness of Twisted is that you can do all this low-level networking in a language that is completely portable, understandable, and ?safe? ? a C++ port would kind of defeat most of these, and would likely offer no benefits over existing event loop-using solutions in C++, such as libuv.

-hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141128/936b13b2/attachment.pgp>

From exarkun at twistedmatrix.com  Fri Nov 28 18:13:37 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 29 Nov 2014 01:13:37 -0000
Subject: [Twisted-Python] I would like to port twisted to c++(14)
In-Reply-To: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
References: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
Message-ID: <20141129011337.23969.508729553.divmod.xquotient.2@top>

On 28 Nov, 10:43 am, dany74q at gmail.com wrote:
>Hello everyone,
>
>I am Danny, a C++ dev,
>I'm familiar with twisted from past projects and by this day I am 
>enchanted
>with its magic.
>
>I would like to port twisted to c++ (or at least the base ot it) and 
>have
>couple of questions -
>1. Is it legally ok to port it and open source it at github ?
>2. Would anyone consider helping to this cause ?
>3. Would you know of a code base that would benefit from such port ?

Perhaps first have a look at ACE:

    http://www.cs.wustl.edu/~schmidt/ACE.html

and Boost::ASIO:

    http://www.boost.org/doc/libs/1_57_0/doc/html/boost_asio.html

Jean-Paul


From kaliyuga at riseup.net  Sat Nov 29 01:41:41 2014
From: kaliyuga at riseup.net (kaliyuga at riseup.net)
Date: Sat, 29 Nov 2014 08:41:41 -0000
Subject: [Twisted-Python] I would like to port twisted to c++(14)
In-Reply-To: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
References: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
Message-ID: <192ce206f130b64853777d7273dc8b23.squirrel@mail.riseup.net>

> I would like to port twisted to c++ (or at least the base ot it)

You might be interested in Tom Cocagne's c++ Deferreds:
https://twistedmatrix.com/pipermail/twisted-python/2009-January/019119.html



From adi at roiban.ro  Sat Nov 29 05:39:22 2014
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 29 Nov 2014 12:39:22 +0000
Subject: [Twisted-Python] Importing/Exporting Putty and SSH.com keys
Message-ID: <CAFycZ9dnooUhV=XxhGRSQa9mZ9F2G_cCaSDuC=yw7TZcogQiCg@mail.gmail.com>

Hi,

I just want to let you know about a piece of code I was working on.

I wanted to import and export Putty and SSH.com (Tectia) SSH keys in Python
and I could not find any existing code for that... my final goal is to
replicate the puttygen functionality.

I have extended the current twisted.conch.ssh.key.Key class to
import/export Putty and SSH.com keys

Code is here: https://github.com/chevah/chevah-keycert

Not sure if it make sense to have it integrated in Twisted. If there is
someone willing to review (part of) and merge this code I am happy to send
patches.

Right now it depend on Twisted but only because of the original Key and
packing/unpacking MP/NS values...

Have a nice day!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141129/a05bca20/attachment.html>

From trac at twistedmatrix.com  Sun Nov 30 00:05:17 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 30 Nov 2014 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1417331117.48.6667273935150943791@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141130/dd88e626/attachment.html>

From glyph at twistedmatrix.com  Sun Nov 30 08:09:18 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 30 Nov 2014 16:09:18 +0100
Subject: [Twisted-Python] doc bloat
Message-ID: <D114730E-21D4-42F1-A8EB-98C3FD1243E7@twistedmatrix.com>

Jean-Paul raised a salient point about documentation on a ticket <https://twistedmatrix.com/trac/ticket/4804#comment:21> recently.  To quote that:
We seem to be going the direction of "document every possible thing" these days. This stems from good intentions but the result is ever more bloated developer documentation of which any individual contributor has an ever shrinking knowledge. Rather than continuing to block the docs even further ... I think we need to get serious about pursuing a different strategy - for example, making twistedchecker a piece of software we could actually maintain and the output of which we could actually rely on (this really is just an example - the notion of a tool that tells you every single thing that's wrong with a piece of software is, of course, quite enticing - but perhaps unachievable).

I think we've been moving in the direction of making twistedchecker maintainable, although it does still present some challenges.  For example, I've been wanting to eliminate this <https://github.com/twisted/twistedchecker/issues/75 <https://github.com/twisted/twistedchecker/issues/75>> for a while, but I just haven't been able to figure it out.
I am also thinking that we may want to create a category of private implementation details that don't require docstring coverage.  In a public API, every parameter, every attribute, every detail should have accompanying prose and type annotations.  In the innards of an implementation, these details can crowd out the code they're supposed to be elucidating.
As a first approximation, I think we could ask twistedchecker to stop enforcing docstring requirements for objects directly matching a "private" naming pattern.
Thoughts?
-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141130/74e1237d/attachment.html>

From hawkowl at atleastfornow.net  Sun Nov 30 08:19:12 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sun, 30 Nov 2014 23:19:12 +0800
Subject: [Twisted-Python] doc bloat
In-Reply-To: <D114730E-21D4-42F1-A8EB-98C3FD1243E7@twistedmatrix.com>
References: <D114730E-21D4-42F1-A8EB-98C3FD1243E7@twistedmatrix.com>
Message-ID: <4DB4F054-A91B-4B05-A75E-EB0B6BE03E7D@atleastfornow.net>


On 30 Nov 2014, at 23:09, Glyph <glyph at twistedmatrix.com> wrote:

> Jean-Paul raised a salient point about documentation on a ticket recently.  To quote that:
> We seem to be going the direction of "document every possible thing" these days. This stems from good intentions but the result is ever more bloated developer documentation of which any individual contributor has an ever shrinking knowledge. Rather than continuing to block the docs even further ... I think we need to get serious about pursuing a different strategy - for example, making twistedchecker a piece of software we could actually maintain and the output of which we could actually rely on (this really is just an example - the notion of a tool that tells you every single thing that's wrong with a piece of software is, of course, quite enticing - but perhaps unachievable).
> 
> I think we've been moving in the direction of making twistedchecker maintainable, although it does still present some challenges.  For example, I've been wanting to eliminate this <https://github.com/twisted/twistedchecker/issues/75> for a while, but I just haven't been able to figure it out.
> I am also thinking that we may want to create a category of private implementation details that don't require docstring coverage.  In a public API, every parameter, every attribute, every detail should have accompanying prose and type annotations.  In the innards of an implementation, these details can crowd out the code they're supposed to be elucidating.
> As a first approximation, I think we could ask twistedchecker to stop enforcing docstring requirements for objects directly matching a "private" naming pattern.
> Thoughts?
> -glyph

This sounds like a good idea. How do we tackle things that should be documented in some form (ie. important implementation details), that do need docstring-like things, but should not be exposed to users? For example, http://twistedmatrix.com/documents/current/api/twisted.web.http.Request.html#__repr__ , to an application developer, has no use, and is just cluttering up the docs, but may want to have a docstring for code documentation purposes, rather than user documentation purposes.

It?s like, 11pm here, so apologies if that made zero sense :)

-hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141130/ccff589a/attachment.pgp>

From glyph at twistedmatrix.com  Sun Nov 30 09:49:38 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 30 Nov 2014 17:49:38 +0100
Subject: [Twisted-Python] doc bloat
In-Reply-To: <D114730E-21D4-42F1-A8EB-98C3FD1243E7@twistedmatrix.com>
References: <D114730E-21D4-42F1-A8EB-98C3FD1243E7@twistedmatrix.com>
Message-ID: <CBFD7586-9EB0-4F12-9F5B-B9B4140397C9@twistedmatrix.com>


> On Nov 30, 2014, at 16:09, Glyph <glyph at twistedmatrix.com> wrote:

> I think we've been moving in the direction of making twistedchecker maintainable, although it does still present some challenges.  For example, I've been wanting to eliminate this <https://github.com/twisted/twistedchecker/issues/75 <https://github.com/twisted/twistedchecker/issues/75>> for a while, but I just haven't been able to figure it out.

Well, I guess we have been moving in that direction after all.  I figured it out, there's a PR here:

<https://github.com/twisted/twistedchecker/pull/86 <https://github.com/twisted/twistedchecker/pull/86>>

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141130/fed5c674/attachment-0001.html>

From glyph at twistedmatrix.com  Sun Nov 30 09:52:23 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 30 Nov 2014 17:52:23 +0100
Subject: [Twisted-Python] Importing/Exporting Putty and SSH.com keys
In-Reply-To: <CAFycZ9dnooUhV=XxhGRSQa9mZ9F2G_cCaSDuC=yw7TZcogQiCg@mail.gmail.com>
References: <CAFycZ9dnooUhV=XxhGRSQa9mZ9F2G_cCaSDuC=yw7TZcogQiCg@mail.gmail.com>
Message-ID: <41E8EDCE-191B-4676-B83F-59B297720417@twistedmatrix.com>


> On Nov 29, 2014, at 13:39, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I just want to let you know about a piece of code I was working on.
> 
> I wanted to import and export Putty and SSH.com (Tectia) SSH keys in Python and I could not find any existing code for that... my final goal is to replicate the puttygen functionality.
> 
> I have extended the current twisted.conch.ssh.key.Key class to import/export Putty and SSH.com keys
> 
> Code is here: https://github.com/chevah/chevah-keycert <https://github.com/chevah/chevah-keycert>
> 
> Not sure if it make sense to have it integrated in Twisted. If there is someone willing to review (part of) and merge this code I am happy to send patches.
> 
> Right now it depend on Twisted but only because of the original Key and packing/unpacking MP/NS values... 
> 
> Have a nice day!

Cool, thanks for letting us know about this!

It might be nice to gradually turn Conch into an actually useful SSH command-line for Windows; PuTTY does not seem to me to be very friendly to automation.  So perhaps this could make sense in Twisted, since being able to deal with PuTTY keys would definitely be part of that.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141130/d49a548d/attachment.html>

From mithrandi at mithrandi.net  Sun Nov 30 13:02:15 2014
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 30 Nov 2014 22:02:15 +0200
Subject: [Twisted-Python] Importing/Exporting Putty and SSH.com keys
In-Reply-To: <41E8EDCE-191B-4676-B83F-59B297720417@twistedmatrix.com>
References: <CAFycZ9dnooUhV=XxhGRSQa9mZ9F2G_cCaSDuC=yw7TZcogQiCg@mail.gmail.com>
 <41E8EDCE-191B-4676-B83F-59B297720417@twistedmatrix.com>
Message-ID: <CAMcKhMSH4jjPOky6OOryLYrG=juLOrbgBN4DDXqQ62m9FD53qQ@mail.gmail.com>

On 30 November 2014 at 18:52, Glyph <glyph at twistedmatrix.com> wrote:
> PuTTY does not seem to me to be very friendly to automation.

OT: for automation, you probably want Plink not PuTTY.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From glyph at twistedmatrix.com  Sun Nov 30 14:30:28 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 30 Nov 2014 22:30:28 +0100
Subject: [Twisted-Python] Importing/Exporting Putty and SSH.com keys
In-Reply-To: <CAMcKhMSH4jjPOky6OOryLYrG=juLOrbgBN4DDXqQ62m9FD53qQ@mail.gmail.com>
References: <CAFycZ9dnooUhV=XxhGRSQa9mZ9F2G_cCaSDuC=yw7TZcogQiCg@mail.gmail.com>
 <41E8EDCE-191B-4676-B83F-59B297720417@twistedmatrix.com>
 <CAMcKhMSH4jjPOky6OOryLYrG=juLOrbgBN4DDXqQ62m9FD53qQ@mail.gmail.com>
Message-ID: <73AA8C4D-EA98-4EE0-B055-391E779CB2C0@twistedmatrix.com>


> On Nov 30, 2014, at 21:02, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On 30 November 2014 at 18:52, Glyph <glyph at twistedmatrix.com> wrote:
>> PuTTY does not seem to me to be very friendly to automation.
> 
> OT: for automation, you probably want Plink not PuTTY.

I'm familiar with Plink, and its necessity is sort of what I mean :).

(Consider an application like "vagrant ssh" - Plink doesn't work so well for that.)

-glyph




From FeihuaXx010 at 163.com  Sun Nov 30 23:10:54 2014
From: FeihuaXx010 at 163.com (FeihuaXx010 at 163.com)
Date: Mon, 1 Dec 2014 14:10:54 +0800
Subject: [Twisted-Python] captcha
Message-ID: <201412011410540357071@163.com>

Use twisted development site, how to add captcha when you log in, twisted it has provided
who can tell me,thanks  



FeihuaXx010 at 163.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20141201/8d6e8b16/attachment.html>

From trac at twistedmatrix.com  Sun Nov  2 00:05:16 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 02 Nov 2014 06:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1414908316.73.7520038844013268653@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141102/8ec61c0e/attachment-0002.html>

From wolfgang.kde at rohdewald.de  Mon Nov  3 03:18:27 2014
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Mon, 03 Nov 2014 11:18:27 +0100
Subject: [Twisted-Python] porting twisted.spread to Python3
In-Reply-To: <20141005195829.17800.1945780271.divmod.xquotient.1155@top>
References: <4121201.VS1rzsEyV3@i5> <12076355.cZLe9KzarU@i5>
 <20141005195829.17800.1945780271.divmod.xquotient.1155@top>
Message-ID: <1863819.V4sVH8pbgI@i5>

there now is https://github.com/wrohdewald/twisted.git

branch spread-py3-7598

Not all is finished, especially utf-8 wherever Python 3
allows it, pbfailure, and handling of wired exceptions.


what should I do next to start getting this into trunk? 
Maybe

- open a ticket for porting banana
- create a branch with all commits for that
- do a pull request

I do not want to create one big patch because I think
it is helpful to have more smaller commits.


But I probably should wait with all that until 
ticket 7664 is merged.

-- 
Wolfgang



From hawkowl at atleastfornow.net  Mon Nov  3 06:43:40 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Mon, 3 Nov 2014 21:43:40 +0800
Subject: [Twisted-Python] The Path to Twisted 14.1
Message-ID: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>

Hi everyone,

To keep everyone in the loop...

Since 14.0 came out months ago, and we really should have 14.1, I think it’s time we bit the bullet and cleaned out the regressions to get it out the door. Unfortunately, all of the currently open regressions are from the new logging system (#6750, plus #7548 and #7545) Since these regressions are introduced by a new ticket, we should revert them, and get the regressions fixed before it is remerged. I’ll make a new milestone called “New Twisted Logging” or similar so that they’re all still kept track of as a group.

The only other big thing preventing 14.1 is https://twistedmatrix.com/trac/ticket/7647 , the patch that 14.0.1/14.0.2 was released to include. The patch fixes it, but not ideally, so it needs looking at.

Once I’ve reverted those tickets and we can get #7647 refined and merged in some form, 14.1 will be out the door :)

- hawkowl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20141103/cc6538f0/attachment.sig>

From glyph at twistedmatrix.com  Mon Nov  3 20:20:52 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 4 Nov 2014 04:20:52 +0100
Subject: [Twisted-Python] porting twisted.spread to Python3
In-Reply-To: <1863819.V4sVH8pbgI@i5>
References: <4121201.VS1rzsEyV3@i5> <12076355.cZLe9KzarU@i5>
 <20141005195829.17800.1945780271.divmod.xquotient.1155@top>
 <1863819.V4sVH8pbgI@i5>
Message-ID: <9354C696-1DFC-45BC-939A-53CEEB4BFFA9@twistedmatrix.com>


> On Nov 3, 2014, at 11:18 AM, Wolfgang Rohdewald <wolfgang.kde at rohdewald.de> wrote:
> 
> there now is https://github.com/wrohdewald/twisted.git
> 
> branch spread-py3-7598
> 
> Not all is finished, especially utf-8 wherever Python 3
> allows it, pbfailure, and handling of wired exceptions.
> 
> 
> what should I do next to start getting this into trunk? 
> Maybe
> 
> - open a ticket for porting banana
> - create a branch with all commits for that

Yep, this is right.  Creating a patch and attaching it to the ticket would also be useful.

> - do a pull request

Opening a pull request is not a particularly useful part of this workflow :-).  The ticket is sufficient.  See <https://github.com/twisted/twisted/pull/46> or any pull request closed recently for more information.

> I do not want to create one big patch because I think
> it is helpful to have more smaller commits.


> But I probably should wait with all that until ticket 7664 is merged.

I should note that this is already in review.  Anyone want to have a look?

-g
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20141104/4d0c6fb6/attachment-0002.bin>

From glyph at twistedmatrix.com  Mon Nov  3 21:10:53 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 4 Nov 2014 05:10:53 +0100
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
Message-ID: <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>


> On Nov 3, 2014, at 2:43 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
> Hi everyone,
> 
> To keep everyone in the loop...

Thanks for the update!

> Since 14.0 came out months ago, and we really should have 14.1, I think it’s time we bit the bullet and cleaned out the regressions to get it out the door. Unfortunately, all of the currently open regressions are from the new logging system (#6750, plus #7548 and #7545) Since these regressions are introduced by a new ticket, we should revert them, and get the regressions fixed before it is remerged. I’ll make a new milestone called “New Twisted Logging” or similar so that they’re all still kept track of as a group.
> 
> The only other big thing preventing 14.1 is https://twistedmatrix.com/trac/ticket/7647 , the patch that 14.0.1/14.0.2 was released to include. The patch fixes it, but not ideally, so it needs looking at.
> 
> Once I’ve reverted those tickets and we can get #7647 refined and merged in some form, 14.1 will be out the door :)

I have mixed feelings about this plan.

On the one hand, this is technically the way the policy works: if there's a regression that hasn't been in a release, it's supposed to be reverted.

On the other hand, this is not the way the policy has been enforced in the past.  Particularly, we've rarely done reverts where we had to revert multiple changes which depended upon each other, where regression fixes had already been accepted onto trunk and multiple outstanding branches which had already been through review were pending.  It would be nice if we could just get the regression fixes landed.

On the gripping hand, many of these regressions have been outstanding for months, and so if we could get these fixed promptly enough, presumably we would have done that already.

In favor again of reverting is the fact that no code outside twisted.python.logger or twisted.python.log has been modified to take advantage of the new system, so we're not going to be breaking any dependencies on trunk.

My biggest concern is that this feature was big enough that it dang near broke the review process the first time.  Clearly code review wasn't sufficient to spot these regressions in the first place.  There's no reason to believe that anything but code that lives on trunk for a while is going to flush out these more complex interactions.

Delaying the revert is likely to just make things more painful.  Tempting as it is to suggest, bitter experience has taught me that trying to cram things into a release is a recipe for sadness.  So rather than asking if you could hold off, could I instead make two requests for this feature:

Can please we do reviews of the fixes to the regressions as if they were landing on trunk, and not have this revert re-open the need to review the entire (rather large) change?
If we can manage to get this feature landed again quickly after 14.1, will you have time to do a fast-following 14.2?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141104/0ec78832/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20141104/0ec78832/attachment-0002.bin>

From hawkowl at atleastfornow.net  Tue Nov  4 02:38:13 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Tue, 4 Nov 2014 17:38:13 +0800
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
Message-ID: <A1B7F520-B08A-4319-B051-CC8F62B03BFE@atleastfornow.net>


On 4 Nov 2014, at 12:10, Glyph <glyph at twistedmatrix.com> wrote:
> 
> On the gripping hand, many of these regressions have been outstanding for months, and so if we could get these fixed promptly enough, presumably we would have done that already.

This is mainly why I am in favour of this plan. They’re not small fixes, so we can’t just mop them up in a day.
> 
> Delaying the revert is likely to just make things more painful.  Tempting as it is to suggest, bitter experience has taught me that trying to cram things into a release is a recipe for sadness.

*cough* 14.0 *cough* :)

> So rather than asking if you could hold off, could I instead make two requests for this feature:
> 
> 	• Can please we do reviews of the fixes to the regressions as if they were landing on trunk, and not have this revert re-open the need to review the entire (rather large) change?

How are we going to manage this? Do we need an “alternate” branch, which consists of #6750 + all the regression fixes, and the “review” is making sure that all of the known regressions are fixed? Or do we remerge it as a “private” API, maybe, so that we can still fit it mostly into our dev process? Or do we do a tubes and just spin it off into another thing of its own, then merge it when it’s finished? I’m not sure.

> 	• If we can manage to get this feature landed again quickly after 14.1, will you have time to do a fast-following 14.2?

As long as it’s not the 22nd of November or the weekend of the 7th of Dec (the former of which will be spent in a drunk stupor and the latter is my birthday), I can do it no problem.

- hawkie

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20141104/7c682bbd/attachment.sig>

From glyph at twistedmatrix.com  Tue Nov  4 03:07:14 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 4 Nov 2014 11:07:14 +0100
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <A1B7F520-B08A-4319-B051-CC8F62B03BFE@atleastfornow.net>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <A1B7F520-B08A-4319-B051-CC8F62B03BFE@atleastfornow.net>
Message-ID: <ACA36E7C-218B-463F-9EB6-6105D8A861EC@twistedmatrix.com>


> On Nov 4, 2014, at 10:38 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
>> 	• Can please we do reviews of the fixes to the regressions as if they were landing on trunk, and not have this revert re-open the need to review the entire (rather large) change?
> 
> How are we going to manage this? Do we need an “alternate” branch, which consists of #6750 + all the regression fixes, and the “review” is making sure that all of the known regressions are fixed? Or do we remerge it as a “private” API, maybe, so that we can still fit it mostly into our dev process? Or do we do a tubes and just spin it off into another thing of its own, then merge it when it’s finished? I’m not sure.

My idea would be to have a new 6750 branch, and have each regression branch be rebased off of that; then, each review would be merging an individual regression fix into new-6750, and finally, when they're all fixed, landing new-6750 on trunk with no new review provided all buildbots pass.

>> 	• If we can manage to get this feature landed again quickly after 14.1, will you have time to do a fast-following 14.2?
> 
> As long as it’s not the 22nd of November or the weekend of the 7th of Dec (the former of which will be spent in a drunk stupor and the latter is my birthday), I can do it no problem.

I figured you could be accommodating, but thanks a lot for confirming!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141104/d399675a/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20141104/d399675a/attachment-0002.bin>

From hawkowl at atleastfornow.net  Tue Nov  4 03:14:01 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Tue, 4 Nov 2014 18:14:01 +0800
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <ACA36E7C-218B-463F-9EB6-6105D8A861EC@twistedmatrix.com>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <A1B7F520-B08A-4319-B051-CC8F62B03BFE@atleastfornow.net>
 <ACA36E7C-218B-463F-9EB6-6105D8A861EC@twistedmatrix.com>
Message-ID: <4AF27F9F-4EC1-4A16-987C-AE6B0C4CEECF@atleastfornow.net>


On 4 Nov 2014, at 18:07, Glyph <glyph at twistedmatrix.com> wrote:

> 
>> On Nov 4, 2014, at 10:38 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
>> 
>>> 	• Can please we do reviews of the fixes to the regressions as if they were landing on trunk, and not have this revert re-open the need to review the entire (rather large) change?
>> 
>> How are we going to manage this? Do we need an “alternate” branch, which consists of #6750 + all the regression fixes, and the “review” is making sure that all of the known regressions are fixed? Or do we remerge it as a “private” API, maybe, so that we can still fit it mostly into our dev process? Or do we do a tubes and just spin it off into another thing of its own, then merge it when it’s finished? I’m not sure.
> 
> My idea would be to have a new 6750 branch, and have each regression branch be rebased off of that; then, each review would be merging an individual regression fix into new-6750, and finally, when they're all fixed, landing new-6750 on trunk with no new review provided all buildbots pass.

That seems logical to me.

> 
>>> 	• If we can manage to get this feature landed again quickly after 14.1, will you have time to do a fast-following 14.2?
>> 
>> As long as it’s not the 22nd of November or the weekend of the 7th of Dec (the former of which will be spent in a drunk stupor and the latter is my birthday), I can do it no problem.
> 
> I figured you could be accommodating, but thanks a lot for confirming!


:)

-hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20141104/d0c3bd66/attachment.sig>

From itamar at itamarst.org  Tue Nov  4 11:44:02 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 04 Nov 2014 13:44:02 -0500
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
Message-ID: <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>

 

On 2014-11-03 23:10, Glyph wrote: 

> In favor again of reverting is the fact that no code outside twisted.python.logger or twisted.python.log has been modified to take advantage of the new system, so we're not going to be breaking any dependencies on trunk.

Except for the fact that Twisted trunk is unusable on Python 3. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141104/23ba207c/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Nov  4 19:54:03 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Nov 2014 03:54:03 +0100
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
Message-ID: <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>


> On Nov 4, 2014, at 7:44 PM, Itamar Turner-Trauring <itamar at itamarst.org> wrote:
> 
> On 2014-11-03 23:10, Glyph wrote:
> 
>> In favor again of reverting is the fact that no code outside twisted.python.logger or twisted.python.log has been modified to take advantage of the new system, so we're not going to be breaking any dependencies on trunk.
> Except for the fact that Twisted trunk is unusable on Python 3.
> 

I don't follow.  Are you saying that logger fixed some python 3 stuff, and by reverting it we're losing that, or that log regressed after 14.0 and logger fixed it and that by reverting it we are regressing with respect to its usability in 14.0?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141105/7c1c48af/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20141105/7c1c48af/attachment-0002.bin>

From glyph at twistedmatrix.com  Wed Nov  5 01:28:03 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 5 Nov 2014 09:28:03 +0100
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
 <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
Message-ID: <AF07B936-273C-4640-AF30-BE9ED80BDB82@twistedmatrix.com>


> On Nov 5, 2014, at 3:54 AM, Glyph <glyph at twistedmatrix.com> wrote:
> 
>> On Nov 4, 2014, at 7:44 PM, Itamar Turner-Trauring <itamar at itamarst.org <mailto:itamar at itamarst.org>> wrote:
>> 
>> On 2014-11-03 23:10, Glyph wrote:
>> 
>>> In favor again of reverting is the fact that no code outside twisted.python.logger or twisted.python.log has been modified to take advantage of the new system, so we're not going to be breaking any dependencies on trunk.
>> Except for the fact that Twisted trunk is unusable on Python 3.
>> 
> 
> I don't follow.  Are you saying that logger fixed some python 3 stuff, and by reverting it we're losing that, or that log regressed after 14.0 and logger fixed it and that by reverting it we are regressing with respect to its usability in 14.0?

On second thought, a more appropriate question:

What's the link to the ticket? :)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141105/431df273/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20141105/431df273/attachment-0002.bin>

From johnaherne at rocs.co.uk  Wed Nov  5 03:54:38 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 5 Nov 2014 10:54:38 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHjYVVPBw8QNNjxbaPKr9a0Kj4yBUgy65jZJP_5KQfu3oBA@mail.gmail.com>

Apologies in advance for the rather basic questions I have here, but I am a
bit stuck.

I am looking at ssl with twisted 14.0.0

I have loaded all the dependencies crypto, pycrypto, service_identity, six,
idna, cffi, pyasn1, pyopenssl 0.14, openssl 1.0.1g

I am running this on windows7, windows 2008r2

I have read through Using TLS in Twisted several times but still find
myself not sure as to what I should do.

I need both server and client set up.

I have a server end where I have a GoDaddy certificate and certificate
chain. So on the server end I need to pass to ssl.CertificateOptions the
privatekey and certificate.

I also need to pass in the location of the GoDaddy bundle.

I have a set up using Cherrypy and this now works fine. But I need it
working with Twisted.


Now this is where I am not so clear. Should I pass the bundle as TrustRoot
or as extraCertChain.

The docs seem to say that on Windows there is no cert store to be used as
trustRoot.

If anyone can throw some light on this I would be very grateful.

For the client using Twisted.web.Agent, I need to verify a different ssl
certificate on another server system I connect to.

At the moment, I can connect without verifying the certificate, but these
days that is no longer acceptable.

So I try the example in the docs for checking a certificate but it fails on
all examples, including www.twistedmatrix.com. I assume this is because I
do not have a default set of certificates in a store to check against.

If I use the requests package I can get it to verify or not the server
certificate,  but when I turn to twisted it is not clear what I should be
doing.

The example specifies an 'authority' public.pem for the client to check
against.

So should I be looking for the way requests works where I do not specify an
authority  and it works by finding a bunch of certs somewhere.

Or do I pass in a cert that is specific to the server I am connecting to
and it will only check against that. This seems more specific and more
secure.


A final point. I need to be able to confirm which version of openssl I am
connecting with. Is there a way to pin down which version pyopenssl is
finding.


Thanks for any information and pointers.





-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141105/b8459aff/attachment-0002.html>

From itamar at itamarst.org  Wed Nov  5 16:57:37 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 05 Nov 2014 18:57:37 -0500
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
 <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
Message-ID: <545AB971.2030708@itamarst.org>

On 11/04/2014 09:54 PM, Glyph wrote:
>
>
> I don't follow.  Are you saying that logger fixed some python 3 stuff, 
> and by reverting it we're losing that, or that log regressed after 
> 14.0 and logger fixed it and that by reverting it we are regressing 
> with respect to its usability in 14.0?
>
Logger broke installation on Python 3; Twisted trunk is unusable on 
Python 3 because of logger. It's a breakage that can be easily fixed 
(one of the modules isn't on the list of things to be installed) but 
it's incorrect to say that logger didn't break existing code.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141105/d412ec4d/attachment-0002.html>

From itamar at itamarst.org  Wed Nov  5 17:25:05 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 05 Nov 2014 19:25:05 -0500
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <545AB971.2030708@itamarst.org>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
 <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
 <545AB971.2030708@itamarst.org>
Message-ID: <545ABFE1.3090904@itamarst.org>

http://twistedmatrix.com/trac/ticket/7563



From exarkun at twistedmatrix.com  Wed Nov  5 18:03:56 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 06 Nov 2014 01:03:56 -0000
Subject: [Twisted-Python] The Path to Twisted 14.1
In-Reply-To: <545AB971.2030708@itamarst.org>
References: <ED84593A-B8E6-4848-A23E-9554DB621999@atleastfornow.net>
 <11FC1AB3-236D-4663-B6C3-C52A567ADFFC@twistedmatrix.com>
 <5ca810b683ecfe0b0c2af4832618976d@itamarst.org>
 <F635E389-313E-478F-BCE4-695AE66684A3@twistedmatrix.com>
 <545AB971.2030708@itamarst.org>
Message-ID: <20141106010356.5924.264490254.divmod.xquotient.13@top>




On 5 Nov, 11:57 pm, itamar at itamarst.org wrote:
>On 11/04/2014 09:54 PM, Glyph wrote:
>>
>>
>>I don't follow.  Are you saying that logger fixed some python 3 stuff, 
>>and by reverting it we're losing that, or that log regressed after 
>>14.0 and logger fixed it and that by reverting it we are regressing 
>>with respect to its usability in 14.0?
>Logger broke installation on Python 3; Twisted trunk is unusable on 
>Python 3 because of logger. It's a breakage that can be easily fixed 
>(one of the modules isn't on the list of things to be installed) but 
>it's incorrect to say that logger didn't break existing code.

This sub-thread seems to be based on a misreading/misunderstanding of an 
earlier statement.  This one, I think:
>In favor again of reverting is the fact that no code outside 
>twisted.python.logger or twisted.python.log has been modified to take 
>advantage of the new system, so we're not going to be breaking any 
>dependencies on trunk.

I don't think it has been suggested that logger didn't break anything 
(in fact, clearly it broke many things - that's why it's being reverted 
;).

Instead, Glyph was just commenting that removing logger doesn't have 
particularly far-reaching consequences throughout Twisted because none 
of Twisted has been updated to use the new API instead of the old API.

Jean-Paul



From glyph at twistedmatrix.com  Thu Nov  6 12:04:42 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 6 Nov 2014 20:04:42 +0100
Subject: [Twisted-Python] twisted ssl server and client
In-Reply-To: <CAKmUHjYVVPBw8QNNjxbaPKr9a0Kj4yBUgy65jZJP_5KQfu3oBA@mail.gmail.com>
References: <CAKmUHjYVVPBw8QNNjxbaPKr9a0Kj4yBUgy65jZJP_5KQfu3oBA@mail.gmail.com>
Message-ID: <E66944DD-C500-4160-8DCB-FB902260C51D@twistedmatrix.com>

> On Nov 5, 2014, at 11:54 AM, John Aherne <johnaherne at rocs.co.uk> wrote:

You're asking a lot of questions in your original message, so let me just focus on this one:

> The docs seem to say that on Windows there is no cert store to be used as trustRoot.
> 
> If anyone can throw some light on this I would be very grateful.

On Windows, most distributions of OpenSSL don't include a default cert store.  However, you can bundle your own certificates as OpenSSL's default trust store, put them in the correct location, and Twisted will load them; there's nothing platform-specific about that code.  That's probably your best bet, right now.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141106/4ed62d0a/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4151 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20141106/4ed62d0a/attachment-0002.bin>

From johnaherne at rocs.co.uk  Fri Nov  7 06:14:10 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Fri, 7 Nov 2014 13:14:10 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHja1d3_v119Hx+j0i=zt50FcA8+NCjnPYqimmFthq+R4jw@mail.gmail.com>

Thanks for the reply.

In the end I took the examples in the docs and changed them to fit.

So I have ended up with something that seems to work.

But I wouldn't mind if someone can tell me if what I have done is miles
wrong or spot on or could do with improvement or you have missed the point
completely.

Thanks for any pointers


Below is the code with simple changes made

#!/usr/bin/env python
# Copyright (c) Twisted Matrix Laboratories.
# See LICENSE for details.

echoserv_ssl.py

import sys

from twisted.internet import reactor, ssl, protocol, task, defer
from twisted.python import log

import echoserv

log.startLogging(sys.stdout)
#certificate = ssl.PrivateCertificate.loadPEM(certData)
certificate2 =
ssl.DefaultOpenSSLContextFactory('d:\\openssl\\ibook\\ibookservernp.key',

 'd:\\openssl\\ibook\\7044921f82b7.crt')
print 'CERT2', certificate2

my_context2 = certificate2.getContext()
my_context2.load_verify_locations('d:\\openssl\\ibook\\gd_bundle-g2-g1.crt')

factory = protocol.Factory.forProtocol(echoserv.Echo)
print 'CERT OPTIONS', dir(certificate2)
reactor.listenSSL(8000, factory, certificate2)



echoserv.py

#!/usr/bin/env python

# Copyright (c) Twisted Matrix Laboratories.
# See LICENSE for details.

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor

### Protocol Implementation

# This is just about the simplest possible protocol
class Echo(Protocol):
    def dataReceived(self, data):
        """
        As soon as any data is received, write it back.
        """
        print 'MESSAGE', data
        self.transport.write(data)  #'HELLO THERE?\r\n')


def main():
    f = Factory()
    f.protocol = Echo
    reactor.listenTCP(8000, f)
    reactor.run()

if __name__ == '__main__':
    main()


-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141107/a1202f31/attachment-0002.html>

From trac at twistedmatrix.com  Sun Nov  9 00:05:18 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 09 Nov 2014 07:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1415516718.27.1495649607994392280@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141109/f31e729a/attachment-0002.html>

From hs at ox.cx  Sun Nov  9 03:47:39 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Sun, 09 Nov 2014 11:47:39 +0100
Subject: [Twisted-Python] twisted ssl server and client
In-Reply-To: <CAKmUHja1d3_v119Hx+j0i=zt50FcA8+NCjnPYqimmFthq+R4jw@mail.gmail.com>
References: <CAKmUHja1d3_v119Hx+j0i=zt50FcA8+NCjnPYqimmFthq+R4jw@mail.gmail.com>
Message-ID: <A0BF42BE-C144-4EFF-BBC1-4AA30A520099@ox.cx>

John,

On 7 Nov 2014, at 14:14, John Aherne wrote:

> Thanks for the reply.
>
> In the end I took the examples in the docs and changed them to fit.
>
> So I have ended up with something that seems to work.
>
> But I wouldn't mind if someone can tell me if what I have done is 
> miles
> wrong or spot on or could do with improvement or you have missed the 
> point
> completely.

I’m a bit confused as for what you’re trying to achieve.  Let me 
give you general pointers and maybe you’ll ask more specific questions 
afterwards.

I understand you want to use TLS both from a server and a client.  
Servers and clients have very different duties when it comes to TLS (and 
if you want to hear/learn more about them, you may want to take some 
time and watch my PyCon talk about it: 
https://www.youtube.com/watch?v=SBQB_yS2K4M ).

The *server* needs to make sure that its certificate chain is 
trustworthy, for that you need to load the certificate and the chain 
file you got from GoDaddy.  FWIW, you may want to use 
https://warehouse.python.org/project/pem/ for that because it takes some 
tediousness from it.

You should use some third-party application to verify you really got 
that right (don’t use the openssl CLI program, it’s confusing).

The *client* needs to verify the aforementioned certificate chain for 
its trustworthiness and whether it’s valid for the hostname you wanted 
to connect to.  In order to verify the trustworthiness, it requires a 
list of CAs it trusts.  One of them has to sign your final certificate 
in your chain file.

As glyph mentioned, loading CAs is a bit finicky and I have no 
experience on Windows unfortunately.  There is 
https://warehouse.python.org/project/wincertstore/ to extract them from 
the Windows store but I have no idea whether the output is useful with 
pyOpenSSL/Twisted.  A useful fallback is to use the bundle you get from 
https://warehouse.python.org/project/certifi/ .  If you’d like to help 
us to make this more friendly for Windows users we’d (and they!) would 
be eternally indebted. :)

It’s also worth noting, that you’re using the obsolete 
`DefaultOpenSSLContextFactory`, please use 
`twisted.internet.ssl.CertificateOptions` instead.  Is it possible, that 
you’re reading an older version of the TLS docs? Make sure to use 
http://twistedmatrix.com/documents/current/core/howto/ssl.html and also 
run Twisted 14.0.2 if you’re serious about using TLS.

Let us know if there’s something else unclear.

—h



From johnaherne at rocs.co.uk  Sun Nov  9 23:54:48 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Mon, 10 Nov 2014 06:54:48 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHjYh3C8ROZRWDgD+FS7RCqpG3GKQYZhuEc=mH8cWLBuerg@mail.gmail.com>

Hynek

Thanks for the information.

Very interesting. I was wondering how to get the mozilla cert package.

For the server I need to provide a certificate that can be verified by an
external source.

I used the requests package to test that it could verify my certificate
without knowing exactly what it was doing.

As far as I could see it verified the certificate and I then got an
external source to also connect and send information having verified the
certificate. That worked whereas before they had failed with SSL errors.

So for the server, the certificate, key and godaddy bundle seem to be
working.

I found the DefaultOpenSSLContextFactory by googling for clues as to what
to do.

I then looked up the source to see what it required. And it seemed to do
the trick.

I have seen the documentation pointing at CertificateOptions but while I
was trying to find out how I could get my godaddy bundle added in I found
DefaultOpenSSlContextFactory which was easy to add my bundle to.

It was not clear how I could do that with CertificateOptions. When I tried,
I got unknown key argument because it seemed I could pass a key argument in
but all my attempts failed.

I have twisted 14.0.0 on one machine and twisted 14.0.2 on another and I
bounce between them checking what works on one also works on the other.

I have a lot of stuff running on the machine with 14.0.0 so I was not keen
to upgrade until I had a clear idea of what I as doing.

For the client I need to connect back to the external site. I can do this
without verifying the certificate, but it would seem these days that is no
longer sufficient.

So I needed twisted.web.Agent to be able to verify the remote certificate.

Trying that and once again googling for BrowserLikeContextFactory, I find
that it has a real problem verifying hostnames. And your name features
heavily in the list of people who have looked at the problem.

I found that on windows 7 32 bit I could not get it to work. It always
returned an SSL error. So for the time being I have abandoned that and am
ignoring the problem. Just relying on finding and accepting any certificate.

I need most of all to make sure that the server side is working properly,
so your information is extremely welcome.

I shall have to look at CertificateOptions again and see what the problem
is.

I have a feeling that everything is working with SSLv3 since all the error
messages come back mentioning SSLv3. So I imagine at some point I need to
be able to specify TLS and one of its variants.

I hope I have explained a bit more clearly what I am trying to do.

Regards

-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141110/61048e40/attachment-0002.html>

From johnaherne at rocs.co.uk  Mon Nov 10 03:32:01 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Mon, 10 Nov 2014 10:32:01 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHjbg28KDVBKBWNfq5NwVWwJ_EAxsTcxZKP2HBi_q56OGmg@mail.gmail.com>

So I am now looking at CertificateOptions in more detail.

But I am stuck trying to figure out how to add my GoDaddy cert to trustRoot.

Here is what I am doing so far to see what is happening. Bu I think I am
getting further and further from what I should be doing.

If anyone can point out what must be the obvious thing to do, GREAT!


#!/usr/bin/env python
# Copyright (c) Twisted Matrix Laboratories.
# See LICENSE for details.

import sys

from twisted.internet import reactor, ssl, protocol, task, defer
from twisted.python import log

import echoserv

log.startLogging(sys.stdout)

ctx = ssl.CertificateOptions()

certData2 = open('d:\\openssl\\ibook\\ibook2.pem', 'rb').read()
certificate2 = ssl.PrivateCertificate.loadPEM(certData2)

print 'CERT2', certificate2.options
print 'CERT2', dir(certificate2)
print 'CERT2 OPTIONS', certificate2.options()
print 'CERT2OPTS', dir(certificate2.options)
certGD = open('d:\\openssl\\ibook\\gd_bundle-g2-g1.crt', 'rb').read()
#ctx.trustRoot = ssl.Certificate.loadPEM(certGD)
certificate3  = certificate2.options(ssl.Certificate.loadPEM(certGD))
print 'cERT3', certificate3.privateKey
print 'trustRoot2TROOT', certificate3.trustRoot
#certificate2.options().trustRoot = ssl.Certificate.loadPEM(certGD)
print 'trustRoot', certificate3
print 'trustRoot2type', type(certificate3.trustRoot)
print 'trustRoot2TROOT', certificate3.trustRoot
print 'trustRoot2PK', certificate3.privateKey
print 'trustRoot2CERT', certificate3.certificate
print 'trustRoot2VER', certificate3.verify
#print 'trustRoot2', ctx.trustRoot

factory = protocol.Factory.forProtocol(echoserv.Echo)
reactor.listenSSL(8000, factory, certificate2.options(certificate3))
#reactor.listenSSL(8000, factory, certificate3)


reactor.run()


Thanks for any pointers.



-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141110/d44bfef7/attachment-0002.html>

From hs at ox.cx  Mon Nov 10 03:48:15 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Mon, 10 Nov 2014 11:48:15 +0100
Subject: [Twisted-Python] twisted ssl server and client
In-Reply-To: <CAKmUHjbg28KDVBKBWNfq5NwVWwJ_EAxsTcxZKP2HBi_q56OGmg@mail.gmail.com>
References: <CAKmUHjbg28KDVBKBWNfq5NwVWwJ_EAxsTcxZKP2HBi_q56OGmg@mail.gmail.com>
Message-ID: <DC3EABE7-94F7-4130-9C82-8F9EB27B2ACA@ox.cx>

On 10 Nov 2014, at 11:32, John Aherne wrote:

> So I am now looking at CertificateOptions in more detail.
>
> But I am stuck trying to figure out how to add my GoDaddy cert to 
> trustRoot.

You don’t need trustRoot for servers.  You need to supply an 
extraCertChain which – as I’ve mentioned before – is easiest with 
the help of pem: https://github.com/hynek/pem#twisted



From johnaherne at rocs.co.uk  Mon Nov 10 05:28:25 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Mon, 10 Nov 2014 12:28:25 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHjZ+5mU8icM_=VPDSy=jA32uMtS-WDJ4fTc1P_p7Dbatjw@mail.gmail.com>

<<You don’t need trustRoot for servers.  You need to supply an
extraCertChain which – as I’ve mentioned before – is easiest with the help
of pem: https://github.com/hynek/pem#twisted>>

Thanks.

That link may be just what I need.

I'll see how I get on.



-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141110/07c59294/attachment-0002.html>

From johnaherne at rocs.co.uk  Mon Nov 10 06:20:34 2014
From: johnaherne at rocs.co.uk (John Aherne)
Date: Mon, 10 Nov 2014 13:20:34 +0000
Subject: [Twisted-Python] twisted ssl server and client
Message-ID: <CAKmUHjY+P1vK4CZ6PWiDVL0hq-JqPD8nCbWE0sP0q9BMoPSQ2w@mail.gmail.com>

Hynek

Well, thank you very much!

Put it in and tested with request package and all seems to be working.

Will test it later with the real system.

That has saved me a lot of hassle.

-- 
*John Aherne*




*www.rocs.co.uk <http://www.rocs.co.uk>*
020 7223 7567
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141110/b4319f17/attachment-0002.html>

From greytiger63 at yahoo.com  Mon Nov 10 07:47:50 2014
From: greytiger63 at yahoo.com (Tracy Email)
Date: Mon, 10 Nov 2014 08:47:50 -0600
Subject: [Twisted-Python] twisted ssl server and client
In-Reply-To: <CAKmUHjY+P1vK4CZ6PWiDVL0hq-JqPD8nCbWE0sP0q9BMoPSQ2w@mail.gmail.com>
References: <CAKmUHjY+P1vK4CZ6PWiDVL0hq-JqPD8nCbWE0sP0q9BMoPSQ2w@mail.gmail.com>
Message-ID: <697A82ED-8D12-4A2F-B53A-5677896D0CD2@yahoo.com>

Do I have to sue this company? Stop sending me emails!

Sent from my iPhone

> On Nov 10, 2014, at 7:20 AM, John Aherne <johnaherne at rocs.co.uk> wrote:
> 
> Hynek
> 
> Well, thank you very much!
> 
> Put it in and tested with request package and all seems to be working.
> 
> Will test it later with the real system.
> 
> That has saved me a lot of hassle.
> 
> -- 
> John Aherne
> 
> 
> 
> www.rocs.co.uk
> 020 7223 7567
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141110/eae66301/attachment-0002.html>

From kumarvikas2605 at gmail.com  Mon Nov 10 08:07:55 2014
From: kumarvikas2605 at gmail.com (Vikas Kumar)
Date: Mon, 10 Nov 2014 20:37:55 +0530
Subject: [Twisted-Python] Manhole info needed
Message-ID: <CAP91sFXE1_6UqZ2gdif_rBJn-=P-dEK6vHycPw-T1tutsNBuHg@mail.gmail.com>

Hi,

Can somebody tell me what is the need of manhole in twisted? Specially I've
seen them in files like tap.py (twisted application process).

One usecase I've seen them is wrt ShellFactory classes:

manhole = ShellFactory()
            manhole.setService(self)

internet.TCPServer(<someservice_name>.config.dget('jsonapi.port') + 10000,
manhole, interface='127.0.0.1').setServiceParent(self)

Could somebody please tell me what is being tried to achieve over here in
the above code?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141110/84dabe1e/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Nov 10 12:46:54 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 10 Nov 2014 20:46:54 +0100
Subject: [Twisted-Python] Manhole info needed
In-Reply-To: <CAP91sFXE1_6UqZ2gdif_rBJn-=P-dEK6vHycPw-T1tutsNBuHg@mail.gmail.com>
References: <CAP91sFXE1_6UqZ2gdif_rBJn-=P-dEK6vHycPw-T1tutsNBuHg@mail.gmail.com>
Message-ID: <0A8A2BAE-4B62-4902-ADCD-DC0F8942C4CB@twistedmatrix.com>


> On Nov 10, 2014, at 4:07 PM, Vikas Kumar <kumarvikas2605 at gmail.com> wrote:
> 
> Could somebody please tell me what is being tried to achieve over here in the above code?

As with the real object of a <https://en.wikipedia.org/wiki/Manhole>, a Twisted manhole is a maintenance hatch to get into your program and see what's going on.

That code is just creating one so you can telnet in to your program from localhost and execute Python code to inspect its state.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141110/a7311779/attachment-0002.html>

From greytiger63 at yahoo.com  Mon Nov 10 14:21:21 2014
From: greytiger63 at yahoo.com (Tracy Email)
Date: Mon, 10 Nov 2014 15:21:21 -0600
Subject: [Twisted-Python] Manhole info needed
In-Reply-To: <0A8A2BAE-4B62-4902-ADCD-DC0F8942C4CB@twistedmatrix.com>
References: <CAP91sFXE1_6UqZ2gdif_rBJn-=P-dEK6vHycPw-T1tutsNBuHg@mail.gmail.com>
 <0A8A2BAE-4B62-4902-ADCD-DC0F8942C4CB@twistedmatrix.com>
Message-ID: <FC2B46C9-6CC3-4068-92BE-14D2019D1782@yahoo.com>

By law I am requesting that you stop sending me emails from this company or I will file suit against you.

Sent from my iPhone

> On Nov 10, 2014, at 1:46 PM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Nov 10, 2014, at 4:07 PM, Vikas Kumar <kumarvikas2605 at gmail.com> wrote:
>> 
>> Could somebody please tell me what is being tried to achieve over here in the above code?
> 
> As with the real object of a <https://en.wikipedia.org/wiki/Manhole>, a Twisted manhole is a maintenance hatch to get into your program and see what's going on.
> 
> That code is just creating one so you can telnet in to your program from localhost and execute Python code to inspect its state.
> 
> -g
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141110/4a9f1c30/attachment-0002.html>

From peter.westlake at pobox.com  Thu Nov 13 05:15:28 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 13 Nov 2014 12:15:28 +0000
Subject: [Twisted-Python] How do I debug this network problem?
Message-ID: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>

TL;DR - how do I debug the sequence of events between an AMP answer box
arriving at a NIC, and AMP firing the callRemote Deferred?

I have an application with two processes, on separate machines,
communicating using AMP. One process does a callRemote, which returns a
Deferred, which is never fired. I know from tcpdump that the AMP answer
box arrives safely at the network interface card.

This isn't something which can easily be reproduced. Instead, I want to
ask the specific question: how do I debug the data path from the NIC to
AMP firing its Deferred?

I've had a look at the code, and got rather lost amongst the interfaces
and inheritance and protocols and transports. If someone can help me
narrow down the relevant bits of code, I can put in some Python tracing.

FWIW, this is happening on Debian Squeeze and Wheezy, on VMs hosted on
Xen 6.5. It only happens on some specific machines, and only sometimes.
The same code has run flawlessly for many years elsewhere, though this
same bug did happen there too some years ago. That time, it went away
after most of the software in the system was upgraded. I tried that this
time - Debian Squeeze to Wheezy, with associated kernel, Python and
Twisted versions - but the problem persists. Anyway, I don't want to
make the problem go away without understanding it, for fear that it will
come back a third time.

Peter.



From glyph at twistedmatrix.com  Thu Nov 13 06:17:19 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 13 Nov 2014 14:17:19 +0100
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
Message-ID: <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>


> On Nov 13, 2014, at 1:15 PM, Peter Westlake <peter.westlake at pobox.com> wrote:
> 
> I've had a look at the code, and got rather lost amongst the interfaces
> and inheritance and protocols and transports. If someone can help me
> narrow down the relevant bits of code, I can put in some Python tracing.
> 

I could describe all the interfaces and inheritance and protocols and transports, but since you don't want to puzzle out all that code, presumably such a description would be overly complex :).

A good place to start would be to figure out if the data is getting to Twisted at all, which means instrumenting your Protocol.

If you've done the default thing, and just done class Something(AMP):, this means you should override dataReceived, like so:

from __future__ import print_function
from twisted.protocols.amp import AMP
class MyAMP(AMP, object):
    def dataReceived(self, data):
        print("Got some data", repr(data))
        return super(MyAMP, self).dataReceived(data)

If you're not seeing anything, that will give you an idea of whether your kernel is not actually delivering that data to Twisted.

There are, of course, a plethora of other things that could be going wrong - maybe your Twisted program is stuck in some blocking function elsewhere and the reactor loop isn't running at all, maybe you're using some policy wrapper which is buffering incorrectly... but that's a good sanity check to start with.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141113/64afb8c9/attachment-0002.html>

From peter.westlake at pobox.com  Thu Nov 13 07:40:30 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 13 Nov 2014 14:40:30 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
Message-ID: <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>



On Thu, 13 Nov 2014, at 13:17, Glyph wrote:
>
>> On Nov 13, 2014, at 1:15 PM, Peter Westlake
>> <peter.westlake at pobox.com> wrote:
>>
>> I've had a look at the code, and got rather lost amongst the
>> interfaces and inheritance and protocols and transports. If someone
>> can help me narrow down the relevant bits of code, I can put in some
>> Python tracing.
>>
>
> I could describe all the interfaces and inheritance and protocols and
> transports, but since you don't want to puzzle out all that code,
> presumably such a description would be overly complex :).
>
> A good place to start would be to figure out if the data is getting to
> Twisted at all, which means instrumenting your Protocol.
>
> If you've done the default thing, and just done class Something(AMP):,
> this means you should override dataReceived, like so:
>
>> *from* *__future__* *import* print_function
>> *from**twisted.protocols.amp**import* AMP *class**MyAMP*(AMP,
>> object): *def* dataReceived(self, data): *print*("Got some data",
>> repr(data)) *return* super(MyAMP, self).dataReceived(data)
>
> If you're not seeing anything, that will give you an idea of whether
> your kernel is not actually delivering that data to Twisted.
>
> There are, of course, a plethora of other things that could be going
> wrong - maybe your Twisted program is stuck in some blocking function
> elsewhere and the reactor loop isn't running at all, maybe you're
> using some policy wrapper which is buffering incorrectly... but that's
> a good sanity check to start with.
>

I'm certainly not averse to understanding the code, and if you had time
to describe it, that would be very kind, thank you!

I've put in the dataReceived, and the answer box does *not* make it into
the Protocol. There are two entries in protocol._outstandingRequests:
{'2189': <Deferred...>, '2188': <Deferred...>} and the log output shows
2186, 2187, 218a, 218b, ...

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141113/01fd6de4/attachment-0002.html>

From gavin at gromper.net  Thu Nov 13 07:57:40 2014
From: gavin at gromper.net (Gavin Panella)
Date: Thu, 13 Nov 2014 14:57:40 +0000
Subject: [Twisted-Python] Sending longer messages in AMP
Message-ID: <CALL7chnBJR9oz4PDi5GkD-7hTtFSsz2Y0085T6qaoJ0AfKkNMg@mail.gmail.com>

Hi,

We're using AMP and are starting to hit TooLong errors when scaling
our application. In one respect it's a sign that we should do
something like paging large requests and responses, but that's a lot
more work, and comes with its own problems. We also don't need
particularly large payloads: right now, a limit of ~500kiB would allow
us to scale as far as we need and beyond.

I've put together a fork of Twisted's AMP implementation that uses
32-bit length prefixes everywhere, though it limits the maximum
message size to 2MiB. Every other aspect of it is the same so it's a
drop-in replacement, as long as both ends of a connection use it.
However, there's no negotiation phase so it's completely incompatible
on the wire. The overhead of a few extra bytes is negligible for our
use cases, where the networks are all assumed to be low-latency
high-bandwidth LANs.

Are there any reasons that we shouldn't be doing this? Was there a
good reason for 16-bit length prefixes that still holds? Should we be
doing something else?

If I assume that the answers are all no, would someone find this
protocol useful if we submitted it for inclusion in Twisted itself?
The code right now is a straight copy of amp.py and test_amp.py with
changes to 32-bit length prefixes everywhere, but for upstreaming we'd
probably propose instead to modify the original to have an optional
negotiation phase, and to make the maximum message size a parameter.

Thanks!

Gavin.



From glyph at twistedmatrix.com  Thu Nov 13 09:23:15 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 13 Nov 2014 17:23:15 +0100
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
Message-ID: <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>

> On Nov 13, 2014, at 3:40 PM, Peter Westlake <peter.westlake at pobox.com> wrote:
> 
> I'm certainly not averse to understanding the code, and if you had time to describe it, that would be very kind, thank you!

Well if it's not even hitting dataReceived then a more subtle exploration is not necessary! ;-)

> I've put in the dataReceived, and the answer box does not make it into the Protocol. There are two entries in protocol._outstandingRequests: {'2189': <Deferred...>, '2188': <Deferred...>} and the log output shows 2186, 2187, 218a, 218b, ...

So, wait a second.

You said you're looking at tcpdump, and it's showing you that your outstanding requests - in this case, 2188 and 2189 - are in fact being answered. But then you say you're looking at the dump from dataReceived, and seeing that not only are 2188 and 2189 not being answered from that layer, but 218a and 218b are being answered?

Simply put: that should be impossible.  TCP is an ordered stream.  If you received answers to 2188 and 2189 on the wire in tcpdump, you should see those come back to dataReceived first.  What kind of transport is this hooked up to?  A regular socket?  Is there TLS involved?  Did you run tcpdump for that same session?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141113/285ffe3c/attachment-0002.html>

From twisted-python at 2xlp.com  Thu Nov 13 09:56:04 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Thu, 13 Nov 2014 11:56:04 -0500
Subject: [Twisted-Python] is it possible to change the isolation level of a
	psycopg2 connection under enterprise.adbapi ?
Message-ID: <0B68D519-F1B8-4A12-B63A-180B6587A39E@2xlp.com>

there doesn't seem to be a way to access the connection objects within the pool ( psycopg2 manages this via `connection.set_isolation_level(X)`

the only workaround I can think of seems to be emitting raw sql when I first start the transaction - but this doesn't seem right.

am i missing anything?


From peter.westlake at pobox.com  Thu Nov 13 10:01:46 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Thu, 13 Nov 2014 17:01:46 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
Message-ID: <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>



>> I've put in the dataReceived, and the answer box does*not*make it
>> into the Protocol. There are two entries in
>> protocol._outstandingRequests: {'2189': <Deferred...>, '2188':
>> <Deferred...>} and the log output shows 2186, 2187, 218a, 218b, ...
>
> So, wait a second.
>
> You said you're looking at tcpdump, and it's showing you that your
> outstanding requests - in this case, 2188 and 2189 - are in fact being
> answered. But then you say you're looking at the dump from
> dataReceived, and seeing that not only are 2188 and 2189 not being
> answered from that layer, but 218a and 218b *are* being answered?
>
> Simply put: that should be impossible. TCP is an ordered stream. If
> you received answers to 2188 and 2189 on the wire in tcpdump, you
> should see those come back to dataReceived first. What kind of
> transport is this hooked up to? A regular socket? Is there TLS
> involved? Did you run tcpdump for that same session?

No TLS, just TCP, created with
twisted.application.internet.TCPClient(host, port, protocolfactory).

I didn't record this session with tcpdump, but from a previous one I can
say that yes, some Deferreds are left hanging around waiting for a
response while subsequent ones have already received one. There was no
interruption or irregularity in the TCP stream.

tcpdump: 2186, 2187, 2188, 2189, 218a, 218b

dataReceived: 2186, 2187, 218a, 218b

_outstandingRequests: {2188, 2189}

So as you say, TCP must have delivered the data to someone, or at least
believe it has. How much code is there between there and dataReceived? I
imagine most of it is in the kernel?

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141113/b3770ca2/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Nov 13 11:19:20 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 13 Nov 2014 18:19:20 -0000
Subject: [Twisted-Python] Sending longer messages in AMP
In-Reply-To: <CALL7chnBJR9oz4PDi5GkD-7hTtFSsz2Y0085T6qaoJ0AfKkNMg@mail.gmail.com>
References: <CALL7chnBJR9oz4PDi5GkD-7hTtFSsz2Y0085T6qaoJ0AfKkNMg@mail.gmail.com>
Message-ID: <20141113181920.5924.1200765606.divmod.xquotient.45@top>

On 02:57 pm, gavin at gromper.net wrote:
>Hi,
>
>We're using AMP and are starting to hit TooLong errors when scaling
>our application. In one respect it's a sign that we should do
>something like paging large requests and responses, but that's a lot
>more work, and comes with its own problems. We also don't need
>particularly large payloads: right now, a limit of ~500kiB would allow
>us to scale as far as we need and beyond.
>
>I've put together a fork of Twisted's AMP implementation that uses
>32-bit length prefixes everywhere, though it limits the maximum
>message size to 2MiB. Every other aspect of it is the same so it's a
>drop-in replacement, as long as both ends of a connection use it.
>However, there's no negotiation phase so it's completely incompatible
>on the wire. The overhead of a few extra bytes is negligible for our
>use cases, where the networks are all assumed to be low-latency
>high-bandwidth LANs.
>
>Are there any reasons that we shouldn't be doing this? Was there a
>good reason for 16-bit length prefixes that still holds? Should we be
>doing something else?

The short length limit is in place to encourage two things:

  * messages that can be processed in a cooperative-multitasking-friendly 
way

  * the AMP channel can reliably used to multiplex multiple operations

The limit encourages the former by limiting the total amount of data 
it's possible to receive in a single command.  Of course, you can still 
do ridiculously complicated work based on a small bit of data so this 
doesn't guarantee that no matter what you do you'll be safe.  But doing 
even something simple on a ridiculously large amount of data is probably 
guaranteed to take a while.

The limit encourages the latter by putting a limit on the data that 
needs to be transferred to complete any one command (or answer).  Again, 
this isn't a guarantee of safety (you could always have a `for i in 
range(1e10): callRemote(...)` loop and clog up the channel for ages) but 
it pushes things a bit more in that direction.

At ClusterHQ we *also* maintained a fork of AMP with this limit raised. 
Basically, it worked.  It did let us get into the kind of trouble that 
the limit was supposed to try to avoid (in particular it let us send 
around messages that would take longer and longer to be processed - in a 
system where keeping latency down was actually sort of important; 
fortunately we had *worse* problems introducing latency so this in 
particular never bit us too hard ;).
>If I assume that the answers are all no, would someone find this
>protocol useful if we submitted it for inclusion in Twisted itself?

There are better solutions to the problem.  The trouble is that they're 
also more work to implement. ;)  I think Twisted should hold out for the 
better solutions though, not adopt a like-AMP-but-with-different-hard- 
coded-limits solution.

What are the better solutions?  Library support for paging, basically. 
Or, to consider things more generally, library support for streaming. 
The AMP implementation in Twisted (note, not the *protocol*) should be 
extended to make it easy to pass arbitrarily large streams of data 
around - suitably broken into smaller pieces at the box level.

As of right now, the way I'd do that is by introducing a new argument 
type (or two) supporting `IProducer` and `IConsumer`.  Pass in an 
`IProducer` and the library will take the necessary steps to read data 
out of it, chunk it up into <=16kB chunks, and re-assemble them on the 
receiving side (as another `IProducer`).

There are two reasons I'm not working on this right now (apart from the 
standard reasons of not having time to do so ;):

  1) IProducer / IConsumer aren't amenable to this kind of decoupling. 
You can register a producer with a consumer but you can't register a 
consumer with a producer.  By the time you give the IProducer to AMP, 
it's too late to tell it you want it to send its data into the AMP 
implementation for the necessary handling.  We worked around this in 
twisted.web.client.Agent by introducing a new IProducer-like interface. 
It solves the basic problem but it doesn't go any further to improve the 
usability of the interfaces.

  2) Tubes.  Glyph is working on a replacement for IProducer/IConsumer 
that does go a lot further to improve usability.  With this promise of a 
bright, prosperous future looming, it's hard to get excited about 
implementing for AMP a just-barely-good-enough solution like the one 
used by Agent (in particular, with the knowledge that the tubes solution 
will be API incompatible and we'll most likely want to deprecate the 
IProducer/IConsumer thing).

Jean-Paul
>The code right now is a straight copy of amp.py and test_amp.py with
>changes to 32-bit length prefixes everywhere, but for upstreaming we'd
>probably propose instead to modify the original to have an optional
>negotiation phase, and to make the maximum message size a parameter.
>
>Thanks!
>
>Gavin.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Thu Nov 13 11:24:56 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 13 Nov 2014 18:24:56 -0000
Subject: [Twisted-Python] is it possible to change the isolation level
 of a psycopg2 connection under enterprise.adbapi ?
In-Reply-To: <0B68D519-F1B8-4A12-B63A-180B6587A39E@2xlp.com>
References: <0B68D519-F1B8-4A12-B63A-180B6587A39E@2xlp.com>
Message-ID: <20141113182456.5924.624205883.divmod.xquotient.52@top>

On 04:56 pm, twisted-python at 2xlp.com wrote:
>there doesn't seem to be a way to access the connection objects within 
>the pool ( psycopg2 manages this via 
>`connection.set_isolation_level(X)`

Basically.  There is a trick to work around this, invent your own DB-API 
2.0 wrapper around psycopg2 that is a pass-through except that it makes 
this `connection` object call before it gives back a new connection.

You might want to look at twextpy's adbapi2. It provides an interface 
slightly more amenable to customizations like this one. Off the top of 
my head, I don't know if it supports psycopg2 (but I know it supports 
postgresql somehow).

Jean-Paul
>the only workaround I can think of seems to be emitting raw sql when I 
>first start the transaction - but this doesn't seem right.
>
>am i missing anything?
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From gavin at gromper.net  Fri Nov 14 04:59:02 2014
From: gavin at gromper.net (Gavin Panella)
Date: Fri, 14 Nov 2014 11:59:02 +0000
Subject: [Twisted-Python] Sending longer messages in AMP
In-Reply-To: <20141113181920.5924.1200765606.divmod.xquotient.45@top>
References: <CALL7chnBJR9oz4PDi5GkD-7hTtFSsz2Y0085T6qaoJ0AfKkNMg@mail.gmail.com>
 <20141113181920.5924.1200765606.divmod.xquotient.45@top>
Message-ID: <CALL7chkXB-b+5kiZt0ocU+beaaxr35zxejhtrodYjTdkMfvMcg@mail.gmail.com>

On 13 November 2014 18:19,  <exarkun at twistedmatrix.com> wrote:
> On 02:57 pm, gavin at gromper.net wrote:
>>
>> Hi,
>>
>> We're using AMP and are starting to hit TooLong errors when scaling
>> our application. In one respect it's a sign that we should do
>> something like paging large requests and responses, but that's a lot
>> more work, and comes with its own problems. We also don't need
>> particularly large payloads: right now, a limit of ~500kiB would
>> allow us to scale as far as we need and beyond.
>>
>> I've put together a fork of Twisted's AMP implementation that uses
>> 32-bit length prefixes everywhere, though it limits the maximum
>> message size to 2MiB. Every other aspect of it is the same so it's a
>> drop-in replacement, as long as both ends of a connection use it.
>> However, there's no negotiation phase so it's completely incompatible
>> on the wire. The overhead of a few extra bytes is negligible for our
>> use cases, where the networks are all assumed to be low-latency
>> high-bandwidth LANs.
>>
>> Are there any reasons that we shouldn't be doing this? Was there a
>> good reason for 16-bit length prefixes that still holds? Should we be
>> doing something else?
>
>
> The short length limit is in place to encourage two things:
>
>  * messages that can be processed in a
>    cooperative-multitasking-friendly way
>
>  * the AMP channel can reliably used to multiplex multiple operations
>
> The limit encourages the former by limiting the total amount of data
> it's possible to receive in a single command. Of course, you can still
> do ridiculously complicated work based on a small bit of data so this
> doesn't guarantee that no matter what you do you'll be safe. But doing
> even something simple on a ridiculously large amount of data is
> probably guaranteed to take a while.
>
> The limit encourages the latter by putting a limit on the data that
> needs to be transferred to complete any one command (or answer).
> Again, this isn't a guarantee of safety (you could always have a `for
> i in range(1e10): callRemote(...)` loop and clog up the channel for
> ages) but it pushes things a bit more in that direction.
>
> At ClusterHQ we *also* maintained a fork of AMP with this limit
> raised. Basically, it worked. It did let us get into the kind of
> trouble that the limit was supposed to try to avoid (in particular it
> let us send around messages that would take longer and longer to be
> processed - in a system where keeping latency down was actually sort
> of important; fortunately we had *worse* problems introducing latency
> so this in particular never bit us too hard ;).
>>
>> If I assume that the answers are all no, would someone find this
>> protocol useful if we submitted it for inclusion in Twisted itself?
>
> There are better solutions to the problem. The trouble is that they're
> also more work to implement. ;) I think Twisted should hold out for
> the better solutions though, not adopt a like-AMP-but-with-different-
> hard-coded-limits solution.
>
> What are the better solutions? Library support for paging, basically.
> Or, to consider things more generally, library support for streaming.
> The AMP implementation in Twisted (note, not the *protocol*) should be
> extended to make it easy to pass arbitrarily large streams of data
> around - suitably broken into smaller pieces at the box level.
>
> As of right now, the way I'd do that is by introducing a new argument
> type (or two) supporting `IProducer` and `IConsumer`. Pass in an
> `IProducer` and the library will take the necessary steps to read data
> out of it, chunk it up into <=16kB chunks, and re-assemble them on the
> receiving side (as another `IProducer`).
>
> There are two reasons I'm not working on this right now (apart from
> the standard reasons of not having time to do so ;):
>
>  1) IProducer / IConsumer aren't amenable to this kind of decoupling.
> You can register a producer with a consumer but you can't register a
> consumer with a producer. By the time you give the IProducer to AMP,
> it's too late to tell it you want it to send its data into the AMP
> implementation for the necessary handling. We worked around this in
> twisted.web.client.Agent by introducing a new IProducer-like
> interface. It solves the basic problem but it doesn't go any further
> to improve the usability of the interfaces.
>
>  2) Tubes. Glyph is working on a replacement for IProducer/IConsumer
> that does go a lot further to improve usability. With this promise of
> a bright, prosperous future looming, it's hard to get excited about
> implementing for AMP a just-barely-good-enough solution like the one
> used by Agent (in particular, with the knowledge that the tubes
> solution will be API incompatible and we'll most likely want to
> deprecate the IProducer/IConsumer thing).

Thank you for such a comprehensive reply. It's really helped.

As a result we're going to stick with the 16-bit AMP, by changing the
calls we're making. In one particular case we'll change our code to
regularly (with a throttle) fetch small batches from a priority queue
instead of getting all-the-things periodically. That'll avoid the need
to switch to 32-bit AMP, and will also be good for the responsiveness of
the overall application.

The Tubes stuff is interesting. As that matures we may look at doing the
work to bring Tubes and AMP together.

Gavin.



From peter.westlake at pobox.com  Fri Nov 14 10:38:38 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 14 Nov 2014 17:38:38 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
Message-ID: <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>


On Thu, 13 Nov 2014, at 17:01, Peter Westlake wrote:
>
>>> I've put in the dataReceived, and the answer box does*not*make it
>>> into the Protocol. There are two entries in
>>> protocol._outstandingRequests: {'2189': <Deferred...>, '2188':
>>> <Deferred...>} and the log output shows 2186, 2187, 218a, 218b, ...
>>
>> So, wait a second.
>>
>> You said you're looking at tcpdump, and it's showing you that your
>> outstanding requests - in this case, 2188 and 2189 - are in fact
>> being answered. But then you say you're looking at the dump from
>> dataReceived, and seeing that not only are 2188 and 2189 not being
>> answered from that layer, but 218a and 218b *are* being answered?
>>
>> Simply put: that should be impossible. TCP is an ordered stream. If
>> you received answers to 2188 and 2189 on the wire in tcpdump, you
>> should see those come back to dataReceived first. What kind of
>> transport is this hooked up to? A regular socket? Is there TLS
>> involved? Did you run tcpdump for that same session?
>
> No TLS, just TCP, created with
> twisted.application.internet.TCPClient(host, port, protocolfactory).
>
> I didn't record this session with tcpdump, but from a previous one I
> can say that yes, some Deferreds are left hanging around waiting for a
> response while subsequent ones have already received one. There was no
> interruption or irregularity in the TCP stream.
>
> tcpdump: 2186, 2187, 2188, 2189, 218a, 218b
>
> dataReceived: 2186, 2187, 218a, 218b
>
> _outstandingRequests: {2188, 2189}

Here is some highly suspicious-looking output from strace:

sendto(5, "\0\4_ask\0\004867c\0\10_command\0\tLogOutpu"..., 343, 0,
NULL, 0) = 343 recvfrom(5,
"\0\7_answer\0\004867c\0\6status\0\4True\0\0", 65536, 0, NULL, NULL) =
31 sendto(5, "\0\4_ask\0\004867d\0\10_command\0\tLogOutpu"..., 183, 0,
NULL, 0) = 183 sendto(5, "\0\4_ask\0\004867e\0\10_command\0\4Ping\0\0",
30, 0, NULL, 0) = 30 recvfrom(5, 0x7fec3005c6d4, 65536, 0, 0, 0) = -1
EAGAIN (Resource temporarily unavailable) sendto(5,
"\0\4_ask\0\004867f\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0) = 30
recvfrom(5, "\0\7_answer\0\004867f\0\3ack\0\4True\0\0", 65536, 0, NULL,
NULL) = 28

Requests 867d and 867e never receive their callbacks.

I see that twisted.internet.tcp.Connection.doRead() does check for
EWOULDBLOCK (=EAGAIN), and returns None. Shouldn't it try to read again?

Peter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141114/1e2997e3/attachment-0002.html>

From exarkun at twistedmatrix.com  Fri Nov 14 13:36:07 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 14 Nov 2014 20:36:07 -0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
Message-ID: <20141114203607.13007.153683668.divmod.xquotient.8@top>

On 05:38 pm, peter.westlake at pobox.com wrote:
>
>Here is some highly suspicious-looking output from strace:
>
>sendto(5, "\0\4_ask\0\004867c\0\10_command\0\tLogOutpu"..., 343, 0,
>NULL, 0) = 343 recvfrom(5,
>"\0\7_answer\0\004867c\0\6status\0\4True\0\0", 65536, 0, NULL, NULL) =
>31 sendto(5, "\0\4_ask\0\004867d\0\10_command\0\tLogOutpu"..., 183, 0,
>NULL, 0) = 183 sendto(5, "\0\4_ask\0\004867e\0\10_command\0\4Ping\0\0",
>30, 0, NULL, 0) = 30 recvfrom(5, 0x7fec3005c6d4, 65536, 0, 0, 0) = -1
>EAGAIN (Resource temporarily unavailable) sendto(5,
>"\0\4_ask\0\004867f\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0) = 30
>recvfrom(5, "\0\7_answer\0\004867f\0\3ack\0\4True\0\0", 65536, 0, NULL,
>NULL) = 28
>
>Requests 867d and 867e never receive their callbacks.

But in this trace, it looks like those two calls also never received a 
response from the server - so it's correct that the callbacks never 
fire.

Keep in mind this is a totally valid AMP interaction.  The reason these 
things have unique identifiers is so responses can arrive out of order.

Earlier you mentioned you saw tcpdump reporting that the response data 
corresponding to the unfired Deferreds was arriving.  Can you double 
check that?  From this `strace` output I would guess that it isn't.  The 
alternative explanation is a terrible, data-losing bug in the kernel's 
TCP stack...
>I see that twisted.internet.tcp.Connection.doRead() does check for
>EWOULDBLOCK (=EAGAIN), and returns None. Shouldn't it try to read 
>again?

It will try again - later, when select or epoll or whatever tells it 
that there's a better chance of some data coming out.

Jean-Paul



From peter.westlake at pobox.com  Fri Nov 14 18:27:45 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Sat, 15 Nov 2014 01:27:45 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <20141114203607.13007.153683668.divmod.xquotient.8@top>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
Message-ID: <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>


On Fri, 14 Nov 2014, at 20:36, exarkun at twistedmatrix.com wrote:
> On 05:38 pm, peter.westlake at pobox.com wrote:
> >
> >Here is some highly suspicious-looking output from strace:
> >
> >sendto(5, "\0\4_ask\0\004867c\0\10_command\0\tLogOutpu"..., 343, 0,
> >NULL, 0) = 343 recvfrom(5, >
> >>"\0\7_answer\0\004867c\0\6status\0\4True\0\0", 65536, 0, NULL, NULL)
> >=31 sendto(5, "\0\4_ask\0\004867d\0\10_command\0\tLogOutpu"..., 183,
> >0, NULL, 0) = 183 sendto(5,
> >"\0\4_ask\0\004867e\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0) = 30
> >recvfrom(5, 0x7fec3005c6d4, 65536, 0, 0, 0) = -1 EAGAIN (Resource
> >temporarily unavailable) sendto(5,
> >"\0\4_ask\0\004867f\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0) = 30
> >recvfrom(5, "\0\7_answer\0\004867f\0\3ack\0\4True\0\0", 65536, 0,
> >NULL, NULL) = 28
> >
> >Requests 867d and 867e never receive their callbacks.
>
> But in this trace, it looks like those two calls also never received
> a response from the server - so it's correct that the callbacks
> never fire.
>
> Keep in mind this is a totally valid AMP interaction. The reason
> these things have unique identifiers is so responses can arrive out
> of order.
>
> Earlier you mentioned you saw tcpdump reporting that the response data
> corresponding to the unfired Deferreds was arriving. Can you double
> check that? From this `strace` output I would guess that it isn't. The
> alternative explanation is a terrible, data-losing bug in the kernel's
> TCP stack...

It really does arrive. Here's the relevant bit of tcpdump output for
867d, hostnames redacted:

16:19:33.542428 IP wheezy-1.example.com.43517 >
xenbuilder.example.com.8091: Flags [P.], seq 6156084:6156267, ack
807019, win 296, options [nop,nop,TS val 62810704 ecr 696524361],
length 183
E...b. at .@... . ..........7.....(/...... ..jP)..I.._ask..867d.._command.
  LogOutput..action..xe-clean..branch..test-secure-build..data..16:19:33
  00:00:00 E: + dry=
  ..job..core..number..89613..product..carbon..site..cam..stream..out..

16:19:33.542935 IP xenbuilder.example.com.8091 >
wheezy-1.example.com.43517: Flags [P.], seq 807019:807050, ack 6156267,
win 816, options [nop,nop,TS val 696524413 ecr 62810704], length 31
F..S.P at .@.U. . ......7.........0Zm.....
  )..}..jP.._answer..867d..status..True.. 16:19:33.542986 IP
  wheezy-1.example.com.43517 > xenbuilder.example.com.8091: Flags [.],
  ack 807050, win 296, options [nop,nop,TS val 62810705 ecr 696524413],
  length 0 (etc)

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141115/dc49a4e9/attachment-0002.html>

From trac at twistedmatrix.com  Sun Nov 16 00:05:16 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 16 Nov 2014 07:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1416121516.65.2729629835846811642@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141116/90e1d058/attachment-0002.html>

From adi at roiban.ro  Sun Nov 16 03:04:40 2014
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 16 Nov 2014 10:04:40 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
Message-ID: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>

Hi,

To help with the review process I would like to ask permissions for
triggering buildbot builds.

Is there a wiki page describing what are the steps required for a regular
contributor to get permissions to run buildbot tests and get write access
to the repo?


--------

In the same time, maybe we can write a few words about the steps required
for a new contributor to become a full reviewer. Ex.

1. Contribute a few patches (ex 10) and learn the basic review process.
   Observe how reviewers respond to your patch.

2. Start doing review as junior reviewer, without merging. Once you are ok
with the patch, invite another core developer to take a final view and
merge the patch

3. Once you have reviewed a few patches without errors (ex 10) you can ask
for full review permission or a core developer will let you know that you
can merge the patch without asking someone else.

This can be part of the current review process page:
https://twistedmatrix.com/trac/wiki/ReviewProcess

What do you think?
Is not much, but should provide some guidance and hope!

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141116/2f721aa0/attachment-0002.html>

From exarkun at twistedmatrix.com  Sun Nov 16 15:44:13 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 16 Nov 2014 22:44:13 -0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
Message-ID: <20141116224413.7281.1835854865.divmod.xquotient.16@top>

On 10:04 am, adi at roiban.ro wrote:
>Hi,
>
>To help with the review process I would like to ask permissions for
>triggering buildbot builds.
>
>Is there a wiki page describing what are the steps required for a 
>regular
>contributor to get permissions to run buildbot tests and get write 
>access
>to the repo?

I'll send you the credentials off-list.  FWIW, this is password 
protected only because spambots found the form and kept triggering 
garbage builds.

There's no standard policy or procedure for granting commit access to 
the repository.  Usually it goes like "someone asks for it, someone 
gives it to them".
>
>--------
>
>In the same time, maybe we can write a few words about the steps 
>required
>for a new contributor to become a full reviewer. Ex.

There is no official process but the frequently discussed unofficialy 
process is just getting commit access.  The project doesn't distinguish 
between committers in any way as far as the development workflow is 
concerned.

Perhaps it should and we should discuss how it could do this.
>1. Contribute a few patches (ex 10) and learn the basic review process.
>   Observe how reviewers respond to your patch.
>
>2. Start doing review as junior reviewer, without merging. Once you are 
>ok
>with the patch, invite another core developer to take a final view and
>merge the patch
>
>3. Once you have reviewed a few patches without errors (ex 10) you can 
>ask
>for full review permission or a core developer will let you know that 
>you
>can merge the patch without asking someone else.
>
>This can be part of the current review process page:
>https://twistedmatrix.com/trac/wiki/ReviewProcess
>
>What do you think?

I think this process probably involves little enough learning that it 
won't make a significant difference to the quality of code reviews done 
for the project (so it will only add overhead to the process of keeping 
track of different kinds of reviewers and where in their progression 
"junior" reviewers are).

A modification that would help very slightly (but I think still not 
enough to be worthwhile, particularly since it adds even more overhead) 
would be to require a correct review covering each of the many relevant 
areas - for example, howto-style docs, example-style docs, api-style 
docs, unit test coverage, coding convention compliance (whitespace, 
variable naming, etc), etc.  After demonstrating competence in all areas 
the "junior" reviewer could advance to normal review status.

Unfortunately notice I didn't say anything about the software being 
built or changed itself.  I don't know of an easy way to test folks for 
competence at that kind of thing except to see them write a lot of code.

Jean-Paul



From glyph at twistedmatrix.com  Sun Nov 16 18:46:28 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 17 Nov 2014 02:46:28 +0100
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <20141116224413.7281.1835854865.divmod.xquotient.16@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
Message-ID: <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>


> On Nov 16, 2014, at 23:44, exarkun at twistedmatrix.com wrote:
> 
> On 10:04 am, adi at roiban.ro wrote:
>> Hi,
>> 
>> To help with the review process I would like to ask permissions for
>> triggering buildbot builds.
>> 
>> Is there a wiki page describing what are the steps required for a regular
>> contributor to get permissions to run buildbot tests and get write access
>> to the repo?
> 
> I'll send you the credentials off-list.  FWIW, this is password protected only because spambots found the form and kept triggering garbage builds.
> 
> There's no standard policy or procedure for granting commit access to the repository.  Usually it goes like "someone asks for it, someone gives it to them".
>> 
>> --------
>> 
>> In the same time, maybe we can write a few words about the steps required
>> for a new contributor to become a full reviewer. Ex.
> 
> There is no official process but the frequently discussed unofficialy process is just getting commit access.  The project doesn't distinguish between committers in any way as far as the development workflow is concerned.
> 
> Perhaps it should and we should discuss how it could do this.

I think that we should have an official process; the way we do it is pretty arbitrary.  An official advancement process can be a motivator for contributors, as well as a way to more clearly establish community norms.  (I have a feeling if we did have an official process for getting commit access we would actually have more active committers.)

(This is a good talk on the subject: <http://www.kateheddleston.com/talk/ef464595-b113-4c1b-9c5b-cc1f3681055c <http://www.kateheddleston.com/talk/ef464595-b113-4c1b-9c5b-cc1f3681055c>>)

>> 1. Contribute a few patches (ex 10) and learn the basic review process.
>>  Observe how reviewers respond to your patch.
>> 
>> 2. Start doing review as junior reviewer, without merging. Once you are ok
>> with the patch, invite another core developer to take a final view and
>> merge the patch
>> 
>> 3. Once you have reviewed a few patches without errors (ex 10) you can ask
>> for full review permission or a core developer will let you know that you
>> can merge the patch without asking someone else.
>> 
>> This can be part of the current review process page:
>> https://twistedmatrix.com/trac/wiki/ReviewProcess
>> 
>> What do you think?
> 
> I think this process probably involves little enough learning that it won't make a significant difference to the quality of code reviews done for the project (so it will only add overhead to the process of keeping track of different kinds of reviewers and where in their progression "junior" reviewers are).
> 
> A modification that would help very slightly (but I think still not enough to be worthwhile, particularly since it adds even more overhead) would be to require a correct review covering each of the many relevant areas - for example, howto-style docs, example-style docs, api-style docs, unit test coverage, coding convention compliance (whitespace, variable naming, etc), etc.  After demonstrating competence in all areas the "junior" reviewer could advance to normal review status.

This sounds great. Could you jot it down on a wiki page?

> Unfortunately notice I didn't say anything about the software being built or changed itself.  I don't know of an easy way to test folks for competence at that kind of thing except to see them write a lot of code.

We can easily have a suggested process for this too, if we have to have subjective evaluations, then let's just be explicit that some specific group has to make some specific evaluation...

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/9f03d0e1/attachment-0002.html>

From adi at roiban.ro  Mon Nov 17 02:44:21 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 09:44:21 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <20141116224413.7281.1835854865.divmod.xquotient.16@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
Message-ID: <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>

On 16 November 2014 22:44, <exarkun at twistedmatrix.com> wrote:

> On 10:04 am, adi at roiban.ro wrote:
>
>> Hi,
>>
>> To help with the review process I would like to ask permissions for
>> triggering buildbot builds.
>>
>> Is there a wiki page describing what are the steps required for a regular
>> contributor to get permissions to run buildbot tests and get write access
>> to the repo?
>>
>
> I'll send you the credentials off-list.  FWIW, this is password protected
> only because spambots found the form and kept triggering garbage builds.
>
> There's no standard policy or procedure for granting commit access to the
> repository.  Usually it goes like "someone asks for it, someone gives it to
> them".


I got them.

Is there a wiki page describing how buildbot should be used?

I found some notes hidden in the review process page... it looks like
builds are triggered from the web page with click.
The review page also talks about a misterious force-builds.py script which
is not part of the main twisted repo.. or at least, I could not found it

I was expecting a buidbot try scheduler  and use buildbot command line
tools to trigger remote tests



>> --------
>>
>> In the same time, maybe we can write a few words about the steps required
>> for a new contributor to become a full reviewer. Ex.
>>
>
> There is no official process but the frequently discussed unofficialy
> process is just getting commit access.  The project doesn't distinguish
> between committers in any way as far as the development workflow is
> concerned.
>
> Perhaps it should and we should discuss how it could do this.
>
>> 1. Contribute a few patches (ex 10) and learn the basic review process.
>>   Observe how reviewers respond to your patch.
>>
>> 2. Start doing review as junior reviewer, without merging. Once you are ok
>> with the patch, invite another core developer to take a final view and
>> merge the patch
>>
>> 3. Once you have reviewed a few patches without errors (ex 10) you can ask
>> for full review permission or a core developer will let you know that you
>> can merge the patch without asking someone else.
>>
>> This can be part of the current review process page:
>> https://twistedmatrix.com/trac/wiki/ReviewProcess
>>
>> What do you think?
>>
>
> I think this process probably involves little enough learning that it
> won't make a significant difference to the quality of code reviews done for
> the project (so it will only add overhead to the process of keeping track
> of different kinds of reviewers and where in their progression "junior"
> reviewers are).
>
> A modification that would help very slightly (but I think still not enough
> to be worthwhile, particularly since it adds even more overhead) would be
> to require a correct review covering each of the many relevant areas - for
> example, howto-style docs, example-style docs, api-style docs, unit test
> coverage, coding convention compliance (whitespace, variable naming, etc),
> etc.  After demonstrating competence in all areas the "junior" reviewer
> could advance to normal review status.
>
> Unfortunately notice I didn't say anything about the software being built
> or changed itself.  I don't know of an easy way to test folks for
> competence at that kind of thing except to see them write a lot of code.
>

Ok. In this case, maybe just a note that developers should send enough
patches and do enough "junior reviews" until their patches are submitted
for the first time without major errors and no major errors pass their
initial review.. this is close to common sense, but some might argue that
there is no such thing as common sense.


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/34e361ac/attachment-0002.html>

From adi at roiban.ro  Mon Nov 17 02:53:07 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 09:53:07 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
Message-ID: <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>

On 17 November 2014 09:44, Adi Roiban <adi at roiban.ro> wrote:
[snip]

There's no standard policy or procedure for granting commit access to the
>> repository.  Usually it goes like "someone asks for it, someone gives it to
>> them".
>
>
> I got them.
>
> Is there a wiki page describing how buildbot should be used?
>
> I found some notes hidden in the review process page... it looks like
> builds are triggered from the web page with click.
> The review page also talks about a misterious force-builds.py script which
> is not part of the main twisted repo.. or at least, I could not found it
>
> I was expecting a buidbot try scheduler  and use buildbot command line
> tools to trigger remote tests
>

I tried to use buildbot, but I failed :)

I want to ask buildbot to run the test for a patch:
* apply the patch to trunk
* run all test
* publish a link to trac

How do I do that without creating a branch, ie requiring write permissions
to main repo?

Thanks!

[snip]


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/0c9abf51/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Nov 17 04:04:47 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 17 Nov 2014 12:04:47 +0100
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
Message-ID: <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>


> On Nov 17, 2014, at 10:53, Adi Roiban <adi at roiban.ro> wrote:
> 
> I tried to use buildbot, but I failed :)
> 
> I want to ask buildbot to run the test for a patch:
> * apply the patch to trunk
> * run all test
> * publish a link to trac
> 
> How do I do that without creating a branch, ie requiring write permissions to main repo?


This is not currently possible.  Permission to get the buildbots to run code is managed via write permissions to the SVN repository.  In other words: we do not have a buildbot try scheduler.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/bbfe4f2b/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Nov 17 04:48:10 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 11:48:10 -0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
Message-ID: <20141117114810.27773.865613325.divmod.xquotient.11@top>

On 01:46 am, glyph at twistedmatrix.com wrote:
>
>>On Nov 16, 2014, at 23:44, exarkun at twistedmatrix.com wrote:
>>
>>On 10:04 am, adi at roiban.ro wrote:
>>>
>>>This can be part of the current review process page:
>>>https://twistedmatrix.com/trac/wiki/ReviewProcess
>>>
>>>What do you think?
>>
>>I think this process probably involves little enough learning that it 
>>won't make a significant difference to the quality of code reviews 
>>done for the project (so it will only add overhead to the process of 
>>keeping track of different kinds of reviewers and where in their 
>>progression "junior" reviewers are).
>>
>>A modification that would help very slightly (but I think still not 
>>enough to be worthwhile, particularly since it adds even more 
>>overhead) would be to require a correct review covering each of the 
>>many relevant areas - for example, howto-style docs, example-style 
>>docs, api-style docs, unit test coverage, coding convention compliance 
>>(whitespace, variable naming, etc), etc.  After demonstrating 
>>competence in all areas the "junior" reviewer could advance to normal 
>>review status.
>
>This sounds great. Could you jot it down on a wiki page?

Hmmm okay. :P
>>Unfortunately notice I didn't say anything about the software being 
>>built or changed itself.  I don't know of an easy way to test folks 
>>for competence at that kind of thing except to see them write a lot of 
>>code.
>
>We can easily have a suggested process for this too, if we have to have 
>subjective evaluations, then let's just be explicit that some specific 
>group has to make some specific evaluation...

After sleeping on this, it doesn't seem quite as bad as I thought, I 
guess.

The tracking overhead can mainly be taken on by contributors who are 
interested in gaining access.  Casual committers can just ignore this 
and their lives will be unchanged.

Perhaps we can put together a committer "bingo card" and let people fill 
in the boxes.  When someone has checked all the boxes they can hand over 
the information to a ... review committee?  to verify everything looks 
good or point out areas where improvement is needed (either because some 
task didn't really satisfy a box or because of subjective reasons).

Jean-Paul



From adi at roiban.ro  Mon Nov 17 04:48:57 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 11:48:57 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
 <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>
Message-ID: <CAFycZ9erKKFXrQgHfZgJSoFqnvTz3SeHHA+rhb-UQgY-jBsO0w@mail.gmail.com>

On 17 November 2014 11:04, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Nov 17, 2014, at 10:53, Adi Roiban <adi at roiban.ro> wrote:
>
> I tried to use buildbot, but I failed :)
>
> I want to ask buildbot to run the test for a patch:
> * apply the patch to trunk
> * run all test
> * publish a link to trac
>
> How do I do that without creating a branch, ie requiring write permissions
> to main repo?
>
>
> This is not currently possible.  Permission to get the buildbots to run
> code is managed via write permissions to the SVN repository.  In other
> words: we do not have a buildbot try scheduler.
>

Can I then get write permissions for SVN repo?
I will not touch trunk, only create branches for tests.

----

Is there a reason why a try scheduler is not implemented? I find it awesome
for TDD!

On my normal workflow I can do this, even without commiting changes:

./HELPER test some.test
./HELPER test-remote sol-10-sparc some.test

test-remote just wraps buildot try --builder --properties --wait --vc


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/cde73e36/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Nov 17 04:55:24 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 11:55:24 -0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9erKKFXrQgHfZgJSoFqnvTz3SeHHA+rhb-UQgY-jBsO0w@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
 <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>
 <CAFycZ9erKKFXrQgHfZgJSoFqnvTz3SeHHA+rhb-UQgY-jBsO0w@mail.gmail.com>
Message-ID: <20141117115524.27773.234643654.divmod.xquotient.13@top>

On 11:48 am, adi at roiban.ro wrote:
>
>Is there a reason why a try scheduler is not implemented? I find it 
>awesome
>for TDD!
>
>On my normal workflow I can do this, even without commiting changes:
>
>./HELPER test some.test
>./HELPER test-remote sol-10-sparc some.test
>
>test-remote just wraps buildot try --builder --properties --wait --vc

Because it requires setting up proper credentials to access control the 
feature.

Jean-Paul



From adi at roiban.ro  Mon Nov 17 05:10:30 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 12:10:30 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <20141117115524.27773.234643654.divmod.xquotient.13@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
 <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>
 <CAFycZ9erKKFXrQgHfZgJSoFqnvTz3SeHHA+rhb-UQgY-jBsO0w@mail.gmail.com>
 <20141117115524.27773.234643654.divmod.xquotient.13@top>
Message-ID: <CAFycZ9eK7EYYC9MEmSXejM4+FXky8KXBCOZ+TcAL9zxr5Bw7eg@mail.gmail.com>

On 17 November 2014 11:55, <exarkun at twistedmatrix.com> wrote:

> On 11:48 am, adi at roiban.ro wrote:
>
>>
>> Is there a reason why a try scheduler is not implemented? I find it
>> awesome
>> for TDD!
>>
>> On my normal workflow I can do this, even without commiting changes:
>>
>> ./HELPER test some.test
>> ./HELPER test-remote sol-10-sparc some.test
>>
>> test-remote just wraps buildot try --builder --properties --wait --vc
>>
>
> Because it requires setting up proper credentials to access control the
> feature.


But there are already credentials for the HTTP status page... why not
configure the same credentials for buildbot try?

What I would like to hear is something like this:

* buildbot try is too simple, does not work with our workflow and for our
project... we don't want to spend time implementing it

or

* buildbot try could help, it still has some problems and  we don't have
time to fix issue 1, 2, 3, ... etc


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/d5b6a3f5/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Nov 17 06:23:16 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 13:23:16 -0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9eK7EYYC9MEmSXejM4+FXky8KXBCOZ+TcAL9zxr5Bw7eg@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <CAFycZ9ehHFPUFkSMT2wYFZo=zeAhYpx6KR7gm4qFtr=m7LhS3A@mail.gmail.com>
 <CD9ACB0F-8A96-4AF1-BD12-5744A155C6DB@twistedmatrix.com>
 <CAFycZ9erKKFXrQgHfZgJSoFqnvTz3SeHHA+rhb-UQgY-jBsO0w@mail.gmail.com>
 <20141117115524.27773.234643654.divmod.xquotient.13@top>
 <CAFycZ9eK7EYYC9MEmSXejM4+FXky8KXBCOZ+TcAL9zxr5Bw7eg@mail.gmail.com>
Message-ID: <20141117132316.27773.596656730.divmod.xquotient.18@top>

On 12:10 pm, adi at roiban.ro wrote:
>On 17 November 2014 11:55, <exarkun at twistedmatrix.com> wrote:
>>On 11:48 am, adi at roiban.ro wrote:
>>>
>>>Is there a reason why a try scheduler is not implemented? I find it
>>>awesome
>>>for TDD!
>>>
>>>On my normal workflow I can do this, even without commiting changes:
>>>
>>>./HELPER test some.test
>>>./HELPER test-remote sol-10-sparc some.test
>>>
>>>test-remote just wraps buildot try --builder --properties --wait --vc
>>
>>Because it requires setting up proper credentials to access control 
>>the
>>feature.
>
>
>But there are already credentials for the HTTP status page... why not
>configure the same credentials for buildbot try?

The credentials for the HTTP status page are there to prevent annoying 
spurious builds.  The credentials for `buildbot try` need to be serious, 
secure credentials because they prevent attackers from submitting 
arbitrary code to execute on the buildslaves.

Basically, it's more work.  If someone wanted to set it up right, I 
don't know of any reason we wouldn't want to allow it.  Though that may 
just be because we haven't ever used it so I haven't yet learned the 
reasons it's undesirable to have enabled. ;)

Jean-Paul
>What I would like to hear is something like this:
>
>* buildbot try is too simple, does not work with our workflow and for 
>our
>project... we don't want to spend time implementing it
>
>or
>
>* buildbot try could help, it still has some problems and  we don't 
>have
>time to fix issue 1, 2, 3, ... etc
>
>
>--
>Adi Roiban



From exarkun at twistedmatrix.com  Mon Nov 17 06:40:48 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 13:40:48 -0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
Message-ID: <20141117134048.27773.1088753912.divmod.xquotient.23@top>

On 09:44 am, adi at roiban.ro wrote:
>On 16 November 2014 22:44, <exarkun at twistedmatrix.com> wrote:
>>>Is there a wiki page describing what are the steps required for a 
>>>regular
>>>contributor to get permissions to run buildbot tests and get write 
>>>access
>>>to the repo?
>>
>>I'll send you the credentials off-list.  FWIW, this is password 
>>protected
>>only because spambots found the form and kept triggering garbage 
>>builds.
>>
>>There's no standard policy or procedure for granting commit access to 
>>the
>>repository.  Usually it goes like "someone asks for it, someone gives 
>>it to
>>them".
>
>
>I got them.
>
>Is there a wiki page describing how buildbot should be used?

I just created 
<https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow>. 
Feel free to edit it if you think parts are unclear.  Or point out any 
questions you think it doesn't answer.  I haven't linked to it from 
anywhere yet.  Suggestions about where a good place (such that people 
will actually find it) welcome.
>I found some notes hidden in the review process page... it looks like
>builds are triggered from the web page with click.

I guess maybe this would be an okay place?
>The review page also talks about a misterious force-builds.py script 
>which
>is not part of the main twisted repo.. or at least, I could not found 
>it

It's part of one of the twisted dev tools repositories (used to be 
twisted-dev-tools but I think someone moved it, not sure exactly to 
where).  Perhaps you could update this page to mention where - if you 
find it.

Jean-Paul



From exarkun at twistedmatrix.com  Mon Nov 17 06:44:18 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 13:44:18 -0000
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
In-Reply-To: <20141117114810.27773.865613325.divmod.xquotient.11@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
Message-ID: <20141117134418.27773.566781633.divmod.xquotient.29@top>

On 11:48 am, exarkun at twistedmatrix.com wrote:
>>
>>This sounds great. Could you jot it down on a wiki page?
>
>Hmmm okay. :P

I wrote up 
<https://twistedmatrix.com/trac/wiki/Proposal/ContributorAdvancementPath>. 
Notice "Proposal" in the URL.  It would be nice to get feedback from 
some more contributors - particularly people who have recently gotten 
commit access (about whether the problems are real and what they think 
of the proposed solutions) but also from other long-time Twisted 
contributors about whether they like this new idea about how to bring 
more people in (and whether they would volunteer to do the necessary 
candidate reviews - without which effort this isn't practical).

Jean-Paul



From peter.westlake at pobox.com  Mon Nov 17 06:46:24 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 17 Nov 2014 13:46:24 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
Message-ID: <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>


My previous strace output didn't include the poll() calls. This one
does, with the list of file descriptors shortened for readability.
According to the man page, the last parameter to poll() is a timeout,
in milliseconds. Looking at these calls, there are some very odd
values indeed: 154538, 154331, 2999999, 8, 0, 0, 0. The last four
calls time out, which isn't surprising if that's how long they wait!
The full strace output shows descending runs of values, with some
omissions and duplicates. If this was C, it would be an uninitialised
variable for sure.

Peter.

poll([{fd=5, events=POLLIN|POLLOUT}], 7, 154538) = 1 ([{fd=5,
revents=POLLOUT}]) sendto(5,
"\0\4_ask\0\004867c\0\10_command\0\tLogOutpu"..., 343, 0, NULL, 0) = 343
poll([{fd=5, events=POLLIN}], 7, 154537) = 1 ([{fd=5, revents=POLLIN}])
recvfrom(5, "\0\7_answer\0\004867c\0\6status\0\4True\0\0", 65536, 0,
NULL, NULL) = 31 poll([{fd=5, events=POLLIN|POLLOUT}], 7, 154331) = 1
([{fd=5, revents=POLLOUT}]) sendto(5,
"\0\4_ask\0\004867d\0\10_command\0\tLogOutpu"..., 183, 0, NULL, 0) = 183
poll([{fd=5, events=POLLIN}], 7, 3) = 0 (Timeout) poll([{fd=5,
events=POLLIN|POLLOUT}], 7, 299999) = 1 ([{fd=5, revents=POLLOUT}])
sendto(5, "\0\4_ask\0\004867e\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0)
= 30 poll([{fd=5, events=POLLIN}], 7, 299999) = 1 ([{fd=5,
revents=POLLIN}]) recvfrom(5, 0x7fec3005c6d4, 65536, 0, 0, 0) = -1
EAGAIN (Resource temporarily unavailable) poll([{fd=5, events=POLLIN}],
7, 8) = 0 (Timeout) poll([{fd=5, events=POLLIN}], 7, 0) = 0 (Timeout)
poll([{fd=5, events=POLLIN}], 7, 0) = 0 (Timeout) poll([{fd=5,
events=POLLIN}], 7, 0) = 0 (Timeout) poll([{fd=5,
events=POLLIN|POLLOUT}], 7, 299999) = 1 ([{fd=5, revents=POLLOUT}])
sendto(5, "\0\4_ask\0\004867f\0\10_command\0\4Ping\0\0", 30, 0, NULL, 0)
= 30 poll([{fd=5, events=POLLIN}], 7, 299999) = 1 ([{fd=5,
revents=POLLIN}]) recvfrom(5,
"\0\7_answer\0\004867f\0\3ack\0\4True\0\0", 65536, 0, NULL, NULL) = 28


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/ff4b5a55/attachment-0002.html>

From adi at roiban.ro  Mon Nov 17 07:10:31 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 14:10:31 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <20141117134048.27773.1088753912.divmod.xquotient.23@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
Message-ID: <CAFycZ9f8i3QzBYRuRc3VzTDxPVUyp3wPxzd2NyzFcWsnezf2tg@mail.gmail.com>

On 17 November 2014 13:40, <exarkun at twistedmatrix.com> wrote:

> On 09:44 am, adi at roiban.ro wrote:
>
>> On 16 November 2014 22:44, <exarkun at twistedmatrix.com> wrote:
>>
>>> Is there a wiki page describing what are the steps required for a regular
>>>> contributor to get permissions to run buildbot tests and get write
>>>> access
>>>> to the repo?
>>>>
>>>
>>> I'll send you the credentials off-list.  FWIW, this is password protected
>>> only because spambots found the form and kept triggering garbage builds.
>>>
>>> There's no standard policy or procedure for granting commit access to the
>>> repository.  Usually it goes like "someone asks for it, someone gives it
>>> to
>>> them".
>>>
>>
>>
>> I got them.
>>
>> Is there a wiki page describing how buildbot should be used?
>>
>
> I just created <https://twistedmatrix.com/trac/wiki/ContinuousIntegration/
> DeveloperWorkflow>. Feel free to edit it if you think parts are unclear.
> Or point out any questions you think it doesn't answer.  I haven't linked
> to it from anywhere yet.  Suggestions about where a good place (such that
> people will actually find it) welcome.
>
>> I found some notes hidden in the review process page... it looks like
>> builds are triggered from the web page with click.
>>
>
> I guess maybe this would be an okay place?


I have added a link to the new page in both author and reviewer section..
and remove duplicate info.

I did read the review page many times but always skipped the section
dedicated to comitters... I now see that username and password is public..
so I moved the credentials on the new wiki page. Feel free to remove them.



>  The review page also talks about a misterious force-builds.py script which
>> is not part of the main twisted repo.. or at least, I could not found it
>>
>
> It's part of one of the twisted dev tools repositories (used to be
> twisted-dev-tools but I think someone moved it, not sure exactly to
> where).  Perhaps you could update this page to mention where - if you find
> it.


Will search for it and try to update the wiki.


Thanks!

>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/2d303bc2/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Nov 17 07:17:50 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 17 Nov 2014 15:17:50 +0100
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
In-Reply-To: <20141117134418.27773.566781633.divmod.xquotient.29@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
 <20141117134418.27773.566781633.divmod.xquotient.29@top>
Message-ID: <E7FF7471-529E-4906-902B-9558D5668CC8@twistedmatrix.com>


> On Nov 17, 2014, at 14:44, exarkun at twistedmatrix.com wrote:
> 
> On 11:48 am, exarkun at twistedmatrix.com wrote:
>>> 
>>> This sounds great. Could you jot it down on a wiki page?
>> 
>> Hmmm okay. :P
> 
> I wrote up <https://twistedmatrix.com/trac/wiki/Proposal/ContributorAdvancementPath>. Notice "Proposal" in the URL.  It would be nice to get feedback from some more contributors - particularly people who have recently gotten commit access (about whether the problems are real and what they think of the proposed solutions) but also from other long-time Twisted contributors about whether they like this new idea about how to bring more people in (and whether they would volunteer to do the necessary candidate reviews - without which effort this isn't practical).

Thank you so much for doing this, JP.  I've wanted to do something about onboarding for a while and it's just been difficult to work up the enthusiasm.

-glyph


From glyph at twistedmatrix.com  Mon Nov 17 07:21:14 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 17 Nov 2014 15:21:14 +0100
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <20141117134048.27773.1088753912.divmod.xquotient.23@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
Message-ID: <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>


> On Nov 17, 2014, at 14:40, exarkun at twistedmatrix.com wrote:
> 
>> The review page also talks about a misterious force-builds.py script which
>> is not part of the main twisted repo.. or at least, I could not found it
> 
> It's part of one of the twisted dev tools repositories (used to be twisted-dev-tools but I think someone moved it, not sure exactly to where).  Perhaps you could update this page to mention where - if you find it.

Since we've added the buildbot link to trac pages, force-builds.py is basically obsolete.  I think we should just scrub all mentions of it, and probably delete it.

However, here's where it lives now:

<https://github.com/twisted/twisted-dev-tools/blob/master/bin/force-build <https://github.com/twisted/twisted-dev-tools/blob/master/bin/force-build>>

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/9e5679bd/attachment-0002.html>

From adi at roiban.ro  Mon Nov 17 07:40:00 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 14:40:00 +0000
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
In-Reply-To: <20141117134418.27773.566781633.divmod.xquotient.29@top>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
 <20141117134418.27773.566781633.divmod.xquotient.29@top>
Message-ID: <CAFycZ9eAGxa-V+BBvseZ90CyCsMeBP6yHyu5KSS-BaEWnBNqEg@mail.gmail.com>

On 17 November 2014 13:44, <exarkun at twistedmatrix.com> wrote:

> On 11:48 am, exarkun at twistedmatrix.com wrote:
>
>>
>>> This sounds great. Could you jot it down on a wiki page?
>>>
>>
>> Hmmm okay. :P
>>
>
> I wrote up <https://twistedmatrix.com/trac/wiki/Proposal/
> ContributorAdvancementPath>. Notice "Proposal" in the URL.  It would be
> nice to get feedback from some more contributors - particularly people who
> have recently gotten commit access (about whether the problems are real and
> what they think of the proposed solutions) but also from other long-time
> Twisted contributors about whether they like this new idea about how to
> bring more people in (and whether they would volunteer to do the necessary
> candidate reviews - without which effort this isn't practical).
>

Many thanks!

Twisted requires a high/excellent quality for contributions. This is great
and hope it will never change and will never lower the barrier.
As a new developer, who was formed in a mediocre university and working for
a mediocre/shitty company, learning what are the real good manners is not
easy.

Having the possibility to progress based on well defined skill/competencies
should make it easier to contribute and solve at least some of the tickets
from the review queue.

Once the skills are defined I am up for setting up a page and following the
process.

What is not clear for me, is in what circumstance I can consider a patch or
review successful and able to put in on my progress page / bingo card ?

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/fc4d870a/attachment-0002.html>

From adi at roiban.ro  Mon Nov 17 07:43:54 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 17 Nov 2014 14:43:54 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
 <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>
Message-ID: <CAFycZ9diQEe=0XqyXkp_DDX-6YYuU4pYTSDF5_-y5o4O+xidMg@mail.gmail.com>

On 17 November 2014 14:21, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Nov 17, 2014, at 14:40, exarkun at twistedmatrix.com wrote:
>
> The review page also talks about a misterious force-builds.py script which
> is not part of the main twisted repo.. or at least, I could not found it
>
>
> It's part of one of the twisted dev tools repositories (used to be
> twisted-dev-tools but I think someone moved it, not sure exactly to
> where).  Perhaps you could update this page to mention where - if you find
> it.
>
>
> Since we've added the buildbot link to trac pages, force-builds.py is
> basically obsolete.  I think we should just scrub all mentions of it, and
> probably delete it.
>
> I can take care of this
https://github.com/twisted/twisted-dev-tools/issues/5

Can you please update the wiki page
https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow
to describe how builds are linked to tickets?

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/7b1a3cf6/attachment-0002.html>

From peter.westlake at pobox.com  Mon Nov 17 07:51:31 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 17 Nov 2014 14:51:31 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
Message-ID: <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>


Looking at the code, _SignalReactorMixin.mainLoop() takes the output of
ReactorBase.timeout() and passes it to doIteration(). The implementation
of doIteration() in PollReactor passes the value straight through to
poll(). If there is any kind of timed call pending (which there is), the
timeout value counts down. Eventually it gets very close to zero. If
there is a burst of AMP activity around that time, there's a good chance
that the one of the poll() calls will time out.

How this leads to the data being lost is another question, but the
coincidence of events is too much to ignore.

Peter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/d59c479a/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Nov 17 08:38:03 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 17 Nov 2014 15:38:03 -0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
Message-ID: <20141117153803.27773.1192805613.divmod.xquotient.31@top>

On 02:51 pm, peter.westlake at pobox.com wrote:
>
>Looking at the code, _SignalReactorMixin.mainLoop() takes the output of
>ReactorBase.timeout() and passes it to doIteration(). The 
>implementation
>of doIteration() in PollReactor passes the value straight through to
>poll(). If there is any kind of timed call pending (which there is), 
>the
>timeout value counts down. Eventually it gets very close to zero. If
>there is a burst of AMP activity around that time, there's a good 
>chance
>that the one of the poll() calls will time out.
>
>How this leads to the data being lost is another question, but the
>coincidence of events is too much to ignore.

This is entirely normal.  It's how timed calls are implemented in almost 
all of the reactors and it's how they've been implemented for at least 
13 years. :)

It's possible there's a bug here but this sequence of poll() calls with 
these timeout values doesn't surprise me at all.

Jean-Paul



From peter.westlake at pobox.com  Mon Nov 17 11:32:48 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 17 Nov 2014 18:32:48 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <20141117153803.27773.1192805613.divmod.xquotient.31@top>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
Message-ID: <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>

On Mon, 17 Nov 2014, at 15:38, exarkun at twistedmatrix.com wrote:
...
> This is entirely normal.  It's how timed calls are implemented in almost 
> all of the reactors and it's how they've been implemented for at least 
> 13 years. :)
> 
> It's possible there's a bug here but this sequence of poll() calls with 
> these timeout values doesn't surprise me at all.

Yes, I ran it again (using the select reactor this time) and the
failures
happened even without the timing out.

The one thing that is consistent is the loss of data after EAGAIN.
recvfrom returns EAGAIN and the next AMP reply is lost.

It's a known bug in Python! http://bugs.python.org/issue1038591,
"Python 2.3+ socket._fileobject handles EAGAIN with data loss".
This bug has been there for TEN YEARS without being fixed. It's
still right there in the source of 2.7.8. The ticket has a comment
from 2011 saying it should work in Python 3.x (and the code does
look as though it should), and a suggestion from 2013 that it
should be closed.

So, how's that port to Python 3 going?

Peter.



From glyph at twistedmatrix.com  Mon Nov 17 13:25:38 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 17 Nov 2014 21:25:38 +0100
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
Message-ID: <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>


> On Nov 17, 2014, at 19:32, Peter Westlake <peter.westlake at pobox.com> wrote:
> 
> It's a known bug in Python! http://bugs.python.org/issue1038591 <http://bugs.python.org/issue1038591>,
> "Python 2.3+ socket._fileobject handles EAGAIN with data loss".

This bug is in socket.makefile(), which Twisted never uses - not socket.socket().

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141117/2713cbc8/attachment-0002.html>

From peter.westlake at pobox.com  Mon Nov 17 17:42:19 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Tue, 18 Nov 2014 00:42:19 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
Message-ID: <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>


On Mon, 17 Nov 2014, at 20:25, Glyph wrote:
>
>> On Nov 17, 2014, at 19:32, Peter Westlake
>> <peter.westlake at pobox.com> wrote:
>>
>> It's a known bug in Python!http://bugs.python.org/issue1038591,
>> "Python 2.3+ socket._fileobject handles EAGAIN with data loss".
>
> This bug is in socket.makefile(), which Twisted never uses - not
> socket.socket().

Okay, how about http://bugs.python.org/issue9090, "Issue #9090 : Error
code 10035 calling socket.recv() on a socket with a timeout
(WSAEWOULDBLOCK - A non-blocking socket operation could not be completed
immediately)"?

I actually found that one first, but it appeared to be Windows-only.
Further down the comments it becomes clear that it's not, and the patch
at https://hg.python.org/cpython/rev/8ec39bfd1f01 confirms that.

It would be good news if it was 9090, because it's easier to switch to
Python 2.7.8 than 3.

Peter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141118/8e1cfe51/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Nov 17 18:09:10 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 18 Nov 2014 01:09:10 -0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
Message-ID: <20141118010910.27773.128714459.divmod.xquotient.34@top>

On 12:42 am, peter.westlake at pobox.com wrote:
>
>On Mon, 17 Nov 2014, at 20:25, Glyph wrote:
>>
>>>On Nov 17, 2014, at 19:32, Peter Westlake
>>><peter.westlake at pobox.com> wrote:
>>>
>>>It's a known bug in Python!http://bugs.python.org/issue1038591,
>>>"Python 2.3+ socket._fileobject handles EAGAIN with data loss".
>>
>>This bug is in socket.makefile(), which Twisted never uses - not
>>socket.socket().
>
>Okay, how about http://bugs.python.org/issue9090, "Issue #9090 : Error
>code 10035 calling socket.recv() on a socket with a timeout
>(WSAEWOULDBLOCK - A non-blocking socket operation could not be 
>completed
>immediately)"?

Twisted also doesn't use sockets with timeouts - although the way socket 
timeouts are implemented in Python, I could perhaps imagine some timeout 
configuration leaking into Twisted's sockets due to some other code 
running in the same process.

Can you check to see if your AMP connection's underlying socket has a 
timeout set?  It *shouldn't*.  Twisted doesn't set one.  If some other 
code is causing a timeout to be set, I guess this could be the culprit.

Jean-Paul
>I actually found that one first, but it appeared to be Windows-only.
>Further down the comments it becomes clear that it's not, and the patch
>at https://hg.python.org/cpython/rev/8ec39bfd1f01 confirms that.
>
>It would be good news if it was 9090, because it's easier to switch to
>Python 2.7.8 than 3.
>
>Peter.



From peter.westlake at pobox.com  Tue Nov 18 05:52:26 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Tue, 18 Nov 2014 12:52:26 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <20141118010910.27773.128714459.divmod.xquotient.34@top>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
Message-ID: <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>

On Tue, 18 Nov 2014, at 01:09, exarkun at twistedmatrix.com wrote:
> On 12:42 am, peter.westlake at pobox.com wrote:

> >Okay, how about http://bugs.python.org/issue9090, "Issue #9090 : Error
> >code 10035 calling socket.recv() on a socket with a timeout
> >(WSAEWOULDBLOCK - A non-blocking socket operation could not be 
> >completed
> >immediately)"?
> 
> Twisted also doesn't use sockets with timeouts - although the way socket 
> timeouts are implemented in Python, I could perhaps imagine some timeout 
> configuration leaking into Twisted's sockets due to some other code 
> running in the same process.
> 
> Can you check to see if your AMP connection's underlying socket has a 
> timeout set?  It *shouldn't*.  Twisted doesn't set one.  If some other 
> code is causing a timeout to be set, I guess this could be the culprit.

socket.gettimeout() returns 0.0, which just means non-blocking, right?

Given that strace shows a recvfrom failing with an EAGAIN, followed by
a recvfrom reading the AMP reply after the missing one, I think this
must
be a kernel or hypervisor bug. In hindsight it could never have been
1038591
even if Twisted had used that bit of code, because that reads the data
in and
then loses it. So strace would have shown it being read.

I'll get some help from my local TCP experts, and let you know if I find
anything
out. In the meantime, thank you all for your patience and help.

Peter.



From adi at roiban.ro  Tue Nov 18 11:40:47 2014
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 18 Nov 2014 18:40:47 +0000
Subject: [Twisted-Python] (no subject)
Message-ID: <CAFycZ9fjCWBja+25mxszzpZwK-2DSHan7unPBDaX=_6ffc=sqA@mail.gmail.com>

As commented by @glyph

Since we've added the buildbot link to trac pages, force-builds.py is
basically obsolete.  I think we should  just scrub all mentions of it,
and probably delete it.

I have created a ticket to remove it and clean documentation:

https://github.com/twisted/twisted-dev-tools/issues/5

Is there anyone else still using this tool?
Should we keep it and rather than removing it, improve its documentation?

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141118/91fea279/attachment-0002.html>

From exarkun at twistedmatrix.com  Tue Nov 18 18:17:37 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 19 Nov 2014 01:17:37 -0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
Message-ID: <20141119011737.27773.1732196958.divmod.xquotient.39@top>

On 18 Nov, 12:52 pm, peter.westlake at pobox.com wrote:
>On Tue, 18 Nov 2014, at 01:09, exarkun at twistedmatrix.com wrote:
>>On 12:42 am, peter.westlake at pobox.com wrote:
>
>> >Okay, how about http://bugs.python.org/issue9090, "Issue #9090 : 
>>Error
>> >code 10035 calling socket.recv() on a socket with a timeout
>> >(WSAEWOULDBLOCK - A non-blocking socket operation could not be
>> >completed
>> >immediately)"?
>>
>>Twisted also doesn't use sockets with timeouts - although the way 
>>socket
>>timeouts are implemented in Python, I could perhaps imagine some 
>>timeout
>>configuration leaking into Twisted's sockets due to some other code
>>running in the same process.
>>
>>Can you check to see if your AMP connection's underlying socket has a
>>timeout set?  It *shouldn't*.  Twisted doesn't set one.  If some other
>>code is causing a timeout to be set, I guess this could be the 
>>culprit.
>
>socket.gettimeout() returns 0.0, which just means non-blocking, right?

According to the Python documentation, yes.  I was expecting to see 
`None` instead, though.
>Given that strace shows a recvfrom failing with an EAGAIN, followed by
>a recvfrom reading the AMP reply after the missing one, I think this
>must
>be a kernel or hypervisor bug. In hindsight it could never have been
>1038591
>even if Twisted had used that bit of code, because that reads the data
>in and
>then loses it. So strace would have shown it being read.
>
>I'll get some help from my local TCP experts, and let you know if I 
>find
>anything
>out. In the meantime, thank you all for your patience and help.

Good luck!  Please let us know if you discover anything else.

Jean-Paul



From exarkun at twistedmatrix.com  Tue Nov 18 18:20:02 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 19 Nov 2014 01:20:02 -0000
Subject: [Twisted-Python] to force-builds.py or not to force-builds.py
In-Reply-To: <CAFycZ9fjCWBja+25mxszzpZwK-2DSHan7unPBDaX=_6ffc=sqA@mail.gmail.com>
References: <CAFycZ9fjCWBja+25mxszzpZwK-2DSHan7unPBDaX=_6ffc=sqA@mail.gmail.com>
Message-ID: <20141119012002.27773.661610386.divmod.xquotient.42@top>

On 18 Nov, 06:40 pm, adi at roiban.ro wrote:
>As commented by @glyph
>
>Since we've added the buildbot link to trac pages, force-builds.py is
>basically obsolete.  I think we should  just scrub all mentions of it,
>and probably delete it.
>
>I have created a ticket to remove it and clean documentation:
>
>https://github.com/twisted/twisted-dev-tools/issues/5
>
>Is there anyone else still using this tool?
>Should we keep it and rather than removing it, improve its 
>documentation?

Given that it already exists, I'm not sure it makes much sense to delete 
it.  Perhaps some folks prefer a workflow that is command-line oriented 
rather than web-browser based.

I don't really feel very strongly about it, though.

Jean-Paul



From glyph at twistedmatrix.com  Wed Nov 19 07:47:05 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 19 Nov 2014 15:47:05 +0100
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9diQEe=0XqyXkp_DDX-6YYuU4pYTSDF5_-y5o4O+xidMg@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
 <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>
 <CAFycZ9diQEe=0XqyXkp_DDX-6YYuU4pYTSDF5_-y5o4O+xidMg@mail.gmail.com>
Message-ID: <32E4523B-5D23-4B94-8AE1-0B67E9E87C09@twistedmatrix.com>


> On Nov 17, 2014, at 15:43, Adi Roiban <adi at roiban.ro> wrote:
> 
> Can you please update the wiki page https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow <https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow> to describe how builds are linked to tickets?
> 

I may have been overly verbose, so feel free to edit it, but I added a new section on this.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141119/77321986/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Nov 19 13:20:56 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 19 Nov 2014 21:20:56 +0100
Subject: [Twisted-Python] to force-builds.py or not to force-builds.py
In-Reply-To: <20141119012002.27773.661610386.divmod.xquotient.42@top>
References: <CAFycZ9fjCWBja+25mxszzpZwK-2DSHan7unPBDaX=_6ffc=sqA@mail.gmail.com>
 <20141119012002.27773.661610386.divmod.xquotient.42@top>
Message-ID: <5EBBA15A-81F1-430F-A2A3-23A0E1C5B7C6@twistedmatrix.com>


> On Nov 19, 2014, at 02:20, exarkun at twistedmatrix.com wrote:
> 
> Given that it already exists, I'm not sure it makes much sense to delete it.  Perhaps some folks prefer a workflow that is command-line oriented rather than web-browser based.
> 
> I don't really feel very strongly about it, though.

I guess we should do two things, really:

1. remove it from the onboarding documentation so there are fewer choices / things to learn when getting started

2. *add it* to some documentation for itself, so that people know how to use it.

While in its current state it isn't really useful to me, I would _love_ to be able to use this to spin off some tests ... if I could then view their output on the command line as well, and not just have to hit a browser immediately anyway :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141119/9ba9eb3b/attachment-0002.html>

From peter.westlake at pobox.com  Fri Nov 21 07:08:38 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 21 Nov 2014 14:08:38 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <20141119011737.27773.1732196958.divmod.xquotient.39@top>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
Message-ID: <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>


Found it!

from twisted.internet.protocol import ClientFactory, Protocol,
ProcessProtocol from twisted.internet import reactor

devnull = open('/dev/null').fileno() print devnull

factory = ClientFactory() factory.protocol = Protocol
reactor.connectTCP('localhost', 'http', factory)
reactor.callWhenRunning(reactor.spawnProcess, ProcessProtocol(),
'/bin/sleep', args=['/bin/sleep', '1000'], childFDs={0: devnull, 1: 'r',
2:'r'}) reactor.run()

Run this, then:

lsof -I @localhost

will show that the child process has the socket open on FD 0.

Now I grant that there's no need to pass /dev/null to the stdin of the
process. I should just leave 0 out of childFDs instead. But why does
this not work? lsof shows that the socket is on FD 3 in the parent
process, and the print statement shows that the FD of devnull is 3 as
well! Am I missing something obvious?

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141121/3ecf6b9f/attachment-0002.html>

From peter.westlake at pobox.com  Fri Nov 21 07:13:59 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 21 Nov 2014 14:13:59 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
 <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
Message-ID: <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>


On Fri, 21 Nov 2014, at 14:08, Peter Westlake wrote:
> Found it!
>
> from twisted.internet.protocol import ClientFactory, Protocol,
> ProcessProtocol from twisted.internet import reactor
>
> devnull = open('/dev/null').fileno() print devnull
>
> factory = ClientFactory() factory.protocol = Protocol
> reactor.connectTCP('localhost', 'http', factory)
> reactor.callWhenRunning(reactor.spawnProcess, ProcessProtocol(),
> '/bin/sleep', args=['/bin/sleep', '1000'], childFDs={0: devnull, 1:
> 'r', 2:'r'}) reactor.run()
>
> Run this, then:
>
> lsof -I @localhost
>
> will show that the child process has the socket open on FD 0.
>
> Now I grant that there's no need to pass /dev/null to the stdin of the
> process. I should just leave 0 out of childFDs instead. But why does
> this not work? lsof shows that the socket is on FD 3 in the parent
> process, and the print statement shows that the FD of devnull is 3 as
> well! Am I missing something obvious?
>
> Peter.

I *am* missing something obvious. The file opened by open() immediately
goes out of scope. AAAUGH!

Peter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141121/d839de62/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Nov 21 12:26:35 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 21 Nov 2014 20:26:35 +0100
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
 <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
 <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>
Message-ID: <BAA62123-D02F-4908-A4CD-DDCE0787BEF6@twistedmatrix.com>

> On Nov 21, 2014, at 15:13, Peter Westlake <peter.westlake at pobox.com> wrote:
> 
> I am missing something obvious. The file opened by open() immediately goes out of scope.  AAAUGH!

So... back to square one?  Or is this the solution to your problem?  I don't entirely follow how this connects...

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141121/67943769/attachment-0002.html>

From jasonjwwilliams at gmail.com  Fri Nov 21 17:12:48 2014
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 21 Nov 2014 16:12:48 -0800
Subject: [Twisted-Python] Twisted 14.0.2 & edns client subnet
Message-ID: <CAHZAEpdBhfON2VN1Bdz6f0NadORPUGeP2osqtK48Xec--EqjKg@mail.gmail.com>

Has anyone used the support for EDNS option information in the 14.0.2
twisted.names client to transmit EDNS client subnet information in upstream
DNS queries? Any advice/pointers would be greatly appreciated.

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141121/316f02fc/attachment-0002.html>

From peter.westlake at pobox.com  Fri Nov 21 17:50:25 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Sat, 22 Nov 2014 00:50:25 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <BAA62123-D02F-4908-A4CD-DDCE0787BEF6@twistedmatrix.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
 <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
 <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>
 <BAA62123-D02F-4908-A4CD-DDCE0787BEF6@twistedmatrix.com>
Message-ID: <1416617425.1937490.193999589.07DD7931@webmail.messagingengine.com>


On Fri, 21 Nov 2014, at 19:26, Glyph wrote:
>> On Nov 21, 2014, at 15:13, Peter Westlake
>> <peter.westlake at pobox.com> wrote:
>>
>> I*am*missing something obvious. The file opened by open() immediately
>> goes out of scope. AAAUGH!
>
> So... back to square one? Or is this the solution to your problem? I
> don't entirely follow how this connects..

I didn't explain, sorry. This does indeed solve my problem!

It's a mistake in very nearly the first line of the first real Python
program I wrote. It goes likes this:

devnull = open('/dev/null').fileno()

# 1. Create a Python file object on /dev/null. Its file descriptor is
#    the first one available, 3.
# 2. Use it in an expression, and store the FD (3) in the variable
#    devnull.
# 3. Lose the last reference to it.
# 4. *The file object is garbage collected and the file is closed.*
# 5. The variable devnull remembers the file descriptor number of this
#    short-lived file.

reactor.connectTCP('localhost', 'http', factory)
# 6. Open a socket. Its file number is the first one available, which is
#    3 again.

reactor.callWhenRunning(reactor.spawnProcess, ProcessProtocol(),
'/bin/sleep', args=['/bin/sleep', '1000'], childFDs={0: devnull, 1:
'r', 2:'r'})

# 7. Pass the file on descriptor 3 to the spawned process. But it's the
#    socket, not /dev/null!

In the real program the socket is an AMP connection, and the
spawnProcess is a vast tree of processes that build a large and complex
piece of software. Eventually the build process reaches an SSH call, and
for some reason SSH sometimes reads from its stdin. I don't know why,
and I don't know why it always tried to read at precisely the same time
at Twisted. But I do know that it does, thanks to a systemtap probe.

To fix the bug (and it *is* fixed, and passes testing) I had the option
of either saving the file object:

devnull = open('/dev/null') ... spawnProcess(...childFDS{0:
devnull.fileno(), 1: 'r', 2: 'r'}...)

or closing stdin:

spawnProcess(...childFDS{1: 'r', 2: 'r'}...)

The fact that the AMP connection ever worked at all showed that the
build process didn't try to read stdin, so I chose the latter option.
The SSH still works, so I suppose it is using a select() or similar
to read stdin. That would account for it being synchronised with
Twisted: when they are both waiting for data, both of them see it at
once and collide.

I suspect that the reason this went away in 2009 was because a load of
SSH calls were removed (they were to Windows machines, and very
unreliable!), and the reason it came back now was because a load more
were put in. The system was moved behind a firewall, and had to do a lot
of its former work by remote control using SSH.

Again, thank you for all the help. I do like Twisted!

Peter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141122/e2e02b40/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Nov 21 19:58:09 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 22 Nov 2014 03:58:09 +0100
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <1416617425.1937490.193999589.07DD7931@webmail.messagingengine.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
 <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
 <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>
 <BAA62123-D02F-4908-A4CD-DDCE0787BEF6@twistedmatrix.com>
 <1416617425.1937490.193999589.07DD7931@webmail.messagingengine.com>
Message-ID: <49CEBBAB-9C87-4E15-8283-AFF71A86A951@twistedmatrix.com>


> On Nov 22, 2014, at 01:50, Peter Westlake <peter.westlake at pobox.com> wrote:
> 
> On Fri, 21 Nov 2014, at 19:26, Glyph wrote:
>>> On Nov 21, 2014, at 15:13, Peter Westlake <peter.westlake at pobox.com <mailto:peter.westlake at pobox.com>> wrote:
>>>  
>>> Iammissing something obvious. The file opened by open() immediately goes out of scope.  AAAUGH!
>> 
>>  
>> So... back to square one?  Or is this the solution to your problem?  I don't entirely follow how this connects..
>  
> I didn't explain, sorry. This does indeed solve my problem!

Thanks for explaining that whole interaction.  Wow, that is a scary amount of abstraction-boundary-crossing, congratulations on diagnosing it :-).

> To fix the bug (and it is fixed, and passes testing) I had the option of either saving the file object:
>  
> devnull = open('/dev/null')
> ...
> spawnProcess(...childFDS{0: devnull.fileno(), 1: 'r', 2: 'r'}...)
>  
> or closing stdin:
>  
> spawnProcess(...childFDS{1: 'r', 2: 'r'}...)

Closing stdin is probably the best option here, but the original problem was caused by a mixing of levels.

On one level, you've got open(), which wants to sort of pretend that an open file is an object, and that the operating system resource involved is an implementation detail that can be cleaned up by the garbage collector.

On the other level, you've got spawnProcess, which is operating entirely in terms of file descriptors as process-global state.

Any time you want to open a file descriptor for spawnProcess to consume, I suggest that you open it with os.open <https://docs.python.org/2/library/os.html#os.open <https://docs.python.org/2/library/os.html#os.open>>, which just hands you an integer and makes it your own problem to close it explicitly with os.close <https://docs.python.org/2/library/os.html#os.close <https://docs.python.org/2/library/os.html#os.close>>; this is operating at the same abstraction level and therefore less error-prone.

-glyph



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141122/baa86dd3/attachment-0002.html>

From jml at mumak.net  Sat Nov 22 07:59:13 2014
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 22 Nov 2014 14:59:13 +0000
Subject: [Twisted-Python] Contributor advancement path - proposal (RFC)
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <10FB1E34-A534-4EAB-8AB0-DA83AB99D834@twistedmatrix.com>
 <20141117114810.27773.865613325.divmod.xquotient.11@top>
 <20141117134418.27773.566781633.divmod.xquotient.29@top>
 <E7FF7471-529E-4906-902B-9558D5668CC8@twistedmatrix.com>
Message-ID: <CAHZ8tnaGfBMDhf0CX2=_f=19+JvEkYk3rYwLyDwLQHdzLkgJKw@mail.gmail.com>

On Mon Nov 17 2014 at 2:18:13 PM Glyph <glyph at twistedmatrix.com> wrote:

>
> > On Nov 17, 2014, at 14:44, exarkun at twistedmatrix.com wrote:
> >
> > On 11:48 am, exarkun at twistedmatrix.com wrote:
> >>>
> >>> This sounds great. Could you jot it down on a wiki page?
> >>
> >> Hmmm okay. :P
> >
> > I wrote up <https://twistedmatrix.com/trac/wiki/Proposal/
> ContributorAdvancementPath>. Notice "Proposal" in the URL.  It would be
> nice to get feedback from some more contributors - particularly people who
> have recently gotten commit access (about whether the problems are real and
> what they think of the proposed solutions) but also from other long-time
> Twisted contributors about whether they like this new idea about how to
> bring more people in (and whether they would volunteer to do the necessary
> candidate reviews - without which effort this isn't practical).
>
> Thank you so much for doing this, JP.  I've wanted to do something about
> onboarding for a while and it's just been difficult to work up the
> enthusiasm.
>
>
Thanks indeed!

I like this idea, and think it's worth trying. I can participate in one or
two candidate reviews (depending on exactly when).

jml
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141122/c7330607/attachment-0002.html>

From peter.westlake at pobox.com  Sat Nov 22 09:11:07 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Sat, 22 Nov 2014 16:11:07 +0000
Subject: [Twisted-Python] How do I debug this network problem?
In-Reply-To: <49CEBBAB-9C87-4E15-8283-AFF71A86A951@twistedmatrix.com>
References: <1415880928.2337535.190520061.270A9576@webmail.messagingengine.com>
 <0878011B-449F-4C6D-8FD5-B90F86C21D5F@twistedmatrix.com>
 <1415889630.2363825.190570125.246E3B12@webmail.messagingengine.com>
 <83FBB24F-BBF4-4D94-9E16-B719BCEE792C@twistedmatrix.com>
 <1415898106.2392765.190633641.497414F4@webmail.messagingengine.com>
 <1415986718.2667440.191088841.10FE4BF8@webmail.messagingengine.com>
 <20141114203607.13007.153683668.divmod.xquotient.8@top>
 <1416014865.3090181.191230817.4FCF59B8@webmail.messagingengine.com>
 <1416231984.3828632.191929321.72C806A9@webmail.messagingengine.com>
 <1416235891.3841516.191955549.1FF085A2@webmail.messagingengine.com>
 <20141117153803.27773.1192805613.divmod.xquotient.31@top>
 <1416249168.3883954.192036725.3E3648BD@webmail.messagingengine.com>
 <F40398FA-9586-48F6-A5C8-6144B64D5F44@twistedmatrix.com>
 <1416271339.138271.192204189.5A0D3A76@webmail.messagingengine.com>
 <20141118010910.27773.128714459.divmod.xquotient.34@top>
 <1416315146.336523.192384153.1DD2B929@webmail.messagingengine.com>
 <20141119011737.27773.1732196958.divmod.xquotient.39@top>
 <1416578918.1683348.193788177.39F280A7@webmail.messagingengine.com>
 <1416579239.1684217.193791509.2DB78299@webmail.messagingengine.com>
 <BAA62123-D02F-4908-A4CD-DDCE0787BEF6@twistedmatrix.com>
 <1416617425.1937490.193999589.07DD7931@webmail.messagingengine.com>
 <49CEBBAB-9C87-4E15-8283-AFF71A86A951@twistedmatrix.com>
Message-ID: <1416672667.2144637.194151221.457731ED@webmail.messagingengine.com>


>
> Closing stdin is probably the best option here, but the original
> problem was caused by a mixing of levels.
>
> On one level, you've got open(), which wants to sort of pretend that
> an open file is an object, and that the operating system resource
> involved is an implementation detail that can be cleaned up by the
> garbage collector.
>
> On the other level, you've got spawnProcess, which is operating
> entirely in terms of file descriptors as process-global state.
>
> Any time you want to open a file descriptor for spawnProcess to
> consume, I suggest that you open it with os.open
> <https://docs.python.org/2/library/os.html#os.open>, which just hands
> you an integer and makes it your own problem to close it explicitly
> with os.close <https://docs.python.org/2/library/os.html#os.close>;
> this is operating at the same abstraction level and therefore less
> error-prone.

That's useful to know, thanks. I'll remember it for next time!

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141122/2a3d5fa1/attachment-0002.html>

From trac at twistedmatrix.com  Sun Nov 23 00:05:17 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 23 Nov 2014 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1416726317.55.966663814855696549@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141123/10c0b4af/attachment-0002.html>

From adi at roiban.ro  Tue Nov 25 01:52:29 2014
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 25 Nov 2014 08:52:29 +0000
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <32E4523B-5D23-4B94-8AE1-0B67E9E87C09@twistedmatrix.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
 <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>
 <CAFycZ9diQEe=0XqyXkp_DDX-6YYuU4pYTSDF5_-y5o4O+xidMg@mail.gmail.com>
 <32E4523B-5D23-4B94-8AE1-0B67E9E87C09@twistedmatrix.com>
Message-ID: <CAFycZ9fnAWGbmfFNDzVsP3GBT4jpt8mZkiCtt-MY3BAeUXvHOQ@mail.gmail.com>

Looks good.

I would like to ask write permissions for Twisted SVN repo.
For now, I plan to use this power to create branches for tickets in the
review queue launch a buildbot test for a submitted patch. I think that
this will make my review more useful as the developer could see the exact
impact of the patch against the test.

What do you think?

Thanks!

On 19 November 2014 14:47, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Nov 17, 2014, at 15:43, Adi Roiban <adi at roiban.ro> wrote:
>
> Can you please update the wiki page
> https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow
>  to describe how builds are linked to tickets?
>
>
> I may have been overly verbose, so feel free to edit it, but I added a new
> section on this.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141125/e33788be/attachment-0002.html>

From free at 64studio.com  Tue Nov 25 08:26:41 2014
From: free at 64studio.com (Free Ekanayaka)
Date: Tue, 25 Nov 2014 16:26:41 +0100
Subject: [Twisted-Python] HTTP combined log format in twisted.web.http
	changed from 13.2.0 to 14.0.0
Message-ID: <CABJ6WihNk2-yPSeUNCfA5OajPy9kLW=7pNDfak+6MN=X9Hd_zw@mail.gmail.com>

Hi,

it was

            line = '%s - - %s "%s" %d %s "%s" "%s"\n' % (

in 13.2.0 (twisted/web/http.py line 1920), and it's

        u'"%(ip)s" - - %(timestamp)s "%(method)s %(uri)s %(protocol)s" '

so basically the client IP now gets wrapped within double quotes, e.g. a
log line that was looking like:

1.2.3.4 - - [25/Oct/2004:12:31:59 +0000] "GET /dummy HTTP/1.0" 123 - "-" "-"

it now looks like:

"1.2.3.4" - - [25/Oct/2004:12:31:59 +0000] "GET /dummy HTTP/1.0" 123 - "-"
"-"

as one can see in the unit tests in test_web.py too.

What's the reason for this change?

It feels it can potentially break code that parses log files and it also
seems to diverge from the format described on the Apache web site:

http://httpd.apache.org/docs/1.3/logs.html

Cheers,

Free
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141125/ac59cdd3/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Nov 26 17:39:22 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 27 Nov 2014 01:39:22 +0100
Subject: [Twisted-Python] Permissions to trigger buildbot tests
In-Reply-To: <CAFycZ9fnAWGbmfFNDzVsP3GBT4jpt8mZkiCtt-MY3BAeUXvHOQ@mail.gmail.com>
References: <CAFycZ9evhP2r8CLfqPEwO0hG8355uixmkNdG0CBxYjPmNsZxJg@mail.gmail.com>
 <20141116224413.7281.1835854865.divmod.xquotient.16@top>
 <CAFycZ9djbXGkU_LGuegnwBrEst29QEorJpeBX90FkwdoCsB1_A@mail.gmail.com>
 <20141117134048.27773.1088753912.divmod.xquotient.23@top>
 <92E5D8A5-D98D-48B6-BB4D-DD527CD130AF@twistedmatrix.com>
 <CAFycZ9diQEe=0XqyXkp_DDX-6YYuU4pYTSDF5_-y5o4O+xidMg@mail.gmail.com>
 <32E4523B-5D23-4B94-8AE1-0B67E9E87C09@twistedmatrix.com>
 <CAFycZ9fnAWGbmfFNDzVsP3GBT4jpt8mZkiCtt-MY3BAeUXvHOQ@mail.gmail.com>
Message-ID: <D9BD7D53-FF33-44E2-B8A9-04653CF44E60@twistedmatrix.com>

I am certainly in favor, especially given that I had already offered commit access based on our previous informal process for this very reason :-).

-glyph

> On Nov 25, 2014, at 09:52, Adi Roiban <adi at roiban.ro> wrote:
> 
> Looks good.
> 
> I would like to ask write permissions for Twisted SVN repo.
> For now, I plan to use this power to create branches for tickets in the review queue launch a buildbot test for a submitted patch. I think that this will make my review more useful as the developer could see the exact impact of the patch against the test.
> 
> What do you think?
> 
> Thanks!
> 
> On 19 November 2014 14:47, Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Nov 17, 2014, at 15:43, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>> 
>> Can you please update the wiki page https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow <https://twistedmatrix.com/trac/wiki/ContinuousIntegration/DeveloperWorkflow> to describe how builds are linked to tickets?
>> 
> 
> I may have been overly verbose, so feel free to edit it, but I added a new section on this.
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> 
> 
> -- 
> Adi Roiban
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141127/8a8ba184/attachment-0002.html>

From dany74q at gmail.com  Fri Nov 28 03:43:30 2014
From: dany74q at gmail.com (Danny Shemesh)
Date: Fri, 28 Nov 2014 12:43:30 +0200
Subject: [Twisted-Python] I would like to port twisted to c++(14)
Message-ID: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>

Hello everyone,

I am Danny, a C++ dev,
I'm familiar with twisted from past projects and by this day I am enchanted
with its magic.

I would like to port twisted to c++ (or at least the base ot it) and have
couple of questions -
1. Is it legally ok to port it and open source it at github ?
2. Would anyone consider helping to this cause ?
3. Would you know of a code base that would benefit from such port ?

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141128/4c01c829/attachment-0002.html>

From hawkowl at atleastfornow.net  Fri Nov 28 04:22:51 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 28 Nov 2014 19:22:51 +0800
Subject: [Twisted-Python] I would like to port twisted to c++(14)
In-Reply-To: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
References: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
Message-ID: <166ABDA9-1975-4AF0-9D4A-85FC0CA3EEB5@atleastfornow.net>

On 28 Nov 2014, at 18:43, Danny Shemesh <dany74q at gmail.com> wrote:

> Hello everyone,
> 
> I am Danny, a C++ dev, 
> I'm familiar with twisted from past projects and by this day I am enchanted with its magic.
> 
> I would like to port twisted to c++ (or at least the base ot it) and have couple of questions -
> 1. Is it legally ok to port it and open source it at github ?
> 2. Would anyone consider helping to this cause ?
> 3. Would you know of a code base that would benefit from such port ?
> 
> Thanks!

Hi Danny,

As Twisted is offered under a MIT license, you can legally port it without worry. However, I am not sure about the usefulness of it — part of the greatness of Twisted is that you can do all this low-level networking in a language that is completely portable, understandable, and “safe” — a C++ port would kind of defeat most of these, and would likely offer no benefits over existing event loop-using solutions in C++, such as libuv.

-hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20141128/936b13b2/attachment.sig>

From exarkun at twistedmatrix.com  Fri Nov 28 18:13:37 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 29 Nov 2014 01:13:37 -0000
Subject: [Twisted-Python] I would like to port twisted to c++(14)
In-Reply-To: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
References: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
Message-ID: <20141129011337.23969.508729553.divmod.xquotient.2@top>

On 28 Nov, 10:43 am, dany74q at gmail.com wrote:
>Hello everyone,
>
>I am Danny, a C++ dev,
>I'm familiar with twisted from past projects and by this day I am 
>enchanted
>with its magic.
>
>I would like to port twisted to c++ (or at least the base ot it) and 
>have
>couple of questions -
>1. Is it legally ok to port it and open source it at github ?
>2. Would anyone consider helping to this cause ?
>3. Would you know of a code base that would benefit from such port ?

Perhaps first have a look at ACE:

    http://www.cs.wustl.edu/~schmidt/ACE.html

and Boost::ASIO:

    http://www.boost.org/doc/libs/1_57_0/doc/html/boost_asio.html

Jean-Paul



From kaliyuga at riseup.net  Sat Nov 29 01:41:41 2014
From: kaliyuga at riseup.net (kaliyuga at riseup.net)
Date: Sat, 29 Nov 2014 08:41:41 -0000
Subject: [Twisted-Python] I would like to port twisted to c++(14)
In-Reply-To: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
References: <CAFZC=Qq7EPwWorS9BM6O2M3PjVY3SxOx51_F9yxTriAB6cvtjw@mail.gmail.com>
Message-ID: <192ce206f130b64853777d7273dc8b23.squirrel@mail.riseup.net>

> I would like to port twisted to c++ (or at least the base ot it)

You might be interested in Tom Cocagne's c++ Deferreds:
https://twistedmatrix.com/pipermail/twisted-python/2009-January/019119.html




From adi at roiban.ro  Sat Nov 29 05:39:22 2014
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 29 Nov 2014 12:39:22 +0000
Subject: [Twisted-Python] Importing/Exporting Putty and SSH.com keys
Message-ID: <CAFycZ9dnooUhV=XxhGRSQa9mZ9F2G_cCaSDuC=yw7TZcogQiCg@mail.gmail.com>

Hi,

I just want to let you know about a piece of code I was working on.

I wanted to import and export Putty and SSH.com (Tectia) SSH keys in Python
and I could not find any existing code for that... my final goal is to
replicate the puttygen functionality.

I have extended the current twisted.conch.ssh.key.Key class to
import/export Putty and SSH.com keys

Code is here: https://github.com/chevah/chevah-keycert

Not sure if it make sense to have it integrated in Twisted. If there is
someone willing to review (part of) and merge this code I am happy to send
patches.

Right now it depend on Twisted but only because of the original Key and
packing/unpacking MP/NS values...

Have a nice day!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141129/a05bca20/attachment-0002.html>

From trac at twistedmatrix.com  Sun Nov 30 00:05:17 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 30 Nov 2014 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1417331117.48.6667273935150943791@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141130/dd88e626/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Nov 30 08:09:18 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 30 Nov 2014 16:09:18 +0100
Subject: [Twisted-Python] doc bloat
Message-ID: <D114730E-21D4-42F1-A8EB-98C3FD1243E7@twistedmatrix.com>

Jean-Paul raised a salient point about documentation on a ticket <https://twistedmatrix.com/trac/ticket/4804#comment:21> recently.  To quote that:
We seem to be going the direction of "document every possible thing" these days. This stems from good intentions but the result is ever more bloated developer documentation of which any individual contributor has an ever shrinking knowledge. Rather than continuing to block the docs even further ... I think we need to get serious about pursuing a different strategy - for example, making twistedchecker a piece of software we could actually maintain and the output of which we could actually rely on (this really is just an example - the notion of a tool that tells you every single thing that's wrong with a piece of software is, of course, quite enticing - but perhaps unachievable).

I think we've been moving in the direction of making twistedchecker maintainable, although it does still present some challenges.  For example, I've been wanting to eliminate this <https://github.com/twisted/twistedchecker/issues/75 <https://github.com/twisted/twistedchecker/issues/75>> for a while, but I just haven't been able to figure it out.
I am also thinking that we may want to create a category of private implementation details that don't require docstring coverage.  In a public API, every parameter, every attribute, every detail should have accompanying prose and type annotations.  In the innards of an implementation, these details can crowd out the code they're supposed to be elucidating.
As a first approximation, I think we could ask twistedchecker to stop enforcing docstring requirements for objects directly matching a "private" naming pattern.
Thoughts?
-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141130/74e1237d/attachment-0002.html>

From hawkowl at atleastfornow.net  Sun Nov 30 08:19:12 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sun, 30 Nov 2014 23:19:12 +0800
Subject: [Twisted-Python] doc bloat
In-Reply-To: <D114730E-21D4-42F1-A8EB-98C3FD1243E7@twistedmatrix.com>
References: <D114730E-21D4-42F1-A8EB-98C3FD1243E7@twistedmatrix.com>
Message-ID: <4DB4F054-A91B-4B05-A75E-EB0B6BE03E7D@atleastfornow.net>


On 30 Nov 2014, at 23:09, Glyph <glyph at twistedmatrix.com> wrote:

> Jean-Paul raised a salient point about documentation on a ticket recently.  To quote that:
> We seem to be going the direction of "document every possible thing" these days. This stems from good intentions but the result is ever more bloated developer documentation of which any individual contributor has an ever shrinking knowledge. Rather than continuing to block the docs even further ... I think we need to get serious about pursuing a different strategy - for example, making twistedchecker a piece of software we could actually maintain and the output of which we could actually rely on (this really is just an example - the notion of a tool that tells you every single thing that's wrong with a piece of software is, of course, quite enticing - but perhaps unachievable).
> 
> I think we've been moving in the direction of making twistedchecker maintainable, although it does still present some challenges.  For example, I've been wanting to eliminate this <https://github.com/twisted/twistedchecker/issues/75> for a while, but I just haven't been able to figure it out.
> I am also thinking that we may want to create a category of private implementation details that don't require docstring coverage.  In a public API, every parameter, every attribute, every detail should have accompanying prose and type annotations.  In the innards of an implementation, these details can crowd out the code they're supposed to be elucidating.
> As a first approximation, I think we could ask twistedchecker to stop enforcing docstring requirements for objects directly matching a "private" naming pattern.
> Thoughts?
> -glyph

This sounds like a good idea. How do we tackle things that should be documented in some form (ie. important implementation details), that do need docstring-like things, but should not be exposed to users? For example, http://twistedmatrix.com/documents/current/api/twisted.web.http.Request.html#__repr__ , to an application developer, has no use, and is just cluttering up the docs, but may want to have a docstring for code documentation purposes, rather than user documentation purposes.

It’s like, 11pm here, so apologies if that made zero sense :)

-hawkie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20141130/ccff589a/attachment.sig>

From glyph at twistedmatrix.com  Sun Nov 30 09:49:38 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 30 Nov 2014 17:49:38 +0100
Subject: [Twisted-Python] doc bloat
In-Reply-To: <D114730E-21D4-42F1-A8EB-98C3FD1243E7@twistedmatrix.com>
References: <D114730E-21D4-42F1-A8EB-98C3FD1243E7@twistedmatrix.com>
Message-ID: <CBFD7586-9EB0-4F12-9F5B-B9B4140397C9@twistedmatrix.com>


> On Nov 30, 2014, at 16:09, Glyph <glyph at twistedmatrix.com> wrote:

> I think we've been moving in the direction of making twistedchecker maintainable, although it does still present some challenges.  For example, I've been wanting to eliminate this <https://github.com/twisted/twistedchecker/issues/75 <https://github.com/twisted/twistedchecker/issues/75>> for a while, but I just haven't been able to figure it out.

Well, I guess we have been moving in that direction after all.  I figured it out, there's a PR here:

<https://github.com/twisted/twistedchecker/pull/86 <https://github.com/twisted/twistedchecker/pull/86>>

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141130/fed5c674/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Nov 30 09:52:23 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 30 Nov 2014 17:52:23 +0100
Subject: [Twisted-Python] Importing/Exporting Putty and SSH.com keys
In-Reply-To: <CAFycZ9dnooUhV=XxhGRSQa9mZ9F2G_cCaSDuC=yw7TZcogQiCg@mail.gmail.com>
References: <CAFycZ9dnooUhV=XxhGRSQa9mZ9F2G_cCaSDuC=yw7TZcogQiCg@mail.gmail.com>
Message-ID: <41E8EDCE-191B-4676-B83F-59B297720417@twistedmatrix.com>


> On Nov 29, 2014, at 13:39, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I just want to let you know about a piece of code I was working on.
> 
> I wanted to import and export Putty and SSH.com (Tectia) SSH keys in Python and I could not find any existing code for that... my final goal is to replicate the puttygen functionality.
> 
> I have extended the current twisted.conch.ssh.key.Key class to import/export Putty and SSH.com keys
> 
> Code is here: https://github.com/chevah/chevah-keycert <https://github.com/chevah/chevah-keycert>
> 
> Not sure if it make sense to have it integrated in Twisted. If there is someone willing to review (part of) and merge this code I am happy to send patches.
> 
> Right now it depend on Twisted but only because of the original Key and packing/unpacking MP/NS values... 
> 
> Have a nice day!

Cool, thanks for letting us know about this!

It might be nice to gradually turn Conch into an actually useful SSH command-line for Windows; PuTTY does not seem to me to be very friendly to automation.  So perhaps this could make sense in Twisted, since being able to deal with PuTTY keys would definitely be part of that.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141130/d49a548d/attachment-0002.html>

From mithrandi at mithrandi.net  Sun Nov 30 13:02:15 2014
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 30 Nov 2014 22:02:15 +0200
Subject: [Twisted-Python] Importing/Exporting Putty and SSH.com keys
In-Reply-To: <41E8EDCE-191B-4676-B83F-59B297720417@twistedmatrix.com>
References: <CAFycZ9dnooUhV=XxhGRSQa9mZ9F2G_cCaSDuC=yw7TZcogQiCg@mail.gmail.com>
 <41E8EDCE-191B-4676-B83F-59B297720417@twistedmatrix.com>
Message-ID: <CAMcKhMSH4jjPOky6OOryLYrG=juLOrbgBN4DDXqQ62m9FD53qQ@mail.gmail.com>

On 30 November 2014 at 18:52, Glyph <glyph at twistedmatrix.com> wrote:
> PuTTY does not seem to me to be very friendly to automation.

OT: for automation, you probably want Plink not PuTTY.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From glyph at twistedmatrix.com  Sun Nov 30 14:30:28 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 30 Nov 2014 22:30:28 +0100
Subject: [Twisted-Python] Importing/Exporting Putty and SSH.com keys
In-Reply-To: <CAMcKhMSH4jjPOky6OOryLYrG=juLOrbgBN4DDXqQ62m9FD53qQ@mail.gmail.com>
References: <CAFycZ9dnooUhV=XxhGRSQa9mZ9F2G_cCaSDuC=yw7TZcogQiCg@mail.gmail.com>
 <41E8EDCE-191B-4676-B83F-59B297720417@twistedmatrix.com>
 <CAMcKhMSH4jjPOky6OOryLYrG=juLOrbgBN4DDXqQ62m9FD53qQ@mail.gmail.com>
Message-ID: <73AA8C4D-EA98-4EE0-B055-391E779CB2C0@twistedmatrix.com>


> On Nov 30, 2014, at 21:02, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On 30 November 2014 at 18:52, Glyph <glyph at twistedmatrix.com> wrote:
>> PuTTY does not seem to me to be very friendly to automation.
> 
> OT: for automation, you probably want Plink not PuTTY.

I'm familiar with Plink, and its necessity is sort of what I mean :).

(Consider an application like "vagrant ssh" - Plink doesn't work so well for that.)

-glyph





From FeihuaXx010 at 163.com  Sun Nov 30 23:10:54 2014
From: FeihuaXx010 at 163.com (FeihuaXx010 at 163.com)
Date: Mon, 1 Dec 2014 14:10:54 +0800
Subject: [Twisted-Python] captcha
Message-ID: <201412011410540357071@163.com>

Use twisted development site, how to add captcha when you log in, twisted it has provided
who can tell me,thanks  



FeihuaXx010 at 163.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20141201/8d6e8b16/attachment-0002.html>

