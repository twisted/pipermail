From itamar at itamarst.org  Tue Nov  1 10:47:09 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 01 Nov 2005 10:47:09 -0500
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
Message-ID: <1130860029.8994.2.camel@localhost.localdomain>

Hi,

Still haven't gotten an answer to this; why is the motivation for
deprecating a perfectly reasonable feature?




From justinjohnson at gmail.com  Tue Nov  1 12:20:36 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 1 Nov 2005 11:20:36 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] r14952 - Impelement
	spawnProcess for IOCP reactor. Resolves issue1008.
In-Reply-To: <20051029130646.GA4823@trogdor.home.puzzling.org>
References: <E1EVXEv-00015O-00@wolfwood>
	<20051029032622.10365.771357096.divmod.quotient.1520@ohm>
	<20051029130646.GA4823@trogdor.home.puzzling.org>
Message-ID: <94a776e70511010920t13b4141ag7e8d18f7ec5da554@mail.gmail.com>

This problem is resolved with r14989.

On 10/29/05, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>
> On Fri, Oct 28, 2005 at 11:26:22PM -0400, Jean-Paul Calderone wrote:
> > On Fri, 28 Oct 2005 10:38:02 -0600, Justin Johnson
> > <justinj at wolfwood.twistedmatrix.com> wrote:
> [...]
> > >Log:
> > >Impelement spawnProcess for IOCP reactor. Resolves issue1008.
> > >
> >
> > While I am excited this feature is so close, it seems like it isn't
> quite
> > there yet. Buildbot is now reporting only 442 tests run by the IOCP
> > builder on Win32, and a really nasty looking traceback afterwards.
> >
> > Could we revert this merge?
>
> The bug you notice existed before that merge too. Jonathan helped me
> diagnose it: see http://twistedmatrix.com/bugs/issue1294. It appears trial
> is calling reactor.iterate(0) during cleanup, and not expecting that it
> could raise an exception. Making iocp's doIteration swallow and log that
> error, like the other reactors do, will probably fix this. Making trial
> deal with that error better (as apparently is not too hard to do with one
> of
> the trial branches) would also fix it.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051101/2ba84388/attachment.htm 

From exarkun at divmod.com  Tue Nov  1 12:38:21 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 1 Nov 2005 12:38:21 -0500
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
In-Reply-To: <1130860029.8994.2.camel@localhost.localdomain>
Message-ID: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>

On Tue, 01 Nov 2005 10:47:09 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>Hi,
>
>Still haven't gotten an answer to this; why is the motivation for
>deprecating a perfectly reasonable feature?
>

FWIW, I also would like to know the answer to this question.

Jp



From dreid at dreid.org  Tue Nov  1 12:57:53 2005
From: dreid at dreid.org (David Reid)
Date: Tue, 01 Nov 2005 09:57:53 -0800
Subject: [Twisted-Python] Generally useful RFC2617
Message-ID: <1130867874.8330.12.camel@audrey.local>

Currently in Twisted/sandbox/dreid/rfc2617.py (with unittests at
test_rfc2617.py) there is an implementation of RFC 2617 HTTP
Authentication: Basic and Digest based authentication.  It is based on
the implementations found in twisted.protocols.sip, mantissa.sip, and
sine.sip.  The goal was to pull the sip specific stuff from these
implementations and make something that would be useful for other
protocols such as HTTP and IMAP.  A couple of points are unclear
however.

1) Where to put it?

In theory it should be in twisted core.  I just don't know where, and
didn't want to check it in there somewhere only to have developers with
more pull than I have to disagree, itamar suggested t.py.digest, dash
seemed to agree, other suggestions were t.cred.digest, but I just don't
know.

2) IAuthorizer.

rfc2617.IAuthorizer, and *.sip.IAuthorizer before it, strike me as a
really poorly named interface.  It's purpose is to create challenges,
and decode the response into something that can be used to return an
ICredentials.  This seems like a more generally useful concept than just
to HTTP Auth, but there isn't currently anything like it cred.  (Note
I'm aware of cred.authorizer but they are not even similar interfaces,
which is part of the reason IAuthorizer is so poorly named.)

Anyway, I'm just hoping someone will tell me where to put it other than
"where the sun don't shine" because I think that's covered under *.sip

-David




From glyph at divmod.com  Tue Nov  1 15:38:23 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 1 Nov 2005 15:38:23 -0500
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
In-Reply-To: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>
Message-ID: <20051101203823.10365.1647175797.divmod.quotient.2949@ohm>



On Tue, 1 Nov 2005 12:38:21 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>On Tue, 01 Nov 2005 10:47:09 -0500, Itamar Shtull-Trauring 
><itamar at itamarst.org> wrote:
>>Hi,
>>
>>Still haven't gotten an answer to this; why is the motivation for
>>deprecating a perfectly reasonable feature?
>
>FWIW, I also would like to know the answer to this question.

Yeah, uh...

As I understand it the implementation was previously horrendously broken.  Now it is not.  Given that it is now no longer broken, and some quite reasonable tests I've seen make use of it (in particular: tests for Divmod ClickChronicle do some very expensive setup in a setUpClass), I'd like to see it stick around.



From general at eepatents.com  Tue Nov  1 15:43:04 2005
From: general at eepatents.com (Ed Suominen)
Date: Tue, 01 Nov 2005 12:43:04 -0800
Subject: [Twisted-Python] Remove setupClass branch of trial - what is
	the motivation?
In-Reply-To: <E1EX1Mc-0001Id-02@pyramid.twistedmatrix.com>
References: <E1EX1Mc-0001Id-02@pyramid.twistedmatrix.com>
Message-ID: <1130877785.29832.6.camel@207-118-65-198.dyn.centurytel.net>

Same here, since I actually use setupClass and teardownClass quite a bit
in my own unit tests. To me, there doesn't seem to be to be a valid
reason for any plans to take away the flexibility of performing setup
for an entire TestCase, in addition to or instead of setup for each
individual test. (I use both.)

Below is a use case for setupClass and teardownClass that is about more
than just convenience, especially when more tests are added to the
class.

- Ed Suominen

----------------------------------------------------------------------------------------------------------------
class TestViews(TestCase):
    """
    Does the View widget permit display of multiple views with tabs as
    advertised?

    """
    def setUpClass(self):
        # Switch in our Mock Overview for testing
        self.oldOverview = view.Overview
        view.Overview = MockOverview
        # Start the clock for window display
        self.t1 = time()
        # Bring up the window
        gui = self.gui = Gui(640, 480)
        self.views = view.Views(gui)
        gui.setCentralWidget(self.views)
        gui.show()

    def tearDownClass(self):
        def wait():
            return time() - self.t1 < SHOW_INTERVAL

        # Let the window stay up for the full interval
        util.spinWhile(wait, 2*SHOW_INTERVAL)
        # Restore the real Overview object
        view.Overview = self.oldOverview

    def testNewTab(self):
        self.views.new(MockSecondView, 'Testing...')

> Date: Tue, 1 Nov 2005 12:38:21 -0500
> From: Jean-Paul Calderone <exarkun at divmod.com>
> Subject: Re: [Twisted-Python] Remove setupClass branch of trial - what
> 	is the	motivation?
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <20051101173821.10365.1778643802.divmod.quotient.2873 at ohm>
> Content-Type: text/plain; format=flowed
> 
> On Tue, 01 Nov 2005 10:47:09 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> >Hi,
> >
> >Still haven't gotten an answer to this; why is the motivation for
> >deprecating a perfectly reasonable feature?
> >
> 
> FWIW, I also would like to know the answer to this question.
> 
> Jp





From dmitry at athabascau.ca  Tue Nov  1 15:38:59 2005
From: dmitry at athabascau.ca (Dmitry S. Makovey)
Date: Tue, 01 Nov 2005 13:38:59 -0700
Subject: [Twisted-Python] WabDAV in twisted
Message-ID: <200511011339.03353.dmitry@athabascau.ca>


is there anything happening in Twisted community in terms of 
supporting WebDAV protocol? I found only one relevant project - 
akadav but it looks like it was abandoned for about 5 month now. 

-- 
Dmitry Makovey
Web Systems Administrator
Athabasca University
(780) 675-6245
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20051101/e8aaace5/attachment.pgp 

From bob at redivi.com  Tue Nov  1 16:18:26 2005
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 1 Nov 2005 13:18:26 -0800
Subject: [Twisted-Python] WabDAV in twisted
In-Reply-To: <200511011339.03353.dmitry@athabascau.ca>
References: <200511011339.03353.dmitry@athabascau.ca>
Message-ID: <2C3F4E85-13AD-49E8-82EC-67375F3F72CF@redivi.com>

On Nov 1, 2005, at 12:38 PM, Dmitry S. Makovey wrote:

>
> is there anything happening in Twisted community in terms of
> supporting WebDAV protocol? I found only one relevant project -
> akadav but it looks like it was abandoned for about 5 month now.

Yes, TwistedDAV:
http://www.wsanchez.net/blog/archives/000116.html

As far as platforms go, it should run on Linux (with an xattr- 
supporting fs) since I added some code to the latest version of xattr  
such that it should at least compile there.  It might work on NetBSD,  
it won't work on FreeBSD or Windows.

Other platforms could be easily supported by writing something API- 
compatible to the xattr module that stores extended attributes  
somehow (e.g. in dotfiles along-side).  I'll also accept patches to  
xattr to support other native extended attributes schemes (FreeBSD,  
NTFS, whatever).

-bob




From dmitry at athabascau.ca  Tue Nov  1 16:45:04 2005
From: dmitry at athabascau.ca (Dmitry S. Makovey)
Date: Tue, 01 Nov 2005 14:45:04 -0700
Subject: [Twisted-Python] WabDAV in twisted
In-Reply-To: <2C3F4E85-13AD-49E8-82EC-67375F3F72CF@redivi.com>
References: <200511011339.03353.dmitry@athabascau.ca>
	<2C3F4E85-13AD-49E8-82EC-67375F3F72CF@redivi.com>
Message-ID: <200511011445.07795.dmitry@athabascau.ca>

On November 1, 2005 02:18 pm, Bob Ippolito wrote:
> On Nov 1, 2005, at 12:38 PM, Dmitry S. Makovey wrote:
> > is there anything happening in Twisted community in terms of
> > supporting WebDAV protocol? I found only one relevant project -
> > akadav but it looks like it was abandoned for about 5 month now.
>
> Yes, TwistedDAV:
> http://www.wsanchez.net/blog/archives/000116.html

interesting project, thanks for sharing.

> Other platforms could be easily supported by writing something API-
> compatible to the xattr module that stores extended attributes
> somehow (e.g. in dotfiles along-side).  I'll also accept patches to
> xattr to support other native extended attributes schemes (FreeBSD,
> NTFS, whatever).

I guess for my requirements I'd have to do that, but coding is fun, 
although I'm kind of limited with time so I might as well wait for 
somebody else :)

P.S. 
nice to see Apple contributing back to community ;) (or allowing it's 
staff to contribute back to community :) )

-- 
Dmitry Makovey
Web Systems Administrator
Athabasca University
(780) 675-6245
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20051101/3cfa39a2/attachment.pgp 

From bob at redivi.com  Tue Nov  1 17:59:29 2005
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 1 Nov 2005 14:59:29 -0800
Subject: [Twisted-Python] WabDAV in twisted
In-Reply-To: <200511011445.07795.dmitry@athabascau.ca>
References: <200511011339.03353.dmitry@athabascau.ca>
	<2C3F4E85-13AD-49E8-82EC-67375F3F72CF@redivi.com>
	<200511011445.07795.dmitry@athabascau.ca>
Message-ID: <BD2522A6-AA6A-44D9-AA40-BFCEE8E56C4D@redivi.com>


On Nov 1, 2005, at 1:45 PM, Dmitry S. Makovey wrote:

> On November 1, 2005 02:18 pm, Bob Ippolito wrote:
>
>> On Nov 1, 2005, at 12:38 PM, Dmitry S. Makovey wrote:
>>
>>> is there anything happening in Twisted community in terms of
>>> supporting WebDAV protocol? I found only one relevant project -
>>> akadav but it looks like it was abandoned for about 5 month now.
>>>
>>
>> Yes, TwistedDAV:
>> http://www.wsanchez.net/blog/archives/000116.html
>>
>
> interesting project, thanks for sharing.
>
>
>> Other platforms could be easily supported by writing something API-
>> compatible to the xattr module that stores extended attributes
>> somehow (e.g. in dotfiles along-side).  I'll also accept patches to
>> xattr to support other native extended attributes schemes (FreeBSD,
>> NTFS, whatever).
>>
>
> I guess for my requirements I'd have to do that, but coding is fun,
> although I'm kind of limited with time so I might as well wait for
> somebody else :)

As far as I know, nobody is actively pursuing this.  If you do have a  
deadline, you better do it yourself...  I'm not planning to do any  
more work on xattr, unless it's applying patches or fixing bugs  
reported by users (that aren't Mac OS X's fault!).

-bob




From foom at fuhm.net  Wed Nov  2 02:02:02 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 02 Nov 2005 00:02:02 -0700
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1EXCdG-0000AT-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2005-10-26 06:00:02.460000:
 Bugs opened: 21   Bugs closed: 17   Total open bugs: 486 (+4)
  Urgent: 3 (+0)
  Bug: 239 (+4)
  Feature: 166 (+0)
  Wish: 78 (+0)

New / Reopened Bugs
______________________
                    ==== Bug ====
[CORE, TESTS, TRIAL] trial doesn't run test suite all the way on win32eventreactor  (2 hours ago)
       http://twistedmatrix.com/bugs/issue1306 opened by exarkun

strange behaviours when writing large amount of data on stdout  (12 hours ago)
       http://twistedmatrix.com/bugs/issue1305 opened by manlio

[CORE, TESTS, TRIAL] twisted.trial.test.test_failure_formatting.TestFailureFormatting.testFormatErroredMethod hangs indefinitely  (yesterday)
       http://twistedmatrix.com/bugs/issue1304 opened by exarkun

[WEBSITE] API docs aren't being linked from developer guides  (yesterday)
       http://twistedmatrix.com/bugs/issue1303 opened by spiv

[CORE, WIN32] [PATCH] iocp's doIteration doesn't handle errors thrown from selectables  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1294 opened by spiv

[PATCH] twisted words irc patch for usernames  (yesterday)
       http://twistedmatrix.com/bugs/issue1302 opened by avleenvig

cftp with no known_hosts file hangs  (yesterday)
       http://twistedmatrix.com/bugs/issue1301 opened by robertc

[WEB] web2/cgi hides REMOTE_USER  (yesterday)
       http://twistedmatrix.com/bugs/issue1300 opened by boga

[CORE, TESTS] twisted.test.test_udp.testRebind makes no sense  (3 days ago)
       http://twistedmatrix.com/bugs/issue1295 opened by exarkun

[BACKPORT, MAIL] No callback/errback from IMAP command called when connection lost  (5 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1290 opened by jojo

[CORE, DOCUMENTATION] simpleclient crashes - reactor.stop() called twice  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1299 opened by FrankMillman

[TESTS, TRIAL] TASK: Remove deferredResult and deferredError  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1297 opened by jml

[BACKPORT, CORE, TWISTD] twisted/application/app.py messes up subcommands with its parseOptions  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1298 opened by exarkun

[WORDS] jabber BasicAuthenticator  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1296 opened by sciasbat

[CORE, TRIAL] Unexpected successes are not reported in the summary section of trial  (4 days ago)
       http://twistedmatrix.com/bugs/issue1293 opened by glyph

[BACKPORT, CONCH] conch client completely broken  (4 days ago)
       http://twistedmatrix.com/bugs/issue1292 opened by glyph

[WEB] ProxyClientFactory hard-codes protocol class  (6 days ago)
       http://twistedmatrix.com/bugs/issue1287 opened by acapnotic

                    ==== Feature ====
[CORE] Expose "process exited" hook on ProcessProtocol, turning current processEnded into user-overriddable behavior  (5 days ago)
       http://twistedmatrix.com/bugs/issue1291 opened by itamarst

SO_REUSEADDR on outgoing connections  (6 days ago)
       http://twistedmatrix.com/bugs/issue1288 opened by ghazel

Make Twisted Play Nice with setuputils/easy_install  (6 days ago)
       http://twistedmatrix.com/bugs/issue1286 opened by icepick

                    ==== Wish ====
[DEFERRED, DOCUMENTATION] Error in documentation (deferred timeout example) at http://twistedmatrix.com/projects/core/documentation/howto/deferrecipes.html  (5 days ago)
       http://twistedmatrix.com/bugs/issue1289 opened by szumo

Bugs Closed
______________________
                    ==== Bug ====
[WIN32] win32 spawnProcess should return something  (3 months ago)
       http://twistedmatrix.com/bugs/issue1116 opened by warner, closed by justinj

[CORE, WIN32] [PATCH] iocp's doIteration doesn't handle errors thrown from selectables  (4 days ago)
       http://twistedmatrix.com/bugs/issue1294 opened by spiv, closed by justinj

Twisted obscures SSL-level errors and prohibits application-level handling of them  (12 months ago)
       http://twistedmatrix.com/bugs/issue778 opened by andrea, closed by exarkun

[BACKPORT, MAIL] No callback/errback from IMAP command called when connection lost  (5 days ago)
       http://twistedmatrix.com/bugs/issue1290 opened by jojo, closed by exarkun

[CORE, DOCUMENTATION] simpleclient crashes - reactor.stop() called twice  (2 days ago)
       http://twistedmatrix.com/bugs/issue1299 opened by FrankMillman, closed by exarkun

[TESTS, TRIAL] TASK: Remove deferredResult and deferredError  (3 days ago)
       http://twistedmatrix.com/bugs/issue1297 opened by jml, closed by exarkun

[BACKPORT, CORE, TWISTD] twisted/application/app.py messes up subcommands with its parseOptions  (3 days ago)
       http://twistedmatrix.com/bugs/issue1298 opened by exarkun, closed by exarkun

[WORDS] jabber BasicAuthenticator  (3 days ago)
       http://twistedmatrix.com/bugs/issue1296 opened by sciasbat, closed by ralphm

[CORE, DOCUMENTATION] twisted.internet.abstract.FileDescriptor.loseConnection.__doc__ is a stupid lie  (6 months ago)
       http://twistedmatrix.com/bugs/issue988 opened by exarkun, closed by glyph

at least one egrep option in twisted-dev.el (CVS) not supported on Mac OS X 10.3.7  (10 months ago)
       http://twistedmatrix.com/bugs/issue849 opened by ytrewq1, closed by glyph

[SECURITY] Threads improperly retain initial privileges  (3 weeks ago)
       http://twistedmatrix.com/bugs/issue1251 opened by exarkun, closed by glyph

[BACKPORT, WORDS] UnboundLocalError in twisted.words.tap  (1 week ago)
       http://twistedmatrix.com/bugs/issue1283 opened by mike, closed by exarkun

                    ==== Feature ====
Implement spawnProcess for default reactor on Windows  (19 months ago)
       http://twistedmatrix.com/bugs/issue591 opened by justinj, closed by justinj

[TRIAL] Suppress expected warnings from trial  (17 months ago)
       http://twistedmatrix.com/bugs/issue627 opened by jknight, closed by jml

[TRIAL] --coverage should be a flag, not a parameter  (1 month ago)
       http://twistedmatrix.com/bugs/issue1207 opened by jml, closed by jml

                    ==== Wish ====
clean up gtk2reactor's waste of CPU in iterate()  (9 months ago)
       http://twistedmatrix.com/bugs/issue858 opened by glyph, closed by glyph

[DEFERRED] Deferred.callback(anotherDeferred)  (23 months ago)
       http://twistedmatrix.com/bugs/issue410 opened by etrepum, closed by glyph




From eddyxu at 126.com  Wed Nov  2 02:05:51 2005
From: eddyxu at 126.com (Eddy Xu)
Date: Wed, 02 Nov 2005 15:05:51 +0800
Subject: [Twisted-Python] How could I add reliability to a udp client
Message-ID: <4368654F.2070905@126.com>

This is my situation: I have a client to send UDP messages to multi
servers, and I have to ensure all the messages be recieved by special
server. If the client didn't get the response , it should re-send the
message for times. I think i need maintain a FIFO queue for all
messages, but i have no idea how to deal with the different status of
message, such as send but not recieved message, don't be send, and have
resent for times. Can you help me?



From itamar at itamarst.org  Wed Nov  2 12:47:45 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 02 Nov 2005 12:47:45 -0500
Subject: [Twisted-Python] How could I add reliability to a udp client
In-Reply-To: <4368654F.2070905@126.com>
References: <4368654F.2070905@126.com>
Message-ID: <1130953665.8992.4.camel@localhost.localdomain>

On Wed, 2005-11-02 at 15:05 +0800, Eddy Xu wrote:
> This is my situation: I have a client to send UDP messages to multi
> servers, and I have to ensure all the messages be recieved by special
> server. If the client didn't get the response , it should re-send the
> message for times. I think i need maintain a FIFO queue for all
> messages, but i have no idea how to deal with the different status of
> message, such as send but not recieved message, don't be send, and have
> resent for times. Can you help me?

Any reason not to use TCP?




From wsanchez at wsanchez.net  Wed Nov  2 15:22:39 2005
From: wsanchez at wsanchez.net (=?ISO-8859-1?Q?Wilfredo_S=E1nchez_Vega?=)
Date: Wed, 2 Nov 2005 12:22:39 -0800
Subject: [Twisted-Python] WabDAV in twisted
Message-ID: <C7C05A97-CCCA-4DF3-AADC-19E8B3B6DEA3@wsanchez.net>

> is there anything happening in Twisted community in terms of
> supporting WebDAV protocol? I found only one relevant project -
> akadav but it looks like it was abandoned for about 5 month now.

   Yeah, see: http://www.wsanchez.net/blog/archives/000116.html

   I might be able to get started with getting some of this into the  
twisted repository this weekend, with some help from dreid, but in  
the meantime, you can use the external module in my red-bean repository.

     -wsv

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3057 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20051102/b8d6e79d/attachment.bin 

From dreid at dreid.org  Wed Nov  2 16:41:23 2005
From: dreid at dreid.org (David Reid)
Date: Wed, 2 Nov 2005 13:41:23 -0800
Subject: [Twisted-Python] WabDAV in twisted
In-Reply-To: <C7C05A97-CCCA-4DF3-AADC-19E8B3B6DEA3@wsanchez.net>
References: <C7C05A97-CCCA-4DF3-AADC-19E8B3B6DEA3@wsanchez.net>
Message-ID: <2CA6E89E-6AF3-4C9C-826B-42C0BB7A1742@dreid.org>


On Nov 2, 2005, at 12:22 PM, Wilfredo S?nchez Vega wrote:

>> is there anything happening in Twisted community in terms of
>> supporting WebDAV protocol? I found only one relevant project -
>> akadav but it looks like it was abandoned for about 5 month now.
>>
>
>   Yeah, see: http://www.wsanchez.net/blog/archives/000116.html
>
>   I might be able to get started with getting some of this into the  
> twisted repository this weekend, with some help from dreid, but in  
> the meantime, you can use the external module in my red-bean  
> repository.
>
>     -wsv

In fact, if you can make it to SuperHappyDevHouse I would put aside  
all personal projects to work on this.
-David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051102/585a69ee/attachment.htm 

From dmitry at athabascau.ca  Wed Nov  2 16:54:42 2005
From: dmitry at athabascau.ca (Dmitry S. Makovey)
Date: Wed, 02 Nov 2005 14:54:42 -0700
Subject: [Twisted-Python] WabDAV in twisted
In-Reply-To: <C7C05A97-CCCA-4DF3-AADC-19E8B3B6DEA3@wsanchez.net>
References: <C7C05A97-CCCA-4DF3-AADC-19E8B3B6DEA3@wsanchez.net>
Message-ID: <200511021454.42907.dmitry@athabascau.ca>

On November 2, 2005 01:22 pm, Wilfredo S?nchez Vega wrote:
> > is there anything happening in Twisted community in terms of
> > supporting WebDAV protocol? I found only one relevant project -
> > akadav but it looks like it was abandoned for about 5 month now.
>
>    Yeah, see: http://www.wsanchez.net/blog/archives/000116.html
>
>    I might be able to get started with getting some of this into
> the twisted repository this weekend, with some help from dreid, but
> in the meantime, you can use the external module in my red-bean
> repository.

Thanks, I was probing ground because it started to look like akadav is 
not alive anymore and most probably we'll need to replace our WebDAV 
server built on akadav platform with something that is more actively 
maintained. So for now I don't have much time to spend implementing 
new server but knowing in which direction I should start looking 
right now is a good thing IMO :).

-- 
Dmitry Makovey
Web Systems Administrator
Athabasca University
(780) 675-6245
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20051102/f9718e28/attachment.pgp 

From foom at fuhm.net  Wed Nov  2 17:56:32 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 2 Nov 2005 17:56:32 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15000 - Potential fix for
	issue1123.
In-Reply-To: <E1EXPZ1-0004Mp-00@wolfwood>
References: <E1EXPZ1-0004Mp-00@wolfwood>
Message-ID: <86B0676E-4AF6-42BD-8E15-C3925104F8F5@fuhm.net>

On Nov 2, 2005, at 3:50 PM, Justin Johnson wrote:
>  _cmdLineQuoteRe = re.compile(r'(\\*)"')
>  def _cmdLineQuote(s):
> -    return '"' + _cmdLineQuoteRe.sub(r'\1\1\\"', s) + '"'
> +    quote = ((" " in s) or ("\t" in s)) and '"' or ''
> +    return quote + _cmdLineQuoteRe.sub(r'\1\1\\"', s) + quote


That should be checking for a doublequote in addition to space and tab.

Also I just noticed another bug:
With input string (two characters):
"\
the output should be (6 chars):
"\"\\"
but is currently completely incorrect:
"\"\"

I think that second can be fixed with:
_cmdLineQuoteRe = re.compile(r'(\\*)"')
_cmdLineQuoteRe2 = re.compile(r'(\\+)\Z')
def _cmdLineQuote(s):
     return '"' + _cmdLineQuoteRe2.sub(r"\1\1", _cmdLineQuoteRe.sub 
(r'\1\1\\"', s)) + '"'

James



From eddyxu at 126.com  Wed Nov  2 20:03:48 2005
From: eddyxu at 126.com (Eddy Xu)
Date: Thu, 03 Nov 2005 09:03:48 +0800
Subject: [Twisted-Python] How could I add reliability to a udp client
In-Reply-To: <1130953665.8992.4.camel@localhost.localdomain>
References: <4368654F.2070905@126.com>
	<1130953665.8992.4.camel@localhost.localdomain>
Message-ID: <436961F4.9010708@126.com>

The client just send short command messages. Do it need to connect with
the server? perhaps the UDP way is lighter?

Itamar Shtull-Trauring ??:
> On Wed, 2005-11-02 at 15:05 +0800, Eddy Xu wrote:
>   
>> This is my situation: I have a client to send UDP messages to multi
>> servers, and I have to ensure all the messages be recieved by special
>> server. If the client didn't get the response , it should re-send the
>> message for times. I think i need maintain a FIFO queue for all
>> messages, but i have no idea how to deal with the different status of
>> message, such as send but not recieved message, don't be send, and have
>> resent for times. Can you help me?
>>     
>
> Any reason not to use TCP?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>   





From exarkun at divmod.com  Wed Nov  2 23:16:41 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 2 Nov 2005 23:16:41 -0500
Subject: [Twisted-Python] How could I add reliability to a udp client
In-Reply-To: <436961F4.9010708@126.com>
Message-ID: <20051103041641.10365.575844643.divmod.quotient.3596@ohm>

On Thu, 03 Nov 2005 09:03:48 +0800, Eddy Xu <eddyxu at 126.com> wrote:
>The client just send short command messages. Do it need to connect with
>the server? perhaps the UDP way is lighter?

In other words, no? :)  UDP is hard.  *Sometimes* it is a valuable optimization.  Treat it as such: do not use it unless it is easier than another solution, and do not consider switching to it until you have demonstrated a bottleneck which it may eliminate or alleviate.

Jean-Paul



From eddyxu at 126.com  Thu Nov  3 00:26:19 2005
From: eddyxu at 126.com (Eddy Xu)
Date: Thu, 03 Nov 2005 13:26:19 +0800
Subject: [Twisted-Python] How could I add reliability to a udp client
In-Reply-To: <20051103041641.10365.575844643.divmod.quotient.3596@ohm>
References: <20051103041641.10365.575844643.divmod.quotient.3596@ohm>
Message-ID: <43699F7B.8010507@126.com>

 :-) Thank you. But i have to implement a heart beat to make sure that
all servers are "alive". Is it possible to use TCP in an easy way? Let
me tell you more about my client app? :-) The client maintains a command
queue that should be sent to different servers, and it also should know
the status of the servers. So i choose to use UDP for commands sending
and heart beating. Would you like to give me some advises to improve the
model? Thx again.

Jean-Paul Calderone ??:
> On Thu, 03 Nov 2005 09:03:48 +0800, Eddy Xu <eddyxu at 126.com> wrote:
>> The client just send short command messages. Do it need to connect with
>> the server? perhaps the UDP way is lighter?
>
> In other words, no? :) UDP is hard. *Sometimes* it is a valuable
> optimization. Treat it as such: do not use it unless it is easier than
> another solution, and do not consider switching to it until you have
> demonstrated a bottleneck which it may eliminate or alleviate.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>





From jml at mumak.net  Thu Nov  3 00:46:15 2005
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 3 Nov 2005 16:46:15 +1100
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
In-Reply-To: <20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
References: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>
	<20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
Message-ID: <d06a5cd30511022146q3711b42fy@mail.gmail.com>

On 02/11/05, glyph at divmod.com <glyph at divmod.com> wrote:
>
>
> On Tue, 1 Nov 2005 12:38:21 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> >On Tue, 01 Nov 2005 10:47:09 -0500, Itamar Shtull-Trauring
> ><itamar at itamarst.org> wrote:
> >>Hi,
> >>
> >>Still haven't gotten an answer to this; why is the motivation for
> >>deprecating a perfectly reasonable feature?
> >
> >FWIW, I also would like to know the answer to this question.
>
> Yeah, uh...
>
> As I understand it the implementation was previously horrendously broken.  Now it is not.  Given that it is now no longer broken, and some quite reasonable tests I've seen make use of it (in particular: tests for Divmod ClickChronicle do some very expensive setup in a setUpClass), I'd like to see it stick around.
>

Thanks everyone for your patience while I make the time to answer this question.

I'd like to deprecate setUpClass, but I'm not totally sold on it.  The
biggest problem I have with it is that it encourages (nay, forces)
users to share state between tests.  This may be a problem inherent
with any setup optimisation -- but I'd like to experiment first.

My other problems are to do with implementation -- and these are the
problems I feel most keenly.  Trial only knows about classes in the
test loader.  After that, it only knows about things to call run() on.
 Sometimes these are collections of tests (suites), sometimes these
are actual tests.  setUpClass mandates a ClassSuite -- a suite that
runs setUpClass at the start and tearDownClass at the end.

One big implication is that a TestCase isn't (necessarily) a
self-contained TestCase.  It has to be wrapped in a ClassSuite to make
sure that it gets properly set up and torn down.  Running a single
test shouldn't require a suite.

ClassSuite also means that the test loader needs to have two suite
factories.  This makes it more difficult to extend (which you'd want
to do for alternative runners (ala GUIs) and also if you have a cool
way to optimise your tests locally -- see below).

In addition, ClassSuite makes "what happens when tests are run" a fair
bit more complicated.  This is particularly confusing wrt
KeyboardInterrupt and reactor cleanup.

Oh yeah, and it makes things incompatible with unittest.


The example below shows what I'm considering at the moment.  This is
the testresources system by Robert Collins.  One of the reasons I
hesitated on this post is that I wanted to have chewed over this more.
But here 'tis.


Instead of:

class FooTest(unittest.TestCase):
    def setUpClass(self):
        self.db = ExpensiveAcquisition()

    def tearDownClass(self):
        self.db.expensiveDismissal()

    def test_foo(self):
        self.failUnless(self.db.isAwesome())

we have:

class DBResource(resources.Resource):
    def makeResource(self):
        cls.db = ExpensiveAcquisition()
        return cls.db
    makeResource = classmethod(makeResource)

    def cleanResource(self):
        cls.db.expensiveDismissal()
    cleanResource = classmethod(cleanResource)


class FooTest(unittest.ResourcedTestCase):
    resources = [ ('db', DBResource) ]

    def test_foo(self):
         self.failUnless(self.db.isAwesome())


One of the advantages of this is that it can be made faster than
setUpClass / tearDownClass because the OptimizingTestSuite can look at
all the tests and resources underneath is to establish the best order
to run the tests, and it can preserve resources between TestCase
classes.

cheers,
jml

PS. Jp, I hope your day continues as wonderfully as you thought it
would start. :)



From glyph at divmod.com  Thu Nov  3 00:48:16 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 3 Nov 2005 00:48:16 -0500
Subject: [Twisted-Python] How could I add reliability to a udp client
In-Reply-To: <436961F4.9010708@126.com>
Message-ID: <20051103054816.10365.653314065.divmod.quotient.3618@ohm>



On Thu, 03 Nov 2005 09:03:48 +0800, Eddy Xu <eddyxu at 126.com> wrote:
>The client just send short command messages. Do it need to connect with
>the server? perhaps the UDP way is lighter?

Reliability is not a quick feature, in no way would a reliable UDP layer be "lighter" than TCP.  Putting reliability on top of UDP should be avoided unless you really, really need it for some reason.



From twisted at ralphm.ik.nu  Thu Nov  3 04:14:37 2005
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Thu, 3 Nov 2005 10:14:37 +0100
Subject: [Twisted-Python] Generally useful RFC2617
In-Reply-To: <1130867874.8330.12.camel@audrey.local>
References: <1130867874.8330.12.camel@audrey.local>
Message-ID: <20051103091437.GA46105@ik.nu>

On Tue, Nov 01, 2005 at 09:57:53AM -0800, David Reid wrote:
> Currently in Twisted/sandbox/dreid/rfc2617.py (with unittests at
> test_rfc2617.py) there is an implementation of RFC 2617 HTTP
> Authentication: Basic and Digest based authentication. [..]
>
> 1) Where to put it?
> 
> In theory it should be in twisted core.  I just don't know where, and
> didn't want to check it in there somewhere only to have developers with
> more pull than I have to disagree, itamar suggested t.py.digest, dash
> seemed to agree, other suggestions were t.cred.digest, but I just don't
> know.

This appears to be implementing the server side. Correct?

I've been working on implementing SASL for Jabber and started with the
client side of SASL, with server side to follow later. I think we have
similar concerns and might join efforts.

SASL authentication is really a collection of different authentication
methods in a common framework.  Protocols like Jabber and IMAP define
their own profiles for encoding and communicating the different steps.
So I split my code in two parts:

 - for each mechanism a profile-agnostic implementation
 - a Jabber specific wrapper that decodes and encodes using Base64 and
   does the protocol side.

The first should be usable for IMAP and other SASL using protocols as
well, so we need to have a common location for this.

To get back to your stuff, the SASL Digest-MD5 mechanism, as described
in RFC 2831 is intended to be upward compatible with the md5-sess
algorithm of HTTP/1.1 Digest Access Authentication, so there is overlap
there.

As far as I know Twisted Cred now only concerns itself with the server
side of matching credentials to 'accounts', not with the interaction
between entities, like SASL, so we need to find our stuff a nice home.

-- 
Groetjes,

ralphm



From justinjohnson at gmail.com  Thu Nov  3 09:35:00 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 3 Nov 2005 08:35:00 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] r15000 - Potential fix for
	issue1123.
In-Reply-To: <86B0676E-4AF6-42BD-8E15-C3925104F8F5@fuhm.net>
References: <E1EXPZ1-0004Mp-00@wolfwood>
	<86B0676E-4AF6-42BD-8E15-C3925104F8F5@fuhm.net>
Message-ID: <94a776e70511030635l7a51e69bi5c2f4681f9c3652f@mail.gmail.com>

Thanks. I updated the fix and the tests.

On 11/2/05, James Y Knight <foom at fuhm.net> wrote:
>
> On Nov 2, 2005, at 3:50 PM, Justin Johnson wrote:
> > _cmdLineQuoteRe = re.compile(r'(\\*)"')
> > def _cmdLineQuote(s):
> > - return '"' + _cmdLineQuoteRe.sub(r'\1\1\\"', s) + '"'
> > + quote = ((" " in s) or ("\t" in s)) and '"' or ''
> > + return quote + _cmdLineQuoteRe.sub(r'\1\1\\"', s) + quote
>
>
> That should be checking for a doublequote in addition to space and tab.
>
> Also I just noticed another bug:
> With input string (two characters):
> "\
> the output should be (6 chars):
> "\"\\"
> but is currently completely incorrect:
> "\"\"
>
> I think that second can be fixed with:
> _cmdLineQuoteRe = re.compile(r'(\\*)"')
> _cmdLineQuoteRe2 = re.compile(r'(\\+)\Z')
> def _cmdLineQuote(s):
> return '"' + _cmdLineQuoteRe2.sub(r"\1\1", _cmdLineQuoteRe.sub
> (r'\1\1\\"', s)) + '"'
>
> James
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051103/e368c1ad/attachment.htm 

From michaelschneider at fuse.net  Thu Nov  3 10:41:29 2005
From: michaelschneider at fuse.net (Michael Schneider)
Date: Thu, 03 Nov 2005 10:41:29 -0500
Subject: [Twisted-Python] Win32 release of 2.1 status
Message-ID: <436A2FA9.8030305@fuse.net>

Quick Question,

Any word on status of a  2.1 release for windows?

Thanks for the great project,
Mike

-- 
The greatest performance improvement occurs on the transition of from the non-working state to the working state.




From radeex at gmail.com  Thu Nov  3 19:08:48 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 4 Nov 2005 11:08:48 +1100
Subject: [Twisted-Python] pyramid -> Ubuntu
In-Reply-To: <20051028124336.GC12326@sourdust.home.puzzling.org>
References: <60ed19d40510280421j12c986c0na28858f357de8d@mail.gmail.com>
	<20051028124336.GC12326@sourdust.home.puzzling.org>
Message-ID: <60ed19d40511031608x67706715xe41bb73cedb147d4@mail.gmail.com>

Well, I'm going to give this a burl Saturday morning (Friday night for
USers) unless someone speaks up.

I should point out that we should be getting rid of the sid-chroot,
which I think is running some important services on pyramid: my
personal web site (;-), a buildslave, and maybe some other stuff. If
you have anything running in the sid-chroot, please either be around
on Friday night or just remember to reconfigure it to run normally
later (it's certain that any of the packages that were being used in
that ancient install of Debian unstable in our sid-chroot will be
available in the latest ubuntu, unless they're so ancient that they've
been deprecated ;-)

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From twisted at kampinada.de  Fri Nov  4 05:34:54 2005
From: twisted at kampinada.de (Kai Schulte)
Date: Fri, 4 Nov 2005 11:34:54 +0100
Subject: [Twisted-Python] IRC: getting auth of a user
Message-ID: <200511041134.54838.twisted@kampinada.de>

Hello!
Sorry if this is the wrong list, or has already been answered.

I`m writing a little bot and I need to get the irc-auth of someone who is 
sending a privmsg to the bot.

Probably it is easy but I can`t figure it out.
So any help would be appreciated.

Thanks Kai



From mailinglists at smartology.nl  Fri Nov  4 05:49:01 2005
From: mailinglists at smartology.nl (Remi Cool)
Date: Fri, 04 Nov 2005 11:49:01 +0100
Subject: [Twisted-Python] Weird problem with XMLRPC -> ('405',
	'Method Not Allowed')
Message-ID: <436B3C9D.2010502@smartology.nl>

Hello,

I've run into a problem with my twisted xmlrpc test server (using
twisted version 2.01 or 2.1).

Every time the client calls the echo function a '405 Method Not Allowed
is returned'.

One other thing is that pressing CTRL-C when the server is running,
results in the RuntimeError: can't stop reactor that isn't running.

Any ideas?

Here's the server code:

#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-

""""""
import sys

from twisted.application import internet, service
from twisted.internet import reactor, protocol, defer
from twisted.web import resource, server, static, xmlrpc
from twisted.python import components, rebuild
from zope.interface import Interface, implements


class myXMLRPC(xmlrpc.XMLRPC):
    """This class contains all root xmlrpc methods and the modules
subhandler."""
    def __init__(self, service):
        xmlrpc.XMLRPC.__init__(self)
        self.service = service
       
    def xmlrpc_rebuild(self, modname):
        """Rebuild the given module"""
        self.service.rebuild(modname)
        return true
   
    def xmlrpc_echo(self, x):
        """Simple echo function"""
        return x
       
   
def catchError(err):
    return "Internal error in server"
   
   
class IowwService(components.Interface):
    """"""
    def rebuild(self, modname):
        """Rebuild classes in given module"""
       

class httpResource(resource.Resource):

    implements(resource.IResource)
   
    def __init__(self, service):
        resource.Resource.__init__(self)
        self.service = service
        self.putChild('RPC2', myXMLRPC(self.service))      

    def render(self, request):
        self._clientIP = request.getClientIP()
##         user = request.getUser()
##         pwd = request.getPassword()
##         if (user and password):
        return resource.Resource.render(self, request)
##         else:
##             request.setResponseCode(401)
##             return '<html><body><h3>Must be
authenticated</h3></body></html>'

    def render_GET(self, request):
        """Process HTTP GET Requests."""
        return '<html><body><h3>Not Implemented</h3></body></html>'
       
    def getChild(self, path, request):
        """This method handles http calls"""
        return httpResource(self.service)

components.registerAdapter(httpResource, IowwService, resource.IResource)


class owwService(service.Service):
    """"""
    implements(IowwService)
   
    def rebuild(self, modname):
        """Rebuild classes in given module"""
        mod = sys.modules[modname]
        rebuild.rebuild(mod)

       
def main():
    """"""
    application = service.Application('OWW', uid=100, gid=100)
    s = owwService()
    serviceCollection = service.IServiceCollection(application)
    internet.TCPServer(7080,
server.Site(resource.IResource(s))).setServiceParent(serviceCollection)
    serviceCollection.startService()
   
    try:
        try:
            print 'Running... '
            reactor.run()
        except KeyboardInterrupt:
            print 'CTRL-C received, shutting down server.'
        except Exception, e:
            print 'Problem with running server.'
    finally:
        reactor.stop()
        serviceCollection.stopService()

if __name__ == '__main__':
    main()

And the client code:

#!/usr/bin/env python

from twisted.web.xmlrpc import Proxy
from twisted.internet import reactor

def printValue(value):
    print repr(value)
    reactor.stop()

def printError(error):
    print 'error', error
    reactor.stop()

proxy = Proxy('http://localhost:7080')
proxy.callRemote('echo', 'hello world').addCallbacks(printValue, printError)
reactor.run()



From mwh at python.net  Fri Nov  4 07:11:13 2005
From: mwh at python.net (Michael Hudson)
Date: Fri, 04 Nov 2005 12:11:13 +0000
Subject: [Twisted-Python] Re: IRC: getting auth of a user
References: <200511041134.54838.twisted@kampinada.de>
Message-ID: <2mzmok1ula.fsf@starship.python.net>

Kai Schulte <twisted at kampinada.de> writes:

> Hello!
> Sorry if this is the wrong list, or has already been answered.

Asking in #twisted on freenode might be quicker...

> I`m writing a little bot and I need to get the irc-auth of someone who is 
> sending a privmsg to the bot.

It's unclear to me what this means.  irc-auth meaning "is the user
authenticated with NickServ?"?

> Probably it is easy but I can`t figure it out.
> So any help would be appreciated.

It might not be totally straightfoward :/

Cheers,
mwh

-- 
  It's actually a corruption of "starling".  They used to be carried.
  Since they weighed a full pound (hence the name), they had to be
  carried by two starlings in tandem, with a line between them.
                 -- Alan J Rosenthal explains "Pounds Sterling" on asr




From twisted at kampinada.de  Fri Nov  4 07:44:43 2005
From: twisted at kampinada.de (Kai Schulte)
Date: Fri, 4 Nov 2005 13:44:43 +0100
Subject: [Twisted-Python] Re: IRC: getting auth of a user
In-Reply-To: <2mzmok1ula.fsf@starship.python.net>
References: <200511041134.54838.twisted@kampinada.de>
	<2mzmok1ula.fsf@starship.python.net>
Message-ID: <200511041344.44056.twisted@kampinada.de>

Am Freitag, 4. November 2005 13:11 schrieb Michael Hudson:
> Kai Schulte <twisted at kampinada.de> writes:
> > Hello!
> > Sorry if this is the wrong list, or has already been answered.
>
> Asking in #twisted on freenode might be quicker...
>
Yeah;)
But as I have still work to and this is only for fun, I thought I could wait 
und do some "real" work. ;) 

> > I`m writing a little bot and I need to get the irc-auth of someone who is
> > sending a privmsg to the bot.
>
> It's unclear to me what this means.  irc-auth meaning "is the user
> authenticated with NickServ?"?
Sorry my fault, I should have explained it better.
On quakenet (the only net, the bot is for) auth means
---
AUTH
Identifies you as a particular user on the bot.
This will identify you on the bot as until you quit from IRC.

Usage: /MSG Q at CServe.quakenet.org AUTH <username> <password>
eg. /MSG Q at CServe.quakenet.org AUTH John 4321Jo
---
So, if someone does a /whois <username> he should get something like:
---
* [chemosh] (~chemosh at desci.users.quakenet.org): Kai
* [chemosh] @#chemtest @#tc_rul0rn_mit_pudi_und_miko @#real1ife 
+#oneofall-intern +#oneofall +#milchies #row.de @#r1.gn 
* [chemosh] sw2.de.quakenet.org :SplatterWorld QuakeNet server
* [chemosh] is authed as desci
* [chemosh] ~chemosh at p54819A4E.dip0.t-ipconnect.de 84.129.154.78 :Actual 
user at host, Actual IP
* [chemosh] unt?tig 01:26:53, Online seit: Fri Nov  4 08:51:00
* [chemosh] Ende der WHOIS-Liste.
---
where this: "* [chemosh] is authed as desci" is the important part.
For the bot It would mean the auth is desci, and desci is the string I would 
like to get. 

I hope that explains it a little bit better

>
> > Probably it is easy but I can`t figure it out.
> > So any help would be appreciated.
>
> It might not be totally straightfoward :/


>
> Cheers,
> mwh

Thanks Kai



From mwh at python.net  Fri Nov  4 08:16:24 2005
From: mwh at python.net (Michael Hudson)
Date: Fri, 04 Nov 2005 13:16:24 +0000
Subject: [Twisted-Python] Re: IRC: getting auth of a user
References: <200511041134.54838.twisted@kampinada.de>
	<2mzmok1ula.fsf@starship.python.net>
	<200511041344.44056.twisted@kampinada.de>
Message-ID: <2mvez81rkn.fsf@starship.python.net>

Kai Schulte <twisted at kampinada.de> writes:

>> It's unclear to me what this means.  irc-auth meaning "is the user
>> authenticated with NickServ?"?
> Sorry my fault, I should have explained it better.
> On quakenet (the only net, the bot is for) auth means

Oh!  I already have code to do that :)

http://codespeak.net/svn/user/mwh/recordbot/recordbot.py

Look at the authName() method.  This uses the whois() method from
irc2.py in exarkun's sandbox (which is also alongside recordbot.py).
It seems to work :)

Cheers,
mwh

-- 
39. Re graphics:  A picture is worth 10K words - but only those
    to describe the picture.  Hardly any sets of 10K words can be
    adequately described with pictures.
  -- Alan Perlis, http://www.cs.yale.edu/homes/perlis-alan/quotes.html




From dhess at verscend.com  Fri Nov  4 10:26:08 2005
From: dhess at verscend.com (David K. Hess)
Date: Fri, 4 Nov 2005 09:26:08 -0600
Subject: [Twisted-Python] Unjelly - recursion limit reached
Message-ID: <F0622444-7932-4BBF-B20F-7D9AE3BF3729@verscend.com>


I've got a PB server that on client connect returns a Cacheable  
object that is at the top of a hierarchy of Cacheables that can grow  
pretty large. I am sometimes seeing an unjelly exception in the  
client on connect due to recursion limit being reached.

I have a theory as to what is going wrong but I wanted to query the  
list about an assumption that I've glossed over at this point. When a  
view_ method is called in a cacheable and the return value is a graph  
of interconnected cacheables, is the return value completely  
serialized at that point? Or is the serialization based on streaming  
data to the client? In other words if the data stream to the client  
stalls then the serialization stalls too?

I'm concerned that my hierarchy of cacheables received by the client  
is inconsistent because it is being modified by another client view_  
call into the server before the previous hierarchy has been fully  
serialized to the first client.

Thanks for any insight into this.

Dave



From sonium at gmail.com  Fri Nov  4 11:17:08 2005
From: sonium at gmail.com (sonium)
Date: Fri, 04 Nov 2005 17:17:08 +0100
Subject: [Twisted-Python] how to unitest this?
Message-ID: <436B8984.4000008@gmail.com>

hi, I just read the introduction about unittesting on diveintopython and 
now asked myself how I could write a unittest for the connectionmade 
function in the code below taken from the tutorial:

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor

class QOTD(Protocol):

    def connectionMade(self):
        self.transport.write("An apple a day keeps the doctor away\r\n")
        self.transport.loseConnection()


# Next lines are magic:
factory = Factory()
factory.protocol = QOTD

# 8007 is the port you want to run under.
reactor.listenTCP(8007, factory)
reactor.run()


I know there is twisted.trail, but I haven't found any useful 
information about it yet.
Or is mockobjects the thing I am looking for?



From itamar at itamarst.org  Fri Nov  4 11:36:02 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 04 Nov 2005 11:36:02 -0500
Subject: [Twisted-Python] Weird problem with XMLRPC -> ('405', 'Method
	Not Allowed')
In-Reply-To: <436B3C9D.2010502@smartology.nl>
References: <436B3C9D.2010502@smartology.nl>
Message-ID: <1131122162.9182.8.camel@localhost.localdomain>

On Fri, 2005-11-04 at 11:49 +0100, Remi Cool wrote:

> One other thing is that pressing CTRL-C when the server is running,
> results in the RuntimeError: can't stop reactor that isn't running.

Twisted handles Ctrl-C for you, you don't need to catch
KeyboardInterrupt or exceptions. Just get rid of all the try/except
around reactor.run(), and don't call reactor.stop() after reactor.run()
has returned, which is what you're doing that causes the RuntimeError.




From twisted at kampinada.de  Fri Nov  4 11:55:12 2005
From: twisted at kampinada.de (Kai Schulte)
Date: Fri, 4 Nov 2005 17:55:12 +0100
Subject: [Twisted-Python] Re: IRC: getting auth of a user
In-Reply-To: <2mvez81rkn.fsf@starship.python.net>
References: <200511041134.54838.twisted@kampinada.de>
	<200511041344.44056.twisted@kampinada.de>
	<2mvez81rkn.fsf@starship.python.net>
Message-ID: <200511041755.12382.twisted@kampinada.de>

Thanks, I hope I can get a closer look tonight and adapt it somehow. ;)

But after a short overview I fear I have to rewrite my bot completely.
Since the bot is very simple, I didn`t even used any defers, etc.

Thanks
Kai

Am Freitag, 4. November 2005 14:16 schrieb Michael Hudson:
> Kai Schulte <twisted at kampinada.de> writes:
> >> It's unclear to me what this means.  irc-auth meaning "is the user
> >> authenticated with NickServ?"?
> >
> > Sorry my fault, I should have explained it better.
> > On quakenet (the only net, the bot is for) auth means
>
> Oh!  I already have code to do that :)
>
> http://codespeak.net/svn/user/mwh/recordbot/recordbot.py
>
> Look at the authName() method.  This uses the whois() method from
> irc2.py in exarkun's sandbox (which is also alongside recordbot.py).
> It seems to work :)
>
> Cheers,
> mwh



From itamar at itamarst.org  Fri Nov  4 14:02:43 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 04 Nov 2005 14:02:43 -0500
Subject: [Twisted-Python] Remove setupClass branch of trial - what is
	the motivation?
In-Reply-To: <d06a5cd30511022146q3711b42fy@mail.gmail.com>
References: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>
	<20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
	<d06a5cd30511022146q3711b42fy@mail.gmail.com>
Message-ID: <1131130964.9182.25.camel@localhost.localdomain>

On Thu, 2005-11-03 at 16:46 +1100, Jonathan Lange wrote:

> One big implication is that a TestCase isn't (necessarily) a
> self-contained TestCase.  It has to be wrapped in a ClassSuite to make
> sure that it gets properly set up and torn down.  Running a single
> test shouldn't require a suite.

I don't see why you need a ClassSuite; couldn't a TestCase have optional
pre- and post- hooks called along with the test?

> Oh yeah, and it makes things incompatible with unittest.

A correctly running trial (not what we have now, cause of all the tests
that do wait() and reactor.iterate()) would call reactor.run() once, and
tests would only support returning Deferreds as a mean for making the
reactor continue. Could we preserve unittest compatability while still
working this way? If not, there's no point in bothering. E.g. it seems
unlikely that a random unittest.py runner program will be able to run
trial tests once we switch to the correct reactor-running strategy.


> The example below shows what I'm considering at the moment.  This is
> the testresources system by Robert Collins.  One of the reasons I
> hesitated on this post is that I wanted to have chewed over this more.
> But here 'tis.

Any reason we need a whole complex new system when the current one
works?




From jkrushen at gmail.com  Fri Nov  4 18:46:13 2005
From: jkrushen at gmail.com (Jordan Krushen)
Date: Fri, 4 Nov 2005 15:46:13 -0800
Subject: [Twisted-Python] pb.Cacheable vs. offline queuing
Message-ID: <b811ba730511041546o3c785a17x2067b8303e6b1222@mail.gmail.com>

I'm designing a job-tracking/workflow system for a client, with a
primary requirement being the use of a hosted server for
web/RPC/REST/sftp presence (among other things, thanks to Twisted),
and another local server internal to their office, both kept up to
date with each other (each holding a local DB;  I'm undecided on
exactly which one).  Users would use the web UI through the hosted
server, office staff would use a Cocoa client speaking PB to the
office server.  Ignore the workstation-server PB connections for now,
I'm just concerned with the server-server connections.

I've been looking at Cacheable, as the live updates between servers
would be useful, but I have a few questions:

How does it avoid collisions, if an attribute is changed on both ends
at once?  Is any kind of 2PC involved, or similar?  I read that some
part of reading/observing is atomic, but is modifying atomic as well?

If it does deal with simultaneous updates in a robust way, I'm still
dealing with another requirement:  the two servers (public and office)
must both keep serving users, even if the connection between them is
severed.  Changes must accumulate on both ends, and any collisions
would be dealt with manually by the office staff once the connection
came back up.  Total amount of collisions is expected to be somewhat
low due to the nature of their business and its clients.

Would it be possible to use Cacheables, but have them queue their
communications if the remote side goes away?  Should I just
reimplement this as a layer on top to use Cacheables if it's online,
and something custom to do reconciliation when the connection comes
back up, then switch back to Cacheables, or would customizing
Cacheable be the better road to take?

What other ways of syncing systems (with offline queuing) have you guys used?

J.



From jml at mumak.net  Fri Nov  4 20:34:48 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 5 Nov 2005 12:34:48 +1100
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
In-Reply-To: <1131130964.9182.25.camel@localhost.localdomain>
References: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>
	<20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
	<d06a5cd30511022146q3711b42fy@mail.gmail.com>
	<1131130964.9182.25.camel@localhost.localdomain>
Message-ID: <d06a5cd30511041734g418cc07cl@mail.gmail.com>

On 05/11/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Thu, 2005-11-03 at 16:46 +1100, Jonathan Lange wrote:
>
> > One big implication is that a TestCase isn't (necessarily) a
> > self-contained TestCase.  It has to be wrapped in a ClassSuite to make
> > sure that it gets properly set up and torn down.  Running a single
> > test shouldn't require a suite.
>
> I don't see why you need a ClassSuite; couldn't a TestCase have optional
> pre- and post- hooks called along with the test?
>

A TestCase instance already has optional pre and post hooks.  They are
called setUp and tearDown. A ClassSuite is the suite of all the test
cases defined inside a TestCase subclass.



From radeex at gmail.com  Sat Nov  5 01:00:14 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 5 Nov 2005 17:00:14 +1100
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <d06a5cd30510102131t58144c60g@mail.gmail.com>
References: <d06a5cd30510102131t58144c60g@mail.gmail.com>
Message-ID: <60ed19d40511042200x5d1e33b9l5e67dea5bd2983a9@mail.gmail.com>

On 10/11/05, Jonathan Lange <jml at mumak.net> wrote:
> Should we drop Python 2.2 support in Subversion head for Twisted 2.2?

I consider this issue resolved, given the lack of response for people
wanting 2.2 support. The buildslave for 2.2 should be taken down and
Twisted trunk should be considered fair for 2.3-only features.

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From radeex at gmail.com  Sat Nov  5 06:02:37 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 5 Nov 2005 22:02:37 +1100
Subject: [Twisted-Python] testing mailing lists after mailman upgrade
Message-ID: <60ed19d40511050302v10c8acb9i9328f89f189517da@mail.gmail.com>

You can ignore this message, I'm just testing that our upgrade went alright.


--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From exarkun at divmod.com  Sat Nov  5 14:05:54 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 5 Nov 2005 14:05:54 -0500
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <60ed19d40511042200x5d1e33b9l5e67dea5bd2983a9@mail.gmail.com>
Message-ID: <20051105190554.10365.156477206.divmod.quotient.4490@ohm>

On Sat, 5 Nov 2005 17:00:14 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
>On 10/11/05, Jonathan Lange <jml at mumak.net> wrote:
>> Should we drop Python 2.2 support in Subversion head for Twisted 2.2?
>
>I consider this issue resolved, given the lack of response for people
>wanting 2.2 support. The buildslave for 2.2 should be taken down and
>Twisted trunk should be considered fair for 2.3-only features.

Lack of interest in a change doesn't dictate that the change be made.  I didn't hear anyone come out against the change _or_ for it.

If it will help, I'll throw in against dropping 2.2 support.  Neither 2.3 nor 2.4 introduce any compelling new features.

Jean-Paul



From lists-twistedmatrix at silverwraith.com  Sat Nov  5 15:00:32 2005
From: lists-twistedmatrix at silverwraith.com (Avleen Vig)
Date: Sat, 5 Nov 2005 12:00:32 -0800
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <20051105190554.10365.156477206.divmod.quotient.4490@ohm>
References: <60ed19d40511042200x5d1e33b9l5e67dea5bd2983a9@mail.gmail.com>
	<20051105190554.10365.156477206.divmod.quotient.4490@ohm>
Message-ID: <20051105200031.GR43209@silverwraith.com>

On Sat, Nov 05, 2005 at 02:05:54PM -0500, Jean-Paul Calderone wrote:
> >I consider this issue resolved, given the lack of response for people
> >wanting 2.2 support. The buildslave for 2.2 should be taken down and
> >Twisted trunk should be considered fair for 2.3-only features.
> 
> Lack of interest in a change doesn't dictate that the change be made.  
> I didn't hear anyone come out against the change _or_ for it.
> If it will help, I'll throw in against dropping 2.2 support.  Neither 
> 2.3 nor 2.4 introduce any compelling new features.

The obvious question is what will we lose if we drop 2.2 support and
what will we gain?
My understanding is that datetime for python < 2.3 isn't perfect, and I
use datetime extensively.
2.3 lets you specify the a stride when you slice, universal readlines
mode when opening files is nice, you can pop() dicts.. in fact just read
this:

http://www.aleax.it/Python/pythonian.html

I thinkit would be nice to start using some of the features 2.3 and
newer support.



From exarkun at divmod.com  Sat Nov  5 15:26:26 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 5 Nov 2005 15:26:26 -0500
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <20051105200031.GR43209@silverwraith.com>
Message-ID: <20051105202626.10365.1772122965.divmod.quotient.4491@ohm>

On Sat, 5 Nov 2005 12:00:32 -0800, Avleen Vig <lists-twistedmatrix at silverwraith.com> wrote:
>On Sat, Nov 05, 2005 at 02:05:54PM -0500, Jean-Paul Calderone wrote:
>> >I consider this issue resolved, given the lack of response for people
>> >wanting 2.2 support. The buildslave for 2.2 should be taken down and
>> >Twisted trunk should be considered fair for 2.3-only features.
>>
>> Lack of interest in a change doesn't dictate that the change be made.
>> I didn't hear anyone come out against the change _or_ for it.
>> If it will help, I'll throw in against dropping 2.2 support.  Neither
>> 2.3 nor 2.4 introduce any compelling new features.
>
>The obvious question is what will we lose if we drop 2.2 support and
>what will we gain?
>My understanding is that datetime for python < 2.3 isn't perfect, and I
>use datetime extensively.
>2.3 lets you specify the a stride when you slice, universal readlines
>mode when opening files is nice, you can pop() dicts.. in fact just read
>this:
>
>http://www.aleax.it/Python/pythonian.html
>
>I thinkit would be nice to start using some of the features 2.3 and
>newer support.

Can you suggest some specific areas of Twisted these features would allow us to improve upon?

Jean-Paul



From strawman at astraw.com  Sat Nov  5 17:21:25 2005
From: strawman at astraw.com (Andrew Straw)
Date: Sat, 05 Nov 2005 14:21:25 -0800
Subject: [Twisted-Python] does twisted.* support mobile code?
Message-ID: <436D3065.1020506@astraw.com>

Hi,

Does any part of twisted support mobile Python code? Something like
Pyro's Mobile Code objects?
http://pyro.sourceforge.net/manual/7-features.html#mobile

Cheers!
Andrew



From exarkun at divmod.com  Sat Nov  5 18:18:14 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 5 Nov 2005 18:18:14 -0500
Subject: [Twisted-Python] does twisted.* support mobile code?
In-Reply-To: <436D3065.1020506@astraw.com>
Message-ID: <20051105231814.10365.1072597543.divmod.quotient.4493@ohm>

On Sat, 05 Nov 2005 14:21:25 -0800, Andrew Straw <strawman at astraw.com> wrote:
>Hi,
>
>Does any part of twisted support mobile Python code? Something like
>Pyro's Mobile Code objects?
>http://pyro.sourceforge.net/manual/7-features.html#mobile

I wrote out a big long screed in response to this, but then decided
it was probably overly harsh.

No, Twisted does not support this.  The lack of support is intentional.
There are a huge number of security-related issued with doing what Pyro
does, so Twisted doesn't do it.

In fact, PB goes in the other direction: even if the code defining the
class of an instance passed over PB is available on both sides, it _still_
might not be accepted by the recipient, if it has not been explicitly
marked as safe by the recipient.

Jean-Paul



From radeex at gmail.com  Sat Nov  5 20:14:08 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 6 Nov 2005 12:14:08 +1100
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <20051105190554.10365.156477206.divmod.quotient.4490@ohm>
References: <60ed19d40511042200x5d1e33b9l5e67dea5bd2983a9@mail.gmail.com>
	<20051105190554.10365.156477206.divmod.quotient.4490@ohm>
Message-ID: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>

On 11/6/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sat, 5 Nov 2005 17:00:14 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
> >On 10/11/05, Jonathan Lange <jml at mumak.net> wrote:
> >> Should we drop Python 2.2 support in Subversion head for Twisted 2.2?
> >
> >I consider this issue resolved, given the lack of response for people
> >wanting 2.2 support. The buildslave for 2.2 should be taken down and
> >Twisted trunk should be considered fair for 2.3-only features.
>
> Lack of interest in a change doesn't dictate that the change be made.  I didn't hear anyone come out against the change _or_ for it.
>
> If it will help, I'll throw in against dropping 2.2 support.  Neither 2.3 nor 2.4 introduce any compelling new features.

You are confused. At least two people were *for* dropping 2.2 support
in this thread, and nobody was against it. I'm pretty sure several
others have been for dropping it on IRC, as well.

I have seen people several times commit code that requires 2.3,
realize that the buildbot failed, and replace the code with a more
complicated version (didn't you do this recently yourself, Jp?). I
personally find it harder and harder to test 2.2, as finding an
installation of 2.2 is getting rarer these days. To unshamedly list
features from the "What's new in Python 2.3" article:

- Sets
- Proper booleans (2.2.0 didn't even have the "True" and "False" constants)
- enumerate
- csv
- generators without __future__
- sum
- callable types
- horrible obscure Python2.2-only bugs and semantics changes gone
- str in str
- arguments-to-strip

These are all pretty minor (apart from the "horrible obscure" things),
but the sum() of them adds up to a lot of annoyance in support when no
users have actually thrown in for it.

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From jadestorm at nc.rr.com  Sat Nov  5 21:10:12 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Sat, 5 Nov 2005 21:10:12 -0500
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>
References: <60ed19d40511042200x5d1e33b9l5e67dea5bd2983a9@mail.gmail.com>
	<20051105190554.10365.156477206.divmod.quotient.4490@ohm>
	<60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>
Message-ID: <8203E2B8-0C65-4C2E-B8F4-86AB5EC3F067@nc.rr.com>

On Nov 5, 2005, at 8:14 PM, Christopher Armstrong wrote:
> On 11/6/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Sat, 5 Nov 2005 17:00:14 +1100, Christopher Armstrong  
>> <radeex at gmail.com> wrote:
>>> On 10/11/05, Jonathan Lange <jml at mumak.net> wrote:
>>>> Should we drop Python 2.2 support in Subversion head for Twisted  
>>>> 2.2?
>>>
>>> I consider this issue resolved, given the lack of response for  
>>> people
>>> wanting 2.2 support. The buildslave for 2.2 should be taken down and
>>> Twisted trunk should be considered fair for 2.3-only features.
>>
>> Lack of interest in a change doesn't dictate that the change be  
>> made.  I didn't hear anyone come out against the change _or_ for it.
>>
>> If it will help, I'll throw in against dropping 2.2 support.   
>> Neither 2.3 nor 2.4 introduce any compelling new features.
>
> You are confused. At least two people were *for* dropping 2.2 support
> in this thread, and nobody was against it. I'm pretty sure several
> others have been for dropping it on IRC, as well.
>
> I have seen people several times commit code that requires 2.3,
> realize that the buildbot failed, and replace the code with a more
> complicated version (didn't you do this recently yourself, Jp?). I
> personally find it harder and harder to test 2.2, as finding an
> installation of 2.2 is getting rarer these days. To unshamedly list
> features from the "What's new in Python 2.3" article:

I can say that I do not particularly like having to support 2.2.  =)   
RedHat EL3 (which is still supported by RedHat) still has python 2.2  
though by default.  I don't know what other "still supported"  
distributions might have it.  When I forced "at least 2.3" on my  
PyAIM/PyICQ transport users, I got a fair number of complaints and a  
couple of "well then I can't use your transport".  I'm not entirely  
sure why one can't just install python 2.3 or higher if that's a  
requirement, but hey.  =)  Anyway, I'd almost be happier if Twisted  
didn't support 2.2 anymore simply because I could use that as a  
catalist for dropping support for it on my end as well.  I actually  
have to implement my own bool class to get real booleans in 2.2.. and  
that file is there only for 2.2.  =/  I can't put any real facts  
behind this, but it "seems" like unicode support isn't as good in 2.2  
either.  That might just be my imagination though.  =D

Daniel



From exarkun at divmod.com  Sat Nov  5 21:26:57 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 5 Nov 2005 21:26:57 -0500
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>
Message-ID: <20051106022657.10365.1687580705.divmod.quotient.4496@ohm>

On Sun, 6 Nov 2005 12:14:08 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
>On 11/6/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Sat, 5 Nov 2005 17:00:14 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
>> >On 10/11/05, Jonathan Lange <jml at mumak.net> wrote:
>> >> Should we drop Python 2.2 support in Subversion head for Twisted 2.2?
>> >
>> >I consider this issue resolved, given the lack of response for people
>> >wanting 2.2 support. The buildslave for 2.2 should be taken down and
>> >Twisted trunk should be considered fair for 2.3-only features.
>>
>> Lack of interest in a change doesn't dictate that the change be made.  I didn't hear anyone come out against the change _or_ for it.
>>
>> If it will help, I'll throw in against dropping 2.2 support.  Neither 2.3 nor 2.4 introduce any compelling new features.
>
>You are confused. At least two people were *for* dropping 2.2 support
>in this thread, and nobody was against it. I'm pretty sure several
>others have been for dropping it on IRC, as well.

Confused, perhaps.  Or perhaps their positions were voiced with such limited enthusiasm I just forgot about them :)

>
>I have seen people several times commit code that requires 2.3,
>realize that the buildbot failed, and replace the code with a more
>complicated version (didn't you do this recently yourself, Jp?). I
>personally find it harder and harder to test 2.2, as finding an
>installation of 2.2 is getting rarer these days. To unshamedly list
>features from the "What's new in Python 2.3" article:

Yea, I've probably done this, and I've seen a few other people do it too.  Fortunately, buildbot's new "build a branch" feature should help resolve this problem.  Anyone can try out their code on any of Twisted's supported platforms before merging it into trunk.

>- Sets
>- Proper booleans (2.2.0 didn't even have the "True" and "False" constants)
>- enumerate
>- csv
>- generators without __future__
>- sum
>- callable types
>- horrible obscure Python2.2-only bugs and semantics changes gone
>- str in str
>- arguments-to-strip
>
>These are all pretty minor (apart from the "horrible obscure" things),
>but the sum() of them adds up to a lot of annoyance in support when no
>users have actually thrown in for it.

It's a pretty good list, I must admit.  But I wonder what the specific gains to Twisted will be.  Just having a list of things Python 2.3 can do that Python 2.2 cannot does not seem compelling to me.

Jean-Paul



From warner at lothar.com  Sat Nov  5 21:34:05 2005
From: warner at lothar.com (Brian Warner)
Date: Sat, 05 Nov 2005 18:34:05 -0800 (PST)
Subject: [Twisted-Python] Unjelly - recursion limit reached
Message-ID: <20051105.183405.27234188.warner@lothar.com>

> When a view_ method is called in a cacheable and the return value is a
> graph of interconnected cacheables, is the return value completely
> serialized at that point?

Do you mean that some view_ method is being invoked on a pb.Referenceable (or
pb.ViewPoint, I suppose) ? And that method is returning an instance that
inherits from pb.Cacheable? And this pb.Cacheable instance holds references
to other pb.Cacheables? Which may or may not have been transmitted across
this wire once already?

The general answer is yes, the return value is completely serialized right
then. The serialized form of the return value is transmitted in pieces as
jelly recurses down the retval object graph, each new node visited causes a
little bit more data to be sent. However, it does not stop for anything, and
there is no way for an object being serialized to indicate that it wants to
put off serialization for a while[1]. On the receiving end, the
callRemote()'s Deferred will not be fired until the retval has completely
finished deserialization. Intermediate objects may be constructed while
deserialization is taking place, but that ought to be invisible to the
caller.

I'm not sure what would happen if, say, your getStateToCacheAndObserveFor
method did a callRemote though the same wire. newpb has a queue to handle
this sort of thing (the callRemote doesn't get transmitted until at least
after the current operation has finished), but I don't know what oldpb does.
If it isn't clever enough to be reentrant, the receiving end will get
interleaved object state from the two operations and the results will be very
very messy.

getStateToCacheAndObserveFor and getStateToCopy are called from PB internals,
and as a result it may not be safe to make other PB calls from there. view_*
is called when the wire is in a stable state (i.e. remote methods calls are
top-level objects on the wire), so I think it should be safe to make
arbitrary PB calls from it.

> I'm concerned that my hierarchy of cacheables received by the client  
> is inconsistent because it is being modified by another client view_  
> call into the server before the previous hierarchy has been fully  
> serialized to the first client.

Note that each callRemote is more-or-less atomic, and the creation of a whole
object graph is more-or-less atomic, but it is entirely possible that other
method calls will happen during the middle of a huge slew of RemoteCache
updates. So if object A modifies a dozen Cacheables at once, and object B has
a RemoteCache that is watching them, object C might sneak in a callRemote
while only half of the updates have been processed. The same thing will
happen if your Cacheable update method does multiple callRemotes to do its
job.


hope that helps somehow,
 -Brian



[1]: in newpb, if you enable it, Slicers can return a Deferred to indicate
     that they want to stall serialization for a while. This raises concerns
     about knowing when, if ever, serialization will resume, and increases
     uncertainty about state coherency, because all sorts of stuff could
     happen by the time serialization is resumed.



From warner at lothar.com  Sat Nov  5 21:55:53 2005
From: warner at lothar.com (Brian Warner)
Date: Sat, 05 Nov 2005 18:55:53 -0800 (PST)
Subject: [Twisted-Python] pb.Cacheable vs. offline queuing
Message-ID: <20051105.185553.33436059.warner@lothar.com>

> I've been looking at Cacheable, as the live updates between servers
> would be useful, but I have a few questions:
>
> How does it avoid collisions, if an attribute is changed on both ends
> at once?  Is any kind of 2PC involved, or similar?  I read that some
> part of reading/observing is atomic, but is modifying atomic as well?

Luckily (well, for us at least :), there is no concept of "simultaneous"
here. PB offers two distinct classes for cacheable use: pb.Cacheable on the
"sending" side, and pb.RemoteCache on the "receiving" side. Modification
messages flow in one direction only. As long as you don't trigger some kind
of reentrancy problem, each update message is basically atomic, but there is
no mechanism in place to send changes back in the other direction.

So if you want to allow both sides to change things, you will have to build
some sort of layer on top of pb.Cacheable, which is where you'd put in your
synchronization logic. You have to figure out when the "other" object is
created, find a way to wire it back to its partner, and make sure that
changes don't travel in endless loops between the two paired objects.

> the two servers (public and office) must both keep serving users, even if
> the connection between them is severed.

Be aware that trying to accomodate disconnected operation is like planting
kudzu in your flowerbed with a promise that you'll "keep an eye on it". Each
time you think you've figured out everything there is to know about
distributed synchronization, you discover a new academic paper explaining a
new horrible failure method that you're vulnerable to. The depths awaiting to
be plumbed know no bound. (the problem is basically equivalent to merging in
a distributed version control system, and look at how many of *those* we've
got running around :).

Worse yet, the same problems actually exist in always-connected operation,
it's just that you can trick yourself into thinking you can ignore them more
often. Unidirectional dataflow is at least four orders of magnitude easier to
deal with.

> any collisions would be dealt with manually by the office staff once the
> connection came back up.

Good. You might still have a chance to retain your sanity :). 

Yeah, Cacheable won't be enough for you. My hunch is that you'll be
implementing enough new code that you might as well not bother building it on
top of pb.Cacheable: start with a pb.Referenceable and a remote_acceptUpdate
method, an outboundUpdates() queue, and some setter methods to trigger
outbound update messages.

good luck,
 -Brian



From jkrushen at gmail.com  Sat Nov  5 22:29:41 2005
From: jkrushen at gmail.com (Jordan Krushen)
Date: Sat, 5 Nov 2005 19:29:41 -0800
Subject: [Twisted-Python] pb.Cacheable vs. offline queuing
In-Reply-To: <20051105.185553.33436059.warner@lothar.com>
References: <20051105.185553.33436059.warner@lothar.com>
Message-ID: <b811ba730511051929l11e17dd5naa3bebac69fa867d@mail.gmail.com>

On 11/5/05, Brian Warner <warner at lothar.com> wrote:

> > the two servers (public and office) must both keep serving users, even if
> > the connection between them is severed.
>
> Be aware that trying to accomodate disconnected operation is like planting
> kudzu in your flowerbed with a promise that you'll "keep an eye on it". Each
> time you think you've figured out everything there is to know about
> distributed synchronization, you discover a new academic paper explaining a
> new horrible failure method that you're vulnerable to. The depths awaiting to
> be plumbed know no bound. (the problem is basically equivalent to merging in
> a distributed version control system, and look at how many of *those* we've
> got running around :).

Been there, ran away from that :)  In this case, all data and business
logic (relevant to the syncing) are narrowly defined, and I plan to
treat any data collisions the same way as any sane merging system --
let the user figure it out (with an iSync-esque conflict resolver
interface).  I don't want to spend x amount of time building the
system, and 3-4x writing syncing logic.

> Worse yet, the same problems actually exist in always-connected operation,
> it's just that you can trick yourself into thinking you can ignore them more
> often. Unidirectional dataflow is at least four orders of magnitude easier to
> deal with.

This system isn't symmetric, thankfully, and only certain types of
data will be updatable on both ends.  While connected, both systems
won't be doing quite the same thing (for the most part) so the window
for collisions while connected is incredibly small.  The same objects
would be edited, but not the same attributes on each end.

> > any collisions would be dealt with manually by the office staff once the
> > connection came back up.
>
> Good. You might still have a chance to retain your sanity :).

Sanity is overrated :)

I don't plan to spend a lot of time writing code to deal with
synchronization, though, 'cause it's both tedious and complex at once.

Offline operation is *not* going to be nominal operation, thanks to
their relatively good connectivity to each other.  This is mostly to
ensure that the office doesn't shut down if their hosted server's
connection dies, and so that end users are still able to do things if
their office connection goes out, like attach media to jobs, complete
forms, check status, modify miscellaneous info, etc.

> Yeah, Cacheable won't be enough for you. My hunch is that you'll be
> implementing enough new code that you might as well not bother building it on
> top of pb.Cacheable: start with a pb.Referenceable and a remote_acceptUpdate
> method, an outboundUpdates() queue, and some setter methods to trigger
> outbound update messages.

That sounds fine, actually.  I'm not trying to build a general-purpose
diff engine here, just some specific things, so I'm probably better
off ignoring Cacheable and focusing on the logic instead.

Thanks for the advice :)

J.



From strawman at astraw.com  Sat Nov  5 22:34:06 2005
From: strawman at astraw.com (Andrew Straw)
Date: Sat, 05 Nov 2005 19:34:06 -0800
Subject: [Twisted-Python] does twisted.* support mobile code?
In-Reply-To: <20051105231814.10365.1072597543.divmod.quotient.4493@ohm>
References: <20051105231814.10365.1072597543.divmod.quotient.4493@ohm>
Message-ID: <436D79AE.5040106@astraw.com>

Jean-Paul Calderone wrote:
> On Sat, 05 Nov 2005 14:21:25 -0800, Andrew Straw <strawman at astraw.com>
> wrote:
> 
>> Hi,
>>
>> Does any part of twisted support mobile Python code? Something like
>> Pyro's Mobile Code objects?
>> http://pyro.sourceforge.net/manual/7-features.html#mobile
> 
> 
> I wrote out a big long screed in response to this, but then decided
> it was probably overly harsh.

Well, we're all grown-ups here and I think I can take it, but it's still
interesting enough to know that you think it's the wrong thing.
Translation -- I'll try not to be offended! :)

The bottom line for me is that I noticed an easy way to do some
parallelization of "embarrassingly parallel" problems which would have a
nice match with the Pythonista mindset: instead of map( func, vars ), we
could have a map_distributed( func, vars ), which gets mapped over many
processes, potentially over many CPUs. I'm thinking now solely of a
single multicore box or clusters behind firewalls, so security issues
didn't seem relevant. I've got some rudimentary Pyro code working, but I
was wondering what was available with Twisted.

> No, Twisted does not support this.  The lack of support is intentional.
> There are a huge number of security-related issued with doing what Pyro
> does, so Twisted doesn't do it.

OK.

> In fact, PB goes in the other direction: even if the code defining the
> class of an instance passed over PB is available on both sides, it _still_
> might not be accepted by the recipient, if it has not been explicitly
> marked as safe by the recipient.

OK, thanks. I just wanted to make sure I wasn't missing something in the
spread docs...



From radeex at gmail.com  Sun Nov  6 05:04:12 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 6 Nov 2005 21:04:12 +1100
Subject: [Twisted-Python] Win32 installers of Twisted 2.1?
In-Reply-To: <4355193D.2050502@twistedmatrix.com>
References: <F92274058556DE42B94B148EEFB91839021CB5BF@exchange-03.suedkurier.de>
	<4355193D.2050502@twistedmatrix.com>
Message-ID: <60ed19d40511060204y1ef83617qba9041a62c881153@mail.gmail.com>

On 10/19/05, Cory Dodt <corydodt at twistedmatrix.com> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Win32 requires a "sumo" package to be built.  Because I don't have the tools
> to build one, I'm waiting for that to happen.  As soon as it does there will
> be a win32 installer.
>
> (This is how it usually goes.  Just be patient.  Thanks!)
>
> There is no plan to change the policy of always having a windows installer.

I just did a Twisted 2.1.0 + others sumo tarball, and it's available
on the site (might take 15 minutes for it to get mirrored to our
download site). The format of the tarball has changed: it no longer
looks anything like an SVN checkout, but instead contains each project
in a subdirectory which is identical to an extracted tarball of the
given subproject. setup.py works as it used to, but had to be changed
as well to work with the new format.

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From mailinglists at smartology.nl  Mon Nov  7 02:52:14 2005
From: mailinglists at smartology.nl (Remi Cool)
Date: Mon, 07 Nov 2005 08:52:14 +0100
Subject: [Twisted-Python] Weird problem with XMLRPC -> ('405', 'Method
	Not Allowed')
In-Reply-To: <1131122162.9182.8.camel@localhost.localdomain>
References: <436B3C9D.2010502@smartology.nl>
	<1131122162.9182.8.camel@localhost.localdomain>
Message-ID: <436F07AE.50204@smartology.nl>

Itamar Shtull-Trauring wrote:

>On Fri, 2005-11-04 at 11:49 +0100, Remi Cool wrote:
>
>  
>
>>One other thing is that pressing CTRL-C when the server is running,
>>results in the RuntimeError: can't stop reactor that isn't running.
>>    
>>
>
>Twisted handles Ctrl-C for you, you don't need to catch
>KeyboardInterrupt or exceptions. Just get rid of all the try/except
>around reactor.run(), and don't call reactor.stop() after reactor.run()
>has returned, which is what you're doing that causes the RuntimeError.
>
Thanx for solving that problem ... but the '405 Method Not Allowed' 
problem still stands.

If anyone knows the solution, probably very simple (duh), please drop a
note.


Remi




From jml at mumak.net  Mon Nov  7 03:50:43 2005
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 7 Nov 2005 19:50:43 +1100
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
In-Reply-To: <20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
References: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>
	<20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
Message-ID: <d06a5cd30511070050q6b6deb50q@mail.gmail.com>

On 02/11/05, glyph at divmod.com <glyph at divmod.com> wrote:
>
>
> On Tue, 1 Nov 2005 12:38:21 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> >On Tue, 01 Nov 2005 10:47:09 -0500, Itamar Shtull-Trauring
> ><itamar at itamarst.org> wrote:
> >>Hi,
> >>
> >>Still haven't gotten an answer to this; why is the motivation for
> >>deprecating a perfectly reasonable feature?
> >
> >FWIW, I also would like to know the answer to this question.
>
> Yeah, uh...
>
> As I understand it the implementation was previously horrendously broken.  Now it is not.  Given that it is now no longer broken, and some quite reasonable tests I've seen make use of it (in particular: tests for Divmod ClickChronicle do some very expensive setup in a setUpClass), I'd like to see it stick around.


Another thing I totally forgot.

setUpClass assumes that there is only one instance of each TestCase
subclass.  This is a broken assumption, because a TestCase instance
represents a single test.  Currently, the implentation is horrendous
(take a look).

I'd be much happier if setUpClass were a class method.

jml



From mwh at python.net  Mon Nov  7 05:22:46 2005
From: mwh at python.net (Michael Hudson)
Date: Mon, 07 Nov 2005 10:22:46 +0000
Subject: [Twisted-Python] Re: IRC: getting auth of a user
References: <200511041134.54838.twisted@kampinada.de>
	<200511041344.44056.twisted@kampinada.de>
	<2mvez81rkn.fsf@starship.python.net>
	<200511041755.12382.twisted@kampinada.de>
Message-ID: <2moe4w21vt.fsf@starship.python.net>

Kai Schulte <twisted at kampinada.de> writes:

> Thanks, I hope I can get a closer look tonight and adapt it somehow. ;)

Good luck :)

> But after a short overview I fear I have to rewrite my bot completely.
> Since the bot is very simple, I didn`t even used any defers, etc.

Well, it's not that hard, IMHO.  I went through the same thing with my
bot.  And it's pretty much unavoidable -- what did you expect your bot
to be doing while it waited for the whois answer to come back?

Cheers,
mwh

-- 
48. The best book on programming for the layman is "Alice in
    Wonderland"; but that's because it's the best book on
    anything for the layman.
  -- Alan Perlis, http://www.cs.yale.edu/homes/perlis-alan/quotes.html




From Brendan at BrendanSimon.com  Mon Nov  7 07:19:09 2005
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Mon, 07 Nov 2005 23:19:09 +1100
Subject: [Twisted-Python] Python application requiring SSH and SNMPv3
Message-ID: <436F463D.6090007@BrendanSimon.com>

Hi,

I'm new to Twisted and have a few questions.

I wish to write a GUI in wxPython that needs to communicate to a POSIX 
machine to execute commands and return results.  The underlying 
application is a command-line based Configuration Management System 
called Aegis.  I wish to use SSH to communicate and see that Twisted has 
Conch :)  I also see that that there is another python ssh module called 
"paramiko" which looks like is less complex than Twisted.  I'm trying to 
figure out which path to take.

This application may also require rsync to transfer files back and 
forth.  Samba/SMB could also be an option.  Does twisted have support 
for these protocols?

On another application I need to use SNMPv3.  I see that PySNMP now 
supports it but apparently it is very slow.  Does Twisted support PySNMP 
with v3 support?

Is there any advantage or disadvantage in using Twisted over individual 
modules for SSH or SNMP, etc???

Thanks,
Brendan.




From alessandro.ogier at unimib.it  Mon Nov  7 08:09:28 2005
From: alessandro.ogier at unimib.it (Alessandro Ogier)
Date: Mon, 07 Nov 2005 14:09:28 +0100
Subject: [Twisted-Python] LDAP Checker
In-Reply-To: <4359E549.4070706@twistedmatrix.com>
References: <869525070.20051020134929@gmail.com>
	<4359E549.4070706@twistedmatrix.com>
Message-ID: <436F5208.4010708@unimib.it>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Tommi Virtanen ha scritto:

> ldaptor.checkers.LDAPBindingChecker is a Checker as used by
> twisted.cred.

apropos this nice feature, it's possible not to make a connection every
authentication made ?

I simply setup a checker that way:

    ldapChecker = LDAPBindingChecker(ldaptor.config.LDAPConfig())
    p.registerChecker(ldapChecker)

and everything's ok, apart for the connections list that keeps growing.

Patching adding a pair of unbind() would be easy, but maybe there is a
best practice to implement.

i'm using 0.0.42

TIA,
- --
Alessandro Ogier <alessandro.ogier at unimib.it>
gpg --keyserver pgp.mit.edu --recv-keys EEBB4D0D

Universita` degli Studi di Milano - Bicocca
Sistemi Informativi
Via Cozzi 53 - I 20125 Milano Italy
Tel. +39 02 6448 5526
-----BEGIN PGP SIGNATURE-----

iEYEARECAAYFAkNvUggACgkQZmjYv+67TQ0uBwCfYXgmPfR7MNniqRdgYB/hKqhn
mpAAnjmC+vatV3ebn47p5lW+jSLfH6rO
=6Ypt
-----END PGP SIGNATURE-----



From jml at mumak.net  Mon Nov  7 08:47:49 2005
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 8 Nov 2005 00:47:49 +1100
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <20051106022657.10365.1687580705.divmod.quotient.4496@ohm>
References: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>
	<20051106022657.10365.1687580705.divmod.quotient.4496@ohm>
Message-ID: <d06a5cd30511070547o59a504e2p@mail.gmail.com>

On 06/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> >You are confused. At least two people were *for* dropping 2.2 support
> >in this thread, and nobody was against it. I'm pretty sure several
> >others have been for dropping it on IRC, as well.
>
> Confused, perhaps.  Or perhaps their positions were voiced with such limited enthusiasm I just forgot about them :)

My apologies.  I often try to restrain my enthusiasm for fear that
excess emotion will sidetrack rational discussion.  I am very keen to
ditch Python 2.2 support.

> It's a pretty good list, I must admit.  But I wonder what the specific gains to Twisted will be.  Just having a list of things Python 2.3 can do that Python 2.2 cannot does not seem compelling to me.

One specific gain already mentioned is that we get to remove a bunch
of code. Less code means fewer bugs and less work. It might even
improve our test coverage.

Here's a list of stuff (shamelessly grepped) that could probably be
simplified if we dropped 2.2 support:

twisted/conch/test/test_filetransfer.py:        # XXX: Remove 'uid'
and 'gid', because python 2.2 doesn't have os.lchown, so we just skip
that bit (dodgy!)
twisted/conch/unix.py:            # XXX: Python 2.2 doesn't have os.lchown!
twisted/internet/error.py:        # only works in 2.2
twisted/python/dist.py:    Python 2.2's distutils. Pretty similar
arguments to getDataFiles,
twisted/python/dist.py:# Apple distributes a nasty version of Python
2.2 w/ all release builds of
twisted/python/dist.py:    Changes behavior in Python 2.2 to support
simultaneous specification twisted/python/reflect.py:    This is a
2.2-only alternative to the Accessor mixin - just set in your
twisted/python/zshcomp.py:# in case of python2.2 ...
twisted/test/test_compat.py:        # without replacing isinstance on
2.2 as well :(
twisted/topfiles/setup.py:# 2.2 doesn't have __file__ in main-scripts.
twisted/trial/unittest.py:        # only overriding this because
Python 2.2's unittest has a broken
twisted/trial/unittest.py:        """a python2.2 friendly test to
assert that substring is found in astring
twisted/trial/unittest.py:        """a python2.2 friendly test to
assert that substring is not found in
twisted/trial/unittest.py:        # FIXME: when we drop support for
python 2.2 and start to require 2.3,
twisted/conch/ssh/filetransfer.py:        isFile, name =
self.wasAFile[d] # replace with get when we're at 2.3
twisted/lore/lint.py:# parser.suite in Python 2.3 raises SyntaxError,
<2.3 raises parser.ParserError
twisted/scripts/trial.py:        (relative to _trial_temp). Requires
Python 2.3.3."""
twisted/spread/jelly.py:            raise
NotImplementedError("Datetime unserializing not supported in Python <
2.3")
twisted/trial/runner.py:                          "python 2.3 or
later, not running doctests")
twisted/trial/runner.py:                          "python 2.3 or
later, not running doctests")
twisted/trial/test/test_doctest.py:    skip = 'doctest support only
works on 2.3 or later'
twisted/trial/test/test_doctest.py:        # doctest reports failures
as errors in 2.3
twisted/trial/test/test_failure_formatting.py:                'doctest
support only works in Python 2.3 or later')
twisted/words/protocols/jabber/xmpp_stringprep.py:                 
"recommended you upgrade to Python 2.3.2 or newer if you "

Plus the modules in twisted/python/pymodules.

As you can see, Trial carries a fair part of the 2.2 support burden. 
I'm eager to be rid of it.

cheers,
jml



From dhess at verscend.com  Mon Nov  7 09:42:34 2005
From: dhess at verscend.com (David K. Hess)
Date: Mon, 7 Nov 2005 08:42:34 -0600
Subject: [Twisted-Python] Unjelly - recursion limit reached
In-Reply-To: <20051105.183405.27234188.warner@lothar.com>
References: <20051105.183405.27234188.warner@lothar.com>
Message-ID: <EFD864B8-AA11-4D41-954B-69CBEEADA3C2@verscend.com>


On Nov 5, 2005, at 8:34 PM, Brian Warner wrote:

>> When a view_ method is called in a cacheable and the return value  
>> is a
>> graph of interconnected cacheables, is the return value completely
>> serialized at that point?
>
> Do you mean that some view_ method is being invoked on a  
> pb.Referenceable (or
> pb.ViewPoint, I suppose) ? And that method is returning an instance  
> that
> inherits from pb.Cacheable? And this pb.Cacheable instance holds  
> references
> to other pb.Cacheables? Which may or may not have been transmitted  
> across
> this wire once already?

Yes, you expertly filled in the gaps of my original question. :-)  
That's exactly what I'm asking.

> The general answer is yes, the return value is completely  
> serialized right
> then. The serialized form of the return value is transmitted in  
> pieces as
> jelly recurses down the retval object graph, each new node visited  
> causes a
> little bit more data to be sent. However, it does not stop for  
> anything, and
> there is no way for an object being serialized to indicate that it  
> wants to
> put off serialization for a while[1]. On the receiving end, the
> callRemote()'s Deferred will not be fired until the retval has  
> completely
> finished deserialization. Intermediate objects may be constructed  
> while
> deserialization is taking place, but that ought to be invisible to the
> caller.

That's a relief. And I shouldn't have expected a different answer.  
Twisted PB is excellent work and that would have been a glaring  
oversight.

> I'm not sure what would happen if, say, your  
> getStateToCacheAndObserveFor
> method did a callRemote though the same wire. newpb has a queue to  
> handle
> this sort of thing (the callRemote doesn't get transmitted until at  
> least
> after the current operation has finished), but I don't know what  
> oldpb does.
> If it isn't clever enough to be reentrant, the receiving end will get
> interleaved object state from the two operations and the results  
> will be very
> very messy.
>
> getStateToCacheAndObserveFor and getStateToCopy are called from PB  
> internals,
> and as a result it may not be safe to make other PB calls from  
> there. view_*
> is called when the wire is in a stable state (i.e. remote methods  
> calls are
> top-level objects on the wire), so I think it should be safe to make
> arbitrary PB calls from it.

All of my getStateToCacheAndObserveFor are very simple with no other  
calls. :-(

>> I'm concerned that my hierarchy of cacheables received by the client
>> is inconsistent because it is being modified by another client view_
>> call into the server before the previous hierarchy has been fully
>> serialized to the first client.
>
> Note that each callRemote is more-or-less atomic, and the creation  
> of a whole
> object graph is more-or-less atomic, but it is entirely possible  
> that other
> method calls will happen during the middle of a huge slew of  
> RemoteCache
> updates. So if object A modifies a dozen Cacheables at once, and  
> object B has
> a RemoteCache that is watching them, object C might sneak in a  
> callRemote
> while only half of the updates have been processed. The same thing  
> will
> happen if your Cacheable update method does multiple callRemotes to  
> do its
> job.

I'm not sure I'm following this fully. My situation is one server  
connected to many clients. My assumption is that remoteCall results  
and observer updates are serialized and kept in order in a qeueue to  
each client. In other words, I assume that if client A connects and  
performs a call that results in a Cacheable graph that takes a while  
to serialize and deliver to client A, even if a another client B  
calls in and modifies the state of one of the Cacheables that was  
already serialized in the result being delivered to client A, the  
update to that particular Cacheable will be properly queued behind  
the original result still being delivered to A.

Bottom line, if all of these things are true, then I'm not sure what  
is going wrong. Is it possible that jelly is at times walking my  
object graph (which is interconnected to a certain degree and changes  
dynamically) in such a way that it has to perform a significant  
amount of recursion? In other words, maybe this isn't a bug but I  
just need to increase the runtime recursion limit?

FYI, here's a snippet of the exception:

------
   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 394, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 394, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 621, in _unjelly_reference

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 451, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 394, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 394, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 621, in _unjelly_reference

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 451, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 646, in _unjelly_list
----

Thanks for your insight!

Dave



From exarkun at divmod.com  Mon Nov  7 09:56:26 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 Nov 2005 09:56:26 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15052 - Merge forward
 r14926:15051 -- insomnia
In-Reply-To: <E1EZ87m-0007Or-00@wolfwood>
Message-ID: <20051107145626.10365.497204348.divmod.quotient.4814@ohm>

On Mon, 07 Nov 2005 07:37:30 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Mon Nov  7 07:37:28 2005
>New Revision: 15052
>
> [snip]
>Log:
>Merge forward r14926:15051 -- insomnia
>

You should always create a new branch, copied from trunk, to merge forward (<http://divmod.org/trac/wiki/MergedForward>).  Doing it in-place makes it much more difficult to determine which changes are yours and which changes belong to someone else.  It also increases the likelyhood of a conflict when you eventually merge into trunk.

For those who aren't aware of it, the tools referenced on the above page are from Combinator (<http://divmod.org/trac/wiki/DivmodCombinator>).

Jean-Paul



From frank at chagford.com  Mon Nov  7 10:45:35 2005
From: frank at chagford.com (Frank Millman)
Date: Mon, 7 Nov 2005 17:45:35 +0200
Subject: [Twisted-Python] Newbie - guidance required please
Message-ID: <VPOP32.2.0a.20051107174614.046.1.1.a40c1f81@chagford.com>

Hi all,

I am treading a path that I think many have trodden before. I have a
requirement, I am pretty sure that Twisted will be able to solve it for me,
but at this stage I am overwhelmed by the options that Twisted seems to
offer, and I am worried that I will head off down the wrong path. With your
indulgence, I would like to describe what I am trying to accomplish, and get
some feedback as to which features of Twisted are best suited to assisting
me in achieving this.

I am developing a multi-user accounting/business system. I use a database
for the back end - PostgreSQL/psycopg on Linux, MS SQL Server/pywin32.odbc
on MSW. I am using wxPython for the front end, but eventually I will want a
web interface as well. I have developed a reasonably powerful middle layer
to handle the authentication and business logic. My problem is that at
present the middle layer runs on the client, each with its own connection to
the database. I am sure that there are a number of problems with this
architecture, but the one that concerns me particularly is that it is easy
for a user with a smattering of knowledge to modify the client program to
bypass my authentication and business logic, make a direct connection to the
database, and generate any SQL statements they want. This makes my approach
a non-starter.

The solution that I have in mind is to move all of my authentication and
business logic to a server program, which will be the only program that
makes a connection to the database. Each client will connect to my server
program, and I will have to devise some message formats for the passing of
information between the client and the server. I have a little experience
with multi-threaded socket programming, and I am fairly sure that I could
come up with a working solution using this technique, but having read the
advantages of the Twisted approach, I feel that this would be a better and
more scaleable solution.

Before going into detail, there is one issue I am not sure about, and that
is the question of 'maintaining state'. The user selects an option from a
menu - maintain a table, capture a transaction, run a report, perform an
enquiry, etc. Each option is represented by a class, which is contained in a
module of the same name. When an option is selected, I import the module,
and instantiate the class. Each option is associated with a number of
database tables, each with a number of columns. I have a generalised 'table
class', which is instantiated for each table opened, and a generalised
'column class', which is instantiated for each column. A user can have more
than one option running concurrently, which can result in dozens of table
objects and hundreds of column objects. I was fairly relaxed about this
running on each client, but I am not so sure about running them all on one
server with, say, 50 or more concurrent clients. Should I worry about the
number of active objects, or is it safe to assume that virtual memory will
handle it, on the assumption that most of them will be idle most of the
time?

As I understand it, I will use Twisted in the following roles -

1. in my server program, as an interface to DB-API for all database access.
2. in my server program, to handle requests from and pass information to
clients.
3. in my client program, to connect with and interact with my server
program.

Having read the documentation on twisted.enterprise.adbapi, it seems that
'1' should be fairly straightforward. I hope there are not too many hidden
complications.

I assume that '2' and '3' can be discussed together, as they form both sides
of a single communication channel.

I have about a million questions, but I will start with three.

1. Once a client has established a connection with the server, I would
prefer to keep the connection open until they log out, which could be
several hours later. Is this an acceptable way of doing it, or should I keep
the number of open connections down to a minimum, closing and reopening as
required?

2. For authentication, the user enters a userid and password. The userid is
looked up in a database table. One of the columns contains the hashed (sha)
password. If the userid does not exist or the hashed password does not
match, I do not allow the user to proceed.

I looked at cred.py, but it seems more complicated to use this than stick to
my own method. Is this a valid observation?

A related question. With my present system, the authentication happens on
the client, so I do not have to send the password over the network. With the
new method, I will have to send it to the server. Should I be looking at
using SSL for protection against sniffing, or is there an easier way?

3. Whether or not I use cred, it looks as if I should be using Perspective
Broker (PB). I would normally have been thinking in terms of defining
message formats for exchanging data between server and client, so the
concept of defining objects that make calls on each other feels a bit
strange. If I maintain the full state of the connection on the server side,
I do not want to duplicate this on the client side, so I assume I must
define some form of stripped down object to represent the client state, and
use this to exchange information. Are there any simple examples I can look
at to explain this concept in more detail?

I feel I am at a crossroads. Either I can cobble something together that
works, but does not fit in with the Twisted philosophy, and will therefore
limit me as my application grows. Or I can get my mind more in tune with
Twisted, and set up structures that will work with me as things evolve.

If you have read this far, thanks for your perseverance. Any pointers or
suggestions will be much appreciated.

Thanks

Frank Millman




From michaelschneider at fuse.net  Mon Nov  7 11:28:11 2005
From: michaelschneider at fuse.net (Michael Schneider)
Date: Mon, 07 Nov 2005 11:28:11 -0500
Subject: [Twisted-Python] Twisted Oreilly Book Released on Safari
In-Reply-To: <E1EYTGm-0007HA-01@pyramid.twistedmatrix.com>
References: <E1EYTGm-0007HA-01@pyramid.twistedmatrix.com>
Message-ID: <436F809B.5020504@fuse.net>

The new twisted book is on O'Reilly Safari!!!!  The new twisted book is 
on  O'Reilly!!!!!!!!!!


Thanks to all who worked to put this together.  Nice Piece of work.  I 
just finished the second
chapter and can't wait to finish it!!!!!!!!!

Mike Schneider

-- 
The greatest performance improvement occurs on the transition of from the non-working state to the working state.




From william.lewis at uk.bnpparibas.com  Mon Nov  7 12:46:02 2005
From: william.lewis at uk.bnpparibas.com (william.lewis at uk.bnpparibas.com)
Date: Mon, 7 Nov 2005 17:46:02 +0000
Subject: [Twisted-Python] spawnProcess() for win32 (newbie)
Message-ID: <OF5B2D881E.90F8813D-ON802570B2.005FE7C4-802570B2.00619972@bnpparibas.com>

Hi,

When running your "Verbose Example" in the "Using Processes" documentation 
(on Windows XP) I get a NotImplementedError exception raised from the 
spawnProcess() method in the twisted/internet/posixbase.py module. From 
the comments in the code it looks like Itamar has started to implement 
this for Windows, but it's not quite there yet. I guess my question is: 
when is it likely that you will have an implementation of the 
ProcessProtocol for win32 systems?

I have installed Twisted 2.0.1 with Python 2.4 using the .exe

Thanks

Will Lewis


This message and any attachments (the "message") is 
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and
immediately notify the sender. Any use not in accord with
its purpose, any dissemination or disclosure, either whole
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message.
BNP PARIBAS (and its subsidiaries) shall (will) not
therefore be liable for the message if modified. 

**********************************************************************************************

BNP Paribas Private Bank London Branch is authorised
by CECEI & AMF and is regulated by the Financial Services
Authority for the conduct of its investment business in
the United Kingdom.

BNP Paribas Securities Services London Branch is authorised 
by CECEI & AMF and is regulated by the Financial Services 
Authority for the conduct of its investment business in 
the United Kingdom.
  
BNP Paribas Fund Services UK Limited is authorised and 
regulated by the Financial Services Authority

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051107/652b27c7/attachment.htm 

From justinjohnson at gmail.com  Mon Nov  7 13:43:28 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Mon, 7 Nov 2005 12:43:28 -0600
Subject: [Twisted-Python] spawnProcess() for win32 (newbie)
In-Reply-To: <OF5B2D881E.90F8813D-ON802570B2.005FE7C4-802570B2.00619972@bnpparibas.com>
References: <OF5B2D881E.90F8813D-ON802570B2.005FE7C4-802570B2.00619972@bnpparibas.com>
Message-ID: <94a776e70511071043v762a5320s8a0234bac3fc7744@mail.gmail.com>

spawnProcess is imlemented for win32eventreactor, but it is buggy. It may
work fine for many things, but in my experience occasionally stdout or
stderr have portions of output missing. I have spawnProcess implemented for
the IOCP reactor at /branches/justinj/issue1008, but am not quite ready to
merge to trunk. Unfortunately that's the state of the win32 world at this
time.
 -Justin

 On 11/7/05, william.lewis at uk.bnpparibas.com <
william.lewis at uk.bnpparibas.com> wrote:
>
>
> Hi,
>
> When running your "Verbose Example" in the "Using Processes" documentation
> (on Windows XP) I get a NotImplementedError exception raised from the
> spawnProcess() method in the twisted/internet/posixbase.py module. From the
> comments in the code it looks like Itamar has started to implement this for
> Windows, but it's not quite there yet. I guess my question is: when is it
> likely that you will have an implementation of the ProcessProtocol for win32
> systems?
>
> I have installed Twisted 2.0.1 with Python 2.4 using the .exe
>
> Thanks
>
> Will Lewis
>
> This message and any attachments (the "message") is
> intended solely for the addressees and is confidential.
> If you receive this message in error, please delete it and
> immediately notify the sender. Any use not in accord with
> its purpose, any dissemination or disclosure, either whole
> or partial, is prohibited except formal approval. The internet
> can not guarantee the integrity of this message.
> BNP PARIBAS (and its subsidiaries) shall (will) not
> therefore be liable for the message if modified.
>
> **********************************************************************************************
>
> BNP Paribas Private Bank London Branch is authorised
> by CECEI & AMF and is regulated by the Financial Services
> Authority for the conduct of its investment business in
> the United Kingdom.
>
> BNP Paribas Securities Services London Branch is authorised
> by CECEI & AMF and is regulated by the Financial Services
> Authority for the conduct of its investment business in
> the United Kingdom.
>
> BNP Paribas Fund Services UK Limited is authorised and
> regulated by the Financial Services Authority
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051107/d4b0b2f1/attachment.htm 

From nico at tekNico.net  Mon Nov  7 15:01:10 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Mon, 07 Nov 2005 21:01:10 +0100
Subject: [Twisted-Python] Re: Newbie - guidance required please
In-Reply-To: <VPOP32.2.0a.20051107174614.046.1.1.a40c1f81@chagford.com>
References: <VPOP32.2.0a.20051107174614.046.1.1.a40c1f81@chagford.com>
Message-ID: <dkobq6$ra5$1@sea.gmane.org>

> I am developing a multi-user accounting/business system. I use a database
> for the back end - PostgreSQL/psycopg on Linux, MS SQL Server/pywin32.odbc
> on MSW.

FWIW, PostgreSQL 8.0 runs on MS Windows too.


> The solution that I have in mind is to move all of my authentication and
> business logic to a server program, which will be the only program that
> makes a connection to the database. Each client will connect to my server
> program, and I will have to devise some message formats for the passing of
> information between the client and the server.

You may also convert your program to a web interface, and use a standard
web browser as client, connected to the server via the HTTP[S] protocol.


> Should I worry about the
> number of active objects, or is it safe to assume that virtual memory will
> handle it, on the assumption that most of them will be idle most of the
> time?

Virtual memory surely helps. A server will comfortably handle thousands of
objects: if and when you'll have problems, only then you'll explore ways to
minimize their number and size, no use worrying now.


> As I understand it, I will use Twisted in the following roles -
> 
> 1. in my server program, as an interface to DB-API for all database access.
> 2. in my server program, to handle requests from and pass information to
> clients.
> 3. in my client program, to connect with and interact with my server
> program.

Unless you go the web interface route, of course, which by the way has the
added benefit of sidestepping client maintenance issues.


> 1. Once a client has established a connection with the server, I would
> prefer to keep the connection open until they log out, which could be
> several hours later. Is this an acceptable way of doing it, or should I keep
> the number of open connections down to a minimum, closing and reopening as
> required?

You have a thousand sockets available per process, use them judiciously. :-)


> 2. For authentication, the user enters a userid and password. The userid is
> looked up in a database table. One of the columns contains the hashed (sha)
> password. If the userid does not exist or the hashed password does not
> match, I do not allow the user to proceed.
> 
> I looked at cred.py, but it seems more complicated to use this than stick to
> my own method. Is this a valid observation?

You have to grasp a few concepts, and then you have a general, reusable
piece fo infrastructure.

This is often true of Twisted: you first have to make an effort
understanding stuff, but then, after it "clicks", you feel turbocharged. :-)


> A related question. With my present system, the authentication happens on
> the client, so I do not have to send the password over the network. With the
> new method, I will have to send it to the server. Should I be looking at
> using SSL for protection against sniffing, or is there an easier way?

No, there isn't. You need to encrypt communication, if you want to protect
it. Of course, security involves more than just protecting communication.


> 3. Whether or not I use cred, it looks as if I should be using Perspective
> Broker (PB). I would normally have been thinking in terms of defining
> message formats for exchanging data between server and client, so the
> concept of defining objects that make calls on each other feels a bit
> strange. If I maintain the full state of the connection on the server side,
> I do not want to duplicate this on the client side, so I assume I must
> define some form of stripped down object to represent the client state, and
> use this to exchange information. Are there any simple examples I can look
> at to explain this concept in more detail?

You make a remote call, pass the data you want to transmit as parameters,
get data back as returned values (through Deferreds, of course). What could
be simpler than that? :-)


> I feel I am at a crossroads. Either I can cobble something together that
> works, but does not fit in with the Twisted philosophy, and will therefore
> limit me as my application grows. Or I can get my mind more in tune with
> Twisted, and set up structures that will work with me as things evolve.

We've all been there. Twisted seems daunting at first, and it's not clear
whether it will be worth the effort.

The winning point, for me, more than the impressive amount of built-in
network infrastructure, was its asynchronous, event-driven concurrency
model. Once you read this:

Generalization of Deferred Execution in Python
http://www.python.org/pycon/papers/deferex/

you stop and think: "How could have I been relying on *threads* all this
time?!?"

(The signature is quite on-topic here. :-) )


> If you have read this far, thanks for your perseverance. Any pointers or
> suggestions will be much appreciated.

After you've finished the above paper, study this:

Asynchronous Programming with Twisted
http://twistedmatrix.com/projects/core/documentation/howto/async.html

and the linked docs at the end. You're not going anywhere with Twisted
until Deferreds are firmly under your belt.

Other important things are interfaces and adapters:

Components: Interfaces and Adapters
http://twistedmatrix.com/projects/core/documentation/howto/components.html

More details here:

http://svn.zope.org/*checkout*/Zope3/trunk/src/zope/interface/README.txt

Of course, Python and Twisted are just layers in the stack. Above them
there are Nevow, and Axiom, and Mantissa, and... :-)

Good luck in your endeavors, you're fiddling with some powerful tools here!
 ;-)

-- 
Nicola Larosa - nico at tekNico.net

No inventions have really significantly eased the cognitive difficulty
of writing scalable concurrent applications and it is unlikely that any
will in the near term. [...] Most of all, threads do not help, in fact,
they make the problem worse in many cases. -- G. Lefkowitz, August 2005




From twisted at kampinada.de  Mon Nov  7 16:04:25 2005
From: twisted at kampinada.de (Kai Schulte)
Date: Mon, 7 Nov 2005 22:04:25 +0100
Subject: [Twisted-Python] Re: IRC: getting auth of a user
In-Reply-To: <2moe4w21vt.fsf@starship.python.net>
References: <200511041134.54838.twisted@kampinada.de>
	<200511041755.12382.twisted@kampinada.de>
	<2moe4w21vt.fsf@starship.python.net>
Message-ID: <200511072204.25850.twisted@kampinada.de>

Am Montag, 7. November 2005 11:22 schrieb Michael Hudson:
> Kai Schulte <twisted at kampinada.de> writes
> > Thanks, I hope I can get a closer look tonight and adapt it somehow. ;)
>
> Good luck :)
>
> > But after a short overview I fear I have to rewrite my bot completely.
> > Since the bot is very simple, I didn`t even used any defers, etc.
>
> Well, it's not that hard, IMHO.  I went through the same thing with my
> bot.  And it's pretty much unavoidable -- what did you expect your bot
> to be doing while it waited for the whois answer to come back?

I thought of it and came to the same conclusion. Anyway I always wanted to get 
a closer look at twisted, specifically defers...so, why not now? ;) 


>
> Cheers,
> mwh

so long
Kai



From bv at bnl.gov  Mon Nov  7 22:24:00 2005
From: bv at bnl.gov (Brett Viren)
Date: Mon, 07 Nov 2005 22:24:00 -0500
Subject: [Twisted-Python] Layout bug in plugin.html
Message-ID: <ir47jbjizzj.fsf@minos.phy.bnl.gov>

Can someone with access fix

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html

All the code examples lost their layout.  

Thanks,
-Brett.



From exarkun at divmod.com  Mon Nov  7 22:44:10 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 Nov 2005 22:44:10 -0500
Subject: [Twisted-Python] Layout bug in plugin.html
In-Reply-To: <ir47jbjizzj.fsf@minos.phy.bnl.gov>
Message-ID: <20051108034410.10365.1238394582.divmod.quotient.5046@ohm>

On Mon, 07 Nov 2005 22:24:00 -0500, Brett Viren <bv at bnl.gov> wrote:
>Can someone with access fix
>
>http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
>
>All the code examples lost their layout.

Thanks, fixed already in SVN.  You can view svn trunk at HEAD documentation at:

http://twistedmatrix.com/users/warner/doc-latest/

Jean-Paul



From fbuchinger at gmail.com  Tue Nov  8 09:44:36 2005
From: fbuchinger at gmail.com (Franz Buchinger)
Date: Tue, 8 Nov 2005 15:44:36 +0100
Subject: [Twisted-Python] Twisted missing OpenSSL-Package?
Message-ID: <a07b86220511080644g1b4e5e33v@mail.gmail.com>

Hi,

I tried to install MoinMoin Wiki http://moinmoin.wikiwikiweb.de/ in
Combination with Twisted as Webserver under Windows XP.

When i  launch Mointwisted.cmd on the command line, it dies with the
following error messages:

C:\Python24\scripts\moin-1.3.5>mointwisted
Traceback (most recent call last):
  File "C:\Python24\scripts\twistd.py", line 25, in ?
    run()
  File "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 51, in r
un
    app.run(runApp, ServerOptions)
  File "C:\Python24\Lib\site-packages\twisted\application\app.py", line 271, in
run
    runApp(config)
  File "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 35, in r
unApp
    application = app.getApplication(config, passphrase)
--- <exception caught here> ---
  File "C:\Python24\Lib\site-packages\twisted\application\app.py", line 156, in
getApplication
    application = service.loadApplication(filename, style, passphrase)
  File "C:\Python24\Lib\site-packages\twisted\application\service.py", line 303,
 in loadApplication
    application = sob.loadValueFromFile(filename, 'application', passphrase)
  File "C:\Python24\Lib\site-packages\twisted\persisted\sob.py", line 209, in lo
adValueFromFile
    exec fileObj in d, d
  File "mointwisted.py", line 27, in ?
    from MoinMoin.server.twistedmoin import TwistedConfig, makeApp
  File "C:\Python24\scripts\moin-1.3.5\MoinMoin\server\twistedmoin.py", line 27,
 in ?
    from twisted.internet import threads, reactor, ssl
  File "C:\Python24\lib\site-packages\twisted\internet\ssl.py", line 47, in ?
    from OpenSSL import SSL
exceptions.ImportError: No module named OpenSSL

Failed to load application: No module named OpenSSL

Obviously, Twisted is missing an OpenSSL package. Which packages do I
need to enable SSL-Support in Python under Windows?

Thanx in advance,

Franz



From abe at fettig.net  Tue Nov  8 10:04:55 2005
From: abe at fettig.net (Abe Fettig)
Date: Tue, 08 Nov 2005 10:04:55 -0500
Subject: [Twisted-Python] Twisted Oreilly Book Released on Safari
In-Reply-To: <436F809B.5020504@fuse.net>
References: <E1EYTGm-0007HA-01@pyramid.twistedmatrix.com>
	<436F809B.5020504@fuse.net>
Message-ID: <4370BE97.7040301@fettig.net>

Michael Schneider wrote:
> The new twisted book is on O'Reilly Safari!!!!  The new twisted book is
> on  O'Reilly!!!!!!!!!!
> 
> 
> Thanks to all who worked to put this together.  Nice Piece of work.  I
> just finished the second
> chapter and can't wait to finish it!!!!!!!!!

I'm glad you're enjoying it! :-)

Abe




From frank at chagford.com  Tue Nov  8 10:22:04 2005
From: frank at chagford.com (Frank Millman)
Date: Tue, 8 Nov 2005 17:22:04 +0200
Subject: [Twisted-Python] Re: Newbie - guidance required please
In-Reply-To: <dkobq6$ra5$1@sea.gmane.org>
Message-ID: <VPOP32.2.0a.20051108172244.000.2.1.a40c1f81@chagford.com>

Nicola Larosa wrote:

[big snip]

> 
> The winning point, for me, more than the impressive amount of 
> built-in network infrastructure, was its asynchronous, 
> event-driven concurrency model. Once you read this:
> 
> Generalization of Deferred Execution in Python 
> http://www.python.org/pycon/papers/deferex/
> 
> you stop and think: "How could have I been relying on 
> *threads* all this time?!?"
> 
> (The signature is quite on-topic here. :-) )
> 

Interesting paper - thanks for the link.

> 
> After you've finished the above paper, study this:
> 
> Asynchronous Programming with Twisted
> http://twistedmatrix.com/projects/core/documentation/howto/async.html
> 
> and the linked docs at the end. You're not going anywhere 
> with Twisted until Deferreds are firmly under your belt.
> 

I have already read this a few times - I will have to read it a few more,
but it is starting to sink in.

> Other important things are interfaces and adapters:
> 
> Components: Interfaces and Adapters
> http://twistedmatrix.com/projects/core/documentation/howto/com
> ponents.html
> 

This was very important - I had not read this one yet, but it is clearly
crucial, especially for cred.py.

> More details here:
> 
> http://svn.zope.org/*checkout*/Zope3/trunk/src/zope/interface/
README.txt
> 

If I click on this link, I get the following traceback:

An Exception Has Occurred
Python Traceback

Traceback (most recent call last):
  File "/usr/local/viewcvs-1.0-dev/lib/viewcvs.py", line 3196, in main
    request.run_viewcvs()
  File "/usr/local/viewcvs-1.0-dev/lib/viewcvs.py", line 351, in run_viewcvs
    self.view_func(self)
  File "/usr/local/viewcvs-1.0-dev/lib/viewcvs.py", line 1892, in
view_checkout
    fp, revision = request.repos.openfile(request.path_parts, rev)
  File "/usr/local/viewcvs-1.0-dev/lib/vclib/svn/__init__.py", line 358, in
openfile
    fp = FileContentsPipe(self.fsroot, path, self.pool)
  File "/usr/local/viewcvs-1.0-dev/lib/vclib/svn/__init__.py", line 264, in
__init__
    self._stream = fs.file_contents(root, path, self._pool)
SubversionException: ('Attempted to get textual contents of a *non*-file
node', 160017)

> Of course, Python and Twisted are just layers in the stack. 
> Above them there are Nevow, and Axiom, and Mantissa, and... :-)
> 
> Good luck in your endeavors, you're fiddling with some 
> powerful tools here!
>  ;-)
> 
> --
> Nicola Larosa - nico at tekNico.net
> 

Thanks for the support and the really useful feedback.

I am sure I will be back with some more questions, but I have enough to be
going on with for now.

Frank




From itamar at itamarst.org  Tue Nov  8 11:32:59 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 08 Nov 2005 11:32:59 -0500
Subject: [Twisted-Python] Weird problem with XMLRPC -> ('405', 'Method
	Not Allowed')
In-Reply-To: <436F07AE.50204@smartology.nl>
References: <436B3C9D.2010502@smartology.nl>
	<1131122162.9182.8.camel@localhost.localdomain>
	<436F07AE.50204@smartology.nl>
Message-ID: <1131467580.8993.12.camel@localhost.localdomain>

On Mon, 2005-11-07 at 08:52 +0100, Remi Cool wrote:

> Thanx for solving that problem ... but the '405 Method Not Allowed' 
> problem still stands.

For web problems the twisted-web mailing list will probably be more
helpful.




From bv at bnl.gov  Tue Nov  8 11:54:24 2005
From: bv at bnl.gov (Brett Viren)
Date: Tue, 08 Nov 2005 11:54:24 -0500
Subject: [Twisted-Python] Re: Newbie - guidance required please
In-Reply-To: <VPOP32.2.0a.20051108172244.000.2.1.a40c1f81@chagford.com> (Frank
	Millman's message of "Tue, 8 Nov 2005 17:22:04 +0200")
References: <VPOP32.2.0a.20051108172244.000.2.1.a40c1f81@chagford.com>
Message-ID: <ir43bm713nj.fsf@minos.phy.bnl.gov>

Hi Frank,

"Frank Millman" <frank at chagford.com> writes:

> Nicola Larosa wrote:

>> http://svn.zope.org/*checkout*/Zope3/trunk/src/zope/interface/README.txt
>> 
>
> If I click on this link, I get the following traceback:

Works for me.  Maybe line wrap of the URL got you?  W/out "README.txt"
I also get a traceback.


BTW, the idea of interfaces is new to me so I enjoyed this and the
other documents come of which I hadn't seen.

One thing I think is worth noting is I find mention of using the
special member "__implements__" in some of the current Twisted
documentation on interfaces instead of "zope.interface.implements()".
However this:

http://twistedmatrix.com/documents/current/api/twisted.python.components.html

seems to say the latter rather than the former should be used.  This
appears to have been fixed in the CVS versions of the documentation
Jean-Paul pointed me to (thanks!) in another thread:

http://twistedmatrix.com/users/warner/doc-latest/

-Brett.




From itamar at itamarst.org  Tue Nov  8 13:38:34 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 08 Nov 2005 13:38:34 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15062 - Upon
	ERROR_SEM_TIMEOUT, don't drop connection - resolves 1244
In-Reply-To: <E1EZXHK-00082m-00@wolfwood>
References: <E1EZXHK-00082m-00@wolfwood>
Message-ID: <1131475114.8993.17.camel@localhost.localdomain>

On Tue, 2005-11-08 at 10:29 -0700, Justin Johnson wrote:
> Author: justinj
> Date: Tue Nov  8 10:29:02 2005
> New Revision: 15062
> 
> Modified:
>    branches/justinj/issue1008/twisted/conch/test/test_text.py

Was this committed by mistake? Unless the test actually outputs to
terminal I don't see why the test shouldn't run.




From mslimmer at csbuilders.net  Tue Nov  8 13:46:22 2005
From: mslimmer at csbuilders.net (Max Slimmer)
Date: Tue, 8 Nov 2005 10:46:22 -0800
Subject: [Twisted-Python] help with twisted and WORDS
Message-ID: <FHEKLMLGOFBCCMNGMAEJMEPODCAA.mslimmer@csbuilders.net>

I am trying to use twisted to connect with IM servers/clients. I have read
all of the docs for twisted and am very impressed, it is really cool.
However I have tried to get the WORDS examples to work, without much luck,
and the sources don't have an over abundance of comments.  I have ordered
the book, hoping that will help, is there any other resources that might
help expidite the learning curve, both for twisted and the WORDS interfaces.

thanks,

max




From exarkun at divmod.com  Tue Nov  8 14:13:36 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 8 Nov 2005 14:13:36 -0500
Subject: [Twisted-Python] help with twisted and WORDS
In-Reply-To: <FHEKLMLGOFBCCMNGMAEJMEPODCAA.mslimmer@csbuilders.net>
Message-ID: <20051108191336.10365.529855927.divmod.quotient.5267@ohm>

On Tue, 8 Nov 2005 10:46:22 -0800, Max Slimmer <mslimmer at csbuilders.net> wrote:
>I am trying to use twisted to connect with IM servers/clients. I have read
>all of the docs for twisted and am very impressed, it is really cool.
>However I have tried to get the WORDS examples to work, without much luck,
>and the sources don't have an over abundance of comments.  I have ordered
>the book, hoping that will help, is there any other resources that might
>help expidite the learning curve, both for twisted and the WORDS interfaces.
>

Are you interested in making connections to IM servers, or accepting connections from IM clients?  Which protocols are you interested in?

Words' documentation is somewhat sparse, but maybe with a specific question, someone can suggest an example that might be useful.

Jean-Paul



From mslimmer at csbuilders.net  Tue Nov  8 14:29:29 2005
From: mslimmer at csbuilders.net (Max Slimmer)
Date: Tue, 8 Nov 2005 11:29:29 -0800
Subject: [Twisted-Python] help with twisted and WORDS
In-Reply-To: <20051108191336.10365.529855927.divmod.quotient.5267@ohm>
Message-ID: <FHEKLMLGOFBCCMNGMAEJAEAADDAA.mslimmer@csbuilders.net>

I want to connect with IM clients. I would like to talk with all of the
current IM protocols. I want to send an invitation to a client and then go
into a chat/dialog.

max

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Jean-Paul
> Calderone
> Sent: Tuesday, November 08, 2005 11:14 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] help with twisted and WORDS
>
>
> On Tue, 8 Nov 2005 10:46:22 -0800, Max Slimmer
> <mslimmer at csbuilders.net> wrote:
> >I am trying to use twisted to connect with IM servers/clients. I
> have read
> >all of the docs for twisted and am very impressed, it is really cool.
> >However I have tried to get the WORDS examples to work, without
> much luck,
> >and the sources don't have an over abundance of comments.  I have ordered
> >the book, hoping that will help, is there any other resources that might
> >help expidite the learning curve, both for twisted and the WORDS
> interfaces.
> >
>
> Are you interested in making connections to IM servers, or
> accepting connections from IM clients?  Which protocols are you
> interested in?
>
> Words' documentation is somewhat sparse, but maybe with a
> specific question, someone can suggest an example that might be useful.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From justinjohnson at gmail.com  Tue Nov  8 16:04:17 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 8 Nov 2005 15:04:17 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] r15062 - Upon
	ERROR_SEM_TIMEOUT, don't drop connection - resolves 1244
In-Reply-To: <1131475114.8993.17.camel@localhost.localdomain>
References: <E1EZXHK-00082m-00@wolfwood>
	<1131475114.8993.17.camel@localhost.localdomain>
Message-ID: <94a776e70511081304w3c93f937wcd6e7c01a729be4b@mail.gmail.com>

It wasn't a mistake. I commented on it in my commit message, but it wasn't
on the first line so it didn't get in the title of the commit email. But you
may be right that it shouldn't be skipped. I'll look at it further when I
get time.
 Thanks,
Justin

 On 11/8/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
> On Tue, 2005-11-08 at 10:29 -0700, Justin Johnson wrote:
> > Author: justinj
> > Date: Tue Nov 8 10:29:02 2005
> > New Revision: 15062
> >
> > Modified:
> > branches/justinj/issue1008/twisted/conch/test/test_text.py
>
> Was this committed by mistake? Unless the test actually outputs to
> terminal I don't see why the test shouldn't run.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051108/b4b871b9/attachment.htm 

From exarkun at divmod.com  Tue Nov  8 17:46:48 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 8 Nov 2005 17:46:48 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15071 - More test cleanup
	and bug fixes.
In-Reply-To: <E1EZb2w-0008Br-00@wolfwood>
Message-ID: <20051108224648.10365.1441914986.divmod.quotient.5368@ohm>

On Tue, 08 Nov 2005 14:30:26 -0700, Justin Johnson 
>Modified: branches/justinj/issue1008/twisted/web/test/test_cgi.py
>==============================================================================
>--- branches/justinj/issue1008/twisted/web/test/test_cgi.py	(original)
>+++ branches/justinj/issue1008/twisted/web/test/test_cgi.py	Tue Nov  8 14:30:26 2005
>@@ -40,6 +40,11 @@
> print "readallinput ok"
> '''
>
>+if sys.platform.startswith('win'):
>+    EOL = '\r\n'
>+else:
>+    EOL = '\n'
>+

twisted.python.runtime.platform is better thing to check, here.  But rather than checking the platform type, how about using os.linesep?

Jean-Paul



From honeyday.mj at gmail.com  Tue Nov  8 20:48:10 2005
From: honeyday.mj at gmail.com (=?GB2312?B?wu3MpLfJ0eA=?=)
Date: Wed, 9 Nov 2005 09:48:10 +0800
Subject: [Twisted-Python] Twisted missing OpenSSL-Package?
In-Reply-To: <a07b86220511080644g1b4e5e33v@mail.gmail.com>
References: <a07b86220511080644g1b4e5e33v@mail.gmail.com>
Message-ID: <767559b0511081748y74330958o@mail.gmail.com>

2005/11/8, Franz Buchinger <fbuchinger at gmail.com>:
> Hi,
>
> I tried to install MoinMoin Wiki http://moinmoin.wikiwikiweb.de/ in
> Combination with Twisted as Webserver under Windows XP.
>
> When i  launch Mointwisted.cmd on the command line, it dies with the
> following error messages:
>
> C:\Python24\scripts\moin-1.3.5>mointwisted
> Traceback (most recent call last):
>  File "C:\Python24\scripts\twistd.py", line 25, in ?
>    run()
>  File "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 51, in r
> un
>    app.run(runApp, ServerOptions)
>  File "C:\Python24\Lib\site-packages\twisted\application\app.py", line 271, in
> run
>    runApp(config)
>  File "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 35, in r
> unApp
>    application = app.getApplication(config, passphrase)
> --- <exception caught here> ---
>  File "C:\Python24\Lib\site-packages\twisted\application\app.py", line 156, in
> getApplication
>    application = service.loadApplication(filename, style, passphrase)
>  File "C:\Python24\Lib\site-packages\twisted\application\service.py", line 303,
>  in loadApplication
>    application = sob.loadValueFromFile(filename, 'application', passphrase)
>  File "C:\Python24\Lib\site-packages\twisted\persisted\sob.py", line 209, in lo
> adValueFromFile
>    exec fileObj in d, d
>  File "mointwisted.py", line 27, in ?
>    from MoinMoin.server.twistedmoin import TwistedConfig, makeApp
>  File "C:\Python24\scripts\moin-1.3.5\MoinMoin\server\twistedmoin.py", line 27,
>  in ?
>    from twisted.internet import threads, reactor, ssl
>  File "C:\Python24\lib\site-packages\twisted\internet\ssl.py", line 47, in ?
>    from OpenSSL import SSL
> exceptions.ImportError: No module named OpenSSL
>
> Failed to load application: No module named OpenSSL
>
> Obviously, Twisted is missing an OpenSSL package. Which packages do I
> need to enable SSL-Support in Python under Windows?
>
> Thanx in advance,
>
> Franz


You can download the OpenSSL package from
http://twistedmatrix.com/products/download

See the "Twisted Dependencies for Windows" section.



From mslimmer at csbuilders.net  Tue Nov  8 21:17:29 2005
From: mslimmer at csbuilders.net (Max Slimmer)
Date: Tue, 8 Nov 2005 18:17:29 -0800
Subject: [Twisted-Python] Twisted missing OpenSSL-Package?
In-Reply-To: <767559b0511081748y74330958o@mail.gmail.com>
Message-ID: <FHEKLMLGOFBCCMNGMAEJMEAFDDAA.mslimmer@csbuilders.net>

You can get pyOpenSSL here http://pyopenssl.sourceforge.net/

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of ????????
> Sent: Tuesday, November 08, 2005 5:48 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Twisted missing OpenSSL-Package?
>
>
> 2005/11/8, Franz Buchinger <fbuchinger at gmail.com>:
> > Hi,
> >
> > I tried to install MoinMoin Wiki http://moinmoin.wikiwikiweb.de/ in
> > Combination with Twisted as Webserver under Windows XP.
> >
> > When i  launch Mointwisted.cmd on the command line, it dies with the
> > following error messages:
> >
> > C:\Python24\scripts\moin-1.3.5>mointwisted
> > Traceback (most recent call last):
> >  File "C:\Python24\scripts\twistd.py", line 25, in ?
> >    run()
> >  File
> "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 51, in r
> > un
> >    app.run(runApp, ServerOptions)
> >  File
> "C:\Python24\Lib\site-packages\twisted\application\app.py", line 271, in
> > run
> >    runApp(config)
> >  File
> "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 35, in r
> > unApp
> >    application = app.getApplication(config, passphrase)
> > --- <exception caught here> ---
> >  File
> "C:\Python24\Lib\site-packages\twisted\application\app.py", line 156, in
> > getApplication
> >    application = service.loadApplication(filename, style, passphrase)
> >  File
> "C:\Python24\Lib\site-packages\twisted\application\service.py", line 303,
> >  in loadApplication
> >    application = sob.loadValueFromFile(filename, 'application',
> passphrase)
> >  File "C:\Python24\Lib\site-packages\twisted\persisted\sob.py",
> line 209, in lo
> > adValueFromFile
> >    exec fileObj in d, d
> >  File "mointwisted.py", line 27, in ?
> >    from MoinMoin.server.twistedmoin import TwistedConfig, makeApp
> >  File
> "C:\Python24\scripts\moin-1.3.5\MoinMoin\server\twistedmoin.py", line 27,
> >  in ?
> >    from twisted.internet import threads, reactor, ssl
> >  File "C:\Python24\lib\site-packages\twisted\internet\ssl.py",
> line 47, in ?
> >    from OpenSSL import SSL
> > exceptions.ImportError: No module named OpenSSL
> >
> > Failed to load application: No module named OpenSSL
> >
> > Obviously, Twisted is missing an OpenSSL package. Which packages do I
> > need to enable SSL-Support in Python under Windows?
> >
> > Thanx in advance,
> >
> > Franz
>
>
> You can download the OpenSSL package from
> http://twistedmatrix.com/products/download
>
> See the "Twisted Dependencies for Windows" section.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From foom at fuhm.net  Wed Nov  9 02:00:12 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 09 Nov 2005 00:00:12 -0700
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1EZjwK-0001Oj-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2005-11-02 07:00:02.200000:
 Bugs opened: 15   Bugs closed: 21   Total open bugs: 480 (-6)
  Urgent: 1 (-2)
  Bug: 231 (-8)
  Feature: 169 (+3)
  Wish: 79 (+1)

New / Reopened Bugs
______________________
                    ==== Bug ====
IOCP dataReceived called after connectionLost  (11 hours ago)
       http://twistedmatrix.com/bugs/issue1321 opened by justinj

[TRIAL] trial TestImportErrors tests fail on Windows due to in use files  (yesterday)
       http://twistedmatrix.com/bugs/issue1317 opened by justinj

[TRIAL] trial shouldn't print ascii color codes on Windows  (yesterday)
       http://twistedmatrix.com/bugs/issue1316 opened by justinj

[BACKPORT, CORE] startTLS() leaks memory  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1308 opened by exarkun

iocpreactor initiateOp invalid argument  (3 days ago)
       http://twistedmatrix.com/bugs/issue1309 opened by ghazel

[MAIL] IMAP4 Body parts fetch error  (6 days ago)
       http://twistedmatrix.com/bugs/issue1307 opened by therve

                    ==== Feature ====
[WEBSITE] Show current version of projects in sidebar, projects page  (11 hours ago)
       http://twistedmatrix.com/bugs/issue1320 opened by itamarst

[TRIAL] TestCase.contend -- mimic py.test's stack introspection  (yesterday)
       http://twistedmatrix.com/bugs/issue1319 opened by jml

[RELEASE MANAGEMENT] document Sumo building  (yesterday)
       http://twistedmatrix.com/bugs/issue1318 opened by radix

                    ==== Wish ====
once more for good measure (t-b test)  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1315 opened by radix

twisted-bugs test  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1314 opened by radix

another twisted-bugs test, what's going on?  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1313 opened by radix

yay twisted-bugs test  (3 days ago)
       http://twistedmatrix.com/bugs/issue1312 opened by radix

test issue twisted-bugs test  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1311 opened by radix

test issue, ignore  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1310 opened by radix

Bugs Closed
______________________
                    ==== Urgent ====
[CORE] Include new zope.interface in sumo (so we get the gcc4 compilation fix)  (1 month ago)
       http://twistedmatrix.com/bugs/issue1259 opened by itamarst, closed by radix

Release 2.1 (Sumo)  (5 months ago)
       http://twistedmatrix.com/bugs/issue1055 opened by jknight, closed by radix

                    ==== Bug ====
[CORE, TESTS] twisted.test.test_udp.testRebind makes no sense  (1 week ago)
       http://twistedmatrix.com/bugs/issue1295 opened by exarkun, closed by exarkun

roundup shouldn't set status to chatting unless status is new or resolved  (10 months ago)
       http://twistedmatrix.com/bugs/issue833 opened by jknight, closed by radix

[WEBSITE] tm bugtracker sends wrong confirmation emails  (20 months ago)
       http://twistedmatrix.com/bugs/issue522 opened by thomaswaldmann, closed by radix

[WEBSITE] Unification of products and projects.  (6 months ago)
       http://twistedmatrix.com/bugs/issue1034 opened by dreid, closed by radix

[WEBSITE] Sort out redirects from old products website hierachy  (7 months ago)
       http://twistedmatrix.com/bugs/issue938 opened by hypatia, closed by radix

[RELEASE MANAGEMENT] Set up roundup instances and separate build steps on slaves for individual Twisted subprojects  (7 months ago)
       http://twistedmatrix.com/bugs/issue943 opened by radix, closed by radix

[DOCUMENTATION, WEB, WEBSITE] http://twistedmatrix.com/products/web has a broken link to docs.  (1 month ago)
       http://twistedmatrix.com/bugs/issue1204 opened by spiv, closed by radix

[WEBSITE] twisted-versions.txt should be in svn  (6 months ago)
       http://twistedmatrix.com/bugs/issue1035 opened by dreid, closed by radix

roundup bug?  (5 months ago)
       http://twistedmatrix.com/bugs/issue1070 opened by maoy, closed by radix

[BACKPORT, CORE] startTLS() leaks memory  (4 days ago)
       http://twistedmatrix.com/bugs/issue1308 opened by exarkun, closed by spiv

twisted-bugs list is broken  (4 months ago)
       http://twistedmatrix.com/bugs/issue1101 opened by exarkun, closed by radix

[CORE] iocpreactor\abstract needs to import socket  (1 month ago)
       http://twistedmatrix.com/bugs/issue1233 opened by ghazel, closed by justinj

win32reactor spawnProcess incorrectly escapes cmd line  (3 months ago)
       http://twistedmatrix.com/bugs/issue1123 opened by justinj, closed by justinj

                    ==== Feature ====
[WORDS] [PATCH] twisted words irc patch for usernames  (1 week ago)
       http://twistedmatrix.com/bugs/issue1302 opened by avleenvig, closed by exarkun

                    ==== Wish ====
once more for good measure (t-b test)  (3 days ago)
       http://twistedmatrix.com/bugs/issue1315 opened by radix, closed by radix

twisted-bugs test  (3 days ago)
       http://twistedmatrix.com/bugs/issue1314 opened by radix, closed by radix

another twisted-bugs test, what's going on?  (3 days ago)
       http://twistedmatrix.com/bugs/issue1313 opened by radix, closed by radix

test issue twisted-bugs test  (3 days ago)
       http://twistedmatrix.com/bugs/issue1311 opened by radix, closed by radix

test issue, ignore  (3 days ago)
       http://twistedmatrix.com/bugs/issue1310 opened by radix, closed by radix




From mark at junklight.com  Wed Nov  9 04:32:07 2005
From: mark at junklight.com (markw)
Date: Wed, 9 Nov 2005 09:32:07 +0000
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <d06a5cd30511070547o59a504e2p@mail.gmail.com>
References: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>
	<20051106022657.10365.1687580705.divmod.quotient.4496@ohm>
	<d06a5cd30511070547o59a504e2p@mail.gmail.com>
Message-ID: <FC5A7D49-45C9-48BD-853E-B80D6628E8C7@junklight.com>

Out of interest: Why would someone still running python 2.2 be trying  
to use the *latest* twisted?

Given they are not interested in running the latest and greatest  
python surely they would be happy with an older version of twisted.  
Having a "last version compatible with 2.2" available for download  
would solve this problem no?

mark





On 7 Nov 2005, at 13:47, Jonathan Lange wrote:

> On 06/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>>> You are confused. At least two people were *for* dropping 2.2  
>>> support
>>> in this thread, and nobody was against it. I'm pretty sure several
>>> others have been for dropping it on IRC, as well.
>>
>> Confused, perhaps.  Or perhaps their positions were voiced with  
>> such limited enthusiasm I just forgot about them :)
>
> My apologies.  I often try to restrain my enthusiasm for fear that
> excess emotion will sidetrack rational discussion.  I am very keen to
> ditch Python 2.2 support.
>
>> It's a pretty good list, I must admit.  But I wonder what the  
>> specific gains to Twisted will be.  Just having a list of things  
>> Python 2.3 can do that Python 2.2 cannot does not seem compelling  
>> to me.
>
> One specific gain already mentioned is that we get to remove a bunch
> of code. Less code means fewer bugs and less work. It might even
> improve our test coverage.
>
> Here's a list of stuff (shamelessly grepped) that could probably be
> simplified if we dropped 2.2 support:
>
> twisted/conch/test/test_filetransfer.py:        # XXX: Remove 'uid'
> and 'gid', because python 2.2 doesn't have os.lchown, so we just skip
> that bit (dodgy!)
> twisted/conch/unix.py:            # XXX: Python 2.2 doesn't have  
> os.lchown!
> twisted/internet/error.py:        # only works in 2.2
> twisted/python/dist.py:    Python 2.2's distutils. Pretty similar
> arguments to getDataFiles,
> twisted/python/dist.py:# Apple distributes a nasty version of Python
> 2.2 w/ all release builds of
> twisted/python/dist.py:    Changes behavior in Python 2.2 to support
> simultaneous specification twisted/python/reflect.py:    This is a
> 2.2-only alternative to the Accessor mixin - just set in your
> twisted/python/zshcomp.py:# in case of python2.2 ...
> twisted/test/test_compat.py:        # without replacing isinstance on
> 2.2 as well :(
> twisted/topfiles/setup.py:# 2.2 doesn't have __file__ in main-scripts.
> twisted/trial/unittest.py:        # only overriding this because
> Python 2.2's unittest has a broken
> twisted/trial/unittest.py:        """a python2.2 friendly test to
> assert that substring is found in astring
> twisted/trial/unittest.py:        """a python2.2 friendly test to
> assert that substring is not found in
> twisted/trial/unittest.py:        # FIXME: when we drop support for
> python 2.2 and start to require 2.3,
> twisted/conch/ssh/filetransfer.py:        isFile, name =
> self.wasAFile[d] # replace with get when we're at 2.3
> twisted/lore/lint.py:# parser.suite in Python 2.3 raises SyntaxError,
> <2.3 raises parser.ParserError
> twisted/scripts/trial.py:        (relative to _trial_temp). Requires
> Python 2.3.3."""
> twisted/spread/jelly.py:            raise
> NotImplementedError("Datetime unserializing not supported in Python <
> 2.3")
> twisted/trial/runner.py:                          "python 2.3 or
> later, not running doctests")
> twisted/trial/runner.py:                          "python 2.3 or
> later, not running doctests")
> twisted/trial/test/test_doctest.py:    skip = 'doctest support only
> works on 2.3 or later'
> twisted/trial/test/test_doctest.py:        # doctest reports failures
> as errors in 2.3
> twisted/trial/test/test_failure_formatting.py:                'doctest
> support only works in Python 2.3 or later')
> twisted/words/protocols/jabber/xmpp_stringprep.py:
> "recommended you upgrade to Python 2.3.2 or newer if you "
>
> Plus the modules in twisted/python/pymodules.
>
> As you can see, Trial carries a fair part of the 2.2 support burden.
> I'm eager to be rid of it.
>
> cheers,
> jml
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mark at junklight.com  Wed Nov  9 04:34:39 2005
From: mark at junklight.com (markw)
Date: Wed, 9 Nov 2005 09:34:39 +0000
Subject: [Twisted-Python] Twisted Oreilly Book Released on Safari
In-Reply-To: <4370BE97.7040301@fettig.net>
References: <E1EYTGm-0007HA-01@pyramid.twistedmatrix.com>
	<436F809B.5020504@fuse.net> <4370BE97.7040301@fettig.net>
Message-ID: <FF393414-894B-48FF-8A12-320769FEA386@junklight.com>

Abe,

my copy arrived this week - excellent book.

looking forward to volume II   ;-)

mark

On 8 Nov 2005, at 15:04, Abe Fettig wrote:

> Michael Schneider wrote:
>> The new twisted book is on O'Reilly Safari!!!!  The new twisted  
>> book is
>> on  O'Reilly!!!!!!!!!!
>>
>>
>> Thanks to all who worked to put this together.  Nice Piece of  
>> work.  I
>> just finished the second
>> chapter and can't wait to finish it!!!!!!!!!
>
> I'm glad you're enjoying it! :-)
>
> Abe
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From william.lewis at uk.bnpparibas.com  Wed Nov  9 05:54:29 2005
From: william.lewis at uk.bnpparibas.com (william.lewis at uk.bnpparibas.com)
Date: Wed, 9 Nov 2005 10:54:29 +0000
Subject: [Twisted-Python] Using pb/jelly for large objects
Message-ID: <OF56C049E5.89C53FA4-ON802570B4.0035D8FB-802570B4.003BEB9B@bnpparibas.com>

Hi,

I am looking to build a system that runs multiple processes across a LAN 
of win32 machines. The processes will be initialised with a large amount 
of data at startup, followed by many more smaller chunks of data with the 
results being returned across the network. I would like to 
represent/transfer the data using your pb.Copyable and/or pb.Cacheable 
objects. My main question relates to the fact that pb uses jelly to 
serialise these objects. Particularly the comments at the top of the jelly 
module that emphasise the fact that jelly should have a lot more 
optimization in order to gain acceptable large-scale performance and that, 
compared to pickle, jelly is a more portable, human readable, less 
efficient mechanism.

So, would you use pb/jelly for transferring large chunks of data (e.g. 
~10s MB) to multiple nodes on a LAN?
If not, could pb be used with, for example, pickle instead of jelly?
Also, I notice that the pb, jelly and flavors modules are all classified 
as semi-stable. Could you give an indication of what this means in 
practice?

Thank you for your time. I think you have built a very useful/powerful 
framework and am looking forward to using it.

Regards,

Will Lewis


This message and any attachments (the "message") is 
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and
immediately notify the sender. Any use not in accord with
its purpose, any dissemination or disclosure, either whole
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message.
BNP PARIBAS (and its subsidiaries) shall (will) not
therefore be liable for the message if modified. 

**********************************************************************************************

BNP Paribas Private Bank London Branch is authorised
by CECEI & AMF and is regulated by the Financial Services
Authority for the conduct of its investment business in
the United Kingdom.

BNP Paribas Securities Services London Branch is authorised 
by CECEI & AMF and is regulated by the Financial Services 
Authority for the conduct of its investment business in 
the United Kingdom.
  
BNP Paribas Fund Services UK Limited is authorised and 
regulated by the Financial Services Authority

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051109/5d7ab43f/attachment.htm 

From exarkun at divmod.com  Wed Nov  9 08:58:40 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 9 Nov 2005 08:58:40 -0500
Subject: [Twisted-Python] Using pb/jelly for large objects
In-Reply-To: <OF56C049E5.89C53FA4-ON802570B4.0035D8FB-802570B4.003BEB9B@bnpparibas.com>
Message-ID: <20051109135840.10365.832801366.divmod.quotient.5705@ohm>

On Wed, 9 Nov 2005 10:54:29 +0000, william.lewis at uk.bnpparibas.com wrote:
>Hi,
>
>I am looking to build a system that runs multiple processes across a LAN
>of win32 machines. The processes will be initialised with a large amount
>of data at startup, followed by many more smaller chunks of data with the
>results being returned across the network. I would like to
>represent/transfer the data using your pb.Copyable and/or pb.Cacheable
>objects. My main question relates to the fact that pb uses jelly to
>serialise these objects. Particularly the comments at the top of the jelly
>module that emphasise the fact that jelly should have a lot more
>optimization in order to gain acceptable large-scale performance and that,
>compared to pickle, jelly is a more portable, human readable, less
>efficient mechanism.
>
>So, would you use pb/jelly for transferring large chunks of data (e.g.
>~10s MB) to multiple nodes on a LAN?
>If not, could pb be used with, for example, pickle instead of jelly?

Depends on the form of the data.  If it is represented locally as large strings, or lists of integers or floats, or some other simple structure such as that, I would probably use a PB control channel and a secondary data channel.  The secondary channel could speak a trivial protocol, such as int32strings, which would be much faster than any general object serialization mechanism.

Of course, this is just an optimization.  I'd probably start out passing the data inline, and only worry about this once I saw it was causing problems, though keeping this in mind so the APIs are amenable to the change.

>Also, I notice that the pb, jelly and flavors modules are all classified
>as semi-stable. Could you give an indication of what this means in
>practice?

PB hasn't changed in a manner that is not backwards compatible in years.  There is, of course, the looming juggernaut of newpb...

>
>Thank you for your time. I think you have built a very useful/powerful
>framework and am looking forward to using it.

Thanks :)  I hope you have fun building your application.

Jean-Paul



From amcouper at gmail.com  Wed Nov  9 10:05:14 2005
From: amcouper at gmail.com (Alex Couper)
Date: Wed, 9 Nov 2005 15:05:14 +0000
Subject: [Twisted-Python] Problems reconstructing object
In-Reply-To: <a8fa98110511090659gcf21a14ye3006cc1c08e6052@mail.gmail.com>
References: <a8fa98110511090659gcf21a14ye3006cc1c08e6052@mail.gmail.com>
Message-ID: <a8fa98110511090705m4ec2b0e1v7c6bc9233244f959@mail.gmail.com>

In the documentation for pb.RemoteCopy it says " NOTE: copiers are invoked
with no arguments. Do not implement a constructor which requires args in a
subclass of RemoteCopy!", however, upon sending an object across my wire,
into an empty constructor, I get this error message:

exceptions.TypeError: __init__() takes exactly 1 arguments (3 given)

I've printed out the arguments given, one is of type _Unjellier, and one is
a list of the elements that I sent across.

It is not recreating the object correctly at the reciever side. Do you know
of any reasons why this might be? The reciever class inherits from
pb.RemoteCopy as well as the class that object sent is an instance of. I
know that it is not being created correctly because there are variables that
no longer exist on the receiver side that did when I sent it. Very strange.

Thanks

Alex Couper
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051109/529bb6aa/attachment.htm 

From justinjohnson at gmail.com  Wed Nov  9 10:05:19 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 9 Nov 2005 09:05:19 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] r15071 - More test cleanup
	and bug fixes.
In-Reply-To: <20051108224648.10365.1441914986.divmod.quotient.5368@ohm>
References: <E1EZb2w-0008Br-00@wolfwood>
	<20051108224648.10365.1441914986.divmod.quotient.5368@ohm>
Message-ID: <94a776e70511090705u5737a389r21714dae6d88502b@mail.gmail.com>

Fixed. Thanks.

On 11/8/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Tue, 08 Nov 2005 14:30:26 -0700, Justin Johnson
> >Modified: branches/justinj/issue1008/twisted/web/test/test_cgi.py
>
> >==============================================================================
> >--- branches/justinj/issue1008/twisted/web/test/test_cgi.py (original)
> >+++ branches/justinj/issue1008/twisted/web/test/test_cgi.py Tue Nov 8
> 14:30:26 2005
> >@@ -40,6 +40,11 @@
> > print "readallinput ok"
> > '''
> >
> >+if sys.platform.startswith('win'):
> >+ EOL = '\r\n'
> >+else:
> >+ EOL = '\n'
> >+
>
> twisted.python.runtime.platform is better thing to check, here. But rather
> than checking the platform type, how about using os.linesep?
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051109/92288f53/attachment.htm 

From lycka at carmensystems.com  Wed Nov  9 12:05:33 2005
From: lycka at carmensystems.com (Magnus Lycka)
Date: Wed, 09 Nov 2005 18:05:33 +0100
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <FC5A7D49-45C9-48BD-853E-B80D6628E8C7@junklight.com>
References: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>	<20051106022657.10365.1687580705.divmod.quotient.4496@ohm>	<d06a5cd30511070547o59a504e2p@mail.gmail.com>
	<FC5A7D49-45C9-48BD-853E-B80D6628E8C7@junklight.com>
Message-ID: <43722C5D.901@carmensystems.com>

markw wrote:

> Out of interest: Why would someone still running python 2.2 be trying  
> to use the *latest* twisted?

Someone running Python 2.2 might still need a bug fixed in Twisted.

> Given they are not interested in running the latest and greatest  
> python surely they would be happy with an older version of twisted.  
> Having a "last version compatible with 2.2" available for download  
> would solve this problem no?

This is a good idea, even if it doesn't solve the whole problem!

(Personally I'm a bit torn. We use Twisted on RH EL3 boxes, but
I'd rather see that we upgraded to a newer Python. That Twisted
requires 2.3 could help... :)




From mary-twisted at puzzling.org  Wed Nov  9 19:03:42 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 10 Nov 2005 11:03:42 +1100
Subject: [Twisted-Python] One day Twisted documentation sprint
Message-ID: <20051110000341.GA4443@home.puzzling.org>

After the success of the virtual sprint a month back, I suggested that
at some point there might be smaller, more tightly focussed sprints
coming up.

I'd like to run a one day Twisted documentation sprint. Please note that
while I want and need input from both Twisted experts and Twisted
newbies, I won't have much tolerance for general whining about the state
of Twisted documentation. (Not that I've ever exhibited much tolerance
of this kind.) We need highly specific whining!

This sprint will hopefully be the first in a series, and it will be
focussed on *reading* the documentation, rather than writing it. We
would therefore especially welcome the input of people who are either
users of the documentation, or want the documentation improved but don't
want to write it.

We will focus on reviewing present documentation against the following
criteria:

 - does it reflect best practices for Twisted coders?
 - is it up-to-date?
 - is it complete?

For people who are newer to Twisted, reviews on the general useability
of any particular piece of Twisted documentation as per my post at
http://twistedmatrix.com/pipermail/twisted-python/2005-May/010386.html

This sprint will likely be held in early December and coordinated over
IRC. Can people particularly interested in participating please contact
me off-list with the following information:

 - level of Twisted experience
 - existing knowledge of the documentation
 - preferred day(s) of the week for sprinting
 - preferred hours for sprinting (please give these in UTC)

I'll base the time and date, and to some extent the activities off this
feedback.

-Mary

-- 
<skreech> THE SENSOR NETWORK IS DOWN
* skreech pilots his shrike into the side of #python



From mary-twisted at puzzling.org  Wed Nov  9 19:51:13 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 10 Nov 2005 11:51:13 +1100
Subject: [Twisted-Python] One day Twisted documentation sprint
In-Reply-To: <20051110000341.GA4443@home.puzzling.org>
References: <20051110000341.GA4443@home.puzzling.org>
Message-ID: <20051110005113.GB4780@home.puzzling.org>

On Thu, Nov 10, 2005, Mary Gardiner wrote:
>  - preferred hours for sprinting (please give these in UTC)

Btw I find http://www.timeanddate.com/worldclock/meeting.html helpful
for working UTC time ranges out. Please do it though: I'm specifically
asking so that I don't have to sit down with some mega spreadsheet and
work out what "yeah, nighttime in Oslo, except probably only until 3am"
means.

-Mary

-- 
<glyph> now you're probably wondering how to run cvs
<samuel> actually i was thinking of naked women.
<samuel> but sure.



From cooz at ee.oulu.fi  Thu Nov 10 07:27:31 2005
From: cooz at ee.oulu.fi (Mika Seppanen)
Date: Thu, 10 Nov 2005 14:27:31 +0200
Subject: [Twisted-Python] [patch] Performance of Conch/SSH
Message-ID: <200511101227.jAACRVj6028306@ee.oulu.fi>


When I was profiling my code I noticed that most of time is spent on simple counter in twisted/conch/ssh/transport.py. So I rewrote _Counter-class. My version is about 5 times faster than orginal and data transfer rate is almost doubled. Maybe someone could check that this is not breaking anything?

Mika

--- transport.py	2005-11-10 13:26:01.826437000 +0200
+++ transport.py.new	2005-11-10 13:35:57.804232000 +0200
@@ -20,6 +20,7 @@
 import sha
 import zlib
 import math # for math.log
+import array
 
 # external library imports
 from Crypto import Util
@@ -727,17 +728,22 @@
         iv=iv[:mod.block_size]
         self.count = getMP('\xff\xff\xff\xff'+iv)[0]
         self.bs = mod.block_size
+        self.count = Util.number.long_to_bytes(self.count - 1)
+        self.count = '\x00'*(self.bs-len(self.count)) + self.count
+        self.count = array.array('c', self.count) 
+        self.len = len(self.count) - 1
+
     def __call__(self):
-        ret = MP(self.count)[4:]
-        if ret[0]=='\x00':
-            ret=ret[1:]
-        if len(ret) < self.bs:
-            ret = '\x00'*(self.bs-len(ret)) + ret
-        self.count += 1
-        if self.count == 2L ** self.bs:
-            self.count = 0
-        return ret
+        i = self.len
+        while i > -1:
+            self.count[i] = n = chr((ord(self.count[i]) + 1) % 256)
+            if n == '\x00':
+                i -= 1
+            else:
+                return self.count.tostring()
 
+        self.count = array.array('c', '\x00'*self.bs)
+        return self.count.tostring()
 
 def buffer_dump(b, title = None):
     r = title or ''



From itamar at itamarst.org  Thu Nov 10 11:02:55 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Nov 2005 11:02:55 -0500
Subject: [Twisted-Python] [patch] Performance of Conch/SSH
In-Reply-To: <200511101227.jAACRVj6028306@ee.oulu.fi>
References: <200511101227.jAACRVj6028306@ee.oulu.fi>
Message-ID: <1131638575.8998.6.camel@localhost.localdomain>

On Thu, 2005-11-10 at 14:27 +0200, Mika Seppanen wrote:
> When I was profiling my code I noticed that most of time is spent on
> simple counter in twisted/conch/ssh/transport.py. So I rewrote
> _Counter-class. My version is about 5 times faster than orginal and
> data transfer rate is almost doubled. Maybe someone could check that
> this is not breaking anything?

Hi,

Could you add this to http://twistedmatrix.com/bugs/? Thanks.




From itamar at itamarst.org  Thu Nov 10 12:03:24 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Nov 2005 12:03:24 -0500
Subject: [Twisted-Python] Issue tracker registration problems
Message-ID: <1131642205.8998.12.camel@localhost.localdomain>

Hi,

Chris upgraded the tracker to a new version, and looks like the upgrade
instructions weren't complete, so registration was broken. It should be
working again; if not, let us know on the list. Thanks!

http://twistedmatrix.com/bugs/




From garanin at m-lan.ru  Thu Nov 10 15:33:51 2005
From: garanin at m-lan.ru (Garanin Michael)
Date: Thu, 10 Nov 2005 23:33:51 +0300
Subject: [Twisted-Python] Twisted & ZODB
Message-ID: <1131654831.5097.43.camel@localhost>

                                                                          
Hello!
I am newcomer, and try develop Twisted+ZODB application. 
My questions: What is good practices used Twisted+ZODB? I think my code 
will be 'blocking'(where Deferred-source???) and my client-request
handler also will be 'blocking'. How do i simple solve
'blocking'-problem (DeferedToThread,...) ?
Thanks!




From glyph at divmod.com  Fri Nov 11 03:10:18 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 11 Nov 2005 03:10:18 -0500
Subject: [Twisted-Python] Twisted & ZODB
In-Reply-To: <1131654831.5097.43.camel@localhost>
Message-ID: <20051111081018.10365.1994807202.divmod.quotient.6556@ohm>

On Thu, 10 Nov 2005 23:33:51 +0300, Garanin Michael <garanin at m-lan.ru> wrote:

>I am newcomer, and try develop Twisted+ZODB application.
>My questions: What is good practices used Twisted+ZODB? I think my code
>will be 'blocking'(where Deferred-source???) and my client-request
>handler also will be 'blocking'. How do i simple solve
>'blocking'-problem (DeferedToThread,...) ?

deferToThread is probably a reasonable thing to do when writing code to work with ZODB, especially ZODB transactions, since ZODB more or less manages concurrency itself internally.

However, as has been discussed many times on this list, this is a very hard problem.  Do not expect deferToThread to be a "simple solution".

For example: Twisted is not thread safe except where *explicitly* noted, and you should be careful to not call any Twisted methods or functions from within your threaded ZODB code; your responses will all have to be processed and sent to the network through either callFromThread or within the callbacks to the deferreds returned from deferToThread.



From garanin at m-lan.ru  Fri Nov 11 07:24:49 2005
From: garanin at m-lan.ru (Garanin Michael)
Date: Fri, 11 Nov 2005 15:24:49 +0300
Subject: [Twisted-Python] 'big' function -> 'small' functions
Message-ID: <1131711888.6367.26.camel@localhost>

                                                                          
Hello!
I divide my 'big' function (3seconds) to 'small' functions (per 1
seconds). Now client handler process is:
request->f1/1second->f2/1second->f3/1second-> response. And f1,f2,f3
simple calc factorials. What is 'good practice' handlers two
clients-request (use callLater, iteration,pause etc.)?
Thanks!




From dhess at verscend.com  Fri Nov 11 09:26:03 2005
From: dhess at verscend.com (David K. Hess)
Date: Fri, 11 Nov 2005 08:26:03 -0600
Subject: [Twisted-Python] Unjelly - recursion limit reached
Message-ID: <4CD21D51-C31D-4AAC-980B-AE189FC748BE@verscend.com>


On Nov 7, 2005, at 8:42 AM, David K. Hess wrote:
> Bottom line, if all of these things are true, then I'm not sure  
> what is going wrong. Is it possible that jelly is at times walking  
> my object graph (which is interconnected to a certain degree and  
> changes dynamically) in such a way that it has to perform a  
> significant amount of recursion? In other words, maybe this isn't a  
> bug but I just need to increase the runtime recursion limit?
>
> FYI, here's a snippet of the exception:

I hate replying to my own post but I'm beginning to believe that  
recursion is the root of the problem and want to focus on it. From  
the exception trace, it looks like it takes on average 3.5 stack  
frames to unjelly a nested object. With a default recursion limit of  
1000 stack frames, this means that Twisted is limited to transferring  
an object graph that has a depth first traversal through it of length  
285 objects (roughly speaking). You could of course easily create a  
linked list of 285 objects to force the situation.

This is a pretty scary limitation. Is anybody working on a non- 
recursion based version of jelly? Am I going to have to move to  
Stackless Python?

Thanks.

Dave






From exarkun at divmod.com  Fri Nov 11 09:46:06 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 11 Nov 2005 09:46:06 -0500
Subject: [Twisted-Python] Unjelly - recursion limit reached
In-Reply-To: <4CD21D51-C31D-4AAC-980B-AE189FC748BE@verscend.com>
Message-ID: <20051111144606.10365.1554950071.divmod.quotient.6617@ohm>

On Fri, 11 Nov 2005 08:26:03 -0600, "David K. Hess" <dhess at verscend.com> wrote:
>
>On Nov 7, 2005, at 8:42 AM, David K. Hess wrote:
>>Bottom line, if all of these things are true, then I'm not sure  what is 
>>going wrong. Is it possible that jelly is at times walking  my object graph 
>>(which is interconnected to a certain degree and  changes dynamically) in 
>>such a way that it has to perform a  significant amount of recursion? In 
>>other words, maybe this isn't a  bug but I just need to increase the 
>>runtime recursion limit?
>>
>>FYI, here's a snippet of the exception:
>
>I hate replying to my own post but I'm beginning to believe that  recursion 
>is the root of the problem and want to focus on it. From  the exception 
>trace, it looks like it takes on average 3.5 stack  frames to unjelly a 
>nested object. With a default recursion limit of  1000 stack frames, this 
>means that Twisted is limited to transferring  an object graph that has a 
>depth first traversal through it of length  285 objects (roughly speaking). 
>You could of course easily create a  linked list of 285 objects to force the 
>situation.

Linked list?  Hee hee.  Crazy.

>
>This is a pretty scary limitation. Is anybody working on a non- recursion 
>based version of jelly? Am I going to have to move to  Stackless Python?

You can raise the recursion limit.  See sys.setrecursionlimit().

Stackless has nothing to do with this.  It won't help fix this problem.

The real way to "fix" this is to re-implement the jellying process iteratively.  Or, don't use such deeply nested objects.

Jean-Paul



From dhess at verscend.com  Fri Nov 11 10:11:42 2005
From: dhess at verscend.com (David K. Hess)
Date: Fri, 11 Nov 2005 09:11:42 -0600
Subject: [Twisted-Python] Unjelly - recursion limit reached
Message-ID: <C7BD3CFB-1DFB-4B72-BB12-C06FB5D787A2@verscend.com>

On Nov 11, 2005, at 8:46 AM, Jean-Paul Calderone wrote:

> On Fri, 11 Nov 2005 08:26:03 -0600, "David K. Hess"  
> <dhess at verscend.com> wrote:
>>
>> On Nov 7, 2005, at 8:42 AM, David K. Hess wrote:
>>> Bottom line, if all of these things are true, then I'm not sure   
>>> what is going wrong. Is it possible that jelly is at times  
>>> walking  my object graph (which is interconnected to a certain  
>>> degree and  changes dynamically) in such a way that it has to  
>>> perform a  significant amount of recursion? In other words, maybe  
>>> this isn't a  bug but I just need to increase the runtime  
>>> recursion limit?
>>>
>>> FYI, here's a snippet of the exception:
>>
>> I hate replying to my own post but I'm beginning to believe that   
>> recursion is the root of the problem and want to focus on it.  
>> From  the exception trace, it looks like it takes on average 3.5  
>> stack  frames to unjelly a nested object. With a default recursion  
>> limit of  1000 stack frames, this means that Twisted is limited to  
>> transferring  an object graph that has a depth first traversal  
>> through it of length  285 objects (roughly speaking). You could of  
>> course easily create a  linked list of 285 objects to force the  
>> situation.
>
> Linked list?  Hee hee.  Crazy.
>
>>
>> This is a pretty scary limitation. Is anybody working on a non-  
>> recursion based version of jelly? Am I going to have to move to   
>> Stackless Python?
>
> You can raise the recursion limit.  See sys.setrecursionlimit().

Yes, but with the standard Python build on Windows, you can only go  
up to 2000. So now, I can do 570 objects. I'm working on trying to  
track down editbin.exe so I can raise the stack size on python.exe  
and see how much farther I can go.

> Stackless has nothing to do with this.  It won't help fix this  
> problem.

Are we talking about the same thing? The key architectural feature of  
Stackless Python is "practically unlimited recursion". Forget about  
all the tasklet and channel stuff.

> The real way to "fix" this is to re-implement the jellying process  
> iteratively.  Or, don't use such deeply nested objects.

My object graph is a natural and clean data structure. I don't want  
to lose that just because of limitations in my tools.

Is this currently being addressed or in a road map? Am I unknowingly  
volunteering for it? :-o

Dave

>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python







From exarkun at divmod.com  Fri Nov 11 11:17:44 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 11 Nov 2005 11:17:44 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do want
	this stuff
In-Reply-To: <E1EaTUw-0001Bg-00@wolfwood>
Message-ID: <20051111161744.10365.1261812860.divmod.quotient.6639@ohm>

On Fri, 11 Nov 2005 00:38:58 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Fri Nov 11 00:38:56 2005
>New Revision: 15100
>
>Added:
>   branches/jml/trial-setupclass-death/twisted/trial/dijkstra.py
>      - copied unchanged from r15099, sandbox/jml/testresources/dijkstra.py
>   branches/jml/trial-setupclass-death/twisted/trial/priodict.py
>      - copied unchanged from r15099, sandbox/jml/testresources/priodict.py
>   branches/jml/trial-setupclass-death/twisted/trial/resources.py
>      - copied unchanged from r15099, sandbox/jml/testresources/resources.py
>   branches/jml/trial-setupclass-death/twisted/trial/test/test_optimizing_test_suite.py
>      - copied unchanged from r15099, sandbox/jml/testresources/test_optimizing_test_suite.py
>   branches/jml/trial-setupclass-death/twisted/trial/test/test_resourced_test_case.py
>      - copied unchanged from r15099, sandbox/jml/testresources/test_resourced_test_case.py
>   branches/jml/trial-setupclass-death/twisted/trial/test/test_test_loader.py
>      - copied unchanged from r15099, sandbox/jml/testresources/test_test_loader.py
>   branches/jml/trial-setupclass-death/twisted/trial/test/test_test_resource.py
>      - copied unchanged from r15099, sandbox/jml/testresources/test_test_resource.py
>Log:
>So I really do want this stuff
>

This seems to beg the question:

  Why?

So, consider it begged :)

Jean-Paul



From jml at mumak.net  Fri Nov 11 17:11:47 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 12 Nov 2005 09:11:47 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
Message-ID: <d06a5cd30511111411j64ae75fay@mail.gmail.com>

On 12/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 11 Nov 2005 00:38:58 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
> >Author: jml
> >Date: Fri Nov 11 00:38:56 2005
> >New Revision: 15100
> >
> >Added:
> >   branches/jml/trial-setupclass-death/twisted/trial/dijkstra.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/dijkstra.py
> >   branches/jml/trial-setupclass-death/twisted/trial/priodict.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/priodict.py
> >   branches/jml/trial-setupclass-death/twisted/trial/resources.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/resources.py
> >   branches/jml/trial-setupclass-death/twisted/trial/test/test_optimizing_test_suite.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/test_optimizing_test_suite.py
> >   branches/jml/trial-setupclass-death/twisted/trial/test/test_resourced_test_case.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/test_resourced_test_case.py
> >   branches/jml/trial-setupclass-death/twisted/trial/test/test_test_loader.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/test_test_loader.py
> >   branches/jml/trial-setupclass-death/twisted/trial/test/test_test_resource.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/test_test_resource.py
> >Log:
> >So I really do want this stuff
> >
>
> This seems to beg the question:
>
>   Why?
>
> So, consider it begged :)
>

Because I'm going to implement setUpClass using this stuff.

Why?

Because the current implementation is horrible, as discussed.



From radeex at gmail.com  Fri Nov 11 20:21:21 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 12 Nov 2005 12:21:21 +1100
Subject: [Twisted-Python] Unjelly - recursion limit reached
In-Reply-To: <20051111144606.10365.1554950071.divmod.quotient.6617@ohm>
References: <4CD21D51-C31D-4AAC-980B-AE189FC748BE@verscend.com>
	<20051111144606.10365.1554950071.divmod.quotient.6617@ohm>
Message-ID: <60ed19d40511111721v631988a8j9f0228597c2dc74@mail.gmail.com>

On 11/12/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 11 Nov 2005 08:26:03 -0600, "David K. Hess" <dhess at verscend.com> wrote:
> >This is a pretty scary limitation. Is anybody working on a non- recursion
> >based version of jelly? Am I going to have to move to  Stackless Python?
>
> You can raise the recursion limit.  See sys.setrecursionlimit().
>
> Stackless has nothing to do with this.  It won't help fix this problem.

Ehh, it will allow you to go to bounds only restricted by your memory
without segfaulting, unlike CPython. My machine can only go up to
2000some Python stackframes before segfaulting, I think. With
stackless, I could go to kajillions, probably.


--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From exarkun at divmod.com  Fri Nov 11 23:08:36 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 11 Nov 2005 23:08:36 -0500
Subject: [Twisted-Python] Unjelly - recursion limit reached
In-Reply-To: <60ed19d40511111721v631988a8j9f0228597c2dc74@mail.gmail.com>
Message-ID: <20051112040836.10365.1042543239.divmod.quotient.6857@ohm>

On Sat, 12 Nov 2005 12:21:21 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
>On 11/12/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Fri, 11 Nov 2005 08:26:03 -0600, "David K. Hess" <dhess at verscend.com> wrote:
>> >This is a pretty scary limitation. Is anybody working on a non- recursion
>> >based version of jelly? Am I going to have to move to  Stackless Python?
>>
>> You can raise the recursion limit.  See sys.setrecursionlimit().
>>
>> Stackless has nothing to do with this.  It won't help fix this problem.
>
>Ehh, it will allow you to go to bounds only restricted by your memory
>without segfaulting, unlike CPython. My machine can only go up to
>2000some Python stackframes before segfaulting, I think. With
>stackless, I could go to kajillions, probably.

That is only because you failed to raise your operating-system enforced stack limit (often controlled with the ulimit shell command).

Jean-Paul



From foom at fuhm.net  Sat Nov 12 09:31:43 2005
From: foom at fuhm.net (James Y Knight)
Date: Sat, 12 Nov 2005 09:31:43 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511111411j64ae75fay@mail.gmail.com>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
Message-ID: <A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>


On Nov 11, 2005, at 5:11 PM, Jonathan Lange wrote:
>> This seems to beg the question:
>>
>>   Why?
>>
>> So, consider it begged :)
>>
>>
>
> Because I'm going to implement setUpClass using this stuff.
>
> Why?
>
> Because the current implementation is horrible, as discussed.

Maybe this is a stupid question, but I'm confused as to why the  
implementation isn't straightforward, something along the lines of  
the following:

for each module to test:
   for each class that is a subclass of TestCase in module:
     testCase = class()
     testCase.setUpClass()
     for each method in testCase:
       testCase.setUp()
       testCase.method()
       testCase.tearDown()
     testCase.tearDownClass()

Now I now it has to be somewhat more complicated, due to error  
handling, deferred handling, suppress, etc, but it does seem like  
that would be the outline...can it not be?

James



From jml at mumak.net  Sat Nov 12 16:34:49 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 13 Nov 2005 08:34:49 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
	<A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
Message-ID: <d06a5cd30511121334u3c7675d0h@mail.gmail.com>

On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>
> On Nov 11, 2005, at 5:11 PM, Jonathan Lange wrote:
> >> This seems to beg the question:
> >>
> >>   Why?
> >>
> >> So, consider it begged :)
> >>
> >>
> >
> > Because I'm going to implement setUpClass using this stuff.
> >
> > Why?
> >
> > Because the current implementation is horrible, as discussed.
>
> Maybe this is a stupid question, but I'm confused as to why the
> implementation isn't straightforward, something along the lines of
> the following:
>
> for each module to test:
>    for each class that is a subclass of TestCase in module:
>      testCase = class()
>      testCase.setUpClass()
>      for each method in testCase:
>        testCase.setUp()
>        testCase.method()
>        testCase.tearDown()
>      testCase.tearDownClass()
>
> Now I now it has to be somewhat more complicated, due to error
> handling, deferred handling, suppress, etc, but it does seem like
> that would be the outline...can it not be?

The short answer: An instance of a TestCase subclass represents a single test.

jml



From foom at fuhm.net  Sat Nov 12 17:05:24 2005
From: foom at fuhm.net (James Y Knight)
Date: Sat, 12 Nov 2005 17:05:24 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511121334u3c7675d0h@mail.gmail.com>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
	<A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
	<d06a5cd30511121334u3c7675d0h@mail.gmail.com>
Message-ID: <B0F7F5DC-9A9F-47C5-A880-C748CCA790DB@fuhm.net>

On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
> On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>>
>> Maybe this is a stupid question, but I'm confused as to why the
>> implementation isn't straightforward, something along the lines of
>> the following:
>>
>> for each module to test:
>>    for each class that is a subclass of TestCase in module:
>>      testCase = class()
>>      testCase.setUpClass()
>>      for each method in testCase:
>>        testCase.setUp()
>>        testCase.method()
>>        testCase.tearDown()
>>      testCase.tearDownClass()
>>
>> Now I now it has to be somewhat more complicated, due to error
>> handling, deferred handling, suppress, etc, but it does seem like
>> that would be the outline...can it not be?
>>
>
> The short answer: An instance of a TestCase subclass represents a  
> single test.

But not to the user...if I set attributes on the instance, they stay  
set across all test methods. So what is this multiple-instance thing  
really for? Is this just an annoyance forced by unittest  
compatibility, or is there actually a reason for that complication?

James



From jml at mumak.net  Sat Nov 12 20:33:41 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 13 Nov 2005 12:33:41 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <B0F7F5DC-9A9F-47C5-A880-C748CCA790DB@fuhm.net>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
	<A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
	<d06a5cd30511121334u3c7675d0h@mail.gmail.com>
	<B0F7F5DC-9A9F-47C5-A880-C748CCA790DB@fuhm.net>
Message-ID: <d06a5cd30511121733s5ef06364l@mail.gmail.com>

On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
> > On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> >>
> >> Maybe this is a stupid question, but I'm confused as to why the
> >> implementation isn't straightforward, something along the lines of
> >> the following:
> >>
> >> for each module to test:
> >>    for each class that is a subclass of TestCase in module:
> >>      testCase = class()
> >>      testCase.setUpClass()
> >>      for each method in testCase:
> >>        testCase.setUp()
> >>        testCase.method()
> >>        testCase.tearDown()
> >>      testCase.tearDownClass()
> >>
> >> Now I now it has to be somewhat more complicated, due to error
> >> handling, deferred handling, suppress, etc, but it does seem like
> >> that would be the outline...can it not be?
> >>
> >
> > The short answer: An instance of a TestCase subclass represents a
> > single test.
>
> But not to the user...if I set attributes on the instance, they stay
> set across all test methods.

This is a bug, not a feature.

> So what is this multiple-instance thing
> really for? Is this just an annoyance forced by unittest
> compatibility, or is there actually a reason for that complication?

It's an annoyance forced by wanting to remove aforementioned bug and
by wanting to have clean code within trial.



From jml at mumak.net  Sat Nov 12 21:48:13 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 13 Nov 2005 13:48:13 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
	<A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
	<d06a5cd30511121334u3c7675d0h@mail.gmail.com>
	<B0F7F5DC-9A9F-47C5-A880-C748CCA790DB@fuhm.net>
	<d06a5cd30511121733s5ef06364l@mail.gmail.com>
Message-ID: <d06a5cd30511121848n5f8ae4bas@mail.gmail.com>

On 13/11/05, Jonathan Lange <jml at mumak.net> wrote:
> On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> > On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
> > > On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> > >>
> > >> Maybe this is a stupid question, but I'm confused as to why the
> > >> implementation isn't straightforward, something along the lines of
> > >> the following:
> > >>

Also, I should point out that implementing setUpClass using resources
will (probably -- I haven't benchmarked) make tests run faster.

Say you have a base:

class ComplexBase(unittest.TestCase):
  def setUpClass(self):
    """do complex stuff"""

  def tearDownClass(self):
    """do complex stuff"""

class A(ComplexBase):
  def test1(self):
    pass

class B(ComplexBase):
  def test2(self):
    pass

Then, with resources, the run order will be:
    setUpClass
    test1
    test2
    tearDownClass

As opposed to:
    setUpClass
    test1
    tearDownClass
    setUpClass
    test2
    tearDownClass



From exarkun at divmod.com  Sun Nov 13 00:12:03 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 13 Nov 2005 00:12:03 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
Message-ID: <20051113051203.10365.1020996324.divmod.quotient.7168@ohm>

On Sun, 13 Nov 2005 12:33:41 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>> On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
>> > On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>> >>
>> >> Maybe this is a stupid question, but I'm confused as to why the
>> >> implementation isn't straightforward, something along the lines of
>> >> the following:
>> >>
>> >> for each module to test:
>> >>    for each class that is a subclass of TestCase in module:
>> >>      testCase = class()
>> >>      testCase.setUpClass()
>> >>      for each method in testCase:
>> >>        testCase.setUp()
>> >>        testCase.method()
>> >>        testCase.tearDown()
>> >>      testCase.tearDownClass()
>> >>
>> >> Now I now it has to be somewhat more complicated, due to error
>> >> handling, deferred handling, suppress, etc, but it does seem like
>> >> that would be the outline...can it not be?
>> >>
>> >
>> > The short answer: An instance of a TestCase subclass represents a
>> > single test.
>>
>> But not to the user...if I set attributes on the instance, they stay
>> set across all test methods.
>
>This is a bug, not a feature.

Why is it a bug?

Jean-Paul



From exarkun at divmod.com  Sun Nov 13 00:16:04 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 13 Nov 2005 00:16:04 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511121848n5f8ae4bas@mail.gmail.com>
Message-ID: <20051113051604.10365.928224157.divmod.quotient.7170@ohm>

On Sun, 13 Nov 2005 13:48:13 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 13/11/05, Jonathan Lange <jml at mumak.net> wrote:
>> On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>> > On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
>> > > On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>> > >>
>> > >> Maybe this is a stupid question, but I'm confused as to why the
>> > >> implementation isn't straightforward, something along the lines of
>> > >> the following:
>> > >>
>
>Also, I should point out that implementing setUpClass using resources
>will (probably -- I haven't benchmarked) make tests run faster.
>
>Say you have a base:
>
>class ComplexBase(unittest.TestCase):
>  def setUpClass(self):
>    """do complex stuff"""
>
>  def tearDownClass(self):
>    """do complex stuff"""
>
>class A(ComplexBase):
>  def test1(self):
>    pass
>
>class B(ComplexBase):
>  def test2(self):
>    pass
>
>Then, with resources, the run order will be:
>    setUpClass
>    test1
>    test2
>    tearDownClass
>
>As opposed to:
>    setUpClass
>    test1
>    tearDownClass
>    setUpClass
>    test2
>    tearDownClass

This seems like a pretty major change in semantics.  I wonder if existing code that relies on the existing behavior can stand to have it made.

Jean-Paul



From foom at fuhm.net  Sun Nov 13 00:22:20 2005
From: foom at fuhm.net (James Y Knight)
Date: Sun, 13 Nov 2005 00:22:20 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511121848n5f8ae4bas@mail.gmail.com>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
	<A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
	<d06a5cd30511121334u3c7675d0h@mail.gmail.com>
	<B0F7F5DC-9A9F-47C5-A880-C748CCA790DB@fuhm.net>
	<d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<d06a5cd30511121848n5f8ae4bas@mail.gmail.com>
Message-ID: <7D1C008C-874E-44C5-B393-6FBA7409B050@fuhm.net>


On Nov 12, 2005, at 9:48 PM, Jonathan Lange wrote:
> Also, I should point out that implementing setUpClass using resources
> will (probably -- I haven't benchmarked) make tests run faster.
>
> Say you have a base:
> [snipped]

How about let's say I have a base:
class DBTestConnector:
     def setUpClass(self):
         if not self.can_connect():
             raise unittest.SkipTest, '%s: Cannot access db' %  
self.TEST_PREFIX

     def can_connect(self):
         raise NotImplementedError()

class SQLiteConnector(DBTestConnector):
     def can_connect(self):
         try: import sqlite
         except: return False
         return True
     def testPool(self):
         [...]

class PyPgSQLADBAPITestCase(DBTestConnector):
   [similar...]

Then, with resources, the run order will be:
   DBTestConnector.setUpClass. DEATH.

As opposed to
   SQLiteConnector.setUpClass
   SQLiteConnector. testPool
   PyPgSQLADBAPITestCase.setUpClass
   PyPgSQLADBAPITestCase. testPool

 From looking at twisted code, setUpClass is hardly ever shared via  
inheritance, and in the few places it is, none of them will be helped:
1) OldCredTestCase - calls warnings.filterWarnings, fast, also should  
be using suppress
2) SignalMixin, shouldn't exist
3) TLSTestCase, calls log.ignoreErrors, fast
4) DBTestConnector, uses attributes of derived classes, will break
5) CFTPClientTestBase, might actually be useful to only call once,  
except that all subclasses override setUpClass anyways.

James



From jml at mumak.net  Sun Nov 13 04:29:40 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 13 Nov 2005 20:29:40 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
References: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
Message-ID: <d06a5cd30511130129h1290f853o@mail.gmail.com>

On 13/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sun, 13 Nov 2005 12:33:41 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> >> On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
> >> > On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> >> >>
> >> >> Maybe this is a stupid question, but I'm confused as to why the
> >> >> implementation isn't straightforward, something along the lines of
> >> >> the following:
> >> >>
> >> >> for each module to test:
> >> >>    for each class that is a subclass of TestCase in module:
> >> >>      testCase = class()
> >> >>      testCase.setUpClass()
> >> >>      for each method in testCase:
> >> >>        testCase.setUp()
> >> >>        testCase.method()
> >> >>        testCase.tearDown()
> >> >>      testCase.tearDownClass()
> >> >>
> >> >> Now I now it has to be somewhat more complicated, due to error
> >> >> handling, deferred handling, suppress, etc, but it does seem like
> >> >> that would be the outline...can it not be?
> >> >>
> >> >
> >> > The short answer: An instance of a TestCase subclass represents a
> >> > single test.
> >>
> >> But not to the user...if I set attributes on the instance, they stay
> >> set across all test methods.
> >
> >This is a bug, not a feature.
>
> Why is it a bug?
>

Given that we are the ones with the non-standard behaviour, I'd like
to know why it's considered a feature.



From warner at lothar.com  Sun Nov 13 14:15:56 2005
From: warner at lothar.com (Brian Warner)
Date: Sun, 13 Nov 2005 11:15:56 -0800 (PST)
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
Message-ID: <20051113.111556.96642233.warner@lothar.com>

>>This is a bug, not a feature.
>
> Why is it a bug?

I've been bitten by this behavior.. basically it means that the TestCase's
__init__ method is not invoked for each test method, so you have to remember
to clear status flags (say, things that are set from a Deferred callback,
like maybe a .oopsSomethingFailed flag) in setUp() rather than just
initialize them in __init__ . The annoying thing is that it (the __init__
approach) works fine when you run the tests one at a time, which I frequently
do as I set up a brand new test. It only breaks when you run multiple tests,
and even then only when the leftover results of one test get interpreted by a
later one.

I think part of the "clean all lingering state after every test" philosophy
should include cleaning attributes from the test methods themselves (or just
not re-using those objects).

That said, I still want a place to amortize expensive setup across multiple
tests. The buildbot tests, for example, have about half a dozen tests for
each supported version control system. There is a module-level check that
sees which ones you have installed (arch, baz, cvs, svn, darcs), then sets
some flags which cause certain tests to be run or skipped. I don't want to
re-do these checks for each test method. It may work to re-do them for each
TestCase class (say, the setUpClass for the SVN TestCase class checks to see
if SVN is available), but for code factoring purposes there might be multiple
SVN TestCase classes, and it would be nice to avoid duplicate checks.

Incidentally, these checks are the only remaining use of deferredResult() in
the buildbot test suite, at least when it is run against Twisted-2.0 or
newer, because they were originally run at import time. In the current code,
they are performed by the first setUpClass that gets run, and the results are
stashed in a module-level global to avoid running them again. If I were
confident that all supported (by buildbot) versions of Twisted allowed
setUpClass to return a Deferred, I could get rid of that last
deferredResult() call.

cheers,
 -Brian



From jml at mumak.net  Sun Nov 13 16:10:08 2005
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 14 Nov 2005 08:10:08 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
References: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
Message-ID: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>

On 13/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sun, 13 Nov 2005 12:33:41 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >This is a bug, not a feature.
>
> Why is it a bug?
>

If your test case (i.e. test method) uses attributes on self, the only
way to guarantee they'll be there is to define them in setUp --
whether in Trial or pyunit. If they aren't defined in setUp, then they
won't be there in pyunit, and they *might* be there in Trial -- it
will depend on the command line options. [Proofs attached].

jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trial-attrs.py
Type: application/octet-stream
Size: 588 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20051114/3ced12ab/attachment.obj 

From mslimmer at csbuilders.net  Mon Nov 14 02:20:02 2005
From: mslimmer at csbuilders.net (Max Slimmer)
Date: Sun, 13 Nov 2005 23:20:02 -0800
Subject: [Twisted-Python] How to talk to IM's 
Message-ID: <FHEKLMLGOFBCCMNGMAEJOEDMDDAA.mslimmer@csbuilders.net>

I am trying to get into twisted, I have gone through the examples and have
purchased and read most of the book, but am still having problems
understanding just how things hang together. Any pointers to other sample
code, or documentation would be great.

What I am trying to do is to use the WORDS modules and be able to connect to
various IM servers and through them to known IM users.  I have gotten the
oscardemo to work connecting to ICQ, if I log in as user who is on another
users buddy list that user sees the demo logon and then I can send messages
to the demo which in turn echos the messages back.  All good.

Now I want to run another module in the reactor which can have access to the
IM (oscar) module and use it to send messages to some given IM client.  I am
having difficulty understanding how to get from one module to the other.
The oscardemo is initiated with protocol.ClientCreator and that returns a
deferred, I can then pass the deferred into the factory of my control module
and have access to it, but I don't know if that will help. It seems I need
access to the BOSconnection object in order to call its methods, but maybe I
need to re code the demo to use defereds and don't quit know where / how to
do that either.

I would like to be able to connect to twisted say with telnet to a command
module, and have it initiate a chat session in the IM module, it seems that
I only need a single instance of the IM module, and then a means to send
messages to it and get received messages from it and pass them back to some
instance of command module.

Any help, pointers to docs or good sample code would be much appreciated.

thanks,
max
--
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.362 / Virus Database: 267.13.0/167 - Release Date: 11/11/2005




From Henning.Ramm at mediapro-gmbh.de  Mon Nov 14 04:44:55 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 14 Nov 2005 10:44:55 +0100
Subject: [Twisted-Python] Traceback bug?
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5E3@exchange-03.suedkurier.de>

This looks like a problem of Twisted's Failure:

    tb = a.getTraceback()
  File "C:\PROGRA~1\Python\Lib\SITE-P~1\twisted\python\failure.py", line 312, in getTraceback
    self.printTraceback(file=io, elideFrameworkCode=elideFrameworkCode, detail=detail)
exceptions.TypeError: printTraceback() got an unexpected keyword argument 'detail'

Should I file a bug, or is it my fault?


Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From itamar at itamarst.org  Mon Nov 14 12:48:11 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Nov 2005 12:48:11 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
References: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
	<d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
Message-ID: <1131990492.9192.4.camel@localhost.localdomain>

On Mon, 2005-11-14 at 08:10 +1100, Jonathan Lange wrote:

> If your test case (i.e. test method) uses attributes on self, the only
> way to guarantee they'll be there is to define them in setUp --
> whether in Trial or pyunit. If they aren't defined in setUp, then they
> won't be there in pyunit, and they *might* be there in Trial -- it
> will depend on the command line options. [Proofs attached].

pyunit compatability should not be a goal for trial unless, as I've said
before, you can get pyunit to support the reactor-running policy trial
ought to have, i.e. more or less reactor.run() only once and
reactor.stop() when all tests are done.  

If pyunit can't do that, there's no point even thinking about
compatability, since pyunit will never be able to run trial tests
correctly anyway.




From exarkun at divmod.com  Mon Nov 14 14:48:38 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 14 Nov 2005 14:48:38 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
Message-ID: <20051114194838.10365.1888130129.divmod.quotient.7675@ohm>

On Mon, 14 Nov 2005 08:10:08 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 13/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Sun, 13 Nov 2005 12:33:41 +1100, Jonathan Lange <jml at mumak.net> wrote:
>> >This is a bug, not a feature.
>>
>> Why is it a bug?
>>
>
>If your test case (i.e. test method) uses attributes on self, the only
>way to guarantee they'll be there is to define them in setUp --
>whether in Trial or pyunit. If they aren't defined in setUp, then they
>won't be there in pyunit, and they *might* be there in Trial -- it
>will depend on the command line options. [Proofs attached].

This does not surprise me.  I guess it surprised Brian, but presumably he's learned his lesson now ;)  It seems to me the way it *should* work.  At the very least, it's the way it has always worked, to the best of my understanding.  Perhaps documentation on this topic is lacking, but that suggests to me that we should improve the documentation, not that we should change the mechanism to operate in a different, incompatible (probably also undocumented ;) manner.

Looking through Twisted's test suite, I don't see a single TestCase subclass which defines __init__.

So... I still don't get how it's a bug.

Jean-Paul



From jml at mumak.net  Mon Nov 14 17:27:28 2005
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 15 Nov 2005 09:27:28 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <1131990492.9192.4.camel@localhost.localdomain>
References: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
	<d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
	<1131990492.9192.4.camel@localhost.localdomain>
Message-ID: <d06a5cd30511141427p107ade96q@mail.gmail.com>

On 15/11/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Mon, 2005-11-14 at 08:10 +1100, Jonathan Lange wrote:
>
> > If your test case (i.e. test method) uses attributes on self, the only
> > way to guarantee they'll be there is to define them in setUp --
> > whether in Trial or pyunit. If they aren't defined in setUp, then they
> > won't be there in pyunit, and they *might* be there in Trial -- it
> > will depend on the command line options. [Proofs attached].
>
> pyunit compatability should not be a goal for trial unless, as I've said
> before, you can get pyunit to support the reactor-running policy trial
> ought to have, i.e. more or less reactor.run() only once and
> reactor.stop() when all tests are done.
>

Sorry, it seems I gave the wrong emphasis. The thrust of my post was
intended to be this:

There is *only one* way to guarantee attributes of self for your test
case: Define them in setUp.
pyunit makes this explicit.  Trial makes it a matter of chance.  This
is a contrast, not a compatibility point.

Unit tests should be self-contained *units*.  They should be isolated
from one another, and they should be reproducable.  The order in which
tests are run should have no bearing on their success or failure.

jml



From jml at mumak.net  Mon Nov 14 17:31:17 2005
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 15 Nov 2005 09:31:17 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051114194838.10365.1888130129.divmod.quotient.7675@ohm>
References: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
	<20051114194838.10365.1888130129.divmod.quotient.7675@ohm>
Message-ID: <d06a5cd30511141431l67f79963q@mail.gmail.com>

On 15/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Mon, 14 Nov 2005 08:10:08 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >On 13/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> >> On Sun, 13 Nov 2005 12:33:41 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >> >This is a bug, not a feature.
> >>
> >> Why is it a bug?
> >>
> >
> >If your test case (i.e. test method) uses attributes on self, the only
> >way to guarantee they'll be there is to define them in setUp --
> >whether in Trial or pyunit. If they aren't defined in setUp, then they
> >won't be there in pyunit, and they *might* be there in Trial -- it
> >will depend on the command line options. [Proofs attached].
>
> This does not surprise me.  I guess it surprised Brian, but presumably he's learned his lesson now ;)  It seems to me the way it *should* work.  At the very least, it's the way it has always worked, to the best of my understanding.  Perhaps documentation on this topic is lacking, but that suggests to me that we should improve the documentation, not that we should change the mechanism to operate in a different, incompatible (probably also undocumented ;) manner.

It surprised Brian because every other unit testing framework built on
xUnit behaves differently.

Also, how would not sharing attributes be incompatible?

> Looking through Twisted's test suite, I don't see a single TestCase subclass which defines __init__.

The relevance escapes me.

> So... I still don't get how it's a bug.
>

It's not a bug per se; it's a bad feature.  Please forgive me for
using inaccurate idioms.

cheers,
jml



From andrew-twisted at puzzling.org  Mon Nov 14 20:09:16 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 15 Nov 2005 12:09:16 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051114194838.10365.1888130129.divmod.quotient.7675@ohm>
References: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
	<20051114194838.10365.1888130129.divmod.quotient.7675@ohm>
Message-ID: <20051115010916.GA4905@home.puzzling.org>

On Mon, Nov 14, 2005 at 02:48:38PM -0500, Jean-Paul Calderone wrote:
> On Mon, 14 Nov 2005 08:10:08 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >
> >If your test case (i.e. test method) uses attributes on self, the only
> >way to guarantee they'll be there is to define them in setUp --
> >whether in Trial or pyunit. If they aren't defined in setUp, then they
> >won't be there in pyunit, and they *might* be there in Trial -- it
> >will depend on the command line options. [Proofs attached].
> 
> This does not surprise me.  I guess it surprised Brian, but presumably he's 
> learned his lesson now ;)  It seems to me the way it *should* work.  At the 

FWIW, it surprised me.

-Andrew.




From itamar at itamarst.org  Tue Nov 15 12:28:24 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 15 Nov 2005 12:28:24 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051115010916.GA4905@home.puzzling.org>
References: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
	<20051114194838.10365.1888130129.divmod.quotient.7675@ohm>
	<20051115010916.GA4905@home.puzzling.org>
Message-ID: <1132075704.9307.1.camel@localhost.localdomain>

On Tue, 2005-11-15 at 12:09 +1100, Andrew Bennetts wrote:
> On Mon, Nov 14, 2005 at 02:48:38PM -0500, Jean-Paul Calderone wrote:
> > On Mon, 14 Nov 2005 08:10:08 +1100, Jonathan Lange <jml at mumak.net> wrote:
> > >
> > >If your test case (i.e. test method) uses attributes on self, the only
> > >way to guarantee they'll be there is to define them in setUp --
> > >whether in Trial or pyunit. If they aren't defined in setUp, then they
> > >won't be there in pyunit, and they *might* be there in Trial -- it
> > >will depend on the command line options. [Proofs attached].
> > 
> > This does not surprise me.  I guess it surprised Brian, but presumably he's 
> > learned his lesson now ;)  It seems to me the way it *should* work.  At the 
> 
> FWIW, it surprised me.

And reading that over again, yeah, that's surprising. I would expect
setupClass to always be called before a test runs, however it was
called.




From exarkun at divmod.com  Tue Nov 15 13:23:08 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 15 Nov 2005 13:23:08 -0500
Subject: [Twisted-Python] Traceback bug?
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB5E3@exchange-03.suedkurier.de>
Message-ID: <20051115182308.10365.517948805.divmod.quotient.8120@ohm>

On Mon, 14 Nov 2005 10:44:55 +0100, henning.ramm at mediapro-gmbh.de wrote:
>This looks like a problem of Twisted's Failure:
>
>    tb = a.getTraceback()
>  File "C:\PROGRA~1\Python\Lib\SITE-P~1\twisted\python\failure.py", line 312, in getTraceback
>    self.printTraceback(file=io, elideFrameworkCode=elideFrameworkCode, detail=detail)
>exceptions.TypeError: printTraceback() got an unexpected keyword argument 'detail'
>
>Should I file a bug, or is it my fault?

You didn't say what version of Twisted you're using or how you caused this to happen, but it looks to me like a bug that has been fixed already.  Try with 2.1 if you're using 2.0, or trunk if you're using 2.1.  If it doesn't go away, then file a bug.

Jean-Paul



From exarkun at divmod.com  Tue Nov 15 13:53:24 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 15 Nov 2005 13:53:24 -0500
Subject: [Twisted-Python] trial setUp/tearDown behavior
In-Reply-To: 0
Message-ID: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>

To summarize the thread "Re: [Twisted-commits] r15100 - So I really do want this stuff":

me:
Why add testresource?

jml:
So I can reimplement setUpClass/setUp/tearDown/tearDownClass to not be broken.

james:
Can't you just call the functions in the right order?

jml:
No, since they have no shared object on which to operate.

james:
The application-developer thinks the TestCase instance is shared.

jml:
The application-developer is mistaken.  Also, using testresource will be more efficient.  Also, you have to set up your class with setUp, not __init__.

james:
That optimization changes semantics and breaks several Twisted TestCases.

me:
It does not seem surprising that setUp is for setting things up.

chorus:
It is surprising that setUp is for setting things up.

jml:
Using the TestCase instance as a location for shared state violates the unit-ness of the tests.


So, hopefully we're all caught up and have a clearer picture of what the problems which need to be solved are.

It seems as though using testresource to optimize setup/teardown isn't viable at this point, since it breaks tests in Twisted.  Maybe we can come up with a solution for this.

A main problem to coming to some agreement here seems to be that a lot of people are assuming they know how trial deals with shared state (or how trial should deal with shared state), but I haven't seen anyone explicitly spell this out yet.  Doing this might be a good first step to making further progress.



From jml at mumak.net  Tue Nov 15 19:02:53 2005
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 16 Nov 2005 11:02:53 +1100
Subject: [Twisted-Python] trial setUp/tearDown behavior
In-Reply-To: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
References: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
Message-ID: <d06a5cd30511151602o53e5d572l@mail.gmail.com>

On 16/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> To summarize the thread "Re: [Twisted-commits] r15100 - So I really do want this stuff":
>

Thanks for the summary -- it's helpful and I like it.

> me:
> It does not seem surprising that setUp is for setting things up.
>
> chorus:
> It is surprising that setUp is for setting things up.
>

It seems surprising that you chose this way of summarising.
Rather, I'd say "It does not seem surprising that Trial shares state
between test cases." / "It is surprising that Trial shares state
between test cases"

> A main problem to coming to some agreement here seems to be that a lot of people are assuming they know how trial deals with shared state (or how trial should deal with shared state), but I haven't seen anyone explicitly spell this out yet.  Doing this might be a good first step to making further progress.

A worthy thought, and most likely right.

Thanks again for the summary.
jml



From foom at fuhm.net  Wed Nov 16 02:00:24 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 16 Nov 2005 00:00:24 -0700
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1EcHHM-0000Gz-00@pyramid.twistedmatrix.com>

KIND == 'create'
Bug summary
______________________
Since 2005-11-09 07:00:01.570000:
 Bugs opened: 14   Bugs closed: 11   Total open bugs: 483 (+3)
  Urgent: 1 (+0)
  Bug: 226 (-5)
  Feature: 173 (+4)
  Wish: 83 (+4)

New / Reopened Bugs
______________________
                    ==== Urgent ====
[CORE] "Sumo" is confusing and unnecessary  (3 days ago)
       http://twistedmatrix.com/bugs/issue1331 opened by exarkun

                    ==== Bug ====
[BACKPORT, CORE] FTP server does not work with ange-ftp  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1332 opened by exarkun

IOCP AcceptExOp.ovDone not called when expected  (4 days ago)
       http://twistedmatrix.com/bugs/issue1326 opened by justinj

document reactor reentrancy policy  (5 days ago)
       http://twistedmatrix.com/bugs/issue1323 opened by justinj

[CORE, TESTS] twisted.test.test_udp.testRebind makes no sense  (2 weeks ago)
CLOSED http://twistedmatrix.com/bugs/issue1295 opened by exarkun

                    ==== Feature ====
[TRIAL] Custom Trial reactor to track resources and handle cleanup  (yesterday)
       http://twistedmatrix.com/bugs/issue1334 opened by jml

[PATCH, sorta] Socks V5 functionality  (3 days ago)
       http://twistedmatrix.com/bugs/issue1330 opened by jadestorm

[CONCH] [patch] Performance of Conch/SSH  (5 days ago)
       http://twistedmatrix.com/bugs/issue1325 opened by cooz

[CORE, PB] Cacheable/RemoteCache does not work with new style classes  (5 days ago)
       http://twistedmatrix.com/bugs/issue1324 opened by karlb

                    ==== Wish ====
[TRIAL] unittest.main()  (4 days ago)
       http://twistedmatrix.com/bugs/issue1329 opened by jml

[CORE, TRIAL] twistd and trial --help lists all reactors, regardless of OS  (4 days ago)
       http://twistedmatrix.com/bugs/issue1327 opened by PenguinOfDoom

[FTP] Survey existing FTP servers and clients to figure out how LIST works  (2 days ago)
       http://twistedmatrix.com/bugs/issue1333 opened by exarkun

[DOCUMENTATION, TRIAL] People keep asking about _trial_temp  (4 days ago)
       http://twistedmatrix.com/bugs/issue1328 opened by jml

multicast support in iocpreactor  (6 days ago)
       http://twistedmatrix.com/bugs/issue1322 opened by ghazel

Bugs Closed
______________________
                    ==== Urgent ====
[CORE, TESTS, TRIAL] trial doesn't run test suite all the way on win32eventreactor  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1306 opened by exarkun, closed by jml

                    ==== Bug ====
socket.error: (53, 'Software caused connection abort')  (1 month ago)
       http://twistedmatrix.com/bugs/issue1274 opened by ghazel, closed by teratorn

[CORE, TRIAL] trial --until-failure is broken  (1 month ago)
       http://twistedmatrix.com/bugs/issue1263 opened by exarkun, closed by jml

[CORE, TRIAL] Unexpected successes are not reported in the summary section of trial  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1293 opened by glyph, closed by jml

[TRIAL] trial shouldn't print ascii color codes on Windows  (1 week ago)
       http://twistedmatrix.com/bugs/issue1316 opened by justinj, closed by jml

[BACKPORT, CORE] FTP server does not work with ange-ftp  (2 days ago)
       http://twistedmatrix.com/bugs/issue1332 opened by exarkun, closed by <unknown>

[CORE, WIN32] iocpreactor (at least) breaks event concept, leads to crashes  (1 month ago)
       http://twistedmatrix.com/bugs/issue1240 opened by ghazel, closed by justinj

IOCP dataReceived called after connectionLost  (7 days ago)
       http://twistedmatrix.com/bugs/issue1321 opened by justinj, closed by justinj

[CORE, WIN32] iocpreator can drop a listening socket by mistake  (1 month ago)
       http://twistedmatrix.com/bugs/issue1244 opened by ghazel, closed by justinj

[CORE, TESTS] twisted.test.test_udp.testRebind makes no sense  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1295 opened by exarkun, closed by exarkun

                    ==== Wish ====
[WIN32] Implement spawnProcess for IOCP reactor  (6 months ago)
       http://twistedmatrix.com/bugs/issue1008 opened by justinj, closed by justinj




From Henning.Ramm at mediapro-gmbh.de  Wed Nov 16 04:04:55 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 16 Nov 2005 10:04:55 +0100
Subject: [Twisted-Python] Traceback bug?
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5EC@exchange-03.suedkurier.de>

>>This looks like a problem of Twisted's Failure:
>>Should I file a bug, or is it my fault?
>
>You didn't say what version of Twisted you're using or how you 
>caused this to happen, but it looks to me like a bug that has 
>been fixed already.  Try with 2.1 if you're using 2.0, or 
>trunk if you're using 2.1.  If it doesn't go away, then file a bug.

Sorry, I reckognized that I forgot all data after I posted the mail.
Yes, I'm still on 2.0 on Win, because I wanted to stick to the binary installers.
But, however, I can avoid the bug, and my whole project including my job is on being dropped...

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From moof at metamoof.net  Wed Nov 16 09:57:45 2005
From: moof at metamoof.net (Moof)
Date: Wed, 16 Nov 2005 15:57:45 +0100
Subject: [Twisted-Python] trial setUp/tearDown behavior
In-Reply-To: <d06a5cd30511151602o53e5d572l@mail.gmail.com>
References: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
	<d06a5cd30511151602o53e5d572l@mail.gmail.com>
Message-ID: <437B48E9.5000902@metamoof.net>

Jonathan Lange wrote:
> It seems surprising that you chose this way of summarising.
> Rather, I'd say "It does not seem surprising that Trial shares state
> between test cases." / "It is surprising that Trial shares state
> between test cases"
> 
>> A main problem to coming to some agreement here seems to be that a lot of people are assuming they know how trial deals with shared state (or how trial should deal with shared state), but I haven't seen anyone explicitly spell this out yet.  Doing this might be a good first step to making further progress.
> 
> A worthy thought, and most likely right.

Put like that, my vote is fot xUnit (and everything else) convention of
using setUp and tearDown to set state for each test within a TestCase, and
setUpClass and tearDownClass to set state for the TestCase object.
setUpClass is not a pyUnit convention, but the various additions I've seen
all seem to implement it.

How many unit tests would be affected by such a change?

Moof
-- 
Giles Antonio Radford, alias Moof
"Too old to be a chicken and too young to be a dirty old man"
Serving up my ego over at <http://metamoof.net/>



From Henning.Ramm at mediapro-gmbh.de  Wed Nov 16 11:49:36 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 16 Nov 2005 17:49:36 +0100
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5F1@exchange-03.suedkurier.de>

Hi there!

I get the following traceback while trying to connect to a server via conch.ssh:

--- * ---

starting service ssh-userauth

Traceback (most recent call last):
--- <exception caught here> ---
  File "D:\Python24\lib\site-packages\twisted\internet\selectreactor.py", line 139, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "D:\Python24\lib\site-packages\twisted\internet\tcp.py", line 351, in doRead
    return self.protocol.dataReceived(data)
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\transport.py", line 182, in dataReceived
    f(packet[1:])
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\transport.py", line 591, in ssh_SERVICE_ACCEPT
    self.setService(self.instance)
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\transport.py", line 219, in setService
    self.service.serviceStarted()
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\userauth.py", line 220, in serviceStarted
    self.askForAuth('none', '')
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\userauth.py", line 224, in askForAuth
    self.transport.sendPacket(MSG_USERAUTH_REQUEST, NS(self.user) + \
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\transport.py", line 107, in sendPacket
    packet = struct.pack('!LB', totalSize+lenPad-4, lenPad)+ \
  File "D:\Python24\lib\encodings\utf_8.py", line 16, in decode
    return codecs.utf_8_decode(input, errors, True)
exceptions.UnicodeDecodeError: 'utf8' codec can't decode bytes in position 2-3: invalid data

connection lost
Stopping factory <twisted.internet.protocol._InstanceFactory instance at 0x02D2B210>

--- * ---

I use password auth, and both user and password use only 7-bit ASCII chars.

It always happens on one machine, but works on another.
Both run a german Windows XP with Twisted 2.0, but this one has Python 2.4 and the other 2.3

Is it perhaps a known bug (and fixed in Twisted 2.1)?


Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From itamar at itamarst.org  Wed Nov 16 12:22:05 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 16 Nov 2005 12:22:05 -0500
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB5F1@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB5F1@exchange-03.suedkurier.de>
Message-ID: <1132161726.9018.1.camel@localhost.localdomain>

On Wed, 2005-11-16 at 17:49 +0100, Henning.Ramm at mediapro-gmbh.de wrote:

> I use password auth, and both user and password use only 7-bit ASCII chars.

Did you pass a string or a unicode string? I suspect this code path
would only be happy with regular strings (i.e. isinstance(s, str) ==
True).




From TimothyFitz at gmail.com  Wed Nov 16 15:36:46 2005
From: TimothyFitz at gmail.com (Timothy Fitz)
Date: Wed, 16 Nov 2005 15:36:46 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <1131990492.9192.4.camel@localhost.localdomain>
References: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
	<d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
	<1131990492.9192.4.camel@localhost.localdomain>
Message-ID: <972ec5bd0511161236k497748cbs2cf9c4390a7923c9@mail.gmail.com>

On 11/14/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> pyunit compatability should not be a goal for trial unless, as I've said
> before, you can get pyunit to support the reactor-running policy trial
> ought to have [snip]
> If pyunit can't do that, there's no point even thinking about
> compatability, since pyunit will never be able to run trial tests
> correctly anyway.

You're only considering running twisted based tests from pyunit. I've
had a couple cases where migrating tests from a non-twisted project
should've been find-replace for the import line, but they weren't
because of small differences in API and semantics. Is this not a valid
use case?



From cce at clarkevans.com  Wed Nov 16 16:29:28 2005
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 16 Nov 2005 16:29:28 -0500
Subject: [Twisted-Python] twistd -noy unable to cancel using CTRL+C when
	using threads
Message-ID: <20051116212928.GA9093@prometheusresearch.com>

Hello.  The attached example works properly when called from

   twistd -nox test.py

when one is not using threads.  However, as soon as thread are
introduced, you can no longer use CTRL+C to kill the process.  I'm
running FreeBSD 5.3-RELEASE and Python 2.4.1

Best,

Clark
-------------- next part --------------
from twisted.internet import reactor, defer
from twisted.web2 import server, http, resource, channel

class Toplevel(resource.Resource):
  addSlash = True
  def render(self, ctx):
    return http.Response(stream="Hello monkey!")

# Standard twisted application Boilerplate
from twisted.application import service, strports
application = service.Application("demoserver")

def startup(application):
    site = server.Site(Toplevel())
    s = strports.service('tcp:8080', channel.HTTPFactory(site))
    s.setServiceParent(application)

d = defer.Deferred()
d.addCallback(lambda _: startup(application))

if 0:
    # this works properly
    reactor.callLater(1, lambda: d.callback(None))
else:
    # this does not, with or without the init()
    #from twisted.python import threadable
    #threadable.init()
    def block(): 
        import time
        time.sleep(2)
        reactor.callFromThread(d.callback,None)
    reactor.callInThread(block)


From andrew-twisted at puzzling.org  Wed Nov 16 17:52:24 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 17 Nov 2005 09:52:24 +1100
Subject: [Twisted-Python] trial setUp/tearDown behavior
In-Reply-To: <437B48E9.5000902@metamoof.net>
References: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
	<d06a5cd30511151602o53e5d572l@mail.gmail.com>
	<437B48E9.5000902@metamoof.net>
Message-ID: <20051116225224.GA20696@home.puzzling.org>

On Wed, Nov 16, 2005 at 03:57:45PM +0100, Moof wrote:
> Jonathan Lange wrote:
[...]
> 
> Put like that, my vote is fot xUnit (and everything else) convention of
> using setUp and tearDown to set state for each test within a TestCase, and
> setUpClass and tearDownClass to set state for the TestCase object.
> setUpClass is not a pyUnit convention, but the various additions I've seen
> all seem to implement it.

I don't understand your suggestion.  As I understand it, in xUnit, a TestCase is
instantiated for every test* method, and setUp/tearDown called for each instance
(around the calling of the actual test method).  So I'm not sure what you mean
by "setUpClass and tearDownClass to set state for the TestCase object."

-Andrew.




From Henning.Ramm at mediapro-gmbh.de  Thu Nov 17 05:58:11 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Thu, 17 Nov 2005 11:58:11 +0100
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5F2@exchange-03.suedkurier.de>

>> I use password auth, and both user and password use only 
>7-bit ASCII chars.
>
>Did you pass a string or a unicode string? I suspect this code path
>would only be happy with regular strings (i.e. isinstance(s, str) ==
>True).

Thank you for the hint - 'str' at every place where data is sent helped.
I'm glad I don't need any chars that aren't 7-bit ASCII.
Perhaps conch could be teached to handle Unicode strings, too?

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From itamar at itamarst.org  Thu Nov 17 11:50:02 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 17 Nov 2005 11:50:02 -0500
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB5F2@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB5F2@exchange-03.suedkurier.de>
Message-ID: <1132246202.9007.3.camel@localhost.localdomain>

On Thu, 2005-11-17 at 11:58 +0100, Henning.Ramm at mediapro-gmbh.de wrote:

> Thank you for the hint - 'str' at every place where data is sent helped.
> I'm glad I don't need any chars that aren't 7-bit ASCII.
> Perhaps conch could be teached to handle Unicode strings, too?

I think you are a bit confused about the way Unicode works. A string
object is NOT "7-bit ASCII".

http://www.joelonsoftware.com/articles/Unicode.html is helpful.




From maciejka at tiger.com.pl  Thu Nov 17 17:13:03 2005
From: maciejka at tiger.com.pl (Maciek Kaminski)
Date: Thu, 17 Nov 2005 23:13:03 +0100
Subject: [Twisted-Python] Status of Deferred cancelation
Message-ID: <437D006F.40505@tiger.com.pl>

What is the status of issue 990 (http://twistedmatrix.com/bugs/issue990)?

Is it going to be merged into trunk?

Maciej Kaminski



From Henning.Ramm at mediapro-gmbh.de  Fri Nov 18 03:37:44 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Fri, 18 Nov 2005 09:37:44 +0100
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5F4@exchange-03.suedkurier.de>

>> I'm glad I don't need any chars that aren't 7-bit ASCII.
>> Perhaps conch could be teached to handle Unicode strings, too?
>
>I think you are a bit confused about the way Unicode works. A string
>object is NOT "7-bit ASCII".

Sorry, I really should know, using a lot of encodings all over the place...

But anyway, it would be nice if conch would handle unicode objects, too.

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From moof at metamoof.net  Fri Nov 18 04:37:47 2005
From: moof at metamoof.net (Moof)
Date: Fri, 18 Nov 2005 10:37:47 +0100
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB5F4@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB5F4@exchange-03.suedkurier.de>
Message-ID: <437DA0EB.2090005@metamoof.net>

Henning.Ramm at mediapro-gmbh.de wrote:
>>> I'm glad I don't need any chars that aren't 7-bit ASCII.
>>> Perhaps conch could be teached to handle Unicode strings, too?
>> I think you are a bit confused about the way Unicode works. A string
>> object is NOT "7-bit ASCII".
> 
> Sorry, I really should know, using a lot of encodings all over the place...
> 
> But anyway, it would be nice if conch would handle unicode objects, too.

If conch connects to an openssh server, how does it know what to do with the
unicode object? A unicode object is an abstraction that holds no place in a
network protocol. Correctly converting the string to unicode is something
you have to negotiate with your clients.

Moof
-- 
Giles Antonio Radford, alias Moof
"Too old to be a chicken and too young to be a dirty old man"
Serving up my ego over at <http://metamoof.net/>



From itamar at itamarst.org  Fri Nov 18 12:22:38 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 18 Nov 2005 12:22:38 -0500
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
In-Reply-To: <437DA0EB.2090005@metamoof.net>
References: <F92274058556DE42B94B148EEFB91839021CB5F4@exchange-03.suedkurier.de>
	<437DA0EB.2090005@metamoof.net>
Message-ID: <1132334558.9000.3.camel@localhost.localdomain>

On Fri, 2005-11-18 at 10:37 +0100, Moof wrote:

> If conch connects to an openssh server, how does it know what to do with the
> unicode object? A unicode object is an abstraction that holds no place in a
> network protocol. Correctly converting the string to unicode is something
> you have to negotiate with your clients.

Unless the protocol knows about Unicode and has an automated way of
dealing with it. ssh almost certainly doesn't, though, so it should
indeed not try to support unicode objexts.




From frank at chagford.com  Sun Nov 20 04:59:27 2005
From: frank at chagford.com (Frank Millman)
Date: Sun, 20 Nov 2005 11:59:27 +0200
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to use
	Twisted
Message-ID: <20051120095402.8522E3F434C@fcserver.chagford.com>

Hi all

I sent a post recently which explains my situation. I will recap briefly.

I am developing a multi-user accounting/business app, which is database
intensive. My current version runs on each client, and makes a direct
connection to the database. I want to change it to a server-based solution,
where the server connects to the database, and each client connects to the
server. Twisted lends itself to handling communication between the server
and client, and to queuing all the database commands.

I have spent some time trying to figure out how to change my program to work
in a Twisted fashion. I have made some progress, but now I have hit a
stumbling block. I am sure that the problem is more to do with my approach
than with Twisted, but it feels serious enough that I am leaning towards
abandoning this approach and reverting to a multi-threaded server. I don't
really want to do this, so I will explain my problem in the hope that
someone can suggest an easy solution, which does not involve a total rethink
of what I have come up with so far.

As mentioned above, my program is database intensive. I have built in the
ability to handle multiple table relationships, such as 'a customer record
must have a valid branch code, currency code, salesperson code, etc'. If the
user attempts to add or alter any of these fields, the program automatically
checks that the new value exists as a foreign key on the relevant table. For
this reason, and for a variety of other reasons, the program executes many
SQL commands 'behind the scenes', without the application layer being aware
of it. Each of these 'blocks' the program, but as the program runs on each
client, it does not matter, as the user has to wait for a response before
they can continue anyway.

Moving this concept onto Twisted does not seem to work, as it can be running
sessions for multiple users, and each 'block' will block the main loop,
resulting in a major performance hit. The correct solution, as I understand
it, is to change each SQL command to a deferred with a callback. I can do
this on the inner layers, where the actual SQL command is executed. But I
would also have to do it on each outer layer that calls a function which
'may' trigger a SQL command. There are many of these, and it goes to the
heart of my approach of hiding the underlying database complexity from the
application layer. Changing this feels like a daunting task, and frankly I
would not know where to start.

The alternative is to use a multi-threaded approach. In this case, I can
keep my existing approach largely unchanged, as it does not matter if one
thread blocks, the others will continue without being affected.

I don't know if I have explained myself very clearly, but if anyone has any
words of advice, I will be very grateful.

Thanks

Frank Millman




From Marcin.Kasperski at softax.com.pl  Sun Nov 20 06:44:40 2005
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Sun, 20 Nov 2005 12:44:40 +0100
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to
	use Twisted
In-Reply-To: <20051120095402.8522E3F434C@fcserver.chagford.com>
References: <20051120095402.8522E3F434C@fcserver.chagford.com>
Message-ID: <1132487080.20686.2.camel@pitagoras>

> Moving this concept onto Twisted does not seem to work, as it can be running
> sessions for multiple users, and each 'block' will block the main loop,
> resulting in a major performance hit. The correct solution, as I understand
> it, is to change each SQL command to a deferred with a callback. I can do
> this on the inner layers, where the actual SQL command is executed. But I
> would also have to do it on each outer layer that calls a function which
> 'may' trigger a SQL command. There are many of these, and it goes to the
> heart of my approach of hiding the underlying database complexity from the
> application layer. Changing this feels like a daunting task, and frankly I
> would not know where to start.

Not quite sure what exactly your code does, but what about taking a look
at twisted.enterprise.adbapi (and especially runInteraction)? Maybe
executing your code within runInteraction could be quick solution (in
fact the code will run in separate thread silently created by twisted
for you) - and then you could try to optimize things one by one.... 





From cce at clarkevans.com  Sun Nov 20 12:04:21 2005
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 20 Nov 2005 12:04:21 -0500
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to
	use Twisted
In-Reply-To: <20051120095402.8522E3F434C@fcserver.chagford.com>
References: <20051120095402.8522E3F434C@fcserver.chagford.com>
Message-ID: <20051120170421.GA6554@prometheusresearch.com>

Frank,

There are two approaches depending upon your database driver.  If you
have a driver that supports async queries (such as psycopg2) then it
won't block while waiting for the query results.  In this case, your
"execute query" just returns a Deferred; and when the driver is notified
that the results are available, the deferred's callback is executed.

The second approach, usable if you don't have an async driver (like
pyPgSQL) is to use runInteraction.  Basically, in this approach you
don't really get the advantages of Twisted's core event loop; since
you put most of your request handling code in the runInteraction,
which returns a Deferred when it is completed.   This is the approach
my current code uses; but back when I wrote it psycopg2 didn't exist.

The primary advantage in the latter case, over a multi-threaded server,
such as Webware (for example), is that you have access to all of the
wonderful protocol handlers and, IMHO, a stellar development team.
This latter point -- the people -- is the driving reason for me to
continue to use Twisted (as my work is also heavily database intensive).

Cheers,

Clark




From fairwinds at eastlink.ca  Sun Nov 20 22:13:48 2005
From: fairwinds at eastlink.ca (David Pratt)
Date: Sun, 20 Nov 2005 23:13:48 -0400
Subject: [Twisted-Python] Getting started with twisted
Message-ID: <D5A08481-5A3C-11DA-ADD9-000A27B3B070@eastlink.ca>

Hi. I am brand new to twisted and hoping to get my feet wet but need 
some help identifying the right products to use. I am also hoping 
someone can help point me to some code or an app that might have 
similar functionality to look at to see how things work.

I am currently building a pythonwx app and want twisted to communicate 
with a web server over ssl in REST style (HTTP 1.1) with PUT, GET etc.  
I am interested in sending and receiving requests in xml to synchronize 
web data with desktop app and to log activity of web server with 
desktop app as well.

Regards,
David



From warner at lothar.com  Mon Nov 21 02:02:54 2005
From: warner at lothar.com (Brian Warner)
Date: Sun, 20 Nov 2005 23:02:54 -0800 (PST)
Subject: [Twisted-Python] Unjelly - recursion limit reached
Message-ID: <20051120.230254.21604291.warner@lothar.com>

>>> This is a pretty scary limitation. Is anybody working on a non-
>>> recursion based version of jelly? Am I going to have to move to
>>> Stackless Python?

Sorry to respond to this so late.. my Twisted time has been awfully bursty
this month.

FWIW, newpb does not suffer from this sort of stack-frame limitation. Rather
than using the C/Python runtime stack to keep track of its current place in
the object graph, it maintains a "Slicer Stack" (and corresponding Unslicer
Stack on the receiving end), which is really just a list of Slicer/Unslicer
instances. Each edge of the object graph path (from the top-most
one-per-connection Root object down to the thing currently being serialized
or unserialized) gets a Slicer/Unslicer on this list. Ridiculously deep
object graphs (like the linked-list structure you describe) will consume heap
memory for this list, but not stack frames.

The maximum number of stack frames consumed is a constant, not affected by
the shape or complexity of the data being serialized. (I haven't measured it
but I'd guess it's less than a dozen frames). The runtime memory footprint is
roughly linear with the depth of the object graph. Each Slicer contains a
generator.. I don't know how much memory is consumed to maintain the state of
a typical Slicer, but I'm not sure I'd want a million of them.

> My object graph is a natural and clean data structure. I don't want  
> to lose that just because of limitations in my tools.

PB is all about transferring your existing object graph cleanly and
accurately. newpb just does it better than oldpb. Some of the limitations of
oldpb (well, really just that 640k string limit) are there to minimize the
damage if something goes really wrong (like you connect an HTTP client to the
PB socket, and it tries to interpret "GET HTTP/1.1 index.html" as a
bajillion-byte STRING token). newpb provides better ways to specify these
restrictions (the whole 'schema' approach), so there ought to be fewer
non-user-specified arbitrary limits.

That said, some graphs are more efficient to transfer than others. A linked
list of small integers will take about three times as many bytes to serialize
as a flat list, and will consume a far greater amount of memory while doing
so. The newpb Slicers are not clever enough to do tail-recursion.

> Is this currently being addressed or in a road map? Am I unknowingly  
> volunteering for it? :-o

Well, it sounds like you might be a great candidate for beta-testing newpb
:). Keep tuned to this channel for an alpha release announcement sometime
soon.

cheers,
 -Brian



From frank at chagford.com  Mon Nov 21 02:20:34 2005
From: frank at chagford.com (Frank Millman)
Date: Mon, 21 Nov 2005 09:20:34 +0200
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to
	useTwisted
In-Reply-To: <20051120095402.8522E3F434C@fcserver.chagford.com>
Message-ID: <20051121071508.3CDE23F4361@fcserver.chagford.com>

> 
> Hi all
> 

[snip]

> Moving this concept onto Twisted does not seem to work, as it 
> can be running sessions for multiple users, and each 'block' 
> will block the main loop, resulting in a major performance 
> hit. The correct solution, as I understand it, is to change 
> each SQL command to a deferred with a callback. I can do this 
> on the inner layers, where the actual SQL command is 
> executed. But I would also have to do it on each outer layer 
> that calls a function which 'may' trigger a SQL command. 
> There are many of these, and it goes to the heart of my 
> approach of hiding the underlying database complexity from 
> the application layer. Changing this feels like a daunting 
> task, and frankly I would not know where to start.
> 
> The alternative is to use a multi-threaded approach. In this 
> case, I can keep my existing approach largely unchanged, as 
> it does not matter if one thread blocks, the others will 
> continue without being affected.
> 

Thanks for the replies, Marcin and Clark.

I think you have helped to to see a solution, but I would like to clarify
it.

Take the following piece of pseudo code -

    def main():
        result = func1(...)
        do something with result

If func1 blocks, the entire program will be blocked until it returns.

The Twisted approach is -

    def main():
        deferred = func1(...).addCallback(doSomething)

    def doSomething(result):
        do something with result

Now the program will not block, but the key is that main() must return
immediately, thus returning control to Twisted's main loop.

I have many cases where I call a blocking function and wait for a result. I
had envisaged something like this -

Instead of

    def main():
        result1 = func1(...)
        do something with result1
        result2 = func2(...)
        do something with result2

do this

    def main():
        deferred = func1(...).addCallback(doSomething)

    def doSomething(result1):
        do something with result1
        deferred = func2(...).addCallback(doSomethingElse)

    def doSomethingElse(result2):
        do something with result2

If this was the correct approach, it would be a nightmare to go through all
my code and split up each call into a separate deferred and callback.

If I understand Marcin and Clark correctly, I should rather do it this way -

    def main():
        conn = adbapi.ConnectionPool(...)
        conn.runInteraction(main2)

    def main2():
        result1 = func1(...)
        do something with result1
        result2 = func2(...)
        do something with result2

This involves far fewer changes to my existing code, so I think I could
tackle this. As Marcin says, this is really a multi-threaded solution, so it
is a bit of a cheat, but it looks as if it will work.

Clark, I am using psycopg2, but if I make use of the feature you describe,
would I have to define a separate callback for every SQL command? If so, it
puts me back in my original nightmare scenario. Or have I missed the point?
An example of how I could use this would be very useful.

I hope this makes sense. Any comments will be much appreciated.

Thanks again

Frank




From Henning.Ramm at mediapro-gmbh.de  Mon Nov 21 04:45:27 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 21 Nov 2005 10:45:27 +0100
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app
	touseTwisted
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5F8@exchange-03.suedkurier.de>

My actual project is similar:
Several different apps need a database connection, but instead I let them connect via Twisted PB to a Proxy that keeps the only db conn.
I fixed most of my troubles using Interaction and 'lock tables' in them (MySQL or at least the Python driver doesn't support real transactions).

example:

# self.dbpool = adbapi.ConnectionPool(self.dbApiName, **Conf)

    def remote_deleteOld(self, days=21):
        try:
            d = self.dbpool.runInteraction(self._deleteOld, days)
            d.addErrback(self.errorHandler, 'deleteOld', days)
            return d
        except Exception, ex:
            self.log.error(ex)
            return defer.fail(ex)

    def _deleteOld(self, txn, days):
        rows = [0,0,0,0]
	# lock tables 
        try:
            txn.execute("delete from t5 where t5_date < CURDATE() - INTERVAL %d DAY" % days)
            res = txn.fetchall()
        except _mysql_exceptions.Warning, text:
            self.log.info(text)
        if res: rows[3] = int(res[0][0])
	# ...
	# unlock tables
        return tuple(rows)

HTH

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From glyph at divmod.com  Mon Nov 21 09:31:51 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 21 Nov 2005 09:31:51 -0500
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to
	use Twisted
In-Reply-To: <20051120095402.8522E3F434C@fcserver.chagford.com>
Message-ID: <20051121143151.32735.1031649281.divmod.quotient.1061@ohm>



On Sun, 20 Nov 2005 11:59:27 +0200, Frank Millman <frank at chagford.com> wrote:

>Moving this concept onto Twisted does not seem to work, as it can be running
>sessions for multiple users, and each 'block' will block the main loop,
>resulting in a major performance hit. The correct solution, as I understand
>it, is to change each SQL command to a deferred with a callback. I can do
>this on the inner layers, where the actual SQL command is executed. But I
>would also have to do it on each outer layer that calls a function which
>'may' trigger a SQL command. There are many of these, and it goes to the
>heart of my approach of hiding the underlying database complexity from the
>application layer. Changing this feels like a daunting task, and frankly I
>would not know where to start.

The way I would probably work on an application that did this was making each *transaction* into something that ran in a thread and returned a Deferred, which would reduce the footprint of impacted code.  Each user-interface action can be encapsulated as a transaction, and then your code doesn't need to convert each function into a Deferred, just the top-level event handler which kicks off the transaction.

>The alternative is to use a multi-threaded approach. In this case, I can
>keep my existing approach largely unchanged, as it does not matter if one
>thread blocks, the others will continue without being affected.

In the case where you're turning each SQL statement into a Deferred, you're actually using threads anyway; each statement executes in a thread, then sends its result to the main loop.  The important thing when you turn a Twisted application into a multithreaded application is to have a stark distinction between code which runs in threads and code which runs in the main loop.  Code which runs in threads can't call Twisted functions (other than callFromThread), use Deferreds, etc.  It also should refer to as little state as possible, since if you can create isolated groups of objects in the main thread, you don't need to bother with locking as your blocking threaded code runs.



From glyph at divmod.com  Mon Nov 21 10:46:48 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 21 Nov 2005 10:46:48 -0500
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to
	useTwisted
In-Reply-To: <20051121071508.3CDE23F4361@fcserver.chagford.com>
Message-ID: <20051121154648.32735.656622137.divmod.quotient.1081@ohm>



On Mon, 21 Nov 2005 09:20:34 +0200, Frank Millman <frank at chagford.com> wrote:

>If I understand Marcin and Clark correctly, I should rather do it this way -

Just in case it wasn't clear from my previous message, this is exactly the same thing that I meant, in more specific terms ;).



From phil at bubblehouse.org  Mon Nov 21 12:16:27 2005
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 21 Nov 2005 12:16:27 -0500
Subject: [Twisted-Python] unix signals and twistd
Message-ID: <6368BABC-9934-4160-9546-AECC49D18FFE@bubblehouse.org>

Hey all,

I've got a Twistd application that maintains a datafile separate from  
the serialized app stored in the .tap file. I've set it up to  
automatically load this file at startup, and save it at shutdown, but  
I'd like to implement a way to do incremental saves while the server  
is running.

The ideal setup would be to listen for a signal; I could then either  
run a cron script, or use some other external app. I've listened for  
signals in other python apps, but I thought I'd check to see if there  
was a preferred way to do it in Twisted.

Also, I know there are a number of signals that twistd itself listens  
for, and I think it'd probably be best if I stayed away from those. I  
know the man page for twistd says it listens for SIGUSR1/2, and  
obviously it catches SIGTERM; are there any others I've missed?

Thanks in advance,

-phil



From gds11561 at tj.sc.gov.br  Mon Nov 21 14:52:14 2005
From: gds11561 at tj.sc.gov.br (Gustavo Dagostin da Silva)
Date: Mon, 21 Nov 2005 17:52:14 -0200
Subject: [Twisted-Python] Get an object that provides an interface
Message-ID: <200511211752.14638.gds11561@tj.sc.gov.br>

Hello,

Is it possible to get an object that provides (from a class that implements) a 
interface without mentioning the class? In other words:


class ISomething(Interface):
	def method(self):
		""" Do something
		"""

class SomethingImplementor:
	implements(ISomething)

	def method(self):
		print "I exist!!"

obj = ISomething() 
# and obj gets an instance of "SomethingImplementor", without 
# mentioning it.

The documentation of component usage in twisted only mentions interfaces in 
the context where "Adapters" are needed.

Gustavo



From exarkun at divmod.com  Mon Nov 21 15:09:44 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 21 Nov 2005 15:09:44 -0500
Subject: [Twisted-Python] Get an object that provides an interface
In-Reply-To: <200511211752.14638.gds11561@tj.sc.gov.br>
Message-ID: <20051121200944.32735.1298740027.divmod.quotient.1144@ohm>

On Mon, 21 Nov 2005 17:52:14 -0200, Gustavo Dagostin da Silva <gds11561 at tj.sc.gov.br> wrote:
>Hello,
>
>Is it possible to get an object that provides (from a class that implements) a
>interface without mentioning the class? In other words:
>
>
>class ISomething(Interface):
>	def method(self):
>		""" Do something
>		"""
>
>class SomethingImplementor:
>	implements(ISomething)
>
>	def method(self):
>		print "I exist!!"
>
>obj = ISomething()
># and obj gets an instance of "SomethingImplementor", without
># mentioning it.
>
>The documentation of component usage in twisted only mentions interfaces in
>the context where "Adapters" are needed.

See the thread entitled "zope.interface calling an interface with no arguments" on the interface-dev list:

http://mail.zope.org/pipermail/interface-dev/2005-August/thread.html
http://mail.zope.org/pipermail/interface-dev/2005-September/thread.html

Jean-Paul



From frank at chagford.com  Mon Nov 21 23:43:48 2005
From: frank at chagford.com (Frank Millman)
Date: Tue, 22 Nov 2005 06:43:48 +0200
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app
	touseTwisted
In-Reply-To: <20051121154648.32735.656622137.divmod.quotient.1081@ohm>
Message-ID: <20051122043814.35D643F434C@fcserver.chagford.com>

glyph wrote:

> 
> On Mon, 21 Nov 2005 09:20:34 +0200, Frank Millman 
> <frank at chagford.com> wrote:
> 
> >If I understand Marcin and Clark correctly, I should rather 
> do it this 
> >way -
> 
> Just in case it wasn't clear from my previous message, this 
> is exactly the same thing that I meant, in more specific terms ;).
> 

It was crystal clear, but I had already sent my reply before I saw your
message.

It is good to have confirmation that I am thinking along the right lines.

Many thanks

Frank




From dhess at verscend.com  Tue Nov 22 11:13:49 2005
From: dhess at verscend.com (David K. Hess)
Date: Tue, 22 Nov 2005 10:13:49 -0600
Subject: [Twisted-Python] Unjelly - recursion limit reached
In-Reply-To: <20051120.230254.21604291.warner@lothar.com>
References: <20051120.230254.21604291.warner@lothar.com>
Message-ID: <A9B0DB4C-E236-4019-A14D-3324FC2B5B74@verscend.com>


On Nov 21, 2005, at 1:02 AM, Brian Warner wrote:
>> Is this currently being addressed or in a road map? Am I unknowingly
>> volunteering for it? :-o
>
> Well, it sounds like you might be a great candidate for beta- 
> testing newpb
> :). Keep tuned to this channel for an alpha release announcement  
> sometime
> soon.

Thanks for the info, that's all good news. In the meantime, I've got  
my stacksize/recursion limits increased enough to handle what I'm  
going to run into for now.

We'd be happy to branch our code base and move it over to newpb to  
help you beta test.

> cheers,
>  -Brian

Thanks!

Dave



From dekonerding at lbl.gov  Tue Nov 22 11:48:01 2005
From: dekonerding at lbl.gov (David E. Konerding)
Date: Tue, 22 Nov 2005 08:48:01 -0800
Subject: [Twisted-Python] integrating threadedselectreactor w/ pygtk
Message-ID: <43834BC1.90205@lbl.gov>

Hi,

I am attempting to use the threadedselectreactor with pygtk.  I didn't
see a formula for using pygtk
w/ tsr, so this I came up with the code below.  From what I can tell,
pygtk lets you call GUI functions from any thread so long as the
gtk event loop lock is held, and there is no equivalent to "callFromThread".
The alternative seems to be to generate a signal in the CallAfter
callback and emit it, but I can't see why that
would be necessary.  Can anybody comment? 


from twisted.internet import threadedselectreactor
threadedselectreactor.install()
from twisted.internet import reactor

def CallAfter(func):
    gtk.threads_enter()
    func()
    gtk.threads_leave()
  
def foreignEventLoopStop():
    gtk.threads_enter()
    func()
    gtk.threads_leave()

def main():
    gtk.threads_init()
    gtk.gdk.threads_init()
    app = MyApp()
    reactor.interleave(CallAfter)
    reactor.addSystemEventTrigger('after', 'shutdown', foreignEventLoopStop)
    gtk.main()

main()

The problem is that if I send control-C to the console running
the application, I do get the following before my foreignEventLoop Stop

  File
"/home/dek/sw/i386/suse/9.3/pygtk/Python-2.4.2/lib/python2.4/site-packages/twisted/internet/base.py",
line 400, in _continueSystemEvent
    callable(*args, **kw)
  File
"/home/dek/sw/i386/suse/9.3/pygtk/Python-2.4.2/lib/python2.4/site-packages/twisted/internet/threadedselectreactor.py",
line 283, in _mainLoopShutdown
    self.workerThread.join()
  File
"/home/dek/sw/i386/suse/9.3/pygtk/Python-2.4.2/lib/python2.4/threading.py",
line 532, in join
    assert self is not currentThread(), "cannot join current thread"
exceptions.AssertionError: cannot join current thread


Therefore, I tried the following isntead:

def CallAfter(func):
    gobject.idle_add(func)

def foreignEventLoopStop():
    gobject.idle_add(gtk.main_quit)
   
def main():
    gobject.threads_init()
    gtk.threads_init()
    gtk.gdk.threads_init()
    myapp = App
    reactor.interleave(CallAfter)
    reactor.callWhenRunning(createShellServer)
    reactor.addSystemEventTrigger('after', 'shutdown', foreignEventLoopStop)
    gtk.main()
main()

And this seems to work perfectly.



From itamar at itamarst.org  Tue Nov 22 11:59:04 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 22 Nov 2005 11:59:04 -0500
Subject: [Twisted-Python] integrating threadedselectreactor w/ pygtk
In-Reply-To: <43834BC1.90205@lbl.gov>
References: <43834BC1.90205@lbl.gov>
Message-ID: <1132678745.8857.0.camel@localhost.localdomain>

On Tue, 2005-11-22 at 08:48 -0800, David E. Konerding wrote:

> I am attempting to use the threadedselectreactor with pygtk. 

Why? Twisted already has gtk2reactor that will provide much better
integration that tsr.




From dekonerding at lbl.gov  Tue Nov 22 12:14:50 2005
From: dekonerding at lbl.gov (David E. Konerding)
Date: Tue, 22 Nov 2005 09:14:50 -0800
Subject: [Twisted-Python] integrating threadedselectreactor w/ pygtk
In-Reply-To: <1132678745.8857.0.camel@localhost.localdomain>
References: <43834BC1.90205@lbl.gov>
	<1132678745.8857.0.camel@localhost.localdomain>
Message-ID: <4383520A.1020206@lbl.gov>

Itamar Shtull-Trauring wrote:

>On Tue, 2005-11-22 at 08:48 -0800, David E. Konerding wrote:
>
>  
>
>>I am attempting to use the threadedselectreactor with pygtk. 
>>    
>>
>
>Why? Twisted already has gtk2reactor that will provide much better
>integration that tsr.
>
>  
>
Hmm, I submitted bug repots on gtk2reactor a long time ago.  I had given
up checking on that bug after 6 months with nobody doing anything about
(other than replying to my mail from you telling me I was calling
time.sleep() from the twisted reactor thread when I wasn't).  Ahh, I see
that bug was closed about a year after I submitted it.

I guess my test case that I submitted for that bug works correctly now,
so it's time to start using the gtk2 reactor again.  Thanks.

Dave



From dekonerding at lbl.gov  Tue Nov 22 15:54:45 2005
From: dekonerding at lbl.gov (David E. Konerding)
Date: Tue, 22 Nov 2005 12:54:45 -0800
Subject: [Twisted-Python] patches to make gtk2manhole work with gtk2
Message-ID: <43838595.5070505@lbl.gov>

Hi, in attempting to use gtk2manhole I had some problems.  It looks like
it was written on a much older version of gtk2,
here are patches I applied (they are not complete, merely sufficient to
start the application):


Index: twisted/manhole/ui/gtk2manhole.py
===================================================================
--- twisted/manhole/ui/gtk2manhole.py   (revision 14819)
+++ twisted/manhole/ui/gtk2manhole.py   (working copy)
@@ -22,6 +22,7 @@
 
 # The pygtk.require for version 2.0 has already been done by the reactor.
 import gtk
+import gobject
 
 import code, types, inspect
 
@@ -159,7 +160,7 @@
         # Silly things, the TextView needs to update itself before it knows
         # where the bottom is.
         if self._willScroll is None:
-            self._willScroll = gtk.idle_add(self._scrollDown)
+            self._willScroll = gobject.idle_add(self._scrollDown)
 
     def _scrollDown(self, *unused):
         self.textView.scroll_to_iter(self.buffer.get_end_iter(), 0,
@@ -256,11 +257,12 @@
         try:
             c = code.compile_command(text)
         except SyntaxError, e:
+            buffer = self.textView.get_buffer()
             # This could conceivably piss you off if the client's python
             # doesn't accept keywords that are known to the manhole's
             # python.
             point = buffer.get_iter_at_line_offset(e.lineno, e.offset)
-            buffer.place(point)
+            buffer.place_cursor(point)
             # TODO: Componentize!
             self.toplevel.output.append(str(e), "exception")
         except (OverflowError, ValueError), e:
Index: twisted/manhole/ui/pywidgets.py
===================================================================
--- twisted/manhole/ui/pywidgets.py     (revision 14819)
+++ twisted/manhole/ui/pywidgets.py     (working copy)
@@ -22,12 +22,12 @@
         return 1
 
 
-class InputText(gtk.GtkText):
+class InputText(gtk.TextView):
     linemode = 0
     blockcount = 0
 
     def __init__(self, toplevel=None):
-        gtk.GtkText.__init__(self)
+        gtk.Text.__init__(self)
         self['name'] = 'Input'
         self.set_editable(gtk.TRUE)
         self.connect("key_press_event", self.processKey)
@@ -155,11 +155,11 @@
         f.close()
 
 
-class Interaction(gtk.GtkWindow):
+class Interaction(gtk.Window):
     titleText = "Abstract Python Console"
 
     def __init__(self):
-        gtk.GtkWindow.__init__(self, gtk.WINDOW_TOPLEVEL)
+        gtk.Window.__init__(self, gtk.WINDOW_TOPLEVEL)
         self.set_title(self.titleText)
         self.set_default_size(300, 300)
         self.set_name("Manhole")
@@ -197,11 +197,11 @@
             self.localNS["_"] = val
             self.output.console([("result", repr(val) + "\n")])
 
-class OutputConsole(gtk.GtkText):
+class OutputConsole(gtk.TextView):
     maxBufSz = 10000
 
     def __init__(self, toplevel=None):
-        gtk.GtkText.__init__(self)
+        gtk.TextView.__init__(self)
         self['name'] = "Console"
         gtkutil.defocusify(self)
         #self.set_word_wrap(gtk.TRUE)
Index: twisted/manhole/ui/spelunk_gnome.py
===================================================================
--- twisted/manhole/ui/spelunk_gnome.py (revision 14819)
+++ twisted/manhole/ui/spelunk_gnome.py (working copy)
@@ -32,13 +32,14 @@
 # not with Tk, so this is what I use.
 
 import gnome.ui
+import gnomecanvas
 gnome = SillyModule(gnome.ui, 'Gnome')
 
 import gtk
 (True, False) = (gtk.TRUE, gtk.FALSE)
 gtk = SillyModule(gtk, 'Gtk')
 
-import GDK
+import gtk.gdk as GDK
 
 from twisted.python import reflect, text
 from twisted.spread import pb
@@ -71,7 +72,7 @@
 
 #### Public
 
-class SpelunkDisplay(gnome.Canvas):
+class SpelunkDisplay(gnomecanvas.Canvas):
     """Spelunk widget.
 
     The top-level widget for this module.  This gtk.Widget is where the
@@ -179,11 +180,11 @@
     def __init__(self, box):
         self.box = box
 
-class LooseBox(gnome.CanvasGroup):
+class LooseBox(gnomecanvas.CanvasGroup):
     def __init__(self):
         self.border = _LooseBoxBorder(self)
 
-class Visage(gnome.CanvasGroup):
+class Visage(gnomecanvas.CanvasGroup):
     """A \"face\" of an object under exploration.
 
     A Visage is a representation of an object presented to the user.




From corydodt at twistedmatrix.com  Tue Nov 22 16:03:57 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Tue, 22 Nov 2005 13:03:57 -0800
Subject: [Twisted-Python] ANN: Twisted 2.1.0 windows installer
Message-ID: <438387BD.80100@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

This is now available at http://twistedmatrix.com/projects/core/
Python 2.3 and Python 2.4 builds provided.

C
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFDg4e93A5SrXAiHQcRAmzAAJ4zJohYH1KvBzlHhQIkJs6FAA2dpQCghbQj
6jsaH9OEcw6hHQxfj/YqKVc=
=5jJu
-----END PGP SIGNATURE-----



From itamar at itamarst.org  Tue Nov 22 16:22:47 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 22 Nov 2005 16:22:47 -0500
Subject: [Twisted-Python] patches to make gtk2manhole work with gtk2
In-Reply-To: <43838595.5070505@lbl.gov>
References: <43838595.5070505@lbl.gov>
Message-ID: <1132694567.8857.16.camel@localhost.localdomain>

On Tue, 2005-11-22 at 12:54 -0800, David E. Konerding wrote:
> Hi, in attempting to use gtk2manhole I had some problems.  It looks like
> it was written on a much older version of gtk2,
> here are patches I applied (they are not complete, merely sufficient to
> start the application):

Hi,

IIRC that version of manhole is deprecated; possibly that should be
removed from the repository? Or maybe i'm confused. In any case, could
you open an issue in the tracker - http://twistedmatrix.com/bugs/?
Thanks.




From dekonerding at lbl.gov  Tue Nov 22 16:40:13 2005
From: dekonerding at lbl.gov (David E. Konerding)
Date: Tue, 22 Nov 2005 13:40:13 -0800
Subject: [Twisted-Python] patches to make gtk2manhole work with gtk2
In-Reply-To: <1132694567.8857.16.camel@localhost.localdomain>
References: <43838595.5070505@lbl.gov>
	<1132694567.8857.16.camel@localhost.localdomain>
Message-ID: <4383903D.7050607@lbl.gov>

Itamar Shtull-Trauring wrote:

>On Tue, 2005-11-22 at 12:54 -0800, David E. Konerding wrote:
>  
>
>>Hi, in attempting to use gtk2manhole I had some problems.  It looks like
>>it was written on a much older version of gtk2,
>>here are patches I applied (they are not complete, merely sufficient to
>>start the application):
>>    
>>
>
>Hi,
>
>IIRC that version of manhole is deprecated; possibly that should be
>removed from the repository? Or maybe i'm confused. In any case, could
>you open an issue in the tracker - http://twistedmatrix.com/bugs/?
>Thanks.
>
>  
>
I assume you're referring to the fact that Twisted conch provides a
replacement for the manhole support in
base Twisted.  It's confusing conch claims to be:

"...an SSHv2 implementation written in Python. SSH is a protocol
designed to allow remote access to shells and commands, but it is
generic enough to allow everything from TCP forwarding to generic
filesystem access.",

while the manhole code in base Twisted provides a telnet server/client
which allows console access to a Twisted server, and also provides
a very powerful PB-based graphical inspection took (gtkmanhole and
gtk2manhole).  I didn't see any gtkmanhole support in Twisted conch, but
now that I look more closely, I do see a 'tkconch' which seems to have
an overlapping function.  Further, there is no indication in the Twisted
source that the non-conch manhole is deprecated, although that seems to
be implicit from the text on the conch site:
"... A new implementation of Twisted's Manhole application is also
included, featuring server-side input history and interactive syntax
coloring."
It's further confusing, because conch is an ssh/telnet library, so I
can't see why the manhole support should be there (it would seem logical
that manhole should be a sibling project to conch that depends on it and
Twisted base.

In particular, I want to use the Gnome Canvas object browser
(twisted.manhole.ui.spelunk_gnome), which unfortunately only appears to
be support in gtkmanhole, not gtk2manhole, and certainly not in conch.

My patches were specifically for the twisted.manhole.ui.gtkmanhole and I
can open an issue for them if twisted.manhole isn't really
deprecated.

Dave



From mary-twisted at puzzling.org  Tue Nov 22 19:16:47 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 23 Nov 2005 11:16:47 +1100
Subject: [Twisted-Python] One day Twisted documentation sprint
In-Reply-To: <20051110000341.GA4443@home.puzzling.org>
References: <20051110000341.GA4443@home.puzzling.org>
Message-ID: <20051123001647.GA7634@home.puzzling.org>

I haven't forgotten about this! Unfortunately, with the end of the year,
bushels of work and holiday season sneaking up on me I don't think I
will be able to hold this sprint before the new year.

I'd like to propose the following date for it: Saturday, January 14
2006. (Apologies to the one person who found weekends tough: sounds like
most respondents are busy weekdays.)

Reminder on the basic details: I want to spend a day online with as many
hands as possible *reviewing* Twisted documentation: what's not
up-to-date? what's confusing? what functionality is covered only at an
advanced level with no corresponding beginner or intermediate documents?
what could use more advanced documentation? which documents exhibit
style or practices we want to discourage? what's flat out wrong?

This will give us hopefully enough work for approximately the next
galactical lifetime, the first epoch of which will be a writing sprint
sometime in late February or early March 2006.

-Mary



From radeex at gmail.com  Tue Nov 22 20:20:19 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 22 Nov 2005 20:20:19 -0500
Subject: [Twisted-Python] One day Twisted documentation sprint
In-Reply-To: <20051123001647.GA7634@home.puzzling.org>
References: <20051110000341.GA4443@home.puzzling.org>
	<20051123001647.GA7634@home.puzzling.org>
Message-ID: <60ed19d40511221720p319d6af9q841633dd6c2eeaea@mail.gmail.com>

On 11/22/05, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> I haven't forgotten about this! Unfortunately, with the end of the year,
> bushels of work and holiday season sneaking up on me I don't think I
> will be able to hold this sprint before the new year.
>
> I'd like to propose the following date for it: Saturday, January 14
> 2006. (Apologies to the one person who found weekends tough: sounds like
> most respondents are busy weekdays.)

Same happened to me, especially with all this travelling I'm doing. I
think January 14th will be much better for me.

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From foom at fuhm.net  Wed Nov 23 02:00:10 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 23 Nov 2005 00:00:10 -0700
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1Eeoby-0001DA-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2005-11-16 07:00:01.910000:
 Bugs opened: 4   Bugs closed: 6   Total open bugs: 481 (-2)
  Urgent: 1 (+0)
  Bug: 224 (-2)
  Feature: 173 (+0)
  Wish: 83 (+0)

New / Reopened Bugs
______________________
                    ==== Bug ====
[CORE] trial ImportErrors in loadReporters when subpackages not installed  (yesterday)
       http://twistedmatrix.com/bugs/issue1336 opened by acapnotic

[WORDS] bad interpretation with escape characters in twisted.words (IRC)  (3 days ago)
       http://twistedmatrix.com/bugs/issue1335 opened by gnuk

socket.error: (53, 'Software caused connection abort')  (1 month ago)
CLOSED http://twistedmatrix.com/bugs/issue1274 opened by ghazel

[CORE, TRIAL] trial --until-failure is broken  (1 month ago)
CLOSED http://twistedmatrix.com/bugs/issue1263 opened by exarkun

Bugs Closed
______________________
                    ==== Bug ====
[TRIAL] TASK: Write tests for module-level sorting in TestLoader  (1 month ago)
       http://twistedmatrix.com/bugs/issue1232 opened by jml, closed by jml

[TRIAL] Trial doesn't errback returned deferred when test method times out  (6 months ago)
       http://twistedmatrix.com/bugs/issue1005 opened by exarkun, closed by jml

[TESTS, TRIAL] trial.test_tests sucks  (1 month ago)
       http://twistedmatrix.com/bugs/issue1221 opened by jml, closed by jml

[TRIAL] trial TestImportErrors tests fail on Windows due to in use files  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1317 opened by justinj, closed by justinj

socket.error: (53, 'Software caused connection abort')  (1 month ago)
       http://twistedmatrix.com/bugs/issue1274 opened by ghazel, closed by teratorn

[CORE, TRIAL] trial --until-failure is broken  (1 month ago)
       http://twistedmatrix.com/bugs/issue1263 opened by exarkun, closed by jml




From Henning.Ramm at mediapro-gmbh.de  Wed Nov 23 04:01:38 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 23 Nov 2005 10:01:38 +0100
Subject: [Twisted-Python] deprecation of manhole.telnet (was: ANN: Twisted
	2.1.0 windows installer)
Message-ID: <F92274058556DE42B94B148EEFB91839021CB604@exchange-03.suedkurier.de>

>This is now available at http://twistedmatrix.com/projects/core/
>Python 2.3 and Python 2.4 builds provided.

Thank you very much!

I just updated and got a DeprecationWarning on import of twisted.manhole.telnet: it seems to import twisted.protocols.telsnet but should use twisted.conch.telnet instead.

Is manhole as such supposed to be deprecated?

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From Henning.Ramm at mediapro-gmbh.de  Wed Nov 23 04:30:23 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 23 Nov 2005 10:30:23 +0100
Subject: [Twisted-Python] deprecation of manhole.telnet (was: ANN:
	Twisted2.1.0 windows installer)
Message-ID: <F92274058556DE42B94B148EEFB91839021CB607@exchange-03.suedkurier.de>

>I just updated and got a DeprecationWarning on import of 
>twisted.manhole.telnet: it seems to import 
>twisted.protocols.telsnet but should use twisted.conch.telnet instead.
>Is manhole as such supposed to be deprecated?

Sorry, I read the gtk2manhole thread too late...

HR



From exarkun at divmod.com  Wed Nov 23 10:27:16 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 23 Nov 2005 10:27:16 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15184 - Initial
 implementation. Breaks a few tests.
In-Reply-To: <E1EetAj-0007OV-00@wolfwood>
Message-ID: <20051123152716.1217.1925763858.divmod.quotient.437@ohm>

On Wed, 23 Nov 2005 04:52:21 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Wed Nov 23 04:52:21 2005
>New Revision: 15184
>
>Modified:
>   branches/jml/trial-deferred-logic/twisted/trial/unittest.py
>   branches/jml/trial-deferred-logic/twisted/trial/util.py
>Log:
>Initial implementation.  Breaks a few tests.
>
> [snip]
>+
>+    def _eb_setUp(self, failure, result):
> [snip]
>+
>+    def _cb_method(self, ignored, result):
>+
> [snip]
>+
>+    def _eb_method(self, f, result):
> [snip]
>+
>+    def _eb_tearDown(self, failure, result):

Methods with a contained underscore are reserved for automatic dispatch.  I believe the convention you are looking for here is "_ebSetUp", "_cbMethod", etc.

Jean-Paul



From dekonerding at lbl.gov  Wed Nov 23 12:30:53 2005
From: dekonerding at lbl.gov (David E. Konerding)
Date: Wed, 23 Nov 2005 09:30:53 -0800
Subject: [Twisted-Python] patches to make gtk2manhole work with gtk2
In-Reply-To: <1132694567.8857.16.camel@localhost.localdomain>
References: <43838595.5070505@lbl.gov>
	<1132694567.8857.16.camel@localhost.localdomain>
Message-ID: <4384A74D.4090405@lbl.gov>

Itamar Shtull-Trauring wrote:

>On Tue, 2005-11-22 at 12:54 -0800, David E. Konerding wrote:
>  
>
>>Hi, in attempting to use gtk2manhole I had some problems.  It looks like
>>it was written on a much older version of gtk2,
>>here are patches I applied (they are not complete, merely sufficient to
>>start the application):
>>    
>>
>
>Hi,
>
>IIRC that version of manhole is deprecated; possibly that should be
>removed from the repository? Or maybe i'm confused. In any case, could
>you open an issue in the tracker - http://twistedmatrix.com/bugs/?
>Thanks.
>
>  
>

Ah... I think you are probably referring to this message:

/home/dek/sw/i386/suse/9.3/Python-2.4.2/lib/python2.4/site-packages/twisted/manhole/telnet.py:8:
DeprecationWarning: As of Twisted 2.1, twisted.protocols.telnet is
deprecated.  See twisted.conch.telnet for the current, supported API.
  from twisted.protocols import telnet


This message doesn't really say anything about the PB-based manhole
server and client in twisted.manhole being deprecated.

Dave



From gmcdonald at infocomp.com  Thu Nov 24 00:47:26 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Thu, 24 Nov 2005 16:47:26 +1100
Subject: [Twisted-Python] One day Twisted documentation sprint
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC50BD@XCHANGE>

Mary,

That date knocks me out of the running as I'll be getting back from holidays
abroad that night.  Is it possible to move it a week later perhaps?

Grant

P.S. is your email address at puzzling still working?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Mary
Gardiner
Sent: 23 November 2005 11:17
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] One day Twisted documentation sprint


I haven't forgotten about this! Unfortunately, with the end of the year,
bushels of work and holiday season sneaking up on me I don't think I
will be able to hold this sprint before the new year.

I'd like to propose the following date for it: Saturday, January 14
2006. (Apologies to the one person who found weekends tough: sounds like
most respondents are busy weekdays.)

Reminder on the basic details: I want to spend a day online with as many
hands as possible *reviewing* Twisted documentation: what's not
up-to-date? what's confusing? what functionality is covered only at an
advanced level with no corresponding beginner or intermediate documents?
what could use more advanced documentation? which documents exhibit
style or practices we want to discourage? what's flat out wrong?

This will give us hopefully enough work for approximately the next
galactical lifetime, the first epoch of which will be a writing sprint
sometime in late February or early March 2006.

-Mary

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051124/9bbb8b95/attachment.htm 

From mary-twisted at puzzling.org  Thu Nov 24 00:59:15 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 24 Nov 2005 16:59:15 +1100
Subject: [Twisted-Python] One day Twisted documentation sprint
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC50BD@XCHANGE>
References: <61DA7719C45FD31185280008C733EF6E04AC50BD@XCHANGE>
Message-ID: <20051124055915.GA16125@home.puzzling.org>

On Thu, Nov 24, 2005, Grant McDonald wrote:
> Mary,
> 
> That date knocks me out of the running as I'll be getting back from holidays
> abroad that night.  Is it possible to move it a week later perhaps?

Possibly, although I always worry with these things that that will just
mean that four other people will pop up and say that the new date is bad
for them. I'll let you know in a few days.

> P.S. is your email address at puzzling still working?

Yes, I own the domain. If you want to check my address in future, you
can search for my postings to the list via
http://twistedmatrix.com/pipermail/twisted-python/ , they all have the
address in them.

-Mary



From itamar at itamarst.org  Thu Nov 24 12:53:28 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 24 Nov 2005 12:53:28 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15200 - I'd like _setUp
	thanks
In-Reply-To: <E1EfBEN-0007vz-00@wolfwood>
References: <E1EfBEN-0007vz-00@wolfwood>
Message-ID: <1132854808.8766.1.camel@localhost.localdomain>

On Thu, 2005-11-24 at 00:09 -0700, Jonathan Lange wrote:

> Modified: branches/jml/trial-deferred-logic/twisted/test/test_ssl.py
> ==============================================================================
> --- branches/jml/trial-deferred-logic/twisted/test/test_ssl.py	(original)
> +++ branches/jml/trial-deferred-logic/twisted/test/test_ssl.py	Thu Nov 24 00:09:19 2005
> @@ -173,7 +173,7 @@
>  
>  class StolenTCPTestCase(test_tcp.ProperlyCloseFilesTestCase, test_tcp.WriteDataTestCase):
>      def setUp(self):
> -        self._setUp()
> +        self._setUpStuff()

If it happened here it might happen elsewhere... maybe use __ methods?
Or some other name.




From jml at mumak.net  Thu Nov 24 17:44:42 2005
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Nov 2005 09:44:42 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15200 - I'd like _setUp
	thanks
In-Reply-To: <1132854808.8766.1.camel@localhost.localdomain>
References: <E1EfBEN-0007vz-00@wolfwood>
	<1132854808.8766.1.camel@localhost.localdomain>
Message-ID: <d06a5cd30511241444h49183b88m@mail.gmail.com>

On 25/11/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Thu, 2005-11-24 at 00:09 -0700, Jonathan Lange wrote:
>
> > Modified: branches/jml/trial-deferred-logic/twisted/test/test_ssl.py
> > ==============================================================================
> > --- branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        (original)
> > +++ branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        Thu Nov 24 00:09:19 2005
> > @@ -173,7 +173,7 @@
> >
> >  class StolenTCPTestCase(test_tcp.ProperlyCloseFilesTestCase, test_tcp.WriteDataTestCase):
> >      def setUp(self):
> > -        self._setUp()
> > +        self._setUpStuff()
>
> If it happened here it might happen elsewhere... maybe use __ methods?
> Or some other name.
>

I'd like to use a single underscore because I expect these methods to
be overridden (that can't be a real word).  So, I'd much prefer to
rename.  Suggestions welcome.

cheers,
jml



From jml at mumak.net  Thu Nov 24 20:12:41 2005
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Nov 2005 12:12:41 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15184 - Initial
	implementation. Breaks a few tests.
In-Reply-To: <20051123152716.1217.1925763858.divmod.quotient.437@ohm>
References: <E1EetAj-0007OV-00@wolfwood>
	<20051123152716.1217.1925763858.divmod.quotient.437@ohm>
Message-ID: <d06a5cd30511241712t613f26f9q@mail.gmail.com>

On 24/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Wed, 23 Nov 2005 04:52:21 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
> >Author: jml
> >Date: Wed Nov 23 04:52:21 2005
> >New Revision: 15184
> >
> >Modified:
> >   branches/jml/trial-deferred-logic/twisted/trial/unittest.py
> >   branches/jml/trial-deferred-logic/twisted/trial/util.py
> >Log:
> >Initial implementation.  Breaks a few tests.
> >
> > [snip]
> >+
> >+    def _eb_setUp(self, failure, result):
> > [snip]
> >+
> >+    def _cb_method(self, ignored, result):
> >+
> > [snip]
> >+
> >+    def _eb_method(self, f, result):
> > [snip]
> >+
> >+    def _eb_tearDown(self, failure, result):
>
> Methods with a contained underscore are reserved for automatic dispatch.  I believe the convention you are looking for here is "_ebSetUp", "_cbMethod", etc.

Initially I agreed, but I've changed my mind.

I want an errback for the method _setUp, not setUp.  If I take
_ebSetUp, then TestCase authors can't use _ebSetUp as an errback for
setUp.  So _eb_setUp seems like the sane choice.

cheers,
jml

PS. Of course, as Itamar suggests, I should perhaps pick a name other
than '_setUp'



From jml at mumak.net  Thu Nov 24 21:47:54 2005
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Nov 2005 13:47:54 +1100
Subject: [Twisted-Python] trial setUp/tearDown behavior
In-Reply-To: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
References: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
Message-ID: <d06a5cd30511241847l67f9237dh@mail.gmail.com>

On 16/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> A main problem to coming to some agreement here seems to be that a lot of people are assuming they know how trial deals with shared state (or how trial should deal with shared state), but I haven't seen anyone explicitly spell this out yet.  Doing this might be a good first step to making further progress.

I'll give it a burl.

Trial should not share state between tests, unless specifically and
explicitly requested by the application developer.

That is, the only state shared between tests ought to be state
explicitly defined in something like setUpClass, resources or similar.

Tests are particularly useful as debugging aids.  So, as much as
possible, tests should be self-contained and reproducable.  It should
be easy to reproduce a failed test.  The order in which tests are run
should have no bearing on their success of failure.  Sharing state
works against this -- particularly 'flag variables'.


As a side-note: All of the Twisted tests pass when run without shared
state [1].  This is almost certainly a by-product of the buildbot
running the tests in random order.

I hope this helps.
jml

1.  Achieved 'in the lab' by running setUpClass / tearDownClass for
every test.  Obviously, the final implementation would have to be
different.



From exarkun at divmod.com  Fri Nov 25 00:50:41 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 25 Nov 2005 00:50:41 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15200 - I'd like _setUp
	thanks
In-Reply-To: <d06a5cd30511241444h49183b88m@mail.gmail.com>
Message-ID: <20051125055041.1217.526571068.divmod.quotient.602@ohm>

On Fri, 25 Nov 2005 09:44:42 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 25/11/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>> On Thu, 2005-11-24 at 00:09 -0700, Jonathan Lange wrote:
>>
>> > Modified: branches/jml/trial-deferred-logic/twisted/test/test_ssl.py
>> > ==============================================================================
>> > --- branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        (original)
>> > +++ branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        Thu Nov 24 00:09:19 2005
>> > @@ -173,7 +173,7 @@
>> >
>> >  class StolenTCPTestCase(test_tcp.ProperlyCloseFilesTestCase, test_tcp.WriteDataTestCase):
>> >      def setUp(self):
>> > -        self._setUp()
>> > +        self._setUpStuff()
>>
>> If it happened here it might happen elsewhere... maybe use __ methods?
>> Or some other name.
>>
>
>I'd like to use a single underscore because I expect these methods to
>be overridden (that can't be a real word).  So, I'd much prefer to
>rename.  Suggestions welcome.

If you expect them to be overridden, they should not be underscore prefixed.  Underscore prefix indicates privateness.

Also, "stuff" has no place in any function or variable name anyplace in Twisted.  Slopping naming encourages slopping thinking.  Pick a name that describes the purpose of the method.

Lastly, why do you expect them to be overridden?  Do you just expect test_tcp.ProperlyCloseFilesTestCase and test_ssl.StolenTCPTestCase to override them, or do you expect other classes to do so?  If the latter, why?  If the former, what does it matter (and this code should be factored better, so the question is moot)?

Jean-Paul



From jml at mumak.net  Fri Nov 25 01:03:58 2005
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Nov 2005 17:03:58 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15200 - I'd like _setUp
	thanks
In-Reply-To: <20051125055041.1217.526571068.divmod.quotient.602@ohm>
References: <d06a5cd30511241444h49183b88m@mail.gmail.com>
	<20051125055041.1217.526571068.divmod.quotient.602@ohm>
Message-ID: <d06a5cd30511242203n59560732i@mail.gmail.com>

On 25/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 25 Nov 2005 09:44:42 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >On 25/11/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> >> On Thu, 2005-11-24 at 00:09 -0700, Jonathan Lange wrote:
> >>
> >> > Modified: branches/jml/trial-deferred-logic/twisted/test/test_ssl.py
> >> > ==============================================================================
> >> > --- branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        (original)
> >> > +++ branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        Thu Nov 24 00:09:19 2005
> >> > @@ -173,7 +173,7 @@
> >> >
> >> >  class StolenTCPTestCase(test_tcp.ProperlyCloseFilesTestCase, test_tcp.WriteDataTestCase):
> >> >      def setUp(self):
> >> > -        self._setUp()
> >> > +        self._setUpStuff()
> >>
> >> If it happened here it might happen elsewhere... maybe use __ methods?
> >> Or some other name.
> >>
> >
> >I'd like to use a single underscore because I expect these methods to
> >be overridden (that can't be a real word).  So, I'd much prefer to
> >rename.  Suggestions welcome.
>
> If you expect them to be overridden, they should not be underscore prefixed.  Underscore prefix indicates privateness.

Ahh.  I had taken it to indicate 'protectedness' (the standard says
"non-public").  This can be quickly fixed.

> Lastly, why do you expect them to be overridden?  Do you just expect test_tcp.ProperlyCloseFilesTestCase and test_ssl.StolenTCPTestCase to override them, or do you expect other classes to do so?  If the latter, why?  If the former, what does it matter (and this code should be factored better, so the question is moot)?

I'm not expecting actual tests to override them.  I was thinking more
of the use-case where someone extends TestCase to, say, DBTestCase,
which runs every test_ method inside a database transaction.  To do
that, _testMethod would have to be overridden.

jml



From exarkun at divmod.com  Sat Nov 26 12:19:16 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 26 Nov 2005 12:19:16 -0500
Subject: [Twisted-Python] 
	Re: [Twisted-commits] r15209 - basename('/') == '', not IndexError
In-Reply-To: <E1Efqqo-0000G9-00@wolfwood>
Message-ID: <20051126171916.1217.1339555051.divmod.quotient.854@ohm>

On Fri, 25 Nov 2005 20:35:46 -0700, Stephen Thorne <stephen at wolfwood.twistedmatrix.com> wrote:
>Author: stephen
>Date: Fri Nov 25 20:35:45 2005
>New Revision: 15209
>
>Modified:
>   branches/wsanchez/dav/twisted/vfs/pathutils.py
>Log:
>basename('/') == '', not IndexError
>
>Modified: branches/wsanchez/dav/twisted/vfs/pathutils.py
>==============================================================================
>--- branches/wsanchez/dav/twisted/vfs/pathutils.py	(original)
>+++ branches/wsanchez/dav/twisted/vfs/pathutils.py	Fri Nov 25 20:35:45 2005
>@@ -51,7 +51,10 @@
>     return currNode
>
> def basename(path, cwd='/'):
>-    return getAbsoluteSegments(path, cwd)[-1]
>+    s = getAbsoluteSegments(path, cwd)
>+    if s:
>+        return s[-1]
>+    return ''
>
> def dirname(path, cwd='/'):
>     return "/" + "/".join(getAbsoluteSegments(path, cwd)[:-1])

Any plans to revert this?

Jean-Paul



From lists-twistedmatrix at silverwraith.com  Sat Nov 26 18:48:08 2005
From: lists-twistedmatrix at silverwraith.com (Avleen Vig)
Date: Sat, 26 Nov 2005 15:48:08 -0800
Subject: [Twisted-Python] Irc <-> Jabber gateway?
Message-ID: <20051126234808.GD15177@silverwraith.com>

Has anyone written such a device using twisted?
In theory it ought to be easy enough, I don't want to duplicate the work
if someone's already done it though :-)

-- 
Avleen Vig
Systems Administrator
Personal: www.silverwraith.com

"Wickedness is a myth invented by good people to account for the curious
 attractiveness of others."  - Oscar Wilde



From jadestorm at nc.rr.com  Sat Nov 26 23:10:35 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Sat, 26 Nov 2005 23:10:35 -0500
Subject: [Twisted-Python] Irc <-> Jabber gateway?
In-Reply-To: <20051126234808.GD15177@silverwraith.com>
References: <20051126234808.GD15177@silverwraith.com>
Message-ID: <BFC36534-9536-4DA8-88C0-E45D806088AE@nc.rr.com>

*laugh*  I was just talking about this.  (like possibly doing it)   
There closest thing has been jjigw, but that's using xmpppy, not  
Twisted.  You might be interested in using the curent Py* transports  
as a base.  I would suggest PyMSNt as I have stripped the "baseproto"  
stuff out of my transports (PyAIMt and PyICQt).  http://msn- 
transport.jabberstudio.org/ if you are interested in checking it  
out.  If you wanted to start from scratch, that's fine too, it's just  
James, author of PyMSN, made it fairly capable of plugging another  
protocol into it's core pieces.

jjigw seems to be very close to doing what I want it to do though.   
(I was originally looking at this because I didn't feel that any of  
the irc transports did what I really wanted. . . that being just be  
capable of logging into an irc server without having to be in an  
actual channel)  I'm not sure jjigw is being developed anymore though.

You may be interested in joining the py-transports at blathersource.org  
mailing list, btw.  See: http://www.modevia.com/cgi-bin/mailman/ 
listinfo/py-transports
We'd be happy to include you in our little twisted-based transport  
family.  =)

Daniel

On Nov 26, 2005, at 6:48 PM, Avleen Vig wrote:

> Has anyone written such a device using twisted?
> In theory it ought to be easy enough, I don't want to duplicate the  
> work
> if someone's already done it though :-)
>
> -- 
> Avleen Vig
> Systems Administrator
> Personal: www.silverwraith.com
>
> "Wickedness is a myth invented by good people to account for the  
> curious
>  attractiveness of others."  - Oscar Wilde
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From olilau.list.1 at gmail.com  Sun Nov 27 10:18:19 2005
From: olilau.list.1 at gmail.com (Olivier Laurent)
Date: Sun, 27 Nov 2005 16:18:19 +0100
Subject: [Twisted-Python] Serving different resource types from the same
	directory
Message-ID: <20051127151819.GA19135@debian>

I'm trying to serve 2 different kind of resources from the same
directory. I can, with no problem, serve one kind or the other but not
the two resource types at the same time.

Examples abounds on the web on how to serve one kind of resources from
subdirectory /foo and another kind from subdirectory /bar. But no
example on how to serve different kind of resources from the same
directory.

Here is how I tried:

# [...]

PATH = '/var/www/'

pt_resource = static.File(PATH)
pt_resource.processors = { '.pt' : PTResource }
pt_resource.indexNames = [ 'index' + '.pt' ]

rst_resource = static.File( PATH )
rst_resource.processors = { '.rst' : RSTResource }
rst_resource.indexNames = [ 'index' + '.rst' ]

#root = Resource() # I tried this too
root = static.File(PATH)

root.putChild(PATH, pt_resource)
root.putChild(PATH, rst_resource)

reactor.listenTCP(
        80,
        server.Site( root )
        )
reactor.run( )
# this is the end

What's wrong ? What did I forget ? Is it possible ?

Thank you.

-- 
Olivier Laurent



From glyph at divmod.com  Sun Nov 27 12:01:12 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 27 Nov 2005 12:01:12 -0500
Subject: [Twisted-Python] Serving different resource types from the same
In-Reply-To: <20051127151819.GA19135@debian>
Message-ID: <20051127170112.1217.886563358.divmod.quotient.1151@ohm>


On Sun, 27 Nov 2005 16:18:19 +0100, Olivier Laurent <olilau.list.1 at gmail.com> wrote:
>I'm trying to serve 2 different kind of resources from the same
>directory. I can, with no problem, serve one kind or the other but not
>the two resource types at the same time.

Please ask questions like this on the twisted-web mailing list.



From mailinglists at smartology.nl  Mon Nov 28 04:14:48 2005
From: mailinglists at smartology.nl (Remi Cool)
Date: Mon, 28 Nov 2005 10:14:48 +0100
Subject: [Twisted-Python] Serving different resource types from the same
	directory
In-Reply-To: <20051127151819.GA19135@debian>
References: <20051127151819.GA19135@debian>
Message-ID: <438ACA88.6000302@smartology.nl>

Olivier Laurent wrote:

>I'm trying to serve 2 different kind of resources from the same
>directory. I can, with no problem, serve one kind or the other but not
>the two resource types at the same time.
>
>Examples abounds on the web on how to serve one kind of resources from
>subdirectory /foo and another kind from subdirectory /bar. But no
>example on how to serve different kind of resources from the same
>directory.
>
>Here is how I tried:
>
># [...]
>
>PATH = '/var/www/'
>
>pt_resource = static.File(PATH)
>pt_resource.processors = { '.pt' : PTResource }
>pt_resource.indexNames = [ 'index' + '.pt' ]
>
>rst_resource = static.File( PATH )
>rst_resource.processors = { '.rst' : RSTResource }
>rst_resource.indexNames = [ 'index' + '.rst' ]
>
>#root = Resource() # I tried this too
>root = static.File(PATH)
>
>root.putChild(PATH, pt_resource)
>root.putChild(PATH, rst_resource)
>
>reactor.listenTCP(
>        80,
>        server.Site( root )
>        )
>reactor.run( )
># this is the end
>
Try this:

myRs = static.File(PATH)
myRs.processors = {'.pt' : PTResource, '.rst' : RSTResource}
myRs.indexNames = ['index' + '.pt', 'index' + '.rst' ]

- Remi -




From johann.borck at densedata.com  Mon Nov 28 06:00:08 2005
From: johann.borck at densedata.com (Johann Borck)
Date: Mon, 28 Nov 2005 12:00:08 +0100
Subject: [Twisted-Python] newpb authorization
Message-ID: <438AE338.5090708@densedata.com>

I'm writing a distributed app which depends on username/password
authorization. There's an entry in the newpb-docs, newpb-jobs.txt or so,
where an example is given how this authorization might/will look like.
it seems that it is to be implemented in the negotiation-phase, before
the switch-to-banana. Is that interpretation right, or am i wrong about
this, and the authorization is meant to take place via a mediating
pb.referenceable, similar to oldpb? In the latter case it's mostly just
a matter of copy&paste from the oldpb implementation, which works for me
now. But if there are some ideas on where and how to do it in an earlier
stage, or considerations of advantages to do it some defined way, i'd be
glad to know about.

Brian Warner wrote:

>cred has not yet been dragged into newpb, but it
>won't be too much work once someone figures out what exactly they want out of
>such a combination  :) .

What i'm thinking of is two distinct uses of cred in pb. one at an early
stage, affecting the whole connection to be or not to be, and one in
later phases, to have a basis for managing roles and permissions while
the app is running. i will spend some work on that, again, any ideas are
appreciated, and with some feedback it's more likely to result in
something usable for more than just me.

Johann



From exarkun at divmod.com  Mon Nov 28 13:01:49 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 28 Nov 2005 13:01:49 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15230 - Merge of
 jml/trial-deferred-logic -r15183:15229. Resolves #1341.
In-Reply-To: <E1Egcc5-0001uH-00@wolfwood>
Message-ID: <20051128180149.1217.245601134.divmod.quotient.1482@ohm>

On Sun, 27 Nov 2005 23:35:45 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Sun Nov 27 23:35:45 2005
>New Revision: 15230
>
>Modified:
>   trunk/twisted/mail/test/test_mail.py
>   trunk/twisted/test/test_ftp.py
>   trunk/twisted/test/test_ssl.py
>   trunk/twisted/test/test_tcp.py
>   trunk/twisted/trial/reporter.py
>   trunk/twisted/trial/runner.py
>   trunk/twisted/trial/test/detests.py
>   trunk/twisted/trial/test/test_deferred.py
>   trunk/twisted/trial/test/test_failure_formatting.py
>   trunk/twisted/trial/test/test_keyboard.py
>   trunk/twisted/trial/test/timeouts.py
>   trunk/twisted/trial/unittest.py
>   trunk/twisted/trial/util.py
>   trunk/twisted/web/test/test_webclient.py
>Log:
>Merge of jml/trial-deferred-logic -r15183:15229.  Resolves #1341.
>

The Gtk reactor can no longer complete the test suite: http://twistedmatrix.com/buildbot/reactors/builds/884/step-gtk/0

On my machine, the suite hangs in twisted.web.test.test_webclient.CookieTestCase.testNoCookies, but it seems to die in twisted.test.test_tcp.HalfClose2TestCase.testNoNotification on buildbot every time.  This may just be a race (or several races) going different ways on a somewhat reliable fashion on the different hardware.

It seems like the remaining reactor.iterate() calls are the likely cause of this?

Jean-Paul



From warner at lothar.com  Tue Nov 29 02:37:40 2005
From: warner at lothar.com (Brian Warner)
Date: Mon, 28 Nov 2005 23:37:40 -0800 (PST)
Subject: [Twisted-Python] newpb authorization
Message-ID: <20051128.233740.02126410.warner@lothar.com>

> There's an entry in the newpb-docs, newpb-jobs.txt or so,
> where an example is given how this authorization might/will look like.
> it seems that it is to be implemented in the negotiation-phase, before
> the switch-to-banana. Is that interpretation right, or am i wrong about
> this, and the authorization is meant to take place via a mediating
> pb.referenceable, similar to oldpb?

My current thought is the latter, keeping all notion of authorization at the
Referenceable layer, out of the connection itself. I'm thinking that the
Realm (in cred terms) is a Referenceable, and you send your credentials to it
via a login() method. The Realm then returns another Referenceable (the
Avatar), which you interact with to your hearts content. On the client side,
you'd have some sort of higher-level object to which you would pass the
PB-URL of the target Realm and your Credentials. When all was said and done,
you'd wind up with a RemoteReference to the remote Avatar. You could have
multiple Realms on the same host, distinguished by their URLs.

I'm definitely leaning in a capabilities-based direction these days, so both
the Realm (which anybody can access) and the Avatar (which can only be
accessed by the person with the right credentials) are reachable with URLs,
the only difference being that the Realm's URL is public knowledge, while the
Avatar URLs are randomly-generated and unguessable. If you want to bypass the
whole username/password thing, you just give the hopeful client the URL of
their Avatar, and let them connect directly to that.

[note that some of the things I wrote about cred-vs-newpb were before I was
fully aware of the capabilities model. back in those days, I was vaguely
thinking of having a "default object" for each connection, which could accept
credentials and return Avatars, such that it might make sense to put things
like username and passwords in the URLs. Also, back then it seemed reasonable
to use Interfaces or RemoteInterfaces as ways to specify "who" or "what" you
wanted to talk to. I've since come to my senses. newpb provides a layer of
secure remote references, on top of which you can build whatever sort of
authorization scheme you like]

[also, back then I was expecting Glyph to swoop down and implement the whole
thing in one afternoon's frantic coding binge, absolving me from needing to
understand how it would actually work or get used. fortunately this has not
come to pass, so I get to write something that can be comprehended by my own
humble brain. muahahaha.]

> What i'm thinking of is two distinct uses of cred in pb. one at an early
> stage, affecting the whole connection to be or not to be, and one in
> later phases, to have a basis for managing roles and permissions while
> the app is running.

It sounds like the capabilities-based scheme I have in mind fits the second
of your use cases. As for the first one.. what sort of things connection-time
things would you like to be controlled by authorization information? One
thing that comes to mind is whether the connection will be accepted or not,
presumeably to reduce resource utilization, but consider this:

 the TCP connection will be accepted regardless. until the first byte of data
 arrives, the only thing we can deduce about the client is their IP address,
 and we all know how unhelpful it is to make decisions upon purely that
 basis.

 given that tub.registerReference() returns an unguessable URL by default,
 the only objects that can be reached will be ones to which you have
 explicitly granted access, either by registering a well-known URL (like
 "/login") or by giving the URL to the client by some other channel. So
 allowing the "bad guy" to establish a connection doesn't actually let them
 access anything you don't want them to have.

 newpb's Schemas can be used to minimize resource utilization (specifically
 memory consumption) required by messages sent to those public objects. If
 the only object exposed to the world at large is the "/login" Realm, and if
 it only has a single remote_login(username, password) method, then a simple
 (username=str, password=str) schema will prevent that one permissible
 message from consuming too much space, limiting its utility in a DoS attack.


Given those, what other connection-time authorization checks do you think
might be useful?

Having authorization take place entirely at the object layer also has the
nice property that you can run arbitrary numbers of mutually-unaware services
off the same connection. My reluctance to add authorization below that layer
comes partially from the benefits of this property. As an example, in the
Buildbot[1], there are several PB services provided to entities in the
outside world (buildslaves, a status client, a debug client, and a Change
inlet), each distinguished by the cred username/password provided by the
various clients. The nominal API for these services (i.e., what you put in
the config file to create each service) would allow you to choose an
arbitrary TCP port for each, which may or may not overlap with each other. In
practice, the hassle of creating a Realm for each PBServerFactory (some of
which know about some usernames, others which don't, all of which could
change each time the config file is changed, etc) was so great that I punted
and just forced the user to make all those services share a single TCP port,
hence using a single Realm which knows about everything.

I haven't quite figured out how this would work if Buildbot used newpb, but I
know that I'd expose, say, the status service with a URL that ended in
"/status", and the debug service (which is supposed to be protected, and thus
gets a user-specified password in oldpb) would just get an unguessable URL.
The same TCP port could be used for different services that had different
authorization requirements.

If authorization took place before the object-level connection could be
established, I'd have to coordinate another layer of usernames and passwords
(or challenge-response pairs, or SRP exchanges, or whatever) without the
benefit of using PB serialization or object references. Having already built
one remote-method-invocation protocol this decade, I'm not keen on creating
another one quite yet :).


cheers,
 -Brian

PS: Yay! Somebody is looking at newpb! :)


[1] Buildbot: http://buildbot.sf.net/



From tv at twistedmatrix.com  Tue Nov 29 04:42:29 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 29 Nov 2005 11:42:29 +0200
Subject: [Twisted-Python] My review of Abe's book "Twisted Network
	Programming Essentials"
Message-ID: <438C2285.2080406@twistedmatrix.com>

Hi. I just finished a review of the new O'Reilly book on Twisted,
by Abe Fettig (hi Abe!), and thought you all might be interested in it:

http://tv.debian.net/articles/review-snakeball/



From Henning.Ramm at mediapro-gmbh.de  Tue Nov 29 05:59:59 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Tue, 29 Nov 2005 11:59:59 +0100
Subject: [Twisted-Python] My review of Abe's book "Twisted
	NetworkProgramming Essentials"
Message-ID: <F92274058556DE42B94B148EEFB91839021CB626@exchange-03.suedkurier.de>

>Hi. I just finished a review of the new O'Reilly book on Twisted,
>by Abe Fettig (hi Abe!), and thought you all might be interested in it:

Thank you very much for the hints how to simplify the Python code!
(I didn't knew there was dict.setdefault ;-)


Greetlings, HR



From antonykummel at yahoo.com  Tue Nov 29 07:15:08 2005
From: antonykummel at yahoo.com (Antony Kummel)
Date: Tue, 29 Nov 2005 04:15:08 -0800 (PST)
Subject: [Twisted-Python] problems with threadedselectreactor
Message-ID: <20051129121508.80687.qmail@web33904.mail.mud.yahoo.com>

Hi!
  
  I encountered two problems when using threadedselectreactor on win32. I  am not versed enough with reactor technicalities to resolve them  myself, but I would gladly conduct any tests the experts recommend.
  
  1. I often get tracebacks similar to this:
        File  "C:\Python23\Lib\site-packages\twisted\internet\threadedselectreactor.py",  line 299, in _doReadOrWrite
          why = getattr(selectable, method)()
        File "C:\Python23\Lib\site-packages\twisted\internet\abstract.py", line 108, in doWrite
          l = self.writeSomeData(self.dataBuffer)
        File "C:\Python23\lib\site-packages\twisted\internet\tcp.py", line 358, in writeSomeData
          return self.socket.send(buffer(data, 0, self.SEND_LIMIT))
      exceptions.AttributeError: 'Server' object has no attribute 'socket'
  
  To my understanding, this can only happen if the Server's  connectionLost method had been called before the exception happened,  but for some reason, writeSomeData (or sometimes another method) was  still called. I hypothesize that the Server should have been removed  from some list or another but wasn't, and that this is the reactor's  responsibility.
  
  2. Sometimes I get this error:
  Traceback (most recent call last):
    File "C:\Python23\Lib\site-packages\wx-2.6-msw-unicode\wx\_core.py", line 7493, in MainLoop
      wx.PyApp.MainLoop(self)
    File "C:\Python23\Lib\site-packages\wx-2.6-msw-unicode\wx\_core.py", line 6926, in MainLoop
      return _core_.PyApp_MainLoop(*args, **kwargs)
    File "C:\Python23\Lib\site-packages\wx-2.6-msw-unicode\wx\_core.py", line 13266, in <lambda>
      lambda event: event.callable(*event.args, **event.kw) )
    File "C:\Python23\Lib\site-packages\twisted\internet\threadedselectreactor.py", line 241, in _interleave
      self.runUntilCurrent()
  --- <exception caught here> ---
    File "C:\Python23\Lib\site-packages\twisted\internet\base.py", line 541, in runUntilCurrent
      call.func(*call.args, **call.kw)
    File "C:\Python23\Lib\site-packages\twisted\internet\task.py", line 91, in __call__
      self._reschedule()
    File "C:\Python23\Lib\site-packages\twisted\internet\task.py", line 108, in _reschedule
      self.call = reactor.callLater(delay, self)
    File "C:\Python23\Lib\site-packages\twisted\internet\threadedselectreactor.py", line 116, in callLater
      self.wakeUp()
    File "C:\Python23\Lib\site-packages\twisted\internet\threadedselectreactor.py", line 112, in wakeUp
      self.waker.wakeUp()
    File "C:\Python23\Lib\site-packages\twisted\internet\posixbase.py", line 85, in wakeUp
      self.w.send('x')
  socket.error: (10055, 'No buffer space available')
  
  This doesn't seem to be a threadedselectreactor problem, but rather a  problem that stems from it's use with arbitrary event loops. I suspect  that it happens when the main thread doesn't respond for some time. I  think that the best way to deal with it is simply to ignore this error  (in wakeUp), because if the buffer is full, then the main thread  already knows (or about to find out) that it needs to wake up, although  maybe the user should be somehow notified that there is a problem (log  message?).
  
  Thanks,
  
  Antony Kummel
  

		
---------------------------------
 Yahoo! Personals
 Single? There's someone we'd like you to meet.
 Lots of someones, actually. Yahoo! Personals
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051129/96310b5b/attachment.htm 

From abe at fettig.net  Tue Nov 29 12:15:23 2005
From: abe at fettig.net (Abe Fettig)
Date: Tue, 29 Nov 2005 12:15:23 -0500
Subject: [Twisted-Python] Re: My review of Abe's book "Twisted Network
	Programming Essentials"
In-Reply-To: <438C2285.2080406@twistedmatrix.com>
References: <438C2285.2080406@twistedmatrix.com>
Message-ID: <438C8CAB.10108@fettig.net>

Tommi Virtanen wrote:
> Hi. I just finished a review of the new O'Reilly book on Twisted,
> by Abe Fettig (hi Abe!), and thought you all might be interested in it:
> 
> http://tv.debian.net/articles/review-snakeball/

Wow, Tommi, thanks for the very thorough review. I'm seriously
impressed. You picked up on a lot of details I'd missed, especially the
places where I didn't follow best practices in the code examples. I'll
get these incorporated into the official errata. And next time I'm
definitely going to have you involved as an official tech reviewer. You
 have a talent for it.

Overally I think you're accurate in pointing out the weaknesses of TNPE.
There are a couple of points that I'll push back on, though:

1. "DO NOT BUY TNPE TO LEARN TO WRITE WEB APPS"

Sigh. Writing the chapter on web servers was extremely frustrating. For
years now Twisted web app developers have had two choices: use stable
APIs that are widely considered to be broken and/or deprecated, or use
new, improved APIs that are currently under heavy development and
unstable. I put off writing this chapter for as long as possible, hoping
that there'd be a stable release of twisted.web2 to write about, but it
didn't happen. So in the end I decided it was better to document the
current stable twisted.web code, for all its faults, than to try to
document APIs that were in flux and very likely to change.

Hopefully readers will understand that this chapter is explaining how to
use the current twisted.web, not teaching the ideal architecture for web
applications. On page 54 it says "The classes in twisted.web.resource
and twisted.web.server are, as of this writing, widely considered to be
past their prime. They have some serious shortcomings ... Both are
scheduled to be deprecated in the future in favor of improved classes
provided by a next-generation web package known as twisted.web2." It
also says that if you're building a major web appication you should use
Nevow.

In retrospect, it probably would have been best to do both: include
examples of the stable APIs, but write more about nevow and
twisted.web2, including some examples.

2. It's not a Twisted Bible.

This is certainly true. If you look at the oreilly.com page [1] you'll
see that this book is in the "Developer's Notebook" series
(http://devnotebooks.oreilly.com/). Here's how O'Reilly describes
developer's notebooks:

"A Developer's Notebook is just what it claims to be--the often frantic
scribbling and notes that a true-blue alpha geek makes when working with
a new language, API, or project. It's the no-nonsense code that solves
problems, stripped of page-filling commentary that can often serve as
more of a paperweight than an epiphany. It's hackery, focused not on
what's nifty or might be fun if you've got some spare time, but what you
need to simply make it work now. This isn't a lecture, folks; it's a lab."

TNPE was written as a developer's notebook, and it shows. Unfortunately
as I was getting close to finishing the book O'Reilly decided that the
developer's notebook line wasn't doing very well and that they'd scrap
the "notebook" design and naming convention in favor of the more familar
animal book. I was happy to get a cool animal book cover, and my editor
and I tried to pick a title that accurately portrayed the contents of
the book. But in hindsight I think it would have been better to keep the
developer's notebook name and design. When some people see an animal
book they think "definitive guide", and then they're disappointed when
it's something else.

I hope that at least clarifies those points. This was my first book, and
I'm proud of it, but at the same time I'm sure I have a lot to learn.
Probably it's a lot like writing code, and somebody I'll look back on it
and be able to see clearly all the things I did wrong :-). In any case,
thanks for taking the time to read it and write this!

Abe

[1] http://www.oreilly.com/catalog/twistedadn/ (you can see traces of
the original "twisted - a developer's notebook" title in the URL)





From tv at twistedmatrix.com  Tue Nov 29 14:51:52 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 29 Nov 2005 21:51:52 +0200
Subject: [Twisted-Python] Re: My review of Abe's book "Twisted Network
	Programming Essentials"
In-Reply-To: <438C8CAB.10108@fettig.net>
References: <438C2285.2080406@twistedmatrix.com> <438C8CAB.10108@fettig.net>
Message-ID: <438CB158.1080303@twistedmatrix.com>

Abe Fettig wrote:
> 1. "DO NOT BUY TNPE TO LEARN TO WRITE WEB APPS"
> 
> Sigh. Writing the chapter on web servers was extremely frustrating. For
> years now Twisted web app developers have had two choices: use stable
> APIs that are widely considered to be broken and/or deprecated, or use
> new, improved APIs that are currently under heavy development and
> unstable. I put off writing this chapter for as long as possible, hoping
> that there'd be a stable release of twisted.web2 to write about, but it
> didn't happen. So in the end I decided it was better to document the
> current stable twisted.web code, for all its faults, than to try to
> document APIs that were in flux and very likely to change.

I understand you very well. Personally, I would probably have skipped
most of the server-side web chapter, maybe talking only about the proxy
and perhaps show things like static.File. Or maybe I would have just
dropped the whole chapter.

I'm 100% with you here, this is a difficult time for web development.
I got seriously burned with the whole Woven thing. Besides, Woven was a
better name than Nevow (*cough* *cough* ;)

Hopefully there will be a time when we have t.web2, with a
rendering-only Nevow on top of it, and there will be a usable
liveevil^Wlivepage^Wathena^Wwhatever, and maybe nufox, etc..
and then, maybe then, there will be a book about all that. There's
definitely enough material in web apps to fill a book, and I happen
to have a decent plan for one, if I ever find the time and motivation..

> 2. It's not a Twisted Bible.
> 
> TNPE was written as a developer's notebook, and it shows. Unfortunately

Oh, don't get me wrong. There's nothing _wrong_ in it not being the
Twisted Bible -- in fact, I think Twisted is still to young and
fast-moving to really be ready for a Bible. I'm just trying to make
people know what they are going to buy.

> I hope that at least clarifies those points. This was my first book, and
> I'm proud of it, but at the same time I'm sure I have a lot to learn.

You _should_ be proud of it, it's a good book, and on a subject that
definitely needed a book out. Good work.



From jml at mumak.net  Tue Nov 29 21:09:30 2005
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 30 Nov 2005 13:09:30 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15230 - Merge of
	jml/trial-deferred-logic -r15183:15229. Resolves #1341.
In-Reply-To: <20051128180149.1217.245601134.divmod.quotient.1482@ohm>
References: <E1Egcc5-0001uH-00@wolfwood>
	<20051128180149.1217.245601134.divmod.quotient.1482@ohm>
Message-ID: <d06a5cd30511291809k14c024fei@mail.gmail.com>

On 29/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sun, 27 Nov 2005 23:35:45 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
> >Author: jml
> >Date: Sun Nov 27 23:35:45 2005
> >New Revision: 15230
> >
> >
>
> The Gtk reactor can no longer complete the test suite: http://twistedmatrix.com/buildbot/reactors/builds/884/step-gtk/0
>
> On my machine, the suite hangs in twisted.web.test.test_webclient.CookieTestCase.testNoCookies, but it seems to die in twisted.test.test_tcp.HalfClose2TestCase.testNoNotification on buildbot every time.  This may just be a race (or several races) going different ways on a somewhat reliable fashion on the different hardware.
>
> It seems like the remaining reactor.iterate() calls are the likely cause of this?
>

For the record, the branch has been reverted, and I'm working on
fixing the hanging tests.  The problems *so far* appear to be caused
by reactor.runUntilCurrent being re-entered.  Not certain that they
are race conditions.  The difference in results may be due to running
the tests in different orders.

Perhaps runUntilCurrent should check for re-entry and raise some sort
of exception?

If you maintain code in Twisted, even nominally, then *now* is the
time to start cleaning up your tests.  Calls to reactor.iterate,
util.spinUntil, util.spinWhile and util.wait from within tests cannot
be supported if Trial is ever going to behave sanely.[1]  If you are
uncertain, check the tracker.

cheers,
jml

[1] As I understand it.  I am no reactrologist.



From glyph at divmod.com  Wed Nov 30 00:33:44 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 30 Nov 2005 00:33:44 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15230 - Merge of
	jml/trial-deferred-logic -r15183:15229. Resolves #1341.
In-Reply-To: <d06a5cd30511291809k14c024fei@mail.gmail.com>
Message-ID: <20051130053344.1217.351291702.divmod.quotient.1986@ohm>


On Wed, 30 Nov 2005 13:09:30 +1100, Jonathan Lange <jml at mumak.net> wrote:

>If you maintain code in Twisted, even nominally, then *now* is the
>time to start cleaning up your tests.

everybody: DO IT.  DO IT NOW.

jml: any particular, tricky tests you want a hand cleaning up?  I will try to put some effort towards this.

>Calls to reactor.iterate,
>util.spinUntil, util.spinWhile and util.wait from within tests cannot
                                                   ^ anywhere
                                                                ^ will not
>be supported if Trial is ever going to behave sanely.[1]  If you are
              ^ period, the end, because Trial *is* going to behave sanely.
>uncertain, check the tracker.

>cheers,
>jml
>
>[1] As I understand it.  I am no reactrologist.

As chief reactrologister I can officially confirm that your understanding is exactly 100% totally and completely correct.  There are no sensible semantics for a re-entrant reactor.



From foom at fuhm.net  Wed Nov 30 02:00:09 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 30 Nov 2005 00:00:09 -0700
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1EhLwn-0007jW-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2005-11-23 07:00:01.530000:
 Bugs opened: 6   Bugs closed: 3   Total open bugs: 484 (+3)
  Urgent: 1 (+0)
  Bug: 227 (+3)
  Feature: 173 (+0)
  Wish: 83 (+0)

New / Reopened Bugs
______________________
                    ==== Bug ====
[CORE] ftp NLST fails with a file on a twisted ftp server  (yesterday)
       http://twistedmatrix.com/bugs/issue1342 opened by micktwomey

[CORE, TRIAL] Test case run() methods to use Deferreds internally  (2 days ago)
       http://twistedmatrix.com/bugs/issue1341 opened by jml

[CORE, TRIAL] Possible: t.i.process.Process.reapProcess fails when called after a successful call  (5 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1340 opened by jml

[DOCUMENTATION, WEBSITE] API docs on site should reflect recent releases  (6 days ago)
       http://twistedmatrix.com/bugs/issue1339 opened by ralphm

[CORE] Delayed calls (callLater) can be lost when multi-threaded  (6 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1338 opened by jeffsilver

twisted.web.html.output bug (IRC)  (6 days ago)
       http://twistedmatrix.com/bugs/issue1337 opened by kyle

Bugs Closed
______________________
                    ==== Bug ====
[CORE, TRIAL] Possible: t.i.process.Process.reapProcess fails when called after a successful call  (5 days ago)
       http://twistedmatrix.com/bugs/issue1340 opened by jml, closed by jml

[TRIAL] Incorrect traceback from trial  (13 months ago)
       http://twistedmatrix.com/bugs/issue769 opened by exarkun, closed by jml

[CORE] Delayed calls (callLater) can be lost when multi-threaded  (6 days ago)
       http://twistedmatrix.com/bugs/issue1338 opened by jeffsilver, closed by exarkun




From xuryans at gmail.com  Wed Nov 30 02:19:45 2005
From: xuryans at gmail.com (Xu Ryan)
Date: Wed, 30 Nov 2005 15:19:45 +0800
Subject: [Twisted-Python] How can a tcp client connect with multi servers?
Message-ID: <f6c194d30511292319n2e83c27dxe5d7cd4307c04c14@mail.gmail.com>

Here is the situation: a tcp control client need connect to
multi-agent. Is there a light way to connect with server , instead
make a factory to do each connect?



From andrew-twisted at puzzling.org  Wed Nov 30 06:36:37 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 30 Nov 2005 22:36:37 +1100
Subject: [Twisted-Python] How can a tcp client connect with multi servers?
In-Reply-To: <f6c194d30511292319n2e83c27dxe5d7cd4307c04c14@mail.gmail.com>
References: <f6c194d30511292319n2e83c27dxe5d7cd4307c04c14@mail.gmail.com>
Message-ID: <20051130113637.GP18323@home.puzzling.org>

On Wed, Nov 30, 2005 at 03:19:45PM +0800, Xu Ryan wrote:
> Here is the situation: a tcp control client need connect to
> multi-agent. Is there a light way to connect with server , instead
> make a factory to do each connect?

ClientCreator is a simpler way to make connections.  See the "Simple, single-use
clients" section of the Writing Clients developer guide:

    http://twistedmatrix.com/projects/core/documentation/howto/clients.html#auto2

-Andrew.




From nico at tekNico.net  Wed Nov 30 05:09:45 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Wed, 30 Nov 2005 11:09:45 +0100
Subject: [Twisted-Python] Re: My review of Abe's book "Twisted Network
	Programming Essentials"
In-Reply-To: <438CB158.1080303@twistedmatrix.com>
References: <438C2285.2080406@twistedmatrix.com> <438C8CAB.10108@fettig.net>
	<438CB158.1080303@twistedmatrix.com>
Message-ID: <dmjtp8$a0e$1@sea.gmane.org>

> I'm 100% with you here, this is a difficult time for web development.
> I got seriously burned with the whole Woven thing. Besides, Woven was a
> better name than Nevow (*cough* *cough* ;)

Heh, how true. In 2003 I started introducing Twisted at work, and after
struggling for a while with forms handling in Woven, I threw in the towel
and transplanted Quixote's PTLs and form widgets into Twisted.

Someday I hope being able to gradually switch the whole mess to Nevow, but
not before the rate of change of forms handling and superAJAX stuff has
slowed significantly.

-- 
Nicola Larosa - nico at tekNico.net

On a personal note, Xara is the main reason why I still haven't switched
to a Linux desktop for myself. I can't live without my Xara... now it
looks like I'll finally be able to switch! Tonight, I will literally go
out and toast to Xara. This is the best news I've had in months.
  -- GooseKirk on Slashdot, October 2005




From exarkun at divmod.com  Wed Nov 30 09:13:35 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 30 Nov 2005 09:13:35 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15259 - Try again. Merge
	trial-deferred-logic
In-Reply-To: <E1EhLgh-0003ox-00@wolfwood>
Message-ID: <20051130141335.1217.1660978971.divmod.quotient.2100@ohm>

On Tue, 29 Nov 2005 23:43:31 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Tue Nov 29 23:43:31 2005
>New Revision: 15259
>
>Modified:
>   trunk/twisted/mail/test/test_mail.py
>   trunk/twisted/test/test_ftp.py
>   trunk/twisted/test/test_ssl.py
>   trunk/twisted/test/test_tcp.py
>   trunk/twisted/trial/reporter.py
>   trunk/twisted/trial/runner.py
>   trunk/twisted/trial/test/detests.py
>   trunk/twisted/trial/test/test_deferred.py
>   trunk/twisted/trial/test/test_failure_formatting.py
>   trunk/twisted/trial/test/test_keyboard.py
>   trunk/twisted/trial/test/timeouts.py
>   trunk/twisted/trial/unittest.py
>   trunk/twisted/trial/util.py
>   trunk/twisted/web/test/test_webclient.py
>Log:
>Try again. Merge trial-deferred-logic
>
>@@ -907,17 +900,22 @@
>         self.client.transport.loseConnection()
>         return self.p.stopListening()
>
>+    def _delayDeferred(self, time, arg=None):
>+        from twisted.internet import reactor
>+        d = defer.Deferred()
>+        reactor.callLater(time, d.callback, arg)
>+        return d
>+
>     def testNoNotification(self):
>         client = self.client
>         f = self.f
>         client.transport.write("hello")
>         w = client.transport.write
>         client.transport.loseWriteConnection()
>-        reactor.iterate()
>-        reactor.iterate()
>-        reactor.iterate()
>-        self.assertEquals(f.protocol.data, "hello")
>-        self.assertEquals(f.protocol.closed, True)
>+        d = self._delayDeferred(0.2, f.protocol)
>+        d.addCallback(lambda x : self.assertEqual(f.protocol.data, 'hello'))
>+        d.addCallback(lambda x : self.assertEqual(f.protocol.closed, True))
>+        return d
>
>     def testShutdownException(self):
>         client = self.client

The above hunk is pretty sketchy.  The real solution is to give the protocol a Deferred which it fires at whatever point it would have set its closed attribute to True.  As it stands, the test has a race and I can guarantee it will be going the wrong way quite frequently.

Jean-Paul




From nico at tekNico.net  Wed Nov 30 05:05:37 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Wed, 30 Nov 2005 11:05:37 +0100
Subject: [Twisted-Python] Re: My review of Abe's book "Twisted
	NetworkProgramming Essentials"
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB626@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB626@exchange-03.suedkurier.de>
Message-ID: <dmjthg$9cd$1@sea.gmane.org>

> Thank you very much for the hints how to simplify the Python code!
> (I didn't knew there was dict.setdefault ;-)

Here's further explanation of setdefault:

http://wiki.python.org/moin/KeepingListsInDictionaries

-- 
Nicola Larosa - nico at tekNico.net

On a personal note, Xara is the main reason why I still haven't switched
to a Linux desktop for myself. I can't live without my Xara... now it
looks like I'll finally be able to switch! Tonight, I will literally go
out and toast to Xara. This is the best news I've had in months.
  -- GooseKirk on Slashdot, October 2005




From fhauck at srcpsolutions.com  Wed Nov 30 11:20:21 2005
From: fhauck at srcpsolutions.com (Fred Hauck)
Date: Wed, 30 Nov 2005 11:20:21 -0500
Subject: [Twisted-Python] New to twisted
Message-ID: <IBEKILOMELAPJHPEOCJMOECCCFAA.fhauck@srcpsolutions.com>

I am not only new to twisted, but to python as well.

I need what twisted does, so went out and got the "twisted" book
by abe fettig. I am coding each example in the book as i get there.

the connectiontest.py example on page 16 gives me a call back on success,
but not on error.

from twisted.internet import reactor,defer, protocol


class CallbackAndDisconnectProtocol(protocol.Protocol):
  def connectionMade(self):
    self.factory.deferred.callback("Connected!")
    self.transport.loseConnection()

class ConnectionTestFactory(protocol.ClientFactory):
  protocol = CallbackAndDisconnectProtocol

  def __init__(self):
    self.deferred = defer.Deferred()

  def clientConnnectionFailed(self, connector, reason):
    self.deferred.errback(reason)

def testConnect(host, port):
  testFactory = ConnectionTestFactory()
  reactor.connectTCP(host, port, testFactory)
  return testFactory.deferred

def handleSuccess( result,port):
  print "Connected to port %i" % port
  reactor.stop()

def handleFailure(failure, port):
  print "Error connecting to port %i: %s" % (port,failure.getErrorMessage())
  reactor.stop()

if __name__ == "__main__":
  import sys
  if not len( sys.argv) == 3:
     print "Usage: connectiontest.py host port"
     sys.exit(1)

  host = sys.argv[1]
  port = int(sys.argv[2])
  connecting = testConnect(host, port)
#  connecting.addCallback( handleSuccess, port)
#  connecting.addErrback( handleFailure,port)
  connecting.addBoth( handleFailure,port)
  reactor.run()

The environment is:

Windows XP sp2
python 2.4.1 from activestate
twisted_nodocs-2.1.0.win32-py24.exe (installed)

When chasing this down, go into the main loop and there are
comments about "signals" not working in windows, etc. etc.

CallLater works fine, successful callback works fine, the errback
does not

thanks in advance
fred






From Keith.Gunderson at act.org  Wed Nov 30 11:36:20 2005
From: Keith.Gunderson at act.org (Keith.Gunderson at act.org)
Date: Wed, 30 Nov 2005 10:36:20 -0600
Subject: [Twisted-Python] Results of stress testing the reactor
Message-ID: <OF6C50740A.45F61FB8-ON862570C9.00578B6E-862570C9.005B3795@LocalDomain>

I'm getting settled in with an experimental project using twisted.  I
posting some of my preliminary results in this message.  Please let me know
if this information is interesting or helpful.

I plan on using twisted as a part of my performance testing simulations.  I
use the Mercury Interactive tools for the 'heavy lifting' of my work.  I'll
use my twisted designs to provide advanced simulation logic and timing
features.   That is, I'll create many virtual users that will talk HTTP to
non-twisted web apps while measuring the results (i.e. performance
testing).  But, these virtual users will sometimes talk HTTP to my twisted
web app to get whatever data I want them to have.

So, I've got the following little app which takes three seconds to respond
to any request.  I'm trying test the Mercury tools on how they deal with
concurrent requests.   I'm not doing much here, just kicking in the tires a
little.

I'm using the latest twisted release on Win2000.

import time,sys
from twisted.internet import protocol, reactor

def defFn( protObject):
    protObject.transport.write('Hello. Deferred:\n')
    sys.stdout.write('The time is %s\n' % time.time())
    protObject.transport.loseConnection()

class TimeProtocol(protocol.Protocol):

    def dataReceived(self, data):
        self.transport.write('Hello. Data received: \n' )
        reactor.callLater(3, defFn,  self )


class TimeFactory(protocol.ServerFactory):
    protocol = TimeProtocol

reactor.listenTCP(9100, TimeFactory())
reactor.run()



Everything works as expected until I get about 300 virtual users hitting
the site somewhat simultaneously.  (Approx. 200 hits per second.)  At which
point the reactor kind of explodes.  The following traceback races from the
console (probably in an infinite loop.)  This may not be unexpected or
significant, but I found it interesting.

Is there anything I can do to prevent this, other than refraining from
trying to overload things on purpose?  Are there other tests that you gurus
might find interesting?

  File "tw09.py", line 25, in ?
    reactor.run()
  File "C:\progs\python24\Lib\site-packages\twisted\internet\posixbase.py",
line
 199, in run
    self.mainLoop()
  File "C:\progs\python24\Lib\site-packages\twisted\internet\posixbase.py",
line
 210, in mainLoop
    self.doIteration(t)
--- <exception caught here> ---
  File "C:
\progs\python24\Lib\site-packages\twisted\internet\selectreactor.py",
line 97, in doSelect
    [], timeout)
  File "C:
\progs\python24\Lib\site-packages\twisted\internet\selectreactor.py",
line 49, in win32select
    r, w, e = select.select(r, w, w, timeout)
exceptions.ValueError: too many file descriptors in select()
Traceback (most recent call last):
  File "tw09.py", line 25, in ?
    reactor.run()
  File "C:\progs\python24\Lib\site-packages\twisted\internet\posixbase.py",
line
 199, in run
    self.mainLoop()
  File "C:\progs\python24\Lib\site-packages\twisted\internet\posixbase.py",
line
 210, in mainLoop
    self.doIteration(t)
--- <exception caught here> ---
  File "C:
\progs\python24\Lib\site-packages\twisted\internet\selectreactor.py",
line 97, in doSelect
    [], timeout)
  File "C:
\progs\python24\Lib\site-packages\twisted\internet\selectreactor.py",
line 49, in win32select
    r, w, e = select.select(r, w, w, timeout)
exceptions.ValueError: too many file descriptors in select()



Keith Gunderson
Performance Test Analyst






From itamar at itamarst.org  Wed Nov 30 12:10:36 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Nov 2005 12:10:36 -0500
Subject: [Twisted-Python] Results of stress testing the reactor
In-Reply-To: <OF6C50740A.45F61FB8-ON862570C9.00578B6E-862570C9.005B3795@LocalDomain>
References: <OF6C50740A.45F61FB8-ON862570C9.00578B6E-862570C9.005B3795@LocalDomain>
Message-ID: <1133370637.9052.1.camel@localhost.localdomain>

On Wed, 2005-11-30 at 10:36 -0600, Keith.Gunderson at act.org wrote:

> Everything works as expected until I get about 300 virtual users hitting
> the site somewhat simultaneously.  (Approx. 200 hits per second.)  At which
> point the reactor kind of explodes.  The following traceback races from the
> console (probably in an infinite loop.)  This may not be unexpected or
> significant, but I found it interesting.

> exceptions.ValueError: too many file descriptors in select()

select() on Windows is limited to 512 file descriptors; there's not much
Twisted can do about this. The IOCP reactor should scale better, but it
is still work in progress so it may be buggy (though I'd expect it to
run this program just fine).




From itamar at itamarst.org  Wed Nov 30 15:06:17 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Nov 2005 15:06:17 -0500
Subject: [Twisted-Python] problems with threadedselectreactor
In-Reply-To: <20051129121508.80687.qmail@web33904.mail.mud.yahoo.com>
References: <20051129121508.80687.qmail@web33904.mail.mud.yahoo.com>
Message-ID: <1133381178.9052.8.camel@localhost.localdomain>

On Tue, 2005-11-29 at 04:15 -0800, Antony Kummel wrote:
> Hi!
> 
> I encountered two problems when using threadedselectreactor on win32.
> I am not versed enough with reactor technicalities to resolve them
> myself, but I would gladly conduct any tests the experts recommend.

Could you add bugs for these to the tracker if you haven't already?
Also, try out tsr in SVN trunk, it has some fixes.




From antonykummel at yahoo.com  Wed Nov 30 16:04:46 2005
From: antonykummel at yahoo.com (Antony Kummel)
Date: Wed, 30 Nov 2005 13:04:46 -0800 (PST)
Subject: [Twisted-Python] problems with threadedselectreactor
In-Reply-To: <1133381178.9052.8.camel@localhost.localdomain>
Message-ID: <20051130210446.23843.qmail@web33905.mail.mud.yahoo.com>



Itamar Shtull-Trauring <itamar at itamarst.org> wrote:  On Tue, 2005-11-29 at 04:15 -0800, Antony Kummel wrote:
> Hi!
> 
> I encountered two problems when using threadedselectreactor on win32.
> I am not versed enough with reactor technicalities to resolve them
> myself, but I would gladly conduct any tests the experts recommend.

Could you add bugs for these to the tracker if you haven't already?
Also, try out tsr in SVN trunk, it has some fixes.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
I did, and I'm using the latest tsr.


		
---------------------------------
 Yahoo! Music Unlimited - Access over 1 million songs. Try it free.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20051130/2a4a40e5/attachment.htm 

From erick_bodine at comcast.net  Wed Nov 30 16:07:08 2005
From: erick_bodine at comcast.net (erick_bodine at comcast.net)
Date: Wed, 30 Nov 2005 21:07:08 +0000
Subject: [Twisted-Python] implementing scp using Conch
Message-ID: <113020052107.27726.438E147C0000C63C00006C4E22007610640A02070B010DA1050C079D0A@comcast.net>

Using a suggestion from David Mertz's old article I am implementing scp using Conch.  I can scp from the server to the client, it does give an exception listed below.  Question #1 is why is the exception happening?  Question #2 is how to scp from the client to the server?  Can I use sendRequest() to open a file and then Channel.write('some data') to send the client file contents?


Traceback (most recent call last):
  File "client_mertz.py", line 80, in ?
    reactor.run()
  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 206, in run
    self.mainLoop()
  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 214, in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 541, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 397, in _continueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: unsubscriptable object


--
--ERick



From exarkun at divmod.com  Wed Nov 30 19:00:07 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 30 Nov 2005 19:00:07 -0500
Subject: [Twisted-Python] implementing scp using Conch
In-Reply-To: <113020052107.27726.438E147C0000C63C00006C4E22007610640A02070B010DA1050C079D0A@comcast.net>
Message-ID: <20051201000007.1217.636688882.divmod.quotient.2239@ohm>

On Wed, 30 Nov 2005 21:07:08 +0000, erick_bodine at comcast.net wrote:
>Using a suggestion from David Mertz's old article I am implementing scp using Conch.  I can scp from the server to the client, it does give an exception listed below.  Question #1 is why is the exception happening?  Question #2 is how to scp from the client to the server?  Can I use sendRequest() to open a file and then Channel.write('some data') to send the client file contents?
>
>
>Traceback (most recent call last):
>  File "client_mertz.py", line 80, in ?
>    reactor.run()
>  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 206, in run
>    self.mainLoop()
>  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 214, in mainLoop
>    self.runUntilCurrent()
>--- <exception caught here> ---
>  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 541, in runUntilCurrent
>    call.func(*call.args, **call.kw)
>  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 397, in _continueSystemEvent
>    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
>exceptions.TypeError: unsubscriptable object
>

This happens most frequently as a result of calling reactor.stop() more than once.

It'd be nice if the 2nd (and subsequent) calls to reactor.stop() raised exceptions synchronously, probably.  It doesn't seem to be a very high priority change, though.

Jean-Paul



From jml at mumak.net  Wed Nov 30 19:03:47 2005
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 1 Dec 2005 11:03:47 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15230 - Merge of
	jml/trial-deferred-logic -r15183:15229. Resolves #1341.
In-Reply-To: <20051130053344.1217.351291702.divmod.quotient.1986@ohm>
References: <d06a5cd30511291809k14c024fei@mail.gmail.com>
	<20051130053344.1217.351291702.divmod.quotient.1986@ohm>
Message-ID: <d06a5cd30511301603x77dfea6dy@mail.gmail.com>

On 30/11/05, glyph at divmod.com <glyph at divmod.com> wrote:
> On Wed, 30 Nov 2005 13:09:30 +1100, Jonathan Lange <jml at mumak.net> wrote:
>
> >If you maintain code in Twisted, even nominally, then *now* is the
> >time to start cleaning up your tests.
>
> everybody: DO IT.  DO IT NOW.
>
> jml: any particular, tricky tests you want a hand cleaning up?  I will try to put some effort towards this.

Off the top of my head:
- The conch tests are impenetrable (really, z3p needs to fix them)
- twisted.protocols.loopback uses spinWhile and spinUntil. I'm not
game to fix that.
- The test_tcp tests that Jp commented on in a different post ;)

If anyone is curious, the bugs are all tagged 'tests' and can be found
at http://www.twistedmatrix.com/bugs/.  Phillipe will hug whoever
fixes the most tests.

jml



From xuryans at gmail.com  Wed Nov 30 21:35:56 2005
From: xuryans at gmail.com (Xu Ryan)
Date: Thu, 1 Dec 2005 10:35:56 +0800
Subject: [Twisted-Python] How can a tcp client connect with multi servers?
In-Reply-To: <20051130113637.GP18323@home.puzzling.org>
References: <f6c194d30511292319n2e83c27dxe5d7cd4307c04c14@mail.gmail.com>
	<20051130113637.GP18323@home.puzzling.org>
Message-ID: <f6c194d30511301835h66cccab7g44f5dc2e8bb2290a@mail.gmail.com>

Thank you, but ClientCreator is seems just send message for once?? My
app need connect with auth info, then send a command and request the
return value. Can i use ClientCreator?

On 11/30/05, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> On Wed, Nov 30, 2005 at 03:19:45PM +0800, Xu Ryan wrote:
> > Here is the situation: a tcp control client need connect to
> > multi-agent. Is there a light way to connect with server , instead
> > make a factory to do each connect?
>
> ClientCreator is a simpler way to make connections.  See the "Simple, single-use
> clients" section of the Writing Clients developer guide:
>
>     http://twistedmatrix.com/projects/core/documentation/howto/clients.html#auto2
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
Xu Ryans



From glyph at divmod.com  Wed Nov 30 23:47:30 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 30 Nov 2005 23:47:30 -0500
Subject: [Twisted-Python] Re: My review of Abe's book "Twisted Network
	Programming Essentials"
In-Reply-To: <dmjtp8$a0e$1@sea.gmane.org>
Message-ID: <20051201044730.1217.769334180.divmod.quotient.2304@ohm>



On Wed, 30 Nov 2005 11:09:45 +0100, Nicola Larosa <nico at teknico.net> wrote:

>Someday I hope being able to gradually switch the whole mess to Nevow, but
>not before the rate of change of forms handling and superAJAX stuff has
>slowed significantly.

Yep.  I predict that will be happening soon - as soon as we manage to fix the athena/FF15 bugs and do some more testing with IE, as well as come up with a lightweight forms thing for use with athena.

However, Nevow is still definitely not yet for the risk-averse.  I wouldn't recommend using it until both the aforementioned work has happened, it has been ported to web2, web2 has been released, and the 'context' argument has been eliminated from Nevow as well as it has been from web2.

I did not envy Abe the work of writing that chapter :).



From itamar at itamarst.org  Tue Nov  1 08:47:09 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 01 Nov 2005 10:47:09 -0500
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
Message-ID: <1130860029.8994.2.camel@localhost.localdomain>

Hi,

Still haven't gotten an answer to this; why is the motivation for
deprecating a perfectly reasonable feature?




From justinjohnson at gmail.com  Tue Nov  1 10:20:36 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 1 Nov 2005 11:20:36 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] r14952 - Impelement
	spawnProcess for IOCP reactor. Resolves issue1008.
In-Reply-To: <20051029130646.GA4823@trogdor.home.puzzling.org>
References: <E1EVXEv-00015O-00@wolfwood>
	<20051029032622.10365.771357096.divmod.quotient.1520@ohm>
	<20051029130646.GA4823@trogdor.home.puzzling.org>
Message-ID: <94a776e70511010920t13b4141ag7e8d18f7ec5da554@mail.gmail.com>

This problem is resolved with r14989.

On 10/29/05, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>
> On Fri, Oct 28, 2005 at 11:26:22PM -0400, Jean-Paul Calderone wrote:
> > On Fri, 28 Oct 2005 10:38:02 -0600, Justin Johnson
> > <justinj at wolfwood.twistedmatrix.com> wrote:
> [...]
> > >Log:
> > >Impelement spawnProcess for IOCP reactor. Resolves issue1008.
> > >
> >
> > While I am excited this feature is so close, it seems like it isn't
> quite
> > there yet. Buildbot is now reporting only 442 tests run by the IOCP
> > builder on Win32, and a really nasty looking traceback afterwards.
> >
> > Could we revert this merge?
>
> The bug you notice existed before that merge too. Jonathan helped me
> diagnose it: see http://twistedmatrix.com/bugs/issue1294. It appears trial
> is calling reactor.iterate(0) during cleanup, and not expecting that it
> could raise an exception. Making iocp's doIteration swallow and log that
> error, like the other reactors do, will probably fix this. Making trial
> deal with that error better (as apparently is not too hard to do with one
> of
> the trial branches) would also fix it.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051101/2ba84388/attachment.html>

From exarkun at divmod.com  Tue Nov  1 10:38:21 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 1 Nov 2005 12:38:21 -0500
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
In-Reply-To: <1130860029.8994.2.camel@localhost.localdomain>
Message-ID: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>

On Tue, 01 Nov 2005 10:47:09 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>Hi,
>
>Still haven't gotten an answer to this; why is the motivation for
>deprecating a perfectly reasonable feature?
>

FWIW, I also would like to know the answer to this question.

Jp



From dreid at dreid.org  Tue Nov  1 10:57:53 2005
From: dreid at dreid.org (David Reid)
Date: Tue, 01 Nov 2005 09:57:53 -0800
Subject: [Twisted-Python] Generally useful RFC2617
Message-ID: <1130867874.8330.12.camel@audrey.local>

Currently in Twisted/sandbox/dreid/rfc2617.py (with unittests at
test_rfc2617.py) there is an implementation of RFC 2617 HTTP
Authentication: Basic and Digest based authentication.  It is based on
the implementations found in twisted.protocols.sip, mantissa.sip, and
sine.sip.  The goal was to pull the sip specific stuff from these
implementations and make something that would be useful for other
protocols such as HTTP and IMAP.  A couple of points are unclear
however.

1) Where to put it?

In theory it should be in twisted core.  I just don't know where, and
didn't want to check it in there somewhere only to have developers with
more pull than I have to disagree, itamar suggested t.py.digest, dash
seemed to agree, other suggestions were t.cred.digest, but I just don't
know.

2) IAuthorizer.

rfc2617.IAuthorizer, and *.sip.IAuthorizer before it, strike me as a
really poorly named interface.  It's purpose is to create challenges,
and decode the response into something that can be used to return an
ICredentials.  This seems like a more generally useful concept than just
to HTTP Auth, but there isn't currently anything like it cred.  (Note
I'm aware of cred.authorizer but they are not even similar interfaces,
which is part of the reason IAuthorizer is so poorly named.)

Anyway, I'm just hoping someone will tell me where to put it other than
"where the sun don't shine" because I think that's covered under *.sip

-David




From glyph at divmod.com  Tue Nov  1 13:38:23 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 1 Nov 2005 15:38:23 -0500
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
In-Reply-To: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>
Message-ID: <20051101203823.10365.1647175797.divmod.quotient.2949@ohm>



On Tue, 1 Nov 2005 12:38:21 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>On Tue, 01 Nov 2005 10:47:09 -0500, Itamar Shtull-Trauring 
><itamar at itamarst.org> wrote:
>>Hi,
>>
>>Still haven't gotten an answer to this; why is the motivation for
>>deprecating a perfectly reasonable feature?
>
>FWIW, I also would like to know the answer to this question.

Yeah, uh...

As I understand it the implementation was previously horrendously broken.  Now it is not.  Given that it is now no longer broken, and some quite reasonable tests I've seen make use of it (in particular: tests for Divmod ClickChronicle do some very expensive setup in a setUpClass), I'd like to see it stick around.



From general at eepatents.com  Tue Nov  1 13:43:04 2005
From: general at eepatents.com (Ed Suominen)
Date: Tue, 01 Nov 2005 12:43:04 -0800
Subject: [Twisted-Python] Remove setupClass branch of trial - what is
	the motivation?
In-Reply-To: <E1EX1Mc-0001Id-02@pyramid.twistedmatrix.com>
References: <E1EX1Mc-0001Id-02@pyramid.twistedmatrix.com>
Message-ID: <1130877785.29832.6.camel@207-118-65-198.dyn.centurytel.net>

Same here, since I actually use setupClass and teardownClass quite a bit
in my own unit tests. To me, there doesn't seem to be to be a valid
reason for any plans to take away the flexibility of performing setup
for an entire TestCase, in addition to or instead of setup for each
individual test. (I use both.)

Below is a use case for setupClass and teardownClass that is about more
than just convenience, especially when more tests are added to the
class.

- Ed Suominen

----------------------------------------------------------------------------------------------------------------
class TestViews(TestCase):
    """
    Does the View widget permit display of multiple views with tabs as
    advertised?

    """
    def setUpClass(self):
        # Switch in our Mock Overview for testing
        self.oldOverview = view.Overview
        view.Overview = MockOverview
        # Start the clock for window display
        self.t1 = time()
        # Bring up the window
        gui = self.gui = Gui(640, 480)
        self.views = view.Views(gui)
        gui.setCentralWidget(self.views)
        gui.show()

    def tearDownClass(self):
        def wait():
            return time() - self.t1 < SHOW_INTERVAL

        # Let the window stay up for the full interval
        util.spinWhile(wait, 2*SHOW_INTERVAL)
        # Restore the real Overview object
        view.Overview = self.oldOverview

    def testNewTab(self):
        self.views.new(MockSecondView, 'Testing...')

> Date: Tue, 1 Nov 2005 12:38:21 -0500
> From: Jean-Paul Calderone <exarkun at divmod.com>
> Subject: Re: [Twisted-Python] Remove setupClass branch of trial - what
> 	is the	motivation?
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <20051101173821.10365.1778643802.divmod.quotient.2873 at ohm>
> Content-Type: text/plain; format=flowed
> 
> On Tue, 01 Nov 2005 10:47:09 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> >Hi,
> >
> >Still haven't gotten an answer to this; why is the motivation for
> >deprecating a perfectly reasonable feature?
> >
> 
> FWIW, I also would like to know the answer to this question.
> 
> Jp





From dmitry at athabascau.ca  Tue Nov  1 13:38:59 2005
From: dmitry at athabascau.ca (Dmitry S. Makovey)
Date: Tue, 01 Nov 2005 13:38:59 -0700
Subject: [Twisted-Python] WabDAV in twisted
Message-ID: <200511011339.03353.dmitry@athabascau.ca>


is there anything happening in Twisted community in terms of 
supporting WebDAV protocol? I found only one relevant project - 
akadav but it looks like it was abandoned for about 5 month now. 

-- 
Dmitry Makovey
Web Systems Administrator
Athabasca University
(780) 675-6245
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20051101/e8aaace5/attachment.sig>

From bob at redivi.com  Tue Nov  1 14:18:26 2005
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 1 Nov 2005 13:18:26 -0800
Subject: [Twisted-Python] WabDAV in twisted
In-Reply-To: <200511011339.03353.dmitry@athabascau.ca>
References: <200511011339.03353.dmitry@athabascau.ca>
Message-ID: <2C3F4E85-13AD-49E8-82EC-67375F3F72CF@redivi.com>

On Nov 1, 2005, at 12:38 PM, Dmitry S. Makovey wrote:

>
> is there anything happening in Twisted community in terms of
> supporting WebDAV protocol? I found only one relevant project -
> akadav but it looks like it was abandoned for about 5 month now.

Yes, TwistedDAV:
http://www.wsanchez.net/blog/archives/000116.html

As far as platforms go, it should run on Linux (with an xattr- 
supporting fs) since I added some code to the latest version of xattr  
such that it should at least compile there.  It might work on NetBSD,  
it won't work on FreeBSD or Windows.

Other platforms could be easily supported by writing something API- 
compatible to the xattr module that stores extended attributes  
somehow (e.g. in dotfiles along-side).  I'll also accept patches to  
xattr to support other native extended attributes schemes (FreeBSD,  
NTFS, whatever).

-bob




From dmitry at athabascau.ca  Tue Nov  1 14:45:04 2005
From: dmitry at athabascau.ca (Dmitry S. Makovey)
Date: Tue, 01 Nov 2005 14:45:04 -0700
Subject: [Twisted-Python] WabDAV in twisted
In-Reply-To: <2C3F4E85-13AD-49E8-82EC-67375F3F72CF@redivi.com>
References: <200511011339.03353.dmitry@athabascau.ca>
	<2C3F4E85-13AD-49E8-82EC-67375F3F72CF@redivi.com>
Message-ID: <200511011445.07795.dmitry@athabascau.ca>

On November 1, 2005 02:18 pm, Bob Ippolito wrote:
> On Nov 1, 2005, at 12:38 PM, Dmitry S. Makovey wrote:
> > is there anything happening in Twisted community in terms of
> > supporting WebDAV protocol? I found only one relevant project -
> > akadav but it looks like it was abandoned for about 5 month now.
>
> Yes, TwistedDAV:
> http://www.wsanchez.net/blog/archives/000116.html

interesting project, thanks for sharing.

> Other platforms could be easily supported by writing something API-
> compatible to the xattr module that stores extended attributes
> somehow (e.g. in dotfiles along-side).  I'll also accept patches to
> xattr to support other native extended attributes schemes (FreeBSD,
> NTFS, whatever).

I guess for my requirements I'd have to do that, but coding is fun, 
although I'm kind of limited with time so I might as well wait for 
somebody else :)

P.S. 
nice to see Apple contributing back to community ;) (or allowing it's 
staff to contribute back to community :) )

-- 
Dmitry Makovey
Web Systems Administrator
Athabasca University
(780) 675-6245
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20051101/3cfa39a2/attachment.sig>

From bob at redivi.com  Tue Nov  1 15:59:29 2005
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 1 Nov 2005 14:59:29 -0800
Subject: [Twisted-Python] WabDAV in twisted
In-Reply-To: <200511011445.07795.dmitry@athabascau.ca>
References: <200511011339.03353.dmitry@athabascau.ca>
	<2C3F4E85-13AD-49E8-82EC-67375F3F72CF@redivi.com>
	<200511011445.07795.dmitry@athabascau.ca>
Message-ID: <BD2522A6-AA6A-44D9-AA40-BFCEE8E56C4D@redivi.com>


On Nov 1, 2005, at 1:45 PM, Dmitry S. Makovey wrote:

> On November 1, 2005 02:18 pm, Bob Ippolito wrote:
>
>> On Nov 1, 2005, at 12:38 PM, Dmitry S. Makovey wrote:
>>
>>> is there anything happening in Twisted community in terms of
>>> supporting WebDAV protocol? I found only one relevant project -
>>> akadav but it looks like it was abandoned for about 5 month now.
>>>
>>
>> Yes, TwistedDAV:
>> http://www.wsanchez.net/blog/archives/000116.html
>>
>
> interesting project, thanks for sharing.
>
>
>> Other platforms could be easily supported by writing something API-
>> compatible to the xattr module that stores extended attributes
>> somehow (e.g. in dotfiles along-side).  I'll also accept patches to
>> xattr to support other native extended attributes schemes (FreeBSD,
>> NTFS, whatever).
>>
>
> I guess for my requirements I'd have to do that, but coding is fun,
> although I'm kind of limited with time so I might as well wait for
> somebody else :)

As far as I know, nobody is actively pursuing this.  If you do have a  
deadline, you better do it yourself...  I'm not planning to do any  
more work on xattr, unless it's applying patches or fixing bugs  
reported by users (that aren't Mac OS X's fault!).

-bob




From foom at fuhm.net  Wed Nov  2 00:02:02 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 02 Nov 2005 00:02:02 -0700
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1EXCdG-0000AT-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2005-10-26 06:00:02.460000:
 Bugs opened: 21   Bugs closed: 17   Total open bugs: 486 (+4)
  Urgent: 3 (+0)
  Bug: 239 (+4)
  Feature: 166 (+0)
  Wish: 78 (+0)

New / Reopened Bugs
______________________
                    ==== Bug ====
[CORE, TESTS, TRIAL] trial doesn't run test suite all the way on win32eventreactor  (2 hours ago)
       http://twistedmatrix.com/bugs/issue1306 opened by exarkun

strange behaviours when writing large amount of data on stdout  (12 hours ago)
       http://twistedmatrix.com/bugs/issue1305 opened by manlio

[CORE, TESTS, TRIAL] twisted.trial.test.test_failure_formatting.TestFailureFormatting.testFormatErroredMethod hangs indefinitely  (yesterday)
       http://twistedmatrix.com/bugs/issue1304 opened by exarkun

[WEBSITE] API docs aren't being linked from developer guides  (yesterday)
       http://twistedmatrix.com/bugs/issue1303 opened by spiv

[CORE, WIN32] [PATCH] iocp's doIteration doesn't handle errors thrown from selectables  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1294 opened by spiv

[PATCH] twisted words irc patch for usernames  (yesterday)
       http://twistedmatrix.com/bugs/issue1302 opened by avleenvig

cftp with no known_hosts file hangs  (yesterday)
       http://twistedmatrix.com/bugs/issue1301 opened by robertc

[WEB] web2/cgi hides REMOTE_USER  (yesterday)
       http://twistedmatrix.com/bugs/issue1300 opened by boga

[CORE, TESTS] twisted.test.test_udp.testRebind makes no sense  (3 days ago)
       http://twistedmatrix.com/bugs/issue1295 opened by exarkun

[BACKPORT, MAIL] No callback/errback from IMAP command called when connection lost  (5 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1290 opened by jojo

[CORE, DOCUMENTATION] simpleclient crashes - reactor.stop() called twice  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1299 opened by FrankMillman

[TESTS, TRIAL] TASK: Remove deferredResult and deferredError  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1297 opened by jml

[BACKPORT, CORE, TWISTD] twisted/application/app.py messes up subcommands with its parseOptions  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1298 opened by exarkun

[WORDS] jabber BasicAuthenticator  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1296 opened by sciasbat

[CORE, TRIAL] Unexpected successes are not reported in the summary section of trial  (4 days ago)
       http://twistedmatrix.com/bugs/issue1293 opened by glyph

[BACKPORT, CONCH] conch client completely broken  (4 days ago)
       http://twistedmatrix.com/bugs/issue1292 opened by glyph

[WEB] ProxyClientFactory hard-codes protocol class  (6 days ago)
       http://twistedmatrix.com/bugs/issue1287 opened by acapnotic

                    ==== Feature ====
[CORE] Expose "process exited" hook on ProcessProtocol, turning current processEnded into user-overriddable behavior  (5 days ago)
       http://twistedmatrix.com/bugs/issue1291 opened by itamarst

SO_REUSEADDR on outgoing connections  (6 days ago)
       http://twistedmatrix.com/bugs/issue1288 opened by ghazel

Make Twisted Play Nice with setuputils/easy_install  (6 days ago)
       http://twistedmatrix.com/bugs/issue1286 opened by icepick

                    ==== Wish ====
[DEFERRED, DOCUMENTATION] Error in documentation (deferred timeout example) at http://twistedmatrix.com/projects/core/documentation/howto/deferrecipes.html  (5 days ago)
       http://twistedmatrix.com/bugs/issue1289 opened by szumo

Bugs Closed
______________________
                    ==== Bug ====
[WIN32] win32 spawnProcess should return something  (3 months ago)
       http://twistedmatrix.com/bugs/issue1116 opened by warner, closed by justinj

[CORE, WIN32] [PATCH] iocp's doIteration doesn't handle errors thrown from selectables  (4 days ago)
       http://twistedmatrix.com/bugs/issue1294 opened by spiv, closed by justinj

Twisted obscures SSL-level errors and prohibits application-level handling of them  (12 months ago)
       http://twistedmatrix.com/bugs/issue778 opened by andrea, closed by exarkun

[BACKPORT, MAIL] No callback/errback from IMAP command called when connection lost  (5 days ago)
       http://twistedmatrix.com/bugs/issue1290 opened by jojo, closed by exarkun

[CORE, DOCUMENTATION] simpleclient crashes - reactor.stop() called twice  (2 days ago)
       http://twistedmatrix.com/bugs/issue1299 opened by FrankMillman, closed by exarkun

[TESTS, TRIAL] TASK: Remove deferredResult and deferredError  (3 days ago)
       http://twistedmatrix.com/bugs/issue1297 opened by jml, closed by exarkun

[BACKPORT, CORE, TWISTD] twisted/application/app.py messes up subcommands with its parseOptions  (3 days ago)
       http://twistedmatrix.com/bugs/issue1298 opened by exarkun, closed by exarkun

[WORDS] jabber BasicAuthenticator  (3 days ago)
       http://twistedmatrix.com/bugs/issue1296 opened by sciasbat, closed by ralphm

[CORE, DOCUMENTATION] twisted.internet.abstract.FileDescriptor.loseConnection.__doc__ is a stupid lie  (6 months ago)
       http://twistedmatrix.com/bugs/issue988 opened by exarkun, closed by glyph

at least one egrep option in twisted-dev.el (CVS) not supported on Mac OS X 10.3.7  (10 months ago)
       http://twistedmatrix.com/bugs/issue849 opened by ytrewq1, closed by glyph

[SECURITY] Threads improperly retain initial privileges  (3 weeks ago)
       http://twistedmatrix.com/bugs/issue1251 opened by exarkun, closed by glyph

[BACKPORT, WORDS] UnboundLocalError in twisted.words.tap  (1 week ago)
       http://twistedmatrix.com/bugs/issue1283 opened by mike, closed by exarkun

                    ==== Feature ====
Implement spawnProcess for default reactor on Windows  (19 months ago)
       http://twistedmatrix.com/bugs/issue591 opened by justinj, closed by justinj

[TRIAL] Suppress expected warnings from trial  (17 months ago)
       http://twistedmatrix.com/bugs/issue627 opened by jknight, closed by jml

[TRIAL] --coverage should be a flag, not a parameter  (1 month ago)
       http://twistedmatrix.com/bugs/issue1207 opened by jml, closed by jml

                    ==== Wish ====
clean up gtk2reactor's waste of CPU in iterate()  (9 months ago)
       http://twistedmatrix.com/bugs/issue858 opened by glyph, closed by glyph

[DEFERRED] Deferred.callback(anotherDeferred)  (23 months ago)
       http://twistedmatrix.com/bugs/issue410 opened by etrepum, closed by glyph




From eddyxu at 126.com  Wed Nov  2 00:05:51 2005
From: eddyxu at 126.com (Eddy Xu)
Date: Wed, 02 Nov 2005 15:05:51 +0800
Subject: [Twisted-Python] How could I add reliability to a udp client
Message-ID: <4368654F.2070905@126.com>

This is my situation: I have a client to send UDP messages to multi
servers, and I have to ensure all the messages be recieved by special
server. If the client didn't get the response , it should re-send the
message for times. I think i need maintain a FIFO queue for all
messages, but i have no idea how to deal with the different status of
message, such as send but not recieved message, don't be send, and have
resent for times. Can you help me?



From itamar at itamarst.org  Wed Nov  2 10:47:45 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 02 Nov 2005 12:47:45 -0500
Subject: [Twisted-Python] How could I add reliability to a udp client
In-Reply-To: <4368654F.2070905@126.com>
References: <4368654F.2070905@126.com>
Message-ID: <1130953665.8992.4.camel@localhost.localdomain>

On Wed, 2005-11-02 at 15:05 +0800, Eddy Xu wrote:
> This is my situation: I have a client to send UDP messages to multi
> servers, and I have to ensure all the messages be recieved by special
> server. If the client didn't get the response , it should re-send the
> message for times. I think i need maintain a FIFO queue for all
> messages, but i have no idea how to deal with the different status of
> message, such as send but not recieved message, don't be send, and have
> resent for times. Can you help me?

Any reason not to use TCP?




From wsanchez at wsanchez.net  Wed Nov  2 13:22:39 2005
From: wsanchez at wsanchez.net (=?ISO-8859-1?Q?Wilfredo_S=E1nchez_Vega?=)
Date: Wed, 2 Nov 2005 12:22:39 -0800
Subject: [Twisted-Python] WabDAV in twisted
Message-ID: <C7C05A97-CCCA-4DF3-AADC-19E8B3B6DEA3@wsanchez.net>

> is there anything happening in Twisted community in terms of
> supporting WebDAV protocol? I found only one relevant project -
> akadav but it looks like it was abandoned for about 5 month now.

   Yeah, see: http://www.wsanchez.net/blog/archives/000116.html

   I might be able to get started with getting some of this into the  
twisted repository this weekend, with some help from dreid, but in  
the meantime, you can use the external module in my red-bean repository.

     -wsv

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3057 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20051102/b8d6e79d/attachment-0002.bin>

From dreid at dreid.org  Wed Nov  2 14:41:23 2005
From: dreid at dreid.org (David Reid)
Date: Wed, 2 Nov 2005 13:41:23 -0800
Subject: [Twisted-Python] WabDAV in twisted
In-Reply-To: <C7C05A97-CCCA-4DF3-AADC-19E8B3B6DEA3@wsanchez.net>
References: <C7C05A97-CCCA-4DF3-AADC-19E8B3B6DEA3@wsanchez.net>
Message-ID: <2CA6E89E-6AF3-4C9C-826B-42C0BB7A1742@dreid.org>


On Nov 2, 2005, at 12:22 PM, Wilfredo Sánchez Vega wrote:

>> is there anything happening in Twisted community in terms of
>> supporting WebDAV protocol? I found only one relevant project -
>> akadav but it looks like it was abandoned for about 5 month now.
>>
>
>   Yeah, see: http://www.wsanchez.net/blog/archives/000116.html
>
>   I might be able to get started with getting some of this into the  
> twisted repository this weekend, with some help from dreid, but in  
> the meantime, you can use the external module in my red-bean  
> repository.
>
>     -wsv

In fact, if you can make it to SuperHappyDevHouse I would put aside  
all personal projects to work on this.
-David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051102/585a69ee/attachment.html>

From dmitry at athabascau.ca  Wed Nov  2 14:54:42 2005
From: dmitry at athabascau.ca (Dmitry S. Makovey)
Date: Wed, 02 Nov 2005 14:54:42 -0700
Subject: [Twisted-Python] WabDAV in twisted
In-Reply-To: <C7C05A97-CCCA-4DF3-AADC-19E8B3B6DEA3@wsanchez.net>
References: <C7C05A97-CCCA-4DF3-AADC-19E8B3B6DEA3@wsanchez.net>
Message-ID: <200511021454.42907.dmitry@athabascau.ca>

On November 2, 2005 01:22 pm, Wilfredo Sánchez Vega wrote:
> > is there anything happening in Twisted community in terms of
> > supporting WebDAV protocol? I found only one relevant project -
> > akadav but it looks like it was abandoned for about 5 month now.
>
>    Yeah, see: http://www.wsanchez.net/blog/archives/000116.html
>
>    I might be able to get started with getting some of this into
> the twisted repository this weekend, with some help from dreid, but
> in the meantime, you can use the external module in my red-bean
> repository.

Thanks, I was probing ground because it started to look like akadav is 
not alive anymore and most probably we'll need to replace our WebDAV 
server built on akadav platform with something that is more actively 
maintained. So for now I don't have much time to spend implementing 
new server but knowing in which direction I should start looking 
right now is a good thing IMO :).

-- 
Dmitry Makovey
Web Systems Administrator
Athabasca University
(780) 675-6245
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20051102/f9718e28/attachment.sig>

From foom at fuhm.net  Wed Nov  2 15:56:32 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 2 Nov 2005 17:56:32 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15000 - Potential fix for
	issue1123.
In-Reply-To: <E1EXPZ1-0004Mp-00@wolfwood>
References: <E1EXPZ1-0004Mp-00@wolfwood>
Message-ID: <86B0676E-4AF6-42BD-8E15-C3925104F8F5@fuhm.net>

On Nov 2, 2005, at 3:50 PM, Justin Johnson wrote:
>  _cmdLineQuoteRe = re.compile(r'(\\*)"')
>  def _cmdLineQuote(s):
> -    return '"' + _cmdLineQuoteRe.sub(r'\1\1\\"', s) + '"'
> +    quote = ((" " in s) or ("\t" in s)) and '"' or ''
> +    return quote + _cmdLineQuoteRe.sub(r'\1\1\\"', s) + quote


That should be checking for a doublequote in addition to space and tab.

Also I just noticed another bug:
With input string (two characters):
"\
the output should be (6 chars):
"\"\\"
but is currently completely incorrect:
"\"\"

I think that second can be fixed with:
_cmdLineQuoteRe = re.compile(r'(\\*)"')
_cmdLineQuoteRe2 = re.compile(r'(\\+)\Z')
def _cmdLineQuote(s):
     return '"' + _cmdLineQuoteRe2.sub(r"\1\1", _cmdLineQuoteRe.sub 
(r'\1\1\\"', s)) + '"'

James



From eddyxu at 126.com  Wed Nov  2 18:03:48 2005
From: eddyxu at 126.com (Eddy Xu)
Date: Thu, 03 Nov 2005 09:03:48 +0800
Subject: [Twisted-Python] How could I add reliability to a udp client
In-Reply-To: <1130953665.8992.4.camel@localhost.localdomain>
References: <4368654F.2070905@126.com>
	<1130953665.8992.4.camel@localhost.localdomain>
Message-ID: <436961F4.9010708@126.com>

The client just send short command messages. Do it need to connect with
the server? perhaps the UDP way is lighter?

Itamar Shtull-Trauring 写道:
> On Wed, 2005-11-02 at 15:05 +0800, Eddy Xu wrote:
>   
>> This is my situation: I have a client to send UDP messages to multi
>> servers, and I have to ensure all the messages be recieved by special
>> server. If the client didn't get the response , it should re-send the
>> message for times. I think i need maintain a FIFO queue for all
>> messages, but i have no idea how to deal with the different status of
>> message, such as send but not recieved message, don't be send, and have
>> resent for times. Can you help me?
>>     
>
> Any reason not to use TCP?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>   





From exarkun at divmod.com  Wed Nov  2 21:16:41 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 2 Nov 2005 23:16:41 -0500
Subject: [Twisted-Python] How could I add reliability to a udp client
In-Reply-To: <436961F4.9010708@126.com>
Message-ID: <20051103041641.10365.575844643.divmod.quotient.3596@ohm>

On Thu, 03 Nov 2005 09:03:48 +0800, Eddy Xu <eddyxu at 126.com> wrote:
>The client just send short command messages. Do it need to connect with
>the server? perhaps the UDP way is lighter?

In other words, no? :)  UDP is hard.  *Sometimes* it is a valuable optimization.  Treat it as such: do not use it unless it is easier than another solution, and do not consider switching to it until you have demonstrated a bottleneck which it may eliminate or alleviate.

Jean-Paul



From eddyxu at 126.com  Wed Nov  2 22:26:19 2005
From: eddyxu at 126.com (Eddy Xu)
Date: Thu, 03 Nov 2005 13:26:19 +0800
Subject: [Twisted-Python] How could I add reliability to a udp client
In-Reply-To: <20051103041641.10365.575844643.divmod.quotient.3596@ohm>
References: <20051103041641.10365.575844643.divmod.quotient.3596@ohm>
Message-ID: <43699F7B.8010507@126.com>

 :-) Thank you. But i have to implement a heart beat to make sure that
all servers are "alive". Is it possible to use TCP in an easy way? Let
me tell you more about my client app? :-) The client maintains a command
queue that should be sent to different servers, and it also should know
the status of the servers. So i choose to use UDP for commands sending
and heart beating. Would you like to give me some advises to improve the
model? Thx again.

Jean-Paul Calderone 写道:
> On Thu, 03 Nov 2005 09:03:48 +0800, Eddy Xu <eddyxu at 126.com> wrote:
>> The client just send short command messages. Do it need to connect with
>> the server? perhaps the UDP way is lighter?
>
> In other words, no? :) UDP is hard. *Sometimes* it is a valuable
> optimization. Treat it as such: do not use it unless it is easier than
> another solution, and do not consider switching to it until you have
> demonstrated a bottleneck which it may eliminate or alleviate.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>





From jml at mumak.net  Wed Nov  2 22:46:15 2005
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 3 Nov 2005 16:46:15 +1100
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
In-Reply-To: <20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
References: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>
	<20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
Message-ID: <d06a5cd30511022146q3711b42fy@mail.gmail.com>

On 02/11/05, glyph at divmod.com <glyph at divmod.com> wrote:
>
>
> On Tue, 1 Nov 2005 12:38:21 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> >On Tue, 01 Nov 2005 10:47:09 -0500, Itamar Shtull-Trauring
> ><itamar at itamarst.org> wrote:
> >>Hi,
> >>
> >>Still haven't gotten an answer to this; why is the motivation for
> >>deprecating a perfectly reasonable feature?
> >
> >FWIW, I also would like to know the answer to this question.
>
> Yeah, uh...
>
> As I understand it the implementation was previously horrendously broken.  Now it is not.  Given that it is now no longer broken, and some quite reasonable tests I've seen make use of it (in particular: tests for Divmod ClickChronicle do some very expensive setup in a setUpClass), I'd like to see it stick around.
>

Thanks everyone for your patience while I make the time to answer this question.

I'd like to deprecate setUpClass, but I'm not totally sold on it.  The
biggest problem I have with it is that it encourages (nay, forces)
users to share state between tests.  This may be a problem inherent
with any setup optimisation -- but I'd like to experiment first.

My other problems are to do with implementation -- and these are the
problems I feel most keenly.  Trial only knows about classes in the
test loader.  After that, it only knows about things to call run() on.
 Sometimes these are collections of tests (suites), sometimes these
are actual tests.  setUpClass mandates a ClassSuite -- a suite that
runs setUpClass at the start and tearDownClass at the end.

One big implication is that a TestCase isn't (necessarily) a
self-contained TestCase.  It has to be wrapped in a ClassSuite to make
sure that it gets properly set up and torn down.  Running a single
test shouldn't require a suite.

ClassSuite also means that the test loader needs to have two suite
factories.  This makes it more difficult to extend (which you'd want
to do for alternative runners (ala GUIs) and also if you have a cool
way to optimise your tests locally -- see below).

In addition, ClassSuite makes "what happens when tests are run" a fair
bit more complicated.  This is particularly confusing wrt
KeyboardInterrupt and reactor cleanup.

Oh yeah, and it makes things incompatible with unittest.


The example below shows what I'm considering at the moment.  This is
the testresources system by Robert Collins.  One of the reasons I
hesitated on this post is that I wanted to have chewed over this more.
But here 'tis.


Instead of:

class FooTest(unittest.TestCase):
    def setUpClass(self):
        self.db = ExpensiveAcquisition()

    def tearDownClass(self):
        self.db.expensiveDismissal()

    def test_foo(self):
        self.failUnless(self.db.isAwesome())

we have:

class DBResource(resources.Resource):
    def makeResource(self):
        cls.db = ExpensiveAcquisition()
        return cls.db
    makeResource = classmethod(makeResource)

    def cleanResource(self):
        cls.db.expensiveDismissal()
    cleanResource = classmethod(cleanResource)


class FooTest(unittest.ResourcedTestCase):
    resources = [ ('db', DBResource) ]

    def test_foo(self):
         self.failUnless(self.db.isAwesome())


One of the advantages of this is that it can be made faster than
setUpClass / tearDownClass because the OptimizingTestSuite can look at
all the tests and resources underneath is to establish the best order
to run the tests, and it can preserve resources between TestCase
classes.

cheers,
jml

PS. Jp, I hope your day continues as wonderfully as you thought it
would start. :)



From glyph at divmod.com  Wed Nov  2 22:48:16 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 3 Nov 2005 00:48:16 -0500
Subject: [Twisted-Python] How could I add reliability to a udp client
In-Reply-To: <436961F4.9010708@126.com>
Message-ID: <20051103054816.10365.653314065.divmod.quotient.3618@ohm>



On Thu, 03 Nov 2005 09:03:48 +0800, Eddy Xu <eddyxu at 126.com> wrote:
>The client just send short command messages. Do it need to connect with
>the server? perhaps the UDP way is lighter?

Reliability is not a quick feature, in no way would a reliable UDP layer be "lighter" than TCP.  Putting reliability on top of UDP should be avoided unless you really, really need it for some reason.



From twisted at ralphm.ik.nu  Thu Nov  3 02:14:37 2005
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Thu, 3 Nov 2005 10:14:37 +0100
Subject: [Twisted-Python] Generally useful RFC2617
In-Reply-To: <1130867874.8330.12.camel@audrey.local>
References: <1130867874.8330.12.camel@audrey.local>
Message-ID: <20051103091437.GA46105@ik.nu>

On Tue, Nov 01, 2005 at 09:57:53AM -0800, David Reid wrote:
> Currently in Twisted/sandbox/dreid/rfc2617.py (with unittests at
> test_rfc2617.py) there is an implementation of RFC 2617 HTTP
> Authentication: Basic and Digest based authentication. [..]
>
> 1) Where to put it?
> 
> In theory it should be in twisted core.  I just don't know where, and
> didn't want to check it in there somewhere only to have developers with
> more pull than I have to disagree, itamar suggested t.py.digest, dash
> seemed to agree, other suggestions were t.cred.digest, but I just don't
> know.

This appears to be implementing the server side. Correct?

I've been working on implementing SASL for Jabber and started with the
client side of SASL, with server side to follow later. I think we have
similar concerns and might join efforts.

SASL authentication is really a collection of different authentication
methods in a common framework.  Protocols like Jabber and IMAP define
their own profiles for encoding and communicating the different steps.
So I split my code in two parts:

 - for each mechanism a profile-agnostic implementation
 - a Jabber specific wrapper that decodes and encodes using Base64 and
   does the protocol side.

The first should be usable for IMAP and other SASL using protocols as
well, so we need to have a common location for this.

To get back to your stuff, the SASL Digest-MD5 mechanism, as described
in RFC 2831 is intended to be upward compatible with the md5-sess
algorithm of HTTP/1.1 Digest Access Authentication, so there is overlap
there.

As far as I know Twisted Cred now only concerns itself with the server
side of matching credentials to 'accounts', not with the interaction
between entities, like SASL, so we need to find our stuff a nice home.

-- 
Groetjes,

ralphm



From justinjohnson at gmail.com  Thu Nov  3 07:35:00 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Thu, 3 Nov 2005 08:35:00 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] r15000 - Potential fix for
	issue1123.
In-Reply-To: <86B0676E-4AF6-42BD-8E15-C3925104F8F5@fuhm.net>
References: <E1EXPZ1-0004Mp-00@wolfwood>
	<86B0676E-4AF6-42BD-8E15-C3925104F8F5@fuhm.net>
Message-ID: <94a776e70511030635l7a51e69bi5c2f4681f9c3652f@mail.gmail.com>

Thanks. I updated the fix and the tests.

On 11/2/05, James Y Knight <foom at fuhm.net> wrote:
>
> On Nov 2, 2005, at 3:50 PM, Justin Johnson wrote:
> > _cmdLineQuoteRe = re.compile(r'(\\*)"')
> > def _cmdLineQuote(s):
> > - return '"' + _cmdLineQuoteRe.sub(r'\1\1\\"', s) + '"'
> > + quote = ((" " in s) or ("\t" in s)) and '"' or ''
> > + return quote + _cmdLineQuoteRe.sub(r'\1\1\\"', s) + quote
>
>
> That should be checking for a doublequote in addition to space and tab.
>
> Also I just noticed another bug:
> With input string (two characters):
> "\
> the output should be (6 chars):
> "\"\\"
> but is currently completely incorrect:
> "\"\"
>
> I think that second can be fixed with:
> _cmdLineQuoteRe = re.compile(r'(\\*)"')
> _cmdLineQuoteRe2 = re.compile(r'(\\+)\Z')
> def _cmdLineQuote(s):
> return '"' + _cmdLineQuoteRe2.sub(r"\1\1", _cmdLineQuoteRe.sub
> (r'\1\1\\"', s)) + '"'
>
> James
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051103/e368c1ad/attachment.html>

From michaelschneider at fuse.net  Thu Nov  3 08:41:29 2005
From: michaelschneider at fuse.net (Michael Schneider)
Date: Thu, 03 Nov 2005 10:41:29 -0500
Subject: [Twisted-Python] Win32 release of 2.1 status
Message-ID: <436A2FA9.8030305@fuse.net>

Quick Question,

Any word on status of a  2.1 release for windows?

Thanks for the great project,
Mike

-- 
The greatest performance improvement occurs on the transition of from the non-working state to the working state.




From radeex at gmail.com  Thu Nov  3 17:08:48 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 4 Nov 2005 11:08:48 +1100
Subject: [Twisted-Python] pyramid -> Ubuntu
In-Reply-To: <20051028124336.GC12326@sourdust.home.puzzling.org>
References: <60ed19d40510280421j12c986c0na28858f357de8d@mail.gmail.com>
	<20051028124336.GC12326@sourdust.home.puzzling.org>
Message-ID: <60ed19d40511031608x67706715xe41bb73cedb147d4@mail.gmail.com>

Well, I'm going to give this a burl Saturday morning (Friday night for
USers) unless someone speaks up.

I should point out that we should be getting rid of the sid-chroot,
which I think is running some important services on pyramid: my
personal web site (;-), a buildslave, and maybe some other stuff. If
you have anything running in the sid-chroot, please either be around
on Friday night or just remember to reconfigure it to run normally
later (it's certain that any of the packages that were being used in
that ancient install of Debian unstable in our sid-chroot will be
available in the latest ubuntu, unless they're so ancient that they've
been deprecated ;-)

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From twisted at kampinada.de  Fri Nov  4 03:34:54 2005
From: twisted at kampinada.de (Kai Schulte)
Date: Fri, 4 Nov 2005 11:34:54 +0100
Subject: [Twisted-Python] IRC: getting auth of a user
Message-ID: <200511041134.54838.twisted@kampinada.de>

Hello!
Sorry if this is the wrong list, or has already been answered.

I`m writing a little bot and I need to get the irc-auth of someone who is 
sending a privmsg to the bot.

Probably it is easy but I can`t figure it out.
So any help would be appreciated.

Thanks Kai



From mailinglists at smartology.nl  Fri Nov  4 03:49:01 2005
From: mailinglists at smartology.nl (Remi Cool)
Date: Fri, 04 Nov 2005 11:49:01 +0100
Subject: [Twisted-Python] Weird problem with XMLRPC -> ('405',
	'Method Not Allowed')
Message-ID: <436B3C9D.2010502@smartology.nl>

Hello,

I've run into a problem with my twisted xmlrpc test server (using
twisted version 2.01 or 2.1).

Every time the client calls the echo function a '405 Method Not Allowed
is returned'.

One other thing is that pressing CTRL-C when the server is running,
results in the RuntimeError: can't stop reactor that isn't running.

Any ideas?

Here's the server code:

#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-

""""""
import sys

from twisted.application import internet, service
from twisted.internet import reactor, protocol, defer
from twisted.web import resource, server, static, xmlrpc
from twisted.python import components, rebuild
from zope.interface import Interface, implements


class myXMLRPC(xmlrpc.XMLRPC):
    """This class contains all root xmlrpc methods and the modules
subhandler."""
    def __init__(self, service):
        xmlrpc.XMLRPC.__init__(self)
        self.service = service
       
    def xmlrpc_rebuild(self, modname):
        """Rebuild the given module"""
        self.service.rebuild(modname)
        return true
   
    def xmlrpc_echo(self, x):
        """Simple echo function"""
        return x
       
   
def catchError(err):
    return "Internal error in server"
   
   
class IowwService(components.Interface):
    """"""
    def rebuild(self, modname):
        """Rebuild classes in given module"""
       

class httpResource(resource.Resource):

    implements(resource.IResource)
   
    def __init__(self, service):
        resource.Resource.__init__(self)
        self.service = service
        self.putChild('RPC2', myXMLRPC(self.service))      

    def render(self, request):
        self._clientIP = request.getClientIP()
##         user = request.getUser()
##         pwd = request.getPassword()
##         if (user and password):
        return resource.Resource.render(self, request)
##         else:
##             request.setResponseCode(401)
##             return '<html><body><h3>Must be
authenticated</h3></body></html>'

    def render_GET(self, request):
        """Process HTTP GET Requests."""
        return '<html><body><h3>Not Implemented</h3></body></html>'
       
    def getChild(self, path, request):
        """This method handles http calls"""
        return httpResource(self.service)

components.registerAdapter(httpResource, IowwService, resource.IResource)


class owwService(service.Service):
    """"""
    implements(IowwService)
   
    def rebuild(self, modname):
        """Rebuild classes in given module"""
        mod = sys.modules[modname]
        rebuild.rebuild(mod)

       
def main():
    """"""
    application = service.Application('OWW', uid=100, gid=100)
    s = owwService()
    serviceCollection = service.IServiceCollection(application)
    internet.TCPServer(7080,
server.Site(resource.IResource(s))).setServiceParent(serviceCollection)
    serviceCollection.startService()
   
    try:
        try:
            print 'Running... '
            reactor.run()
        except KeyboardInterrupt:
            print 'CTRL-C received, shutting down server.'
        except Exception, e:
            print 'Problem with running server.'
    finally:
        reactor.stop()
        serviceCollection.stopService()

if __name__ == '__main__':
    main()

And the client code:

#!/usr/bin/env python

from twisted.web.xmlrpc import Proxy
from twisted.internet import reactor

def printValue(value):
    print repr(value)
    reactor.stop()

def printError(error):
    print 'error', error
    reactor.stop()

proxy = Proxy('http://localhost:7080')
proxy.callRemote('echo', 'hello world').addCallbacks(printValue, printError)
reactor.run()



From mwh at python.net  Fri Nov  4 05:11:13 2005
From: mwh at python.net (Michael Hudson)
Date: Fri, 04 Nov 2005 12:11:13 +0000
Subject: [Twisted-Python] Re: IRC: getting auth of a user
References: <200511041134.54838.twisted@kampinada.de>
Message-ID: <2mzmok1ula.fsf@starship.python.net>

Kai Schulte <twisted at kampinada.de> writes:

> Hello!
> Sorry if this is the wrong list, or has already been answered.

Asking in #twisted on freenode might be quicker...

> I`m writing a little bot and I need to get the irc-auth of someone who is 
> sending a privmsg to the bot.

It's unclear to me what this means.  irc-auth meaning "is the user
authenticated with NickServ?"?

> Probably it is easy but I can`t figure it out.
> So any help would be appreciated.

It might not be totally straightfoward :/

Cheers,
mwh

-- 
  It's actually a corruption of "starling".  They used to be carried.
  Since they weighed a full pound (hence the name), they had to be
  carried by two starlings in tandem, with a line between them.
                 -- Alan J Rosenthal explains "Pounds Sterling" on asr




From twisted at kampinada.de  Fri Nov  4 05:44:43 2005
From: twisted at kampinada.de (Kai Schulte)
Date: Fri, 4 Nov 2005 13:44:43 +0100
Subject: [Twisted-Python] Re: IRC: getting auth of a user
In-Reply-To: <2mzmok1ula.fsf@starship.python.net>
References: <200511041134.54838.twisted@kampinada.de>
	<2mzmok1ula.fsf@starship.python.net>
Message-ID: <200511041344.44056.twisted@kampinada.de>

Am Freitag, 4. November 2005 13:11 schrieb Michael Hudson:
> Kai Schulte <twisted at kampinada.de> writes:
> > Hello!
> > Sorry if this is the wrong list, or has already been answered.
>
> Asking in #twisted on freenode might be quicker...
>
Yeah;)
But as I have still work to and this is only for fun, I thought I could wait 
und do some "real" work. ;) 

> > I`m writing a little bot and I need to get the irc-auth of someone who is
> > sending a privmsg to the bot.
>
> It's unclear to me what this means.  irc-auth meaning "is the user
> authenticated with NickServ?"?
Sorry my fault, I should have explained it better.
On quakenet (the only net, the bot is for) auth means
---
AUTH
Identifies you as a particular user on the bot.
This will identify you on the bot as until you quit from IRC.

Usage: /MSG Q at CServe.quakenet.org AUTH <username> <password>
eg. /MSG Q at CServe.quakenet.org AUTH John 4321Jo
---
So, if someone does a /whois <username> he should get something like:
---
* [chemosh] (~chemosh at desci.users.quakenet.org): Kai
* [chemosh] @#chemtest @#tc_rul0rn_mit_pudi_und_miko @#real1ife 
+#oneofall-intern +#oneofall +#milchies #row.de @#r1.gn 
* [chemosh] sw2.de.quakenet.org :SplatterWorld QuakeNet server
* [chemosh] is authed as desci
* [chemosh] ~chemosh at p54819A4E.dip0.t-ipconnect.de 84.129.154.78 :Actual 
user at host, Actual IP
* [chemosh] untätig 01:26:53, Online seit: Fri Nov  4 08:51:00
* [chemosh] Ende der WHOIS-Liste.
---
where this: "* [chemosh] is authed as desci" is the important part.
For the bot It would mean the auth is desci, and desci is the string I would 
like to get. 

I hope that explains it a little bit better

>
> > Probably it is easy but I can`t figure it out.
> > So any help would be appreciated.
>
> It might not be totally straightfoward :/


>
> Cheers,
> mwh

Thanks Kai



From mwh at python.net  Fri Nov  4 06:16:24 2005
From: mwh at python.net (Michael Hudson)
Date: Fri, 04 Nov 2005 13:16:24 +0000
Subject: [Twisted-Python] Re: IRC: getting auth of a user
References: <200511041134.54838.twisted@kampinada.de>
	<2mzmok1ula.fsf@starship.python.net>
	<200511041344.44056.twisted@kampinada.de>
Message-ID: <2mvez81rkn.fsf@starship.python.net>

Kai Schulte <twisted at kampinada.de> writes:

>> It's unclear to me what this means.  irc-auth meaning "is the user
>> authenticated with NickServ?"?
> Sorry my fault, I should have explained it better.
> On quakenet (the only net, the bot is for) auth means

Oh!  I already have code to do that :)

http://codespeak.net/svn/user/mwh/recordbot/recordbot.py

Look at the authName() method.  This uses the whois() method from
irc2.py in exarkun's sandbox (which is also alongside recordbot.py).
It seems to work :)

Cheers,
mwh

-- 
39. Re graphics:  A picture is worth 10K words - but only those
    to describe the picture.  Hardly any sets of 10K words can be
    adequately described with pictures.
  -- Alan Perlis, http://www.cs.yale.edu/homes/perlis-alan/quotes.html




From dhess at verscend.com  Fri Nov  4 08:26:08 2005
From: dhess at verscend.com (David K. Hess)
Date: Fri, 4 Nov 2005 09:26:08 -0600
Subject: [Twisted-Python] Unjelly - recursion limit reached
Message-ID: <F0622444-7932-4BBF-B20F-7D9AE3BF3729@verscend.com>


I've got a PB server that on client connect returns a Cacheable  
object that is at the top of a hierarchy of Cacheables that can grow  
pretty large. I am sometimes seeing an unjelly exception in the  
client on connect due to recursion limit being reached.

I have a theory as to what is going wrong but I wanted to query the  
list about an assumption that I've glossed over at this point. When a  
view_ method is called in a cacheable and the return value is a graph  
of interconnected cacheables, is the return value completely  
serialized at that point? Or is the serialization based on streaming  
data to the client? In other words if the data stream to the client  
stalls then the serialization stalls too?

I'm concerned that my hierarchy of cacheables received by the client  
is inconsistent because it is being modified by another client view_  
call into the server before the previous hierarchy has been fully  
serialized to the first client.

Thanks for any insight into this.

Dave



From sonium at gmail.com  Fri Nov  4 09:17:08 2005
From: sonium at gmail.com (sonium)
Date: Fri, 04 Nov 2005 17:17:08 +0100
Subject: [Twisted-Python] how to unitest this?
Message-ID: <436B8984.4000008@gmail.com>

hi, I just read the introduction about unittesting on diveintopython and 
now asked myself how I could write a unittest for the connectionmade 
function in the code below taken from the tutorial:

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import reactor

class QOTD(Protocol):

    def connectionMade(self):
        self.transport.write("An apple a day keeps the doctor away\r\n")
        self.transport.loseConnection()


# Next lines are magic:
factory = Factory()
factory.protocol = QOTD

# 8007 is the port you want to run under.
reactor.listenTCP(8007, factory)
reactor.run()


I know there is twisted.trail, but I haven't found any useful 
information about it yet.
Or is mockobjects the thing I am looking for?



From itamar at itamarst.org  Fri Nov  4 09:36:02 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 04 Nov 2005 11:36:02 -0500
Subject: [Twisted-Python] Weird problem with XMLRPC -> ('405', 'Method
	Not Allowed')
In-Reply-To: <436B3C9D.2010502@smartology.nl>
References: <436B3C9D.2010502@smartology.nl>
Message-ID: <1131122162.9182.8.camel@localhost.localdomain>

On Fri, 2005-11-04 at 11:49 +0100, Remi Cool wrote:

> One other thing is that pressing CTRL-C when the server is running,
> results in the RuntimeError: can't stop reactor that isn't running.

Twisted handles Ctrl-C for you, you don't need to catch
KeyboardInterrupt or exceptions. Just get rid of all the try/except
around reactor.run(), and don't call reactor.stop() after reactor.run()
has returned, which is what you're doing that causes the RuntimeError.




From twisted at kampinada.de  Fri Nov  4 09:55:12 2005
From: twisted at kampinada.de (Kai Schulte)
Date: Fri, 4 Nov 2005 17:55:12 +0100
Subject: [Twisted-Python] Re: IRC: getting auth of a user
In-Reply-To: <2mvez81rkn.fsf@starship.python.net>
References: <200511041134.54838.twisted@kampinada.de>
	<200511041344.44056.twisted@kampinada.de>
	<2mvez81rkn.fsf@starship.python.net>
Message-ID: <200511041755.12382.twisted@kampinada.de>

Thanks, I hope I can get a closer look tonight and adapt it somehow. ;)

But after a short overview I fear I have to rewrite my bot completely.
Since the bot is very simple, I didn`t even used any defers, etc.

Thanks
Kai

Am Freitag, 4. November 2005 14:16 schrieb Michael Hudson:
> Kai Schulte <twisted at kampinada.de> writes:
> >> It's unclear to me what this means.  irc-auth meaning "is the user
> >> authenticated with NickServ?"?
> >
> > Sorry my fault, I should have explained it better.
> > On quakenet (the only net, the bot is for) auth means
>
> Oh!  I already have code to do that :)
>
> http://codespeak.net/svn/user/mwh/recordbot/recordbot.py
>
> Look at the authName() method.  This uses the whois() method from
> irc2.py in exarkun's sandbox (which is also alongside recordbot.py).
> It seems to work :)
>
> Cheers,
> mwh



From itamar at itamarst.org  Fri Nov  4 12:02:43 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 04 Nov 2005 14:02:43 -0500
Subject: [Twisted-Python] Remove setupClass branch of trial - what is
	the motivation?
In-Reply-To: <d06a5cd30511022146q3711b42fy@mail.gmail.com>
References: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>
	<20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
	<d06a5cd30511022146q3711b42fy@mail.gmail.com>
Message-ID: <1131130964.9182.25.camel@localhost.localdomain>

On Thu, 2005-11-03 at 16:46 +1100, Jonathan Lange wrote:

> One big implication is that a TestCase isn't (necessarily) a
> self-contained TestCase.  It has to be wrapped in a ClassSuite to make
> sure that it gets properly set up and torn down.  Running a single
> test shouldn't require a suite.

I don't see why you need a ClassSuite; couldn't a TestCase have optional
pre- and post- hooks called along with the test?

> Oh yeah, and it makes things incompatible with unittest.

A correctly running trial (not what we have now, cause of all the tests
that do wait() and reactor.iterate()) would call reactor.run() once, and
tests would only support returning Deferreds as a mean for making the
reactor continue. Could we preserve unittest compatability while still
working this way? If not, there's no point in bothering. E.g. it seems
unlikely that a random unittest.py runner program will be able to run
trial tests once we switch to the correct reactor-running strategy.


> The example below shows what I'm considering at the moment.  This is
> the testresources system by Robert Collins.  One of the reasons I
> hesitated on this post is that I wanted to have chewed over this more.
> But here 'tis.

Any reason we need a whole complex new system when the current one
works?




From jkrushen at gmail.com  Fri Nov  4 16:46:13 2005
From: jkrushen at gmail.com (Jordan Krushen)
Date: Fri, 4 Nov 2005 15:46:13 -0800
Subject: [Twisted-Python] pb.Cacheable vs. offline queuing
Message-ID: <b811ba730511041546o3c785a17x2067b8303e6b1222@mail.gmail.com>

I'm designing a job-tracking/workflow system for a client, with a
primary requirement being the use of a hosted server for
web/RPC/REST/sftp presence (among other things, thanks to Twisted),
and another local server internal to their office, both kept up to
date with each other (each holding a local DB;  I'm undecided on
exactly which one).  Users would use the web UI through the hosted
server, office staff would use a Cocoa client speaking PB to the
office server.  Ignore the workstation-server PB connections for now,
I'm just concerned with the server-server connections.

I've been looking at Cacheable, as the live updates between servers
would be useful, but I have a few questions:

How does it avoid collisions, if an attribute is changed on both ends
at once?  Is any kind of 2PC involved, or similar?  I read that some
part of reading/observing is atomic, but is modifying atomic as well?

If it does deal with simultaneous updates in a robust way, I'm still
dealing with another requirement:  the two servers (public and office)
must both keep serving users, even if the connection between them is
severed.  Changes must accumulate on both ends, and any collisions
would be dealt with manually by the office staff once the connection
came back up.  Total amount of collisions is expected to be somewhat
low due to the nature of their business and its clients.

Would it be possible to use Cacheables, but have them queue their
communications if the remote side goes away?  Should I just
reimplement this as a layer on top to use Cacheables if it's online,
and something custom to do reconciliation when the connection comes
back up, then switch back to Cacheables, or would customizing
Cacheable be the better road to take?

What other ways of syncing systems (with offline queuing) have you guys used?

J.



From jml at mumak.net  Fri Nov  4 18:34:48 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 5 Nov 2005 12:34:48 +1100
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
In-Reply-To: <1131130964.9182.25.camel@localhost.localdomain>
References: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>
	<20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
	<d06a5cd30511022146q3711b42fy@mail.gmail.com>
	<1131130964.9182.25.camel@localhost.localdomain>
Message-ID: <d06a5cd30511041734g418cc07cl@mail.gmail.com>

On 05/11/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Thu, 2005-11-03 at 16:46 +1100, Jonathan Lange wrote:
>
> > One big implication is that a TestCase isn't (necessarily) a
> > self-contained TestCase.  It has to be wrapped in a ClassSuite to make
> > sure that it gets properly set up and torn down.  Running a single
> > test shouldn't require a suite.
>
> I don't see why you need a ClassSuite; couldn't a TestCase have optional
> pre- and post- hooks called along with the test?
>

A TestCase instance already has optional pre and post hooks.  They are
called setUp and tearDown. A ClassSuite is the suite of all the test
cases defined inside a TestCase subclass.



From radeex at gmail.com  Fri Nov  4 23:00:14 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 5 Nov 2005 17:00:14 +1100
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <d06a5cd30510102131t58144c60g@mail.gmail.com>
References: <d06a5cd30510102131t58144c60g@mail.gmail.com>
Message-ID: <60ed19d40511042200x5d1e33b9l5e67dea5bd2983a9@mail.gmail.com>

On 10/11/05, Jonathan Lange <jml at mumak.net> wrote:
> Should we drop Python 2.2 support in Subversion head for Twisted 2.2?

I consider this issue resolved, given the lack of response for people
wanting 2.2 support. The buildslave for 2.2 should be taken down and
Twisted trunk should be considered fair for 2.3-only features.

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From radeex at gmail.com  Sat Nov  5 04:02:37 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 5 Nov 2005 22:02:37 +1100
Subject: [Twisted-Python] testing mailing lists after mailman upgrade
Message-ID: <60ed19d40511050302v10c8acb9i9328f89f189517da@mail.gmail.com>

You can ignore this message, I'm just testing that our upgrade went alright.


--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From exarkun at divmod.com  Sat Nov  5 12:05:54 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 5 Nov 2005 14:05:54 -0500
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <60ed19d40511042200x5d1e33b9l5e67dea5bd2983a9@mail.gmail.com>
Message-ID: <20051105190554.10365.156477206.divmod.quotient.4490@ohm>

On Sat, 5 Nov 2005 17:00:14 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
>On 10/11/05, Jonathan Lange <jml at mumak.net> wrote:
>> Should we drop Python 2.2 support in Subversion head for Twisted 2.2?
>
>I consider this issue resolved, given the lack of response for people
>wanting 2.2 support. The buildslave for 2.2 should be taken down and
>Twisted trunk should be considered fair for 2.3-only features.

Lack of interest in a change doesn't dictate that the change be made.  I didn't hear anyone come out against the change _or_ for it.

If it will help, I'll throw in against dropping 2.2 support.  Neither 2.3 nor 2.4 introduce any compelling new features.

Jean-Paul



From lists-twistedmatrix at silverwraith.com  Sat Nov  5 13:00:32 2005
From: lists-twistedmatrix at silverwraith.com (Avleen Vig)
Date: Sat, 5 Nov 2005 12:00:32 -0800
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <20051105190554.10365.156477206.divmod.quotient.4490@ohm>
References: <60ed19d40511042200x5d1e33b9l5e67dea5bd2983a9@mail.gmail.com>
	<20051105190554.10365.156477206.divmod.quotient.4490@ohm>
Message-ID: <20051105200031.GR43209@silverwraith.com>

On Sat, Nov 05, 2005 at 02:05:54PM -0500, Jean-Paul Calderone wrote:
> >I consider this issue resolved, given the lack of response for people
> >wanting 2.2 support. The buildslave for 2.2 should be taken down and
> >Twisted trunk should be considered fair for 2.3-only features.
> 
> Lack of interest in a change doesn't dictate that the change be made.  
> I didn't hear anyone come out against the change _or_ for it.
> If it will help, I'll throw in against dropping 2.2 support.  Neither 
> 2.3 nor 2.4 introduce any compelling new features.

The obvious question is what will we lose if we drop 2.2 support and
what will we gain?
My understanding is that datetime for python < 2.3 isn't perfect, and I
use datetime extensively.
2.3 lets you specify the a stride when you slice, universal readlines
mode when opening files is nice, you can pop() dicts.. in fact just read
this:

http://www.aleax.it/Python/pythonian.html

I thinkit would be nice to start using some of the features 2.3 and
newer support.



From exarkun at divmod.com  Sat Nov  5 13:26:26 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 5 Nov 2005 15:26:26 -0500
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <20051105200031.GR43209@silverwraith.com>
Message-ID: <20051105202626.10365.1772122965.divmod.quotient.4491@ohm>

On Sat, 5 Nov 2005 12:00:32 -0800, Avleen Vig <lists-twistedmatrix at silverwraith.com> wrote:
>On Sat, Nov 05, 2005 at 02:05:54PM -0500, Jean-Paul Calderone wrote:
>> >I consider this issue resolved, given the lack of response for people
>> >wanting 2.2 support. The buildslave for 2.2 should be taken down and
>> >Twisted trunk should be considered fair for 2.3-only features.
>>
>> Lack of interest in a change doesn't dictate that the change be made.
>> I didn't hear anyone come out against the change _or_ for it.
>> If it will help, I'll throw in against dropping 2.2 support.  Neither
>> 2.3 nor 2.4 introduce any compelling new features.
>
>The obvious question is what will we lose if we drop 2.2 support and
>what will we gain?
>My understanding is that datetime for python < 2.3 isn't perfect, and I
>use datetime extensively.
>2.3 lets you specify the a stride when you slice, universal readlines
>mode when opening files is nice, you can pop() dicts.. in fact just read
>this:
>
>http://www.aleax.it/Python/pythonian.html
>
>I thinkit would be nice to start using some of the features 2.3 and
>newer support.

Can you suggest some specific areas of Twisted these features would allow us to improve upon?

Jean-Paul



From strawman at astraw.com  Sat Nov  5 15:21:25 2005
From: strawman at astraw.com (Andrew Straw)
Date: Sat, 05 Nov 2005 14:21:25 -0800
Subject: [Twisted-Python] does twisted.* support mobile code?
Message-ID: <436D3065.1020506@astraw.com>

Hi,

Does any part of twisted support mobile Python code? Something like
Pyro's Mobile Code objects?
http://pyro.sourceforge.net/manual/7-features.html#mobile

Cheers!
Andrew



From exarkun at divmod.com  Sat Nov  5 16:18:14 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 5 Nov 2005 18:18:14 -0500
Subject: [Twisted-Python] does twisted.* support mobile code?
In-Reply-To: <436D3065.1020506@astraw.com>
Message-ID: <20051105231814.10365.1072597543.divmod.quotient.4493@ohm>

On Sat, 05 Nov 2005 14:21:25 -0800, Andrew Straw <strawman at astraw.com> wrote:
>Hi,
>
>Does any part of twisted support mobile Python code? Something like
>Pyro's Mobile Code objects?
>http://pyro.sourceforge.net/manual/7-features.html#mobile

I wrote out a big long screed in response to this, but then decided
it was probably overly harsh.

No, Twisted does not support this.  The lack of support is intentional.
There are a huge number of security-related issued with doing what Pyro
does, so Twisted doesn't do it.

In fact, PB goes in the other direction: even if the code defining the
class of an instance passed over PB is available on both sides, it _still_
might not be accepted by the recipient, if it has not been explicitly
marked as safe by the recipient.

Jean-Paul



From radeex at gmail.com  Sat Nov  5 18:14:08 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 6 Nov 2005 12:14:08 +1100
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <20051105190554.10365.156477206.divmod.quotient.4490@ohm>
References: <60ed19d40511042200x5d1e33b9l5e67dea5bd2983a9@mail.gmail.com>
	<20051105190554.10365.156477206.divmod.quotient.4490@ohm>
Message-ID: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>

On 11/6/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sat, 5 Nov 2005 17:00:14 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
> >On 10/11/05, Jonathan Lange <jml at mumak.net> wrote:
> >> Should we drop Python 2.2 support in Subversion head for Twisted 2.2?
> >
> >I consider this issue resolved, given the lack of response for people
> >wanting 2.2 support. The buildslave for 2.2 should be taken down and
> >Twisted trunk should be considered fair for 2.3-only features.
>
> Lack of interest in a change doesn't dictate that the change be made.  I didn't hear anyone come out against the change _or_ for it.
>
> If it will help, I'll throw in against dropping 2.2 support.  Neither 2.3 nor 2.4 introduce any compelling new features.

You are confused. At least two people were *for* dropping 2.2 support
in this thread, and nobody was against it. I'm pretty sure several
others have been for dropping it on IRC, as well.

I have seen people several times commit code that requires 2.3,
realize that the buildbot failed, and replace the code with a more
complicated version (didn't you do this recently yourself, Jp?). I
personally find it harder and harder to test 2.2, as finding an
installation of 2.2 is getting rarer these days. To unshamedly list
features from the "What's new in Python 2.3" article:

- Sets
- Proper booleans (2.2.0 didn't even have the "True" and "False" constants)
- enumerate
- csv
- generators without __future__
- sum
- callable types
- horrible obscure Python2.2-only bugs and semantics changes gone
- str in str
- arguments-to-strip

These are all pretty minor (apart from the "horrible obscure" things),
but the sum() of them adds up to a lot of annoyance in support when no
users have actually thrown in for it.

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From jadestorm at nc.rr.com  Sat Nov  5 19:10:12 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Sat, 5 Nov 2005 21:10:12 -0500
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>
References: <60ed19d40511042200x5d1e33b9l5e67dea5bd2983a9@mail.gmail.com>
	<20051105190554.10365.156477206.divmod.quotient.4490@ohm>
	<60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>
Message-ID: <8203E2B8-0C65-4C2E-B8F4-86AB5EC3F067@nc.rr.com>

On Nov 5, 2005, at 8:14 PM, Christopher Armstrong wrote:
> On 11/6/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Sat, 5 Nov 2005 17:00:14 +1100, Christopher Armstrong  
>> <radeex at gmail.com> wrote:
>>> On 10/11/05, Jonathan Lange <jml at mumak.net> wrote:
>>>> Should we drop Python 2.2 support in Subversion head for Twisted  
>>>> 2.2?
>>>
>>> I consider this issue resolved, given the lack of response for  
>>> people
>>> wanting 2.2 support. The buildslave for 2.2 should be taken down and
>>> Twisted trunk should be considered fair for 2.3-only features.
>>
>> Lack of interest in a change doesn't dictate that the change be  
>> made.  I didn't hear anyone come out against the change _or_ for it.
>>
>> If it will help, I'll throw in against dropping 2.2 support.   
>> Neither 2.3 nor 2.4 introduce any compelling new features.
>
> You are confused. At least two people were *for* dropping 2.2 support
> in this thread, and nobody was against it. I'm pretty sure several
> others have been for dropping it on IRC, as well.
>
> I have seen people several times commit code that requires 2.3,
> realize that the buildbot failed, and replace the code with a more
> complicated version (didn't you do this recently yourself, Jp?). I
> personally find it harder and harder to test 2.2, as finding an
> installation of 2.2 is getting rarer these days. To unshamedly list
> features from the "What's new in Python 2.3" article:

I can say that I do not particularly like having to support 2.2.  =)   
RedHat EL3 (which is still supported by RedHat) still has python 2.2  
though by default.  I don't know what other "still supported"  
distributions might have it.  When I forced "at least 2.3" on my  
PyAIM/PyICQ transport users, I got a fair number of complaints and a  
couple of "well then I can't use your transport".  I'm not entirely  
sure why one can't just install python 2.3 or higher if that's a  
requirement, but hey.  =)  Anyway, I'd almost be happier if Twisted  
didn't support 2.2 anymore simply because I could use that as a  
catalist for dropping support for it on my end as well.  I actually  
have to implement my own bool class to get real booleans in 2.2.. and  
that file is there only for 2.2.  =/  I can't put any real facts  
behind this, but it "seems" like unicode support isn't as good in 2.2  
either.  That might just be my imagination though.  =D

Daniel



From exarkun at divmod.com  Sat Nov  5 19:26:57 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 5 Nov 2005 21:26:57 -0500
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>
Message-ID: <20051106022657.10365.1687580705.divmod.quotient.4496@ohm>

On Sun, 6 Nov 2005 12:14:08 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
>On 11/6/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Sat, 5 Nov 2005 17:00:14 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
>> >On 10/11/05, Jonathan Lange <jml at mumak.net> wrote:
>> >> Should we drop Python 2.2 support in Subversion head for Twisted 2.2?
>> >
>> >I consider this issue resolved, given the lack of response for people
>> >wanting 2.2 support. The buildslave for 2.2 should be taken down and
>> >Twisted trunk should be considered fair for 2.3-only features.
>>
>> Lack of interest in a change doesn't dictate that the change be made.  I didn't hear anyone come out against the change _or_ for it.
>>
>> If it will help, I'll throw in against dropping 2.2 support.  Neither 2.3 nor 2.4 introduce any compelling new features.
>
>You are confused. At least two people were *for* dropping 2.2 support
>in this thread, and nobody was against it. I'm pretty sure several
>others have been for dropping it on IRC, as well.

Confused, perhaps.  Or perhaps their positions were voiced with such limited enthusiasm I just forgot about them :)

>
>I have seen people several times commit code that requires 2.3,
>realize that the buildbot failed, and replace the code with a more
>complicated version (didn't you do this recently yourself, Jp?). I
>personally find it harder and harder to test 2.2, as finding an
>installation of 2.2 is getting rarer these days. To unshamedly list
>features from the "What's new in Python 2.3" article:

Yea, I've probably done this, and I've seen a few other people do it too.  Fortunately, buildbot's new "build a branch" feature should help resolve this problem.  Anyone can try out their code on any of Twisted's supported platforms before merging it into trunk.

>- Sets
>- Proper booleans (2.2.0 didn't even have the "True" and "False" constants)
>- enumerate
>- csv
>- generators without __future__
>- sum
>- callable types
>- horrible obscure Python2.2-only bugs and semantics changes gone
>- str in str
>- arguments-to-strip
>
>These are all pretty minor (apart from the "horrible obscure" things),
>but the sum() of them adds up to a lot of annoyance in support when no
>users have actually thrown in for it.

It's a pretty good list, I must admit.  But I wonder what the specific gains to Twisted will be.  Just having a list of things Python 2.3 can do that Python 2.2 cannot does not seem compelling to me.

Jean-Paul



From warner at lothar.com  Sat Nov  5 19:34:05 2005
From: warner at lothar.com (Brian Warner)
Date: Sat, 05 Nov 2005 18:34:05 -0800 (PST)
Subject: [Twisted-Python] Unjelly - recursion limit reached
Message-ID: <20051105.183405.27234188.warner@lothar.com>

> When a view_ method is called in a cacheable and the return value is a
> graph of interconnected cacheables, is the return value completely
> serialized at that point?

Do you mean that some view_ method is being invoked on a pb.Referenceable (or
pb.ViewPoint, I suppose) ? And that method is returning an instance that
inherits from pb.Cacheable? And this pb.Cacheable instance holds references
to other pb.Cacheables? Which may or may not have been transmitted across
this wire once already?

The general answer is yes, the return value is completely serialized right
then. The serialized form of the return value is transmitted in pieces as
jelly recurses down the retval object graph, each new node visited causes a
little bit more data to be sent. However, it does not stop for anything, and
there is no way for an object being serialized to indicate that it wants to
put off serialization for a while[1]. On the receiving end, the
callRemote()'s Deferred will not be fired until the retval has completely
finished deserialization. Intermediate objects may be constructed while
deserialization is taking place, but that ought to be invisible to the
caller.

I'm not sure what would happen if, say, your getStateToCacheAndObserveFor
method did a callRemote though the same wire. newpb has a queue to handle
this sort of thing (the callRemote doesn't get transmitted until at least
after the current operation has finished), but I don't know what oldpb does.
If it isn't clever enough to be reentrant, the receiving end will get
interleaved object state from the two operations and the results will be very
very messy.

getStateToCacheAndObserveFor and getStateToCopy are called from PB internals,
and as a result it may not be safe to make other PB calls from there. view_*
is called when the wire is in a stable state (i.e. remote methods calls are
top-level objects on the wire), so I think it should be safe to make
arbitrary PB calls from it.

> I'm concerned that my hierarchy of cacheables received by the client  
> is inconsistent because it is being modified by another client view_  
> call into the server before the previous hierarchy has been fully  
> serialized to the first client.

Note that each callRemote is more-or-less atomic, and the creation of a whole
object graph is more-or-less atomic, but it is entirely possible that other
method calls will happen during the middle of a huge slew of RemoteCache
updates. So if object A modifies a dozen Cacheables at once, and object B has
a RemoteCache that is watching them, object C might sneak in a callRemote
while only half of the updates have been processed. The same thing will
happen if your Cacheable update method does multiple callRemotes to do its
job.


hope that helps somehow,
 -Brian



[1]: in newpb, if you enable it, Slicers can return a Deferred to indicate
     that they want to stall serialization for a while. This raises concerns
     about knowing when, if ever, serialization will resume, and increases
     uncertainty about state coherency, because all sorts of stuff could
     happen by the time serialization is resumed.



From warner at lothar.com  Sat Nov  5 19:55:53 2005
From: warner at lothar.com (Brian Warner)
Date: Sat, 05 Nov 2005 18:55:53 -0800 (PST)
Subject: [Twisted-Python] pb.Cacheable vs. offline queuing
Message-ID: <20051105.185553.33436059.warner@lothar.com>

> I've been looking at Cacheable, as the live updates between servers
> would be useful, but I have a few questions:
>
> How does it avoid collisions, if an attribute is changed on both ends
> at once?  Is any kind of 2PC involved, or similar?  I read that some
> part of reading/observing is atomic, but is modifying atomic as well?

Luckily (well, for us at least :), there is no concept of "simultaneous"
here. PB offers two distinct classes for cacheable use: pb.Cacheable on the
"sending" side, and pb.RemoteCache on the "receiving" side. Modification
messages flow in one direction only. As long as you don't trigger some kind
of reentrancy problem, each update message is basically atomic, but there is
no mechanism in place to send changes back in the other direction.

So if you want to allow both sides to change things, you will have to build
some sort of layer on top of pb.Cacheable, which is where you'd put in your
synchronization logic. You have to figure out when the "other" object is
created, find a way to wire it back to its partner, and make sure that
changes don't travel in endless loops between the two paired objects.

> the two servers (public and office) must both keep serving users, even if
> the connection between them is severed.

Be aware that trying to accomodate disconnected operation is like planting
kudzu in your flowerbed with a promise that you'll "keep an eye on it". Each
time you think you've figured out everything there is to know about
distributed synchronization, you discover a new academic paper explaining a
new horrible failure method that you're vulnerable to. The depths awaiting to
be plumbed know no bound. (the problem is basically equivalent to merging in
a distributed version control system, and look at how many of *those* we've
got running around :).

Worse yet, the same problems actually exist in always-connected operation,
it's just that you can trick yourself into thinking you can ignore them more
often. Unidirectional dataflow is at least four orders of magnitude easier to
deal with.

> any collisions would be dealt with manually by the office staff once the
> connection came back up.

Good. You might still have a chance to retain your sanity :). 

Yeah, Cacheable won't be enough for you. My hunch is that you'll be
implementing enough new code that you might as well not bother building it on
top of pb.Cacheable: start with a pb.Referenceable and a remote_acceptUpdate
method, an outboundUpdates() queue, and some setter methods to trigger
outbound update messages.

good luck,
 -Brian



From jkrushen at gmail.com  Sat Nov  5 20:29:41 2005
From: jkrushen at gmail.com (Jordan Krushen)
Date: Sat, 5 Nov 2005 19:29:41 -0800
Subject: [Twisted-Python] pb.Cacheable vs. offline queuing
In-Reply-To: <20051105.185553.33436059.warner@lothar.com>
References: <20051105.185553.33436059.warner@lothar.com>
Message-ID: <b811ba730511051929l11e17dd5naa3bebac69fa867d@mail.gmail.com>

On 11/5/05, Brian Warner <warner at lothar.com> wrote:

> > the two servers (public and office) must both keep serving users, even if
> > the connection between them is severed.
>
> Be aware that trying to accomodate disconnected operation is like planting
> kudzu in your flowerbed with a promise that you'll "keep an eye on it". Each
> time you think you've figured out everything there is to know about
> distributed synchronization, you discover a new academic paper explaining a
> new horrible failure method that you're vulnerable to. The depths awaiting to
> be plumbed know no bound. (the problem is basically equivalent to merging in
> a distributed version control system, and look at how many of *those* we've
> got running around :).

Been there, ran away from that :)  In this case, all data and business
logic (relevant to the syncing) are narrowly defined, and I plan to
treat any data collisions the same way as any sane merging system --
let the user figure it out (with an iSync-esque conflict resolver
interface).  I don't want to spend x amount of time building the
system, and 3-4x writing syncing logic.

> Worse yet, the same problems actually exist in always-connected operation,
> it's just that you can trick yourself into thinking you can ignore them more
> often. Unidirectional dataflow is at least four orders of magnitude easier to
> deal with.

This system isn't symmetric, thankfully, and only certain types of
data will be updatable on both ends.  While connected, both systems
won't be doing quite the same thing (for the most part) so the window
for collisions while connected is incredibly small.  The same objects
would be edited, but not the same attributes on each end.

> > any collisions would be dealt with manually by the office staff once the
> > connection came back up.
>
> Good. You might still have a chance to retain your sanity :).

Sanity is overrated :)

I don't plan to spend a lot of time writing code to deal with
synchronization, though, 'cause it's both tedious and complex at once.

Offline operation is *not* going to be nominal operation, thanks to
their relatively good connectivity to each other.  This is mostly to
ensure that the office doesn't shut down if their hosted server's
connection dies, and so that end users are still able to do things if
their office connection goes out, like attach media to jobs, complete
forms, check status, modify miscellaneous info, etc.

> Yeah, Cacheable won't be enough for you. My hunch is that you'll be
> implementing enough new code that you might as well not bother building it on
> top of pb.Cacheable: start with a pb.Referenceable and a remote_acceptUpdate
> method, an outboundUpdates() queue, and some setter methods to trigger
> outbound update messages.

That sounds fine, actually.  I'm not trying to build a general-purpose
diff engine here, just some specific things, so I'm probably better
off ignoring Cacheable and focusing on the logic instead.

Thanks for the advice :)

J.



From strawman at astraw.com  Sat Nov  5 20:34:06 2005
From: strawman at astraw.com (Andrew Straw)
Date: Sat, 05 Nov 2005 19:34:06 -0800
Subject: [Twisted-Python] does twisted.* support mobile code?
In-Reply-To: <20051105231814.10365.1072597543.divmod.quotient.4493@ohm>
References: <20051105231814.10365.1072597543.divmod.quotient.4493@ohm>
Message-ID: <436D79AE.5040106@astraw.com>

Jean-Paul Calderone wrote:
> On Sat, 05 Nov 2005 14:21:25 -0800, Andrew Straw <strawman at astraw.com>
> wrote:
> 
>> Hi,
>>
>> Does any part of twisted support mobile Python code? Something like
>> Pyro's Mobile Code objects?
>> http://pyro.sourceforge.net/manual/7-features.html#mobile
> 
> 
> I wrote out a big long screed in response to this, but then decided
> it was probably overly harsh.

Well, we're all grown-ups here and I think I can take it, but it's still
interesting enough to know that you think it's the wrong thing.
Translation -- I'll try not to be offended! :)

The bottom line for me is that I noticed an easy way to do some
parallelization of "embarrassingly parallel" problems which would have a
nice match with the Pythonista mindset: instead of map( func, vars ), we
could have a map_distributed( func, vars ), which gets mapped over many
processes, potentially over many CPUs. I'm thinking now solely of a
single multicore box or clusters behind firewalls, so security issues
didn't seem relevant. I've got some rudimentary Pyro code working, but I
was wondering what was available with Twisted.

> No, Twisted does not support this.  The lack of support is intentional.
> There are a huge number of security-related issued with doing what Pyro
> does, so Twisted doesn't do it.

OK.

> In fact, PB goes in the other direction: even if the code defining the
> class of an instance passed over PB is available on both sides, it _still_
> might not be accepted by the recipient, if it has not been explicitly
> marked as safe by the recipient.

OK, thanks. I just wanted to make sure I wasn't missing something in the
spread docs...



From radeex at gmail.com  Sun Nov  6 03:04:12 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 6 Nov 2005 21:04:12 +1100
Subject: [Twisted-Python] Win32 installers of Twisted 2.1?
In-Reply-To: <4355193D.2050502@twistedmatrix.com>
References: <F92274058556DE42B94B148EEFB91839021CB5BF@exchange-03.suedkurier.de>
	<4355193D.2050502@twistedmatrix.com>
Message-ID: <60ed19d40511060204y1ef83617qba9041a62c881153@mail.gmail.com>

On 10/19/05, Cory Dodt <corydodt at twistedmatrix.com> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Win32 requires a "sumo" package to be built.  Because I don't have the tools
> to build one, I'm waiting for that to happen.  As soon as it does there will
> be a win32 installer.
>
> (This is how it usually goes.  Just be patient.  Thanks!)
>
> There is no plan to change the policy of always having a windows installer.

I just did a Twisted 2.1.0 + others sumo tarball, and it's available
on the site (might take 15 minutes for it to get mirrored to our
download site). The format of the tarball has changed: it no longer
looks anything like an SVN checkout, but instead contains each project
in a subdirectory which is identical to an extracted tarball of the
given subproject. setup.py works as it used to, but had to be changed
as well to work with the new format.

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From mailinglists at smartology.nl  Mon Nov  7 00:52:14 2005
From: mailinglists at smartology.nl (Remi Cool)
Date: Mon, 07 Nov 2005 08:52:14 +0100
Subject: [Twisted-Python] Weird problem with XMLRPC -> ('405', 'Method
	Not Allowed')
In-Reply-To: <1131122162.9182.8.camel@localhost.localdomain>
References: <436B3C9D.2010502@smartology.nl>
	<1131122162.9182.8.camel@localhost.localdomain>
Message-ID: <436F07AE.50204@smartology.nl>

Itamar Shtull-Trauring wrote:

>On Fri, 2005-11-04 at 11:49 +0100, Remi Cool wrote:
>
>  
>
>>One other thing is that pressing CTRL-C when the server is running,
>>results in the RuntimeError: can't stop reactor that isn't running.
>>    
>>
>
>Twisted handles Ctrl-C for you, you don't need to catch
>KeyboardInterrupt or exceptions. Just get rid of all the try/except
>around reactor.run(), and don't call reactor.stop() after reactor.run()
>has returned, which is what you're doing that causes the RuntimeError.
>
Thanx for solving that problem ... but the '405 Method Not Allowed' 
problem still stands.

If anyone knows the solution, probably very simple (duh), please drop a
note.


Remi




From jml at mumak.net  Mon Nov  7 01:50:43 2005
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 7 Nov 2005 19:50:43 +1100
Subject: [Twisted-Python] Remove setupClass branch of trial - what is the
	motivation?
In-Reply-To: <20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
References: <20051101173821.10365.1778643802.divmod.quotient.2873@ohm>
	<20051101203823.10365.1647175797.divmod.quotient.2949@ohm>
Message-ID: <d06a5cd30511070050q6b6deb50q@mail.gmail.com>

On 02/11/05, glyph at divmod.com <glyph at divmod.com> wrote:
>
>
> On Tue, 1 Nov 2005 12:38:21 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> >On Tue, 01 Nov 2005 10:47:09 -0500, Itamar Shtull-Trauring
> ><itamar at itamarst.org> wrote:
> >>Hi,
> >>
> >>Still haven't gotten an answer to this; why is the motivation for
> >>deprecating a perfectly reasonable feature?
> >
> >FWIW, I also would like to know the answer to this question.
>
> Yeah, uh...
>
> As I understand it the implementation was previously horrendously broken.  Now it is not.  Given that it is now no longer broken, and some quite reasonable tests I've seen make use of it (in particular: tests for Divmod ClickChronicle do some very expensive setup in a setUpClass), I'd like to see it stick around.


Another thing I totally forgot.

setUpClass assumes that there is only one instance of each TestCase
subclass.  This is a broken assumption, because a TestCase instance
represents a single test.  Currently, the implentation is horrendous
(take a look).

I'd be much happier if setUpClass were a class method.

jml



From mwh at python.net  Mon Nov  7 03:22:46 2005
From: mwh at python.net (Michael Hudson)
Date: Mon, 07 Nov 2005 10:22:46 +0000
Subject: [Twisted-Python] Re: IRC: getting auth of a user
References: <200511041134.54838.twisted@kampinada.de>
	<200511041344.44056.twisted@kampinada.de>
	<2mvez81rkn.fsf@starship.python.net>
	<200511041755.12382.twisted@kampinada.de>
Message-ID: <2moe4w21vt.fsf@starship.python.net>

Kai Schulte <twisted at kampinada.de> writes:

> Thanks, I hope I can get a closer look tonight and adapt it somehow. ;)

Good luck :)

> But after a short overview I fear I have to rewrite my bot completely.
> Since the bot is very simple, I didn`t even used any defers, etc.

Well, it's not that hard, IMHO.  I went through the same thing with my
bot.  And it's pretty much unavoidable -- what did you expect your bot
to be doing while it waited for the whois answer to come back?

Cheers,
mwh

-- 
48. The best book on programming for the layman is "Alice in
    Wonderland"; but that's because it's the best book on
    anything for the layman.
  -- Alan Perlis, http://www.cs.yale.edu/homes/perlis-alan/quotes.html




From Brendan at BrendanSimon.com  Mon Nov  7 05:19:09 2005
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Mon, 07 Nov 2005 23:19:09 +1100
Subject: [Twisted-Python] Python application requiring SSH and SNMPv3
Message-ID: <436F463D.6090007@BrendanSimon.com>

Hi,

I'm new to Twisted and have a few questions.

I wish to write a GUI in wxPython that needs to communicate to a POSIX 
machine to execute commands and return results.  The underlying 
application is a command-line based Configuration Management System 
called Aegis.  I wish to use SSH to communicate and see that Twisted has 
Conch :)  I also see that that there is another python ssh module called 
"paramiko" which looks like is less complex than Twisted.  I'm trying to 
figure out which path to take.

This application may also require rsync to transfer files back and 
forth.  Samba/SMB could also be an option.  Does twisted have support 
for these protocols?

On another application I need to use SNMPv3.  I see that PySNMP now 
supports it but apparently it is very slow.  Does Twisted support PySNMP 
with v3 support?

Is there any advantage or disadvantage in using Twisted over individual 
modules for SSH or SNMP, etc???

Thanks,
Brendan.




From alessandro.ogier at unimib.it  Mon Nov  7 06:09:28 2005
From: alessandro.ogier at unimib.it (Alessandro Ogier)
Date: Mon, 07 Nov 2005 14:09:28 +0100
Subject: [Twisted-Python] LDAP Checker
In-Reply-To: <4359E549.4070706@twistedmatrix.com>
References: <869525070.20051020134929@gmail.com>
	<4359E549.4070706@twistedmatrix.com>
Message-ID: <436F5208.4010708@unimib.it>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Tommi Virtanen ha scritto:

> ldaptor.checkers.LDAPBindingChecker is a Checker as used by
> twisted.cred.

apropos this nice feature, it's possible not to make a connection every
authentication made ?

I simply setup a checker that way:

    ldapChecker = LDAPBindingChecker(ldaptor.config.LDAPConfig())
    p.registerChecker(ldapChecker)

and everything's ok, apart for the connections list that keeps growing.

Patching adding a pair of unbind() would be easy, but maybe there is a
best practice to implement.

i'm using 0.0.42

TIA,
- --
Alessandro Ogier <alessandro.ogier at unimib.it>
gpg --keyserver pgp.mit.edu --recv-keys EEBB4D0D

Universita` degli Studi di Milano - Bicocca
Sistemi Informativi
Via Cozzi 53 - I 20125 Milano Italy
Tel. +39 02 6448 5526
-----BEGIN PGP SIGNATURE-----

iEYEARECAAYFAkNvUggACgkQZmjYv+67TQ0uBwCfYXgmPfR7MNniqRdgYB/hKqhn
mpAAnjmC+vatV3ebn47p5lW+jSLfH6rO
=6Ypt
-----END PGP SIGNATURE-----



From jml at mumak.net  Mon Nov  7 06:47:49 2005
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 8 Nov 2005 00:47:49 +1100
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <20051106022657.10365.1687580705.divmod.quotient.4496@ohm>
References: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>
	<20051106022657.10365.1687580705.divmod.quotient.4496@ohm>
Message-ID: <d06a5cd30511070547o59a504e2p@mail.gmail.com>

On 06/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> >You are confused. At least two people were *for* dropping 2.2 support
> >in this thread, and nobody was against it. I'm pretty sure several
> >others have been for dropping it on IRC, as well.
>
> Confused, perhaps.  Or perhaps their positions were voiced with such limited enthusiasm I just forgot about them :)

My apologies.  I often try to restrain my enthusiasm for fear that
excess emotion will sidetrack rational discussion.  I am very keen to
ditch Python 2.2 support.

> It's a pretty good list, I must admit.  But I wonder what the specific gains to Twisted will be.  Just having a list of things Python 2.3 can do that Python 2.2 cannot does not seem compelling to me.

One specific gain already mentioned is that we get to remove a bunch
of code. Less code means fewer bugs and less work. It might even
improve our test coverage.

Here's a list of stuff (shamelessly grepped) that could probably be
simplified if we dropped 2.2 support:

twisted/conch/test/test_filetransfer.py:        # XXX: Remove 'uid'
and 'gid', because python 2.2 doesn't have os.lchown, so we just skip
that bit (dodgy!)
twisted/conch/unix.py:            # XXX: Python 2.2 doesn't have os.lchown!
twisted/internet/error.py:        # only works in 2.2
twisted/python/dist.py:    Python 2.2's distutils. Pretty similar
arguments to getDataFiles,
twisted/python/dist.py:# Apple distributes a nasty version of Python
2.2 w/ all release builds of
twisted/python/dist.py:    Changes behavior in Python 2.2 to support
simultaneous specification twisted/python/reflect.py:    This is a
2.2-only alternative to the Accessor mixin - just set in your
twisted/python/zshcomp.py:# in case of python2.2 ...
twisted/test/test_compat.py:        # without replacing isinstance on
2.2 as well :(
twisted/topfiles/setup.py:# 2.2 doesn't have __file__ in main-scripts.
twisted/trial/unittest.py:        # only overriding this because
Python 2.2's unittest has a broken
twisted/trial/unittest.py:        """a python2.2 friendly test to
assert that substring is found in astring
twisted/trial/unittest.py:        """a python2.2 friendly test to
assert that substring is not found in
twisted/trial/unittest.py:        # FIXME: when we drop support for
python 2.2 and start to require 2.3,
twisted/conch/ssh/filetransfer.py:        isFile, name =
self.wasAFile[d] # replace with get when we're at 2.3
twisted/lore/lint.py:# parser.suite in Python 2.3 raises SyntaxError,
<2.3 raises parser.ParserError
twisted/scripts/trial.py:        (relative to _trial_temp). Requires
Python 2.3.3."""
twisted/spread/jelly.py:            raise
NotImplementedError("Datetime unserializing not supported in Python <
2.3")
twisted/trial/runner.py:                          "python 2.3 or
later, not running doctests")
twisted/trial/runner.py:                          "python 2.3 or
later, not running doctests")
twisted/trial/test/test_doctest.py:    skip = 'doctest support only
works on 2.3 or later'
twisted/trial/test/test_doctest.py:        # doctest reports failures
as errors in 2.3
twisted/trial/test/test_failure_formatting.py:                'doctest
support only works in Python 2.3 or later')
twisted/words/protocols/jabber/xmpp_stringprep.py:                 
"recommended you upgrade to Python 2.3.2 or newer if you "

Plus the modules in twisted/python/pymodules.

As you can see, Trial carries a fair part of the 2.2 support burden. 
I'm eager to be rid of it.

cheers,
jml



From dhess at verscend.com  Mon Nov  7 07:42:34 2005
From: dhess at verscend.com (David K. Hess)
Date: Mon, 7 Nov 2005 08:42:34 -0600
Subject: [Twisted-Python] Unjelly - recursion limit reached
In-Reply-To: <20051105.183405.27234188.warner@lothar.com>
References: <20051105.183405.27234188.warner@lothar.com>
Message-ID: <EFD864B8-AA11-4D41-954B-69CBEEADA3C2@verscend.com>


On Nov 5, 2005, at 8:34 PM, Brian Warner wrote:

>> When a view_ method is called in a cacheable and the return value  
>> is a
>> graph of interconnected cacheables, is the return value completely
>> serialized at that point?
>
> Do you mean that some view_ method is being invoked on a  
> pb.Referenceable (or
> pb.ViewPoint, I suppose) ? And that method is returning an instance  
> that
> inherits from pb.Cacheable? And this pb.Cacheable instance holds  
> references
> to other pb.Cacheables? Which may or may not have been transmitted  
> across
> this wire once already?

Yes, you expertly filled in the gaps of my original question. :-)  
That's exactly what I'm asking.

> The general answer is yes, the return value is completely  
> serialized right
> then. The serialized form of the return value is transmitted in  
> pieces as
> jelly recurses down the retval object graph, each new node visited  
> causes a
> little bit more data to be sent. However, it does not stop for  
> anything, and
> there is no way for an object being serialized to indicate that it  
> wants to
> put off serialization for a while[1]. On the receiving end, the
> callRemote()'s Deferred will not be fired until the retval has  
> completely
> finished deserialization. Intermediate objects may be constructed  
> while
> deserialization is taking place, but that ought to be invisible to the
> caller.

That's a relief. And I shouldn't have expected a different answer.  
Twisted PB is excellent work and that would have been a glaring  
oversight.

> I'm not sure what would happen if, say, your  
> getStateToCacheAndObserveFor
> method did a callRemote though the same wire. newpb has a queue to  
> handle
> this sort of thing (the callRemote doesn't get transmitted until at  
> least
> after the current operation has finished), but I don't know what  
> oldpb does.
> If it isn't clever enough to be reentrant, the receiving end will get
> interleaved object state from the two operations and the results  
> will be very
> very messy.
>
> getStateToCacheAndObserveFor and getStateToCopy are called from PB  
> internals,
> and as a result it may not be safe to make other PB calls from  
> there. view_*
> is called when the wire is in a stable state (i.e. remote methods  
> calls are
> top-level objects on the wire), so I think it should be safe to make
> arbitrary PB calls from it.

All of my getStateToCacheAndObserveFor are very simple with no other  
calls. :-(

>> I'm concerned that my hierarchy of cacheables received by the client
>> is inconsistent because it is being modified by another client view_
>> call into the server before the previous hierarchy has been fully
>> serialized to the first client.
>
> Note that each callRemote is more-or-less atomic, and the creation  
> of a whole
> object graph is more-or-less atomic, but it is entirely possible  
> that other
> method calls will happen during the middle of a huge slew of  
> RemoteCache
> updates. So if object A modifies a dozen Cacheables at once, and  
> object B has
> a RemoteCache that is watching them, object C might sneak in a  
> callRemote
> while only half of the updates have been processed. The same thing  
> will
> happen if your Cacheable update method does multiple callRemotes to  
> do its
> job.

I'm not sure I'm following this fully. My situation is one server  
connected to many clients. My assumption is that remoteCall results  
and observer updates are serialized and kept in order in a qeueue to  
each client. In other words, I assume that if client A connects and  
performs a call that results in a Cacheable graph that takes a while  
to serialize and deliver to client A, even if a another client B  
calls in and modifies the state of one of the Cacheables that was  
already serialized in the result being delivered to client A, the  
update to that particular Cacheable will be properly queued behind  
the original result still being delivered to A.

Bottom line, if all of these things are true, then I'm not sure what  
is going wrong. Is it possible that jelly is at times walking my  
object graph (which is interconnected to a certain degree and changes  
dynamically) in such a way that it has to perform a significant  
amount of recursion? In other words, maybe this isn't a bug but I  
just need to increase the runtime recursion limit?

FYI, here's a snippet of the exception:

------
   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 394, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 394, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 621, in _unjelly_reference

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 451, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 394, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 394, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 621, in _unjelly_reference

   File "twisted\spread\jelly.pyo", line 540, in unjelly

   File "twisted\spread\flavors.pyo", line 451, in unjellyFor

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 654, in _unjelly_dictionary

   File "twisted\spread\jelly.pyo", line 603, in unjellyInto

   File "twisted\spread\jelly.pyo", line 553, in unjelly

   File "twisted\spread\jelly.pyo", line 646, in _unjelly_list
----

Thanks for your insight!

Dave



From exarkun at divmod.com  Mon Nov  7 07:56:26 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 Nov 2005 09:56:26 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15052 - Merge forward
 r14926:15051 -- insomnia
In-Reply-To: <E1EZ87m-0007Or-00@wolfwood>
Message-ID: <20051107145626.10365.497204348.divmod.quotient.4814@ohm>

On Mon, 07 Nov 2005 07:37:30 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Mon Nov  7 07:37:28 2005
>New Revision: 15052
>
> [snip]
>Log:
>Merge forward r14926:15051 -- insomnia
>

You should always create a new branch, copied from trunk, to merge forward (<http://divmod.org/trac/wiki/MergedForward>).  Doing it in-place makes it much more difficult to determine which changes are yours and which changes belong to someone else.  It also increases the likelyhood of a conflict when you eventually merge into trunk.

For those who aren't aware of it, the tools referenced on the above page are from Combinator (<http://divmod.org/trac/wiki/DivmodCombinator>).

Jean-Paul



From frank at chagford.com  Mon Nov  7 08:45:35 2005
From: frank at chagford.com (Frank Millman)
Date: Mon, 7 Nov 2005 17:45:35 +0200
Subject: [Twisted-Python] Newbie - guidance required please
Message-ID: <VPOP32.2.0a.20051107174614.046.1.1.a40c1f81@chagford.com>

Hi all,

I am treading a path that I think many have trodden before. I have a
requirement, I am pretty sure that Twisted will be able to solve it for me,
but at this stage I am overwhelmed by the options that Twisted seems to
offer, and I am worried that I will head off down the wrong path. With your
indulgence, I would like to describe what I am trying to accomplish, and get
some feedback as to which features of Twisted are best suited to assisting
me in achieving this.

I am developing a multi-user accounting/business system. I use a database
for the back end - PostgreSQL/psycopg on Linux, MS SQL Server/pywin32.odbc
on MSW. I am using wxPython for the front end, but eventually I will want a
web interface as well. I have developed a reasonably powerful middle layer
to handle the authentication and business logic. My problem is that at
present the middle layer runs on the client, each with its own connection to
the database. I am sure that there are a number of problems with this
architecture, but the one that concerns me particularly is that it is easy
for a user with a smattering of knowledge to modify the client program to
bypass my authentication and business logic, make a direct connection to the
database, and generate any SQL statements they want. This makes my approach
a non-starter.

The solution that I have in mind is to move all of my authentication and
business logic to a server program, which will be the only program that
makes a connection to the database. Each client will connect to my server
program, and I will have to devise some message formats for the passing of
information between the client and the server. I have a little experience
with multi-threaded socket programming, and I am fairly sure that I could
come up with a working solution using this technique, but having read the
advantages of the Twisted approach, I feel that this would be a better and
more scaleable solution.

Before going into detail, there is one issue I am not sure about, and that
is the question of 'maintaining state'. The user selects an option from a
menu - maintain a table, capture a transaction, run a report, perform an
enquiry, etc. Each option is represented by a class, which is contained in a
module of the same name. When an option is selected, I import the module,
and instantiate the class. Each option is associated with a number of
database tables, each with a number of columns. I have a generalised 'table
class', which is instantiated for each table opened, and a generalised
'column class', which is instantiated for each column. A user can have more
than one option running concurrently, which can result in dozens of table
objects and hundreds of column objects. I was fairly relaxed about this
running on each client, but I am not so sure about running them all on one
server with, say, 50 or more concurrent clients. Should I worry about the
number of active objects, or is it safe to assume that virtual memory will
handle it, on the assumption that most of them will be idle most of the
time?

As I understand it, I will use Twisted in the following roles -

1. in my server program, as an interface to DB-API for all database access.
2. in my server program, to handle requests from and pass information to
clients.
3. in my client program, to connect with and interact with my server
program.

Having read the documentation on twisted.enterprise.adbapi, it seems that
'1' should be fairly straightforward. I hope there are not too many hidden
complications.

I assume that '2' and '3' can be discussed together, as they form both sides
of a single communication channel.

I have about a million questions, but I will start with three.

1. Once a client has established a connection with the server, I would
prefer to keep the connection open until they log out, which could be
several hours later. Is this an acceptable way of doing it, or should I keep
the number of open connections down to a minimum, closing and reopening as
required?

2. For authentication, the user enters a userid and password. The userid is
looked up in a database table. One of the columns contains the hashed (sha)
password. If the userid does not exist or the hashed password does not
match, I do not allow the user to proceed.

I looked at cred.py, but it seems more complicated to use this than stick to
my own method. Is this a valid observation?

A related question. With my present system, the authentication happens on
the client, so I do not have to send the password over the network. With the
new method, I will have to send it to the server. Should I be looking at
using SSL for protection against sniffing, or is there an easier way?

3. Whether or not I use cred, it looks as if I should be using Perspective
Broker (PB). I would normally have been thinking in terms of defining
message formats for exchanging data between server and client, so the
concept of defining objects that make calls on each other feels a bit
strange. If I maintain the full state of the connection on the server side,
I do not want to duplicate this on the client side, so I assume I must
define some form of stripped down object to represent the client state, and
use this to exchange information. Are there any simple examples I can look
at to explain this concept in more detail?

I feel I am at a crossroads. Either I can cobble something together that
works, but does not fit in with the Twisted philosophy, and will therefore
limit me as my application grows. Or I can get my mind more in tune with
Twisted, and set up structures that will work with me as things evolve.

If you have read this far, thanks for your perseverance. Any pointers or
suggestions will be much appreciated.

Thanks

Frank Millman




From michaelschneider at fuse.net  Mon Nov  7 09:28:11 2005
From: michaelschneider at fuse.net (Michael Schneider)
Date: Mon, 07 Nov 2005 11:28:11 -0500
Subject: [Twisted-Python] Twisted Oreilly Book Released on Safari
In-Reply-To: <E1EYTGm-0007HA-01@pyramid.twistedmatrix.com>
References: <E1EYTGm-0007HA-01@pyramid.twistedmatrix.com>
Message-ID: <436F809B.5020504@fuse.net>

The new twisted book is on O'Reilly Safari!!!!  The new twisted book is 
on  O'Reilly!!!!!!!!!!


Thanks to all who worked to put this together.  Nice Piece of work.  I 
just finished the second
chapter and can't wait to finish it!!!!!!!!!

Mike Schneider

-- 
The greatest performance improvement occurs on the transition of from the non-working state to the working state.




From william.lewis at uk.bnpparibas.com  Mon Nov  7 10:46:02 2005
From: william.lewis at uk.bnpparibas.com (william.lewis at uk.bnpparibas.com)
Date: Mon, 7 Nov 2005 17:46:02 +0000
Subject: [Twisted-Python] spawnProcess() for win32 (newbie)
Message-ID: <OF5B2D881E.90F8813D-ON802570B2.005FE7C4-802570B2.00619972@bnpparibas.com>

Hi,

When running your "Verbose Example" in the "Using Processes" documentation 
(on Windows XP) I get a NotImplementedError exception raised from the 
spawnProcess() method in the twisted/internet/posixbase.py module. From 
the comments in the code it looks like Itamar has started to implement 
this for Windows, but it's not quite there yet. I guess my question is: 
when is it likely that you will have an implementation of the 
ProcessProtocol for win32 systems?

I have installed Twisted 2.0.1 with Python 2.4 using the .exe

Thanks

Will Lewis


This message and any attachments (the "message") is 
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and
immediately notify the sender. Any use not in accord with
its purpose, any dissemination or disclosure, either whole
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message.
BNP PARIBAS (and its subsidiaries) shall (will) not
therefore be liable for the message if modified. 

**********************************************************************************************

BNP Paribas Private Bank London Branch is authorised
by CECEI & AMF and is regulated by the Financial Services
Authority for the conduct of its investment business in
the United Kingdom.

BNP Paribas Securities Services London Branch is authorised 
by CECEI & AMF and is regulated by the Financial Services 
Authority for the conduct of its investment business in 
the United Kingdom.
  
BNP Paribas Fund Services UK Limited is authorised and 
regulated by the Financial Services Authority

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051107/652b27c7/attachment.html>

From justinjohnson at gmail.com  Mon Nov  7 11:43:28 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Mon, 7 Nov 2005 12:43:28 -0600
Subject: [Twisted-Python] spawnProcess() for win32 (newbie)
In-Reply-To: <OF5B2D881E.90F8813D-ON802570B2.005FE7C4-802570B2.00619972@bnpparibas.com>
References: <OF5B2D881E.90F8813D-ON802570B2.005FE7C4-802570B2.00619972@bnpparibas.com>
Message-ID: <94a776e70511071043v762a5320s8a0234bac3fc7744@mail.gmail.com>

spawnProcess is imlemented for win32eventreactor, but it is buggy. It may
work fine for many things, but in my experience occasionally stdout or
stderr have portions of output missing. I have spawnProcess implemented for
the IOCP reactor at /branches/justinj/issue1008, but am not quite ready to
merge to trunk. Unfortunately that's the state of the win32 world at this
time.
 -Justin

 On 11/7/05, william.lewis at uk.bnpparibas.com <
william.lewis at uk.bnpparibas.com> wrote:
>
>
> Hi,
>
> When running your "Verbose Example" in the "Using Processes" documentation
> (on Windows XP) I get a NotImplementedError exception raised from the
> spawnProcess() method in the twisted/internet/posixbase.py module. From the
> comments in the code it looks like Itamar has started to implement this for
> Windows, but it's not quite there yet. I guess my question is: when is it
> likely that you will have an implementation of the ProcessProtocol for win32
> systems?
>
> I have installed Twisted 2.0.1 with Python 2.4 using the .exe
>
> Thanks
>
> Will Lewis
>
> This message and any attachments (the "message") is
> intended solely for the addressees and is confidential.
> If you receive this message in error, please delete it and
> immediately notify the sender. Any use not in accord with
> its purpose, any dissemination or disclosure, either whole
> or partial, is prohibited except formal approval. The internet
> can not guarantee the integrity of this message.
> BNP PARIBAS (and its subsidiaries) shall (will) not
> therefore be liable for the message if modified.
>
> **********************************************************************************************
>
> BNP Paribas Private Bank London Branch is authorised
> by CECEI & AMF and is regulated by the Financial Services
> Authority for the conduct of its investment business in
> the United Kingdom.
>
> BNP Paribas Securities Services London Branch is authorised
> by CECEI & AMF and is regulated by the Financial Services
> Authority for the conduct of its investment business in
> the United Kingdom.
>
> BNP Paribas Fund Services UK Limited is authorised and
> regulated by the Financial Services Authority
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051107/d4b0b2f1/attachment.html>

From nico at tekNico.net  Mon Nov  7 13:01:10 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Mon, 07 Nov 2005 21:01:10 +0100
Subject: [Twisted-Python] Re: Newbie - guidance required please
In-Reply-To: <VPOP32.2.0a.20051107174614.046.1.1.a40c1f81@chagford.com>
References: <VPOP32.2.0a.20051107174614.046.1.1.a40c1f81@chagford.com>
Message-ID: <dkobq6$ra5$1@sea.gmane.org>

> I am developing a multi-user accounting/business system. I use a database
> for the back end - PostgreSQL/psycopg on Linux, MS SQL Server/pywin32.odbc
> on MSW.

FWIW, PostgreSQL 8.0 runs on MS Windows too.


> The solution that I have in mind is to move all of my authentication and
> business logic to a server program, which will be the only program that
> makes a connection to the database. Each client will connect to my server
> program, and I will have to devise some message formats for the passing of
> information between the client and the server.

You may also convert your program to a web interface, and use a standard
web browser as client, connected to the server via the HTTP[S] protocol.


> Should I worry about the
> number of active objects, or is it safe to assume that virtual memory will
> handle it, on the assumption that most of them will be idle most of the
> time?

Virtual memory surely helps. A server will comfortably handle thousands of
objects: if and when you'll have problems, only then you'll explore ways to
minimize their number and size, no use worrying now.


> As I understand it, I will use Twisted in the following roles -
> 
> 1. in my server program, as an interface to DB-API for all database access.
> 2. in my server program, to handle requests from and pass information to
> clients.
> 3. in my client program, to connect with and interact with my server
> program.

Unless you go the web interface route, of course, which by the way has the
added benefit of sidestepping client maintenance issues.


> 1. Once a client has established a connection with the server, I would
> prefer to keep the connection open until they log out, which could be
> several hours later. Is this an acceptable way of doing it, or should I keep
> the number of open connections down to a minimum, closing and reopening as
> required?

You have a thousand sockets available per process, use them judiciously. :-)


> 2. For authentication, the user enters a userid and password. The userid is
> looked up in a database table. One of the columns contains the hashed (sha)
> password. If the userid does not exist or the hashed password does not
> match, I do not allow the user to proceed.
> 
> I looked at cred.py, but it seems more complicated to use this than stick to
> my own method. Is this a valid observation?

You have to grasp a few concepts, and then you have a general, reusable
piece fo infrastructure.

This is often true of Twisted: you first have to make an effort
understanding stuff, but then, after it "clicks", you feel turbocharged. :-)


> A related question. With my present system, the authentication happens on
> the client, so I do not have to send the password over the network. With the
> new method, I will have to send it to the server. Should I be looking at
> using SSL for protection against sniffing, or is there an easier way?

No, there isn't. You need to encrypt communication, if you want to protect
it. Of course, security involves more than just protecting communication.


> 3. Whether or not I use cred, it looks as if I should be using Perspective
> Broker (PB). I would normally have been thinking in terms of defining
> message formats for exchanging data between server and client, so the
> concept of defining objects that make calls on each other feels a bit
> strange. If I maintain the full state of the connection on the server side,
> I do not want to duplicate this on the client side, so I assume I must
> define some form of stripped down object to represent the client state, and
> use this to exchange information. Are there any simple examples I can look
> at to explain this concept in more detail?

You make a remote call, pass the data you want to transmit as parameters,
get data back as returned values (through Deferreds, of course). What could
be simpler than that? :-)


> I feel I am at a crossroads. Either I can cobble something together that
> works, but does not fit in with the Twisted philosophy, and will therefore
> limit me as my application grows. Or I can get my mind more in tune with
> Twisted, and set up structures that will work with me as things evolve.

We've all been there. Twisted seems daunting at first, and it's not clear
whether it will be worth the effort.

The winning point, for me, more than the impressive amount of built-in
network infrastructure, was its asynchronous, event-driven concurrency
model. Once you read this:

Generalization of Deferred Execution in Python
http://www.python.org/pycon/papers/deferex/

you stop and think: "How could have I been relying on *threads* all this
time?!?"

(The signature is quite on-topic here. :-) )


> If you have read this far, thanks for your perseverance. Any pointers or
> suggestions will be much appreciated.

After you've finished the above paper, study this:

Asynchronous Programming with Twisted
http://twistedmatrix.com/projects/core/documentation/howto/async.html

and the linked docs at the end. You're not going anywhere with Twisted
until Deferreds are firmly under your belt.

Other important things are interfaces and adapters:

Components: Interfaces and Adapters
http://twistedmatrix.com/projects/core/documentation/howto/components.html

More details here:

http://svn.zope.org/*checkout*/Zope3/trunk/src/zope/interface/README.txt

Of course, Python and Twisted are just layers in the stack. Above them
there are Nevow, and Axiom, and Mantissa, and... :-)

Good luck in your endeavors, you're fiddling with some powerful tools here!
 ;-)

-- 
Nicola Larosa - nico at tekNico.net

No inventions have really significantly eased the cognitive difficulty
of writing scalable concurrent applications and it is unlikely that any
will in the near term. [...] Most of all, threads do not help, in fact,
they make the problem worse in many cases. -- G. Lefkowitz, August 2005




From twisted at kampinada.de  Mon Nov  7 14:04:25 2005
From: twisted at kampinada.de (Kai Schulte)
Date: Mon, 7 Nov 2005 22:04:25 +0100
Subject: [Twisted-Python] Re: IRC: getting auth of a user
In-Reply-To: <2moe4w21vt.fsf@starship.python.net>
References: <200511041134.54838.twisted@kampinada.de>
	<200511041755.12382.twisted@kampinada.de>
	<2moe4w21vt.fsf@starship.python.net>
Message-ID: <200511072204.25850.twisted@kampinada.de>

Am Montag, 7. November 2005 11:22 schrieb Michael Hudson:
> Kai Schulte <twisted at kampinada.de> writes
> > Thanks, I hope I can get a closer look tonight and adapt it somehow. ;)
>
> Good luck :)
>
> > But after a short overview I fear I have to rewrite my bot completely.
> > Since the bot is very simple, I didn`t even used any defers, etc.
>
> Well, it's not that hard, IMHO.  I went through the same thing with my
> bot.  And it's pretty much unavoidable -- what did you expect your bot
> to be doing while it waited for the whois answer to come back?

I thought of it and came to the same conclusion. Anyway I always wanted to get 
a closer look at twisted, specifically defers...so, why not now? ;) 


>
> Cheers,
> mwh

so long
Kai



From bv at bnl.gov  Mon Nov  7 20:24:00 2005
From: bv at bnl.gov (Brett Viren)
Date: Mon, 07 Nov 2005 22:24:00 -0500
Subject: [Twisted-Python] Layout bug in plugin.html
Message-ID: <ir47jbjizzj.fsf@minos.phy.bnl.gov>

Can someone with access fix

http://twistedmatrix.com/projects/core/documentation/howto/plugin.html

All the code examples lost their layout.  

Thanks,
-Brett.



From exarkun at divmod.com  Mon Nov  7 20:44:10 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 7 Nov 2005 22:44:10 -0500
Subject: [Twisted-Python] Layout bug in plugin.html
In-Reply-To: <ir47jbjizzj.fsf@minos.phy.bnl.gov>
Message-ID: <20051108034410.10365.1238394582.divmod.quotient.5046@ohm>

On Mon, 07 Nov 2005 22:24:00 -0500, Brett Viren <bv at bnl.gov> wrote:
>Can someone with access fix
>
>http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
>
>All the code examples lost their layout.

Thanks, fixed already in SVN.  You can view svn trunk at HEAD documentation at:

http://twistedmatrix.com/users/warner/doc-latest/

Jean-Paul



From fbuchinger at gmail.com  Tue Nov  8 07:44:36 2005
From: fbuchinger at gmail.com (Franz Buchinger)
Date: Tue, 8 Nov 2005 15:44:36 +0100
Subject: [Twisted-Python] Twisted missing OpenSSL-Package?
Message-ID: <a07b86220511080644g1b4e5e33v@mail.gmail.com>

Hi,

I tried to install MoinMoin Wiki http://moinmoin.wikiwikiweb.de/ in
Combination with Twisted as Webserver under Windows XP.

When i  launch Mointwisted.cmd on the command line, it dies with the
following error messages:

C:\Python24\scripts\moin-1.3.5>mointwisted
Traceback (most recent call last):
  File "C:\Python24\scripts\twistd.py", line 25, in ?
    run()
  File "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 51, in r
un
    app.run(runApp, ServerOptions)
  File "C:\Python24\Lib\site-packages\twisted\application\app.py", line 271, in
run
    runApp(config)
  File "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 35, in r
unApp
    application = app.getApplication(config, passphrase)
--- <exception caught here> ---
  File "C:\Python24\Lib\site-packages\twisted\application\app.py", line 156, in
getApplication
    application = service.loadApplication(filename, style, passphrase)
  File "C:\Python24\Lib\site-packages\twisted\application\service.py", line 303,
 in loadApplication
    application = sob.loadValueFromFile(filename, 'application', passphrase)
  File "C:\Python24\Lib\site-packages\twisted\persisted\sob.py", line 209, in lo
adValueFromFile
    exec fileObj in d, d
  File "mointwisted.py", line 27, in ?
    from MoinMoin.server.twistedmoin import TwistedConfig, makeApp
  File "C:\Python24\scripts\moin-1.3.5\MoinMoin\server\twistedmoin.py", line 27,
 in ?
    from twisted.internet import threads, reactor, ssl
  File "C:\Python24\lib\site-packages\twisted\internet\ssl.py", line 47, in ?
    from OpenSSL import SSL
exceptions.ImportError: No module named OpenSSL

Failed to load application: No module named OpenSSL

Obviously, Twisted is missing an OpenSSL package. Which packages do I
need to enable SSL-Support in Python under Windows?

Thanx in advance,

Franz



From abe at fettig.net  Tue Nov  8 08:04:55 2005
From: abe at fettig.net (Abe Fettig)
Date: Tue, 08 Nov 2005 10:04:55 -0500
Subject: [Twisted-Python] Twisted Oreilly Book Released on Safari
In-Reply-To: <436F809B.5020504@fuse.net>
References: <E1EYTGm-0007HA-01@pyramid.twistedmatrix.com>
	<436F809B.5020504@fuse.net>
Message-ID: <4370BE97.7040301@fettig.net>

Michael Schneider wrote:
> The new twisted book is on O'Reilly Safari!!!!  The new twisted book is
> on  O'Reilly!!!!!!!!!!
> 
> 
> Thanks to all who worked to put this together.  Nice Piece of work.  I
> just finished the second
> chapter and can't wait to finish it!!!!!!!!!

I'm glad you're enjoying it! :-)

Abe




From frank at chagford.com  Tue Nov  8 08:22:04 2005
From: frank at chagford.com (Frank Millman)
Date: Tue, 8 Nov 2005 17:22:04 +0200
Subject: [Twisted-Python] Re: Newbie - guidance required please
In-Reply-To: <dkobq6$ra5$1@sea.gmane.org>
Message-ID: <VPOP32.2.0a.20051108172244.000.2.1.a40c1f81@chagford.com>

Nicola Larosa wrote:

[big snip]

> 
> The winning point, for me, more than the impressive amount of 
> built-in network infrastructure, was its asynchronous, 
> event-driven concurrency model. Once you read this:
> 
> Generalization of Deferred Execution in Python 
> http://www.python.org/pycon/papers/deferex/
> 
> you stop and think: "How could have I been relying on 
> *threads* all this time?!?"
> 
> (The signature is quite on-topic here. :-) )
> 

Interesting paper - thanks for the link.

> 
> After you've finished the above paper, study this:
> 
> Asynchronous Programming with Twisted
> http://twistedmatrix.com/projects/core/documentation/howto/async.html
> 
> and the linked docs at the end. You're not going anywhere 
> with Twisted until Deferreds are firmly under your belt.
> 

I have already read this a few times - I will have to read it a few more,
but it is starting to sink in.

> Other important things are interfaces and adapters:
> 
> Components: Interfaces and Adapters
> http://twistedmatrix.com/projects/core/documentation/howto/com
> ponents.html
> 

This was very important - I had not read this one yet, but it is clearly
crucial, especially for cred.py.

> More details here:
> 
> http://svn.zope.org/*checkout*/Zope3/trunk/src/zope/interface/
README.txt
> 

If I click on this link, I get the following traceback:

An Exception Has Occurred
Python Traceback

Traceback (most recent call last):
  File "/usr/local/viewcvs-1.0-dev/lib/viewcvs.py", line 3196, in main
    request.run_viewcvs()
  File "/usr/local/viewcvs-1.0-dev/lib/viewcvs.py", line 351, in run_viewcvs
    self.view_func(self)
  File "/usr/local/viewcvs-1.0-dev/lib/viewcvs.py", line 1892, in
view_checkout
    fp, revision = request.repos.openfile(request.path_parts, rev)
  File "/usr/local/viewcvs-1.0-dev/lib/vclib/svn/__init__.py", line 358, in
openfile
    fp = FileContentsPipe(self.fsroot, path, self.pool)
  File "/usr/local/viewcvs-1.0-dev/lib/vclib/svn/__init__.py", line 264, in
__init__
    self._stream = fs.file_contents(root, path, self._pool)
SubversionException: ('Attempted to get textual contents of a *non*-file
node', 160017)

> Of course, Python and Twisted are just layers in the stack. 
> Above them there are Nevow, and Axiom, and Mantissa, and... :-)
> 
> Good luck in your endeavors, you're fiddling with some 
> powerful tools here!
>  ;-)
> 
> --
> Nicola Larosa - nico at tekNico.net
> 

Thanks for the support and the really useful feedback.

I am sure I will be back with some more questions, but I have enough to be
going on with for now.

Frank




From itamar at itamarst.org  Tue Nov  8 09:32:59 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 08 Nov 2005 11:32:59 -0500
Subject: [Twisted-Python] Weird problem with XMLRPC -> ('405', 'Method
	Not Allowed')
In-Reply-To: <436F07AE.50204@smartology.nl>
References: <436B3C9D.2010502@smartology.nl>
	<1131122162.9182.8.camel@localhost.localdomain>
	<436F07AE.50204@smartology.nl>
Message-ID: <1131467580.8993.12.camel@localhost.localdomain>

On Mon, 2005-11-07 at 08:52 +0100, Remi Cool wrote:

> Thanx for solving that problem ... but the '405 Method Not Allowed' 
> problem still stands.

For web problems the twisted-web mailing list will probably be more
helpful.




From bv at bnl.gov  Tue Nov  8 09:54:24 2005
From: bv at bnl.gov (Brett Viren)
Date: Tue, 08 Nov 2005 11:54:24 -0500
Subject: [Twisted-Python] Re: Newbie - guidance required please
In-Reply-To: <VPOP32.2.0a.20051108172244.000.2.1.a40c1f81@chagford.com> (Frank
	Millman's message of "Tue, 8 Nov 2005 17:22:04 +0200")
References: <VPOP32.2.0a.20051108172244.000.2.1.a40c1f81@chagford.com>
Message-ID: <ir43bm713nj.fsf@minos.phy.bnl.gov>

Hi Frank,

"Frank Millman" <frank at chagford.com> writes:

> Nicola Larosa wrote:

>> http://svn.zope.org/*checkout*/Zope3/trunk/src/zope/interface/README.txt
>> 
>
> If I click on this link, I get the following traceback:

Works for me.  Maybe line wrap of the URL got you?  W/out "README.txt"
I also get a traceback.


BTW, the idea of interfaces is new to me so I enjoyed this and the
other documents come of which I hadn't seen.

One thing I think is worth noting is I find mention of using the
special member "__implements__" in some of the current Twisted
documentation on interfaces instead of "zope.interface.implements()".
However this:

http://twistedmatrix.com/documents/current/api/twisted.python.components.html

seems to say the latter rather than the former should be used.  This
appears to have been fixed in the CVS versions of the documentation
Jean-Paul pointed me to (thanks!) in another thread:

http://twistedmatrix.com/users/warner/doc-latest/

-Brett.




From itamar at itamarst.org  Tue Nov  8 11:38:34 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 08 Nov 2005 13:38:34 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15062 - Upon
	ERROR_SEM_TIMEOUT, don't drop connection - resolves 1244
In-Reply-To: <E1EZXHK-00082m-00@wolfwood>
References: <E1EZXHK-00082m-00@wolfwood>
Message-ID: <1131475114.8993.17.camel@localhost.localdomain>

On Tue, 2005-11-08 at 10:29 -0700, Justin Johnson wrote:
> Author: justinj
> Date: Tue Nov  8 10:29:02 2005
> New Revision: 15062
> 
> Modified:
>    branches/justinj/issue1008/twisted/conch/test/test_text.py

Was this committed by mistake? Unless the test actually outputs to
terminal I don't see why the test shouldn't run.




From mslimmer at csbuilders.net  Tue Nov  8 11:46:22 2005
From: mslimmer at csbuilders.net (Max Slimmer)
Date: Tue, 8 Nov 2005 10:46:22 -0800
Subject: [Twisted-Python] help with twisted and WORDS
Message-ID: <FHEKLMLGOFBCCMNGMAEJMEPODCAA.mslimmer@csbuilders.net>

I am trying to use twisted to connect with IM servers/clients. I have read
all of the docs for twisted and am very impressed, it is really cool.
However I have tried to get the WORDS examples to work, without much luck,
and the sources don't have an over abundance of comments.  I have ordered
the book, hoping that will help, is there any other resources that might
help expidite the learning curve, both for twisted and the WORDS interfaces.

thanks,

max




From exarkun at divmod.com  Tue Nov  8 12:13:36 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 8 Nov 2005 14:13:36 -0500
Subject: [Twisted-Python] help with twisted and WORDS
In-Reply-To: <FHEKLMLGOFBCCMNGMAEJMEPODCAA.mslimmer@csbuilders.net>
Message-ID: <20051108191336.10365.529855927.divmod.quotient.5267@ohm>

On Tue, 8 Nov 2005 10:46:22 -0800, Max Slimmer <mslimmer at csbuilders.net> wrote:
>I am trying to use twisted to connect with IM servers/clients. I have read
>all of the docs for twisted and am very impressed, it is really cool.
>However I have tried to get the WORDS examples to work, without much luck,
>and the sources don't have an over abundance of comments.  I have ordered
>the book, hoping that will help, is there any other resources that might
>help expidite the learning curve, both for twisted and the WORDS interfaces.
>

Are you interested in making connections to IM servers, or accepting connections from IM clients?  Which protocols are you interested in?

Words' documentation is somewhat sparse, but maybe with a specific question, someone can suggest an example that might be useful.

Jean-Paul



From mslimmer at csbuilders.net  Tue Nov  8 12:29:29 2005
From: mslimmer at csbuilders.net (Max Slimmer)
Date: Tue, 8 Nov 2005 11:29:29 -0800
Subject: [Twisted-Python] help with twisted and WORDS
In-Reply-To: <20051108191336.10365.529855927.divmod.quotient.5267@ohm>
Message-ID: <FHEKLMLGOFBCCMNGMAEJAEAADDAA.mslimmer@csbuilders.net>

I want to connect with IM clients. I would like to talk with all of the
current IM protocols. I want to send an invitation to a client and then go
into a chat/dialog.

max

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Jean-Paul
> Calderone
> Sent: Tuesday, November 08, 2005 11:14 AM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] help with twisted and WORDS
>
>
> On Tue, 8 Nov 2005 10:46:22 -0800, Max Slimmer
> <mslimmer at csbuilders.net> wrote:
> >I am trying to use twisted to connect with IM servers/clients. I
> have read
> >all of the docs for twisted and am very impressed, it is really cool.
> >However I have tried to get the WORDS examples to work, without
> much luck,
> >and the sources don't have an over abundance of comments.  I have ordered
> >the book, hoping that will help, is there any other resources that might
> >help expidite the learning curve, both for twisted and the WORDS
> interfaces.
> >
>
> Are you interested in making connections to IM servers, or
> accepting connections from IM clients?  Which protocols are you
> interested in?
>
> Words' documentation is somewhat sparse, but maybe with a
> specific question, someone can suggest an example that might be useful.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From justinjohnson at gmail.com  Tue Nov  8 14:04:17 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 8 Nov 2005 15:04:17 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] r15062 - Upon
	ERROR_SEM_TIMEOUT, don't drop connection - resolves 1244
In-Reply-To: <1131475114.8993.17.camel@localhost.localdomain>
References: <E1EZXHK-00082m-00@wolfwood>
	<1131475114.8993.17.camel@localhost.localdomain>
Message-ID: <94a776e70511081304w3c93f937wcd6e7c01a729be4b@mail.gmail.com>

It wasn't a mistake. I commented on it in my commit message, but it wasn't
on the first line so it didn't get in the title of the commit email. But you
may be right that it shouldn't be skipped. I'll look at it further when I
get time.
 Thanks,
Justin

 On 11/8/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
> On Tue, 2005-11-08 at 10:29 -0700, Justin Johnson wrote:
> > Author: justinj
> > Date: Tue Nov 8 10:29:02 2005
> > New Revision: 15062
> >
> > Modified:
> > branches/justinj/issue1008/twisted/conch/test/test_text.py
>
> Was this committed by mistake? Unless the test actually outputs to
> terminal I don't see why the test shouldn't run.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051108/b4b871b9/attachment.html>

From exarkun at divmod.com  Tue Nov  8 15:46:48 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 8 Nov 2005 17:46:48 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15071 - More test cleanup
	and bug fixes.
In-Reply-To: <E1EZb2w-0008Br-00@wolfwood>
Message-ID: <20051108224648.10365.1441914986.divmod.quotient.5368@ohm>

On Tue, 08 Nov 2005 14:30:26 -0700, Justin Johnson 
>Modified: branches/justinj/issue1008/twisted/web/test/test_cgi.py
>==============================================================================
>--- branches/justinj/issue1008/twisted/web/test/test_cgi.py	(original)
>+++ branches/justinj/issue1008/twisted/web/test/test_cgi.py	Tue Nov  8 14:30:26 2005
>@@ -40,6 +40,11 @@
> print "readallinput ok"
> '''
>
>+if sys.platform.startswith('win'):
>+    EOL = '\r\n'
>+else:
>+    EOL = '\n'
>+

twisted.python.runtime.platform is better thing to check, here.  But rather than checking the platform type, how about using os.linesep?

Jean-Paul



From honeyday.mj at gmail.com  Tue Nov  8 18:48:10 2005
From: honeyday.mj at gmail.com (=?GB2312?B?wu3MpLfJ0eA=?=)
Date: Wed, 9 Nov 2005 09:48:10 +0800
Subject: [Twisted-Python] Twisted missing OpenSSL-Package?
In-Reply-To: <a07b86220511080644g1b4e5e33v@mail.gmail.com>
References: <a07b86220511080644g1b4e5e33v@mail.gmail.com>
Message-ID: <767559b0511081748y74330958o@mail.gmail.com>

2005/11/8, Franz Buchinger <fbuchinger at gmail.com>:
> Hi,
>
> I tried to install MoinMoin Wiki http://moinmoin.wikiwikiweb.de/ in
> Combination with Twisted as Webserver under Windows XP.
>
> When i  launch Mointwisted.cmd on the command line, it dies with the
> following error messages:
>
> C:\Python24\scripts\moin-1.3.5>mointwisted
> Traceback (most recent call last):
>  File "C:\Python24\scripts\twistd.py", line 25, in ?
>    run()
>  File "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 51, in r
> un
>    app.run(runApp, ServerOptions)
>  File "C:\Python24\Lib\site-packages\twisted\application\app.py", line 271, in
> run
>    runApp(config)
>  File "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 35, in r
> unApp
>    application = app.getApplication(config, passphrase)
> --- <exception caught here> ---
>  File "C:\Python24\Lib\site-packages\twisted\application\app.py", line 156, in
> getApplication
>    application = service.loadApplication(filename, style, passphrase)
>  File "C:\Python24\Lib\site-packages\twisted\application\service.py", line 303,
>  in loadApplication
>    application = sob.loadValueFromFile(filename, 'application', passphrase)
>  File "C:\Python24\Lib\site-packages\twisted\persisted\sob.py", line 209, in lo
> adValueFromFile
>    exec fileObj in d, d
>  File "mointwisted.py", line 27, in ?
>    from MoinMoin.server.twistedmoin import TwistedConfig, makeApp
>  File "C:\Python24\scripts\moin-1.3.5\MoinMoin\server\twistedmoin.py", line 27,
>  in ?
>    from twisted.internet import threads, reactor, ssl
>  File "C:\Python24\lib\site-packages\twisted\internet\ssl.py", line 47, in ?
>    from OpenSSL import SSL
> exceptions.ImportError: No module named OpenSSL
>
> Failed to load application: No module named OpenSSL
>
> Obviously, Twisted is missing an OpenSSL package. Which packages do I
> need to enable SSL-Support in Python under Windows?
>
> Thanx in advance,
>
> Franz


You can download the OpenSSL package from
http://twistedmatrix.com/products/download

See the "Twisted Dependencies for Windows" section.



From mslimmer at csbuilders.net  Tue Nov  8 19:17:29 2005
From: mslimmer at csbuilders.net (Max Slimmer)
Date: Tue, 8 Nov 2005 18:17:29 -0800
Subject: [Twisted-Python] Twisted missing OpenSSL-Package?
In-Reply-To: <767559b0511081748y74330958o@mail.gmail.com>
Message-ID: <FHEKLMLGOFBCCMNGMAEJMEAFDDAA.mslimmer@csbuilders.net>

You can get pyOpenSSL here http://pyopenssl.sourceforge.net/

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of ÂíÌ¤·ÉÑà
> Sent: Tuesday, November 08, 2005 5:48 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] Twisted missing OpenSSL-Package?
>
>
> 2005/11/8, Franz Buchinger <fbuchinger at gmail.com>:
> > Hi,
> >
> > I tried to install MoinMoin Wiki http://moinmoin.wikiwikiweb.de/ in
> > Combination with Twisted as Webserver under Windows XP.
> >
> > When i  launch Mointwisted.cmd on the command line, it dies with the
> > following error messages:
> >
> > C:\Python24\scripts\moin-1.3.5>mointwisted
> > Traceback (most recent call last):
> >  File "C:\Python24\scripts\twistd.py", line 25, in ?
> >    run()
> >  File
> "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 51, in r
> > un
> >    app.run(runApp, ServerOptions)
> >  File
> "C:\Python24\Lib\site-packages\twisted\application\app.py", line 271, in
> > run
> >    runApp(config)
> >  File
> "C:\Python24\Lib\site-packages\twisted\scripts\_twistw.py", line 35, in r
> > unApp
> >    application = app.getApplication(config, passphrase)
> > --- <exception caught here> ---
> >  File
> "C:\Python24\Lib\site-packages\twisted\application\app.py", line 156, in
> > getApplication
> >    application = service.loadApplication(filename, style, passphrase)
> >  File
> "C:\Python24\Lib\site-packages\twisted\application\service.py", line 303,
> >  in loadApplication
> >    application = sob.loadValueFromFile(filename, 'application',
> passphrase)
> >  File "C:\Python24\Lib\site-packages\twisted\persisted\sob.py",
> line 209, in lo
> > adValueFromFile
> >    exec fileObj in d, d
> >  File "mointwisted.py", line 27, in ?
> >    from MoinMoin.server.twistedmoin import TwistedConfig, makeApp
> >  File
> "C:\Python24\scripts\moin-1.3.5\MoinMoin\server\twistedmoin.py", line 27,
> >  in ?
> >    from twisted.internet import threads, reactor, ssl
> >  File "C:\Python24\lib\site-packages\twisted\internet\ssl.py",
> line 47, in ?
> >    from OpenSSL import SSL
> > exceptions.ImportError: No module named OpenSSL
> >
> > Failed to load application: No module named OpenSSL
> >
> > Obviously, Twisted is missing an OpenSSL package. Which packages do I
> > need to enable SSL-Support in Python under Windows?
> >
> > Thanx in advance,
> >
> > Franz
>
>
> You can download the OpenSSL package from
> http://twistedmatrix.com/products/download
>
> See the "Twisted Dependencies for Windows" section.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From foom at fuhm.net  Wed Nov  9 00:00:12 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 09 Nov 2005 00:00:12 -0700
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1EZjwK-0001Oj-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2005-11-02 07:00:02.200000:
 Bugs opened: 15   Bugs closed: 21   Total open bugs: 480 (-6)
  Urgent: 1 (-2)
  Bug: 231 (-8)
  Feature: 169 (+3)
  Wish: 79 (+1)

New / Reopened Bugs
______________________
                    ==== Bug ====
IOCP dataReceived called after connectionLost  (11 hours ago)
       http://twistedmatrix.com/bugs/issue1321 opened by justinj

[TRIAL] trial TestImportErrors tests fail on Windows due to in use files  (yesterday)
       http://twistedmatrix.com/bugs/issue1317 opened by justinj

[TRIAL] trial shouldn't print ascii color codes on Windows  (yesterday)
       http://twistedmatrix.com/bugs/issue1316 opened by justinj

[BACKPORT, CORE] startTLS() leaks memory  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1308 opened by exarkun

iocpreactor initiateOp invalid argument  (3 days ago)
       http://twistedmatrix.com/bugs/issue1309 opened by ghazel

[MAIL] IMAP4 Body parts fetch error  (6 days ago)
       http://twistedmatrix.com/bugs/issue1307 opened by therve

                    ==== Feature ====
[WEBSITE] Show current version of projects in sidebar, projects page  (11 hours ago)
       http://twistedmatrix.com/bugs/issue1320 opened by itamarst

[TRIAL] TestCase.contend -- mimic py.test's stack introspection  (yesterday)
       http://twistedmatrix.com/bugs/issue1319 opened by jml

[RELEASE MANAGEMENT] document Sumo building  (yesterday)
       http://twistedmatrix.com/bugs/issue1318 opened by radix

                    ==== Wish ====
once more for good measure (t-b test)  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1315 opened by radix

twisted-bugs test  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1314 opened by radix

another twisted-bugs test, what's going on?  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1313 opened by radix

yay twisted-bugs test  (3 days ago)
       http://twistedmatrix.com/bugs/issue1312 opened by radix

test issue twisted-bugs test  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1311 opened by radix

test issue, ignore  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1310 opened by radix

Bugs Closed
______________________
                    ==== Urgent ====
[CORE] Include new zope.interface in sumo (so we get the gcc4 compilation fix)  (1 month ago)
       http://twistedmatrix.com/bugs/issue1259 opened by itamarst, closed by radix

Release 2.1 (Sumo)  (5 months ago)
       http://twistedmatrix.com/bugs/issue1055 opened by jknight, closed by radix

                    ==== Bug ====
[CORE, TESTS] twisted.test.test_udp.testRebind makes no sense  (1 week ago)
       http://twistedmatrix.com/bugs/issue1295 opened by exarkun, closed by exarkun

roundup shouldn't set status to chatting unless status is new or resolved  (10 months ago)
       http://twistedmatrix.com/bugs/issue833 opened by jknight, closed by radix

[WEBSITE] tm bugtracker sends wrong confirmation emails  (20 months ago)
       http://twistedmatrix.com/bugs/issue522 opened by thomaswaldmann, closed by radix

[WEBSITE] Unification of products and projects.  (6 months ago)
       http://twistedmatrix.com/bugs/issue1034 opened by dreid, closed by radix

[WEBSITE] Sort out redirects from old products website hierachy  (7 months ago)
       http://twistedmatrix.com/bugs/issue938 opened by hypatia, closed by radix

[RELEASE MANAGEMENT] Set up roundup instances and separate build steps on slaves for individual Twisted subprojects  (7 months ago)
       http://twistedmatrix.com/bugs/issue943 opened by radix, closed by radix

[DOCUMENTATION, WEB, WEBSITE] http://twistedmatrix.com/products/web has a broken link to docs.  (1 month ago)
       http://twistedmatrix.com/bugs/issue1204 opened by spiv, closed by radix

[WEBSITE] twisted-versions.txt should be in svn  (6 months ago)
       http://twistedmatrix.com/bugs/issue1035 opened by dreid, closed by radix

roundup bug?  (5 months ago)
       http://twistedmatrix.com/bugs/issue1070 opened by maoy, closed by radix

[BACKPORT, CORE] startTLS() leaks memory  (4 days ago)
       http://twistedmatrix.com/bugs/issue1308 opened by exarkun, closed by spiv

twisted-bugs list is broken  (4 months ago)
       http://twistedmatrix.com/bugs/issue1101 opened by exarkun, closed by radix

[CORE] iocpreactor\abstract needs to import socket  (1 month ago)
       http://twistedmatrix.com/bugs/issue1233 opened by ghazel, closed by justinj

win32reactor spawnProcess incorrectly escapes cmd line  (3 months ago)
       http://twistedmatrix.com/bugs/issue1123 opened by justinj, closed by justinj

                    ==== Feature ====
[WORDS] [PATCH] twisted words irc patch for usernames  (1 week ago)
       http://twistedmatrix.com/bugs/issue1302 opened by avleenvig, closed by exarkun

                    ==== Wish ====
once more for good measure (t-b test)  (3 days ago)
       http://twistedmatrix.com/bugs/issue1315 opened by radix, closed by radix

twisted-bugs test  (3 days ago)
       http://twistedmatrix.com/bugs/issue1314 opened by radix, closed by radix

another twisted-bugs test, what's going on?  (3 days ago)
       http://twistedmatrix.com/bugs/issue1313 opened by radix, closed by radix

test issue twisted-bugs test  (3 days ago)
       http://twistedmatrix.com/bugs/issue1311 opened by radix, closed by radix

test issue, ignore  (3 days ago)
       http://twistedmatrix.com/bugs/issue1310 opened by radix, closed by radix




From mark at junklight.com  Wed Nov  9 02:32:07 2005
From: mark at junklight.com (markw)
Date: Wed, 9 Nov 2005 09:32:07 +0000
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <d06a5cd30511070547o59a504e2p@mail.gmail.com>
References: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>
	<20051106022657.10365.1687580705.divmod.quotient.4496@ohm>
	<d06a5cd30511070547o59a504e2p@mail.gmail.com>
Message-ID: <FC5A7D49-45C9-48BD-853E-B80D6628E8C7@junklight.com>

Out of interest: Why would someone still running python 2.2 be trying  
to use the *latest* twisted?

Given they are not interested in running the latest and greatest  
python surely they would be happy with an older version of twisted.  
Having a "last version compatible with 2.2" available for download  
would solve this problem no?

mark





On 7 Nov 2005, at 13:47, Jonathan Lange wrote:

> On 06/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>>> You are confused. At least two people were *for* dropping 2.2  
>>> support
>>> in this thread, and nobody was against it. I'm pretty sure several
>>> others have been for dropping it on IRC, as well.
>>
>> Confused, perhaps.  Or perhaps their positions were voiced with  
>> such limited enthusiasm I just forgot about them :)
>
> My apologies.  I often try to restrain my enthusiasm for fear that
> excess emotion will sidetrack rational discussion.  I am very keen to
> ditch Python 2.2 support.
>
>> It's a pretty good list, I must admit.  But I wonder what the  
>> specific gains to Twisted will be.  Just having a list of things  
>> Python 2.3 can do that Python 2.2 cannot does not seem compelling  
>> to me.
>
> One specific gain already mentioned is that we get to remove a bunch
> of code. Less code means fewer bugs and less work. It might even
> improve our test coverage.
>
> Here's a list of stuff (shamelessly grepped) that could probably be
> simplified if we dropped 2.2 support:
>
> twisted/conch/test/test_filetransfer.py:        # XXX: Remove 'uid'
> and 'gid', because python 2.2 doesn't have os.lchown, so we just skip
> that bit (dodgy!)
> twisted/conch/unix.py:            # XXX: Python 2.2 doesn't have  
> os.lchown!
> twisted/internet/error.py:        # only works in 2.2
> twisted/python/dist.py:    Python 2.2's distutils. Pretty similar
> arguments to getDataFiles,
> twisted/python/dist.py:# Apple distributes a nasty version of Python
> 2.2 w/ all release builds of
> twisted/python/dist.py:    Changes behavior in Python 2.2 to support
> simultaneous specification twisted/python/reflect.py:    This is a
> 2.2-only alternative to the Accessor mixin - just set in your
> twisted/python/zshcomp.py:# in case of python2.2 ...
> twisted/test/test_compat.py:        # without replacing isinstance on
> 2.2 as well :(
> twisted/topfiles/setup.py:# 2.2 doesn't have __file__ in main-scripts.
> twisted/trial/unittest.py:        # only overriding this because
> Python 2.2's unittest has a broken
> twisted/trial/unittest.py:        """a python2.2 friendly test to
> assert that substring is found in astring
> twisted/trial/unittest.py:        """a python2.2 friendly test to
> assert that substring is not found in
> twisted/trial/unittest.py:        # FIXME: when we drop support for
> python 2.2 and start to require 2.3,
> twisted/conch/ssh/filetransfer.py:        isFile, name =
> self.wasAFile[d] # replace with get when we're at 2.3
> twisted/lore/lint.py:# parser.suite in Python 2.3 raises SyntaxError,
> <2.3 raises parser.ParserError
> twisted/scripts/trial.py:        (relative to _trial_temp). Requires
> Python 2.3.3."""
> twisted/spread/jelly.py:            raise
> NotImplementedError("Datetime unserializing not supported in Python <
> 2.3")
> twisted/trial/runner.py:                          "python 2.3 or
> later, not running doctests")
> twisted/trial/runner.py:                          "python 2.3 or
> later, not running doctests")
> twisted/trial/test/test_doctest.py:    skip = 'doctest support only
> works on 2.3 or later'
> twisted/trial/test/test_doctest.py:        # doctest reports failures
> as errors in 2.3
> twisted/trial/test/test_failure_formatting.py:                'doctest
> support only works in Python 2.3 or later')
> twisted/words/protocols/jabber/xmpp_stringprep.py:
> "recommended you upgrade to Python 2.3.2 or newer if you "
>
> Plus the modules in twisted/python/pymodules.
>
> As you can see, Trial carries a fair part of the 2.2 support burden.
> I'm eager to be rid of it.
>
> cheers,
> jml
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mark at junklight.com  Wed Nov  9 02:34:39 2005
From: mark at junklight.com (markw)
Date: Wed, 9 Nov 2005 09:34:39 +0000
Subject: [Twisted-Python] Twisted Oreilly Book Released on Safari
In-Reply-To: <4370BE97.7040301@fettig.net>
References: <E1EYTGm-0007HA-01@pyramid.twistedmatrix.com>
	<436F809B.5020504@fuse.net> <4370BE97.7040301@fettig.net>
Message-ID: <FF393414-894B-48FF-8A12-320769FEA386@junklight.com>

Abe,

my copy arrived this week - excellent book.

looking forward to volume II   ;-)

mark

On 8 Nov 2005, at 15:04, Abe Fettig wrote:

> Michael Schneider wrote:
>> The new twisted book is on O'Reilly Safari!!!!  The new twisted  
>> book is
>> on  O'Reilly!!!!!!!!!!
>>
>>
>> Thanks to all who worked to put this together.  Nice Piece of  
>> work.  I
>> just finished the second
>> chapter and can't wait to finish it!!!!!!!!!
>
> I'm glad you're enjoying it! :-)
>
> Abe
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From william.lewis at uk.bnpparibas.com  Wed Nov  9 03:54:29 2005
From: william.lewis at uk.bnpparibas.com (william.lewis at uk.bnpparibas.com)
Date: Wed, 9 Nov 2005 10:54:29 +0000
Subject: [Twisted-Python] Using pb/jelly for large objects
Message-ID: <OF56C049E5.89C53FA4-ON802570B4.0035D8FB-802570B4.003BEB9B@bnpparibas.com>

Hi,

I am looking to build a system that runs multiple processes across a LAN 
of win32 machines. The processes will be initialised with a large amount 
of data at startup, followed by many more smaller chunks of data with the 
results being returned across the network. I would like to 
represent/transfer the data using your pb.Copyable and/or pb.Cacheable 
objects. My main question relates to the fact that pb uses jelly to 
serialise these objects. Particularly the comments at the top of the jelly 
module that emphasise the fact that jelly should have a lot more 
optimization in order to gain acceptable large-scale performance and that, 
compared to pickle, jelly is a more portable, human readable, less 
efficient mechanism.

So, would you use pb/jelly for transferring large chunks of data (e.g. 
~10s MB) to multiple nodes on a LAN?
If not, could pb be used with, for example, pickle instead of jelly?
Also, I notice that the pb, jelly and flavors modules are all classified 
as semi-stable. Could you give an indication of what this means in 
practice?

Thank you for your time. I think you have built a very useful/powerful 
framework and am looking forward to using it.

Regards,

Will Lewis


This message and any attachments (the "message") is 
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and
immediately notify the sender. Any use not in accord with
its purpose, any dissemination or disclosure, either whole
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message.
BNP PARIBAS (and its subsidiaries) shall (will) not
therefore be liable for the message if modified. 

**********************************************************************************************

BNP Paribas Private Bank London Branch is authorised
by CECEI & AMF and is regulated by the Financial Services
Authority for the conduct of its investment business in
the United Kingdom.

BNP Paribas Securities Services London Branch is authorised 
by CECEI & AMF and is regulated by the Financial Services 
Authority for the conduct of its investment business in 
the United Kingdom.
  
BNP Paribas Fund Services UK Limited is authorised and 
regulated by the Financial Services Authority

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051109/5d7ab43f/attachment.html>

From exarkun at divmod.com  Wed Nov  9 06:58:40 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 9 Nov 2005 08:58:40 -0500
Subject: [Twisted-Python] Using pb/jelly for large objects
In-Reply-To: <OF56C049E5.89C53FA4-ON802570B4.0035D8FB-802570B4.003BEB9B@bnpparibas.com>
Message-ID: <20051109135840.10365.832801366.divmod.quotient.5705@ohm>

On Wed, 9 Nov 2005 10:54:29 +0000, william.lewis at uk.bnpparibas.com wrote:
>Hi,
>
>I am looking to build a system that runs multiple processes across a LAN
>of win32 machines. The processes will be initialised with a large amount
>of data at startup, followed by many more smaller chunks of data with the
>results being returned across the network. I would like to
>represent/transfer the data using your pb.Copyable and/or pb.Cacheable
>objects. My main question relates to the fact that pb uses jelly to
>serialise these objects. Particularly the comments at the top of the jelly
>module that emphasise the fact that jelly should have a lot more
>optimization in order to gain acceptable large-scale performance and that,
>compared to pickle, jelly is a more portable, human readable, less
>efficient mechanism.
>
>So, would you use pb/jelly for transferring large chunks of data (e.g.
>~10s MB) to multiple nodes on a LAN?
>If not, could pb be used with, for example, pickle instead of jelly?

Depends on the form of the data.  If it is represented locally as large strings, or lists of integers or floats, or some other simple structure such as that, I would probably use a PB control channel and a secondary data channel.  The secondary channel could speak a trivial protocol, such as int32strings, which would be much faster than any general object serialization mechanism.

Of course, this is just an optimization.  I'd probably start out passing the data inline, and only worry about this once I saw it was causing problems, though keeping this in mind so the APIs are amenable to the change.

>Also, I notice that the pb, jelly and flavors modules are all classified
>as semi-stable. Could you give an indication of what this means in
>practice?

PB hasn't changed in a manner that is not backwards compatible in years.  There is, of course, the looming juggernaut of newpb...

>
>Thank you for your time. I think you have built a very useful/powerful
>framework and am looking forward to using it.

Thanks :)  I hope you have fun building your application.

Jean-Paul



From amcouper at gmail.com  Wed Nov  9 08:05:14 2005
From: amcouper at gmail.com (Alex Couper)
Date: Wed, 9 Nov 2005 15:05:14 +0000
Subject: [Twisted-Python] Problems reconstructing object
In-Reply-To: <a8fa98110511090659gcf21a14ye3006cc1c08e6052@mail.gmail.com>
References: <a8fa98110511090659gcf21a14ye3006cc1c08e6052@mail.gmail.com>
Message-ID: <a8fa98110511090705m4ec2b0e1v7c6bc9233244f959@mail.gmail.com>

In the documentation for pb.RemoteCopy it says " NOTE: copiers are invoked
with no arguments. Do not implement a constructor which requires args in a
subclass of RemoteCopy!", however, upon sending an object across my wire,
into an empty constructor, I get this error message:

exceptions.TypeError: __init__() takes exactly 1 arguments (3 given)

I've printed out the arguments given, one is of type _Unjellier, and one is
a list of the elements that I sent across.

It is not recreating the object correctly at the reciever side. Do you know
of any reasons why this might be? The reciever class inherits from
pb.RemoteCopy as well as the class that object sent is an instance of. I
know that it is not being created correctly because there are variables that
no longer exist on the receiver side that did when I sent it. Very strange.

Thanks

Alex Couper
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051109/529bb6aa/attachment.html>

From justinjohnson at gmail.com  Wed Nov  9 08:05:19 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 9 Nov 2005 09:05:19 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] r15071 - More test cleanup
	and bug fixes.
In-Reply-To: <20051108224648.10365.1441914986.divmod.quotient.5368@ohm>
References: <E1EZb2w-0008Br-00@wolfwood>
	<20051108224648.10365.1441914986.divmod.quotient.5368@ohm>
Message-ID: <94a776e70511090705u5737a389r21714dae6d88502b@mail.gmail.com>

Fixed. Thanks.

On 11/8/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Tue, 08 Nov 2005 14:30:26 -0700, Justin Johnson
> >Modified: branches/justinj/issue1008/twisted/web/test/test_cgi.py
>
> >==============================================================================
> >--- branches/justinj/issue1008/twisted/web/test/test_cgi.py (original)
> >+++ branches/justinj/issue1008/twisted/web/test/test_cgi.py Tue Nov 8
> 14:30:26 2005
> >@@ -40,6 +40,11 @@
> > print "readallinput ok"
> > '''
> >
> >+if sys.platform.startswith('win'):
> >+ EOL = '\r\n'
> >+else:
> >+ EOL = '\n'
> >+
>
> twisted.python.runtime.platform is better thing to check, here. But rather
> than checking the platform type, how about using os.linesep?
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051109/92288f53/attachment.html>

From lycka at carmensystems.com  Wed Nov  9 10:05:33 2005
From: lycka at carmensystems.com (Magnus Lycka)
Date: Wed, 09 Nov 2005 18:05:33 +0100
Subject: [Twisted-Python] Python 2.2 Support
In-Reply-To: <FC5A7D49-45C9-48BD-853E-B80D6628E8C7@junklight.com>
References: <60ed19d40511051714o6565bd29nd6885511808fb2ae@mail.gmail.com>	<20051106022657.10365.1687580705.divmod.quotient.4496@ohm>	<d06a5cd30511070547o59a504e2p@mail.gmail.com>
	<FC5A7D49-45C9-48BD-853E-B80D6628E8C7@junklight.com>
Message-ID: <43722C5D.901@carmensystems.com>

markw wrote:

> Out of interest: Why would someone still running python 2.2 be trying  
> to use the *latest* twisted?

Someone running Python 2.2 might still need a bug fixed in Twisted.

> Given they are not interested in running the latest and greatest  
> python surely they would be happy with an older version of twisted.  
> Having a "last version compatible with 2.2" available for download  
> would solve this problem no?

This is a good idea, even if it doesn't solve the whole problem!

(Personally I'm a bit torn. We use Twisted on RH EL3 boxes, but
I'd rather see that we upgraded to a newer Python. That Twisted
requires 2.3 could help... :)




From mary-twisted at puzzling.org  Wed Nov  9 17:03:42 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 10 Nov 2005 11:03:42 +1100
Subject: [Twisted-Python] One day Twisted documentation sprint
Message-ID: <20051110000341.GA4443@home.puzzling.org>

After the success of the virtual sprint a month back, I suggested that
at some point there might be smaller, more tightly focussed sprints
coming up.

I'd like to run a one day Twisted documentation sprint. Please note that
while I want and need input from both Twisted experts and Twisted
newbies, I won't have much tolerance for general whining about the state
of Twisted documentation. (Not that I've ever exhibited much tolerance
of this kind.) We need highly specific whining!

This sprint will hopefully be the first in a series, and it will be
focussed on *reading* the documentation, rather than writing it. We
would therefore especially welcome the input of people who are either
users of the documentation, or want the documentation improved but don't
want to write it.

We will focus on reviewing present documentation against the following
criteria:

 - does it reflect best practices for Twisted coders?
 - is it up-to-date?
 - is it complete?

For people who are newer to Twisted, reviews on the general useability
of any particular piece of Twisted documentation as per my post at
http://twistedmatrix.com/pipermail/twisted-python/2005-May/010386.html

This sprint will likely be held in early December and coordinated over
IRC. Can people particularly interested in participating please contact
me off-list with the following information:

 - level of Twisted experience
 - existing knowledge of the documentation
 - preferred day(s) of the week for sprinting
 - preferred hours for sprinting (please give these in UTC)

I'll base the time and date, and to some extent the activities off this
feedback.

-Mary

-- 
<skreech> THE SENSOR NETWORK IS DOWN
* skreech pilots his shrike into the side of #python



From mary-twisted at puzzling.org  Wed Nov  9 17:51:13 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 10 Nov 2005 11:51:13 +1100
Subject: [Twisted-Python] One day Twisted documentation sprint
In-Reply-To: <20051110000341.GA4443@home.puzzling.org>
References: <20051110000341.GA4443@home.puzzling.org>
Message-ID: <20051110005113.GB4780@home.puzzling.org>

On Thu, Nov 10, 2005, Mary Gardiner wrote:
>  - preferred hours for sprinting (please give these in UTC)

Btw I find http://www.timeanddate.com/worldclock/meeting.html helpful
for working UTC time ranges out. Please do it though: I'm specifically
asking so that I don't have to sit down with some mega spreadsheet and
work out what "yeah, nighttime in Oslo, except probably only until 3am"
means.

-Mary

-- 
<glyph> now you're probably wondering how to run cvs
<samuel> actually i was thinking of naked women.
<samuel> but sure.



From cooz at ee.oulu.fi  Thu Nov 10 05:27:31 2005
From: cooz at ee.oulu.fi (Mika Seppanen)
Date: Thu, 10 Nov 2005 14:27:31 +0200
Subject: [Twisted-Python] [patch] Performance of Conch/SSH
Message-ID: <200511101227.jAACRVj6028306@ee.oulu.fi>


When I was profiling my code I noticed that most of time is spent on simple counter in twisted/conch/ssh/transport.py. So I rewrote _Counter-class. My version is about 5 times faster than orginal and data transfer rate is almost doubled. Maybe someone could check that this is not breaking anything?

Mika

--- transport.py	2005-11-10 13:26:01.826437000 +0200
+++ transport.py.new	2005-11-10 13:35:57.804232000 +0200
@@ -20,6 +20,7 @@
 import sha
 import zlib
 import math # for math.log
+import array
 
 # external library imports
 from Crypto import Util
@@ -727,17 +728,22 @@
         iv=iv[:mod.block_size]
         self.count = getMP('\xff\xff\xff\xff'+iv)[0]
         self.bs = mod.block_size
+        self.count = Util.number.long_to_bytes(self.count - 1)
+        self.count = '\x00'*(self.bs-len(self.count)) + self.count
+        self.count = array.array('c', self.count) 
+        self.len = len(self.count) - 1
+
     def __call__(self):
-        ret = MP(self.count)[4:]
-        if ret[0]=='\x00':
-            ret=ret[1:]
-        if len(ret) < self.bs:
-            ret = '\x00'*(self.bs-len(ret)) + ret
-        self.count += 1
-        if self.count == 2L ** self.bs:
-            self.count = 0
-        return ret
+        i = self.len
+        while i > -1:
+            self.count[i] = n = chr((ord(self.count[i]) + 1) % 256)
+            if n == '\x00':
+                i -= 1
+            else:
+                return self.count.tostring()
 
+        self.count = array.array('c', '\x00'*self.bs)
+        return self.count.tostring()
 
 def buffer_dump(b, title = None):
     r = title or ''



From itamar at itamarst.org  Thu Nov 10 09:02:55 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Nov 2005 11:02:55 -0500
Subject: [Twisted-Python] [patch] Performance of Conch/SSH
In-Reply-To: <200511101227.jAACRVj6028306@ee.oulu.fi>
References: <200511101227.jAACRVj6028306@ee.oulu.fi>
Message-ID: <1131638575.8998.6.camel@localhost.localdomain>

On Thu, 2005-11-10 at 14:27 +0200, Mika Seppanen wrote:
> When I was profiling my code I noticed that most of time is spent on
> simple counter in twisted/conch/ssh/transport.py. So I rewrote
> _Counter-class. My version is about 5 times faster than orginal and
> data transfer rate is almost doubled. Maybe someone could check that
> this is not breaking anything?

Hi,

Could you add this to http://twistedmatrix.com/bugs/? Thanks.




From itamar at itamarst.org  Thu Nov 10 10:03:24 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Nov 2005 12:03:24 -0500
Subject: [Twisted-Python] Issue tracker registration problems
Message-ID: <1131642205.8998.12.camel@localhost.localdomain>

Hi,

Chris upgraded the tracker to a new version, and looks like the upgrade
instructions weren't complete, so registration was broken. It should be
working again; if not, let us know on the list. Thanks!

http://twistedmatrix.com/bugs/




From garanin at m-lan.ru  Thu Nov 10 13:33:51 2005
From: garanin at m-lan.ru (Garanin Michael)
Date: Thu, 10 Nov 2005 23:33:51 +0300
Subject: [Twisted-Python] Twisted & ZODB
Message-ID: <1131654831.5097.43.camel@localhost>

                                                                          
Hello!
I am newcomer, and try develop Twisted+ZODB application. 
My questions: What is good practices used Twisted+ZODB? I think my code 
will be 'blocking'(where Deferred-source???) and my client-request
handler also will be 'blocking'. How do i simple solve
'blocking'-problem (DeferedToThread,...) ?
Thanks!




From glyph at divmod.com  Fri Nov 11 01:10:18 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 11 Nov 2005 03:10:18 -0500
Subject: [Twisted-Python] Twisted & ZODB
In-Reply-To: <1131654831.5097.43.camel@localhost>
Message-ID: <20051111081018.10365.1994807202.divmod.quotient.6556@ohm>

On Thu, 10 Nov 2005 23:33:51 +0300, Garanin Michael <garanin at m-lan.ru> wrote:

>I am newcomer, and try develop Twisted+ZODB application.
>My questions: What is good practices used Twisted+ZODB? I think my code
>will be 'blocking'(where Deferred-source???) and my client-request
>handler also will be 'blocking'. How do i simple solve
>'blocking'-problem (DeferedToThread,...) ?

deferToThread is probably a reasonable thing to do when writing code to work with ZODB, especially ZODB transactions, since ZODB more or less manages concurrency itself internally.

However, as has been discussed many times on this list, this is a very hard problem.  Do not expect deferToThread to be a "simple solution".

For example: Twisted is not thread safe except where *explicitly* noted, and you should be careful to not call any Twisted methods or functions from within your threaded ZODB code; your responses will all have to be processed and sent to the network through either callFromThread or within the callbacks to the deferreds returned from deferToThread.



From garanin at m-lan.ru  Fri Nov 11 05:24:49 2005
From: garanin at m-lan.ru (Garanin Michael)
Date: Fri, 11 Nov 2005 15:24:49 +0300
Subject: [Twisted-Python] 'big' function -> 'small' functions
Message-ID: <1131711888.6367.26.camel@localhost>

                                                                          
Hello!
I divide my 'big' function (3seconds) to 'small' functions (per 1
seconds). Now client handler process is:
request->f1/1second->f2/1second->f3/1second-> response. And f1,f2,f3
simple calc factorials. What is 'good practice' handlers two
clients-request (use callLater, iteration,pause etc.)?
Thanks!




From dhess at verscend.com  Fri Nov 11 07:26:03 2005
From: dhess at verscend.com (David K. Hess)
Date: Fri, 11 Nov 2005 08:26:03 -0600
Subject: [Twisted-Python] Unjelly - recursion limit reached
Message-ID: <4CD21D51-C31D-4AAC-980B-AE189FC748BE@verscend.com>


On Nov 7, 2005, at 8:42 AM, David K. Hess wrote:
> Bottom line, if all of these things are true, then I'm not sure  
> what is going wrong. Is it possible that jelly is at times walking  
> my object graph (which is interconnected to a certain degree and  
> changes dynamically) in such a way that it has to perform a  
> significant amount of recursion? In other words, maybe this isn't a  
> bug but I just need to increase the runtime recursion limit?
>
> FYI, here's a snippet of the exception:

I hate replying to my own post but I'm beginning to believe that  
recursion is the root of the problem and want to focus on it. From  
the exception trace, it looks like it takes on average 3.5 stack  
frames to unjelly a nested object. With a default recursion limit of  
1000 stack frames, this means that Twisted is limited to transferring  
an object graph that has a depth first traversal through it of length  
285 objects (roughly speaking). You could of course easily create a  
linked list of 285 objects to force the situation.

This is a pretty scary limitation. Is anybody working on a non- 
recursion based version of jelly? Am I going to have to move to  
Stackless Python?

Thanks.

Dave






From exarkun at divmod.com  Fri Nov 11 07:46:06 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 11 Nov 2005 09:46:06 -0500
Subject: [Twisted-Python] Unjelly - recursion limit reached
In-Reply-To: <4CD21D51-C31D-4AAC-980B-AE189FC748BE@verscend.com>
Message-ID: <20051111144606.10365.1554950071.divmod.quotient.6617@ohm>

On Fri, 11 Nov 2005 08:26:03 -0600, "David K. Hess" <dhess at verscend.com> wrote:
>
>On Nov 7, 2005, at 8:42 AM, David K. Hess wrote:
>>Bottom line, if all of these things are true, then I'm not sure  what is 
>>going wrong. Is it possible that jelly is at times walking  my object graph 
>>(which is interconnected to a certain degree and  changes dynamically) in 
>>such a way that it has to perform a  significant amount of recursion? In 
>>other words, maybe this isn't a  bug but I just need to increase the 
>>runtime recursion limit?
>>
>>FYI, here's a snippet of the exception:
>
>I hate replying to my own post but I'm beginning to believe that  recursion 
>is the root of the problem and want to focus on it. From  the exception 
>trace, it looks like it takes on average 3.5 stack  frames to unjelly a 
>nested object. With a default recursion limit of  1000 stack frames, this 
>means that Twisted is limited to transferring  an object graph that has a 
>depth first traversal through it of length  285 objects (roughly speaking). 
>You could of course easily create a  linked list of 285 objects to force the 
>situation.

Linked list?  Hee hee.  Crazy.

>
>This is a pretty scary limitation. Is anybody working on a non- recursion 
>based version of jelly? Am I going to have to move to  Stackless Python?

You can raise the recursion limit.  See sys.setrecursionlimit().

Stackless has nothing to do with this.  It won't help fix this problem.

The real way to "fix" this is to re-implement the jellying process iteratively.  Or, don't use such deeply nested objects.

Jean-Paul



From dhess at verscend.com  Fri Nov 11 08:11:42 2005
From: dhess at verscend.com (David K. Hess)
Date: Fri, 11 Nov 2005 09:11:42 -0600
Subject: [Twisted-Python] Unjelly - recursion limit reached
Message-ID: <C7BD3CFB-1DFB-4B72-BB12-C06FB5D787A2@verscend.com>

On Nov 11, 2005, at 8:46 AM, Jean-Paul Calderone wrote:

> On Fri, 11 Nov 2005 08:26:03 -0600, "David K. Hess"  
> <dhess at verscend.com> wrote:
>>
>> On Nov 7, 2005, at 8:42 AM, David K. Hess wrote:
>>> Bottom line, if all of these things are true, then I'm not sure   
>>> what is going wrong. Is it possible that jelly is at times  
>>> walking  my object graph (which is interconnected to a certain  
>>> degree and  changes dynamically) in such a way that it has to  
>>> perform a  significant amount of recursion? In other words, maybe  
>>> this isn't a  bug but I just need to increase the runtime  
>>> recursion limit?
>>>
>>> FYI, here's a snippet of the exception:
>>
>> I hate replying to my own post but I'm beginning to believe that   
>> recursion is the root of the problem and want to focus on it.  
>> From  the exception trace, it looks like it takes on average 3.5  
>> stack  frames to unjelly a nested object. With a default recursion  
>> limit of  1000 stack frames, this means that Twisted is limited to  
>> transferring  an object graph that has a depth first traversal  
>> through it of length  285 objects (roughly speaking). You could of  
>> course easily create a  linked list of 285 objects to force the  
>> situation.
>
> Linked list?  Hee hee.  Crazy.
>
>>
>> This is a pretty scary limitation. Is anybody working on a non-  
>> recursion based version of jelly? Am I going to have to move to   
>> Stackless Python?
>
> You can raise the recursion limit.  See sys.setrecursionlimit().

Yes, but with the standard Python build on Windows, you can only go  
up to 2000. So now, I can do 570 objects. I'm working on trying to  
track down editbin.exe so I can raise the stack size on python.exe  
and see how much farther I can go.

> Stackless has nothing to do with this.  It won't help fix this  
> problem.

Are we talking about the same thing? The key architectural feature of  
Stackless Python is "practically unlimited recursion". Forget about  
all the tasklet and channel stuff.

> The real way to "fix" this is to re-implement the jellying process  
> iteratively.  Or, don't use such deeply nested objects.

My object graph is a natural and clean data structure. I don't want  
to lose that just because of limitations in my tools.

Is this currently being addressed or in a road map? Am I unknowingly  
volunteering for it? :-o

Dave

>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python







From exarkun at divmod.com  Fri Nov 11 09:17:44 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 11 Nov 2005 11:17:44 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do want
	this stuff
In-Reply-To: <E1EaTUw-0001Bg-00@wolfwood>
Message-ID: <20051111161744.10365.1261812860.divmod.quotient.6639@ohm>

On Fri, 11 Nov 2005 00:38:58 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Fri Nov 11 00:38:56 2005
>New Revision: 15100
>
>Added:
>   branches/jml/trial-setupclass-death/twisted/trial/dijkstra.py
>      - copied unchanged from r15099, sandbox/jml/testresources/dijkstra.py
>   branches/jml/trial-setupclass-death/twisted/trial/priodict.py
>      - copied unchanged from r15099, sandbox/jml/testresources/priodict.py
>   branches/jml/trial-setupclass-death/twisted/trial/resources.py
>      - copied unchanged from r15099, sandbox/jml/testresources/resources.py
>   branches/jml/trial-setupclass-death/twisted/trial/test/test_optimizing_test_suite.py
>      - copied unchanged from r15099, sandbox/jml/testresources/test_optimizing_test_suite.py
>   branches/jml/trial-setupclass-death/twisted/trial/test/test_resourced_test_case.py
>      - copied unchanged from r15099, sandbox/jml/testresources/test_resourced_test_case.py
>   branches/jml/trial-setupclass-death/twisted/trial/test/test_test_loader.py
>      - copied unchanged from r15099, sandbox/jml/testresources/test_test_loader.py
>   branches/jml/trial-setupclass-death/twisted/trial/test/test_test_resource.py
>      - copied unchanged from r15099, sandbox/jml/testresources/test_test_resource.py
>Log:
>So I really do want this stuff
>

This seems to beg the question:

  Why?

So, consider it begged :)

Jean-Paul



From jml at mumak.net  Fri Nov 11 15:11:47 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 12 Nov 2005 09:11:47 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
Message-ID: <d06a5cd30511111411j64ae75fay@mail.gmail.com>

On 12/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 11 Nov 2005 00:38:58 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
> >Author: jml
> >Date: Fri Nov 11 00:38:56 2005
> >New Revision: 15100
> >
> >Added:
> >   branches/jml/trial-setupclass-death/twisted/trial/dijkstra.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/dijkstra.py
> >   branches/jml/trial-setupclass-death/twisted/trial/priodict.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/priodict.py
> >   branches/jml/trial-setupclass-death/twisted/trial/resources.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/resources.py
> >   branches/jml/trial-setupclass-death/twisted/trial/test/test_optimizing_test_suite.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/test_optimizing_test_suite.py
> >   branches/jml/trial-setupclass-death/twisted/trial/test/test_resourced_test_case.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/test_resourced_test_case.py
> >   branches/jml/trial-setupclass-death/twisted/trial/test/test_test_loader.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/test_test_loader.py
> >   branches/jml/trial-setupclass-death/twisted/trial/test/test_test_resource.py
> >      - copied unchanged from r15099, sandbox/jml/testresources/test_test_resource.py
> >Log:
> >So I really do want this stuff
> >
>
> This seems to beg the question:
>
>   Why?
>
> So, consider it begged :)
>

Because I'm going to implement setUpClass using this stuff.

Why?

Because the current implementation is horrible, as discussed.



From radeex at gmail.com  Fri Nov 11 18:21:21 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 12 Nov 2005 12:21:21 +1100
Subject: [Twisted-Python] Unjelly - recursion limit reached
In-Reply-To: <20051111144606.10365.1554950071.divmod.quotient.6617@ohm>
References: <4CD21D51-C31D-4AAC-980B-AE189FC748BE@verscend.com>
	<20051111144606.10365.1554950071.divmod.quotient.6617@ohm>
Message-ID: <60ed19d40511111721v631988a8j9f0228597c2dc74@mail.gmail.com>

On 11/12/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 11 Nov 2005 08:26:03 -0600, "David K. Hess" <dhess at verscend.com> wrote:
> >This is a pretty scary limitation. Is anybody working on a non- recursion
> >based version of jelly? Am I going to have to move to  Stackless Python?
>
> You can raise the recursion limit.  See sys.setrecursionlimit().
>
> Stackless has nothing to do with this.  It won't help fix this problem.

Ehh, it will allow you to go to bounds only restricted by your memory
without segfaulting, unlike CPython. My machine can only go up to
2000some Python stackframes before segfaulting, I think. With
stackless, I could go to kajillions, probably.


--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From exarkun at divmod.com  Fri Nov 11 21:08:36 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 11 Nov 2005 23:08:36 -0500
Subject: [Twisted-Python] Unjelly - recursion limit reached
In-Reply-To: <60ed19d40511111721v631988a8j9f0228597c2dc74@mail.gmail.com>
Message-ID: <20051112040836.10365.1042543239.divmod.quotient.6857@ohm>

On Sat, 12 Nov 2005 12:21:21 +1100, Christopher Armstrong <radeex at gmail.com> wrote:
>On 11/12/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Fri, 11 Nov 2005 08:26:03 -0600, "David K. Hess" <dhess at verscend.com> wrote:
>> >This is a pretty scary limitation. Is anybody working on a non- recursion
>> >based version of jelly? Am I going to have to move to  Stackless Python?
>>
>> You can raise the recursion limit.  See sys.setrecursionlimit().
>>
>> Stackless has nothing to do with this.  It won't help fix this problem.
>
>Ehh, it will allow you to go to bounds only restricted by your memory
>without segfaulting, unlike CPython. My machine can only go up to
>2000some Python stackframes before segfaulting, I think. With
>stackless, I could go to kajillions, probably.

That is only because you failed to raise your operating-system enforced stack limit (often controlled with the ulimit shell command).

Jean-Paul



From foom at fuhm.net  Sat Nov 12 07:31:43 2005
From: foom at fuhm.net (James Y Knight)
Date: Sat, 12 Nov 2005 09:31:43 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511111411j64ae75fay@mail.gmail.com>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
Message-ID: <A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>


On Nov 11, 2005, at 5:11 PM, Jonathan Lange wrote:
>> This seems to beg the question:
>>
>>   Why?
>>
>> So, consider it begged :)
>>
>>
>
> Because I'm going to implement setUpClass using this stuff.
>
> Why?
>
> Because the current implementation is horrible, as discussed.

Maybe this is a stupid question, but I'm confused as to why the  
implementation isn't straightforward, something along the lines of  
the following:

for each module to test:
   for each class that is a subclass of TestCase in module:
     testCase = class()
     testCase.setUpClass()
     for each method in testCase:
       testCase.setUp()
       testCase.method()
       testCase.tearDown()
     testCase.tearDownClass()

Now I now it has to be somewhat more complicated, due to error  
handling, deferred handling, suppress, etc, but it does seem like  
that would be the outline...can it not be?

James



From jml at mumak.net  Sat Nov 12 14:34:49 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 13 Nov 2005 08:34:49 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
	<A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
Message-ID: <d06a5cd30511121334u3c7675d0h@mail.gmail.com>

On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>
> On Nov 11, 2005, at 5:11 PM, Jonathan Lange wrote:
> >> This seems to beg the question:
> >>
> >>   Why?
> >>
> >> So, consider it begged :)
> >>
> >>
> >
> > Because I'm going to implement setUpClass using this stuff.
> >
> > Why?
> >
> > Because the current implementation is horrible, as discussed.
>
> Maybe this is a stupid question, but I'm confused as to why the
> implementation isn't straightforward, something along the lines of
> the following:
>
> for each module to test:
>    for each class that is a subclass of TestCase in module:
>      testCase = class()
>      testCase.setUpClass()
>      for each method in testCase:
>        testCase.setUp()
>        testCase.method()
>        testCase.tearDown()
>      testCase.tearDownClass()
>
> Now I now it has to be somewhat more complicated, due to error
> handling, deferred handling, suppress, etc, but it does seem like
> that would be the outline...can it not be?

The short answer: An instance of a TestCase subclass represents a single test.

jml



From foom at fuhm.net  Sat Nov 12 15:05:24 2005
From: foom at fuhm.net (James Y Knight)
Date: Sat, 12 Nov 2005 17:05:24 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511121334u3c7675d0h@mail.gmail.com>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
	<A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
	<d06a5cd30511121334u3c7675d0h@mail.gmail.com>
Message-ID: <B0F7F5DC-9A9F-47C5-A880-C748CCA790DB@fuhm.net>

On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
> On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>>
>> Maybe this is a stupid question, but I'm confused as to why the
>> implementation isn't straightforward, something along the lines of
>> the following:
>>
>> for each module to test:
>>    for each class that is a subclass of TestCase in module:
>>      testCase = class()
>>      testCase.setUpClass()
>>      for each method in testCase:
>>        testCase.setUp()
>>        testCase.method()
>>        testCase.tearDown()
>>      testCase.tearDownClass()
>>
>> Now I now it has to be somewhat more complicated, due to error
>> handling, deferred handling, suppress, etc, but it does seem like
>> that would be the outline...can it not be?
>>
>
> The short answer: An instance of a TestCase subclass represents a  
> single test.

But not to the user...if I set attributes on the instance, they stay  
set across all test methods. So what is this multiple-instance thing  
really for? Is this just an annoyance forced by unittest  
compatibility, or is there actually a reason for that complication?

James



From jml at mumak.net  Sat Nov 12 18:33:41 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 13 Nov 2005 12:33:41 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <B0F7F5DC-9A9F-47C5-A880-C748CCA790DB@fuhm.net>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
	<A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
	<d06a5cd30511121334u3c7675d0h@mail.gmail.com>
	<B0F7F5DC-9A9F-47C5-A880-C748CCA790DB@fuhm.net>
Message-ID: <d06a5cd30511121733s5ef06364l@mail.gmail.com>

On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
> > On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> >>
> >> Maybe this is a stupid question, but I'm confused as to why the
> >> implementation isn't straightforward, something along the lines of
> >> the following:
> >>
> >> for each module to test:
> >>    for each class that is a subclass of TestCase in module:
> >>      testCase = class()
> >>      testCase.setUpClass()
> >>      for each method in testCase:
> >>        testCase.setUp()
> >>        testCase.method()
> >>        testCase.tearDown()
> >>      testCase.tearDownClass()
> >>
> >> Now I now it has to be somewhat more complicated, due to error
> >> handling, deferred handling, suppress, etc, but it does seem like
> >> that would be the outline...can it not be?
> >>
> >
> > The short answer: An instance of a TestCase subclass represents a
> > single test.
>
> But not to the user...if I set attributes on the instance, they stay
> set across all test methods.

This is a bug, not a feature.

> So what is this multiple-instance thing
> really for? Is this just an annoyance forced by unittest
> compatibility, or is there actually a reason for that complication?

It's an annoyance forced by wanting to remove aforementioned bug and
by wanting to have clean code within trial.



From jml at mumak.net  Sat Nov 12 19:48:13 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 13 Nov 2005 13:48:13 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
	<A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
	<d06a5cd30511121334u3c7675d0h@mail.gmail.com>
	<B0F7F5DC-9A9F-47C5-A880-C748CCA790DB@fuhm.net>
	<d06a5cd30511121733s5ef06364l@mail.gmail.com>
Message-ID: <d06a5cd30511121848n5f8ae4bas@mail.gmail.com>

On 13/11/05, Jonathan Lange <jml at mumak.net> wrote:
> On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> > On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
> > > On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> > >>
> > >> Maybe this is a stupid question, but I'm confused as to why the
> > >> implementation isn't straightforward, something along the lines of
> > >> the following:
> > >>

Also, I should point out that implementing setUpClass using resources
will (probably -- I haven't benchmarked) make tests run faster.

Say you have a base:

class ComplexBase(unittest.TestCase):
  def setUpClass(self):
    """do complex stuff"""

  def tearDownClass(self):
    """do complex stuff"""

class A(ComplexBase):
  def test1(self):
    pass

class B(ComplexBase):
  def test2(self):
    pass

Then, with resources, the run order will be:
    setUpClass
    test1
    test2
    tearDownClass

As opposed to:
    setUpClass
    test1
    tearDownClass
    setUpClass
    test2
    tearDownClass



From exarkun at divmod.com  Sat Nov 12 22:12:03 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 13 Nov 2005 00:12:03 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
Message-ID: <20051113051203.10365.1020996324.divmod.quotient.7168@ohm>

On Sun, 13 Nov 2005 12:33:41 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>> On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
>> > On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>> >>
>> >> Maybe this is a stupid question, but I'm confused as to why the
>> >> implementation isn't straightforward, something along the lines of
>> >> the following:
>> >>
>> >> for each module to test:
>> >>    for each class that is a subclass of TestCase in module:
>> >>      testCase = class()
>> >>      testCase.setUpClass()
>> >>      for each method in testCase:
>> >>        testCase.setUp()
>> >>        testCase.method()
>> >>        testCase.tearDown()
>> >>      testCase.tearDownClass()
>> >>
>> >> Now I now it has to be somewhat more complicated, due to error
>> >> handling, deferred handling, suppress, etc, but it does seem like
>> >> that would be the outline...can it not be?
>> >>
>> >
>> > The short answer: An instance of a TestCase subclass represents a
>> > single test.
>>
>> But not to the user...if I set attributes on the instance, they stay
>> set across all test methods.
>
>This is a bug, not a feature.

Why is it a bug?

Jean-Paul



From exarkun at divmod.com  Sat Nov 12 22:16:04 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 13 Nov 2005 00:16:04 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511121848n5f8ae4bas@mail.gmail.com>
Message-ID: <20051113051604.10365.928224157.divmod.quotient.7170@ohm>

On Sun, 13 Nov 2005 13:48:13 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 13/11/05, Jonathan Lange <jml at mumak.net> wrote:
>> On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>> > On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
>> > > On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
>> > >>
>> > >> Maybe this is a stupid question, but I'm confused as to why the
>> > >> implementation isn't straightforward, something along the lines of
>> > >> the following:
>> > >>
>
>Also, I should point out that implementing setUpClass using resources
>will (probably -- I haven't benchmarked) make tests run faster.
>
>Say you have a base:
>
>class ComplexBase(unittest.TestCase):
>  def setUpClass(self):
>    """do complex stuff"""
>
>  def tearDownClass(self):
>    """do complex stuff"""
>
>class A(ComplexBase):
>  def test1(self):
>    pass
>
>class B(ComplexBase):
>  def test2(self):
>    pass
>
>Then, with resources, the run order will be:
>    setUpClass
>    test1
>    test2
>    tearDownClass
>
>As opposed to:
>    setUpClass
>    test1
>    tearDownClass
>    setUpClass
>    test2
>    tearDownClass

This seems like a pretty major change in semantics.  I wonder if existing code that relies on the existing behavior can stand to have it made.

Jean-Paul



From foom at fuhm.net  Sat Nov 12 22:22:20 2005
From: foom at fuhm.net (James Y Knight)
Date: Sun, 13 Nov 2005 00:22:20 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511121848n5f8ae4bas@mail.gmail.com>
References: <E1EaTUw-0001Bg-00@wolfwood>
	<20051111161744.10365.1261812860.divmod.quotient.6639@ohm>
	<d06a5cd30511111411j64ae75fay@mail.gmail.com>
	<A4E5475B-EAF4-4588-BF7D-F24E79F45494@fuhm.net>
	<d06a5cd30511121334u3c7675d0h@mail.gmail.com>
	<B0F7F5DC-9A9F-47C5-A880-C748CCA790DB@fuhm.net>
	<d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<d06a5cd30511121848n5f8ae4bas@mail.gmail.com>
Message-ID: <7D1C008C-874E-44C5-B393-6FBA7409B050@fuhm.net>


On Nov 12, 2005, at 9:48 PM, Jonathan Lange wrote:
> Also, I should point out that implementing setUpClass using resources
> will (probably -- I haven't benchmarked) make tests run faster.
>
> Say you have a base:
> [snipped]

How about let's say I have a base:
class DBTestConnector:
     def setUpClass(self):
         if not self.can_connect():
             raise unittest.SkipTest, '%s: Cannot access db' %  
self.TEST_PREFIX

     def can_connect(self):
         raise NotImplementedError()

class SQLiteConnector(DBTestConnector):
     def can_connect(self):
         try: import sqlite
         except: return False
         return True
     def testPool(self):
         [...]

class PyPgSQLADBAPITestCase(DBTestConnector):
   [similar...]

Then, with resources, the run order will be:
   DBTestConnector.setUpClass. DEATH.

As opposed to
   SQLiteConnector.setUpClass
   SQLiteConnector. testPool
   PyPgSQLADBAPITestCase.setUpClass
   PyPgSQLADBAPITestCase. testPool

 From looking at twisted code, setUpClass is hardly ever shared via  
inheritance, and in the few places it is, none of them will be helped:
1) OldCredTestCase - calls warnings.filterWarnings, fast, also should  
be using suppress
2) SignalMixin, shouldn't exist
3) TLSTestCase, calls log.ignoreErrors, fast
4) DBTestConnector, uses attributes of derived classes, will break
5) CFTPClientTestBase, might actually be useful to only call once,  
except that all subclasses override setUpClass anyways.

James



From jml at mumak.net  Sun Nov 13 02:29:40 2005
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 13 Nov 2005 20:29:40 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
References: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
Message-ID: <d06a5cd30511130129h1290f853o@mail.gmail.com>

On 13/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sun, 13 Nov 2005 12:33:41 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> >> On Nov 12, 2005, at 4:34 PM, Jonathan Lange wrote:
> >> > On 13/11/05, James Y Knight <foom at fuhm.net> wrote:
> >> >>
> >> >> Maybe this is a stupid question, but I'm confused as to why the
> >> >> implementation isn't straightforward, something along the lines of
> >> >> the following:
> >> >>
> >> >> for each module to test:
> >> >>    for each class that is a subclass of TestCase in module:
> >> >>      testCase = class()
> >> >>      testCase.setUpClass()
> >> >>      for each method in testCase:
> >> >>        testCase.setUp()
> >> >>        testCase.method()
> >> >>        testCase.tearDown()
> >> >>      testCase.tearDownClass()
> >> >>
> >> >> Now I now it has to be somewhat more complicated, due to error
> >> >> handling, deferred handling, suppress, etc, but it does seem like
> >> >> that would be the outline...can it not be?
> >> >>
> >> >
> >> > The short answer: An instance of a TestCase subclass represents a
> >> > single test.
> >>
> >> But not to the user...if I set attributes on the instance, they stay
> >> set across all test methods.
> >
> >This is a bug, not a feature.
>
> Why is it a bug?
>

Given that we are the ones with the non-standard behaviour, I'd like
to know why it's considered a feature.



From warner at lothar.com  Sun Nov 13 12:15:56 2005
From: warner at lothar.com (Brian Warner)
Date: Sun, 13 Nov 2005 11:15:56 -0800 (PST)
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
Message-ID: <20051113.111556.96642233.warner@lothar.com>

>>This is a bug, not a feature.
>
> Why is it a bug?

I've been bitten by this behavior.. basically it means that the TestCase's
__init__ method is not invoked for each test method, so you have to remember
to clear status flags (say, things that are set from a Deferred callback,
like maybe a .oopsSomethingFailed flag) in setUp() rather than just
initialize them in __init__ . The annoying thing is that it (the __init__
approach) works fine when you run the tests one at a time, which I frequently
do as I set up a brand new test. It only breaks when you run multiple tests,
and even then only when the leftover results of one test get interpreted by a
later one.

I think part of the "clean all lingering state after every test" philosophy
should include cleaning attributes from the test methods themselves (or just
not re-using those objects).

That said, I still want a place to amortize expensive setup across multiple
tests. The buildbot tests, for example, have about half a dozen tests for
each supported version control system. There is a module-level check that
sees which ones you have installed (arch, baz, cvs, svn, darcs), then sets
some flags which cause certain tests to be run or skipped. I don't want to
re-do these checks for each test method. It may work to re-do them for each
TestCase class (say, the setUpClass for the SVN TestCase class checks to see
if SVN is available), but for code factoring purposes there might be multiple
SVN TestCase classes, and it would be nice to avoid duplicate checks.

Incidentally, these checks are the only remaining use of deferredResult() in
the buildbot test suite, at least when it is run against Twisted-2.0 or
newer, because they were originally run at import time. In the current code,
they are performed by the first setUpClass that gets run, and the results are
stashed in a module-level global to avoid running them again. If I were
confident that all supported (by buildbot) versions of Twisted allowed
setUpClass to return a Deferred, I could get rid of that last
deferredResult() call.

cheers,
 -Brian



From jml at mumak.net  Sun Nov 13 14:10:08 2005
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 14 Nov 2005 08:10:08 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
References: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
Message-ID: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>

On 13/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sun, 13 Nov 2005 12:33:41 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >This is a bug, not a feature.
>
> Why is it a bug?
>

If your test case (i.e. test method) uses attributes on self, the only
way to guarantee they'll be there is to define them in setUp --
whether in Trial or pyunit. If they aren't defined in setUp, then they
won't be there in pyunit, and they *might* be there in Trial -- it
will depend on the command line options. [Proofs attached].

jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trial-attrs.py
Type: application/octet-stream
Size: 589 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20051114/3ced12ab/attachment-0002.obj>

From mslimmer at csbuilders.net  Mon Nov 14 00:20:02 2005
From: mslimmer at csbuilders.net (Max Slimmer)
Date: Sun, 13 Nov 2005 23:20:02 -0800
Subject: [Twisted-Python] How to talk to IM's 
Message-ID: <FHEKLMLGOFBCCMNGMAEJOEDMDDAA.mslimmer@csbuilders.net>

I am trying to get into twisted, I have gone through the examples and have
purchased and read most of the book, but am still having problems
understanding just how things hang together. Any pointers to other sample
code, or documentation would be great.

What I am trying to do is to use the WORDS modules and be able to connect to
various IM servers and through them to known IM users.  I have gotten the
oscardemo to work connecting to ICQ, if I log in as user who is on another
users buddy list that user sees the demo logon and then I can send messages
to the demo which in turn echos the messages back.  All good.

Now I want to run another module in the reactor which can have access to the
IM (oscar) module and use it to send messages to some given IM client.  I am
having difficulty understanding how to get from one module to the other.
The oscardemo is initiated with protocol.ClientCreator and that returns a
deferred, I can then pass the deferred into the factory of my control module
and have access to it, but I don't know if that will help. It seems I need
access to the BOSconnection object in order to call its methods, but maybe I
need to re code the demo to use defereds and don't quit know where / how to
do that either.

I would like to be able to connect to twisted say with telnet to a command
module, and have it initiate a chat session in the IM module, it seems that
I only need a single instance of the IM module, and then a means to send
messages to it and get received messages from it and pass them back to some
instance of command module.

Any help, pointers to docs or good sample code would be much appreciated.

thanks,
max
--
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.362 / Virus Database: 267.13.0/167 - Release Date: 11/11/2005




From Henning.Ramm at mediapro-gmbh.de  Mon Nov 14 02:44:55 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 14 Nov 2005 10:44:55 +0100
Subject: [Twisted-Python] Traceback bug?
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5E3@exchange-03.suedkurier.de>

This looks like a problem of Twisted's Failure:

    tb = a.getTraceback()
  File "C:\PROGRA~1\Python\Lib\SITE-P~1\twisted\python\failure.py", line 312, in getTraceback
    self.printTraceback(file=io, elideFrameworkCode=elideFrameworkCode, detail=detail)
exceptions.TypeError: printTraceback() got an unexpected keyword argument 'detail'

Should I file a bug, or is it my fault?


Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From itamar at itamarst.org  Mon Nov 14 10:48:11 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Nov 2005 12:48:11 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
References: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
	<d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
Message-ID: <1131990492.9192.4.camel@localhost.localdomain>

On Mon, 2005-11-14 at 08:10 +1100, Jonathan Lange wrote:

> If your test case (i.e. test method) uses attributes on self, the only
> way to guarantee they'll be there is to define them in setUp --
> whether in Trial or pyunit. If they aren't defined in setUp, then they
> won't be there in pyunit, and they *might* be there in Trial -- it
> will depend on the command line options. [Proofs attached].

pyunit compatability should not be a goal for trial unless, as I've said
before, you can get pyunit to support the reactor-running policy trial
ought to have, i.e. more or less reactor.run() only once and
reactor.stop() when all tests are done.  

If pyunit can't do that, there's no point even thinking about
compatability, since pyunit will never be able to run trial tests
correctly anyway.




From exarkun at divmod.com  Mon Nov 14 12:48:38 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 14 Nov 2005 14:48:38 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
Message-ID: <20051114194838.10365.1888130129.divmod.quotient.7675@ohm>

On Mon, 14 Nov 2005 08:10:08 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 13/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Sun, 13 Nov 2005 12:33:41 +1100, Jonathan Lange <jml at mumak.net> wrote:
>> >This is a bug, not a feature.
>>
>> Why is it a bug?
>>
>
>If your test case (i.e. test method) uses attributes on self, the only
>way to guarantee they'll be there is to define them in setUp --
>whether in Trial or pyunit. If they aren't defined in setUp, then they
>won't be there in pyunit, and they *might* be there in Trial -- it
>will depend on the command line options. [Proofs attached].

This does not surprise me.  I guess it surprised Brian, but presumably he's learned his lesson now ;)  It seems to me the way it *should* work.  At the very least, it's the way it has always worked, to the best of my understanding.  Perhaps documentation on this topic is lacking, but that suggests to me that we should improve the documentation, not that we should change the mechanism to operate in a different, incompatible (probably also undocumented ;) manner.

Looking through Twisted's test suite, I don't see a single TestCase subclass which defines __init__.

So... I still don't get how it's a bug.

Jean-Paul



From jml at mumak.net  Mon Nov 14 15:27:28 2005
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 15 Nov 2005 09:27:28 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <1131990492.9192.4.camel@localhost.localdomain>
References: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
	<d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
	<1131990492.9192.4.camel@localhost.localdomain>
Message-ID: <d06a5cd30511141427p107ade96q@mail.gmail.com>

On 15/11/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Mon, 2005-11-14 at 08:10 +1100, Jonathan Lange wrote:
>
> > If your test case (i.e. test method) uses attributes on self, the only
> > way to guarantee they'll be there is to define them in setUp --
> > whether in Trial or pyunit. If they aren't defined in setUp, then they
> > won't be there in pyunit, and they *might* be there in Trial -- it
> > will depend on the command line options. [Proofs attached].
>
> pyunit compatability should not be a goal for trial unless, as I've said
> before, you can get pyunit to support the reactor-running policy trial
> ought to have, i.e. more or less reactor.run() only once and
> reactor.stop() when all tests are done.
>

Sorry, it seems I gave the wrong emphasis. The thrust of my post was
intended to be this:

There is *only one* way to guarantee attributes of self for your test
case: Define them in setUp.
pyunit makes this explicit.  Trial makes it a matter of chance.  This
is a contrast, not a compatibility point.

Unit tests should be self-contained *units*.  They should be isolated
from one another, and they should be reproducable.  The order in which
tests are run should have no bearing on their success or failure.

jml



From jml at mumak.net  Mon Nov 14 15:31:17 2005
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 15 Nov 2005 09:31:17 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051114194838.10365.1888130129.divmod.quotient.7675@ohm>
References: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
	<20051114194838.10365.1888130129.divmod.quotient.7675@ohm>
Message-ID: <d06a5cd30511141431l67f79963q@mail.gmail.com>

On 15/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Mon, 14 Nov 2005 08:10:08 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >On 13/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> >> On Sun, 13 Nov 2005 12:33:41 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >> >This is a bug, not a feature.
> >>
> >> Why is it a bug?
> >>
> >
> >If your test case (i.e. test method) uses attributes on self, the only
> >way to guarantee they'll be there is to define them in setUp --
> >whether in Trial or pyunit. If they aren't defined in setUp, then they
> >won't be there in pyunit, and they *might* be there in Trial -- it
> >will depend on the command line options. [Proofs attached].
>
> This does not surprise me.  I guess it surprised Brian, but presumably he's learned his lesson now ;)  It seems to me the way it *should* work.  At the very least, it's the way it has always worked, to the best of my understanding.  Perhaps documentation on this topic is lacking, but that suggests to me that we should improve the documentation, not that we should change the mechanism to operate in a different, incompatible (probably also undocumented ;) manner.

It surprised Brian because every other unit testing framework built on
xUnit behaves differently.

Also, how would not sharing attributes be incompatible?

> Looking through Twisted's test suite, I don't see a single TestCase subclass which defines __init__.

The relevance escapes me.

> So... I still don't get how it's a bug.
>

It's not a bug per se; it's a bad feature.  Please forgive me for
using inaccurate idioms.

cheers,
jml



From andrew-twisted at puzzling.org  Mon Nov 14 18:09:16 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 15 Nov 2005 12:09:16 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051114194838.10365.1888130129.divmod.quotient.7675@ohm>
References: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
	<20051114194838.10365.1888130129.divmod.quotient.7675@ohm>
Message-ID: <20051115010916.GA4905@home.puzzling.org>

On Mon, Nov 14, 2005 at 02:48:38PM -0500, Jean-Paul Calderone wrote:
> On Mon, 14 Nov 2005 08:10:08 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >
> >If your test case (i.e. test method) uses attributes on self, the only
> >way to guarantee they'll be there is to define them in setUp --
> >whether in Trial or pyunit. If they aren't defined in setUp, then they
> >won't be there in pyunit, and they *might* be there in Trial -- it
> >will depend on the command line options. [Proofs attached].
> 
> This does not surprise me.  I guess it surprised Brian, but presumably he's 
> learned his lesson now ;)  It seems to me the way it *should* work.  At the 

FWIW, it surprised me.

-Andrew.




From itamar at itamarst.org  Tue Nov 15 10:28:24 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 15 Nov 2005 12:28:24 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <20051115010916.GA4905@home.puzzling.org>
References: <d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
	<20051114194838.10365.1888130129.divmod.quotient.7675@ohm>
	<20051115010916.GA4905@home.puzzling.org>
Message-ID: <1132075704.9307.1.camel@localhost.localdomain>

On Tue, 2005-11-15 at 12:09 +1100, Andrew Bennetts wrote:
> On Mon, Nov 14, 2005 at 02:48:38PM -0500, Jean-Paul Calderone wrote:
> > On Mon, 14 Nov 2005 08:10:08 +1100, Jonathan Lange <jml at mumak.net> wrote:
> > >
> > >If your test case (i.e. test method) uses attributes on self, the only
> > >way to guarantee they'll be there is to define them in setUp --
> > >whether in Trial or pyunit. If they aren't defined in setUp, then they
> > >won't be there in pyunit, and they *might* be there in Trial -- it
> > >will depend on the command line options. [Proofs attached].
> > 
> > This does not surprise me.  I guess it surprised Brian, but presumably he's 
> > learned his lesson now ;)  It seems to me the way it *should* work.  At the 
> 
> FWIW, it surprised me.

And reading that over again, yeah, that's surprising. I would expect
setupClass to always be called before a test runs, however it was
called.




From exarkun at divmod.com  Tue Nov 15 11:23:08 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 15 Nov 2005 13:23:08 -0500
Subject: [Twisted-Python] Traceback bug?
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB5E3@exchange-03.suedkurier.de>
Message-ID: <20051115182308.10365.517948805.divmod.quotient.8120@ohm>

On Mon, 14 Nov 2005 10:44:55 +0100, henning.ramm at mediapro-gmbh.de wrote:
>This looks like a problem of Twisted's Failure:
>
>    tb = a.getTraceback()
>  File "C:\PROGRA~1\Python\Lib\SITE-P~1\twisted\python\failure.py", line 312, in getTraceback
>    self.printTraceback(file=io, elideFrameworkCode=elideFrameworkCode, detail=detail)
>exceptions.TypeError: printTraceback() got an unexpected keyword argument 'detail'
>
>Should I file a bug, or is it my fault?

You didn't say what version of Twisted you're using or how you caused this to happen, but it looks to me like a bug that has been fixed already.  Try with 2.1 if you're using 2.0, or trunk if you're using 2.1.  If it doesn't go away, then file a bug.

Jean-Paul



From exarkun at divmod.com  Tue Nov 15 11:53:24 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 15 Nov 2005 13:53:24 -0500
Subject: [Twisted-Python] trial setUp/tearDown behavior
In-Reply-To: 0
Message-ID: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>

To summarize the thread "Re: [Twisted-commits] r15100 - So I really do want this stuff":

me:
Why add testresource?

jml:
So I can reimplement setUpClass/setUp/tearDown/tearDownClass to not be broken.

james:
Can't you just call the functions in the right order?

jml:
No, since they have no shared object on which to operate.

james:
The application-developer thinks the TestCase instance is shared.

jml:
The application-developer is mistaken.  Also, using testresource will be more efficient.  Also, you have to set up your class with setUp, not __init__.

james:
That optimization changes semantics and breaks several Twisted TestCases.

me:
It does not seem surprising that setUp is for setting things up.

chorus:
It is surprising that setUp is for setting things up.

jml:
Using the TestCase instance as a location for shared state violates the unit-ness of the tests.


So, hopefully we're all caught up and have a clearer picture of what the problems which need to be solved are.

It seems as though using testresource to optimize setup/teardown isn't viable at this point, since it breaks tests in Twisted.  Maybe we can come up with a solution for this.

A main problem to coming to some agreement here seems to be that a lot of people are assuming they know how trial deals with shared state (or how trial should deal with shared state), but I haven't seen anyone explicitly spell this out yet.  Doing this might be a good first step to making further progress.



From jml at mumak.net  Tue Nov 15 17:02:53 2005
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 16 Nov 2005 11:02:53 +1100
Subject: [Twisted-Python] trial setUp/tearDown behavior
In-Reply-To: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
References: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
Message-ID: <d06a5cd30511151602o53e5d572l@mail.gmail.com>

On 16/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> To summarize the thread "Re: [Twisted-commits] r15100 - So I really do want this stuff":
>

Thanks for the summary -- it's helpful and I like it.

> me:
> It does not seem surprising that setUp is for setting things up.
>
> chorus:
> It is surprising that setUp is for setting things up.
>

It seems surprising that you chose this way of summarising.
Rather, I'd say "It does not seem surprising that Trial shares state
between test cases." / "It is surprising that Trial shares state
between test cases"

> A main problem to coming to some agreement here seems to be that a lot of people are assuming they know how trial deals with shared state (or how trial should deal with shared state), but I haven't seen anyone explicitly spell this out yet.  Doing this might be a good first step to making further progress.

A worthy thought, and most likely right.

Thanks again for the summary.
jml



From foom at fuhm.net  Wed Nov 16 00:00:24 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 16 Nov 2005 00:00:24 -0700
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1EcHHM-0000Gz-00@pyramid.twistedmatrix.com>

KIND == 'create'
Bug summary
______________________
Since 2005-11-09 07:00:01.570000:
 Bugs opened: 14   Bugs closed: 11   Total open bugs: 483 (+3)
  Urgent: 1 (+0)
  Bug: 226 (-5)
  Feature: 173 (+4)
  Wish: 83 (+4)

New / Reopened Bugs
______________________
                    ==== Urgent ====
[CORE] "Sumo" is confusing and unnecessary  (3 days ago)
       http://twistedmatrix.com/bugs/issue1331 opened by exarkun

                    ==== Bug ====
[BACKPORT, CORE] FTP server does not work with ange-ftp  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1332 opened by exarkun

IOCP AcceptExOp.ovDone not called when expected  (4 days ago)
       http://twistedmatrix.com/bugs/issue1326 opened by justinj

document reactor reentrancy policy  (5 days ago)
       http://twistedmatrix.com/bugs/issue1323 opened by justinj

[CORE, TESTS] twisted.test.test_udp.testRebind makes no sense  (2 weeks ago)
CLOSED http://twistedmatrix.com/bugs/issue1295 opened by exarkun

                    ==== Feature ====
[TRIAL] Custom Trial reactor to track resources and handle cleanup  (yesterday)
       http://twistedmatrix.com/bugs/issue1334 opened by jml

[PATCH, sorta] Socks V5 functionality  (3 days ago)
       http://twistedmatrix.com/bugs/issue1330 opened by jadestorm

[CONCH] [patch] Performance of Conch/SSH  (5 days ago)
       http://twistedmatrix.com/bugs/issue1325 opened by cooz

[CORE, PB] Cacheable/RemoteCache does not work with new style classes  (5 days ago)
       http://twistedmatrix.com/bugs/issue1324 opened by karlb

                    ==== Wish ====
[TRIAL] unittest.main()  (4 days ago)
       http://twistedmatrix.com/bugs/issue1329 opened by jml

[CORE, TRIAL] twistd and trial --help lists all reactors, regardless of OS  (4 days ago)
       http://twistedmatrix.com/bugs/issue1327 opened by PenguinOfDoom

[FTP] Survey existing FTP servers and clients to figure out how LIST works  (2 days ago)
       http://twistedmatrix.com/bugs/issue1333 opened by exarkun

[DOCUMENTATION, TRIAL] People keep asking about _trial_temp  (4 days ago)
       http://twistedmatrix.com/bugs/issue1328 opened by jml

multicast support in iocpreactor  (6 days ago)
       http://twistedmatrix.com/bugs/issue1322 opened by ghazel

Bugs Closed
______________________
                    ==== Urgent ====
[CORE, TESTS, TRIAL] trial doesn't run test suite all the way on win32eventreactor  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1306 opened by exarkun, closed by jml

                    ==== Bug ====
socket.error: (53, 'Software caused connection abort')  (1 month ago)
       http://twistedmatrix.com/bugs/issue1274 opened by ghazel, closed by teratorn

[CORE, TRIAL] trial --until-failure is broken  (1 month ago)
       http://twistedmatrix.com/bugs/issue1263 opened by exarkun, closed by jml

[CORE, TRIAL] Unexpected successes are not reported in the summary section of trial  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1293 opened by glyph, closed by jml

[TRIAL] trial shouldn't print ascii color codes on Windows  (1 week ago)
       http://twistedmatrix.com/bugs/issue1316 opened by justinj, closed by jml

[BACKPORT, CORE] FTP server does not work with ange-ftp  (2 days ago)
       http://twistedmatrix.com/bugs/issue1332 opened by exarkun, closed by <unknown>

[CORE, WIN32] iocpreactor (at least) breaks event concept, leads to crashes  (1 month ago)
       http://twistedmatrix.com/bugs/issue1240 opened by ghazel, closed by justinj

IOCP dataReceived called after connectionLost  (7 days ago)
       http://twistedmatrix.com/bugs/issue1321 opened by justinj, closed by justinj

[CORE, WIN32] iocpreator can drop a listening socket by mistake  (1 month ago)
       http://twistedmatrix.com/bugs/issue1244 opened by ghazel, closed by justinj

[CORE, TESTS] twisted.test.test_udp.testRebind makes no sense  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1295 opened by exarkun, closed by exarkun

                    ==== Wish ====
[WIN32] Implement spawnProcess for IOCP reactor  (6 months ago)
       http://twistedmatrix.com/bugs/issue1008 opened by justinj, closed by justinj




From Henning.Ramm at mediapro-gmbh.de  Wed Nov 16 02:04:55 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 16 Nov 2005 10:04:55 +0100
Subject: [Twisted-Python] Traceback bug?
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5EC@exchange-03.suedkurier.de>

>>This looks like a problem of Twisted's Failure:
>>Should I file a bug, or is it my fault?
>
>You didn't say what version of Twisted you're using or how you 
>caused this to happen, but it looks to me like a bug that has 
>been fixed already.  Try with 2.1 if you're using 2.0, or 
>trunk if you're using 2.1.  If it doesn't go away, then file a bug.

Sorry, I reckognized that I forgot all data after I posted the mail.
Yes, I'm still on 2.0 on Win, because I wanted to stick to the binary installers.
But, however, I can avoid the bug, and my whole project including my job is on being dropped...

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From moof at metamoof.net  Wed Nov 16 07:57:45 2005
From: moof at metamoof.net (Moof)
Date: Wed, 16 Nov 2005 15:57:45 +0100
Subject: [Twisted-Python] trial setUp/tearDown behavior
In-Reply-To: <d06a5cd30511151602o53e5d572l@mail.gmail.com>
References: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
	<d06a5cd30511151602o53e5d572l@mail.gmail.com>
Message-ID: <437B48E9.5000902@metamoof.net>

Jonathan Lange wrote:
> It seems surprising that you chose this way of summarising.
> Rather, I'd say "It does not seem surprising that Trial shares state
> between test cases." / "It is surprising that Trial shares state
> between test cases"
> 
>> A main problem to coming to some agreement here seems to be that a lot of people are assuming they know how trial deals with shared state (or how trial should deal with shared state), but I haven't seen anyone explicitly spell this out yet.  Doing this might be a good first step to making further progress.
> 
> A worthy thought, and most likely right.

Put like that, my vote is fot xUnit (and everything else) convention of
using setUp and tearDown to set state for each test within a TestCase, and
setUpClass and tearDownClass to set state for the TestCase object.
setUpClass is not a pyUnit convention, but the various additions I've seen
all seem to implement it.

How many unit tests would be affected by such a change?

Moof
-- 
Giles Antonio Radford, alias Moof
"Too old to be a chicken and too young to be a dirty old man"
Serving up my ego over at <http://metamoof.net/>



From Henning.Ramm at mediapro-gmbh.de  Wed Nov 16 09:49:36 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 16 Nov 2005 17:49:36 +0100
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5F1@exchange-03.suedkurier.de>

Hi there!

I get the following traceback while trying to connect to a server via conch.ssh:

--- * ---

starting service ssh-userauth

Traceback (most recent call last):
--- <exception caught here> ---
  File "D:\Python24\lib\site-packages\twisted\internet\selectreactor.py", line 139, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "D:\Python24\lib\site-packages\twisted\internet\tcp.py", line 351, in doRead
    return self.protocol.dataReceived(data)
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\transport.py", line 182, in dataReceived
    f(packet[1:])
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\transport.py", line 591, in ssh_SERVICE_ACCEPT
    self.setService(self.instance)
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\transport.py", line 219, in setService
    self.service.serviceStarted()
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\userauth.py", line 220, in serviceStarted
    self.askForAuth('none', '')
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\userauth.py", line 224, in askForAuth
    self.transport.sendPacket(MSG_USERAUTH_REQUEST, NS(self.user) + \
  File "D:\Python24\lib\site-packages\twisted\conch\ssh\transport.py", line 107, in sendPacket
    packet = struct.pack('!LB', totalSize+lenPad-4, lenPad)+ \
  File "D:\Python24\lib\encodings\utf_8.py", line 16, in decode
    return codecs.utf_8_decode(input, errors, True)
exceptions.UnicodeDecodeError: 'utf8' codec can't decode bytes in position 2-3: invalid data

connection lost
Stopping factory <twisted.internet.protocol._InstanceFactory instance at 0x02D2B210>

--- * ---

I use password auth, and both user and password use only 7-bit ASCII chars.

It always happens on one machine, but works on another.
Both run a german Windows XP with Twisted 2.0, but this one has Python 2.4 and the other 2.3

Is it perhaps a known bug (and fixed in Twisted 2.1)?


Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From itamar at itamarst.org  Wed Nov 16 10:22:05 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 16 Nov 2005 12:22:05 -0500
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB5F1@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB5F1@exchange-03.suedkurier.de>
Message-ID: <1132161726.9018.1.camel@localhost.localdomain>

On Wed, 2005-11-16 at 17:49 +0100, Henning.Ramm at mediapro-gmbh.de wrote:

> I use password auth, and both user and password use only 7-bit ASCII chars.

Did you pass a string or a unicode string? I suspect this code path
would only be happy with regular strings (i.e. isinstance(s, str) ==
True).




From TimothyFitz at gmail.com  Wed Nov 16 13:36:46 2005
From: TimothyFitz at gmail.com (Timothy Fitz)
Date: Wed, 16 Nov 2005 15:36:46 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15100 - So I really do
	want this stuff
In-Reply-To: <1131990492.9192.4.camel@localhost.localdomain>
References: <d06a5cd30511121733s5ef06364l@mail.gmail.com>
	<20051113051203.10365.1020996324.divmod.quotient.7168@ohm>
	<d06a5cd30511131310j51c0d9dfu@mail.gmail.com>
	<1131990492.9192.4.camel@localhost.localdomain>
Message-ID: <972ec5bd0511161236k497748cbs2cf9c4390a7923c9@mail.gmail.com>

On 11/14/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> pyunit compatability should not be a goal for trial unless, as I've said
> before, you can get pyunit to support the reactor-running policy trial
> ought to have [snip]
> If pyunit can't do that, there's no point even thinking about
> compatability, since pyunit will never be able to run trial tests
> correctly anyway.

You're only considering running twisted based tests from pyunit. I've
had a couple cases where migrating tests from a non-twisted project
should've been find-replace for the import line, but they weren't
because of small differences in API and semantics. Is this not a valid
use case?



From cce at clarkevans.com  Wed Nov 16 14:29:28 2005
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 16 Nov 2005 16:29:28 -0500
Subject: [Twisted-Python] twistd -noy unable to cancel using CTRL+C when
	using threads
Message-ID: <20051116212928.GA9093@prometheusresearch.com>

Hello.  The attached example works properly when called from

   twistd -nox test.py

when one is not using threads.  However, as soon as thread are
introduced, you can no longer use CTRL+C to kill the process.  I'm
running FreeBSD 5.3-RELEASE and Python 2.4.1

Best,

Clark
-------------- next part --------------
from twisted.internet import reactor, defer
from twisted.web2 import server, http, resource, channel

class Toplevel(resource.Resource):
  addSlash = True
  def render(self, ctx):
    return http.Response(stream="Hello monkey!")

# Standard twisted application Boilerplate
from twisted.application import service, strports
application = service.Application("demoserver")

def startup(application):
    site = server.Site(Toplevel())
    s = strports.service('tcp:8080', channel.HTTPFactory(site))
    s.setServiceParent(application)

d = defer.Deferred()
d.addCallback(lambda _: startup(application))

if 0:
    # this works properly
    reactor.callLater(1, lambda: d.callback(None))
else:
    # this does not, with or without the init()
    #from twisted.python import threadable
    #threadable.init()
    def block(): 
        import time
        time.sleep(2)
        reactor.callFromThread(d.callback,None)
    reactor.callInThread(block)


From andrew-twisted at puzzling.org  Wed Nov 16 15:52:24 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 17 Nov 2005 09:52:24 +1100
Subject: [Twisted-Python] trial setUp/tearDown behavior
In-Reply-To: <437B48E9.5000902@metamoof.net>
References: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
	<d06a5cd30511151602o53e5d572l@mail.gmail.com>
	<437B48E9.5000902@metamoof.net>
Message-ID: <20051116225224.GA20696@home.puzzling.org>

On Wed, Nov 16, 2005 at 03:57:45PM +0100, Moof wrote:
> Jonathan Lange wrote:
[...]
> 
> Put like that, my vote is fot xUnit (and everything else) convention of
> using setUp and tearDown to set state for each test within a TestCase, and
> setUpClass and tearDownClass to set state for the TestCase object.
> setUpClass is not a pyUnit convention, but the various additions I've seen
> all seem to implement it.

I don't understand your suggestion.  As I understand it, in xUnit, a TestCase is
instantiated for every test* method, and setUp/tearDown called for each instance
(around the calling of the actual test method).  So I'm not sure what you mean
by "setUpClass and tearDownClass to set state for the TestCase object."

-Andrew.




From Henning.Ramm at mediapro-gmbh.de  Thu Nov 17 03:58:11 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Thu, 17 Nov 2005 11:58:11 +0100
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5F2@exchange-03.suedkurier.de>

>> I use password auth, and both user and password use only 
>7-bit ASCII chars.
>
>Did you pass a string or a unicode string? I suspect this code path
>would only be happy with regular strings (i.e. isinstance(s, str) ==
>True).

Thank you for the hint - 'str' at every place where data is sent helped.
I'm glad I don't need any chars that aren't 7-bit ASCII.
Perhaps conch could be teached to handle Unicode strings, too?

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From itamar at itamarst.org  Thu Nov 17 09:50:02 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 17 Nov 2005 11:50:02 -0500
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB5F2@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB5F2@exchange-03.suedkurier.de>
Message-ID: <1132246202.9007.3.camel@localhost.localdomain>

On Thu, 2005-11-17 at 11:58 +0100, Henning.Ramm at mediapro-gmbh.de wrote:

> Thank you for the hint - 'str' at every place where data is sent helped.
> I'm glad I don't need any chars that aren't 7-bit ASCII.
> Perhaps conch could be teached to handle Unicode strings, too?

I think you are a bit confused about the way Unicode works. A string
object is NOT "7-bit ASCII".

http://www.joelonsoftware.com/articles/Unicode.html is helpful.




From maciejka at tiger.com.pl  Thu Nov 17 15:13:03 2005
From: maciejka at tiger.com.pl (Maciek Kaminski)
Date: Thu, 17 Nov 2005 23:13:03 +0100
Subject: [Twisted-Python] Status of Deferred cancelation
Message-ID: <437D006F.40505@tiger.com.pl>

What is the status of issue 990 (http://twistedmatrix.com/bugs/issue990)?

Is it going to be merged into trunk?

Maciej Kaminski



From Henning.Ramm at mediapro-gmbh.de  Fri Nov 18 01:37:44 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Fri, 18 Nov 2005 09:37:44 +0100
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5F4@exchange-03.suedkurier.de>

>> I'm glad I don't need any chars that aren't 7-bit ASCII.
>> Perhaps conch could be teached to handle Unicode strings, too?
>
>I think you are a bit confused about the way Unicode works. A string
>object is NOT "7-bit ASCII".

Sorry, I really should know, using a lot of encodings all over the place...

But anyway, it would be nice if conch would handle unicode objects, too.

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From moof at metamoof.net  Fri Nov 18 02:37:47 2005
From: moof at metamoof.net (Moof)
Date: Fri, 18 Nov 2005 10:37:47 +0100
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB5F4@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB5F4@exchange-03.suedkurier.de>
Message-ID: <437DA0EB.2090005@metamoof.net>

Henning.Ramm at mediapro-gmbh.de wrote:
>>> I'm glad I don't need any chars that aren't 7-bit ASCII.
>>> Perhaps conch could be teached to handle Unicode strings, too?
>> I think you are a bit confused about the way Unicode works. A string
>> object is NOT "7-bit ASCII".
> 
> Sorry, I really should know, using a lot of encodings all over the place...
> 
> But anyway, it would be nice if conch would handle unicode objects, too.

If conch connects to an openssh server, how does it know what to do with the
unicode object? A unicode object is an abstraction that holds no place in a
network protocol. Correctly converting the string to unicode is something
you have to negotiate with your clients.

Moof
-- 
Giles Antonio Radford, alias Moof
"Too old to be a chicken and too young to be a dirty old man"
Serving up my ego over at <http://metamoof.net/>



From itamar at itamarst.org  Fri Nov 18 10:22:38 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 18 Nov 2005 12:22:38 -0500
Subject: [Twisted-Python] UnicodeDecodeError with twisted.conch.ssh client
In-Reply-To: <437DA0EB.2090005@metamoof.net>
References: <F92274058556DE42B94B148EEFB91839021CB5F4@exchange-03.suedkurier.de>
	<437DA0EB.2090005@metamoof.net>
Message-ID: <1132334558.9000.3.camel@localhost.localdomain>

On Fri, 2005-11-18 at 10:37 +0100, Moof wrote:

> If conch connects to an openssh server, how does it know what to do with the
> unicode object? A unicode object is an abstraction that holds no place in a
> network protocol. Correctly converting the string to unicode is something
> you have to negotiate with your clients.

Unless the protocol knows about Unicode and has an automated way of
dealing with it. ssh almost certainly doesn't, though, so it should
indeed not try to support unicode objexts.




From frank at chagford.com  Sun Nov 20 02:59:27 2005
From: frank at chagford.com (Frank Millman)
Date: Sun, 20 Nov 2005 11:59:27 +0200
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to use
	Twisted
Message-ID: <20051120095402.8522E3F434C@fcserver.chagford.com>

Hi all

I sent a post recently which explains my situation. I will recap briefly.

I am developing a multi-user accounting/business app, which is database
intensive. My current version runs on each client, and makes a direct
connection to the database. I want to change it to a server-based solution,
where the server connects to the database, and each client connects to the
server. Twisted lends itself to handling communication between the server
and client, and to queuing all the database commands.

I have spent some time trying to figure out how to change my program to work
in a Twisted fashion. I have made some progress, but now I have hit a
stumbling block. I am sure that the problem is more to do with my approach
than with Twisted, but it feels serious enough that I am leaning towards
abandoning this approach and reverting to a multi-threaded server. I don't
really want to do this, so I will explain my problem in the hope that
someone can suggest an easy solution, which does not involve a total rethink
of what I have come up with so far.

As mentioned above, my program is database intensive. I have built in the
ability to handle multiple table relationships, such as 'a customer record
must have a valid branch code, currency code, salesperson code, etc'. If the
user attempts to add or alter any of these fields, the program automatically
checks that the new value exists as a foreign key on the relevant table. For
this reason, and for a variety of other reasons, the program executes many
SQL commands 'behind the scenes', without the application layer being aware
of it. Each of these 'blocks' the program, but as the program runs on each
client, it does not matter, as the user has to wait for a response before
they can continue anyway.

Moving this concept onto Twisted does not seem to work, as it can be running
sessions for multiple users, and each 'block' will block the main loop,
resulting in a major performance hit. The correct solution, as I understand
it, is to change each SQL command to a deferred with a callback. I can do
this on the inner layers, where the actual SQL command is executed. But I
would also have to do it on each outer layer that calls a function which
'may' trigger a SQL command. There are many of these, and it goes to the
heart of my approach of hiding the underlying database complexity from the
application layer. Changing this feels like a daunting task, and frankly I
would not know where to start.

The alternative is to use a multi-threaded approach. In this case, I can
keep my existing approach largely unchanged, as it does not matter if one
thread blocks, the others will continue without being affected.

I don't know if I have explained myself very clearly, but if anyone has any
words of advice, I will be very grateful.

Thanks

Frank Millman




From Marcin.Kasperski at softax.com.pl  Sun Nov 20 04:44:40 2005
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Sun, 20 Nov 2005 12:44:40 +0100
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to
	use Twisted
In-Reply-To: <20051120095402.8522E3F434C@fcserver.chagford.com>
References: <20051120095402.8522E3F434C@fcserver.chagford.com>
Message-ID: <1132487080.20686.2.camel@pitagoras>

> Moving this concept onto Twisted does not seem to work, as it can be running
> sessions for multiple users, and each 'block' will block the main loop,
> resulting in a major performance hit. The correct solution, as I understand
> it, is to change each SQL command to a deferred with a callback. I can do
> this on the inner layers, where the actual SQL command is executed. But I
> would also have to do it on each outer layer that calls a function which
> 'may' trigger a SQL command. There are many of these, and it goes to the
> heart of my approach of hiding the underlying database complexity from the
> application layer. Changing this feels like a daunting task, and frankly I
> would not know where to start.

Not quite sure what exactly your code does, but what about taking a look
at twisted.enterprise.adbapi (and especially runInteraction)? Maybe
executing your code within runInteraction could be quick solution (in
fact the code will run in separate thread silently created by twisted
for you) - and then you could try to optimize things one by one.... 





From cce at clarkevans.com  Sun Nov 20 10:04:21 2005
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 20 Nov 2005 12:04:21 -0500
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to
	use Twisted
In-Reply-To: <20051120095402.8522E3F434C@fcserver.chagford.com>
References: <20051120095402.8522E3F434C@fcserver.chagford.com>
Message-ID: <20051120170421.GA6554@prometheusresearch.com>

Frank,

There are two approaches depending upon your database driver.  If you
have a driver that supports async queries (such as psycopg2) then it
won't block while waiting for the query results.  In this case, your
"execute query" just returns a Deferred; and when the driver is notified
that the results are available, the deferred's callback is executed.

The second approach, usable if you don't have an async driver (like
pyPgSQL) is to use runInteraction.  Basically, in this approach you
don't really get the advantages of Twisted's core event loop; since
you put most of your request handling code in the runInteraction,
which returns a Deferred when it is completed.   This is the approach
my current code uses; but back when I wrote it psycopg2 didn't exist.

The primary advantage in the latter case, over a multi-threaded server,
such as Webware (for example), is that you have access to all of the
wonderful protocol handlers and, IMHO, a stellar development team.
This latter point -- the people -- is the driving reason for me to
continue to use Twisted (as my work is also heavily database intensive).

Cheers,

Clark




From fairwinds at eastlink.ca  Sun Nov 20 20:13:48 2005
From: fairwinds at eastlink.ca (David Pratt)
Date: Sun, 20 Nov 2005 23:13:48 -0400
Subject: [Twisted-Python] Getting started with twisted
Message-ID: <D5A08481-5A3C-11DA-ADD9-000A27B3B070@eastlink.ca>

Hi. I am brand new to twisted and hoping to get my feet wet but need 
some help identifying the right products to use. I am also hoping 
someone can help point me to some code or an app that might have 
similar functionality to look at to see how things work.

I am currently building a pythonwx app and want twisted to communicate 
with a web server over ssl in REST style (HTTP 1.1) with PUT, GET etc.  
I am interested in sending and receiving requests in xml to synchronize 
web data with desktop app and to log activity of web server with 
desktop app as well.

Regards,
David



From warner at lothar.com  Mon Nov 21 00:02:54 2005
From: warner at lothar.com (Brian Warner)
Date: Sun, 20 Nov 2005 23:02:54 -0800 (PST)
Subject: [Twisted-Python] Unjelly - recursion limit reached
Message-ID: <20051120.230254.21604291.warner@lothar.com>

>>> This is a pretty scary limitation. Is anybody working on a non-
>>> recursion based version of jelly? Am I going to have to move to
>>> Stackless Python?

Sorry to respond to this so late.. my Twisted time has been awfully bursty
this month.

FWIW, newpb does not suffer from this sort of stack-frame limitation. Rather
than using the C/Python runtime stack to keep track of its current place in
the object graph, it maintains a "Slicer Stack" (and corresponding Unslicer
Stack on the receiving end), which is really just a list of Slicer/Unslicer
instances. Each edge of the object graph path (from the top-most
one-per-connection Root object down to the thing currently being serialized
or unserialized) gets a Slicer/Unslicer on this list. Ridiculously deep
object graphs (like the linked-list structure you describe) will consume heap
memory for this list, but not stack frames.

The maximum number of stack frames consumed is a constant, not affected by
the shape or complexity of the data being serialized. (I haven't measured it
but I'd guess it's less than a dozen frames). The runtime memory footprint is
roughly linear with the depth of the object graph. Each Slicer contains a
generator.. I don't know how much memory is consumed to maintain the state of
a typical Slicer, but I'm not sure I'd want a million of them.

> My object graph is a natural and clean data structure. I don't want  
> to lose that just because of limitations in my tools.

PB is all about transferring your existing object graph cleanly and
accurately. newpb just does it better than oldpb. Some of the limitations of
oldpb (well, really just that 640k string limit) are there to minimize the
damage if something goes really wrong (like you connect an HTTP client to the
PB socket, and it tries to interpret "GET HTTP/1.1 index.html" as a
bajillion-byte STRING token). newpb provides better ways to specify these
restrictions (the whole 'schema' approach), so there ought to be fewer
non-user-specified arbitrary limits.

That said, some graphs are more efficient to transfer than others. A linked
list of small integers will take about three times as many bytes to serialize
as a flat list, and will consume a far greater amount of memory while doing
so. The newpb Slicers are not clever enough to do tail-recursion.

> Is this currently being addressed or in a road map? Am I unknowingly  
> volunteering for it? :-o

Well, it sounds like you might be a great candidate for beta-testing newpb
:). Keep tuned to this channel for an alpha release announcement sometime
soon.

cheers,
 -Brian



From frank at chagford.com  Mon Nov 21 00:20:34 2005
From: frank at chagford.com (Frank Millman)
Date: Mon, 21 Nov 2005 09:20:34 +0200
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to
	useTwisted
In-Reply-To: <20051120095402.8522E3F434C@fcserver.chagford.com>
Message-ID: <20051121071508.3CDE23F4361@fcserver.chagford.com>

> 
> Hi all
> 

[snip]

> Moving this concept onto Twisted does not seem to work, as it 
> can be running sessions for multiple users, and each 'block' 
> will block the main loop, resulting in a major performance 
> hit. The correct solution, as I understand it, is to change 
> each SQL command to a deferred with a callback. I can do this 
> on the inner layers, where the actual SQL command is 
> executed. But I would also have to do it on each outer layer 
> that calls a function which 'may' trigger a SQL command. 
> There are many of these, and it goes to the heart of my 
> approach of hiding the underlying database complexity from 
> the application layer. Changing this feels like a daunting 
> task, and frankly I would not know where to start.
> 
> The alternative is to use a multi-threaded approach. In this 
> case, I can keep my existing approach largely unchanged, as 
> it does not matter if one thread blocks, the others will 
> continue without being affected.
> 

Thanks for the replies, Marcin and Clark.

I think you have helped to to see a solution, but I would like to clarify
it.

Take the following piece of pseudo code -

    def main():
        result = func1(...)
        do something with result

If func1 blocks, the entire program will be blocked until it returns.

The Twisted approach is -

    def main():
        deferred = func1(...).addCallback(doSomething)

    def doSomething(result):
        do something with result

Now the program will not block, but the key is that main() must return
immediately, thus returning control to Twisted's main loop.

I have many cases where I call a blocking function and wait for a result. I
had envisaged something like this -

Instead of

    def main():
        result1 = func1(...)
        do something with result1
        result2 = func2(...)
        do something with result2

do this

    def main():
        deferred = func1(...).addCallback(doSomething)

    def doSomething(result1):
        do something with result1
        deferred = func2(...).addCallback(doSomethingElse)

    def doSomethingElse(result2):
        do something with result2

If this was the correct approach, it would be a nightmare to go through all
my code and split up each call into a separate deferred and callback.

If I understand Marcin and Clark correctly, I should rather do it this way -

    def main():
        conn = adbapi.ConnectionPool(...)
        conn.runInteraction(main2)

    def main2():
        result1 = func1(...)
        do something with result1
        result2 = func2(...)
        do something with result2

This involves far fewer changes to my existing code, so I think I could
tackle this. As Marcin says, this is really a multi-threaded solution, so it
is a bit of a cheat, but it looks as if it will work.

Clark, I am using psycopg2, but if I make use of the feature you describe,
would I have to define a separate callback for every SQL command? If so, it
puts me back in my original nightmare scenario. Or have I missed the point?
An example of how I could use this would be very useful.

I hope this makes sense. Any comments will be much appreciated.

Thanks again

Frank




From Henning.Ramm at mediapro-gmbh.de  Mon Nov 21 02:45:27 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 21 Nov 2005 10:45:27 +0100
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app
	touseTwisted
Message-ID: <F92274058556DE42B94B148EEFB91839021CB5F8@exchange-03.suedkurier.de>

My actual project is similar:
Several different apps need a database connection, but instead I let them connect via Twisted PB to a Proxy that keeps the only db conn.
I fixed most of my troubles using Interaction and 'lock tables' in them (MySQL or at least the Python driver doesn't support real transactions).

example:

# self.dbpool = adbapi.ConnectionPool(self.dbApiName, **Conf)

    def remote_deleteOld(self, days=21):
        try:
            d = self.dbpool.runInteraction(self._deleteOld, days)
            d.addErrback(self.errorHandler, 'deleteOld', days)
            return d
        except Exception, ex:
            self.log.error(ex)
            return defer.fail(ex)

    def _deleteOld(self, txn, days):
        rows = [0,0,0,0]
	# lock tables 
        try:
            txn.execute("delete from t5 where t5_date < CURDATE() - INTERVAL %d DAY" % days)
            res = txn.fetchall()
        except _mysql_exceptions.Warning, text:
            self.log.info(text)
        if res: rows[3] = int(res[0][0])
	# ...
	# unlock tables
        return tuple(rows)

HTH

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From glyph at divmod.com  Mon Nov 21 07:31:51 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 21 Nov 2005 09:31:51 -0500
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to
	use Twisted
In-Reply-To: <20051120095402.8522E3F434C@fcserver.chagford.com>
Message-ID: <20051121143151.32735.1031649281.divmod.quotient.1061@ohm>



On Sun, 20 Nov 2005 11:59:27 +0200, Frank Millman <frank at chagford.com> wrote:

>Moving this concept onto Twisted does not seem to work, as it can be running
>sessions for multiple users, and each 'block' will block the main loop,
>resulting in a major performance hit. The correct solution, as I understand
>it, is to change each SQL command to a deferred with a callback. I can do
>this on the inner layers, where the actual SQL command is executed. But I
>would also have to do it on each outer layer that calls a function which
>'may' trigger a SQL command. There are many of these, and it goes to the
>heart of my approach of hiding the underlying database complexity from the
>application layer. Changing this feels like a daunting task, and frankly I
>would not know where to start.

The way I would probably work on an application that did this was making each *transaction* into something that ran in a thread and returned a Deferred, which would reduce the footprint of impacted code.  Each user-interface action can be encapsulated as a transaction, and then your code doesn't need to convert each function into a Deferred, just the top-level event handler which kicks off the transaction.

>The alternative is to use a multi-threaded approach. In this case, I can
>keep my existing approach largely unchanged, as it does not matter if one
>thread blocks, the others will continue without being affected.

In the case where you're turning each SQL statement into a Deferred, you're actually using threads anyway; each statement executes in a thread, then sends its result to the main loop.  The important thing when you turn a Twisted application into a multithreaded application is to have a stark distinction between code which runs in threads and code which runs in the main loop.  Code which runs in threads can't call Twisted functions (other than callFromThread), use Deferreds, etc.  It also should refer to as little state as possible, since if you can create isolated groups of objects in the main thread, you don't need to bother with locking as your blocking threaded code runs.



From glyph at divmod.com  Mon Nov 21 08:46:48 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 21 Nov 2005 10:46:48 -0500
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app to
	useTwisted
In-Reply-To: <20051121071508.3CDE23F4361@fcserver.chagford.com>
Message-ID: <20051121154648.32735.656622137.divmod.quotient.1081@ohm>



On Mon, 21 Nov 2005 09:20:34 +0200, Frank Millman <frank at chagford.com> wrote:

>If I understand Marcin and Clark correctly, I should rather do it this way -

Just in case it wasn't clear from my previous message, this is exactly the same thing that I meant, in more specific terms ;).



From phil at bubblehouse.org  Mon Nov 21 10:16:27 2005
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 21 Nov 2005 12:16:27 -0500
Subject: [Twisted-Python] unix signals and twistd
Message-ID: <6368BABC-9934-4160-9546-AECC49D18FFE@bubblehouse.org>

Hey all,

I've got a Twistd application that maintains a datafile separate from  
the serialized app stored in the .tap file. I've set it up to  
automatically load this file at startup, and save it at shutdown, but  
I'd like to implement a way to do incremental saves while the server  
is running.

The ideal setup would be to listen for a signal; I could then either  
run a cron script, or use some other external app. I've listened for  
signals in other python apps, but I thought I'd check to see if there  
was a preferred way to do it in Twisted.

Also, I know there are a number of signals that twistd itself listens  
for, and I think it'd probably be best if I stayed away from those. I  
know the man page for twistd says it listens for SIGUSR1/2, and  
obviously it catches SIGTERM; are there any others I've missed?

Thanks in advance,

-phil



From gds11561 at tj.sc.gov.br  Mon Nov 21 12:52:14 2005
From: gds11561 at tj.sc.gov.br (Gustavo Dagostin da Silva)
Date: Mon, 21 Nov 2005 17:52:14 -0200
Subject: [Twisted-Python] Get an object that provides an interface
Message-ID: <200511211752.14638.gds11561@tj.sc.gov.br>

Hello,

Is it possible to get an object that provides (from a class that implements) a 
interface without mentioning the class? In other words:


class ISomething(Interface):
	def method(self):
		""" Do something
		"""

class SomethingImplementor:
	implements(ISomething)

	def method(self):
		print "I exist!!"

obj = ISomething() 
# and obj gets an instance of "SomethingImplementor", without 
# mentioning it.

The documentation of component usage in twisted only mentions interfaces in 
the context where "Adapters" are needed.

Gustavo



From exarkun at divmod.com  Mon Nov 21 13:09:44 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 21 Nov 2005 15:09:44 -0500
Subject: [Twisted-Python] Get an object that provides an interface
In-Reply-To: <200511211752.14638.gds11561@tj.sc.gov.br>
Message-ID: <20051121200944.32735.1298740027.divmod.quotient.1144@ohm>

On Mon, 21 Nov 2005 17:52:14 -0200, Gustavo Dagostin da Silva <gds11561 at tj.sc.gov.br> wrote:
>Hello,
>
>Is it possible to get an object that provides (from a class that implements) a
>interface without mentioning the class? In other words:
>
>
>class ISomething(Interface):
>	def method(self):
>		""" Do something
>		"""
>
>class SomethingImplementor:
>	implements(ISomething)
>
>	def method(self):
>		print "I exist!!"
>
>obj = ISomething()
># and obj gets an instance of "SomethingImplementor", without
># mentioning it.
>
>The documentation of component usage in twisted only mentions interfaces in
>the context where "Adapters" are needed.

See the thread entitled "zope.interface calling an interface with no arguments" on the interface-dev list:

http://mail.zope.org/pipermail/interface-dev/2005-August/thread.html
http://mail.zope.org/pipermail/interface-dev/2005-September/thread.html

Jean-Paul



From frank at chagford.com  Mon Nov 21 21:43:48 2005
From: frank at chagford.com (Frank Millman)
Date: Tue, 22 Nov 2005 06:43:48 +0200
Subject: [Twisted-Python] Newbie - how to modify my db-intensive app
	touseTwisted
In-Reply-To: <20051121154648.32735.656622137.divmod.quotient.1081@ohm>
Message-ID: <20051122043814.35D643F434C@fcserver.chagford.com>

glyph wrote:

> 
> On Mon, 21 Nov 2005 09:20:34 +0200, Frank Millman 
> <frank at chagford.com> wrote:
> 
> >If I understand Marcin and Clark correctly, I should rather 
> do it this 
> >way -
> 
> Just in case it wasn't clear from my previous message, this 
> is exactly the same thing that I meant, in more specific terms ;).
> 

It was crystal clear, but I had already sent my reply before I saw your
message.

It is good to have confirmation that I am thinking along the right lines.

Many thanks

Frank




From dhess at verscend.com  Tue Nov 22 09:13:49 2005
From: dhess at verscend.com (David K. Hess)
Date: Tue, 22 Nov 2005 10:13:49 -0600
Subject: [Twisted-Python] Unjelly - recursion limit reached
In-Reply-To: <20051120.230254.21604291.warner@lothar.com>
References: <20051120.230254.21604291.warner@lothar.com>
Message-ID: <A9B0DB4C-E236-4019-A14D-3324FC2B5B74@verscend.com>


On Nov 21, 2005, at 1:02 AM, Brian Warner wrote:
>> Is this currently being addressed or in a road map? Am I unknowingly
>> volunteering for it? :-o
>
> Well, it sounds like you might be a great candidate for beta- 
> testing newpb
> :). Keep tuned to this channel for an alpha release announcement  
> sometime
> soon.

Thanks for the info, that's all good news. In the meantime, I've got  
my stacksize/recursion limits increased enough to handle what I'm  
going to run into for now.

We'd be happy to branch our code base and move it over to newpb to  
help you beta test.

> cheers,
>  -Brian

Thanks!

Dave



From dekonerding at lbl.gov  Tue Nov 22 09:48:01 2005
From: dekonerding at lbl.gov (David E. Konerding)
Date: Tue, 22 Nov 2005 08:48:01 -0800
Subject: [Twisted-Python] integrating threadedselectreactor w/ pygtk
Message-ID: <43834BC1.90205@lbl.gov>

Hi,

I am attempting to use the threadedselectreactor with pygtk.  I didn't
see a formula for using pygtk
w/ tsr, so this I came up with the code below.  From what I can tell,
pygtk lets you call GUI functions from any thread so long as the
gtk event loop lock is held, and there is no equivalent to "callFromThread".
The alternative seems to be to generate a signal in the CallAfter
callback and emit it, but I can't see why that
would be necessary.  Can anybody comment? 


from twisted.internet import threadedselectreactor
threadedselectreactor.install()
from twisted.internet import reactor

def CallAfter(func):
    gtk.threads_enter()
    func()
    gtk.threads_leave()
  
def foreignEventLoopStop():
    gtk.threads_enter()
    func()
    gtk.threads_leave()

def main():
    gtk.threads_init()
    gtk.gdk.threads_init()
    app = MyApp()
    reactor.interleave(CallAfter)
    reactor.addSystemEventTrigger('after', 'shutdown', foreignEventLoopStop)
    gtk.main()

main()

The problem is that if I send control-C to the console running
the application, I do get the following before my foreignEventLoop Stop

  File
"/home/dek/sw/i386/suse/9.3/pygtk/Python-2.4.2/lib/python2.4/site-packages/twisted/internet/base.py",
line 400, in _continueSystemEvent
    callable(*args, **kw)
  File
"/home/dek/sw/i386/suse/9.3/pygtk/Python-2.4.2/lib/python2.4/site-packages/twisted/internet/threadedselectreactor.py",
line 283, in _mainLoopShutdown
    self.workerThread.join()
  File
"/home/dek/sw/i386/suse/9.3/pygtk/Python-2.4.2/lib/python2.4/threading.py",
line 532, in join
    assert self is not currentThread(), "cannot join current thread"
exceptions.AssertionError: cannot join current thread


Therefore, I tried the following isntead:

def CallAfter(func):
    gobject.idle_add(func)

def foreignEventLoopStop():
    gobject.idle_add(gtk.main_quit)
   
def main():
    gobject.threads_init()
    gtk.threads_init()
    gtk.gdk.threads_init()
    myapp = App
    reactor.interleave(CallAfter)
    reactor.callWhenRunning(createShellServer)
    reactor.addSystemEventTrigger('after', 'shutdown', foreignEventLoopStop)
    gtk.main()
main()

And this seems to work perfectly.



From itamar at itamarst.org  Tue Nov 22 09:59:04 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 22 Nov 2005 11:59:04 -0500
Subject: [Twisted-Python] integrating threadedselectreactor w/ pygtk
In-Reply-To: <43834BC1.90205@lbl.gov>
References: <43834BC1.90205@lbl.gov>
Message-ID: <1132678745.8857.0.camel@localhost.localdomain>

On Tue, 2005-11-22 at 08:48 -0800, David E. Konerding wrote:

> I am attempting to use the threadedselectreactor with pygtk. 

Why? Twisted already has gtk2reactor that will provide much better
integration that tsr.




From dekonerding at lbl.gov  Tue Nov 22 10:14:50 2005
From: dekonerding at lbl.gov (David E. Konerding)
Date: Tue, 22 Nov 2005 09:14:50 -0800
Subject: [Twisted-Python] integrating threadedselectreactor w/ pygtk
In-Reply-To: <1132678745.8857.0.camel@localhost.localdomain>
References: <43834BC1.90205@lbl.gov>
	<1132678745.8857.0.camel@localhost.localdomain>
Message-ID: <4383520A.1020206@lbl.gov>

Itamar Shtull-Trauring wrote:

>On Tue, 2005-11-22 at 08:48 -0800, David E. Konerding wrote:
>
>  
>
>>I am attempting to use the threadedselectreactor with pygtk. 
>>    
>>
>
>Why? Twisted already has gtk2reactor that will provide much better
>integration that tsr.
>
>  
>
Hmm, I submitted bug repots on gtk2reactor a long time ago.  I had given
up checking on that bug after 6 months with nobody doing anything about
(other than replying to my mail from you telling me I was calling
time.sleep() from the twisted reactor thread when I wasn't).  Ahh, I see
that bug was closed about a year after I submitted it.

I guess my test case that I submitted for that bug works correctly now,
so it's time to start using the gtk2 reactor again.  Thanks.

Dave



From dekonerding at lbl.gov  Tue Nov 22 13:54:45 2005
From: dekonerding at lbl.gov (David E. Konerding)
Date: Tue, 22 Nov 2005 12:54:45 -0800
Subject: [Twisted-Python] patches to make gtk2manhole work with gtk2
Message-ID: <43838595.5070505@lbl.gov>

Hi, in attempting to use gtk2manhole I had some problems.  It looks like
it was written on a much older version of gtk2,
here are patches I applied (they are not complete, merely sufficient to
start the application):


Index: twisted/manhole/ui/gtk2manhole.py
===================================================================
--- twisted/manhole/ui/gtk2manhole.py   (revision 14819)
+++ twisted/manhole/ui/gtk2manhole.py   (working copy)
@@ -22,6 +22,7 @@
 
 # The pygtk.require for version 2.0 has already been done by the reactor.
 import gtk
+import gobject
 
 import code, types, inspect
 
@@ -159,7 +160,7 @@
         # Silly things, the TextView needs to update itself before it knows
         # where the bottom is.
         if self._willScroll is None:
-            self._willScroll = gtk.idle_add(self._scrollDown)
+            self._willScroll = gobject.idle_add(self._scrollDown)
 
     def _scrollDown(self, *unused):
         self.textView.scroll_to_iter(self.buffer.get_end_iter(), 0,
@@ -256,11 +257,12 @@
         try:
             c = code.compile_command(text)
         except SyntaxError, e:
+            buffer = self.textView.get_buffer()
             # This could conceivably piss you off if the client's python
             # doesn't accept keywords that are known to the manhole's
             # python.
             point = buffer.get_iter_at_line_offset(e.lineno, e.offset)
-            buffer.place(point)
+            buffer.place_cursor(point)
             # TODO: Componentize!
             self.toplevel.output.append(str(e), "exception")
         except (OverflowError, ValueError), e:
Index: twisted/manhole/ui/pywidgets.py
===================================================================
--- twisted/manhole/ui/pywidgets.py     (revision 14819)
+++ twisted/manhole/ui/pywidgets.py     (working copy)
@@ -22,12 +22,12 @@
         return 1
 
 
-class InputText(gtk.GtkText):
+class InputText(gtk.TextView):
     linemode = 0
     blockcount = 0
 
     def __init__(self, toplevel=None):
-        gtk.GtkText.__init__(self)
+        gtk.Text.__init__(self)
         self['name'] = 'Input'
         self.set_editable(gtk.TRUE)
         self.connect("key_press_event", self.processKey)
@@ -155,11 +155,11 @@
         f.close()
 
 
-class Interaction(gtk.GtkWindow):
+class Interaction(gtk.Window):
     titleText = "Abstract Python Console"
 
     def __init__(self):
-        gtk.GtkWindow.__init__(self, gtk.WINDOW_TOPLEVEL)
+        gtk.Window.__init__(self, gtk.WINDOW_TOPLEVEL)
         self.set_title(self.titleText)
         self.set_default_size(300, 300)
         self.set_name("Manhole")
@@ -197,11 +197,11 @@
             self.localNS["_"] = val
             self.output.console([("result", repr(val) + "\n")])
 
-class OutputConsole(gtk.GtkText):
+class OutputConsole(gtk.TextView):
     maxBufSz = 10000
 
     def __init__(self, toplevel=None):
-        gtk.GtkText.__init__(self)
+        gtk.TextView.__init__(self)
         self['name'] = "Console"
         gtkutil.defocusify(self)
         #self.set_word_wrap(gtk.TRUE)
Index: twisted/manhole/ui/spelunk_gnome.py
===================================================================
--- twisted/manhole/ui/spelunk_gnome.py (revision 14819)
+++ twisted/manhole/ui/spelunk_gnome.py (working copy)
@@ -32,13 +32,14 @@
 # not with Tk, so this is what I use.
 
 import gnome.ui
+import gnomecanvas
 gnome = SillyModule(gnome.ui, 'Gnome')
 
 import gtk
 (True, False) = (gtk.TRUE, gtk.FALSE)
 gtk = SillyModule(gtk, 'Gtk')
 
-import GDK
+import gtk.gdk as GDK
 
 from twisted.python import reflect, text
 from twisted.spread import pb
@@ -71,7 +72,7 @@
 
 #### Public
 
-class SpelunkDisplay(gnome.Canvas):
+class SpelunkDisplay(gnomecanvas.Canvas):
     """Spelunk widget.
 
     The top-level widget for this module.  This gtk.Widget is where the
@@ -179,11 +180,11 @@
     def __init__(self, box):
         self.box = box
 
-class LooseBox(gnome.CanvasGroup):
+class LooseBox(gnomecanvas.CanvasGroup):
     def __init__(self):
         self.border = _LooseBoxBorder(self)
 
-class Visage(gnome.CanvasGroup):
+class Visage(gnomecanvas.CanvasGroup):
     """A \"face\" of an object under exploration.
 
     A Visage is a representation of an object presented to the user.




From corydodt at twistedmatrix.com  Tue Nov 22 14:03:57 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Tue, 22 Nov 2005 13:03:57 -0800
Subject: [Twisted-Python] ANN: Twisted 2.1.0 windows installer
Message-ID: <438387BD.80100@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

This is now available at http://twistedmatrix.com/projects/core/
Python 2.3 and Python 2.4 builds provided.

C
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFDg4e93A5SrXAiHQcRAmzAAJ4zJohYH1KvBzlHhQIkJs6FAA2dpQCghbQj
6jsaH9OEcw6hHQxfj/YqKVc=
=5jJu
-----END PGP SIGNATURE-----



From itamar at itamarst.org  Tue Nov 22 14:22:47 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 22 Nov 2005 16:22:47 -0500
Subject: [Twisted-Python] patches to make gtk2manhole work with gtk2
In-Reply-To: <43838595.5070505@lbl.gov>
References: <43838595.5070505@lbl.gov>
Message-ID: <1132694567.8857.16.camel@localhost.localdomain>

On Tue, 2005-11-22 at 12:54 -0800, David E. Konerding wrote:
> Hi, in attempting to use gtk2manhole I had some problems.  It looks like
> it was written on a much older version of gtk2,
> here are patches I applied (they are not complete, merely sufficient to
> start the application):

Hi,

IIRC that version of manhole is deprecated; possibly that should be
removed from the repository? Or maybe i'm confused. In any case, could
you open an issue in the tracker - http://twistedmatrix.com/bugs/?
Thanks.




From dekonerding at lbl.gov  Tue Nov 22 14:40:13 2005
From: dekonerding at lbl.gov (David E. Konerding)
Date: Tue, 22 Nov 2005 13:40:13 -0800
Subject: [Twisted-Python] patches to make gtk2manhole work with gtk2
In-Reply-To: <1132694567.8857.16.camel@localhost.localdomain>
References: <43838595.5070505@lbl.gov>
	<1132694567.8857.16.camel@localhost.localdomain>
Message-ID: <4383903D.7050607@lbl.gov>

Itamar Shtull-Trauring wrote:

>On Tue, 2005-11-22 at 12:54 -0800, David E. Konerding wrote:
>  
>
>>Hi, in attempting to use gtk2manhole I had some problems.  It looks like
>>it was written on a much older version of gtk2,
>>here are patches I applied (they are not complete, merely sufficient to
>>start the application):
>>    
>>
>
>Hi,
>
>IIRC that version of manhole is deprecated; possibly that should be
>removed from the repository? Or maybe i'm confused. In any case, could
>you open an issue in the tracker - http://twistedmatrix.com/bugs/?
>Thanks.
>
>  
>
I assume you're referring to the fact that Twisted conch provides a
replacement for the manhole support in
base Twisted.  It's confusing conch claims to be:

"...an SSHv2 implementation written in Python. SSH is a protocol
designed to allow remote access to shells and commands, but it is
generic enough to allow everything from TCP forwarding to generic
filesystem access.",

while the manhole code in base Twisted provides a telnet server/client
which allows console access to a Twisted server, and also provides
a very powerful PB-based graphical inspection took (gtkmanhole and
gtk2manhole).  I didn't see any gtkmanhole support in Twisted conch, but
now that I look more closely, I do see a 'tkconch' which seems to have
an overlapping function.  Further, there is no indication in the Twisted
source that the non-conch manhole is deprecated, although that seems to
be implicit from the text on the conch site:
"... A new implementation of Twisted's Manhole application is also
included, featuring server-side input history and interactive syntax
coloring."
It's further confusing, because conch is an ssh/telnet library, so I
can't see why the manhole support should be there (it would seem logical
that manhole should be a sibling project to conch that depends on it and
Twisted base.

In particular, I want to use the Gnome Canvas object browser
(twisted.manhole.ui.spelunk_gnome), which unfortunately only appears to
be support in gtkmanhole, not gtk2manhole, and certainly not in conch.

My patches were specifically for the twisted.manhole.ui.gtkmanhole and I
can open an issue for them if twisted.manhole isn't really
deprecated.

Dave



From mary-twisted at puzzling.org  Tue Nov 22 17:16:47 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 23 Nov 2005 11:16:47 +1100
Subject: [Twisted-Python] One day Twisted documentation sprint
In-Reply-To: <20051110000341.GA4443@home.puzzling.org>
References: <20051110000341.GA4443@home.puzzling.org>
Message-ID: <20051123001647.GA7634@home.puzzling.org>

I haven't forgotten about this! Unfortunately, with the end of the year,
bushels of work and holiday season sneaking up on me I don't think I
will be able to hold this sprint before the new year.

I'd like to propose the following date for it: Saturday, January 14
2006. (Apologies to the one person who found weekends tough: sounds like
most respondents are busy weekdays.)

Reminder on the basic details: I want to spend a day online with as many
hands as possible *reviewing* Twisted documentation: what's not
up-to-date? what's confusing? what functionality is covered only at an
advanced level with no corresponding beginner or intermediate documents?
what could use more advanced documentation? which documents exhibit
style or practices we want to discourage? what's flat out wrong?

This will give us hopefully enough work for approximately the next
galactical lifetime, the first epoch of which will be a writing sprint
sometime in late February or early March 2006.

-Mary



From radeex at gmail.com  Tue Nov 22 18:20:19 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 22 Nov 2005 20:20:19 -0500
Subject: [Twisted-Python] One day Twisted documentation sprint
In-Reply-To: <20051123001647.GA7634@home.puzzling.org>
References: <20051110000341.GA4443@home.puzzling.org>
	<20051123001647.GA7634@home.puzzling.org>
Message-ID: <60ed19d40511221720p319d6af9q841633dd6c2eeaea@mail.gmail.com>

On 11/22/05, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> I haven't forgotten about this! Unfortunately, with the end of the year,
> bushels of work and holiday season sneaking up on me I don't think I
> will be able to hold this sprint before the new year.
>
> I'd like to propose the following date for it: Saturday, January 14
> 2006. (Apologies to the one person who found weekends tough: sounds like
> most respondents are busy weekdays.)

Same happened to me, especially with all this travelling I'm doing. I
think January 14th will be much better for me.

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From foom at fuhm.net  Wed Nov 23 00:00:10 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 23 Nov 2005 00:00:10 -0700
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1Eeoby-0001DA-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2005-11-16 07:00:01.910000:
 Bugs opened: 4   Bugs closed: 6   Total open bugs: 481 (-2)
  Urgent: 1 (+0)
  Bug: 224 (-2)
  Feature: 173 (+0)
  Wish: 83 (+0)

New / Reopened Bugs
______________________
                    ==== Bug ====
[CORE] trial ImportErrors in loadReporters when subpackages not installed  (yesterday)
       http://twistedmatrix.com/bugs/issue1336 opened by acapnotic

[WORDS] bad interpretation with escape characters in twisted.words (IRC)  (3 days ago)
       http://twistedmatrix.com/bugs/issue1335 opened by gnuk

socket.error: (53, 'Software caused connection abort')  (1 month ago)
CLOSED http://twistedmatrix.com/bugs/issue1274 opened by ghazel

[CORE, TRIAL] trial --until-failure is broken  (1 month ago)
CLOSED http://twistedmatrix.com/bugs/issue1263 opened by exarkun

Bugs Closed
______________________
                    ==== Bug ====
[TRIAL] TASK: Write tests for module-level sorting in TestLoader  (1 month ago)
       http://twistedmatrix.com/bugs/issue1232 opened by jml, closed by jml

[TRIAL] Trial doesn't errback returned deferred when test method times out  (6 months ago)
       http://twistedmatrix.com/bugs/issue1005 opened by exarkun, closed by jml

[TESTS, TRIAL] trial.test_tests sucks  (1 month ago)
       http://twistedmatrix.com/bugs/issue1221 opened by jml, closed by jml

[TRIAL] trial TestImportErrors tests fail on Windows due to in use files  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1317 opened by justinj, closed by justinj

socket.error: (53, 'Software caused connection abort')  (1 month ago)
       http://twistedmatrix.com/bugs/issue1274 opened by ghazel, closed by teratorn

[CORE, TRIAL] trial --until-failure is broken  (1 month ago)
       http://twistedmatrix.com/bugs/issue1263 opened by exarkun, closed by jml




From Henning.Ramm at mediapro-gmbh.de  Wed Nov 23 02:01:38 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 23 Nov 2005 10:01:38 +0100
Subject: [Twisted-Python] deprecation of manhole.telnet (was: ANN: Twisted
	2.1.0 windows installer)
Message-ID: <F92274058556DE42B94B148EEFB91839021CB604@exchange-03.suedkurier.de>

>This is now available at http://twistedmatrix.com/projects/core/
>Python 2.3 and Python 2.4 builds provided.

Thank you very much!

I just updated and got a DeprecationWarning on import of twisted.manhole.telnet: it seems to import twisted.protocols.telsnet but should use twisted.conch.telnet instead.

Is manhole as such supposed to be deprecated?

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From Henning.Ramm at mediapro-gmbh.de  Wed Nov 23 02:30:23 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 23 Nov 2005 10:30:23 +0100
Subject: [Twisted-Python] deprecation of manhole.telnet (was: ANN:
	Twisted2.1.0 windows installer)
Message-ID: <F92274058556DE42B94B148EEFB91839021CB607@exchange-03.suedkurier.de>

>I just updated and got a DeprecationWarning on import of 
>twisted.manhole.telnet: it seems to import 
>twisted.protocols.telsnet but should use twisted.conch.telnet instead.
>Is manhole as such supposed to be deprecated?

Sorry, I read the gtk2manhole thread too late...

HR



From exarkun at divmod.com  Wed Nov 23 08:27:16 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 23 Nov 2005 10:27:16 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15184 - Initial
 implementation. Breaks a few tests.
In-Reply-To: <E1EetAj-0007OV-00@wolfwood>
Message-ID: <20051123152716.1217.1925763858.divmod.quotient.437@ohm>

On Wed, 23 Nov 2005 04:52:21 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Wed Nov 23 04:52:21 2005
>New Revision: 15184
>
>Modified:
>   branches/jml/trial-deferred-logic/twisted/trial/unittest.py
>   branches/jml/trial-deferred-logic/twisted/trial/util.py
>Log:
>Initial implementation.  Breaks a few tests.
>
> [snip]
>+
>+    def _eb_setUp(self, failure, result):
> [snip]
>+
>+    def _cb_method(self, ignored, result):
>+
> [snip]
>+
>+    def _eb_method(self, f, result):
> [snip]
>+
>+    def _eb_tearDown(self, failure, result):

Methods with a contained underscore are reserved for automatic dispatch.  I believe the convention you are looking for here is "_ebSetUp", "_cbMethod", etc.

Jean-Paul



From dekonerding at lbl.gov  Wed Nov 23 10:30:53 2005
From: dekonerding at lbl.gov (David E. Konerding)
Date: Wed, 23 Nov 2005 09:30:53 -0800
Subject: [Twisted-Python] patches to make gtk2manhole work with gtk2
In-Reply-To: <1132694567.8857.16.camel@localhost.localdomain>
References: <43838595.5070505@lbl.gov>
	<1132694567.8857.16.camel@localhost.localdomain>
Message-ID: <4384A74D.4090405@lbl.gov>

Itamar Shtull-Trauring wrote:

>On Tue, 2005-11-22 at 12:54 -0800, David E. Konerding wrote:
>  
>
>>Hi, in attempting to use gtk2manhole I had some problems.  It looks like
>>it was written on a much older version of gtk2,
>>here are patches I applied (they are not complete, merely sufficient to
>>start the application):
>>    
>>
>
>Hi,
>
>IIRC that version of manhole is deprecated; possibly that should be
>removed from the repository? Or maybe i'm confused. In any case, could
>you open an issue in the tracker - http://twistedmatrix.com/bugs/?
>Thanks.
>
>  
>

Ah... I think you are probably referring to this message:

/home/dek/sw/i386/suse/9.3/Python-2.4.2/lib/python2.4/site-packages/twisted/manhole/telnet.py:8:
DeprecationWarning: As of Twisted 2.1, twisted.protocols.telnet is
deprecated.  See twisted.conch.telnet for the current, supported API.
  from twisted.protocols import telnet


This message doesn't really say anything about the PB-based manhole
server and client in twisted.manhole being deprecated.

Dave



From gmcdonald at infocomp.com  Wed Nov 23 22:47:26 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Thu, 24 Nov 2005 16:47:26 +1100
Subject: [Twisted-Python] One day Twisted documentation sprint
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC50BD@XCHANGE>

Mary,

That date knocks me out of the running as I'll be getting back from holidays
abroad that night.  Is it possible to move it a week later perhaps?

Grant

P.S. is your email address at puzzling still working?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Mary
Gardiner
Sent: 23 November 2005 11:17
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] One day Twisted documentation sprint


I haven't forgotten about this! Unfortunately, with the end of the year,
bushels of work and holiday season sneaking up on me I don't think I
will be able to hold this sprint before the new year.

I'd like to propose the following date for it: Saturday, January 14
2006. (Apologies to the one person who found weekends tough: sounds like
most respondents are busy weekdays.)

Reminder on the basic details: I want to spend a day online with as many
hands as possible *reviewing* Twisted documentation: what's not
up-to-date? what's confusing? what functionality is covered only at an
advanced level with no corresponding beginner or intermediate documents?
what could use more advanced documentation? which documents exhibit
style or practices we want to discourage? what's flat out wrong?

This will give us hopefully enough work for approximately the next
galactical lifetime, the first epoch of which will be a writing sprint
sometime in late February or early March 2006.

-Mary

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051124/9bbb8b95/attachment.html>

From mary-twisted at puzzling.org  Wed Nov 23 22:59:15 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 24 Nov 2005 16:59:15 +1100
Subject: [Twisted-Python] One day Twisted documentation sprint
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC50BD@XCHANGE>
References: <61DA7719C45FD31185280008C733EF6E04AC50BD@XCHANGE>
Message-ID: <20051124055915.GA16125@home.puzzling.org>

On Thu, Nov 24, 2005, Grant McDonald wrote:
> Mary,
> 
> That date knocks me out of the running as I'll be getting back from holidays
> abroad that night.  Is it possible to move it a week later perhaps?

Possibly, although I always worry with these things that that will just
mean that four other people will pop up and say that the new date is bad
for them. I'll let you know in a few days.

> P.S. is your email address at puzzling still working?

Yes, I own the domain. If you want to check my address in future, you
can search for my postings to the list via
http://twistedmatrix.com/pipermail/twisted-python/ , they all have the
address in them.

-Mary



From itamar at itamarst.org  Thu Nov 24 10:53:28 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 24 Nov 2005 12:53:28 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15200 - I'd like _setUp
	thanks
In-Reply-To: <E1EfBEN-0007vz-00@wolfwood>
References: <E1EfBEN-0007vz-00@wolfwood>
Message-ID: <1132854808.8766.1.camel@localhost.localdomain>

On Thu, 2005-11-24 at 00:09 -0700, Jonathan Lange wrote:

> Modified: branches/jml/trial-deferred-logic/twisted/test/test_ssl.py
> ==============================================================================
> --- branches/jml/trial-deferred-logic/twisted/test/test_ssl.py	(original)
> +++ branches/jml/trial-deferred-logic/twisted/test/test_ssl.py	Thu Nov 24 00:09:19 2005
> @@ -173,7 +173,7 @@
>  
>  class StolenTCPTestCase(test_tcp.ProperlyCloseFilesTestCase, test_tcp.WriteDataTestCase):
>      def setUp(self):
> -        self._setUp()
> +        self._setUpStuff()

If it happened here it might happen elsewhere... maybe use __ methods?
Or some other name.




From jml at mumak.net  Thu Nov 24 15:44:42 2005
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Nov 2005 09:44:42 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15200 - I'd like _setUp
	thanks
In-Reply-To: <1132854808.8766.1.camel@localhost.localdomain>
References: <E1EfBEN-0007vz-00@wolfwood>
	<1132854808.8766.1.camel@localhost.localdomain>
Message-ID: <d06a5cd30511241444h49183b88m@mail.gmail.com>

On 25/11/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Thu, 2005-11-24 at 00:09 -0700, Jonathan Lange wrote:
>
> > Modified: branches/jml/trial-deferred-logic/twisted/test/test_ssl.py
> > ==============================================================================
> > --- branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        (original)
> > +++ branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        Thu Nov 24 00:09:19 2005
> > @@ -173,7 +173,7 @@
> >
> >  class StolenTCPTestCase(test_tcp.ProperlyCloseFilesTestCase, test_tcp.WriteDataTestCase):
> >      def setUp(self):
> > -        self._setUp()
> > +        self._setUpStuff()
>
> If it happened here it might happen elsewhere... maybe use __ methods?
> Or some other name.
>

I'd like to use a single underscore because I expect these methods to
be overridden (that can't be a real word).  So, I'd much prefer to
rename.  Suggestions welcome.

cheers,
jml



From jml at mumak.net  Thu Nov 24 18:12:41 2005
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Nov 2005 12:12:41 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15184 - Initial
	implementation. Breaks a few tests.
In-Reply-To: <20051123152716.1217.1925763858.divmod.quotient.437@ohm>
References: <E1EetAj-0007OV-00@wolfwood>
	<20051123152716.1217.1925763858.divmod.quotient.437@ohm>
Message-ID: <d06a5cd30511241712t613f26f9q@mail.gmail.com>

On 24/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Wed, 23 Nov 2005 04:52:21 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
> >Author: jml
> >Date: Wed Nov 23 04:52:21 2005
> >New Revision: 15184
> >
> >Modified:
> >   branches/jml/trial-deferred-logic/twisted/trial/unittest.py
> >   branches/jml/trial-deferred-logic/twisted/trial/util.py
> >Log:
> >Initial implementation.  Breaks a few tests.
> >
> > [snip]
> >+
> >+    def _eb_setUp(self, failure, result):
> > [snip]
> >+
> >+    def _cb_method(self, ignored, result):
> >+
> > [snip]
> >+
> >+    def _eb_method(self, f, result):
> > [snip]
> >+
> >+    def _eb_tearDown(self, failure, result):
>
> Methods with a contained underscore are reserved for automatic dispatch.  I believe the convention you are looking for here is "_ebSetUp", "_cbMethod", etc.

Initially I agreed, but I've changed my mind.

I want an errback for the method _setUp, not setUp.  If I take
_ebSetUp, then TestCase authors can't use _ebSetUp as an errback for
setUp.  So _eb_setUp seems like the sane choice.

cheers,
jml

PS. Of course, as Itamar suggests, I should perhaps pick a name other
than '_setUp'



From jml at mumak.net  Thu Nov 24 19:47:54 2005
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Nov 2005 13:47:54 +1100
Subject: [Twisted-Python] trial setUp/tearDown behavior
In-Reply-To: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
References: <20051115185324.10365.1070518382.divmod.quotient.8139@ohm>
Message-ID: <d06a5cd30511241847l67f9237dh@mail.gmail.com>

On 16/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> A main problem to coming to some agreement here seems to be that a lot of people are assuming they know how trial deals with shared state (or how trial should deal with shared state), but I haven't seen anyone explicitly spell this out yet.  Doing this might be a good first step to making further progress.

I'll give it a burl.

Trial should not share state between tests, unless specifically and
explicitly requested by the application developer.

That is, the only state shared between tests ought to be state
explicitly defined in something like setUpClass, resources or similar.

Tests are particularly useful as debugging aids.  So, as much as
possible, tests should be self-contained and reproducable.  It should
be easy to reproduce a failed test.  The order in which tests are run
should have no bearing on their success of failure.  Sharing state
works against this -- particularly 'flag variables'.


As a side-note: All of the Twisted tests pass when run without shared
state [1].  This is almost certainly a by-product of the buildbot
running the tests in random order.

I hope this helps.
jml

1.  Achieved 'in the lab' by running setUpClass / tearDownClass for
every test.  Obviously, the final implementation would have to be
different.



From exarkun at divmod.com  Thu Nov 24 22:50:41 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 25 Nov 2005 00:50:41 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15200 - I'd like _setUp
	thanks
In-Reply-To: <d06a5cd30511241444h49183b88m@mail.gmail.com>
Message-ID: <20051125055041.1217.526571068.divmod.quotient.602@ohm>

On Fri, 25 Nov 2005 09:44:42 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 25/11/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>> On Thu, 2005-11-24 at 00:09 -0700, Jonathan Lange wrote:
>>
>> > Modified: branches/jml/trial-deferred-logic/twisted/test/test_ssl.py
>> > ==============================================================================
>> > --- branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        (original)
>> > +++ branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        Thu Nov 24 00:09:19 2005
>> > @@ -173,7 +173,7 @@
>> >
>> >  class StolenTCPTestCase(test_tcp.ProperlyCloseFilesTestCase, test_tcp.WriteDataTestCase):
>> >      def setUp(self):
>> > -        self._setUp()
>> > +        self._setUpStuff()
>>
>> If it happened here it might happen elsewhere... maybe use __ methods?
>> Or some other name.
>>
>
>I'd like to use a single underscore because I expect these methods to
>be overridden (that can't be a real word).  So, I'd much prefer to
>rename.  Suggestions welcome.

If you expect them to be overridden, they should not be underscore prefixed.  Underscore prefix indicates privateness.

Also, "stuff" has no place in any function or variable name anyplace in Twisted.  Slopping naming encourages slopping thinking.  Pick a name that describes the purpose of the method.

Lastly, why do you expect them to be overridden?  Do you just expect test_tcp.ProperlyCloseFilesTestCase and test_ssl.StolenTCPTestCase to override them, or do you expect other classes to do so?  If the latter, why?  If the former, what does it matter (and this code should be factored better, so the question is moot)?

Jean-Paul



From jml at mumak.net  Thu Nov 24 23:03:58 2005
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Nov 2005 17:03:58 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15200 - I'd like _setUp
	thanks
In-Reply-To: <20051125055041.1217.526571068.divmod.quotient.602@ohm>
References: <d06a5cd30511241444h49183b88m@mail.gmail.com>
	<20051125055041.1217.526571068.divmod.quotient.602@ohm>
Message-ID: <d06a5cd30511242203n59560732i@mail.gmail.com>

On 25/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 25 Nov 2005 09:44:42 +1100, Jonathan Lange <jml at mumak.net> wrote:
> >On 25/11/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> >> On Thu, 2005-11-24 at 00:09 -0700, Jonathan Lange wrote:
> >>
> >> > Modified: branches/jml/trial-deferred-logic/twisted/test/test_ssl.py
> >> > ==============================================================================
> >> > --- branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        (original)
> >> > +++ branches/jml/trial-deferred-logic/twisted/test/test_ssl.py        Thu Nov 24 00:09:19 2005
> >> > @@ -173,7 +173,7 @@
> >> >
> >> >  class StolenTCPTestCase(test_tcp.ProperlyCloseFilesTestCase, test_tcp.WriteDataTestCase):
> >> >      def setUp(self):
> >> > -        self._setUp()
> >> > +        self._setUpStuff()
> >>
> >> If it happened here it might happen elsewhere... maybe use __ methods?
> >> Or some other name.
> >>
> >
> >I'd like to use a single underscore because I expect these methods to
> >be overridden (that can't be a real word).  So, I'd much prefer to
> >rename.  Suggestions welcome.
>
> If you expect them to be overridden, they should not be underscore prefixed.  Underscore prefix indicates privateness.

Ahh.  I had taken it to indicate 'protectedness' (the standard says
"non-public").  This can be quickly fixed.

> Lastly, why do you expect them to be overridden?  Do you just expect test_tcp.ProperlyCloseFilesTestCase and test_ssl.StolenTCPTestCase to override them, or do you expect other classes to do so?  If the latter, why?  If the former, what does it matter (and this code should be factored better, so the question is moot)?

I'm not expecting actual tests to override them.  I was thinking more
of the use-case where someone extends TestCase to, say, DBTestCase,
which runs every test_ method inside a database transaction.  To do
that, _testMethod would have to be overridden.

jml



From exarkun at divmod.com  Sat Nov 26 10:19:16 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 26 Nov 2005 12:19:16 -0500
Subject: [Twisted-Python] 
	Re: [Twisted-commits] r15209 - basename('/') == '', not IndexError
In-Reply-To: <E1Efqqo-0000G9-00@wolfwood>
Message-ID: <20051126171916.1217.1339555051.divmod.quotient.854@ohm>

On Fri, 25 Nov 2005 20:35:46 -0700, Stephen Thorne <stephen at wolfwood.twistedmatrix.com> wrote:
>Author: stephen
>Date: Fri Nov 25 20:35:45 2005
>New Revision: 15209
>
>Modified:
>   branches/wsanchez/dav/twisted/vfs/pathutils.py
>Log:
>basename('/') == '', not IndexError
>
>Modified: branches/wsanchez/dav/twisted/vfs/pathutils.py
>==============================================================================
>--- branches/wsanchez/dav/twisted/vfs/pathutils.py	(original)
>+++ branches/wsanchez/dav/twisted/vfs/pathutils.py	Fri Nov 25 20:35:45 2005
>@@ -51,7 +51,10 @@
>     return currNode
>
> def basename(path, cwd='/'):
>-    return getAbsoluteSegments(path, cwd)[-1]
>+    s = getAbsoluteSegments(path, cwd)
>+    if s:
>+        return s[-1]
>+    return ''
>
> def dirname(path, cwd='/'):
>     return "/" + "/".join(getAbsoluteSegments(path, cwd)[:-1])

Any plans to revert this?

Jean-Paul



From lists-twistedmatrix at silverwraith.com  Sat Nov 26 16:48:08 2005
From: lists-twistedmatrix at silverwraith.com (Avleen Vig)
Date: Sat, 26 Nov 2005 15:48:08 -0800
Subject: [Twisted-Python] Irc <-> Jabber gateway?
Message-ID: <20051126234808.GD15177@silverwraith.com>

Has anyone written such a device using twisted?
In theory it ought to be easy enough, I don't want to duplicate the work
if someone's already done it though :-)

-- 
Avleen Vig
Systems Administrator
Personal: www.silverwraith.com

"Wickedness is a myth invented by good people to account for the curious
 attractiveness of others."  - Oscar Wilde



From jadestorm at nc.rr.com  Sat Nov 26 21:10:35 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Sat, 26 Nov 2005 23:10:35 -0500
Subject: [Twisted-Python] Irc <-> Jabber gateway?
In-Reply-To: <20051126234808.GD15177@silverwraith.com>
References: <20051126234808.GD15177@silverwraith.com>
Message-ID: <BFC36534-9536-4DA8-88C0-E45D806088AE@nc.rr.com>

*laugh*  I was just talking about this.  (like possibly doing it)   
There closest thing has been jjigw, but that's using xmpppy, not  
Twisted.  You might be interested in using the curent Py* transports  
as a base.  I would suggest PyMSNt as I have stripped the "baseproto"  
stuff out of my transports (PyAIMt and PyICQt).  http://msn- 
transport.jabberstudio.org/ if you are interested in checking it  
out.  If you wanted to start from scratch, that's fine too, it's just  
James, author of PyMSN, made it fairly capable of plugging another  
protocol into it's core pieces.

jjigw seems to be very close to doing what I want it to do though.   
(I was originally looking at this because I didn't feel that any of  
the irc transports did what I really wanted. . . that being just be  
capable of logging into an irc server without having to be in an  
actual channel)  I'm not sure jjigw is being developed anymore though.

You may be interested in joining the py-transports at blathersource.org  
mailing list, btw.  See: http://www.modevia.com/cgi-bin/mailman/ 
listinfo/py-transports
We'd be happy to include you in our little twisted-based transport  
family.  =)

Daniel

On Nov 26, 2005, at 6:48 PM, Avleen Vig wrote:

> Has anyone written such a device using twisted?
> In theory it ought to be easy enough, I don't want to duplicate the  
> work
> if someone's already done it though :-)
>
> -- 
> Avleen Vig
> Systems Administrator
> Personal: www.silverwraith.com
>
> "Wickedness is a myth invented by good people to account for the  
> curious
>  attractiveness of others."  - Oscar Wilde
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From olilau.list.1 at gmail.com  Sun Nov 27 08:18:19 2005
From: olilau.list.1 at gmail.com (Olivier Laurent)
Date: Sun, 27 Nov 2005 16:18:19 +0100
Subject: [Twisted-Python] Serving different resource types from the same
	directory
Message-ID: <20051127151819.GA19135@debian>

I'm trying to serve 2 different kind of resources from the same
directory. I can, with no problem, serve one kind or the other but not
the two resource types at the same time.

Examples abounds on the web on how to serve one kind of resources from
subdirectory /foo and another kind from subdirectory /bar. But no
example on how to serve different kind of resources from the same
directory.

Here is how I tried:

# [...]

PATH = '/var/www/'

pt_resource = static.File(PATH)
pt_resource.processors = { '.pt' : PTResource }
pt_resource.indexNames = [ 'index' + '.pt' ]

rst_resource = static.File( PATH )
rst_resource.processors = { '.rst' : RSTResource }
rst_resource.indexNames = [ 'index' + '.rst' ]

#root = Resource() # I tried this too
root = static.File(PATH)

root.putChild(PATH, pt_resource)
root.putChild(PATH, rst_resource)

reactor.listenTCP(
        80,
        server.Site( root )
        )
reactor.run( )
# this is the end

What's wrong ? What did I forget ? Is it possible ?

Thank you.

-- 
Olivier Laurent



From glyph at divmod.com  Sun Nov 27 10:01:12 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 27 Nov 2005 12:01:12 -0500
Subject: [Twisted-Python] Serving different resource types from the same
In-Reply-To: <20051127151819.GA19135@debian>
Message-ID: <20051127170112.1217.886563358.divmod.quotient.1151@ohm>


On Sun, 27 Nov 2005 16:18:19 +0100, Olivier Laurent <olilau.list.1 at gmail.com> wrote:
>I'm trying to serve 2 different kind of resources from the same
>directory. I can, with no problem, serve one kind or the other but not
>the two resource types at the same time.

Please ask questions like this on the twisted-web mailing list.



From mailinglists at smartology.nl  Mon Nov 28 02:14:48 2005
From: mailinglists at smartology.nl (Remi Cool)
Date: Mon, 28 Nov 2005 10:14:48 +0100
Subject: [Twisted-Python] Serving different resource types from the same
	directory
In-Reply-To: <20051127151819.GA19135@debian>
References: <20051127151819.GA19135@debian>
Message-ID: <438ACA88.6000302@smartology.nl>

Olivier Laurent wrote:

>I'm trying to serve 2 different kind of resources from the same
>directory. I can, with no problem, serve one kind or the other but not
>the two resource types at the same time.
>
>Examples abounds on the web on how to serve one kind of resources from
>subdirectory /foo and another kind from subdirectory /bar. But no
>example on how to serve different kind of resources from the same
>directory.
>
>Here is how I tried:
>
># [...]
>
>PATH = '/var/www/'
>
>pt_resource = static.File(PATH)
>pt_resource.processors = { '.pt' : PTResource }
>pt_resource.indexNames = [ 'index' + '.pt' ]
>
>rst_resource = static.File( PATH )
>rst_resource.processors = { '.rst' : RSTResource }
>rst_resource.indexNames = [ 'index' + '.rst' ]
>
>#root = Resource() # I tried this too
>root = static.File(PATH)
>
>root.putChild(PATH, pt_resource)
>root.putChild(PATH, rst_resource)
>
>reactor.listenTCP(
>        80,
>        server.Site( root )
>        )
>reactor.run( )
># this is the end
>
Try this:

myRs = static.File(PATH)
myRs.processors = {'.pt' : PTResource, '.rst' : RSTResource}
myRs.indexNames = ['index' + '.pt', 'index' + '.rst' ]

- Remi -




From johann.borck at densedata.com  Mon Nov 28 04:00:08 2005
From: johann.borck at densedata.com (Johann Borck)
Date: Mon, 28 Nov 2005 12:00:08 +0100
Subject: [Twisted-Python] newpb authorization
Message-ID: <438AE338.5090708@densedata.com>

I'm writing a distributed app which depends on username/password
authorization. There's an entry in the newpb-docs, newpb-jobs.txt or so,
where an example is given how this authorization might/will look like.
it seems that it is to be implemented in the negotiation-phase, before
the switch-to-banana. Is that interpretation right, or am i wrong about
this, and the authorization is meant to take place via a mediating
pb.referenceable, similar to oldpb? In the latter case it's mostly just
a matter of copy&paste from the oldpb implementation, which works for me
now. But if there are some ideas on where and how to do it in an earlier
stage, or considerations of advantages to do it some defined way, i'd be
glad to know about.

Brian Warner wrote:

>cred has not yet been dragged into newpb, but it
>won't be too much work once someone figures out what exactly they want out of
>such a combination  :) .

What i'm thinking of is two distinct uses of cred in pb. one at an early
stage, affecting the whole connection to be or not to be, and one in
later phases, to have a basis for managing roles and permissions while
the app is running. i will spend some work on that, again, any ideas are
appreciated, and with some feedback it's more likely to result in
something usable for more than just me.

Johann



From exarkun at divmod.com  Mon Nov 28 11:01:49 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 28 Nov 2005 13:01:49 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15230 - Merge of
 jml/trial-deferred-logic -r15183:15229. Resolves #1341.
In-Reply-To: <E1Egcc5-0001uH-00@wolfwood>
Message-ID: <20051128180149.1217.245601134.divmod.quotient.1482@ohm>

On Sun, 27 Nov 2005 23:35:45 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Sun Nov 27 23:35:45 2005
>New Revision: 15230
>
>Modified:
>   trunk/twisted/mail/test/test_mail.py
>   trunk/twisted/test/test_ftp.py
>   trunk/twisted/test/test_ssl.py
>   trunk/twisted/test/test_tcp.py
>   trunk/twisted/trial/reporter.py
>   trunk/twisted/trial/runner.py
>   trunk/twisted/trial/test/detests.py
>   trunk/twisted/trial/test/test_deferred.py
>   trunk/twisted/trial/test/test_failure_formatting.py
>   trunk/twisted/trial/test/test_keyboard.py
>   trunk/twisted/trial/test/timeouts.py
>   trunk/twisted/trial/unittest.py
>   trunk/twisted/trial/util.py
>   trunk/twisted/web/test/test_webclient.py
>Log:
>Merge of jml/trial-deferred-logic -r15183:15229.  Resolves #1341.
>

The Gtk reactor can no longer complete the test suite: http://twistedmatrix.com/buildbot/reactors/builds/884/step-gtk/0

On my machine, the suite hangs in twisted.web.test.test_webclient.CookieTestCase.testNoCookies, but it seems to die in twisted.test.test_tcp.HalfClose2TestCase.testNoNotification on buildbot every time.  This may just be a race (or several races) going different ways on a somewhat reliable fashion on the different hardware.

It seems like the remaining reactor.iterate() calls are the likely cause of this?

Jean-Paul



From warner at lothar.com  Tue Nov 29 00:37:40 2005
From: warner at lothar.com (Brian Warner)
Date: Mon, 28 Nov 2005 23:37:40 -0800 (PST)
Subject: [Twisted-Python] newpb authorization
Message-ID: <20051128.233740.02126410.warner@lothar.com>

> There's an entry in the newpb-docs, newpb-jobs.txt or so,
> where an example is given how this authorization might/will look like.
> it seems that it is to be implemented in the negotiation-phase, before
> the switch-to-banana. Is that interpretation right, or am i wrong about
> this, and the authorization is meant to take place via a mediating
> pb.referenceable, similar to oldpb?

My current thought is the latter, keeping all notion of authorization at the
Referenceable layer, out of the connection itself. I'm thinking that the
Realm (in cred terms) is a Referenceable, and you send your credentials to it
via a login() method. The Realm then returns another Referenceable (the
Avatar), which you interact with to your hearts content. On the client side,
you'd have some sort of higher-level object to which you would pass the
PB-URL of the target Realm and your Credentials. When all was said and done,
you'd wind up with a RemoteReference to the remote Avatar. You could have
multiple Realms on the same host, distinguished by their URLs.

I'm definitely leaning in a capabilities-based direction these days, so both
the Realm (which anybody can access) and the Avatar (which can only be
accessed by the person with the right credentials) are reachable with URLs,
the only difference being that the Realm's URL is public knowledge, while the
Avatar URLs are randomly-generated and unguessable. If you want to bypass the
whole username/password thing, you just give the hopeful client the URL of
their Avatar, and let them connect directly to that.

[note that some of the things I wrote about cred-vs-newpb were before I was
fully aware of the capabilities model. back in those days, I was vaguely
thinking of having a "default object" for each connection, which could accept
credentials and return Avatars, such that it might make sense to put things
like username and passwords in the URLs. Also, back then it seemed reasonable
to use Interfaces or RemoteInterfaces as ways to specify "who" or "what" you
wanted to talk to. I've since come to my senses. newpb provides a layer of
secure remote references, on top of which you can build whatever sort of
authorization scheme you like]

[also, back then I was expecting Glyph to swoop down and implement the whole
thing in one afternoon's frantic coding binge, absolving me from needing to
understand how it would actually work or get used. fortunately this has not
come to pass, so I get to write something that can be comprehended by my own
humble brain. muahahaha.]

> What i'm thinking of is two distinct uses of cred in pb. one at an early
> stage, affecting the whole connection to be or not to be, and one in
> later phases, to have a basis for managing roles and permissions while
> the app is running.

It sounds like the capabilities-based scheme I have in mind fits the second
of your use cases. As for the first one.. what sort of things connection-time
things would you like to be controlled by authorization information? One
thing that comes to mind is whether the connection will be accepted or not,
presumeably to reduce resource utilization, but consider this:

 the TCP connection will be accepted regardless. until the first byte of data
 arrives, the only thing we can deduce about the client is their IP address,
 and we all know how unhelpful it is to make decisions upon purely that
 basis.

 given that tub.registerReference() returns an unguessable URL by default,
 the only objects that can be reached will be ones to which you have
 explicitly granted access, either by registering a well-known URL (like
 "/login") or by giving the URL to the client by some other channel. So
 allowing the "bad guy" to establish a connection doesn't actually let them
 access anything you don't want them to have.

 newpb's Schemas can be used to minimize resource utilization (specifically
 memory consumption) required by messages sent to those public objects. If
 the only object exposed to the world at large is the "/login" Realm, and if
 it only has a single remote_login(username, password) method, then a simple
 (username=str, password=str) schema will prevent that one permissible
 message from consuming too much space, limiting its utility in a DoS attack.


Given those, what other connection-time authorization checks do you think
might be useful?

Having authorization take place entirely at the object layer also has the
nice property that you can run arbitrary numbers of mutually-unaware services
off the same connection. My reluctance to add authorization below that layer
comes partially from the benefits of this property. As an example, in the
Buildbot[1], there are several PB services provided to entities in the
outside world (buildslaves, a status client, a debug client, and a Change
inlet), each distinguished by the cred username/password provided by the
various clients. The nominal API for these services (i.e., what you put in
the config file to create each service) would allow you to choose an
arbitrary TCP port for each, which may or may not overlap with each other. In
practice, the hassle of creating a Realm for each PBServerFactory (some of
which know about some usernames, others which don't, all of which could
change each time the config file is changed, etc) was so great that I punted
and just forced the user to make all those services share a single TCP port,
hence using a single Realm which knows about everything.

I haven't quite figured out how this would work if Buildbot used newpb, but I
know that I'd expose, say, the status service with a URL that ended in
"/status", and the debug service (which is supposed to be protected, and thus
gets a user-specified password in oldpb) would just get an unguessable URL.
The same TCP port could be used for different services that had different
authorization requirements.

If authorization took place before the object-level connection could be
established, I'd have to coordinate another layer of usernames and passwords
(or challenge-response pairs, or SRP exchanges, or whatever) without the
benefit of using PB serialization or object references. Having already built
one remote-method-invocation protocol this decade, I'm not keen on creating
another one quite yet :).


cheers,
 -Brian

PS: Yay! Somebody is looking at newpb! :)


[1] Buildbot: http://buildbot.sf.net/



From tv at twistedmatrix.com  Tue Nov 29 02:42:29 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 29 Nov 2005 11:42:29 +0200
Subject: [Twisted-Python] My review of Abe's book "Twisted Network
	Programming Essentials"
Message-ID: <438C2285.2080406@twistedmatrix.com>

Hi. I just finished a review of the new O'Reilly book on Twisted,
by Abe Fettig (hi Abe!), and thought you all might be interested in it:

http://tv.debian.net/articles/review-snakeball/



From Henning.Ramm at mediapro-gmbh.de  Tue Nov 29 03:59:59 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Tue, 29 Nov 2005 11:59:59 +0100
Subject: [Twisted-Python] My review of Abe's book "Twisted
	NetworkProgramming Essentials"
Message-ID: <F92274058556DE42B94B148EEFB91839021CB626@exchange-03.suedkurier.de>

>Hi. I just finished a review of the new O'Reilly book on Twisted,
>by Abe Fettig (hi Abe!), and thought you all might be interested in it:

Thank you very much for the hints how to simplify the Python code!
(I didn't knew there was dict.setdefault ;-)


Greetlings, HR



From antonykummel at yahoo.com  Tue Nov 29 05:15:08 2005
From: antonykummel at yahoo.com (Antony Kummel)
Date: Tue, 29 Nov 2005 04:15:08 -0800 (PST)
Subject: [Twisted-Python] problems with threadedselectreactor
Message-ID: <20051129121508.80687.qmail@web33904.mail.mud.yahoo.com>

Hi!
  
  I encountered two problems when using threadedselectreactor on win32. I  am not versed enough with reactor technicalities to resolve them  myself, but I would gladly conduct any tests the experts recommend.
  
  1. I often get tracebacks similar to this:
        File  "C:\Python23\Lib\site-packages\twisted\internet\threadedselectreactor.py",  line 299, in _doReadOrWrite
          why = getattr(selectable, method)()
        File "C:\Python23\Lib\site-packages\twisted\internet\abstract.py", line 108, in doWrite
          l = self.writeSomeData(self.dataBuffer)
        File "C:\Python23\lib\site-packages\twisted\internet\tcp.py", line 358, in writeSomeData
          return self.socket.send(buffer(data, 0, self.SEND_LIMIT))
      exceptions.AttributeError: 'Server' object has no attribute 'socket'
  
  To my understanding, this can only happen if the Server's  connectionLost method had been called before the exception happened,  but for some reason, writeSomeData (or sometimes another method) was  still called. I hypothesize that the Server should have been removed  from some list or another but wasn't, and that this is the reactor's  responsibility.
  
  2. Sometimes I get this error:
  Traceback (most recent call last):
    File "C:\Python23\Lib\site-packages\wx-2.6-msw-unicode\wx\_core.py", line 7493, in MainLoop
      wx.PyApp.MainLoop(self)
    File "C:\Python23\Lib\site-packages\wx-2.6-msw-unicode\wx\_core.py", line 6926, in MainLoop
      return _core_.PyApp_MainLoop(*args, **kwargs)
    File "C:\Python23\Lib\site-packages\wx-2.6-msw-unicode\wx\_core.py", line 13266, in <lambda>
      lambda event: event.callable(*event.args, **event.kw) )
    File "C:\Python23\Lib\site-packages\twisted\internet\threadedselectreactor.py", line 241, in _interleave
      self.runUntilCurrent()
  --- <exception caught here> ---
    File "C:\Python23\Lib\site-packages\twisted\internet\base.py", line 541, in runUntilCurrent
      call.func(*call.args, **call.kw)
    File "C:\Python23\Lib\site-packages\twisted\internet\task.py", line 91, in __call__
      self._reschedule()
    File "C:\Python23\Lib\site-packages\twisted\internet\task.py", line 108, in _reschedule
      self.call = reactor.callLater(delay, self)
    File "C:\Python23\Lib\site-packages\twisted\internet\threadedselectreactor.py", line 116, in callLater
      self.wakeUp()
    File "C:\Python23\Lib\site-packages\twisted\internet\threadedselectreactor.py", line 112, in wakeUp
      self.waker.wakeUp()
    File "C:\Python23\Lib\site-packages\twisted\internet\posixbase.py", line 85, in wakeUp
      self.w.send('x')
  socket.error: (10055, 'No buffer space available')
  
  This doesn't seem to be a threadedselectreactor problem, but rather a  problem that stems from it's use with arbitrary event loops. I suspect  that it happens when the main thread doesn't respond for some time. I  think that the best way to deal with it is simply to ignore this error  (in wakeUp), because if the buffer is full, then the main thread  already knows (or about to find out) that it needs to wake up, although  maybe the user should be somehow notified that there is a problem (log  message?).
  
  Thanks,
  
  Antony Kummel
  

		
---------------------------------
 Yahoo! Personals
 Single? There's someone we'd like you to meet.
 Lots of someones, actually. Yahoo! Personals
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051129/96310b5b/attachment.html>

From abe at fettig.net  Tue Nov 29 10:15:23 2005
From: abe at fettig.net (Abe Fettig)
Date: Tue, 29 Nov 2005 12:15:23 -0500
Subject: [Twisted-Python] Re: My review of Abe's book "Twisted Network
	Programming Essentials"
In-Reply-To: <438C2285.2080406@twistedmatrix.com>
References: <438C2285.2080406@twistedmatrix.com>
Message-ID: <438C8CAB.10108@fettig.net>

Tommi Virtanen wrote:
> Hi. I just finished a review of the new O'Reilly book on Twisted,
> by Abe Fettig (hi Abe!), and thought you all might be interested in it:
> 
> http://tv.debian.net/articles/review-snakeball/

Wow, Tommi, thanks for the very thorough review. I'm seriously
impressed. You picked up on a lot of details I'd missed, especially the
places where I didn't follow best practices in the code examples. I'll
get these incorporated into the official errata. And next time I'm
definitely going to have you involved as an official tech reviewer. You
 have a talent for it.

Overally I think you're accurate in pointing out the weaknesses of TNPE.
There are a couple of points that I'll push back on, though:

1. "DO NOT BUY TNPE TO LEARN TO WRITE WEB APPS"

Sigh. Writing the chapter on web servers was extremely frustrating. For
years now Twisted web app developers have had two choices: use stable
APIs that are widely considered to be broken and/or deprecated, or use
new, improved APIs that are currently under heavy development and
unstable. I put off writing this chapter for as long as possible, hoping
that there'd be a stable release of twisted.web2 to write about, but it
didn't happen. So in the end I decided it was better to document the
current stable twisted.web code, for all its faults, than to try to
document APIs that were in flux and very likely to change.

Hopefully readers will understand that this chapter is explaining how to
use the current twisted.web, not teaching the ideal architecture for web
applications. On page 54 it says "The classes in twisted.web.resource
and twisted.web.server are, as of this writing, widely considered to be
past their prime. They have some serious shortcomings ... Both are
scheduled to be deprecated in the future in favor of improved classes
provided by a next-generation web package known as twisted.web2." It
also says that if you're building a major web appication you should use
Nevow.

In retrospect, it probably would have been best to do both: include
examples of the stable APIs, but write more about nevow and
twisted.web2, including some examples.

2. It's not a Twisted Bible.

This is certainly true. If you look at the oreilly.com page [1] you'll
see that this book is in the "Developer's Notebook" series
(http://devnotebooks.oreilly.com/). Here's how O'Reilly describes
developer's notebooks:

"A Developer's Notebook is just what it claims to be--the often frantic
scribbling and notes that a true-blue alpha geek makes when working with
a new language, API, or project. It's the no-nonsense code that solves
problems, stripped of page-filling commentary that can often serve as
more of a paperweight than an epiphany. It's hackery, focused not on
what's nifty or might be fun if you've got some spare time, but what you
need to simply make it work now. This isn't a lecture, folks; it's a lab."

TNPE was written as a developer's notebook, and it shows. Unfortunately
as I was getting close to finishing the book O'Reilly decided that the
developer's notebook line wasn't doing very well and that they'd scrap
the "notebook" design and naming convention in favor of the more familar
animal book. I was happy to get a cool animal book cover, and my editor
and I tried to pick a title that accurately portrayed the contents of
the book. But in hindsight I think it would have been better to keep the
developer's notebook name and design. When some people see an animal
book they think "definitive guide", and then they're disappointed when
it's something else.

I hope that at least clarifies those points. This was my first book, and
I'm proud of it, but at the same time I'm sure I have a lot to learn.
Probably it's a lot like writing code, and somebody I'll look back on it
and be able to see clearly all the things I did wrong :-). In any case,
thanks for taking the time to read it and write this!

Abe

[1] http://www.oreilly.com/catalog/twistedadn/ (you can see traces of
the original "twisted - a developer's notebook" title in the URL)





From tv at twistedmatrix.com  Tue Nov 29 12:51:52 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Tue, 29 Nov 2005 21:51:52 +0200
Subject: [Twisted-Python] Re: My review of Abe's book "Twisted Network
	Programming Essentials"
In-Reply-To: <438C8CAB.10108@fettig.net>
References: <438C2285.2080406@twistedmatrix.com> <438C8CAB.10108@fettig.net>
Message-ID: <438CB158.1080303@twistedmatrix.com>

Abe Fettig wrote:
> 1. "DO NOT BUY TNPE TO LEARN TO WRITE WEB APPS"
> 
> Sigh. Writing the chapter on web servers was extremely frustrating. For
> years now Twisted web app developers have had two choices: use stable
> APIs that are widely considered to be broken and/or deprecated, or use
> new, improved APIs that are currently under heavy development and
> unstable. I put off writing this chapter for as long as possible, hoping
> that there'd be a stable release of twisted.web2 to write about, but it
> didn't happen. So in the end I decided it was better to document the
> current stable twisted.web code, for all its faults, than to try to
> document APIs that were in flux and very likely to change.

I understand you very well. Personally, I would probably have skipped
most of the server-side web chapter, maybe talking only about the proxy
and perhaps show things like static.File. Or maybe I would have just
dropped the whole chapter.

I'm 100% with you here, this is a difficult time for web development.
I got seriously burned with the whole Woven thing. Besides, Woven was a
better name than Nevow (*cough* *cough* ;)

Hopefully there will be a time when we have t.web2, with a
rendering-only Nevow on top of it, and there will be a usable
liveevil^Wlivepage^Wathena^Wwhatever, and maybe nufox, etc..
and then, maybe then, there will be a book about all that. There's
definitely enough material in web apps to fill a book, and I happen
to have a decent plan for one, if I ever find the time and motivation..

> 2. It's not a Twisted Bible.
> 
> TNPE was written as a developer's notebook, and it shows. Unfortunately

Oh, don't get me wrong. There's nothing _wrong_ in it not being the
Twisted Bible -- in fact, I think Twisted is still to young and
fast-moving to really be ready for a Bible. I'm just trying to make
people know what they are going to buy.

> I hope that at least clarifies those points. This was my first book, and
> I'm proud of it, but at the same time I'm sure I have a lot to learn.

You _should_ be proud of it, it's a good book, and on a subject that
definitely needed a book out. Good work.



From jml at mumak.net  Tue Nov 29 19:09:30 2005
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 30 Nov 2005 13:09:30 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15230 - Merge of
	jml/trial-deferred-logic -r15183:15229. Resolves #1341.
In-Reply-To: <20051128180149.1217.245601134.divmod.quotient.1482@ohm>
References: <E1Egcc5-0001uH-00@wolfwood>
	<20051128180149.1217.245601134.divmod.quotient.1482@ohm>
Message-ID: <d06a5cd30511291809k14c024fei@mail.gmail.com>

On 29/11/05, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sun, 27 Nov 2005 23:35:45 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
> >Author: jml
> >Date: Sun Nov 27 23:35:45 2005
> >New Revision: 15230
> >
> >
>
> The Gtk reactor can no longer complete the test suite: http://twistedmatrix.com/buildbot/reactors/builds/884/step-gtk/0
>
> On my machine, the suite hangs in twisted.web.test.test_webclient.CookieTestCase.testNoCookies, but it seems to die in twisted.test.test_tcp.HalfClose2TestCase.testNoNotification on buildbot every time.  This may just be a race (or several races) going different ways on a somewhat reliable fashion on the different hardware.
>
> It seems like the remaining reactor.iterate() calls are the likely cause of this?
>

For the record, the branch has been reverted, and I'm working on
fixing the hanging tests.  The problems *so far* appear to be caused
by reactor.runUntilCurrent being re-entered.  Not certain that they
are race conditions.  The difference in results may be due to running
the tests in different orders.

Perhaps runUntilCurrent should check for re-entry and raise some sort
of exception?

If you maintain code in Twisted, even nominally, then *now* is the
time to start cleaning up your tests.  Calls to reactor.iterate,
util.spinUntil, util.spinWhile and util.wait from within tests cannot
be supported if Trial is ever going to behave sanely.[1]  If you are
uncertain, check the tracker.

cheers,
jml

[1] As I understand it.  I am no reactrologist.



From glyph at divmod.com  Tue Nov 29 22:33:44 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 30 Nov 2005 00:33:44 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15230 - Merge of
	jml/trial-deferred-logic -r15183:15229. Resolves #1341.
In-Reply-To: <d06a5cd30511291809k14c024fei@mail.gmail.com>
Message-ID: <20051130053344.1217.351291702.divmod.quotient.1986@ohm>


On Wed, 30 Nov 2005 13:09:30 +1100, Jonathan Lange <jml at mumak.net> wrote:

>If you maintain code in Twisted, even nominally, then *now* is the
>time to start cleaning up your tests.

everybody: DO IT.  DO IT NOW.

jml: any particular, tricky tests you want a hand cleaning up?  I will try to put some effort towards this.

>Calls to reactor.iterate,
>util.spinUntil, util.spinWhile and util.wait from within tests cannot
                                                   ^ anywhere
                                                                ^ will not
>be supported if Trial is ever going to behave sanely.[1]  If you are
              ^ period, the end, because Trial *is* going to behave sanely.
>uncertain, check the tracker.

>cheers,
>jml
>
>[1] As I understand it.  I am no reactrologist.

As chief reactrologister I can officially confirm that your understanding is exactly 100% totally and completely correct.  There are no sensible semantics for a re-entrant reactor.



From foom at fuhm.net  Wed Nov 30 00:00:09 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 30 Nov 2005 00:00:09 -0700
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1EhLwn-0007jW-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2005-11-23 07:00:01.530000:
 Bugs opened: 6   Bugs closed: 3   Total open bugs: 484 (+3)
  Urgent: 1 (+0)
  Bug: 227 (+3)
  Feature: 173 (+0)
  Wish: 83 (+0)

New / Reopened Bugs
______________________
                    ==== Bug ====
[CORE] ftp NLST fails with a file on a twisted ftp server  (yesterday)
       http://twistedmatrix.com/bugs/issue1342 opened by micktwomey

[CORE, TRIAL] Test case run() methods to use Deferreds internally  (2 days ago)
       http://twistedmatrix.com/bugs/issue1341 opened by jml

[CORE, TRIAL] Possible: t.i.process.Process.reapProcess fails when called after a successful call  (5 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1340 opened by jml

[DOCUMENTATION, WEBSITE] API docs on site should reflect recent releases  (6 days ago)
       http://twistedmatrix.com/bugs/issue1339 opened by ralphm

[CORE] Delayed calls (callLater) can be lost when multi-threaded  (6 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1338 opened by jeffsilver

twisted.web.html.output bug (IRC)  (6 days ago)
       http://twistedmatrix.com/bugs/issue1337 opened by kyle

Bugs Closed
______________________
                    ==== Bug ====
[CORE, TRIAL] Possible: t.i.process.Process.reapProcess fails when called after a successful call  (5 days ago)
       http://twistedmatrix.com/bugs/issue1340 opened by jml, closed by jml

[TRIAL] Incorrect traceback from trial  (13 months ago)
       http://twistedmatrix.com/bugs/issue769 opened by exarkun, closed by jml

[CORE] Delayed calls (callLater) can be lost when multi-threaded  (6 days ago)
       http://twistedmatrix.com/bugs/issue1338 opened by jeffsilver, closed by exarkun




From xuryans at gmail.com  Wed Nov 30 00:19:45 2005
From: xuryans at gmail.com (Xu Ryan)
Date: Wed, 30 Nov 2005 15:19:45 +0800
Subject: [Twisted-Python] How can a tcp client connect with multi servers?
Message-ID: <f6c194d30511292319n2e83c27dxe5d7cd4307c04c14@mail.gmail.com>

Here is the situation: a tcp control client need connect to
multi-agent. Is there a light way to connect with server , instead
make a factory to do each connect?



From andrew-twisted at puzzling.org  Wed Nov 30 04:36:37 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 30 Nov 2005 22:36:37 +1100
Subject: [Twisted-Python] How can a tcp client connect with multi servers?
In-Reply-To: <f6c194d30511292319n2e83c27dxe5d7cd4307c04c14@mail.gmail.com>
References: <f6c194d30511292319n2e83c27dxe5d7cd4307c04c14@mail.gmail.com>
Message-ID: <20051130113637.GP18323@home.puzzling.org>

On Wed, Nov 30, 2005 at 03:19:45PM +0800, Xu Ryan wrote:
> Here is the situation: a tcp control client need connect to
> multi-agent. Is there a light way to connect with server , instead
> make a factory to do each connect?

ClientCreator is a simpler way to make connections.  See the "Simple, single-use
clients" section of the Writing Clients developer guide:

    http://twistedmatrix.com/projects/core/documentation/howto/clients.html#auto2

-Andrew.




From nico at tekNico.net  Wed Nov 30 03:09:45 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Wed, 30 Nov 2005 11:09:45 +0100
Subject: [Twisted-Python] Re: My review of Abe's book "Twisted Network
	Programming Essentials"
In-Reply-To: <438CB158.1080303@twistedmatrix.com>
References: <438C2285.2080406@twistedmatrix.com> <438C8CAB.10108@fettig.net>
	<438CB158.1080303@twistedmatrix.com>
Message-ID: <dmjtp8$a0e$1@sea.gmane.org>

> I'm 100% with you here, this is a difficult time for web development.
> I got seriously burned with the whole Woven thing. Besides, Woven was a
> better name than Nevow (*cough* *cough* ;)

Heh, how true. In 2003 I started introducing Twisted at work, and after
struggling for a while with forms handling in Woven, I threw in the towel
and transplanted Quixote's PTLs and form widgets into Twisted.

Someday I hope being able to gradually switch the whole mess to Nevow, but
not before the rate of change of forms handling and superAJAX stuff has
slowed significantly.

-- 
Nicola Larosa - nico at tekNico.net

On a personal note, Xara is the main reason why I still haven't switched
to a Linux desktop for myself. I can't live without my Xara... now it
looks like I'll finally be able to switch! Tonight, I will literally go
out and toast to Xara. This is the best news I've had in months.
  -- GooseKirk on Slashdot, October 2005




From exarkun at divmod.com  Wed Nov 30 07:13:35 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 30 Nov 2005 09:13:35 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15259 - Try again. Merge
	trial-deferred-logic
In-Reply-To: <E1EhLgh-0003ox-00@wolfwood>
Message-ID: <20051130141335.1217.1660978971.divmod.quotient.2100@ohm>

On Tue, 29 Nov 2005 23:43:31 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Tue Nov 29 23:43:31 2005
>New Revision: 15259
>
>Modified:
>   trunk/twisted/mail/test/test_mail.py
>   trunk/twisted/test/test_ftp.py
>   trunk/twisted/test/test_ssl.py
>   trunk/twisted/test/test_tcp.py
>   trunk/twisted/trial/reporter.py
>   trunk/twisted/trial/runner.py
>   trunk/twisted/trial/test/detests.py
>   trunk/twisted/trial/test/test_deferred.py
>   trunk/twisted/trial/test/test_failure_formatting.py
>   trunk/twisted/trial/test/test_keyboard.py
>   trunk/twisted/trial/test/timeouts.py
>   trunk/twisted/trial/unittest.py
>   trunk/twisted/trial/util.py
>   trunk/twisted/web/test/test_webclient.py
>Log:
>Try again. Merge trial-deferred-logic
>
>@@ -907,17 +900,22 @@
>         self.client.transport.loseConnection()
>         return self.p.stopListening()
>
>+    def _delayDeferred(self, time, arg=None):
>+        from twisted.internet import reactor
>+        d = defer.Deferred()
>+        reactor.callLater(time, d.callback, arg)
>+        return d
>+
>     def testNoNotification(self):
>         client = self.client
>         f = self.f
>         client.transport.write("hello")
>         w = client.transport.write
>         client.transport.loseWriteConnection()
>-        reactor.iterate()
>-        reactor.iterate()
>-        reactor.iterate()
>-        self.assertEquals(f.protocol.data, "hello")
>-        self.assertEquals(f.protocol.closed, True)
>+        d = self._delayDeferred(0.2, f.protocol)
>+        d.addCallback(lambda x : self.assertEqual(f.protocol.data, 'hello'))
>+        d.addCallback(lambda x : self.assertEqual(f.protocol.closed, True))
>+        return d
>
>     def testShutdownException(self):
>         client = self.client

The above hunk is pretty sketchy.  The real solution is to give the protocol a Deferred which it fires at whatever point it would have set its closed attribute to True.  As it stands, the test has a race and I can guarantee it will be going the wrong way quite frequently.

Jean-Paul




From nico at tekNico.net  Wed Nov 30 03:05:37 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Wed, 30 Nov 2005 11:05:37 +0100
Subject: [Twisted-Python] Re: My review of Abe's book "Twisted
	NetworkProgramming Essentials"
In-Reply-To: <F92274058556DE42B94B148EEFB91839021CB626@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB91839021CB626@exchange-03.suedkurier.de>
Message-ID: <dmjthg$9cd$1@sea.gmane.org>

> Thank you very much for the hints how to simplify the Python code!
> (I didn't knew there was dict.setdefault ;-)

Here's further explanation of setdefault:

http://wiki.python.org/moin/KeepingListsInDictionaries

-- 
Nicola Larosa - nico at tekNico.net

On a personal note, Xara is the main reason why I still haven't switched
to a Linux desktop for myself. I can't live without my Xara... now it
looks like I'll finally be able to switch! Tonight, I will literally go
out and toast to Xara. This is the best news I've had in months.
  -- GooseKirk on Slashdot, October 2005




From fhauck at srcpsolutions.com  Wed Nov 30 09:20:21 2005
From: fhauck at srcpsolutions.com (Fred Hauck)
Date: Wed, 30 Nov 2005 11:20:21 -0500
Subject: [Twisted-Python] New to twisted
Message-ID: <IBEKILOMELAPJHPEOCJMOECCCFAA.fhauck@srcpsolutions.com>

I am not only new to twisted, but to python as well.

I need what twisted does, so went out and got the "twisted" book
by abe fettig. I am coding each example in the book as i get there.

the connectiontest.py example on page 16 gives me a call back on success,
but not on error.

from twisted.internet import reactor,defer, protocol


class CallbackAndDisconnectProtocol(protocol.Protocol):
  def connectionMade(self):
    self.factory.deferred.callback("Connected!")
    self.transport.loseConnection()

class ConnectionTestFactory(protocol.ClientFactory):
  protocol = CallbackAndDisconnectProtocol

  def __init__(self):
    self.deferred = defer.Deferred()

  def clientConnnectionFailed(self, connector, reason):
    self.deferred.errback(reason)

def testConnect(host, port):
  testFactory = ConnectionTestFactory()
  reactor.connectTCP(host, port, testFactory)
  return testFactory.deferred

def handleSuccess( result,port):
  print "Connected to port %i" % port
  reactor.stop()

def handleFailure(failure, port):
  print "Error connecting to port %i: %s" % (port,failure.getErrorMessage())
  reactor.stop()

if __name__ == "__main__":
  import sys
  if not len( sys.argv) == 3:
     print "Usage: connectiontest.py host port"
     sys.exit(1)

  host = sys.argv[1]
  port = int(sys.argv[2])
  connecting = testConnect(host, port)
#  connecting.addCallback( handleSuccess, port)
#  connecting.addErrback( handleFailure,port)
  connecting.addBoth( handleFailure,port)
  reactor.run()

The environment is:

Windows XP sp2
python 2.4.1 from activestate
twisted_nodocs-2.1.0.win32-py24.exe (installed)

When chasing this down, go into the main loop and there are
comments about "signals" not working in windows, etc. etc.

CallLater works fine, successful callback works fine, the errback
does not

thanks in advance
fred






From Keith.Gunderson at act.org  Wed Nov 30 09:36:20 2005
From: Keith.Gunderson at act.org (Keith.Gunderson at act.org)
Date: Wed, 30 Nov 2005 10:36:20 -0600
Subject: [Twisted-Python] Results of stress testing the reactor
Message-ID: <OF6C50740A.45F61FB8-ON862570C9.00578B6E-862570C9.005B3795@LocalDomain>

I'm getting settled in with an experimental project using twisted.  I
posting some of my preliminary results in this message.  Please let me know
if this information is interesting or helpful.

I plan on using twisted as a part of my performance testing simulations.  I
use the Mercury Interactive tools for the 'heavy lifting' of my work.  I'll
use my twisted designs to provide advanced simulation logic and timing
features.   That is, I'll create many virtual users that will talk HTTP to
non-twisted web apps while measuring the results (i.e. performance
testing).  But, these virtual users will sometimes talk HTTP to my twisted
web app to get whatever data I want them to have.

So, I've got the following little app which takes three seconds to respond
to any request.  I'm trying test the Mercury tools on how they deal with
concurrent requests.   I'm not doing much here, just kicking in the tires a
little.

I'm using the latest twisted release on Win2000.

import time,sys
from twisted.internet import protocol, reactor

def defFn( protObject):
    protObject.transport.write('Hello. Deferred:\n')
    sys.stdout.write('The time is %s\n' % time.time())
    protObject.transport.loseConnection()

class TimeProtocol(protocol.Protocol):

    def dataReceived(self, data):
        self.transport.write('Hello. Data received: \n' )
        reactor.callLater(3, defFn,  self )


class TimeFactory(protocol.ServerFactory):
    protocol = TimeProtocol

reactor.listenTCP(9100, TimeFactory())
reactor.run()



Everything works as expected until I get about 300 virtual users hitting
the site somewhat simultaneously.  (Approx. 200 hits per second.)  At which
point the reactor kind of explodes.  The following traceback races from the
console (probably in an infinite loop.)  This may not be unexpected or
significant, but I found it interesting.

Is there anything I can do to prevent this, other than refraining from
trying to overload things on purpose?  Are there other tests that you gurus
might find interesting?

  File "tw09.py", line 25, in ?
    reactor.run()
  File "C:\progs\python24\Lib\site-packages\twisted\internet\posixbase.py",
line
 199, in run
    self.mainLoop()
  File "C:\progs\python24\Lib\site-packages\twisted\internet\posixbase.py",
line
 210, in mainLoop
    self.doIteration(t)
--- <exception caught here> ---
  File "C:
\progs\python24\Lib\site-packages\twisted\internet\selectreactor.py",
line 97, in doSelect
    [], timeout)
  File "C:
\progs\python24\Lib\site-packages\twisted\internet\selectreactor.py",
line 49, in win32select
    r, w, e = select.select(r, w, w, timeout)
exceptions.ValueError: too many file descriptors in select()
Traceback (most recent call last):
  File "tw09.py", line 25, in ?
    reactor.run()
  File "C:\progs\python24\Lib\site-packages\twisted\internet\posixbase.py",
line
 199, in run
    self.mainLoop()
  File "C:\progs\python24\Lib\site-packages\twisted\internet\posixbase.py",
line
 210, in mainLoop
    self.doIteration(t)
--- <exception caught here> ---
  File "C:
\progs\python24\Lib\site-packages\twisted\internet\selectreactor.py",
line 97, in doSelect
    [], timeout)
  File "C:
\progs\python24\Lib\site-packages\twisted\internet\selectreactor.py",
line 49, in win32select
    r, w, e = select.select(r, w, w, timeout)
exceptions.ValueError: too many file descriptors in select()



Keith Gunderson
Performance Test Analyst






From itamar at itamarst.org  Wed Nov 30 10:10:36 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Nov 2005 12:10:36 -0500
Subject: [Twisted-Python] Results of stress testing the reactor
In-Reply-To: <OF6C50740A.45F61FB8-ON862570C9.00578B6E-862570C9.005B3795@LocalDomain>
References: <OF6C50740A.45F61FB8-ON862570C9.00578B6E-862570C9.005B3795@LocalDomain>
Message-ID: <1133370637.9052.1.camel@localhost.localdomain>

On Wed, 2005-11-30 at 10:36 -0600, Keith.Gunderson at act.org wrote:

> Everything works as expected until I get about 300 virtual users hitting
> the site somewhat simultaneously.  (Approx. 200 hits per second.)  At which
> point the reactor kind of explodes.  The following traceback races from the
> console (probably in an infinite loop.)  This may not be unexpected or
> significant, but I found it interesting.

> exceptions.ValueError: too many file descriptors in select()

select() on Windows is limited to 512 file descriptors; there's not much
Twisted can do about this. The IOCP reactor should scale better, but it
is still work in progress so it may be buggy (though I'd expect it to
run this program just fine).




From itamar at itamarst.org  Wed Nov 30 13:06:17 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 30 Nov 2005 15:06:17 -0500
Subject: [Twisted-Python] problems with threadedselectreactor
In-Reply-To: <20051129121508.80687.qmail@web33904.mail.mud.yahoo.com>
References: <20051129121508.80687.qmail@web33904.mail.mud.yahoo.com>
Message-ID: <1133381178.9052.8.camel@localhost.localdomain>

On Tue, 2005-11-29 at 04:15 -0800, Antony Kummel wrote:
> Hi!
> 
> I encountered two problems when using threadedselectreactor on win32.
> I am not versed enough with reactor technicalities to resolve them
> myself, but I would gladly conduct any tests the experts recommend.

Could you add bugs for these to the tracker if you haven't already?
Also, try out tsr in SVN trunk, it has some fixes.




From antonykummel at yahoo.com  Wed Nov 30 14:04:46 2005
From: antonykummel at yahoo.com (Antony Kummel)
Date: Wed, 30 Nov 2005 13:04:46 -0800 (PST)
Subject: [Twisted-Python] problems with threadedselectreactor
In-Reply-To: <1133381178.9052.8.camel@localhost.localdomain>
Message-ID: <20051130210446.23843.qmail@web33905.mail.mud.yahoo.com>



Itamar Shtull-Trauring <itamar at itamarst.org> wrote:  On Tue, 2005-11-29 at 04:15 -0800, Antony Kummel wrote:
> Hi!
> 
> I encountered two problems when using threadedselectreactor on win32.
> I am not versed enough with reactor technicalities to resolve them
> myself, but I would gladly conduct any tests the experts recommend.

Could you add bugs for these to the tracker if you haven't already?
Also, try out tsr in SVN trunk, it has some fixes.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
I did, and I'm using the latest tsr.


		
---------------------------------
 Yahoo! Music Unlimited - Access over 1 million songs. Try it free.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20051130/2a4a40e5/attachment.html>

From erick_bodine at comcast.net  Wed Nov 30 14:07:08 2005
From: erick_bodine at comcast.net (erick_bodine at comcast.net)
Date: Wed, 30 Nov 2005 21:07:08 +0000
Subject: [Twisted-Python] implementing scp using Conch
Message-ID: <113020052107.27726.438E147C0000C63C00006C4E22007610640A02070B010DA1050C079D0A@comcast.net>

Using a suggestion from David Mertz's old article I am implementing scp using Conch.  I can scp from the server to the client, it does give an exception listed below.  Question #1 is why is the exception happening?  Question #2 is how to scp from the client to the server?  Can I use sendRequest() to open a file and then Channel.write('some data') to send the client file contents?


Traceback (most recent call last):
  File "client_mertz.py", line 80, in ?
    reactor.run()
  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 206, in run
    self.mainLoop()
  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 214, in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 541, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 397, in _continueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: unsubscriptable object


--
--ERick



From exarkun at divmod.com  Wed Nov 30 17:00:07 2005
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 30 Nov 2005 19:00:07 -0500
Subject: [Twisted-Python] implementing scp using Conch
In-Reply-To: <113020052107.27726.438E147C0000C63C00006C4E22007610640A02070B010DA1050C079D0A@comcast.net>
Message-ID: <20051201000007.1217.636688882.divmod.quotient.2239@ohm>

On Wed, 30 Nov 2005 21:07:08 +0000, erick_bodine at comcast.net wrote:
>Using a suggestion from David Mertz's old article I am implementing scp using Conch.  I can scp from the server to the client, it does give an exception listed below.  Question #1 is why is the exception happening?  Question #2 is how to scp from the client to the server?  Can I use sendRequest() to open a file and then Channel.write('some data') to send the client file contents?
>
>
>Traceback (most recent call last):
>  File "client_mertz.py", line 80, in ?
>    reactor.run()
>  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 206, in run
>    self.mainLoop()
>  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 214, in mainLoop
>    self.runUntilCurrent()
>--- <exception caught here> ---
>  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 541, in runUntilCurrent
>    call.func(*call.args, **call.kw)
>  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 397, in _continueSystemEvent
>    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
>exceptions.TypeError: unsubscriptable object
>

This happens most frequently as a result of calling reactor.stop() more than once.

It'd be nice if the 2nd (and subsequent) calls to reactor.stop() raised exceptions synchronously, probably.  It doesn't seem to be a very high priority change, though.

Jean-Paul



From jml at mumak.net  Wed Nov 30 17:03:47 2005
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 1 Dec 2005 11:03:47 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15230 - Merge of
	jml/trial-deferred-logic -r15183:15229. Resolves #1341.
In-Reply-To: <20051130053344.1217.351291702.divmod.quotient.1986@ohm>
References: <d06a5cd30511291809k14c024fei@mail.gmail.com>
	<20051130053344.1217.351291702.divmod.quotient.1986@ohm>
Message-ID: <d06a5cd30511301603x77dfea6dy@mail.gmail.com>

On 30/11/05, glyph at divmod.com <glyph at divmod.com> wrote:
> On Wed, 30 Nov 2005 13:09:30 +1100, Jonathan Lange <jml at mumak.net> wrote:
>
> >If you maintain code in Twisted, even nominally, then *now* is the
> >time to start cleaning up your tests.
>
> everybody: DO IT.  DO IT NOW.
>
> jml: any particular, tricky tests you want a hand cleaning up?  I will try to put some effort towards this.

Off the top of my head:
- The conch tests are impenetrable (really, z3p needs to fix them)
- twisted.protocols.loopback uses spinWhile and spinUntil. I'm not
game to fix that.
- The test_tcp tests that Jp commented on in a different post ;)

If anyone is curious, the bugs are all tagged 'tests' and can be found
at http://www.twistedmatrix.com/bugs/.  Phillipe will hug whoever
fixes the most tests.

jml



From xuryans at gmail.com  Wed Nov 30 19:35:56 2005
From: xuryans at gmail.com (Xu Ryan)
Date: Thu, 1 Dec 2005 10:35:56 +0800
Subject: [Twisted-Python] How can a tcp client connect with multi servers?
In-Reply-To: <20051130113637.GP18323@home.puzzling.org>
References: <f6c194d30511292319n2e83c27dxe5d7cd4307c04c14@mail.gmail.com>
	<20051130113637.GP18323@home.puzzling.org>
Message-ID: <f6c194d30511301835h66cccab7g44f5dc2e8bb2290a@mail.gmail.com>

Thank you, but ClientCreator is seems just send message for once?? My
app need connect with auth info, then send a command and request the
return value. Can i use ClientCreator?

On 11/30/05, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> On Wed, Nov 30, 2005 at 03:19:45PM +0800, Xu Ryan wrote:
> > Here is the situation: a tcp control client need connect to
> > multi-agent. Is there a light way to connect with server , instead
> > make a factory to do each connect?
>
> ClientCreator is a simpler way to make connections.  See the "Simple, single-use
> clients" section of the Writing Clients developer guide:
>
>     http://twistedmatrix.com/projects/core/documentation/howto/clients.html#auto2
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
Xu Ryans



From glyph at divmod.com  Wed Nov 30 21:47:30 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 30 Nov 2005 23:47:30 -0500
Subject: [Twisted-Python] Re: My review of Abe's book "Twisted Network
	Programming Essentials"
In-Reply-To: <dmjtp8$a0e$1@sea.gmane.org>
Message-ID: <20051201044730.1217.769334180.divmod.quotient.2304@ohm>



On Wed, 30 Nov 2005 11:09:45 +0100, Nicola Larosa <nico at teknico.net> wrote:

>Someday I hope being able to gradually switch the whole mess to Nevow, but
>not before the rate of change of forms handling and superAJAX stuff has
>slowed significantly.

Yep.  I predict that will be happening soon - as soon as we manage to fix the athena/FF15 bugs and do some more testing with IE, as well as come up with a lightweight forms thing for use with athena.

However, Nevow is still definitely not yet for the risk-averse.  I wouldn't recommend using it until both the aforementioned work has happened, it has been ported to web2, web2 has been released, and the 'context' argument has been eliminated from Nevow as well as it has been from web2.

I did not envy Abe the work of writing that chapter :).



