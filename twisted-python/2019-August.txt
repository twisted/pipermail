From wk80333 at gmail.com  Fri Aug  2 17:31:22 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Fri, 2 Aug 2019 19:31:22 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
Message-ID: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>

Hi,
  I have a twisted server. And I have been seeing this annoying issue.
Normally. when i develop and test it out. everything is fine..
But then I try to loadtest is via https://locust.io/

Again, everything is fine.. until I "stop" the test.
Then, I see this
'Traceback (most recent call last):\n  File
"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
line 88, in _run\n    self._context.run(self._callback, *self._args)\n
 File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 827, in adapt\n    adapt.actual.callback(extracted)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
460, in callback\n    self._startRunCallbacks(result)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
568, in _startRunCallbacks\n    self._runCallbacks()\n--- <exception caught
here> ---\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
654, in _runCallbacks\n    current.result = callback(current.result, *args,
**kw)\n  File
....
 File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line
238, in write\n    http.Request.write(self, data)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1118, in
write\n    self.channel.writeHeaders(version, code, reason,
headers)\nbuiltins.AttributeError: \'NoneType\' object has no attribute
\'writeHeaders\'\n'


I found this similar bug report:
https://github.com/buildbot/buildbot/issues/4045
But I am using 19.2.1 twisted version..
Again, this is only triggered when I "stop" the locust io test.
Any suggestions?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190802/cbca2274/attachment.html>

From glyph at twistedmatrix.com  Sat Aug  3 13:55:36 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 3 Aug 2019 12:55:36 -0700
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
Message-ID: <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>



> On Aug 2, 2019, at 4:31 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> 
> Hi,
>   I have a twisted server. And I have been seeing this annoying issue.
> Normally. when i develop and test it out. everything is fine..
> But then I try to loadtest is via https://locust.io/ <https://locust.io/>
> 
> Again, everything is fine.. until I "stop" the test.
> Then, I see this
> 'Traceback (most recent call last):\n  File "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py", line 88, in _run\n    self._context.run(self._callback, *self._args)\n  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 827, in adapt\n    adapt.actual.callback(extracted)\n  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 460, in callback\n    self._startRunCallbacks(result)\n  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 568, in _startRunCallbacks\n    self._runCallbacks()\n--- <exception caught here> ---\n  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 654, in _runCallbacks\n    current.result = callback(current.result, *args, **kw)\n  File 
> ....
>  File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line 238, in write\n    http.Request.write(self, data)\n  File "/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1118, in write\n    self.channel.writeHeaders(version, code, reason, headers)\nbuiltins.AttributeError: \'NoneType\' object has no attribute \'writeHeaders\'\n'
> 
> 
> I found this similar bug report: https://github.com/buildbot/buildbot/issues/4045 <https://github.com/buildbot/buildbot/issues/4045>
> But I am using 19.2.1 twisted version..

There is a prerelease version, with this bug fixed, that is awaiting final release upload right now; can you try with Twisted==19.7.0rc1 ?  That should fix this issue.  If not, then we have some investigating to do :-).

-g

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190803/840fffc1/attachment.html>

From trac at twistedmatrix.com  Sun Aug  4 00:05:18 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 04 Aug 2019 06:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1564898718.25.2636011374928983374@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190804/973c7618/attachment.html>

From wk80333 at gmail.com  Sun Aug  4 18:57:10 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Sun, 4 Aug 2019 20:57:10 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
Message-ID: <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>

Hi Glyph,
  Thanks for the suggestion.
I tried the suggestion.. While it fixes the self.channel NoneType issue..
It creates another issue.

Traceback (most recent call last):
  File
"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
line 88, in _run
    self._context.run(self._callback, *self._args)
  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 827, in adapt
    adapt.actual.callback(extracted)
  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 460, in callback
    self._startRunCallbacks(result)
  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 568, in _startRunCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 654, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
......
    request.finish()
  File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line
268, in finish
    return http.Request.finish(self)
  File "/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line
1071, in finish
    "Request.finish called on a request after its connection was lost; "
builtins.RuntimeError: Request.finish called on a request after its
connection was lost; use Request.notifyFinish to keep track of this.


 I have got some handle on the issue. I was wondering if you have any
advise on how to debug the issue.
Somewhere in the codebase are async/await code (from asyncio world). Hence,
when the connection is closed down by client, seems like those pending
coroutines are lingering on.

def connectionLost(self, channel, reason):

    t =  asyncio.all_tasks(asyncio.get_event_loop())

    print("pending tasks ", len(t))

The above does shows the list of pending tasks.  I am wondering if you have
any advice on how to kill these coroutines?
Also, I apologize if this is the wrong community to ask and if I should
post it to asyncio community?
Thanks for all the help.
Regards,
Waqar





On Sat, Aug 3, 2019 at 3:56 PM Glyph <glyph at twistedmatrix.com> wrote:

>
>
> On Aug 2, 2019, at 4:31 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>
> Hi,
>   I have a twisted server. And I have been seeing this annoying issue.
> Normally. when i develop and test it out. everything is fine..
> But then I try to loadtest is via https://locust.io/
>
> Again, everything is fine.. until I "stop" the test.
> Then, I see this
> 'Traceback (most recent call last):\n  File
> "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
> line 88, in _run\n    self._context.run(self._callback, *self._args)\n
>  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
> line 827, in adapt\n    adapt.actual.callback(extracted)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 460, in callback\n    self._startRunCallbacks(result)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 568, in _startRunCallbacks\n    self._runCallbacks()\n--- <exception caught
> here> ---\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 654, in _runCallbacks\n    current.result = callback(current.result, *args,
> **kw)\n  File
> ....
>  File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line
> 238, in write\n    http.Request.write(self, data)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1118, in
> write\n    self.channel.writeHeaders(version, code, reason,
> headers)\nbuiltins.AttributeError: \'NoneType\' object has no attribute
> \'writeHeaders\'\n'
>
>
> I found this similar bug report:
> https://github.com/buildbot/buildbot/issues/4045
> But I am using 19.2.1 twisted version..
>
>
> There is a prerelease version, with this bug fixed, that is awaiting final
> release upload right now; can you try with Twisted==19.7.0rc1 ?  That
> should fix this issue.  If not, then we have some investigating to do :-).
>
> -g
>
> -g
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190804/444ec03e/attachment.html>

From glyph at twistedmatrix.com  Sun Aug  4 20:35:05 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 4 Aug 2019 19:35:05 -0700
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
Message-ID: <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>



> On Aug 4, 2019, at 5:57 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> 
> Hi Glyph,
>   Thanks for the suggestion.
> I tried the suggestion.. While it fixes the self.channel NoneType issue.. It creates another issue.
> 
> Traceback (most recent call last):
>   File "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py", line 88, in _run
>     self._context.run(self._callback, *self._args)
>   File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 827, in adapt
>     adapt.actual.callback(extracted)
>   File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 460, in callback
>     self._startRunCallbacks(result)
>   File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 568, in _startRunCallbacks
>     self._runCallbacks()
> --- <exception caught here> ---
>   File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 654, in _runCallbacks
>     current.result = callback(current.result, *args, **kw)
> ......
>     request.finish()
>   File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line 268, in finish
>     return http.Request.finish(self)
>   File "/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1071, in finish
>     "Request.finish called on a request after its connection was lost; "
> builtins.RuntimeError: Request.finish called on a request after its connection was lost; use Request.notifyFinish to keep track of this.

Oh, hrm.  The idea here is that any code that returns NOT_DONE_YET (i.e. does asynchronous work to generate a response) should also be tracking whether it needs to call `.finish()` by watching a `.notifyFinish()` Deferred.  I bet that there are plenty of resources in Twisted which don't follow this rule, and we should fix those; but possibly we should also make this error message less stern.  Do you have a minimal example?

>  I have got some handle on the issue. I was wondering if you have any advise on how to debug the issue. 
> Somewhere in the codebase are async/await code (from asyncio world). Hence, when the connection is closed down by client, seems like those pending coroutines are lingering on.

This, I have no idea about.  What tasks are you starting, when are you expecting them to get cleaned up, what are they blocking on, how do these interact with Twisted?  There are a couple dozen questions I'd have to know the answer to in order to even begin debugging this.  If you cancel all the outstanding tasks and look at their tracebacks when exiting it might give you more of a sense of where they're stuck...

-g


From wk80333 at gmail.com  Sun Aug  4 21:26:01 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Sun, 4 Aug 2019 23:26:01 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
Message-ID: <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>

Hi Glyph,
   Here is the minimal version


class FooResource(resource.Resource):
       def render_GET(request):
              future = asyncio.ensure_future(self.fetch_response(request))
// some async await functions
              d = Deferred.fromFuture(future)
              d.addCallback(print_json_response, request) // this is
actually where the error is triggered.
              d.addErrback(lambda failure:
failure.trap(defer.CancelledError))
              finished_errback = request.notifyFinish()
              finished_errback.addErrback(self.handle_cancel, d) // simple
logs and cancels d by d.cancel()
              return NOT_DONE_YET

The traceback is like
'Traceback (most recent call last):\n  File
"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
line 88, in _run\n    self._context.run(self._callback, *self._args)\n
 File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 827, in adapt\n    adapt.actual.callback(extracted)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
460, in callback\n    self._startRunCallbacks(result)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
568, in _startRunCallbacks\n    self._runCallbacks()\n--- <exception caught
here> ---\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
654, in _runCallbacks\n    current.result = callback(current.result, *args,
**kw)\n  File "/Users/wqKhan/twisted_eg/parse_response.py", line 3, in
print_json_response\n    *print_json_response*(response, request)\n  File
"/Users/wqKhan/twisted_eg/parse_response.py", line 21, in
*print_json_response*\n    request.finish()\n  File
"/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line 268,
in finish\n    return http.Request.finish(self)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1071, in
finish\n    "Request.finish called on a request after its connection was
lost; "\nbuiltins.RuntimeError: Request.finish called on a request after
its connection was lost; use Request.notifyFinish to keep track of this.\n'



On Sun, Aug 4, 2019 at 10:36 PM Glyph <glyph at twistedmatrix.com> wrote:

>
>
> > On Aug 4, 2019, at 5:57 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> >
> > Hi Glyph,
> >   Thanks for the suggestion.
> > I tried the suggestion.. While it fixes the self.channel NoneType
> issue.. It creates another issue.
> >
> > Traceback (most recent call last):
> >   File
> "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
> line 88, in _run
> >     self._context.run(self._callback, *self._args)
> >   File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 827, in adapt
> >     adapt.actual.callback(extracted)
> >   File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 460, in callback
> >     self._startRunCallbacks(result)
> >   File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 568, in _startRunCallbacks
> >     self._runCallbacks()
> > --- <exception caught here> ---
> >   File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 654, in _runCallbacks
> >     current.result = callback(current.result, *args, **kw)
> > ......
> >     request.finish()
> >   File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py",
> line 268, in finish
> >     return http.Request.finish(self)
> >   File "/usr/local/lib/python3.7/site-packages/twisted/web/http.py",
> line 1071, in finish
> >     "Request.finish called on a request after its connection was lost; "
> > builtins.RuntimeError: Request.finish called on a request after its
> connection was lost; use Request.notifyFinish to keep track of this.
>
> Oh, hrm.  The idea here is that any code that returns NOT_DONE_YET (i.e.
> does asynchronous work to generate a response) should also be tracking
> whether it needs to call `.finish()` by watching a `.notifyFinish()`
> Deferred.  I bet that there are plenty of resources in Twisted which don't
> follow this rule, and we should fix those; but possibly we should also make
> this error message less stern.  Do you have a minimal example?
>
> >  I have got some handle on the issue. I was wondering if you have any
> advise on how to debug the issue.
> > Somewhere in the codebase are async/await code (from asyncio world).
> Hence, when the connection is closed down by client, seems like those
> pending coroutines are lingering on.
>
> This, I have no idea about.  What tasks are you starting, when are you
> expecting them to get cleaned up, what are they blocking on, how do these
> interact with Twisted?  There are a couple dozen questions I'd have to know
> the answer to in order to even begin debugging this.  If you cancel all the
> outstanding tasks and look at their tracebacks when exiting it might give
> you more of a sense of where they're stuck...
>
> -g
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190804/8cb46f00/attachment-0001.html>

From wk80333 at gmail.com  Sun Aug  4 21:43:08 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Sun, 4 Aug 2019 23:43:08 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
Message-ID: <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>

Just for sake of completeness:
def print_json_response(resp, request):
         request.write(json.dumps(resp))
         request.close()

It is this close function which is causing the issue
I suspect that somehow the fact that the client has closed the connection,
is not being handled.


On Sun, Aug 4, 2019 at 11:26 PM Waqar Khan <wk80333 at gmail.com> wrote:

> Hi Glyph,
>    Here is the minimal version
>
>
> class FooResource(resource.Resource):
>        def render_GET(request):
>               future = asyncio.ensure_future(self.fetch_response(request))
> // some async await functions
>               d = Deferred.fromFuture(future)
>               d.addCallback(print_json_response, request) // this is
> actually where the error is triggered.
>               d.addErrback(lambda failure:
> failure.trap(defer.CancelledError))
>               finished_errback = request.notifyFinish()
>               finished_errback.addErrback(self.handle_cancel, d) // simple
> logs and cancels d by d.cancel()
>               return NOT_DONE_YET
>
> The traceback is like
> 'Traceback (most recent call last):\n  File
> "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
> line 88, in _run\n    self._context.run(self._callback, *self._args)\n
>  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
> line 827, in adapt\n    adapt.actual.callback(extracted)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 460, in callback\n    self._startRunCallbacks(result)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 568, in _startRunCallbacks\n    self._runCallbacks()\n--- <exception caught
> here> ---\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 654, in _runCallbacks\n    current.result = callback(current.result, *args,
> **kw)\n  File "/Users/wqKhan/twisted_eg/parse_response.py", line 3, in
> print_json_response\n    *print_json_response*(response, request)\n  File
> "/Users/wqKhan/twisted_eg/parse_response.py", line 21, in
> *print_json_response*\n    request.finish()\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line 268,
> in finish\n    return http.Request.finish(self)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1071, in
> finish\n    "Request.finish called on a request after its connection was
> lost; "\nbuiltins.RuntimeError: Request.finish called on a request after
> its connection was lost; use Request.notifyFinish to keep track of this.\n'
>
>
>
> On Sun, Aug 4, 2019 at 10:36 PM Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>>
>> > On Aug 4, 2019, at 5:57 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>> >
>> > Hi Glyph,
>> >   Thanks for the suggestion.
>> > I tried the suggestion.. While it fixes the self.channel NoneType
>> issue.. It creates another issue.
>> >
>> > Traceback (most recent call last):
>> >   File
>> "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
>> line 88, in _run
>> >     self._context.run(self._callback, *self._args)
>> >   File
>> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
>> 827, in adapt
>> >     adapt.actual.callback(extracted)
>> >   File
>> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
>> 460, in callback
>> >     self._startRunCallbacks(result)
>> >   File
>> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
>> 568, in _startRunCallbacks
>> >     self._runCallbacks()
>> > --- <exception caught here> ---
>> >   File
>> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
>> 654, in _runCallbacks
>> >     current.result = callback(current.result, *args, **kw)
>> > ......
>> >     request.finish()
>> >   File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py",
>> line 268, in finish
>> >     return http.Request.finish(self)
>> >   File "/usr/local/lib/python3.7/site-packages/twisted/web/http.py",
>> line 1071, in finish
>> >     "Request.finish called on a request after its connection was lost; "
>> > builtins.RuntimeError: Request.finish called on a request after its
>> connection was lost; use Request.notifyFinish to keep track of this.
>>
>> Oh, hrm.  The idea here is that any code that returns NOT_DONE_YET (i.e.
>> does asynchronous work to generate a response) should also be tracking
>> whether it needs to call `.finish()` by watching a `.notifyFinish()`
>> Deferred.  I bet that there are plenty of resources in Twisted which don't
>> follow this rule, and we should fix those; but possibly we should also make
>> this error message less stern.  Do you have a minimal example?
>>
>> >  I have got some handle on the issue. I was wondering if you have any
>> advise on how to debug the issue.
>> > Somewhere in the codebase are async/await code (from asyncio world).
>> Hence, when the connection is closed down by client, seems like those
>> pending coroutines are lingering on.
>>
>> This, I have no idea about.  What tasks are you starting, when are you
>> expecting them to get cleaned up, what are they blocking on, how do these
>> interact with Twisted?  There are a couple dozen questions I'd have to know
>> the answer to in order to even begin debugging this.  If you cancel all the
>> outstanding tasks and look at their tracebacks when exiting it might give
>> you more of a sense of where they're stuck...
>>
>> -g
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190804/c7c5ec3b/attachment.html>

From glyph at twistedmatrix.com  Sun Aug  4 21:54:08 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 4 Aug 2019 20:54:08 -0700
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
Message-ID: <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>



> On Aug 4, 2019, at 8:43 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> 
> Just for sake of completeness:
> def print_json_response(resp, request):
>          request.write(json.dumps(resp))
>          request.close()

Presumably this line actually says "request.finish()"?

This is indeed the problem; just don't call "request.finish()" if notifyFinish() has already been callback'd.

-g


From wk80333 at gmail.com  Sun Aug  4 22:04:27 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Mon, 5 Aug 2019 00:04:27 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
Message-ID: <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>

Ah yes.. That is true..

If I comment out request.finish() (Here is the doc which I tried to
followed:
https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
)
Then actually.. when I try to test out the code... (via curl or like doing
requests.get .. to the URI)..
it is just stuck..

In [491]: requests.get("http://0.0.0.0:9999/test ....with params " )
It just stays stuck :(


I do want to convey my thanks for the help. Really appreciate it.


On Sun, Aug 4, 2019 at 11:55 PM Glyph <glyph at twistedmatrix.com> wrote:

>
>
> > On Aug 4, 2019, at 8:43 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> >
> > Just for sake of completeness:
> > def print_json_response(resp, request):
> >          request.write(json.dumps(resp))
> >          request.close()
>
> Presumably this line actually says "request.finish()"?
>
> This is indeed the problem; just don't call "request.finish()" if
> notifyFinish() has already been callback'd.
>
> -g
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/9f86e7c6/attachment-0001.html>

From glyph at twistedmatrix.com  Sun Aug  4 23:55:33 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 4 Aug 2019 22:55:33 -0700
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
Message-ID: <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>



> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> 
> Ah yes.. That is true..
> 
> If I comment out request.finish() (Here is the doc which I tried to followed: https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html <https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html>) 
> Then actually.. when I try to test out the code... (via curl or like doing requests.get .. to the URI).. 
> it is just stuck..

Yep!  This makes sense; if you don't call `.finish()` at all then your code will never tell the client that it's done.

But if you call `.finish()` after notifyFinish() has fired then you get that error.

If you change your code to only call `.finish()` if the deferred returned by notifyFinish() has not fired or failed yet, do you get the error?  It's possible that you still do, in which case, there's a bug in Twisted that needs to be fixed.

> I do want to convey my thanks for the help. Really appreciate it.

Thanks for using Twisted :)
-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190804/9344b45f/attachment.html>

From wk80333 at gmail.com  Mon Aug  5 00:24:37 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Mon, 5 Aug 2019 02:24:37 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
 <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
Message-ID: <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>

Hi Glyph,
    I am not sure I understand.

Is there a method/variable in request which keeps a track whether
notifyFinish has been fired..
So, I can do something like.

if not request.hasFiredNotifyFinish:
       request.finish()
??


I have sort of able to get around this issue.. though I can't put a finger
on what actually worked.
Here is what I did.. First change to 19.7rc01 version.. and just fix the
channel issue.

Next  self.fetch_response(request).. This is an async def.. So what I did
was..

async def fetch_response(request):
        future = {}
        try:
           future = await some other async def.. which returns future
        except asyncio.CancelledError as e:
           print("Error..", e)
        return future

I basically ended up doing this everywhere where there is async/await.
Next, I added this:
d.addErrback(lambda failure: failure.trap(asyncio.CancelledError))


So.. now.. I don't see the notifyFinish error anymore. And I am bit
terrified not to touch anything.. :-D

But, I want to try out your suggestion as that seems like a more solid way
to handle the issue. But I am not sure I quite understand, how do I figure
out whether notifyFinish has been called before calling finish?


On Mon, Aug 5, 2019 at 1:56 AM Glyph <glyph at twistedmatrix.com> wrote:

>
>
> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>
> Ah yes.. That is true..
>
> If I comment out request.finish() (Here is the doc which I tried to
> followed:
> https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
> )
> Then actually.. when I try to test out the code... (via curl or like doing
> requests.get .. to the URI)..
> it is just stuck..
>
>
> Yep!  This makes sense; if you don't call `.finish()` *at all* then your
> code will never tell the client that it's done.
>
> But if you call `.finish()` *after notifyFinish() has fired* then you get
> that error.
>
> If you change your code to only call `.finish()` if the deferred returned
> by notifyFinish() has not fired or failed yet, do you get the error?  It's
> possible that you still do, in which case, there's a bug in Twisted that
> needs to be fixed.
>
> I do want to convey my thanks for the help. Really appreciate it.
>
>
> Thanks for using Twisted :)
> -g
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/b04274c8/attachment.html>

From wk80333 at gmail.com  Mon Aug  5 12:15:28 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Mon, 5 Aug 2019 14:15:28 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
 <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
 <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>
Message-ID: <CAJuJkHPZTS7u65G6DrMVk9umaPwqzmgZvPkwCC3=NSX-_T3pUg@mail.gmail.com>

False alarm. Seems like there are some sneaky conditions when I get the
error message.
Like before, I use to get notifyFinish error everytime. Now, it seems that
6/10 times  things are "clean" but then 4/10 times there are notifyFinish
errors.
Wondering on your suggestion. How do I ensure whether the notifyFinish
error deferred has been fired or not.
Could I have like a vanilla "HelloWorld" example?
Thanks

On Mon, Aug 5, 2019 at 2:24 AM Waqar Khan <wk80333 at gmail.com> wrote:

> Hi Glyph,
>     I am not sure I understand.
>
> Is there a method/variable in request which keeps a track whether
> notifyFinish has been fired..
> So, I can do something like.
>
> if not request.hasFiredNotifyFinish:
>        request.finish()
> ??
>
>
> I have sort of able to get around this issue.. though I can't put a finger
> on what actually worked.
> Here is what I did.. First change to 19.7rc01 version.. and just fix the
> channel issue.
>
> Next  self.fetch_response(request).. This is an async def.. So what I did
> was..
>
> async def fetch_response(request):
>         future = {}
>         try:
>            future = await some other async def.. which returns future
>         except asyncio.CancelledError as e:
>            print("Error..", e)
>         return future
>
> I basically ended up doing this everywhere where there is async/await.
> Next, I added this:
> d.addErrback(lambda failure: failure.trap(asyncio.CancelledError))
>
>
> So.. now.. I don't see the notifyFinish error anymore. And I am bit
> terrified not to touch anything.. :-D
>
> But, I want to try out your suggestion as that seems like a more solid way
> to handle the issue. But I am not sure I quite understand, how do I figure
> out whether notifyFinish has been called before calling finish?
>
>
> On Mon, Aug 5, 2019 at 1:56 AM Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>>
>> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>>
>> Ah yes.. That is true..
>>
>> If I comment out request.finish() (Here is the doc which I tried to
>> followed:
>> https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
>> )
>> Then actually.. when I try to test out the code... (via curl or like
>> doing requests.get .. to the URI)..
>> it is just stuck..
>>
>>
>> Yep!  This makes sense; if you don't call `.finish()` *at all* then your
>> code will never tell the client that it's done.
>>
>> But if you call `.finish()` *after notifyFinish() has fired* then you
>> get that error.
>>
>> If you change your code to only call `.finish()` if the deferred returned
>> by notifyFinish() has not fired or failed yet, do you get the error?  It's
>> possible that you still do, in which case, there's a bug in Twisted that
>> needs to be fixed.
>>
>> I do want to convey my thanks for the help. Really appreciate it.
>>
>>
>> Thanks for using Twisted :)
>> -g
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/26161335/attachment.html>

From exarkun at twistedmatrix.com  Mon Aug  5 12:21:26 2019
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 5 Aug 2019 14:21:26 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHPZTS7u65G6DrMVk9umaPwqzmgZvPkwCC3=NSX-_T3pUg@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
 <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
 <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>
 <CAJuJkHPZTS7u65G6DrMVk9umaPwqzmgZvPkwCC3=NSX-_T3pUg@mail.gmail.com>
Message-ID: <CAEeXt4OOJ1W9HsRa96czBnTMXLY+hZ9tj3nKLPGS3fD10KaF_Q@mail.gmail.com>

On Mon, Aug 5, 2019 at 2:15 PM Waqar Khan <wk80333 at gmail.com> wrote:

> False alarm. Seems like there are some sneaky conditions when I get the
> error message.
> Like before, I use to get notifyFinish error everytime. Now, it seems that
> 6/10 times  things are "clean" but then 4/10 times there are notifyFinish
> errors.
> Wondering on your suggestion. How do I ensure whether the notifyFinish
> error deferred has been fired or not.
> Could I have like a vanilla "HelloWorld" example?
> Thanks
>
>
You can find an example of this here -
https://twistedmatrix.com/documents/current/web/howto/web-in-60/interrupted.html

Jean-Paul


> On Mon, Aug 5, 2019 at 2:24 AM Waqar Khan <wk80333 at gmail.com> wrote:
>
>> Hi Glyph,
>>     I am not sure I understand.
>>
>> Is there a method/variable in request which keeps a track whether
>> notifyFinish has been fired..
>> So, I can do something like.
>>
>> if not request.hasFiredNotifyFinish:
>>        request.finish()
>> ??
>>
>>
>> I have sort of able to get around this issue.. though I can't put a
>> finger on what actually worked.
>> Here is what I did.. First change to 19.7rc01 version.. and just fix the
>> channel issue.
>>
>> Next  self.fetch_response(request).. This is an async def.. So what I did
>> was..
>>
>> async def fetch_response(request):
>>         future = {}
>>         try:
>>            future = await some other async def.. which returns future
>>         except asyncio.CancelledError as e:
>>            print("Error..", e)
>>         return future
>>
>> I basically ended up doing this everywhere where there is async/await.
>> Next, I added this:
>> d.addErrback(lambda failure: failure.trap(asyncio.CancelledError))
>>
>>
>> So.. now.. I don't see the notifyFinish error anymore. And I am bit
>> terrified not to touch anything.. :-D
>>
>> But, I want to try out your suggestion as that seems like a more solid
>> way to handle the issue. But I am not sure I quite understand, how do I
>> figure out whether notifyFinish has been called before calling finish?
>>
>>
>> On Mon, Aug 5, 2019 at 1:56 AM Glyph <glyph at twistedmatrix.com> wrote:
>>
>>>
>>>
>>> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>>>
>>> Ah yes.. That is true..
>>>
>>> If I comment out request.finish() (Here is the doc which I tried to
>>> followed:
>>> https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
>>> )
>>> Then actually.. when I try to test out the code... (via curl or like
>>> doing requests.get .. to the URI)..
>>> it is just stuck..
>>>
>>>
>>> Yep!  This makes sense; if you don't call `.finish()` *at all* then
>>> your code will never tell the client that it's done.
>>>
>>> But if you call `.finish()` *after notifyFinish() has fired* then you
>>> get that error.
>>>
>>> If you change your code to only call `.finish()` if the deferred
>>> returned by notifyFinish() has not fired or failed yet, do you get the
>>> error?  It's possible that you still do, in which case, there's a bug in
>>> Twisted that needs to be fixed.
>>>
>>> I do want to convey my thanks for the help. Really appreciate it.
>>>
>>>
>>> Thanks for using Twisted :)
>>> -g
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/9188f3d8/attachment.html>

From wk80333 at gmail.com  Mon Aug  5 12:26:03 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Mon, 5 Aug 2019 14:26:03 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAEeXt4OOJ1W9HsRa96czBnTMXLY+hZ9tj3nKLPGS3fD10KaF_Q@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
 <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
 <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>
 <CAJuJkHPZTS7u65G6DrMVk9umaPwqzmgZvPkwCC3=NSX-_T3pUg@mail.gmail.com>
 <CAEeXt4OOJ1W9HsRa96czBnTMXLY+hZ9tj3nKLPGS3fD10KaF_Q@mail.gmail.com>
Message-ID: <CAJuJkHPnkc=dkT3PYgMw6HNzeSQ-c9ssfow=J7N64_UXMvts5w@mail.gmail.com>

Hi Jean,
  Yeah, actually that is the example that I looked into and implemented my
code.

The issue I have is.. still some instances of interrupted responses are not
trapped.
Copying pasting my minimal implementation for your convinence

def print_json_response(resp, request):
         request.write(json.dumps(resp))
         request.close()
class FooResource(resource.Resource):
       def render_GET(request):
              future = asyncio.ensure_future(self.fetch_response(request))
// some async await functions
              d = Deferred.fromFuture(future)
              d.addCallback(print_json_response, request) // this is
actually where the error is triggered.
              d.addErrback(lambda failure:
failure.trap(defer.CancelledError))
              finished_errback = request.notifyFinish()
              finished_errback.addErrback(self.handle_cancel, d) // simple
logs and cancels d by d.cancel()
              return NOT_DONE_YET

       async def fetch_response(self, request):
        future = {}
        try:
           future = await some other async def.. which returns future
        except asyncio.CancelledError as e:
           print("Error..", e)
        return future
    def handle_cancel(failure, d):
          d.cancel()
          print(failure.getTraceback())





On Mon, Aug 5, 2019 at 2:21 PM Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Mon, Aug 5, 2019 at 2:15 PM Waqar Khan <wk80333 at gmail.com> wrote:
>
>> False alarm. Seems like there are some sneaky conditions when I get the
>> error message.
>> Like before, I use to get notifyFinish error everytime. Now, it seems
>> that 6/10 times  things are "clean" but then 4/10 times there are
>> notifyFinish errors.
>> Wondering on your suggestion. How do I ensure whether the notifyFinish
>> error deferred has been fired or not.
>> Could I have like a vanilla "HelloWorld" example?
>> Thanks
>>
>>
> You can find an example of this here -
> https://twistedmatrix.com/documents/current/web/howto/web-in-60/interrupted.html
>
> Jean-Paul
>
>
>> On Mon, Aug 5, 2019 at 2:24 AM Waqar Khan <wk80333 at gmail.com> wrote:
>>
>>> Hi Glyph,
>>>     I am not sure I understand.
>>>
>>> Is there a method/variable in request which keeps a track whether
>>> notifyFinish has been fired..
>>> So, I can do something like.
>>>
>>> if not request.hasFiredNotifyFinish:
>>>        request.finish()
>>> ??
>>>
>>>
>>> I have sort of able to get around this issue.. though I can't put a
>>> finger on what actually worked.
>>> Here is what I did.. First change to 19.7rc01 version.. and just fix the
>>> channel issue.
>>>
>>> Next  self.fetch_response(request).. This is an async def.. So what I
>>> did was..
>>>
>>> async def fetch_response(request):
>>>         future = {}
>>>         try:
>>>            future = await some other async def.. which returns future
>>>         except asyncio.CancelledError as e:
>>>            print("Error..", e)
>>>         return future
>>>
>>> I basically ended up doing this everywhere where there is async/await.
>>> Next, I added this:
>>> d.addErrback(lambda failure: failure.trap(asyncio.CancelledError))
>>>
>>>
>>> So.. now.. I don't see the notifyFinish error anymore. And I am bit
>>> terrified not to touch anything.. :-D
>>>
>>> But, I want to try out your suggestion as that seems like a more solid
>>> way to handle the issue. But I am not sure I quite understand, how do I
>>> figure out whether notifyFinish has been called before calling finish?
>>>
>>>
>>> On Mon, Aug 5, 2019 at 1:56 AM Glyph <glyph at twistedmatrix.com> wrote:
>>>
>>>>
>>>>
>>>> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>>>>
>>>> Ah yes.. That is true..
>>>>
>>>> If I comment out request.finish() (Here is the doc which I tried to
>>>> followed:
>>>> https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
>>>> )
>>>> Then actually.. when I try to test out the code... (via curl or like
>>>> doing requests.get .. to the URI)..
>>>> it is just stuck..
>>>>
>>>>
>>>> Yep!  This makes sense; if you don't call `.finish()` *at all* then
>>>> your code will never tell the client that it's done.
>>>>
>>>> But if you call `.finish()` *after notifyFinish() has fired* then you
>>>> get that error.
>>>>
>>>> If you change your code to only call `.finish()` if the deferred
>>>> returned by notifyFinish() has not fired or failed yet, do you get the
>>>> error?  It's possible that you still do, in which case, there's a bug in
>>>> Twisted that needs to be fixed.
>>>>
>>>> I do want to convey my thanks for the help. Really appreciate it.
>>>>
>>>>
>>>> Thanks for using Twisted :)
>>>> -g
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/222f4248/attachment-0001.html>

From wk80333 at gmail.com  Mon Aug  5 12:30:52 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Mon, 5 Aug 2019 14:30:52 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHPnkc=dkT3PYgMw6HNzeSQ-c9ssfow=J7N64_UXMvts5w@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
 <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
 <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>
 <CAJuJkHPZTS7u65G6DrMVk9umaPwqzmgZvPkwCC3=NSX-_T3pUg@mail.gmail.com>
 <CAEeXt4OOJ1W9HsRa96czBnTMXLY+hZ9tj3nKLPGS3fD10KaF_Q@mail.gmail.com>
 <CAJuJkHPnkc=dkT3PYgMw6HNzeSQ-c9ssfow=J7N64_UXMvts5w@mail.gmail.com>
Message-ID: <CAJuJkHM4q1LGFvLABkJPRCx0_Fbv1-y36-aqKrkBs-LUapZvqw@mail.gmail.com>

To add on this.. Glpyh's suggestion was to not call `request.close()` if
notifyFinish() deferred has been fired.
But I am not sure how do I check if that deffered is available or not.

On Mon, Aug 5, 2019 at 2:26 PM Waqar Khan <wk80333 at gmail.com> wrote:

> Hi Jean,
>   Yeah, actually that is the example that I looked into and implemented my
> code.
>
> The issue I have is.. still some instances of interrupted responses are
> not trapped.
> Copying pasting my minimal implementation for your convinence
>
> def print_json_response(resp, request):
>          request.write(json.dumps(resp))
>          request.close()
> class FooResource(resource.Resource):
>        def render_GET(request):
>               future = asyncio.ensure_future(self.fetch_response(request))
> // some async await functions
>               d = Deferred.fromFuture(future)
>               d.addCallback(print_json_response, request) // this is
> actually where the error is triggered.
>               d.addErrback(lambda failure:
> failure.trap(defer.CancelledError))
>               finished_errback = request.notifyFinish()
>               finished_errback.addErrback(self.handle_cancel, d) // simple
> logs and cancels d by d.cancel()
>               return NOT_DONE_YET
>
>        async def fetch_response(self, request):
>         future = {}
>         try:
>            future = await some other async def.. which returns future
>         except asyncio.CancelledError as e:
>            print("Error..", e)
>         return future
>     def handle_cancel(failure, d):
>           d.cancel()
>           print(failure.getTraceback())
>
>
>
>
>
> On Mon, Aug 5, 2019 at 2:21 PM Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>> On Mon, Aug 5, 2019 at 2:15 PM Waqar Khan <wk80333 at gmail.com> wrote:
>>
>>> False alarm. Seems like there are some sneaky conditions when I get the
>>> error message.
>>> Like before, I use to get notifyFinish error everytime. Now, it seems
>>> that 6/10 times  things are "clean" but then 4/10 times there are
>>> notifyFinish errors.
>>> Wondering on your suggestion. How do I ensure whether the notifyFinish
>>> error deferred has been fired or not.
>>> Could I have like a vanilla "HelloWorld" example?
>>> Thanks
>>>
>>>
>> You can find an example of this here -
>> https://twistedmatrix.com/documents/current/web/howto/web-in-60/interrupted.html
>>
>> Jean-Paul
>>
>>
>>> On Mon, Aug 5, 2019 at 2:24 AM Waqar Khan <wk80333 at gmail.com> wrote:
>>>
>>>> Hi Glyph,
>>>>     I am not sure I understand.
>>>>
>>>> Is there a method/variable in request which keeps a track whether
>>>> notifyFinish has been fired..
>>>> So, I can do something like.
>>>>
>>>> if not request.hasFiredNotifyFinish:
>>>>        request.finish()
>>>> ??
>>>>
>>>>
>>>> I have sort of able to get around this issue.. though I can't put a
>>>> finger on what actually worked.
>>>> Here is what I did.. First change to 19.7rc01 version.. and just fix
>>>> the channel issue.
>>>>
>>>> Next  self.fetch_response(request).. This is an async def.. So what I
>>>> did was..
>>>>
>>>> async def fetch_response(request):
>>>>         future = {}
>>>>         try:
>>>>            future = await some other async def.. which returns future
>>>>         except asyncio.CancelledError as e:
>>>>            print("Error..", e)
>>>>         return future
>>>>
>>>> I basically ended up doing this everywhere where there is async/await.
>>>> Next, I added this:
>>>> d.addErrback(lambda failure: failure.trap(asyncio.CancelledError))
>>>>
>>>>
>>>> So.. now.. I don't see the notifyFinish error anymore. And I am bit
>>>> terrified not to touch anything.. :-D
>>>>
>>>> But, I want to try out your suggestion as that seems like a more solid
>>>> way to handle the issue. But I am not sure I quite understand, how do I
>>>> figure out whether notifyFinish has been called before calling finish?
>>>>
>>>>
>>>> On Mon, Aug 5, 2019 at 1:56 AM Glyph <glyph at twistedmatrix.com> wrote:
>>>>
>>>>>
>>>>>
>>>>> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>>>>>
>>>>> Ah yes.. That is true..
>>>>>
>>>>> If I comment out request.finish() (Here is the doc which I tried to
>>>>> followed:
>>>>> https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
>>>>> )
>>>>> Then actually.. when I try to test out the code... (via curl or like
>>>>> doing requests.get .. to the URI)..
>>>>> it is just stuck..
>>>>>
>>>>>
>>>>> Yep!  This makes sense; if you don't call `.finish()` *at all* then
>>>>> your code will never tell the client that it's done.
>>>>>
>>>>> But if you call `.finish()` *after notifyFinish() has fired* then you
>>>>> get that error.
>>>>>
>>>>> If you change your code to only call `.finish()` if the deferred
>>>>> returned by notifyFinish() has not fired or failed yet, do you get the
>>>>> error?  It's possible that you still do, in which case, there's a bug in
>>>>> Twisted that needs to be fixed.
>>>>>
>>>>> I do want to convey my thanks for the help. Really appreciate it.
>>>>>
>>>>>
>>>>> Thanks for using Twisted :)
>>>>> -g
>>>>>
>>>>> _______________________________________________
>>>>> Twisted-Python mailing list
>>>>> Twisted-Python at twistedmatrix.com
>>>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>>
>>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/94697cdc/attachment.html>

From sebastian at sipsolutions.net  Thu Aug  8 14:42:04 2019
From: sebastian at sipsolutions.net (Sebastian Berg)
Date: Thu, 08 Aug 2019 15:42:04 -0500
Subject: [Twisted-Python] Continued towncrier support?
Message-ID: <43ad6b6ff734841733b38d762b8b8c6f781ea26b.camel@sipsolutions.net>

Hi all,

I am not sure that this is the right place, but if I understand
correctly towncrier grew out of twisted. For NumPy (and likely more of
the scientific python ecosystem), we are looking into alternatives to
create release notes right now.

Towncrier seems to be a very nice option, but currently has some
limitations which do not fit to how our release notes are formatted. I
have started on a PR (and saw old stalled ones that did similar
things), which give towncrier enough flexibility to be used by us
nicely.

So this is just a ping to hope that we can keep towncrier moving a
little, I would prefer not to end up forking it or vendoring it into
NumPy.

Best,

Sebastian
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20190808/6b98d6f0/attachment.sig>

From exarkun at twistedmatrix.com  Thu Aug  8 15:07:18 2019
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 8 Aug 2019 17:07:18 -0400
Subject: [Twisted-Python] Continued towncrier support?
In-Reply-To: <43ad6b6ff734841733b38d762b8b8c6f781ea26b.camel@sipsolutions.net>
References: <43ad6b6ff734841733b38d762b8b8c6f781ea26b.camel@sipsolutions.net>
Message-ID: <CAEeXt4NgLiB+JcmNYAwukADjrAB2qsGg+9rkdz0HyNERjKhr+Q@mail.gmail.com>

On Thu, Aug 8, 2019 at 4:42 PM Sebastian Berg <sebastian at sipsolutions.net>
wrote:

> Hi all,
>
> I am not sure that this is the right place, but if I understand
> correctly towncrier grew out of twisted. For NumPy (and likely more of
> the scientific python ecosystem), we are looking into alternatives to
> create release notes right now.
>
> Towncrier seems to be a very nice option, but currently has some
> limitations which do not fit to how our release notes are formatted. I
> have started on a PR (and saw old stalled ones that did similar
> things), which give towncrier enough flexibility to be used by us
> nicely.
>

I like towncrier too!  And there seems to be plenty of community interest.
It would be sad to see this interest turn into a bunch of incompatible
forks.

To this end, I just filed https://github.com/hawkowl/towncrier/issues/159

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190808/d133b7c1/attachment.html>

From glyph at twistedmatrix.com  Thu Aug  8 21:44:27 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 8 Aug 2019 20:44:27 -0700
Subject: [Twisted-Python] Continued towncrier support?
In-Reply-To: <CAEeXt4NgLiB+JcmNYAwukADjrAB2qsGg+9rkdz0HyNERjKhr+Q@mail.gmail.com>
References: <43ad6b6ff734841733b38d762b8b8c6f781ea26b.camel@sipsolutions.net>
 <CAEeXt4NgLiB+JcmNYAwukADjrAB2qsGg+9rkdz0HyNERjKhr+Q@mail.gmail.com>
Message-ID: <98B17A9E-5436-4944-830A-03422DE3D639@twistedmatrix.com>



> On Aug 8, 2019, at 2:07 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Thu, Aug 8, 2019 at 4:42 PM Sebastian Berg <sebastian at sipsolutions.net <mailto:sebastian at sipsolutions.net>> wrote:
> Hi all,
> 
> I am not sure that this is the right place, but if I understand
> correctly towncrier grew out of twisted. For NumPy (and likely more of
> the scientific python ecosystem), we are looking into alternatives to
> create release notes right now.
> 
> Towncrier seems to be a very nice option, but currently has some
> limitations which do not fit to how our release notes are formatted. I
> have started on a PR (and saw old stalled ones that did similar
> things), which give towncrier enough flexibility to be used by us
> nicely.
> 
> I like towncrier too!  And there seems to be plenty of community interest.
> It would be sad to see this interest turn into a bunch of incompatible forks.
> 
> To this end, I just filed https://github.com/hawkowl/towncrier/issues/159 <https://github.com/hawkowl/towncrier/issues/159>
I'm not sure what Hawkie wants to do with it, but let me preemptively say that I'd be happy for the Twisted org to adopt it, but also happy for it to live wherever else.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190808/104c8e1c/attachment.html>

From trac at twistedmatrix.com  Sun Aug 11 00:05:17 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 11 Aug 2019 06:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1565503517.43.217002949014272337@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190811/a90dc025/attachment.html>

From ant at zimage.com  Sun Aug 11 13:31:20 2019
From: ant at zimage.com (Ant)
Date: Sun, 11 Aug 2019 12:31:20 -0700
Subject: [Twisted-Python] Pip's Twisted 19.7.0 package is offered to upgrade
 my v19.2.1...
Message-ID: <20190811193120.GA20640@beta.zimage.com>

Hello.

I cannot figure out how to report this minor bug of a minor upgrade 
issue (https://github.com/twisted/twisted didn't have an issues 
section) that I noticed since last week:

$ pip list --outdated                       DEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be the last one supporting it. Please upgrade your Python as Python 3.4 won't be maintained after March 2019 (cf PEP 429).
Package Version Latest Type
------- ------- ------ -----
Twisted 19.2.1  19.7.0 sdist

$ pip install --upgrade Twisted
DEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be the last one supporting it. Please upgrade your Python as Python 3.4 won't be maintained after March 2019 (cf PEP 429).
Collecting Twisted
  Using cached https://files.pythonhosted.org/packages/61/31/3855dcacd1d3b2e60c0b4ccc8e727b8cd497bd7087d327d81a9f0cbb580c/Twisted-19.7.0.tar.bz2
    ERROR: Complete output from command python setup.py egg_info:
    ERROR: Traceback (most recent call last):
      File "<string>", line 1, in <module>
      File "/tmp/pip-install-2h_su73e/Twisted/setup.py", line 20, in <module>
        setuptools.setup(**_setup["getSetupArgs"]())
      File "<string>", line 257, in getSetupArgs
      File "<string>", line 208, in _checkPythonVersion
    ImportError: Twisted on Python 3 requires Python 3.5 or later.
    ----------------------------------------
ERROR: Command "python setup.py egg_info" failed with error code 1 in /tmp/pip-install-2h_su73e/Twisted/


That v19.7.0 shouldn't even be offered for my outdated setups. :(

Thank you for reading and hopefully answering soon. :)


From sda at fstab.net  Sun Aug 11 16:03:15 2019
From: sda at fstab.net (Kyle Altendorf)
Date: Sun, 11 Aug 2019 18:03:15 -0400
Subject: [Twisted-Python] Pip's Twisted 19.7.0 package is offered to
 upgrade my v19.2.1...
In-Reply-To: <20190811193120.GA20640@beta.zimage.com>
References: <20190811193120.GA20640@beta.zimage.com>
Message-ID: <afce1e995e87c981e653101be9484f86@fstab.net>



On 2019-08-11 15:31, Ant wrote:
> Hello.
> 
> I cannot figure out how to report this minor bug of a minor upgrade
> issue (https://github.com/twisted/twisted didn't have an issues
> section) that I noticed since last week:
> 
> $ pip list --outdated                       DEPRECATION: Python 3.4
> support has been deprecated. pip 19.1 will be the last one supporting
> it. Please upgrade your Python as Python 3.4 won't be maintained after
> March 2019 (cf PEP 429).
> Package Version Latest Type
> ------- ------- ------ -----
> Twisted 19.2.1  19.7.0 sdist
> 
> $ pip install --upgrade Twisted
> DEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be
> the last one supporting it. Please upgrade your Python as Python 3.4
> won't be maintained after March 2019 (cf PEP 429).
> Collecting Twisted
>   Using cached
> https://files.pythonhosted.org/packages/61/31/3855dcacd1d3b2e60c0b4ccc8e727b8cd497bd7087d327d81a9f0cbb580c/Twisted-19.7.0.tar.bz2
>     ERROR: Complete output from command python setup.py egg_info:
>     ERROR: Traceback (most recent call last):
>       File "<string>", line 1, in <module>
>       File "/tmp/pip-install-2h_su73e/Twisted/setup.py", line 20, in 
> <module>
>         setuptools.setup(**_setup["getSetupArgs"]())
>       File "<string>", line 257, in getSetupArgs
>       File "<string>", line 208, in _checkPythonVersion
>     ImportError: Twisted on Python 3 requires Python 3.5 or later.
>     ----------------------------------------
> ERROR: Command "python setup.py egg_info" failed with error code 1 in
> /tmp/pip-install-2h_su73e/Twisted/
> 
> 
> That v19.7.0 shouldn't even be offered for my outdated setups. :(

Perhaps a `python_requires=` would do the trick?

https://github.com/twisted/twisted/blob/c55c778e6c7a758cb9cee568a9188ac49e628c27/src/twisted/python/_setup.py#L54-L75

Maybe: python_requires='>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*!=3.4.*'

And perhaps also drop the manual checking code?

I'm kind of busy but if someone else doesn't get to it first I'll try to 
get to a ticket/PR later.

Cheers,
-kyle


From glyph at twistedmatrix.com  Fri Aug 16 00:31:44 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 15 Aug 2019 23:31:44 -0700
Subject: [Twisted-Python] Twisted 19.7.0 Release Announcement
Message-ID: <16722D65-DE78-4A78-A447-427C3CB2F5E8@twistedmatrix.com>

On behalf of Twisted Matrix Laboratories and our long-suffering release manager Amber Brown, I am honored to announce[1] the release of Twisted 19.7.0!

The highlights of this release include:
A full description on the PyPI page!  Check it out here: https://pypi.org/project/Twisted/19.7.0/ <https://pypi.org/project/Twisted/19.7.0/> (and compare to the slightly sad previous version, here: https://pypi.org/project/Twisted/19.2.1/ <https://pypi.org/project/Twisted/19.2.1/>)
twisted.test.proto_helpers has been renamed to "twisted.internet.testing"
This removes the gross special-case carve-out where it was the only "public" API in a test module, and now the rule is that all test modules are private once again.
Conch's SSH server now supports hmac-sha2-512.
The XMPP server in Twisted Words will now validate certificates!
This is a very important security fix for any twisted.words / XMPP users. (See https://twistedmatrix.com/trac/ticket/9561 <https://twistedmatrix.com/trac/ticket/9561>)
A nasty data-corruption bug in the IOCP reactor was fixed. If you're doing high-volume I/O on Windows you'll want to upgrade!
Twisted Web no longer gives clients a traceback by default, both when you instantiate Site and when you use `twist web` on the command line.  You can turn this behavior back on for local developemnt with `twist web --display-tracebacks`.
Several bugfixes and documentation fixes resolving bytes/unicode type confusion in twisted.web.
Python 3.4 is no longer supported.
`pip install -U twisted[tls]` and enjoy all these enhancements today!

Thanks for using Twisted,

-glyph

[1]: somewhat belatedly: it came out 10 days ago.  Oops!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190815/174ae50d/attachment.html>

From dynamicgl at gmail.com  Fri Aug 16 07:49:23 2019
From: dynamicgl at gmail.com (Gelin Yan)
Date: Fri, 16 Aug 2019 21:49:23 +0800
Subject: [Twisted-Python] Twisted 19.7.0 Release Announcement
In-Reply-To: <16722D65-DE78-4A78-A447-427C3CB2F5E8@twistedmatrix.com>
References: <16722D65-DE78-4A78-A447-427C3CB2F5E8@twistedmatrix.com>
Message-ID: <CABkOF6T2XkQOJ5TZ7FD+JmG0BPjFXzy9+rhaUCDNkrcRxkZVSw@mail.gmail.com>

On Friday, August 16, 2019, Glyph <glyph at twistedmatrix.com> wrote:

> On behalf of Twisted Matrix Laboratories and our long-suffering release
> manager Amber Brown, I am honored to announce[1] the release of Twisted
> 19.7.0!
>
> The highlights of this release include:
>
>    - A full description on the PyPI page!  Check it out here:
>    https://pypi.org/project/Twisted/19.7.0/
>    <https://pypi.org/project/Twisted/19.7.0/> (and compare to the
>    slightly sad previous version, here: https://pypi.org/project/
>    Twisted/19.2.1/)
>    - twisted.test.proto_helpers has been renamed to
>    "twisted.internet.testing"
>       - This removes the gross special-case carve-out where it was the
>       only "public" API in a test module, and now the rule is that all test
>       modules are private once again.
>    - Conch's SSH server now supports hmac-sha2-512.
>    - The XMPP server in Twisted Words will now validate certificates!
>       - This is a *very* important security fix for any twisted.words /
>       XMPP users. (See https://twistedmatrix.com/trac/ticket/9561)
>    - A nasty data-corruption bug in the IOCP reactor was fixed. If you're
>    doing high-volume I/O on Windows you'll want to upgrade!
>    - Twisted Web no longer gives clients a traceback by default, both
>    when you instantiate Site and when you use `twist web` on the command
>    line.  You can turn this behavior back on for local developemnt with `twist
>    web --display-tracebacks`.
>    - Several bugfixes and documentation fixes resolving bytes/unicode
>    type confusion in twisted.web.
>    - Python 3.4 is no longer supported.
>
> `pip install -U twisted[tls]` and enjoy all these enhancements today!
>
> Thanks for using Twisted,
>
> -glyph
>
> [1]: somewhat belatedly: it came out 10 days ago.  Oops!
>
>
 https://twistedmatrix.com/trac/ticket/5562

I think the recent iocp patch might fix this bug.


regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190816/c6a33265/attachment.html>

From glyph at twistedmatrix.com  Fri Aug 16 11:59:29 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 16 Aug 2019 10:59:29 -0700
Subject: [Twisted-Python] Twisted 19.7.0 Release Announcement
In-Reply-To: <CABkOF6T2XkQOJ5TZ7FD+JmG0BPjFXzy9+rhaUCDNkrcRxkZVSw@mail.gmail.com>
References: <16722D65-DE78-4A78-A447-427C3CB2F5E8@twistedmatrix.com>
 <CABkOF6T2XkQOJ5TZ7FD+JmG0BPjFXzy9+rhaUCDNkrcRxkZVSw@mail.gmail.com>
Message-ID: <286a5e5d-2c84-4f11-accd-bd7351dfcf85@www.fastmail.com>


On Fri, Aug 16, 2019, at 6:49 AM, Gelin Yan wrote:
> https://twistedmatrix.com/trac/ticket/5562
> 
> I think the recent iocp patch might fix this bug.

I think you're right - thanks for pointing this out! I've marked it as a duplicate as a result. I suspect we might have a couple of other Windows users who have run into this over the years, so if you're aware of any other dupes it would be good to find them in Trac and close them out.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190816/dfceaab5/attachment.html>

From trac at twistedmatrix.com  Sun Aug 18 00:05:18 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 18 Aug 2019 06:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1566108318.14.2583349099324042189@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190818/0a87d10d/attachment.html>

From trac at twistedmatrix.com  Sun Aug 25 00:05:18 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 25 Aug 2019 06:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1566713118.98.2139307165839854838@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190825/d5620bec/attachment.html>

From wk80333 at gmail.com  Fri Aug  2 17:31:22 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Fri, 2 Aug 2019 19:31:22 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
Message-ID: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>

Hi,
  I have a twisted server. And I have been seeing this annoying issue.
Normally. when i develop and test it out. everything is fine..
But then I try to loadtest is via https://locust.io/

Again, everything is fine.. until I "stop" the test.
Then, I see this
'Traceback (most recent call last):\n  File
"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
line 88, in _run\n    self._context.run(self._callback, *self._args)\n
 File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 827, in adapt\n    adapt.actual.callback(extracted)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
460, in callback\n    self._startRunCallbacks(result)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
568, in _startRunCallbacks\n    self._runCallbacks()\n--- <exception caught
here> ---\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
654, in _runCallbacks\n    current.result = callback(current.result, *args,
**kw)\n  File
....
 File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line
238, in write\n    http.Request.write(self, data)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1118, in
write\n    self.channel.writeHeaders(version, code, reason,
headers)\nbuiltins.AttributeError: \'NoneType\' object has no attribute
\'writeHeaders\'\n'


I found this similar bug report:
https://github.com/buildbot/buildbot/issues/4045
But I am using 19.2.1 twisted version..
Again, this is only triggered when I "stop" the locust io test.
Any suggestions?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190802/cbca2274/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Aug  3 13:55:36 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 3 Aug 2019 12:55:36 -0700
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
Message-ID: <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>



> On Aug 2, 2019, at 4:31 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> 
> Hi,
>   I have a twisted server. And I have been seeing this annoying issue.
> Normally. when i develop and test it out. everything is fine..
> But then I try to loadtest is via https://locust.io/ <https://locust.io/>
> 
> Again, everything is fine.. until I "stop" the test.
> Then, I see this
> 'Traceback (most recent call last):\n  File "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py", line 88, in _run\n    self._context.run(self._callback, *self._args)\n  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 827, in adapt\n    adapt.actual.callback(extracted)\n  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 460, in callback\n    self._startRunCallbacks(result)\n  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 568, in _startRunCallbacks\n    self._runCallbacks()\n--- <exception caught here> ---\n  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 654, in _runCallbacks\n    current.result = callback(current.result, *args, **kw)\n  File 
> ....
>  File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line 238, in write\n    http.Request.write(self, data)\n  File "/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1118, in write\n    self.channel.writeHeaders(version, code, reason, headers)\nbuiltins.AttributeError: \'NoneType\' object has no attribute \'writeHeaders\'\n'
> 
> 
> I found this similar bug report: https://github.com/buildbot/buildbot/issues/4045 <https://github.com/buildbot/buildbot/issues/4045>
> But I am using 19.2.1 twisted version..

There is a prerelease version, with this bug fixed, that is awaiting final release upload right now; can you try with Twisted==19.7.0rc1 ?  That should fix this issue.  If not, then we have some investigating to do :-).

-g

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190803/840fffc1/attachment-0002.html>

From trac at twistedmatrix.com  Sun Aug  4 00:05:18 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 04 Aug 2019 06:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1564898718.25.2636011374928983374@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190804/973c7618/attachment-0002.html>

From wk80333 at gmail.com  Sun Aug  4 18:57:10 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Sun, 4 Aug 2019 20:57:10 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
Message-ID: <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>

Hi Glyph,
  Thanks for the suggestion.
I tried the suggestion.. While it fixes the self.channel NoneType issue..
It creates another issue.

Traceback (most recent call last):
  File
"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
line 88, in _run
    self._context.run(self._callback, *self._args)
  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 827, in adapt
    adapt.actual.callback(extracted)
  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 460, in callback
    self._startRunCallbacks(result)
  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 568, in _startRunCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 654, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
......
    request.finish()
  File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line
268, in finish
    return http.Request.finish(self)
  File "/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line
1071, in finish
    "Request.finish called on a request after its connection was lost; "
builtins.RuntimeError: Request.finish called on a request after its
connection was lost; use Request.notifyFinish to keep track of this.


 I have got some handle on the issue. I was wondering if you have any
advise on how to debug the issue.
Somewhere in the codebase are async/await code (from asyncio world). Hence,
when the connection is closed down by client, seems like those pending
coroutines are lingering on.

def connectionLost(self, channel, reason):

    t =  asyncio.all_tasks(asyncio.get_event_loop())

    print("pending tasks ", len(t))

The above does shows the list of pending tasks.  I am wondering if you have
any advice on how to kill these coroutines?
Also, I apologize if this is the wrong community to ask and if I should
post it to asyncio community?
Thanks for all the help.
Regards,
Waqar





On Sat, Aug 3, 2019 at 3:56 PM Glyph <glyph at twistedmatrix.com> wrote:

>
>
> On Aug 2, 2019, at 4:31 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>
> Hi,
>   I have a twisted server. And I have been seeing this annoying issue.
> Normally. when i develop and test it out. everything is fine..
> But then I try to loadtest is via https://locust.io/
>
> Again, everything is fine.. until I "stop" the test.
> Then, I see this
> 'Traceback (most recent call last):\n  File
> "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
> line 88, in _run\n    self._context.run(self._callback, *self._args)\n
>  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
> line 827, in adapt\n    adapt.actual.callback(extracted)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 460, in callback\n    self._startRunCallbacks(result)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 568, in _startRunCallbacks\n    self._runCallbacks()\n--- <exception caught
> here> ---\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 654, in _runCallbacks\n    current.result = callback(current.result, *args,
> **kw)\n  File
> ....
>  File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line
> 238, in write\n    http.Request.write(self, data)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1118, in
> write\n    self.channel.writeHeaders(version, code, reason,
> headers)\nbuiltins.AttributeError: \'NoneType\' object has no attribute
> \'writeHeaders\'\n'
>
>
> I found this similar bug report:
> https://github.com/buildbot/buildbot/issues/4045
> But I am using 19.2.1 twisted version..
>
>
> There is a prerelease version, with this bug fixed, that is awaiting final
> release upload right now; can you try with Twisted==19.7.0rc1 ?  That
> should fix this issue.  If not, then we have some investigating to do :-).
>
> -g
>
> -g
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190804/444ec03e/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Aug  4 20:35:05 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 4 Aug 2019 19:35:05 -0700
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
Message-ID: <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>



> On Aug 4, 2019, at 5:57 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> 
> Hi Glyph,
>   Thanks for the suggestion.
> I tried the suggestion.. While it fixes the self.channel NoneType issue.. It creates another issue.
> 
> Traceback (most recent call last):
>   File "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py", line 88, in _run
>     self._context.run(self._callback, *self._args)
>   File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 827, in adapt
>     adapt.actual.callback(extracted)
>   File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 460, in callback
>     self._startRunCallbacks(result)
>   File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 568, in _startRunCallbacks
>     self._runCallbacks()
> --- <exception caught here> ---
>   File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line 654, in _runCallbacks
>     current.result = callback(current.result, *args, **kw)
> ......
>     request.finish()
>   File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line 268, in finish
>     return http.Request.finish(self)
>   File "/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1071, in finish
>     "Request.finish called on a request after its connection was lost; "
> builtins.RuntimeError: Request.finish called on a request after its connection was lost; use Request.notifyFinish to keep track of this.

Oh, hrm.  The idea here is that any code that returns NOT_DONE_YET (i.e. does asynchronous work to generate a response) should also be tracking whether it needs to call `.finish()` by watching a `.notifyFinish()` Deferred.  I bet that there are plenty of resources in Twisted which don't follow this rule, and we should fix those; but possibly we should also make this error message less stern.  Do you have a minimal example?

>  I have got some handle on the issue. I was wondering if you have any advise on how to debug the issue. 
> Somewhere in the codebase are async/await code (from asyncio world). Hence, when the connection is closed down by client, seems like those pending coroutines are lingering on.

This, I have no idea about.  What tasks are you starting, when are you expecting them to get cleaned up, what are they blocking on, how do these interact with Twisted?  There are a couple dozen questions I'd have to know the answer to in order to even begin debugging this.  If you cancel all the outstanding tasks and look at their tracebacks when exiting it might give you more of a sense of where they're stuck...

-g



From wk80333 at gmail.com  Sun Aug  4 21:26:01 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Sun, 4 Aug 2019 23:26:01 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
Message-ID: <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>

Hi Glyph,
   Here is the minimal version


class FooResource(resource.Resource):
       def render_GET(request):
              future = asyncio.ensure_future(self.fetch_response(request))
// some async await functions
              d = Deferred.fromFuture(future)
              d.addCallback(print_json_response, request) // this is
actually where the error is triggered.
              d.addErrback(lambda failure:
failure.trap(defer.CancelledError))
              finished_errback = request.notifyFinish()
              finished_errback.addErrback(self.handle_cancel, d) // simple
logs and cancels d by d.cancel()
              return NOT_DONE_YET

The traceback is like
'Traceback (most recent call last):\n  File
"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
line 88, in _run\n    self._context.run(self._callback, *self._args)\n
 File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
line 827, in adapt\n    adapt.actual.callback(extracted)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
460, in callback\n    self._startRunCallbacks(result)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
568, in _startRunCallbacks\n    self._runCallbacks()\n--- <exception caught
here> ---\n  File
"/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
654, in _runCallbacks\n    current.result = callback(current.result, *args,
**kw)\n  File "/Users/wqKhan/twisted_eg/parse_response.py", line 3, in
print_json_response\n    *print_json_response*(response, request)\n  File
"/Users/wqKhan/twisted_eg/parse_response.py", line 21, in
*print_json_response*\n    request.finish()\n  File
"/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line 268,
in finish\n    return http.Request.finish(self)\n  File
"/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1071, in
finish\n    "Request.finish called on a request after its connection was
lost; "\nbuiltins.RuntimeError: Request.finish called on a request after
its connection was lost; use Request.notifyFinish to keep track of this.\n'



On Sun, Aug 4, 2019 at 10:36 PM Glyph <glyph at twistedmatrix.com> wrote:

>
>
> > On Aug 4, 2019, at 5:57 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> >
> > Hi Glyph,
> >   Thanks for the suggestion.
> > I tried the suggestion.. While it fixes the self.channel NoneType
> issue.. It creates another issue.
> >
> > Traceback (most recent call last):
> >   File
> "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
> line 88, in _run
> >     self._context.run(self._callback, *self._args)
> >   File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 827, in adapt
> >     adapt.actual.callback(extracted)
> >   File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 460, in callback
> >     self._startRunCallbacks(result)
> >   File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 568, in _startRunCallbacks
> >     self._runCallbacks()
> > --- <exception caught here> ---
> >   File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 654, in _runCallbacks
> >     current.result = callback(current.result, *args, **kw)
> > ......
> >     request.finish()
> >   File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py",
> line 268, in finish
> >     return http.Request.finish(self)
> >   File "/usr/local/lib/python3.7/site-packages/twisted/web/http.py",
> line 1071, in finish
> >     "Request.finish called on a request after its connection was lost; "
> > builtins.RuntimeError: Request.finish called on a request after its
> connection was lost; use Request.notifyFinish to keep track of this.
>
> Oh, hrm.  The idea here is that any code that returns NOT_DONE_YET (i.e.
> does asynchronous work to generate a response) should also be tracking
> whether it needs to call `.finish()` by watching a `.notifyFinish()`
> Deferred.  I bet that there are plenty of resources in Twisted which don't
> follow this rule, and we should fix those; but possibly we should also make
> this error message less stern.  Do you have a minimal example?
>
> >  I have got some handle on the issue. I was wondering if you have any
> advise on how to debug the issue.
> > Somewhere in the codebase are async/await code (from asyncio world).
> Hence, when the connection is closed down by client, seems like those
> pending coroutines are lingering on.
>
> This, I have no idea about.  What tasks are you starting, when are you
> expecting them to get cleaned up, what are they blocking on, how do these
> interact with Twisted?  There are a couple dozen questions I'd have to know
> the answer to in order to even begin debugging this.  If you cancel all the
> outstanding tasks and look at their tracebacks when exiting it might give
> you more of a sense of where they're stuck...
>
> -g
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190804/8cb46f00/attachment-0002.html>

From wk80333 at gmail.com  Sun Aug  4 21:43:08 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Sun, 4 Aug 2019 23:43:08 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
Message-ID: <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>

Just for sake of completeness:
def print_json_response(resp, request):
         request.write(json.dumps(resp))
         request.close()

It is this close function which is causing the issue
I suspect that somehow the fact that the client has closed the connection,
is not being handled.


On Sun, Aug 4, 2019 at 11:26 PM Waqar Khan <wk80333 at gmail.com> wrote:

> Hi Glyph,
>    Here is the minimal version
>
>
> class FooResource(resource.Resource):
>        def render_GET(request):
>               future = asyncio.ensure_future(self.fetch_response(request))
> // some async await functions
>               d = Deferred.fromFuture(future)
>               d.addCallback(print_json_response, request) // this is
> actually where the error is triggered.
>               d.addErrback(lambda failure:
> failure.trap(defer.CancelledError))
>               finished_errback = request.notifyFinish()
>               finished_errback.addErrback(self.handle_cancel, d) // simple
> logs and cancels d by d.cancel()
>               return NOT_DONE_YET
>
> The traceback is like
> 'Traceback (most recent call last):\n  File
> "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
> line 88, in _run\n    self._context.run(self._callback, *self._args)\n
>  File "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py",
> line 827, in adapt\n    adapt.actual.callback(extracted)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 460, in callback\n    self._startRunCallbacks(result)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 568, in _startRunCallbacks\n    self._runCallbacks()\n--- <exception caught
> here> ---\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
> 654, in _runCallbacks\n    current.result = callback(current.result, *args,
> **kw)\n  File "/Users/wqKhan/twisted_eg/parse_response.py", line 3, in
> print_json_response\n    *print_json_response*(response, request)\n  File
> "/Users/wqKhan/twisted_eg/parse_response.py", line 21, in
> *print_json_response*\n    request.finish()\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/web/server.py", line 268,
> in finish\n    return http.Request.finish(self)\n  File
> "/usr/local/lib/python3.7/site-packages/twisted/web/http.py", line 1071, in
> finish\n    "Request.finish called on a request after its connection was
> lost; "\nbuiltins.RuntimeError: Request.finish called on a request after
> its connection was lost; use Request.notifyFinish to keep track of this.\n'
>
>
>
> On Sun, Aug 4, 2019 at 10:36 PM Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>>
>> > On Aug 4, 2019, at 5:57 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>> >
>> > Hi Glyph,
>> >   Thanks for the suggestion.
>> > I tried the suggestion.. While it fixes the self.channel NoneType
>> issue.. It creates another issue.
>> >
>> > Traceback (most recent call last):
>> >   File
>> "/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py",
>> line 88, in _run
>> >     self._context.run(self._callback, *self._args)
>> >   File
>> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
>> 827, in adapt
>> >     adapt.actual.callback(extracted)
>> >   File
>> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
>> 460, in callback
>> >     self._startRunCallbacks(result)
>> >   File
>> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
>> 568, in _startRunCallbacks
>> >     self._runCallbacks()
>> > --- <exception caught here> ---
>> >   File
>> "/usr/local/lib/python3.7/site-packages/twisted/internet/defer.py", line
>> 654, in _runCallbacks
>> >     current.result = callback(current.result, *args, **kw)
>> > ......
>> >     request.finish()
>> >   File "/usr/local/lib/python3.7/site-packages/twisted/web/server.py",
>> line 268, in finish
>> >     return http.Request.finish(self)
>> >   File "/usr/local/lib/python3.7/site-packages/twisted/web/http.py",
>> line 1071, in finish
>> >     "Request.finish called on a request after its connection was lost; "
>> > builtins.RuntimeError: Request.finish called on a request after its
>> connection was lost; use Request.notifyFinish to keep track of this.
>>
>> Oh, hrm.  The idea here is that any code that returns NOT_DONE_YET (i.e.
>> does asynchronous work to generate a response) should also be tracking
>> whether it needs to call `.finish()` by watching a `.notifyFinish()`
>> Deferred.  I bet that there are plenty of resources in Twisted which don't
>> follow this rule, and we should fix those; but possibly we should also make
>> this error message less stern.  Do you have a minimal example?
>>
>> >  I have got some handle on the issue. I was wondering if you have any
>> advise on how to debug the issue.
>> > Somewhere in the codebase are async/await code (from asyncio world).
>> Hence, when the connection is closed down by client, seems like those
>> pending coroutines are lingering on.
>>
>> This, I have no idea about.  What tasks are you starting, when are you
>> expecting them to get cleaned up, what are they blocking on, how do these
>> interact with Twisted?  There are a couple dozen questions I'd have to know
>> the answer to in order to even begin debugging this.  If you cancel all the
>> outstanding tasks and look at their tracebacks when exiting it might give
>> you more of a sense of where they're stuck...
>>
>> -g
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190804/c7c5ec3b/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Aug  4 21:54:08 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 4 Aug 2019 20:54:08 -0700
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
Message-ID: <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>



> On Aug 4, 2019, at 8:43 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> 
> Just for sake of completeness:
> def print_json_response(resp, request):
>          request.write(json.dumps(resp))
>          request.close()

Presumably this line actually says "request.finish()"?

This is indeed the problem; just don't call "request.finish()" if notifyFinish() has already been callback'd.

-g



From wk80333 at gmail.com  Sun Aug  4 22:04:27 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Mon, 5 Aug 2019 00:04:27 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
Message-ID: <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>

Ah yes.. That is true..

If I comment out request.finish() (Here is the doc which I tried to
followed:
https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
)
Then actually.. when I try to test out the code... (via curl or like doing
requests.get .. to the URI)..
it is just stuck..

In [491]: requests.get("http://0.0.0.0:9999/test ....with params " )
It just stays stuck :(


I do want to convey my thanks for the help. Really appreciate it.


On Sun, Aug 4, 2019 at 11:55 PM Glyph <glyph at twistedmatrix.com> wrote:

>
>
> > On Aug 4, 2019, at 8:43 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> >
> > Just for sake of completeness:
> > def print_json_response(resp, request):
> >          request.write(json.dumps(resp))
> >          request.close()
>
> Presumably this line actually says "request.finish()"?
>
> This is indeed the problem; just don't call "request.finish()" if
> notifyFinish() has already been callback'd.
>
> -g
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/9f86e7c6/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Aug  4 23:55:33 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 4 Aug 2019 22:55:33 -0700
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
Message-ID: <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>



> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
> 
> Ah yes.. That is true..
> 
> If I comment out request.finish() (Here is the doc which I tried to followed: https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html <https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html>) 
> Then actually.. when I try to test out the code... (via curl or like doing requests.get .. to the URI).. 
> it is just stuck..

Yep!  This makes sense; if you don't call `.finish()` at all then your code will never tell the client that it's done.

But if you call `.finish()` after notifyFinish() has fired then you get that error.

If you change your code to only call `.finish()` if the deferred returned by notifyFinish() has not fired or failed yet, do you get the error?  It's possible that you still do, in which case, there's a bug in Twisted that needs to be fixed.

> I do want to convey my thanks for the help. Really appreciate it.

Thanks for using Twisted :)
-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190804/9344b45f/attachment-0002.html>

From wk80333 at gmail.com  Mon Aug  5 00:24:37 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Mon, 5 Aug 2019 02:24:37 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
 <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
Message-ID: <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>

Hi Glyph,
    I am not sure I understand.

Is there a method/variable in request which keeps a track whether
notifyFinish has been fired..
So, I can do something like.

if not request.hasFiredNotifyFinish:
       request.finish()
??


I have sort of able to get around this issue.. though I can't put a finger
on what actually worked.
Here is what I did.. First change to 19.7rc01 version.. and just fix the
channel issue.

Next  self.fetch_response(request).. This is an async def.. So what I did
was..

async def fetch_response(request):
        future = {}
        try:
           future = await some other async def.. which returns future
        except asyncio.CancelledError as e:
           print("Error..", e)
        return future

I basically ended up doing this everywhere where there is async/await.
Next, I added this:
d.addErrback(lambda failure: failure.trap(asyncio.CancelledError))


So.. now.. I don't see the notifyFinish error anymore. And I am bit
terrified not to touch anything.. :-D

But, I want to try out your suggestion as that seems like a more solid way
to handle the issue. But I am not sure I quite understand, how do I figure
out whether notifyFinish has been called before calling finish?


On Mon, Aug 5, 2019 at 1:56 AM Glyph <glyph at twistedmatrix.com> wrote:

>
>
> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>
> Ah yes.. That is true..
>
> If I comment out request.finish() (Here is the doc which I tried to
> followed:
> https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
> )
> Then actually.. when I try to test out the code... (via curl or like doing
> requests.get .. to the URI)..
> it is just stuck..
>
>
> Yep!  This makes sense; if you don't call `.finish()` *at all* then your
> code will never tell the client that it's done.
>
> But if you call `.finish()` *after notifyFinish() has fired* then you get
> that error.
>
> If you change your code to only call `.finish()` if the deferred returned
> by notifyFinish() has not fired or failed yet, do you get the error?  It's
> possible that you still do, in which case, there's a bug in Twisted that
> needs to be fixed.
>
> I do want to convey my thanks for the help. Really appreciate it.
>
>
> Thanks for using Twisted :)
> -g
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/b04274c8/attachment-0002.html>

From wk80333 at gmail.com  Mon Aug  5 12:15:28 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Mon, 5 Aug 2019 14:15:28 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
 <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
 <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>
Message-ID: <CAJuJkHPZTS7u65G6DrMVk9umaPwqzmgZvPkwCC3=NSX-_T3pUg@mail.gmail.com>

False alarm. Seems like there are some sneaky conditions when I get the
error message.
Like before, I use to get notifyFinish error everytime. Now, it seems that
6/10 times  things are "clean" but then 4/10 times there are notifyFinish
errors.
Wondering on your suggestion. How do I ensure whether the notifyFinish
error deferred has been fired or not.
Could I have like a vanilla "HelloWorld" example?
Thanks

On Mon, Aug 5, 2019 at 2:24 AM Waqar Khan <wk80333 at gmail.com> wrote:

> Hi Glyph,
>     I am not sure I understand.
>
> Is there a method/variable in request which keeps a track whether
> notifyFinish has been fired..
> So, I can do something like.
>
> if not request.hasFiredNotifyFinish:
>        request.finish()
> ??
>
>
> I have sort of able to get around this issue.. though I can't put a finger
> on what actually worked.
> Here is what I did.. First change to 19.7rc01 version.. and just fix the
> channel issue.
>
> Next  self.fetch_response(request).. This is an async def.. So what I did
> was..
>
> async def fetch_response(request):
>         future = {}
>         try:
>            future = await some other async def.. which returns future
>         except asyncio.CancelledError as e:
>            print("Error..", e)
>         return future
>
> I basically ended up doing this everywhere where there is async/await.
> Next, I added this:
> d.addErrback(lambda failure: failure.trap(asyncio.CancelledError))
>
>
> So.. now.. I don't see the notifyFinish error anymore. And I am bit
> terrified not to touch anything.. :-D
>
> But, I want to try out your suggestion as that seems like a more solid way
> to handle the issue. But I am not sure I quite understand, how do I figure
> out whether notifyFinish has been called before calling finish?
>
>
> On Mon, Aug 5, 2019 at 1:56 AM Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>>
>> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>>
>> Ah yes.. That is true..
>>
>> If I comment out request.finish() (Here is the doc which I tried to
>> followed:
>> https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
>> )
>> Then actually.. when I try to test out the code... (via curl or like
>> doing requests.get .. to the URI)..
>> it is just stuck..
>>
>>
>> Yep!  This makes sense; if you don't call `.finish()` *at all* then your
>> code will never tell the client that it's done.
>>
>> But if you call `.finish()` *after notifyFinish() has fired* then you
>> get that error.
>>
>> If you change your code to only call `.finish()` if the deferred returned
>> by notifyFinish() has not fired or failed yet, do you get the error?  It's
>> possible that you still do, in which case, there's a bug in Twisted that
>> needs to be fixed.
>>
>> I do want to convey my thanks for the help. Really appreciate it.
>>
>>
>> Thanks for using Twisted :)
>> -g
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/26161335/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Aug  5 12:21:26 2019
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 5 Aug 2019 14:21:26 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHPZTS7u65G6DrMVk9umaPwqzmgZvPkwCC3=NSX-_T3pUg@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
 <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
 <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>
 <CAJuJkHPZTS7u65G6DrMVk9umaPwqzmgZvPkwCC3=NSX-_T3pUg@mail.gmail.com>
Message-ID: <CAEeXt4OOJ1W9HsRa96czBnTMXLY+hZ9tj3nKLPGS3fD10KaF_Q@mail.gmail.com>

On Mon, Aug 5, 2019 at 2:15 PM Waqar Khan <wk80333 at gmail.com> wrote:

> False alarm. Seems like there are some sneaky conditions when I get the
> error message.
> Like before, I use to get notifyFinish error everytime. Now, it seems that
> 6/10 times  things are "clean" but then 4/10 times there are notifyFinish
> errors.
> Wondering on your suggestion. How do I ensure whether the notifyFinish
> error deferred has been fired or not.
> Could I have like a vanilla "HelloWorld" example?
> Thanks
>
>
You can find an example of this here -
https://twistedmatrix.com/documents/current/web/howto/web-in-60/interrupted.html

Jean-Paul


> On Mon, Aug 5, 2019 at 2:24 AM Waqar Khan <wk80333 at gmail.com> wrote:
>
>> Hi Glyph,
>>     I am not sure I understand.
>>
>> Is there a method/variable in request which keeps a track whether
>> notifyFinish has been fired..
>> So, I can do something like.
>>
>> if not request.hasFiredNotifyFinish:
>>        request.finish()
>> ??
>>
>>
>> I have sort of able to get around this issue.. though I can't put a
>> finger on what actually worked.
>> Here is what I did.. First change to 19.7rc01 version.. and just fix the
>> channel issue.
>>
>> Next  self.fetch_response(request).. This is an async def.. So what I did
>> was..
>>
>> async def fetch_response(request):
>>         future = {}
>>         try:
>>            future = await some other async def.. which returns future
>>         except asyncio.CancelledError as e:
>>            print("Error..", e)
>>         return future
>>
>> I basically ended up doing this everywhere where there is async/await.
>> Next, I added this:
>> d.addErrback(lambda failure: failure.trap(asyncio.CancelledError))
>>
>>
>> So.. now.. I don't see the notifyFinish error anymore. And I am bit
>> terrified not to touch anything.. :-D
>>
>> But, I want to try out your suggestion as that seems like a more solid
>> way to handle the issue. But I am not sure I quite understand, how do I
>> figure out whether notifyFinish has been called before calling finish?
>>
>>
>> On Mon, Aug 5, 2019 at 1:56 AM Glyph <glyph at twistedmatrix.com> wrote:
>>
>>>
>>>
>>> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>>>
>>> Ah yes.. That is true..
>>>
>>> If I comment out request.finish() (Here is the doc which I tried to
>>> followed:
>>> https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
>>> )
>>> Then actually.. when I try to test out the code... (via curl or like
>>> doing requests.get .. to the URI)..
>>> it is just stuck..
>>>
>>>
>>> Yep!  This makes sense; if you don't call `.finish()` *at all* then
>>> your code will never tell the client that it's done.
>>>
>>> But if you call `.finish()` *after notifyFinish() has fired* then you
>>> get that error.
>>>
>>> If you change your code to only call `.finish()` if the deferred
>>> returned by notifyFinish() has not fired or failed yet, do you get the
>>> error?  It's possible that you still do, in which case, there's a bug in
>>> Twisted that needs to be fixed.
>>>
>>> I do want to convey my thanks for the help. Really appreciate it.
>>>
>>>
>>> Thanks for using Twisted :)
>>> -g
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/9188f3d8/attachment-0002.html>

From wk80333 at gmail.com  Mon Aug  5 12:26:03 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Mon, 5 Aug 2019 14:26:03 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAEeXt4OOJ1W9HsRa96czBnTMXLY+hZ9tj3nKLPGS3fD10KaF_Q@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
 <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
 <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>
 <CAJuJkHPZTS7u65G6DrMVk9umaPwqzmgZvPkwCC3=NSX-_T3pUg@mail.gmail.com>
 <CAEeXt4OOJ1W9HsRa96czBnTMXLY+hZ9tj3nKLPGS3fD10KaF_Q@mail.gmail.com>
Message-ID: <CAJuJkHPnkc=dkT3PYgMw6HNzeSQ-c9ssfow=J7N64_UXMvts5w@mail.gmail.com>

Hi Jean,
  Yeah, actually that is the example that I looked into and implemented my
code.

The issue I have is.. still some instances of interrupted responses are not
trapped.
Copying pasting my minimal implementation for your convinence

def print_json_response(resp, request):
         request.write(json.dumps(resp))
         request.close()
class FooResource(resource.Resource):
       def render_GET(request):
              future = asyncio.ensure_future(self.fetch_response(request))
// some async await functions
              d = Deferred.fromFuture(future)
              d.addCallback(print_json_response, request) // this is
actually where the error is triggered.
              d.addErrback(lambda failure:
failure.trap(defer.CancelledError))
              finished_errback = request.notifyFinish()
              finished_errback.addErrback(self.handle_cancel, d) // simple
logs and cancels d by d.cancel()
              return NOT_DONE_YET

       async def fetch_response(self, request):
        future = {}
        try:
           future = await some other async def.. which returns future
        except asyncio.CancelledError as e:
           print("Error..", e)
        return future
    def handle_cancel(failure, d):
          d.cancel()
          print(failure.getTraceback())





On Mon, Aug 5, 2019 at 2:21 PM Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Mon, Aug 5, 2019 at 2:15 PM Waqar Khan <wk80333 at gmail.com> wrote:
>
>> False alarm. Seems like there are some sneaky conditions when I get the
>> error message.
>> Like before, I use to get notifyFinish error everytime. Now, it seems
>> that 6/10 times  things are "clean" but then 4/10 times there are
>> notifyFinish errors.
>> Wondering on your suggestion. How do I ensure whether the notifyFinish
>> error deferred has been fired or not.
>> Could I have like a vanilla "HelloWorld" example?
>> Thanks
>>
>>
> You can find an example of this here -
> https://twistedmatrix.com/documents/current/web/howto/web-in-60/interrupted.html
>
> Jean-Paul
>
>
>> On Mon, Aug 5, 2019 at 2:24 AM Waqar Khan <wk80333 at gmail.com> wrote:
>>
>>> Hi Glyph,
>>>     I am not sure I understand.
>>>
>>> Is there a method/variable in request which keeps a track whether
>>> notifyFinish has been fired..
>>> So, I can do something like.
>>>
>>> if not request.hasFiredNotifyFinish:
>>>        request.finish()
>>> ??
>>>
>>>
>>> I have sort of able to get around this issue.. though I can't put a
>>> finger on what actually worked.
>>> Here is what I did.. First change to 19.7rc01 version.. and just fix the
>>> channel issue.
>>>
>>> Next  self.fetch_response(request).. This is an async def.. So what I
>>> did was..
>>>
>>> async def fetch_response(request):
>>>         future = {}
>>>         try:
>>>            future = await some other async def.. which returns future
>>>         except asyncio.CancelledError as e:
>>>            print("Error..", e)
>>>         return future
>>>
>>> I basically ended up doing this everywhere where there is async/await.
>>> Next, I added this:
>>> d.addErrback(lambda failure: failure.trap(asyncio.CancelledError))
>>>
>>>
>>> So.. now.. I don't see the notifyFinish error anymore. And I am bit
>>> terrified not to touch anything.. :-D
>>>
>>> But, I want to try out your suggestion as that seems like a more solid
>>> way to handle the issue. But I am not sure I quite understand, how do I
>>> figure out whether notifyFinish has been called before calling finish?
>>>
>>>
>>> On Mon, Aug 5, 2019 at 1:56 AM Glyph <glyph at twistedmatrix.com> wrote:
>>>
>>>>
>>>>
>>>> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>>>>
>>>> Ah yes.. That is true..
>>>>
>>>> If I comment out request.finish() (Here is the doc which I tried to
>>>> followed:
>>>> https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
>>>> )
>>>> Then actually.. when I try to test out the code... (via curl or like
>>>> doing requests.get .. to the URI)..
>>>> it is just stuck..
>>>>
>>>>
>>>> Yep!  This makes sense; if you don't call `.finish()` *at all* then
>>>> your code will never tell the client that it's done.
>>>>
>>>> But if you call `.finish()` *after notifyFinish() has fired* then you
>>>> get that error.
>>>>
>>>> If you change your code to only call `.finish()` if the deferred
>>>> returned by notifyFinish() has not fired or failed yet, do you get the
>>>> error?  It's possible that you still do, in which case, there's a bug in
>>>> Twisted that needs to be fixed.
>>>>
>>>> I do want to convey my thanks for the help. Really appreciate it.
>>>>
>>>>
>>>> Thanks for using Twisted :)
>>>> -g
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/222f4248/attachment-0002.html>

From wk80333 at gmail.com  Mon Aug  5 12:30:52 2019
From: wk80333 at gmail.com (Waqar Khan)
Date: Mon, 5 Aug 2019 14:30:52 -0400
Subject: [Twisted-Python] self.channel.writeHeaders(version, code, reason,
 headers)\nbuiltins.AttributeError: \'NoneType\' object has no
 attribute \'writeHeaders\'\
In-Reply-To: <CAJuJkHPnkc=dkT3PYgMw6HNzeSQ-c9ssfow=J7N64_UXMvts5w@mail.gmail.com>
References: <CAJuJkHPJEiT=rqNhGTDt2oyP7bt-nzo9oFBNZ5xSNb=BikjDjg@mail.gmail.com>
 <F79C6C69-E1AE-4515-9240-9A3E7284620E@twistedmatrix.com>
 <CAJuJkHPj6XqGaLvutuGQe9bzHTKBx37PgWxcOSFA++vP7nLgqA@mail.gmail.com>
 <06088082-A36B-4E0F-85F5-795FE449E50E@twistedmatrix.com>
 <CAJuJkHN0A1syyxhuQWw8eRQwZVpChMKkOPfpWe++YV113TmDzQ@mail.gmail.com>
 <CAJuJkHPGzmzCaK2sGVdrw7FHtkQFn8jz03mKR7Pk6hbdMc4CxQ@mail.gmail.com>
 <849D0DEE-04FA-46FA-A500-7014B45D5832@twistedmatrix.com>
 <CAJuJkHN8+o3QQGOxU4HZmUb9nCeoy+uwsdeiRrPj1epn-i4mnw@mail.gmail.com>
 <E4F23F7E-D1A0-4336-AA78-9FFACC931430@twistedmatrix.com>
 <CAJuJkHM2r+oUe-0kPEeJg1hFnOo-VgC1D8ju+gh+QudLvH_Cig@mail.gmail.com>
 <CAJuJkHPZTS7u65G6DrMVk9umaPwqzmgZvPkwCC3=NSX-_T3pUg@mail.gmail.com>
 <CAEeXt4OOJ1W9HsRa96czBnTMXLY+hZ9tj3nKLPGS3fD10KaF_Q@mail.gmail.com>
 <CAJuJkHPnkc=dkT3PYgMw6HNzeSQ-c9ssfow=J7N64_UXMvts5w@mail.gmail.com>
Message-ID: <CAJuJkHM4q1LGFvLABkJPRCx0_Fbv1-y36-aqKrkBs-LUapZvqw@mail.gmail.com>

To add on this.. Glpyh's suggestion was to not call `request.close()` if
notifyFinish() deferred has been fired.
But I am not sure how do I check if that deffered is available or not.

On Mon, Aug 5, 2019 at 2:26 PM Waqar Khan <wk80333 at gmail.com> wrote:

> Hi Jean,
>   Yeah, actually that is the example that I looked into and implemented my
> code.
>
> The issue I have is.. still some instances of interrupted responses are
> not trapped.
> Copying pasting my minimal implementation for your convinence
>
> def print_json_response(resp, request):
>          request.write(json.dumps(resp))
>          request.close()
> class FooResource(resource.Resource):
>        def render_GET(request):
>               future = asyncio.ensure_future(self.fetch_response(request))
> // some async await functions
>               d = Deferred.fromFuture(future)
>               d.addCallback(print_json_response, request) // this is
> actually where the error is triggered.
>               d.addErrback(lambda failure:
> failure.trap(defer.CancelledError))
>               finished_errback = request.notifyFinish()
>               finished_errback.addErrback(self.handle_cancel, d) // simple
> logs and cancels d by d.cancel()
>               return NOT_DONE_YET
>
>        async def fetch_response(self, request):
>         future = {}
>         try:
>            future = await some other async def.. which returns future
>         except asyncio.CancelledError as e:
>            print("Error..", e)
>         return future
>     def handle_cancel(failure, d):
>           d.cancel()
>           print(failure.getTraceback())
>
>
>
>
>
> On Mon, Aug 5, 2019 at 2:21 PM Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>> On Mon, Aug 5, 2019 at 2:15 PM Waqar Khan <wk80333 at gmail.com> wrote:
>>
>>> False alarm. Seems like there are some sneaky conditions when I get the
>>> error message.
>>> Like before, I use to get notifyFinish error everytime. Now, it seems
>>> that 6/10 times  things are "clean" but then 4/10 times there are
>>> notifyFinish errors.
>>> Wondering on your suggestion. How do I ensure whether the notifyFinish
>>> error deferred has been fired or not.
>>> Could I have like a vanilla "HelloWorld" example?
>>> Thanks
>>>
>>>
>> You can find an example of this here -
>> https://twistedmatrix.com/documents/current/web/howto/web-in-60/interrupted.html
>>
>> Jean-Paul
>>
>>
>>> On Mon, Aug 5, 2019 at 2:24 AM Waqar Khan <wk80333 at gmail.com> wrote:
>>>
>>>> Hi Glyph,
>>>>     I am not sure I understand.
>>>>
>>>> Is there a method/variable in request which keeps a track whether
>>>> notifyFinish has been fired..
>>>> So, I can do something like.
>>>>
>>>> if not request.hasFiredNotifyFinish:
>>>>        request.finish()
>>>> ??
>>>>
>>>>
>>>> I have sort of able to get around this issue.. though I can't put a
>>>> finger on what actually worked.
>>>> Here is what I did.. First change to 19.7rc01 version.. and just fix
>>>> the channel issue.
>>>>
>>>> Next  self.fetch_response(request).. This is an async def.. So what I
>>>> did was..
>>>>
>>>> async def fetch_response(request):
>>>>         future = {}
>>>>         try:
>>>>            future = await some other async def.. which returns future
>>>>         except asyncio.CancelledError as e:
>>>>            print("Error..", e)
>>>>         return future
>>>>
>>>> I basically ended up doing this everywhere where there is async/await.
>>>> Next, I added this:
>>>> d.addErrback(lambda failure: failure.trap(asyncio.CancelledError))
>>>>
>>>>
>>>> So.. now.. I don't see the notifyFinish error anymore. And I am bit
>>>> terrified not to touch anything.. :-D
>>>>
>>>> But, I want to try out your suggestion as that seems like a more solid
>>>> way to handle the issue. But I am not sure I quite understand, how do I
>>>> figure out whether notifyFinish has been called before calling finish?
>>>>
>>>>
>>>> On Mon, Aug 5, 2019 at 1:56 AM Glyph <glyph at twistedmatrix.com> wrote:
>>>>
>>>>>
>>>>>
>>>>> On Aug 4, 2019, at 9:04 PM, Waqar Khan <wk80333 at gmail.com> wrote:
>>>>>
>>>>> Ah yes.. That is true..
>>>>>
>>>>> If I comment out request.finish() (Here is the doc which I tried to
>>>>> followed:
>>>>> https://twistedmatrix.com/documents/13.0.0/web/howto/web-in-60/interrupted.html
>>>>> )
>>>>> Then actually.. when I try to test out the code... (via curl or like
>>>>> doing requests.get .. to the URI)..
>>>>> it is just stuck..
>>>>>
>>>>>
>>>>> Yep!  This makes sense; if you don't call `.finish()` *at all* then
>>>>> your code will never tell the client that it's done.
>>>>>
>>>>> But if you call `.finish()` *after notifyFinish() has fired* then you
>>>>> get that error.
>>>>>
>>>>> If you change your code to only call `.finish()` if the deferred
>>>>> returned by notifyFinish() has not fired or failed yet, do you get the
>>>>> error?  It's possible that you still do, in which case, there's a bug in
>>>>> Twisted that needs to be fixed.
>>>>>
>>>>> I do want to convey my thanks for the help. Really appreciate it.
>>>>>
>>>>>
>>>>> Thanks for using Twisted :)
>>>>> -g
>>>>>
>>>>> _______________________________________________
>>>>> Twisted-Python mailing list
>>>>> Twisted-Python at twistedmatrix.com
>>>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>>
>>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190805/94697cdc/attachment-0002.html>

From sebastian at sipsolutions.net  Thu Aug  8 14:42:04 2019
From: sebastian at sipsolutions.net (Sebastian Berg)
Date: Thu, 08 Aug 2019 15:42:04 -0500
Subject: [Twisted-Python] Continued towncrier support?
Message-ID: <43ad6b6ff734841733b38d762b8b8c6f781ea26b.camel@sipsolutions.net>

Hi all,

I am not sure that this is the right place, but if I understand
correctly towncrier grew out of twisted. For NumPy (and likely more of
the scientific python ecosystem), we are looking into alternatives to
create release notes right now.

Towncrier seems to be a very nice option, but currently has some
limitations which do not fit to how our release notes are formatted. I
have started on a PR (and saw old stalled ones that did similar
things), which give towncrier enough flexibility to be used by us
nicely.

So this is just a ping to hope that we can keep towncrier moving a
little, I would prefer not to end up forking it or vendoring it into
NumPy.

Best,

Sebastian
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20190808/6b98d6f0/attachment-0002.sig>

From exarkun at twistedmatrix.com  Thu Aug  8 15:07:18 2019
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 8 Aug 2019 17:07:18 -0400
Subject: [Twisted-Python] Continued towncrier support?
In-Reply-To: <43ad6b6ff734841733b38d762b8b8c6f781ea26b.camel@sipsolutions.net>
References: <43ad6b6ff734841733b38d762b8b8c6f781ea26b.camel@sipsolutions.net>
Message-ID: <CAEeXt4NgLiB+JcmNYAwukADjrAB2qsGg+9rkdz0HyNERjKhr+Q@mail.gmail.com>

On Thu, Aug 8, 2019 at 4:42 PM Sebastian Berg <sebastian at sipsolutions.net>
wrote:

> Hi all,
>
> I am not sure that this is the right place, but if I understand
> correctly towncrier grew out of twisted. For NumPy (and likely more of
> the scientific python ecosystem), we are looking into alternatives to
> create release notes right now.
>
> Towncrier seems to be a very nice option, but currently has some
> limitations which do not fit to how our release notes are formatted. I
> have started on a PR (and saw old stalled ones that did similar
> things), which give towncrier enough flexibility to be used by us
> nicely.
>

I like towncrier too!  And there seems to be plenty of community interest.
It would be sad to see this interest turn into a bunch of incompatible
forks.

To this end, I just filed https://github.com/hawkowl/towncrier/issues/159

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190808/d133b7c1/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Aug  8 21:44:27 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 8 Aug 2019 20:44:27 -0700
Subject: [Twisted-Python] Continued towncrier support?
In-Reply-To: <CAEeXt4NgLiB+JcmNYAwukADjrAB2qsGg+9rkdz0HyNERjKhr+Q@mail.gmail.com>
References: <43ad6b6ff734841733b38d762b8b8c6f781ea26b.camel@sipsolutions.net>
 <CAEeXt4NgLiB+JcmNYAwukADjrAB2qsGg+9rkdz0HyNERjKhr+Q@mail.gmail.com>
Message-ID: <98B17A9E-5436-4944-830A-03422DE3D639@twistedmatrix.com>



> On Aug 8, 2019, at 2:07 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Thu, Aug 8, 2019 at 4:42 PM Sebastian Berg <sebastian at sipsolutions.net <mailto:sebastian at sipsolutions.net>> wrote:
> Hi all,
> 
> I am not sure that this is the right place, but if I understand
> correctly towncrier grew out of twisted. For NumPy (and likely more of
> the scientific python ecosystem), we are looking into alternatives to
> create release notes right now.
> 
> Towncrier seems to be a very nice option, but currently has some
> limitations which do not fit to how our release notes are formatted. I
> have started on a PR (and saw old stalled ones that did similar
> things), which give towncrier enough flexibility to be used by us
> nicely.
> 
> I like towncrier too!  And there seems to be plenty of community interest.
> It would be sad to see this interest turn into a bunch of incompatible forks.
> 
> To this end, I just filed https://github.com/hawkowl/towncrier/issues/159 <https://github.com/hawkowl/towncrier/issues/159>
I'm not sure what Hawkie wants to do with it, but let me preemptively say that I'd be happy for the Twisted org to adopt it, but also happy for it to live wherever else.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190808/104c8e1c/attachment-0002.html>

From trac at twistedmatrix.com  Sun Aug 11 00:05:17 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 11 Aug 2019 06:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1565503517.43.217002949014272337@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190811/a90dc025/attachment-0002.html>

From ant at zimage.com  Sun Aug 11 13:31:20 2019
From: ant at zimage.com (Ant)
Date: Sun, 11 Aug 2019 12:31:20 -0700
Subject: [Twisted-Python] Pip's Twisted 19.7.0 package is offered to upgrade
 my v19.2.1...
Message-ID: <20190811193120.GA20640@beta.zimage.com>

Hello.

I cannot figure out how to report this minor bug of a minor upgrade 
issue (https://github.com/twisted/twisted didn't have an issues 
section) that I noticed since last week:

$ pip list --outdated                       DEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be the last one supporting it. Please upgrade your Python as Python 3.4 won't be maintained after March 2019 (cf PEP 429).
Package Version Latest Type
------- ------- ------ -----
Twisted 19.2.1  19.7.0 sdist

$ pip install --upgrade Twisted
DEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be the last one supporting it. Please upgrade your Python as Python 3.4 won't be maintained after March 2019 (cf PEP 429).
Collecting Twisted
  Using cached https://files.pythonhosted.org/packages/61/31/3855dcacd1d3b2e60c0b4ccc8e727b8cd497bd7087d327d81a9f0cbb580c/Twisted-19.7.0.tar.bz2
    ERROR: Complete output from command python setup.py egg_info:
    ERROR: Traceback (most recent call last):
      File "<string>", line 1, in <module>
      File "/tmp/pip-install-2h_su73e/Twisted/setup.py", line 20, in <module>
        setuptools.setup(**_setup["getSetupArgs"]())
      File "<string>", line 257, in getSetupArgs
      File "<string>", line 208, in _checkPythonVersion
    ImportError: Twisted on Python 3 requires Python 3.5 or later.
    ----------------------------------------
ERROR: Command "python setup.py egg_info" failed with error code 1 in /tmp/pip-install-2h_su73e/Twisted/


That v19.7.0 shouldn't even be offered for my outdated setups. :(

Thank you for reading and hopefully answering soon. :)



From sda at fstab.net  Sun Aug 11 16:03:15 2019
From: sda at fstab.net (Kyle Altendorf)
Date: Sun, 11 Aug 2019 18:03:15 -0400
Subject: [Twisted-Python] Pip's Twisted 19.7.0 package is offered to
 upgrade my v19.2.1...
In-Reply-To: <20190811193120.GA20640@beta.zimage.com>
References: <20190811193120.GA20640@beta.zimage.com>
Message-ID: <afce1e995e87c981e653101be9484f86@fstab.net>



On 2019-08-11 15:31, Ant wrote:
> Hello.
> 
> I cannot figure out how to report this minor bug of a minor upgrade
> issue (https://github.com/twisted/twisted didn't have an issues
> section) that I noticed since last week:
> 
> $ pip list --outdated                       DEPRECATION: Python 3.4
> support has been deprecated. pip 19.1 will be the last one supporting
> it. Please upgrade your Python as Python 3.4 won't be maintained after
> March 2019 (cf PEP 429).
> Package Version Latest Type
> ------- ------- ------ -----
> Twisted 19.2.1  19.7.0 sdist
> 
> $ pip install --upgrade Twisted
> DEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be
> the last one supporting it. Please upgrade your Python as Python 3.4
> won't be maintained after March 2019 (cf PEP 429).
> Collecting Twisted
>   Using cached
> https://files.pythonhosted.org/packages/61/31/3855dcacd1d3b2e60c0b4ccc8e727b8cd497bd7087d327d81a9f0cbb580c/Twisted-19.7.0.tar.bz2
>     ERROR: Complete output from command python setup.py egg_info:
>     ERROR: Traceback (most recent call last):
>       File "<string>", line 1, in <module>
>       File "/tmp/pip-install-2h_su73e/Twisted/setup.py", line 20, in 
> <module>
>         setuptools.setup(**_setup["getSetupArgs"]())
>       File "<string>", line 257, in getSetupArgs
>       File "<string>", line 208, in _checkPythonVersion
>     ImportError: Twisted on Python 3 requires Python 3.5 or later.
>     ----------------------------------------
> ERROR: Command "python setup.py egg_info" failed with error code 1 in
> /tmp/pip-install-2h_su73e/Twisted/
> 
> 
> That v19.7.0 shouldn't even be offered for my outdated setups. :(

Perhaps a `python_requires=` would do the trick?

https://github.com/twisted/twisted/blob/c55c778e6c7a758cb9cee568a9188ac49e628c27/src/twisted/python/_setup.py#L54-L75

Maybe: python_requires='>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*!=3.4.*'

And perhaps also drop the manual checking code?

I'm kind of busy but if someone else doesn't get to it first I'll try to 
get to a ticket/PR later.

Cheers,
-kyle



From glyph at twistedmatrix.com  Fri Aug 16 00:31:44 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 15 Aug 2019 23:31:44 -0700
Subject: [Twisted-Python] Twisted 19.7.0 Release Announcement
Message-ID: <16722D65-DE78-4A78-A447-427C3CB2F5E8@twistedmatrix.com>

On behalf of Twisted Matrix Laboratories and our long-suffering release manager Amber Brown, I am honored to announce[1] the release of Twisted 19.7.0!

The highlights of this release include:
A full description on the PyPI page!  Check it out here: https://pypi.org/project/Twisted/19.7.0/ <https://pypi.org/project/Twisted/19.7.0/> (and compare to the slightly sad previous version, here: https://pypi.org/project/Twisted/19.2.1/ <https://pypi.org/project/Twisted/19.2.1/>)
twisted.test.proto_helpers has been renamed to "twisted.internet.testing"
This removes the gross special-case carve-out where it was the only "public" API in a test module, and now the rule is that all test modules are private once again.
Conch's SSH server now supports hmac-sha2-512.
The XMPP server in Twisted Words will now validate certificates!
This is a very important security fix for any twisted.words / XMPP users. (See https://twistedmatrix.com/trac/ticket/9561 <https://twistedmatrix.com/trac/ticket/9561>)
A nasty data-corruption bug in the IOCP reactor was fixed. If you're doing high-volume I/O on Windows you'll want to upgrade!
Twisted Web no longer gives clients a traceback by default, both when you instantiate Site and when you use `twist web` on the command line.  You can turn this behavior back on for local developemnt with `twist web --display-tracebacks`.
Several bugfixes and documentation fixes resolving bytes/unicode type confusion in twisted.web.
Python 3.4 is no longer supported.
`pip install -U twisted[tls]` and enjoy all these enhancements today!

Thanks for using Twisted,

-glyph

[1]: somewhat belatedly: it came out 10 days ago.  Oops!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190815/174ae50d/attachment-0002.html>

From dynamicgl at gmail.com  Fri Aug 16 07:49:23 2019
From: dynamicgl at gmail.com (Gelin Yan)
Date: Fri, 16 Aug 2019 21:49:23 +0800
Subject: [Twisted-Python] Twisted 19.7.0 Release Announcement
In-Reply-To: <16722D65-DE78-4A78-A447-427C3CB2F5E8@twistedmatrix.com>
References: <16722D65-DE78-4A78-A447-427C3CB2F5E8@twistedmatrix.com>
Message-ID: <CABkOF6T2XkQOJ5TZ7FD+JmG0BPjFXzy9+rhaUCDNkrcRxkZVSw@mail.gmail.com>

On Friday, August 16, 2019, Glyph <glyph at twistedmatrix.com> wrote:

> On behalf of Twisted Matrix Laboratories and our long-suffering release
> manager Amber Brown, I am honored to announce[1] the release of Twisted
> 19.7.0!
>
> The highlights of this release include:
>
>    - A full description on the PyPI page!  Check it out here:
>    https://pypi.org/project/Twisted/19.7.0/
>    <https://pypi.org/project/Twisted/19.7.0/> (and compare to the
>    slightly sad previous version, here: https://pypi.org/project/
>    Twisted/19.2.1/)
>    - twisted.test.proto_helpers has been renamed to
>    "twisted.internet.testing"
>       - This removes the gross special-case carve-out where it was the
>       only "public" API in a test module, and now the rule is that all test
>       modules are private once again.
>    - Conch's SSH server now supports hmac-sha2-512.
>    - The XMPP server in Twisted Words will now validate certificates!
>       - This is a *very* important security fix for any twisted.words /
>       XMPP users. (See https://twistedmatrix.com/trac/ticket/9561)
>    - A nasty data-corruption bug in the IOCP reactor was fixed. If you're
>    doing high-volume I/O on Windows you'll want to upgrade!
>    - Twisted Web no longer gives clients a traceback by default, both
>    when you instantiate Site and when you use `twist web` on the command
>    line.  You can turn this behavior back on for local developemnt with `twist
>    web --display-tracebacks`.
>    - Several bugfixes and documentation fixes resolving bytes/unicode
>    type confusion in twisted.web.
>    - Python 3.4 is no longer supported.
>
> `pip install -U twisted[tls]` and enjoy all these enhancements today!
>
> Thanks for using Twisted,
>
> -glyph
>
> [1]: somewhat belatedly: it came out 10 days ago.  Oops!
>
>
 https://twistedmatrix.com/trac/ticket/5562

I think the recent iocp patch might fix this bug.


regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190816/c6a33265/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Aug 16 11:59:29 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 16 Aug 2019 10:59:29 -0700
Subject: [Twisted-Python] Twisted 19.7.0 Release Announcement
In-Reply-To: <CABkOF6T2XkQOJ5TZ7FD+JmG0BPjFXzy9+rhaUCDNkrcRxkZVSw@mail.gmail.com>
References: <16722D65-DE78-4A78-A447-427C3CB2F5E8@twistedmatrix.com>
 <CABkOF6T2XkQOJ5TZ7FD+JmG0BPjFXzy9+rhaUCDNkrcRxkZVSw@mail.gmail.com>
Message-ID: <286a5e5d-2c84-4f11-accd-bd7351dfcf85@www.fastmail.com>


On Fri, Aug 16, 2019, at 6:49 AM, Gelin Yan wrote:
> https://twistedmatrix.com/trac/ticket/5562
> 
> I think the recent iocp patch might fix this bug.

I think you're right - thanks for pointing this out! I've marked it as a duplicate as a result. I suspect we might have a couple of other Windows users who have run into this over the years, so if you're aware of any other dupes it would be good to find them in Trac and close them out.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190816/dfceaab5/attachment-0002.html>

From trac at twistedmatrix.com  Sun Aug 18 00:05:18 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 18 Aug 2019 06:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1566108318.14.2583349099324042189@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190818/0a87d10d/attachment-0002.html>

From trac at twistedmatrix.com  Sun Aug 25 00:05:18 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 25 Aug 2019 06:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1566713118.98.2139307165839854838@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20190825/d5620bec/attachment-0002.html>

