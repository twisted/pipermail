From andrew at bemusement.org  Tue Feb  1 00:15:34 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Tue, 1 Feb 2011 16:15:34 +1100
Subject: [Twisted-Python] High-level view of Twisted
In-Reply-To: <AANLkTik-7mR=5XRoKUM0YuRWQgpHLhXGj4TNiboAR+v4@mail.gmail.com>
References: <AANLkTik-7mR=5XRoKUM0YuRWQgpHLhXGj4TNiboAR+v4@mail.gmail.com>
Message-ID: <20110201051534.GD9824@aihal.home.puzzling.org>

Jason Heeris wrote:
[...]
> 2. What is a Factory, anyway? What are they *for*?

<http://twistedmatrix.com/documents/current/core/howto/glossary.html#Factory>
says:

  In general, an object that constructs other objects. In Twisted, a Factory
  usually refers to a twisted.internet.protocol.Factory, which constructs
  Protocol instances for incoming or outgoing connections. See Writing
  Servers and Writing Clients. 

(I couldn't resist the opportunity to link to the glossary after the recent
thread about it...)

-Andrew.



From jason.heeris at gmail.com  Tue Feb  1 00:19:45 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 1 Feb 2011 13:19:45 +0800
Subject: [Twisted-Python] High-level view of Twisted
In-Reply-To: <20110201051534.GD9824@aihal.home.puzzling.org>
References: <AANLkTik-7mR=5XRoKUM0YuRWQgpHLhXGj4TNiboAR+v4@mail.gmail.com>
	<20110201051534.GD9824@aihal.home.puzzling.org>
Message-ID: <AANLkTi=n61JUV7aPjEFdZ1X4E89QW3w+AfsZ0G0grAdn@mail.gmail.com>

On 1 February 2011 13:15, Andrew Bennetts <andrew at bemusement.org> wrote:
> Jason Heeris wrote:
> [...]
>> 2. What is a Factory, anyway? What are they *for*?
>
> (I couldn't resist the opportunity to link to the glossary after the recent
> thread about it...)

I completely missed the glossary somehow, thanks :)

? Jason


From jason.heeris at gmail.com  Tue Feb  1 00:21:07 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 1 Feb 2011 13:21:07 +0800
Subject: [Twisted-Python] High-level view of Twisted
In-Reply-To: <20110201051534.GD9824@aihal.home.puzzling.org>
References: <AANLkTik-7mR=5XRoKUM0YuRWQgpHLhXGj4TNiboAR+v4@mail.gmail.com>
	<20110201051534.GD9824@aihal.home.puzzling.org>
Message-ID: <AANLkTikK0nTaV1ckrH8yJm0VT=rAMJdig+EBA==NuZXD@mail.gmail.com>

On 1 February 2011 13:15, Andrew Bennetts <andrew at bemusement.org> wrote:
> Jason Heeris wrote:
> [...]
>> 2. What is a Factory, anyway? What are they *for*?
>
> <http://twistedmatrix.com/documents/current/core/howto/glossary.html#Factory>
> says:

Oh, and I also has a link to a "client writing howto"[1], which was
one of my other questions.

? Jason

[1] http://twistedmatrix.com/documents/current/core/howto/clients.html


From kevin.horn at gmail.com  Tue Feb  1 00:58:14 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Mon, 31 Jan 2011 23:58:14 -0600
Subject: [Twisted-Python] High-level view of Twisted
In-Reply-To: <AANLkTik-7mR=5XRoKUM0YuRWQgpHLhXGj4TNiboAR+v4@mail.gmail.com>
References: <AANLkTik-7mR=5XRoKUM0YuRWQgpHLhXGj4TNiboAR+v4@mail.gmail.com>
Message-ID: <AANLkTi=Q=VTX5-=JnaQisJ7KuDV0ncoy-Go95VFpuMt_@mail.gmail.com>

On Mon, Jan 31, 2011 at 10:58 PM, Jason Heeris <jason.heeris at gmail.com>wrote:

> Hi,
>
> I'd like to come to grips with Twisted, and so far I've been following
> and tweaking example after example. But I'm finding it incredibly hard
> to get a high level view of the Twisted "landscape" ? and because I
> don't know what I don't know, it's hard to know what questions to even
> ask. I want to get to the point where I can just sit down and know
> where to start, and hopefully someone here can give me a bit of
> direction.
>
> I understand many of the microscopic components. Deferred results,
> file descriptors and sockets, the reactor loop concept ? I get those.
> I've read the tutorial[1], another Twisted Introduction[2], and about
> 50% of the API documentation (possibly not the right 50%, though).
>
> But I just can't seem to wrap my head around the interfaces, factories
> and wiring it all together. Maybe some examples of the speedbumps I
> keep encountering will help:
>
> 1. The "finger" intro "Drop Connections" example[3] just straight out
> uses the self.transport member of a protocol. But how do I, a Twisted
> newbie, know that this even exists? After hours of digging around, I
> find it in the docs for a BaseProtocol method[4]. Later on, this same
> example uses the "self.factory" member. I still haven't found that
> one. Where do I look up these assumed-to-exist members? How do I know
> what other members exist?
>

Protocol objects typically (always) have a self.factory method, but you
won't
find it in the docs for a protocol.  The factory has a method called
buildProtocol
(
http://twistedmatrix.com/documents/10.2.0/api/twisted.internet.protocol.Factory.html#buildProtocol
)
which creates Protocol instances and sets the p.factory member to itself.

So it does something like (in the Factory, so self is the Factory instance):
p = self.protocol
p.factory = self
return p

It's a pretty screwy API and is not particularly well documented anywhere.

2. What is a Factory, anyway? What are they *for*?
>

As Andrew said (or quoted) a Factory is an object which creates Protocol
instances when a connection is made. Sometimes that's all there is to it,
but they are often used to store state across connections.  For example,
if you want to know how many connections your IMAP (or whatever) server
currently has open, putting a counter in the Factory which was incremented
each time a connection starts (it creates a protocol) and decremented each
time a connection closes would make sense.

3. The finger example goes over writing a server ? what about an
> asynchronous client that must follow a particular protocol? Where do I
> start with that? Is there an example?
>
>
You already found this one. :)


> 4. What if I'm not interested in networking? I primarily deal with
> serial lines, files and subprocesses... are there examples for those?
>
>
Not many, I don't think.  I'm pretty sure there's a serial port example,
though...

(rummage, rummage)

here it is!  check out the mouse.py and gpsfix.py examples under
/doc/core/examples (
http://twistedmatrix.com/trac/browser/trunk/doc/core/examples)


> Points #3 and #4 are my motivation for using Twisted ? I am currently
> mired in a pygtk program that uses threads and all sorts of locks and
> synchronisation mechanisms to send and receive data over a serial
> line, updating UI with progress, errors and success. I'd like to see
> if using Twisted simplifies things a bit, and I'll ask a more specific
> question about how to structure that when I can condense it to a
> reasonable level :)
>
> I hope I'm not being too vague, but Twisted is rather large,
> conceptually, to absorb. I keep being pointed to the documentation for
> specific parts, but I have no idea how they fit together and that's
> what I'm really after.
>
> Thanks,
> Jason
>
> [1]
> http://twistedmatrix.com/documents/current/core/howto/tutorial/index.html
> [2] http://krondo.com/?page_id=1327
> [3]
> http://twistedmatrix.com/documents/current/core/howto/tutorial/intro.html#auto4
> [4]
> http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.BaseProtocol.html#makeConnection
>
>
A couple of us are getting fired up about cleaning up the documentation to
make it easier for those new to Twisted to find what they're looking for, so
please do speak up with any feedback you have.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110131/8b927413/attachment-0001.htm 

From jason.heeris at gmail.com  Tue Feb  1 01:19:10 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 1 Feb 2011 14:19:10 +0800
Subject: [Twisted-Python] High-level view of Twisted
In-Reply-To: <AANLkTi=Q=VTX5-=JnaQisJ7KuDV0ncoy-Go95VFpuMt_@mail.gmail.com>
References: <AANLkTik-7mR=5XRoKUM0YuRWQgpHLhXGj4TNiboAR+v4@mail.gmail.com>
	<AANLkTi=Q=VTX5-=JnaQisJ7KuDV0ncoy-Go95VFpuMt_@mail.gmail.com>
Message-ID: <AANLkTi=B_d0HE9jgaSTAyr22A5LAXetBR6W_+YreCdHd@mail.gmail.com>

On 1 February 2011 13:58, Kevin Horn <kevin.horn at gmail.com> wrote:
> A couple of us are getting fired up about cleaning up the documentation to
> make it easier for those new to Twisted to find what they're looking for, so
> please do speak up with any feedback you have.

My only suggestion is this: no magic! As per my #1, if an example uses
self.transport, that would be a good time to take the reader aside and
say something like "by the way, self.transport is actually
[description], set in [API link] ... other mysterious attributes you
might need to know about are self.factory, and..."

Even putting that in a special subsection and linking to it would be preferably.

Another example is using "implements" in a class def ? I realise it's
from Zope, but there's no harm in explaining it where it's used in an
example.

My $0.02 :)

? Jason


From albert.brandl at weiermayer.com  Tue Feb  1 03:44:45 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 1 Feb 2011 09:44:45 +0100
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
Message-ID: <20110201084445.GA2172@weiermayer.com>

On Mon, Jan 31, 2011 at 02:41:38PM -0500, Tom Davis wrote:
> Thoughts?

I think that the overview in the first two sections is very good. It 
made me curious to learn more.

The "breadcrumbs" on the main page look like this:
"Contents   ::   Serving on the Web ? HTML, CGI, WSGI, etc.  ? "
Might be a problem with the Sphinx configuration.

Not sure about the link "read more about Twisted": There _is_ more about 
Twisted on the rest of the page. When I clicked the link, I expected to 
be redirected to twistedmatrix.com or something like this. Maybe you 
don't need a link at this position at all.

In the "Why Use Twisted" section, you write "Framework" - not sure if 
this should be uppercased. But there are some other nouns (Tasks, 
Project Documentation) that are written this way, so maybe it's Your 
Way Of Emphasizing Things ;-). 

I'm also not sure if the explanation why I would use Twisted should be 
in bold letters. Everywhere else you use italics.

Do you intend to create a task description for connecting to an SSH 
server (maybe with certificates)? This is something that whould have 
been handy for me in the past.

The "Everything Else" section should not contain links that are already 
presented somewhere else. 

Do you intend to add some links to external pages here (e.g. the API 
documentation or other web pages describing how to use the framework)? 
Or should this documentation be self-contained?

One small usability quirk: The presentation of links in an orange, bold 
font does not have much recognition value. I think it would be better to 
use the standard way of marking links by using a blue, underlined font. 
The same goes for links that have already been visited.

Best regards, 

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From tom at recursivedream.com  Tue Feb  1 09:05:32 2011
From: tom at recursivedream.com (Tom Davis)
Date: Tue, 1 Feb 2011 09:05:32 -0500
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <20110201084445.GA2172@weiermayer.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<20110201084445.GA2172@weiermayer.com>
Message-ID: <AANLkTimy3YUBw7rdLXNwSCvzgCxb80htP06w-d_xGG6Q@mail.gmail.com>

On Tue, Feb 1, 2011 at 3:44 AM, Albert Brandl
<albert.brandl at weiermayer.com>wrote:

> On Mon, Jan 31, 2011 at 02:41:38PM -0500, Tom Davis wrote:
> > Thoughts?
>
> I think that the overview in the first two sections is very good. It
> made me curious to learn more.
>
> The "breadcrumbs" on the main page look like this:
> "Contents   ::   Serving on the Web ? HTML, CGI, WSGI, etc.  ? "
> Might be a problem with the Sphinx configuration.
>

Yeah, this is just how the Sphinx template lays things out and it's the
default one I use for documentation on my site, merely because the color
scheme is similar. It's definitely not the greatest and a Twisted-theme one
already exists so we'll be working from that.


>
> Not sure about the link "read more about Twisted": There _is_ more about
> Twisted on the rest of the page. When I clicked the link, I expected to
> be redirected to twistedmatrix.com or something like this. Maybe you
> don't need a link at this position at all.
>

Well, that was originally going to lead to some history/about stuff, but
looking at it again that doesn't seem like an initially great use of time.


>
> In the "Why Use Twisted" section, you write "Framework" - not sure if
> this should be uppercased. But there are some other nouns (Tasks,
> Project Documentation) that are written this way, so maybe it's Your
> Way Of Emphasizing Things ;-).
>
> I'm also not sure if the explanation why I would use Twisted should be
> in bold letters. Everywhere else you use italics.
>
> Do you intend to create a task description for connecting to an SSH
> server (maybe with certificates)? This is something that whould have
> been handy for me in the past.
>

Either create or expose one that already exists, yes.


>
> The "Everything Else" section should not contain links that are already
> presented somewhere else.
>

These are ToC trees which are different from inline links. I don't feel
there's much harm in linking to something twice on one page especially when
the same words are used and one of the uses is clearly a ToC.


>
> Do you intend to add some links to external pages here (e.g. the API
> documentation or other web pages describing how to use the framework)?
> Or should this documentation be self-contained?
>

API links will be common and will be under some reference/links area, I'm
sure. It is very much a work in progress.


>
> One small usability quirk: The presentation of links in an orange, bold
> font does not have much recognition value. I think it would be better to
> use the standard way of marking links by using a blue, underlined font.
> The same goes for links that have already been visited.
>

Again, this is a Sphinx template issue so we'll see how it changes with the
actual Twisted one :)

Thanks for the feedback!

-Tom


>
> Best regards,
>
> Albert
> --
> Albert Brandl
> Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
> phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
> web: http://www.weiermayer.com
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110201/532f18e9/attachment.htm 

From tom at recursivedream.com  Tue Feb  1 09:05:26 2011
From: tom at recursivedream.com (Tom Davis)
Date: Tue, 1 Feb 2011 09:05:26 -0500
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <20110131231956.1699.1955561813.divmod.xquotient.459@localhost.localdomain>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<BAEC1D4F-2990-4DA7-81CE-82B3BF8A2A92@twistedmatrix.com>
	<AANLkTikMH5Uj+Q35SkQLTDgi_Qdnk2z4J3hgjvUtry5O@mail.gmail.com>
	<20110131231956.1699.1955561813.divmod.xquotient.459@localhost.localdomain>
Message-ID: <AANLkTi=5oSp7C=TiHwstmBKx19ZprBavdN76m3YA2+Xy@mail.gmail.com>

On Mon, Jan 31, 2011 at 6:19 PM, <exarkun at twistedmatrix.com> wrote:

> On 10:39 pm, tom at recursivedream.com wrote:
> >
> >Take <
> >http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/static-
> >content.html
> >>:
> >
> >Tell me the one command I need to serve a directory, *then* show me the
> >code
> >that one command effectively runs and vaguely what it does.
>
> I think this is partially a disagreement over what tasks we actually
> want to document.  If the command line interface gets primacy in the
> documentation, then I think you're writing documentation for end users
> (sys admins, non-programmers).  I don't know about anyone else, but this
> category of documentation hadn't really crossed my mind before.
>
> I think that (ultimately) this is good documentation to have, but I
> don't know if it's as important as getting the programmer-oriented
> documentation in better shape.
>
> Another point to consider is that "twistd web" (and most other twistd
> plugins we provide) are semi-random mish mashes of functionality.  They
> have accreted by contribution from many different people over the years
> with no governing design or goal aside from "expose features from the
> command line".  This does not make them the friendliest tools around.
> The functionality they are missing is often surprising, particularly
> when contrasted with some of the (non-)functionality they do provide.
>
> I don't want to say that they do not bear documenting until their state
> is improved, but if we focused on other areas first, maybe we would have
> something better to document when we eventually get around to things
> like "twistd web".
>

I look at it from a pragmatic point of view: If the task is called "serving
HTML" and you *can* do that with a single command line argument, I'm willing
to possibly waste a sentence exposing something unideal or incomplete if it
fixes the visitor's problem *right now*. That's simply not a lot of effort
 for a good deal of gain. Immediately after that command line section should
be a dive into the actual code (or at least enough to get serving via a
python file).

I suppose you may disagree with task-based views entirely. The using
twisted.web "howto" isn't really one at all. It covers many / all of the
serving aspects of twisted.web which is cool and necessary, but the actual
building block tasks are buried.

It's still early and I'm not sure how much sense I'm making here. I think a
more complete example of what I'm talking about could serve to remedy a lot
of these issues and show that what everybody wants (and already has) is
still present, just moved to a more logical place.


>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110201/79dc8ef8/attachment.htm 

From albert.brandl at weiermayer.com  Tue Feb  1 09:52:49 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 1 Feb 2011 15:52:49 +0100
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <AANLkTimy3YUBw7rdLXNwSCvzgCxb80htP06w-d_xGG6Q@mail.gmail.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<20110201084445.GA2172@weiermayer.com>
	<AANLkTimy3YUBw7rdLXNwSCvzgCxb80htP06w-d_xGG6Q@mail.gmail.com>
Message-ID: <20110201145249.GA6169@weiermayer.com>

On Tue, Feb 01, 2011 at 09:05:32AM -0500, Tom Davis wrote:
>     The "breadcrumbs" on the main page look like this:
>     "Contents   ::   Serving on the Web   HTML, CGI, WSGI, etc.    "
>     Might be a problem with the Sphinx configuration.
> 
> Yeah, this is just how the Sphinx template lays things out and it's the 
> default one I use for documentation on my site, merely because the 
> color scheme is similar. It's definitely not the greatest and a 
> Twisted-theme one already exists so we'll be working from that.

I was talking about the _content_ of the breadcrumbs. The main page
should not contain the "Serving on the Web..." breadcrumb IMO.

> These are ToC trees which are different from inline links. I don't feel 
> there's much harm in linking to something twice on one page especially 
> when the same words are used and one of the uses is clearly a ToC.

Maybe the title of the section should be renamed, then.

> Thanks for the feedback!

You're welcome!

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From glyph at twistedmatrix.com  Tue Feb  1 12:55:57 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 1 Feb 2011 09:55:57 -0800
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <20110131231956.1699.1955561813.divmod.xquotient.459@localhost.localdomain>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<BAEC1D4F-2990-4DA7-81CE-82B3BF8A2A92@twistedmatrix.com>
	<AANLkTikMH5Uj+Q35SkQLTDgi_Qdnk2z4J3hgjvUtry5O@mail.gmail.com>
	<20110131231956.1699.1955561813.divmod.xquotient.459@localhost.localdomain>
Message-ID: <D76EAB42-26F3-4567-9AF8-B097F5C717EF@twistedmatrix.com>


On Jan 31, 2011, at 3:19 PM, exarkun at twistedmatrix.com wrote:

> On 10:39 pm, tom at recursivedream.com wrote:
>> 
>> Take <
>> http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/static- 
>> content.html
>>> :
>> 
>> Tell me the one command I need to serve a directory, *then* show me the 
>> code
>> that one command effectively runs and vaguely what it does.
> 
> I think this is partially a disagreement over what tasks we actually 
> want to document.  If the command line interface gets primacy in the 
> documentation, then I think you're writing documentation for end users 
> (sys admins, non-programmers).  I don't know about anyone else, but this 
> category of documentation hadn't really crossed my mind before.

Yes, and that's not good.  We should be thinking about those people a little more :).  Twisted is still mostly a library, but aside from my personal scheming to make it into something more, there's also the fact that users and sysadmins eventually need to interact with systems written using Twisted and there are basically no resources for them to learn to manage said systems.

As much controversy as there is over exactly how good or bad our docs are, I think we can all agree that admin/user docs are in much worse shape than our developer docs (i.e. they are non-existant) :).

But more importantly...

> I think that (ultimately) this is good documentation to have, but I 
> don't know if it's as important as getting the programmer-oriented 
> documentation in better shape.

I think that this is actually a better way to deal with most of our programmer-focused documentation.

Most importantly, the first rule here is very important: <http://jacobian.org/writing/great-documentation/what-to-write/>.  "Be quick.".  Good documentation writers frequently stress the importance of immediate gratification.  Good game designers will also tell you that you want to get a user engaged and experiencing success during the tutorial, before they really know how to play the game.  The immediate dopamine hit from a working 'twistd' command-line will carry the user through the slightly more confusing parts of getting their own code to work: it assures them that they can get Twisted to do _something_, which gives them immediate hope that maybe one day they can get Twisted to do what they want.

A corollary to this is that if it's going to fail, it can fail faster, and we all know that one should fail as fast as possible.  If the 'twistd' command-line doesn't even work, that lets the tutorial reader address configuration and installation issues much earlier on, rather than try to debug them as issues with their own code, they can just say, 'I ran this command and I got a traceback', which will get the attention of a Twisted maintainer more quickly because it's easier to diagnose something that's purely under our own control than a (potentially arbitrary, even if small) pile of new code.

I actually think that the inclusion of the 'twistd web' command-lines is one of the things that made the web-in-60-seconds tutorial series a big improvement over our previous web documentation :).

> Another point to consider is that "twistd web" (and most other twistd 
> plugins we provide) are semi-random mish mashes of functionality.  They 
> have accreted by contribution from many different people over the years 
> with no governing design or goal aside from "expose features from the 
> command line".  This does not make them the friendliest tools around. 
> The functionality they are missing is often surprising, particularly 
> when contrasted with some of the (non-)functionality they do provide.

No argument here.  Le sigh.

> I don't want to say that they do not bear documenting until their state 
> is improved, but if we focused on other areas first, maybe we would have 
> something better to document when we eventually get around to things 
> like "twistd web".

I _want_ people to show up on the tracker and actually report usability issues and missing functionality from the command-line tools.  It's still surprising to a lot of people, even very experienced twisted people, just how much functionality is exposed by those tools.  And if nobody knows the tools are there, then chances are they will remain a non-priority forever, as functional library issues will continue to get reported by the much wider audience that's actually using them.  Plus, on the bright side, the increasing prevalence of the use of cred and endpoint string-plugin APIs means that some of the twistd plugins are starting to become actually useful for things where they weren't before.  'twistd' web, in particular, also has RPYs, which almost turn it into a full-featured server; other servers should have similar application-level plugins.

(And as I finish writing this, I think: 'twistd web' could be _really_ pretty useful if it weren't such a pain to deploy a WSGI app using an RPY, thanks to threadpools etc.  We should add a utility function or something.  Anybody feel like writing a ticket?  I have heard references to '.wsgi' files, is that a thing we could support?)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110201/3bbed048/attachment.htm 

From glyph at twistedmatrix.com  Tue Feb  1 12:58:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 1 Feb 2011 09:58:59 -0800
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
Message-ID: <88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>


On Jan 31, 2011, at 11:41 AM, Tom Davis wrote:

> Thoughts?


Priority #1 for most people who are enthusiastic about documentation is to come in and write a ton of additional documentation.  But this is a lot like trying to fix a large, broken, untested system by writing a pile of new, untested code, because "this time we'll get the design right".  What were the problems with the way the previous documentation got written?  How did we end up with this mess, and what is going to be done differently this time?  Most importantly, what is the metric by which we will judge this new documentation to be better?

If all that comes out of your efforts is a new, different pile of documentation, that's not entirely without value; different audiences understand things in different ways, so someone might pick it up and understand Twisted as a result.  But I very much doubt that's going to move us from a general impression of "bad docs" to a general impression of "good docs".

More specific criticism:

"This is a Twisted Task"?  I feel like I'm about to start reading about a Task object or something related to the twisted.internet.task module.  Or maybe that this is an exercise.  A document explaining how to do a task is rarely called a "task" itself.  Mostly they're called "How-To"s, actually.  I understand you're trying to get away from old terminology but this seems awkward and forced.
"You should be familiar with Resources"?  That is really broad and wide-ranging and should be a hyperlink to another tutorial.  Plus, I think that most people interested in these tasks will want to learn about how to get simple tasks done first, before moving on to a more abstract / theoretical understanding of the model behind them.  More importantly: this is a very wishy-washy definition of the audience.  Is it for system administrators?  Software developers?  DevOps people?  Graphic designers?  Power users?  What level of experience do they need with Python?  With networking?  With HTTP?
"Other configuration options are available"?  This should be a list of links to other documents that might help with some of those options.  Documentation which says "and then you could do something else" without telling you what else or why is needlessly confusing.
The WSGI example totally glosses over how you get your code onto sys.path (PYTHONPATH etc), says that 'helloworld' is a module/package (which is it?  why are both options given?).  This is an extremely confusing area for newbies, which is why it actually makes a bit of sense to me that the web-in-60-seconds WSGI tutorial starts with a callable defined in the .tac.  Not a good practice in the long term, but it allows the user to immediately get some feedback and have some notion of how things are wired together without having to debug Python's import system first.
.rpy scripts are for deployment, not debugging; I was a little concerned seeing that bullet point on the outline.  (See <http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/rpy-scripts.html>.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110201/550f129d/attachment.htm 

From kevin.horn at gmail.com  Tue Feb  1 13:14:11 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 1 Feb 2011 12:14:11 -0600
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <D76EAB42-26F3-4567-9AF8-B097F5C717EF@twistedmatrix.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<BAEC1D4F-2990-4DA7-81CE-82B3BF8A2A92@twistedmatrix.com>
	<AANLkTikMH5Uj+Q35SkQLTDgi_Qdnk2z4J3hgjvUtry5O@mail.gmail.com>
	<20110131231956.1699.1955561813.divmod.xquotient.459@localhost.localdomain>
	<D76EAB42-26F3-4567-9AF8-B097F5C717EF@twistedmatrix.com>
Message-ID: <AANLkTikGaqwj1inRnaoKjbuiFizVoTZ9AAcGvxpo-eZM@mail.gmail.com>

On Tue, Feb 1, 2011 at 11:55 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jan 31, 2011, at 3:19 PM, exarkun at twistedmatrix.com wrote:
>
> On 10:39 pm, tom at recursivedream.com wrote:
>
>
> Take <
>
> http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/static-
>
> content.html
>
> :
>
>
> Tell me the one command I need to serve a directory, *then* show me the
>
> code
>
> that one command effectively runs and vaguely what it does.
>
>
> I think this is partially a disagreement over what tasks we actually
> want to document.  If the command line interface gets primacy in the
> documentation, then I think you're writing documentation for end users
> (sys admins, non-programmers).  I don't know about anyone else, but this
> category of documentation hadn't really crossed my mind before.
>
>
> Yes, and that's not good.  We should be thinking about those people a
> little more :).  Twisted is still mostly a library, but aside from my
> personal scheming to make it into something more, there's also the fact that
> users and sysadmins eventually need to interact with systems written using
> Twisted and there are basically no resources for them to learn to manage
> said systems.
>
> As much controversy as there is over exactly how good or bad our docs are,
> I think we can all agree that admin/user docs are in *much* worse shape
> than our developer docs (i.e. they are non-existant) :).
>
> But more importantly...
>
> I think that (ultimately) this is good documentation to have, but I
> don't know if it's as important as getting the programmer-oriented
> documentation in better shape.
>
>
> I think that this is actually a better way to deal with most of our
> programmer-focused documentation.
>
> Most importantly, the first rule here is very important: <
> http://jacobian.org/writing/great-documentation/what-to-write/>.  "Be
> quick.".  Good documentation writers frequently stress the importance of
> immediate gratification.  Good game designers will also tell you that you
> want to get a user engaged and experiencing success during the tutorial,
> before they really know how to play the game.  The immediate dopamine hit
> from a working 'twistd' command-line will carry the user through the
> slightly more confusing parts of getting their own code to work: it assures
> them that they can get Twisted to do _something_, which gives them immediate
> hope that maybe one day they can get Twisted to do what they want.
>
> A corollary to this is that if it's going to fail, it can fail faster, and
> we all know that one should fail as fast as possible.  If the 'twistd'
> command-line doesn't even work, that lets the tutorial reader address
> configuration and installation issues much earlier on, rather than try to
> debug them as issues with their own code, they can just say, 'I ran this
> command and I got a traceback', which will get the attention of a Twisted
> maintainer more quickly because it's easier to diagnose something that's
> purely under our own control than a (potentially arbitrary, even if small)
> pile of new code.
>
> I actually think that the inclusion of the 'twistd web' command-lines is
> one of the things that made the web-in-60-seconds tutorial series a big
> improvement over our previous web documentation :).
>
> Another point to consider is that "twistd web" (and most other twistd
> plugins we provide) are semi-random mish mashes of functionality.  They
> have accreted by contribution from many different people over the years
> with no governing design or goal aside from "expose features from the
> command line".  This does not make them the friendliest tools around.
> The functionality they are missing is often surprising, particularly
> when contrasted with some of the (non-)functionality they do provide.
>
>
> No argument here.  Le sigh.
>
> I don't want to say that they do not bear documenting until their state
> is improved, but if we focused on other areas first, maybe we would have
> something better to document when we eventually get around to things
> like "twistd web".
>
>
> I _want_ people to show up on the tracker and actually report usability
> issues and missing functionality from the command-line tools.  It's still
> surprising to a lot of people, even very experienced twisted people, just
> how much functionality *is* exposed by those tools.  And if nobody knows
> the tools are there, then chances are they will remain a non-priority
> forever, as functional library issues will continue to get reported by the
> much wider audience that's actually using them.  Plus, on the bright side,
> the increasing prevalence of the use of cred and endpoint string-plugin APIs
> means that some of the twistd plugins are starting to become actually useful
> for things where they weren't before.  'twistd' web, in particular, also has
> RPYs, which *almost* turn it into a full-featured server; other servers
> should have similar application-level plugins.
>
> (And as I finish writing this, I think: 'twistd web' could be _really_
> pretty useful if it weren't such a pain to deploy a WSGI app using an RPY,
> thanks to threadpools etc.  We should add a utility function or something.
>  Anybody feel like writing a ticket?  I have heard references to '.wsgi'
> files, is that a thing we could support?)
>
>
>
Agree pretty much 100% with everything Glyph said.  As I've been working on
the Sphinx conversion, I've read (or at least skimmed) pretty much every
piece of documentation Twisted provides.  And I've been surprised both by
things I never expected to see, and by the stuff that is glaringly missing.
Also that the man pages are almost totally divorced from the rest of the
docs.  Another thing I'd like to remedy.  I'm really hoping that both the
Sphinx changeover as well as the other recent attention to docs will make
the docs easier to use, and also highlight some of the arcane and strange
places in the various APIs.  I'm hoping some intrepid docs-author/editor
will be reading/writing along and go "Wait. What?  It works like what?  That
doesn't make any sense.   I'm filing a ticket, that needs to be fixed!"

Maybe I'm too optimistic, but I'd still like to see it.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110201/65d85774/attachment-0001.htm 

From jasonjwwilliams at gmail.com  Tue Feb  1 13:25:02 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 1 Feb 2011 11:25:02 -0700
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <BAEC1D4F-2990-4DA7-81CE-82B3BF8A2A92@twistedmatrix.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<BAEC1D4F-2990-4DA7-81CE-82B3BF8A2A92@twistedmatrix.com>
Message-ID: <AANLkTi=_C8vSmTcfVUadHPY+PDvdWT4a9rE+B5MqJb-c@mail.gmail.com>

On Jan 31, 2011, at 11:41 AM, Tom Davis wrote:
>
> Thoughts?

Overall I think the layout and structure is a big improvement over the
current Twisted documentation. It's easier to navigate and grok where
you want to go. While the content of the web tutorial is thin, I think
Jean-Paul's Twisted Web in 60 seconds adapted to that style and layout
would help a lot. This documentation looks the part, which is
something Twisted really needs.

-J


From tom at recursivedream.com  Tue Feb  1 13:53:09 2011
From: tom at recursivedream.com (Tom Davis)
Date: Tue, 1 Feb 2011 13:53:09 -0500
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
Message-ID: <AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>

On Tue, Feb 1, 2011 at 12:58 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jan 31, 2011, at 11:41 AM, Tom Davis wrote:
>
> Thoughts?
>
>
> Priority #1 for most people who are enthusiastic about documentation is to
> come in and write a ton of additional documentation.  But this is a lot like
> trying to fix a large, broken, untested system by writing a pile of new,
> untested code, because "this time we'll get the design right".  What were
> the problems with the way the previous documentation got written?  How did
> we end up with this mess, and what is going to be done differently this
> time?  Most importantly, *what is the metric by which we will judge this
> new documentation to be better?*
>

Those tutorials aren't new at all; they were taken (often verbatim) from the
"using twisted.web" document. Writing a ton of new documentation really
isn't my goal at all. My goals are threefold:

   1. Reorganize existing documentation in a way that makes it more
   accessible.
   2. Edit existing documentation to conform to a task (howto/tutorial/etc.)
   vs. expanded learning model. (the whole instant gratification thing and all
   that)
   3. Gradually update / replace code listings with "current best practices"
   examples that are tested.

I know you want an actual *layout* for the reorganization. I want to give
that to you, but it requires going through all the documentation and making
sure it fits in the reorganized layout or making sections for it when it
doesn't which is far more time consuming than providing a layout for the
"task" piece, as I did here. I'm basically just saying "How-tos should have
a standard layout with these sections; here's a stub of one such how-to as
incompletely adapted from the current documentation".

I think most of this is a huge misunderstanding as to my goals both in
general and for the particular section critiqued here. Perhaps I should have
completed it before putting it up for review. I just felt it was better to
get *something* out here just in case everybody hated the entire direction
rather than spend a ton of time slicing the current web server docs the way
I personally feel they should fit together in order to properly serve the
audience.


>
> If all that comes out of your efforts is a new, different pile of
> documentation, that's not *entirely* without value; different audiences
> understand things in different ways, so someone might pick it up and
> understand Twisted as a result.  But I very much doubt that's going to move
> us from a general impression of "bad docs" to a general impression of "good
> docs".
>
> More specific criticism:
>
>
>    - "This is a Twisted Task"?  I feel like I'm about to start reading
>    about a Task object or something related to the twisted.internet.task
>    module.  Or maybe that this is an exercise.  A document explaining how to do
>    a task is rarely called a "task" itself.  Mostly they're called "How-To"s,
>    actually.  I understand you're trying to get away from old terminology but
>    this seems awkward and forced.
>
> I just started using this terminology because it seemed common within our
conversations. How-to/tutorial would likely be less confusing.

>
>    - "You should be familiar with Resources"?  That is really broad and
>    wide-ranging and should be a hyperlink to another tutorial.
>
> It was just a placeholder; it should link to a section in the web server
overview docs that talks about Resources. There are other things on that
list, too (Site object, yada yada). Although, like I said, it's merely
incomplete.


>
>    -  Plus, I think that most people interested in these tasks will want
>    to learn about how to get simple tasks done first, before moving on to a
>    more abstract / theoretical understanding of the model behind them.
>
> I completely agree. That's my whole point with starting off using *twistd*,
despite its limitations or whatever.

>
>    - More importantly: this is a very wishy-washy definition of the
>    audience.  Is it for system administrators?  Software developers?  DevOps
>    people?  Graphic designers?  Power users?  What level of experience do they
>    need with Python?  With networking?  With HTTP?
>
> The latter should all be under "Prerequisites" whereas "audience" should
probably be a new howto standard section that's currently overlooked
(perhaps above "Prerequisites"?)

>
>    - "Other configuration options are available"?  This should be a list
>    of links to other documents that might help with some of those options.
>     Documentation which says "and then you could do something else" without
>    telling you what else or why is needlessly confusing.
>
> I agree. There are lots and lots of lines to connect even from such a
simplistic tutorial. I wanted to get feedback on the *layout* rather than
the final web project documentation which should certainly include links to
twistd option docs and probably a half dozen other things I haven't linked
to yet.

>
>    - The WSGI example totally glosses over how you get your code onto
>    sys.path (PYTHONPATH etc), says that 'helloworld' is a module/package (which
>    is it?  why are both options given?).  This is an *extremely* confusing
>    area for newbies, which is why it actually makes a bit of sense to me that
>    the web-in-60-seconds WSGI tutorial starts with a callable defined in the
>    .tac.  Not a good practice in the long term, but it allows the user to
>    immediately get some feedback and have some notion of how things are wired
>    together without having to debug Python's import system first.
>
> Fair enough. This point was also not covered in the official docs, where I
got the instructions from. Regardless, I have no intention of including
how-tos that gloss over *anything; *either they work "out of the box" or are
edited until they do.

>
>    - .rpy scripts are for deployment, not debugging; I was a little
>    concerned seeing that bullet point on the outline.  (See <
>    http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/rpy-scripts.html
>    >.)
>
> Huh? The docs you link to claim:

So, while rpy scripts may be useful for testing out ideas, they're not
> recommend for much more than that.


Am I missing something here?

* * *

My hope is that this reply clears up some confusion. However, feel free to
let me know if you think I simply don't have the mindset necessary to
"improve" the documentation in a way that is desirable. I had a hard time
learning Twisted in the beginning and to this day some really helpful
abstractions and just available projects / solved problems elude me.

I think the reason for this is that I think a lot like Jacob <
http://jacobian.org/writing/great-documentation/> when it comes to
documentation and that's the sort of stuff I need to have in order to truly
grok something. Maybe that's what we all want here. Maybe it isn't, though.
And I'd really love to figure out which it is before I drive forward on
this. If we really are on the same page (and I'd certainly like to be),
we've got some hellish communication issues ;)


>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110201/f489659a/attachment.htm 

From exarkun at twistedmatrix.com  Tue Feb  1 14:02:15 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 01 Feb 2011 19:02:15 -0000
Subject: [Twisted-Python] Fingering Finger
In-Reply-To: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
References: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
Message-ID: <20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>

On 22 Jan, 10:14 pm, tom at recursivedream.com wrote:
>In this thread, I hope to find a resolution to the issue of the Finger
>tutorial and efforts to sufficiently improve it or remove it.
>
>In the course of reviewing documentation-related tickets, I stumbled 
>upon
>#1148 (http://twistedmatrix.com/trac/ticket/1148). Therein, Glyph 
>first(?)
>put down a lot of things we've been discussing and agreeing upon in the
>Refactoring Documentation thread. One of the issues still up for debate 
>is
>whether or not the Finger tutorial is sufficiently strong to survive 
>the
>documentation overhaul. There are various points against it right now:
>
>   - It isn't tested or even test*able*
>   - It doesn't cover "best practices" as they relate to writing 
>testable,
>   maintainable code, etc.
>   - It attempts to implement basically every main Twisted concept, 
>often in
>   contrived or poorly-executed ways
>   - It has been said it has, "...at best, the potential for 
>mediocrity."
>
>There are also enough tickets related to refactoring / rewriting it 
>that a
>resolution would make a significant dent in the list of stale 
>documentation
>tickets. Among these two year-old tickets are:
>
>   - http://twistedmatrix.com/trac/ticket/532 - Big jump from 
>finger18.py to
>   finger19.py in tutorial
>   - http://twistedmatrix.com/trac/ticket/626 - Split tutorial finger 
>code
>   into libraries
>   - http://twistedmatrix.com/trac/ticket/2205 - Documentation 
>codelistings
>   need updating and tests
>
>This shouldn't be a blocker on anything Kevin and I are doing, but it'd 
>be
>nice to concurrently have discussions on issues we'll need to address 
>later.
>I'm also pretty anal about ticket lists and if these aren't going 
>anywhere
>I'd love to close them ;)

In an attempt to elicit some feedback on this, let me try casting the 
issue in a different light.

Does anyone think the finger tutorial shouldn't be deleted?  Why?

Jean-Paul


From kevin.horn at gmail.com  Tue Feb  1 14:10:13 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 1 Feb 2011 13:10:13 -0600
Subject: [Twisted-Python] Fingering Finger
In-Reply-To: <20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
References: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
	<20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
Message-ID: <AANLkTimTSTv3ejLgRedkE9LSX9tYrrHrE8-b9Rq_iH=X@mail.gmail.com>

On Tue, Feb 1, 2011 at 1:02 PM, <exarkun at twistedmatrix.com> wrote:

> On 22 Jan, 10:14 pm, tom at recursivedream.com wrote:
> >In this thread, I hope to find a resolution to the issue of the Finger
> >tutorial and efforts to sufficiently improve it or remove it.
> >
> >In the course of reviewing documentation-related tickets, I stumbled
> >upon
> >#1148 (http://twistedmatrix.com/trac/ticket/1148). Therein, Glyph
> >first(?)
> >put down a lot of things we've been discussing and agreeing upon in the
> >Refactoring Documentation thread. One of the issues still up for debate
> >is
> >whether or not the Finger tutorial is sufficiently strong to survive
> >the
> >documentation overhaul. There are various points against it right now:
> >
> >   - It isn't tested or even test*able*
> >   - It doesn't cover "best practices" as they relate to writing
> >testable,
> >   maintainable code, etc.
> >   - It attempts to implement basically every main Twisted concept,
> >often in
> >   contrived or poorly-executed ways
> >   - It has been said it has, "...at best, the potential for
> >mediocrity."
> >
> >There are also enough tickets related to refactoring / rewriting it
> >that a
> >resolution would make a significant dent in the list of stale
> >documentation
> >tickets. Among these two year-old tickets are:
> >
> >   - http://twistedmatrix.com/trac/ticket/532 - Big jump from
> >finger18.py to
> >   finger19.py in tutorial
> >   - http://twistedmatrix.com/trac/ticket/626 - Split tutorial finger
> >code
> >   into libraries
> >   - http://twistedmatrix.com/trac/ticket/2205 - Documentation
> >codelistings
> >   need updating and tests
> >
> >This shouldn't be a blocker on anything Kevin and I are doing, but it'd
> >be
> >nice to concurrently have discussions on issues we'll need to address
> >later.
> >I'm also pretty anal about ticket lists and if these aren't going
> >anywhere
> >I'd love to close them ;)
>
> In an attempt to elicit some feedback on this, let me try casting the
> issue in a different light.
>
> Does anyone think the finger tutorial shouldn't be deleted?  Why?
>
> Jean-Paul
>
>
I actually found it very helpful back when I was first learning Twisted.  I
admit I haven't really read it critically in several years though.  If it is
to be removed, I think it would be a good idea to replace it with something
similar (i.e. a step-by-step implementation of a protocol).

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110201/f6bafd64/attachment-0001.htm 

From agasson at red-elvis.net  Tue Feb  1 14:19:51 2011
From: agasson at red-elvis.net (Andrew Gasson)
Date: Tue, 1 Feb 2011 19:19:51 +0000
Subject: [Twisted-Python] Fingering Finger
In-Reply-To: <AANLkTimTSTv3ejLgRedkE9LSX9tYrrHrE8-b9Rq_iH=X@mail.gmail.com>
References: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
	<20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
	<AANLkTimTSTv3ejLgRedkE9LSX9tYrrHrE8-b9Rq_iH=X@mail.gmail.com>
Message-ID: <4E28D8B1-21BC-430C-8BE4-D1C1D3483920@red-elvis.net>


On 1/02/2011, at 7:10 PM, Kevin Horn wrote:

> On Tue, Feb 1, 2011 at 1:02 PM, <exarkun at twistedmatrix.com> wrote:
> On 22 Jan, 10:14 pm, tom at recursivedream.com wrote:
> >In this thread, I hope to find a resolution to the issue of the Finger
> >tutorial and efforts to sufficiently improve it or remove it.
> >
> >In the course of reviewing documentation-related tickets, I stumbled
> >upon
> >#1148 (http://twistedmatrix.com/trac/ticket/1148). Therein, Glyph
> >first(?)
> >put down a lot of things we've been discussing and agreeing upon in the
> >Refactoring Documentation thread. One of the issues still up for debate
> >is
> >whether or not the Finger tutorial is sufficiently strong to survive
> >the
> >documentation overhaul. There are various points against it right now:
> >
> >   - It isn't tested or even test*able*
> >   - It doesn't cover "best practices" as they relate to writing
> >testable,
> >   maintainable code, etc.
> >   - It attempts to implement basically every main Twisted concept,
> >often in
> >   contrived or poorly-executed ways
> >   - It has been said it has, "...at best, the potential for
> >mediocrity."
> >
> >There are also enough tickets related to refactoring / rewriting it
> >that a
> >resolution would make a significant dent in the list of stale
> >documentation
> >tickets. Among these two year-old tickets are:
> >
> >   - http://twistedmatrix.com/trac/ticket/532 - Big jump from
> >finger18.py to
> >   finger19.py in tutorial
> >   - http://twistedmatrix.com/trac/ticket/626 - Split tutorial finger
> >code
> >   into libraries
> >   - http://twistedmatrix.com/trac/ticket/2205 - Documentation
> >codelistings
> >   need updating and tests
> >
> >This shouldn't be a blocker on anything Kevin and I are doing, but it'd
> >be
> >nice to concurrently have discussions on issues we'll need to address
> >later.
> >I'm also pretty anal about ticket lists and if these aren't going
> >anywhere
> >I'd love to close them ;)
> 
> In an attempt to elicit some feedback on this, let me try casting the
> issue in a different light.
> 
> Does anyone think the finger tutorial shouldn't be deleted?  Why?
> 
> Jean-Paul
> 
> 
> I actually found it very helpful back when I was first learning Twisted.  I admit I haven't really read it critically in several years though.  If it is to be removed, I think it would be a good idea to replace it with something similar (i.e. a step-by-step implementation of a protocol).
> 
> Kevin Horn

I hate deleting anything as there could be good tidbits there for someone. Can we just depreciate it and but strong warning at top of all finger docs to say they are outdated and maynot be the current best practice ?

Gas

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110201/be3ab06e/attachment.htm 

From jon at multani.info  Tue Feb  1 14:33:59 2011
From: jon at multani.info (Jonathan Ballet)
Date: Tue, 1 Feb 2011 20:33:59 +0100
Subject: [Twisted-Python] Fingering Finger
In-Reply-To: <20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
References: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
	<20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
Message-ID: <20110201203359.122b4212@gourami>

Le Tue, 01 Feb 2011 19:02:15 -0000, exarkun at twistedmatrix.com a ?crit :

> In an attempt to elicit some feedback on this, let me try casting the 
> issue in a different light.
> 
> Does anyone think the finger tutorial shouldn't be deleted?  Why?

I think one of the advantage of this tutorial is that it presents a
step-by-step overview of the various Twisted concepts, although it's not
perfect, as Tom raised in this thread and as other people did somewhere else.

Is there any other documentation that does this, yet?

 Jonathan


From glyph at twistedmatrix.com  Tue Feb  1 14:41:49 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 1 Feb 2011 11:41:49 -0800
Subject: [Twisted-Python] Fingering Finger
In-Reply-To: <AANLkTimTSTv3ejLgRedkE9LSX9tYrrHrE8-b9Rq_iH=X@mail.gmail.com>
References: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
	<20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
	<AANLkTimTSTv3ejLgRedkE9LSX9tYrrHrE8-b9Rq_iH=X@mail.gmail.com>
Message-ID: <6FECDE47-0A13-465C-8E9A-2B48D6712595@twistedmatrix.com>


On Feb 1, 2011, at 11:10 AM, Kevin Horn wrote:

> I actually found it very helpful back when I was first learning Twisted.  I admit I haven't really read it critically in several years though.  If it is to be removed, I think it would be a good idea to replace it with something similar (i.e. a step-by-step implementation of a protocol).

This seems to be the consensus about the finger tutorial from people who actually learned about twisted from it.  It's effective documentation, although not perfect.  On the other hand there's some sample bias, I hear a lot more from those people than from the people who couldn't learn about Twisted from it :).

Arguments in favor of deleting it seem to be based mostly on difficulty of maintenance, which are valid, but perhaps overzealous.

The finger tutorial seems better than nothing though, so how about this: we leave it around, but declare a moratorium on maintaining it, and anyone who wants to fix issues with the finger tutorial should be encouraged to write an entirely new tutorial instead, one that would be easier to keep up to date.

From glyph at twistedmatrix.com  Tue Feb  1 17:15:18 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 1 Feb 2011 14:15:18 -0800
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
	<AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
Message-ID: <04986C32-9E18-43F5-8992-BBD970CC9E83@twistedmatrix.com>


On Feb 1, 2011, at 10:53 AM, Tom Davis wrote:

> On Tue, Feb 1, 2011 at 12:58 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> On Jan 31, 2011, at 11:41 AM, Tom Davis wrote:
> 
>> Thoughts?
> 
> 
> Priority #1 for most people who are enthusiastic about documentation is to come in and write a ton of additional documentation.  But this is a lot like trying to fix a large, broken, untested system by writing a pile of new, untested code, because "this time we'll get the design right".  What were the problems with the way the previous documentation got written?  How did we end up with this mess, and what is going to be done differently this time?  Most importantly, what is the metric by which we will judge this new documentation to be better?

I'm still really interested in concise answer to that last question there.  What are the priorities for what you're trying to improve?  What you've listed here is "the steps you're going to take in order to improve it" but I have yet to see a lucid description of the problem in detail.

> Those tutorials aren't new at all; they were taken (often verbatim) from the "using twisted.web" document. Writing a ton of new documentation really isn't my goal at all. My goals are threefold:
> Reorganize existing documentation in a way that makes it more accessible.
Accessible to whom?  How will reorganizing it make it more accessible?  One way to interpret this statement is that your goal is to remove all diagrams, because the documentation is currently not accessible to the blind.  I'm pretty sure that's not what you mean, but it's a good example of how ambiguous this statement is :).  (Plus, the couple of blind developers I've talked to about Twisted didn't seem to have a problem with the docs...)
> Edit existing documentation to conform to a task (howto/tutorial/etc.) vs. expanded learning model. (the whole instant gratification thing and all that)
OK, I'm on board with that.  Except that in order to understand the tutorial documentation you need a good backing of reference docs, so it's not like you can just choose one over the other.  And we have lots of tutorial docs (c.f. the infamous finger tutorial) which are in the tutorial / task-oriented paradigm but don't teach much that's directly useful.
> Gradually update / replace code listings with "current best practices" examples that are tested.
No arguing with that at all, that sounds great.

> I know you want an actual *layout* for the reorganization.

Not really.

What I want is a clear understanding of what you intend to change.  I usually get that by reading a diff: it's easy to read a diff and see what changed in the old versus the new version of something.  I can tell if it's an improvement without having to digest the entire content.

But the structure of <http://docs.recursivedream.com/twisted/> is a sprawling mess of placeholders and half-finished ideas.  It's different from the existing documentation in lots of ways; it has a completely different stylesheet (which I assume is some standard Sphinx thing we will get rid of with the consistent theming work in Kevin's sphinx transition).  I don't know what I'm looking at or how to appreciate it.

This is why I started off by complaining about the separate git repository.  If you're going to work in a separate repository and a separate format and not produce diffs that I can skim, then it's very hard to comment intelligently on your strategy, and you need to take an immense amount of care to call out the sections you consider complete, what exactly you want feedback on, and areas where you have or haven't added new content (so you can't be blamed for issues in old content that you're not trying to update).

Note that diffs against Kevin's sphinx output would basically satisfy this same requirement, even if that output isn't really complete and those diffs would need to be re-created when the final conversion occurred.  At least there would be a set of deltas to look at rather than a whole new structure which is mostly scaffolding.

> I want to give that to you, but it requires going through all the documentation and making sure it fits in the reorganized layout or making sections for it when it doesn't which is far more time consuming than providing a layout for the "task" piece, as I did here. I'm basically just saying "How-tos should have a standard layout with these sections; here's a stub of one such how-to as incompletely adapted from the current documentation".

Even going back and reading your original message to this thread now, I can't tell that this is what you were asking for review of.  Even now I'm not entirely sure what you mean.  Do you mean that you want feedback on the sections on <http://docs.recursivedream.com/twisted/projects/web/tasks/serve/index.html>?  Or the way that <http://docs.recursivedream.com/twisted/projects/web/tasks/serve/serve.html> is split out into separate tasks?

If you are interested in getting a review of the template or the outline, please write up the template itself with a description of what should go into each section.  Then you could link from the template to web/tasks/serve/index and say "and here's an example of some existing documentation applied to this outline".  But since I have no idea what the generic purpose of each section is, I can't comment on whether the sections are a bad idea or the classifications of certain sections of existing docs is a bad idea or if it's just too incomplete for me to comment on.

Plus, such a template would serve as a critical tool for new documentation authors (of which I hope we get a few), allowing for a consistent style to be followed by multiple authors writing task-oriented documentation for different parts of Twisted.  The lack of such meta-documentation is the root of many issues with the current docs: when we're writing code for Twisted, we have a very clear idea of what the coding standards are, but when we approach documentation, the individual author just writes whatever random style happens to suit them on that day.  There's no guidance.

> I think most of this is a huge misunderstanding as to my goals both in general and for the particular section critiqued here. Perhaps I should have completed it before putting it up for review. I just felt it was better to get something out here just in case everybody hated the entire direction rather than spend a ton of time slicing the current web server docs the way I personally feel they should fit together in order to properly serve the audience.

Soliciting feedback is good.  I still think that these discussions have been very productive.  The issue I have isn't that it's unfinished, it's that there are no guard-rails on the unfinished sections, so it's easy to careen off into the stuff that I'm not really supposed to be paying attention to. A substantially larger document with that same problem would have been a disaster to try to review, so early feedback is better; hopefully as you produce something bigger you'll also alleviate the difficulty of review somehow.

> If all that comes out of your efforts is a new, different pile of documentation, that's not entirely without value; different audiences understand things in different ways, so someone might pick it up and understand Twisted as a result.  But I very much doubt that's going to move us from a general impression of "bad docs" to a general impression of "good docs".
> 
> More specific criticism:
> 
> "This is a Twisted Task"?  I feel like I'm about to start reading about a Task object or something related to the twisted.internet.task module.  Or maybe that this is an exercise.  A document explaining how to do a task is rarely called a "task" itself.  Mostly they're called "How-To"s, actually.  I understand you're trying to get away from old terminology but this seems awkward and forced.
> I just started using this terminology because it seemed common within our conversations. How-to/tutorial would likely be less confusing.

OK.  For what it's worth I share your desire for a new / better term but I can't think of one.
> "You should be familiar with Resources"?  That is really broad and wide-ranging and should be a hyperlink to another tutorial.
> It was just a placeholder; it should link to a section in the web server overview docs that talks about Resources. There are other things on that list, too (Site object, yada yada). Although, like I said, it's merely incomplete.

I suppose my comments above about meta-documentation and a deeper explanation of the template are my response to this; if it were clearer what the structure were really supposed to be representing it would be easier to ignore minor flaws like this or recommend improvements 
>  Plus, I think that most people interested in these tasks will want to learn about how to get simple tasks done first, before moving on to a more abstract / theoretical understanding of the model behind them.
> I completely agree. That's my whole point with starting off using *twistd*, despite its limitations or whatever. 

Obviously from my other message I'm a fan of this approach.
> More importantly: this is a very wishy-washy definition of the audience.  Is it for system administrators?  Software developers?  DevOps people?  Graphic designers?  Power users?  What level of experience do they need with Python?  With networking?  With HTTP?
> The latter should all be under "Prerequisites" whereas "audience" should probably be a new howto standard section that's currently overlooked (perhaps above "Prerequisites"?)

It seems to me that "audience" is the section and "prerequisites" should be a sub-section of that.  After all prerequisites are really attributes of the audience, not the document :).
> "Other configuration options are available"?  This should be a list of links to other documents that might help with some of those options.  Documentation which says "and then you could do something else" without telling you what else or why is needlessly confusing.
> I agree. There are lots and lots of lines to connect even from such a simplistic tutorial. I wanted to get feedback on the layout rather than the final web project documentation which should certainly include links to twistd option docs and probably a half dozen other things I haven't linked to yet.

(Again, go write up the layout explicitly first, and then I can provide more useful feedback!)
> The WSGI example totally glosses over how you get your code onto sys.path (PYTHONPATH etc), says that 'helloworld' is a module/package (which is it?  why are both options given?).  This is an extremely confusing area for newbies, which is why it actually makes a bit of sense to me that the web-in-60-seconds WSGI tutorial starts with a callable defined in the .tac.  Not a good practice in the long term, but it allows the user to immediately get some feedback and have some notion of how things are wired together without having to debug Python's import system first.
> Fair enough. This point was also not covered in the official docs, where I got the instructions from. Regardless, I have no intention of including how-tos that gloss over anything; either they work "out of the box" or are edited until they do.

I guess this is another nitpick that wasn't really about the layout.  Sounds like we feel the same way, at any rate.
> .rpy scripts are for deployment, not debugging; I was a little concerned seeing that bullet point on the outline.  (See <http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/rpy-scripts.html>.)
> Huh? The docs you link to claim:
> 
> So, while rpy scripts may be useful for testing out ideas, they're not recommend for much more than that.
> 
> Am I missing something here?

Well, "testing out" and "debugging" aren't quite the same thing.  And I'd probably recommend RPYs for more than that :).  I was linking to that document just to provide an expanded explanation of the functionality; personally I find it obvious why RPYs are super useful from that example, so I mostly just ignore that comment.  (Perhaps this doc needs to be updated, but let's please not hijack this already-sprawling thread for discussion of the merits and flaws of RPYs...)

> My hope is that this reply clears up some confusion. However, feel free to let me know if you think I simply don't have the mindset necessary to "improve" the documentation in a way that is desirable. I had a hard time learning Twisted in the beginning and to this day some really helpful abstractions and just available projects / solved problems elude me.

This sounds like I'm discouraging you.  If that's the case, feel free to just tell me to sit this one out and wait until you're further along in the project.  I am trying to provide feedback to be useful to your efforts, but if you don't find it useful, then you can carry on with feedback from people who really need the docs.

> I think the reason for this is that I think a lot like Jacob <http://jacobian.org/writing/great-documentation/> when it comes to documentation and that's the sort of stuff I need to have in order to truly grok something. Maybe that's what we all want here. Maybe it isn't, though. And I'd really love to figure out which it is before I drive forward on this. If we really are on the same page (and I'd certainly like to be), we've got some hellish communication issues ;)

I'm a big fan of Jacob's in general and that essay series in particular as far as it comes to documentation, so I don't think that's the issue.  Obviously his methods have yielded a result that is well-regarded in the Django community.  And I think we are on the same page about many things, and we don't need to agree about everything.

I'm still quite excited to have you working on our documentation.

(Except for his comment about API documentation generators; I think that epydoc/pydoc is hugely useful.  But I do agree that one shouldn't just run an auto-generator to spit out a rehash of the source code; one needs to write a ton of documentation in an appropriate format to be consumed by such a tool in order for it to be useful.)

Thanks and good luck,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110201/1d3ce9bd/attachment-0001.htm 

From andrew at bemusement.org  Tue Feb  1 17:35:07 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Wed, 2 Feb 2011 09:35:07 +1100
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
	<AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
Message-ID: <20110201223507.GG9824@aihal.home.puzzling.org>

Tom Davis wrote:
[...]
>        *?.rpy scripts are for deployment, not debugging; I was a little
>          concerned seeing that bullet point on the outline. ?(See
>          <[2]http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/rpy-scripts.html>.)
> 
>    Huh? The docs you link to claim:
> 
>      So, while rpy scripts may be useful for testing out ideas, they're not
>      recommend for much more than that.
> 
>    Am I missing something here?

Throwaway prototypes aren't the same sort of thing as debugging.  The
phrase ?testing out ideas? indicates the former, not the latter.

-Andrew.


From kevin.horn at gmail.com  Tue Feb  1 18:18:59 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 1 Feb 2011 17:18:59 -0600
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <04986C32-9E18-43F5-8992-BBD970CC9E83@twistedmatrix.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
	<AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
	<04986C32-9E18-43F5-8992-BBD970CC9E83@twistedmatrix.com>
Message-ID: <AANLkTikcKKKenSeSuGF+Mmh7esdv7FzFU3a_bVsM0JNv@mail.gmail.com>

On Tue, Feb 1, 2011 at 4:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> OK.  For what it's worth I share your desire for a new / better term but I
> can't think of one.
>
>
Recipes?  Snippets?  Tidbits?  Morsels?  Quickies? "How do I..."s?  Quick
Examples?  Simple Examples?  Examples?  Blurbs?

A lot of the various example scripts actually fulfill this function, though
if you don't know about them, you're out of luck.  And they have no
explanatory text to go along with them.

Some of the questions in the FAQ fulfill a similar purpose, I think, and
would benefit from a simple example to link to.

I'd like to see a bajillion of these, but only if we have a way to test the
sample code.  Otherwise it's a maintenance nightmare.  (Note that when stuff
changes and the example code breaks, it's also a flag to update whatever
docs point to it, so the idea of testing sample code isn't just to help the
code, but also the narrative docs that go along with it.)

----

I agree with Glyph that "templates" to guide docs authors would be an
excellent tool to have.

----

As far as Jacob KM's documentation series, I also think it's pretty good, so
let's compare Twisted's docs to what he suggests to write:

   - step-by-step tutorials,

Twisted has precisely one of these (the finger tutorial).  A lot of people
hate it.  It should be fixed or replaced, and we should also have more of
these.  You could probably also count web-in-60 as one of these, too I
guess, so maybe we have 2.

   - overviews and topical guides to the various conceptual areas of your
   project, and

Pretty much anything in the various "howto" directories, though in the docs
themselves they tend to be called "Developer Guides" (which I think is a
better name).  We have a lot of these, they just need to be better
organized/edited, and a bit more coherent.  Some are fantastic.  Some are
stubs.  Some are out of date.  Some are flat wrong.

   - low-level, deep-dive reference material.

The API docs.  Which are great in some places, dismal in others.  There
needs to be a systematic review of this to figure out what's missing.  A
"template" for docstrings wouldn't be a bad tool to have either.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110201/31d8076b/attachment.htm 

From jason.heeris at gmail.com  Wed Feb  2 01:36:55 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Wed, 2 Feb 2011 14:36:55 +0800
Subject: [Twisted-Python] Guidance needed on serial device interaction
Message-ID: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>

This is a bit long, sorry...

I have a PyGTK program that uses threads and pyserial's blocking
methods to interact with an RS232 connected device. I'd like to throw
out the threading awfulness and redo it in Twisted, if possible, but
I'm a little lost.

The real protocol is a bit convoluted, but basically:
  - You can issue single character commands to the device that give a fixed
    length response, such as sending 'C' and getting an eight-digit hex
    string back (the program flash CRC)
  - You can put the device into "programming mode" (command 'P'), where it
    takes an arbitrary length sequence of records, verifying each record and
    stopping when it sees the special "end record"
  - The device will send back '!' to indicate an error
  - The device will send back '>' to indicate that it's ready for more
    commands

I know I need to use the SerialPort transport, and since that takes a
protocol I've tried to sketch one out but can't seem to get very far.

I want to have methods that can be called from the UI, returning
deferreds to which UI responses can be added as callbacks. I also want
to be able to monitor progress of the programming, so I need a
callback for that separate from the deferred itself. I figure that
calling, say, device.program(program, progress_cb) should return a
Deferred and queue the command, and that somehow the dataReceived()
method should be the start of a chain of events that either:
  - updates state and waits for the next piece of data, or
  - calls back on the appropriate Deferred

I'd also like to structure things so that successive calls to the
DeviceProtocol object queue up, something like:

----
class DeviceProtocol(Protocol):

    def dataReceived(self, data):
        # ...?

    def checksum(self):
        res = defer.Deferred()
        # When ready, send 'C' over the serial line (ie.
        # self.transport.write('C'))
        # Somehow callback via a deferred when the checksum comes back
        return res

    def program(self, program_records, progress_cb):
        res = defer.Deferred()
        # When ready, send 'P' over the serial line
        # Write all the data in "program_records", checking each
        # response, calling back via a deferred when done.
        # ...
        return res

    def connectionLost(self):
        # maybe have something here, like calling the errback of all
        # pending deferreds

def go(reactor):
    # callbacks/errbacks not shown

    device = DeviceProtocol()
    transport = SerialPort(device, portname, reactor)

    program_result_1 = device.program(records, good_programming_progress)
    program_result_1.addCallbacks(programming_done, programming_err)

    checksum_result = device.checksum()
    checksum_result.addCallbacks(checksum, checksum_err)

    # This will fail at some point:
    program_result_2 = device.program(bad_records)
    cp_deferred.addCallbacks(programming_done, programming_err)

if __name__ == "__main__":
    reactor.callWhenRunning(go, reactor)
    reactor.run()
----

But I'm really lost as to how to start structuring things within the
protocol object itself. Should I even be doing this in a Protocol
subclass, or should I be putting some of this functionality into a
Factory of some sort (eg. a ClientFactory)? And if so, how do I
actually connect the factory to the serial port transport? Or am I on
the wrong track altogether?

More to the point, has a problem like this already been solved
somewhere? Is the solution obvious to Twisted gurus?

Any help would be appreciated.

Cheers,
Jason


From kespindler at gmail.com  Wed Feb  2 02:15:07 2011
From: kespindler at gmail.com (Kurt Spindler)
Date: Wed, 2 Feb 2011 02:15:07 -0500
Subject: [Twisted-Python] design of twisted application
Message-ID: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>

Hey,

I am trying to design a twisted application, (I'm pretty new to twisted and
networking in general) and I feel like I'm not approaching it quite the
right way and would appreciate your feedback. First part, is that I am
trying to couple twisted with an existing graphics-type application, that
already has it's own main loop, etc. Meaning, I need to be running other
python code while I have the reactor running. Is the solution threading?



  f = MyFactory()

  reactor.connectTCP("localhost",22223,f)

  t = threading.Thread(target=reactor.run)

  t.run()

  runOtherCodeConcurrently()


Is there a better solution? Second question is that, in that other bunch of
code, I need to be able to write things to the socket. How can I access the
instance of my protocol subclass that is used by the factory, so I can make
protocolInstance.transport.write type calls? Or am I thinking about this is
a completely wrong way?

Thank you very much for your help!

Kurt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110202/52c4c61e/attachment.htm 

From michaelnt at gmail.com  Wed Feb  2 02:58:18 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Wed, 2 Feb 2011 07:58:18 +0000
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
Message-ID: <AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>

On 2 February 2011 06:36, Jason Heeris <jason.heeris at gmail.com> wrote:
> This is a bit long, sorry...
>
> I have a PyGTK program that uses threads and pyserial's blocking
> methods to interact with an RS232 connected device. I'd like to throw
> out the threading awfulness and redo it in Twisted, if possible, but
> I'm a little lost.
>
> The real protocol is a bit convoluted, but basically:
> ?- You can issue single character commands to the device that give a fixed
> ? ?length response, such as sending 'C' and getting an eight-digit hex
> ? ?string back (the program flash CRC)
> ?- You can put the device into "programming mode" (command 'P'), where it
> ? ?takes an arbitrary length sequence of records, verifying each record and
> ? ?stopping when it sees the special "end record"
> ?- The device will send back '!' to indicate an error
> ?- The device will send back '>' to indicate that it's ready for more
> ? ?commands

The job of the protocol class is to assemble the bytes that you
receive into packets or messages. Ideally the protocol will have
characters that frame a message, and it sounds like you might have
this if > or ! is always sent at the end of every reply.

The protocol dataReceived method will be called as  data arrives at
the serial port once enough data has arrived to complete a message
this method calls stringReceived with the complete message.

There are some protocol that might be suitable in twisted/protocols/basic.py

> <snip>
> I'd also like to structure things so that successive calls to the
> DeviceProtocol object queue up, something like:

You can use a DeferredSemaphore for this.

 <snip>

Michael


From michaelnt at gmail.com  Wed Feb  2 03:05:08 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Wed, 2 Feb 2011 08:05:08 +0000
Subject: [Twisted-Python] design of twisted application
In-Reply-To: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
References: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
Message-ID: <AANLkTikJttHZyqMOP_mjCgbPGY72drZL16qXXkSEzpG5@mail.gmail.com>

On 2 February 2011 07:15, Kurt Spindler <kespindler at gmail.com> wrote:
> Hey,
> I am trying to design a twisted application, (I'm pretty new to twisted and
> networking in general) and I feel like I'm not approaching it quite the
> right way and would appreciate your feedback. First part, is that I am
> trying to couple twisted with an existing graphics-type application, that
> already has it's own main loop, etc. Meaning, I need to be running other
> python code while I have the reactor running. Is the solution threading?

Hopefully there is already a twisted reactor for your graphics
library, what are you using?

>
>
> ??f = MyFactory()
>
> ??reactor.connectTCP("localhost",22223,f)
>
> ? t = threading.Thread(target=reactor.run)
>
> ? t.run()
>
> ??runOtherCodeConcurrently()
>
> Is there a better solution? Second question is that, in that other bunch of
> code, I need to be able to write things to the socket. How can I access the
> instance of my protocol subclass that is used by the factory, so I can make
> protocolInstance.transport.write type calls? Or am I thinking about this is
> a completely wrong way?

You should be able to do this on the Factory that created the protocol instance.

Michael


From jason.heeris at gmail.com  Wed Feb  2 03:58:30 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Wed, 2 Feb 2011 16:58:30 +0800
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
	<AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
Message-ID: <AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>

On 2 February 2011 15:58, Michael Thompson <michaelnt at gmail.com> wrote:
> The job of the protocol class is to assemble the bytes that you
> receive into packets or messages. Ideally the protocol will have
> characters that frame a message, and it sounds like you might have
> this if > or ! is always sent at the end of every reply.

Apologies, but I just went over the code for the device controller and
I described the protocol a little incorrectly. But anyway... It
depends on what you mean by reply. For example a programming session
might go:

Dev: ">"
PC: "P"
Dev: "."
PC: ":"
Dev: "."
PC: "02000004"
Dev: "."
PC: "1D00"
Dev: "."
PC: "DD"
Dev: "."
<skip to last transmission for last record>
PC: "FF"
Dev: ".0>" (this is the confirmation ".", the status code of the
programming, and the "ready" character)

It's not like the PC sends all the data at once, and the device
processes it all and sends a reply framed by ">". If something goes
wrong in the device, it might be:

Dev: ">"
PC: "P"
Dev: "1>"

...or if the sent data is invalid...

Dev: ">"
PC: "P"
Dev: "."
PC: ":"
Dev "."
PC: "09"
Dev: "3>"

> The protocol dataReceived method will be called as ?data arrives at
> the serial port once enough data has arrived to complete a message
> this method calls stringReceived with the complete message.

I don't know what this is for though... what's the point of
stringReceived? What uses that?

> There are some protocol that might be suitable in twisted/protocols/basic.py

No, that all seems to be unrelated to what I need.

>> I'd also like to structure things so that successive calls to the
>> DeviceProtocol object queue up, something like:
>
> You can use a DeferredSemaphore for this.

That looks interesting, thanks :)

? Jason


From albert.brandl at weiermayer.com  Wed Feb  2 04:53:09 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 2 Feb 2011 10:53:09 +0100
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
	<AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
	<AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>
Message-ID: <20110202095309.GA3940@weiermayer.com>

Hi!

On Wed, Feb 02, 2011 at 04:58:30PM +0800, Jason Heeris wrote:
> > The protocol dataReceived method will be called as ?data arrives at
> > the serial port once enough data has arrived to complete a message
> > this method calls stringReceived with the complete message.
> 
> I don't know what this is for though... what's the point of
> stringReceived? What uses that?

"string" could be interpreted as "complete message". It might e.g. happen 
that a message arrives in three chunks. Each time a chunk is read, the 
dataReceived method is called. When it detects that the message is 
complete, it calls stringReceived with the content of the message.

Beware that the third chunk might also contain a part of the next 
message. This should of course _not_ be forwarded to stringReceived,
but buffered until the next message is complete.

It helped me a lot to read the source code in basic.py, which can be 
found in the directory twisted/protocols, or online here:

http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.2.0/twisted/protocols/basic.py

It has lots of documentation and is very readable IMHO.

Regards, Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From jason.heeris at gmail.com  Wed Feb  2 05:11:35 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Wed, 2 Feb 2011 18:11:35 +0800
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <20110202095309.GA3940@weiermayer.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
	<AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
	<AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>
	<20110202095309.GA3940@weiermayer.com>
Message-ID: <AANLkTincLbL0rnvtkX86iDpkcj6BKJRchVgD=taRnZrF@mail.gmail.com>

On 2 February 2011 17:53, Albert Brandl <albert.brandl at weiermayer.com> wrote:
> "string" could be interpreted as "complete message". It might e.g. happen
> that a message arrives in three chunks. Each time a chunk is read, the
> dataReceived method is called. When it detects that the message is
> complete, it calls stringReceived with the content of the message.

Okay, but I don't see how to use that to solve my particular problem.
I'm not waiting passively to receive a complete string, I have to
react to whatever's sent back, character by character, either by
reporting completion, an error or sending more data. In effect, I
guess, each character is a "complete message" anyway. I don't think
the t.i.protocols offer much for that.

? Jason


From michaelnt at gmail.com  Wed Feb  2 10:42:22 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Wed, 2 Feb 2011 15:42:22 +0000
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <AANLkTincLbL0rnvtkX86iDpkcj6BKJRchVgD=taRnZrF@mail.gmail.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
	<AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
	<AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>
	<20110202095309.GA3940@weiermayer.com>
	<AANLkTincLbL0rnvtkX86iDpkcj6BKJRchVgD=taRnZrF@mail.gmail.com>
Message-ID: <AANLkTimmC52aVQgSCtosQ=n4HCxYQRMSvCB+5Y5a6DUH@mail.gmail.com>

On 2 February 2011 10:11, Jason Heeris <jason.heeris at gmail.com> wrote:
> On 2 February 2011 17:53, Albert Brandl <albert.brandl at weiermayer.com> wrote:
>> "string" could be interpreted as "complete message". It might e.g. happen
>> that a message arrives in three chunks. Each time a chunk is read, the
>> dataReceived method is called. When it detects that the message is
>> complete, it calls stringReceived with the content of the message.
>
> Okay, but I don't see how to use that to solve my particular problem.
> I'm not waiting passively to receive a complete string, I have to
> react to whatever's sent back, character by character, either by
> reporting completion, an error or sending more data. In effect, I
> guess, each character is a "complete message" anyway. I don't think
> the t.i.protocols offer much for that.

Yep you have a pretty simple protocol there so even the basic examples
are probably more than you need.

Something like this might get you started.

class MyProtocol(Protocol):
    def send(self, byte):
          self.transport.write(byte)
          self.response = Deferred()
          return self.response

    def dataReceived(self, byte):
           self.response.callback(byte)


From glyph at twistedmatrix.com  Wed Feb  2 13:08:16 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 2 Feb 2011 10:08:16 -0800
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <AANLkTimmC52aVQgSCtosQ=n4HCxYQRMSvCB+5Y5a6DUH@mail.gmail.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
	<AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
	<AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>
	<20110202095309.GA3940@weiermayer.com>
	<AANLkTincLbL0rnvtkX86iDpkcj6BKJRchVgD=taRnZrF@mail.gmail.com>
	<AANLkTimmC52aVQgSCtosQ=n4HCxYQRMSvCB+5Y5a6DUH@mail.gmail.com>
Message-ID: <CB97EF58-6555-407C-AF7B-EAEF457415C4@twistedmatrix.com>


On Feb 2, 2011, at 7:42 AM, Michael Thompson wrote:

> On 2 February 2011 10:11, Jason Heeris <jason.heeris at gmail.com> wrote:
>> On 2 February 2011 17:53, Albert Brandl <albert.brandl at weiermayer.com> wrote:
>>> "string" could be interpreted as "complete message". It might e.g. happen
>>> that a message arrives in three chunks. Each time a chunk is read, the
>>> dataReceived method is called. When it detects that the message is
>>> complete, it calls stringReceived with the content of the message.
>> 
>> Okay, but I don't see how to use that to solve my particular problem.
>> I'm not waiting passively to receive a complete string, I have to
>> react to whatever's sent back, character by character, either by
>> reporting completion, an error or sending more data. In effect, I
>> guess, each character is a "complete message" anyway. I don't think
>> the t.i.protocols offer much for that.
> 
> Yep you have a pretty simple protocol there so even the basic examples
> are probably more than you need.
> 
> Something like this might get you started.
> 
> class MyProtocol(Protocol):
>    def send(self, byte):
>          self.transport.write(byte)
>          self.response = Deferred()
>          return self.response
> 
>    def dataReceived(self, byte):
>           self.response.callback(byte)

Not quite.  You mean:

class MyProtocol(Protocol):
  # ...
  def dataReceived(self, data):
    for octet in data:
      self.process(octet)

If the device outputs multiple bytes it might show up to Twisted as strings of arbitrary length (this depends on timings of the serial port which are basically impossible to control), so if you want to process a byte at a time, you need to specifically iterate through the string that is passed, even if it's usually one byte long.  (Some of the protocol examples showed multibyte sequences as messages.  I don't understand the framing well enough to provide a better example though, sorry.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110202/04b17774/attachment.htm 

From zooko at zooko.com  Wed Feb  2 15:32:40 2011
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Wed, 2 Feb 2011 13:32:40 -0700
Subject: [Twisted-Python] ANNOUNCING Tahoe, the Least-Authority File System,
	v1.8.2
Message-ID: <AANLkTim0hAT_T3YmXA03zaR2D9=_iGQ7CPT3kPNqXruo@mail.gmail.com>

ANNOUNCING Tahoe, the Least-Authority File System, v1.8.2

The Tahoe-LAFS team is pleased to announce the immediate
availability of version 1.8.2 of Tahoe-LAFS, an extremely
reliable distributed storage system. Get it here:

http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html

Tahoe-LAFS is the first distributed storage system to offer
"provider-independent security" ? meaning that not even the
operators of your storage servers can read or alter your data
without your consent. Here is the one-page explanation of its
unique security and fault-tolerance properties:

http://tahoe-lafs.org/source/tahoe/trunk/docs/about.html

The previous stable release of Tahoe-LAFS was v1.8.1, which was
released October 28, 2010 [1].

v1.8.2 is a stable bugfix release, adding compatibility with
the recently-released Twisted-10.2, and correcting a number of
minor issues. See the NEWS file [2] for details.


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you distribute your filesystem across
multiple servers, and even if some of the servers fail or are
taken over by an attacker, the entire filesystem continues to
work correctly, and continues to preserve your privacy and
security. You can easily share specific files and directories
with other people.

In addition to the core storage system itself, volunteers
have built other projects on top of Tahoe-LAFS and have
integrated Tahoe-LAFS with existing systems, including
Windows, JavaScript, iPhone, Android, Hadoop, Flume, Django,
Puppet, bzr, mercurial, perforce, duplicity, TiddlyWiki, and
more. See the Related Projects page on the wiki [3].

We believe that strong cryptography, Free and Open Source
Software, erasure coding, and principled engineering practices
make Tahoe-LAFS safer than RAID, removable drive, tape,
on-line backup or cloud storage.

This software is developed under test-driven development, and
there are no known bugs or security flaws which would
compromise confidentiality or data integrity under recommended
use. (For all important issues that we are currently aware of
please see the known_issues.rst file [4].)


COMPATIBILITY

This release is compatible with the version 1 series of
Tahoe-LAFS. Clients from this release can write files and
directories in the format used by clients of all versions back
to v1.0 (which was released March 25, 2008). Clients from this
release can read files and directories produced by clients of
all versions since v1.0. Servers from this release can serve
clients of all versions back to v1.0 and clients from this
release can use servers of all versions back to v1.0.

This is the thirteenth release in the version 1 series. This
series of Tahoe-LAFS will be actively supported and maintained
for the forseeable future, and future versions of Tahoe-LAFS
will retain the ability to read and write files compatible
with this series.


LICENCE

You may use this package under the GNU General Public License,
version 2 or, at your option, any later version. See the file
"COPYING.GPL" [5] for the terms of the GNU General Public
License, version 2.

You may use this package under the Transitive Grace Period
Public Licence, version 1 or, at your option, any later
version. (The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to
delay for up to twelve months after you redistribute a derived
work before releasing the source code of your derived work.)
See the file "COPYING.TGPPL.html" [6] for the terms of the
Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either
licence, at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris,
*BSD, and probably most other systems. Start with
"docs/quickstart.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8]. Patches are gratefully
accepted -- the RoadMap page [9] shows the next improvements
that we plan to make and CREDITS [10] lists the names of people
who've contributed to the project. The Dev page [11] contains
resources for hackers.


SPONSORSHIP

Tahoe-LAFS was originally developed by Allmydata, Inc., a
provider of commercial backup services. After discontinuing
funding of Tahoe-LAFS R&D in early 2009, they continued
to provide servers, bandwidth, small personal gifts as tokens
of appreciation, and bug reports.

Google, Inc. sponsored Tahoe-LAFS development as part of the
Google Summer of Code 2010. They awarded four sponsorships to
students from around the world to hack on Tahoe-LAFS that
summer.

Thank you to Allmydata and Google for their generous and
public-spirited support.


HACK TAHOE-LAFS!

If you can find a security flaw in Tahoe-LAFS which is serious
enough that we feel compelled to warn our users and issue a fix,
then we will award you with a customized t-shirts with your
exploit printed on it and add you to the "Hack Tahoe-LAFS Hall
Of Fame" [12].


ACKNOWLEDGEMENTS

This is the seventh release of Tahoe-LAFS to be created solely
as a labor of love by volunteers. Thank you very much to the
team of "hackers in the public interest" who make Tahoe-LAFS
possible.

Brian Warner
on behalf of the Tahoe-LAFS team

January 30, 2011
San Francisco, California, USA


[1] http://tahoe-lafs.org/trac/tahoe/browser/relnotes.txt?rev=4865
[2] http://tahoe-lafs.org/trac/tahoe/browser/NEWS?rev=5000
[3] http://tahoe-lafs.org/trac/tahoe/wiki/RelatedProjects
[4] http://tahoe-lafs.org/trac/tahoe/browser/docs/known_issues.rst
[5] http://tahoe-lafs.org/trac/tahoe/browser/COPYING.GPL
[6] http://tahoe-lafs.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html
[8] http://tahoe-lafs.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://tahoe-lafs.org/trac/tahoe/roadmap
[10] http://tahoe-lafs.org/trac/tahoe/browser/CREDITS?rev=5000
[11] http://tahoe-lafs.org/trac/tahoe/wiki/Dev
[12] http://tahoe-lafs.org/hacktahoelafs/


From ltaylor.volks at gmail.com  Wed Feb  2 15:55:36 2011
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Wed, 2 Feb 2011 13:55:36 -0700
Subject: [Twisted-Python] design of twisted application
In-Reply-To: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
References: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
Message-ID: <B43C78A4-0F2C-4DA4-8456-844D3058D1D3@gmail.com>


On Feb 2, 2011, at 12:15 AM, Kurt Spindler wrote:

>  Second question is that, in that other bunch of code, I need to be  
> able to write things to the socket. How can I access the instance of  
> my protocol subclass that is used by the factory, so I can make  
> protocolInstance.transport.write type calls? Or am I thinking about  
> this is a completely wrong way?
>


This may be my favorite FAQ answer:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

You're not specifically asking that question, but the salient point is:

"These are just regular Python objects; you can put them into lists,  
dictionaries, or whatever other data structure is appropriate to your  
application"

You can access connected protocol instances using something like the  
pattern in that FAQ. Just keep a reference to the factory instance  
somewhere in your other code and access whatever data structure you  
choose to store the protocol references. MultiEchoFactory has a list  
of connected protocols ('echoers'). You could just keep one connected  
instance. Or a dictionary keyed by ip address, session id you  
generate, etc.

One other note... how you end up integrating with whatever GUI you are  
using may impact your use of Twisted APIs (i.e. transport.write).
See
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#WhydoesittakealongtimefordataIsendwithtransport.writetoarriveattheothersideoftheconnection
(gotta love that anchor!... http://bit.ly/gPvW7d)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110202/560cafeb/attachment.htm 

From jrennie at gmail.com  Wed Feb  2 16:36:30 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Wed, 2 Feb 2011 16:36:30 -0500
Subject: [Twisted-Python] design of twisted application
In-Reply-To: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
References: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
Message-ID: <AANLkTikqAxxq0=QZ2SPu11mpUjr1GQCcV8yDyfVgySUm@mail.gmail.com>

On Wed, Feb 2, 2011 at 2:15 AM, Kurt Spindler <kespindler at gmail.com> wrote:

> I am trying to design a twisted application, (I'm pretty new to twisted and
> networking in general) and I feel like I'm not approaching it quite the
> right way and would appreciate your feedback. First part, is that I am
> trying to couple twisted with an existing graphics-type application, that
> already has it's own main loop, etc. Meaning, I need to be running other
> python code while I have the reactor running. Is the solution threading?
>

I would guess so.  Otherwise, you may have to significantly rework the
graphics lib to fit into twisted.  I was involved in a project where I
joined cherrypy and twisted into a single process.  I ran each in a separate
thread.  Note that you will need to become very familiar with
callFromThread()---any twisted call you want to make from the graphics side
will need to use this in case the reactor is blocking (e.g. stuck in a
select() call).  Also, if the graphics lib either manipulates or relies on
certain signal behavior, you may need to install your own signal handlers
which do all the processing that both the graphics lib and twisted expect.
 This is especially important if you start any processes from twisted
(ProcessProtocol).

Cheers,

Jason

-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110202/156f744c/attachment.htm 

From powo at powo.priv.at  Wed Feb  2 20:01:57 2011
From: powo at powo.priv.at (Wolfgang Powisch)
Date: Thu, 03 Feb 2011 02:01:57 +0100
Subject: [Twisted-Python] ClientFactory: implementing Request/Response with
	a persistent connection
Message-ID: <4D49FE85.9050508@powo.priv.at>

Hello,

I need to talk to a Line-based TCP service from a Twisted Application.
The remote server will accept requests and send a response.

I do NOT want to open a NEW TCP-Connection for each request.

Are there any examples how to send concurrent requests over a single
conenction ? .. so that my module takes care of sending the next request
when the previous response has been received


Here a simple (pseudo-)example of how I would like to use my client-module:

-------------------------
xyclient = yield XyClient('127.0.0.1',1234).connect()
d1 = xyclient.send_request('GET 1')  # returns a deferred
d2 = xyclient.send_request('GET 2')  # returns a deferred
d1.addCallback(print)
d2.addCallback(print)

"Response 1"
"Response 2"
-------------------------


Later I need to enhance this to manage a Pool of connections and dispatch
requests across this pool. Does there exist something "out of the box"
for ConnectionPools ?


regards, powo






From albert.brandl at weiermayer.com  Thu Feb  3 05:18:06 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Thu, 3 Feb 2011 11:18:06 +0100
Subject: [Twisted-Python] Using SerialPort with t.a.s.Application
In-Reply-To: <20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
References: <20110128082932.GB2151@weiermayer.com>
	<1296221152.1762.3.camel@blake>
	<20110131155054.GA26811@weiermayer.com>
	<20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
Message-ID: <20110203101806.GA8247@weiermayer.com>

Hi!

On Mon, Jan 31, 2011 at 10:18:00PM -0000, exarkun at twistedmatrix.com wrote:
> 
> I think that now the way it would make sense to add this is to add a 
> serialport endpoint.  This would be usable with 
> twisted.internet.endpoints.serverFromEndpoint (or clientFromEndpoint, I 
> can never remember which one a serial port is more like).

Cool. I think you talked about serverFromString, but this was enough to 
get me started. I've added the necessary functions and classes so that I 
can create a server listening to the serial line with something like:

    serial_server = strports.service("SERIAL:/dev/ttyS0:baudrate=38400")

But injecting the necessary functions and classes into t.i.endpoints is 
rather ugly. Would it be ok to create a ticket to properly enhance the 
module with an endpoint encapsulating SerialPort?

> If you can accomplish your goals without making a new kind of IService 
> implementation, then great!

Right now, this is sufficient for my purposes.

Thanks and best regards,

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From exarkun at twistedmatrix.com  Thu Feb  3 14:00:39 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 03 Feb 2011 19:00:39 -0000
Subject: [Twisted-Python] Using SerialPort with t.a.s.Application
In-Reply-To: <20110203101806.GA8247@weiermayer.com>
References: <20110128082932.GB2151@weiermayer.com>
	<1296221152.1762.3.camel@blake>
	<20110131155054.GA26811@weiermayer.com>
	<20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
	<20110203101806.GA8247@weiermayer.com>
Message-ID: <20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>

On 10:18 am, albert.brandl at weiermayer.com wrote:
>Hi!
>
>On Mon, Jan 31, 2011 at 10:18:00PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>
>>I think that now the way it would make sense to add this is to add a
>>serialport endpoint.  This would be usable with
>>twisted.internet.endpoints.serverFromEndpoint (or clientFromEndpoint, 
>>I
>>can never remember which one a serial port is more like).
>
>Cool. I think you talked about serverFromString, but this was enough to
>get me started. I've added the necessary functions and classes so that 
>I
>can create a server listening to the serial line with something like:
>
>    serial_server = strports.service("SERIAL:/dev/ttyS0:baudrate=38400")
>
>But injecting the necessary functions and classes into t.i.endpoints is
>rather ugly. Would it be ok to create a ticket to properly enhance the
>module with an endpoint encapsulating SerialPort?

That probably makes sense, but first, does the endpoints string 
description plugin API help?  You can provide 
IStreamServerEndpointStringParser (defined in 
twisted.internet.interfaces) plugins to extend the parser for those 
strings.  This might clean things up your serial port endpoint is 
actually included in a release of Twisted.

There are some tickets filed already for adding some other kinds of 
endpoints (eg an IPv6 endpoint - 
http://twistedmatrix.com/trac/ticket/4470), but it doesn't look like 
there's one for serial port, so yea - it would be great if you could 
file that one.

Jean-Paul


From johann.borck at densedata.com  Thu Feb  3 17:26:13 2011
From: johann.borck at densedata.com (Johann Borck)
Date: Thu, 03 Feb 2011 23:26:13 +0100
Subject: [Twisted-Python] ClientFactory: implementing Request/Response
 with	a persistent connection
In-Reply-To: <4D49FE85.9050508@powo.priv.at>
References: <4D49FE85.9050508@powo.priv.at>
Message-ID: <4D4B2B85.6080701@densedata.com>

On 02/03/2011 02:01 AM, Wolfgang Powisch wrote:
> Hello,
>
> I need to talk to a Line-based TCP service from a Twisted Application.
> The remote server will accept requests and send a response.
>
> I do NOT want to open a NEW TCP-Connection for each request.

Hi,
you only have to avoid closing the connection after your first 
request/response pair, which you would otherwise do by calling 
self.transport.loseConnection() in your protocol. Twisted doesn't make 
that decision for you. Of course it also depends on the server/protocol 
supporting it.

Then there's a project called txconnpool at 
http://pypi.python.org/pypi/txconnpool, maybe it does what you want.

regards,
Johann



From albert.brandl at weiermayer.com  Fri Feb  4 03:20:28 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Fri, 4 Feb 2011 09:20:28 +0100
Subject: [Twisted-Python] Using SerialPort with t.a.s.Application
In-Reply-To: <20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>
References: <20110128082932.GB2151@weiermayer.com>
	<1296221152.1762.3.camel@blake>
	<20110131155054.GA26811@weiermayer.com>
	<20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
	<20110203101806.GA8247@weiermayer.com>
	<20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>
Message-ID: <20110204082028.GA2531@weiermayer.com>

On Thu, Feb 03, 2011 at 07:00:39PM -0000, exarkun at twistedmatrix.com wrote:

> That probably makes sense, but first, does the endpoints string 
> description plugin API help?  You can provide 
> IStreamServerEndpointStringParser (defined in 
> twisted.internet.interfaces) plugins to extend the parser for those 
> strings.

Actually, that's the way I implemented this. But I didn't find any
hooks for extending the parser, so I manually inserted new items
into endpoints._endpointServerFactories and endpoints._serverParsers
and added the StringParser to endpoints. 

Is there a better way? Could you provide me with a link to any 
documentation? I've already read the tutorial about creating plugins.

> There are some tickets filed already for adding some other kinds of 
> endpoints (eg an IPv6 endpoint - 
> http://twistedmatrix.com/trac/ticket/4470), but it doesn't look like 
> there's one for serial port, so yea - it would be great if you could 
> file that one.

Fine. Any suggestions for the name of the new endpoint?

Best regards,

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From michaelnt at gmail.com  Fri Feb  4 03:31:48 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Fri, 4 Feb 2011 08:31:48 +0000
Subject: [Twisted-Python] SerialPort testing on the Twisted build slaves
Message-ID: <AANLkTinqAUn-cX32tdj1Xrxf+wCd=j4y3wfZc0+DyZNs@mail.gmail.com>

Hi,
   Ticket  http://twistedmatrix.com/trac/ticket/3690 is adding some
serial port testing. The patch adds code to discover serial ports on
Windows and Posix and the test uses the first serial port that is
discovered.

Will this approach work for the build slaves, or is it better to use
an environment variable that can be set for each build slave?

Do any of the build slaves have serial ports or are they all VMs?

Michael


From albert.brandl at weiermayer.com  Fri Feb  4 06:19:23 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Fri, 4 Feb 2011 12:19:23 +0100
Subject: [Twisted-Python] Using SerialPort with t.a.s.Application
In-Reply-To: <20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>
References: <20110128082932.GB2151@weiermayer.com>
	<1296221152.1762.3.camel@blake>
	<20110131155054.GA26811@weiermayer.com>
	<20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
	<20110203101806.GA8247@weiermayer.com>
	<20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>
Message-ID: <20110204111923.GA10621@weiermayer.com>

On Thu, Feb 03, 2011 at 07:00:39PM -0000, exarkun at twistedmatrix.com wrote:
> There are some tickets filed already for adding some other kinds of 
> endpoints (eg an IPv6 endpoint - 
> http://twistedmatrix.com/trac/ticket/4470), but it doesn't look like 
> there's one for serial port, so yea - it would be great if you could 
> file that one.

Here's the ticket: http://twistedmatrix.com/trac/ticket/4847

I don't know either if `serverFromString` or `clientFromString` is 
"better" for a serial port. Not sure if this can even be determined 
without knowing more about the purpose of the communication. Any 
opinions?

I've added a corresponding remark to the ticket.

Regards,

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From exarkun at twistedmatrix.com  Fri Feb  4 13:32:41 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 04 Feb 2011 18:32:41 -0000
Subject: [Twisted-Python] Using SerialPort with t.a.s.Application
In-Reply-To: <20110204082028.GA2531@weiermayer.com>
References: <20110128082932.GB2151@weiermayer.com>
	<1296221152.1762.3.camel@blake>
	<20110131155054.GA26811@weiermayer.com>
	<20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
	<20110203101806.GA8247@weiermayer.com>
	<20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>
	<20110204082028.GA2531@weiermayer.com>
Message-ID: <20110204183241.1699.1760661069.divmod.xquotient.588@localhost.localdomain>

On 08:20 am, albert.brandl at weiermayer.com wrote:
>On Thu, Feb 03, 2011 at 07:00:39PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>That probably makes sense, but first, does the endpoints string
>>description plugin API help?  You can provide
>>IStreamServerEndpointStringParser (defined in
>>twisted.internet.interfaces) plugins to extend the parser for those
>>strings.
>
>Actually, that's the way I implemented this. But I didn't find any
>hooks for extending the parser, so I manually inserted new items
>into endpoints._endpointServerFactories and endpoints._serverParsers
>and added the StringParser to endpoints.
>
>Is there a better way? Could you provide me with a link to any
>documentation? I've already read the tutorial about creating plugins.

IStreamServerEndpointStringParser is the hook.  I don't know of any 
documentation on its use, though.  Perhaps 
twisted/internet/test/fakeendpoint.py will give you an idea of what to 
do, though (then, feel like writing the missing docs?).

Jean-Paul


From exarkun at twistedmatrix.com  Fri Feb  4 13:36:32 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 04 Feb 2011 18:36:32 -0000
Subject: [Twisted-Python] SerialPort testing on the Twisted build slaves
In-Reply-To: <AANLkTinqAUn-cX32tdj1Xrxf+wCd=j4y3wfZc0+DyZNs@mail.gmail.com>
References: <AANLkTinqAUn-cX32tdj1Xrxf+wCd=j4y3wfZc0+DyZNs@mail.gmail.com>
Message-ID: <20110204183632.1699.696030553.divmod.xquotient.595@localhost.localdomain>

On 08:31 am, michaelnt at gmail.com wrote:
>Hi,
>   Ticket  http://twistedmatrix.com/trac/ticket/3690 is adding some
>serial port testing. The patch adds code to discover serial ports on
>Windows and Posix and the test uses the first serial port that is
>discovered.

There's also some more stuff about testing serialports on 
<http://tm.tl/2462>.
>Will this approach work for the build slaves, or is it better to use
>an environment variable that can be set for each build slave?
>
>Do any of the build slaves have serial ports or are they all VMs?

Last time I checked things were not in good shape.  I don't think we can 
count on serial ports on any of the slaves right now.

VMs might actually be *easier* (at least if we trust that the VM serial 
port driver behaves roughly like a real serial port driver).  Actually 
convincing slave operators to plug something into a serial port is 
probably out of reach.

Jean-Paul


From powo at powo.priv.at  Sat Feb  5 13:38:01 2011
From: powo at powo.priv.at (Wolfgang Powisch)
Date: Sat, 05 Feb 2011 19:38:01 +0100
Subject: [Twisted-Python] ClientFactory: implementing Request/Response
 with	a persistent connection
In-Reply-To: <4D4B2B85.6080701@densedata.com>
References: <4D49FE85.9050508@powo.priv.at> <4D4B2B85.6080701@densedata.com>
Message-ID: <4D4D9909.4070309@powo.priv.at>

Am 2011-02-03 23:26, schrieb Johann Borck:
> Then there's a project called txconnpool at
> http://pypi.python.org/pypi/txconnpool, maybe it does what you want.

thx ... that's great.

except that it costs me some time to realize that it's missing error-handling
and a errback'ing Protocol causes it to hang ;-)

regards, powo



From exarkun at twistedmatrix.com  Sun Feb  6 00:05:17 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Feb 2011 05:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1296968717.69.59925220@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110206/3ea1139a/attachment.htm 

From tom at recursivedream.com  Sun Feb  6 13:02:56 2011
From: tom at recursivedream.com (Tom Davis)
Date: Sun, 6 Feb 2011 13:02:56 -0500
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <04986C32-9E18-43F5-8992-BBD970CC9E83@twistedmatrix.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
	<AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
	<04986C32-9E18-43F5-8992-BBD970CC9E83@twistedmatrix.com>
Message-ID: <AANLkTikJWSNpJqUQ5SXDVZ5mB5-7O6fH0v3zg9-huj0J@mail.gmail.com>

On Tue, Feb 1, 2011 at 5:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Feb 1, 2011, at 10:53 AM, Tom Davis wrote:
>
> On Tue, Feb 1, 2011 at 12:58 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:
>
>>
>> On Jan 31, 2011, at 11:41 AM, Tom Davis wrote:
>>
>> Thoughts?
>>
>>
>> Priority #1 for most people who are enthusiastic about documentation is to
>> come in and write a ton of additional documentation.  But this is a lot like
>> trying to fix a large, broken, untested system by writing a pile of new,
>> untested code, because "this time we'll get the design right".  What were
>> the problems with the way the previous documentation got written?  How did
>> we end up with this mess, and what is going to be done differently this
>> time?  Most importantly, *what is the metric by which we will judge this
>> new documentation to be better?*
>>
>
> I'm still really interested in concise answer to that last question there.
>  What are the priorities for what you're trying to improve?  What you've
> listed here is "the steps you're going to take in order to improve it" but I
> have yet to see a lucid description of the problem in detail.
>

I think the problem is largely one of organization (as it relates to
"accessibility", e.g. how / under what context do I get linked to such and
such thing?) and outdated documentation. I think the individual problems are
all very well-known and while there is not some overarching problem with all
the documentation that requires starting from scratch, reorganizing and
restructuring what's there may make it look like I'm trying to do that.


>
> Those tutorials aren't new at all; they were taken (often verbatim) from
> the "using twisted.web" document. Writing a ton of new documentation really
> isn't my goal at all. My goals are threefold:
>
>    1. Reorganize existing documentation in a way that makes it more
>    accessible.
>
> Accessible to whom?  How will reorganizing it make it more accessible?  One
> way to interpret this statement is that your goal is to remove all diagrams,
> because the documentation is currently not accessible to the blind.  I'm
> pretty sure *that's* not what you mean, but it's a good example of how
> ambiguous this statement is :).  (Plus, the couple of blind developers I've
> talked to about Twisted didn't seem to have a problem with the docs...)
>
>
>    1. Edit existing documentation to conform to a task
>    (howto/tutorial/etc.) vs. expanded learning model. (the whole instant
>    gratification thing and all that)
>
> OK, I'm on board with that.  Except that in order to understand the
> tutorial documentation you need a good backing of reference docs, so it's
> not like you can just choose one over the other.  And we have lots of
> tutorial docs (c.f. the infamous finger tutorial) which are in the tutorial
> / task-oriented paradigm but don't teach much that's directly useful.
>

Finger is a really bad example of what a howto should be; it doesn't teach
you how to achieve some specific, common goal quickly and easily. The names
howto <http://twistedmatrix.com/documents/current/names/howto/names.html>is
a good example of a howto that tells me exactly how to do something in as
few steps as humanly possible. It could use a reference to wherever all the
functions (SOA, A, NS, etc.) are coming from and links to some follow-up
documentation of the *names* project in general, but I digress.

>
>    1. Gradually update / replace code listings with "current best
>    practices" examples that are tested.
>
> No arguing with that at all, that sounds great.
>
> I know you want an actual *layout* for the reorganization.
>
>
> Not really.
>
> What I want is a clear understanding of what you intend to change.  I
> usually get that by reading a diff: it's easy to read a diff and see what
> changed in the old versus the new version of something.  I can tell if it's
> an improvement without having to digest the entire content.
>
> But the structure of <http://docs.recursivedream.com/twisted/> is a
> sprawling mess of placeholders and half-finished ideas.  It's different from
> the existing documentation in lots of ways; it has a completely different
> stylesheet (which I assume is some standard Sphinx thing we will get rid of
> with the consistent theming work in Kevin's sphinx transition).  I don't
> know what I'm looking at or how to appreciate it.
>
> This is why I started off by complaining about the separate git repository.
>  If you're going to work in a separate repository and a separate format and
> not produce diffs that I can skim, then it's *very* hard to comment
> intelligently on your strategy, and you need to take an immense amount of
> care to call out the sections you consider complete, what exactly you want
> feedback on, and areas where you have or haven't added new content (so you
> can't be blamed for issues in old content that you're not trying to update).
>
> Note that diffs against Kevin's sphinx output would basically satisfy this
> same requirement, even if that output isn't really complete and those diffs
> would need to be re-created when the final conversion occurred.  At least
> there would be a set of deltas to look at rather than a whole new structure
> which is mostly scaffolding.
>

I'm just going to start making diffs against Kevin's lore2sphinx output as
suggested. He's given me instructions on how to generate the docs and I'll
attempt to create specific patches and tickets against that output to the
extent possible. My hope is that this method will allow the project to get
somewhere that doesn't result in me ending up with a bunch of third-party
Twisted documentation because nobody could ever really agree on why it was
an improvement in the first place.

And on that note, perhaps it won't be an objective improvement. I'm open to
the possibility that the documentation is sufficient for most people and I'm
just an exception to that?or that my "improvements" are only really helpful
to me. But I'm certainly going to keep looking for ways to suitably prove
the general case, for everybody's benefit; I have no desire to end up with
something that only benefits me.


>
> I want to give that to you, but it requires going through all the
> documentation and making sure it fits in the reorganized layout or making
> sections for it when it doesn't which is far more time consuming than
> providing a layout for the "task" piece, as I did here. I'm basically just
> saying "How-tos should have a standard layout with these sections; here's a
> stub of one such how-to as incompletely adapted from the current
> documentation".
>
>
> Even going back and reading your original message to this thread now, I
> can't tell that this is what you were asking for review of.  Even now I'm
> not entirely sure what you mean.  Do you mean that you want feedback on the
> sections on <
> http://docs.recursivedream.com/twisted/projects/web/tasks/serve/index.html>?
>  Or the way that <
> http://docs.recursivedream.com/twisted/projects/web/tasks/serve/serve.html>
> is split out into separate tasks?
>
> If you are interested in getting a review of the template or the outline,
> please write up the template itself with a description of what should go
> into each section.  Then you could link from the template to
> web/tasks/serve/index and say "and here's an example of some existing
> documentation applied to this outline".  But since I have no idea what the
> generic purpose of each section is, I can't comment on whether the sections
> are a bad idea or the classifications of certain sections of existing docs
> is a bad idea or if it's just too incomplete for me to comment on.
>
> Plus, such a template would serve as a critical tool for new documentation
> authors (of which I hope we get a few), allowing for a consistent style to
> be followed by multiple authors writing task-oriented documentation for
> different parts of Twisted.  The lack of such meta-documentation is the root
> of many issues with the current docs: when we're writing code for Twisted,
> we have a very clear idea of what the coding standards are, but when we
> approach documentation, the individual author just writes whatever random
> style happens to suit them on that day.  There's no guidance.
>
> I think most of this is a huge misunderstanding as to my goals both in
> general and for the particular section critiqued here. Perhaps I should have
> completed it before putting it up for review. I just felt it was better to
> get *something* out here just in case everybody hated the entire direction
> rather than spend a ton of time slicing the current web server docs the way
> I personally feel they should fit together in order to properly serve the
> audience.
>
>
> Soliciting feedback is good.  I still think that these discussions have
> been very productive.  The issue I have isn't that it's unfinished, it's
> that there are no guard-rails on the unfinished sections, so it's easy to
> careen off into the stuff that I'm not really supposed to be paying
> attention to. A substantially larger document with that same problem would
> have been a disaster to try to review, so early feedback is better;
> hopefully as you produce something bigger you'll also alleviate the
> difficulty of review somehow.
>
> If all that comes out of your efforts is a new, different pile of
>> documentation, that's not *entirely* without value; different audiences
>> understand things in different ways, so someone might pick it up and
>> understand Twisted as a result.  But I very much doubt that's going to move
>> us from a general impression of "bad docs" to a general impression of "good
>> docs".
>>
>> More specific criticism:
>>
>>
>>    - "This is a Twisted Task"?  I feel like I'm about to start reading
>>    about a Task object or something related to the twisted.internet.task
>>    module.  Or maybe that this is an exercise.  A document explaining how to do
>>    a task is rarely called a "task" itself.  Mostly they're called "How-To"s,
>>    actually.  I understand you're trying to get away from old terminology but
>>    this seems awkward and forced.
>>
>> I just started using this terminology because it seemed common within our
> conversations. How-to/tutorial would likely be less confusing.
>
>
> OK.  For what it's worth I share your desire for a new / better term but I
> can't think of one.
>
>
>>    - "You should be familiar with Resources"?  That is really broad and
>>    wide-ranging and should be a hyperlink to another tutorial.
>>
>> It was just a placeholder; it should link to a section in the web server
> overview docs that talks about Resources. There are other things on that
> list, too (Site object, yada yada). Although, like I said, it's merely
> incomplete.
>
>
> I suppose my comments above about meta-documentation and a deeper
> explanation of the template are my response to this; if it were clearer what
> the structure were really supposed to be representing it would be easier to
> ignore minor flaws like this or recommend improvements
>
>
>>    -  Plus, I think that most people interested in these tasks will want
>>    to learn about how to get simple tasks done first, before moving on to a
>>    more abstract / theoretical understanding of the model behind them.
>>
>> I completely agree. That's my whole point with starting off using
> *twistd*, despite its limitations or whatever.
>
>
> Obviously from my other message I'm a fan of this approach.
>
>
>>    - More importantly: this is a very wishy-washy definition of the
>>    audience.  Is it for system administrators?  Software developers?  DevOps
>>    people?  Graphic designers?  Power users?  What level of experience do they
>>    need with Python?  With networking?  With HTTP?
>>
>> The latter should all be under "Prerequisites" whereas "audience" should
> probably be a new howto standard section that's currently overlooked
> (perhaps above "Prerequisites"?)
>
>
> It seems to me that "audience" is the section and "prerequisites" should be
> a sub-section of that.  After all prerequisites are really attributes of the
> audience, not the document :).
>
>
>>    - "Other configuration options are available"?  This should be a list
>>    of links to other documents that might help with some of those options.
>>     Documentation which says "and then you could do something else" without
>>    telling you what else or why is needlessly confusing.
>>
>> I agree. There are lots and lots of lines to connect even from such a
> simplistic tutorial. I wanted to get feedback on the *layout* rather than
> the final web project documentation which should certainly include links to
> twistd option docs and probably a half dozen other things I haven't linked
> to yet.
>
>
> (Again, go write up the layout explicitly first, and then I can provide
> more useful feedback!)
>
>
>>    - The WSGI example totally glosses over how you get your code onto
>>    sys.path (PYTHONPATH etc), says that 'helloworld' is a module/package (which
>>    is it?  why are both options given?).  This is an *extremely* confusing
>>    area for newbies, which is why it actually makes a bit of sense to me that
>>    the web-in-60-seconds WSGI tutorial starts with a callable defined in the
>>    .tac.  Not a good practice in the long term, but it allows the user to
>>    immediately get some feedback and have some notion of how things are wired
>>    together without having to debug Python's import system first.
>>
>> Fair enough. This point was also not covered in the official docs, where I
> got the instructions from. Regardless, I have no intention of including
> how-tos that gloss over *anything; *either they work "out of the box" or
> are edited until they do.
>
>
> I guess this is another nitpick that wasn't really about the layout.
>  Sounds like we feel the same way, at any rate.
>
>
>>    - .rpy scripts are for deployment, not debugging; I was a little
>>    concerned seeing that bullet point on the outline.  (See <
>>    http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/rpy-scripts.html
>>    >.)
>>
>> Huh? The docs you link to claim:
>
> So, while rpy scripts may be useful for testing out ideas, they're not
>> recommend for much more than that.
>
>
> Am I missing something here?
>
>
> Well, "testing out" and "debugging" aren't quite the same thing.  And I'd
> probably recommend RPYs for more than that :).  I was linking to that
> document just to provide an expanded explanation of the functionality;
> personally I find it obvious why RPYs are super useful from that example, so
> I mostly just ignore that comment.  (Perhaps this doc needs to be updated,
> but let's please not hijack this already-sprawling thread for discussion of
> the merits and flaws of RPYs...)
>
> My hope is that this reply clears up some confusion. However, feel free to
> let me know if you think I simply don't have the mindset necessary to
> "improve" the documentation in a way that is desirable. I had a hard time
> learning Twisted in the beginning and to this day some really helpful
> abstractions and just available projects / solved problems elude me.
>
>
> This sounds like I'm discouraging you.  If that's the case, feel free to
> just tell me to sit this one out and wait until you're further along in the
> project.  I am trying to provide feedback to be useful to your efforts, but
> if you don't find it useful, then you can carry on with feedback from people
> who really need the docs.
>
> I think the reason for this is that I think a lot like Jacob <
> http://jacobian.org/writing/great-documentation/> when it comes to
> documentation and that's the sort of stuff I need to have in order to truly
> grok something. Maybe that's what we all want here. Maybe it isn't, though.
> And I'd really love to figure out which it is before I drive forward on
> this. If we really are on the same page (and I'd certainly like to be),
> we've got some hellish communication issues ;)
>
>
> I'm a big fan of Jacob's in general and that essay series in particular as
> far as it comes to documentation, so I don't think that's the issue.
>  Obviously his methods have yielded a result that is well-regarded in the
> Django community.  And I think we are on the same page about many things,
> and we don't *need* to agree about everything.
>
> I'm still quite excited to have you working on our documentation.
>
> (Except for his comment about API documentation generators; I think that
> epydoc/pydoc is hugely useful.  But I do agree that one shouldn't just run
> an auto-generator to spit out a rehash of the source code; one needs to
> write a ton of documentation in an appropriate format to be consumed by such
> a tool in order for it to be useful.)
>
> Thanks and good luck,
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110206/37d9e313/attachment-0001.htm 

From exarkun at twistedmatrix.com  Sun Feb  6 17:12:33 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Feb 2011 22:12:33 -0000
Subject: [Twisted-Python] Change to ticket workflow
Message-ID: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>

Hi all,

Last weekend I changed the default owner for all components in the issue 
tracker to be nobody.  I also installed the "DefaultCC" plugin which 
lets us configure a list of users to be added to the cc list of tickets 
on a per-component basis.

The motivation for this change is basically the fact that when people 
see a ticket with an owner, they think that owner is either working on 
the ticket or will be upset if someone else starts working on it.  This 
has really never been the case with Twisted's development process.

Beyond this change, I think it may also be a good idea to remove owners 
from most old tickets as well.  This will probably happen sometime in 
the coming week, so don't be surprised when you look at your ticket list 
and find it empty.

After this, if you actually want to work on a ticket, there's no reason 
not to assign it to yourself.  The goal here is just to eliminate 
accidental/careless ownership.

Jean-Paul


From tom at recursivedream.com  Sun Feb  6 17:30:59 2011
From: tom at recursivedream.com (Tom Davis)
Date: Sun, 6 Feb 2011 17:30:59 -0500
Subject: [Twisted-Python] Change to ticket workflow
In-Reply-To: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>
References: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>
Message-ID: <AANLkTi=Nu=XC5TR6OaHdq=uwwAzov6Bbsne7iAXdY+an@mail.gmail.com>

On Sun, Feb 6, 2011 at 5:12 PM, <exarkun at twistedmatrix.com> wrote:

> Hi all,
>
> Last weekend I changed the default owner for all components in the issue
> tracker to be nobody.  I also installed the "DefaultCC" plugin which
> lets us configure a list of users to be added to the cc list of tickets
> on a per-component basis.
>
> The motivation for this change is basically the fact that when people
> see a ticket with an owner, they think that owner is either working on
> the ticket or will be upset if someone else starts working on it.  This
> has really never been the case with Twisted's development process.
>
> Beyond this change, I think it may also be a good idea to remove owners
> from most old tickets as well.  This will probably happen sometime in
> the coming week, so don't be surprised when you look at your ticket list
> and find it empty.
>
>
I've been meaning to recommend this, actually. I think "ownership" conveys
something important?or it should. My actual recommendation was going to be
to mass-remove ownership from tickets that haven't been updated by their
owners "recently" and then to institute some kind of reminder email that
gets sent out with a list of tickets you own that haven't been updated in
the past X weeks. This would at least nudge people to close a ticket or
remove their ownership so the ticket will be back "on the radar," so to
speak.

I've probably got a ticket or two that could be considered stale already and
I don't even have many to keep track of. It's just easy to forget week to
week what exactly I've made a promise to work on; I imagine it's the case
for others as well. Many tickets haven't been updated in years and something
tells me their owners won't be strolling back any time soon. Many of those
probably aren't relevant anymore, period. Perhaps being on the "nobody" list
would give them sufficient visibility to be properly triaged.

Just a thought!


> After this, if you actually want to work on a ticket, there's no reason
> not to assign it to yourself.  The goal here is just to eliminate
> accidental/careless ownership.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110206/1dbe81e8/attachment.htm 

From glyph at twistedmatrix.com  Sun Feb  6 19:26:34 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 6 Feb 2011 19:26:34 -0500
Subject: [Twisted-Python] Change to ticket workflow
In-Reply-To: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>
References: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>
Message-ID: <430CB111-62BF-4A54-92CE-20022914AEFE@twistedmatrix.com>


On Feb 6, 2011, at 5:12 PM, exarkun at twistedmatrix.com wrote:

> After this, if you actually want to work on a ticket, there's no reason 
> not to assign it to yourself.  The goal here is just to eliminate 
> accidental/careless ownership.

+1.

I'm not sure we should do this on a regular basis, or even ever again, but I have about 1000 tickets assigned to me that I'm never going to do anything about. The long history of me being the default owner for a component means that my ticket list is insanely long and it's very difficult to see the stuff that I'm actually contemplating working on.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110206/13dfa267/attachment.htm 

From tenth at twistedmatrix.com  Sun Feb  6 21:05:22 2011
From: tenth at twistedmatrix.com (Tenth)
Date: Sun, 6 Feb 2011 21:05:22 -0500
Subject: [Twisted-Python]  Boston Mini-Sprint: February Edition
Message-ID: <AANLkTint8CvMbvbYJnmciiPvvpTgwm2kMh6+sPhe_W6N@mail.gmail.com>

We'll be holding another Boston-area Twisted Mini-Sprint on Sunday, February
13th at my place in Somerville, MA... I've sent out invitations to the
attendees from last time, plus a few other people who've expressed interest,
but if you weren't invited yet, and want to be, let me know!

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110206/3aa724f1/attachment.htm 

From tom at recursivedream.com  Sun Feb  6 21:39:46 2011
From: tom at recursivedream.com (Tom Davis)
Date: Sun, 6 Feb 2011 21:39:46 -0500
Subject: [Twisted-Python] Boston Mini-Sprint: February Edition
In-Reply-To: <AANLkTint8CvMbvbYJnmciiPvvpTgwm2kMh6+sPhe_W6N@mail.gmail.com>
References: <AANLkTint8CvMbvbYJnmciiPvvpTgwm2kMh6+sPhe_W6N@mail.gmail.com>
Message-ID: <43A22834-DCE6-434E-BACD-780EE5350C64@recursivedream.com>

On Feb 6, 2011, at 9:05 PM, Tenth <tenth at twistedmatrix.com> wrote:

> We'll be holding another Boston-area Twisted Mini-Sprint on Sunday, February 13th at my place in Somerville, MA... I've sent out invitations to the attendees from last time, plus a few other people who've expressed interest, but if you weren't invited yet, and want to be, let me know!

I am interested in attending, good sir!

> 
> Thanks,
> 
> - Dave
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Sun Feb  6 21:53:26 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 6 Feb 2011 21:53:26 -0500
Subject: [Twisted-Python] Boston Mini-Sprint: February Edition
In-Reply-To: <43A22834-DCE6-434E-BACD-780EE5350C64@recursivedream.com>
References: <AANLkTint8CvMbvbYJnmciiPvvpTgwm2kMh6+sPhe_W6N@mail.gmail.com>
	<43A22834-DCE6-434E-BACD-780EE5350C64@recursivedream.com>
Message-ID: <7EB44A26-25D2-4216-AC21-72BD4FD1F6CA@twistedmatrix.com>


On Feb 6, 2011, at 9:39 PM, Tom Davis wrote:

> On Feb 6, 2011, at 9:05 PM, Tenth <tenth at twistedmatrix.com> wrote:
> 
>> We'll be holding another Boston-area Twisted Mini-Sprint on Sunday, February 13th at my place in Somerville, MA... I've sent out invitations to the attendees from last time, plus a few other people who've expressed interest, but if you weren't invited yet, and want to be, let me know!
> 
> I am interested in attending, good sir!
> 

I believe you already have an invite - check your email and click 'accept' :).

(Since it's Evite, of course, you might have to fish it out of your spam disposal first.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110206/2f3e66df/attachment.htm 

From jml at mumak.net  Mon Feb  7 09:33:16 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 7 Feb 2011 14:33:16 +0000
Subject: [Twisted-Python] Change to ticket workflow
In-Reply-To: <430CB111-62BF-4A54-92CE-20022914AEFE@twistedmatrix.com>
References: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>
	<430CB111-62BF-4A54-92CE-20022914AEFE@twistedmatrix.com>
Message-ID: <AANLkTik0-bYGD-cGDTpVQpifBxdYCiJOQ5ZCZy8yC3yq@mail.gmail.com>

On Mon, Feb 7, 2011 at 12:26 AM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>
> On Feb 6, 2011, at 5:12 PM, exarkun at twistedmatrix.com wrote:
>
> After this, if you actually want to work on a ticket, there's no reason
> not to assign it to yourself. ?The goal here is just to eliminate
> accidental/careless ownership.
>
> +1.

+1 from me as well. Thank you for taking the time to make the change.

jml


From thomas at apestaart.org  Mon Feb  7 12:31:58 2011
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Mon, 07 Feb 2011 18:31:58 +0100
Subject: [Twisted-Python] ipv6 support
Message-ID: <1297099918.21374.1.camel@level.fluendo.fluendo.lan>

Hi everyone,

For Flumotion we would like to be able to add IPv6 support.  This is not
yet in Twisted, but there's a ticket open for it:
http://twistedmatrix.com/trac/ticket/3014

We are considering sponsoring a developer to finish and integrate this
patch, but I wanted to check first if there are any willing and able
developers to take on the job if we go ahead ?

Thanks
Thomas

-- 
The blood before me makes me open up my heart again
And I feel it coming over like a storm again
--
GStreamer - bringing multimedia to your desktop
http://gstreamer.freedesktop.org/




From jason.heeris at gmail.com  Mon Feb  7 20:23:04 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 8 Feb 2011 09:23:04 +0800
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and release
Message-ID: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>

I'm using a DeferredSemaphore with a token count of 1 to control
access to a serial port. I also have a GTK object for which I'd like
the "in-use" property to change (and notify listeners) when the
resource is in use. So far, I have something like this:

----
class SerialResource(gobject):

    # Property defs, etc

    def _acquire(self):
        # The "in-use" property is actually stored in self.taken
        self.taken = True
        self.notify('in-use')

    def _release(self, res):
        self.taken = False
        self.notify('in-use')
        return res

    def run(self, func, *args, **kargs):
        def wrapper():
            self._acquire()
            res = func(*args, **kargs)
            return res

        d = self.sem.run(wrapper)
        d.addBoth(self._release)
        return d
----

I feel like there might be a simpler way to do this, but I just can't
see it. Or is this as simple as I can make it?

? Jason


From jrennie at gmail.com  Mon Feb  7 21:45:29 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Mon, 7 Feb 2011 21:45:29 -0500
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
Message-ID: <AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>

I think what you have duplicating functionality---you're not taking
advantage of the DeferredSemaphore.  Try something like this:

sem = DeferredSemaphore(1)

def doSerialStuffAndRelease(sem):
    # ...perform serial port communication...
    sem.release()

d = sem.acquire()
d.addCallback(doSerialStuffAndRelease)

You'll want "sem" to be a global---use wherever you deal with a particular
port.  Create additional instances of DeferredSemaphore for additional
serial ports.  Note that when the deferred is fired, the semaphore is passed
as the argument.  This is the reason for "sem" being the argument name in
the function.

http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.2.0/twisted/internet/defer.py#L1266

Note that you'll also want an error handler which releases the semaphore :)

Jason

On Mon, Feb 7, 2011 at 8:23 PM, Jason Heeris <jason.heeris at gmail.com> wrote:

> I'm using a DeferredSemaphore with a token count of 1 to control
> access to a serial port. I also have a GTK object for which I'd like
> the "in-use" property to change (and notify listeners) when the
> resource is in use. So far, I have something like this:
>
> ----
> class SerialResource(gobject):
>
>    # Property defs, etc
>
>    def _acquire(self):
>        # The "in-use" property is actually stored in self.taken
>        self.taken = True
>        self.notify('in-use')
>
>    def _release(self, res):
>        self.taken = False
>        self.notify('in-use')
>        return res
>
>    def run(self, func, *args, **kargs):
>        def wrapper():
>            self._acquire()
>            res = func(*args, **kargs)
>            return res
>
>        d = self.sem.run(wrapper)
>        d.addBoth(self._release)
>        return d
> ----
>
> I feel like there might be a simpler way to do this, but I just can't
> see it. Or is this as simple as I can make it?
>
> ? Jason
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110207/dcd45974/attachment.htm 

From stephen at thorne.id.au  Mon Feb  7 22:14:39 2011
From: stephen at thorne.id.au (Stephen Thorne)
Date: Tue, 8 Feb 2011 13:14:39 +1000
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
 release
In-Reply-To: <AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
Message-ID: <20110208031439.GA3934@thorne.id.au>

On 2011-02-07, Jason Rennie wrote:
> d = sem.acquire()
> d.addCallback(doSerialStuffAndRelease)

Shouldn't this be spelled:

d = sem.run(doSerialStuff)

Which does acquasition and release of the sempahore properly?

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue


From jason.heeris at gmail.com  Mon Feb  7 22:25:06 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 8 Feb 2011 11:25:06 +0800
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
Message-ID: <AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>

On 8 February 2011 10:45, Jason Rennie <jrennie at gmail.com> wrote:
> I think what you have duplicating functionality---you're not taking
> advantage of the DeferredSemaphore.

I thought using the "run" method *was* the preferred way to use a DS,
but whatever works.

> You'll want "sem" to be a global---use wherever you deal with a particular
> port.

There's one serial settings object for the life of the program (which,
since it is initialised in my main entry point, is essentially
global), and I'm happy to let it "own" the semaphore. Making the DS
itself global won't really get me anything better than that.

and Stephen Thorne...
On 2011-02-07, Jason Rennie wrote:
> > d = sem.acquire()
> > d.addCallback(doSerialStuffAndRelease)
>
> Shouldn't this be spelled:
>
> d = sem.run(doSerialStuff)
>
> Which does acquasition and release of the sempahore properly?

Won't you then be trying to acquire or release it twice?

? Jason


From stephen at thorne.id.au  Mon Feb  7 22:46:20 2011
From: stephen at thorne.id.au (Stephen Thorne)
Date: Tue, 8 Feb 2011 13:46:20 +1000
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
 release
In-Reply-To: <AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
Message-ID: <20110208034620.GB3934@thorne.id.au>

On 2011-02-08, Jason Heeris wrote:
> On 8 February 2011 10:45, Jason Rennie <jrennie at gmail.com> wrote:
> > I think what you have duplicating functionality---you're not taking
> > advantage of the DeferredSemaphore.
> 
> I thought using the "run" method *was* the preferred way to use a DS,
> but whatever works.
> >
> > Shouldn't this be spelled:
> >
> > d = sem.run(doSerialStuff)
> >
> > Which does acquasition and release of the sempahore properly?
> 
> Won't you then be trying to acquire or release it twice?

Um, that's what I mean, you shouldn't be using .acquire() or .release(),
just .run(). doSerialStuff doesn't need a reference to the semaphore
object.

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue


From jason.heeris at gmail.com  Mon Feb  7 23:03:10 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 8 Feb 2011 12:03:10 +0800
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <20110208034620.GB3934@thorne.id.au>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
	<20110208034620.GB3934@thorne.id.au>
Message-ID: <AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>

On 8 February 2011 11:46, Stephen Thorne <stephen at thorne.id.au> wrote:
> Um, that's what I mean, you shouldn't be using .acquire() or .release(),
> just .run(). doSerialStuff doesn't need a reference to the semaphore
> object.

So... how can I update the property and emit the signal upon
acquisition and release? Or are you saying I should stick with what I
had?

? Jason


From stephen at thorne.id.au  Mon Feb  7 23:22:05 2011
From: stephen at thorne.id.au (Stephen Thorne)
Date: Tue, 8 Feb 2011 14:22:05 +1000
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
 release
In-Reply-To: <AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
	<20110208034620.GB3934@thorne.id.au>
	<AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>
Message-ID: <20110208042205.GC3934@thorne.id.au>

On 2011-02-08, Jason Heeris wrote:
> On 8 February 2011 11:46, Stephen Thorne <stephen at thorne.id.au> wrote:
> > Um, that's what I mean, you shouldn't be using .acquire() or .release(),
> > just .run(). doSerialStuff doesn't need a reference to the semaphore
> > object.
> 
> So... how can I update the property and emit the signal upon
> acquisition and release? Or are you saying I should stick with what I
> had?

I totally misread your example, and I appologise. I've read it now and
it looks fine to me. The only commend I'd make is that you probably want
DeferredLock not DeferredSempahore if this is serialised access.

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue


From jason.heeris at gmail.com  Mon Feb  7 23:37:23 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 8 Feb 2011 12:37:23 +0800
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <20110208042205.GC3934@thorne.id.au>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
	<20110208034620.GB3934@thorne.id.au>
	<AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>
	<20110208042205.GC3934@thorne.id.au>
Message-ID: <AANLkTimJs=G4X8fKkTnp4FhfaMXH2XwZp_KHyfH-u2-k@mail.gmail.com>

On 8 February 2011 12:22, Stephen Thorne <stephen at thorne.id.au> wrote:
> I totally misread your example, and I appologise. I've read it now and
> it looks fine to me. The only commend I'd make is that you probably want
> DeferredLock not DeferredSempahore if this is serialised access.

No need to apologise, happens to anyone :) And thanks for the pointer
to DeferredLock, somehow I totally missed that.

Cheers,
Jason


From glyph at twistedmatrix.com  Tue Feb  8 02:25:32 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Feb 2011 02:25:32 -0500
Subject: [Twisted-Python] ipv6 support
In-Reply-To: <1297099918.21374.1.camel@level.fluendo.fluendo.lan>
References: <1297099918.21374.1.camel@level.fluendo.fluendo.lan>
Message-ID: <2F44A5DC-AF83-46C1-BF95-1BFA1BABC531@twistedmatrix.com>

On Feb 7, 2011, at 12:31 PM, Thomas Vander Stichele wrote:

> Hi everyone,
> 
> For Flumotion we would like to be able to add IPv6 support.  This is not
> yet in Twisted, but there's a ticket open for it:
> http://twistedmatrix.com/trac/ticket/3014
> 
> We are considering sponsoring a developer to finish and integrate this
> patch, but I wanted to check first if there are any willing and able
> developers to take on the job if we go ahead ?
> 
> Thanks
> Thomas

Hi Thomas,

I'm really glad to hear you're doing this.  I'd be happy to help with the review process once it gets underway.

Feel free to remind me I said that :).

-glyph



From jrennie at gmail.com  Tue Feb  8 08:14:07 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Tue, 8 Feb 2011 08:14:07 -0500
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <AANLkTimJs=G4X8fKkTnp4FhfaMXH2XwZp_KHyfH-u2-k@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
	<20110208034620.GB3934@thorne.id.au>
	<AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>
	<20110208042205.GC3934@thorne.id.au>
	<AANLkTimJs=G4X8fKkTnp4FhfaMXH2XwZp_KHyfH-u2-k@mail.gmail.com>
Message-ID: <AANLkTimqHvXKPEPS7CJBa2wMUPgrf=w43uh5p3pgVkzV@mail.gmail.com>

Sorry, I don't think I understand the example either---looks to me like
you're reimplementing a semaphore.  Stephen's right about run().

Cheers,

Jason

On Mon, Feb 7, 2011 at 11:37 PM, Jason Heeris <jason.heeris at gmail.com>wrote:

> On 8 February 2011 12:22, Stephen Thorne <stephen at thorne.id.au> wrote:
> > I totally misread your example, and I appologise. I've read it now and
> > it looks fine to me. The only commend I'd make is that you probably want
> > DeferredLock not DeferredSempahore if this is serialised access.
>
> No need to apologise, happens to anyone :) And thanks for the pointer
> to DeferredLock, somehow I totally missed that.
>
> Cheers,
> Jason
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110208/5f5cf54c/attachment.htm 

From exarkun at twistedmatrix.com  Tue Feb  8 08:35:03 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 08 Feb 2011 13:35:03 -0000
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <AANLkTimqHvXKPEPS7CJBa2wMUPgrf=w43uh5p3pgVkzV@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
	<20110208034620.GB3934@thorne.id.au>
	<AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>
	<20110208042205.GC3934@thorne.id.au>
	<AANLkTimJs=G4X8fKkTnp4FhfaMXH2XwZp_KHyfH-u2-k@mail.gmail.com>
	<AANLkTimqHvXKPEPS7CJBa2wMUPgrf=w43uh5p3pgVkzV@mail.gmail.com>
Message-ID: <20110208133503.1699.1505124111.divmod.xquotient.1367@localhost.localdomain>

On 01:14 pm, jrennie at gmail.com wrote:
>Sorry, I don't think I understand the example either---looks to me like
>you're reimplementing a semaphore.  Stephen's right about run().

It sounds like (the other) Jason would be happy with run, except he also 
wants to do something extra each time the lock/semaphore is taken and 
released.  DeferredSemaphore (and the other similar classes) don't 
really offer this functionality.  You just have to work that logic into 
the function you run.  It's possible something like this would be nicer 
than reimplementing the acquire/release logic:

    def run(sem, f):
        def before():
            doAcquire()
            return f()
        d = sem.run(before)
        def after(passthrough):
            doRelease()
            return passthrough
        d.addBoth(after)
        return d

Jean-Paul


From exarkun at twistedmatrix.com  Tue Feb  8 11:24:54 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 08 Feb 2011 16:24:54 -0000
Subject: [Twisted-Python] PyCon 2011 Twisted Sprint
Message-ID: <20110208162454.1699.1277311042.divmod.xquotient.1389@localhost.localdomain>

Hello all,

Once again, we will be sprinting at PyCon.  I've just added Twisted to 
<http://us.pycon.org/2011/sprints/projects/>.  If you plan to attend 
(for any amount of time), please add your name to the attendees list. 
Also feel free to suggest additional sprint topics.  We won't really 
limit sprint topics to things planned in advance, but adding particular 
things to the list is a probably a good way to attract more sprinters 
and let people do any background research that might be necessary before 
the sprint actually starts.

Jean-Paul


From tonthon21 at gmail.com  Tue Feb  8 13:18:52 2011
From: tonthon21 at gmail.com (tonthon)
Date: Tue, 08 Feb 2011 19:18:52 +0100
Subject: [Twisted-Python] Adbapi docs
Message-ID: <4D51890C.3030907@gmail.com>

I all,

I heard there was some work on the twisted documentation and I'd like to 
suggest some enhancement in the "twisted.enterprise.adbapi: Twisted 
RDBMS support" doc 
(http://twistedmatrix.com/documents/current/core/howto/rdbms.html).
Please add some note about the ConnectionPool.stop method.

When I first tried this module, I wrote a first class and associated 
tests and I quickly faced problems like "can't start new thread" and had 
to search a lot before understanding I had to call the stop method. Then 
I tought I had also to call the start one ... The good thing was that I 
red the source code, and it's always usefull to have a look at it :-).

Thanks,

* Gaston TJEBBES
* http://tonthon.blogspot.com


From brad.milne at devx.runthered.com  Tue Feb  8 16:00:05 2011
From: brad.milne at devx.runthered.com (Brad Milne)
Date: Wed, 9 Feb 2011 10:00:05 +1300
Subject: [Twisted-Python] Conch SFTP client help
Message-ID: <AANLkTinwMBwe1Qi-wBktwp3UgUk6+jTWzkCS7fJXK0x3@mail.gmail.com>

Hi all

I've looked around for SFTP client doco, but it's come up pretty thin on the
ground. I've seen http://twistedmatrix.com/trac/wiki/TwistedConch and
everything under it. With it I've been able to connect via SSH to a server
and run a command (*a la* the 'cat' example from tutorial page and from
sshsimpleclient.py<http://twistedmatrix.com/documents/current/conch/examples/sshsimpleclient.py>
).

On the other hand, plenty of posts recommend checking out cftp.py in
scripts/. That uses the FileTransferClient, and appears to be more along the
lines of what is needed for a persistent SFTP connection and file transfers.

What seems to be happening with the below is that the connection is being
created OK, but I haven't been able to utilise the _remoteGlob method (taken
from cftp.py). It simply hangs.

My sandbox code is below.

Any help greatly appreciated.
Brad

<code>
import os
from twisted.python import failure
from twisted.internet import reactor, protocol, defer
from twisted.conch.ssh import transport, connection, userauth, channel,
common, filetransfer
import logging
from twisted.python import log
import sys

class SimpleTransport(transport.SSHClientTransport):
    def verifyHostKey(self, hostKey, fingerprint):
        print 'host key fingerprint: %s' % fingerprint
        return defer.succeed(1)

    def connectionSecure(self):
        '''
        called when the encryption is set up and other services can be run
        '''
        self.requestService(SimpleUserAuth(USERNAME,SimpleConnection()))

class SimpleConnection(connection.SSHConnection):
    def serviceStarted(self):
        self.openChannel(SSHSession())

class SimpleUserAuth(userauth.SSHUserAuthClient):
    def getPassword(self):
        return defer.succeed(PASS)

class SSHSession(channel.SSHChannel):
    '''
    Things to do within the active SSH session.
    '''
    name = 'session'

    def __init__(self, interface_handler=None, *args, **kwargs):
        channel.SSHChannel.__init__(self, *args, **kwargs)
        self.interface_handler = interface_handler or SftpClient(self)

    def channelOpen(self, ignoredData):
        self.data = ''
        # Create an sftp connection (stays open)
        d = self.conn.sendRequest(self, 'subsystem', common.NS('sftp'),
wantReply=1)
        d.addCallback(self._cbSubsystem)

    def _cbSubsystem(self, result):
        self.interface_handler.getDirectoryContents('/tmp')

    def closeReceived(self):
        logging.info('remote side closed %s' % self)
        self.conn.sendClose(self)
        reactor.stop()

class SftpClient(object):

    def __init__(self, transport, *args, **kwargs):
        super(SftpClient, self).__init__(*args, **kwargs)
        self.transport = transport
        self._client = filetransfer.FileTransferClient()

    @property
    def client(self):
        if not self._client.connected:
            self._client.makeConnection(self.transport)
            logging.debug("Made 'connection' with transport class")
        return self._client

    def getDirectoryContents(self, path):
        d = self._remoteGlob(path)

        def gotit(files):
            print "Got %s: %s" % (type(files), files)
        d.addCallback(gotit)
        return d

    # Accessory methods.
    # These are stolen from twisted.conch.scripts.cftp.py. We can't
    # import that module as it contains unix-dependent imports.
    def _remoteGlob(self, fullPath):
        logging.debug('looking up %s' % fullPath)
        head, tail = os.path.split(fullPath)
        if '*' in tail or '?' in tail:
            glob = 1
        else:
            glob = 0
        if tail and not glob: # could be file or directory
            # try directory first
            logging.debug("Opening dir")
            d = self.client.openDirectory(fullPath)
            d.addCallback(self._cbOpenList, '')
            d.addErrback(self._ebNotADirectory, head, tail)
        else:
            d = self.client.openDirectory(head)
            d.addCallback(self._cbOpenList, tail)
        return d

    def _cbOpenList(self, directory, glob):
        logging.debug("Got dir")
        files = []
        d = directory.read()
        d.addBoth(self._cbReadFile, files, directory, glob)
        return d

    def _ebNotADirectory(self, reason, path, glob):
        logging.debug("Not a dir")
        d = self.client.openDirectory(path)
        d.addCallback(self._cbOpenList, glob)
        return d

    def _cbReadFile(self, files, l, directory, glob):
        logging.debug("Reading file")
        if not isinstance(files, failure.Failure):
            if glob:
                raise NotImplementedError("don't have fnmatch available to
use on Windows so have commented this bit out")
#                l.extend([f for f in files if fnmatch.fnmatch(f[0], glob)])
            else:
                l.extend(files)
            d = directory.read()
            d.addBoth(self._cbReadFile, l, directory, glob)
            return d
        else:
            reason = files
            reason.trap(EOFError)
            directory.close()
            return l

if __name__=='__main__':
    protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST, 22)
    log.startLogging(sys.stdout, setStdout=0)
    reactor.run()

</code>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110209/af455516/attachment.htm 

From luke-lists at hybrid-logic.co.uk  Tue Feb  8 17:53:38 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Tue, 08 Feb 2011 17:53:38 -0500
Subject: [Twisted-Python] Announcing txMySQL - native async Twisted MySQL
	protocol
Message-ID: <1297205618.8982.136.camel@pow>

Hi everyone,

I'm pleased to announce the release of txMySQL, a native Twisted MySQL
protocol implementation at https://github.com/hybridlogic/txMySQL

The bulk of this code is courtesy of _habnabit (thank you!), I just
added authentication support and fixed a couple of bugs which were
stopping the MySQL protocol parser working. As we will be using this in
production at Hybrid Logic I am happy to take over maintenance of it.

As you can tell from the TODO list in the README, this is still a fairly
rough draft, but it works well enough to .fetchall() basic results sets
and .query() any other MySQL statements you care to run. See example.py.

The incentive to produce this was due to a critical bug in MySQLdb with
threading under load (on FreeBSD) which was causing Python to lock up. I
decided that a native client protocol implementation would be less work
than tracking down that bug, and besides it's something I've wanted to
do for a while ;-)

It might be interesting to see how adbapi could be modified to use a
DeferredSemaphore to implement a completely threadless pool of MySQL
connections with this...?

Feel free to fork, tweak, fix, use, report issues, etc.

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Phone: +441172232002 / +16179496062





From brad.milne at devx.runthered.com  Tue Feb  8 22:45:31 2011
From: brad.milne at devx.runthered.com (Brad Milne)
Date: Wed, 9 Feb 2011 16:45:31 +1300
Subject: [Twisted-Python] Conch SFTP client help
In-Reply-To: <AANLkTinwMBwe1Qi-wBktwp3UgUk6+jTWzkCS7fJXK0x3@mail.gmail.com>
References: <AANLkTinwMBwe1Qi-wBktwp3UgUk6+jTWzkCS7fJXK0x3@mail.gmail.com>
Message-ID: <AANLkTikfhTk=DbiQkwyqb_qp8Vw0_xbhqMx_AFbHys4m@mail.gmail.com>

Nevermind. I was missing 'self.dataReceived =
self.interface_handler.dataReceived' in the __init__ of SSHSession
and self.dataReceived = self._client.dataReceived in the __init__ of
SftpClient. Maybe I need to reduce the abstraction a bit here, hmm.

Well hopefully this helps someone sometime....


On 9 February 2011 10:00, Brad Milne <brad.milne at devx.runthered.com> wrote:

> Hi all
>
> I've looked around for SFTP client doco, but it's come up pretty thin on
> the ground. I've seen http://twistedmatrix.com/trac/wiki/TwistedConch and
> everything under it. With it I've been able to connect via SSH to a server
> and run a command (*a la* the 'cat' example from tutorial page and from
> sshsimpleclient.py<http://twistedmatrix.com/documents/current/conch/examples/sshsimpleclient.py>
> ).
>
> On the other hand, plenty of posts recommend checking out cftp.py in
> scripts/. That uses the FileTransferClient, and appears to be more along the
> lines of what is needed for a persistent SFTP connection and file transfers.
>
> What seems to be happening with the below is that the connection is being
> created OK, but I haven't been able to utilise the _remoteGlob method (taken
> from cftp.py). It simply hangs.
>
> My sandbox code is below.
>
> Any help greatly appreciated.
> Brad
>
> <code>
> import os
> from twisted.python import failure
> from twisted.internet import reactor, protocol, defer
> from twisted.conch.ssh import transport, connection, userauth, channel,
> common, filetransfer
> import logging
> from twisted.python import log
> import sys
>
> class SimpleTransport(transport.SSHClientTransport):
>     def verifyHostKey(self, hostKey, fingerprint):
>         print 'host key fingerprint: %s' % fingerprint
>         return defer.succeed(1)
>
>     def connectionSecure(self):
>         '''
>         called when the encryption is set up and other services can be run
>         '''
>         self.requestService(SimpleUserAuth(USERNAME,SimpleConnection()))
>
> class SimpleConnection(connection.SSHConnection):
>     def serviceStarted(self):
>         self.openChannel(SSHSession())
>
> class SimpleUserAuth(userauth.SSHUserAuthClient):
>     def getPassword(self):
>         return defer.succeed(PASS)
>
> class SSHSession(channel.SSHChannel):
>     '''
>     Things to do within the active SSH session.
>     '''
>     name = 'session'
>
>     def __init__(self, interface_handler=None, *args, **kwargs):
>         channel.SSHChannel.__init__(self, *args, **kwargs)
>         self.interface_handler = interface_handler or SftpClient(self)
>
>     def channelOpen(self, ignoredData):
>         self.data = ''
>         # Create an sftp connection (stays open)
>         d = self.conn.sendRequest(self, 'subsystem', common.NS('sftp'),
> wantReply=1)
>         d.addCallback(self._cbSubsystem)
>
>     def _cbSubsystem(self, result):
>         self.interface_handler.getDirectoryContents('/tmp')
>
>     def closeReceived(self):
>         logging.info('remote side closed %s' % self)
>         self.conn.sendClose(self)
>         reactor.stop()
>
> class SftpClient(object):
>
>     def __init__(self, transport, *args, **kwargs):
>         super(SftpClient, self).__init__(*args, **kwargs)
>         self.transport = transport
>         self._client = filetransfer.FileTransferClient()
>
>     @property
>     def client(self):
>         if not self._client.connected:
>             self._client.makeConnection(self.transport)
>             logging.debug("Made 'connection' with transport class")
>         return self._client
>
>     def getDirectoryContents(self, path):
>         d = self._remoteGlob(path)
>
>         def gotit(files):
>             print "Got %s: %s" % (type(files), files)
>         d.addCallback(gotit)
>         return d
>
>     # Accessory methods.
>     # These are stolen from twisted.conch.scripts.cftp.py. We can't
>     # import that module as it contains unix-dependent imports.
>     def _remoteGlob(self, fullPath):
>         logging.debug('looking up %s' % fullPath)
>         head, tail = os.path.split(fullPath)
>         if '*' in tail or '?' in tail:
>             glob = 1
>         else:
>             glob = 0
>         if tail and not glob: # could be file or directory
>             # try directory first
>             logging.debug("Opening dir")
>             d = self.client.openDirectory(fullPath)
>             d.addCallback(self._cbOpenList, '')
>             d.addErrback(self._ebNotADirectory, head, tail)
>         else:
>             d = self.client.openDirectory(head)
>             d.addCallback(self._cbOpenList, tail)
>         return d
>
>     def _cbOpenList(self, directory, glob):
>         logging.debug("Got dir")
>         files = []
>         d = directory.read()
>         d.addBoth(self._cbReadFile, files, directory, glob)
>         return d
>
>     def _ebNotADirectory(self, reason, path, glob):
>         logging.debug("Not a dir")
>         d = self.client.openDirectory(path)
>         d.addCallback(self._cbOpenList, glob)
>         return d
>
>     def _cbReadFile(self, files, l, directory, glob):
>         logging.debug("Reading file")
>         if not isinstance(files, failure.Failure):
>             if glob:
>                 raise NotImplementedError("don't have fnmatch available to
> use on Windows so have commented this bit out")
> #                l.extend([f for f in files if fnmatch.fnmatch(f[0],
> glob)])
>             else:
>                 l.extend(files)
>             d = directory.read()
>             d.addBoth(self._cbReadFile, l, directory, glob)
>             return d
>         else:
>             reason = files
>             reason.trap(EOFError)
>             directory.close()
>             return l
>
> if __name__=='__main__':
>     protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST, 22)
>     log.startLogging(sys.stdout, setStdout=0)
>     reactor.run()
>
> </code>
>



-- 
Brad Milne | Run The Red | *brad.milne at devx.runthered.com*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110209/531636b3/attachment-0001.htm 

From manuito at gmail.com  Wed Feb  9 03:42:59 2011
From: manuito at gmail.com (Manu)
Date: Wed, 9 Feb 2011 09:42:59 +0100
Subject: [Twisted-Python] Store an instance of a connection - twisted.web
Message-ID: <AANLkTin2Js+Vt9EBFp-TXt26hJyv3NfwUL-BdR+iefg_@mail.gmail.com>

How I store an instance of a connection in twisted.web? I have seen
request.getSession() but I searched and there are very few examples of how
it is stored and retrieved later.

I want to store the ldap connection in a session for retrieve later. Thanks.

def render_POST(self, request):

    command = request.path[1:]
    session = request.getSession()

    if command == "authentication":
      Connect =
LdapConnection(request.args['host'][0],request.args['user'][0],request.args['password'][0])
      session.addComponent(LdapConnection, Connect)

    if command == "users":
      Connect = session.getComponent(LdapConnection)
      u = Users(Connect, request.args['name'][0],request.args['employeeNumber'])

    return
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110209/dd97e58d/attachment-0001.htm 

From exarkun at twistedmatrix.com  Wed Feb  9 07:41:54 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Feb 2011 12:41:54 -0000
Subject: [Twisted-Python] Store an instance of a connection - twisted.web
In-Reply-To: <AANLkTin2Js+Vt9EBFp-TXt26hJyv3NfwUL-BdR+iefg_@mail.gmail.com>
References: <AANLkTin2Js+Vt9EBFp-TXt26hJyv3NfwUL-BdR+iefg_@mail.gmail.com>
Message-ID: <20110209124154.1699.967195113.divmod.xquotient.1401@localhost.localdomain>

On 08:42 am, manuito at gmail.com wrote:
>How I store an instance of a connection in twisted.web? I have seen
>request.getSession() but I searched and there are very few examples of 
>how
>it is stored and retrieved later.
>
>I want to store the ldap connection in a session for retrieve later. 
>Thanks.
>
>def render_POST(self, request):
>
>    command = request.path[1:]
>    session = request.getSession()
>
>    if command == "authentication":
>      Connect =
>LdapConnection(request.args['host'][0],request.args['user'][0],request.args['password'][0])
>      session.addComponent(LdapConnection, Connect)
>
>    if command == "users":
>      Connect = session.getComponent(LdapConnection)
>      u = Users(Connect, 
>request.args['name'][0],request.args['employeeNumber'])
>
>    return

How about the answer here?

http://stackoverflow.com/questions/4936994/store-an-instance-of-a 
-connection-twisted-web

Jean-Paul


From cybergrind at gmail.com  Wed Feb  9 10:24:34 2011
From: cybergrind at gmail.com (cybergrind)
Date: Wed, 9 Feb 2011 17:24:34 +0200
Subject: [Twisted-Python] Announcing txMySQL - native async Twisted
	MySQL protocol
In-Reply-To: <1297205618.8982.136.camel@pow>
References: <1297205618.8982.136.camel@pow>
Message-ID: <AANLkTi=Sgut21i7W6MfoSxACoMZvFuCOa1j41-K9WFF+@mail.gmail.com>

Hi Luke,

We'll test it. This can be great replacement for MySQLdb

On Wed, Feb 9, 2011 at 12:53 AM, Luke Marsden <luke-lists at hybrid-logic.co.uk
> wrote:

> Hi everyone,
>
> I'm pleased to announce the release of txMySQL, a native Twisted MySQL
> protocol implementation at https://github.com/hybridlogic/txMySQL
>
> The bulk of this code is courtesy of _habnabit (thank you!), I just
> added authentication support and fixed a couple of bugs which were
> stopping the MySQL protocol parser working. As we will be using this in
> production at Hybrid Logic I am happy to take over maintenance of it.
>
> As you can tell from the TODO list in the README, this is still a fairly
> rough draft, but it works well enough to .fetchall() basic results sets
> and .query() any other MySQL statements you care to run. See example.py.
>
> The incentive to produce this was due to a critical bug in MySQLdb with
> threading under load (on FreeBSD) which was causing Python to lock up. I
> decided that a native client protocol implementation would be less work
> than tracking down that bug, and besides it's something I've wanted to
> do for a while ;-)
>
> It might be interesting to see how adbapi could be modified to use a
> DeferredSemaphore to implement a completely threadless pool of MySQL
> connections with this...?
>
> Feel free to fork, tweak, fix, use, report issues, etc.
>
> --
> Best Regards,
> Luke Marsden
> CTO, Hybrid Logic Ltd.
>
> Web: http://www.hybrid-cluster.com/
> Hybrid Web Cluster - cloud web hosting
>
> Phone: +441172232002 / +16179496062
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110209/3d460b60/attachment.htm 

From ttkk1024 at 163.com  Thu Feb 10 04:10:24 2011
From: ttkk1024 at 163.com (=?GBK?B?zMa2q778?=)
Date: Thu, 10 Feb 2011 17:10:24 +0800 (CST)
Subject: [Twisted-Python] twisted can't find internet module
Message-ID: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>

I use xp,python 2.5.5,twisted 10.2.0 for py2.5
code:
from twisted.internet import reactor
reactor.run()
 
I save the code named 1.py.while I run 1.py,give me the error:
ImportError: No module named internet
 
who can give me a help?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110210/d27030d0/attachment.htm 

From torrycn at gmail.com  Thu Feb 10 04:30:57 2011
From: torrycn at gmail.com (=?UTF-8?B?5aS05aSq5pmV?=)
Date: Thu, 10 Feb 2011 17:30:57 +0800
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
References: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
Message-ID: <AANLkTim=P7wa0_7CngArH6Oy-fwSBajjKsoxwJOOzPB6@mail.gmail.com>

???????????????????????????????

2011/2/10 ??? <ttkk1024 at 163.com>

> I use xp,python 2.5.5,twisted 10.2.0 for py2.5
> code:
> from twisted.internet import reactor
> reactor.run()
>
> I save the code named 1.py.while I run 1.py,give me the error:
> ImportError: No module named internet
>
> who can give me a help?
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110210/3d70714d/attachment.htm 

From daniel.yang.zhenyu at gmail.com  Thu Feb 10 04:38:12 2011
From: daniel.yang.zhenyu at gmail.com (=?UTF-8?B?5p2o5oyv5a6H?=)
Date: Thu, 10 Feb 2011 17:38:12 +0800
Subject: [Twisted-Python] twisted can't find internet module
Message-ID: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>

???????
??????????twisted?????????>_<

??? <torrycn at gmail.com>???

>???????????????????????????????
>
>2011/2/10 ??? <ttkk1024 at 163.com>
>
>> I use xp,python 2.5.5,twisted 10.2.0 for py2.5
>> code:
>> from twisted.internet import reactor
>> reactor.run()
>>
>> I save the code named 1.py.while I run 1.py,give me the error:
>> ImportError: No module named internet
>>
>> who can give me a help?
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

From jaroslaw.fedewicz at gmail.com  Thu Feb 10 04:52:44 2011
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Thu, 10 Feb 2011 11:52:44 +0200
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
Message-ID: <2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>

On Feb 10, 2011, at 11:38 AM, ??? wrote:

> ???????
> ??????????twisted?????????>_<

Sorry for dropping in, but, when the problem is ultimately solved, can you post the summary in English?

I don't know a word in Chinese, for example. And you certainly wouldn't feel very good if I started replying in Ukrainian or Polish, too.

From glyph at twistedmatrix.com  Thu Feb 10 05:46:14 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Feb 2011 05:46:14 -0500
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
	<2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
Message-ID: <83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>

On Feb 10, 2011, at 4:52 AM, Yaroslav Fedevych wrote:

> On Feb 10, 2011, at 11:38 AM, ??? wrote:
> 
>> ???????
>> ??????????twisted?????????>_<
> 
> Sorry for dropping in, but, when the problem is ultimately solved, can you post the summary in English?
> 
> I don't know a word in Chinese, for example. And you certainly wouldn't feel very good if I started replying in Ukrainian or Polish, too.

I am also very curious about the nature of the "problem horse", as google translate suggests the first response is about. :-)



From glyph at twistedmatrix.com  Thu Feb 10 05:46:49 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Feb 2011 05:46:49 -0500
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
References: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
Message-ID: <D28D18F3-7D44-4624-90D4-5048FF43F761@twistedmatrix.com>

On Feb 10, 2011, at 4:10 AM, ??? wrote:

> I use xp,python 2.5.5,twisted 10.2.0 for py2.5
> code:
> from twisted.internet import reactor
> reactor.run()
>  
> I save the code named 1.py.while I run 1.py,give me the error:
> ImportError: No module named internet
>  
> who can give me a help?

The error message is longer than that.  It should say things about files and line numbers.  Can you paste the entire message?



From jaroslaw.fedewicz at gmail.com  Thu Feb 10 07:33:01 2011
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Thu, 10 Feb 2011 14:33:01 +0200
Subject: [Twisted-Python] OT: Languages (was Re: twisted can't find internet
	module)
In-Reply-To: <83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
	<2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
	<83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
Message-ID: <13D6F14C-CA13-443D-9213-3889C9EFAE09@gmail.com>


On Feb 10, 2011, at 12:46 PM, Glyph Lefkowitz wrote:

> On Feb 10, 2011, at 4:52 AM, Yaroslav Fedevych wrote:
> 
>> On Feb 10, 2011, at 11:38 AM, ??? wrote:
>> 
>>> ???????
>>> ??????????twisted?????????>_<
>> 
>> Sorry for dropping in, but, when the problem is ultimately solved, can you post the summary in English?
>> 
>> I don't know a word in Chinese, for example. And you certainly wouldn't feel very good if I started replying in Ukrainian or Polish, too.
> 
> I am also very curious about the nature of the "problem horse", as google translate suggests the first response is about. :-)
> 

That's why I try not to use Google translate for loosely related languages.

With languages where not only grammar and vocabulary differ, but the development of which was influenced by vastly different cultural and historical factors, producing rather unrelated sets of context-bound ambiguities, idioms, and etymologies, Mandelbrot-Zipf law and similar statistical techniques just stop working.

That is, they still work, but external forces like history and culture overwhelm their effect. To smaller effect, you can observe statistics failure on language pairs like English-Hebrew, or English-Russian, to bigger extent it would be English-Chinese or English-(some isolated nation language). The result is inevitably ?problem horse? or similar unparseable thing.

Therefore, it's essential that everyone on the list sticks to its ligua franca if at all possible...

-- 
Yaroslav Fedevych
Software Developer and Consultant
jaroslaw.fedewicz at gmail.com
+380685061839, +380969783173



From stephen at thorne.id.au  Thu Feb 10 08:08:53 2011
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 10 Feb 2011 23:08:53 +1000
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
	<2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
	<83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
Message-ID: <20110210130853.GC3703@thorne.id.au>

On 2011-02-10, Glyph Lefkowitz wrote:
> On Feb 10, 2011, at 4:52 AM, Yaroslav Fedevych wrote:
> 
> > On Feb 10, 2011, at 11:38 AM, ??? wrote:
> > 
> >> ???????
> >> ??????????twisted?????????>_<
> > 
> > Sorry for dropping in, but, when the problem is ultimately solved,
> > can you post the summary in English?
> > 
> > I don't know a word in Chinese, for example. And you certainly
> > wouldn't feel very good if I started replying in Ukrainian or
> > Polish, too.
> 
> I am also very curious about the nature of the "problem horse", as
> google translate suggests the first response is about. :-)

I did not use google translate, but I was wondering why horses were
mentioned in the discussion as well.

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue


From glyph at twistedmatrix.com  Thu Feb 10 13:14:19 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Feb 2011 13:14:19 -0500
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <20110210130853.GC3703@thorne.id.au>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
	<2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
	<83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
	<20110210130853.GC3703@thorne.id.au>
Message-ID: <93CF004D-7939-4150-ACA8-666C0E2DB25C@twistedmatrix.com>

On Feb 10, 2011, at 8:08 AM, Stephen Thorne wrote:

>> I am also very curious about the nature of the "problem horse", as
>> google translate suggests the first response is about. :-)
> 
> I did not use google translate, but I was wondering why horses were
> mentioned in the discussion as well.


Since the poster hasn't clarified, I thought I'd share this fascinating tidbit:

My wife (who was excited to learn the phrase for "bug report" from this message) explains that "horse-top" or "on a horse" is a Chinese idiom meaning "fast", so the responder was telling the OP to describe their problem better, and if they do so, it will be resolved quickly.

I have to admit I'm a bit disappointed; I thought that maybe Problem Horse would be Twisted's answer to the Django Pony, but alas we will never get to meet it.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110210/108ec11f/attachment.htm 

From tom at recursivedream.com  Thu Feb 10 13:23:49 2011
From: tom at recursivedream.com (Tom Davis)
Date: Thu, 10 Feb 2011 13:23:49 -0500
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <93CF004D-7939-4150-ACA8-666C0E2DB25C@twistedmatrix.com>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
	<2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
	<83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
	<20110210130853.GC3703@thorne.id.au>
	<93CF004D-7939-4150-ACA8-666C0E2DB25C@twistedmatrix.com>
Message-ID: <AANLkTi=s0kCRvu4n9rf80nqgNnuhOKE58scZBLTTn0iy@mail.gmail.com>

On Thu, Feb 10, 2011 at 1:14 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> On Feb 10, 2011, at 8:08 AM, Stephen Thorne wrote:
>
> I am also very curious about the nature of the "problem horse", as
>
> google translate suggests the first response is about. :-)
>
>
> I did not use google translate, but I was wondering why horses were
> mentioned in the discussion as well.
>
>
> Since the poster hasn't clarified, I thought I'd share this fascinating
> tidbit:
>
> My wife (who was excited to learn the phrase for "bug report" from this
> message) explains that "horse-top" or "on a horse" is a Chinese idiom
> meaning "fast", so the responder was telling the OP to describe their
> problem better, and if they do so, it will be resolved quickly.
>
> I have to admit I'm a bit disappointed; I thought that maybe Problem Horse
> would be Twisted's answer to the Django Pony, but alas we will never get to
> meet it.
>

I must admit that despite the ban on laughing out loud in #twisted, I have
done so in my apartment multiple times over "Problem Horse". I hope its fate
is not yet sealed!


>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110210/cee52b3f/attachment.htm 

From stephen.c.waterbury at nasa.gov  Thu Feb 10 15:24:59 2011
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 10 Feb 2011 15:24:59 -0500
Subject: [Twisted-Python] twisted site should link to tx site ...
Message-ID: <4D54499B.7050509@nasa.gov>

This url should really be linked either from Twisted's main page
or at the very least on the "Twisted Community" page:

https://launchpad.net/tx

Lots of tx stuff that's not in PyPI, etc ... sheesh!  Also,
if you do a search on "tx" in the twisted site "search" it says
"search query too short", and the string "tx" is not found on
either the main page or the community page at all.

To be fair, googling on "twisted tx" gets the launchpad site as
the second hit, but what if someone doesn't know about the "tx"
thing?

Steve



From lvh at laurensvh.be  Thu Feb 10 15:45:24 2011
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 10 Feb 2011 21:45:24 +0100
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
References: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
Message-ID: <AANLkTimtGc+=-nrweK46Wb-nmLXaR5j0oHQYNvz0a-d1@mail.gmail.com>

Do you have a file called twisted.py somewhere? What's import twisted;
print twisted.__file__ do?

cheers
lvh


From ste at demaledetti.net  Thu Feb 10 16:22:51 2011
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Thu, 10 Feb 2011 22:22:51 +0100
Subject: [Twisted-Python] OT: Languages (was Re: twisted can't find
	internet module)
Message-ID: <4D54572B.2080903@demaledetti.net>

Yaroslav Fedevych <jaroslaw.fedewicz at gmail.com> wrote:
> Therefore, it's essential that everyone on the list sticks to its ligua franca if at all possible...

yeah! Except that I would call it "Koine" rather than "lingua
franca" but other than that....

http://en.wikipedia.org/wiki/Koine_Greek

;)

ciao
ste

p.s. "...it's all greek to me..."




From glyph at twistedmatrix.com  Fri Feb 11 00:11:41 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 11 Feb 2011 00:11:41 -0500
Subject: [Twisted-Python] twisted site should link to tx site ...
In-Reply-To: <4D54499B.7050509@nasa.gov>
References: <4D54499B.7050509@nasa.gov>
Message-ID: <F9082E0F-8A5D-466E-BC3C-C125D04BA40C@twistedmatrix.com>


On Feb 10, 2011, at 3:24 PM, Stephen Waterbury wrote:

> This url should really be linked either from Twisted's main page
> or at the very least on the "Twisted Community" page:
> 
> https://launchpad.net/tx
> 
> Lots of tx stuff that's not in PyPI, etc ... sheesh!  Also,
> if you do a search on "tx" in the twisted site "search" it says
> "search query too short", and the string "tx" is not found on
> either the main page or the community page at all.
> 
> To be fair, googling on "twisted tx" gets the launchpad site as
> the second hit, but what if someone doesn't know about the "tx"
> thing?

Hey Steve,

The front page is basically unmaintained right now.  It's a problem, as you may have heard some recent discussion on this list about.  I'd be happy to give you edit permission to add this link and other issues with it though, if you're so inclined :).

-glyph

From waterbug at pangalactic.us  Fri Feb 11 00:27:45 2011
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Fri, 11 Feb 2011 00:27:45 -0500
Subject: [Twisted-Python] twisted site should link to tx site ...
In-Reply-To: <F9082E0F-8A5D-466E-BC3C-C125D04BA40C@twistedmatrix.com>
References: <4D54499B.7050509@nasa.gov>
	<F9082E0F-8A5D-466E-BC3C-C125D04BA40C@twistedmatrix.com>
Message-ID: <4D54C8D1.8040404@pangalactic.us>

On 02/11/2011 12:11 AM, Glyph Lefkowitz wrote:
>
> On Feb 10, 2011, at 3:24 PM, Stephen Waterbury wrote:
>
>> This url should really be linked either from Twisted's main page
>> or at the very least on the "Twisted Community" page:
>>
>> https://launchpad.net/tx
>>
>> Lots of tx stuff that's not in PyPI, etc ... sheesh!  Also,
>> if you do a search on "tx" in the twisted site "search" it says
>> "search query too short", and the string "tx" is not found on
>> either the main page or the community page at all.
>>
>> To be fair, googling on "twisted tx" gets the launchpad site as
>> the second hit, but what if someone doesn't know about the "tx"
>> thing?
>
> Hey Steve,
>
> The front page is basically unmaintained right now.  It's a
> problem, as you may have heard some recent discussion on this
> list about.  I'd be happy to give you edit permission to add
> this link and other issues with it though, if you're so
> inclined :).

Hey Glyph,

Ooops.  That was supposed to be me *scolding* you, not
*volunteering*!  ;)  Hmmm ... yes, I have been following the
discussion -- it's great to see some new blood/energy joining in
... unfortunately, I'm slammed at work at the moment, but if I
can come up for air in the near future I'll chime in.  Looking
forward to seeing you guys at PyCon, and your twisted talk!

BTW, I am again (finally) in a position at work to infuse some
of the more righteous python products into our apps, so plan to
work in some twisted packages in the near future ... will write
stories when I have some new ones ...

Cheers,
Steve



From ltaylor.volks at gmail.com  Fri Feb 11 01:30:37 2011
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Thu, 10 Feb 2011 23:30:37 -0700
Subject: [Twisted-Python] twisted site should link to tx site ...
In-Reply-To: <4D54499B.7050509@nasa.gov>
References: <4D54499B.7050509@nasa.gov>
Message-ID: <A69DD887-E216-491B-803C-C40E36AC69CC@gmail.com>

On Feb 10, 2011, at 1:24 PM, Stephen Waterbury wrote:

> This url should really be linked either from Twisted's main page
> or at the very least on the "Twisted Community" page:
>
> https://launchpad.net/tx
>


It is linked from here, with a description:
http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted

And there's this, too: http://twistedmatrix.com/trac/wiki/CommunityCode

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110210/5ae5f74c/attachment.htm 

From jrennie at gmail.com  Fri Feb 11 09:27:38 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Fri, 11 Feb 2011 09:27:38 -0500
Subject: [Twisted-Python] sigchld
Message-ID: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>

I'm in the process of porting code from Twisted 8.1 to 10.1 which needed
some custom signal handling code.  Twisted 8.1's approach to signal handling
was (as far as we could tell) too monolithic, so we chose
"installSignalHandlers=False" and wrote our own signal handling code,
installing reactor._handleSigchld so that spawnProcess would work.  Of
course, we have to change this now since #733 was fixed (
http://twistedmatrix.com/trac/ticket/733).

IIUC, (and please correct if I don't) the SIGCHLD handler installation is
performed by twisted.internet.posixbase.PosixReactorBase._handleSignals (the
"if platformType == 'posix':" block).  So, one option would be to run that
code while still using "installSignalHandlers=False".

I'm wondering if there's a better way.  What if I were to let Twisted
install signal handlers, but run my own signal handling code after the
reactor starts (using callLater(0,...)) that installs "super" handlers which
calls the Twisted handler along with any other handlers I want to run.  I'd
use signal.getsignal to get a reference to the Twisted handler(s).  Might
this work?  Or, is there an obvious flaw?  In particular, can I get the
SIGCHLD handler using signal.getsignal, then call it via my "super" handler?
 I don't need to do any special handling of SIGCHLD, so I could just leave
that signal handler alone.

All thoughts appreciated.

Thanks,

Jason

-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110211/9259cc18/attachment-0001.htm 

From exarkun at twistedmatrix.com  Fri Feb 11 10:01:10 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 11 Feb 2011 15:01:10 -0000
Subject: [Twisted-Python] sigchld
In-Reply-To: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
Message-ID: <20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>

On 02:27 pm, jrennie at gmail.com wrote:
>I'm in the process of porting code from Twisted 8.1 to 10.1 which 
>needed
>some custom signal handling code.  Twisted 8.1's approach to signal 
>handling
>was (as far as we could tell) too monolithic, so we chose
>"installSignalHandlers=False" and wrote our own signal handling code,
>installing reactor._handleSigchld so that spawnProcess would work.  Of
>course, we have to change this now since #733 was fixed (
>http://twistedmatrix.com/trac/ticket/733).
>
>IIUC, (and please correct if I don't) the SIGCHLD handler installation 
>is
>performed by twisted.internet.posixbase.PosixReactorBase._handleSignals 
>(the
>"if platformType == 'posix':" block).  So, one option would be to run 
>that
>code while still using "installSignalHandlers=False".
>
>I'm wondering if there's a better way.  What if I were to let Twisted
>install signal handlers, but run my own signal handling code after the
>reactor starts (using callLater(0,...)) that installs "super" handlers 
>which
>calls the Twisted handler along with any other handlers I want to run. 
>I'd
>use signal.getsignal to get a reference to the Twisted handler(s). 
>Might
>this work?  Or, is there an obvious flaw?  In particular, can I get the
>SIGCHLD handler using signal.getsignal, then call it via my "super" 
>handler?
>I don't need to do any special handling of SIGCHLD, so I could just 
>leave
>that signal handler alone.

On Python 2.5 and earlier you won't be able to get Twisted's SIGCHLD 
handler using signal.getsignal.

For other signal handlers, signal.getsignal should work fine.

I also think it would be good for the reactor to not do so much with 
signals (aside from SIGCHLD), or provide a better public interface for 
controlling what it does.

What sort of things do your signal handlers do?

Jean-Paul


From waterbug at pangalactic.us  Fri Feb 11 10:04:34 2011
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Fri, 11 Feb 2011 10:04:34 -0500
Subject: [Twisted-Python] twisted site should link to tx site ...
In-Reply-To: <A69DD887-E216-491B-803C-C40E36AC69CC@gmail.com>
References: <4D54499B.7050509@nasa.gov>
	<A69DD887-E216-491B-803C-C40E36AC69CC@gmail.com>
Message-ID: <4D555002.5050202@pangalactic.us>

On 02/11/2011 01:30 AM, Lucas Taylor wrote:
> On Feb 10, 2011, at 1:24 PM, Stephen Waterbury wrote:
>
>> This url should really be linked either from Twisted's main page
>> or at the very least on the "Twisted Community" page:
>>
>> https://launchpad.net/tx
>>
>
> It is linked from here, with a description:
> http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted
>
> And there's this, too: http://twistedmatrix.com/trac/wiki/CommunityCode

Ha, you're just saying that so Glyph won't volunteer you to change
anything!  Slacker!  ;)

Steve



From jrennie at gmail.com  Fri Feb 11 10:59:24 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Fri, 11 Feb 2011 10:59:24 -0500
Subject: [Twisted-Python] sigchld
In-Reply-To: <20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
	<20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
Message-ID: <AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>

On Fri, Feb 11, 2011 at 10:01 AM, <exarkun at twistedmatrix.com> wrote:

> On Python 2.5 and earlier you won't be able to get Twisted's SIGCHLD
> handler using signal.getsignal.
>

We're also moving to python 2.6 (the change is really Debian 5 to Debian 6).
 Should it would work in 2.6?


> What sort of things do your signal handlers do?
>

IIRC, the main thing is to shut down the web server (cherrypy) we're running
in parallel with twisted.  We also have some disk-caching for stateful
signals which needs to ensure the cache file is up-to-date.

Cheers,

Jason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110211/760baf33/attachment.htm 

From exarkun at twistedmatrix.com  Fri Feb 11 11:55:45 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 11 Feb 2011 16:55:45 -0000
Subject: [Twisted-Python] sigchld
In-Reply-To: <AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
	<20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
	<AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>
Message-ID: <20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>

On 03:59 pm, jrennie at gmail.com wrote:
>On Fri, Feb 11, 2011 at 10:01 AM, <exarkun at twistedmatrix.com> wrote:
>>On Python 2.5 and earlier you won't be able to get Twisted's SIGCHLD
>>handler using signal.getsignal.
>
>We're also moving to python 2.6 (the change is really Debian 5 to 
>Debian 6).
>Should it would work in 2.6?

I think so.
>
>>What sort of things do your signal handlers do?
>
>IIRC, the main thing is to shut down the web server (cherrypy) we're 
>running
>in parallel with twisted.  We also have some disk-caching for stateful
>signals which needs to ensure the cache file is up-to-date.

For shutdown-type things, reactor.addSystemEventTrigger(phase, 
'shutdown', f) might be better than getting into signal handlers (where 
phase is 'before', 'during', or 'after').

Jean-Paul


From ltaylor.volks at gmail.com  Fri Feb 11 12:10:22 2011
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Fri, 11 Feb 2011 10:10:22 -0700
Subject: [Twisted-Python] twisted site should link to tx site ...
In-Reply-To: <4D555002.5050202@pangalactic.us>
References: <4D54499B.7050509@nasa.gov>
	<A69DD887-E216-491B-803C-C40E36AC69CC@gmail.com>
	<4D555002.5050202@pangalactic.us>
Message-ID: <3A448F57-3EBA-4418-9363-358F64A0939D@gmail.com>


On Feb 11, 2011, at 8:04 AM, Stephen Waterbury wrote:

> On 02/11/2011 01:30 AM, Lucas Taylor wrote:
>> On Feb 10, 2011, at 1:24 PM, Stephen Waterbury wrote:
>>
>>> This url should really be linked either from Twisted's main page
>>> or at the very least on the "Twisted Community" page:
>>>
>>> https://launchpad.net/tx
>>>
>>
>> It is linked from here, with a description:
>> http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted
>>
>> And there's this, too: http://twistedmatrix.com/trac/wiki/CommunityCode
>
> Ha, you're just saying that so Glyph won't volunteer you to change
> anything!  Slacker!  ;)
>
> Steve
>

Threats of bear combat and now, the looming spectre of something  
called a Problem Horse, have made me very careful about what I'll  
commit to.

I just don't want any trouble...




From jrennie at gmail.com  Fri Feb 11 13:48:38 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Fri, 11 Feb 2011 13:48:38 -0500
Subject: [Twisted-Python] sigchld
In-Reply-To: <20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
	<20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
	<AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>
	<20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>
Message-ID: <AANLkTimHTNsASmcoAL92JAXgFFDc0BytYBzw69SZq9u9@mail.gmail.com>

On Fri, Feb 11, 2011 at 11:55 AM, <exarkun at twistedmatrix.com> wrote:

> For shutdown-type things, reactor.addSystemEventTrigger(phase,
> 'shutdown', f) might be better than getting into signal handlers (where
> phase is 'before', 'during', or 'after').


That might be a better way to go.  Thanks for the tip.

Jason

-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110211/ba25d7bd/attachment.htm 

From glyph at twistedmatrix.com  Fri Feb 11 13:51:00 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 11 Feb 2011 13:51:00 -0500
Subject: [Twisted-Python] sigchld
In-Reply-To: <20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
	<20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
	<AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>
	<20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>
Message-ID: <7C72A0A0-1914-4283-834D-1FFD92ED9C60@twistedmatrix.com>


On Feb 11, 2011, at 11:55 AM, exarkun at twistedmatrix.com wrote:

> On 03:59 pm, jrennie at gmail.com wrote:
>> On Fri, Feb 11, 2011 at 10:01 AM, <exarkun at twistedmatrix.com> wrote:
>>> On Python 2.5 and earlier you won't be able to get Twisted's SIGCHLD
>>> handler using signal.getsignal.
>> 
>> We're also moving to python 2.6 (the change is really Debian 5 to 
>> Debian 6).
>> Should it would work in 2.6?
> 
> I think so.
>> 
>>> What sort of things do your signal handlers do?
>> 
>> IIRC, the main thing is to shut down the web server (cherrypy) we're 
>> running
>> in parallel with twisted.  We also have some disk-caching for stateful
>> signals which needs to ensure the cache file is up-to-date.
> 
> For shutdown-type things, reactor.addSystemEventTrigger(phase, 
> 'shutdown', f) might be better than getting into signal handlers (where 
> phase is 'before', 'during', or 'after').


There's already a system event trigger already hooked up to the reactor: your main service's stopService call.  If your cherrypy webserver is wrapped up in an IService implementation in the service hierarchy constructed in your twistd plugin or tac file, you can just implement 'stopService' and not do any manual registration with event triggers.  This is really a better way to go in general, as it's easier for other API consumers to deal with such an object than using the global broadcasting mechanism in the reactor.

If you do want to manually add your own system event trigger, in most interesting cases you'll need to use the 'before' phase.  During 'before', Deferreds returned by event triggers are respected (i.e. the reactor keeps running as long as they haven't fired).  If you schedule one for 'during' or 'after', the event trigger really needs to do all of its work and complete it immediately (i.e. before returning).



From exarkun at twistedmatrix.com  Sun Feb 13 00:05:20 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 13 Feb 2011 05:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1297573521.0.478896052@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110213/6e451737/attachment.htm 

From glyph at twistedmatrix.com  Sun Feb 13 16:51:34 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 13 Feb 2011 16:51:34 -0500
Subject: [Twisted-Python] are you a bad enough dude to rescue Twisted?
Message-ID: <F3E51D82-66F2-44CD-AEA1-0C0710FF3785@twistedmatrix.com>

In the hopes of motivating some more contributions to Twisted, we've whipped up a little hack to incentivize more people to contribute patches, and especially, to do reviews:

<http://twistedmatrix.com/highscores/>

Scoring begins on the first of each month.  The scoring algorithm isn't completely finalized so you may see your scores shift around a little bit, but this shouldn't affect rankings too much.  At some point, we plan to give out some kind of prizes based on points; but the main motivation is just getting your name to the top of that list.

Good luck everybody!  Now: go take down exarkun!

(Nota bene: since hackers like trying to find weaknesses in systems like this, let me say right up front that the scoreboard isn't particularly resilient to gaming.  It operates on a presumption of good faith; we assume that all contributions are as good as they can be.  If you violate this presumption and waste our time by generating bogus trac traffic, I can guarantee you won't like the results.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110213/e448dbd2/attachment.htm 

From stephen at thorne.id.au  Sun Feb 13 22:48:33 2011
From: stephen at thorne.id.au (Stephen Thorne)
Date: Mon, 14 Feb 2011 13:48:33 +1000
Subject: [Twisted-Python] are you a bad enough dude to rescue Twisted?
In-Reply-To: <F3E51D82-66F2-44CD-AEA1-0C0710FF3785@twistedmatrix.com>
References: <F3E51D82-66F2-44CD-AEA1-0C0710FF3785@twistedmatrix.com>
Message-ID: <20110214034833.GA2870@thorne.id.au>

On 2011-02-13, Glyph Lefkowitz wrote:
> In the hopes of motivating some more contributions to Twisted, we've
> whipped up a little hack to incentivize more people to contribute
> patches, and especially, to do reviews:
> 
> <http://twistedmatrix.com/highscores/>

I have a question about this item from the scores:

'15 points for committing a fix from a contributor'

How is this calculated? I created a branch for #4844 but my score didn't
jump, did I do it wrong? Is there a procedure I muffed up (commit
message format)?

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue


From glyph at twistedmatrix.com  Sun Feb 13 23:00:05 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 13 Feb 2011 23:00:05 -0500
Subject: [Twisted-Python] are you a bad enough dude to rescue Twisted?
In-Reply-To: <20110214034833.GA2870@thorne.id.au>
References: <F3E51D82-66F2-44CD-AEA1-0C0710FF3785@twistedmatrix.com>
	<20110214034833.GA2870@thorne.id.au>
Message-ID: <B6070B22-42BB-472E-9B10-5D2ED8404A8A@twistedmatrix.com>


On Feb 13, 2011, at 10:48 PM, Stephen Thorne wrote:

> On 2011-02-13, Glyph Lefkowitz wrote:
>> In the hopes of motivating some more contributions to Twisted, we've
>> whipped up a little hack to incentivize more people to contribute
>> patches, and especially, to do reviews:
>> 
>> <http://twistedmatrix.com/highscores/>
> 
> I have a question about this item from the scores:
> 
> '15 points for committing a fix from a contributor'
> 
> How is this calculated? I created a branch for #4844 but my score didn't
> jump, did I do it wrong? Is there a procedure I muffed up (commit
> message format)?

This is committing a fix, i.e. the commit which closes a ticket with the status 'fixed'.  Applying code to a branch does not have an associated score.  (And yes, it depends on the commit message format, but if you're committing to trunk you're probably paying much closer attention.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110213/68df695c/attachment.htm 

From bra at fsn.hu  Tue Feb 15 05:36:28 2011
From: bra at fsn.hu (Attila Nagy)
Date: Tue, 15 Feb 2011 11:36:28 +0100
Subject: [Twisted-Python] What's the purpose of __?
Message-ID: <4D5A572C.90508@fsn.hu>

Hi,

I'm trying to do an LMTP implementation based on smtp.py and came to the 
issue of class private variables with double underscores.
Examples:
http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L746
http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L815
and a lot of occurrences in this file.

This makes me a problem, because I override some functions in a class, 
named LMTP, so these cannot work together.

What's the rationale of using these, instead of static names?

Thanks,



From jrennie at gmail.com  Tue Feb 15 08:58:24 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Tue, 15 Feb 2011 08:58:24 -0500
Subject: [Twisted-Python] sigchld
In-Reply-To: <7C72A0A0-1914-4283-834D-1FFD92ED9C60@twistedmatrix.com>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
	<20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
	<AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>
	<20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>
	<7C72A0A0-1914-4283-834D-1FFD92ED9C60@twistedmatrix.com>
Message-ID: <AANLkTi=7QRv8v3QYLQi8ybaP332WwXVtCv-PEr1y1o=Q@mail.gmail.com>

Thanks for all the help.  We're going with addSystemEventTrigger for now,
but we'll keep twistd in mind for future work.

Jason

On Fri, Feb 11, 2011 at 1:51 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Feb 11, 2011, at 11:55 AM, exarkun at twistedmatrix.com wrote:
>
> > On 03:59 pm, jrennie at gmail.com wrote:
> >> On Fri, Feb 11, 2011 at 10:01 AM, <exarkun at twistedmatrix.com> wrote:
> >>> On Python 2.5 and earlier you won't be able to get Twisted's SIGCHLD
> >>> handler using signal.getsignal.
> >>
> >> We're also moving to python 2.6 (the change is really Debian 5 to
> >> Debian 6).
> >> Should it would work in 2.6?
> >
> > I think so.
> >>
> >>> What sort of things do your signal handlers do?
> >>
> >> IIRC, the main thing is to shut down the web server (cherrypy) we're
> >> running
> >> in parallel with twisted.  We also have some disk-caching for stateful
> >> signals which needs to ensure the cache file is up-to-date.
> >
> > For shutdown-type things, reactor.addSystemEventTrigger(phase,
> > 'shutdown', f) might be better than getting into signal handlers (where
> > phase is 'before', 'during', or 'after').
>
>
> There's already a system event trigger already hooked up to the reactor:
> your main service's stopService call.  If your cherrypy webserver is wrapped
> up in an IService implementation in the service hierarchy constructed in
> your twistd plugin or tac file, you can just implement 'stopService' and not
> do any manual registration with event triggers.  This is really a better way
> to go in general, as it's easier for other API consumers to deal with such
> an object than using the global broadcasting mechanism in the reactor.
>
> If you do want to manually add your own system event trigger, in most
> interesting cases you'll need to use the 'before' phase.  During 'before',
> Deferreds returned by event triggers are respected (i.e. the reactor keeps
> running as long as they haven't fired).  If you schedule one for 'during' or
> 'after', the event trigger really needs to do all of its work and complete
> it immediately (i.e. before returning).
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110215/c1ec80d0/attachment.htm 

From phil at bubblehouse.org  Tue Feb 15 17:03:21 2011
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 15 Feb 2011 17:03:21 -0500
Subject: [Twisted-Python] What's the purpose of __?
In-Reply-To: <4D5A572C.90508@fsn.hu>
References: <4D5A572C.90508@fsn.hu>
Message-ID: <27550B11-D65B-45C9-9376-85D598A31457@bubblehouse.org>

On Feb 15, 2011, at 5:36 AM, Attila Nagy wrote:
> Hi,
> 
> I'm trying to do an LMTP implementation based on smtp.py and came to the 
> issue of class private variables with double underscores.
> Examples:
> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L746
> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L815
> and a lot of occurrences in this file.
> 
> This makes me a problem, because I override some functions in a class, 
> named LMTP, so these cannot work together.
> 
> What's the rationale of using these, instead of static names?

I've got no idea of the rationale for using double-underscore notation, but why does that prevent you from subclassing it? Just add the class name to it for access:

class A:
    def __init__(self):
        self.__test = 'test'

a = A()

print a._A__test



-phil

From jrennie at gmail.com  Tue Feb 15 17:33:44 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Tue, 15 Feb 2011 17:33:44 -0500
Subject: [Twisted-Python] What's the purpose of __?
In-Reply-To: <4D5A572C.90508@fsn.hu>
References: <4D5A572C.90508@fsn.hu>
Message-ID: <AANLkTimXNPAVK0jnL-xch7bXTCMARxYkwB2nVLmaFcje@mail.gmail.com>

In case you haven't seen it, here's what the python tutorial says about
double-underscore:

http://docs.python.org/tutorial/classes.html#private-variables

Jason

On Tue, Feb 15, 2011 at 5:36 AM, Attila Nagy <bra at fsn.hu> wrote:

> Hi,
>
> I'm trying to do an LMTP implementation based on smtp.py and came to the
> issue of class private variables with double underscores.
> Examples:
> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L746
> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L815
> and a lot of occurrences in this file.
>
> This makes me a problem, because I override some functions in a class,
> named LMTP, so these cannot work together.
>
> What's the rationale of using these, instead of static names?
>
> Thanks,
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110215/a6c90a37/attachment.htm 

From superdupont at gmail.com  Wed Feb 16 07:00:36 2011
From: superdupont at gmail.com (Carlos Valiente)
Date: Wed, 16 Feb 2011 12:00:36 +0000
Subject: [Twisted-Python] transport.write(a + b) versus [transport.write(a);
	transport.write(b)]
Message-ID: <AANLkTi=xq3cck6DT_=MOkwQFmtXhHRsAm++OqJBjUMhe@mail.gmail.com>



From itamar at itamarst.org  Wed Feb 16 08:05:29 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 16 Feb 2011 08:05:29 -0500
Subject: [Twisted-Python] transport.write(a + b) versus
 [transport.write(a); transport.write(b)]
In-Reply-To: <AANLkTi=xq3cck6DT_=MOkwQFmtXhHRsAm++OqJBjUMhe@mail.gmail.com>
References: <AANLkTi=xq3cck6DT_=MOkwQFmtXhHRsAm++OqJBjUMhe@mail.gmail.com>
Message-ID: <1297861529.1687.9.camel@blake>

On Wed, 2011-02-16 at 12:00 +0000, Carlos Valiente wrote:
> From twisted.protocols.basic.IntNStringReceiver.sendString():
> 
>  def sendString(self, string):
>      self.transport.write(
>          struct.pack(self.structFormat, len(string)) + string)
> 
> Would it make sense to do something like this instead:
> 
>  def sendString(self, string):
>      self.transport.write(
>          struct.pack(self.structFormat, len(string)))
>      self.transport.write(string)
> 
> in order to avoid the creation of the extra string object?

Maybe it would be faster, maybe it wouldn't; instead of creating a new
string object, you're doing another function call. There is a
transport.writeSequence() method that takes a list, which can provide a
speed up, but more likely in cases where you have lots of small strings
rather than just two.

Some questions you might want to be asking:

1. Is your application fast enough? If it is, you're done.
2. Where are the performance bottlenecks in your application? This can
be determined with profiling.



From bra at fsn.hu  Wed Feb 16 10:17:51 2011
From: bra at fsn.hu (Attila Nagy)
Date: Wed, 16 Feb 2011 16:17:51 +0100
Subject: [Twisted-Python] What's the purpose of __?
In-Reply-To: <27550B11-D65B-45C9-9376-85D598A31457@bubblehouse.org>
References: <4D5A572C.90508@fsn.hu>
	<27550B11-D65B-45C9-9376-85D598A31457@bubblehouse.org>
Message-ID: <4D5BEA9F.6080309@fsn.hu>

  On 02/15/2011 11:03 PM, Phil Christensen wrote:
> On Feb 15, 2011, at 5:36 AM, Attila Nagy wrote:
>> Hi,
>>
>> I'm trying to do an LMTP implementation based on smtp.py and came to the
>> issue of class private variables with double underscores.
>> Examples:
>> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L746
>> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L815
>> and a lot of occurrences in this file.
>>
>> This makes me a problem, because I override some functions in a class,
>> named LMTP, so these cannot work together.
>>
>> What's the rationale of using these, instead of static names?
> I've got no idea of the rationale for using double-underscore notation, but why does that prevent you from subclassing it? Just add the class name to it for access:
>
> class A:
>      def __init__(self):
>          self.__test = 'test'
>
> a = A()
>
> print a._A__test
>
>
I can make it work, but I have to hardcode variable names like the above 
and I don't understand why is this needed. It's so ugly.

BTW, this is the situation:

class SMTP:
     def something(self):
         self.__inheader = True

class LMTP(SMTP)	
     def other(self):
         if self.__inheader == True:

and I get other from SMTP, and make some little tweaks. This way, I have to rename all variables in LMTP's functions from __stuff to _SMTP_stuff.




From bra at fsn.hu  Wed Feb 16 10:19:26 2011
From: bra at fsn.hu (Attila Nagy)
Date: Wed, 16 Feb 2011 16:19:26 +0100
Subject: [Twisted-Python] What's the purpose of __?
In-Reply-To: <AANLkTimXNPAVK0jnL-xch7bXTCMARxYkwB2nVLmaFcje@mail.gmail.com>
References: <4D5A572C.90508@fsn.hu>
	<AANLkTimXNPAVK0jnL-xch7bXTCMARxYkwB2nVLmaFcje@mail.gmail.com>
Message-ID: <4D5BEAFE.7020207@fsn.hu>

  Hi,

I know what it does, I just don't get why it was used in smtp.py. But 
you are right, I should have mentioned that in the subject (adding ... 
in smtp.py).

On 02/15/2011 11:33 PM, Jason Rennie wrote:
> In case you haven't seen it, here's what the python tutorial says 
> about double-underscore:
>
> http://docs.python.org/tutorial/classes.html#private-variables
>
> Jason
>
> On Tue, Feb 15, 2011 at 5:36 AM, Attila Nagy <bra at fsn.hu 
> <mailto:bra at fsn.hu>> wrote:
>
>     Hi,
>
>     I'm trying to do an LMTP implementation based on smtp.py and came
>     to the
>     issue of class private variables with double underscores.
>     Examples:
>     http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L746
>     http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L815
>     and a lot of occurrences in this file.
>
>     This makes me a problem, because I override some functions in a class,
>     named LMTP, so these cannot work together.
>
>     What's the rationale of using these, instead of static names?
>
>     Thanks,
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
> -- 
> Jason Rennie
> Research Scientist, ITA Software
> 617-714-2645
> http://www.itasoftware.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110216/dfd00455/attachment.htm 

From exarkun at twistedmatrix.com  Wed Feb 16 10:42:18 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 16 Feb 2011 15:42:18 -0000
Subject: [Twisted-Python] What's the purpose of __?
In-Reply-To: <4D5BEAFE.7020207@fsn.hu>
References: <4D5A572C.90508@fsn.hu>
	<AANLkTimXNPAVK0jnL-xch7bXTCMARxYkwB2nVLmaFcje@mail.gmail.com>
	<4D5BEAFE.7020207@fsn.hu>
Message-ID: <20110216154218.1914.1934281789.divmod.xquotient.227@localhost.localdomain>

On 03:19 pm, bra at fsn.hu wrote:
>  Hi,
>
>I know what it does, I just don't get why it was used in smtp.py. But 
>you are right, I should have mentioned that in the subject (adding ... 
>in smtp.py).

The original author's intent is long since lost at this point.  However, 
a safe guess is that these attributes are not intended to be exposed to 
users of the code (such as your LMTP subclass).

If you think there are good reasons for the attributes to be public 
instead, then file a ticket explaining why, attach a patch (don't forget 
unit tests), and add the "review" keyword 
(<http://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs>).

Because Twisted aims for a very high degree of backwards compatibility 
in its public interfaces, some care will need to go into this change. 
The meaning of the attributes will need documentation and unit tests. 
State transitions need to be considered carefully.  Consequences of the 
attributes being changed by user code need to be taken into account.

Perhaps the best place to start is to discuss what functionality becomes 
possible to implement if the "__inbody" protocol state tracking 
attribute becomes public.  When does an application care about this 
protocol-level transition?  When would it ever be legitimate to change 
its value outside of the base protocol implementation?

Jean-Paul


From itamar at itamarst.org  Thu Feb 17 14:37:28 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 17 Feb 2011 14:37:28 -0500
Subject: [Twisted-Python] Looking for intern (and full time developers)
Message-ID: <ae569b0ee96df7eff8f87808799c8a2c.squirrel@webmail.zoteca.com>

Hi everyone,

My group at ITA Software, Availability and Inventory Control, is looking
for an intern. Inventory Control in this context is a core part of an
airline's reservation system, and we are currently hard at work developing
for American Airlines:

http://www.prnewswire.com/news-releases/american-airlines-selects-ita-software-for-next-generation-availability-engine-113456379.html

As part of our efforts, we're looking for an intern (for the summer, but
could also be earlier). Large parts of our system are written in Python
using Twisted, and so Twisted experience would be helpful. The current
plan is to have the intern develop some of our XML processing
infrastructure, but depending on experience or circumstances other
projects may be chosen.

You can apply here:
http://www.itasoftware.com/careers/work-at-ita/showjob.html?uid=745590

We are also hiring for many full time positions, some of which may involve
the use of Twisted, in particular the Operations group infrastructure.
Other positions will have you coding in Common Lisp (learned on the job,
typically), Java, C++ and more:
http://www.itasoftware.com/careers/

ITA Software is located in lovely Cambridge, MA, home to MIT and Harvard.
Google is currently attempting to acquire ITA, pending approval by the
government.

If you apply for a position at ITA, especially the intern position, please
mention my name and email me to let me know.

--Itamar



From Andy.Henshaw at gtri.gatech.edu  Thu Feb 17 16:38:34 2011
From: Andy.Henshaw at gtri.gatech.edu (Andy.Henshaw at gtri.gatech.edu)
Date: Thu, 17 Feb 2011 21:38:34 +0000
Subject: [Twisted-Python] A thread in isolation
Message-ID: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>

I apologize in advance - another question about Twisted and threading.  I just seem to have trouble with this and I'm hoping my example is simple enough that a good explanation will be forthcoming.

I'm trying to start and stop Twisted in its own thread, over and over.  I've seen some notes that say this is a bad idea and that programs that do so should be restructured.  But, it would really work better for this application if I could do it somehow.

My controlling thread just wants to start Twisted, let it do its thing, and then let the thread stop.  Later on, I'd like to do it again.  In the example code below, the thread runs and stops fine in the first iteration.  In the second iteration, it starts, seems to run okay, but it never stops.  Is this an unreasonable request?

from threading import Thread
from twisted.internet import reactor
from twisted.internet import protocol

PORT = 9999

class AgentManager(Thread):
    def run(self):
        print '\nstarting agentmanager', self

        reactor.connectTCP('localhost', PORT, AgentClientFactory())
        reactor.listenTCP(PORT, AgentServerFactory())

        reactor.callLater(5, reactor.stop)
        reactor.run(installSignalHandlers=0)


class Producer(protocol.Protocol):
    def connectionMade(self):
        print 'connection made'
        self.transport.write('Hello')

    def connectionLost(self, reason):
        print 'connection lost'


class Consumer(protocol.Protocol):
    def dataReceived(self, data):
        print data

class AgentServerFactory(protocol.ServerFactory):
    protocol = Producer


class AgentClientFactory(protocol.ClientFactory):
    protocol = Consumer


if __name__ == '__main__':
    for i in range(3):
        mgr = AgentManager()
        mgr.start()
        mgr.join()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110217/8bcd120a/attachment.htm 

From p.mayers at imperial.ac.uk  Thu Feb 17 17:11:07 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 17 Feb 2011 22:11:07 +0000
Subject: [Twisted-Python] A thread in isolation
In-Reply-To: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
References: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
Message-ID: <4D5D9CFB.8040303@imperial.ac.uk>

On 02/17/2011 09:38 PM, Andy.Henshaw at gtri.gatech.edu wrote:

> My controlling thread just wants to start Twisted, let it do its thing,
> and then let the thread stop. Later on, I?d like to do it again. In the

That's your problem. The reactor is not, in general, restartable.

You need to start it only once and keep running it I'm afraid.


From exarkun at twistedmatrix.com  Thu Feb 17 17:45:49 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 17 Feb 2011 22:45:49 -0000
Subject: [Twisted-Python] A thread in isolation
In-Reply-To: <4D5D9CFB.8040303@imperial.ac.uk>
References: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
	<4D5D9CFB.8040303@imperial.ac.uk>
Message-ID: <20110217224549.1914.1848060271.divmod.xquotient.229@localhost.localdomain>

On 10:11 pm, p.mayers at imperial.ac.uk wrote:
>On 02/17/2011 09:38 PM, Andy.Henshaw at gtri.gatech.edu wrote:
>>My controlling thread just wants to start Twisted, let it do its 
>>thing,
>>and then let the thread stop. Later on, I 19d like to do it again. In 
>>the
>
>That's your problem. The reactor is not, in general, restartable.
>
>You need to start it only once and keep running it I'm afraid.

Or, feel free to implement restartability and send us a patch! :)

Jean-Paul


From jrennie at gmail.com  Thu Feb 17 17:59:01 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Thu, 17 Feb 2011 17:59:01 -0500
Subject: [Twisted-Python] A thread in isolation
In-Reply-To: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
References: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
Message-ID: <AANLkTiko8xB=k8G-ygjb8v6yiBUZNjcmCDiYnkwkJH6m@mail.gmail.com>

What's the larger problem you're trying to solve?

Jason

On Thu, Feb 17, 2011 at 4:38 PM, <Andy.Henshaw at gtri.gatech.edu> wrote:

> I apologize in advance ? another question about Twisted and threading.  I
> just seem to have trouble with this and I?m hoping my example is simple
> enough that a good explanation will be forthcoming.
>
>
>
> I?m trying to start and stop Twisted in its own thread, over and over.
> I?ve seen some notes that say this is a bad idea and that programs that do
> so should be restructured.  But, it would really work better for this
> application if I could do it somehow.
>
>
>
> My controlling thread just wants to start Twisted, let it do its thing, and
> then let the thread stop.  Later on, I?d like to do it again.  In the
> example code below, the thread runs and stops fine in the first iteration.
> In the second iteration, it starts, seems to run okay, but it never stops.
> Is this an unreasonable request?
>
>
>
> from threading import Thread
>
> from twisted.internet import reactor
>
> from twisted.internet import protocol
>
>
>
> PORT = 9999
>
>
>
> class AgentManager(Thread):
>
>     def run(self):
>
>         print '\nstarting agentmanager', self
>
>
>
>         reactor.connectTCP('localhost', PORT, AgentClientFactory())
>
>         reactor.listenTCP(PORT, AgentServerFactory())
>
>
>
>         reactor.callLater(5, reactor.stop)
>
>         reactor.run(installSignalHandlers=0)
>
>
>
>
>
> class Producer(protocol.Protocol):
>
>     def connectionMade(self):
>
>         print 'connection made'
>
>         self.transport.write('Hello')
>
>
>
>     def connectionLost(self, reason):
>
>         print 'connection lost'
>
>
>
>
>
> class Consumer(protocol.Protocol):
>
>     def dataReceived(self, data):
>
>         print data
>
>
>
> class AgentServerFactory(protocol.ServerFactory):
>
>     protocol = Producer
>
>
>
>
>
> class AgentClientFactory(protocol.ClientFactory):
>
>     protocol = Consumer
>
>
>
>
>
> if __name__ == '__main__':
>
>     for i in range(3):
>
>         mgr = AgentManager()
>
>         mgr.start()
>
>         mgr.join()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110217/9035114a/attachment-0001.htm 

From Andy.Henshaw at gtri.gatech.edu  Thu Feb 17 22:48:37 2011
From: Andy.Henshaw at gtri.gatech.edu (Andy.Henshaw at gtri.gatech.edu)
Date: Fri, 18 Feb 2011 03:48:37 +0000
Subject: [Twisted-Python] A thread in isolation
In-Reply-To: <AANLkTiko8xB=k8G-ygjb8v6yiBUZNjcmCDiYnkwkJH6m@mail.gmail.com>
References: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
	<AANLkTiko8xB=k8G-ygjb8v6yiBUZNjcmCDiYnkwkJH6m@mail.gmail.com>
Message-ID: <A9B1577E2DCC7545A1018EC14CC4B8BE4C28286B@apatlisdmbx01>

I have a wxPython app that starts up a network-intensive process.  I played with wxReactor, but found the performance of the separate thread much better.  The GUI has very little interaction with the twisted thread.  Once the network process is done,  I'm done with the services.  At that point, I set up another set of consumers and producers in which all of the service parameters can be changed (host address, port, client/server,  and protocol) and start them running.

Since my approach is not workable, I'll restructure the app to leave the reactor running until the program exits.

From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jason Rennie
Sent: Thursday, February 17, 2011 5:59 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] A thread in isolation

What's the larger problem you're trying to solve?

Jason
On Thu, Feb 17, 2011 at 4:38 PM, <Andy.Henshaw at gtri.gatech.edu<mailto:Andy.Henshaw at gtri.gatech.edu>> wrote:
I apologize in advance - another question about Twisted and threading.  I just seem to have trouble with this and I'm hoping my example is simple enough that a good explanation will be forthcoming.

I'm trying to start and stop Twisted in its own thread, over and over.  I've seen some notes that say this is a bad idea and that programs that do so should be restructured.  But, it would really work better for this application if I could do it somehow.

My controlling thread just wants to start Twisted, let it do its thing, and then let the thread stop.  Later on, I'd like to do it again.  In the example code below, the thread runs and stops fine in the first iteration.  In the second iteration, it starts, seems to run okay, but it never stops.  Is this an unreasonable request?

from threading import Thread
from twisted.internet import reactor
from twisted.internet import protocol

PORT = 9999

class AgentManager(Thread):
    def run(self):
        print '\nstarting agentmanager', self

        reactor.connectTCP('localhost', PORT, AgentClientFactory())
        reactor.listenTCP(PORT, AgentServerFactory())

        reactor.callLater(5, reactor.stop)
        reactor.run(installSignalHandlers=0)


class Producer(protocol.Protocol):
    def connectionMade(self):
        print 'connection made'
        self.transport.write('Hello')

    def connectionLost(self, reason):
        print 'connection lost'


class Consumer(protocol.Protocol):
    def dataReceived(self, data):
        print data

class AgentServerFactory(protocol.ServerFactory):
    protocol = Producer


class AgentClientFactory(protocol.ClientFactory):
    protocol = Consumer


if __name__ == '__main__':
    for i in range(3):
        mgr = AgentManager()
        mgr.start()
        mgr.join()

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com>
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



--
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110218/36485b65/attachment.htm 

From mike at mv3d.com  Sat Feb 19 16:39:00 2011
From: mike at mv3d.com (Michael Handverger)
Date: Sat, 19 Feb 2011 16:39:00 -0500 (EST)
Subject: [Twisted-Python] ANN: MV3D 0.50 released!
In-Reply-To: <4570463.17.1298151029833.JavaMail.mike@mdhprod>
Message-ID: <2667824.19.1298151528224.JavaMail.mike@mdhprod>

I?m pleased to announce the v0.50 release of MV3D! With this new release, we are considering MV3D to be beta, which means future releases should not break backwards compatibility with existing data or API calls. The framework gains several major features this release such as a path-finding system for AI controlled characters (NPCs) and support for the Panda3D rendering engine.

Besides new features, an incredible amount of bugs have been fixed. Many of these include performance and tool chain fixes which together make this the most stable release of MV3D to date. To add to the polish, in 0.50, a user manual was added as a reference to new users.

MV3D is an open source virtual world simulation framework written in Python which uses Twisted for networking. It was designed with scalability in mind and aims to be able to distribute a world across as many servers as needed with dynamic load balancing.

For more information on MV3D and this or future releases, please visit the website at http://www.mv3d.com. The full release notes for version 0.5 are available at this url: http://www.mv3d.com/trac/browser/tags/mv3d-0.50/release-notes.txt

Also, feel free to stop by the IRC chat room, #MV3D on irc.freenode.net.

Thanks,
Mike


From exarkun at twistedmatrix.com  Sun Feb 20 00:05:23 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 20 Feb 2011 05:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1298178323.26.1517974983@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110220/6d78d165/attachment.htm 

From jason.heeris at gmail.com  Mon Feb 21 01:26:45 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 14:26:45 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
Message-ID: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>

I'm still a little confused about exactly how to deal with errors and
responses using protocols and factories. I think a lot of my
misunderstanding stems from the fact that I'm using serial (and
inter-process) communications, both of which Twisted treats rather
differently from TCP based connections ? and all of the documentation
is TCP-centric.

Anyway, say I have a serial device that I send a single-line command
to, and expect a certain format of response. There are about a hundred
possible commands, but they all follow the same pattern, so I have a
CommandProtocol (some details omitted):

    class CommandProtocol(LineOnlyReceiver, TimeoutMixin):

        # For LineOnlyReceiver
        MAX_LENGTH = 20

        def parseReply(self, line):
            if line[0:4] != self.command:
                raise CommandReplyError(self.command, self.line)

            # Parse rest of response
            return reply

        def lineReceived(self, line):
            self.setTimeout(None)
            try:
                reply = self.parseReply(line)
            except:
                # ...?
            else:
                self.factory.commandCompleted(reply)
                # ...maybe?
            finally:
                self.loseConnection()

        def connectionMade(self):
            self.sendLine(self.construct_message())
            self.setTimeout(self.DEFAULT_TIMEOUT)

So I can then write a factory with a buildProtocol method that takes
an object with the command string, sets the appropriate attributes on
the protocol, and returns that for use with the SerialPort transport.

Peticolas' tutorial[1] shows the protocol calling a factory method
when the correct data is received. I understand that part fine. But as
far as I can tell, all the error handling relies on the
ClientFactory's clientConnectionFailed method ? and I have no idea
when or how this is triggered. I *am* under the impression that it
won't ever be triggered on a SerialTransport, though, which means it
won't work for me.

[1] https://github.com/jdavisp3/twisted-intro/blob/master/twisted-client-8/get-poetry.py#L64

What should my protocol do if there's an error? I notice that
protocols like LineReceiver and NetstringReceiver just silently ignore
such problems and let whatever handles connection failures sort it
out; but again, this won't work for a serial transport. Even
explicitly calling "loseConnection" won't trigger a subsequent
"connectionLost" call.

So how should I handle reply parsing errors, timeouts,
LineReceiver-internal errors (eg. a too-long line) and whatever else
might happen?

One approach I considered was for my factory to pass my protocol a
deferred. The factory would chain another deferred to this one which
it could return to the caller. The protocol could then callback or
errback *it's* deferred with a result or error. I know how to
implement this, but I see that none of the protocols in Twisted (or
any of the examples, or the tutorials) do anything like this ? it's
all just assembly and disassembly of the data and a call to a factory
method. This makes me think that I'm doing it wrong. There's also the
fact that protocol errors will be handled inconsistently: errors in
*my* parsing methods will show up to callers of the factory methods,
but errors in Twisted's parsing will pass silently.

Another thing I could do is to have something like:

    def lineReceived(self, line):
        try:
            reply = self.parseReply(line)
        except:
            self.factory.commandFailed(failure.Failure())
        # ...other stuff from above

But again, this is inconsistent, and I've not seen anything else in
Twisted doing it this way.

So how I do I deal with protocol errors in a connectionless protocol?

Cheers,
Jason


From michaelnt at gmail.com  Mon Feb 21 01:50:40 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Mon, 21 Feb 2011 06:50:40 +0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
Message-ID: <AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>

On 21 February 2011 06:26, Jason Heeris <jason.heeris at gmail.com> wrote:
> So how I do I deal with protocol errors in a connectionless protocol?

This might be better expressed as how do you write a protocol to
handle errors when using an unreliable transport. It down to your
protocol as to how you need to handle errors by for instance sending a
NACK  or re-transmitting a request.


Michael


From jason.heeris at gmail.com  Mon Feb 21 02:00:17 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 15:00:17 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
Message-ID: <AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>

On 21 February 2011 14:50, Michael Thompson <michaelnt at gmail.com> wrote:
> This might be better expressed as how do you write a protocol to
> handle errors when using an unreliable transport. It down to your
> protocol as to how you need to handle errors by for instance sending a
> NACK ?or re-transmitting a request.

And what if that fails? Or times out? If this is part of a user driven
app, shouldn't the user be notified of an error at some point? What
I'm asking is: how do I communicate the failure of a protocol back to
the rest of the app?

? Jason


From michaelnt at gmail.com  Mon Feb 21 02:58:01 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Mon, 21 Feb 2011 07:58:01 +0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
	<AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>
Message-ID: <AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>

On 21 February 2011 07:00, Jason Heeris <jason.heeris at gmail.com> wrote:
> On 21 February 2011 14:50, Michael Thompson <michaelnt at gmail.com> wrote:
>> This might be better expressed as how do you write a protocol to
>> handle errors when using an unreliable transport. It down to your
>> protocol as to how you need to handle errors by for instance sending a
>> NACK ?or re-transmitting a request.
>
> And what if that fails? Or times out? If this is part of a user driven
> app, shouldn't the user be notified of an error at some point? What
> I'm asking is: how do I communicate the failure of a protocol back to
> the rest of the app?

The app should be waiting on the result of a deferred (which it
expects to fire with the result of the serial comms) so you can simply
errback that deferred.


From p.mayers at imperial.ac.uk  Mon Feb 21 03:59:26 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 21 Feb 2011 08:59:26 +0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
Message-ID: <4D62296E.3000302@imperial.ac.uk>

On 02/21/2011 06:26 AM, Jason Heeris wrote:
>
> So how I do I deal with protocol errors in a connectionless protocol?

I'm a little confused as to why this is a connectionless protocol, if 
it's talking on a serial port? Surely it's a singleton connection, with 
no connect/disconnect events?

I know next to nothing about using Twisted for serial, but why aren't 
you using a single long-lived protocol instance?


From jason.heeris at gmail.com  Mon Feb 21 05:39:39 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 18:39:39 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
	<AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>
	<AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>
Message-ID: <AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>

On 21 February 2011 15:58, Michael Thompson <michaelnt at gmail.com> wrote:
> The app should be waiting on the result of a deferred (which it
> expects to fire with the result of the serial comms) so you can simply
> errback that deferred.

I get that bit, but my question is essentially: what triggers the
errback? If the LineReceiver gets a line that's too long, *how* do I
errback on the deferred? Should the protocol hold the deferred? The
factory? Whatever creates the factory? Does it matter? ("No" would be
a fine answer to the last question, my whole problem is that I don't
really know the "Twisted" way to approach this, or if there even is
one.)

(I would ask: do I even need a factory? But the fact is that I do,
since all of the useful mixins and base classes rely on one being
present.)

? Jason


From jason.heeris at gmail.com  Mon Feb 21 05:59:14 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 18:59:14 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
	<AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>
	<AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>
	<AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>
Message-ID: <AANLkTi=16wrnGmBXotO0kEmwuo_kEDtwBbKGBwSGaeQt@mail.gmail.com>

On 21 February 2011 18:39, Jason Heeris <jason.heeris at gmail.com> wrote:
> (I would ask: do I even need a factory? But the fact is that I do,
> since all of the useful mixins and base classes rely on one being
> present.)

Just realised that actually, I'm using the TimeoutMixin, not the
TimeoutProtocol ? no factory is technically required.

So, *ahem*, do I even need a factory?

? Jason


From p.mayers at imperial.ac.uk  Mon Feb 21 06:18:12 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 21 Feb 2011 11:18:12 +0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>	<AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>	<AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>
	<AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>
Message-ID: <4D6249F4.9020207@imperial.ac.uk>

On 21/02/11 10:39, Jason Heeris wrote:
> On 21 February 2011 15:58, Michael Thompson<michaelnt at gmail.com>  wrote:
>> The app should be waiting on the result of a deferred (which it
>> expects to fire with the result of the serial comms) so you can simply
>> errback that deferred.
>
> I get that bit, but my question is essentially: what triggers the
> errback? If the LineReceiver gets a line that's too long, *how* do I
> errback on the deferred? Should the protocol hold the deferred? The
> factory? Whatever creates the factory? Does it matter? ("No" would be
> a fine answer to the last question, my whole problem is that I don't
> really know the "Twisted" way to approach this, or if there even is
> one.)

Normally, all the protocol logic, including sending commands and 
returning responses/errors, lives on the protocol.

For example, if you have a line-based proto it might look like this:

class MyProto(...bases...):

   def connectionMade(self):
     self.queue = []
     self.current = None

   def lineReceived(self, line):
     if self.current is None:
       # eh? we've received a line with no outstanding command
       return
     deferrred = self.current
     self.current = None

     try:
         # do some parsing
         result = parse(line)
     except:
         deferred.errback()
     else:
         deferred.callback(result)

     if self.queue:
         # there's an outstanding command
         deferred, cmd = self.queue.pop(0)
         self.current = deferred
         self.sendLine(cmd)

   def send_cmd(self, cmd)
     deferred = defer.Deferred()
     if self.current is None:
         # no outstanding command, issue this one
         self.current = deferred
         self.sendLine(cmd)
     else:
         # queue it, there's an outstanding command
         self.queue.append((deferred, cmd))
     return deferred


def test():
     d = proto.send_cmd('foo')
     d.addCallback(lambda x: ...)
     d.addErrback(lambda e: ...)


...you can then layer timeout, cancellation and other logic on top of 
this, using various techniques.


From jason.heeris at gmail.com  Mon Feb 21 06:21:22 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 19:21:22 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <4D62296E.3000302@imperial.ac.uk>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
Message-ID: <AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>

On 21 February 2011 16:59, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> I'm a little confused as to why this is a connectionless protocol, if
> it's talking on a serial port? Surely it's a singleton connection, with
> no connect/disconnect events?

There's a connectionMade event when you do SerialPort(protocol, ...).
There's no connectionLost event, even if you do that over and over
again.

> I know next to nothing about using Twisted for serial, but why aren't
> you using a single long-lived protocol instance?

Should I? I don't know. My problem is, as a newbie, I *just don't
know* what the usual way to approach a problem like this is. Or if
there is one.

So, please help me think this through... let's say I have this
long-lasting protocol. It needs to keep a DeferredLock, so it doesn't
try to send one message before it's received the reply for another ?
right? It should have a method for sending a command that returns a
Deferred, that will eventually fire with the response (parsed and
converted as necessary, that bit's easy). The bit I have trouble with
is that the *origin* of the Deferred callback or errback is the
"lineReceived" method ? somehow this method needs to know which
Deferred to callback with the response. But how?

Here's a sketch:

    class CommandProtocol(LineReceiver, TimeoutMixin):

        def __init__(self):
            self.lock = DeferredLock()

        def _runCommand(self, command):
            message = self.constructMessage(command)
            self.sendLine(message)

        def runCommand(self, command):
            d = self.lock.run(self._runCommand, command)
            d.addCallback(command.parseResponse)
            return d

Where does the bit go that fires the Deferred? Should I set it in
_runCommand somehow? I just can't seem to picture it.

Thanks,
Jason

PS. Twisted has great documentation for its individual components, but
as soon as you get into anything that doesn't centre around
"reactor.connectTCP", it seems like you're in the dark. All of the
examples and tutorials seem to have near-trivial, completely
synchronous protocols, requiring no back-and-forth or error handling.
Ultimately I'd like to take all of this advice, have an epiphany,
finish my project, bundle my new-found wisdom up into a neat little
package of things I think would make serial comms a happier experience
for all, and publish it somewhere. And maybe write about how to use
Twisted for non-internetty things. But I do need to actually
accomplish something first.


From jason.heeris at gmail.com  Mon Feb 21 06:26:28 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 19:26:28 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <4D6249F4.9020207@imperial.ac.uk>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
	<AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>
	<AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>
	<AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>
	<4D6249F4.9020207@imperial.ac.uk>
Message-ID: <AANLkTi=gaX0VPNzECK3BFk+VZT0ZFcGEQeicntgp9_Q9@mail.gmail.com>

On 21 February 2011 19:18, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> For example, if you have a line-based proto it might look like this:

Aha, I think you might just have answered my question before I asked
it. Which seems appropriate somehow.

I think the DeferredQueue does some of this for me, so I'll look into it.

Cheers,
Jason


From exarkun at twistedmatrix.com  Mon Feb 21 08:30:10 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 21 Feb 2011 13:30:10 -0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
Message-ID: <20110221133010.1914.253284685.divmod.xquotient.265@localhost.localdomain>

On 11:21 am, jason.heeris at gmail.com wrote:
>On 21 February 2011 16:59, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>>I'm a little confused as to why this is a connectionless protocol, if
>>it's talking on a serial port? Surely it's a singleton connection, 
>>with
>>no connect/disconnect events?
>
>There's a connectionMade event when you do SerialPort(protocol, ...).
>There's no connectionLost event, even if you do that over and over
>again.

Not intentionally:

  http://twistedmatrix.com/trac/ticket/3690

Jean-Paul


From jason.heeris at gmail.com  Mon Feb 21 09:06:18 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 22:06:18 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <20110221133010.1914.253284685.divmod.xquotient.265@localhost.localdomain>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
	<20110221133010.1914.253284685.divmod.xquotient.265@localhost.localdomain>
Message-ID: <AANLkTikdu4t20ibrvFuJ35kAZ8gCe5tuty98hBCuYOQh@mail.gmail.com>

On 21 February 2011 21:30,  <exarkun at twistedmatrix.com> wrote:
> Not intentionally:
>
> ?http://twistedmatrix.com/trac/ticket/3690

Interesting...

As an aside, the problem of serial port availability for unit tests is
something I've encountered before too. I solved it by using "socat" to
create virtual serial ports with known names (paths on *nix, COM
numbers on Windows), and ran my tests using that. In fact, the test
for the patch in #3690 only requires that the port exists, not that it
does anything, which is even easier than actually requiring the port
to do anything.

I don't know if that's viable for a Twisted test though, since it's an
external binary. Maybe the functionality could be replicated in pure
Python, but that'd be a lot of work.

? Jason


From jrennie at gmail.com  Mon Feb 21 09:45:43 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Mon, 21 Feb 2011 09:45:43 -0500
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
Message-ID: <AANLkTin-VH=MvFsmLywqHqYdqhqcSQrAj8W9OO_OgmOO@mail.gmail.com>

(...catching up on this thread...)

On Mon, Feb 21, 2011 at 6:21 AM, Jason Heeris <jason.heeris at gmail.com>wrote:

> There's a connectionMade event when you do SerialPort(protocol, ...).
> There's no connectionLost event, even if you do that over and over
> again.
>

As Jean-Paul noted, that's a genuine bug with Twisted.  However, since
Twisted is pure python, you can likely override the SerialPort class and
make user-land changes to fix the issue.  Maybe you'd even be able to help
review or fix the bug? :)  See the following link for guidelines:

http://twistedmatrix.com/trac/wiki/TwistedDevelopment

Should I? I don't know. My problem is, as a newbie, I *just don't
> know* what the usual way to approach a problem like this is. Or if
> there is one.
>

IIUC, SerialPort doesn't work with the twisted factory infrastructure.
 Factories are used to persist data across different connections.  With
SerialPort, there's just one connection.  Any data you want to store (e.g. a
Deferred) should go in your protocol.

So, please help me think this through... let's say I have this
> long-lasting protocol. It needs to keep a DeferredLock, so it doesn't
> try to send one message before it's received the reply for another ?
> right? It should have a method for sending a command that returns a
> Deferred, that will eventually fire with the response (parsed and
> converted as necessary, that bit's easy). The bit I have trouble with
> is that the *origin* of the Deferred callback or errback is the
> "lineReceived" method ? somehow this method needs to know which
> Deferred to callback with the response. But how?
>

Sounds like you just need a queue of pending commands and a state object for
the currently executing command.  When runCommand() is called, add the
command to the pending queue.  If no command is running, pop the first
command in the queue and send it.  When you get a response, the state object
tells you what Deferred to fire.  Again, if there's a pending command, send
it.  Sketch:

def _runNext(self):
    if len(self.queue) > 0 and self.state == 'IDLE':
        self.state = 'PROCESSING'
        self.currentCmd, self.currentDeferred = self.queue.pop()
        self.sendLine(self.constructMessage(self.currentCmd))
def runCommand(self, command, callback):
    ret = Deferred()
    self.queue.append((command, ret))
    self._runNext(self)
    return ret
def lineReceived(self, line):
    self.state = 'IDLE'
    try:
        result = self.parseResponse(self.currentCmd, line)
        self.currentDeferred.callback(result)
    except Exception, err:
        self.currentDeferred.errback(err)
    self._runNext(self)


> PS. Twisted has great documentation for its individual components, but
> as soon as you get into anything that doesn't centre around
> "reactor.connectTCP", it seems like you're in the dark. All of the
> examples and tutorials seem to have near-trivial, completely
> synchronous protocols, requiring no back-and-forth or error handling.
> Ultimately I'd like to take all of this advice, have an epiphany,
> finish my project, bundle my new-found wisdom up into a neat little
> package of things I think would make serial comms a happier experience
> for all, and publish it somewhere. And maybe write about how to use
> Twisted for non-internetty things. But I do need to actually
> accomplish something first.


In case you haven't yet, see:

 http://twistedmatrix.com/pipermail/twisted-python/2011-January/023362.html

and follow-up threads.

Cheers,

Jason

-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110221/65e00e8c/attachment.htm 

From michaelnt at gmail.com  Mon Feb 21 13:16:24 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Mon, 21 Feb 2011 18:16:24 +0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTikdu4t20ibrvFuJ35kAZ8gCe5tuty98hBCuYOQh@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
	<20110221133010.1914.253284685.divmod.xquotient.265@localhost.localdomain>
	<AANLkTikdu4t20ibrvFuJ35kAZ8gCe5tuty98hBCuYOQh@mail.gmail.com>
Message-ID: <AANLkTimNWaQ8aY-K7z33kU7Evko6KHj6O7f-o8ujm+S6@mail.gmail.com>

On 21 February 2011 14:06, Jason Heeris <jason.heeris at gmail.com> wrote:
> On 21 February 2011 21:30, ?<exarkun at twistedmatrix.com> wrote:
>> Not intentionally:
>>
>> ?http://twistedmatrix.com/trac/ticket/3690
>
> Interesting...
>
> As an aside, the problem of serial port availability for unit tests is
> something I've encountered before too. I solved it by using "socat" to
> create virtual serial ports with known names (paths on *nix, COM
> numbers on Windows), and ran my tests using that. In fact, the test
> for the patch in #3690 only requires that the port exists, not that it
> does anything, which is even easier than actually requiring the port
> to do anything.

I'm in the process of writing a mock that will allow the serial port
testing to work without a physical port as I think this is the best
solution for the Twisted build farm. I have the posix part done and a
plan for the windows version, using named pipes.


From exarkun at twistedmatrix.com  Mon Feb 21 13:36:31 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 21 Feb 2011 18:36:31 -0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTimNWaQ8aY-K7z33kU7Evko6KHj6O7f-o8ujm+S6@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
	<20110221133010.1914.253284685.divmod.xquotient.265@localhost.localdomain>
	<AANLkTikdu4t20ibrvFuJ35kAZ8gCe5tuty98hBCuYOQh@mail.gmail.com>
	<AANLkTimNWaQ8aY-K7z33kU7Evko6KHj6O7f-o8ujm+S6@mail.gmail.com>
Message-ID: <20110221183631.1914.1425837474.divmod.xquotient.268@localhost.localdomain>

On 06:16 pm, michaelnt at gmail.com wrote:
>On 21 February 2011 14:06, Jason Heeris <jason.heeris at gmail.com> wrote:
>>On 21 February 2011 21:30, ?<exarkun at twistedmatrix.com> wrote:
>>>Not intentionally:
>>>
>>>?http://twistedmatrix.com/trac/ticket/3690
>>
>>Interesting...
>>
>>As an aside, the problem of serial port availability for unit tests is
>>something I've encountered before too. I solved it by using "socat" to
>>create virtual serial ports with known names (paths on *nix, COM
>>numbers on Windows), and ran my tests using that. In fact, the test
>>for the patch in #3690 only requires that the port exists, not that it
>>does anything, which is even easier than actually requiring the port
>>to do anything.
>
>I'm in the process of writing a mock that will allow the serial port
>testing to work without a physical port as I think this is the best
>solution for the Twisted build farm. I have the posix part done and a
>plan for the windows version, using named pipes.

Awesome!

Jean-Paul


From jason.heeris at gmail.com  Mon Feb 21 21:23:13 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 22 Feb 2011 10:23:13 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTin-VH=MvFsmLywqHqYdqhqcSQrAj8W9OO_OgmOO@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
	<AANLkTin-VH=MvFsmLywqHqYdqhqcSQrAj8W9OO_OgmOO@mail.gmail.com>
Message-ID: <AANLkTinCTZtxJ-j7k9PuGw+g0qcsYxdCvv4L0NUN6XD1@mail.gmail.com>

On 21 February 2011 22:45, Jason Rennie <jrennie at gmail.com> wrote:
> Sounds like you just need a queue of pending commands and a state object for
> the currently executing command.

Just for the sake of completeness, this is what I've ended up with. No
explicit queues, and the state is kept with a lock:

--------
class CommandProtocol(LineOnlyReceiver, TimeoutMixin):

    def __init__(self):
        self.lock = defer.DeferredLock()
        self.deferred = None

    def runCommand(self, command, payload=None):
        result = self.lock.run(self.sendCommand, command, payload)
        return result

    def sendCommand(self, command, payload=None):
        assert self.deferred is None, "Already waiting for reply!"

        # The parser uses these
        self.command = command
        self.sent = msg

        self.deferred = defer.Deferred()
        self.deferred.addCallback(self.parseReply)
        self.deferred.addBoth(self.cleanup)
        self.setTimeout(self.DEFAULT_TIMEOUT)
        self.sendLine(msg)
        return self.deferred

    def cleanup(self, res):
        self.deferred = None
        del self.command
        del self.sent
        return res

    def lineReceived(self, line):
        if self.deferred:
            self.setTimeout(None)
            self.deferred.callback(line)
        # If not, we've timed out or this is a spurious line

    def timeoutConnection(self):
        self.deferred.errback(
            Timeout("The device took too long to respond"))

    def parseReply(self, line):
        # Do parsing, raise synchronous errors if bad
        return reply
--------

Technically, things like self.command, self.sent, self.deferred etc.
could be closed over by nested functions, which could be set as the
callbacks, but that's just down to where and how you prefer to store
state. Besides, we all know that flat > nested ;)

Thanks for everyone's help!

? Jason


From jeanpierreda at gmail.com  Tue Feb 22 10:46:55 2011
From: jeanpierreda at gmail.com (Devin Jeanpierre)
Date: Tue, 22 Feb 2011 10:46:55 -0500
Subject: [Twisted-Python] Twisted Cred using network connections to check
	credentials
Message-ID: <AANLkTimGGUy7tdcWTk0f8i8QS-Yc6hH2zV6JEaKrmMM4@mail.gmail.com>

Hello,

I want to authenticate a user in twisted.cred by attempting to log him in to
an online service. If the authentication step of the connection fails, the
user gets no avatar, and if it succeeds, the user gets an avatar, and that
avatar either is or has a reference to that connection.

How would I do this? I can think of two ugly ways: I can use a global
dictionary mapping avatarIds to protocol instances, and do a lookup on that
dict in the Realm to create the avatar. Otherwise, I can instantiate the
connection as part of the credentials, and keep the reference to it around
when I get the avatar. I'm going ahead with the former, but it's scary.

Another possibility is that perhaps the credentials checker and the realm
could be the same object, and then I could move the global dict into an
attribute. Would that be a better approach?

The background for this is that I have an implementation of the chat part of
the Direct Connect (DC) protocol, and want to write an IRC<->DC bridge. I
chose twisted.words.services on the recommendation of someone, which uses
Cred for auth. DC has authentication as a given nick as part of the
"handshake" during the start of the connection attempt.

Devin Jeanpierre
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110222/0cdb1edc/attachment.htm 

From exarkun at twistedmatrix.com  Tue Feb 22 11:02:20 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 22 Feb 2011 16:02:20 -0000
Subject: [Twisted-Python] Twisted Cred using network connections to
	check	credentials
In-Reply-To: <AANLkTimGGUy7tdcWTk0f8i8QS-Yc6hH2zV6JEaKrmMM4@mail.gmail.com>
References: <AANLkTimGGUy7tdcWTk0f8i8QS-Yc6hH2zV6JEaKrmMM4@mail.gmail.com>
Message-ID: <20110222160220.1914.1839448269.divmod.xquotient.273@localhost.localdomain>

On 03:46 pm, jeanpierreda at gmail.com wrote:
>Hello,
>
>I want to authenticate a user in twisted.cred by attempting to log him 
>in to
>an online service. If the authentication step of the connection fails, 
>the
>user gets no avatar, and if it succeeds, the user gets an avatar, and 
>that
>avatar either is or has a reference to that connection.
>
>How would I do this? I can think of two ugly ways: I can use a global
>dictionary mapping avatarIds to protocol instances, and do a lookup on 
>that
>dict in the Realm to create the avatar. Otherwise, I can instantiate 
>the
>connection as part of the credentials, and keep the reference to it 
>around
>when I get the avatar. I'm going ahead with the former, but it's scary.
>
>Another possibility is that perhaps the credentials checker and the 
>realm
>could be the same object, and then I could move the global dict into an
>attribute. Would that be a better approach?

You can do this, but you don't have to.  You can also pass the dict to 
both the checker initializer and the realm initializer.  Now they both 
have a reference to it, but it's not global, and they're still separate 
objects.

Jean-Paul
>The background for this is that I have an implementation of the chat 
>part of
>the Direct Connect (DC) protocol, and want to write an IRC<->DC bridge. 
>I
>chose twisted.words.services on the recommendation of someone, which 
>uses
>Cred for auth. DC has authentication as a given nick as part of the
>"handshake" during the start of the connection attempt.
>
>Devin Jeanpierre


From jeanpierreda at gmail.com  Tue Feb 22 11:28:39 2011
From: jeanpierreda at gmail.com (Devin Jeanpierre)
Date: Tue, 22 Feb 2011 11:28:39 -0500
Subject: [Twisted-Python] Twisted Cred using network connections to
	check credentials
In-Reply-To: <20110222160220.1914.1839448269.divmod.xquotient.273@localhost.localdomain>
References: <AANLkTimGGUy7tdcWTk0f8i8QS-Yc6hH2zV6JEaKrmMM4@mail.gmail.com>
	<20110222160220.1914.1839448269.divmod.xquotient.273@localhost.localdomain>
Message-ID: <AANLkTikcBO5C-MyAWUryGdYPGbdGwOykpdLJfnarjWpZ@mail.gmail.com>

Thank you very much!

Devin Jeanpierre

On Tue, Feb 22, 2011 at 11:02 AM, <exarkun at twistedmatrix.com> wrote:

> On 03:46 pm, jeanpierreda at gmail.com wrote:
> >Hello,
> >
> >I want to authenticate a user in twisted.cred by attempting to log him
> >in to
> >an online service. If the authentication step of the connection fails,
> >the
> >user gets no avatar, and if it succeeds, the user gets an avatar, and
> >that
> >avatar either is or has a reference to that connection.
> >
> >How would I do this? I can think of two ugly ways: I can use a global
> >dictionary mapping avatarIds to protocol instances, and do a lookup on
> >that
> >dict in the Realm to create the avatar. Otherwise, I can instantiate
> >the
> >connection as part of the credentials, and keep the reference to it
> >around
> >when I get the avatar. I'm going ahead with the former, but it's scary.
> >
> >Another possibility is that perhaps the credentials checker and the
> >realm
> >could be the same object, and then I could move the global dict into an
> >attribute. Would that be a better approach?
>
> You can do this, but you don't have to.  You can also pass the dict to
> both the checker initializer and the realm initializer.  Now they both
> have a reference to it, but it's not global, and they're still separate
> objects.
>
> Jean-Paul
> >The background for this is that I have an implementation of the chat
> >part of
> >the Direct Connect (DC) protocol, and want to write an IRC<->DC bridge.
> >I
> >chose twisted.words.services on the recommendation of someone, which
> >uses
> >Cred for auth. DC has authentication as a given nick as part of the
> >"handshake" during the start of the connection attempt.
> >
> >Devin Jeanpierre
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110222/6a91b3fc/attachment.htm 

From emcconne at gmail.com  Wed Feb 23 13:22:54 2011
From: emcconne at gmail.com (Brent McConnell)
Date: Wed, 23 Feb 2011 13:22:54 -0500
Subject: [Twisted-Python] LDAP recommendation
Message-ID: <2ADC8EE7-D74C-4EF3-9A70-75BF914EA85B@gmail.com>

I'm working on a web application that uses Cyclone (Twisted port or Tornado) and wanted to know if anyone had any recommendations for integration with LDAP.  I need to do basic authentication as well as add and modify users and groups (occasionally) from the app.  I've looked around but haven't seen that much documentation on any LDAP client libraries that are "Twisted".  Ldapter is really all I've found and it looks unmaintained.  Any help would be appreciated.

Brent McConnell

From anton at iki.fi  Wed Feb 23 14:42:17 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 23 Feb 2011 21:42:17 +0200
Subject: [Twisted-Python] LDAP recommendation
In-Reply-To: <2ADC8EE7-D74C-4EF3-9A70-75BF914EA85B@gmail.com>
References: <2ADC8EE7-D74C-4EF3-9A70-75BF914EA85B@gmail.com>
Message-ID: <AANLkTi=K-rmW22GzvezV4_uJgU+semg1vM2yyeqyzbtZ@mail.gmail.com>

On Wed, Feb 23, 2011 at 8:22 PM, Brent McConnell <emcconne at gmail.com> wrote:
> I'm working on a web application that uses Cyclone (Twisted port or Tornado) and wanted
> to know if anyone had any recommendations for integration with LDAP. ?I need to do basic
> authentication as well as add and modify users and groups (occasionally) from the app.
> I've looked around but haven't seen that much documentation on any LDAP client libraries
> that are "Twisted". ?Ldapter is really all I've found and it looks unmaintained. ?Any help would
> be appreciated.

I did a similar search a while ago and settled on using Ldaptor. The
basic LDAP client functionality
in Ldaptor seems rock solid. I believe the original, sole author has
not been active in a while, but the
code looks very well written and as long as it works that's good enough for me.

I have needed to make a few changes to Ldaptor to make it work for my
application. These
changes are currently published at http://github.com/antong/ldaptor.

Good luck and do post your results!
Anton


From tonthon21 at gmail.com  Wed Feb 23 15:17:17 2011
From: tonthon21 at gmail.com (tonthon21 thon)
Date: Wed, 23 Feb 2011 21:17:17 +0100
Subject: [Twisted-Python] LDAP recommendation
In-Reply-To: <2ADC8EE7-D74C-4EF3-9A70-75BF914EA85B@gmail.com>
References: <2ADC8EE7-D74C-4EF3-9A70-75BF914EA85B@gmail.com>
Message-ID: <AANLkTin1QcPzw2ow7k_wKPmRz0rfN87RZR=33M6u6fyW@mail.gmail.com>

I use Ldaptor for authentication and data retrieving mechanism and I didn't
encounter any troubleshooting using it.

2011/2/23 Brent McConnell <emcconne at gmail.com>

> I'm working on a web application that uses Cyclone (Twisted port or
> Tornado) and wanted to know if anyone had any recommendations for
> integration with LDAP.  I need to do basic authentication as well as add and
> modify users and groups (occasionally) from the app.  I've looked around but
> haven't seen that much documentation on any LDAP client libraries that are
> "Twisted".  Ldapter is really all I've found and it looks unmaintained.  Any
> help would be appreciated.
>
> Brent McConnell
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110223/9264b04d/attachment.html 

From celord at gmail.com  Thu Feb 24 11:51:03 2011
From: celord at gmail.com (=?ISO-8859-1?B?Q+lzYXIgR2FyY+1h?=)
Date: Thu, 24 Feb 2011 10:51:03 -0600
Subject: [Twisted-Python] Imap client problem, help fro troubleshoot
Message-ID: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>

Hello All, I have this[1] IMAP4 client in twisted, but I'am getting
this error too much, how can I troubleshoot it or how can I restart
the main loop after this failure?

         Traceback (most recent call last):
        Failure: twisted.internet.error.ConnectionDone: Connection was
closed cleanly.

2011-02-24 10:31:34-0600 [IMAP4Client,client] Disconnected at: Thu Feb
24 10:31:34 2011
2011-02-24 10:31:34-0600 [IMAP4Client,client] Connection Lost: Reason:
 [Failure instance: Traceback (failure with no frames): <class
'twisted.internet.error.ConnectionDone'>: Connection was closed
cleanly.
2011-02-24 10:31:34-0600 [IMAP4Client,client] ]
2011-02-24 10:31:34-0600 [IMAP4Client,client]
<twisted.internet.tcp.Connector instance at 0x5f8a30> will retry in 7
seconds
2011-02-24 10:31:34-0600 [IMAP4Client,client] Stopping factory
<__builtin__.IMAP4ClientFactory instance at 0xbd4468>
2011-02-24 10:31:34-0600 [-] Main loop terminated.
2011-02-24 10:31:34-0600 [-] Server Shut Down.


[1] http://pastebin.com/GrqG3MyD

-- 
http://celord.blogspot.com/


From jml at mumak.net  Fri Feb 25 05:57:31 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Feb 2011 10:57:31 +0000
Subject: [Twisted-Python] Next release?
Message-ID: <AANLkTim7PZbMoeZbeWqboDTre2PMfkN5zjUciT0w+QfE@mail.gmail.com>

Hello everyone,

I'd like for there to be a release of Twisted in March 2011, and I am
happy to do it. If someone else has already volunteered, or would like
to do it instead of me, they are welcome to be my guest, as long as
they follow & update the Release Process
<http://twistedmatrix.com/trac/wiki/ReleaseProcess>.

Perhaps it would be best to cut a release candidate before PyCon starts?

cheers,
jml


From exarkun at twistedmatrix.com  Fri Feb 25 08:15:34 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 25 Feb 2011 13:15:34 -0000
Subject: [Twisted-Python] Next release?
In-Reply-To: <AANLkTim7PZbMoeZbeWqboDTre2PMfkN5zjUciT0w+QfE@mail.gmail.com>
References: <AANLkTim7PZbMoeZbeWqboDTre2PMfkN5zjUciT0w+QfE@mail.gmail.com>
Message-ID: <20110225131534.2231.1877950703.divmod.xquotient.35@localhost.localdomain>

On 10:57 am, jml at mumak.net wrote:
>Hello everyone,
>
>I'd like for there to be a release of Twisted in March 2011, and I am
>happy to do it. If someone else has already volunteered, or would like
>to do it instead of me, they are welcome to be my guest, as long as
>they follow & update the Release Process
><http://twistedmatrix.com/trac/wiki/ReleaseProcess>.

I created an 11.0 milestone a few days ago. 
<http://twistedmatrix.com/trac/milestone/Twisted-11.0>.  It almost gets 
a release out in March.
>Perhaps it would be best to cut a release candidate before PyCon 
>starts?

I don't have a problem with the schedule moving up.  To be explicit, 
though, that means that tickets resolved at the PyCon sprint will not be 
in 11.0.

Jean-Paul


From exarkun at twistedmatrix.com  Fri Feb 25 08:20:16 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 25 Feb 2011 13:20:16 -0000
Subject: [Twisted-Python] Imap client problem, help fro troubleshoot
In-Reply-To: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>
References: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>
Message-ID: <20110225132016.2231.480486396.divmod.xquotient.45@localhost.localdomain>

On 24 Feb, 04:51 pm, celord at gmail.com wrote:
>Hello All, I have this[1] IMAP4 client in twisted, but I'am getting
>this error too much, how can I troubleshoot it or how can I restart
>the main loop after this failure?
>
>         Traceback (most recent call last):
>        Failure: twisted.internet.error.ConnectionDone: Connection was
>closed cleanly.

Your code already appears to be based on ReconnectingClientFactory, so 
your client should reconnect after it loses its connection.  The main 
thing that would prevent this is if you stop the reactor, which you also 
appear to be doing.  If you want the reconnection attempt to succeed, 
then try not stopping the reactor.

Jean-Paul
>2011-02-24 10:31:34-0600 [IMAP4Client,client] Disconnected at: Thu Feb
>24 10:31:34 2011
>2011-02-24 10:31:34-0600 [IMAP4Client,client] Connection Lost: Reason:
>[Failure instance: Traceback (failure with no frames): <class
>'twisted.internet.error.ConnectionDone'>: Connection was closed
>cleanly.
>2011-02-24 10:31:34-0600 [IMAP4Client,client] ]
>2011-02-24 10:31:34-0600 [IMAP4Client,client]
><twisted.internet.tcp.Connector instance at 0x5f8a30> will retry in 7
>seconds
>2011-02-24 10:31:34-0600 [IMAP4Client,client] Stopping factory
><__builtin__.IMAP4ClientFactory instance at 0xbd4468>
>2011-02-24 10:31:34-0600 [-] Main loop terminated.
>2011-02-24 10:31:34-0600 [-] Server Shut Down.
>
>
>[1] http://pastebin.com/GrqG3MyD
>
>--
>http://celord.blogspot.com/
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From jml at mumak.net  Fri Feb 25 09:30:14 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Feb 2011 14:30:14 +0000
Subject: [Twisted-Python] Next release?
In-Reply-To: <20110225131534.2231.1877950703.divmod.xquotient.35@localhost.localdomain>
References: <AANLkTim7PZbMoeZbeWqboDTre2PMfkN5zjUciT0w+QfE@mail.gmail.com>
	<20110225131534.2231.1877950703.divmod.xquotient.35@localhost.localdomain>
Message-ID: <AANLkTik=X3Dx0WbyMLm2x7Mk7WLGpZAJipvAQ1Td13rt@mail.gmail.com>

On Fri, Feb 25, 2011 at 1:15 PM,  <exarkun at twistedmatrix.com> wrote:
> On 10:57 am, jml at mumak.net wrote:
>>Hello everyone,
>>
>>I'd like for there to be a release of Twisted in March 2011, and I am
>>happy to do it. If someone else has already volunteered, or would like
>>to do it instead of me, they are welcome to be my guest, as long as
>>they follow & update the Release Process
>><http://twistedmatrix.com/trac/wiki/ReleaseProcess>.
>
> I created an 11.0 milestone a few days ago.
> <http://twistedmatrix.com/trac/milestone/Twisted-11.0>. ?It almost gets
> a release out in March.

Thanks.

>>Perhaps it would be best to cut a release candidate before PyCon
>>starts?
>
> I don't have a problem with the schedule moving up. ?To be explicit,
> though, that means that tickets resolved at the PyCon sprint will not be
> in 11.0.
>

Cool. I think this is OK, since it gives the code forged during the
heat of the sprint time to cool before being released.

Oops, metaphor. What I mean is, a lot of code gets written at sprints,
and because it's code it has bugs, and bugs take time to find.

And anyway, doing a release these days isn't *that* onerous.

jml


From facundobatista at gmail.com  Fri Feb 25 09:36:34 2011
From: facundobatista at gmail.com (Facundo Batista)
Date: Fri, 25 Feb 2011 11:36:34 -0300
Subject: [Twisted-Python] Twisted for Python 3
Message-ID: <AANLkTikf3fV=D_TJc6x2b54SmT0HxDw9dUQaO0zQ8N17@mail.gmail.com>

I just thought that a good sprint theme for the next PyCon would be
porting Twisted for Python 3.2.

I wanted to ask which is the status of this, if it's started, a good
idea for a sprint, etc.

Thanks!

-- 
.? ? Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/


From celord at gmail.com  Fri Feb 25 11:41:19 2011
From: celord at gmail.com (=?ISO-8859-1?B?Q+lzYXIgR2FyY+1h?=)
Date: Fri, 25 Feb 2011 10:41:19 -0600
Subject: [Twisted-Python] Imap client problem, help fro troubleshoot
In-Reply-To: <20110225132016.2231.480486396.divmod.xquotient.45@localhost.localdomain>
References: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>
	<20110225132016.2231.480486396.divmod.xquotient.45@localhost.localdomain>
Message-ID: <AANLkTine8v4+qaEP+OHDen6OMW=y3iV9RqnonO+Git82@mail.gmail.com>

Hi Jean-Paul thank a lot for your reply, intentionally I'm not
stopping the reactor this comes without my intervention

>>        Failure: twisted.internet.error.ConnectionDone: Connection was
>>closed cleanly

there is where I get lost, I'm using Solaris 10, python 2.6.2  and
twisted 10.1.0, could Solaris be the problem ?

2011/2/25  <exarkun at twistedmatrix.com>:
> On 24 Feb, 04:51 pm, celord at gmail.com wrote:
>>Hello All, I have this[1] IMAP4 client in twisted, but I'am getting
>>this error too much, how can I troubleshoot it or how can I restart
>>the main loop after this failure?
>>
>> ? ? ? ? Traceback (most recent call last):
>> ? ? ? ?Failure: twisted.internet.error.ConnectionDone: Connection was
>>closed cleanly.
>
> Your code already appears to be based on ReconnectingClientFactory, so
> your client should reconnect after it loses its connection. ?The main
> thing that would prevent this is if you stop the reactor, which you also
> appear to be doing. ?If you want the reconnection attempt to succeed,
> then try not stopping the reactor.
>
> Jean-Paul
>>2011-02-24 10:31:34-0600 [IMAP4Client,client] Disconnected at: Thu Feb
>>24 10:31:34 2011
>>2011-02-24 10:31:34-0600 [IMAP4Client,client] Connection Lost: Reason:
>>[Failure instance: Traceback (failure with no frames): <class
>>'twisted.internet.error.ConnectionDone'>: Connection was closed
>>cleanly.
>>2011-02-24 10:31:34-0600 [IMAP4Client,client] ]
>>2011-02-24 10:31:34-0600 [IMAP4Client,client]
>><twisted.internet.tcp.Connector instance at 0x5f8a30> will retry in 7
>>seconds
>>2011-02-24 10:31:34-0600 [IMAP4Client,client] Stopping factory
>><__builtin__.IMAP4ClientFactory instance at 0xbd4468>
>>2011-02-24 10:31:34-0600 [-] Main loop terminated.
>>2011-02-24 10:31:34-0600 [-] Server Shut Down.
>>
>>
>>[1] http://pastebin.com/GrqG3MyD
>>
>>--
>>http://celord.blogspot.com/
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://celord.blogspot.com/


From exarkun at twistedmatrix.com  Fri Feb 25 12:04:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 25 Feb 2011 17:04:28 -0000
Subject: [Twisted-Python] Imap client problem, help fro troubleshoot
In-Reply-To: <AANLkTine8v4+qaEP+OHDen6OMW=y3iV9RqnonO+Git82@mail.gmail.com>
References: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>
	<20110225132016.2231.480486396.divmod.xquotient.45@localhost.localdomain>
	<AANLkTine8v4+qaEP+OHDen6OMW=y3iV9RqnonO+Git82@mail.gmail.com>
Message-ID: <20110225170428.2231.417842557.divmod.xquotient.56@localhost.localdomain>

On 04:41 pm, celord at gmail.com wrote:
>Hi Jean-Paul thank a lot for your reply, intentionally I'm not
>stopping the reactor this comes without my intervention

There are several calls to `reactor.stop` in the example, though.  The 
reactor won't stop unless that method is called.
>>>        Failure: twisted.internet.error.ConnectionDone: Connection was
>>>closed cleanly
>
>there is where I get lost, I'm using Solaris 10, python 2.6.2  and
>twisted 10.1.0, could Solaris be the problem ?

I don't know why the connection is being closed.  The most likely reason 
is that there's a problem with the protocol class which causes it either 
to raise an exception locally when handling data or which causes it to 
send something that the server dislikes enough that it closes the 
connection.

You could rule out the former by enabling logging when the process 
starts, instead of only immediately before it stops.

For the latter, you'll have to look at network captures and understand 
the behavior of the server you're talking to.

Jean-Paul


From celord at gmail.com  Fri Feb 25 16:35:32 2011
From: celord at gmail.com (=?ISO-8859-1?B?Q+lzYXIgR2FyY+1h?=)
Date: Fri, 25 Feb 2011 15:35:32 -0600
Subject: [Twisted-Python] Imap client problem, help fro troubleshoot
In-Reply-To: <20110225170428.2231.417842557.divmod.xquotient.56@localhost.localdomain>
References: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>
	<20110225132016.2231.480486396.divmod.xquotient.45@localhost.localdomain>
	<AANLkTine8v4+qaEP+OHDen6OMW=y3iV9RqnonO+Git82@mail.gmail.com>
	<20110225170428.2231.417842557.divmod.xquotient.56@localhost.localdomain>
Message-ID: <AANLkTikT8rLhO6Ma8E+-Lo7k+oRGdpzYN3nmifdMKHrJ@mail.gmail.com>

OK Thanks a lot, I'll try that.

2011/2/25  <exarkun at twistedmatrix.com>:
> On 04:41 pm, celord at gmail.com wrote:
>>Hi Jean-Paul thank a lot for your reply, intentionally I'm not
>>stopping the reactor this comes without my intervention
>
> There are several calls to `reactor.stop` in the example, though. ?The
> reactor won't stop unless that method is called.
>>>> ? ? ? ?Failure: twisted.internet.error.ConnectionDone: Connection was
>>>>closed cleanly
>>
>>there is where I get lost, I'm using Solaris 10, python 2.6.2 ?and
>>twisted 10.1.0, could Solaris be the problem ?
>
> I don't know why the connection is being closed. ?The most likely reason
> is that there's a problem with the protocol class which causes it either
> to raise an exception locally when handling data or which causes it to
> send something that the server dislikes enough that it closes the
> connection.
>
> You could rule out the former by enabling logging when the process
> starts, instead of only immediately before it stops.
>
> For the latter, you'll have to look at network captures and understand
> the behavior of the server you're talking to.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://celord.blogspot.com/


From glyph at twistedmatrix.com  Fri Feb 25 20:16:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 25 Feb 2011 20:16:59 -0500
Subject: [Twisted-Python] Twisted for Python 3
In-Reply-To: <AANLkTikf3fV=D_TJc6x2b54SmT0HxDw9dUQaO0zQ8N17@mail.gmail.com>
References: <AANLkTikf3fV=D_TJc6x2b54SmT0HxDw9dUQaO0zQ8N17@mail.gmail.com>
Message-ID: <C23ADE2B-C8B6-489A-9545-AEF979090A95@twistedmatrix.com>


On Feb 25, 2011, at 9:36 AM, Facundo Batista wrote:

> I just thought that a good sprint theme for the next PyCon would be
> porting Twisted for Python 3.2.
> 
> I wanted to ask which is the status of this, if it's started, a good
> idea for a sprint, etc.

I guess that the status is that you have now volunteered to run the Twisted-on-Python-3 sprint at PyCon!  Thanks! :)




From glyph at twistedmatrix.com  Fri Feb 25 20:51:03 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 25 Feb 2011 20:51:03 -0500
Subject: [Twisted-Python] Next release?
In-Reply-To: <AANLkTik=X3Dx0WbyMLm2x7Mk7WLGpZAJipvAQ1Td13rt@mail.gmail.com>
References: <AANLkTim7PZbMoeZbeWqboDTre2PMfkN5zjUciT0w+QfE@mail.gmail.com>
	<20110225131534.2231.1877950703.divmod.xquotient.35@localhost.localdomain>
	<AANLkTik=X3Dx0WbyMLm2x7Mk7WLGpZAJipvAQ1Td13rt@mail.gmail.com>
Message-ID: <294DC848-D6A2-4B97-81DB-63BF81C73333@twistedmatrix.com>


On Feb 25, 2011, at 9:30 AM, Jonathan Lange wrote:

> On Fri, Feb 25, 2011 at 1:15 PM,  <exarkun at twistedmatrix.com> wrote:
>> On 10:57 am, jml at mumak.net wrote:
>>> Hello everyone,
>>> 
>>> I'd like for there to be a release of Twisted in March 2011, and I am
>>> happy to do it. If someone else has already volunteered, or would like
>>> to do it instead of me, they are welcome to be my guest, as long as
>>> they follow & update the Release Process
>>> <http://twistedmatrix.com/trac/wiki/ReleaseProcess>.
>> 
>> I created an 11.0 milestone a few days ago.
>> <http://twistedmatrix.com/trac/milestone/Twisted-11.0>.  It almost gets
>> a release out in March.
> 
> Thanks.
> 
>>> Perhaps it would be best to cut a release candidate before PyCon
>>> starts?
>> 
>> I don't have a problem with the schedule moving up.  To be explicit,
>> though, that means that tickets resolved at the PyCon sprint will not be
>> in 11.0.

Let me preface everything I'm about to say with the usual disclaimer about work in twisted, especially release work: thanks for doing the release, and I'm happy to have release done at any time, by anybody, especially since it probably means the ReleaseProcess document will get even better.  So feel free to do it on your own time and in your own way assuming that the process is followed.  I realize that beggars can't be choosers :).

But, if possible, I would personally appreciate it if any release started before PyCon could actually be out before PyCon.  An impending release that hasn't been closed yet creates a sense of urgency.  An impending release which everyone knows won't actually get any of the current work into it seems to create an air of lackadaisical malaise.

There's always motivation to turn the crank on the process a few times at a sprint, but an upcoming release generates a feeling that it's really important to keep turning it until the machine goes "bing".  Oops, metaphor: there's more motivation to actually close tickets than to just submit for another review turn or do a few random reviews.  These are purely subjective assessments, of course, and I'm happy for others to disagree.

To argue against myself for a moment, because I do have mixed feelings about this: the general sense that releases happen regularly is far more powerful than either of these ephemeral impressions of the proximity of the next release.  Major sprints (those at PyCon) since we started focusing on more regular releases in '08 have all been far more energetic than those that took place in the long, dark tea-time of 2.5.

So if your energy and inclination to be the release manager is timed to cut the prerelease before PyCon and have it out during that week, so be it.  All things being equal, more releases and more regular releases are better.

My original plan for 11.0, which is vaguely related to that timeline exarkun just posted, was to do a release sprint in the Boston area after the folks here get back from PyCon.  The release sprint would be a bit more relaxed than our usual sprints here, since everyone would be fried from the conference: we'd have one goal, to put the work from the sprint into a release.

If it's all the same to you, a release at this time might have the additional advantage of having a slightly less anemic feature list:

~/Projects/Twisted/trunk$ find . -name '*.feature' | wc -w
       9

and the slim possibility of having better (i.e. Sphinx) documentation, as well, which seems to be in the community zeitgeist quite a bit now.

> Cool. I think this is OK, since it gives the code forged during the
> heat of the sprint time to cool before being released.
> 
> Oops, metaphor. What I mean is, a lot of code gets written at sprints,
> and because it's code it has bugs, and bugs take time to find.

This makes sense to me if I think about it as a metaphor, and I've seen it on other projects, but it doesn't actually jive with my experience of Twisted's releases.

I can recall bugs being found well after a release, a precious few that being spotted during pre-release testing, and lots being noticed during code review or by buildbot immediately after landing on trunk.  I can't really think of any that got spotted by sitting around on trunk for a while.  (I'm sure there have been a few, but it seems like a tiny minority.)  I'm certainly not saying there aren't bugs, just that if our pre-commit QA process doesn't spot them, the next place they realistically get caught will be users noticing problems in production.  If we're lucky, that's during a prerelease, if not, after a final release.  "Cooling" in the trunk for a while doesn't seem to make much of a difference one way or another.

> And anyway, doing a release these days isn't *that* onerous.

Indeed not, and that is largely to your credit.  And thus it is in no small part thanks to you that, as ever, Twisted prevails.

Thanks a million,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110225/e7a4339f/attachment.htm 

From exarkun at twistedmatrix.com  Sun Feb 27 00:05:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 Feb 2011 05:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1298783122.64.641202311@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110227/d3271d29/attachment.htm 

From bogus@does.not.exist.com  Wed Feb 23 13:29:31 2011
From: bogus@does.not.exist.com ()
Date: Wed, 23 Feb 2011 18:29:31 -0000
Subject: No subject
Message-ID: <mailman.0.1300491888.9565.twisted-python@twistedmatrix.com>

benchmark
http://nichol.as/benchmark-of-python-web-servers.

Is twisted coming out of this so badly because they are using the
default reactor, as opposed to epoll?

Perhaps the default reactor should be the best available rather than
the lowest common denominator.

Michael


From bogus@does.not.exist.com  Wed Feb 23 13:29:31 2011
From: bogus@does.not.exist.com ()
Date: Wed, 23 Feb 2011 18:29:31 -0000
Subject: No subject
Message-ID: <mailman.1.1301500558.9565.twisted-python@twistedmatrix.com>

jml

PS. Please don't top post to this list.


From bogus@does.not.exist.com  Wed Feb 23 13:29:31 2011
From: bogus@does.not.exist.com ()
Date: Wed, 23 Feb 2011 18:29:31 -0000
Subject: No subject
Message-ID: <mailman.2.1302074191.9565.twisted-python@twistedmatrix.com>

"""As you can see, the protocol is registered with the reactor. This means it
may be persisted if it's added to an application..."""

What does 'persisted` here mean?

--
anatoly t.


From bogus@does.not.exist.com  Wed Feb 23 13:29:31 2011
From: bogus@does.not.exist.com ()
Date: Wed, 23 Feb 2011 18:29:31 -0000
Subject: No subject
Message-ID: <mailman.3.1308482691.9565.twisted-python@twistedmatrix.com>

156 because I didn't understand that assertion. That might happen to
some in the audience at this point.

Summary: I for myself will walk through the rest of your exercises as I
believe my understanding will profit from it. As a talk, it is too much.
As a workshop I'd say 2 hours the least. But a very good presentation
alltogether.

Andreas



From bogus@does.not.exist.com  Wed Feb 23 13:29:31 2011
From: bogus@does.not.exist.com ()
Date: Wed, 23 Feb 2011 18:29:31 -0000
Subject: No subject
Message-ID: <mailman.4.1309547522.9565.twisted-python@twistedmatrix.com>

lvh at hayek ~/tmp/Twisted =B1master =BB git log -1
commit 936493c676c424f459bee93270f3a2870b68e8e5
Author: exarkun <exarkun at bbbe8e31-12d6-0310-92fd-ac37d47ddeeb>
Date:   Tue Mar 29 14:00:14 2011 +0000
------------------snipsnipsnip------------------

Yeah. Mar 29? That's not quite right, is it?


>
> Or for that matter, you can include e.g. an github URL in the ticket
> instead of attaching the patch.
>

Only if there's a decent Github mirror to fork from, otherwise you're askin=
g
people to do a multi-hour operation (I know, because I'm doing it right now=
)
to get a decent git repo, followed by a large push to Github, and then mayb=
e
you can start doing some work. There is a seemingly good mirror maintained
by powdahound, but it's not official and as such is not recorded anywhere.

cheers
lvh

--0016e647199c67970f04a706ca68
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div class=3D"gmail_quote">On Fri, Jul 1, 2011 at 8:59 PM, Itamar Turner-Tr=
auring <span dir=3D"ltr">&lt;<a href=3D"mailto:itamar at itamarst.org">itamar@=
itamarst.org</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" sty=
le=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;">

<div class=3D"im">&gt; It would be far simpler to setup my DVCS to track JP=
&#39;s remote copy of my<br>
&gt; ticket&#39;s branch...then simply pull from that remote...make my chan=
ges and<br>
&gt; request he pull from me when he&#39;s ready to review. Automates the w=
hole<br>
&gt; process quite a bit and reduces the round trip yak shaving.<br>
<br>
</div>Any reason you can&#39;t do this with our git or bzr mirrors?<br>
<div class=3D"im"><br>
<a href=3D"http://twistedmatrix.com/trac/wiki/BazaarMirror" target=3D"_blan=
k">http://twistedmatrix.com/trac/wiki/BazaarMirror</a><br>
</div><a href=3D"http://twistedmatrix.com/trac/wiki/GitMirror" target=3D"_b=
lank">http://twistedmatrix.com/trac/wiki/GitMirror</a><br></blockquote><div=
><br>From a fresh checkout of the Git mirror:<br><br>lvh at hayek ~/tmp/Twiste=
d =B1master =BB git log -1<br>

commit 936493c676c424f459bee93270f3a2870b68e8e5<br>Author: exarkun &lt;exar=
kun at bbbe8e31-12d6-0310-92fd-ac37d47ddeeb&gt;<br>Date:=A0=A0 Tue Mar 29 14:0=
0:14 2011 +0000<br>------------------snipsnipsnip------------------<br><br>

Yeah. Mar 29? That&#39;s not quite right, is it?<br>=A0</div><blockquote cl=
ass=3D"gmail_quote" style=3D"margin: 0pt 0pt 0pt 0.8ex; border-left: 1px so=
lid rgb(204, 204, 204); padding-left: 1ex;">
<br>
Or for that matter, you can include e.g. an github URL in the ticket<br>
instead of attaching the patch.<br></blockquote><div><br>Only if there&#39;=
s a decent Github mirror to fork from, otherwise you&#39;re asking people t=
o do a multi-hour operation (I know, because I&#39;m doing it right now) to=
 get a decent git repo, followed by a large push to Github, and then maybe =
you can start doing some work. There is a seemingly good mirror maintained =
by powdahound, but it&#39;s not official and as such is not recorded anywhe=
re. <br>

=A0</div></div>cheers<div>lvh</div><br>

--0016e647199c67970f04a706ca68--


From bogus@does.not.exist.com  Wed Feb 23 13:29:31 2011
From: bogus@does.not.exist.com ()
Date: Wed, 23 Feb 2011 18:29:31 -0000
Subject: No subject
Message-ID: <mailman.5.1312532091.9565.twisted-python@twistedmatrix.com>

of acting as a proxy server (correct me if I'm wrong).
A quick search for "proxy" on Trac returns quite a lot of results so it's
not easy to have a good grasp of the situation.

Personnaly, what I'm interested in is the ability for Twisted to act as a
proxy client and thus to connect to an external proxy server.
I've seen bug reports on that topic, of which some are still open:

Add a SOCKS client API
http://twistedmatrix.com/trac/ticket/3508

Socks V5 functionality
http://twistedmatrix.com/trac/ticket/1330

Add CONNECT support to HTTP client
http://twistedmatrix.com/trac/ticket/4969

Regarding this last bug, I was wondering if there could a generic HTTP proxy
mechanism, like with SOCKS, and not tied to the Web client.
Because we might want to use an HTTP proxy for something else that Web
traffic.

What would be nice in Twisted is a generic, upper-protocol-agnostic proxy
mechanism  -- and one that would support indistinctly SOCKS and HTTP kinds
of proxies.

By the way, I'm totally new to Twisted, so forgive me if what I'm missing
something obvious :-)

Thanks,

-- 
Damiano ALBANI

--bcaec517a78e47cb7804a9bdb0a2
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div>Hello,</div><div><br></div><div>I&#39;m trying to determine the curren=
t status of proxy support in Twisted.</div><div>I&#39;ve googled quite a bi=
t to find an answer but I couldn&#39;t get a crystal clear picture.</div>


<div>What I mean by &quot;proxy support&quot; is the capability to:</div><d=
iv>=A0 - act as a proxy server</div><div>=A0 - use an external proxy server=
 (i.e. act as a client)</div><div>And by proxy, I&#39;m talking in pratice =
of SOCKS v{4(a),5} and HTTP &quot;CONNECT&quot; standards.</div>


<div><br></div><div>From what I&#39;ve read so far, it looks like Twisted i=
s currently only capable of acting as a proxy server (correct me if I&#39;m=
 wrong).</div><div>A quick search for &quot;proxy&quot; on Trac returns qui=
te a lot of results so it&#39;s not easy to have a good grasp of the situat=
ion.</div>


<div><br></div><div>Personnaly, what I&#39;m interested in is the ability f=
or Twisted to act as a proxy client and thus to connect to an external prox=
y server.</div><div>I&#39;ve seen bug reports on that topic, of which some =
are still open:</div>


<div><br></div><div>Add a SOCKS client API</div><div><a href=3D"http://twis=
tedmatrix.com/trac/ticket/3508" target=3D"_blank">http://twistedmatrix.com/=
trac/ticket/3508</a></div><div><br></div><div>Socks V5 functionality</div>

<div><a href=3D"http://twistedmatrix.com/trac/ticket/1330" target=3D"_blank=
">http://twistedmatrix.com/trac/ticket/1330</a></div>
<div><br></div><div>Add CONNECT support to HTTP client</div><div><a href=3D=
"http://twistedmatrix.com/trac/ticket/4969" target=3D"_blank">http://twiste=
dmatrix.com/trac/ticket/4969</a></div><div><br></div><div>Regarding this la=
st bug, I was wondering if there could a generic HTTP proxy mechanism, like=
 with SOCKS, and not tied to the Web client.</div>


<div>Because we might want to use an HTTP proxy for something else that Web=
 traffic.</div><div><br></div><meta http-equiv=3D"content-type" content=3D"=
text/html; charset=3Dutf-8"><div>What would be nice in Twisted is a=A0gener=
ic, upper-protocol-agnostic proxy mechanism =A0-- and one that would suppor=
t indistinctly SOCKS and HTTP kinds of proxies.</div>


<div><br></div><div>By the way, I&#39;m totally new to Twisted, so forgive =
me if what I&#39;m missing something obvious :-)</div><div><br></div><div>T=
hanks,</div><br>-- <br>Damiano ALBANI<br>

--bcaec517a78e47cb7804a9bdb0a2--


From bogus@does.not.exist.com  Wed Feb 23 13:29:31 2011
From: bogus@does.not.exist.com ()
Date: Wed, 23 Feb 2011 18:29:31 -0000
Subject: No subject
Message-ID: <mailman.6.1315814246.9565.twisted-python@twistedmatrix.com>

announcement of the immediate availability of a Twisted client for
interacting with the Hybrid Cluster API.

https://github.com/hybridlogic/txHybridCluster

http://www.hybrid-cluster.com/
http://www.hybrid-cluster.com/api/

The Hybrid Cluster API allows you to set up websites, databases,
mailboxes, add SSL certificates, configure custom DNS, and more (over
100 API functions are documented).

If anyone's interested in building cool stuff with this, contact me
off-list and we can get you set up with a cluster to play with ;-)

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Mobile: +447791750420 (UK) / +1-415-449-1165 (US)





From bogus@does.not.exist.com  Wed Feb 23 13:29:31 2011
From: bogus@does.not.exist.com ()
Date: Wed, 23 Feb 2011 18:29:31 -0000
Subject: No subject
Message-ID: <mailman.7.1317332698.9565.twisted-python@twistedmatrix.com>

h =3D internet.TCPServer(79, IFingerFactory(f))

notice IFingerFactory? If you read the earlier parts of the tutorial,
you'll see stuff like components.registerAdapter. It's just magic to
create a FingerFactoryFromService, giving its constructor f, the
"Finger Service". What happens here is that "f", the Finger Service,
is different from the service.Service within the Twisted Framework.
You might as well call "f", the Finger Service, "Finger Shared Data".

What really happens here is

h is the service that has parent s, MultiService. s is then returned
and started by the application.

h contains a factory that gets run.

The factory knows "f", the Finger Service, which has nothing to do
with twisted's mechanism. It's more of a demo for the component based
framework. f is a way to share data and methods and states across
multiple factories.

I am also very new to twisted, so I **hope** this understanding of
mine is correct ...

I strongly recommend you read through the entire tutorial. They build
very incrementally, so most of the time the code is repeated so you
can just skim through it if you had started from the beginning.

David Kao



On Fri, Sep 30, 2011 at 5:28 AM, Dorian Raymer <deldotdr at gmail.com> wrote:
> Hello,
> I am confused about how the FingerService gets started in the
> finger/finger.py makeService function. It is never assigned a service par=
ent
> and it can't service getUser requests if its startService method isn't
> called; you get an AttributeError:=A0"no attribute 'users'" the way it wo=
rks
> now. Is this a bug?
> The most sensible thing, in this case, seems to be setting the FingerServ=
ice
> parent to be the MultiService container that all of the interent services
> are added to in the makeService function.=A0Is that correct?
> I'm wondering if their are any other=A0strategies people use for starting
> non-internet services.
> For instance, if instead of reading a file to get to my user db, I might
> want to start a redis client and read from redis to service a getUser cal=
l.
> But that means I'd want to make sure the startService=A0call succeeded (t=
he
> redis connection was made) before one of the internet services tries to u=
se
> the FingerService (a timing problem that doesn't exist when just reading =
a
> file)...or something. Maybe I'm really just wondering how the twisted
> application framework handles exceptions that occur for startService call=
s.
> Maybe I need something else to handle that kind of thing?
> I'm also wondering if it's ever a good idea to make a extension
> of=A0ServerFactory=A0(that adapts a Service)=A0that calls=A0Service.start=
Service
> when Factory.startServer is called (and Service.stopService when
> Factory.stopFactory is called)?
> And I'm looking for more use cases/projects (beyond the finger tutorial)
> that really showcase the twisted application framework. Any references wo=
uld
> be appreciated!
> Thanks!
> -Dorian
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From bogus@does.not.exist.com  Wed Feb 23 13:29:31 2011
From: bogus@does.not.exist.com ()
Date: Wed, 23 Feb 2011 18:29:31 -0000
Subject: No subject
Message-ID: <mailman.8.1317334233.9565.twisted-python@twistedmatrix.com>

<br>
h =3D internet.TCPServer(79, IFingerFactory(f))<br>
<br>
notice IFingerFactory? If you read the earlier parts of the tutorial,<br>
you&#39;ll see stuff like components.registerAdapter. It&#39;s just magic t=
o<br>
create a FingerFactoryFromService, giving its constructor f, the<br>
&quot;Finger Service&quot;. What happens here is that &quot;f&quot;, the Fi=
nger Service,<br>
is different from the service.Service within the Twisted Framework.<br></bl=
ockquote><div><br></div><div>The <font class=3D"Apple-style-span" face=3D"&=
#39;courier new&#39;, monospace">FingerService</font> inherits <font class=
=3D"Apple-style-span" face=3D"&#39;courier new&#39;, monospace">service.Ser=
vice</font> and implements the <font class=3D"Apple-style-span" face=3D"&#3=
9;courier new&#39;, monospace">startService</font> event, so it *is* a serv=
ice that can be run by the service framework; it just isn&#39;t one of the =
<font class=3D"Apple-style-span" face=3D"&#39;courier new&#39;, monospace">=
twisted.application.internet</font> services, like <font class=3D"Apple-sty=
le-span" face=3D"&#39;courier new&#39;, monospace">internet.TCPServer</font=
>.</div>

<div>Moreover, it needs to have <font class=3D"Apple-style-span" face=3D"&#=
39;courier new&#39;, monospace">startService</font> called, somehow... and =
what I&#39;m saying is that in the full example (provided in<font class=3D"=
Apple-style-span" face=3D"&#39;courier new&#39;, monospace">=C2=A0twisted/d=
oc/core/howto/tutorial/listings/finger/finger/finger.py</font>) it is not c=
alled, and if you actually try using it, it doesn&#39;t work.</div>

<div>=C2=A0</div><div><br></div><blockquote class=3D"gmail_quote" style=3D"=
margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;">
You might as well call &quot;f&quot;, the Finger Service, &quot;Finger Shar=
ed Data&quot;.<br>
<br>
What really happens here is<br>
<br>
h is the service that has parent s, MultiService. s is then returned<br>
and started by the application.<br>
<br>
h contains a factory that gets run.<br>
<br>
The factory knows &quot;f&quot;, the Finger Service, which has nothing to d=
o<br>
with twisted&#39;s mechanism. It&#39;s more of a demo for the component bas=
ed<br>
framework. f is a way to share data and methods and states across<br>
multiple factories.<br>
<br>
I am also very new to twisted, so I **hope** this understanding of<br>
mine is correct ...<br>
<br>
I strongly recommend you read through the entire tutorial. They build<br>
very incrementally, so most of the time the code is repeated so you<br>
can just skim through it if you had started from the beginning.<br></blockq=
uote><div><br></div><div>I&#39;ve read it many times over the years ;) It&#=
39;s=C2=A0surprisingly complete as an example...you just don&#39;t know tha=
t in the beginning.</div>

<div><br></div><div>The topic area of this question is something I&#39;m tr=
ying to squeeze out of this tutorial series; I&#39;m encountering conceptua=
l questions beyond the mechanics of how the framework works (which the tuto=
rial does a great job of explaining) like:=C2=A0</div>

<div>should I ever make a tree of=C2=A0dependent=C2=A0services?</div><div>W=
hat if I do something in a <font class=3D"Apple-style-span" face=3D"&#39;co=
urier new&#39;, monospace">startService</font> method that I want to make s=
ure works before other services get their <font class=3D"Apple-style-span" =
face=3D"&#39;courier new&#39;, monospace">startService</font> called?=C2=A0=
</div>

<div>If I create a bunch of business services (that just provide pure funct=
ionality) that I then adapt for deployment in different t.a.internet servic=
es, should I put the business services in their own MultiService and the in=
ternet services in their own MutiService container?=C2=A0</div>

<div><br></div><div>Like I said, more showcasing of use cases would help su=
ggest answers to these kind of questions. I see a lot of possibilities, but=
 haven&#39;t put in the time in the trenches to try them all out ;)</div>

<div><br></div><div>Thanks,</div><div>-Dorian</div><div>=C2=A0</div><div><b=
r></div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border=
-left:1px #ccc solid;padding-left:1ex;">
<br>
David Kao<br>
<div><div></div><div class=3D"h5"><br>
<br>
<br>
On Fri, Sep 30, 2011 at 5:28 AM, Dorian Raymer &lt;<a href=3D"mailto:deldot=
dr at gmail.com">deldotdr at gmail.com</a>&gt; wrote:<br>
&gt; Hello,<br>
&gt; I am confused about how the FingerService gets started in the<br>
&gt; finger/finger.py makeService function. It is never assigned a service =
parent<br>
&gt; and it can&#39;t service getUser requests if its startService method i=
sn&#39;t<br>
&gt; called; you get an AttributeError:=C2=A0&quot;no attribute &#39;users&=
#39;&quot; the way it works<br>
&gt; now. Is this a bug?<br>
&gt; The most sensible thing, in this case, seems to be setting the FingerS=
ervice<br>
&gt; parent to be the MultiService container that all of the interent servi=
ces<br>
&gt; are added to in the makeService function.=C2=A0Is that correct?<br>
&gt; I&#39;m wondering if their are any other=C2=A0strategies people use fo=
r starting<br>
&gt; non-internet services.<br>
&gt; For instance, if instead of reading a file to get to my user db, I mig=
ht<br>
&gt; want to start a redis client and read from redis to service a getUser =
call.<br>
&gt; But that means I&#39;d want to make sure the startService=C2=A0call su=
cceeded (the<br>
&gt; redis connection was made) before one of the internet services tries t=
o use<br>
&gt; the FingerService (a timing problem that doesn&#39;t exist when just r=
eading a<br>
&gt; file)...or something. Maybe I&#39;m really just wondering how the twis=
ted<br>
&gt; application framework handles exceptions that occur for startService c=
alls.<br>
&gt; Maybe I need something else to handle that kind of thing?<br>
&gt; I&#39;m also wondering if it&#39;s ever a good idea to make a extensio=
n<br>
&gt; of=C2=A0ServerFactory=C2=A0(that adapts a Service)=C2=A0that calls=C2=
=A0Service.startService<br>
&gt; when Factory.startServer is called (and Service.stopService when<br>
&gt; Factory.stopFactory is called)?<br>
&gt; And I&#39;m looking for more use cases/projects (beyond the finger tut=
orial)<br>
&gt; that really showcase the twisted application framework. Any references=
 would<br>
&gt; be appreciated!<br>
&gt; Thanks!<br>
&gt; -Dorian<br>
</div></div>&gt; _______________________________________________<br>
&gt; Twisted-Python mailing list<br>
&gt; <a href=3D"mailto:Twisted-Python at twistedmatrix.com">Twisted-Python at twi=
stedmatrix.com</a><br>
&gt; <a href=3D"http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-p=
ython" target=3D"_blank">http://twistedmatrix.com/cgi-bin/mailman/listinfo/=
twisted-python</a><br>
&gt;<br>
&gt;<br>
<br>
_______________________________________________<br>
Twisted-Python mailing list<br>
<a href=3D"mailto:Twisted-Python at twistedmatrix.com">Twisted-Python at twistedm=
atrix.com</a><br>
<a href=3D"http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python=
" target=3D"_blank">http://twistedmatrix.com/cgi-bin/mailman/listinfo/twist=
ed-python</a><br>
</blockquote></div><br>

--0015174788367b000d04ae1bc660--


From albert.brandl at weiermayer.com  Tue Feb  1 01:44:45 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 1 Feb 2011 09:44:45 +0100
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
Message-ID: <20110201084445.GA2172@weiermayer.com>

On Mon, Jan 31, 2011 at 02:41:38PM -0500, Tom Davis wrote:
> Thoughts?

I think that the overview in the first two sections is very good. It 
made me curious to learn more.

The "breadcrumbs" on the main page look like this:
"Contents   ::   Serving on the Web — HTML, CGI, WSGI, etc.  » "
Might be a problem with the Sphinx configuration.

Not sure about the link "read more about Twisted": There _is_ more about 
Twisted on the rest of the page. When I clicked the link, I expected to 
be redirected to twistedmatrix.com or something like this. Maybe you 
don't need a link at this position at all.

In the "Why Use Twisted" section, you write "Framework" - not sure if 
this should be uppercased. But there are some other nouns (Tasks, 
Project Documentation) that are written this way, so maybe it's Your 
Way Of Emphasizing Things ;-). 

I'm also not sure if the explanation why I would use Twisted should be 
in bold letters. Everywhere else you use italics.

Do you intend to create a task description for connecting to an SSH 
server (maybe with certificates)? This is something that whould have 
been handy for me in the past.

The "Everything Else" section should not contain links that are already 
presented somewhere else. 

Do you intend to add some links to external pages here (e.g. the API 
documentation or other web pages describing how to use the framework)? 
Or should this documentation be self-contained?

One small usability quirk: The presentation of links in an orange, bold 
font does not have much recognition value. I think it would be better to 
use the standard way of marking links by using a blue, underlined font. 
The same goes for links that have already been visited.

Best regards, 

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From tom at recursivedream.com  Tue Feb  1 07:05:32 2011
From: tom at recursivedream.com (Tom Davis)
Date: Tue, 1 Feb 2011 09:05:32 -0500
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <20110201084445.GA2172@weiermayer.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<20110201084445.GA2172@weiermayer.com>
Message-ID: <AANLkTimy3YUBw7rdLXNwSCvzgCxb80htP06w-d_xGG6Q@mail.gmail.com>

On Tue, Feb 1, 2011 at 3:44 AM, Albert Brandl
<albert.brandl at weiermayer.com>wrote:

> On Mon, Jan 31, 2011 at 02:41:38PM -0500, Tom Davis wrote:
> > Thoughts?
>
> I think that the overview in the first two sections is very good. It
> made me curious to learn more.
>
> The "breadcrumbs" on the main page look like this:
> "Contents   ::   Serving on the Web — HTML, CGI, WSGI, etc.  » "
> Might be a problem with the Sphinx configuration.
>

Yeah, this is just how the Sphinx template lays things out and it's the
default one I use for documentation on my site, merely because the color
scheme is similar. It's definitely not the greatest and a Twisted-theme one
already exists so we'll be working from that.


>
> Not sure about the link "read more about Twisted": There _is_ more about
> Twisted on the rest of the page. When I clicked the link, I expected to
> be redirected to twistedmatrix.com or something like this. Maybe you
> don't need a link at this position at all.
>

Well, that was originally going to lead to some history/about stuff, but
looking at it again that doesn't seem like an initially great use of time.


>
> In the "Why Use Twisted" section, you write "Framework" - not sure if
> this should be uppercased. But there are some other nouns (Tasks,
> Project Documentation) that are written this way, so maybe it's Your
> Way Of Emphasizing Things ;-).
>
> I'm also not sure if the explanation why I would use Twisted should be
> in bold letters. Everywhere else you use italics.
>
> Do you intend to create a task description for connecting to an SSH
> server (maybe with certificates)? This is something that whould have
> been handy for me in the past.
>

Either create or expose one that already exists, yes.


>
> The "Everything Else" section should not contain links that are already
> presented somewhere else.
>

These are ToC trees which are different from inline links. I don't feel
there's much harm in linking to something twice on one page especially when
the same words are used and one of the uses is clearly a ToC.


>
> Do you intend to add some links to external pages here (e.g. the API
> documentation or other web pages describing how to use the framework)?
> Or should this documentation be self-contained?
>

API links will be common and will be under some reference/links area, I'm
sure. It is very much a work in progress.


>
> One small usability quirk: The presentation of links in an orange, bold
> font does not have much recognition value. I think it would be better to
> use the standard way of marking links by using a blue, underlined font.
> The same goes for links that have already been visited.
>

Again, this is a Sphinx template issue so we'll see how it changes with the
actual Twisted one :)

Thanks for the feedback!

-Tom


>
> Best regards,
>
> Albert
> --
> Albert Brandl
> Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
> phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
> web: http://www.weiermayer.com
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110201/532f18e9/attachment-0001.html>

From tom at recursivedream.com  Tue Feb  1 07:05:26 2011
From: tom at recursivedream.com (Tom Davis)
Date: Tue, 1 Feb 2011 09:05:26 -0500
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <20110131231956.1699.1955561813.divmod.xquotient.459@localhost.localdomain>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<BAEC1D4F-2990-4DA7-81CE-82B3BF8A2A92@twistedmatrix.com>
	<AANLkTikMH5Uj+Q35SkQLTDgi_Qdnk2z4J3hgjvUtry5O@mail.gmail.com>
	<20110131231956.1699.1955561813.divmod.xquotient.459@localhost.localdomain>
Message-ID: <AANLkTi=5oSp7C=TiHwstmBKx19ZprBavdN76m3YA2+Xy@mail.gmail.com>

On Mon, Jan 31, 2011 at 6:19 PM, <exarkun at twistedmatrix.com> wrote:

> On 10:39 pm, tom at recursivedream.com wrote:
> >
> >Take <
> >http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/static-
> >content.html
> >>:
> >
> >Tell me the one command I need to serve a directory, *then* show me the
> >code
> >that one command effectively runs and vaguely what it does.
>
> I think this is partially a disagreement over what tasks we actually
> want to document.  If the command line interface gets primacy in the
> documentation, then I think you're writing documentation for end users
> (sys admins, non-programmers).  I don't know about anyone else, but this
> category of documentation hadn't really crossed my mind before.
>
> I think that (ultimately) this is good documentation to have, but I
> don't know if it's as important as getting the programmer-oriented
> documentation in better shape.
>
> Another point to consider is that "twistd web" (and most other twistd
> plugins we provide) are semi-random mish mashes of functionality.  They
> have accreted by contribution from many different people over the years
> with no governing design or goal aside from "expose features from the
> command line".  This does not make them the friendliest tools around.
> The functionality they are missing is often surprising, particularly
> when contrasted with some of the (non-)functionality they do provide.
>
> I don't want to say that they do not bear documenting until their state
> is improved, but if we focused on other areas first, maybe we would have
> something better to document when we eventually get around to things
> like "twistd web".
>

I look at it from a pragmatic point of view: If the task is called "serving
HTML" and you *can* do that with a single command line argument, I'm willing
to possibly waste a sentence exposing something unideal or incomplete if it
fixes the visitor's problem *right now*. That's simply not a lot of effort
 for a good deal of gain. Immediately after that command line section should
be a dive into the actual code (or at least enough to get serving via a
python file).

I suppose you may disagree with task-based views entirely. The using
twisted.web "howto" isn't really one at all. It covers many / all of the
serving aspects of twisted.web which is cool and necessary, but the actual
building block tasks are buried.

It's still early and I'm not sure how much sense I'm making here. I think a
more complete example of what I'm talking about could serve to remedy a lot
of these issues and show that what everybody wants (and already has) is
still present, just moved to a more logical place.


>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110201/79dc8ef8/attachment.html>

From albert.brandl at weiermayer.com  Tue Feb  1 07:52:49 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 1 Feb 2011 15:52:49 +0100
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <AANLkTimy3YUBw7rdLXNwSCvzgCxb80htP06w-d_xGG6Q@mail.gmail.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<20110201084445.GA2172@weiermayer.com>
	<AANLkTimy3YUBw7rdLXNwSCvzgCxb80htP06w-d_xGG6Q@mail.gmail.com>
Message-ID: <20110201145249.GA6169@weiermayer.com>

On Tue, Feb 01, 2011 at 09:05:32AM -0500, Tom Davis wrote:
>     The "breadcrumbs" on the main page look like this:
>     "Contents   ::   Serving on the Web   HTML, CGI, WSGI, etc.    "
>     Might be a problem with the Sphinx configuration.
> 
> Yeah, this is just how the Sphinx template lays things out and it's the 
> default one I use for documentation on my site, merely because the 
> color scheme is similar. It's definitely not the greatest and a 
> Twisted-theme one already exists so we'll be working from that.

I was talking about the _content_ of the breadcrumbs. The main page
should not contain the "Serving on the Web..." breadcrumb IMO.

> These are ToC trees which are different from inline links. I don't feel 
> there's much harm in linking to something twice on one page especially 
> when the same words are used and one of the uses is clearly a ToC.

Maybe the title of the section should be renamed, then.

> Thanks for the feedback!

You're welcome!

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From glyph at twistedmatrix.com  Tue Feb  1 10:55:57 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 1 Feb 2011 09:55:57 -0800
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <20110131231956.1699.1955561813.divmod.xquotient.459@localhost.localdomain>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<BAEC1D4F-2990-4DA7-81CE-82B3BF8A2A92@twistedmatrix.com>
	<AANLkTikMH5Uj+Q35SkQLTDgi_Qdnk2z4J3hgjvUtry5O@mail.gmail.com>
	<20110131231956.1699.1955561813.divmod.xquotient.459@localhost.localdomain>
Message-ID: <D76EAB42-26F3-4567-9AF8-B097F5C717EF@twistedmatrix.com>


On Jan 31, 2011, at 3:19 PM, exarkun at twistedmatrix.com wrote:

> On 10:39 pm, tom at recursivedream.com wrote:
>> 
>> Take <
>> http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/static- 
>> content.html
>>> :
>> 
>> Tell me the one command I need to serve a directory, *then* show me the 
>> code
>> that one command effectively runs and vaguely what it does.
> 
> I think this is partially a disagreement over what tasks we actually 
> want to document.  If the command line interface gets primacy in the 
> documentation, then I think you're writing documentation for end users 
> (sys admins, non-programmers).  I don't know about anyone else, but this 
> category of documentation hadn't really crossed my mind before.

Yes, and that's not good.  We should be thinking about those people a little more :).  Twisted is still mostly a library, but aside from my personal scheming to make it into something more, there's also the fact that users and sysadmins eventually need to interact with systems written using Twisted and there are basically no resources for them to learn to manage said systems.

As much controversy as there is over exactly how good or bad our docs are, I think we can all agree that admin/user docs are in much worse shape than our developer docs (i.e. they are non-existant) :).

But more importantly...

> I think that (ultimately) this is good documentation to have, but I 
> don't know if it's as important as getting the programmer-oriented 
> documentation in better shape.

I think that this is actually a better way to deal with most of our programmer-focused documentation.

Most importantly, the first rule here is very important: <http://jacobian.org/writing/great-documentation/what-to-write/>.  "Be quick.".  Good documentation writers frequently stress the importance of immediate gratification.  Good game designers will also tell you that you want to get a user engaged and experiencing success during the tutorial, before they really know how to play the game.  The immediate dopamine hit from a working 'twistd' command-line will carry the user through the slightly more confusing parts of getting their own code to work: it assures them that they can get Twisted to do _something_, which gives them immediate hope that maybe one day they can get Twisted to do what they want.

A corollary to this is that if it's going to fail, it can fail faster, and we all know that one should fail as fast as possible.  If the 'twistd' command-line doesn't even work, that lets the tutorial reader address configuration and installation issues much earlier on, rather than try to debug them as issues with their own code, they can just say, 'I ran this command and I got a traceback', which will get the attention of a Twisted maintainer more quickly because it's easier to diagnose something that's purely under our own control than a (potentially arbitrary, even if small) pile of new code.

I actually think that the inclusion of the 'twistd web' command-lines is one of the things that made the web-in-60-seconds tutorial series a big improvement over our previous web documentation :).

> Another point to consider is that "twistd web" (and most other twistd 
> plugins we provide) are semi-random mish mashes of functionality.  They 
> have accreted by contribution from many different people over the years 
> with no governing design or goal aside from "expose features from the 
> command line".  This does not make them the friendliest tools around. 
> The functionality they are missing is often surprising, particularly 
> when contrasted with some of the (non-)functionality they do provide.

No argument here.  Le sigh.

> I don't want to say that they do not bear documenting until their state 
> is improved, but if we focused on other areas first, maybe we would have 
> something better to document when we eventually get around to things 
> like "twistd web".

I _want_ people to show up on the tracker and actually report usability issues and missing functionality from the command-line tools.  It's still surprising to a lot of people, even very experienced twisted people, just how much functionality is exposed by those tools.  And if nobody knows the tools are there, then chances are they will remain a non-priority forever, as functional library issues will continue to get reported by the much wider audience that's actually using them.  Plus, on the bright side, the increasing prevalence of the use of cred and endpoint string-plugin APIs means that some of the twistd plugins are starting to become actually useful for things where they weren't before.  'twistd' web, in particular, also has RPYs, which almost turn it into a full-featured server; other servers should have similar application-level plugins.

(And as I finish writing this, I think: 'twistd web' could be _really_ pretty useful if it weren't such a pain to deploy a WSGI app using an RPY, thanks to threadpools etc.  We should add a utility function or something.  Anybody feel like writing a ticket?  I have heard references to '.wsgi' files, is that a thing we could support?)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110201/3bbed048/attachment.html>

From glyph at twistedmatrix.com  Tue Feb  1 10:58:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 1 Feb 2011 09:58:59 -0800
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
Message-ID: <88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>


On Jan 31, 2011, at 11:41 AM, Tom Davis wrote:

> Thoughts?


Priority #1 for most people who are enthusiastic about documentation is to come in and write a ton of additional documentation.  But this is a lot like trying to fix a large, broken, untested system by writing a pile of new, untested code, because "this time we'll get the design right".  What were the problems with the way the previous documentation got written?  How did we end up with this mess, and what is going to be done differently this time?  Most importantly, what is the metric by which we will judge this new documentation to be better?

If all that comes out of your efforts is a new, different pile of documentation, that's not entirely without value; different audiences understand things in different ways, so someone might pick it up and understand Twisted as a result.  But I very much doubt that's going to move us from a general impression of "bad docs" to a general impression of "good docs".

More specific criticism:

"This is a Twisted Task"?  I feel like I'm about to start reading about a Task object or something related to the twisted.internet.task module.  Or maybe that this is an exercise.  A document explaining how to do a task is rarely called a "task" itself.  Mostly they're called "How-To"s, actually.  I understand you're trying to get away from old terminology but this seems awkward and forced.
"You should be familiar with Resources"?  That is really broad and wide-ranging and should be a hyperlink to another tutorial.  Plus, I think that most people interested in these tasks will want to learn about how to get simple tasks done first, before moving on to a more abstract / theoretical understanding of the model behind them.  More importantly: this is a very wishy-washy definition of the audience.  Is it for system administrators?  Software developers?  DevOps people?  Graphic designers?  Power users?  What level of experience do they need with Python?  With networking?  With HTTP?
"Other configuration options are available"?  This should be a list of links to other documents that might help with some of those options.  Documentation which says "and then you could do something else" without telling you what else or why is needlessly confusing.
The WSGI example totally glosses over how you get your code onto sys.path (PYTHONPATH etc), says that 'helloworld' is a module/package (which is it?  why are both options given?).  This is an extremely confusing area for newbies, which is why it actually makes a bit of sense to me that the web-in-60-seconds WSGI tutorial starts with a callable defined in the .tac.  Not a good practice in the long term, but it allows the user to immediately get some feedback and have some notion of how things are wired together without having to debug Python's import system first.
.rpy scripts are for deployment, not debugging; I was a little concerned seeing that bullet point on the outline.  (See <http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/rpy-scripts.html>.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110201/550f129d/attachment.html>

From kevin.horn at gmail.com  Tue Feb  1 11:14:11 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 1 Feb 2011 12:14:11 -0600
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <D76EAB42-26F3-4567-9AF8-B097F5C717EF@twistedmatrix.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<BAEC1D4F-2990-4DA7-81CE-82B3BF8A2A92@twistedmatrix.com>
	<AANLkTikMH5Uj+Q35SkQLTDgi_Qdnk2z4J3hgjvUtry5O@mail.gmail.com>
	<20110131231956.1699.1955561813.divmod.xquotient.459@localhost.localdomain>
	<D76EAB42-26F3-4567-9AF8-B097F5C717EF@twistedmatrix.com>
Message-ID: <AANLkTikGaqwj1inRnaoKjbuiFizVoTZ9AAcGvxpo-eZM@mail.gmail.com>

On Tue, Feb 1, 2011 at 11:55 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jan 31, 2011, at 3:19 PM, exarkun at twistedmatrix.com wrote:
>
> On 10:39 pm, tom at recursivedream.com wrote:
>
>
> Take <
>
> http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/static-
>
> content.html
>
> :
>
>
> Tell me the one command I need to serve a directory, *then* show me the
>
> code
>
> that one command effectively runs and vaguely what it does.
>
>
> I think this is partially a disagreement over what tasks we actually
> want to document.  If the command line interface gets primacy in the
> documentation, then I think you're writing documentation for end users
> (sys admins, non-programmers).  I don't know about anyone else, but this
> category of documentation hadn't really crossed my mind before.
>
>
> Yes, and that's not good.  We should be thinking about those people a
> little more :).  Twisted is still mostly a library, but aside from my
> personal scheming to make it into something more, there's also the fact that
> users and sysadmins eventually need to interact with systems written using
> Twisted and there are basically no resources for them to learn to manage
> said systems.
>
> As much controversy as there is over exactly how good or bad our docs are,
> I think we can all agree that admin/user docs are in *much* worse shape
> than our developer docs (i.e. they are non-existant) :).
>
> But more importantly...
>
> I think that (ultimately) this is good documentation to have, but I
> don't know if it's as important as getting the programmer-oriented
> documentation in better shape.
>
>
> I think that this is actually a better way to deal with most of our
> programmer-focused documentation.
>
> Most importantly, the first rule here is very important: <
> http://jacobian.org/writing/great-documentation/what-to-write/>.  "Be
> quick.".  Good documentation writers frequently stress the importance of
> immediate gratification.  Good game designers will also tell you that you
> want to get a user engaged and experiencing success during the tutorial,
> before they really know how to play the game.  The immediate dopamine hit
> from a working 'twistd' command-line will carry the user through the
> slightly more confusing parts of getting their own code to work: it assures
> them that they can get Twisted to do _something_, which gives them immediate
> hope that maybe one day they can get Twisted to do what they want.
>
> A corollary to this is that if it's going to fail, it can fail faster, and
> we all know that one should fail as fast as possible.  If the 'twistd'
> command-line doesn't even work, that lets the tutorial reader address
> configuration and installation issues much earlier on, rather than try to
> debug them as issues with their own code, they can just say, 'I ran this
> command and I got a traceback', which will get the attention of a Twisted
> maintainer more quickly because it's easier to diagnose something that's
> purely under our own control than a (potentially arbitrary, even if small)
> pile of new code.
>
> I actually think that the inclusion of the 'twistd web' command-lines is
> one of the things that made the web-in-60-seconds tutorial series a big
> improvement over our previous web documentation :).
>
> Another point to consider is that "twistd web" (and most other twistd
> plugins we provide) are semi-random mish mashes of functionality.  They
> have accreted by contribution from many different people over the years
> with no governing design or goal aside from "expose features from the
> command line".  This does not make them the friendliest tools around.
> The functionality they are missing is often surprising, particularly
> when contrasted with some of the (non-)functionality they do provide.
>
>
> No argument here.  Le sigh.
>
> I don't want to say that they do not bear documenting until their state
> is improved, but if we focused on other areas first, maybe we would have
> something better to document when we eventually get around to things
> like "twistd web".
>
>
> I _want_ people to show up on the tracker and actually report usability
> issues and missing functionality from the command-line tools.  It's still
> surprising to a lot of people, even very experienced twisted people, just
> how much functionality *is* exposed by those tools.  And if nobody knows
> the tools are there, then chances are they will remain a non-priority
> forever, as functional library issues will continue to get reported by the
> much wider audience that's actually using them.  Plus, on the bright side,
> the increasing prevalence of the use of cred and endpoint string-plugin APIs
> means that some of the twistd plugins are starting to become actually useful
> for things where they weren't before.  'twistd' web, in particular, also has
> RPYs, which *almost* turn it into a full-featured server; other servers
> should have similar application-level plugins.
>
> (And as I finish writing this, I think: 'twistd web' could be _really_
> pretty useful if it weren't such a pain to deploy a WSGI app using an RPY,
> thanks to threadpools etc.  We should add a utility function or something.
>  Anybody feel like writing a ticket?  I have heard references to '.wsgi'
> files, is that a thing we could support?)
>
>
>
Agree pretty much 100% with everything Glyph said.  As I've been working on
the Sphinx conversion, I've read (or at least skimmed) pretty much every
piece of documentation Twisted provides.  And I've been surprised both by
things I never expected to see, and by the stuff that is glaringly missing.
Also that the man pages are almost totally divorced from the rest of the
docs.  Another thing I'd like to remedy.  I'm really hoping that both the
Sphinx changeover as well as the other recent attention to docs will make
the docs easier to use, and also highlight some of the arcane and strange
places in the various APIs.  I'm hoping some intrepid docs-author/editor
will be reading/writing along and go "Wait. What?  It works like what?  That
doesn't make any sense.   I'm filing a ticket, that needs to be fixed!"

Maybe I'm too optimistic, but I'd still like to see it.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110201/65d85774/attachment.html>

From jasonjwwilliams at gmail.com  Tue Feb  1 11:25:02 2011
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 1 Feb 2011 11:25:02 -0700
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <BAEC1D4F-2990-4DA7-81CE-82B3BF8A2A92@twistedmatrix.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<BAEC1D4F-2990-4DA7-81CE-82B3BF8A2A92@twistedmatrix.com>
Message-ID: <AANLkTi=_C8vSmTcfVUadHPY+PDvdWT4a9rE+B5MqJb-c@mail.gmail.com>

On Jan 31, 2011, at 11:41 AM, Tom Davis wrote:
>
> Thoughts?

Overall I think the layout and structure is a big improvement over the
current Twisted documentation. It's easier to navigate and grok where
you want to go. While the content of the web tutorial is thin, I think
Jean-Paul's Twisted Web in 60 seconds adapted to that style and layout
would help a lot. This documentation looks the part, which is
something Twisted really needs.

-J



From tom at recursivedream.com  Tue Feb  1 11:53:09 2011
From: tom at recursivedream.com (Tom Davis)
Date: Tue, 1 Feb 2011 13:53:09 -0500
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
Message-ID: <AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>

On Tue, Feb 1, 2011 at 12:58 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jan 31, 2011, at 11:41 AM, Tom Davis wrote:
>
> Thoughts?
>
>
> Priority #1 for most people who are enthusiastic about documentation is to
> come in and write a ton of additional documentation.  But this is a lot like
> trying to fix a large, broken, untested system by writing a pile of new,
> untested code, because "this time we'll get the design right".  What were
> the problems with the way the previous documentation got written?  How did
> we end up with this mess, and what is going to be done differently this
> time?  Most importantly, *what is the metric by which we will judge this
> new documentation to be better?*
>

Those tutorials aren't new at all; they were taken (often verbatim) from the
"using twisted.web" document. Writing a ton of new documentation really
isn't my goal at all. My goals are threefold:

   1. Reorganize existing documentation in a way that makes it more
   accessible.
   2. Edit existing documentation to conform to a task (howto/tutorial/etc.)
   vs. expanded learning model. (the whole instant gratification thing and all
   that)
   3. Gradually update / replace code listings with "current best practices"
   examples that are tested.

I know you want an actual *layout* for the reorganization. I want to give
that to you, but it requires going through all the documentation and making
sure it fits in the reorganized layout or making sections for it when it
doesn't which is far more time consuming than providing a layout for the
"task" piece, as I did here. I'm basically just saying "How-tos should have
a standard layout with these sections; here's a stub of one such how-to as
incompletely adapted from the current documentation".

I think most of this is a huge misunderstanding as to my goals both in
general and for the particular section critiqued here. Perhaps I should have
completed it before putting it up for review. I just felt it was better to
get *something* out here just in case everybody hated the entire direction
rather than spend a ton of time slicing the current web server docs the way
I personally feel they should fit together in order to properly serve the
audience.


>
> If all that comes out of your efforts is a new, different pile of
> documentation, that's not *entirely* without value; different audiences
> understand things in different ways, so someone might pick it up and
> understand Twisted as a result.  But I very much doubt that's going to move
> us from a general impression of "bad docs" to a general impression of "good
> docs".
>
> More specific criticism:
>
>
>    - "This is a Twisted Task"?  I feel like I'm about to start reading
>    about a Task object or something related to the twisted.internet.task
>    module.  Or maybe that this is an exercise.  A document explaining how to do
>    a task is rarely called a "task" itself.  Mostly they're called "How-To"s,
>    actually.  I understand you're trying to get away from old terminology but
>    this seems awkward and forced.
>
> I just started using this terminology because it seemed common within our
conversations. How-to/tutorial would likely be less confusing.

>
>    - "You should be familiar with Resources"?  That is really broad and
>    wide-ranging and should be a hyperlink to another tutorial.
>
> It was just a placeholder; it should link to a section in the web server
overview docs that talks about Resources. There are other things on that
list, too (Site object, yada yada). Although, like I said, it's merely
incomplete.


>
>    -  Plus, I think that most people interested in these tasks will want
>    to learn about how to get simple tasks done first, before moving on to a
>    more abstract / theoretical understanding of the model behind them.
>
> I completely agree. That's my whole point with starting off using *twistd*,
despite its limitations or whatever.

>
>    - More importantly: this is a very wishy-washy definition of the
>    audience.  Is it for system administrators?  Software developers?  DevOps
>    people?  Graphic designers?  Power users?  What level of experience do they
>    need with Python?  With networking?  With HTTP?
>
> The latter should all be under "Prerequisites" whereas "audience" should
probably be a new howto standard section that's currently overlooked
(perhaps above "Prerequisites"?)

>
>    - "Other configuration options are available"?  This should be a list
>    of links to other documents that might help with some of those options.
>     Documentation which says "and then you could do something else" without
>    telling you what else or why is needlessly confusing.
>
> I agree. There are lots and lots of lines to connect even from such a
simplistic tutorial. I wanted to get feedback on the *layout* rather than
the final web project documentation which should certainly include links to
twistd option docs and probably a half dozen other things I haven't linked
to yet.

>
>    - The WSGI example totally glosses over how you get your code onto
>    sys.path (PYTHONPATH etc), says that 'helloworld' is a module/package (which
>    is it?  why are both options given?).  This is an *extremely* confusing
>    area for newbies, which is why it actually makes a bit of sense to me that
>    the web-in-60-seconds WSGI tutorial starts with a callable defined in the
>    .tac.  Not a good practice in the long term, but it allows the user to
>    immediately get some feedback and have some notion of how things are wired
>    together without having to debug Python's import system first.
>
> Fair enough. This point was also not covered in the official docs, where I
got the instructions from. Regardless, I have no intention of including
how-tos that gloss over *anything; *either they work "out of the box" or are
edited until they do.

>
>    - .rpy scripts are for deployment, not debugging; I was a little
>    concerned seeing that bullet point on the outline.  (See <
>    http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/rpy-scripts.html
>    >.)
>
> Huh? The docs you link to claim:

So, while rpy scripts may be useful for testing out ideas, they're not
> recommend for much more than that.


Am I missing something here?

* * *

My hope is that this reply clears up some confusion. However, feel free to
let me know if you think I simply don't have the mindset necessary to
"improve" the documentation in a way that is desirable. I had a hard time
learning Twisted in the beginning and to this day some really helpful
abstractions and just available projects / solved problems elude me.

I think the reason for this is that I think a lot like Jacob <
http://jacobian.org/writing/great-documentation/> when it comes to
documentation and that's the sort of stuff I need to have in order to truly
grok something. Maybe that's what we all want here. Maybe it isn't, though.
And I'd really love to figure out which it is before I drive forward on
this. If we really are on the same page (and I'd certainly like to be),
we've got some hellish communication issues ;)


>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110201/f489659a/attachment.html>

From exarkun at twistedmatrix.com  Tue Feb  1 12:02:15 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 01 Feb 2011 19:02:15 -0000
Subject: [Twisted-Python] Fingering Finger
In-Reply-To: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
References: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
Message-ID: <20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>

On 22 Jan, 10:14 pm, tom at recursivedream.com wrote:
>In this thread, I hope to find a resolution to the issue of the Finger
>tutorial and efforts to sufficiently improve it or remove it.
>
>In the course of reviewing documentation-related tickets, I stumbled 
>upon
>#1148 (http://twistedmatrix.com/trac/ticket/1148). Therein, Glyph 
>first(?)
>put down a lot of things we've been discussing and agreeing upon in the
>Refactoring Documentation thread. One of the issues still up for debate 
>is
>whether or not the Finger tutorial is sufficiently strong to survive 
>the
>documentation overhaul. There are various points against it right now:
>
>   - It isn't tested or even test*able*
>   - It doesn't cover "best practices" as they relate to writing 
>testable,
>   maintainable code, etc.
>   - It attempts to implement basically every main Twisted concept, 
>often in
>   contrived or poorly-executed ways
>   - It has been said it has, "...at best, the potential for 
>mediocrity."
>
>There are also enough tickets related to refactoring / rewriting it 
>that a
>resolution would make a significant dent in the list of stale 
>documentation
>tickets. Among these two year-old tickets are:
>
>   - http://twistedmatrix.com/trac/ticket/532 - Big jump from 
>finger18.py to
>   finger19.py in tutorial
>   - http://twistedmatrix.com/trac/ticket/626 - Split tutorial finger 
>code
>   into libraries
>   - http://twistedmatrix.com/trac/ticket/2205 - Documentation 
>codelistings
>   need updating and tests
>
>This shouldn't be a blocker on anything Kevin and I are doing, but it'd 
>be
>nice to concurrently have discussions on issues we'll need to address 
>later.
>I'm also pretty anal about ticket lists and if these aren't going 
>anywhere
>I'd love to close them ;)

In an attempt to elicit some feedback on this, let me try casting the 
issue in a different light.

Does anyone think the finger tutorial shouldn't be deleted?  Why?

Jean-Paul



From kevin.horn at gmail.com  Tue Feb  1 12:10:13 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 1 Feb 2011 13:10:13 -0600
Subject: [Twisted-Python] Fingering Finger
In-Reply-To: <20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
References: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
	<20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
Message-ID: <AANLkTimTSTv3ejLgRedkE9LSX9tYrrHrE8-b9Rq_iH=X@mail.gmail.com>

On Tue, Feb 1, 2011 at 1:02 PM, <exarkun at twistedmatrix.com> wrote:

> On 22 Jan, 10:14 pm, tom at recursivedream.com wrote:
> >In this thread, I hope to find a resolution to the issue of the Finger
> >tutorial and efforts to sufficiently improve it or remove it.
> >
> >In the course of reviewing documentation-related tickets, I stumbled
> >upon
> >#1148 (http://twistedmatrix.com/trac/ticket/1148). Therein, Glyph
> >first(?)
> >put down a lot of things we've been discussing and agreeing upon in the
> >Refactoring Documentation thread. One of the issues still up for debate
> >is
> >whether or not the Finger tutorial is sufficiently strong to survive
> >the
> >documentation overhaul. There are various points against it right now:
> >
> >   - It isn't tested or even test*able*
> >   - It doesn't cover "best practices" as they relate to writing
> >testable,
> >   maintainable code, etc.
> >   - It attempts to implement basically every main Twisted concept,
> >often in
> >   contrived or poorly-executed ways
> >   - It has been said it has, "...at best, the potential for
> >mediocrity."
> >
> >There are also enough tickets related to refactoring / rewriting it
> >that a
> >resolution would make a significant dent in the list of stale
> >documentation
> >tickets. Among these two year-old tickets are:
> >
> >   - http://twistedmatrix.com/trac/ticket/532 - Big jump from
> >finger18.py to
> >   finger19.py in tutorial
> >   - http://twistedmatrix.com/trac/ticket/626 - Split tutorial finger
> >code
> >   into libraries
> >   - http://twistedmatrix.com/trac/ticket/2205 - Documentation
> >codelistings
> >   need updating and tests
> >
> >This shouldn't be a blocker on anything Kevin and I are doing, but it'd
> >be
> >nice to concurrently have discussions on issues we'll need to address
> >later.
> >I'm also pretty anal about ticket lists and if these aren't going
> >anywhere
> >I'd love to close them ;)
>
> In an attempt to elicit some feedback on this, let me try casting the
> issue in a different light.
>
> Does anyone think the finger tutorial shouldn't be deleted?  Why?
>
> Jean-Paul
>
>
I actually found it very helpful back when I was first learning Twisted.  I
admit I haven't really read it critically in several years though.  If it is
to be removed, I think it would be a good idea to replace it with something
similar (i.e. a step-by-step implementation of a protocol).

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110201/f6bafd64/attachment.html>

From agasson at red-elvis.net  Tue Feb  1 12:19:51 2011
From: agasson at red-elvis.net (Andrew Gasson)
Date: Tue, 1 Feb 2011 19:19:51 +0000
Subject: [Twisted-Python] Fingering Finger
In-Reply-To: <AANLkTimTSTv3ejLgRedkE9LSX9tYrrHrE8-b9Rq_iH=X@mail.gmail.com>
References: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
	<20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
	<AANLkTimTSTv3ejLgRedkE9LSX9tYrrHrE8-b9Rq_iH=X@mail.gmail.com>
Message-ID: <4E28D8B1-21BC-430C-8BE4-D1C1D3483920@red-elvis.net>


On 1/02/2011, at 7:10 PM, Kevin Horn wrote:

> On Tue, Feb 1, 2011 at 1:02 PM, <exarkun at twistedmatrix.com> wrote:
> On 22 Jan, 10:14 pm, tom at recursivedream.com wrote:
> >In this thread, I hope to find a resolution to the issue of the Finger
> >tutorial and efforts to sufficiently improve it or remove it.
> >
> >In the course of reviewing documentation-related tickets, I stumbled
> >upon
> >#1148 (http://twistedmatrix.com/trac/ticket/1148). Therein, Glyph
> >first(?)
> >put down a lot of things we've been discussing and agreeing upon in the
> >Refactoring Documentation thread. One of the issues still up for debate
> >is
> >whether or not the Finger tutorial is sufficiently strong to survive
> >the
> >documentation overhaul. There are various points against it right now:
> >
> >   - It isn't tested or even test*able*
> >   - It doesn't cover "best practices" as they relate to writing
> >testable,
> >   maintainable code, etc.
> >   - It attempts to implement basically every main Twisted concept,
> >often in
> >   contrived or poorly-executed ways
> >   - It has been said it has, "...at best, the potential for
> >mediocrity."
> >
> >There are also enough tickets related to refactoring / rewriting it
> >that a
> >resolution would make a significant dent in the list of stale
> >documentation
> >tickets. Among these two year-old tickets are:
> >
> >   - http://twistedmatrix.com/trac/ticket/532 - Big jump from
> >finger18.py to
> >   finger19.py in tutorial
> >   - http://twistedmatrix.com/trac/ticket/626 - Split tutorial finger
> >code
> >   into libraries
> >   - http://twistedmatrix.com/trac/ticket/2205 - Documentation
> >codelistings
> >   need updating and tests
> >
> >This shouldn't be a blocker on anything Kevin and I are doing, but it'd
> >be
> >nice to concurrently have discussions on issues we'll need to address
> >later.
> >I'm also pretty anal about ticket lists and if these aren't going
> >anywhere
> >I'd love to close them ;)
> 
> In an attempt to elicit some feedback on this, let me try casting the
> issue in a different light.
> 
> Does anyone think the finger tutorial shouldn't be deleted?  Why?
> 
> Jean-Paul
> 
> 
> I actually found it very helpful back when I was first learning Twisted.  I admit I haven't really read it critically in several years though.  If it is to be removed, I think it would be a good idea to replace it with something similar (i.e. a step-by-step implementation of a protocol).
> 
> Kevin Horn

I hate deleting anything as there could be good tidbits there for someone. Can we just depreciate it and but strong warning at top of all finger docs to say they are outdated and maynot be the current best practice ?

Gas

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110201/be3ab06e/attachment.html>

From jon at multani.info  Tue Feb  1 12:33:59 2011
From: jon at multani.info (Jonathan Ballet)
Date: Tue, 1 Feb 2011 20:33:59 +0100
Subject: [Twisted-Python] Fingering Finger
In-Reply-To: <20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
References: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
	<20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
Message-ID: <20110201203359.122b4212@gourami>

Le Tue, 01 Feb 2011 19:02:15 -0000, exarkun at twistedmatrix.com a écrit :

> In an attempt to elicit some feedback on this, let me try casting the 
> issue in a different light.
> 
> Does anyone think the finger tutorial shouldn't be deleted?  Why?

I think one of the advantage of this tutorial is that it presents a
step-by-step overview of the various Twisted concepts, although it's not
perfect, as Tom raised in this thread and as other people did somewhere else.

Is there any other documentation that does this, yet?

 Jonathan



From glyph at twistedmatrix.com  Tue Feb  1 12:41:49 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 1 Feb 2011 11:41:49 -0800
Subject: [Twisted-Python] Fingering Finger
In-Reply-To: <AANLkTimTSTv3ejLgRedkE9LSX9tYrrHrE8-b9Rq_iH=X@mail.gmail.com>
References: <AANLkTi=JU2S3eJcn9u=dPq_q_S8=zk=gDgo-SuZGo7pe@mail.gmail.com>
	<20110201190215.1699.1435715873.divmod.xquotient.466@localhost.localdomain>
	<AANLkTimTSTv3ejLgRedkE9LSX9tYrrHrE8-b9Rq_iH=X@mail.gmail.com>
Message-ID: <6FECDE47-0A13-465C-8E9A-2B48D6712595@twistedmatrix.com>


On Feb 1, 2011, at 11:10 AM, Kevin Horn wrote:

> I actually found it very helpful back when I was first learning Twisted.  I admit I haven't really read it critically in several years though.  If it is to be removed, I think it would be a good idea to replace it with something similar (i.e. a step-by-step implementation of a protocol).

This seems to be the consensus about the finger tutorial from people who actually learned about twisted from it.  It's effective documentation, although not perfect.  On the other hand there's some sample bias, I hear a lot more from those people than from the people who couldn't learn about Twisted from it :).

Arguments in favor of deleting it seem to be based mostly on difficulty of maintenance, which are valid, but perhaps overzealous.

The finger tutorial seems better than nothing though, so how about this: we leave it around, but declare a moratorium on maintaining it, and anyone who wants to fix issues with the finger tutorial should be encouraged to write an entirely new tutorial instead, one that would be easier to keep up to date.


From glyph at twistedmatrix.com  Tue Feb  1 15:15:18 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 1 Feb 2011 14:15:18 -0800
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
	<AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
Message-ID: <04986C32-9E18-43F5-8992-BBD970CC9E83@twistedmatrix.com>


On Feb 1, 2011, at 10:53 AM, Tom Davis wrote:

> On Tue, Feb 1, 2011 at 12:58 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> On Jan 31, 2011, at 11:41 AM, Tom Davis wrote:
> 
>> Thoughts?
> 
> 
> Priority #1 for most people who are enthusiastic about documentation is to come in and write a ton of additional documentation.  But this is a lot like trying to fix a large, broken, untested system by writing a pile of new, untested code, because "this time we'll get the design right".  What were the problems with the way the previous documentation got written?  How did we end up with this mess, and what is going to be done differently this time?  Most importantly, what is the metric by which we will judge this new documentation to be better?

I'm still really interested in concise answer to that last question there.  What are the priorities for what you're trying to improve?  What you've listed here is "the steps you're going to take in order to improve it" but I have yet to see a lucid description of the problem in detail.

> Those tutorials aren't new at all; they were taken (often verbatim) from the "using twisted.web" document. Writing a ton of new documentation really isn't my goal at all. My goals are threefold:
> Reorganize existing documentation in a way that makes it more accessible.
Accessible to whom?  How will reorganizing it make it more accessible?  One way to interpret this statement is that your goal is to remove all diagrams, because the documentation is currently not accessible to the blind.  I'm pretty sure that's not what you mean, but it's a good example of how ambiguous this statement is :).  (Plus, the couple of blind developers I've talked to about Twisted didn't seem to have a problem with the docs...)
> Edit existing documentation to conform to a task (howto/tutorial/etc.) vs. expanded learning model. (the whole instant gratification thing and all that)
OK, I'm on board with that.  Except that in order to understand the tutorial documentation you need a good backing of reference docs, so it's not like you can just choose one over the other.  And we have lots of tutorial docs (c.f. the infamous finger tutorial) which are in the tutorial / task-oriented paradigm but don't teach much that's directly useful.
> Gradually update / replace code listings with "current best practices" examples that are tested.
No arguing with that at all, that sounds great.

> I know you want an actual *layout* for the reorganization.

Not really.

What I want is a clear understanding of what you intend to change.  I usually get that by reading a diff: it's easy to read a diff and see what changed in the old versus the new version of something.  I can tell if it's an improvement without having to digest the entire content.

But the structure of <http://docs.recursivedream.com/twisted/> is a sprawling mess of placeholders and half-finished ideas.  It's different from the existing documentation in lots of ways; it has a completely different stylesheet (which I assume is some standard Sphinx thing we will get rid of with the consistent theming work in Kevin's sphinx transition).  I don't know what I'm looking at or how to appreciate it.

This is why I started off by complaining about the separate git repository.  If you're going to work in a separate repository and a separate format and not produce diffs that I can skim, then it's very hard to comment intelligently on your strategy, and you need to take an immense amount of care to call out the sections you consider complete, what exactly you want feedback on, and areas where you have or haven't added new content (so you can't be blamed for issues in old content that you're not trying to update).

Note that diffs against Kevin's sphinx output would basically satisfy this same requirement, even if that output isn't really complete and those diffs would need to be re-created when the final conversion occurred.  At least there would be a set of deltas to look at rather than a whole new structure which is mostly scaffolding.

> I want to give that to you, but it requires going through all the documentation and making sure it fits in the reorganized layout or making sections for it when it doesn't which is far more time consuming than providing a layout for the "task" piece, as I did here. I'm basically just saying "How-tos should have a standard layout with these sections; here's a stub of one such how-to as incompletely adapted from the current documentation".

Even going back and reading your original message to this thread now, I can't tell that this is what you were asking for review of.  Even now I'm not entirely sure what you mean.  Do you mean that you want feedback on the sections on <http://docs.recursivedream.com/twisted/projects/web/tasks/serve/index.html>?  Or the way that <http://docs.recursivedream.com/twisted/projects/web/tasks/serve/serve.html> is split out into separate tasks?

If you are interested in getting a review of the template or the outline, please write up the template itself with a description of what should go into each section.  Then you could link from the template to web/tasks/serve/index and say "and here's an example of some existing documentation applied to this outline".  But since I have no idea what the generic purpose of each section is, I can't comment on whether the sections are a bad idea or the classifications of certain sections of existing docs is a bad idea or if it's just too incomplete for me to comment on.

Plus, such a template would serve as a critical tool for new documentation authors (of which I hope we get a few), allowing for a consistent style to be followed by multiple authors writing task-oriented documentation for different parts of Twisted.  The lack of such meta-documentation is the root of many issues with the current docs: when we're writing code for Twisted, we have a very clear idea of what the coding standards are, but when we approach documentation, the individual author just writes whatever random style happens to suit them on that day.  There's no guidance.

> I think most of this is a huge misunderstanding as to my goals both in general and for the particular section critiqued here. Perhaps I should have completed it before putting it up for review. I just felt it was better to get something out here just in case everybody hated the entire direction rather than spend a ton of time slicing the current web server docs the way I personally feel they should fit together in order to properly serve the audience.

Soliciting feedback is good.  I still think that these discussions have been very productive.  The issue I have isn't that it's unfinished, it's that there are no guard-rails on the unfinished sections, so it's easy to careen off into the stuff that I'm not really supposed to be paying attention to. A substantially larger document with that same problem would have been a disaster to try to review, so early feedback is better; hopefully as you produce something bigger you'll also alleviate the difficulty of review somehow.

> If all that comes out of your efforts is a new, different pile of documentation, that's not entirely without value; different audiences understand things in different ways, so someone might pick it up and understand Twisted as a result.  But I very much doubt that's going to move us from a general impression of "bad docs" to a general impression of "good docs".
> 
> More specific criticism:
> 
> "This is a Twisted Task"?  I feel like I'm about to start reading about a Task object or something related to the twisted.internet.task module.  Or maybe that this is an exercise.  A document explaining how to do a task is rarely called a "task" itself.  Mostly they're called "How-To"s, actually.  I understand you're trying to get away from old terminology but this seems awkward and forced.
> I just started using this terminology because it seemed common within our conversations. How-to/tutorial would likely be less confusing.

OK.  For what it's worth I share your desire for a new / better term but I can't think of one.
> "You should be familiar with Resources"?  That is really broad and wide-ranging and should be a hyperlink to another tutorial.
> It was just a placeholder; it should link to a section in the web server overview docs that talks about Resources. There are other things on that list, too (Site object, yada yada). Although, like I said, it's merely incomplete.

I suppose my comments above about meta-documentation and a deeper explanation of the template are my response to this; if it were clearer what the structure were really supposed to be representing it would be easier to ignore minor flaws like this or recommend improvements 
>  Plus, I think that most people interested in these tasks will want to learn about how to get simple tasks done first, before moving on to a more abstract / theoretical understanding of the model behind them.
> I completely agree. That's my whole point with starting off using *twistd*, despite its limitations or whatever. 

Obviously from my other message I'm a fan of this approach.
> More importantly: this is a very wishy-washy definition of the audience.  Is it for system administrators?  Software developers?  DevOps people?  Graphic designers?  Power users?  What level of experience do they need with Python?  With networking?  With HTTP?
> The latter should all be under "Prerequisites" whereas "audience" should probably be a new howto standard section that's currently overlooked (perhaps above "Prerequisites"?)

It seems to me that "audience" is the section and "prerequisites" should be a sub-section of that.  After all prerequisites are really attributes of the audience, not the document :).
> "Other configuration options are available"?  This should be a list of links to other documents that might help with some of those options.  Documentation which says "and then you could do something else" without telling you what else or why is needlessly confusing.
> I agree. There are lots and lots of lines to connect even from such a simplistic tutorial. I wanted to get feedback on the layout rather than the final web project documentation which should certainly include links to twistd option docs and probably a half dozen other things I haven't linked to yet.

(Again, go write up the layout explicitly first, and then I can provide more useful feedback!)
> The WSGI example totally glosses over how you get your code onto sys.path (PYTHONPATH etc), says that 'helloworld' is a module/package (which is it?  why are both options given?).  This is an extremely confusing area for newbies, which is why it actually makes a bit of sense to me that the web-in-60-seconds WSGI tutorial starts with a callable defined in the .tac.  Not a good practice in the long term, but it allows the user to immediately get some feedback and have some notion of how things are wired together without having to debug Python's import system first.
> Fair enough. This point was also not covered in the official docs, where I got the instructions from. Regardless, I have no intention of including how-tos that gloss over anything; either they work "out of the box" or are edited until they do.

I guess this is another nitpick that wasn't really about the layout.  Sounds like we feel the same way, at any rate.
> .rpy scripts are for deployment, not debugging; I was a little concerned seeing that bullet point on the outline.  (See <http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/rpy-scripts.html>.)
> Huh? The docs you link to claim:
> 
> So, while rpy scripts may be useful for testing out ideas, they're not recommend for much more than that.
> 
> Am I missing something here?

Well, "testing out" and "debugging" aren't quite the same thing.  And I'd probably recommend RPYs for more than that :).  I was linking to that document just to provide an expanded explanation of the functionality; personally I find it obvious why RPYs are super useful from that example, so I mostly just ignore that comment.  (Perhaps this doc needs to be updated, but let's please not hijack this already-sprawling thread for discussion of the merits and flaws of RPYs...)

> My hope is that this reply clears up some confusion. However, feel free to let me know if you think I simply don't have the mindset necessary to "improve" the documentation in a way that is desirable. I had a hard time learning Twisted in the beginning and to this day some really helpful abstractions and just available projects / solved problems elude me.

This sounds like I'm discouraging you.  If that's the case, feel free to just tell me to sit this one out and wait until you're further along in the project.  I am trying to provide feedback to be useful to your efforts, but if you don't find it useful, then you can carry on with feedback from people who really need the docs.

> I think the reason for this is that I think a lot like Jacob <http://jacobian.org/writing/great-documentation/> when it comes to documentation and that's the sort of stuff I need to have in order to truly grok something. Maybe that's what we all want here. Maybe it isn't, though. And I'd really love to figure out which it is before I drive forward on this. If we really are on the same page (and I'd certainly like to be), we've got some hellish communication issues ;)

I'm a big fan of Jacob's in general and that essay series in particular as far as it comes to documentation, so I don't think that's the issue.  Obviously his methods have yielded a result that is well-regarded in the Django community.  And I think we are on the same page about many things, and we don't need to agree about everything.

I'm still quite excited to have you working on our documentation.

(Except for his comment about API documentation generators; I think that epydoc/pydoc is hugely useful.  But I do agree that one shouldn't just run an auto-generator to spit out a rehash of the source code; one needs to write a ton of documentation in an appropriate format to be consumed by such a tool in order for it to be useful.)

Thanks and good luck,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110201/1d3ce9bd/attachment.html>

From andrew at bemusement.org  Tue Feb  1 15:35:07 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Wed, 2 Feb 2011 09:35:07 +1100
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
	<AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
Message-ID: <20110201223507.GG9824@aihal.home.puzzling.org>

Tom Davis wrote:
[...]
>        * .rpy scripts are for deployment, not debugging; I was a little
>          concerned seeing that bullet point on the outline. �(See
>          <[2]http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/rpy-scripts.html>.)
> 
>    Huh? The docs you link to claim:
> 
>      So, while rpy scripts may be useful for testing out ideas, they're not
>      recommend for much more than that.
> 
>    Am I missing something here?

Throwaway prototypes aren't the same sort of thing as debugging.  The
phrase “testing out ideas” indicates the former, not the latter.

-Andrew.



From kevin.horn at gmail.com  Tue Feb  1 16:18:59 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 1 Feb 2011 17:18:59 -0600
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <04986C32-9E18-43F5-8992-BBD970CC9E83@twistedmatrix.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
	<AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
	<04986C32-9E18-43F5-8992-BBD970CC9E83@twistedmatrix.com>
Message-ID: <AANLkTikcKKKenSeSuGF+Mmh7esdv7FzFU3a_bVsM0JNv@mail.gmail.com>

On Tue, Feb 1, 2011 at 4:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> OK.  For what it's worth I share your desire for a new / better term but I
> can't think of one.
>
>
Recipes?  Snippets?  Tidbits?  Morsels?  Quickies? "How do I..."s?  Quick
Examples?  Simple Examples?  Examples?  Blurbs?

A lot of the various example scripts actually fulfill this function, though
if you don't know about them, you're out of luck.  And they have no
explanatory text to go along with them.

Some of the questions in the FAQ fulfill a similar purpose, I think, and
would benefit from a simple example to link to.

I'd like to see a bajillion of these, but only if we have a way to test the
sample code.  Otherwise it's a maintenance nightmare.  (Note that when stuff
changes and the example code breaks, it's also a flag to update whatever
docs point to it, so the idea of testing sample code isn't just to help the
code, but also the narrative docs that go along with it.)

----

I agree with Glyph that "templates" to guide docs authors would be an
excellent tool to have.

----

As far as Jacob KM's documentation series, I also think it's pretty good, so
let's compare Twisted's docs to what he suggests to write:

   - step-by-step tutorials,

Twisted has precisely one of these (the finger tutorial).  A lot of people
hate it.  It should be fixed or replaced, and we should also have more of
these.  You could probably also count web-in-60 as one of these, too I
guess, so maybe we have 2.

   - overviews and topical guides to the various conceptual areas of your
   project, and

Pretty much anything in the various "howto" directories, though in the docs
themselves they tend to be called "Developer Guides" (which I think is a
better name).  We have a lot of these, they just need to be better
organized/edited, and a bit more coherent.  Some are fantastic.  Some are
stubs.  Some are out of date.  Some are flat wrong.

   - low-level, deep-dive reference material.

The API docs.  Which are great in some places, dismal in others.  There
needs to be a systematic review of this to figure out what's missing.  A
"template" for docstrings wouldn't be a bad tool to have either.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110201/31d8076b/attachment.html>

From jason.heeris at gmail.com  Tue Feb  1 23:36:55 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Wed, 2 Feb 2011 14:36:55 +0800
Subject: [Twisted-Python] Guidance needed on serial device interaction
Message-ID: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>

This is a bit long, sorry...

I have a PyGTK program that uses threads and pyserial's blocking
methods to interact with an RS232 connected device. I'd like to throw
out the threading awfulness and redo it in Twisted, if possible, but
I'm a little lost.

The real protocol is a bit convoluted, but basically:
  - You can issue single character commands to the device that give a fixed
    length response, such as sending 'C' and getting an eight-digit hex
    string back (the program flash CRC)
  - You can put the device into "programming mode" (command 'P'), where it
    takes an arbitrary length sequence of records, verifying each record and
    stopping when it sees the special "end record"
  - The device will send back '!' to indicate an error
  - The device will send back '>' to indicate that it's ready for more
    commands

I know I need to use the SerialPort transport, and since that takes a
protocol I've tried to sketch one out but can't seem to get very far.

I want to have methods that can be called from the UI, returning
deferreds to which UI responses can be added as callbacks. I also want
to be able to monitor progress of the programming, so I need a
callback for that separate from the deferred itself. I figure that
calling, say, device.program(program, progress_cb) should return a
Deferred and queue the command, and that somehow the dataReceived()
method should be the start of a chain of events that either:
  - updates state and waits for the next piece of data, or
  - calls back on the appropriate Deferred

I'd also like to structure things so that successive calls to the
DeviceProtocol object queue up, something like:

----
class DeviceProtocol(Protocol):

    def dataReceived(self, data):
        # ...?

    def checksum(self):
        res = defer.Deferred()
        # When ready, send 'C' over the serial line (ie.
        # self.transport.write('C'))
        # Somehow callback via a deferred when the checksum comes back
        return res

    def program(self, program_records, progress_cb):
        res = defer.Deferred()
        # When ready, send 'P' over the serial line
        # Write all the data in "program_records", checking each
        # response, calling back via a deferred when done.
        # ...
        return res

    def connectionLost(self):
        # maybe have something here, like calling the errback of all
        # pending deferreds

def go(reactor):
    # callbacks/errbacks not shown

    device = DeviceProtocol()
    transport = SerialPort(device, portname, reactor)

    program_result_1 = device.program(records, good_programming_progress)
    program_result_1.addCallbacks(programming_done, programming_err)

    checksum_result = device.checksum()
    checksum_result.addCallbacks(checksum, checksum_err)

    # This will fail at some point:
    program_result_2 = device.program(bad_records)
    cp_deferred.addCallbacks(programming_done, programming_err)

if __name__ == "__main__":
    reactor.callWhenRunning(go, reactor)
    reactor.run()
----

But I'm really lost as to how to start structuring things within the
protocol object itself. Should I even be doing this in a Protocol
subclass, or should I be putting some of this functionality into a
Factory of some sort (eg. a ClientFactory)? And if so, how do I
actually connect the factory to the serial port transport? Or am I on
the wrong track altogether?

More to the point, has a problem like this already been solved
somewhere? Is the solution obvious to Twisted gurus?

Any help would be appreciated.

Cheers,
Jason



From kespindler at gmail.com  Wed Feb  2 00:15:07 2011
From: kespindler at gmail.com (Kurt Spindler)
Date: Wed, 2 Feb 2011 02:15:07 -0500
Subject: [Twisted-Python] design of twisted application
Message-ID: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>

Hey,

I am trying to design a twisted application, (I'm pretty new to twisted and
networking in general) and I feel like I'm not approaching it quite the
right way and would appreciate your feedback. First part, is that I am
trying to couple twisted with an existing graphics-type application, that
already has it's own main loop, etc. Meaning, I need to be running other
python code while I have the reactor running. Is the solution threading?



  f = MyFactory()

  reactor.connectTCP("localhost",22223,f)

  t = threading.Thread(target=reactor.run)

  t.run()

  runOtherCodeConcurrently()


Is there a better solution? Second question is that, in that other bunch of
code, I need to be able to write things to the socket. How can I access the
instance of my protocol subclass that is used by the factory, so I can make
protocolInstance.transport.write type calls? Or am I thinking about this is
a completely wrong way?

Thank you very much for your help!

Kurt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110202/52c4c61e/attachment.html>

From michaelnt at gmail.com  Wed Feb  2 00:58:18 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Wed, 2 Feb 2011 07:58:18 +0000
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
Message-ID: <AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>

On 2 February 2011 06:36, Jason Heeris <jason.heeris at gmail.com> wrote:
> This is a bit long, sorry...
>
> I have a PyGTK program that uses threads and pyserial's blocking
> methods to interact with an RS232 connected device. I'd like to throw
> out the threading awfulness and redo it in Twisted, if possible, but
> I'm a little lost.
>
> The real protocol is a bit convoluted, but basically:
>  - You can issue single character commands to the device that give a fixed
>    length response, such as sending 'C' and getting an eight-digit hex
>    string back (the program flash CRC)
>  - You can put the device into "programming mode" (command 'P'), where it
>    takes an arbitrary length sequence of records, verifying each record and
>    stopping when it sees the special "end record"
>  - The device will send back '!' to indicate an error
>  - The device will send back '>' to indicate that it's ready for more
>    commands

The job of the protocol class is to assemble the bytes that you
receive into packets or messages. Ideally the protocol will have
characters that frame a message, and it sounds like you might have
this if > or ! is always sent at the end of every reply.

The protocol dataReceived method will be called as  data arrives at
the serial port once enough data has arrived to complete a message
this method calls stringReceived with the complete message.

There are some protocol that might be suitable in twisted/protocols/basic.py

> <snip>
> I'd also like to structure things so that successive calls to the
> DeviceProtocol object queue up, something like:

You can use a DeferredSemaphore for this.

 <snip>

Michael



From michaelnt at gmail.com  Wed Feb  2 01:05:08 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Wed, 2 Feb 2011 08:05:08 +0000
Subject: [Twisted-Python] design of twisted application
In-Reply-To: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
References: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
Message-ID: <AANLkTikJttHZyqMOP_mjCgbPGY72drZL16qXXkSEzpG5@mail.gmail.com>

On 2 February 2011 07:15, Kurt Spindler <kespindler at gmail.com> wrote:
> Hey,
> I am trying to design a twisted application, (I'm pretty new to twisted and
> networking in general) and I feel like I'm not approaching it quite the
> right way and would appreciate your feedback. First part, is that I am
> trying to couple twisted with an existing graphics-type application, that
> already has it's own main loop, etc. Meaning, I need to be running other
> python code while I have the reactor running. Is the solution threading?

Hopefully there is already a twisted reactor for your graphics
library, what are you using?

>
>
>   f = MyFactory()
>
>   reactor.connectTCP("localhost",22223,f)
>
>   t = threading.Thread(target=reactor.run)
>
>   t.run()
>
>   runOtherCodeConcurrently()
>
> Is there a better solution? Second question is that, in that other bunch of
> code, I need to be able to write things to the socket. How can I access the
> instance of my protocol subclass that is used by the factory, so I can make
> protocolInstance.transport.write type calls? Or am I thinking about this is
> a completely wrong way?

You should be able to do this on the Factory that created the protocol instance.

Michael



From jason.heeris at gmail.com  Wed Feb  2 01:58:30 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Wed, 2 Feb 2011 16:58:30 +0800
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
	<AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
Message-ID: <AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>

On 2 February 2011 15:58, Michael Thompson <michaelnt at gmail.com> wrote:
> The job of the protocol class is to assemble the bytes that you
> receive into packets or messages. Ideally the protocol will have
> characters that frame a message, and it sounds like you might have
> this if > or ! is always sent at the end of every reply.

Apologies, but I just went over the code for the device controller and
I described the protocol a little incorrectly. But anyway... It
depends on what you mean by reply. For example a programming session
might go:

Dev: ">"
PC: "P"
Dev: "."
PC: ":"
Dev: "."
PC: "02000004"
Dev: "."
PC: "1D00"
Dev: "."
PC: "DD"
Dev: "."
<skip to last transmission for last record>
PC: "FF"
Dev: ".0>" (this is the confirmation ".", the status code of the
programming, and the "ready" character)

It's not like the PC sends all the data at once, and the device
processes it all and sends a reply framed by ">". If something goes
wrong in the device, it might be:

Dev: ">"
PC: "P"
Dev: "1>"

...or if the sent data is invalid...

Dev: ">"
PC: "P"
Dev: "."
PC: ":"
Dev "."
PC: "09"
Dev: "3>"

> The protocol dataReceived method will be called as  data arrives at
> the serial port once enough data has arrived to complete a message
> this method calls stringReceived with the complete message.

I don't know what this is for though... what's the point of
stringReceived? What uses that?

> There are some protocol that might be suitable in twisted/protocols/basic.py

No, that all seems to be unrelated to what I need.

>> I'd also like to structure things so that successive calls to the
>> DeviceProtocol object queue up, something like:
>
> You can use a DeferredSemaphore for this.

That looks interesting, thanks :)

— Jason



From albert.brandl at weiermayer.com  Wed Feb  2 02:53:09 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 2 Feb 2011 10:53:09 +0100
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
	<AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
	<AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>
Message-ID: <20110202095309.GA3940@weiermayer.com>

Hi!

On Wed, Feb 02, 2011 at 04:58:30PM +0800, Jason Heeris wrote:
> > The protocol dataReceived method will be called as  data arrives at
> > the serial port once enough data has arrived to complete a message
> > this method calls stringReceived with the complete message.
> 
> I don't know what this is for though... what's the point of
> stringReceived? What uses that?

"string" could be interpreted as "complete message". It might e.g. happen 
that a message arrives in three chunks. Each time a chunk is read, the 
dataReceived method is called. When it detects that the message is 
complete, it calls stringReceived with the content of the message.

Beware that the third chunk might also contain a part of the next 
message. This should of course _not_ be forwarded to stringReceived,
but buffered until the next message is complete.

It helped me a lot to read the source code in basic.py, which can be 
found in the directory twisted/protocols, or online here:

http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.2.0/twisted/protocols/basic.py

It has lots of documentation and is very readable IMHO.

Regards, Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From jason.heeris at gmail.com  Wed Feb  2 03:11:35 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Wed, 2 Feb 2011 18:11:35 +0800
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <20110202095309.GA3940@weiermayer.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
	<AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
	<AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>
	<20110202095309.GA3940@weiermayer.com>
Message-ID: <AANLkTincLbL0rnvtkX86iDpkcj6BKJRchVgD=taRnZrF@mail.gmail.com>

On 2 February 2011 17:53, Albert Brandl <albert.brandl at weiermayer.com> wrote:
> "string" could be interpreted as "complete message". It might e.g. happen
> that a message arrives in three chunks. Each time a chunk is read, the
> dataReceived method is called. When it detects that the message is
> complete, it calls stringReceived with the content of the message.

Okay, but I don't see how to use that to solve my particular problem.
I'm not waiting passively to receive a complete string, I have to
react to whatever's sent back, character by character, either by
reporting completion, an error or sending more data. In effect, I
guess, each character is a "complete message" anyway. I don't think
the t.i.protocols offer much for that.

— Jason



From michaelnt at gmail.com  Wed Feb  2 08:42:22 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Wed, 2 Feb 2011 15:42:22 +0000
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <AANLkTincLbL0rnvtkX86iDpkcj6BKJRchVgD=taRnZrF@mail.gmail.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
	<AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
	<AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>
	<20110202095309.GA3940@weiermayer.com>
	<AANLkTincLbL0rnvtkX86iDpkcj6BKJRchVgD=taRnZrF@mail.gmail.com>
Message-ID: <AANLkTimmC52aVQgSCtosQ=n4HCxYQRMSvCB+5Y5a6DUH@mail.gmail.com>

On 2 February 2011 10:11, Jason Heeris <jason.heeris at gmail.com> wrote:
> On 2 February 2011 17:53, Albert Brandl <albert.brandl at weiermayer.com> wrote:
>> "string" could be interpreted as "complete message". It might e.g. happen
>> that a message arrives in three chunks. Each time a chunk is read, the
>> dataReceived method is called. When it detects that the message is
>> complete, it calls stringReceived with the content of the message.
>
> Okay, but I don't see how to use that to solve my particular problem.
> I'm not waiting passively to receive a complete string, I have to
> react to whatever's sent back, character by character, either by
> reporting completion, an error or sending more data. In effect, I
> guess, each character is a "complete message" anyway. I don't think
> the t.i.protocols offer much for that.

Yep you have a pretty simple protocol there so even the basic examples
are probably more than you need.

Something like this might get you started.

class MyProtocol(Protocol):
    def send(self, byte):
          self.transport.write(byte)
          self.response = Deferred()
          return self.response

    def dataReceived(self, byte):
           self.response.callback(byte)



From glyph at twistedmatrix.com  Wed Feb  2 11:08:16 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 2 Feb 2011 10:08:16 -0800
Subject: [Twisted-Python] Guidance needed on serial device interaction
In-Reply-To: <AANLkTimmC52aVQgSCtosQ=n4HCxYQRMSvCB+5Y5a6DUH@mail.gmail.com>
References: <AANLkTinPpcM=bGtnT9a6ETEb4-0cnuRt1odX3jkrR_NO@mail.gmail.com>
	<AANLkTi=9ywQpbR5xooNmbOPCYie1-XEoVBhB1vRZjUny@mail.gmail.com>
	<AANLkTi=kYRoqOCcbO5hQtR_BGh+O3j++rB4YYqG6DbxH@mail.gmail.com>
	<20110202095309.GA3940@weiermayer.com>
	<AANLkTincLbL0rnvtkX86iDpkcj6BKJRchVgD=taRnZrF@mail.gmail.com>
	<AANLkTimmC52aVQgSCtosQ=n4HCxYQRMSvCB+5Y5a6DUH@mail.gmail.com>
Message-ID: <CB97EF58-6555-407C-AF7B-EAEF457415C4@twistedmatrix.com>


On Feb 2, 2011, at 7:42 AM, Michael Thompson wrote:

> On 2 February 2011 10:11, Jason Heeris <jason.heeris at gmail.com> wrote:
>> On 2 February 2011 17:53, Albert Brandl <albert.brandl at weiermayer.com> wrote:
>>> "string" could be interpreted as "complete message". It might e.g. happen
>>> that a message arrives in three chunks. Each time a chunk is read, the
>>> dataReceived method is called. When it detects that the message is
>>> complete, it calls stringReceived with the content of the message.
>> 
>> Okay, but I don't see how to use that to solve my particular problem.
>> I'm not waiting passively to receive a complete string, I have to
>> react to whatever's sent back, character by character, either by
>> reporting completion, an error or sending more data. In effect, I
>> guess, each character is a "complete message" anyway. I don't think
>> the t.i.protocols offer much for that.
> 
> Yep you have a pretty simple protocol there so even the basic examples
> are probably more than you need.
> 
> Something like this might get you started.
> 
> class MyProtocol(Protocol):
>    def send(self, byte):
>          self.transport.write(byte)
>          self.response = Deferred()
>          return self.response
> 
>    def dataReceived(self, byte):
>           self.response.callback(byte)

Not quite.  You mean:

class MyProtocol(Protocol):
  # ...
  def dataReceived(self, data):
    for octet in data:
      self.process(octet)

If the device outputs multiple bytes it might show up to Twisted as strings of arbitrary length (this depends on timings of the serial port which are basically impossible to control), so if you want to process a byte at a time, you need to specifically iterate through the string that is passed, even if it's usually one byte long.  (Some of the protocol examples showed multibyte sequences as messages.  I don't understand the framing well enough to provide a better example though, sorry.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110202/04b17774/attachment.html>

From zooko at zooko.com  Wed Feb  2 13:32:40 2011
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Wed, 2 Feb 2011 13:32:40 -0700
Subject: [Twisted-Python] ANNOUNCING Tahoe, the Least-Authority File System,
	v1.8.2
Message-ID: <AANLkTim0hAT_T3YmXA03zaR2D9=_iGQ7CPT3kPNqXruo@mail.gmail.com>

ANNOUNCING Tahoe, the Least-Authority File System, v1.8.2

The Tahoe-LAFS team is pleased to announce the immediate
availability of version 1.8.2 of Tahoe-LAFS, an extremely
reliable distributed storage system. Get it here:

http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html

Tahoe-LAFS is the first distributed storage system to offer
"provider-independent security" — meaning that not even the
operators of your storage servers can read or alter your data
without your consent. Here is the one-page explanation of its
unique security and fault-tolerance properties:

http://tahoe-lafs.org/source/tahoe/trunk/docs/about.html

The previous stable release of Tahoe-LAFS was v1.8.1, which was
released October 28, 2010 [1].

v1.8.2 is a stable bugfix release, adding compatibility with
the recently-released Twisted-10.2, and correcting a number of
minor issues. See the NEWS file [2] for details.


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you distribute your filesystem across
multiple servers, and even if some of the servers fail or are
taken over by an attacker, the entire filesystem continues to
work correctly, and continues to preserve your privacy and
security. You can easily share specific files and directories
with other people.

In addition to the core storage system itself, volunteers
have built other projects on top of Tahoe-LAFS and have
integrated Tahoe-LAFS with existing systems, including
Windows, JavaScript, iPhone, Android, Hadoop, Flume, Django,
Puppet, bzr, mercurial, perforce, duplicity, TiddlyWiki, and
more. See the Related Projects page on the wiki [3].

We believe that strong cryptography, Free and Open Source
Software, erasure coding, and principled engineering practices
make Tahoe-LAFS safer than RAID, removable drive, tape,
on-line backup or cloud storage.

This software is developed under test-driven development, and
there are no known bugs or security flaws which would
compromise confidentiality or data integrity under recommended
use. (For all important issues that we are currently aware of
please see the known_issues.rst file [4].)


COMPATIBILITY

This release is compatible with the version 1 series of
Tahoe-LAFS. Clients from this release can write files and
directories in the format used by clients of all versions back
to v1.0 (which was released March 25, 2008). Clients from this
release can read files and directories produced by clients of
all versions since v1.0. Servers from this release can serve
clients of all versions back to v1.0 and clients from this
release can use servers of all versions back to v1.0.

This is the thirteenth release in the version 1 series. This
series of Tahoe-LAFS will be actively supported and maintained
for the forseeable future, and future versions of Tahoe-LAFS
will retain the ability to read and write files compatible
with this series.


LICENCE

You may use this package under the GNU General Public License,
version 2 or, at your option, any later version. See the file
"COPYING.GPL" [5] for the terms of the GNU General Public
License, version 2.

You may use this package under the Transitive Grace Period
Public Licence, version 1 or, at your option, any later
version. (The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to
delay for up to twelve months after you redistribute a derived
work before releasing the source code of your derived work.)
See the file "COPYING.TGPPL.html" [6] for the terms of the
Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either
licence, at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris,
*BSD, and probably most other systems. Start with
"docs/quickstart.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8]. Patches are gratefully
accepted -- the RoadMap page [9] shows the next improvements
that we plan to make and CREDITS [10] lists the names of people
who've contributed to the project. The Dev page [11] contains
resources for hackers.


SPONSORSHIP

Tahoe-LAFS was originally developed by Allmydata, Inc., a
provider of commercial backup services. After discontinuing
funding of Tahoe-LAFS R&D in early 2009, they continued
to provide servers, bandwidth, small personal gifts as tokens
of appreciation, and bug reports.

Google, Inc. sponsored Tahoe-LAFS development as part of the
Google Summer of Code 2010. They awarded four sponsorships to
students from around the world to hack on Tahoe-LAFS that
summer.

Thank you to Allmydata and Google for their generous and
public-spirited support.


HACK TAHOE-LAFS!

If you can find a security flaw in Tahoe-LAFS which is serious
enough that we feel compelled to warn our users and issue a fix,
then we will award you with a customized t-shirts with your
exploit printed on it and add you to the "Hack Tahoe-LAFS Hall
Of Fame" [12].


ACKNOWLEDGEMENTS

This is the seventh release of Tahoe-LAFS to be created solely
as a labor of love by volunteers. Thank you very much to the
team of "hackers in the public interest" who make Tahoe-LAFS
possible.

Brian Warner
on behalf of the Tahoe-LAFS team

January 30, 2011
San Francisco, California, USA


[1] http://tahoe-lafs.org/trac/tahoe/browser/relnotes.txt?rev=4865
[2] http://tahoe-lafs.org/trac/tahoe/browser/NEWS?rev=5000
[3] http://tahoe-lafs.org/trac/tahoe/wiki/RelatedProjects
[4] http://tahoe-lafs.org/trac/tahoe/browser/docs/known_issues.rst
[5] http://tahoe-lafs.org/trac/tahoe/browser/COPYING.GPL
[6] http://tahoe-lafs.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html
[8] http://tahoe-lafs.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://tahoe-lafs.org/trac/tahoe/roadmap
[10] http://tahoe-lafs.org/trac/tahoe/browser/CREDITS?rev=5000
[11] http://tahoe-lafs.org/trac/tahoe/wiki/Dev
[12] http://tahoe-lafs.org/hacktahoelafs/



From ltaylor.volks at gmail.com  Wed Feb  2 13:55:36 2011
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Wed, 2 Feb 2011 13:55:36 -0700
Subject: [Twisted-Python] design of twisted application
In-Reply-To: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
References: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
Message-ID: <B43C78A4-0F2C-4DA4-8456-844D3058D1D3@gmail.com>


On Feb 2, 2011, at 12:15 AM, Kurt Spindler wrote:

>  Second question is that, in that other bunch of code, I need to be  
> able to write things to the socket. How can I access the instance of  
> my protocol subclass that is used by the factory, so I can make  
> protocolInstance.transport.write type calls? Or am I thinking about  
> this is a completely wrong way?
>


This may be my favorite FAQ answer:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

You're not specifically asking that question, but the salient point is:

"These are just regular Python objects; you can put them into lists,  
dictionaries, or whatever other data structure is appropriate to your  
application"

You can access connected protocol instances using something like the  
pattern in that FAQ. Just keep a reference to the factory instance  
somewhere in your other code and access whatever data structure you  
choose to store the protocol references. MultiEchoFactory has a list  
of connected protocols ('echoers'). You could just keep one connected  
instance. Or a dictionary keyed by ip address, session id you  
generate, etc.

One other note... how you end up integrating with whatever GUI you are  
using may impact your use of Twisted APIs (i.e. transport.write).
See
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#WhydoesittakealongtimefordataIsendwithtransport.writetoarriveattheothersideoftheconnection
(gotta love that anchor!... http://bit.ly/gPvW7d)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110202/560cafeb/attachment.html>

From jrennie at gmail.com  Wed Feb  2 14:36:30 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Wed, 2 Feb 2011 16:36:30 -0500
Subject: [Twisted-Python] design of twisted application
In-Reply-To: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
References: <AANLkTimkFe3ymMcMRDkGwaYhyQdnqbPGyEUAk5XtfzsZ@mail.gmail.com>
Message-ID: <AANLkTikqAxxq0=QZ2SPu11mpUjr1GQCcV8yDyfVgySUm@mail.gmail.com>

On Wed, Feb 2, 2011 at 2:15 AM, Kurt Spindler <kespindler at gmail.com> wrote:

> I am trying to design a twisted application, (I'm pretty new to twisted and
> networking in general) and I feel like I'm not approaching it quite the
> right way and would appreciate your feedback. First part, is that I am
> trying to couple twisted with an existing graphics-type application, that
> already has it's own main loop, etc. Meaning, I need to be running other
> python code while I have the reactor running. Is the solution threading?
>

I would guess so.  Otherwise, you may have to significantly rework the
graphics lib to fit into twisted.  I was involved in a project where I
joined cherrypy and twisted into a single process.  I ran each in a separate
thread.  Note that you will need to become very familiar with
callFromThread()---any twisted call you want to make from the graphics side
will need to use this in case the reactor is blocking (e.g. stuck in a
select() call).  Also, if the graphics lib either manipulates or relies on
certain signal behavior, you may need to install your own signal handlers
which do all the processing that both the graphics lib and twisted expect.
 This is especially important if you start any processes from twisted
(ProcessProtocol).

Cheers,

Jason

-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110202/156f744c/attachment.html>

From powo at powo.priv.at  Wed Feb  2 18:01:57 2011
From: powo at powo.priv.at (Wolfgang Powisch)
Date: Thu, 03 Feb 2011 02:01:57 +0100
Subject: [Twisted-Python] ClientFactory: implementing Request/Response with
	a persistent connection
Message-ID: <4D49FE85.9050508@powo.priv.at>

Hello,

I need to talk to a Line-based TCP service from a Twisted Application.
The remote server will accept requests and send a response.

I do NOT want to open a NEW TCP-Connection for each request.

Are there any examples how to send concurrent requests over a single
conenction ? .. so that my module takes care of sending the next request
when the previous response has been received


Here a simple (pseudo-)example of how I would like to use my client-module:

-------------------------
xyclient = yield XyClient('127.0.0.1',1234).connect()
d1 = xyclient.send_request('GET 1')  # returns a deferred
d2 = xyclient.send_request('GET 2')  # returns a deferred
d1.addCallback(print)
d2.addCallback(print)

"Response 1"
"Response 2"
-------------------------


Later I need to enhance this to manage a Pool of connections and dispatch
requests across this pool. Does there exist something "out of the box"
for ConnectionPools ?


regards, powo







From albert.brandl at weiermayer.com  Thu Feb  3 03:18:06 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Thu, 3 Feb 2011 11:18:06 +0100
Subject: [Twisted-Python] Using SerialPort with t.a.s.Application
In-Reply-To: <20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
References: <20110128082932.GB2151@weiermayer.com>
	<1296221152.1762.3.camel@blake>
	<20110131155054.GA26811@weiermayer.com>
	<20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
Message-ID: <20110203101806.GA8247@weiermayer.com>

Hi!

On Mon, Jan 31, 2011 at 10:18:00PM -0000, exarkun at twistedmatrix.com wrote:
> 
> I think that now the way it would make sense to add this is to add a 
> serialport endpoint.  This would be usable with 
> twisted.internet.endpoints.serverFromEndpoint (or clientFromEndpoint, I 
> can never remember which one a serial port is more like).

Cool. I think you talked about serverFromString, but this was enough to 
get me started. I've added the necessary functions and classes so that I 
can create a server listening to the serial line with something like:

    serial_server = strports.service("SERIAL:/dev/ttyS0:baudrate=38400")

But injecting the necessary functions and classes into t.i.endpoints is 
rather ugly. Would it be ok to create a ticket to properly enhance the 
module with an endpoint encapsulating SerialPort?

> If you can accomplish your goals without making a new kind of IService 
> implementation, then great!

Right now, this is sufficient for my purposes.

Thanks and best regards,

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From exarkun at twistedmatrix.com  Thu Feb  3 12:00:39 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 03 Feb 2011 19:00:39 -0000
Subject: [Twisted-Python] Using SerialPort with t.a.s.Application
In-Reply-To: <20110203101806.GA8247@weiermayer.com>
References: <20110128082932.GB2151@weiermayer.com>
	<1296221152.1762.3.camel@blake>
	<20110131155054.GA26811@weiermayer.com>
	<20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
	<20110203101806.GA8247@weiermayer.com>
Message-ID: <20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>

On 10:18 am, albert.brandl at weiermayer.com wrote:
>Hi!
>
>On Mon, Jan 31, 2011 at 10:18:00PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>
>>I think that now the way it would make sense to add this is to add a
>>serialport endpoint.  This would be usable with
>>twisted.internet.endpoints.serverFromEndpoint (or clientFromEndpoint, 
>>I
>>can never remember which one a serial port is more like).
>
>Cool. I think you talked about serverFromString, but this was enough to
>get me started. I've added the necessary functions and classes so that 
>I
>can create a server listening to the serial line with something like:
>
>    serial_server = strports.service("SERIAL:/dev/ttyS0:baudrate=38400")
>
>But injecting the necessary functions and classes into t.i.endpoints is
>rather ugly. Would it be ok to create a ticket to properly enhance the
>module with an endpoint encapsulating SerialPort?

That probably makes sense, but first, does the endpoints string 
description plugin API help?  You can provide 
IStreamServerEndpointStringParser (defined in 
twisted.internet.interfaces) plugins to extend the parser for those 
strings.  This might clean things up your serial port endpoint is 
actually included in a release of Twisted.

There are some tickets filed already for adding some other kinds of 
endpoints (eg an IPv6 endpoint - 
http://twistedmatrix.com/trac/ticket/4470), but it doesn't look like 
there's one for serial port, so yea - it would be great if you could 
file that one.

Jean-Paul



From johann.borck at densedata.com  Thu Feb  3 15:26:13 2011
From: johann.borck at densedata.com (Johann Borck)
Date: Thu, 03 Feb 2011 23:26:13 +0100
Subject: [Twisted-Python] ClientFactory: implementing Request/Response
 with	a persistent connection
In-Reply-To: <4D49FE85.9050508@powo.priv.at>
References: <4D49FE85.9050508@powo.priv.at>
Message-ID: <4D4B2B85.6080701@densedata.com>

On 02/03/2011 02:01 AM, Wolfgang Powisch wrote:
> Hello,
>
> I need to talk to a Line-based TCP service from a Twisted Application.
> The remote server will accept requests and send a response.
>
> I do NOT want to open a NEW TCP-Connection for each request.

Hi,
you only have to avoid closing the connection after your first 
request/response pair, which you would otherwise do by calling 
self.transport.loseConnection() in your protocol. Twisted doesn't make 
that decision for you. Of course it also depends on the server/protocol 
supporting it.

Then there's a project called txconnpool at 
http://pypi.python.org/pypi/txconnpool, maybe it does what you want.

regards,
Johann




From albert.brandl at weiermayer.com  Fri Feb  4 01:20:28 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Fri, 4 Feb 2011 09:20:28 +0100
Subject: [Twisted-Python] Using SerialPort with t.a.s.Application
In-Reply-To: <20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>
References: <20110128082932.GB2151@weiermayer.com>
	<1296221152.1762.3.camel@blake>
	<20110131155054.GA26811@weiermayer.com>
	<20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
	<20110203101806.GA8247@weiermayer.com>
	<20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>
Message-ID: <20110204082028.GA2531@weiermayer.com>

On Thu, Feb 03, 2011 at 07:00:39PM -0000, exarkun at twistedmatrix.com wrote:

> That probably makes sense, but first, does the endpoints string 
> description plugin API help?  You can provide 
> IStreamServerEndpointStringParser (defined in 
> twisted.internet.interfaces) plugins to extend the parser for those 
> strings.

Actually, that's the way I implemented this. But I didn't find any
hooks for extending the parser, so I manually inserted new items
into endpoints._endpointServerFactories and endpoints._serverParsers
and added the StringParser to endpoints. 

Is there a better way? Could you provide me with a link to any 
documentation? I've already read the tutorial about creating plugins.

> There are some tickets filed already for adding some other kinds of 
> endpoints (eg an IPv6 endpoint - 
> http://twistedmatrix.com/trac/ticket/4470), but it doesn't look like 
> there's one for serial port, so yea - it would be great if you could 
> file that one.

Fine. Any suggestions for the name of the new endpoint?

Best regards,

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From michaelnt at gmail.com  Fri Feb  4 01:31:48 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Fri, 4 Feb 2011 08:31:48 +0000
Subject: [Twisted-Python] SerialPort testing on the Twisted build slaves
Message-ID: <AANLkTinqAUn-cX32tdj1Xrxf+wCd=j4y3wfZc0+DyZNs@mail.gmail.com>

Hi,
   Ticket  http://twistedmatrix.com/trac/ticket/3690 is adding some
serial port testing. The patch adds code to discover serial ports on
Windows and Posix and the test uses the first serial port that is
discovered.

Will this approach work for the build slaves, or is it better to use
an environment variable that can be set for each build slave?

Do any of the build slaves have serial ports or are they all VMs?

Michael



From albert.brandl at weiermayer.com  Fri Feb  4 04:19:23 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Fri, 4 Feb 2011 12:19:23 +0100
Subject: [Twisted-Python] Using SerialPort with t.a.s.Application
In-Reply-To: <20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>
References: <20110128082932.GB2151@weiermayer.com>
	<1296221152.1762.3.camel@blake>
	<20110131155054.GA26811@weiermayer.com>
	<20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
	<20110203101806.GA8247@weiermayer.com>
	<20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>
Message-ID: <20110204111923.GA10621@weiermayer.com>

On Thu, Feb 03, 2011 at 07:00:39PM -0000, exarkun at twistedmatrix.com wrote:
> There are some tickets filed already for adding some other kinds of 
> endpoints (eg an IPv6 endpoint - 
> http://twistedmatrix.com/trac/ticket/4470), but it doesn't look like 
> there's one for serial port, so yea - it would be great if you could 
> file that one.

Here's the ticket: http://twistedmatrix.com/trac/ticket/4847

I don't know either if `serverFromString` or `clientFromString` is 
"better" for a serial port. Not sure if this can even be determined 
without knowing more about the purpose of the communication. Any 
opinions?

I've added a corresponding remark to the ticket.

Regards,

Albert
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From exarkun at twistedmatrix.com  Fri Feb  4 11:32:41 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 04 Feb 2011 18:32:41 -0000
Subject: [Twisted-Python] Using SerialPort with t.a.s.Application
In-Reply-To: <20110204082028.GA2531@weiermayer.com>
References: <20110128082932.GB2151@weiermayer.com>
	<1296221152.1762.3.camel@blake>
	<20110131155054.GA26811@weiermayer.com>
	<20110131221800.1699.132541088.divmod.xquotient.434@localhost.localdomain>
	<20110203101806.GA8247@weiermayer.com>
	<20110203190039.1699.579721140.divmod.xquotient.584@localhost.localdomain>
	<20110204082028.GA2531@weiermayer.com>
Message-ID: <20110204183241.1699.1760661069.divmod.xquotient.588@localhost.localdomain>

On 08:20 am, albert.brandl at weiermayer.com wrote:
>On Thu, Feb 03, 2011 at 07:00:39PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>That probably makes sense, but first, does the endpoints string
>>description plugin API help?  You can provide
>>IStreamServerEndpointStringParser (defined in
>>twisted.internet.interfaces) plugins to extend the parser for those
>>strings.
>
>Actually, that's the way I implemented this. But I didn't find any
>hooks for extending the parser, so I manually inserted new items
>into endpoints._endpointServerFactories and endpoints._serverParsers
>and added the StringParser to endpoints.
>
>Is there a better way? Could you provide me with a link to any
>documentation? I've already read the tutorial about creating plugins.

IStreamServerEndpointStringParser is the hook.  I don't know of any 
documentation on its use, though.  Perhaps 
twisted/internet/test/fakeendpoint.py will give you an idea of what to 
do, though (then, feel like writing the missing docs?).

Jean-Paul



From exarkun at twistedmatrix.com  Fri Feb  4 11:36:32 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 04 Feb 2011 18:36:32 -0000
Subject: [Twisted-Python] SerialPort testing on the Twisted build slaves
In-Reply-To: <AANLkTinqAUn-cX32tdj1Xrxf+wCd=j4y3wfZc0+DyZNs@mail.gmail.com>
References: <AANLkTinqAUn-cX32tdj1Xrxf+wCd=j4y3wfZc0+DyZNs@mail.gmail.com>
Message-ID: <20110204183632.1699.696030553.divmod.xquotient.595@localhost.localdomain>

On 08:31 am, michaelnt at gmail.com wrote:
>Hi,
>   Ticket  http://twistedmatrix.com/trac/ticket/3690 is adding some
>serial port testing. The patch adds code to discover serial ports on
>Windows and Posix and the test uses the first serial port that is
>discovered.

There's also some more stuff about testing serialports on 
<http://tm.tl/2462>.
>Will this approach work for the build slaves, or is it better to use
>an environment variable that can be set for each build slave?
>
>Do any of the build slaves have serial ports or are they all VMs?

Last time I checked things were not in good shape.  I don't think we can 
count on serial ports on any of the slaves right now.

VMs might actually be *easier* (at least if we trust that the VM serial 
port driver behaves roughly like a real serial port driver).  Actually 
convincing slave operators to plug something into a serial port is 
probably out of reach.

Jean-Paul



From powo at powo.priv.at  Sat Feb  5 11:38:01 2011
From: powo at powo.priv.at (Wolfgang Powisch)
Date: Sat, 05 Feb 2011 19:38:01 +0100
Subject: [Twisted-Python] ClientFactory: implementing Request/Response
 with	a persistent connection
In-Reply-To: <4D4B2B85.6080701@densedata.com>
References: <4D49FE85.9050508@powo.priv.at> <4D4B2B85.6080701@densedata.com>
Message-ID: <4D4D9909.4070309@powo.priv.at>

Am 2011-02-03 23:26, schrieb Johann Borck:
> Then there's a project called txconnpool at
> http://pypi.python.org/pypi/txconnpool, maybe it does what you want.

thx ... that's great.

except that it costs me some time to realize that it's missing error-handling
and a errback'ing Protocol causes it to hang ;-)

regards, powo




From exarkun at twistedmatrix.com  Sat Feb  5 22:05:17 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Feb 2011 05:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1296968717.69.59925220@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110206/3ea1139a/attachment-0001.html>

From tom at recursivedream.com  Sun Feb  6 11:02:56 2011
From: tom at recursivedream.com (Tom Davis)
Date: Sun, 6 Feb 2011 13:02:56 -0500
Subject: [Twisted-Python] Task-based documentation started
In-Reply-To: <04986C32-9E18-43F5-8992-BBD970CC9E83@twistedmatrix.com>
References: <AANLkTinukcpnRc9yviapnkFK_6ChAqTrhk7nnj5bEAoD@mail.gmail.com>
	<88082D4F-D41C-4B0F-9052-2CDFBCEC0780@twistedmatrix.com>
	<AANLkTim5zWTRFt9h2SEJ4w39yQ2Fe-x75XkvNFZ5fKm6@mail.gmail.com>
	<04986C32-9E18-43F5-8992-BBD970CC9E83@twistedmatrix.com>
Message-ID: <AANLkTikJWSNpJqUQ5SXDVZ5mB5-7O6fH0v3zg9-huj0J@mail.gmail.com>

On Tue, Feb 1, 2011 at 5:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Feb 1, 2011, at 10:53 AM, Tom Davis wrote:
>
> On Tue, Feb 1, 2011 at 12:58 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:
>
>>
>> On Jan 31, 2011, at 11:41 AM, Tom Davis wrote:
>>
>> Thoughts?
>>
>>
>> Priority #1 for most people who are enthusiastic about documentation is to
>> come in and write a ton of additional documentation.  But this is a lot like
>> trying to fix a large, broken, untested system by writing a pile of new,
>> untested code, because "this time we'll get the design right".  What were
>> the problems with the way the previous documentation got written?  How did
>> we end up with this mess, and what is going to be done differently this
>> time?  Most importantly, *what is the metric by which we will judge this
>> new documentation to be better?*
>>
>
> I'm still really interested in concise answer to that last question there.
>  What are the priorities for what you're trying to improve?  What you've
> listed here is "the steps you're going to take in order to improve it" but I
> have yet to see a lucid description of the problem in detail.
>

I think the problem is largely one of organization (as it relates to
"accessibility", e.g. how / under what context do I get linked to such and
such thing?) and outdated documentation. I think the individual problems are
all very well-known and while there is not some overarching problem with all
the documentation that requires starting from scratch, reorganizing and
restructuring what's there may make it look like I'm trying to do that.


>
> Those tutorials aren't new at all; they were taken (often verbatim) from
> the "using twisted.web" document. Writing a ton of new documentation really
> isn't my goal at all. My goals are threefold:
>
>    1. Reorganize existing documentation in a way that makes it more
>    accessible.
>
> Accessible to whom?  How will reorganizing it make it more accessible?  One
> way to interpret this statement is that your goal is to remove all diagrams,
> because the documentation is currently not accessible to the blind.  I'm
> pretty sure *that's* not what you mean, but it's a good example of how
> ambiguous this statement is :).  (Plus, the couple of blind developers I've
> talked to about Twisted didn't seem to have a problem with the docs...)
>
>
>    1. Edit existing documentation to conform to a task
>    (howto/tutorial/etc.) vs. expanded learning model. (the whole instant
>    gratification thing and all that)
>
> OK, I'm on board with that.  Except that in order to understand the
> tutorial documentation you need a good backing of reference docs, so it's
> not like you can just choose one over the other.  And we have lots of
> tutorial docs (c.f. the infamous finger tutorial) which are in the tutorial
> / task-oriented paradigm but don't teach much that's directly useful.
>

Finger is a really bad example of what a howto should be; it doesn't teach
you how to achieve some specific, common goal quickly and easily. The names
howto <http://twistedmatrix.com/documents/current/names/howto/names.html>is
a good example of a howto that tells me exactly how to do something in as
few steps as humanly possible. It could use a reference to wherever all the
functions (SOA, A, NS, etc.) are coming from and links to some follow-up
documentation of the *names* project in general, but I digress.

>
>    1. Gradually update / replace code listings with "current best
>    practices" examples that are tested.
>
> No arguing with that at all, that sounds great.
>
> I know you want an actual *layout* for the reorganization.
>
>
> Not really.
>
> What I want is a clear understanding of what you intend to change.  I
> usually get that by reading a diff: it's easy to read a diff and see what
> changed in the old versus the new version of something.  I can tell if it's
> an improvement without having to digest the entire content.
>
> But the structure of <http://docs.recursivedream.com/twisted/> is a
> sprawling mess of placeholders and half-finished ideas.  It's different from
> the existing documentation in lots of ways; it has a completely different
> stylesheet (which I assume is some standard Sphinx thing we will get rid of
> with the consistent theming work in Kevin's sphinx transition).  I don't
> know what I'm looking at or how to appreciate it.
>
> This is why I started off by complaining about the separate git repository.
>  If you're going to work in a separate repository and a separate format and
> not produce diffs that I can skim, then it's *very* hard to comment
> intelligently on your strategy, and you need to take an immense amount of
> care to call out the sections you consider complete, what exactly you want
> feedback on, and areas where you have or haven't added new content (so you
> can't be blamed for issues in old content that you're not trying to update).
>
> Note that diffs against Kevin's sphinx output would basically satisfy this
> same requirement, even if that output isn't really complete and those diffs
> would need to be re-created when the final conversion occurred.  At least
> there would be a set of deltas to look at rather than a whole new structure
> which is mostly scaffolding.
>

I'm just going to start making diffs against Kevin's lore2sphinx output as
suggested. He's given me instructions on how to generate the docs and I'll
attempt to create specific patches and tickets against that output to the
extent possible. My hope is that this method will allow the project to get
somewhere that doesn't result in me ending up with a bunch of third-party
Twisted documentation because nobody could ever really agree on why it was
an improvement in the first place.

And on that note, perhaps it won't be an objective improvement. I'm open to
the possibility that the documentation is sufficient for most people and I'm
just an exception to that—or that my "improvements" are only really helpful
to me. But I'm certainly going to keep looking for ways to suitably prove
the general case, for everybody's benefit; I have no desire to end up with
something that only benefits me.


>
> I want to give that to you, but it requires going through all the
> documentation and making sure it fits in the reorganized layout or making
> sections for it when it doesn't which is far more time consuming than
> providing a layout for the "task" piece, as I did here. I'm basically just
> saying "How-tos should have a standard layout with these sections; here's a
> stub of one such how-to as incompletely adapted from the current
> documentation".
>
>
> Even going back and reading your original message to this thread now, I
> can't tell that this is what you were asking for review of.  Even now I'm
> not entirely sure what you mean.  Do you mean that you want feedback on the
> sections on <
> http://docs.recursivedream.com/twisted/projects/web/tasks/serve/index.html>?
>  Or the way that <
> http://docs.recursivedream.com/twisted/projects/web/tasks/serve/serve.html>
> is split out into separate tasks?
>
> If you are interested in getting a review of the template or the outline,
> please write up the template itself with a description of what should go
> into each section.  Then you could link from the template to
> web/tasks/serve/index and say "and here's an example of some existing
> documentation applied to this outline".  But since I have no idea what the
> generic purpose of each section is, I can't comment on whether the sections
> are a bad idea or the classifications of certain sections of existing docs
> is a bad idea or if it's just too incomplete for me to comment on.
>
> Plus, such a template would serve as a critical tool for new documentation
> authors (of which I hope we get a few), allowing for a consistent style to
> be followed by multiple authors writing task-oriented documentation for
> different parts of Twisted.  The lack of such meta-documentation is the root
> of many issues with the current docs: when we're writing code for Twisted,
> we have a very clear idea of what the coding standards are, but when we
> approach documentation, the individual author just writes whatever random
> style happens to suit them on that day.  There's no guidance.
>
> I think most of this is a huge misunderstanding as to my goals both in
> general and for the particular section critiqued here. Perhaps I should have
> completed it before putting it up for review. I just felt it was better to
> get *something* out here just in case everybody hated the entire direction
> rather than spend a ton of time slicing the current web server docs the way
> I personally feel they should fit together in order to properly serve the
> audience.
>
>
> Soliciting feedback is good.  I still think that these discussions have
> been very productive.  The issue I have isn't that it's unfinished, it's
> that there are no guard-rails on the unfinished sections, so it's easy to
> careen off into the stuff that I'm not really supposed to be paying
> attention to. A substantially larger document with that same problem would
> have been a disaster to try to review, so early feedback is better;
> hopefully as you produce something bigger you'll also alleviate the
> difficulty of review somehow.
>
> If all that comes out of your efforts is a new, different pile of
>> documentation, that's not *entirely* without value; different audiences
>> understand things in different ways, so someone might pick it up and
>> understand Twisted as a result.  But I very much doubt that's going to move
>> us from a general impression of "bad docs" to a general impression of "good
>> docs".
>>
>> More specific criticism:
>>
>>
>>    - "This is a Twisted Task"?  I feel like I'm about to start reading
>>    about a Task object or something related to the twisted.internet.task
>>    module.  Or maybe that this is an exercise.  A document explaining how to do
>>    a task is rarely called a "task" itself.  Mostly they're called "How-To"s,
>>    actually.  I understand you're trying to get away from old terminology but
>>    this seems awkward and forced.
>>
>> I just started using this terminology because it seemed common within our
> conversations. How-to/tutorial would likely be less confusing.
>
>
> OK.  For what it's worth I share your desire for a new / better term but I
> can't think of one.
>
>
>>    - "You should be familiar with Resources"?  That is really broad and
>>    wide-ranging and should be a hyperlink to another tutorial.
>>
>> It was just a placeholder; it should link to a section in the web server
> overview docs that talks about Resources. There are other things on that
> list, too (Site object, yada yada). Although, like I said, it's merely
> incomplete.
>
>
> I suppose my comments above about meta-documentation and a deeper
> explanation of the template are my response to this; if it were clearer what
> the structure were really supposed to be representing it would be easier to
> ignore minor flaws like this or recommend improvements
>
>
>>    -  Plus, I think that most people interested in these tasks will want
>>    to learn about how to get simple tasks done first, before moving on to a
>>    more abstract / theoretical understanding of the model behind them.
>>
>> I completely agree. That's my whole point with starting off using
> *twistd*, despite its limitations or whatever.
>
>
> Obviously from my other message I'm a fan of this approach.
>
>
>>    - More importantly: this is a very wishy-washy definition of the
>>    audience.  Is it for system administrators?  Software developers?  DevOps
>>    people?  Graphic designers?  Power users?  What level of experience do they
>>    need with Python?  With networking?  With HTTP?
>>
>> The latter should all be under "Prerequisites" whereas "audience" should
> probably be a new howto standard section that's currently overlooked
> (perhaps above "Prerequisites"?)
>
>
> It seems to me that "audience" is the section and "prerequisites" should be
> a sub-section of that.  After all prerequisites are really attributes of the
> audience, not the document :).
>
>
>>    - "Other configuration options are available"?  This should be a list
>>    of links to other documents that might help with some of those options.
>>     Documentation which says "and then you could do something else" without
>>    telling you what else or why is needlessly confusing.
>>
>> I agree. There are lots and lots of lines to connect even from such a
> simplistic tutorial. I wanted to get feedback on the *layout* rather than
> the final web project documentation which should certainly include links to
> twistd option docs and probably a half dozen other things I haven't linked
> to yet.
>
>
> (Again, go write up the layout explicitly first, and then I can provide
> more useful feedback!)
>
>
>>    - The WSGI example totally glosses over how you get your code onto
>>    sys.path (PYTHONPATH etc), says that 'helloworld' is a module/package (which
>>    is it?  why are both options given?).  This is an *extremely* confusing
>>    area for newbies, which is why it actually makes a bit of sense to me that
>>    the web-in-60-seconds WSGI tutorial starts with a callable defined in the
>>    .tac.  Not a good practice in the long term, but it allows the user to
>>    immediately get some feedback and have some notion of how things are wired
>>    together without having to debug Python's import system first.
>>
>> Fair enough. This point was also not covered in the official docs, where I
> got the instructions from. Regardless, I have no intention of including
> how-tos that gloss over *anything; *either they work "out of the box" or
> are edited until they do.
>
>
> I guess this is another nitpick that wasn't really about the layout.
>  Sounds like we feel the same way, at any rate.
>
>
>>    - .rpy scripts are for deployment, not debugging; I was a little
>>    concerned seeing that bullet point on the outline.  (See <
>>    http://twistedmatrix.com/documents/10.2.0/web/howto/web-in-60/rpy-scripts.html
>>    >.)
>>
>> Huh? The docs you link to claim:
>
> So, while rpy scripts may be useful for testing out ideas, they're not
>> recommend for much more than that.
>
>
> Am I missing something here?
>
>
> Well, "testing out" and "debugging" aren't quite the same thing.  And I'd
> probably recommend RPYs for more than that :).  I was linking to that
> document just to provide an expanded explanation of the functionality;
> personally I find it obvious why RPYs are super useful from that example, so
> I mostly just ignore that comment.  (Perhaps this doc needs to be updated,
> but let's please not hijack this already-sprawling thread for discussion of
> the merits and flaws of RPYs...)
>
> My hope is that this reply clears up some confusion. However, feel free to
> let me know if you think I simply don't have the mindset necessary to
> "improve" the documentation in a way that is desirable. I had a hard time
> learning Twisted in the beginning and to this day some really helpful
> abstractions and just available projects / solved problems elude me.
>
>
> This sounds like I'm discouraging you.  If that's the case, feel free to
> just tell me to sit this one out and wait until you're further along in the
> project.  I am trying to provide feedback to be useful to your efforts, but
> if you don't find it useful, then you can carry on with feedback from people
> who really need the docs.
>
> I think the reason for this is that I think a lot like Jacob <
> http://jacobian.org/writing/great-documentation/> when it comes to
> documentation and that's the sort of stuff I need to have in order to truly
> grok something. Maybe that's what we all want here. Maybe it isn't, though.
> And I'd really love to figure out which it is before I drive forward on
> this. If we really are on the same page (and I'd certainly like to be),
> we've got some hellish communication issues ;)
>
>
> I'm a big fan of Jacob's in general and that essay series in particular as
> far as it comes to documentation, so I don't think that's the issue.
>  Obviously his methods have yielded a result that is well-regarded in the
> Django community.  And I think we are on the same page about many things,
> and we don't *need* to agree about everything.
>
> I'm still quite excited to have you working on our documentation.
>
> (Except for his comment about API documentation generators; I think that
> epydoc/pydoc is hugely useful.  But I do agree that one shouldn't just run
> an auto-generator to spit out a rehash of the source code; one needs to
> write a ton of documentation in an appropriate format to be consumed by such
> a tool in order for it to be useful.)
>
> Thanks and good luck,
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110206/37d9e313/attachment.html>

From exarkun at twistedmatrix.com  Sun Feb  6 15:12:33 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Feb 2011 22:12:33 -0000
Subject: [Twisted-Python] Change to ticket workflow
Message-ID: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>

Hi all,

Last weekend I changed the default owner for all components in the issue 
tracker to be nobody.  I also installed the "DefaultCC" plugin which 
lets us configure a list of users to be added to the cc list of tickets 
on a per-component basis.

The motivation for this change is basically the fact that when people 
see a ticket with an owner, they think that owner is either working on 
the ticket or will be upset if someone else starts working on it.  This 
has really never been the case with Twisted's development process.

Beyond this change, I think it may also be a good idea to remove owners 
from most old tickets as well.  This will probably happen sometime in 
the coming week, so don't be surprised when you look at your ticket list 
and find it empty.

After this, if you actually want to work on a ticket, there's no reason 
not to assign it to yourself.  The goal here is just to eliminate 
accidental/careless ownership.

Jean-Paul



From tom at recursivedream.com  Sun Feb  6 15:30:59 2011
From: tom at recursivedream.com (Tom Davis)
Date: Sun, 6 Feb 2011 17:30:59 -0500
Subject: [Twisted-Python] Change to ticket workflow
In-Reply-To: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>
References: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>
Message-ID: <AANLkTi=Nu=XC5TR6OaHdq=uwwAzov6Bbsne7iAXdY+an@mail.gmail.com>

On Sun, Feb 6, 2011 at 5:12 PM, <exarkun at twistedmatrix.com> wrote:

> Hi all,
>
> Last weekend I changed the default owner for all components in the issue
> tracker to be nobody.  I also installed the "DefaultCC" plugin which
> lets us configure a list of users to be added to the cc list of tickets
> on a per-component basis.
>
> The motivation for this change is basically the fact that when people
> see a ticket with an owner, they think that owner is either working on
> the ticket or will be upset if someone else starts working on it.  This
> has really never been the case with Twisted's development process.
>
> Beyond this change, I think it may also be a good idea to remove owners
> from most old tickets as well.  This will probably happen sometime in
> the coming week, so don't be surprised when you look at your ticket list
> and find it empty.
>
>
I've been meaning to recommend this, actually. I think "ownership" conveys
something important—or it should. My actual recommendation was going to be
to mass-remove ownership from tickets that haven't been updated by their
owners "recently" and then to institute some kind of reminder email that
gets sent out with a list of tickets you own that haven't been updated in
the past X weeks. This would at least nudge people to close a ticket or
remove their ownership so the ticket will be back "on the radar," so to
speak.

I've probably got a ticket or two that could be considered stale already and
I don't even have many to keep track of. It's just easy to forget week to
week what exactly I've made a promise to work on; I imagine it's the case
for others as well. Many tickets haven't been updated in years and something
tells me their owners won't be strolling back any time soon. Many of those
probably aren't relevant anymore, period. Perhaps being on the "nobody" list
would give them sufficient visibility to be properly triaged.

Just a thought!


> After this, if you actually want to work on a ticket, there's no reason
> not to assign it to yourself.  The goal here is just to eliminate
> accidental/careless ownership.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110206/1dbe81e8/attachment-0001.html>

From glyph at twistedmatrix.com  Sun Feb  6 17:26:34 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 6 Feb 2011 19:26:34 -0500
Subject: [Twisted-Python] Change to ticket workflow
In-Reply-To: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>
References: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>
Message-ID: <430CB111-62BF-4A54-92CE-20022914AEFE@twistedmatrix.com>


On Feb 6, 2011, at 5:12 PM, exarkun at twistedmatrix.com wrote:

> After this, if you actually want to work on a ticket, there's no reason 
> not to assign it to yourself.  The goal here is just to eliminate 
> accidental/careless ownership.

+1.

I'm not sure we should do this on a regular basis, or even ever again, but I have about 1000 tickets assigned to me that I'm never going to do anything about. The long history of me being the default owner for a component means that my ticket list is insanely long and it's very difficult to see the stuff that I'm actually contemplating working on.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110206/13dfa267/attachment.html>

From tenth at twistedmatrix.com  Sun Feb  6 19:05:22 2011
From: tenth at twistedmatrix.com (Tenth)
Date: Sun, 6 Feb 2011 21:05:22 -0500
Subject: [Twisted-Python]  Boston Mini-Sprint: February Edition
Message-ID: <AANLkTint8CvMbvbYJnmciiPvvpTgwm2kMh6+sPhe_W6N@mail.gmail.com>

We'll be holding another Boston-area Twisted Mini-Sprint on Sunday, February
13th at my place in Somerville, MA... I've sent out invitations to the
attendees from last time, plus a few other people who've expressed interest,
but if you weren't invited yet, and want to be, let me know!

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110206/3aa724f1/attachment.html>

From tom at recursivedream.com  Sun Feb  6 19:39:46 2011
From: tom at recursivedream.com (Tom Davis)
Date: Sun, 6 Feb 2011 21:39:46 -0500
Subject: [Twisted-Python] Boston Mini-Sprint: February Edition
In-Reply-To: <AANLkTint8CvMbvbYJnmciiPvvpTgwm2kMh6+sPhe_W6N@mail.gmail.com>
References: <AANLkTint8CvMbvbYJnmciiPvvpTgwm2kMh6+sPhe_W6N@mail.gmail.com>
Message-ID: <43A22834-DCE6-434E-BACD-780EE5350C64@recursivedream.com>

On Feb 6, 2011, at 9:05 PM, Tenth <tenth at twistedmatrix.com> wrote:

> We'll be holding another Boston-area Twisted Mini-Sprint on Sunday, February 13th at my place in Somerville, MA... I've sent out invitations to the attendees from last time, plus a few other people who've expressed interest, but if you weren't invited yet, and want to be, let me know!

I am interested in attending, good sir!

> 
> Thanks,
> 
> - Dave
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Sun Feb  6 19:53:26 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 6 Feb 2011 21:53:26 -0500
Subject: [Twisted-Python] Boston Mini-Sprint: February Edition
In-Reply-To: <43A22834-DCE6-434E-BACD-780EE5350C64@recursivedream.com>
References: <AANLkTint8CvMbvbYJnmciiPvvpTgwm2kMh6+sPhe_W6N@mail.gmail.com>
	<43A22834-DCE6-434E-BACD-780EE5350C64@recursivedream.com>
Message-ID: <7EB44A26-25D2-4216-AC21-72BD4FD1F6CA@twistedmatrix.com>


On Feb 6, 2011, at 9:39 PM, Tom Davis wrote:

> On Feb 6, 2011, at 9:05 PM, Tenth <tenth at twistedmatrix.com> wrote:
> 
>> We'll be holding another Boston-area Twisted Mini-Sprint on Sunday, February 13th at my place in Somerville, MA... I've sent out invitations to the attendees from last time, plus a few other people who've expressed interest, but if you weren't invited yet, and want to be, let me know!
> 
> I am interested in attending, good sir!
> 

I believe you already have an invite - check your email and click 'accept' :).

(Since it's Evite, of course, you might have to fish it out of your spam disposal first.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110206/2f3e66df/attachment.html>

From jml at mumak.net  Mon Feb  7 07:33:16 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 7 Feb 2011 14:33:16 +0000
Subject: [Twisted-Python] Change to ticket workflow
In-Reply-To: <430CB111-62BF-4A54-92CE-20022914AEFE@twistedmatrix.com>
References: <20110206221233.1699.1364615040.divmod.xquotient.626@localhost.localdomain>
	<430CB111-62BF-4A54-92CE-20022914AEFE@twistedmatrix.com>
Message-ID: <AANLkTik0-bYGD-cGDTpVQpifBxdYCiJOQ5ZCZy8yC3yq@mail.gmail.com>

On Mon, Feb 7, 2011 at 12:26 AM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>
> On Feb 6, 2011, at 5:12 PM, exarkun at twistedmatrix.com wrote:
>
> After this, if you actually want to work on a ticket, there's no reason
> not to assign it to yourself.  The goal here is just to eliminate
> accidental/careless ownership.
>
> +1.

+1 from me as well. Thank you for taking the time to make the change.

jml



From thomas at apestaart.org  Mon Feb  7 10:31:58 2011
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Mon, 07 Feb 2011 18:31:58 +0100
Subject: [Twisted-Python] ipv6 support
Message-ID: <1297099918.21374.1.camel@level.fluendo.fluendo.lan>

Hi everyone,

For Flumotion we would like to be able to add IPv6 support.  This is not
yet in Twisted, but there's a ticket open for it:
http://twistedmatrix.com/trac/ticket/3014

We are considering sponsoring a developer to finish and integrate this
patch, but I wanted to check first if there are any willing and able
developers to take on the job if we go ahead ?

Thanks
Thomas

-- 
The blood before me makes me open up my heart again
And I feel it coming over like a storm again
--
GStreamer - bringing multimedia to your desktop
http://gstreamer.freedesktop.org/





From jason.heeris at gmail.com  Mon Feb  7 18:23:04 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 8 Feb 2011 09:23:04 +0800
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and release
Message-ID: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>

I'm using a DeferredSemaphore with a token count of 1 to control
access to a serial port. I also have a GTK object for which I'd like
the "in-use" property to change (and notify listeners) when the
resource is in use. So far, I have something like this:

----
class SerialResource(gobject):

    # Property defs, etc

    def _acquire(self):
        # The "in-use" property is actually stored in self.taken
        self.taken = True
        self.notify('in-use')

    def _release(self, res):
        self.taken = False
        self.notify('in-use')
        return res

    def run(self, func, *args, **kargs):
        def wrapper():
            self._acquire()
            res = func(*args, **kargs)
            return res

        d = self.sem.run(wrapper)
        d.addBoth(self._release)
        return d
----

I feel like there might be a simpler way to do this, but I just can't
see it. Or is this as simple as I can make it?

— Jason



From jrennie at gmail.com  Mon Feb  7 19:45:29 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Mon, 7 Feb 2011 21:45:29 -0500
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
Message-ID: <AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>

I think what you have duplicating functionality---you're not taking
advantage of the DeferredSemaphore.  Try something like this:

sem = DeferredSemaphore(1)

def doSerialStuffAndRelease(sem):
    # ...perform serial port communication...
    sem.release()

d = sem.acquire()
d.addCallback(doSerialStuffAndRelease)

You'll want "sem" to be a global---use wherever you deal with a particular
port.  Create additional instances of DeferredSemaphore for additional
serial ports.  Note that when the deferred is fired, the semaphore is passed
as the argument.  This is the reason for "sem" being the argument name in
the function.

http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.2.0/twisted/internet/defer.py#L1266

Note that you'll also want an error handler which releases the semaphore :)

Jason

On Mon, Feb 7, 2011 at 8:23 PM, Jason Heeris <jason.heeris at gmail.com> wrote:

> I'm using a DeferredSemaphore with a token count of 1 to control
> access to a serial port. I also have a GTK object for which I'd like
> the "in-use" property to change (and notify listeners) when the
> resource is in use. So far, I have something like this:
>
> ----
> class SerialResource(gobject):
>
>    # Property defs, etc
>
>    def _acquire(self):
>        # The "in-use" property is actually stored in self.taken
>        self.taken = True
>        self.notify('in-use')
>
>    def _release(self, res):
>        self.taken = False
>        self.notify('in-use')
>        return res
>
>    def run(self, func, *args, **kargs):
>        def wrapper():
>            self._acquire()
>            res = func(*args, **kargs)
>            return res
>
>        d = self.sem.run(wrapper)
>        d.addBoth(self._release)
>        return d
> ----
>
> I feel like there might be a simpler way to do this, but I just can't
> see it. Or is this as simple as I can make it?
>
> — Jason
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110207/dcd45974/attachment.html>

From stephen at thorne.id.au  Mon Feb  7 20:14:39 2011
From: stephen at thorne.id.au (Stephen Thorne)
Date: Tue, 8 Feb 2011 13:14:39 +1000
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
 release
In-Reply-To: <AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
Message-ID: <20110208031439.GA3934@thorne.id.au>

On 2011-02-07, Jason Rennie wrote:
> d = sem.acquire()
> d.addCallback(doSerialStuffAndRelease)

Shouldn't this be spelled:

d = sem.run(doSerialStuff)

Which does acquasition and release of the sempahore properly?

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue



From jason.heeris at gmail.com  Mon Feb  7 20:25:06 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 8 Feb 2011 11:25:06 +0800
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
Message-ID: <AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>

On 8 February 2011 10:45, Jason Rennie <jrennie at gmail.com> wrote:
> I think what you have duplicating functionality---you're not taking
> advantage of the DeferredSemaphore.

I thought using the "run" method *was* the preferred way to use a DS,
but whatever works.

> You'll want "sem" to be a global---use wherever you deal with a particular
> port.

There's one serial settings object for the life of the program (which,
since it is initialised in my main entry point, is essentially
global), and I'm happy to let it "own" the semaphore. Making the DS
itself global won't really get me anything better than that.

and Stephen Thorne...
On 2011-02-07, Jason Rennie wrote:
> > d = sem.acquire()
> > d.addCallback(doSerialStuffAndRelease)
>
> Shouldn't this be spelled:
>
> d = sem.run(doSerialStuff)
>
> Which does acquasition and release of the sempahore properly?

Won't you then be trying to acquire or release it twice?

— Jason



From stephen at thorne.id.au  Mon Feb  7 20:46:20 2011
From: stephen at thorne.id.au (Stephen Thorne)
Date: Tue, 8 Feb 2011 13:46:20 +1000
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
 release
In-Reply-To: <AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
Message-ID: <20110208034620.GB3934@thorne.id.au>

On 2011-02-08, Jason Heeris wrote:
> On 8 February 2011 10:45, Jason Rennie <jrennie at gmail.com> wrote:
> > I think what you have duplicating functionality---you're not taking
> > advantage of the DeferredSemaphore.
> 
> I thought using the "run" method *was* the preferred way to use a DS,
> but whatever works.
> >
> > Shouldn't this be spelled:
> >
> > d = sem.run(doSerialStuff)
> >
> > Which does acquasition and release of the sempahore properly?
> 
> Won't you then be trying to acquire or release it twice?

Um, that's what I mean, you shouldn't be using .acquire() or .release(),
just .run(). doSerialStuff doesn't need a reference to the semaphore
object.

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue



From jason.heeris at gmail.com  Mon Feb  7 21:03:10 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 8 Feb 2011 12:03:10 +0800
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <20110208034620.GB3934@thorne.id.au>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
	<20110208034620.GB3934@thorne.id.au>
Message-ID: <AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>

On 8 February 2011 11:46, Stephen Thorne <stephen at thorne.id.au> wrote:
> Um, that's what I mean, you shouldn't be using .acquire() or .release(),
> just .run(). doSerialStuff doesn't need a reference to the semaphore
> object.

So... how can I update the property and emit the signal upon
acquisition and release? Or are you saying I should stick with what I
had?

— Jason



From stephen at thorne.id.au  Mon Feb  7 21:22:05 2011
From: stephen at thorne.id.au (Stephen Thorne)
Date: Tue, 8 Feb 2011 14:22:05 +1000
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
 release
In-Reply-To: <AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
	<20110208034620.GB3934@thorne.id.au>
	<AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>
Message-ID: <20110208042205.GC3934@thorne.id.au>

On 2011-02-08, Jason Heeris wrote:
> On 8 February 2011 11:46, Stephen Thorne <stephen at thorne.id.au> wrote:
> > Um, that's what I mean, you shouldn't be using .acquire() or .release(),
> > just .run(). doSerialStuff doesn't need a reference to the semaphore
> > object.
> 
> So... how can I update the property and emit the signal upon
> acquisition and release? Or are you saying I should stick with what I
> had?

I totally misread your example, and I appologise. I've read it now and
it looks fine to me. The only commend I'd make is that you probably want
DeferredLock not DeferredSempahore if this is serialised access.

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue



From jason.heeris at gmail.com  Mon Feb  7 21:37:23 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 8 Feb 2011 12:37:23 +0800
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <20110208042205.GC3934@thorne.id.au>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
	<20110208034620.GB3934@thorne.id.au>
	<AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>
	<20110208042205.GC3934@thorne.id.au>
Message-ID: <AANLkTimJs=G4X8fKkTnp4FhfaMXH2XwZp_KHyfH-u2-k@mail.gmail.com>

On 8 February 2011 12:22, Stephen Thorne <stephen at thorne.id.au> wrote:
> I totally misread your example, and I appologise. I've read it now and
> it looks fine to me. The only commend I'd make is that you probably want
> DeferredLock not DeferredSempahore if this is serialised access.

No need to apologise, happens to anyone :) And thanks for the pointer
to DeferredLock, somehow I totally missed that.

Cheers,
Jason



From glyph at twistedmatrix.com  Tue Feb  8 00:25:32 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Feb 2011 02:25:32 -0500
Subject: [Twisted-Python] ipv6 support
In-Reply-To: <1297099918.21374.1.camel@level.fluendo.fluendo.lan>
References: <1297099918.21374.1.camel@level.fluendo.fluendo.lan>
Message-ID: <2F44A5DC-AF83-46C1-BF95-1BFA1BABC531@twistedmatrix.com>

On Feb 7, 2011, at 12:31 PM, Thomas Vander Stichele wrote:

> Hi everyone,
> 
> For Flumotion we would like to be able to add IPv6 support.  This is not
> yet in Twisted, but there's a ticket open for it:
> http://twistedmatrix.com/trac/ticket/3014
> 
> We are considering sponsoring a developer to finish and integrate this
> patch, but I wanted to check first if there are any willing and able
> developers to take on the job if we go ahead ?
> 
> Thanks
> Thomas

Hi Thomas,

I'm really glad to hear you're doing this.  I'd be happy to help with the review process once it gets underway.

Feel free to remind me I said that :).

-glyph




From jrennie at gmail.com  Tue Feb  8 06:14:07 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Tue, 8 Feb 2011 08:14:07 -0500
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <AANLkTimJs=G4X8fKkTnp4FhfaMXH2XwZp_KHyfH-u2-k@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
	<20110208034620.GB3934@thorne.id.au>
	<AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>
	<20110208042205.GC3934@thorne.id.au>
	<AANLkTimJs=G4X8fKkTnp4FhfaMXH2XwZp_KHyfH-u2-k@mail.gmail.com>
Message-ID: <AANLkTimqHvXKPEPS7CJBa2wMUPgrf=w43uh5p3pgVkzV@mail.gmail.com>

Sorry, I don't think I understand the example either---looks to me like
you're reimplementing a semaphore.  Stephen's right about run().

Cheers,

Jason

On Mon, Feb 7, 2011 at 11:37 PM, Jason Heeris <jason.heeris at gmail.com>wrote:

> On 8 February 2011 12:22, Stephen Thorne <stephen at thorne.id.au> wrote:
> > I totally misread your example, and I appologise. I've read it now and
> > it looks fine to me. The only commend I'd make is that you probably want
> > DeferredLock not DeferredSempahore if this is serialised access.
>
> No need to apologise, happens to anyone :) And thanks for the pointer
> to DeferredLock, somehow I totally missed that.
>
> Cheers,
> Jason
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110208/5f5cf54c/attachment-0001.html>

From exarkun at twistedmatrix.com  Tue Feb  8 06:35:03 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 08 Feb 2011 13:35:03 -0000
Subject: [Twisted-Python] DeferredSemaphore - action on acquire and
	release
In-Reply-To: <AANLkTimqHvXKPEPS7CJBa2wMUPgrf=w43uh5p3pgVkzV@mail.gmail.com>
References: <AANLkTim-0j_Ar9mHU+uziTs7-jrqFo1ECi6Z+JVU3m7_@mail.gmail.com>
	<AANLkTikDRPXShmwRRTVu4nHKOWiqgqWO-Mc1Dwq_2GqW@mail.gmail.com>
	<AANLkTi=kHrg0a+PCPAxD+PeaHNwxFokE_8-SYjfG8PD8@mail.gmail.com>
	<20110208034620.GB3934@thorne.id.au>
	<AANLkTina6R_TfVne0xFxgvxprUnty+AhN0fdcbwEV_zM@mail.gmail.com>
	<20110208042205.GC3934@thorne.id.au>
	<AANLkTimJs=G4X8fKkTnp4FhfaMXH2XwZp_KHyfH-u2-k@mail.gmail.com>
	<AANLkTimqHvXKPEPS7CJBa2wMUPgrf=w43uh5p3pgVkzV@mail.gmail.com>
Message-ID: <20110208133503.1699.1505124111.divmod.xquotient.1367@localhost.localdomain>

On 01:14 pm, jrennie at gmail.com wrote:
>Sorry, I don't think I understand the example either---looks to me like
>you're reimplementing a semaphore.  Stephen's right about run().

It sounds like (the other) Jason would be happy with run, except he also 
wants to do something extra each time the lock/semaphore is taken and 
released.  DeferredSemaphore (and the other similar classes) don't 
really offer this functionality.  You just have to work that logic into 
the function you run.  It's possible something like this would be nicer 
than reimplementing the acquire/release logic:

    def run(sem, f):
        def before():
            doAcquire()
            return f()
        d = sem.run(before)
        def after(passthrough):
            doRelease()
            return passthrough
        d.addBoth(after)
        return d

Jean-Paul



From exarkun at twistedmatrix.com  Tue Feb  8 09:24:54 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 08 Feb 2011 16:24:54 -0000
Subject: [Twisted-Python] PyCon 2011 Twisted Sprint
Message-ID: <20110208162454.1699.1277311042.divmod.xquotient.1389@localhost.localdomain>

Hello all,

Once again, we will be sprinting at PyCon.  I've just added Twisted to 
<http://us.pycon.org/2011/sprints/projects/>.  If you plan to attend 
(for any amount of time), please add your name to the attendees list. 
Also feel free to suggest additional sprint topics.  We won't really 
limit sprint topics to things planned in advance, but adding particular 
things to the list is a probably a good way to attract more sprinters 
and let people do any background research that might be necessary before 
the sprint actually starts.

Jean-Paul



From tonthon21 at gmail.com  Tue Feb  8 11:18:52 2011
From: tonthon21 at gmail.com (tonthon)
Date: Tue, 08 Feb 2011 19:18:52 +0100
Subject: [Twisted-Python] Adbapi docs
Message-ID: <4D51890C.3030907@gmail.com>

I all,

I heard there was some work on the twisted documentation and I'd like to 
suggest some enhancement in the "twisted.enterprise.adbapi: Twisted 
RDBMS support" doc 
(http://twistedmatrix.com/documents/current/core/howto/rdbms.html).
Please add some note about the ConnectionPool.stop method.

When I first tried this module, I wrote a first class and associated 
tests and I quickly faced problems like "can't start new thread" and had 
to search a lot before understanding I had to call the stop method. Then 
I tought I had also to call the start one ... The good thing was that I 
red the source code, and it's always usefull to have a look at it :-).

Thanks,

* Gaston TJEBBES
* http://tonthon.blogspot.com



From brad.milne at devx.runthered.com  Tue Feb  8 14:00:05 2011
From: brad.milne at devx.runthered.com (Brad Milne)
Date: Wed, 9 Feb 2011 10:00:05 +1300
Subject: [Twisted-Python] Conch SFTP client help
Message-ID: <AANLkTinwMBwe1Qi-wBktwp3UgUk6+jTWzkCS7fJXK0x3@mail.gmail.com>

Hi all

I've looked around for SFTP client doco, but it's come up pretty thin on the
ground. I've seen http://twistedmatrix.com/trac/wiki/TwistedConch and
everything under it. With it I've been able to connect via SSH to a server
and run a command (*a la* the 'cat' example from tutorial page and from
sshsimpleclient.py<http://twistedmatrix.com/documents/current/conch/examples/sshsimpleclient.py>
).

On the other hand, plenty of posts recommend checking out cftp.py in
scripts/. That uses the FileTransferClient, and appears to be more along the
lines of what is needed for a persistent SFTP connection and file transfers.

What seems to be happening with the below is that the connection is being
created OK, but I haven't been able to utilise the _remoteGlob method (taken
from cftp.py). It simply hangs.

My sandbox code is below.

Any help greatly appreciated.
Brad

<code>
import os
from twisted.python import failure
from twisted.internet import reactor, protocol, defer
from twisted.conch.ssh import transport, connection, userauth, channel,
common, filetransfer
import logging
from twisted.python import log
import sys

class SimpleTransport(transport.SSHClientTransport):
    def verifyHostKey(self, hostKey, fingerprint):
        print 'host key fingerprint: %s' % fingerprint
        return defer.succeed(1)

    def connectionSecure(self):
        '''
        called when the encryption is set up and other services can be run
        '''
        self.requestService(SimpleUserAuth(USERNAME,SimpleConnection()))

class SimpleConnection(connection.SSHConnection):
    def serviceStarted(self):
        self.openChannel(SSHSession())

class SimpleUserAuth(userauth.SSHUserAuthClient):
    def getPassword(self):
        return defer.succeed(PASS)

class SSHSession(channel.SSHChannel):
    '''
    Things to do within the active SSH session.
    '''
    name = 'session'

    def __init__(self, interface_handler=None, *args, **kwargs):
        channel.SSHChannel.__init__(self, *args, **kwargs)
        self.interface_handler = interface_handler or SftpClient(self)

    def channelOpen(self, ignoredData):
        self.data = ''
        # Create an sftp connection (stays open)
        d = self.conn.sendRequest(self, 'subsystem', common.NS('sftp'),
wantReply=1)
        d.addCallback(self._cbSubsystem)

    def _cbSubsystem(self, result):
        self.interface_handler.getDirectoryContents('/tmp')

    def closeReceived(self):
        logging.info('remote side closed %s' % self)
        self.conn.sendClose(self)
        reactor.stop()

class SftpClient(object):

    def __init__(self, transport, *args, **kwargs):
        super(SftpClient, self).__init__(*args, **kwargs)
        self.transport = transport
        self._client = filetransfer.FileTransferClient()

    @property
    def client(self):
        if not self._client.connected:
            self._client.makeConnection(self.transport)
            logging.debug("Made 'connection' with transport class")
        return self._client

    def getDirectoryContents(self, path):
        d = self._remoteGlob(path)

        def gotit(files):
            print "Got %s: %s" % (type(files), files)
        d.addCallback(gotit)
        return d

    # Accessory methods.
    # These are stolen from twisted.conch.scripts.cftp.py. We can't
    # import that module as it contains unix-dependent imports.
    def _remoteGlob(self, fullPath):
        logging.debug('looking up %s' % fullPath)
        head, tail = os.path.split(fullPath)
        if '*' in tail or '?' in tail:
            glob = 1
        else:
            glob = 0
        if tail and not glob: # could be file or directory
            # try directory first
            logging.debug("Opening dir")
            d = self.client.openDirectory(fullPath)
            d.addCallback(self._cbOpenList, '')
            d.addErrback(self._ebNotADirectory, head, tail)
        else:
            d = self.client.openDirectory(head)
            d.addCallback(self._cbOpenList, tail)
        return d

    def _cbOpenList(self, directory, glob):
        logging.debug("Got dir")
        files = []
        d = directory.read()
        d.addBoth(self._cbReadFile, files, directory, glob)
        return d

    def _ebNotADirectory(self, reason, path, glob):
        logging.debug("Not a dir")
        d = self.client.openDirectory(path)
        d.addCallback(self._cbOpenList, glob)
        return d

    def _cbReadFile(self, files, l, directory, glob):
        logging.debug("Reading file")
        if not isinstance(files, failure.Failure):
            if glob:
                raise NotImplementedError("don't have fnmatch available to
use on Windows so have commented this bit out")
#                l.extend([f for f in files if fnmatch.fnmatch(f[0], glob)])
            else:
                l.extend(files)
            d = directory.read()
            d.addBoth(self._cbReadFile, l, directory, glob)
            return d
        else:
            reason = files
            reason.trap(EOFError)
            directory.close()
            return l

if __name__=='__main__':
    protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST, 22)
    log.startLogging(sys.stdout, setStdout=0)
    reactor.run()

</code>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110209/af455516/attachment.html>

From luke-lists at hybrid-logic.co.uk  Tue Feb  8 15:53:38 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Tue, 08 Feb 2011 17:53:38 -0500
Subject: [Twisted-Python] Announcing txMySQL - native async Twisted MySQL
	protocol
Message-ID: <1297205618.8982.136.camel@pow>

Hi everyone,

I'm pleased to announce the release of txMySQL, a native Twisted MySQL
protocol implementation at https://github.com/hybridlogic/txMySQL

The bulk of this code is courtesy of _habnabit (thank you!), I just
added authentication support and fixed a couple of bugs which were
stopping the MySQL protocol parser working. As we will be using this in
production at Hybrid Logic I am happy to take over maintenance of it.

As you can tell from the TODO list in the README, this is still a fairly
rough draft, but it works well enough to .fetchall() basic results sets
and .query() any other MySQL statements you care to run. See example.py.

The incentive to produce this was due to a critical bug in MySQLdb with
threading under load (on FreeBSD) which was causing Python to lock up. I
decided that a native client protocol implementation would be less work
than tracking down that bug, and besides it's something I've wanted to
do for a while ;-)

It might be interesting to see how adbapi could be modified to use a
DeferredSemaphore to implement a completely threadless pool of MySQL
connections with this...?

Feel free to fork, tweak, fix, use, report issues, etc.

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Phone: +441172232002 / +16179496062






From brad.milne at devx.runthered.com  Tue Feb  8 20:45:31 2011
From: brad.milne at devx.runthered.com (Brad Milne)
Date: Wed, 9 Feb 2011 16:45:31 +1300
Subject: [Twisted-Python] Conch SFTP client help
In-Reply-To: <AANLkTinwMBwe1Qi-wBktwp3UgUk6+jTWzkCS7fJXK0x3@mail.gmail.com>
References: <AANLkTinwMBwe1Qi-wBktwp3UgUk6+jTWzkCS7fJXK0x3@mail.gmail.com>
Message-ID: <AANLkTikfhTk=DbiQkwyqb_qp8Vw0_xbhqMx_AFbHys4m@mail.gmail.com>

Nevermind. I was missing 'self.dataReceived =
self.interface_handler.dataReceived' in the __init__ of SSHSession
and self.dataReceived = self._client.dataReceived in the __init__ of
SftpClient. Maybe I need to reduce the abstraction a bit here, hmm.

Well hopefully this helps someone sometime....


On 9 February 2011 10:00, Brad Milne <brad.milne at devx.runthered.com> wrote:

> Hi all
>
> I've looked around for SFTP client doco, but it's come up pretty thin on
> the ground. I've seen http://twistedmatrix.com/trac/wiki/TwistedConch and
> everything under it. With it I've been able to connect via SSH to a server
> and run a command (*a la* the 'cat' example from tutorial page and from
> sshsimpleclient.py<http://twistedmatrix.com/documents/current/conch/examples/sshsimpleclient.py>
> ).
>
> On the other hand, plenty of posts recommend checking out cftp.py in
> scripts/. That uses the FileTransferClient, and appears to be more along the
> lines of what is needed for a persistent SFTP connection and file transfers.
>
> What seems to be happening with the below is that the connection is being
> created OK, but I haven't been able to utilise the _remoteGlob method (taken
> from cftp.py). It simply hangs.
>
> My sandbox code is below.
>
> Any help greatly appreciated.
> Brad
>
> <code>
> import os
> from twisted.python import failure
> from twisted.internet import reactor, protocol, defer
> from twisted.conch.ssh import transport, connection, userauth, channel,
> common, filetransfer
> import logging
> from twisted.python import log
> import sys
>
> class SimpleTransport(transport.SSHClientTransport):
>     def verifyHostKey(self, hostKey, fingerprint):
>         print 'host key fingerprint: %s' % fingerprint
>         return defer.succeed(1)
>
>     def connectionSecure(self):
>         '''
>         called when the encryption is set up and other services can be run
>         '''
>         self.requestService(SimpleUserAuth(USERNAME,SimpleConnection()))
>
> class SimpleConnection(connection.SSHConnection):
>     def serviceStarted(self):
>         self.openChannel(SSHSession())
>
> class SimpleUserAuth(userauth.SSHUserAuthClient):
>     def getPassword(self):
>         return defer.succeed(PASS)
>
> class SSHSession(channel.SSHChannel):
>     '''
>     Things to do within the active SSH session.
>     '''
>     name = 'session'
>
>     def __init__(self, interface_handler=None, *args, **kwargs):
>         channel.SSHChannel.__init__(self, *args, **kwargs)
>         self.interface_handler = interface_handler or SftpClient(self)
>
>     def channelOpen(self, ignoredData):
>         self.data = ''
>         # Create an sftp connection (stays open)
>         d = self.conn.sendRequest(self, 'subsystem', common.NS('sftp'),
> wantReply=1)
>         d.addCallback(self._cbSubsystem)
>
>     def _cbSubsystem(self, result):
>         self.interface_handler.getDirectoryContents('/tmp')
>
>     def closeReceived(self):
>         logging.info('remote side closed %s' % self)
>         self.conn.sendClose(self)
>         reactor.stop()
>
> class SftpClient(object):
>
>     def __init__(self, transport, *args, **kwargs):
>         super(SftpClient, self).__init__(*args, **kwargs)
>         self.transport = transport
>         self._client = filetransfer.FileTransferClient()
>
>     @property
>     def client(self):
>         if not self._client.connected:
>             self._client.makeConnection(self.transport)
>             logging.debug("Made 'connection' with transport class")
>         return self._client
>
>     def getDirectoryContents(self, path):
>         d = self._remoteGlob(path)
>
>         def gotit(files):
>             print "Got %s: %s" % (type(files), files)
>         d.addCallback(gotit)
>         return d
>
>     # Accessory methods.
>     # These are stolen from twisted.conch.scripts.cftp.py. We can't
>     # import that module as it contains unix-dependent imports.
>     def _remoteGlob(self, fullPath):
>         logging.debug('looking up %s' % fullPath)
>         head, tail = os.path.split(fullPath)
>         if '*' in tail or '?' in tail:
>             glob = 1
>         else:
>             glob = 0
>         if tail and not glob: # could be file or directory
>             # try directory first
>             logging.debug("Opening dir")
>             d = self.client.openDirectory(fullPath)
>             d.addCallback(self._cbOpenList, '')
>             d.addErrback(self._ebNotADirectory, head, tail)
>         else:
>             d = self.client.openDirectory(head)
>             d.addCallback(self._cbOpenList, tail)
>         return d
>
>     def _cbOpenList(self, directory, glob):
>         logging.debug("Got dir")
>         files = []
>         d = directory.read()
>         d.addBoth(self._cbReadFile, files, directory, glob)
>         return d
>
>     def _ebNotADirectory(self, reason, path, glob):
>         logging.debug("Not a dir")
>         d = self.client.openDirectory(path)
>         d.addCallback(self._cbOpenList, glob)
>         return d
>
>     def _cbReadFile(self, files, l, directory, glob):
>         logging.debug("Reading file")
>         if not isinstance(files, failure.Failure):
>             if glob:
>                 raise NotImplementedError("don't have fnmatch available to
> use on Windows so have commented this bit out")
> #                l.extend([f for f in files if fnmatch.fnmatch(f[0],
> glob)])
>             else:
>                 l.extend(files)
>             d = directory.read()
>             d.addBoth(self._cbReadFile, l, directory, glob)
>             return d
>         else:
>             reason = files
>             reason.trap(EOFError)
>             directory.close()
>             return l
>
> if __name__=='__main__':
>     protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST, 22)
>     log.startLogging(sys.stdout, setStdout=0)
>     reactor.run()
>
> </code>
>



-- 
Brad Milne | Run The Red | *brad.milne at devx.runthered.com*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110209/531636b3/attachment.html>

From manuito at gmail.com  Wed Feb  9 01:42:59 2011
From: manuito at gmail.com (Manu)
Date: Wed, 9 Feb 2011 09:42:59 +0100
Subject: [Twisted-Python] Store an instance of a connection - twisted.web
Message-ID: <AANLkTin2Js+Vt9EBFp-TXt26hJyv3NfwUL-BdR+iefg_@mail.gmail.com>

How I store an instance of a connection in twisted.web? I have seen
request.getSession() but I searched and there are very few examples of how
it is stored and retrieved later.

I want to store the ldap connection in a session for retrieve later. Thanks.

def render_POST(self, request):

    command = request.path[1:]
    session = request.getSession()

    if command == "authentication":
      Connect =
LdapConnection(request.args['host'][0],request.args['user'][0],request.args['password'][0])
      session.addComponent(LdapConnection, Connect)

    if command == "users":
      Connect = session.getComponent(LdapConnection)
      u = Users(Connect, request.args['name'][0],request.args['employeeNumber'])

    return
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110209/dd97e58d/attachment.html>

From exarkun at twistedmatrix.com  Wed Feb  9 05:41:54 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 09 Feb 2011 12:41:54 -0000
Subject: [Twisted-Python] Store an instance of a connection - twisted.web
In-Reply-To: <AANLkTin2Js+Vt9EBFp-TXt26hJyv3NfwUL-BdR+iefg_@mail.gmail.com>
References: <AANLkTin2Js+Vt9EBFp-TXt26hJyv3NfwUL-BdR+iefg_@mail.gmail.com>
Message-ID: <20110209124154.1699.967195113.divmod.xquotient.1401@localhost.localdomain>

On 08:42 am, manuito at gmail.com wrote:
>How I store an instance of a connection in twisted.web? I have seen
>request.getSession() but I searched and there are very few examples of 
>how
>it is stored and retrieved later.
>
>I want to store the ldap connection in a session for retrieve later. 
>Thanks.
>
>def render_POST(self, request):
>
>    command = request.path[1:]
>    session = request.getSession()
>
>    if command == "authentication":
>      Connect =
>LdapConnection(request.args['host'][0],request.args['user'][0],request.args['password'][0])
>      session.addComponent(LdapConnection, Connect)
>
>    if command == "users":
>      Connect = session.getComponent(LdapConnection)
>      u = Users(Connect, 
>request.args['name'][0],request.args['employeeNumber'])
>
>    return

How about the answer here?

http://stackoverflow.com/questions/4936994/store-an-instance-of-a 
-connection-twisted-web

Jean-Paul



From cybergrind at gmail.com  Wed Feb  9 08:24:34 2011
From: cybergrind at gmail.com (cybergrind)
Date: Wed, 9 Feb 2011 17:24:34 +0200
Subject: [Twisted-Python] Announcing txMySQL - native async Twisted
	MySQL protocol
In-Reply-To: <1297205618.8982.136.camel@pow>
References: <1297205618.8982.136.camel@pow>
Message-ID: <AANLkTi=Sgut21i7W6MfoSxACoMZvFuCOa1j41-K9WFF+@mail.gmail.com>

Hi Luke,

We'll test it. This can be great replacement for MySQLdb

On Wed, Feb 9, 2011 at 12:53 AM, Luke Marsden <luke-lists at hybrid-logic.co.uk
> wrote:

> Hi everyone,
>
> I'm pleased to announce the release of txMySQL, a native Twisted MySQL
> protocol implementation at https://github.com/hybridlogic/txMySQL
>
> The bulk of this code is courtesy of _habnabit (thank you!), I just
> added authentication support and fixed a couple of bugs which were
> stopping the MySQL protocol parser working. As we will be using this in
> production at Hybrid Logic I am happy to take over maintenance of it.
>
> As you can tell from the TODO list in the README, this is still a fairly
> rough draft, but it works well enough to .fetchall() basic results sets
> and .query() any other MySQL statements you care to run. See example.py.
>
> The incentive to produce this was due to a critical bug in MySQLdb with
> threading under load (on FreeBSD) which was causing Python to lock up. I
> decided that a native client protocol implementation would be less work
> than tracking down that bug, and besides it's something I've wanted to
> do for a while ;-)
>
> It might be interesting to see how adbapi could be modified to use a
> DeferredSemaphore to implement a completely threadless pool of MySQL
> connections with this...?
>
> Feel free to fork, tweak, fix, use, report issues, etc.
>
> --
> Best Regards,
> Luke Marsden
> CTO, Hybrid Logic Ltd.
>
> Web: http://www.hybrid-cluster.com/
> Hybrid Web Cluster - cloud web hosting
>
> Phone: +441172232002 / +16179496062
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110209/3d460b60/attachment-0001.html>

From ttkk1024 at 163.com  Thu Feb 10 02:10:24 2011
From: ttkk1024 at 163.com (=?GBK?B?zMa2q778?=)
Date: Thu, 10 Feb 2011 17:10:24 +0800 (CST)
Subject: [Twisted-Python] twisted can't find internet module
Message-ID: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>

I use xp,python 2.5.5,twisted 10.2.0 for py2.5
code:
from twisted.internet import reactor
reactor.run()
 
I save the code named 1.py.while I run 1.py,give me the error:
ImportError: No module named internet
 
who can give me a help?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110210/d27030d0/attachment-0001.html>

From torrycn at gmail.com  Thu Feb 10 02:30:57 2011
From: torrycn at gmail.com (=?UTF-8?B?5aS05aSq5pmV?=)
Date: Thu, 10 Feb 2011 17:30:57 +0800
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
References: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
Message-ID: <AANLkTim=P7wa0_7CngArH6Oy-fwSBajjKsoxwJOOzPB6@mail.gmail.com>

你这报错是路径问题。把你的环境搞清晰一些，马就能找到问题原因。

2011/2/10 唐东军 <ttkk1024 at 163.com>

> I use xp,python 2.5.5,twisted 10.2.0 for py2.5
> code:
> from twisted.internet import reactor
> reactor.run()
>
> I save the code named 1.py.while I run 1.py,give me the error:
> ImportError: No module named internet
>
> who can give me a help?
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110210/3d70714d/attachment.html>

From daniel.yang.zhenyu at gmail.com  Thu Feb 10 02:38:12 2011
From: daniel.yang.zhenyu at gmail.com (=?UTF-8?B?5p2o5oyv5a6H?=)
Date: Thu, 10 Feb 2011 17:38:12 +0800
Subject: [Twisted-Python] twisted can't find internet module
Message-ID: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>

既然用中文了。
你是以哪一种方式安装twisted的？具体的环境是？>_<

头太晕 <torrycn at gmail.com>编写：

>你这报错是路径问题。把你的环境搞清晰一些，马就能找到问题原因。
>
>2011/2/10 唐东军 <ttkk1024 at 163.com>
>
>> I use xp,python 2.5.5,twisted 10.2.0 for py2.5
>> code:
>> from twisted.internet import reactor
>> reactor.run()
>>
>> I save the code named 1.py.while I run 1.py,give me the error:
>> ImportError: No module named internet
>>
>> who can give me a help?
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

From jaroslaw.fedewicz at gmail.com  Thu Feb 10 02:52:44 2011
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Thu, 10 Feb 2011 11:52:44 +0200
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
Message-ID: <2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>

On Feb 10, 2011, at 11:38 AM, 杨振宇 wrote:

> 既然用中文了。
> 你是以哪一种方式安装twisted的？具体的环境是？>_<

Sorry for dropping in, but, when the problem is ultimately solved, can you post the summary in English?

I don't know a word in Chinese, for example. And you certainly wouldn't feel very good if I started replying in Ukrainian or Polish, too.


From glyph at twistedmatrix.com  Thu Feb 10 03:46:14 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Feb 2011 05:46:14 -0500
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
	<2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
Message-ID: <83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>

On Feb 10, 2011, at 4:52 AM, Yaroslav Fedevych wrote:

> On Feb 10, 2011, at 11:38 AM, 杨振宇 wrote:
> 
>> 既然用中文了。
>> 你是以哪一种方式安装twisted的？具体的环境是？>_<
> 
> Sorry for dropping in, but, when the problem is ultimately solved, can you post the summary in English?
> 
> I don't know a word in Chinese, for example. And you certainly wouldn't feel very good if I started replying in Ukrainian or Polish, too.

I am also very curious about the nature of the "problem horse", as google translate suggests the first response is about. :-)




From glyph at twistedmatrix.com  Thu Feb 10 03:46:49 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Feb 2011 05:46:49 -0500
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
References: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
Message-ID: <D28D18F3-7D44-4624-90D4-5048FF43F761@twistedmatrix.com>

On Feb 10, 2011, at 4:10 AM, 唐东军 wrote:

> I use xp,python 2.5.5,twisted 10.2.0 for py2.5
> code:
> from twisted.internet import reactor
> reactor.run()
>  
> I save the code named 1.py.while I run 1.py,give me the error:
> ImportError: No module named internet
>  
> who can give me a help?

The error message is longer than that.  It should say things about files and line numbers.  Can you paste the entire message?




From jaroslaw.fedewicz at gmail.com  Thu Feb 10 05:33:01 2011
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Thu, 10 Feb 2011 14:33:01 +0200
Subject: [Twisted-Python] OT: Languages (was Re: twisted can't find internet
	module)
In-Reply-To: <83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
	<2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
	<83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
Message-ID: <13D6F14C-CA13-443D-9213-3889C9EFAE09@gmail.com>


On Feb 10, 2011, at 12:46 PM, Glyph Lefkowitz wrote:

> On Feb 10, 2011, at 4:52 AM, Yaroslav Fedevych wrote:
> 
>> On Feb 10, 2011, at 11:38 AM, 杨振宇 wrote:
>> 
>>> 既然用中文了。
>>> 你是以哪一种方式安装twisted的？具体的环境是？>_<
>> 
>> Sorry for dropping in, but, when the problem is ultimately solved, can you post the summary in English?
>> 
>> I don't know a word in Chinese, for example. And you certainly wouldn't feel very good if I started replying in Ukrainian or Polish, too.
> 
> I am also very curious about the nature of the "problem horse", as google translate suggests the first response is about. :-)
> 

That's why I try not to use Google translate for loosely related languages.

With languages where not only grammar and vocabulary differ, but the development of which was influenced by vastly different cultural and historical factors, producing rather unrelated sets of context-bound ambiguities, idioms, and etymologies, Mandelbrot-Zipf law and similar statistical techniques just stop working.

That is, they still work, but external forces like history and culture overwhelm their effect. To smaller effect, you can observe statistics failure on language pairs like English-Hebrew, or English-Russian, to bigger extent it would be English-Chinese or English-(some isolated nation language). The result is inevitably “problem horse” or similar unparseable thing.

Therefore, it's essential that everyone on the list sticks to its ligua franca if at all possible...

-- 
Yaroslav Fedevych
Software Developer and Consultant
jaroslaw.fedewicz at gmail.com
+380685061839, +380969783173




From stephen at thorne.id.au  Thu Feb 10 06:08:53 2011
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 10 Feb 2011 23:08:53 +1000
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
	<2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
	<83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
Message-ID: <20110210130853.GC3703@thorne.id.au>

On 2011-02-10, Glyph Lefkowitz wrote:
> On Feb 10, 2011, at 4:52 AM, Yaroslav Fedevych wrote:
> 
> > On Feb 10, 2011, at 11:38 AM, 杨振宇 wrote:
> > 
> >> 既然用中文了。
> >> 你是以哪一种方式安装twisted的？具体的环境是？>_<
> > 
> > Sorry for dropping in, but, when the problem is ultimately solved,
> > can you post the summary in English?
> > 
> > I don't know a word in Chinese, for example. And you certainly
> > wouldn't feel very good if I started replying in Ukrainian or
> > Polish, too.
> 
> I am also very curious about the nature of the "problem horse", as
> google translate suggests the first response is about. :-)

I did not use google translate, but I was wondering why horses were
mentioned in the discussion as well.

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue



From glyph at twistedmatrix.com  Thu Feb 10 11:14:19 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Feb 2011 13:14:19 -0500
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <20110210130853.GC3703@thorne.id.au>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
	<2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
	<83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
	<20110210130853.GC3703@thorne.id.au>
Message-ID: <93CF004D-7939-4150-ACA8-666C0E2DB25C@twistedmatrix.com>

On Feb 10, 2011, at 8:08 AM, Stephen Thorne wrote:

>> I am also very curious about the nature of the "problem horse", as
>> google translate suggests the first response is about. :-)
> 
> I did not use google translate, but I was wondering why horses were
> mentioned in the discussion as well.


Since the poster hasn't clarified, I thought I'd share this fascinating tidbit:

My wife (who was excited to learn the phrase for "bug report" from this message) explains that "horse-top" or "on a horse" is a Chinese idiom meaning "fast", so the responder was telling the OP to describe their problem better, and if they do so, it will be resolved quickly.

I have to admit I'm a bit disappointed; I thought that maybe Problem Horse would be Twisted's answer to the Django Pony, but alas we will never get to meet it.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110210/108ec11f/attachment.html>

From tom at recursivedream.com  Thu Feb 10 11:23:49 2011
From: tom at recursivedream.com (Tom Davis)
Date: Thu, 10 Feb 2011 13:23:49 -0500
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <93CF004D-7939-4150-ACA8-666C0E2DB25C@twistedmatrix.com>
References: <45ibfxubb0u9qd9hlu6a0xtj.1297330605880@email.android.com>
	<2D124CBB-41C3-446A-9C54-8704984F2795@gmail.com>
	<83945FE2-1BA8-4A5F-9F51-BD55B86CCA19@twistedmatrix.com>
	<20110210130853.GC3703@thorne.id.au>
	<93CF004D-7939-4150-ACA8-666C0E2DB25C@twistedmatrix.com>
Message-ID: <AANLkTi=s0kCRvu4n9rf80nqgNnuhOKE58scZBLTTn0iy@mail.gmail.com>

On Thu, Feb 10, 2011 at 1:14 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> On Feb 10, 2011, at 8:08 AM, Stephen Thorne wrote:
>
> I am also very curious about the nature of the "problem horse", as
>
> google translate suggests the first response is about. :-)
>
>
> I did not use google translate, but I was wondering why horses were
> mentioned in the discussion as well.
>
>
> Since the poster hasn't clarified, I thought I'd share this fascinating
> tidbit:
>
> My wife (who was excited to learn the phrase for "bug report" from this
> message) explains that "horse-top" or "on a horse" is a Chinese idiom
> meaning "fast", so the responder was telling the OP to describe their
> problem better, and if they do so, it will be resolved quickly.
>
> I have to admit I'm a bit disappointed; I thought that maybe Problem Horse
> would be Twisted's answer to the Django Pony, but alas we will never get to
> meet it.
>

I must admit that despite the ban on laughing out loud in #twisted, I have
done so in my apartment multiple times over "Problem Horse". I hope its fate
is not yet sealed!


>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110210/cee52b3f/attachment.html>

From stephen.c.waterbury at nasa.gov  Thu Feb 10 13:24:59 2011
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Thu, 10 Feb 2011 15:24:59 -0500
Subject: [Twisted-Python] twisted site should link to tx site ...
Message-ID: <4D54499B.7050509@nasa.gov>

This url should really be linked either from Twisted's main page
or at the very least on the "Twisted Community" page:

https://launchpad.net/tx

Lots of tx stuff that's not in PyPI, etc ... sheesh!  Also,
if you do a search on "tx" in the twisted site "search" it says
"search query too short", and the string "tx" is not found on
either the main page or the community page at all.

To be fair, googling on "twisted tx" gets the launchpad site as
the second hit, but what if someone doesn't know about the "tx"
thing?

Steve




From lvh at laurensvh.be  Thu Feb 10 13:45:24 2011
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 10 Feb 2011 21:45:24 +0100
Subject: [Twisted-Python] twisted can't find internet module
In-Reply-To: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
References: <bd8b9f.7b37.12e0ed5ee7d.Coremail.ttkk1024@163.com>
Message-ID: <AANLkTimtGc+=-nrweK46Wb-nmLXaR5j0oHQYNvz0a-d1@mail.gmail.com>

Do you have a file called twisted.py somewhere? What's import twisted;
print twisted.__file__ do?

cheers
lvh



From ste at demaledetti.net  Thu Feb 10 14:22:51 2011
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Thu, 10 Feb 2011 22:22:51 +0100
Subject: [Twisted-Python] OT: Languages (was Re: twisted can't find
	internet module)
Message-ID: <4D54572B.2080903@demaledetti.net>

Yaroslav Fedevych <jaroslaw.fedewicz at gmail.com> wrote:
> Therefore, it's essential that everyone on the list sticks to its ligua franca if at all possible...

yeah! Except that I would call it "Koine" rather than "lingua
franca" but other than that....

http://en.wikipedia.org/wiki/Koine_Greek

;)

ciao
ste

p.s. "...it's all greek to me..."





From glyph at twistedmatrix.com  Thu Feb 10 22:11:41 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 11 Feb 2011 00:11:41 -0500
Subject: [Twisted-Python] twisted site should link to tx site ...
In-Reply-To: <4D54499B.7050509@nasa.gov>
References: <4D54499B.7050509@nasa.gov>
Message-ID: <F9082E0F-8A5D-466E-BC3C-C125D04BA40C@twistedmatrix.com>


On Feb 10, 2011, at 3:24 PM, Stephen Waterbury wrote:

> This url should really be linked either from Twisted's main page
> or at the very least on the "Twisted Community" page:
> 
> https://launchpad.net/tx
> 
> Lots of tx stuff that's not in PyPI, etc ... sheesh!  Also,
> if you do a search on "tx" in the twisted site "search" it says
> "search query too short", and the string "tx" is not found on
> either the main page or the community page at all.
> 
> To be fair, googling on "twisted tx" gets the launchpad site as
> the second hit, but what if someone doesn't know about the "tx"
> thing?

Hey Steve,

The front page is basically unmaintained right now.  It's a problem, as you may have heard some recent discussion on this list about.  I'd be happy to give you edit permission to add this link and other issues with it though, if you're so inclined :).

-glyph


From waterbug at pangalactic.us  Thu Feb 10 22:27:45 2011
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Fri, 11 Feb 2011 00:27:45 -0500
Subject: [Twisted-Python] twisted site should link to tx site ...
In-Reply-To: <F9082E0F-8A5D-466E-BC3C-C125D04BA40C@twistedmatrix.com>
References: <4D54499B.7050509@nasa.gov>
	<F9082E0F-8A5D-466E-BC3C-C125D04BA40C@twistedmatrix.com>
Message-ID: <4D54C8D1.8040404@pangalactic.us>

On 02/11/2011 12:11 AM, Glyph Lefkowitz wrote:
>
> On Feb 10, 2011, at 3:24 PM, Stephen Waterbury wrote:
>
>> This url should really be linked either from Twisted's main page
>> or at the very least on the "Twisted Community" page:
>>
>> https://launchpad.net/tx
>>
>> Lots of tx stuff that's not in PyPI, etc ... sheesh!  Also,
>> if you do a search on "tx" in the twisted site "search" it says
>> "search query too short", and the string "tx" is not found on
>> either the main page or the community page at all.
>>
>> To be fair, googling on "twisted tx" gets the launchpad site as
>> the second hit, but what if someone doesn't know about the "tx"
>> thing?
>
> Hey Steve,
>
> The front page is basically unmaintained right now.  It's a
> problem, as you may have heard some recent discussion on this
> list about.  I'd be happy to give you edit permission to add
> this link and other issues with it though, if you're so
> inclined :).

Hey Glyph,

Ooops.  That was supposed to be me *scolding* you, not
*volunteering*!  ;)  Hmmm ... yes, I have been following the
discussion -- it's great to see some new blood/energy joining in
... unfortunately, I'm slammed at work at the moment, but if I
can come up for air in the near future I'll chime in.  Looking
forward to seeing you guys at PyCon, and your twisted talk!

BTW, I am again (finally) in a position at work to infuse some
of the more righteous python products into our apps, so plan to
work in some twisted packages in the near future ... will write
stories when I have some new ones ...

Cheers,
Steve




From ltaylor.volks at gmail.com  Thu Feb 10 23:30:37 2011
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Thu, 10 Feb 2011 23:30:37 -0700
Subject: [Twisted-Python] twisted site should link to tx site ...
In-Reply-To: <4D54499B.7050509@nasa.gov>
References: <4D54499B.7050509@nasa.gov>
Message-ID: <A69DD887-E216-491B-803C-C40E36AC69CC@gmail.com>

On Feb 10, 2011, at 1:24 PM, Stephen Waterbury wrote:

> This url should really be linked either from Twisted's main page
> or at the very least on the "Twisted Community" page:
>
> https://launchpad.net/tx
>


It is linked from here, with a description:
http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted

And there's this, too: http://twistedmatrix.com/trac/wiki/CommunityCode

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110210/5ae5f74c/attachment.html>

From jrennie at gmail.com  Fri Feb 11 07:27:38 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Fri, 11 Feb 2011 09:27:38 -0500
Subject: [Twisted-Python] sigchld
Message-ID: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>

I'm in the process of porting code from Twisted 8.1 to 10.1 which needed
some custom signal handling code.  Twisted 8.1's approach to signal handling
was (as far as we could tell) too monolithic, so we chose
"installSignalHandlers=False" and wrote our own signal handling code,
installing reactor._handleSigchld so that spawnProcess would work.  Of
course, we have to change this now since #733 was fixed (
http://twistedmatrix.com/trac/ticket/733).

IIUC, (and please correct if I don't) the SIGCHLD handler installation is
performed by twisted.internet.posixbase.PosixReactorBase._handleSignals (the
"if platformType == 'posix':" block).  So, one option would be to run that
code while still using "installSignalHandlers=False".

I'm wondering if there's a better way.  What if I were to let Twisted
install signal handlers, but run my own signal handling code after the
reactor starts (using callLater(0,...)) that installs "super" handlers which
calls the Twisted handler along with any other handlers I want to run.  I'd
use signal.getsignal to get a reference to the Twisted handler(s).  Might
this work?  Or, is there an obvious flaw?  In particular, can I get the
SIGCHLD handler using signal.getsignal, then call it via my "super" handler?
 I don't need to do any special handling of SIGCHLD, so I could just leave
that signal handler alone.

All thoughts appreciated.

Thanks,

Jason

-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110211/9259cc18/attachment.html>

From exarkun at twistedmatrix.com  Fri Feb 11 08:01:10 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 11 Feb 2011 15:01:10 -0000
Subject: [Twisted-Python] sigchld
In-Reply-To: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
Message-ID: <20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>

On 02:27 pm, jrennie at gmail.com wrote:
>I'm in the process of porting code from Twisted 8.1 to 10.1 which 
>needed
>some custom signal handling code.  Twisted 8.1's approach to signal 
>handling
>was (as far as we could tell) too monolithic, so we chose
>"installSignalHandlers=False" and wrote our own signal handling code,
>installing reactor._handleSigchld so that spawnProcess would work.  Of
>course, we have to change this now since #733 was fixed (
>http://twistedmatrix.com/trac/ticket/733).
>
>IIUC, (and please correct if I don't) the SIGCHLD handler installation 
>is
>performed by twisted.internet.posixbase.PosixReactorBase._handleSignals 
>(the
>"if platformType == 'posix':" block).  So, one option would be to run 
>that
>code while still using "installSignalHandlers=False".
>
>I'm wondering if there's a better way.  What if I were to let Twisted
>install signal handlers, but run my own signal handling code after the
>reactor starts (using callLater(0,...)) that installs "super" handlers 
>which
>calls the Twisted handler along with any other handlers I want to run. 
>I'd
>use signal.getsignal to get a reference to the Twisted handler(s). 
>Might
>this work?  Or, is there an obvious flaw?  In particular, can I get the
>SIGCHLD handler using signal.getsignal, then call it via my "super" 
>handler?
>I don't need to do any special handling of SIGCHLD, so I could just 
>leave
>that signal handler alone.

On Python 2.5 and earlier you won't be able to get Twisted's SIGCHLD 
handler using signal.getsignal.

For other signal handlers, signal.getsignal should work fine.

I also think it would be good for the reactor to not do so much with 
signals (aside from SIGCHLD), or provide a better public interface for 
controlling what it does.

What sort of things do your signal handlers do?

Jean-Paul



From waterbug at pangalactic.us  Fri Feb 11 08:04:34 2011
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Fri, 11 Feb 2011 10:04:34 -0500
Subject: [Twisted-Python] twisted site should link to tx site ...
In-Reply-To: <A69DD887-E216-491B-803C-C40E36AC69CC@gmail.com>
References: <4D54499B.7050509@nasa.gov>
	<A69DD887-E216-491B-803C-C40E36AC69CC@gmail.com>
Message-ID: <4D555002.5050202@pangalactic.us>

On 02/11/2011 01:30 AM, Lucas Taylor wrote:
> On Feb 10, 2011, at 1:24 PM, Stephen Waterbury wrote:
>
>> This url should really be linked either from Twisted's main page
>> or at the very least on the "Twisted Community" page:
>>
>> https://launchpad.net/tx
>>
>
> It is linked from here, with a description:
> http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted
>
> And there's this, too: http://twistedmatrix.com/trac/wiki/CommunityCode

Ha, you're just saying that so Glyph won't volunteer you to change
anything!  Slacker!  ;)

Steve




From jrennie at gmail.com  Fri Feb 11 08:59:24 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Fri, 11 Feb 2011 10:59:24 -0500
Subject: [Twisted-Python] sigchld
In-Reply-To: <20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
	<20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
Message-ID: <AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>

On Fri, Feb 11, 2011 at 10:01 AM, <exarkun at twistedmatrix.com> wrote:

> On Python 2.5 and earlier you won't be able to get Twisted's SIGCHLD
> handler using signal.getsignal.
>

We're also moving to python 2.6 (the change is really Debian 5 to Debian 6).
 Should it would work in 2.6?


> What sort of things do your signal handlers do?
>

IIRC, the main thing is to shut down the web server (cherrypy) we're running
in parallel with twisted.  We also have some disk-caching for stateful
signals which needs to ensure the cache file is up-to-date.

Cheers,

Jason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110211/760baf33/attachment-0001.html>

From exarkun at twistedmatrix.com  Fri Feb 11 09:55:45 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 11 Feb 2011 16:55:45 -0000
Subject: [Twisted-Python] sigchld
In-Reply-To: <AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
	<20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
	<AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>
Message-ID: <20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>

On 03:59 pm, jrennie at gmail.com wrote:
>On Fri, Feb 11, 2011 at 10:01 AM, <exarkun at twistedmatrix.com> wrote:
>>On Python 2.5 and earlier you won't be able to get Twisted's SIGCHLD
>>handler using signal.getsignal.
>
>We're also moving to python 2.6 (the change is really Debian 5 to 
>Debian 6).
>Should it would work in 2.6?

I think so.
>
>>What sort of things do your signal handlers do?
>
>IIRC, the main thing is to shut down the web server (cherrypy) we're 
>running
>in parallel with twisted.  We also have some disk-caching for stateful
>signals which needs to ensure the cache file is up-to-date.

For shutdown-type things, reactor.addSystemEventTrigger(phase, 
'shutdown', f) might be better than getting into signal handlers (where 
phase is 'before', 'during', or 'after').

Jean-Paul



From ltaylor.volks at gmail.com  Fri Feb 11 10:10:22 2011
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Fri, 11 Feb 2011 10:10:22 -0700
Subject: [Twisted-Python] twisted site should link to tx site ...
In-Reply-To: <4D555002.5050202@pangalactic.us>
References: <4D54499B.7050509@nasa.gov>
	<A69DD887-E216-491B-803C-C40E36AC69CC@gmail.com>
	<4D555002.5050202@pangalactic.us>
Message-ID: <3A448F57-3EBA-4418-9363-358F64A0939D@gmail.com>


On Feb 11, 2011, at 8:04 AM, Stephen Waterbury wrote:

> On 02/11/2011 01:30 AM, Lucas Taylor wrote:
>> On Feb 10, 2011, at 1:24 PM, Stephen Waterbury wrote:
>>
>>> This url should really be linked either from Twisted's main page
>>> or at the very least on the "Twisted Community" page:
>>>
>>> https://launchpad.net/tx
>>>
>>
>> It is linked from here, with a description:
>> http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted
>>
>> And there's this, too: http://twistedmatrix.com/trac/wiki/CommunityCode
>
> Ha, you're just saying that so Glyph won't volunteer you to change
> anything!  Slacker!  ;)
>
> Steve
>

Threats of bear combat and now, the looming spectre of something  
called a Problem Horse, have made me very careful about what I'll  
commit to.

I just don't want any trouble...





From jrennie at gmail.com  Fri Feb 11 11:48:38 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Fri, 11 Feb 2011 13:48:38 -0500
Subject: [Twisted-Python] sigchld
In-Reply-To: <20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
	<20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
	<AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>
	<20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>
Message-ID: <AANLkTimHTNsASmcoAL92JAXgFFDc0BytYBzw69SZq9u9@mail.gmail.com>

On Fri, Feb 11, 2011 at 11:55 AM, <exarkun at twistedmatrix.com> wrote:

> For shutdown-type things, reactor.addSystemEventTrigger(phase,
> 'shutdown', f) might be better than getting into signal handlers (where
> phase is 'before', 'during', or 'after').


That might be a better way to go.  Thanks for the tip.

Jason

-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110211/ba25d7bd/attachment-0001.html>

From glyph at twistedmatrix.com  Fri Feb 11 11:51:00 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 11 Feb 2011 13:51:00 -0500
Subject: [Twisted-Python] sigchld
In-Reply-To: <20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
	<20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
	<AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>
	<20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>
Message-ID: <7C72A0A0-1914-4283-834D-1FFD92ED9C60@twistedmatrix.com>


On Feb 11, 2011, at 11:55 AM, exarkun at twistedmatrix.com wrote:

> On 03:59 pm, jrennie at gmail.com wrote:
>> On Fri, Feb 11, 2011 at 10:01 AM, <exarkun at twistedmatrix.com> wrote:
>>> On Python 2.5 and earlier you won't be able to get Twisted's SIGCHLD
>>> handler using signal.getsignal.
>> 
>> We're also moving to python 2.6 (the change is really Debian 5 to 
>> Debian 6).
>> Should it would work in 2.6?
> 
> I think so.
>> 
>>> What sort of things do your signal handlers do?
>> 
>> IIRC, the main thing is to shut down the web server (cherrypy) we're 
>> running
>> in parallel with twisted.  We also have some disk-caching for stateful
>> signals which needs to ensure the cache file is up-to-date.
> 
> For shutdown-type things, reactor.addSystemEventTrigger(phase, 
> 'shutdown', f) might be better than getting into signal handlers (where 
> phase is 'before', 'during', or 'after').


There's already a system event trigger already hooked up to the reactor: your main service's stopService call.  If your cherrypy webserver is wrapped up in an IService implementation in the service hierarchy constructed in your twistd plugin or tac file, you can just implement 'stopService' and not do any manual registration with event triggers.  This is really a better way to go in general, as it's easier for other API consumers to deal with such an object than using the global broadcasting mechanism in the reactor.

If you do want to manually add your own system event trigger, in most interesting cases you'll need to use the 'before' phase.  During 'before', Deferreds returned by event triggers are respected (i.e. the reactor keeps running as long as they haven't fired).  If you schedule one for 'during' or 'after', the event trigger really needs to do all of its work and complete it immediately (i.e. before returning).




From exarkun at twistedmatrix.com  Sat Feb 12 22:05:20 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 13 Feb 2011 05:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1297573521.0.478896052@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110213/6e451737/attachment-0001.html>

From glyph at twistedmatrix.com  Sun Feb 13 14:51:34 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 13 Feb 2011 16:51:34 -0500
Subject: [Twisted-Python] are you a bad enough dude to rescue Twisted?
Message-ID: <F3E51D82-66F2-44CD-AEA1-0C0710FF3785@twistedmatrix.com>

In the hopes of motivating some more contributions to Twisted, we've whipped up a little hack to incentivize more people to contribute patches, and especially, to do reviews:

<http://twistedmatrix.com/highscores/>

Scoring begins on the first of each month.  The scoring algorithm isn't completely finalized so you may see your scores shift around a little bit, but this shouldn't affect rankings too much.  At some point, we plan to give out some kind of prizes based on points; but the main motivation is just getting your name to the top of that list.

Good luck everybody!  Now: go take down exarkun!

(Nota bene: since hackers like trying to find weaknesses in systems like this, let me say right up front that the scoreboard isn't particularly resilient to gaming.  It operates on a presumption of good faith; we assume that all contributions are as good as they can be.  If you violate this presumption and waste our time by generating bogus trac traffic, I can guarantee you won't like the results.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110213/e448dbd2/attachment-0001.html>

From stephen at thorne.id.au  Sun Feb 13 20:48:33 2011
From: stephen at thorne.id.au (Stephen Thorne)
Date: Mon, 14 Feb 2011 13:48:33 +1000
Subject: [Twisted-Python] are you a bad enough dude to rescue Twisted?
In-Reply-To: <F3E51D82-66F2-44CD-AEA1-0C0710FF3785@twistedmatrix.com>
References: <F3E51D82-66F2-44CD-AEA1-0C0710FF3785@twistedmatrix.com>
Message-ID: <20110214034833.GA2870@thorne.id.au>

On 2011-02-13, Glyph Lefkowitz wrote:
> In the hopes of motivating some more contributions to Twisted, we've
> whipped up a little hack to incentivize more people to contribute
> patches, and especially, to do reviews:
> 
> <http://twistedmatrix.com/highscores/>

I have a question about this item from the scores:

'15 points for committing a fix from a contributor'

How is this calculated? I created a branch for #4844 but my score didn't
jump, did I do it wrong? Is there a procedure I muffed up (commit
message format)?

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue



From glyph at twistedmatrix.com  Sun Feb 13 21:00:05 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 13 Feb 2011 23:00:05 -0500
Subject: [Twisted-Python] are you a bad enough dude to rescue Twisted?
In-Reply-To: <20110214034833.GA2870@thorne.id.au>
References: <F3E51D82-66F2-44CD-AEA1-0C0710FF3785@twistedmatrix.com>
	<20110214034833.GA2870@thorne.id.au>
Message-ID: <B6070B22-42BB-472E-9B10-5D2ED8404A8A@twistedmatrix.com>


On Feb 13, 2011, at 10:48 PM, Stephen Thorne wrote:

> On 2011-02-13, Glyph Lefkowitz wrote:
>> In the hopes of motivating some more contributions to Twisted, we've
>> whipped up a little hack to incentivize more people to contribute
>> patches, and especially, to do reviews:
>> 
>> <http://twistedmatrix.com/highscores/>
> 
> I have a question about this item from the scores:
> 
> '15 points for committing a fix from a contributor'
> 
> How is this calculated? I created a branch for #4844 but my score didn't
> jump, did I do it wrong? Is there a procedure I muffed up (commit
> message format)?

This is committing a fix, i.e. the commit which closes a ticket with the status 'fixed'.  Applying code to a branch does not have an associated score.  (And yes, it depends on the commit message format, but if you're committing to trunk you're probably paying much closer attention.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110213/68df695c/attachment.html>

From bra at fsn.hu  Tue Feb 15 03:36:28 2011
From: bra at fsn.hu (Attila Nagy)
Date: Tue, 15 Feb 2011 11:36:28 +0100
Subject: [Twisted-Python] What's the purpose of __?
Message-ID: <4D5A572C.90508@fsn.hu>

Hi,

I'm trying to do an LMTP implementation based on smtp.py and came to the 
issue of class private variables with double underscores.
Examples:
http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L746
http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L815
and a lot of occurrences in this file.

This makes me a problem, because I override some functions in a class, 
named LMTP, so these cannot work together.

What's the rationale of using these, instead of static names?

Thanks,




From jrennie at gmail.com  Tue Feb 15 06:58:24 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Tue, 15 Feb 2011 08:58:24 -0500
Subject: [Twisted-Python] sigchld
In-Reply-To: <7C72A0A0-1914-4283-834D-1FFD92ED9C60@twistedmatrix.com>
References: <AANLkTikJ-NpJeQQf7SYwLYerSMkN3K7y1rcX+a-1vpF3@mail.gmail.com>
	<20110211150110.1914.2053350422.divmod.xquotient.47@localhost.localdomain>
	<AANLkTi=QeeDx+XhB9BffzTc0h8RKemUibYRzi+EAbp=J@mail.gmail.com>
	<20110211165545.1914.1846480533.divmod.xquotient.49@localhost.localdomain>
	<7C72A0A0-1914-4283-834D-1FFD92ED9C60@twistedmatrix.com>
Message-ID: <AANLkTi=7QRv8v3QYLQi8ybaP332WwXVtCv-PEr1y1o=Q@mail.gmail.com>

Thanks for all the help.  We're going with addSystemEventTrigger for now,
but we'll keep twistd in mind for future work.

Jason

On Fri, Feb 11, 2011 at 1:51 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Feb 11, 2011, at 11:55 AM, exarkun at twistedmatrix.com wrote:
>
> > On 03:59 pm, jrennie at gmail.com wrote:
> >> On Fri, Feb 11, 2011 at 10:01 AM, <exarkun at twistedmatrix.com> wrote:
> >>> On Python 2.5 and earlier you won't be able to get Twisted's SIGCHLD
> >>> handler using signal.getsignal.
> >>
> >> We're also moving to python 2.6 (the change is really Debian 5 to
> >> Debian 6).
> >> Should it would work in 2.6?
> >
> > I think so.
> >>
> >>> What sort of things do your signal handlers do?
> >>
> >> IIRC, the main thing is to shut down the web server (cherrypy) we're
> >> running
> >> in parallel with twisted.  We also have some disk-caching for stateful
> >> signals which needs to ensure the cache file is up-to-date.
> >
> > For shutdown-type things, reactor.addSystemEventTrigger(phase,
> > 'shutdown', f) might be better than getting into signal handlers (where
> > phase is 'before', 'during', or 'after').
>
>
> There's already a system event trigger already hooked up to the reactor:
> your main service's stopService call.  If your cherrypy webserver is wrapped
> up in an IService implementation in the service hierarchy constructed in
> your twistd plugin or tac file, you can just implement 'stopService' and not
> do any manual registration with event triggers.  This is really a better way
> to go in general, as it's easier for other API consumers to deal with such
> an object than using the global broadcasting mechanism in the reactor.
>
> If you do want to manually add your own system event trigger, in most
> interesting cases you'll need to use the 'before' phase.  During 'before',
> Deferreds returned by event triggers are respected (i.e. the reactor keeps
> running as long as they haven't fired).  If you schedule one for 'during' or
> 'after', the event trigger really needs to do all of its work and complete
> it immediately (i.e. before returning).
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110215/c1ec80d0/attachment-0001.html>

From phil at bubblehouse.org  Tue Feb 15 15:03:21 2011
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 15 Feb 2011 17:03:21 -0500
Subject: [Twisted-Python] What's the purpose of __?
In-Reply-To: <4D5A572C.90508@fsn.hu>
References: <4D5A572C.90508@fsn.hu>
Message-ID: <27550B11-D65B-45C9-9376-85D598A31457@bubblehouse.org>

On Feb 15, 2011, at 5:36 AM, Attila Nagy wrote:
> Hi,
> 
> I'm trying to do an LMTP implementation based on smtp.py and came to the 
> issue of class private variables with double underscores.
> Examples:
> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L746
> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L815
> and a lot of occurrences in this file.
> 
> This makes me a problem, because I override some functions in a class, 
> named LMTP, so these cannot work together.
> 
> What's the rationale of using these, instead of static names?

I've got no idea of the rationale for using double-underscore notation, but why does that prevent you from subclassing it? Just add the class name to it for access:

class A:
    def __init__(self):
        self.__test = 'test'

a = A()

print a._A__test



-phil


From jrennie at gmail.com  Tue Feb 15 15:33:44 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Tue, 15 Feb 2011 17:33:44 -0500
Subject: [Twisted-Python] What's the purpose of __?
In-Reply-To: <4D5A572C.90508@fsn.hu>
References: <4D5A572C.90508@fsn.hu>
Message-ID: <AANLkTimXNPAVK0jnL-xch7bXTCMARxYkwB2nVLmaFcje@mail.gmail.com>

In case you haven't seen it, here's what the python tutorial says about
double-underscore:

http://docs.python.org/tutorial/classes.html#private-variables

Jason

On Tue, Feb 15, 2011 at 5:36 AM, Attila Nagy <bra at fsn.hu> wrote:

> Hi,
>
> I'm trying to do an LMTP implementation based on smtp.py and came to the
> issue of class private variables with double underscores.
> Examples:
> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L746
> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L815
> and a lot of occurrences in this file.
>
> This makes me a problem, because I override some functions in a class,
> named LMTP, so these cannot work together.
>
> What's the rationale of using these, instead of static names?
>
> Thanks,
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110215/a6c90a37/attachment-0001.html>

From superdupont at gmail.com  Wed Feb 16 05:00:36 2011
From: superdupont at gmail.com (Carlos Valiente)
Date: Wed, 16 Feb 2011 12:00:36 +0000
Subject: [Twisted-Python] transport.write(a + b) versus [transport.write(a);
	transport.write(b)]
Message-ID: <AANLkTi=xq3cck6DT_=MOkwQFmtXhHRsAm++OqJBjUMhe@mail.gmail.com>

>From twisted.protocols.basic.IntNStringReceiver.sendString():

 def sendString(self, string):
     self.transport.write(
         struct.pack(self.structFormat, len(string)) + string)

Would it make sense to do something like this instead:

 def sendString(self, string):
     self.transport.write(
         struct.pack(self.structFormat, len(string)))
     self.transport.write(string)

in order to avoid the creation of the extra string object?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110216/a7486028/attachment.html>

From itamar at itamarst.org  Wed Feb 16 06:05:29 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 16 Feb 2011 08:05:29 -0500
Subject: [Twisted-Python] transport.write(a + b) versus
 [transport.write(a); transport.write(b)]
In-Reply-To: <AANLkTi=xq3cck6DT_=MOkwQFmtXhHRsAm++OqJBjUMhe@mail.gmail.com>
References: <AANLkTi=xq3cck6DT_=MOkwQFmtXhHRsAm++OqJBjUMhe@mail.gmail.com>
Message-ID: <1297861529.1687.9.camel@blake>

On Wed, 2011-02-16 at 12:00 +0000, Carlos Valiente wrote:
> From twisted.protocols.basic.IntNStringReceiver.sendString():
> 
>  def sendString(self, string):
>      self.transport.write(
>          struct.pack(self.structFormat, len(string)) + string)
> 
> Would it make sense to do something like this instead:
> 
>  def sendString(self, string):
>      self.transport.write(
>          struct.pack(self.structFormat, len(string)))
>      self.transport.write(string)
> 
> in order to avoid the creation of the extra string object?

Maybe it would be faster, maybe it wouldn't; instead of creating a new
string object, you're doing another function call. There is a
transport.writeSequence() method that takes a list, which can provide a
speed up, but more likely in cases where you have lots of small strings
rather than just two.

Some questions you might want to be asking:

1. Is your application fast enough? If it is, you're done.
2. Where are the performance bottlenecks in your application? This can
be determined with profiling.




From bra at fsn.hu  Wed Feb 16 08:17:51 2011
From: bra at fsn.hu (Attila Nagy)
Date: Wed, 16 Feb 2011 16:17:51 +0100
Subject: [Twisted-Python] What's the purpose of __?
In-Reply-To: <27550B11-D65B-45C9-9376-85D598A31457@bubblehouse.org>
References: <4D5A572C.90508@fsn.hu>
	<27550B11-D65B-45C9-9376-85D598A31457@bubblehouse.org>
Message-ID: <4D5BEA9F.6080309@fsn.hu>

  On 02/15/2011 11:03 PM, Phil Christensen wrote:
> On Feb 15, 2011, at 5:36 AM, Attila Nagy wrote:
>> Hi,
>>
>> I'm trying to do an LMTP implementation based on smtp.py and came to the
>> issue of class private variables with double underscores.
>> Examples:
>> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L746
>> http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L815
>> and a lot of occurrences in this file.
>>
>> This makes me a problem, because I override some functions in a class,
>> named LMTP, so these cannot work together.
>>
>> What's the rationale of using these, instead of static names?
> I've got no idea of the rationale for using double-underscore notation, but why does that prevent you from subclassing it? Just add the class name to it for access:
>
> class A:
>      def __init__(self):
>          self.__test = 'test'
>
> a = A()
>
> print a._A__test
>
>
I can make it work, but I have to hardcode variable names like the above 
and I don't understand why is this needed. It's so ugly.

BTW, this is the situation:

class SMTP:
     def something(self):
         self.__inheader = True

class LMTP(SMTP)	
     def other(self):
         if self.__inheader == True:

and I get other from SMTP, and make some little tweaks. This way, I have to rename all variables in LMTP's functions from __stuff to _SMTP_stuff.





From bra at fsn.hu  Wed Feb 16 08:19:26 2011
From: bra at fsn.hu (Attila Nagy)
Date: Wed, 16 Feb 2011 16:19:26 +0100
Subject: [Twisted-Python] What's the purpose of __?
In-Reply-To: <AANLkTimXNPAVK0jnL-xch7bXTCMARxYkwB2nVLmaFcje@mail.gmail.com>
References: <4D5A572C.90508@fsn.hu>
	<AANLkTimXNPAVK0jnL-xch7bXTCMARxYkwB2nVLmaFcje@mail.gmail.com>
Message-ID: <4D5BEAFE.7020207@fsn.hu>

  Hi,

I know what it does, I just don't get why it was used in smtp.py. But 
you are right, I should have mentioned that in the subject (adding ... 
in smtp.py).

On 02/15/2011 11:33 PM, Jason Rennie wrote:
> In case you haven't seen it, here's what the python tutorial says 
> about double-underscore:
>
> http://docs.python.org/tutorial/classes.html#private-variables
>
> Jason
>
> On Tue, Feb 15, 2011 at 5:36 AM, Attila Nagy <bra at fsn.hu 
> <mailto:bra at fsn.hu>> wrote:
>
>     Hi,
>
>     I'm trying to do an LMTP implementation based on smtp.py and came
>     to the
>     issue of class private variables with double underscores.
>     Examples:
>     http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L746
>     http://twistedmatrix.com/trac/browser/trunk/twisted/mail/smtp.py#L815
>     and a lot of occurrences in this file.
>
>     This makes me a problem, because I override some functions in a class,
>     named LMTP, so these cannot work together.
>
>     What's the rationale of using these, instead of static names?
>
>     Thanks,
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
> -- 
> Jason Rennie
> Research Scientist, ITA Software
> 617-714-2645
> http://www.itasoftware.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110216/dfd00455/attachment.html>

From exarkun at twistedmatrix.com  Wed Feb 16 08:42:18 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 16 Feb 2011 15:42:18 -0000
Subject: [Twisted-Python] What's the purpose of __?
In-Reply-To: <4D5BEAFE.7020207@fsn.hu>
References: <4D5A572C.90508@fsn.hu>
	<AANLkTimXNPAVK0jnL-xch7bXTCMARxYkwB2nVLmaFcje@mail.gmail.com>
	<4D5BEAFE.7020207@fsn.hu>
Message-ID: <20110216154218.1914.1934281789.divmod.xquotient.227@localhost.localdomain>

On 03:19 pm, bra at fsn.hu wrote:
>  Hi,
>
>I know what it does, I just don't get why it was used in smtp.py. But 
>you are right, I should have mentioned that in the subject (adding ... 
>in smtp.py).

The original author's intent is long since lost at this point.  However, 
a safe guess is that these attributes are not intended to be exposed to 
users of the code (such as your LMTP subclass).

If you think there are good reasons for the attributes to be public 
instead, then file a ticket explaining why, attach a patch (don't forget 
unit tests), and add the "review" keyword 
(<http://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs>).

Because Twisted aims for a very high degree of backwards compatibility 
in its public interfaces, some care will need to go into this change. 
The meaning of the attributes will need documentation and unit tests. 
State transitions need to be considered carefully.  Consequences of the 
attributes being changed by user code need to be taken into account.

Perhaps the best place to start is to discuss what functionality becomes 
possible to implement if the "__inbody" protocol state tracking 
attribute becomes public.  When does an application care about this 
protocol-level transition?  When would it ever be legitimate to change 
its value outside of the base protocol implementation?

Jean-Paul



From itamar at itamarst.org  Thu Feb 17 12:37:28 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 17 Feb 2011 14:37:28 -0500
Subject: [Twisted-Python] Looking for intern (and full time developers)
Message-ID: <ae569b0ee96df7eff8f87808799c8a2c.squirrel@webmail.zoteca.com>

Hi everyone,

My group at ITA Software, Availability and Inventory Control, is looking
for an intern. Inventory Control in this context is a core part of an
airline's reservation system, and we are currently hard at work developing
for American Airlines:

http://www.prnewswire.com/news-releases/american-airlines-selects-ita-software-for-next-generation-availability-engine-113456379.html

As part of our efforts, we're looking for an intern (for the summer, but
could also be earlier). Large parts of our system are written in Python
using Twisted, and so Twisted experience would be helpful. The current
plan is to have the intern develop some of our XML processing
infrastructure, but depending on experience or circumstances other
projects may be chosen.

You can apply here:
http://www.itasoftware.com/careers/work-at-ita/showjob.html?uid=745590

We are also hiring for many full time positions, some of which may involve
the use of Twisted, in particular the Operations group infrastructure.
Other positions will have you coding in Common Lisp (learned on the job,
typically), Java, C++ and more:
http://www.itasoftware.com/careers/

ITA Software is located in lovely Cambridge, MA, home to MIT and Harvard.
Google is currently attempting to acquire ITA, pending approval by the
government.

If you apply for a position at ITA, especially the intern position, please
mention my name and email me to let me know.

--Itamar




From Andy.Henshaw at gtri.gatech.edu  Thu Feb 17 14:38:34 2011
From: Andy.Henshaw at gtri.gatech.edu (Andy.Henshaw at gtri.gatech.edu)
Date: Thu, 17 Feb 2011 21:38:34 +0000
Subject: [Twisted-Python] A thread in isolation
Message-ID: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>

I apologize in advance - another question about Twisted and threading.  I just seem to have trouble with this and I'm hoping my example is simple enough that a good explanation will be forthcoming.

I'm trying to start and stop Twisted in its own thread, over and over.  I've seen some notes that say this is a bad idea and that programs that do so should be restructured.  But, it would really work better for this application if I could do it somehow.

My controlling thread just wants to start Twisted, let it do its thing, and then let the thread stop.  Later on, I'd like to do it again.  In the example code below, the thread runs and stops fine in the first iteration.  In the second iteration, it starts, seems to run okay, but it never stops.  Is this an unreasonable request?

from threading import Thread
from twisted.internet import reactor
from twisted.internet import protocol

PORT = 9999

class AgentManager(Thread):
    def run(self):
        print '\nstarting agentmanager', self

        reactor.connectTCP('localhost', PORT, AgentClientFactory())
        reactor.listenTCP(PORT, AgentServerFactory())

        reactor.callLater(5, reactor.stop)
        reactor.run(installSignalHandlers=0)


class Producer(protocol.Protocol):
    def connectionMade(self):
        print 'connection made'
        self.transport.write('Hello')

    def connectionLost(self, reason):
        print 'connection lost'


class Consumer(protocol.Protocol):
    def dataReceived(self, data):
        print data

class AgentServerFactory(protocol.ServerFactory):
    protocol = Producer


class AgentClientFactory(protocol.ClientFactory):
    protocol = Consumer


if __name__ == '__main__':
    for i in range(3):
        mgr = AgentManager()
        mgr.start()
        mgr.join()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110217/8bcd120a/attachment.html>

From p.mayers at imperial.ac.uk  Thu Feb 17 15:11:07 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 17 Feb 2011 22:11:07 +0000
Subject: [Twisted-Python] A thread in isolation
In-Reply-To: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
References: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
Message-ID: <4D5D9CFB.8040303@imperial.ac.uk>

On 02/17/2011 09:38 PM, Andy.Henshaw at gtri.gatech.edu wrote:

> My controlling thread just wants to start Twisted, let it do its thing,
> and then let the thread stop. Later on, I’d like to do it again. In the

That's your problem. The reactor is not, in general, restartable.

You need to start it only once and keep running it I'm afraid.



From exarkun at twistedmatrix.com  Thu Feb 17 15:45:49 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 17 Feb 2011 22:45:49 -0000
Subject: [Twisted-Python] A thread in isolation
In-Reply-To: <4D5D9CFB.8040303@imperial.ac.uk>
References: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
	<4D5D9CFB.8040303@imperial.ac.uk>
Message-ID: <20110217224549.1914.1848060271.divmod.xquotient.229@localhost.localdomain>

On 10:11 pm, p.mayers at imperial.ac.uk wrote:
>On 02/17/2011 09:38 PM, Andy.Henshaw at gtri.gatech.edu wrote:
>>My controlling thread just wants to start Twisted, let it do its 
>>thing,
>>and then let the thread stop. Later on, I 19d like to do it again. In 
>>the
>
>That's your problem. The reactor is not, in general, restartable.
>
>You need to start it only once and keep running it I'm afraid.

Or, feel free to implement restartability and send us a patch! :)

Jean-Paul



From jrennie at gmail.com  Thu Feb 17 15:59:01 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Thu, 17 Feb 2011 17:59:01 -0500
Subject: [Twisted-Python] A thread in isolation
In-Reply-To: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
References: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
Message-ID: <AANLkTiko8xB=k8G-ygjb8v6yiBUZNjcmCDiYnkwkJH6m@mail.gmail.com>

What's the larger problem you're trying to solve?

Jason

On Thu, Feb 17, 2011 at 4:38 PM, <Andy.Henshaw at gtri.gatech.edu> wrote:

> I apologize in advance – another question about Twisted and threading.  I
> just seem to have trouble with this and I’m hoping my example is simple
> enough that a good explanation will be forthcoming.
>
>
>
> I’m trying to start and stop Twisted in its own thread, over and over.
> I’ve seen some notes that say this is a bad idea and that programs that do
> so should be restructured.  But, it would really work better for this
> application if I could do it somehow.
>
>
>
> My controlling thread just wants to start Twisted, let it do its thing, and
> then let the thread stop.  Later on, I’d like to do it again.  In the
> example code below, the thread runs and stops fine in the first iteration.
> In the second iteration, it starts, seems to run okay, but it never stops.
> Is this an unreasonable request?
>
>
>
> from threading import Thread
>
> from twisted.internet import reactor
>
> from twisted.internet import protocol
>
>
>
> PORT = 9999
>
>
>
> class AgentManager(Thread):
>
>     def run(self):
>
>         print '\nstarting agentmanager', self
>
>
>
>         reactor.connectTCP('localhost', PORT, AgentClientFactory())
>
>         reactor.listenTCP(PORT, AgentServerFactory())
>
>
>
>         reactor.callLater(5, reactor.stop)
>
>         reactor.run(installSignalHandlers=0)
>
>
>
>
>
> class Producer(protocol.Protocol):
>
>     def connectionMade(self):
>
>         print 'connection made'
>
>         self.transport.write('Hello')
>
>
>
>     def connectionLost(self, reason):
>
>         print 'connection lost'
>
>
>
>
>
> class Consumer(protocol.Protocol):
>
>     def dataReceived(self, data):
>
>         print data
>
>
>
> class AgentServerFactory(protocol.ServerFactory):
>
>     protocol = Producer
>
>
>
>
>
> class AgentClientFactory(protocol.ClientFactory):
>
>     protocol = Consumer
>
>
>
>
>
> if __name__ == '__main__':
>
>     for i in range(3):
>
>         mgr = AgentManager()
>
>         mgr.start()
>
>         mgr.join()
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110217/9035114a/attachment.html>

From Andy.Henshaw at gtri.gatech.edu  Thu Feb 17 20:48:37 2011
From: Andy.Henshaw at gtri.gatech.edu (Andy.Henshaw at gtri.gatech.edu)
Date: Fri, 18 Feb 2011 03:48:37 +0000
Subject: [Twisted-Python] A thread in isolation
In-Reply-To: <AANLkTiko8xB=k8G-ygjb8v6yiBUZNjcmCDiYnkwkJH6m@mail.gmail.com>
References: <A9B1577E2DCC7545A1018EC14CC4B8BE4C27A34C@apatlisdmbx01>
	<AANLkTiko8xB=k8G-ygjb8v6yiBUZNjcmCDiYnkwkJH6m@mail.gmail.com>
Message-ID: <A9B1577E2DCC7545A1018EC14CC4B8BE4C28286B@apatlisdmbx01>

I have a wxPython app that starts up a network-intensive process.  I played with wxReactor, but found the performance of the separate thread much better.  The GUI has very little interaction with the twisted thread.  Once the network process is done,  I'm done with the services.  At that point, I set up another set of consumers and producers in which all of the service parameters can be changed (host address, port, client/server,  and protocol) and start them running.

Since my approach is not workable, I'll restructure the app to leave the reactor running until the program exits.

From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jason Rennie
Sent: Thursday, February 17, 2011 5:59 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] A thread in isolation

What's the larger problem you're trying to solve?

Jason
On Thu, Feb 17, 2011 at 4:38 PM, <Andy.Henshaw at gtri.gatech.edu<mailto:Andy.Henshaw at gtri.gatech.edu>> wrote:
I apologize in advance - another question about Twisted and threading.  I just seem to have trouble with this and I'm hoping my example is simple enough that a good explanation will be forthcoming.

I'm trying to start and stop Twisted in its own thread, over and over.  I've seen some notes that say this is a bad idea and that programs that do so should be restructured.  But, it would really work better for this application if I could do it somehow.

My controlling thread just wants to start Twisted, let it do its thing, and then let the thread stop.  Later on, I'd like to do it again.  In the example code below, the thread runs and stops fine in the first iteration.  In the second iteration, it starts, seems to run okay, but it never stops.  Is this an unreasonable request?

from threading import Thread
from twisted.internet import reactor
from twisted.internet import protocol

PORT = 9999

class AgentManager(Thread):
    def run(self):
        print '\nstarting agentmanager', self

        reactor.connectTCP('localhost', PORT, AgentClientFactory())
        reactor.listenTCP(PORT, AgentServerFactory())

        reactor.callLater(5, reactor.stop)
        reactor.run(installSignalHandlers=0)


class Producer(protocol.Protocol):
    def connectionMade(self):
        print 'connection made'
        self.transport.write('Hello')

    def connectionLost(self, reason):
        print 'connection lost'


class Consumer(protocol.Protocol):
    def dataReceived(self, data):
        print data

class AgentServerFactory(protocol.ServerFactory):
    protocol = Producer


class AgentClientFactory(protocol.ClientFactory):
    protocol = Consumer


if __name__ == '__main__':
    for i in range(3):
        mgr = AgentManager()
        mgr.start()
        mgr.join()

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com>
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



--
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110218/36485b65/attachment-0001.html>

From mike at mv3d.com  Sat Feb 19 14:39:00 2011
From: mike at mv3d.com (Michael Handverger)
Date: Sat, 19 Feb 2011 16:39:00 -0500 (EST)
Subject: [Twisted-Python] ANN: MV3D 0.50 released!
In-Reply-To: <4570463.17.1298151029833.JavaMail.mike@mdhprod>
Message-ID: <2667824.19.1298151528224.JavaMail.mike@mdhprod>

I’m pleased to announce the v0.50 release of MV3D! With this new release, we are considering MV3D to be beta, which means future releases should not break backwards compatibility with existing data or API calls. The framework gains several major features this release such as a path-finding system for AI controlled characters (NPCs) and support for the Panda3D rendering engine.

Besides new features, an incredible amount of bugs have been fixed. Many of these include performance and tool chain fixes which together make this the most stable release of MV3D to date. To add to the polish, in 0.50, a user manual was added as a reference to new users.

MV3D is an open source virtual world simulation framework written in Python which uses Twisted for networking. It was designed with scalability in mind and aims to be able to distribute a world across as many servers as needed with dynamic load balancing.

For more information on MV3D and this or future releases, please visit the website at http://www.mv3d.com. The full release notes for version 0.5 are available at this url: http://www.mv3d.com/trac/browser/tags/mv3d-0.50/release-notes.txt

Also, feel free to stop by the IRC chat room, #MV3D on irc.freenode.net.

Thanks,
Mike



From exarkun at twistedmatrix.com  Sat Feb 19 22:05:23 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 20 Feb 2011 05:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1298178323.26.1517974983@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110220/6d78d165/attachment-0001.html>

From jason.heeris at gmail.com  Sun Feb 20 23:26:45 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 14:26:45 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
Message-ID: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>

I'm still a little confused about exactly how to deal with errors and
responses using protocols and factories. I think a lot of my
misunderstanding stems from the fact that I'm using serial (and
inter-process) communications, both of which Twisted treats rather
differently from TCP based connections — and all of the documentation
is TCP-centric.

Anyway, say I have a serial device that I send a single-line command
to, and expect a certain format of response. There are about a hundred
possible commands, but they all follow the same pattern, so I have a
CommandProtocol (some details omitted):

    class CommandProtocol(LineOnlyReceiver, TimeoutMixin):

        # For LineOnlyReceiver
        MAX_LENGTH = 20

        def parseReply(self, line):
            if line[0:4] != self.command:
                raise CommandReplyError(self.command, self.line)

            # Parse rest of response
            return reply

        def lineReceived(self, line):
            self.setTimeout(None)
            try:
                reply = self.parseReply(line)
            except:
                # ...?
            else:
                self.factory.commandCompleted(reply)
                # ...maybe?
            finally:
                self.loseConnection()

        def connectionMade(self):
            self.sendLine(self.construct_message())
            self.setTimeout(self.DEFAULT_TIMEOUT)

So I can then write a factory with a buildProtocol method that takes
an object with the command string, sets the appropriate attributes on
the protocol, and returns that for use with the SerialPort transport.

Peticolas' tutorial[1] shows the protocol calling a factory method
when the correct data is received. I understand that part fine. But as
far as I can tell, all the error handling relies on the
ClientFactory's clientConnectionFailed method — and I have no idea
when or how this is triggered. I *am* under the impression that it
won't ever be triggered on a SerialTransport, though, which means it
won't work for me.

[1] https://github.com/jdavisp3/twisted-intro/blob/master/twisted-client-8/get-poetry.py#L64

What should my protocol do if there's an error? I notice that
protocols like LineReceiver and NetstringReceiver just silently ignore
such problems and let whatever handles connection failures sort it
out; but again, this won't work for a serial transport. Even
explicitly calling "loseConnection" won't trigger a subsequent
"connectionLost" call.

So how should I handle reply parsing errors, timeouts,
LineReceiver-internal errors (eg. a too-long line) and whatever else
might happen?

One approach I considered was for my factory to pass my protocol a
deferred. The factory would chain another deferred to this one which
it could return to the caller. The protocol could then callback or
errback *it's* deferred with a result or error. I know how to
implement this, but I see that none of the protocols in Twisted (or
any of the examples, or the tutorials) do anything like this — it's
all just assembly and disassembly of the data and a call to a factory
method. This makes me think that I'm doing it wrong. There's also the
fact that protocol errors will be handled inconsistently: errors in
*my* parsing methods will show up to callers of the factory methods,
but errors in Twisted's parsing will pass silently.

Another thing I could do is to have something like:

    def lineReceived(self, line):
        try:
            reply = self.parseReply(line)
        except:
            self.factory.commandFailed(failure.Failure())
        # ...other stuff from above

But again, this is inconsistent, and I've not seen anything else in
Twisted doing it this way.

So how I do I deal with protocol errors in a connectionless protocol?

Cheers,
Jason



From michaelnt at gmail.com  Sun Feb 20 23:50:40 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Mon, 21 Feb 2011 06:50:40 +0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
Message-ID: <AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>

On 21 February 2011 06:26, Jason Heeris <jason.heeris at gmail.com> wrote:
> So how I do I deal with protocol errors in a connectionless protocol?

This might be better expressed as how do you write a protocol to
handle errors when using an unreliable transport. It down to your
protocol as to how you need to handle errors by for instance sending a
NACK  or re-transmitting a request.


Michael



From jason.heeris at gmail.com  Mon Feb 21 00:00:17 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 15:00:17 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
Message-ID: <AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>

On 21 February 2011 14:50, Michael Thompson <michaelnt at gmail.com> wrote:
> This might be better expressed as how do you write a protocol to
> handle errors when using an unreliable transport. It down to your
> protocol as to how you need to handle errors by for instance sending a
> NACK  or re-transmitting a request.

And what if that fails? Or times out? If this is part of a user driven
app, shouldn't the user be notified of an error at some point? What
I'm asking is: how do I communicate the failure of a protocol back to
the rest of the app?

— Jason



From michaelnt at gmail.com  Mon Feb 21 00:58:01 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Mon, 21 Feb 2011 07:58:01 +0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
	<AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>
Message-ID: <AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>

On 21 February 2011 07:00, Jason Heeris <jason.heeris at gmail.com> wrote:
> On 21 February 2011 14:50, Michael Thompson <michaelnt at gmail.com> wrote:
>> This might be better expressed as how do you write a protocol to
>> handle errors when using an unreliable transport. It down to your
>> protocol as to how you need to handle errors by for instance sending a
>> NACK  or re-transmitting a request.
>
> And what if that fails? Or times out? If this is part of a user driven
> app, shouldn't the user be notified of an error at some point? What
> I'm asking is: how do I communicate the failure of a protocol back to
> the rest of the app?

The app should be waiting on the result of a deferred (which it
expects to fire with the result of the serial comms) so you can simply
errback that deferred.



From p.mayers at imperial.ac.uk  Mon Feb 21 01:59:26 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 21 Feb 2011 08:59:26 +0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
Message-ID: <4D62296E.3000302@imperial.ac.uk>

On 02/21/2011 06:26 AM, Jason Heeris wrote:
>
> So how I do I deal with protocol errors in a connectionless protocol?

I'm a little confused as to why this is a connectionless protocol, if 
it's talking on a serial port? Surely it's a singleton connection, with 
no connect/disconnect events?

I know next to nothing about using Twisted for serial, but why aren't 
you using a single long-lived protocol instance?



From jason.heeris at gmail.com  Mon Feb 21 03:39:39 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 18:39:39 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
	<AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>
	<AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>
Message-ID: <AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>

On 21 February 2011 15:58, Michael Thompson <michaelnt at gmail.com> wrote:
> The app should be waiting on the result of a deferred (which it
> expects to fire with the result of the serial comms) so you can simply
> errback that deferred.

I get that bit, but my question is essentially: what triggers the
errback? If the LineReceiver gets a line that's too long, *how* do I
errback on the deferred? Should the protocol hold the deferred? The
factory? Whatever creates the factory? Does it matter? ("No" would be
a fine answer to the last question, my whole problem is that I don't
really know the "Twisted" way to approach this, or if there even is
one.)

(I would ask: do I even need a factory? But the fact is that I do,
since all of the useful mixins and base classes rely on one being
present.)

— Jason



From jason.heeris at gmail.com  Mon Feb 21 03:59:14 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 18:59:14 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
	<AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>
	<AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>
	<AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>
Message-ID: <AANLkTi=16wrnGmBXotO0kEmwuo_kEDtwBbKGBwSGaeQt@mail.gmail.com>

On 21 February 2011 18:39, Jason Heeris <jason.heeris at gmail.com> wrote:
> (I would ask: do I even need a factory? But the fact is that I do,
> since all of the useful mixins and base classes rely on one being
> present.)

Just realised that actually, I'm using the TimeoutMixin, not the
TimeoutProtocol — no factory is technically required.

So, *ahem*, do I even need a factory?

— Jason



From p.mayers at imperial.ac.uk  Mon Feb 21 04:18:12 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 21 Feb 2011 11:18:12 +0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>	<AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>	<AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>
	<AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>
Message-ID: <4D6249F4.9020207@imperial.ac.uk>

On 21/02/11 10:39, Jason Heeris wrote:
> On 21 February 2011 15:58, Michael Thompson<michaelnt at gmail.com>  wrote:
>> The app should be waiting on the result of a deferred (which it
>> expects to fire with the result of the serial comms) so you can simply
>> errback that deferred.
>
> I get that bit, but my question is essentially: what triggers the
> errback? If the LineReceiver gets a line that's too long, *how* do I
> errback on the deferred? Should the protocol hold the deferred? The
> factory? Whatever creates the factory? Does it matter? ("No" would be
> a fine answer to the last question, my whole problem is that I don't
> really know the "Twisted" way to approach this, or if there even is
> one.)

Normally, all the protocol logic, including sending commands and 
returning responses/errors, lives on the protocol.

For example, if you have a line-based proto it might look like this:

class MyProto(...bases...):

   def connectionMade(self):
     self.queue = []
     self.current = None

   def lineReceived(self, line):
     if self.current is None:
       # eh? we've received a line with no outstanding command
       return
     deferrred = self.current
     self.current = None

     try:
         # do some parsing
         result = parse(line)
     except:
         deferred.errback()
     else:
         deferred.callback(result)

     if self.queue:
         # there's an outstanding command
         deferred, cmd = self.queue.pop(0)
         self.current = deferred
         self.sendLine(cmd)

   def send_cmd(self, cmd)
     deferred = defer.Deferred()
     if self.current is None:
         # no outstanding command, issue this one
         self.current = deferred
         self.sendLine(cmd)
     else:
         # queue it, there's an outstanding command
         self.queue.append((deferred, cmd))
     return deferred


def test():
     d = proto.send_cmd('foo')
     d.addCallback(lambda x: ...)
     d.addErrback(lambda e: ...)


...you can then layer timeout, cancellation and other logic on top of 
this, using various techniques.



From jason.heeris at gmail.com  Mon Feb 21 04:21:22 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 19:21:22 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <4D62296E.3000302@imperial.ac.uk>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
Message-ID: <AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>

On 21 February 2011 16:59, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> I'm a little confused as to why this is a connectionless protocol, if
> it's talking on a serial port? Surely it's a singleton connection, with
> no connect/disconnect events?

There's a connectionMade event when you do SerialPort(protocol, ...).
There's no connectionLost event, even if you do that over and over
again.

> I know next to nothing about using Twisted for serial, but why aren't
> you using a single long-lived protocol instance?

Should I? I don't know. My problem is, as a newbie, I *just don't
know* what the usual way to approach a problem like this is. Or if
there is one.

So, please help me think this through... let's say I have this
long-lasting protocol. It needs to keep a DeferredLock, so it doesn't
try to send one message before it's received the reply for another —
right? It should have a method for sending a command that returns a
Deferred, that will eventually fire with the response (parsed and
converted as necessary, that bit's easy). The bit I have trouble with
is that the *origin* of the Deferred callback or errback is the
"lineReceived" method — somehow this method needs to know which
Deferred to callback with the response. But how?

Here's a sketch:

    class CommandProtocol(LineReceiver, TimeoutMixin):

        def __init__(self):
            self.lock = DeferredLock()

        def _runCommand(self, command):
            message = self.constructMessage(command)
            self.sendLine(message)

        def runCommand(self, command):
            d = self.lock.run(self._runCommand, command)
            d.addCallback(command.parseResponse)
            return d

Where does the bit go that fires the Deferred? Should I set it in
_runCommand somehow? I just can't seem to picture it.

Thanks,
Jason

PS. Twisted has great documentation for its individual components, but
as soon as you get into anything that doesn't centre around
"reactor.connectTCP", it seems like you're in the dark. All of the
examples and tutorials seem to have near-trivial, completely
synchronous protocols, requiring no back-and-forth or error handling.
Ultimately I'd like to take all of this advice, have an epiphany,
finish my project, bundle my new-found wisdom up into a neat little
package of things I think would make serial comms a happier experience
for all, and publish it somewhere. And maybe write about how to use
Twisted for non-internetty things. But I do need to actually
accomplish something first.



From jason.heeris at gmail.com  Mon Feb 21 04:26:28 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 19:26:28 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <4D6249F4.9020207@imperial.ac.uk>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<AANLkTineeK6oFXAnjqWUfP+sjHxt+FKYnHfuYJM4aHO=@mail.gmail.com>
	<AANLkTimVRjiAgETsmar_5rH+fgZ2oMQKEB2D3P7gTf_H@mail.gmail.com>
	<AANLkTi=yGWY46xU6gFSNrEx_twBAVrpf04bGAGYxnFJ+@mail.gmail.com>
	<AANLkTi=p6ZfkMhLvH7TrL7+4uFjdV38B9SMKw4kW93-x@mail.gmail.com>
	<4D6249F4.9020207@imperial.ac.uk>
Message-ID: <AANLkTi=gaX0VPNzECK3BFk+VZT0ZFcGEQeicntgp9_Q9@mail.gmail.com>

On 21 February 2011 19:18, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> For example, if you have a line-based proto it might look like this:

Aha, I think you might just have answered my question before I asked
it. Which seems appropriate somehow.

I think the DeferredQueue does some of this for me, so I'll look into it.

Cheers,
Jason



From exarkun at twistedmatrix.com  Mon Feb 21 06:30:10 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 21 Feb 2011 13:30:10 -0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
Message-ID: <20110221133010.1914.253284685.divmod.xquotient.265@localhost.localdomain>

On 11:21 am, jason.heeris at gmail.com wrote:
>On 21 February 2011 16:59, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>>I'm a little confused as to why this is a connectionless protocol, if
>>it's talking on a serial port? Surely it's a singleton connection, 
>>with
>>no connect/disconnect events?
>
>There's a connectionMade event when you do SerialPort(protocol, ...).
>There's no connectionLost event, even if you do that over and over
>again.

Not intentionally:

  http://twistedmatrix.com/trac/ticket/3690

Jean-Paul



From jason.heeris at gmail.com  Mon Feb 21 07:06:18 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Mon, 21 Feb 2011 22:06:18 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <20110221133010.1914.253284685.divmod.xquotient.265@localhost.localdomain>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
	<20110221133010.1914.253284685.divmod.xquotient.265@localhost.localdomain>
Message-ID: <AANLkTikdu4t20ibrvFuJ35kAZ8gCe5tuty98hBCuYOQh@mail.gmail.com>

On 21 February 2011 21:30,  <exarkun at twistedmatrix.com> wrote:
> Not intentionally:
>
>  http://twistedmatrix.com/trac/ticket/3690

Interesting...

As an aside, the problem of serial port availability for unit tests is
something I've encountered before too. I solved it by using "socat" to
create virtual serial ports with known names (paths on *nix, COM
numbers on Windows), and ran my tests using that. In fact, the test
for the patch in #3690 only requires that the port exists, not that it
does anything, which is even easier than actually requiring the port
to do anything.

I don't know if that's viable for a Twisted test though, since it's an
external binary. Maybe the functionality could be replicated in pure
Python, but that'd be a lot of work.

— Jason



From jrennie at gmail.com  Mon Feb 21 07:45:43 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Mon, 21 Feb 2011 09:45:43 -0500
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
Message-ID: <AANLkTin-VH=MvFsmLywqHqYdqhqcSQrAj8W9OO_OgmOO@mail.gmail.com>

(...catching up on this thread...)

On Mon, Feb 21, 2011 at 6:21 AM, Jason Heeris <jason.heeris at gmail.com>wrote:

> There's a connectionMade event when you do SerialPort(protocol, ...).
> There's no connectionLost event, even if you do that over and over
> again.
>

As Jean-Paul noted, that's a genuine bug with Twisted.  However, since
Twisted is pure python, you can likely override the SerialPort class and
make user-land changes to fix the issue.  Maybe you'd even be able to help
review or fix the bug? :)  See the following link for guidelines:

http://twistedmatrix.com/trac/wiki/TwistedDevelopment

Should I? I don't know. My problem is, as a newbie, I *just don't
> know* what the usual way to approach a problem like this is. Or if
> there is one.
>

IIUC, SerialPort doesn't work with the twisted factory infrastructure.
 Factories are used to persist data across different connections.  With
SerialPort, there's just one connection.  Any data you want to store (e.g. a
Deferred) should go in your protocol.

So, please help me think this through... let's say I have this
> long-lasting protocol. It needs to keep a DeferredLock, so it doesn't
> try to send one message before it's received the reply for another —
> right? It should have a method for sending a command that returns a
> Deferred, that will eventually fire with the response (parsed and
> converted as necessary, that bit's easy). The bit I have trouble with
> is that the *origin* of the Deferred callback or errback is the
> "lineReceived" method — somehow this method needs to know which
> Deferred to callback with the response. But how?
>

Sounds like you just need a queue of pending commands and a state object for
the currently executing command.  When runCommand() is called, add the
command to the pending queue.  If no command is running, pop the first
command in the queue and send it.  When you get a response, the state object
tells you what Deferred to fire.  Again, if there's a pending command, send
it.  Sketch:

def _runNext(self):
    if len(self.queue) > 0 and self.state == 'IDLE':
        self.state = 'PROCESSING'
        self.currentCmd, self.currentDeferred = self.queue.pop()
        self.sendLine(self.constructMessage(self.currentCmd))
def runCommand(self, command, callback):
    ret = Deferred()
    self.queue.append((command, ret))
    self._runNext(self)
    return ret
def lineReceived(self, line):
    self.state = 'IDLE'
    try:
        result = self.parseResponse(self.currentCmd, line)
        self.currentDeferred.callback(result)
    except Exception, err:
        self.currentDeferred.errback(err)
    self._runNext(self)


> PS. Twisted has great documentation for its individual components, but
> as soon as you get into anything that doesn't centre around
> "reactor.connectTCP", it seems like you're in the dark. All of the
> examples and tutorials seem to have near-trivial, completely
> synchronous protocols, requiring no back-and-forth or error handling.
> Ultimately I'd like to take all of this advice, have an epiphany,
> finish my project, bundle my new-found wisdom up into a neat little
> package of things I think would make serial comms a happier experience
> for all, and publish it somewhere. And maybe write about how to use
> Twisted for non-internetty things. But I do need to actually
> accomplish something first.


In case you haven't yet, see:

 http://twistedmatrix.com/pipermail/twisted-python/2011-January/023362.html

and follow-up threads.

Cheers,

Jason

-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110221/65e00e8c/attachment-0001.html>

From michaelnt at gmail.com  Mon Feb 21 11:16:24 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Mon, 21 Feb 2011 18:16:24 +0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTikdu4t20ibrvFuJ35kAZ8gCe5tuty98hBCuYOQh@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
	<20110221133010.1914.253284685.divmod.xquotient.265@localhost.localdomain>
	<AANLkTikdu4t20ibrvFuJ35kAZ8gCe5tuty98hBCuYOQh@mail.gmail.com>
Message-ID: <AANLkTimNWaQ8aY-K7z33kU7Evko6KHj6O7f-o8ujm+S6@mail.gmail.com>

On 21 February 2011 14:06, Jason Heeris <jason.heeris at gmail.com> wrote:
> On 21 February 2011 21:30,  <exarkun at twistedmatrix.com> wrote:
>> Not intentionally:
>>
>>  http://twistedmatrix.com/trac/ticket/3690
>
> Interesting...
>
> As an aside, the problem of serial port availability for unit tests is
> something I've encountered before too. I solved it by using "socat" to
> create virtual serial ports with known names (paths on *nix, COM
> numbers on Windows), and ran my tests using that. In fact, the test
> for the patch in #3690 only requires that the port exists, not that it
> does anything, which is even easier than actually requiring the port
> to do anything.

I'm in the process of writing a mock that will allow the serial port
testing to work without a physical port as I think this is the best
solution for the Twisted build farm. I have the posix part done and a
plan for the windows version, using named pipes.



From exarkun at twistedmatrix.com  Mon Feb 21 11:36:31 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 21 Feb 2011 18:36:31 -0000
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTimNWaQ8aY-K7z33kU7Evko6KHj6O7f-o8ujm+S6@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
	<20110221133010.1914.253284685.divmod.xquotient.265@localhost.localdomain>
	<AANLkTikdu4t20ibrvFuJ35kAZ8gCe5tuty98hBCuYOQh@mail.gmail.com>
	<AANLkTimNWaQ8aY-K7z33kU7Evko6KHj6O7f-o8ujm+S6@mail.gmail.com>
Message-ID: <20110221183631.1914.1425837474.divmod.xquotient.268@localhost.localdomain>

On 06:16 pm, michaelnt at gmail.com wrote:
>On 21 February 2011 14:06, Jason Heeris <jason.heeris at gmail.com> wrote:
>>On 21 February 2011 21:30, �<exarkun at twistedmatrix.com> wrote:
>>>Not intentionally:
>>>
>>>�http://twistedmatrix.com/trac/ticket/3690
>>
>>Interesting...
>>
>>As an aside, the problem of serial port availability for unit tests is
>>something I've encountered before too. I solved it by using "socat" to
>>create virtual serial ports with known names (paths on *nix, COM
>>numbers on Windows), and ran my tests using that. In fact, the test
>>for the patch in #3690 only requires that the port exists, not that it
>>does anything, which is even easier than actually requiring the port
>>to do anything.
>
>I'm in the process of writing a mock that will allow the serial port
>testing to work without a physical port as I think this is the best
>solution for the Twisted build farm. I have the posix part done and a
>plan for the windows version, using named pipes.

Awesome!

Jean-Paul



From jason.heeris at gmail.com  Mon Feb 21 19:23:13 2011
From: jason.heeris at gmail.com (Jason Heeris)
Date: Tue, 22 Feb 2011 10:23:13 +0800
Subject: [Twisted-Python] Error (and response) handling in protocols
In-Reply-To: <AANLkTin-VH=MvFsmLywqHqYdqhqcSQrAj8W9OO_OgmOO@mail.gmail.com>
References: <AANLkTim6fdrx87zPwUO0ou__vGqXErbZzG1hR1F-r5Qy@mail.gmail.com>
	<4D62296E.3000302@imperial.ac.uk>
	<AANLkTincjBuM0EkOJ-3UMZhmaOWcraTqVQfph7no4RFe@mail.gmail.com>
	<AANLkTin-VH=MvFsmLywqHqYdqhqcSQrAj8W9OO_OgmOO@mail.gmail.com>
Message-ID: <AANLkTinCTZtxJ-j7k9PuGw+g0qcsYxdCvv4L0NUN6XD1@mail.gmail.com>

On 21 February 2011 22:45, Jason Rennie <jrennie at gmail.com> wrote:
> Sounds like you just need a queue of pending commands and a state object for
> the currently executing command.

Just for the sake of completeness, this is what I've ended up with. No
explicit queues, and the state is kept with a lock:

--------
class CommandProtocol(LineOnlyReceiver, TimeoutMixin):

    def __init__(self):
        self.lock = defer.DeferredLock()
        self.deferred = None

    def runCommand(self, command, payload=None):
        result = self.lock.run(self.sendCommand, command, payload)
        return result

    def sendCommand(self, command, payload=None):
        assert self.deferred is None, "Already waiting for reply!"

        # The parser uses these
        self.command = command
        self.sent = msg

        self.deferred = defer.Deferred()
        self.deferred.addCallback(self.parseReply)
        self.deferred.addBoth(self.cleanup)
        self.setTimeout(self.DEFAULT_TIMEOUT)
        self.sendLine(msg)
        return self.deferred

    def cleanup(self, res):
        self.deferred = None
        del self.command
        del self.sent
        return res

    def lineReceived(self, line):
        if self.deferred:
            self.setTimeout(None)
            self.deferred.callback(line)
        # If not, we've timed out or this is a spurious line

    def timeoutConnection(self):
        self.deferred.errback(
            Timeout("The device took too long to respond"))

    def parseReply(self, line):
        # Do parsing, raise synchronous errors if bad
        return reply
--------

Technically, things like self.command, self.sent, self.deferred etc.
could be closed over by nested functions, which could be set as the
callbacks, but that's just down to where and how you prefer to store
state. Besides, we all know that flat > nested ;)

Thanks for everyone's help!

— Jason



From jeanpierreda at gmail.com  Tue Feb 22 08:46:55 2011
From: jeanpierreda at gmail.com (Devin Jeanpierre)
Date: Tue, 22 Feb 2011 10:46:55 -0500
Subject: [Twisted-Python] Twisted Cred using network connections to check
	credentials
Message-ID: <AANLkTimGGUy7tdcWTk0f8i8QS-Yc6hH2zV6JEaKrmMM4@mail.gmail.com>

Hello,

I want to authenticate a user in twisted.cred by attempting to log him in to
an online service. If the authentication step of the connection fails, the
user gets no avatar, and if it succeeds, the user gets an avatar, and that
avatar either is or has a reference to that connection.

How would I do this? I can think of two ugly ways: I can use a global
dictionary mapping avatarIds to protocol instances, and do a lookup on that
dict in the Realm to create the avatar. Otherwise, I can instantiate the
connection as part of the credentials, and keep the reference to it around
when I get the avatar. I'm going ahead with the former, but it's scary.

Another possibility is that perhaps the credentials checker and the realm
could be the same object, and then I could move the global dict into an
attribute. Would that be a better approach?

The background for this is that I have an implementation of the chat part of
the Direct Connect (DC) protocol, and want to write an IRC<->DC bridge. I
chose twisted.words.services on the recommendation of someone, which uses
Cred for auth. DC has authentication as a given nick as part of the
"handshake" during the start of the connection attempt.

Devin Jeanpierre
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110222/0cdb1edc/attachment-0001.html>

From exarkun at twistedmatrix.com  Tue Feb 22 09:02:20 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 22 Feb 2011 16:02:20 -0000
Subject: [Twisted-Python] Twisted Cred using network connections to
	check	credentials
In-Reply-To: <AANLkTimGGUy7tdcWTk0f8i8QS-Yc6hH2zV6JEaKrmMM4@mail.gmail.com>
References: <AANLkTimGGUy7tdcWTk0f8i8QS-Yc6hH2zV6JEaKrmMM4@mail.gmail.com>
Message-ID: <20110222160220.1914.1839448269.divmod.xquotient.273@localhost.localdomain>

On 03:46 pm, jeanpierreda at gmail.com wrote:
>Hello,
>
>I want to authenticate a user in twisted.cred by attempting to log him 
>in to
>an online service. If the authentication step of the connection fails, 
>the
>user gets no avatar, and if it succeeds, the user gets an avatar, and 
>that
>avatar either is or has a reference to that connection.
>
>How would I do this? I can think of two ugly ways: I can use a global
>dictionary mapping avatarIds to protocol instances, and do a lookup on 
>that
>dict in the Realm to create the avatar. Otherwise, I can instantiate 
>the
>connection as part of the credentials, and keep the reference to it 
>around
>when I get the avatar. I'm going ahead with the former, but it's scary.
>
>Another possibility is that perhaps the credentials checker and the 
>realm
>could be the same object, and then I could move the global dict into an
>attribute. Would that be a better approach?

You can do this, but you don't have to.  You can also pass the dict to 
both the checker initializer and the realm initializer.  Now they both 
have a reference to it, but it's not global, and they're still separate 
objects.

Jean-Paul
>The background for this is that I have an implementation of the chat 
>part of
>the Direct Connect (DC) protocol, and want to write an IRC<->DC bridge. 
>I
>chose twisted.words.services on the recommendation of someone, which 
>uses
>Cred for auth. DC has authentication as a given nick as part of the
>"handshake" during the start of the connection attempt.
>
>Devin Jeanpierre



From jeanpierreda at gmail.com  Tue Feb 22 09:28:39 2011
From: jeanpierreda at gmail.com (Devin Jeanpierre)
Date: Tue, 22 Feb 2011 11:28:39 -0500
Subject: [Twisted-Python] Twisted Cred using network connections to
	check credentials
In-Reply-To: <20110222160220.1914.1839448269.divmod.xquotient.273@localhost.localdomain>
References: <AANLkTimGGUy7tdcWTk0f8i8QS-Yc6hH2zV6JEaKrmMM4@mail.gmail.com>
	<20110222160220.1914.1839448269.divmod.xquotient.273@localhost.localdomain>
Message-ID: <AANLkTikcBO5C-MyAWUryGdYPGbdGwOykpdLJfnarjWpZ@mail.gmail.com>

Thank you very much!

Devin Jeanpierre

On Tue, Feb 22, 2011 at 11:02 AM, <exarkun at twistedmatrix.com> wrote:

> On 03:46 pm, jeanpierreda at gmail.com wrote:
> >Hello,
> >
> >I want to authenticate a user in twisted.cred by attempting to log him
> >in to
> >an online service. If the authentication step of the connection fails,
> >the
> >user gets no avatar, and if it succeeds, the user gets an avatar, and
> >that
> >avatar either is or has a reference to that connection.
> >
> >How would I do this? I can think of two ugly ways: I can use a global
> >dictionary mapping avatarIds to protocol instances, and do a lookup on
> >that
> >dict in the Realm to create the avatar. Otherwise, I can instantiate
> >the
> >connection as part of the credentials, and keep the reference to it
> >around
> >when I get the avatar. I'm going ahead with the former, but it's scary.
> >
> >Another possibility is that perhaps the credentials checker and the
> >realm
> >could be the same object, and then I could move the global dict into an
> >attribute. Would that be a better approach?
>
> You can do this, but you don't have to.  You can also pass the dict to
> both the checker initializer and the realm initializer.  Now they both
> have a reference to it, but it's not global, and they're still separate
> objects.
>
> Jean-Paul
> >The background for this is that I have an implementation of the chat
> >part of
> >the Direct Connect (DC) protocol, and want to write an IRC<->DC bridge.
> >I
> >chose twisted.words.services on the recommendation of someone, which
> >uses
> >Cred for auth. DC has authentication as a given nick as part of the
> >"handshake" during the start of the connection attempt.
> >
> >Devin Jeanpierre
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110222/6a91b3fc/attachment.html>

From emcconne at gmail.com  Wed Feb 23 11:22:54 2011
From: emcconne at gmail.com (Brent McConnell)
Date: Wed, 23 Feb 2011 13:22:54 -0500
Subject: [Twisted-Python] LDAP recommendation
Message-ID: <2ADC8EE7-D74C-4EF3-9A70-75BF914EA85B@gmail.com>

I'm working on a web application that uses Cyclone (Twisted port or Tornado) and wanted to know if anyone had any recommendations for integration with LDAP.  I need to do basic authentication as well as add and modify users and groups (occasionally) from the app.  I've looked around but haven't seen that much documentation on any LDAP client libraries that are "Twisted".  Ldapter is really all I've found and it looks unmaintained.  Any help would be appreciated.

Brent McConnell


From anton at iki.fi  Wed Feb 23 12:42:17 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 23 Feb 2011 21:42:17 +0200
Subject: [Twisted-Python] LDAP recommendation
In-Reply-To: <2ADC8EE7-D74C-4EF3-9A70-75BF914EA85B@gmail.com>
References: <2ADC8EE7-D74C-4EF3-9A70-75BF914EA85B@gmail.com>
Message-ID: <AANLkTi=K-rmW22GzvezV4_uJgU+semg1vM2yyeqyzbtZ@mail.gmail.com>

On Wed, Feb 23, 2011 at 8:22 PM, Brent McConnell <emcconne at gmail.com> wrote:
> I'm working on a web application that uses Cyclone (Twisted port or Tornado) and wanted
> to know if anyone had any recommendations for integration with LDAP.  I need to do basic
> authentication as well as add and modify users and groups (occasionally) from the app.
> I've looked around but haven't seen that much documentation on any LDAP client libraries
> that are "Twisted".  Ldapter is really all I've found and it looks unmaintained.  Any help would
> be appreciated.

I did a similar search a while ago and settled on using Ldaptor. The
basic LDAP client functionality
in Ldaptor seems rock solid. I believe the original, sole author has
not been active in a while, but the
code looks very well written and as long as it works that's good enough for me.

I have needed to make a few changes to Ldaptor to make it work for my
application. These
changes are currently published at http://github.com/antong/ldaptor.

Good luck and do post your results!
Anton



From tonthon21 at gmail.com  Wed Feb 23 13:17:17 2011
From: tonthon21 at gmail.com (tonthon21 thon)
Date: Wed, 23 Feb 2011 21:17:17 +0100
Subject: [Twisted-Python] LDAP recommendation
In-Reply-To: <2ADC8EE7-D74C-4EF3-9A70-75BF914EA85B@gmail.com>
References: <2ADC8EE7-D74C-4EF3-9A70-75BF914EA85B@gmail.com>
Message-ID: <AANLkTin1QcPzw2ow7k_wKPmRz0rfN87RZR=33M6u6fyW@mail.gmail.com>

I use Ldaptor for authentication and data retrieving mechanism and I didn't
encounter any troubleshooting using it.

2011/2/23 Brent McConnell <emcconne at gmail.com>

> I'm working on a web application that uses Cyclone (Twisted port or
> Tornado) and wanted to know if anyone had any recommendations for
> integration with LDAP.  I need to do basic authentication as well as add and
> modify users and groups (occasionally) from the app.  I've looked around but
> haven't seen that much documentation on any LDAP client libraries that are
> "Twisted".  Ldapter is really all I've found and it looks unmaintained.  Any
> help would be appreciated.
>
> Brent McConnell
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110223/9264b04d/attachment-0002.html>

From celord at gmail.com  Thu Feb 24 09:51:03 2011
From: celord at gmail.com (=?ISO-8859-1?B?Q+lzYXIgR2FyY+1h?=)
Date: Thu, 24 Feb 2011 10:51:03 -0600
Subject: [Twisted-Python] Imap client problem, help fro troubleshoot
Message-ID: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>

Hello All, I have this[1] IMAP4 client in twisted, but I'am getting
this error too much, how can I troubleshoot it or how can I restart
the main loop after this failure?

         Traceback (most recent call last):
        Failure: twisted.internet.error.ConnectionDone: Connection was
closed cleanly.

2011-02-24 10:31:34-0600 [IMAP4Client,client] Disconnected at: Thu Feb
24 10:31:34 2011
2011-02-24 10:31:34-0600 [IMAP4Client,client] Connection Lost: Reason:
 [Failure instance: Traceback (failure with no frames): <class
'twisted.internet.error.ConnectionDone'>: Connection was closed
cleanly.
2011-02-24 10:31:34-0600 [IMAP4Client,client] ]
2011-02-24 10:31:34-0600 [IMAP4Client,client]
<twisted.internet.tcp.Connector instance at 0x5f8a30> will retry in 7
seconds
2011-02-24 10:31:34-0600 [IMAP4Client,client] Stopping factory
<__builtin__.IMAP4ClientFactory instance at 0xbd4468>
2011-02-24 10:31:34-0600 [-] Main loop terminated.
2011-02-24 10:31:34-0600 [-] Server Shut Down.


[1] http://pastebin.com/GrqG3MyD

-- 
http://celord.blogspot.com/



From jml at mumak.net  Fri Feb 25 03:57:31 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Feb 2011 10:57:31 +0000
Subject: [Twisted-Python] Next release?
Message-ID: <AANLkTim7PZbMoeZbeWqboDTre2PMfkN5zjUciT0w+QfE@mail.gmail.com>

Hello everyone,

I'd like for there to be a release of Twisted in March 2011, and I am
happy to do it. If someone else has already volunteered, or would like
to do it instead of me, they are welcome to be my guest, as long as
they follow & update the Release Process
<http://twistedmatrix.com/trac/wiki/ReleaseProcess>.

Perhaps it would be best to cut a release candidate before PyCon starts?

cheers,
jml



From exarkun at twistedmatrix.com  Fri Feb 25 06:15:34 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 25 Feb 2011 13:15:34 -0000
Subject: [Twisted-Python] Next release?
In-Reply-To: <AANLkTim7PZbMoeZbeWqboDTre2PMfkN5zjUciT0w+QfE@mail.gmail.com>
References: <AANLkTim7PZbMoeZbeWqboDTre2PMfkN5zjUciT0w+QfE@mail.gmail.com>
Message-ID: <20110225131534.2231.1877950703.divmod.xquotient.35@localhost.localdomain>

On 10:57 am, jml at mumak.net wrote:
>Hello everyone,
>
>I'd like for there to be a release of Twisted in March 2011, and I am
>happy to do it. If someone else has already volunteered, or would like
>to do it instead of me, they are welcome to be my guest, as long as
>they follow & update the Release Process
><http://twistedmatrix.com/trac/wiki/ReleaseProcess>.

I created an 11.0 milestone a few days ago. 
<http://twistedmatrix.com/trac/milestone/Twisted-11.0>.  It almost gets 
a release out in March.
>Perhaps it would be best to cut a release candidate before PyCon 
>starts?

I don't have a problem with the schedule moving up.  To be explicit, 
though, that means that tickets resolved at the PyCon sprint will not be 
in 11.0.

Jean-Paul



From exarkun at twistedmatrix.com  Fri Feb 25 06:20:16 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 25 Feb 2011 13:20:16 -0000
Subject: [Twisted-Python] Imap client problem, help fro troubleshoot
In-Reply-To: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>
References: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>
Message-ID: <20110225132016.2231.480486396.divmod.xquotient.45@localhost.localdomain>

On 24 Feb, 04:51 pm, celord at gmail.com wrote:
>Hello All, I have this[1] IMAP4 client in twisted, but I'am getting
>this error too much, how can I troubleshoot it or how can I restart
>the main loop after this failure?
>
>         Traceback (most recent call last):
>        Failure: twisted.internet.error.ConnectionDone: Connection was
>closed cleanly.

Your code already appears to be based on ReconnectingClientFactory, so 
your client should reconnect after it loses its connection.  The main 
thing that would prevent this is if you stop the reactor, which you also 
appear to be doing.  If you want the reconnection attempt to succeed, 
then try not stopping the reactor.

Jean-Paul
>2011-02-24 10:31:34-0600 [IMAP4Client,client] Disconnected at: Thu Feb
>24 10:31:34 2011
>2011-02-24 10:31:34-0600 [IMAP4Client,client] Connection Lost: Reason:
>[Failure instance: Traceback (failure with no frames): <class
>'twisted.internet.error.ConnectionDone'>: Connection was closed
>cleanly.
>2011-02-24 10:31:34-0600 [IMAP4Client,client] ]
>2011-02-24 10:31:34-0600 [IMAP4Client,client]
><twisted.internet.tcp.Connector instance at 0x5f8a30> will retry in 7
>seconds
>2011-02-24 10:31:34-0600 [IMAP4Client,client] Stopping factory
><__builtin__.IMAP4ClientFactory instance at 0xbd4468>
>2011-02-24 10:31:34-0600 [-] Main loop terminated.
>2011-02-24 10:31:34-0600 [-] Server Shut Down.
>
>
>[1] http://pastebin.com/GrqG3MyD
>
>--
>http://celord.blogspot.com/
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From jml at mumak.net  Fri Feb 25 07:30:14 2011
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 25 Feb 2011 14:30:14 +0000
Subject: [Twisted-Python] Next release?
In-Reply-To: <20110225131534.2231.1877950703.divmod.xquotient.35@localhost.localdomain>
References: <AANLkTim7PZbMoeZbeWqboDTre2PMfkN5zjUciT0w+QfE@mail.gmail.com>
	<20110225131534.2231.1877950703.divmod.xquotient.35@localhost.localdomain>
Message-ID: <AANLkTik=X3Dx0WbyMLm2x7Mk7WLGpZAJipvAQ1Td13rt@mail.gmail.com>

On Fri, Feb 25, 2011 at 1:15 PM,  <exarkun at twistedmatrix.com> wrote:
> On 10:57 am, jml at mumak.net wrote:
>>Hello everyone,
>>
>>I'd like for there to be a release of Twisted in March 2011, and I am
>>happy to do it. If someone else has already volunteered, or would like
>>to do it instead of me, they are welcome to be my guest, as long as
>>they follow & update the Release Process
>><http://twistedmatrix.com/trac/wiki/ReleaseProcess>.
>
> I created an 11.0 milestone a few days ago.
> <http://twistedmatrix.com/trac/milestone/Twisted-11.0>.  It almost gets
> a release out in March.

Thanks.

>>Perhaps it would be best to cut a release candidate before PyCon
>>starts?
>
> I don't have a problem with the schedule moving up.  To be explicit,
> though, that means that tickets resolved at the PyCon sprint will not be
> in 11.0.
>

Cool. I think this is OK, since it gives the code forged during the
heat of the sprint time to cool before being released.

Oops, metaphor. What I mean is, a lot of code gets written at sprints,
and because it's code it has bugs, and bugs take time to find.

And anyway, doing a release these days isn't *that* onerous.

jml



From facundobatista at gmail.com  Fri Feb 25 07:36:34 2011
From: facundobatista at gmail.com (Facundo Batista)
Date: Fri, 25 Feb 2011 11:36:34 -0300
Subject: [Twisted-Python] Twisted for Python 3
Message-ID: <AANLkTikf3fV=D_TJc6x2b54SmT0HxDw9dUQaO0zQ8N17@mail.gmail.com>

I just thought that a good sprint theme for the next PyCon would be
porting Twisted for Python 3.2.

I wanted to ask which is the status of this, if it's started, a good
idea for a sprint, etc.

Thanks!

-- 
.    Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/



From celord at gmail.com  Fri Feb 25 09:41:19 2011
From: celord at gmail.com (=?ISO-8859-1?B?Q+lzYXIgR2FyY+1h?=)
Date: Fri, 25 Feb 2011 10:41:19 -0600
Subject: [Twisted-Python] Imap client problem, help fro troubleshoot
In-Reply-To: <20110225132016.2231.480486396.divmod.xquotient.45@localhost.localdomain>
References: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>
	<20110225132016.2231.480486396.divmod.xquotient.45@localhost.localdomain>
Message-ID: <AANLkTine8v4+qaEP+OHDen6OMW=y3iV9RqnonO+Git82@mail.gmail.com>

Hi Jean-Paul thank a lot for your reply, intentionally I'm not
stopping the reactor this comes without my intervention

>>        Failure: twisted.internet.error.ConnectionDone: Connection was
>>closed cleanly

there is where I get lost, I'm using Solaris 10, python 2.6.2  and
twisted 10.1.0, could Solaris be the problem ?

2011/2/25  <exarkun at twistedmatrix.com>:
> On 24 Feb, 04:51 pm, celord at gmail.com wrote:
>>Hello All, I have this[1] IMAP4 client in twisted, but I'am getting
>>this error too much, how can I troubleshoot it or how can I restart
>>the main loop after this failure?
>>
>>         Traceback (most recent call last):
>>        Failure: twisted.internet.error.ConnectionDone: Connection was
>>closed cleanly.
>
> Your code already appears to be based on ReconnectingClientFactory, so
> your client should reconnect after it loses its connection.  The main
> thing that would prevent this is if you stop the reactor, which you also
> appear to be doing.  If you want the reconnection attempt to succeed,
> then try not stopping the reactor.
>
> Jean-Paul
>>2011-02-24 10:31:34-0600 [IMAP4Client,client] Disconnected at: Thu Feb
>>24 10:31:34 2011
>>2011-02-24 10:31:34-0600 [IMAP4Client,client] Connection Lost: Reason:
>>[Failure instance: Traceback (failure with no frames): <class
>>'twisted.internet.error.ConnectionDone'>: Connection was closed
>>cleanly.
>>2011-02-24 10:31:34-0600 [IMAP4Client,client] ]
>>2011-02-24 10:31:34-0600 [IMAP4Client,client]
>><twisted.internet.tcp.Connector instance at 0x5f8a30> will retry in 7
>>seconds
>>2011-02-24 10:31:34-0600 [IMAP4Client,client] Stopping factory
>><__builtin__.IMAP4ClientFactory instance at 0xbd4468>
>>2011-02-24 10:31:34-0600 [-] Main loop terminated.
>>2011-02-24 10:31:34-0600 [-] Server Shut Down.
>>
>>
>>[1] http://pastebin.com/GrqG3MyD
>>
>>--
>>http://celord.blogspot.com/
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://celord.blogspot.com/



From exarkun at twistedmatrix.com  Fri Feb 25 10:04:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 25 Feb 2011 17:04:28 -0000
Subject: [Twisted-Python] Imap client problem, help fro troubleshoot
In-Reply-To: <AANLkTine8v4+qaEP+OHDen6OMW=y3iV9RqnonO+Git82@mail.gmail.com>
References: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>
	<20110225132016.2231.480486396.divmod.xquotient.45@localhost.localdomain>
	<AANLkTine8v4+qaEP+OHDen6OMW=y3iV9RqnonO+Git82@mail.gmail.com>
Message-ID: <20110225170428.2231.417842557.divmod.xquotient.56@localhost.localdomain>

On 04:41 pm, celord at gmail.com wrote:
>Hi Jean-Paul thank a lot for your reply, intentionally I'm not
>stopping the reactor this comes without my intervention

There are several calls to `reactor.stop` in the example, though.  The 
reactor won't stop unless that method is called.
>>>        Failure: twisted.internet.error.ConnectionDone: Connection was
>>>closed cleanly
>
>there is where I get lost, I'm using Solaris 10, python 2.6.2  and
>twisted 10.1.0, could Solaris be the problem ?

I don't know why the connection is being closed.  The most likely reason 
is that there's a problem with the protocol class which causes it either 
to raise an exception locally when handling data or which causes it to 
send something that the server dislikes enough that it closes the 
connection.

You could rule out the former by enabling logging when the process 
starts, instead of only immediately before it stops.

For the latter, you'll have to look at network captures and understand 
the behavior of the server you're talking to.

Jean-Paul



From celord at gmail.com  Fri Feb 25 14:35:32 2011
From: celord at gmail.com (=?ISO-8859-1?B?Q+lzYXIgR2FyY+1h?=)
Date: Fri, 25 Feb 2011 15:35:32 -0600
Subject: [Twisted-Python] Imap client problem, help fro troubleshoot
In-Reply-To: <20110225170428.2231.417842557.divmod.xquotient.56@localhost.localdomain>
References: <AANLkTinpMmUoo+rQCetXUy74Y-62Bpb=DGWU5pWSF6D_@mail.gmail.com>
	<20110225132016.2231.480486396.divmod.xquotient.45@localhost.localdomain>
	<AANLkTine8v4+qaEP+OHDen6OMW=y3iV9RqnonO+Git82@mail.gmail.com>
	<20110225170428.2231.417842557.divmod.xquotient.56@localhost.localdomain>
Message-ID: <AANLkTikT8rLhO6Ma8E+-Lo7k+oRGdpzYN3nmifdMKHrJ@mail.gmail.com>

OK Thanks a lot, I'll try that.

2011/2/25  <exarkun at twistedmatrix.com>:
> On 04:41 pm, celord at gmail.com wrote:
>>Hi Jean-Paul thank a lot for your reply, intentionally I'm not
>>stopping the reactor this comes without my intervention
>
> There are several calls to `reactor.stop` in the example, though.  The
> reactor won't stop unless that method is called.
>>>>        Failure: twisted.internet.error.ConnectionDone: Connection was
>>>>closed cleanly
>>
>>there is where I get lost, I'm using Solaris 10, python 2.6.2  and
>>twisted 10.1.0, could Solaris be the problem ?
>
> I don't know why the connection is being closed.  The most likely reason
> is that there's a problem with the protocol class which causes it either
> to raise an exception locally when handling data or which causes it to
> send something that the server dislikes enough that it closes the
> connection.
>
> You could rule out the former by enabling logging when the process
> starts, instead of only immediately before it stops.
>
> For the latter, you'll have to look at network captures and understand
> the behavior of the server you're talking to.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://celord.blogspot.com/



From glyph at twistedmatrix.com  Fri Feb 25 18:16:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 25 Feb 2011 20:16:59 -0500
Subject: [Twisted-Python] Twisted for Python 3
In-Reply-To: <AANLkTikf3fV=D_TJc6x2b54SmT0HxDw9dUQaO0zQ8N17@mail.gmail.com>
References: <AANLkTikf3fV=D_TJc6x2b54SmT0HxDw9dUQaO0zQ8N17@mail.gmail.com>
Message-ID: <C23ADE2B-C8B6-489A-9545-AEF979090A95@twistedmatrix.com>


On Feb 25, 2011, at 9:36 AM, Facundo Batista wrote:

> I just thought that a good sprint theme for the next PyCon would be
> porting Twisted for Python 3.2.
> 
> I wanted to ask which is the status of this, if it's started, a good
> idea for a sprint, etc.

I guess that the status is that you have now volunteered to run the Twisted-on-Python-3 sprint at PyCon!  Thanks! :)





From glyph at twistedmatrix.com  Fri Feb 25 18:51:03 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 25 Feb 2011 20:51:03 -0500
Subject: [Twisted-Python] Next release?
In-Reply-To: <AANLkTik=X3Dx0WbyMLm2x7Mk7WLGpZAJipvAQ1Td13rt@mail.gmail.com>
References: <AANLkTim7PZbMoeZbeWqboDTre2PMfkN5zjUciT0w+QfE@mail.gmail.com>
	<20110225131534.2231.1877950703.divmod.xquotient.35@localhost.localdomain>
	<AANLkTik=X3Dx0WbyMLm2x7Mk7WLGpZAJipvAQ1Td13rt@mail.gmail.com>
Message-ID: <294DC848-D6A2-4B97-81DB-63BF81C73333@twistedmatrix.com>


On Feb 25, 2011, at 9:30 AM, Jonathan Lange wrote:

> On Fri, Feb 25, 2011 at 1:15 PM,  <exarkun at twistedmatrix.com> wrote:
>> On 10:57 am, jml at mumak.net wrote:
>>> Hello everyone,
>>> 
>>> I'd like for there to be a release of Twisted in March 2011, and I am
>>> happy to do it. If someone else has already volunteered, or would like
>>> to do it instead of me, they are welcome to be my guest, as long as
>>> they follow & update the Release Process
>>> <http://twistedmatrix.com/trac/wiki/ReleaseProcess>.
>> 
>> I created an 11.0 milestone a few days ago.
>> <http://twistedmatrix.com/trac/milestone/Twisted-11.0>.  It almost gets
>> a release out in March.
> 
> Thanks.
> 
>>> Perhaps it would be best to cut a release candidate before PyCon
>>> starts?
>> 
>> I don't have a problem with the schedule moving up.  To be explicit,
>> though, that means that tickets resolved at the PyCon sprint will not be
>> in 11.0.

Let me preface everything I'm about to say with the usual disclaimer about work in twisted, especially release work: thanks for doing the release, and I'm happy to have release done at any time, by anybody, especially since it probably means the ReleaseProcess document will get even better.  So feel free to do it on your own time and in your own way assuming that the process is followed.  I realize that beggars can't be choosers :).

But, if possible, I would personally appreciate it if any release started before PyCon could actually be out before PyCon.  An impending release that hasn't been closed yet creates a sense of urgency.  An impending release which everyone knows won't actually get any of the current work into it seems to create an air of lackadaisical malaise.

There's always motivation to turn the crank on the process a few times at a sprint, but an upcoming release generates a feeling that it's really important to keep turning it until the machine goes "bing".  Oops, metaphor: there's more motivation to actually close tickets than to just submit for another review turn or do a few random reviews.  These are purely subjective assessments, of course, and I'm happy for others to disagree.

To argue against myself for a moment, because I do have mixed feelings about this: the general sense that releases happen regularly is far more powerful than either of these ephemeral impressions of the proximity of the next release.  Major sprints (those at PyCon) since we started focusing on more regular releases in '08 have all been far more energetic than those that took place in the long, dark tea-time of 2.5.

So if your energy and inclination to be the release manager is timed to cut the prerelease before PyCon and have it out during that week, so be it.  All things being equal, more releases and more regular releases are better.

My original plan for 11.0, which is vaguely related to that timeline exarkun just posted, was to do a release sprint in the Boston area after the folks here get back from PyCon.  The release sprint would be a bit more relaxed than our usual sprints here, since everyone would be fried from the conference: we'd have one goal, to put the work from the sprint into a release.

If it's all the same to you, a release at this time might have the additional advantage of having a slightly less anemic feature list:

~/Projects/Twisted/trunk$ find . -name '*.feature' | wc -w
       9

and the slim possibility of having better (i.e. Sphinx) documentation, as well, which seems to be in the community zeitgeist quite a bit now.

> Cool. I think this is OK, since it gives the code forged during the
> heat of the sprint time to cool before being released.
> 
> Oops, metaphor. What I mean is, a lot of code gets written at sprints,
> and because it's code it has bugs, and bugs take time to find.

This makes sense to me if I think about it as a metaphor, and I've seen it on other projects, but it doesn't actually jive with my experience of Twisted's releases.

I can recall bugs being found well after a release, a precious few that being spotted during pre-release testing, and lots being noticed during code review or by buildbot immediately after landing on trunk.  I can't really think of any that got spotted by sitting around on trunk for a while.  (I'm sure there have been a few, but it seems like a tiny minority.)  I'm certainly not saying there aren't bugs, just that if our pre-commit QA process doesn't spot them, the next place they realistically get caught will be users noticing problems in production.  If we're lucky, that's during a prerelease, if not, after a final release.  "Cooling" in the trunk for a while doesn't seem to make much of a difference one way or another.

> And anyway, doing a release these days isn't *that* onerous.

Indeed not, and that is largely to your credit.  And thus it is in no small part thanks to you that, as ever, Twisted prevails.

Thanks a million,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110225/e7a4339f/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Feb 26 22:05:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 Feb 2011 05:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1298783122.64.641202311@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110227/d3271d29/attachment-0001.html>

