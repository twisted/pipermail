--- domish.py.orig	2008-07-08 17:28:51.000000000 +0200
+++ domish.py	2008-07-08 17:29:20.000000000 +0200
@@ -434,12 +434,41 @@
         self.attributes[self._dqa(key)] = value
 
     def __str__(self):
-        """ Retrieve the first CData (content) node
-        """
+        """ Retrieve the first CData (content) node """
         for n in self.children:
             if isinstance(n, types.StringTypes): return n
         return ""
 
+    def __eq__(self, other):
+        """
+        Test if this C{Element} is equal to another C{Element}
+
+        @param other: the other C{Element} to compare with
+        @param other: C{StatObject}
+
+        @return: C{True} if they are equal, C{False} if they are not
+        @rtype: C{bool}
+        """
+        return ((other is self) or (isinstance(other, Element) and
+                                    self.localPrefixes == other.localPrefixes and
+                                    self.uri == other.uri and
+                                    self.name == other.name and
+                                    self.defaultUri == other.defaultUri and
+                                    self.attributes == other.attributes and
+                                    self.children == other.children))
+
+    def __ne__(self, other):
+        """
+        Test if this C{Element} is not equal to another C{Element}
+
+        @param other: the other C{Element} to compare with
+        @param other: C{StatObject}
+
+        @return: C{True} if they are not equal, C{False} if they are equal
+        @rtype: C{bool}
+        """
+        return not self.__eq__(other)
+
     def _dqa(self, attr):
         """ Dequalify an attribute key as needed """
         if isinstance(attr, types.TupleType) and not attr[0]:
