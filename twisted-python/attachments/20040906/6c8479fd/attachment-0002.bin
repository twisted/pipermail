--- base.py	2004-09-06 19:34:12.505261745 +0200
+++ /tmp/base.py	2004-09-06 19:43:53.938809582 +0200
@@ -157,6 +157,7 @@
     def __init__(self):
         self._eventTriggers = {}
         self._pendingTimedCalls = [] # heap
+        self._newTimedCalls = []
         self.running = 0
         self.waker = None
         self.resolver = None
@@ -362,7 +363,7 @@
         assert sys.maxint >= _seconds >= 0, \
                "%s is not greater than or equal to 0 seconds" % (_seconds,)
         tple = DelayedCall(seconds() + _seconds, _f, args, kw)
-        heappush(self._pendingTimedCalls, tple)
+        self._newTimedCalls.append(tple)
         return tple
 
     def _cleanUpCallLater(self):
@@ -413,6 +414,11 @@
                 count += 1
             del self.threadCallQueue[:count]
 
+        # insert new delayed calls now to avaid doing so while iterating
+        for call in self._newTimedCalls:
+            heappush(self._pendingTimedCalls, call)
+        self._newTimedCalls = []
+
         now = seconds()
         while self._pendingTimedCalls and (self._pendingTimedCalls[0].time <= now):
             call = heappop(self._pendingTimedCalls)
