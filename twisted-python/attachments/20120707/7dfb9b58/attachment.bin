import random
import StringIO

from twisted.internet import reactor
from twisted.web import client, http_headers


def _encodeForm(a, b, f):
    """
    Encodes two form values and a fake image file as multipart form encoding.
    """
    randomChars = [str(random.randrange(10)) for _ in xrange(28)]
    boundary = "-----------------------------" + "".join(randomChars)

    lines = []
    def add(name, content, isImage=False):
        header = "Content-Disposition: form-data; name={}".format(name)
        if isImage:
            header += "; filename=img.jpeg"
            header += "\r\nContent-Type: image/jpeg"
        lines.extend(["--" + boundary, header, "", content, ""])

    add("a", a)
    add("b", b)
    add("f", f.read(), isImage=True)

    lines.extend(["--" + boundary + "--", ""])
    return boundary, "\r\n".join(lines)


def send():
    f = open("1x1.jpg")
    boundary, body = _encodeForm("1", "2", f)
    producer = client.FileBodyProducer(StringIO.StringIO(body))

    headers = http_headers.Headers()
    contentType = "multipart/form-data; boundary={}".format(boundary)
    headers.setRawHeaders("Content-Type", [contentType])

    agent = client.Agent(reactor)
    d = agent.request("POST", "http://localhost:8080", headers, producer)
    return d

if __name__ == "__main__":
    d = send()
    d.addCallback(lambda _result: reactor.stop())
    reactor.run()

