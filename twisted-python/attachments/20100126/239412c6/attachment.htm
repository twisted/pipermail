<tt>
class&nbsp;ProxyIncomingProtocol(Protocol):&lt;br&gt;.....&lt;br&gt;&lt;br&gt;class&nbsp;ProxyOutgoingProtocol(Protocol):&lt;br&gt;.....&lt;br&gt;&lt;br&gt;class&nbsp;ProxyFactory(Factory):&lt;br&gt;&lt;br&gt;   &nbsp;protocol&nbsp;=&nbsp;ProxyIncomingProtocol&lt;br&gt;&lt;br&gt;class&nbsp;SimplePerspective(pb.Avatar):&lt;br&gt;<br>
&lt;br&gt;   &nbsp;def&nbsp;perspective_echo(self,&nbsp;text):&lt;br&gt;       &nbsp;print&nbsp;&amp;#39;echoing&amp;#39;,text&lt;br&gt;       &nbsp;return&nbsp;text&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;logout(self):&lt;br&gt;       &nbsp;print&nbsp;self,&nbsp;&amp;quot;logged&nbsp;out&amp;quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;class&nbsp;SimpleRealm:&lt;br&gt;   &nbsp;implements(IRealm)&lt;br&gt;<br>
&lt;br&gt;   &nbsp;def&nbsp;requestAvatar(self,&nbsp;avatarId,&nbsp;mind,&nbsp;*interfaces):&lt;br&gt;       &nbsp;if&nbsp;pb.IPerspective&nbsp;in&nbsp;interfaces:&lt;br&gt;           &nbsp;avatar&nbsp;=&nbsp;SimplePerspective()&lt;br&gt;           &nbsp;return&nbsp;pb.IPerspective,&nbsp;avatar,&nbsp;avatar.logout&lt;br&gt;       &nbsp;else:&lt;br&gt;<br>
           &nbsp;raise&nbsp;NotImplementedError(&amp;quot;no&nbsp;interface&amp;quot;)&lt;br&gt;&lt;br&gt;portal&nbsp;=&nbsp;Portal(SimpleRealm())&lt;br&gt;checker&nbsp;=&nbsp;InMemoryUsernamePasswordDatabaseDontUse()&lt;br&gt;checker.addUser(&amp;quot;guest&amp;quot;,&nbsp;&amp;quot;password&amp;quot;)&lt;br&gt;portal.registerChecker(checker)&lt;br&gt;<br>
&lt;br&gt;&lt;br&gt;proxy_factory&nbsp;=&nbsp;proxy.ProxyFactory()&lt;br&gt;#&nbsp;???????&nbsp;how&nbsp;can&nbsp;I&nbsp;add&nbsp;the&nbsp;portal&nbsp;to&nbsp;the&nbsp;factory?&lt;br&gt;internet.GenericServer(cometsession.Port,&nbsp;factory=proxy_factory,&nbsp;resource=root_resource,&nbsp;childName=&amp;quot;tcp&amp;quot;,&nbsp;interface=INTERFACE).setServiceParent(serviceCollection)&lt;br&gt;<br>
&lt;br&gt;&lt;br&gt;<br>

</tt>
