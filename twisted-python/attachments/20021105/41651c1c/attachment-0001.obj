                                            
# -*- Python -*- 

from TwistedQuotes import wovenquotes
    
#__file__ is defined to be the name of this file; this is to
#get the sibling file "quotes.txt" which should be in the same directory
import os
quotefile = os.path.join(os.path.split(__file__)[0], "quotes.txt")

from twisted.web import guard
from twisted.cred import authorizer, identity, perspective, service

auth = authorizer.DefaultAuthorizer()
ident=identity.Identity("bob", authorizer=auth)
ident.setPassword("joe")
auth.addIdentity(ident)

from twisted.internet.app import theApplication

auth.setApplication(theApplication)
svc = service.Service("simple", authorizer=auth, serviceParent=theApplication)
psp=perspective.Perspective('persp', ident.name)
svc.addPerspective(psp)
ident.addKeyForPerspective(psp)

model = wovenquotes.MQuote(quotefile, ident)

res = wovenquotes.CQuote(model)

import string

class CustomResourceGuard(guard.ResourceGuard):
    def render(self, request):
        session = request.getSession()
        resKey = string.join(['AUTH',self.service.serviceName], '_')
        if hasattr(session, resKey):
            self.reallyRender(request)
            return guard.NOT_DONE_YET
        else:
            return guard.AuthPage(self,
                                  self.sessionPerspective,
                                  self.sessionIdentity).render(request)

resource = CustomResourceGuard(res,
                                svc,
                                sessionIdentity="myIdentity",
                                sessionPerspective="myPerspective")


# ResourceScript requires us to define 'resource'. This resource is used
# to render the page.
###resource = wovenquotes.CQuote(model)

# The CQuote controller will look up a View (VQuote) and call render()
# on it, rendering the DOMTemplate
