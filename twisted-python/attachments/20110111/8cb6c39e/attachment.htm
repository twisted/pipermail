<tt>
&lt;div&gt;You&nbsp;could&nbsp;probably&nbsp;generalize&nbsp;and&nbsp;simplify&nbsp;by&nbsp;using&nbsp;a&nbsp;collections.deque&nbsp;of&nbsp;hosts/ports&nbsp;and&nbsp;using&nbsp;the&nbsp;rotate()&nbsp;method&nbsp;before&nbsp;each reactor.connectTCP.&nbsp; Also,&nbsp;no&nbsp;need&nbsp;for&nbsp;multiple&nbsp;reactor&nbsp;imports---one&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;code&nbsp;is&nbsp;fine.&nbsp; Note&nbsp;that&nbsp;if&nbsp;the&nbsp;connection&nbsp;is&nbsp;&amp;quot;lost&amp;quot;&nbsp;in&nbsp;a&nbsp;non-clean&nbsp;fashion,&nbsp;you&nbsp;may&nbsp;also&nbsp;want&nbsp;to&nbsp;reconnect.&nbsp; IIUC,&nbsp;&amp;quot;fail&amp;quot;&nbsp;only&nbsp;handles&nbsp;the&nbsp;case&nbsp;that&nbsp;no&nbsp;connection&nbsp;is&nbsp;made&nbsp;(protocol&nbsp;is&nbsp;never&nbsp;created).&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;import&nbsp;collections&lt;/div&gt;&lt;div&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;class&nbsp;MyClientFactory(object):&lt;/div&gt;&lt;div&gt;  &nbsp; protocol&nbsp;=&nbsp;MyClientProtocol&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;__init__(self,&nbsp;hosts):&lt;/div&gt;<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.hosts&nbsp;=&nbsp;collections.deque(hosts)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; reactor.callWhenRunning(reactor.connectTCP,&nbsp;self.hosts[0][0],&nbsp;self.hosts[0][1],&nbsp;self)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.hosts.rotate(1)&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;clientConnectionFailed(self,&nbsp;connector,&nbsp;reason):&lt;/div&gt;<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; reactor.callLater(2.0,&nbsp;connectTCP,&nbsp;self.hosts[0][0],&nbsp;self.hosts[0][1],&nbsp;self)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.hosts.rotate(1)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;factory&nbsp;=&nbsp;MyClientFactory([(&amp;#39;host1&amp;#39;,&nbsp;port1),&nbsp;(&amp;#39;host2&amp;#39;,&nbsp;port2),&nbsp;...])&lt;/div&gt;<br>
&lt;div&gt;reactor.run()&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Cheers,&lt;/div&gt;&lt;div&gt;&lt;br&gt;Jason&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Tue,&nbsp;Jan&nbsp;11,&nbsp;2011&nbsp;at&nbsp;5:17&nbsp;AM,&nbsp;&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:benjamin.bertrand@lfv.se&quot;&gt;benjamin.bertrand@lfv.se&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;Hi,&lt;br&gt;<br>
&lt;br&gt;<br>
I&amp;#39;m&nbsp;new&nbsp;to&nbsp;twisted&nbsp;and&nbsp;I&nbsp;have&nbsp;started&nbsp;to&nbsp;write&nbsp;a&nbsp;new&nbsp;protocol&nbsp;with&nbsp;a&nbsp;TCP&lt;br&gt;<br>
client&nbsp;and&nbsp;server.&lt;br&gt;<br>
In&nbsp;my&nbsp;protocol,&nbsp;a&nbsp;client&nbsp;should&nbsp;be&nbsp;able&nbsp;to&nbsp;connect&nbsp;to&nbsp;2&nbsp;servers&lt;br&gt;<br>
(master/slave&nbsp;node&nbsp;-&nbsp;only&nbsp;the&nbsp;master&nbsp;accepts&nbsp;connection).&lt;br&gt;<br>
The&nbsp;client&nbsp;should&nbsp;try&nbsp;to&nbsp;connect&nbsp;to&nbsp;server1.&nbsp;If&nbsp;it&nbsp;fails,&nbsp;try&nbsp;to&nbsp;connect&lt;br&gt;<br>
to&nbsp;server2&nbsp;(after&nbsp;a&nbsp;specific&nbsp;timeout).&nbsp;If&nbsp;that&nbsp;fails,&nbsp;try&nbsp;server1...&lt;br&gt;<br>
I&nbsp;came&nbsp;up&nbsp;with&nbsp;a&nbsp;solution&nbsp;(see&nbsp;below).&lt;br&gt;<br>
As&nbsp;I&amp;#39;m&nbsp;new&nbsp;to&nbsp;twisted&nbsp;and&nbsp;I&nbsp;haven&amp;#39;t&nbsp;seen&nbsp;anything&nbsp;like&nbsp;that&nbsp;in&nbsp;the&lt;br&gt;<br>
examples,&nbsp;I&amp;#39;d&nbsp;like&nbsp;to&nbsp;check&nbsp;if&nbsp;that&amp;#39;s&nbsp;a&nbsp;proper&nbsp;way&nbsp;to&nbsp;do&nbsp;it.&lt;br&gt;<br>
Any&nbsp;comments&nbsp;is&nbsp;welcome.&lt;br&gt;<br>
&lt;br&gt;<br>
Thanks&lt;br&gt;<br>
&lt;br&gt;<br>
Benjamin&lt;br&gt;<br>
&lt;br&gt;<br>
***********************************************&lt;br&gt;<br>
class&nbsp;MyClientFactory(ClientFactory):&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; protocol&nbsp;=&nbsp;MyClientProtocol&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;__init__(self,&nbsp;host2=None):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.host1&nbsp;=&nbsp;None&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.host2&nbsp;=&nbsp;host2&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;clientConnectionFailed(self,&nbsp;connector,&nbsp;reason):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;self.host2&nbsp;is&nbsp;None:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;host2&nbsp;is&nbsp;not&nbsp;defined,&nbsp;reconnect&nbsp;to&nbsp;host1&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reactor.callLater(2.0,&nbsp;connector.connect)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; else:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; destination&nbsp;=&nbsp;connector.getDestination()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;self.host1&nbsp;is&nbsp;None:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;First&nbsp;connection&nbsp;failed,&nbsp;initialize&nbsp;host1,&nbsp;and&nbsp;try&lt;br&gt;<br>
host2&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.host1&nbsp;=&nbsp;destination.host&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; host&nbsp;=&nbsp;self.host2&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; elif&nbsp;destination.host&nbsp;==&nbsp;self.host1:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;Connection&nbsp;to&nbsp;host1&nbsp;failed,&nbsp;try&nbsp;host2&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; host&nbsp;=&nbsp;self.host2&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;Connection&nbsp;to&nbsp;host2&nbsp;failed,&nbsp;try&nbsp;host1&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; host&nbsp;=&nbsp;self.host1&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reactor.callLater(2.0,&nbsp;reactor.connectTCP,&nbsp;host,&lt;br&gt;<br>
destination.port,&nbsp;self)&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
factory&nbsp;=&nbsp;MyClientFactory(server2)&lt;br&gt;<br>
from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&lt;br&gt;<br>
reactor.connectTCP(server1,&nbsp;8010,&nbsp;factory)&lt;br&gt;<br>
reactor.run()&lt;br&gt;<br>
***********************************************&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
Twisted-Python&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:Twisted-Python@twistedmatrix.com&quot;&gt;Twisted-Python@twistedmatrix.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&quot;&nbsp;target=&quot;_blank&quot;&gt;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&lt;/a&gt;&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br&nbsp;clear=&quot;all&quot;&gt;&lt;br&gt;--&nbsp;&lt;br&gt;Jason&nbsp;Rennie&lt;br&gt;Research&nbsp;Scientist,&nbsp;ITA&nbsp;Software&lt;br&gt;617-714-2645&lt;br&gt;&lt;a&nbsp;href=&quot;http://www.itasoftware.com/&quot;&gt;http://www.itasoftware.com/&lt;/a&gt;&lt;br&gt;&lt;br&gt;<br>
&lt;/div&gt;<br>

</tt>
