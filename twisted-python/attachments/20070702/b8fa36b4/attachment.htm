<tt>
Sounds&nbsp;like&nbsp;you&nbsp;could&nbsp;use&nbsp;a&nbsp;lazy&nbsp;import.&amp;nbsp;&nbsp;I&nbsp;do&nbsp;something&nbsp;similar&nbsp;to&nbsp;this&nbsp;in&nbsp;my&nbsp;factory:&lt;br&gt;&lt;br&gt;#&nbsp;protocol.py&lt;br&gt;class&nbsp;MyProtocol(XmlStream):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;....&lt;br&gt;&lt;br&gt;class&nbsp;MyFactory:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;buildProtocol(self,&nbsp;addr):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;myProtocol&nbsp;=&nbsp;MyProtocol()<br>
&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#&nbsp;heres&nbsp;the&nbsp;lazy&nbsp;import&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;from&nbsp;othermodule&nbsp;import&nbsp;SomeKlass&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;SomeKlass(myProtocol)&lt;br&gt;&lt;br&gt;My&nbsp;`othermodule&amp;#39;&nbsp;imports&nbsp;some&nbsp;constants&nbsp;from&nbsp;`protocol&amp;#39;&nbsp;(module&nbsp;defined&nbsp;above).&amp;nbsp;&nbsp;So,&nbsp;to&nbsp;kill&nbsp;the&nbsp;circular&nbsp;references,&nbsp;I&nbsp;do&nbsp;a&nbsp;lazy&nbsp;import&nbsp;in&nbsp;MyFactory.<br>
&lt;br&gt;&lt;br&gt;HTH!&lt;br&gt;jw&lt;br&gt;&lt;br&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;7/1/07,&nbsp;&lt;b&nbsp;class=&quot;gmail_sendername&quot;&gt;Ivanov&nbsp;Maxim&lt;/b&gt;&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:redbaron@hitv.ru&quot;&gt;redbaron@hitv.ru&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;/span&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
Some&nbsp;of&nbsp;my&nbsp;logic&nbsp;need&nbsp;protocol&nbsp;to&nbsp;be&nbsp;imoported&nbsp;to&nbsp;be&nbsp;able&nbsp;to&nbsp;send&nbsp;data&nbsp;back.&lt;br&gt;&lt;br&gt;So&nbsp;when&nbsp;I&nbsp;start&nbsp;app&nbsp;protocol&nbsp;imports&nbsp;my&nbsp;logic&nbsp;(where&nbsp;all&nbsp;data&nbsp;is&nbsp;processed)&lt;br&gt;and&nbsp;my&nbsp;logic&nbsp;imports&nbsp;protocol.&amp;nbsp;&amp;nbsp;Right&nbsp;now&nbsp;I&nbsp;simply&nbsp;pass&nbsp;protocol&nbsp;object&nbsp;as<br>
&lt;br&gt;argument&nbsp;to&nbsp;constructors,&nbsp;but&nbsp;it&nbsp;seems&nbsp;to&nbsp;be&nbsp;not&nbsp;the&nbsp;best&nbsp;way&nbsp;from&nbsp;my&nbsp;point&lt;br&gt;of&nbsp;view.&nbsp;How&nbsp;to&nbsp;solve&nbsp;this&nbsp;problem?&lt;br&gt;&lt;br&gt;_______________________________________________&lt;br&gt;Twisted-Python&nbsp;mailing&nbsp;list&lt;br&gt;&lt;a&nbsp;href=&quot;mailto:Twisted-Python@twistedmatrix.com&quot;&gt;<br>
Twisted-Python@twistedmatrix.com&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&quot;&gt;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&lt;/a&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br&nbsp;clear=&quot;all&quot;&gt;<br>
&lt;br&gt;--&nbsp;&lt;br&gt;&amp;quot;Government&nbsp;does&nbsp;not&nbsp;solve&nbsp;problems;&nbsp;it&nbsp;subsidizes&nbsp;them.&amp;quot;&lt;br&gt;Ronald&nbsp;Reagan<br>

</tt>
