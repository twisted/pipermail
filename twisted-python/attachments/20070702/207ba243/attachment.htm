<tt>
&lt;div&gt;<br>
&lt;div&gt;I&nbsp;have&nbsp;a&nbsp;newbie&nbsp;question.&nbsp;By&nbsp;the&nbsp;way,&nbsp;even&nbsp;though&nbsp;it&nbsp;is&nbsp;a&nbsp;brain-f**k,&nbsp;I&nbsp;love&nbsp;programming&nbsp;in&nbsp;this&nbsp;software.&amp;nbsp;I&nbsp;just&nbsp;wish&nbsp;there&nbsp;was&nbsp;an&nbsp;easier/faster&nbsp;way&nbsp;to&nbsp;understand&nbsp;it.&nbsp;I&nbsp;got&nbsp;and&nbsp;read&nbsp;the&nbsp;twisted&nbsp;book,&nbsp;but&nbsp;unfortunately&nbsp;it&nbsp;does&nbsp;not&nbsp;have&nbsp;twisted&nbsp;web2&nbsp;examples...&nbsp;<br>
&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;Anyway,&nbsp;I&nbsp;have&nbsp;written&nbsp;a&nbsp;web&nbsp;server&nbsp;using&nbsp;web2&nbsp;that&nbsp;takes&nbsp;an&nbsp;HTTP&amp;nbsp;request&nbsp;and&nbsp;sends&nbsp;it&nbsp;off&nbsp;to&nbsp;another&nbsp;server&nbsp;to&nbsp;process&nbsp;it.&nbsp;If&nbsp;the&nbsp;other&nbsp;server&nbsp;were&nbsp;to&nbsp;crash,&nbsp;how&nbsp;can&nbsp;I&nbsp;make&nbsp;the&nbsp;http&nbsp;request&nbsp;timeout&nbsp;after&nbsp;30&nbsp;seconds&nbsp;and&nbsp;redirect&nbsp;to&nbsp;a&nbsp;timeout&nbsp;page?&nbsp;<br>
&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;Following&nbsp;is&nbsp;my&nbsp;resource&nbsp;code.&nbsp;When&nbsp;the&nbsp;response&nbsp;is&nbsp;available,&nbsp;I&nbsp;take&nbsp;the&nbsp;response&nbsp;stream,&nbsp;write&nbsp;to&nbsp;it,&nbsp;and&nbsp;call&nbsp;finish().&lt;/div&gt;<br>
&lt;div&gt;<br>
&lt;p&gt;class&nbsp;HTTPServer(resource.PostableResource):&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;cache):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;resource.Resource.__init__(self)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.cache&nbsp;=&nbsp;cache&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;_finished(self,&nbsp;result,&nbsp;httprequest,&nbsp;postdata):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;convq&nbsp;=&nbsp;self.cache[&amp;#39;conversations&amp;#39;]&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;s=stream.ProducerStream()&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.cache[&amp;#39;requests&amp;#39;][id(httprequest)]&nbsp;=&nbsp;(httprequest,postdata,s)&nbsp;<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;httprequest.args.has_key(CONVID):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;conversationid&nbsp;=&nbsp;httprequest.args[CONVID][0]&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;try:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;convq[conversationid].put(httprequest)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;except:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;convq[conversationid]&nbsp;=&nbsp;<br>
Queue.Queue()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;convq[conversationid].put(httprequest)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;else:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;convq[ANY].put(httprequest)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;log:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;method&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;=&nbsp;httprequest.method&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;raw_uri&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;=&nbsp;<br>
urllib.unquote(httprequest.uri)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;%-4s&amp;quot;&nbsp;%&nbsp;method,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;%-6s&amp;quot;&nbsp;%&nbsp;&amp;#39;CLIENT&amp;#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;%-4s&amp;quot;&nbsp;%&nbsp;raw_uri&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;http.Response(stream=s)&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;_failed(self,&nbsp;reason,&nbsp;httprequest,&nbsp;postdata):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;result&nbsp;=&nbsp;str(reason)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;result&nbsp;+=&nbsp;str(httprequest.uri)&nbsp;+&nbsp;&amp;#39;\n&amp;#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;result&nbsp;+=&nbsp;&amp;#39;\n&amp;#39;.join(postdata)&nbsp;+&nbsp;&amp;#39;\n&amp;#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;<br>
http.Response(500,&nbsp;stream=&amp;quot;An&nbsp;internal&nbsp;server&nbsp;error&nbsp;has&nbsp;occurred.&amp;quot;)&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;http_POST(self,&nbsp;httprequest):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;postdata&nbsp;=&nbsp;[]&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d&nbsp;=&nbsp;stream.readStream(httprequest.stream,&nbsp;postdata.append)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d.addCallbacks(&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self._finished,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self._failed,&nbsp;<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;callbackArgs=(httprequest,&nbsp;postdata,),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;errbackArgs=(httprequest,&nbsp;postdata,)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;)&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#&nbsp;Catch&nbsp;any&nbsp;errors&nbsp;that&nbsp;occur&nbsp;in&nbsp;self._finished.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d.addErrback(self._failed,&nbsp;httprequest,&nbsp;postdata)&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;d&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;http_PUT&nbsp;=&nbsp;http_POST&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;http_GET&nbsp;=&nbsp;http_POST&lt;br&gt;&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&lt;/p&gt;<br>
&lt;p&gt;~Paul&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
