<tt>
Hi&lt;br&gt;&lt;br&gt;I&nbsp;started&nbsp;to&nbsp;learn&nbsp;Twisted&nbsp;with&nbsp;the&nbsp;O&amp;#39;Reilly&nbsp;Book&nbsp;Twisted&nbsp;Network&nbsp;Programming&nbsp;Essentials&lt;br&gt;I&nbsp;want&nbsp;to&nbsp;do&nbsp;a&nbsp;daemon&nbsp;to&nbsp;listen&nbsp;on&nbsp;port&lt;br&gt;-&nbsp;when&nbsp;a&nbsp;correct&nbsp;sentence&nbsp;is&nbsp;received,&nbsp;the&nbsp;daemon&nbsp;must&nbsp;to&nbsp;check&nbsp;&lt;span&nbsp;id=&quot;result_box&quot;&nbsp;class=&quot;&quot;&nbsp;lang=&quot;en&quot;&gt;&lt;span&nbsp;class=&quot;hps&quot;&gt;by&nbsp;querying&lt;/span&gt;&nbsp;&lt;span&nbsp;class=&quot;hps&quot;&gt;a&nbsp;server&lt;/span&gt;&nbsp;&lt;span&nbsp;class=&quot;hps&quot;&gt;XML_RPC&lt;br&gt;<br>
-&nbsp;if&nbsp;the&nbsp;answer&nbsp;from &lt;/span&gt;&lt;/span&gt;&lt;span&nbsp;id=&quot;result_box&quot;&nbsp;class=&quot;&quot;&nbsp;lang=&quot;en&quot;&gt;&nbsp;&lt;span&nbsp;class=&quot;hps&quot;&gt;XML_RPC&lt;/span&gt;&lt;/span&gt;&lt;span&nbsp;id=&quot;result_box&quot;&nbsp;class=&quot;&quot;&nbsp;lang=&quot;en&quot;&gt;&lt;span&nbsp;class=&quot;hps&quot;&gt;&nbsp;is&nbsp;1,&nbsp;the &nbsp;HTTP&nbsp;answer&nbsp;will&nbsp;be&nbsp;OK&nbsp;else&nbsp;NOT&nbsp;FOUND&lt;br&gt;<br>
&lt;br&gt;I&nbsp;adapted&nbsp;the&nbsp;basic&nbsp;example&nbsp;HttpEchoProtocol.py&lt;br&gt;&lt;br&gt;from&nbsp;twisted.protocols&nbsp;import&nbsp;basic&lt;br&gt;from&nbsp;twisted.web.xmlrpc&nbsp;import&nbsp;Proxy&lt;br&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;protocol,&nbsp;reactor&lt;br&gt;import&nbsp;pdb&lt;br&gt;&lt;br&gt;KEYS_ADDR=&amp;quot;192.168.0.254&amp;quot;&lt;br&gt;<br>
KEYS_PORT=2101&lt;br&gt;&lt;br&gt;#&nbsp;URL&nbsp;of&nbsp;the&nbsp;XML-RPC&nbsp;server&lt;br&gt; OF_XMLRPC_URL=&amp;quot;&lt;a&nbsp;href=&quot;http://127.0.0.1/xmlRpc.rpc.php&quot;&gt;http://127.0.0.1/xmlRpc.rpc.php&lt;/a&gt;&amp;quot;&lt;br&gt;#&nbsp;HTTP&nbsp;Port&nbsp;from&nbsp;which&nbsp;the&nbsp;OF&nbsp;client&nbsp;contact&nbsp;the&nbsp;service&lt;br&gt;<br>
SERVICE_PORT=4080&lt;br&gt;#&nbsp;url&nbsp;sent &nbsp;for&nbsp;test:&nbsp;localhost:4080/?sessid=dddddd&amp;amp;key=1&amp;amp;resource=2&lt;br&gt;&lt;br&gt;class&nbsp;HttpProtocol(basic.LineReceiver):&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;__init__(self):&lt;br&gt;       &nbsp;self.lines     &nbsp;=&nbsp;[]&lt;br&gt;       &nbsp;self.answer    &nbsp;=&nbsp;&amp;quot;HTTP/1.0&nbsp;200&nbsp;No&nbsp;value&amp;quot;&lt;br&gt;<br>
       &nbsp;self.gotRequest&nbsp;=&nbsp;False&lt;br&gt;       &nbsp;self.proxy     &nbsp;=&nbsp;Proxy(OF_XMLRPC_URL)&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;xmlRpcResponse(self,&nbsp;value):&lt;br&gt;       &nbsp;self.xmlRpc&nbsp;=&nbsp;value&lt;br&gt;       &nbsp;if&nbsp;self.xmlRpc&nbsp;==&nbsp;1:&lt;br&gt;           &nbsp;self.answer&nbsp;=&nbsp;&amp;quot;HTTP/1.0&nbsp;200&nbsp;OK&amp;quot;&lt;br&gt;<br>
           &nbsp;print&nbsp;&amp;quot;xmlRpc&nbsp;:&nbsp;&amp;quot;,self.xmlRpc&lt;br&gt;       &nbsp;else:&lt;br&gt;           &nbsp;self.answer&nbsp;=&nbsp;&amp;quot;HTTP/1.0&nbsp;406&nbsp;Invalid&nbsp;key&amp;quot;&lt;br&gt;       &nbsp;self.xmlRpc&nbsp;=&nbsp;0&lt;br&gt; &lt;br&gt;   &nbsp;def&nbsp;xmlRpcError(self,&nbsp;error):&lt;br&gt;       &nbsp;self.answer&nbsp;=&nbsp;&amp;quot;HTTP/1.0&nbsp;405&nbsp;NOT&nbsp;FOUND&amp;quot;&lt;br&gt;<br>
       &nbsp;print&nbsp;&amp;quot;Error&amp;quot;&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;lineReceived(self,&nbsp;line):&lt;br&gt;       &nbsp;self.lines.append(line)&lt;br&gt;       &nbsp;if&nbsp;not&nbsp;line&nbsp;and&nbsp;not&nbsp;self.gotRequest:&lt;br&gt;           &nbsp;text&nbsp;=&nbsp;self.lines[0]&lt;br&gt;           &nbsp;startText&nbsp;=&nbsp;text.find(&amp;quot;sessid&amp;quot;)&lt;br&gt;<br>
           &nbsp;if&nbsp;startText&amp;gt;0&nbsp;:&lt;br&gt;               &nbsp;endText&nbsp;=&nbsp;text.find(&amp;quot;HTTP&amp;quot;)&lt;br&gt;               &nbsp;text=text[startText:endText]&lt;br&gt;               &nbsp;data&nbsp;=&nbsp;text.split(&amp;quot;&amp;amp;&amp;quot;)&lt;br&gt;               &nbsp;sessionId&nbsp;=&nbsp;data[0][data[0].find(&amp;quot;=&amp;quot;)+1:]&lt;br&gt;<br>
               &nbsp;keyId&nbsp;=&nbsp;int(data[1][data[1].find(&amp;quot;=&amp;quot;)+1:])&lt;br&gt;               &nbsp;resourceId&nbsp;=&nbsp;int(data[2][data[2].find(&amp;quot;=&amp;quot;)+1:])&lt;br&gt;               &nbsp;self.proxy.callRemote(&amp;#39;checkCommand&amp;#39;,&nbsp;sessionId,&nbsp;keyId).addCallbacks(self.xmlRpcResponse,&nbsp;self.xmlRpcError)&lt;br&gt;<br>
           &nbsp;self.sendResponse()&lt;br&gt;           &nbsp;self.gotRequest&nbsp;=&nbsp;True           &nbsp;&lt;br&gt;           &nbsp;&lt;br&gt;   &nbsp;def&nbsp;sendResponse(self):&lt;br&gt;       &nbsp;responseBody&nbsp;=&nbsp;self.answer&lt;br&gt;       &nbsp;self.sendLine(self.answer)&lt;br&gt;       &nbsp;self.sendLine(&amp;quot;Content-Type:&nbsp;text/plain&amp;quot;)&lt;br&gt;<br>
       &nbsp;self.sendLine(&amp;quot;Content-Length:&nbsp;%i&amp;quot;&nbsp;%&nbsp;len(responseBody))&lt;br&gt;       &nbsp;self.sendLine(&amp;quot;&amp;quot;)&lt;br&gt;       &nbsp;self.transport.write(responseBody)&lt;br&gt;       &nbsp;self.transport.loseConnection()&lt;br&gt;&lt;br&gt;factory&nbsp;=&nbsp;protocol.ServerFactory()&lt;br&gt;<br>
factory.protocol&nbsp;=&nbsp;HttpProtocol&lt;br&gt;reactor.listenTCP(SERVICE_PORT,&nbsp;factory)&lt;br&gt;reactor.run()&lt;br&gt;&lt;br&gt;XML_RPC&nbsp;answer&nbsp;is&nbsp;correctly &lt;/span&gt;&lt;/span&gt;&lt;span&nbsp;id=&quot;result_box&quot;&nbsp;class=&quot;&quot;&nbsp;lang=&quot;en&quot;&gt;&lt;span&nbsp;class=&quot;hps&quot;&gt;&nbsp;received&nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&nbsp;id=&quot;result_box&quot;&nbsp;class=&quot;&quot;&nbsp;lang=&quot;en&quot;&gt;&lt;span&nbsp;class=&quot;hps&quot;&gt;&nbsp;(&lt;/span&gt;&lt;/span&gt;&lt;span&nbsp;id=&quot;result_box&quot;&nbsp;class=&quot;&quot;&nbsp;lang=&quot;en&quot;&gt;&lt;span&nbsp;class=&quot;hps&quot;&gt;&amp;quot;xmlRpc&nbsp;: &nbsp;1&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;span&nbsp;id=&quot;result_box&quot;&nbsp;class=&quot;&quot;&nbsp;lang=&quot;en&quot;&gt;&lt;span&nbsp;class=&quot;hps&quot;&gt;&nbsp;but&nbsp;the&nbsp;HTTP&nbsp;answer&nbsp;is&nbsp;always&nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&nbsp;id=&quot;result_box&quot;&nbsp;class=&quot;&quot;&nbsp;lang=&quot;en&quot;&gt;&lt;span&nbsp;class=&quot;hps&quot;&gt;&nbsp;&amp;quot;HTTP/1.0&nbsp;200&nbsp;No&nbsp;value&amp;quot;&nbsp;(first&nbsp;initialization)&nbsp;&lt;br&gt;<br>
&lt;br&gt;I&nbsp;tried&nbsp;a&nbsp;other&nbsp;example,&nbsp;based&nbsp;on&nbsp;requesthandler,py&lt;br&gt;&lt;br&gt;from&nbsp;twisted.web.xmlrpc&nbsp;import&nbsp;Proxy&lt;br&gt;from&nbsp;twisted.web&nbsp;import&nbsp;http&lt;br&gt;from&nbsp;twisted.web.xmlrpc&nbsp;import&nbsp;Proxy&lt;br&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&lt;br&gt;import&nbsp;pdb&lt;br&gt;<br>
&lt;br&gt;&lt;br&gt;#&nbsp;HTTP&nbsp;Port&nbsp;from&nbsp;which&nbsp;the&nbsp;OF&nbsp;client&nbsp;contact&nbsp;OpenKeys&nbsp;service&lt;br&gt;SERVICE_PORT=4080&lt;br&gt;&lt;br&gt;#&nbsp;URL&nbsp;of&nbsp;the&nbsp;XML-RPC&nbsp;server&lt;br&gt;OF_XMLRPC_URL=&amp;quot;&lt;a&nbsp;href=&quot;http://127.0.0.1/openkeys.rpc.php&quot;&gt;http://127.0.0.1/openkeys.rpc.php&lt;/a&gt;&amp;quot;&lt;br&gt;<br>
&lt;br&gt;class&nbsp;MyRequestHandler(http.Request):&lt;br&gt;&lt;br&gt;   &nbsp;xmlRpc&nbsp;=&nbsp;0&lt;br&gt;   &nbsp;def&nbsp;xmlRpcResponse(self,&nbsp;value):&lt;br&gt;       &nbsp;self.xmlRpc&nbsp;=&nbsp;value&lt;br&gt;       &nbsp;print&nbsp;repr(value)&lt;br&gt;       &nbsp;if&nbsp;self.xmlRpc&nbsp;==&nbsp;1:&lt;br&gt;          &nbsp;self.setResponseCode(http.OK)&lt;br&gt;<br>
          &nbsp;self.write(&amp;quot;&amp;lt;h1&amp;gt;OK&amp;lt;/h1&amp;gt;&amp;quot;)&lt;br&gt;       &nbsp;else:&lt;br&gt;           &nbsp;self.setResponseCode(http.NOT_ALLOWED)&lt;br&gt;           &nbsp;self.write(&amp;quot;&amp;lt;h1&amp;gt;Invalid&nbsp;key&amp;lt;/h1&amp;gt;.&amp;quot;)&lt;br&gt;       &nbsp;self.xmlRpc&nbsp;=&nbsp;0&lt;br&gt;<br>
       &nbsp;self.finish()&lt;br&gt; &lt;br&gt;   &nbsp;def&nbsp;xmlRpcError(self,&nbsp;error):&lt;br&gt;       &nbsp;print&nbsp;&amp;#39;error&amp;#39;,&nbsp;error&lt;br&gt;       &nbsp;self.setResponseCode(http.NOT_FOUND)&lt;br&gt;       &nbsp;self.write(&amp;quot;&amp;lt;h1&amp;gt;Not&nbsp;Found&amp;lt;/h1&amp;gt;&amp;quot;)&lt;br&gt;<br>
       &nbsp;self.xmlRpc&nbsp;=&nbsp;0&lt;br&gt;       &nbsp;self.finish()&lt;br&gt;   &nbsp;   &nbsp;&lt;br&gt;   &nbsp;def&nbsp;process(self):&lt;br&gt;       &nbsp;self.setHeader(&amp;#39;Content-Type&amp;#39;,&nbsp;&amp;#39;text/html&amp;#39;)&lt;br&gt;       &nbsp;data&nbsp;=&nbsp;self.args        &nbsp;&lt;br&gt;       &nbsp;if&nbsp;&amp;#39;sessid&amp;#39;&nbsp;in&nbsp;data:&lt;br&gt;<br>
           &nbsp;sessionId &nbsp;=&nbsp;data[&amp;#39;sessid&amp;#39;][0]&lt;br&gt;           &nbsp;keyId     &nbsp;=&nbsp;data[&amp;quot;key&amp;quot;][0]&lt;br&gt;           &nbsp;resourceId&nbsp;=&nbsp;data[&amp;quot;resource&amp;quot;][0]&lt;br&gt;           &nbsp;print&nbsp;&amp;quot;session&nbsp;=&nbsp;&amp;quot;,&nbsp;sessionId   &nbsp;&lt;br&gt;<br>
           &nbsp;print&nbsp;&amp;quot;key&nbsp;=&nbsp;&amp;quot;,&nbsp;keyId   &nbsp;&lt;br&gt;           &nbsp;print&nbsp;&amp;quot;resource&nbsp;=&nbsp;&amp;quot;,&nbsp;resourceId   &nbsp;&lt;br&gt;           &nbsp;proxy.callRemote(&amp;#39;checkCommand&amp;#39;,&nbsp;sessionId,&nbsp;keyId).addCallbacks(self.xmlRpcResponse,&nbsp;self.xmlRpcError)&lt;br&gt;<br>
       &nbsp;else:&lt;br&gt;           &nbsp;print&nbsp;&amp;quot;data&nbsp;=&nbsp;&amp;quot;,&nbsp;data   &nbsp;&lt;br&gt;           &nbsp;self.setResponseCode(http.NOT_FOUND)&lt;br&gt;           &nbsp;self.write(&amp;quot;&amp;lt;h1&amp;gt;Not&nbsp;Found&amp;lt;/h1&amp;gt;Sorry,&nbsp;no&nbsp;such&nbsp;page.&amp;quot;)&lt;br&gt;           &nbsp;self.finish()&lt;br&gt;<br>
&lt;br&gt;class&nbsp;MyHttp(http.HTTPChannel):&lt;br&gt;   &nbsp;requestFactory&nbsp;=&nbsp;MyRequestHandler&lt;br&gt;&lt;br&gt;class&nbsp;MyHttpFactory(http.HTTPFactory):&lt;br&gt;   &nbsp;protocol&nbsp;=&nbsp;MyHttp&lt;br&gt;&lt;br&gt;proxy &nbsp;=&nbsp;Proxy(OF_XMLRPC_URL)&lt;br&gt;reactor.listenTCP(SERVICE_PORT,&nbsp;MyHttpFactory())&lt;br&gt;<br>
reactor.run()&lt;br&gt;&lt;br&gt;But&nbsp;in&nbsp;this&nbsp;case&nbsp;an&nbsp;error&nbsp;occur&lt;br&gt;&lt;br&gt;error&nbsp;[Failure&nbsp;instance:&nbsp;Traceback:&nbsp;&amp;lt;class&nbsp;&amp;#39;xmlrpclib.Fault&amp;#39;&amp;gt;:&nbsp;&amp;lt;Fault&nbsp;-32602:&nbsp;&amp;#39;s&lt;br&gt;erver&nbsp;error.&nbsp;invalid&nbsp;method&nbsp;parameters&amp;#39;&amp;gt;&lt;br&gt;C:\python27\lib\site-packages\twisted\internet\posixbase.py:263:_disconnectSelec&lt;br&gt;<br>
table&lt;br&gt;C:\python27\lib\site-packages\twisted\internet\tcp.py:433:connectionLost&lt;br&gt;C:\python27\lib\site-packages\twisted\internet\tcp.py:277:connectionLost&lt;br&gt;C:\python27\lib\site-packages\twisted\web\xmlrpc.py:373:connectionLost&lt;br&gt;<br>
---&nbsp;&amp;lt;exception&nbsp;caught&nbsp;here&amp;gt;&nbsp;---&lt;br&gt;C:\python27\lib\site-packages\twisted\web\xmlrpc.py:444:parseResponse&lt;br&gt;C:\python27\lib\xmlrpclib.py:1137:loads&lt;br&gt;C:\python27\lib\xmlrpclib.py:793:close&lt;br&gt;]&lt;br&gt;&lt;br&gt;I&nbsp;try&nbsp;to&nbsp;declare&nbsp;the&nbsp;Proxy&lt;/span&gt;&lt;/span&gt;&lt;span&nbsp;id=&quot;result_box&quot;&nbsp;class=&quot;&quot;&nbsp;lang=&quot;en&quot;&gt;&lt;span&nbsp;class=&quot;hps&quot;&gt;(OF_XMLRPC_URL)&nbsp;differently,&nbsp;without&nbsp;success&lt;br&gt;<br>
&lt;br&gt;Where&nbsp;is&nbsp;my&nbsp;mistake&nbsp;....&lt;br&gt;Thanks&lt;br&gt;Bingo&lt;br&gt;&lt;/span&gt;&lt;/span&gt;<br>

</tt>
