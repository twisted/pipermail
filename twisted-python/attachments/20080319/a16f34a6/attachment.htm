<tt>
On&nbsp;Tue,&nbsp;Mar&nbsp;18,&nbsp;2008&nbsp;at&nbsp;9:16&nbsp;PM,&nbsp;Itamar&nbsp;Shtull-Trauring&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:itamar@itamarst.org&quot;&gt;itamar@itamarst.org&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;<br>
On&nbsp;Tue,&nbsp;2008-03-18&nbsp;at&nbsp;20:04&nbsp;+0800,&nbsp;Brian&nbsp;Baquiran&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&nbsp;Could&nbsp;the&nbsp;part&nbsp;of&nbsp;pyactivemq&nbsp;(or&nbsp;ActiveMQ-CPP)&nbsp;that&nbsp;handles&nbsp;asynchronous&lt;br&gt;<br>
&amp;gt;&nbsp;consumption&nbsp;of&nbsp;messages&nbsp;be&nbsp;interfering&nbsp;somehow&nbsp;with&nbsp;Twisted&amp;#39;s&nbsp;event&nbsp;loop&lt;br&gt;<br>
&amp;gt;&nbsp;and&nbsp;causing&nbsp;this&nbsp;problem?&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Quite&nbsp;possibly;&nbsp;if&nbsp;the&nbsp;API&nbsp;you&amp;#39;re&nbsp;calling&nbsp;is&nbsp;blocking&nbsp;then&nbsp;Twisted&amp;#39;s&lt;br&gt;<br>
event&nbsp;loop&nbsp;won&amp;#39;t&nbsp;be&nbsp;able&nbsp;to&nbsp;run.&nbsp;If&nbsp;that&nbsp;is&nbsp;the&nbsp;case,&nbsp;either&nbsp;figure&nbsp;out&lt;br&gt;<br>
if&nbsp;you&nbsp;can&nbsp;integrate&nbsp;the&nbsp;library&nbsp;with&nbsp;Twisted&amp;#39;s&nbsp;event&nbsp;loop,&nbsp;or&nbsp;use&lt;br&gt;<br>
twisted.internet.threads.deferToThread&nbsp;or&nbsp;something&nbsp;similar&nbsp;to&nbsp;call&nbsp;the&lt;br&gt;<br>
blocking&nbsp;API.&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;The&nbsp;API&nbsp;does&nbsp;not&nbsp;block&nbsp;when&nbsp;using&nbsp;an&nbsp;async&nbsp;message&nbsp;listener&nbsp;as&nbsp;I&amp;#39;m&nbsp;doing.&nbsp;Here&amp;#39;s&nbsp;some&nbsp;example&nbsp;pyactivemq&nbsp;code&nbsp;that&nbsp;shows&nbsp;how&nbsp;an&nbsp;asynchronous&nbsp;message&nbsp;listener&nbsp;is&nbsp;registered:&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://pyactivemq.googlecode.com/svn/trunk/src/examples/asynclistener.py&quot;&gt;http://pyactivemq.googlecode.com/svn/trunk/src/examples/asynclistener.py&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
In&nbsp;my&nbsp;code,&nbsp;I&amp;#39;m&nbsp;calling&nbsp;the&nbsp;protocol&amp;#39;s&nbsp;transport.write(data)&nbsp;from&nbsp;within&nbsp;the&nbsp;onMessage()&nbsp;callback.&lt;br&gt;<br>
&lt;br&gt;<br>
In&nbsp;my&nbsp;testing,&nbsp;I&amp;#39;ve&nbsp;also&nbsp;seen&nbsp;cases&nbsp;wherein&nbsp;I&nbsp;consume&nbsp;a&nbsp;whole&nbsp;lot&nbsp;of<br>
messages&nbsp;from&nbsp;ActiveMQ&nbsp;and&nbsp;call&nbsp;transport.write()&nbsp;for&nbsp;each&nbsp;of&nbsp;them&nbsp;but<br>
nothing&nbsp;appears&nbsp;on&nbsp;the&nbsp;server&nbsp;(both&nbsp;client&nbsp;and&nbsp;server&nbsp;twisted&nbsp;apps&nbsp;are<br>
on&nbsp;the&nbsp;same&nbsp;machine)&nbsp;I&nbsp;wait&nbsp;a&nbsp;while&nbsp;--&nbsp;couple&nbsp;of&nbsp;seconds&nbsp;to&nbsp;a&nbsp;minute&nbsp;--<br>
then&nbsp;suddenly&nbsp;the&nbsp;data&nbsp;arrives&nbsp;on&nbsp;the&nbsp;server&nbsp;in&nbsp;a&nbsp;single&nbsp;dataReceived().&lt;br&gt;<br>
&lt;br&gt;<br>
Would&nbsp;it&nbsp;work&nbsp;if&nbsp;I&nbsp;didn&amp;#39;t&nbsp;call&nbsp;transport.write()&nbsp;from&nbsp;within&nbsp;the<br>
onMessage()&nbsp;callback?&nbsp;Perhaps&nbsp;having&nbsp;some&nbsp;intermediate&nbsp;buffer&nbsp;to&nbsp;avoid<br>
having&nbsp;twisted&nbsp;methods&nbsp;called&nbsp;from&nbsp;inside&nbsp;the&nbsp;message&nbsp;listener?&lt;br&gt;&lt;br&gt;Thanks,&lt;br&gt;Brian&lt;br&gt;<br>

</tt>
