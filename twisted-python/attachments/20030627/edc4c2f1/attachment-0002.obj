from twisted.web import server, resource, static, server, script
from twisted.web.woven import page

class MyPage(page.Page):

    template = """<html>
    <body>
       Some stuff goes here-
       <div view="header" />
       Some more stuff goes here.
       <div view="body" />
    </body>
    </html>"""

    def __init__(self):
        page.Page.__init__(self)
        self.action = "keine"

    def wvfactory_header(self, request, node, model):
        headerTemplate = "<div>this is the %s</div>" % (self.action)
        return page.Page(template=headerTemplate)
                         
    def wvfactory_body(self, request, node, model):
        bodyTemplate = "<div>this is the %s</div>" % (request.args.get('submit'))
        return page.Page(template=bodyTemplate)

#    def render(self, request):
#        return "<html>%s</html>" % (self.action)

class Simple(resource.Resource):
    isLeaf = True

    def __init__(self):
        resource.Resource.__init__(self)
        self.myPage = MyPage()
        
    def render(self, request):
        if request.args.has_key('submit'):
            self.myPage.action = request.args.get('submit')[0]
        else:
            self.myPage.action = '\'submit not in <b>request.args</b>\''
        return self.myPage.render(request)

resource = Simple()
