<tt>
&lt;div&gt;Hi&nbsp;Terry,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;This&nbsp;is&nbsp;a&nbsp;really&nbsp;nice&nbsp;approach.&nbsp;Thanks&nbsp;for&nbsp;sharing!&nbsp;Are&nbsp;there&nbsp;any&nbsp;downsides&nbsp;or&nbsp;functionality&nbsp;that&nbsp;can&amp;#39;t&nbsp;be&nbsp;accomplished&nbsp;using&nbsp;this&nbsp;approach?&nbsp;This&nbsp;combined&nbsp;with&nbsp;the&nbsp;generator&nbsp;approach&nbsp;to&nbsp;deferreds&nbsp;will&nbsp;make&nbsp;it&nbsp;easier&nbsp;to&nbsp;reason&nbsp;about&nbsp;the&nbsp;code&nbsp;flow.&lt;div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Naveen&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Sun,&nbsp;Oct&nbsp;14,&nbsp;2012&nbsp;at&nbsp;4:40&nbsp;PM,&nbsp;Terry&nbsp;Jones&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:terry@jon.es&quot;&nbsp;target=&quot;_blank&quot;&gt;terry@jon.es&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
<br>
This&nbsp;morning&nbsp;I&nbsp;was&nbsp;thinking&nbsp;about&nbsp;deferreds&nbsp;and&nbsp;how&nbsp;people&nbsp;find&nbsp;them&lt;br&gt;<br>
difficult&nbsp;to&nbsp;grasp,&nbsp;but&nbsp;how&nbsp;they&amp;#39;re&nbsp;conceptually&nbsp;simple&nbsp;once&nbsp;you&nbsp;get&nbsp;it.&nbsp; I&lt;br&gt;<br>
guess&nbsp;most&nbsp;of&nbsp;us&nbsp;tell&nbsp;people&nbsp;a&nbsp;deferred&nbsp;is&nbsp;something&nbsp;to&nbsp;hold&nbsp;a&nbsp;result&nbsp;that&lt;br&gt;<br>
hasn&amp;#39;t&nbsp;arrived&nbsp;yet.&nbsp;Sometimes,&nbsp;though,&nbsp;deferreds&nbsp;do&nbsp;have&nbsp;a&nbsp;result&nbsp;in&nbsp;them&lt;br&gt;<br>
immediately&nbsp;(e.g.,&nbsp;using&nbsp;succeed&nbsp;or&nbsp;fail&nbsp;to&nbsp;get&nbsp;an&nbsp;already-fired&nbsp;deferred).&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;wondered&nbsp;if&nbsp;it&nbsp;might&nbsp;work&nbsp;to&nbsp;tell&nbsp;people&nbsp;to&nbsp;think&nbsp;of&nbsp;a&nbsp;deferred&nbsp;as&nbsp;really&lt;br&gt;<br>
being&nbsp;the&nbsp;result.&nbsp;If&nbsp;that&nbsp;were&nbsp;literally&nbsp;true,&nbsp;instead&nbsp;of&nbsp;writing:&lt;br&gt;<br>
&lt;br&gt;<br>
 &nbsp; &nbsp;d&nbsp;=&nbsp;getPage(...)&lt;br&gt;<br>
 &nbsp; &nbsp;d.addErrback(errcheck,&nbsp;args)&lt;br&gt;<br>
 &nbsp; &nbsp;d.addCallback(cleanup,&nbsp;args)&lt;br&gt;<br>
 &nbsp; &nbsp;d.addCallback(reformat,&nbsp;args)&lt;br&gt;<br>
 &nbsp; &nbsp;return&nbsp;d&lt;br&gt;<br>
&lt;br&gt;<br>
We&nbsp;might&nbsp;write&nbsp;something&nbsp;like:&lt;br&gt;<br>
&lt;br&gt;<br>
 &nbsp; &nbsp;result1&nbsp;=&nbsp;getPage(...)&lt;br&gt;<br>
 &nbsp; &nbsp;result2&nbsp;=&nbsp;errcheck(result1,&nbsp;args)&lt;br&gt;<br>
 &nbsp; &nbsp;result3&nbsp;=&nbsp;cleanup(result2,&nbsp;args)&lt;br&gt;<br>
 &nbsp; &nbsp;return&nbsp;reformat(result3,&nbsp;args)&lt;br&gt;<br>
&lt;br&gt;<br>
And&nbsp;if&nbsp;you&nbsp;could&nbsp;write&nbsp;that,&nbsp;you&nbsp;could&nbsp;obviously&nbsp;instead&nbsp;write:&lt;br&gt;<br>
&lt;br&gt;<br>
 &nbsp; &nbsp;return&nbsp;reformat(cleanup(errcheck(getPage(...),&nbsp;args),&nbsp;args),&nbsp;args)&lt;br&gt;<br>
&lt;br&gt;<br>
If&nbsp;we&nbsp;could&nbsp;write&nbsp;Twisted&nbsp;code&nbsp;that&nbsp;way,&nbsp;I&nbsp;think&nbsp;using&nbsp;deferreds&nbsp;would&nbsp;be&lt;br&gt;<br>
simpler&nbsp;for&nbsp;people&nbsp;unfamiliar&nbsp;with&nbsp;them.&lt;br&gt;<br>
&lt;br&gt;<br>
In&nbsp;the&nbsp;style&nbsp;we&amp;#39;re&nbsp;all&nbsp;used&nbsp;to,&nbsp;the&nbsp;programmer&nbsp;manually&nbsp;adds&nbsp;callbacks&nbsp;and&lt;br&gt;<br>
errbacks.&nbsp; That&amp;#39;s&nbsp;basically&nbsp;boilerplate.&nbsp;It&nbsp;gets&nbsp;worse&nbsp;when&nbsp;you&nbsp;then&nbsp;need&lt;br&gt;<br>
to&nbsp;also&nbsp;use&nbsp;DeferredList,&nbsp;etc.&nbsp;It&amp;#39;s&nbsp;a&nbsp;little&nbsp;confusing&nbsp;to&nbsp;read&nbsp;deferred&lt;br&gt;<br>
code&nbsp;at&nbsp;first,&nbsp;because&nbsp;you&nbsp;need&nbsp;to&nbsp;know&nbsp;that&nbsp;the&nbsp;deferred&nbsp;result/failure&nbsp;is&lt;br&gt;<br>
automatically&nbsp;passed&nbsp;as&nbsp;the&nbsp;first&nbsp;arg&nbsp;to&nbsp;callbacks/errbacks.&nbsp; It&nbsp;seems&nbsp;to&lt;br&gt;<br>
take&nbsp;a&nbsp;year&nbsp;or&nbsp;more&nbsp;for&nbsp;people&nbsp;to&nbsp;finally&nbsp;realize&nbsp;how&nbsp;the&nbsp;callback&nbsp;&amp;amp;&lt;br&gt;<br>
errback&nbsp;chains&nbsp;actually&nbsp;interact&nbsp;:-)&nbsp;Also,&nbsp;I&nbsp;wonder&nbsp;how&nbsp;comfortable&lt;br&gt;<br>
programmers&nbsp;are&nbsp;with&nbsp;code&nbsp;ordered&nbsp;innermost&nbsp;function&nbsp;first,&nbsp;as&nbsp;in&nbsp;the&lt;br&gt;<br>
normal&nbsp;d.addCallback(inner).addCallback(outer)&nbsp;Twisted&nbsp;style,&nbsp;versus&lt;br&gt;<br>
outer(inner()),&nbsp;as&nbsp;in&nbsp;the&nbsp;line&nbsp;above.&lt;br&gt;<br>
&lt;br&gt;<br>
Anyway...&nbsp;I&nbsp;realized&nbsp;we&nbsp;CAN&nbsp;let&nbsp;people&nbsp;use&nbsp;the&nbsp;succinct&nbsp;style&nbsp;above,&nbsp;by&lt;br&gt;<br>
putting&nbsp;boilerplate&nbsp;into&nbsp;decorators.&nbsp; I&nbsp;wrote&nbsp;two&nbsp;decorators,&nbsp;called&lt;br&gt;<br>
(surprise!)&nbsp;callback&nbsp;and&nbsp;errback.&nbsp; You&nbsp;can&nbsp;do&nbsp;this:&lt;br&gt;<br>
&lt;br&gt;<br>
 &nbsp; &nbsp;@errback&lt;br&gt;<br>
 &nbsp; &nbsp;def&nbsp;errcheck(failure,&nbsp;arg):&lt;br&gt;<br>
 &nbsp; &nbsp; &nbsp; &nbsp;...&lt;br&gt;<br>
&lt;br&gt;<br>
 &nbsp; &nbsp;@callback&lt;br&gt;<br>
 &nbsp; &nbsp;def&nbsp;cleanup(page,&nbsp;arg):&lt;br&gt;<br>
 &nbsp; &nbsp; &nbsp; &nbsp;...&lt;br&gt;<br>
&lt;br&gt;<br>
 &nbsp; &nbsp;@callback&lt;br&gt;<br>
 &nbsp; &nbsp;def&nbsp;reformat(page,&nbsp;arg):&lt;br&gt;<br>
 &nbsp; &nbsp; &nbsp; &nbsp;...&lt;br&gt;<br>
&lt;br&gt;<br>
 &nbsp; &nbsp;reformat(cleanup(errcheck(getPage(...),&nbsp;arg1),&nbsp;arg2),&nbsp;arg3)&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;deferred&nbsp;callback&nbsp;and&nbsp;errback&nbsp;chains&nbsp;are&nbsp;hooked&nbsp;up&nbsp;automatically.&nbsp;You&lt;br&gt;<br>
still&nbsp;get&nbsp;a&nbsp;regular&nbsp;deferred&nbsp;back&nbsp;as&nbsp;the&nbsp;return&nbsp;value.&lt;br&gt;<br>
&lt;br&gt;<br>
And...&nbsp;the&nbsp;&amp;quot;deferred&amp;quot;&nbsp;aspect&nbsp;of&nbsp;the&nbsp;code&nbsp;(or&nbsp;at&nbsp;least&nbsp;the&nbsp;need&nbsp;to&nbsp;talk&lt;br&gt;<br>
about&nbsp;or&nbsp;explain&nbsp;it)&nbsp;has&nbsp;conveniently&nbsp;vanished.&lt;br&gt;<br>
&lt;br&gt;<br>
You&nbsp;can&nbsp;also&nbsp;do&nbsp;things&nbsp;like&lt;br&gt;<br>
&lt;br&gt;<br>
 &nbsp; &nbsp;func1(getDeferred1(),&nbsp;errcheck(func2(getDeferred2(),&nbsp;getDeferred3())))&lt;br&gt;<br>
&lt;br&gt;<br>
This&nbsp;gets&nbsp;the&nbsp;result&nbsp;of&nbsp;deferreds&nbsp;2&nbsp;&amp;amp;&nbsp;3&nbsp;and&nbsp;(if&nbsp;neither&nbsp;fails)&nbsp;passes&nbsp;the&lt;br&gt;<br>
result&nbsp;of&nbsp;calling&nbsp;func2&nbsp;on&nbsp;both&nbsp;results&nbsp;through&nbsp;to&nbsp;func1,&nbsp;which&nbsp;is&nbsp;also&lt;br&gt;<br>
called&nbsp;with&nbsp;the&nbsp;result&nbsp;of&nbsp;deferred&nbsp;1.&nbsp;You&nbsp;don&amp;#39;t&nbsp;need&nbsp;to&nbsp;use&nbsp;DeferredLists,&lt;br&gt;<br>
as&nbsp;the&nbsp;decorator&nbsp;makes&nbsp;them&nbsp;for&nbsp;you.&nbsp;The&nbsp;errcheck&nbsp;function&nbsp;wont&nbsp;be&nbsp;called&lt;br&gt;<br>
at&nbsp;all&nbsp;unless&nbsp;there&amp;#39;s&nbsp;an&nbsp;error.&lt;br&gt;<br>
&lt;br&gt;<br>
That&amp;#39;s&nbsp;nice&nbsp;compared&nbsp;to&nbsp;the&nbsp;verbose&nbsp;equivalent:&lt;br&gt;<br>
&lt;br&gt;<br>
 &nbsp; &nbsp;d1&nbsp;=&nbsp;DeferredList([getDeferred2(),&nbsp;getDeferred3()])&lt;br&gt;<br>
 &nbsp; &nbsp;d1.addCallback(func2)&lt;br&gt;<br>
 &nbsp; &nbsp;d1.addErrback(errcheck)&lt;br&gt;<br>
 &nbsp; &nbsp;d2&nbsp;=&nbsp;DeferredList([getDeferred1(),&nbsp;d1])&lt;br&gt;<br>
 &nbsp; &nbsp;d2.addCallback(func1)&lt;br&gt;<br>
&lt;br&gt;<br>
Or&nbsp;the&nbsp;more&nbsp;compact&nbsp;but&nbsp;awkward:&lt;br&gt;<br>
&lt;br&gt;<br>
 &nbsp; &nbsp;DeferredList([getDeferred(),&nbsp;DeferredList([getDeferred(),&nbsp;getDeferred()]).addCallback(func2).addErrback(errcheck)]).addCallback(func1)&lt;br&gt;<br>
&lt;br&gt;<br>
There&amp;#39;s&nbsp;lots&nbsp;more&nbsp;that&nbsp;could&nbsp;be&nbsp;said&nbsp;about&nbsp;this,&nbsp;but&nbsp;that&amp;#39;s&nbsp;enough&nbsp;for&nbsp;now.&lt;br&gt;<br>
The&nbsp;code&nbsp;(surely&nbsp;not&nbsp;bulletproof)&nbsp;and&nbsp;some&nbsp;tests&nbsp;are&nbsp;at&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;https://github.com/terrycojones/twisted-callback-decorators&quot;&nbsp;target=&quot;_blank&quot;&gt;https://github.com/terrycojones/twisted-callback-decorators&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
I&amp;#39;ll&nbsp;add&nbsp;a&nbsp;README&nbsp;sometime&nbsp;soon.&nbsp; This&nbsp;is&nbsp;still&nbsp;pretty&nbsp;much&nbsp;proof&nbsp;of&lt;br&gt;<br>
concept,&nbsp;and&nbsp;some&nbsp;it&nbsp;could&nbsp;be&nbsp;done&nbsp;slightly&nbsp;differently.&nbsp;I&amp;#39;m&nbsp;happy&nbsp;to&lt;br&gt;<br>
discuss&nbsp;in&nbsp;more&nbsp;detail&nbsp;if&nbsp;people&nbsp;are&nbsp;interested.&lt;br&gt;<br>
&lt;br&gt;<br>
Terry&lt;br&gt;<br>
&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
Twisted-Python&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:Twisted-Python@twistedmatrix.com&quot;&gt;Twisted-Python@twistedmatrix.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&quot;&nbsp;target=&quot;_blank&quot;&gt;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&lt;/a&gt;&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
