Index: failure.py
===================================================================
RCS file: /cvs/Twisted/twisted/python/failure.py,v
retrieving revision 1.3
diff -u -u -r1.3 failure.py
--- failure.py	13 Mar 2002 22:38:09 -0000	1.3
+++ failure.py	4 May 2002 07:13:33 -0000
@@ -21,6 +21,10 @@
 import linecache
 import string
 from cStringIO import StringIO
+import types
+
+#sibling imports
+import reflect
 
 count = 0
 
@@ -68,6 +72,14 @@
                 globalz.items(),
                 ])
             tb = tb.tb_next
+        if isinstance(self.type, types.ClassType):
+            parentCs = reflect.allYourBase(self.type)
+            self.parents = map(reflect.qual, parentCs)
+            self.parents.append(reflect.qual(self.type))
+        else:
+            self.parents = [self.type]
+
+        
 
     def getErrorMessage(self):
         if isinstance(self.value, Failure):
@@ -80,12 +92,12 @@
         This allows you to trap a Failure in an error callback.  It will be
         automatically re-raised if it is not a type that you expect.
         """
-        for errorType in errorTypes:
-            if (self.type == errorType or
-                issubclass(self.type, errorType)):
-                break
-        else:
-            raise self
+        for error in errorTypes:
+            if not isinstance(error, types.StringType) and issubclass(error, Exception):
+                error = reflect.qual(error)
+            if error in self.parents:
+                return self
+            
 
     def getBriefTraceback(self):
         io = StringIO()
