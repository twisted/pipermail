<tt>
Thanks&nbsp;everyone&nbsp;for&nbsp;your&nbsp;comments,&nbsp;you&nbsp;were&nbsp;all&nbsp;a&nbsp;lot&nbsp;of&nbsp;help.&lt;br&gt;&lt;br&gt;Andrew,&nbsp;I&nbsp;was&nbsp;aware&nbsp;that&nbsp;the&nbsp;deferred&nbsp;didn&amp;#39;t&nbsp;go&nbsp;anywhere,&nbsp;I&nbsp;oversimplified&nbsp;things&nbsp;in&nbsp;the&nbsp;example,&nbsp;in&nbsp;the&nbsp;original&nbsp;design&nbsp;in&nbsp;my&nbsp;head,&nbsp;the&nbsp;code&nbsp;that&nbsp;actually&nbsp;does&nbsp;the&nbsp;db&nbsp;calls&nbsp;was&nbsp;waiting&nbsp;on&nbsp;the&nbsp;deferred.&nbsp;Actually,&nbsp;the&nbsp;way&nbsp;it&amp;#39;s&nbsp;written,&nbsp;it&nbsp;never&nbsp;even&nbsp;runs,&nbsp;I&nbsp;left&nbsp;out&nbsp;the&nbsp;first&nbsp;call&nbsp;to&nbsp;processChunk()&nbsp;necessary&nbsp;to&nbsp;start&nbsp;the&nbsp;iteration.&nbsp;But&nbsp;your&nbsp;comments&nbsp;helped&nbsp;a&nbsp;lot.<br>
&lt;br&gt;&lt;br&gt;My&nbsp;concern&nbsp;wasn&amp;#39;t&nbsp;ElementTrees&nbsp;built&nbsp;in&nbsp;stuff,&nbsp;but&nbsp;300+&nbsp;line&nbsp;spaghetti&nbsp;procedure&nbsp;that&nbsp;massages&nbsp;the&nbsp;element&nbsp;tree&nbsp;data&nbsp;into&nbsp;a&nbsp;dictionary.&nbsp;That&nbsp;needs&nbsp;to&nbsp;be&nbsp;rewritten&nbsp;anyway.&lt;br&gt;&lt;br&gt;I&nbsp;messed&nbsp;around&nbsp;this&nbsp;morning,&nbsp;and&nbsp;here&amp;#39;s&nbsp;what&nbsp;I&nbsp;have&nbsp;done.&nbsp;I&nbsp;compiled&nbsp;cElementTree&nbsp;onto&nbsp;the&nbsp;test&nbsp;box.&nbsp;The&nbsp;LineReceiver&nbsp;uses&nbsp;<br>
cElementTree.XMLTreeBuilder.feed()&nbsp;and&nbsp;builds&nbsp;the&nbsp;tree&nbsp;on&nbsp;the&nbsp;fly.&lt;br&gt;&lt;br&gt;At&nbsp;connectionClose&nbsp;it&nbsp;calls&nbsp;a&nbsp;method&nbsp;that&nbsp;runs&nbsp;the&nbsp;business&nbsp;logic&nbsp;routine&nbsp;in&nbsp;a&nbsp;thread,&nbsp;using&nbsp;&lt;span&nbsp;class=&quot;py-src-variable&quot;&gt;threads&lt;/span&gt;.&lt;span&nbsp;class=&quot;py-src-variable&quot;&gt;<br>
deferToThread,&nbsp;and&nbsp;adding&nbsp;a&nbsp;callback;&nbsp;said&nbsp;callback&nbsp;executes&nbsp;the&nbsp;db&nbsp;code.&nbsp;That&nbsp;still&nbsp;blocks&nbsp;for&nbsp;now.&lt;br&gt;&lt;br&gt;So,&nbsp;my&nbsp;current&nbsp;plan&nbsp;is&nbsp;to&nbsp;refactor&nbsp;the&nbsp;tree--&amp;gt;dict&nbsp;code,&nbsp;but&nbsp;call&nbsp;that&nbsp;in&nbsp;a&nbsp;separate&nbsp;thread.&nbsp;Rewite&nbsp;the&nbsp;dict&nbsp;--&amp;gt;&nbsp;db&nbsp;layer.&nbsp;The&nbsp;only&nbsp;question&nbsp;I&nbsp;have,&nbsp;is&nbsp;since&nbsp;it&amp;#39;s&nbsp;a&nbsp;long&nbsp;series&nbsp;of&nbsp;insert/update&nbsp;calls&nbsp;in&nbsp;which&nbsp;I&nbsp;don&amp;#39;t&nbsp;need&nbsp;results&nbsp;other&nbsp;than,&nbsp;&amp;#39;it&nbsp;worked&amp;#39;&nbsp;,&nbsp;is,&nbsp;after&nbsp;reading&nbsp;the&nbsp;comments,&nbsp;it&nbsp;seems&nbsp;like&nbsp;I&nbsp;might&nbsp;just&nbsp;best&nbsp;be&nbsp;served&nbsp;by&nbsp;writing&nbsp;a&nbsp;series&nbsp;of&nbsp;straight&nbsp;dbi&nbsp;calls;&nbsp;and&nbsp;wrapping&nbsp;that&nbsp;all&nbsp;in&nbsp;one&nbsp;call&nbsp;to&nbsp;<br>
thread.callInThread.&nbsp;&lt;br&gt;&lt;br&gt;The&nbsp;db&nbsp;is&nbsp;MySQL,&nbsp;and&nbsp;feeds&nbsp;a&nbsp;PHP-based&nbsp;reporting&nbsp;app,&nbsp;so&nbsp;I&nbsp;can&amp;#39;t&nbsp;use&nbsp;pgasync.&nbsp;&lt;br&gt;&lt;br&gt;Thanks&nbsp;again&nbsp;all.&lt;br&gt;&lt;/span&gt;<br>

</tt>
